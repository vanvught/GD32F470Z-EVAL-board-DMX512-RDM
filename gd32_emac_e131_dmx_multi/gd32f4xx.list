
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10008000 	andne	r8, r0, r0
 8008004:	08009015 	stmdaeq	r0, {r0, r2, r4, ip, pc}
 8008008:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800800c:	0800906b 	stmdaeq	r0, {r0, r1, r3, r5, r6, ip, pc}
 8008010:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008014:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008018:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
	...
 800802c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008030:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800803c:	08015a01 	stmdaeq	r1, {r0, r9, fp, ip, lr}
 8008040:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008044:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008048:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800804c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008050:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008054:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008058:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800805c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008060:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008064:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008068:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800806c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008070:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008074:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008078:	0800ebf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 800807c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008080:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008084:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008088:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800808c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008090:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008094:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008098:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800809c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ac:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b0:	0800e979 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, fp, sp, lr, pc}
 80080b4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080bc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080cc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080dc:	0800e679 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, sp, lr, pc}
 80080e0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ec:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080fc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008100:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008104:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008108:	0800ea7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp, sp, lr, pc}
 800810c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008110:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008114:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008118:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800811c:	0800eba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, sp, lr, pc}
 8008120:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008124:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008128:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800812c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008130:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008134:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008138:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800813c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008140:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008144:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008148:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800814c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008150:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008154:	0800ec65 	stmdaeq	r0, {r0, r2, r5, r6, sl, fp, sp, lr, pc}
 8008158:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800815c:	0800e7f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8008160:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008164:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008168:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800816c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008170:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008174:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008178:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008184:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008188:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800818c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008190:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008194:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008198:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}

Disassembly of section .text:

080081ac <net::igmp_init()>:
 80081ac:	b538      	push	{r3, r4, r5, lr}
 80081ae:	f008 fee5 	bl	8010f7c <net::igmp_set_ip()>
 80081b2:	492c      	ldr	r1, [pc, #176]	@ (8008264 <net::igmp_init()+0xb8>)
 80081b4:	4b2c      	ldr	r3, [pc, #176]	@ (8008268 <net::igmp_init()+0xbc>)
 80081b6:	4a2d      	ldr	r2, [pc, #180]	@ (800826c <net::igmp_init()+0xc0>)
 80081b8:	2401      	movs	r4, #1
 80081ba:	205e      	movs	r0, #94	@ 0x5e
 80081bc:	800c      	strh	r4, [r1, #0]
 80081be:	7088      	strb	r0, [r1, #2]
 80081c0:	2106      	movs	r1, #6
 80081c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80081c6:	f803 0b01 	strb.w	r0, [r3], #1
 80081ca:	3901      	subs	r1, #1
 80081cc:	d1f9      	bne.n	80081c2 <net::igmp_init()+0x16>
 80081ce:	4a28      	ldr	r2, [pc, #160]	@ (8008270 <net::igmp_init()+0xc4>)
 80081d0:	4828      	ldr	r0, [pc, #160]	@ (8008274 <net::igmp_init()+0xc8>)
 80081d2:	60d0      	str	r0, [r2, #12]
 80081d4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80081d8:	4b27      	ldr	r3, [pc, #156]	@ (8008278 <net::igmp_init()+0xcc>)
 80081da:	8210      	strh	r0, [r2, #16]
 80081dc:	f240 4094 	movw	r0, #1172	@ 0x494
 80081e0:	8450      	strh	r0, [r2, #34]	@ 0x22
 80081e2:	4c26      	ldr	r4, [pc, #152]	@ (800827c <net::igmp_init()+0xd0>)
 80081e4:	4826      	ldr	r0, [pc, #152]	@ (8008280 <net::igmp_init()+0xd4>)
 80081e6:	8491      	strh	r1, [r2, #36]	@ 0x24
 80081e8:	2516      	movs	r5, #22
 80081ea:	6154      	str	r4, [r2, #20]
 80081ec:	84d5      	strh	r5, [r2, #38]	@ 0x26
 80081ee:	6018      	str	r0, [r3, #0]
 80081f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80081f4:	2006      	movs	r0, #6
 80081f6:	491d      	ldr	r1, [pc, #116]	@ (800826c <net::igmp_init()+0xc0>)
 80081f8:	809a      	strh	r2, [r3, #4]
 80081fa:	181a      	adds	r2, r3, r0
 80081fc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008200:	f802 5b01 	strb.w	r5, [r2], #1
 8008204:	3801      	subs	r0, #1
 8008206:	d1f9      	bne.n	80081fc <net::igmp_init()+0x50>
 8008208:	4a1e      	ldr	r2, [pc, #120]	@ (8008284 <net::igmp_init()+0xd8>)
 800820a:	615c      	str	r4, [r3, #20]
 800820c:	6811      	ldr	r1, [r2, #0]
 800820e:	4c1e      	ldr	r4, [pc, #120]	@ (8008288 <net::igmp_init()+0xdc>)
 8008210:	f8d1 20a0 	ldr.w	r2, [r1, #160]	@ 0xa0
 8008214:	8498      	strh	r0, [r3, #36]	@ 0x24
 8008216:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800821a:	4d16      	ldr	r5, [pc, #88]	@ (8008274 <net::igmp_init()+0xc8>)
 800821c:	f8c3 401e 	str.w	r4, [r3, #30]
 8008220:	8218      	strh	r0, [r3, #16]
 8008222:	2417      	movs	r4, #23
 8008224:	f240 4094 	movw	r0, #1172	@ 0x494
 8008228:	2a07      	cmp	r2, #7
 800822a:	84dc      	strh	r4, [r3, #38]	@ 0x26
 800822c:	60dd      	str	r5, [r3, #12]
 800822e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8008230:	d904      	bls.n	800823c <net::igmp_init()+0x90>
 8008232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008236:	4815      	ldr	r0, [pc, #84]	@ (800828c <net::igmp_init()+0xe0>)
 8008238:	f00c b984 	b.w	8014544 <console_error>
 800823c:	4b14      	ldr	r3, [pc, #80]	@ (8008290 <net::igmp_init()+0xe4>)
 800823e:	f8d1 40a4 	ldr.w	r4, [r1, #164]	@ 0xa4
 8008242:	6818      	ldr	r0, [r3, #0]
 8008244:	1c55      	adds	r5, r2, #1
 8008246:	1c63      	adds	r3, r4, #1
 8008248:	f8c1 30a4 	str.w	r3, [r1, #164]	@ 0xa4
 800824c:	f8c1 50a0 	str.w	r5, [r1, #160]	@ 0xa0
 8008250:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8008254:	3064      	adds	r0, #100	@ 0x64
 8008256:	2164      	movs	r1, #100	@ 0x64
 8008258:	e9c3 0108 	strd	r0, r1, [r3, #32]
 800825c:	4a0d      	ldr	r2, [pc, #52]	@ (8008294 <net::igmp_init()+0xe8>)
 800825e:	e9c3 420a 	strd	r4, r2, [r3, #40]	@ 0x28
 8008262:	bd38      	pop	{r3, r4, r5, pc}
 8008264:	10008348 	andne	r8, r0, r8, asr #6
 8008268:	10008386 	andne	r8, r0, r6, lsl #7
 800826c:	2000209c 	mulcs	r0, ip, r0
 8008270:	10008380 	andne	r8, r0, r0, lsl #7
 8008274:	00460008 	subeq	r0, r6, r8
 8008278:	10008350 	andne	r8, r0, r0, asr r3
 800827c:	02010040 	andeq	r0, r1, #64	@ 0x40
 8008280:	005e0001 	subseq	r0, lr, r1
 8008284:	20002238 	andcs	r2, r0, r8, lsr r2
 8008288:	020000e0 	andeq	r0, r0, #224	@ 0xe0
 800828c:	08018344 	stmdaeq	r1, {r2, r6, r8, r9, pc}
 8008290:	20009ae8 	andcs	r9, r0, r8, ror #21
 8008294:	08010f29 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, fp}

08008298 <net::igmp_shutdown()>:
 8008298:	b538      	push	{r3, r4, r5, lr}
 800829a:	4d05      	ldr	r5, [pc, #20]	@ (80082b0 <net::igmp_shutdown()+0x18>)
 800829c:	2400      	movs	r4, #0
 800829e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 80082a2:	b108      	cbz	r0, 80082a8 <net::igmp_shutdown()+0x10>
 80082a4:	f008 fe98 	bl	8010fd8 <net::igmp_leave(unsigned long)>
 80082a8:	3401      	adds	r4, #1
 80082aa:	2c24      	cmp	r4, #36	@ 0x24
 80082ac:	d1f7      	bne.n	800829e <net::igmp_shutdown()+0x6>
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	10008228 	andne	r8, r0, r8, lsr #4

080082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
 80082b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b8:	4d19      	ldr	r5, [pc, #100]	@ (8008320 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x6c>)
 80082ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082be:	7e2c      	ldrb	r4, [r5, #24]
 80082c0:	461f      	mov	r7, r3
 80082c2:	7deb      	ldrb	r3, [r5, #23]
 80082c4:	0424      	lsls	r4, r4, #16
 80082c6:	eb04 2403 	add.w	r4, r4, r3, lsl #8
 80082ca:	7e6b      	ldrb	r3, [r5, #25]
 80082cc:	3402      	adds	r4, #2
 80082ce:	eb04 6403 	add.w	r4, r4, r3, lsl #24
 80082d2:	4682      	mov	sl, r0
 80082d4:	460e      	mov	r6, r1
 80082d6:	4690      	mov	r8, r2
 80082d8:	612c      	str	r4, [r5, #16]
 80082da:	f000 f8b5 	bl	8008448 <net::arp_init()>
 80082de:	f000 f951 	bl	8008584 <net::ip_init()>
 80082e2:	f1ba 0f01 	cmp.w	sl, #1
 80082e6:	7eab      	ldrb	r3, [r5, #26]
 80082e8:	d115      	bne.n	8008316 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x62>
 80082ea:	f043 0301 	orr.w	r3, r3, #1
 80082ee:	76ab      	strb	r3, [r5, #26]
 80082f0:	f899 3000 	ldrb.w	r3, [r9]
 80082f4:	b11b      	cbz	r3, 80082fe <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x4a>
 80082f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082fa:	f008 bc47 	b.w	8010b8c <net::dhcp_start()>
 80082fe:	b12e      	cbz	r6, 800830c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x58>
 8008300:	4640      	mov	r0, r8
 8008302:	f008 ffa3 	bl	801124c <net::netif_set_netmask(net::ip_addr)>
 8008306:	4638      	mov	r0, r7
 8008308:	f008 ffb4 	bl	8011274 <net::netif_set_gw(net::ip_addr)>
 800830c:	4630      	mov	r0, r6
 800830e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008312:	f008 bee1 	b.w	80110d8 <net::net_set_primary_ip(net::ip_addr)>
 8008316:	f023 0301 	bic.w	r3, r3, #1
 800831a:	76ab      	strb	r3, [r5, #26]
 800831c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008320:	20002088 	andcs	r2, r0, r8, lsl #1

08008324 <net::tcp_init()>:
 8008324:	4a07      	ldr	r2, [pc, #28]	@ (8008344 <net::tcp_init()+0x20>)
 8008326:	4908      	ldr	r1, [pc, #32]	@ (8008348 <net::tcp_init()+0x24>)
 8008328:	2306      	movs	r3, #6
 800832a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800832e:	f802 0b01 	strb.w	r0, [r2], #1
 8008332:	3b01      	subs	r3, #1
 8008334:	d1f9      	bne.n	800832a <net::tcp_init()+0x6>
 8008336:	4b05      	ldr	r3, [pc, #20]	@ (800834c <net::tcp_init()+0x28>)
 8008338:	4905      	ldr	r1, [pc, #20]	@ (8008350 <net::tcp_init()+0x2c>)
 800833a:	4a06      	ldr	r2, [pc, #24]	@ (8008354 <net::tcp_init()+0x30>)
 800833c:	60d9      	str	r1, [r3, #12]
 800833e:	615a      	str	r2, [r3, #20]
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	100083b6 			@ <UNDEFINED> instruction: 0x100083b6
 8008348:	2000209c 	mulcs	r0, ip, r0
 800834c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8008350:	00450008 	subeq	r0, r5, r8
 8008354:	06400040 	strbeq	r0, [r0], -r0, asr #32

08008358 <net::udp_init()>:
 8008358:	490b      	ldr	r1, [pc, #44]	@ (8008388 <net::udp_init()+0x30>)
 800835a:	4b0c      	ldr	r3, [pc, #48]	@ (800838c <net::udp_init()+0x34>)
 800835c:	4a0c      	ldr	r2, [pc, #48]	@ (8008390 <net::udp_init()+0x38>)
 800835e:	b510      	push	{r4, lr}
 8008360:	205e      	movs	r0, #94	@ 0x5e
 8008362:	2401      	movs	r4, #1
 8008364:	800c      	strh	r4, [r1, #0]
 8008366:	7088      	strb	r0, [r1, #2]
 8008368:	2106      	movs	r1, #6
 800836a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800836e:	f803 0b01 	strb.w	r0, [r3], #1
 8008372:	3901      	subs	r1, #1
 8008374:	d1f9      	bne.n	800836a <net::udp_init()+0x12>
 8008376:	4807      	ldr	r0, [pc, #28]	@ (8008394 <net::udp_init()+0x3c>)
 8008378:	4a07      	ldr	r2, [pc, #28]	@ (8008398 <net::udp_init()+0x40>)
 800837a:	4b08      	ldr	r3, [pc, #32]	@ (800839c <net::udp_init()+0x44>)
 800837c:	60c2      	str	r2, [r0, #12]
 800837e:	6143      	str	r3, [r0, #20]
 8008380:	f009 fa1a 	bl	80117b8 <net::udp_set_ip()>
 8008384:	8501      	strh	r1, [r0, #40]	@ 0x28
 8008386:	bd10      	pop	{r4, pc}
 8008388:	100096a8 	andne	r9, r0, r8, lsr #13
 800838c:	100096ba 			@ <UNDEFINED> instruction: 0x100096ba
 8008390:	2000209c 	mulcs	r0, ip, r0
 8008394:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8008398:	00450008 	subeq	r0, r5, r8
 800839c:	11400040 	cmpne	r0, r0, asr #32

080083a0 <emac_config()>:
 80083a0:	b508      	push	{r3, lr}
 80083a2:	480f      	ldr	r0, [pc, #60]	@ (80083e0 <emac_config()+0x40>)
 80083a4:	f00e fa49 	bl	801683a <puts>
 80083a8:	f009 fdca 	bl	8011f40 <enet_gpio_config()>
 80083ac:	f640 4019 	movw	r0, #3097	@ 0xc19
 80083b0:	f00c fddc 	bl	8014f6c <rcu_periph_clock_enable>
 80083b4:	f640 401a 	movw	r0, #3098	@ 0xc1a
 80083b8:	f00c fdd8 	bl	8014f6c <rcu_periph_clock_enable>
 80083bc:	f640 401b 	movw	r0, #3099	@ 0xc1b
 80083c0:	f00c fdd4 	bl	8014f6c <rcu_periph_clock_enable>
 80083c4:	f00c fd08 	bl	8014dd8 <enet_deinit>
 80083c8:	f00c faa2 	bl	8014910 <enet_software_reset>
 80083cc:	2001      	movs	r0, #1
 80083ce:	f009 fd4d 	bl	8011e6c <net::phy_config(unsigned long)>
 80083d2:	b920      	cbnz	r0, 80083de <emac_config()+0x3e>
 80083d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083d8:	4802      	ldr	r0, [pc, #8]	@ (80083e4 <emac_config()+0x44>)
 80083da:	f00c b8b3 	b.w	8014544 <console_error>
 80083de:	bd08      	pop	{r3, pc}
 80083e0:	080179eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, fp, ip, sp, lr}
 80083e4:	080179f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, fp, ip, sp, lr}

080083e8 <emac_start(unsigned char*, net::Link&)>:
 80083e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80083ea:	466c      	mov	r4, sp
 80083ec:	4605      	mov	r5, r0
 80083ee:	460e      	mov	r6, r1
 80083f0:	2001      	movs	r0, #1
 80083f2:	4621      	mov	r1, r4
 80083f4:	f00a f99a 	bl	801272c <net::phy_start(unsigned long, net::PhyStatus&)>
 80083f8:	9b00      	ldr	r3, [sp, #0]
 80083fa:	6033      	str	r3, [r6, #0]
 80083fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8008400:	f009 fce0 	bl	8011dc4 <emac_adjust_link(net::PhyStatus)>
 8008404:	4628      	mov	r0, r5
 8008406:	f00d fa65 	bl	80158d4 <mac_address_get(unsigned char*)>
 800840a:	4629      	mov	r1, r5
 800840c:	2000      	movs	r0, #0
 800840e:	f00c fae1 	bl	80149d4 <enet_mac_address_set>
 8008412:	f44f 00e0 	mov.w	r0, #7340032	@ 0x700000
 8008416:	f00c fa8f 	bl	8014938 <enet_descriptors_chain_init>
 800841a:	f44f 2060 	mov.w	r0, #917504	@ 0xe0000
 800841e:	f00c fa8b 	bl	8014938 <enet_descriptors_chain_init>
 8008422:	4d08      	ldr	r5, [pc, #32]	@ (8008444 <emac_start(unsigned char*, net::Link&)+0x5c>)
 8008424:	2400      	movs	r4, #0
 8008426:	4628      	mov	r0, r5
 8008428:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 800842c:	3401      	adds	r4, #1
 800842e:	f00c facb 	bl	80149c8 <enet_transmit_checksum_config>
 8008432:	2c04      	cmp	r4, #4
 8008434:	f105 0510 	add.w	r5, r5, #16
 8008438:	d1f5      	bne.n	8008426 <emac_start(unsigned char*, net::Link&)+0x3e>
 800843a:	f00c fc87 	bl	8014d4c <enet_enable>
 800843e:	b004      	add	sp, #16
 8008440:	bd70      	pop	{r4, r5, r6, pc}
 8008442:	bf00      	nop
 8008444:	200099a0 	andcs	r9, r0, r0, lsr #19

08008448 <net::arp_init()>:
 8008448:	b410      	push	{r4}
 800844a:	4b3e      	ldr	r3, [pc, #248]	@ (8008544 <net::arp_init()+0xfc>)
 800844c:	b083      	sub	sp, #12
 800844e:	2210      	movs	r2, #16
 8008450:	2000      	movs	r0, #0
 8008452:	f103 0118 	add.w	r1, r3, #24
 8008456:	f803 0b01 	strb.w	r0, [r3], #1
 800845a:	428b      	cmp	r3, r1
 800845c:	d1fb      	bne.n	8008456 <net::arp_init()+0xe>
 800845e:	3a01      	subs	r2, #1
 8008460:	d1f7      	bne.n	8008452 <net::arp_init()+0xa>
 8008462:	4a39      	ldr	r2, [pc, #228]	@ (8008548 <net::arp_init()+0x100>)
 8008464:	4939      	ldr	r1, [pc, #228]	@ (800854c <net::arp_init()+0x104>)
 8008466:	2306      	movs	r3, #6
 8008468:	f811 0b01 	ldrb.w	r0, [r1], #1
 800846c:	f802 0b01 	strb.w	r0, [r2], #1
 8008470:	3b01      	subs	r3, #1
 8008472:	d1f9      	bne.n	8008468 <net::arp_init()+0x20>
 8008474:	4936      	ldr	r1, [pc, #216]	@ (8008550 <net::arp_init()+0x108>)
 8008476:	2206      	movs	r2, #6
 8008478:	460b      	mov	r3, r1
 800847a:	20ff      	movs	r0, #255	@ 0xff
 800847c:	3a01      	subs	r2, #1
 800847e:	f801 0b01 	strb.w	r0, [r1], #1
 8008482:	d1fb      	bne.n	800847c <net::arp_init()+0x34>
 8008484:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8008488:	4c32      	ldr	r4, [pc, #200]	@ (8008554 <net::arp_init()+0x10c>)
 800848a:	4933      	ldr	r1, [pc, #204]	@ (8008558 <net::arp_init()+0x110>)
 800848c:	8298      	strh	r0, [r3, #20]
 800848e:	4a33      	ldr	r2, [pc, #204]	@ (800855c <net::arp_init()+0x114>)
 8008490:	482e      	ldr	r0, [pc, #184]	@ (800854c <net::arp_init()+0x104>)
 8008492:	e9c3 4103 	strd	r4, r1, [r3, #12]
 8008496:	2306      	movs	r3, #6
 8008498:	f810 4b01 	ldrb.w	r4, [r0], #1
 800849c:	f802 4b01 	strb.w	r4, [r2], #1
 80084a0:	3b01      	subs	r3, #1
 80084a2:	d1f9      	bne.n	8008498 <net::arp_init()+0x50>
 80084a4:	4b2e      	ldr	r3, [pc, #184]	@ (8008560 <net::arp_init()+0x118>)
 80084a6:	4a2f      	ldr	r2, [pc, #188]	@ (8008564 <net::arp_init()+0x11c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	9301      	str	r3, [sp, #4]
 80084ac:	a801      	add	r0, sp, #4
 80084ae:	2304      	movs	r3, #4
 80084b0:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084b4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80084b8:	3b01      	subs	r3, #1
 80084ba:	d1f9      	bne.n	80084b0 <net::arp_init()+0x68>
 80084bc:	482a      	ldr	r0, [pc, #168]	@ (8008568 <net::arp_init()+0x120>)
 80084be:	2206      	movs	r2, #6
 80084c0:	3a01      	subs	r2, #1
 80084c2:	f800 3b01 	strb.w	r3, [r0], #1
 80084c6:	d1fb      	bne.n	80084c0 <net::arp_init()+0x78>
 80084c8:	4a28      	ldr	r2, [pc, #160]	@ (800856c <net::arp_init()+0x124>)
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <net::arp_init()+0x104>)
 80084cc:	2306      	movs	r3, #6
 80084ce:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084d2:	f802 4b01 	strb.w	r4, [r2], #1
 80084d6:	3b01      	subs	r3, #1
 80084d8:	d1f9      	bne.n	80084ce <net::arp_init()+0x86>
 80084da:	4b25      	ldr	r3, [pc, #148]	@ (8008570 <net::arp_init()+0x128>)
 80084dc:	481d      	ldr	r0, [pc, #116]	@ (8008554 <net::arp_init()+0x10c>)
 80084de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80084e2:	e9c3 0103 	strd	r0, r1, [r3, #12]
 80084e6:	4919      	ldr	r1, [pc, #100]	@ (800854c <net::arp_init()+0x104>)
 80084e8:	829a      	strh	r2, [r3, #20]
 80084ea:	2206      	movs	r2, #6
 80084ec:	3316      	adds	r3, #22
 80084ee:	f811 0b01 	ldrb.w	r0, [r1], #1
 80084f2:	f803 0b01 	strb.w	r0, [r3], #1
 80084f6:	3a01      	subs	r2, #1
 80084f8:	d1f9      	bne.n	80084ee <net::arp_init()+0xa6>
 80084fa:	4b1e      	ldr	r3, [pc, #120]	@ (8008574 <net::arp_init()+0x12c>)
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8008502:	2b07      	cmp	r3, #7
 8008504:	d905      	bls.n	8008512 <net::arp_init()+0xca>
 8008506:	481c      	ldr	r0, [pc, #112]	@ (8008578 <net::arp_init()+0x130>)
 8008508:	b003      	add	sp, #12
 800850a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800850e:	f00c b819 	b.w	8014544 <console_error>
 8008512:	f8d2 00a4 	ldr.w	r0, [r2, #164]	@ 0xa4
 8008516:	4919      	ldr	r1, [pc, #100]	@ (800857c <net::arp_init()+0x134>)
 8008518:	1c44      	adds	r4, r0, #1
 800851a:	f8c2 40a4 	str.w	r4, [r2, #164]	@ 0xa4
 800851e:	6809      	ldr	r1, [r1, #0]
 8008520:	1c5c      	adds	r4, r3, #1
 8008522:	f8c2 40a0 	str.w	r4, [r2, #160]	@ 0xa0
 8008526:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800852a:	4a15      	ldr	r2, [pc, #84]	@ (8008580 <net::arp_init()+0x138>)
 800852c:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8008530:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
 8008534:	e9c3 1408 	strd	r1, r4, [r3, #32]
 8008538:	e9c3 020a 	strd	r0, r2, [r3, #40]	@ 0x28
 800853c:	b003      	add	sp, #12
 800853e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	1000cb10 	andne	ip, r0, r0, lsl fp
 8008548:	200020fa 	strdcs	r2, [r0], -sl
 800854c:	2000209c 	mulcs	r0, ip, r0
 8008550:	200020f4 	strdcs	r2, [r0], -r4
 8008554:	01000608 	tsteq	r0, r8, lsl #12
 8008558:	04060008 	streq	r0, [r6], #-8
 800855c:	2000210a 	andcs	r2, r0, sl, lsl #2
 8008560:	20002088 	andcs	r2, r0, r8, lsl #1
 8008564:	2000210f 	andcs	r2, r0, pc, lsl #2
 8008568:	20002114 	andcs	r2, r0, r4, lsl r1
 800856c:	200020be 	strhcs	r2, [r0], -lr
 8008570:	200020b8 	strhcs	r2, [r0], -r8
 8008574:	20002238 	andcs	r2, r0, r8, lsr r2
 8008578:	08018344 	stmdaeq	r1, {r2, r6, r8, r9, pc}
 800857c:	20009ae8 	andcs	r9, r0, r8, ror #21
 8008580:	08012515 	stmdaeq	r1, {r0, r2, r4, r8, sl, sp}

08008584 <net::ip_init()>:
 8008584:	b508      	push	{r3, lr}
 8008586:	f7ff fee7 	bl	8008358 <net::udp_init()>
 800858a:	f7ff fe0f 	bl	80081ac <net::igmp_init()>
 800858e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008592:	f7ff bec7 	b.w	8008324 <net::tcp_init()>
	...

08008598 <console_init()>:
 8008598:	b508      	push	{r3, lr}
 800859a:	f00d fbff 	bl	8015d9c <uart0_init>
 800859e:	4804      	ldr	r0, [pc, #16]	@ (80085b0 <console_init()+0x18>)
 80085a0:	f00d fc26 	bl	8015df0 <uart0_puts>
 80085a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085a8:	4802      	ldr	r0, [pc, #8]	@ (80085b4 <console_init()+0x1c>)
 80085aa:	f00d bc21 	b.w	8015df0 <uart0_puts>
 80085ae:	bf00      	nop
 80085b0:	08017c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp, lr}
 80085b4:	08017c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, ip, sp, lr}

080085b8 <net::igmp_handle(t_igmp*)>:
 80085b8:	7b83      	ldrb	r3, [r0, #14]
 80085ba:	2b45      	cmp	r3, #69	@ 0x45
 80085bc:	d000      	beq.n	80085c0 <net::igmp_handle(t_igmp*)+0x8>
 80085be:	4770      	bx	lr
 80085c0:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 80085c4:	2b11      	cmp	r3, #17
 80085c6:	d1fa      	bne.n	80085be <net::igmp_handle(t_igmp*)+0x6>
 80085c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085cc:	b082      	sub	sp, #8
 80085ce:	4b23      	ldr	r3, [pc, #140]	@ (800865c <net::igmp_handle(t_igmp*)+0xa4>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f100 081d 	add.w	r8, r0, #29
 80085d6:	466a      	mov	r2, sp
 80085d8:	f100 0421 	add.w	r4, r0, #33	@ 0x21
 80085dc:	4643      	mov	r3, r8
 80085de:	e001      	b.n	80085e4 <net::igmp_handle(t_igmp*)+0x2c>
 80085e0:	42a3      	cmp	r3, r4
 80085e2:	d038      	beq.n	8008656 <net::igmp_handle(t_igmp*)+0x9e>
 80085e4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 80085e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085ec:	428d      	cmp	r5, r1
 80085ee:	d0f7      	beq.n	80085e0 <net::igmp_handle(t_igmp*)+0x28>
 80085f0:	1a6d      	subs	r5, r5, r1
 80085f2:	4b1b      	ldr	r3, [pc, #108]	@ (8008660 <net::igmp_handle(t_igmp*)+0xa8>)
 80085f4:	2701      	movs	r7, #1
 80085f6:	f503 7690 	add.w	r6, r3, #288	@ 0x120
 80085fa:	e00a      	b.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 80085fc:	f803 7c02 	strb.w	r7, [r3, #-2]
 8008600:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 8008604:	0852      	lsrs	r2, r2, #1
 8008606:	3201      	adds	r2, #1
 8008608:	f823 2c04 	strh.w	r2, [r3, #-4]
 800860c:	3308      	adds	r3, #8
 800860e:	42b3      	cmp	r3, r6
 8008610:	d012      	beq.n	8008638 <net::igmp_handle(t_igmp*)+0x80>
 8008612:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8008616:	2a00      	cmp	r2, #0
 8008618:	d0f8      	beq.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 800861a:	9201      	str	r2, [sp, #4]
 800861c:	b97d      	cbnz	r5, 800863e <net::igmp_handle(t_igmp*)+0x86>
 800861e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8008622:	2a01      	cmp	r2, #1
 8008624:	d1ea      	bne.n	80085fc <net::igmp_handle(t_igmp*)+0x44>
 8008626:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 800862a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800862e:	428a      	cmp	r2, r1
 8008630:	dbe8      	blt.n	8008604 <net::igmp_handle(t_igmp*)+0x4c>
 8008632:	3308      	adds	r3, #8
 8008634:	42b3      	cmp	r3, r6
 8008636:	d1ec      	bne.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 8008638:	b002      	add	sp, #8
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800863e:	a901      	add	r1, sp, #4
 8008640:	4642      	mov	r2, r8
 8008642:	e001      	b.n	8008648 <net::igmp_handle(t_igmp*)+0x90>
 8008644:	42a2      	cmp	r2, r4
 8008646:	d0ea      	beq.n	800861e <net::igmp_handle(t_igmp*)+0x66>
 8008648:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800864c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008650:	45e6      	cmp	lr, ip
 8008652:	d0f7      	beq.n	8008644 <net::igmp_handle(t_igmp*)+0x8c>
 8008654:	e7da      	b.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 8008656:	2500      	movs	r5, #0
 8008658:	e7cb      	b.n	80085f2 <net::igmp_handle(t_igmp*)+0x3a>
 800865a:	bf00      	nop
 800865c:	010000e0 	smlatteq	r0, r0, r0, r0
 8008660:	10008230 	andne	r8, r0, r0, lsr r2

08008664 <net::net_handle()>:
 8008664:	b500      	push	{lr}
 8008666:	b083      	sub	sp, #12
 8008668:	a801      	add	r0, sp, #4
 800866a:	f009 fd43 	bl	80120f4 <emac_eth_recv(unsigned char**)>
 800866e:	2800      	cmp	r0, #0
 8008670:	dc02      	bgt.n	8008678 <net::net_handle()+0x14>
 8008672:	b003      	add	sp, #12
 8008674:	f85d fb04 	ldr.w	pc, [sp], #4
 8008678:	9801      	ldr	r0, [sp, #4]
 800867a:	8983      	ldrh	r3, [r0, #12]
 800867c:	2b08      	cmp	r3, #8
 800867e:	d007      	beq.n	8008690 <net::net_handle()+0x2c>
 8008680:	f5b3 6fc1 	cmp.w	r3, #1544	@ 0x608
 8008684:	d007      	beq.n	8008696 <net::net_handle()+0x32>
 8008686:	f009 fd47 	bl	8012118 <emac_free_pkt()>
 800868a:	b003      	add	sp, #12
 800868c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008690:	f000 fc06 	bl	8008ea0 <net::ip_handle(t_ip4*)>
 8008694:	e7f7      	b.n	8008686 <net::net_handle()+0x22>
 8008696:	f000 fb79 	bl	8008d8c <net::arp_handle(t_arp*)>
 800869a:	e7f4      	b.n	8008686 <net::net_handle()+0x22>

0800869c <net::tcp_run()>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	4c11      	ldr	r4, [pc, #68]	@ (80086e4 <net::tcp_run()+0x48>)
 80086a0:	b085      	sub	sp, #20
 80086a2:	2711      	movs	r7, #17
 80086a4:	f504 75f0 	add.w	r5, r4, #480	@ 0x1e0
 80086a8:	2609      	movs	r6, #9
 80086aa:	e002      	b.n	80086b2 <net::tcp_run()+0x16>
 80086ac:	3450      	adds	r4, #80	@ 0x50
 80086ae:	42ac      	cmp	r4, r5
 80086b0:	d015      	beq.n	80086de <net::tcp_run()+0x42>
 80086b2:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 80086b6:	2b07      	cmp	r3, #7
 80086b8:	d1f8      	bne.n	80086ac <net::tcp_run()+0x10>
 80086ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086bc:	69a2      	ldr	r2, [r4, #24]
 80086be:	f88d 700c 	strb.w	r7, [sp, #12]
 80086c2:	4620      	mov	r0, r4
 80086c4:	a901      	add	r1, sp, #4
 80086c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086ca:	f008 fe73 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 80086ce:	69a3      	ldr	r3, [r4, #24]
 80086d0:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
 80086d4:	3301      	adds	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	3450      	adds	r4, #80	@ 0x50
 80086da:	42ac      	cmp	r4, r5
 80086dc:	d1e9      	bne.n	80086b2 <net::tcp_run()+0x16>
 80086de:	b005      	add	sp, #20
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e2:	bf00      	nop
 80086e4:	100089a0 	andne	r8, r0, r0, lsr #19

080086e8 <net::tcp_handle(t_tcp*)>:
 80086e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ec:	4605      	mov	r5, r0
 80086ee:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80086f0:	8ca9      	ldrh	r1, [r5, #36]	@ 0x24
 80086f2:	4fb3      	ldr	r7, [pc, #716]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 80086f4:	f8b5 9010 	ldrh.w	r9, [r5, #16]
 80086f8:	ba49      	rev16	r1, r1
 80086fa:	ba40      	rev16	r0, r0
 80086fc:	8468      	strh	r0, [r5, #34]	@ 0x22
 80086fe:	84a9      	strh	r1, [r5, #36]	@ 0x24
 8008700:	f8b7 2d04 	ldrh.w	r2, [r7, #3332]	@ 0xd04
 8008704:	b28b      	uxth	r3, r1
 8008706:	429a      	cmp	r2, r3
 8008708:	b099      	sub	sp, #100	@ 0x64
 800870a:	d029      	beq.n	8008760 <net::tcp_handle(t_tcp*)+0x78>
 800870c:	f895 602e 	ldrb.w	r6, [r5, #46]	@ 0x2e
 8008710:	ab04      	add	r3, sp, #16
 8008712:	2400      	movs	r4, #0
 8008714:	f843 4b04 	str.w	r4, [r3], #4
 8008718:	aa18      	add	r2, sp, #96	@ 0x60
 800871a:	4293      	cmp	r3, r2
 800871c:	d1fa      	bne.n	8008714 <net::tcp_handle(t_tcp*)+0x2c>
 800871e:	f8d5 301a 	ldr.w	r3, [r5, #26]
 8008722:	f8d5 201e 	ldr.w	r2, [r5, #30]
 8008726:	f8ad 1018 	strh.w	r1, [sp, #24]
 800872a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800872e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008732:	1dab      	adds	r3, r5, #6
 8008734:	f105 040c 	add.w	r4, r5, #12
 8008738:	a907      	add	r1, sp, #28
 800873a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800873e:	f801 0b01 	strb.w	r0, [r1], #1
 8008742:	42a3      	cmp	r3, r4
 8008744:	d1f9      	bne.n	800873a <net::tcp_handle(t_tcp*)+0x52>
 8008746:	4628      	mov	r0, r5
 8008748:	f008 fe14 	bl	8011374 <net::_bswap32(t_tcp*)>
 800874c:	0932      	lsrs	r2, r6, #4
 800874e:	0092      	lsls	r2, r2, #2
 8008750:	a904      	add	r1, sp, #16
 8008752:	f008 ff1b 	bl	801158c <net::scan_options(t_tcp*, net::tcb*, long)>
 8008756:	f008 fee5 	bl	8011524 <net::send_reset(t_tcp*, net::tcb const*)>
 800875a:	b019      	add	sp, #100	@ 0x64
 800875c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008760:	f107 0a04 	add.w	sl, r7, #4
 8008764:	fa1f fe80 	uxth.w	lr, r0
 8008768:	4653      	mov	r3, sl
 800876a:	2400      	movs	r4, #0
 800876c:	e005      	b.n	800877a <net::tcp_handle(t_tcp*)+0x92>
 800876e:	3401      	adds	r4, #1
 8008770:	2c06      	cmp	r4, #6
 8008772:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 8008776:	f000 8088 	beq.w	800888a <net::tcp_handle(t_tcp*)+0x1a2>
 800877a:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800877e:	2a01      	cmp	r2, #1
 8008780:	d0f5      	beq.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008782:	88da      	ldrh	r2, [r3, #6]
 8008784:	4572      	cmp	r2, lr
 8008786:	d1f2      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008788:	1e5a      	subs	r2, r3, #1
 800878a:	f105 0119 	add.w	r1, r5, #25
 800878e:	f103 0c03 	add.w	ip, r3, #3
 8008792:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8008796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800879a:	4286      	cmp	r6, r0
 800879c:	d1e7      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 800879e:	4562      	cmp	r2, ip
 80087a0:	d1f7      	bne.n	8008792 <net::tcp_handle(t_tcp*)+0xaa>
 80087a2:	f895 802e 	ldrb.w	r8, [r5, #46]	@ 0x2e
 80087a6:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80087aa:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80087ae:	4628      	mov	r0, r5
 80087b0:	9300      	str	r3, [sp, #0]
 80087b2:	f008 fddf 	bl	8011374 <net::_bswap32(t_tcp*)>
 80087b6:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80087b8:	9a00      	ldr	r2, [sp, #0]
 80087ba:	ba5b      	rev16	r3, r3
 80087bc:	862b      	strh	r3, [r5, #48]	@ 0x30
 80087be:	b29b      	uxth	r3, r3
 80087c0:	9303      	str	r3, [sp, #12]
 80087c2:	8eab      	ldrh	r3, [r5, #52]	@ 0x34
 80087c4:	ba5b      	rev16	r3, r3
 80087c6:	86ab      	strh	r3, [r5, #52]	@ 0x34
 80087c8:	f105 032a 	add.w	r3, r5, #42	@ 0x2a
 80087cc:	079b      	lsls	r3, r3, #30
 80087ce:	bf0c      	ite	eq
 80087d0:	f8d5 302a 	ldreq.w	r3, [r5, #42]	@ 0x2a
 80087d4:	f8d5 302a 	ldrne.w	r3, [r5, #42]	@ 0x2a
 80087d8:	9301      	str	r3, [sp, #4]
 80087da:	f105 0326 	add.w	r3, r5, #38	@ 0x26
 80087de:	079e      	lsls	r6, r3, #30
 80087e0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 80087e4:	eb07 1603 	add.w	r6, r7, r3, lsl #4
 80087e8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80087ec:	4631      	mov	r1, r6
 80087ee:	ea4f 0384 	mov.w	r3, r4, lsl #2
 80087f2:	bf0c      	ite	eq
 80087f4:	f8d5 b026 	ldreq.w	fp, [r5, #38]	@ 0x26
 80087f8:	f8d5 b026 	ldrne.w	fp, [r5, #38]	@ 0x26
 80087fc:	9302      	str	r3, [sp, #8]
 80087fe:	f008 fec5 	bl	801158c <net::scan_options(t_tcp*, net::tcb*, long)>
 8008802:	f896 204c 	ldrb.w	r2, [r6, #76]	@ 0x4c
 8008806:	2a01      	cmp	r2, #1
 8008808:	d04c      	beq.n	80088a4 <net::tcp_handle(t_tcp*)+0x1bc>
 800880a:	1ed3      	subs	r3, r2, #3
 800880c:	2b07      	cmp	r3, #7
 800880e:	d8a4      	bhi.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008810:	9b00      	ldr	r3, [sp, #0]
 8008812:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 8008816:	33ec      	adds	r3, #236	@ 0xec
 8008818:	fa99 f999 	rev16.w	r9, r9
 800881c:	fa13 f989 	uxtah	r9, r3, r9
 8008820:	f8b6 3044 	ldrh.w	r3, [r6, #68]	@ 0x44
 8008824:	fa1f f989 	uxth.w	r9, r9
 8008828:	2b00      	cmp	r3, #0
 800882a:	d077      	beq.n	800891c <net::tcp_handle(t_tcp*)+0x234>
 800882c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 800882e:	eba1 000b 	sub.w	r0, r1, fp
 8008832:	f1b9 0f00 	cmp.w	r9, #0
 8008836:	f040 8085 	bne.w	8008944 <net::tcp_handle(t_tcp*)+0x25c>
 800883a:	2800      	cmp	r0, #0
 800883c:	f340 80b8 	ble.w	80089b0 <net::tcp_handle(t_tcp*)+0x2c8>
 8008840:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 8008844:	f013 0f04 	tst.w	r3, #4
 8008848:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800884c:	4423      	add	r3, r4
 800884e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008852:	d06a      	beq.n	800892a <net::tcp_handle(t_tcp*)+0x242>
 8008854:	891d      	ldrh	r5, [r3, #8]
 8008856:	2200      	movs	r2, #0
 8008858:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 800885c:	f846 2b04 	str.w	r2, [r6], #4
 8008860:	42b3      	cmp	r3, r6
 8008862:	d1fb      	bne.n	800885c <net::tcp_handle(t_tcp*)+0x174>
 8008864:	9b02      	ldr	r3, [sp, #8]
 8008866:	4a57      	ldr	r2, [pc, #348]	@ (80089c4 <net::tcp_handle(t_tcp*)+0x2dc>)
 8008868:	4423      	add	r3, r4
 800886a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800886e:	6812      	ldr	r2, [r2, #0]
 8008870:	811d      	strh	r5, [r3, #8]
 8008872:	f640 3018 	movw	r0, #2840	@ 0xb18
 8008876:	2101      	movs	r1, #1
 8008878:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800887c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800887e:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 8008882:	629a      	str	r2, [r3, #40]	@ 0x28
 8008884:	f883 104c 	strb.w	r1, [r3, #76]	@ 0x4c
 8008888:	e767      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800888a:	4b4d      	ldr	r3, [pc, #308]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 800888c:	2400      	movs	r4, #0
 800888e:	e002      	b.n	8008896 <net::tcp_handle(t_tcp*)+0x1ae>
 8008890:	3401      	adds	r4, #1
 8008892:	2c06      	cmp	r4, #6
 8008894:	d085      	beq.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 8008896:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
 800889a:	2a01      	cmp	r2, #1
 800889c:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 80088a0:	d1f6      	bne.n	8008890 <net::tcp_handle(t_tcp*)+0x1a8>
 80088a2:	e77e      	b.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 80088a4:	f8d5 201e 	ldr.w	r2, [r5, #30]
 80088a8:	f847 2008 	str.w	r2, [r7, r8]
 80088ac:	8c69      	ldrh	r1, [r5, #34]	@ 0x22
 80088ae:	8171      	strh	r1, [r6, #10]
 80088b0:	f8d5 101a 	ldr.w	r1, [r5, #26]
 80088b4:	f84a 1008 	str.w	r1, [sl, r8]
 80088b8:	f108 020c 	add.w	r2, r8, #12
 80088bc:	443a      	add	r2, r7
 80088be:	1dab      	adds	r3, r5, #6
 80088c0:	f105 000c 	add.w	r0, r5, #12
 80088c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 80088c8:	f802 1b01 	strb.w	r1, [r2], #1
 80088cc:	4283      	cmp	r3, r0
 80088ce:	d1f9      	bne.n	80088c4 <net::tcp_handle(t_tcp*)+0x1dc>
 80088d0:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 80088d4:	0758      	lsls	r0, r3, #29
 80088d6:	f53f af40 	bmi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088da:	06d9      	lsls	r1, r3, #27
 80088dc:	f100 8135 	bmi.w	8008b4a <net::tcp_handle(t_tcp*)+0x462>
 80088e0:	079a      	lsls	r2, r3, #30
 80088e2:	f57f af3a 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088e6:	9b02      	ldr	r3, [sp, #8]
 80088e8:	4423      	add	r3, r4
 80088ea:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 80088ee:	2212      	movs	r2, #18
 80088f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088f2:	9104      	str	r1, [sp, #16]
 80088f4:	f10b 0301 	add.w	r3, fp, #1
 80088f8:	4630      	mov	r0, r6
 80088fa:	a904      	add	r1, sp, #16
 80088fc:	6423      	str	r3, [r4, #64]	@ 0x40
 80088fe:	9305      	str	r3, [sp, #20]
 8008900:	f88d 2018 	strb.w	r2, [sp, #24]
 8008904:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
 8008908:	f008 fd54 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800890c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800890e:	6163      	str	r3, [r4, #20]
 8008910:	2203      	movs	r2, #3
 8008912:	3301      	adds	r3, #1
 8008914:	61a3      	str	r3, [r4, #24]
 8008916:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
 800891a:	e71e      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d18e      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008922:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8008924:	455b      	cmp	r3, fp
 8008926:	d18b      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008928:	e01f      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 800892a:	6999      	ldr	r1, [r3, #24]
 800892c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800892e:	9305      	str	r3, [sp, #20]
 8008930:	2210      	movs	r2, #16
 8008932:	9104      	str	r1, [sp, #16]
 8008934:	4630      	mov	r0, r6
 8008936:	eb0d 0102 	add.w	r1, sp, r2
 800893a:	f88d 2018 	strb.w	r2, [sp, #24]
 800893e:	f008 fd39 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008942:	e70a      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008944:	2800      	cmp	r0, #0
 8008946:	440b      	add	r3, r1
 8008948:	dd0b      	ble.n	8008962 <net::tcp_handle(t_tcp*)+0x27a>
 800894a:	f10b 30ff 	add.w	r0, fp, #4294967295	@ 0xffffffff
 800894e:	4448      	add	r0, r9
 8008950:	1a09      	subs	r1, r1, r0
 8008952:	2900      	cmp	r1, #0
 8008954:	f73f af74 	bgt.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008958:	1ac0      	subs	r0, r0, r3
 800895a:	2800      	cmp	r0, #0
 800895c:	f6bf af70 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008960:	e003      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 8008962:	ebab 0003 	sub.w	r0, fp, r3
 8008966:	2800      	cmp	r0, #0
 8008968:	daef      	bge.n	800894a <net::tcp_handle(t_tcp*)+0x262>
 800896a:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800896e:	f011 0004 	ands.w	r0, r1, #4
 8008972:	f040 80f1 	bne.w	8008b58 <net::tcp_handle(t_tcp*)+0x470>
 8008976:	078b      	lsls	r3, r1, #30
 8008978:	d508      	bpl.n	800898c <net::tcp_handle(t_tcp*)+0x2a4>
 800897a:	2a03      	cmp	r2, #3
 800897c:	f000 811f 	beq.w	8008bbe <net::tcp_handle(t_tcp*)+0x4d6>
 8008980:	4631      	mov	r1, r6
 8008982:	4628      	mov	r0, r5
 8008984:	f008 fdce 	bl	8011524 <net::send_reset(t_tcp*, net::tcb const*)>
 8008988:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800898c:	06c8      	lsls	r0, r1, #27
 800898e:	f57f aee4 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008992:	00a3      	lsls	r3, r4, #2
 8008994:	4423      	add	r3, r4
 8008996:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800899a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800899e:	1eda      	subs	r2, r3, #3
 80089a0:	2a07      	cmp	r2, #7
 80089a2:	d87f      	bhi.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 80089a4:	e8df f002 	tbb	[pc, r2]
 80089a8:	10101066 	andsne	r1, r0, r6, rrx
 80089ac:	b8a71010 	stmialt	r7!, {r4, ip}
 80089b0:	440b      	add	r3, r1
 80089b2:	ebab 0303 	sub.w	r3, fp, r3
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	f6bf af42 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 80089bc:	e7d5      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 80089be:	bf00      	nop
 80089c0:	100089a0 	andne	r8, r0, r0, lsr #19
 80089c4:	20009ae8 	andcs	r9, r0, r8, ror #21
 80089c8:	00a2      	lsls	r2, r4, #2
 80089ca:	1911      	adds	r1, r2, r4
 80089cc:	eb07 1101 	add.w	r1, r7, r1, lsl #4
 80089d0:	e9d1 c205 	ldrd	ip, r2, [r1, #20]
 80089d4:	9801      	ldr	r0, [sp, #4]
 80089d6:	ebbc 0e00 	subs.w	lr, ip, r0
 80089da:	f100 80fc 	bmi.w	8008bd6 <net::tcp_handle(t_tcp*)+0x4ee>
 80089de:	9801      	ldr	r0, [sp, #4]
 80089e0:	eba0 0c0c 	sub.w	ip, r0, ip
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	f340 810d 	ble.w	8008c06 <net::tcp_handle(t_tcp*)+0x51e>
 80089ec:	9901      	ldr	r1, [sp, #4]
 80089ee:	1a89      	subs	r1, r1, r2
 80089f0:	2900      	cmp	r1, #0
 80089f2:	f300 80fa 	bgt.w	8008bea <net::tcp_handle(t_tcp*)+0x502>
 80089f6:	3b04      	subs	r3, #4
 80089f8:	2b02      	cmp	r3, #2
 80089fa:	d856      	bhi.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 80089fc:	f1b9 0f00 	cmp.w	r9, #0
 8008a00:	d053      	beq.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 8008a02:	00a3      	lsls	r3, r4, #2
 8008a04:	4423      	add	r3, r4
 8008a06:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008a0c:	455a      	cmp	r2, fp
 8008a0e:	f040 816c 	bne.w	8008cea <net::tcp_handle(t_tcp*)+0x602>
 8008a12:	f8b7 01e0 	ldrh.w	r0, [r7, #480]	@ 0x1e0
 8008a16:	9900      	ldr	r1, [sp, #0]
 8008a18:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008a1c:	fb00 f303 	mul.w	r3, r0, r3
 8008a20:	18fa      	adds	r2, r7, r3
 8008a22:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8008a26:	f8a2 4772 	strh.w	r4, [r2, #1906]	@ 0x772
 8008a2a:	19da      	adds	r2, r3, r7
 8008a2c:	f105 0322 	add.w	r3, r5, #34	@ 0x22
 8008a30:	4419      	add	r1, r3
 8008a32:	079b      	lsls	r3, r3, #30
 8008a34:	4688      	mov	r8, r1
 8008a36:	f040 8122 	bne.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a3a:	f1b9 0f03 	cmp.w	r9, #3
 8008a3e:	f240 811e 	bls.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a42:	f1a9 0304 	sub.w	r3, r9, #4
 8008a46:	089b      	lsrs	r3, r3, #2
 8008a48:	1c59      	adds	r1, r3, #1
 8008a4a:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 8008a4e:	4694      	mov	ip, r2
 8008a50:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8008a54:	f858 eb04 	ldr.w	lr, [r8], #4
 8008a58:	f84c eb04 	str.w	lr, [ip], #4
 8008a5c:	4588      	cmp	r8, r1
 8008a5e:	d1f9      	bne.n	8008a54 <net::tcp_handle(t_tcp*)+0x36c>
 8008a60:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 8008a64:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8008a68:	2b04      	cmp	r3, #4
 8008a6a:	f000 8112 	beq.w	8008c92 <net::tcp_handle(t_tcp*)+0x5aa>
 8008a6e:	4452      	add	r2, sl
 8008a70:	3b05      	subs	r3, #5
 8008a72:	e106      	b.n	8008c82 <net::tcp_handle(t_tcp*)+0x59a>
 8008a74:	00a3      	lsls	r3, r4, #2
 8008a76:	4423      	add	r3, r4
 8008a78:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a7c:	9801      	ldr	r0, [sp, #4]
 8008a7e:	695a      	ldr	r2, [r3, #20]
 8008a80:	1a11      	subs	r1, r2, r0
 8008a82:	2900      	cmp	r1, #0
 8008a84:	699a      	ldr	r2, [r3, #24]
 8008a86:	f340 80eb 	ble.w	8008c60 <net::tcp_handle(t_tcp*)+0x578>
 8008a8a:	4631      	mov	r1, r6
 8008a8c:	4628      	mov	r0, r5
 8008a8e:	f008 fd49 	bl	8011524 <net::send_reset(t_tcp*, net::tcb const*)>
 8008a92:	00a3      	lsls	r3, r4, #2
 8008a94:	4423      	add	r3, r4
 8008a96:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a9a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8008a9e:	1f1a      	subs	r2, r3, #4
 8008aa0:	2a02      	cmp	r2, #2
 8008aa2:	d9ab      	bls.n	80089fc <net::tcp_handle(t_tcp*)+0x314>
 8008aa4:	2b02      	cmp	r3, #2
 8008aa6:	f67f ae58 	bls.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aaa:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 8008aae:	07ca      	lsls	r2, r1, #31
 8008ab0:	f57f ae53 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	4423      	add	r3, r4
 8008ab8:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 8008abc:	4630      	mov	r0, r6
 8008abe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ac0:	69a2      	ldr	r2, [r4, #24]
 8008ac2:	9204      	str	r2, [sp, #16]
 8008ac4:	2210      	movs	r2, #16
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	eb0d 0102 	add.w	r1, sp, r2
 8008acc:	6423      	str	r3, [r4, #64]	@ 0x40
 8008ace:	9305      	str	r3, [sp, #20]
 8008ad0:	f88d 2018 	strb.w	r2, [sp, #24]
 8008ad4:	f008 fc6e 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008ad8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 8008adc:	2b05      	cmp	r3, #5
 8008ade:	f000 80b9 	beq.w	8008c54 <net::tcp_handle(t_tcp*)+0x56c>
 8008ae2:	f200 80b2 	bhi.w	8008c4a <net::tcp_handle(t_tcp*)+0x562>
 8008ae6:	3b03      	subs	r3, #3
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	f63f ae36 	bhi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aee:	2307      	movs	r3, #7
 8008af0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 8008af4:	e631      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008af6:	00a3      	lsls	r3, r4, #2
 8008af8:	4423      	add	r3, r4
 8008afa:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008afe:	9801      	ldr	r0, [sp, #4]
 8008b00:	699a      	ldr	r2, [r3, #24]
 8008b02:	4282      	cmp	r2, r0
 8008b04:	d1d3      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b06:	891d      	ldrh	r5, [r3, #8]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b0e:	f846 2b04 	str.w	r2, [r6], #4
 8008b12:	42b3      	cmp	r3, r6
 8008b14:	d1fb      	bne.n	8008b0e <net::tcp_handle(t_tcp*)+0x426>
 8008b16:	e6a5      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008b18:	00a3      	lsls	r3, r4, #2
 8008b1a:	eb03 0a04 	add.w	sl, r3, r4
 8008b1e:	eb07 1a0a 	add.w	sl, r7, sl, lsl #4
 8008b22:	9a01      	ldr	r2, [sp, #4]
 8008b24:	f8da 3018 	ldr.w	r3, [sl, #24]
 8008b28:	4293      	cmp	r3, r2
 8008b2a:	d1c0      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b2c:	f8da 3040 	ldr.w	r3, [sl, #64]	@ 0x40
 8008b30:	9305      	str	r3, [sp, #20]
 8008b32:	2310      	movs	r3, #16
 8008b34:	eb0d 0103 	add.w	r1, sp, r3
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f88d 3018 	strb.w	r3, [sp, #24]
 8008b3e:	9204      	str	r2, [sp, #16]
 8008b40:	f008 fc38 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008b44:	f89a 304c 	ldrb.w	r3, [sl, #76]	@ 0x4c
 8008b48:	e7a9      	b.n	8008a9e <net::tcp_handle(t_tcp*)+0x3b6>
 8008b4a:	4631      	mov	r1, r6
 8008b4c:	4628      	mov	r0, r5
 8008b4e:	b019      	add	sp, #100	@ 0x64
 8008b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b54:	f008 bce6 	b.w	8011524 <net::send_reset(t_tcp*, net::tcb const*)>
 8008b58:	00a3      	lsls	r3, r4, #2
 8008b5a:	4423      	add	r3, r4
 8008b5c:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b60:	2a07      	cmp	r2, #7
 8008b62:	8919      	ldrh	r1, [r3, #8]
 8008b64:	d81b      	bhi.n	8008b9e <net::tcp_handle(t_tcp*)+0x4b6>
 8008b66:	2a03      	cmp	r2, #3
 8008b68:	d021      	beq.n	8008bae <net::tcp_handle(t_tcp*)+0x4c6>
 8008b6a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b6e:	2200      	movs	r2, #0
 8008b70:	f846 2b04 	str.w	r2, [r6], #4
 8008b74:	42b3      	cmp	r3, r6
 8008b76:	d1fb      	bne.n	8008b70 <net::tcp_handle(t_tcp*)+0x488>
 8008b78:	9b02      	ldr	r3, [sp, #8]
 8008b7a:	4a62      	ldr	r2, [pc, #392]	@ (8008d04 <net::tcp_handle(t_tcp*)+0x61c>)
 8008b7c:	4423      	add	r3, r4
 8008b7e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b82:	6812      	ldr	r2, [r2, #0]
 8008b84:	8119      	strh	r1, [r3, #8]
 8008b86:	f640 3418 	movw	r4, #2840	@ 0xb18
 8008b8a:	2001      	movs	r0, #1
 8008b8c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008b90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008b92:	f8a3 4044 	strh.w	r4, [r3, #68]	@ 0x44
 8008b96:	629a      	str	r2, [r3, #40]	@ 0x28
 8008b98:	f883 004c 	strb.w	r0, [r3, #76]	@ 0x4c
 8008b9c:	e5dd      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008b9e:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f846 2b04 	str.w	r2, [r6], #4
 8008ba8:	429e      	cmp	r6, r3
 8008baa:	d1fb      	bne.n	8008ba4 <net::tcp_handle(t_tcp*)+0x4bc>
 8008bac:	e7e4      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bae:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	f846 2b04 	str.w	r2, [r6], #4
 8008bb8:	42b3      	cmp	r3, r6
 8008bba:	d1fb      	bne.n	8008bb4 <net::tcp_handle(t_tcp*)+0x4cc>
 8008bbc:	e7dc      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bbe:	00a3      	lsls	r3, r4, #2
 8008bc0:	4423      	add	r3, r4
 8008bc2:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bc6:	891d      	ldrh	r5, [r3, #8]
 8008bc8:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bcc:	f846 0b04 	str.w	r0, [r6], #4
 8008bd0:	429e      	cmp	r6, r3
 8008bd2:	d1fb      	bne.n	8008bcc <net::tcp_handle(t_tcp*)+0x4e4>
 8008bd4:	e646      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008bd6:	1a80      	subs	r0, r0, r2
 8008bd8:	2800      	cmp	r0, #0
 8008bda:	f340 8090 	ble.w	8008cfe <net::tcp_handle(t_tcp*)+0x616>
 8008bde:	9801      	ldr	r0, [sp, #4]
 8008be0:	eba0 010c 	sub.w	r1, r0, ip
 8008be4:	2900      	cmp	r1, #0
 8008be6:	f77f af06 	ble.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008bea:	00a3      	lsls	r3, r4, #2
 8008bec:	4423      	add	r3, r4
 8008bee:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bf2:	2410      	movs	r4, #16
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008bf6:	f88d 4018 	strb.w	r4, [sp, #24]
 8008bfa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008bfe:	eb0d 0104 	add.w	r1, sp, r4
 8008c02:	4630      	mov	r0, r6
 8008c04:	e69b      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008c06:	f1be 0f00 	cmp.w	lr, #0
 8008c0a:	f47f aef4 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c0e:	9801      	ldr	r0, [sp, #4]
 8008c10:	1a82      	subs	r2, r0, r2
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	f73f aeef 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c18:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8008c1a:	eba2 000b 	sub.w	r0, r2, fp
 8008c1e:	2800      	cmp	r0, #0
 8008c20:	db08      	blt.n	8008c34 <net::tcp_handle(t_tcp*)+0x54c>
 8008c22:	455a      	cmp	r2, fp
 8008c24:	f47f aee7 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c28:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 8008c2a:	9901      	ldr	r1, [sp, #4]
 8008c2c:	1a52      	subs	r2, r2, r1
 8008c2e:	2a00      	cmp	r2, #0
 8008c30:	f73f aee1 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c34:	00a2      	lsls	r2, r4, #2
 8008c36:	4422      	add	r2, r4
 8008c38:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008c3c:	9903      	ldr	r1, [sp, #12]
 8008c3e:	61d1      	str	r1, [r2, #28]
 8008c40:	9901      	ldr	r1, [sp, #4]
 8008c42:	f8c2 b024 	str.w	fp, [r2, #36]	@ 0x24
 8008c46:	6291      	str	r1, [r2, #40]	@ 0x28
 8008c48:	e6d5      	b.n	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c4a:	2b06      	cmp	r3, #6
 8008c4c:	f47f ad85 	bne.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c50:	230a      	movs	r3, #10
 8008c52:	e74d      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c54:	69a3      	ldr	r3, [r4, #24]
 8008c56:	9a01      	ldr	r2, [sp, #4]
 8008c58:	4293      	cmp	r3, r2
 8008c5a:	d0f9      	beq.n	8008c50 <net::tcp_handle(t_tcp*)+0x568>
 8008c5c:	2308      	movs	r3, #8
 8008c5e:	e747      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c60:	1a82      	subs	r2, r0, r2
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	f73f af11 	bgt.w	8008a8a <net::tcp_handle(t_tcp*)+0x3a2>
 8008c68:	9903      	ldr	r1, [sp, #12]
 8008c6a:	61d9      	str	r1, [r3, #28]
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	9901      	ldr	r1, [sp, #4]
 8008c70:	f8c3 b024 	str.w	fp, [r3, #36]	@ 0x24
 8008c74:	6299      	str	r1, [r3, #40]	@ 0x28
 8008c76:	6159      	str	r1, [r3, #20]
 8008c78:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008c7c:	e56d      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c7e:	f109 33ff 	add.w	r3, r9, #4294967295	@ 0xffffffff
 8008c82:	3301      	adds	r3, #1
 8008c84:	4443      	add	r3, r8
 8008c86:	f818 1b01 	ldrb.w	r1, [r8], #1
 8008c8a:	f802 1b01 	strb.w	r1, [r2], #1
 8008c8e:	4543      	cmp	r3, r8
 8008c90:	d1f9      	bne.n	8008c86 <net::tcp_handle(t_tcp*)+0x59e>
 8008c92:	9b02      	ldr	r3, [sp, #8]
 8008c94:	eb03 0804 	add.w	r8, r3, r4
 8008c98:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008c9c:	eb07 1808 	add.w	r8, r7, r8, lsl #4
 8008ca0:	fb03 7300 	mla	r3, r3, r0, r7
 8008ca4:	4630      	mov	r0, r6
 8008ca6:	f8a3 9770 	strh.w	r9, [r3, #1904]	@ 0x770
 8008caa:	f8d8 3040 	ldr.w	r3, [r8, #64]	@ 0x40
 8008cae:	444b      	add	r3, r9
 8008cb0:	f8c8 3040 	str.w	r3, [r8, #64]	@ 0x40
 8008cb4:	9305      	str	r3, [sp, #20]
 8008cb6:	f8b8 3044 	ldrh.w	r3, [r8, #68]	@ 0x44
 8008cba:	f2a3 538c 	subw	r3, r3, #1420	@ 0x58c
 8008cbe:	f8a8 3044 	strh.w	r3, [r8, #68]	@ 0x44
 8008cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8008cc6:	9304      	str	r3, [sp, #16]
 8008cc8:	2310      	movs	r3, #16
 8008cca:	eb0d 0103 	add.w	r1, sp, r3
 8008cce:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cd2:	f008 fb6f 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008cd6:	f8b7 21e0 	ldrh.w	r2, [r7, #480]	@ 0x1e0
 8008cda:	f898 304c 	ldrb.w	r3, [r8, #76]	@ 0x4c
 8008cde:	3201      	adds	r2, #1
 8008ce0:	f002 0201 	and.w	r2, r2, #1
 8008ce4:	f8a7 21e0 	strh.w	r2, [r7, #480]	@ 0x1e0
 8008ce8:	e6dc      	b.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 8008cea:	699c      	ldr	r4, [r3, #24]
 8008cec:	2310      	movs	r3, #16
 8008cee:	e9cd 4204 	strd	r4, r2, [sp, #16]
 8008cf2:	eb0d 0103 	add.w	r1, sp, r3
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cfc:	e61f      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008cfe:	9a01      	ldr	r2, [sp, #4]
 8008d00:	614a      	str	r2, [r1, #20]
 8008d02:	e789      	b.n	8008c18 <net::tcp_handle(t_tcp*)+0x530>
 8008d04:	20009ae8 	andcs	r9, r0, r8, ror #21

08008d08 <net::udp_handle(t_udp*)>:
 8008d08:	f8b0 c024 	ldrh.w	ip, [r0, #36]	@ 0x24
 8008d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8008d84 <net::udp_handle(t_udp*)+0x7c>)
 8008d0e:	fa9c fc9c 	rev16.w	ip, ip
 8008d12:	2300      	movs	r3, #0
 8008d14:	fa1f fc8c 	uxth.w	ip, ip
 8008d18:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8008d1c:	4561      	cmp	r1, ip
 8008d1e:	d003      	beq.n	8008d28 <net::udp_handle(t_udp*)+0x20>
 8008d20:	3301      	adds	r3, #1
 8008d22:	2b08      	cmp	r3, #8
 8008d24:	d1f8      	bne.n	8008d18 <net::udp_handle(t_udp*)+0x10>
 8008d26:	4770      	bx	lr
 8008d28:	8cc1      	ldrh	r1, [r0, #38]	@ 0x26
 8008d2a:	b530      	push	{r4, r5, lr}
 8008d2c:	ba4c      	rev16	r4, r1
 8008d2e:	3c08      	subs	r4, #8
 8008d30:	b2a4      	uxth	r4, r4
 8008d32:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d36:	fa1f fc81 	uxth.w	ip, r1
 8008d3a:	f5b4 6fb8 	cmp.w	r4, #1472	@ 0x5c0
 8008d3e:	4d12      	ldr	r5, [pc, #72]	@ (8008d88 <net::udp_handle(t_udp*)+0x80>)
 8008d40:	fb03 f202 	mul.w	r2, r3, r2
 8008d44:	f102 020a 	add.w	r2, r2, #10
 8008d48:	bf28      	it	cs
 8008d4a:	f44f 64b8 	movcs.w	r4, #1472	@ 0x5c0
 8008d4e:	f5bc 6f00 	cmp.w	ip, #2048	@ 0x800
 8008d52:	442a      	add	r2, r5
 8008d54:	f100 012a 	add.w	r1, r0, #42	@ 0x2a
 8008d58:	d007      	beq.n	8008d6a <net::udp_handle(t_udp*)+0x62>
 8008d5a:	eb02 0e04 	add.w	lr, r2, r4
 8008d5e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008d62:	f802 cb01 	strb.w	ip, [r2], #1
 8008d66:	4572      	cmp	r2, lr
 8008d68:	d1f9      	bne.n	8008d5e <net::udp_handle(t_udp*)+0x56>
 8008d6a:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d6e:	fb02 f303 	mul.w	r3, r2, r3
 8008d72:	f8d0 101a 	ldr.w	r1, [r0, #26]
 8008d76:	50e9      	str	r1, [r5, r3]
 8008d78:	18ea      	adds	r2, r5, r3
 8008d7a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
 8008d7c:	6054      	str	r4, [r2, #4]
 8008d7e:	ba5b      	rev16	r3, r3
 8008d80:	8113      	strh	r3, [r2, #8]
 8008d82:	bd30      	pop	{r4, r5, pc}
 8008d84:	1000cafe 	strdne	ip, [r0], -lr
 8008d88:	10009ca0 	andne	r9, r0, r0, lsr #25

08008d8c <net::arp_handle(t_arp*)>:
 8008d8c:	89c3      	ldrh	r3, [r0, #14]
 8008d8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008d92:	d17e      	bne.n	8008e92 <net::arp_handle(t_arp*)+0x106>
 8008d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d98:	8a03      	ldrh	r3, [r0, #16]
 8008d9a:	2b08      	cmp	r3, #8
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	d172      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da0:	7c83      	ldrb	r3, [r0, #18]
 8008da2:	2b06      	cmp	r3, #6
 8008da4:	d16f      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da6:	7cc3      	ldrb	r3, [r0, #19]
 8008da8:	2b04      	cmp	r3, #4
 8008daa:	d16c      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008dac:	f009 fafa 	bl	80123a4 <net::acd_arp_reply(t_arp*)>
 8008db0:	4a38      	ldr	r2, [pc, #224]	@ (8008e94 <net::arp_handle(t_arp*)+0x108>)
 8008db2:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 8008db6:	6817      	ldr	r7, [r2, #0]
 8008db8:	429f      	cmp	r7, r3
 8008dba:	d066      	beq.n	8008e8a <net::arp_handle(t_arp*)+0xfe>
 8008dbc:	6912      	ldr	r2, [r2, #16]
 8008dbe:	429a      	cmp	r2, r3
 8008dc0:	bf0d      	iteet	eq
 8008dc2:	f04f 0801 	moveq.w	r8, #1
 8008dc6:	f04f 0800 	movne.w	r8, #0
 8008dca:	2101      	movne	r1, #1
 8008dcc:	2100      	moveq	r1, #0
 8008dce:	69e6      	ldr	r6, [r4, #28]
 8008dd0:	4630      	mov	r0, r6
 8008dd2:	f009 fb6d 	bl	80124b0 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8008dd6:	f104 091c 	add.w	r9, r4, #28
 8008dda:	f104 0a16 	add.w	sl, r4, #22
 8008dde:	4605      	mov	r5, r0
 8008de0:	b350      	cbz	r0, 8008e38 <net::arp_handle(t_arp*)+0xac>
 8008de2:	2302      	movs	r3, #2
 8008de4:	6143      	str	r3, [r0, #20]
 8008de6:	f100 020c 	add.w	r2, r0, #12
 8008dea:	2300      	movs	r3, #0
 8008dec:	8243      	strh	r3, [r0, #18]
 8008dee:	4611      	mov	r1, r2
 8008df0:	4653      	mov	r3, sl
 8008df2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008df6:	f801 0b01 	strb.w	r0, [r1], #1
 8008dfa:	4599      	cmp	r9, r3
 8008dfc:	d1f9      	bne.n	8008df2 <net::arp_handle(t_arp*)+0x66>
 8008dfe:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008e02:	f1bc 0f00 	cmp.w	ip, #0
 8008e06:	d017      	beq.n	8008e38 <net::arp_handle(t_arp*)+0xac>
 8008e08:	4663      	mov	r3, ip
 8008e0a:	f105 0012 	add.w	r0, r5, #18
 8008e0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e12:	f803 1b01 	strb.w	r1, [r3], #1
 8008e16:	4282      	cmp	r2, r0
 8008e18:	d1f9      	bne.n	8008e0e <net::arp_handle(t_arp*)+0x82>
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8008e20:	f88c 3018 	strb.w	r3, [ip, #24]
 8008e24:	f88c 3019 	strb.w	r3, [ip, #25]
 8008e28:	f009 f996 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 8008e2c:	6868      	ldr	r0, [r5, #4]
 8008e2e:	b108      	cbz	r0, 8008e34 <net::arp_handle(t_arp*)+0xa8>
 8008e30:	f00d ff00 	bl	8016c34 <operator delete[](void*)>
 8008e34:	2300      	movs	r3, #0
 8008e36:	606b      	str	r3, [r5, #4]
 8008e38:	8aa3      	ldrh	r3, [r4, #20]
 8008e3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e3e:	d122      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e40:	f1b8 0f00 	cmp.w	r8, #0
 8008e44:	d01f      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e46:	42b7      	cmp	r7, r6
 8008e48:	d01d      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e4a:	4d13      	ldr	r5, [pc, #76]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e4c:	1da3      	adds	r3, r4, #6
 8008e4e:	f104 000c 	add.w	r0, r4, #12
 8008e52:	462a      	mov	r2, r5
 8008e54:	f813 1b01 	ldrb.w	r1, [r3], #1
 8008e58:	f802 1b01 	strb.w	r1, [r2], #1
 8008e5c:	4283      	cmp	r3, r0
 8008e5e:	d1f9      	bne.n	8008e54 <net::arp_handle(t_arp*)+0xc8>
 8008e60:	f8d4 6026 	ldr.w	r6, [r4, #38]	@ 0x26
 8008e64:	4b0d      	ldr	r3, [pc, #52]	@ (8008e9c <net::arp_handle(t_arp*)+0x110>)
 8008e66:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008e6a:	f803 2b01 	strb.w	r2, [r3], #1
 8008e6e:	45d1      	cmp	r9, sl
 8008e70:	d1f9      	bne.n	8008e66 <net::arp_handle(t_arp*)+0xda>
 8008e72:	69e3      	ldr	r3, [r4, #28]
 8008e74:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8008e78:	61ee      	str	r6, [r5, #28]
 8008e7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e7e:	4806      	ldr	r0, [pc, #24]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e80:	213c      	movs	r1, #60	@ 0x3c
 8008e82:	f009 b969 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 8008e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	f04f 0801 	mov.w	r8, #1
 8008e90:	e79d      	b.n	8008dce <net::arp_handle(t_arp*)+0x42>
 8008e92:	4770      	bx	lr
 8008e94:	20002088 	andcs	r2, r0, r8, lsl #1
 8008e98:	200020b8 	strhcs	r2, [r0], -r8
 8008e9c:	200020d8 	ldrdcs	r2, [r0], -r8

08008ea0 <net::ip_handle(t_ip4*)>:
 8008ea0:	7b81      	ldrb	r1, [r0, #14]
 8008ea2:	7dc2      	ldrb	r2, [r0, #23]
 8008ea4:	2945      	cmp	r1, #69	@ 0x45
 8008ea6:	d121      	bne.n	8008eec <net::ip_handle(t_ip4*)+0x4c>
 8008ea8:	3a01      	subs	r2, #1
 8008eaa:	b508      	push	{r3, lr}
 8008eac:	2a10      	cmp	r2, #16
 8008eae:	d80a      	bhi.n	8008ec6 <net::ip_handle(t_ip4*)+0x26>
 8008eb0:	e8df f002 	tbb	[pc, r2]
 8008eb4:	0909120e 	stmdbeq	r9, {r1, r2, r3, r9, ip}
 8008eb8:	09091609 	stmdbeq	r9, {r0, r3, r9, sl, ip}
 8008ebc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec4:	bd08000a 	stclt	0, cr0, [r8, #-40]	@ 0xffffffd8
 8008ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ecc:	f7ff bf1c 	b.w	8008d08 <net::udp_handle(t_udp*)>
 8008ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ed4:	f000 b80e 	b.w	8008ef4 <net::icmp_handle(t_icmp*)>
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008edc:	f7ff bb6c 	b.w	80085b8 <net::igmp_handle(t_igmp*)>
 8008ee0:	f7ff fc02 	bl	80086e8 <net::tcp_handle(t_tcp*)>
 8008ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ee8:	f7ff bbd8 	b.w	800869c <net::tcp_run()>
 8008eec:	2a02      	cmp	r2, #2
 8008eee:	d0f5      	beq.n	8008edc <net::ip_handle(t_ip4*)+0x3c>
 8008ef0:	4770      	bx	lr
 8008ef2:	bf00      	nop

08008ef4 <net::icmp_handle(t_icmp*)>:
 8008ef4:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 8008ef8:	2b08      	cmp	r3, #8
 8008efa:	d000      	beq.n	8008efe <net::icmp_handle(t_icmp*)+0xa>
 8008efc:	4770      	bx	lr
 8008efe:	f890 3023 	ldrb.w	r3, [r0, #35]	@ 0x23
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1fa      	bne.n	8008efc <net::icmp_handle(t_icmp*)+0x8>
 8008f06:	f100 0c06 	add.w	ip, r0, #6
 8008f0a:	4603      	mov	r3, r0
 8008f0c:	4662      	mov	r2, ip
 8008f0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	459c      	cmp	ip, r3
 8008f18:	d1f9      	bne.n	8008f0e <net::icmp_handle(t_icmp*)+0x1a>
 8008f1a:	4a14      	ldr	r2, [pc, #80]	@ (8008f6c <net::icmp_handle(t_icmp*)+0x78>)
 8008f1c:	f100 0c0c 	add.w	ip, r0, #12
 8008f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f24:	f803 1b01 	strb.w	r1, [r3], #1
 8008f28:	4563      	cmp	r3, ip
 8008f2a:	d1f9      	bne.n	8008f20 <net::icmp_handle(t_icmp*)+0x2c>
 8008f2c:	8a43      	ldrh	r3, [r0, #18]
 8008f2e:	4a10      	ldr	r2, [pc, #64]	@ (8008f70 <net::icmp_handle(t_icmp*)+0x7c>)
 8008f30:	f8d0 101e 	ldr.w	r1, [r0, #30]
 8008f34:	f8d0 c01a 	ldr.w	ip, [r0, #26]
 8008f38:	f8c0 c01e 	str.w	ip, [r0, #30]
 8008f3c:	43db      	mvns	r3, r3
 8008f3e:	8243      	strh	r3, [r0, #18]
 8008f40:	6913      	ldr	r3, [r2, #16]
 8008f42:	428b      	cmp	r3, r1
 8008f44:	8a01      	ldrh	r1, [r0, #16]
 8008f46:	bf18      	it	ne
 8008f48:	6813      	ldrne	r3, [r2, #0]
 8008f4a:	f8c0 301a 	str.w	r3, [r0, #26]
 8008f4e:	ba49      	rev16	r1, r1
 8008f50:	2300      	movs	r3, #0
 8008f52:	b289      	uxth	r1, r1
 8008f54:	7603      	strb	r3, [r0, #24]
 8008f56:	7643      	strb	r3, [r0, #25]
 8008f58:	f880 3022 	strb.w	r3, [r0, #34]	@ 0x22
 8008f5c:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8008f60:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8008f64:	310e      	adds	r1, #14
 8008f66:	f009 b8f7 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 8008f6a:	bf00      	nop
 8008f6c:	2000209c 	mulcs	r0, ip, r0
 8008f70:	20002088 	andcs	r2, r0, r8, lsl #1

08008f74 <__aeabi_d2f>:
 8008f74:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008f78:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8008f7c:	bf24      	itt	cs
 8008f7e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8008f82:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8008f86:	d90d      	bls.n	8008fa4 <__aeabi_d2f+0x30>
 8008f88:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8008f8c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008f90:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008f94:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8008f98:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008f9c:	bf08      	it	eq
 8008f9e:	f020 0001 	biceq.w	r0, r0, #1
 8008fa2:	4770      	bx	lr
 8008fa4:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8008fa8:	d121      	bne.n	8008fee <__aeabi_d2f+0x7a>
 8008faa:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8008fae:	bfbc      	itt	lt
 8008fb0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8008fb4:	4770      	bxlt	lr
 8008fb6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8008fba:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008fbe:	f1c2 0218 	rsb	r2, r2, #24
 8008fc2:	f1c2 0c20 	rsb	ip, r2, #32
 8008fc6:	fa10 f30c 	lsls.w	r3, r0, ip
 8008fca:	fa20 f002 	lsr.w	r0, r0, r2
 8008fce:	bf18      	it	ne
 8008fd0:	f040 0001 	orrne.w	r0, r0, #1
 8008fd4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008fd8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008fdc:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008fe0:	ea40 000c 	orr.w	r0, r0, ip
 8008fe4:	fa23 f302 	lsr.w	r3, r3, r2
 8008fe8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008fec:	e7cc      	b.n	8008f88 <__aeabi_d2f+0x14>
 8008fee:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008ff2:	d107      	bne.n	8009004 <__aeabi_d2f+0x90>
 8008ff4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008ff8:	bf1e      	ittt	ne
 8008ffa:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8008ffe:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8009002:	4770      	bxne	lr
 8009004:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8009008:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800900c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8009010:	4770      	bx	lr
 8009012:	bf00      	nop

08009014 <Reset_Handler>:
 8009014:	490f      	ldr	r1, [pc, #60]	@ (8009054 <ZeroBSSLoop+0x1e>)
 8009016:	4a10      	ldr	r2, [pc, #64]	@ (8009058 <ZeroBSSLoop+0x22>)
 8009018:	4b10      	ldr	r3, [pc, #64]	@ (800905c <ZeroBSSLoop+0x26>)
 800901a:	1a5b      	subs	r3, r3, r1
 800901c:	d005      	beq.n	800902a <ZeroBSS>

0800901e <CopyDataLoop>:
 800901e:	f812 4b01 	ldrb.w	r4, [r2], #1
 8009022:	f801 4b01 	strb.w	r4, [r1], #1
 8009026:	3b01      	subs	r3, #1
 8009028:	dcf9      	bgt.n	800901e <CopyDataLoop>

0800902a <ZeroBSS>:
 800902a:	4a0d      	ldr	r2, [pc, #52]	@ (8009060 <ZeroBSSLoop+0x2a>)
 800902c:	4b0d      	ldr	r3, [pc, #52]	@ (8009064 <ZeroBSSLoop+0x2e>)
 800902e:	eba3 0302 	sub.w	r3, r3, r2
 8009032:	f04f 0400 	mov.w	r4, #0

08009036 <ZeroBSSLoop>:
 8009036:	f842 4b04 	str.w	r4, [r2], #4
 800903a:	3b04      	subs	r3, #4
 800903c:	dcfb      	bgt.n	8009036 <ZeroBSSLoop>
 800903e:	f00b facd 	bl	80145dc <stack_debug_init>
 8009042:	f00b fb2f 	bl	80146a4 <SystemInit>
 8009046:	f00d f87b 	bl	8016140 <__libc_init_array>
 800904a:	f000 fcad 	bl	80099a8 <main>
 800904e:	4770      	bx	lr
 8009050:	bf00      	nop
 8009052:	00000000 	andeq	r0, r0, r0
 8009056:	ad3c2000 	ldcge	0, cr2, [ip, #-0]
 800905a:	00740801 	rsbseq	r0, r4, r1, lsl #16
 800905e:	00742000 	rsbseq	r2, r4, r0
 8009062:	9b2c2000 	blls	8b1106a <_sidata+0xaf632e>
 8009066:	 	ldrb	r2, [lr, r0]!

08009068 <ADC_IRQHandler>:
 8009068:	e7fe      	b.n	8009068 <ADC_IRQHandler>

0800906a <HardFault_Handler>:
 800906a:	f01e 0f04 	tst.w	lr, #4
 800906e:	bf0c      	ite	eq
 8009070:	f3ef 8008 	mrseq	r0, MSP
 8009074:	f3ef 8009 	mrsne	r0, PSP
 8009078:	4671      	mov	r1, lr
 800907a:	f000 b801 	b.w	8009080 <hardfault_handler>
 800907e:	4770      	bx	lr

08009080 <hardfault_handler>:
 8009080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009084:	4d2f      	ldr	r5, [pc, #188]	@ (8009144 <hardfault_handler+0xc4>)
 8009086:	b087      	sub	sp, #28
 8009088:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 800908a:	9301      	str	r3, [sp, #4]
 800908c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800908e:	9302      	str	r3, [sp, #8]
 8009090:	e9d0 9303 	ldrd	r9, r3, [r0, #12]
 8009094:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 8009096:	9303      	str	r3, [sp, #12]
 8009098:	e9d0 ba01 	ldrd	fp, sl, [r0, #4]
 800909c:	69c3      	ldr	r3, [r0, #28]
 800909e:	9304      	str	r3, [sp, #16]
 80090a0:	e9d0 7605 	ldrd	r7, r6, [r0, #20]
 80090a4:	4688      	mov	r8, r1
 80090a6:	6801      	ldr	r1, [r0, #0]
 80090a8:	4827      	ldr	r0, [pc, #156]	@ (8009148 <hardfault_handler+0xc8>)
 80090aa:	9105      	str	r1, [sp, #20]
 80090ac:	f00d fb70 	bl	8016790 <printf>
 80090b0:	4826      	ldr	r0, [pc, #152]	@ (800914c <hardfault_handler+0xcc>)
 80090b2:	f00d fb6d 	bl	8016790 <printf>
 80090b6:	9905      	ldr	r1, [sp, #20]
 80090b8:	4825      	ldr	r0, [pc, #148]	@ (8009150 <hardfault_handler+0xd0>)
 80090ba:	f00d fb69 	bl	8016790 <printf>
 80090be:	4659      	mov	r1, fp
 80090c0:	4824      	ldr	r0, [pc, #144]	@ (8009154 <hardfault_handler+0xd4>)
 80090c2:	f00d fb65 	bl	8016790 <printf>
 80090c6:	4651      	mov	r1, sl
 80090c8:	4823      	ldr	r0, [pc, #140]	@ (8009158 <hardfault_handler+0xd8>)
 80090ca:	f00d fb61 	bl	8016790 <printf>
 80090ce:	4649      	mov	r1, r9
 80090d0:	4822      	ldr	r0, [pc, #136]	@ (800915c <hardfault_handler+0xdc>)
 80090d2:	f00d fb5d 	bl	8016790 <printf>
 80090d6:	9903      	ldr	r1, [sp, #12]
 80090d8:	4821      	ldr	r0, [pc, #132]	@ (8009160 <hardfault_handler+0xe0>)
 80090da:	f00d fb59 	bl	8016790 <printf>
 80090de:	4639      	mov	r1, r7
 80090e0:	4820      	ldr	r0, [pc, #128]	@ (8009164 <hardfault_handler+0xe4>)
 80090e2:	f00d fb55 	bl	8016790 <printf>
 80090e6:	4631      	mov	r1, r6
 80090e8:	481f      	ldr	r0, [pc, #124]	@ (8009168 <hardfault_handler+0xe8>)
 80090ea:	f00d fb51 	bl	8016790 <printf>
 80090ee:	9904      	ldr	r1, [sp, #16]
 80090f0:	481e      	ldr	r0, [pc, #120]	@ (800916c <hardfault_handler+0xec>)
 80090f2:	f00d fb4d 	bl	8016790 <printf>
 80090f6:	481e      	ldr	r0, [pc, #120]	@ (8009170 <hardfault_handler+0xf0>)
 80090f8:	f00d fb4a 	bl	8016790 <printf>
 80090fc:	4621      	mov	r1, r4
 80090fe:	481d      	ldr	r0, [pc, #116]	@ (8009174 <hardfault_handler+0xf4>)
 8009100:	f00d fb46 	bl	8016790 <printf>
 8009104:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 8009106:	481c      	ldr	r0, [pc, #112]	@ (8009178 <hardfault_handler+0xf8>)
 8009108:	f00d fb42 	bl	8016790 <printf>
 800910c:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 800910e:	481b      	ldr	r0, [pc, #108]	@ (800917c <hardfault_handler+0xfc>)
 8009110:	f00d fb3e 	bl	8016790 <printf>
 8009114:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 8009116:	481a      	ldr	r0, [pc, #104]	@ (8009180 <hardfault_handler+0x100>)
 8009118:	f00d fb3a 	bl	8016790 <printf>
 800911c:	0622      	lsls	r2, r4, #24
 800911e:	d503      	bpl.n	8009128 <hardfault_handler+0xa8>
 8009120:	9902      	ldr	r1, [sp, #8]
 8009122:	4818      	ldr	r0, [pc, #96]	@ (8009184 <hardfault_handler+0x104>)
 8009124:	f00d fb34 	bl	8016790 <printf>
 8009128:	0423      	lsls	r3, r4, #16
 800912a:	d503      	bpl.n	8009134 <hardfault_handler+0xb4>
 800912c:	9901      	ldr	r1, [sp, #4]
 800912e:	4816      	ldr	r0, [pc, #88]	@ (8009188 <hardfault_handler+0x108>)
 8009130:	f00d fb2e 	bl	8016790 <printf>
 8009134:	4815      	ldr	r0, [pc, #84]	@ (800918c <hardfault_handler+0x10c>)
 8009136:	f00d fb2b 	bl	8016790 <printf>
 800913a:	4815      	ldr	r0, [pc, #84]	@ (8009190 <hardfault_handler+0x110>)
 800913c:	4641      	mov	r1, r8
 800913e:	f00d fb27 	bl	8016790 <printf>
 8009142:	e7fe      	b.n	8009142 <hardfault_handler+0xc2>
 8009144:	e000ed00 	and	lr, r0, r0, lsl #26
 8009148:	08016d1c 	stmdaeq	r1, {r2, r3, r4, r8, sl, fp, sp, lr}
 800914c:	08016d29 	stmdaeq	r1, {r0, r3, r5, r8, sl, fp, sp, lr}
 8009150:	08016d39 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, fp, sp, lr}
 8009154:	08016d44 	stmdaeq	r1, {r2, r6, r8, sl, fp, sp, lr}
 8009158:	08016d4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sl, fp, sp, lr}
 800915c:	08016d5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, sl, fp, sp, lr}
 8009160:	08016d65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
 8009164:	08016d70 	stmdaeq	r1, {r4, r5, r6, r8, sl, fp, sp, lr}
 8009168:	08016d7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, fp, sp, lr}
 800916c:	08016d86 	stmdaeq	r1, {r1, r2, r7, r8, sl, fp, sp, lr}
 8009170:	08016d91 	stmdaeq	r1, {r0, r4, r7, r8, sl, fp, sp, lr}
 8009174:	08016d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, sp, lr}
 8009178:	08016da9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, fp, sp, lr}
 800917c:	08016db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, sp, lr}
 8009180:	08016dc1 	stmdaeq	r1, {r0, r6, r7, r8, sl, fp, sp, lr}
 8009184:	08016dcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, sl, fp, sp, lr}
 8009188:	08016dda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, fp, sp, lr}
 800918c:	08016de6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, sl, fp, sp, lr}
 8009190:	08016dee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, sl, fp, sp, lr}

08009194 <LightSet::SetDmxStartAddress(unsigned short)>:
 8009194:	2000      	movs	r0, #0
 8009196:	4770      	bx	lr

08009198 <LightSet::GetDmxStartAddress()>:
 8009198:	2001      	movs	r0, #1
 800919a:	4770      	bx	lr

0800919c <LightSet::GetDmxFootprint()>:
 800919c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80091a0:	4770      	bx	lr

080091a2 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 80091a2:	2300      	movs	r3, #0
 80091a4:	2001      	movs	r0, #1
 80091a6:	7093      	strb	r3, [r2, #2]
 80091a8:	8010      	strh	r0, [r2, #0]
 80091aa:	4770      	bx	lr

080091ac <DmxSend::GetRefreshRate()>:
 80091ac:	4b03      	ldr	r3, [pc, #12]	@ (80091bc <DmxSend::GetRefreshRate()+0x10>)
 80091ae:	4804      	ldr	r0, [pc, #16]	@ (80091c0 <DmxSend::GetRefreshRate()+0x14>)
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	681b      	ldr	r3, [r3, #0]
 80091b4:	fbb0 f0f3 	udiv	r0, r0, r3
 80091b8:	4770      	bx	lr
 80091ba:	bf00      	nop
 80091bc:	20001380 	andcs	r1, r0, r0, lsl #7
 80091c0:	000f4240 	andeq	r4, pc, r0, asr #4

080091c4 <DmxSend::~DmxSend()>:
 80091c4:	4770      	bx	lr
	...

080091c8 <DmxSend::Blackout(bool)>:
 80091c8:	4b01      	ldr	r3, [pc, #4]	@ (80091d0 <DmxSend::Blackout(bool)+0x8>)
 80091ca:	6818      	ldr	r0, [r3, #0]
 80091cc:	f006 b970 	b.w	800f4b0 <Dmx::Blackout()>
 80091d0:	20001380 	andcs	r1, r0, r0, lsl #7

080091d4 <DmxSend::FullOn()>:
 80091d4:	4b01      	ldr	r3, [pc, #4]	@ (80091dc <DmxSend::FullOn()+0x8>)
 80091d6:	6818      	ldr	r0, [r3, #0]
 80091d8:	f006 b9d0 	b.w	800f57c <Dmx::FullOn()>
 80091dc:	20001380 	andcs	r1, r0, r0, lsl #7

080091e0 <DmxSend::GetOutputStyle(unsigned long) const>:
 80091e0:	b508      	push	{r3, lr}
 80091e2:	4b04      	ldr	r3, [pc, #16]	@ (80091f4 <DmxSend::GetOutputStyle(unsigned long) const+0x14>)
 80091e4:	6818      	ldr	r0, [r3, #0]
 80091e6:	f006 f909 	bl	800f3fc <Dmx::GetOutputStyle(unsigned long) const>
 80091ea:	1e43      	subs	r3, r0, #1
 80091ec:	4258      	negs	r0, r3
 80091ee:	4158      	adcs	r0, r3
 80091f0:	bd08      	pop	{r3, pc}
 80091f2:	bf00      	nop
 80091f4:	20001380 	andcs	r1, r0, r0, lsl #7

080091f8 <DmxSend::SetOutputStyle(unsigned long, lightset::OutputStyle)>:
 80091f8:	1e53      	subs	r3, r2, #1
 80091fa:	425a      	negs	r2, r3
 80091fc:	415a      	adcs	r2, r3
 80091fe:	4b02      	ldr	r3, [pc, #8]	@ (8009208 <DmxSend::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x10>)
 8009200:	6818      	ldr	r0, [r3, #0]
 8009202:	f006 b895 	b.w	800f330 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>
 8009206:	bf00      	nop
 8009208:	20001380 	andcs	r1, r0, r0, lsl #7

0800920c <DmxSend::Sync(unsigned long)>:
 800920c:	b570      	push	{r4, r5, r6, lr}
 800920e:	4d14      	ldr	r5, [pc, #80]	@ (8009260 <DmxSend::Sync(unsigned long)+0x54>)
 8009210:	f240 6304 	movw	r3, #1540	@ 0x604
 8009214:	fb03 5301 	mla	r3, r3, r1, r5
 8009218:	460c      	mov	r4, r1
 800921a:	f8d3 3600 	ldr.w	r3, [r3, #1536]	@ 0x600
 800921e:	b92b      	cbnz	r3, 800922c <DmxSend::Sync(unsigned long)+0x20>
 8009220:	4b10      	ldr	r3, [pc, #64]	@ (8009264 <DmxSend::Sync(unsigned long)+0x58>)
 8009222:	4a11      	ldr	r2, [pc, #68]	@ (8009268 <DmxSend::Sync(unsigned long)+0x5c>)
 8009224:	4811      	ldr	r0, [pc, #68]	@ (800926c <DmxSend::Sync(unsigned long)+0x60>)
 8009226:	2163      	movs	r1, #99	@ 0x63
 8009228:	f00d fb92 	bl	8016950 <__assert_func>
 800922c:	4b10      	ldr	r3, [pc, #64]	@ (8009270 <DmxSend::Sync(unsigned long)+0x64>)
 800922e:	2c01      	cmp	r4, #1
 8009230:	681e      	ldr	r6, [r3, #0]
 8009232:	d905      	bls.n	8009240 <DmxSend::Sync(unsigned long)+0x34>
 8009234:	4b0f      	ldr	r3, [pc, #60]	@ (8009274 <DmxSend::Sync(unsigned long)+0x68>)
 8009236:	4a10      	ldr	r2, [pc, #64]	@ (8009278 <DmxSend::Sync(unsigned long)+0x6c>)
 8009238:	4810      	ldr	r0, [pc, #64]	@ (800927c <DmxSend::Sync(unsigned long)+0x70>)
 800923a:	21b5      	movs	r1, #181	@ 0xb5
 800923c:	f00d fb88 	bl	8016950 <__assert_func>
 8009240:	f240 6204 	movw	r2, #1540	@ 0x604
 8009244:	4362      	muls	r2, r4
 8009246:	18ab      	adds	r3, r5, r2
 8009248:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800924c:	442a      	add	r2, r5
 800924e:	4621      	mov	r1, r4
 8009250:	4630      	mov	r0, r6
 8009252:	f8d3 3600 	ldr.w	r3, [r3, #1536]	@ 0x600
 8009256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800925a:	f006 b8d9 	b.w	800f410 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>
 800925e:	bf00      	nop
 8009260:	20000078 	andcs	r0, r0, r8, ror r0
 8009264:	08016e02 	stmdaeq	r1, {r1, r9, sl, fp, sp, lr}
 8009268:	08016e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, sp, lr}
 800926c:	08016e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, sp, lr}
 8009270:	20001380 	andcs	r1, r0, r0, lsl #7
 8009274:	08016e4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}
 8009278:	08016e62 	stmdaeq	r1, {r1, r5, r6, r9, sl, fp, sp, lr}
 800927c:	08016e6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sl, fp, sp, lr}

08009280 <DmxSend::~DmxSend()>:
 8009280:	b510      	push	{r4, lr}
 8009282:	2108      	movs	r1, #8
 8009284:	4604      	mov	r4, r0
 8009286:	f00d fcd7 	bl	8016c38 <operator delete(void*, unsigned int)>
 800928a:	4620      	mov	r0, r4
 800928c:	bd10      	pop	{r4, pc}
	...

08009290 <DmxSend::Print()>:
 8009290:	b510      	push	{r4, lr}
 8009292:	4c10      	ldr	r4, [pc, #64]	@ (80092d4 <DmxSend::Print()+0x44>)
 8009294:	4810      	ldr	r0, [pc, #64]	@ (80092d8 <DmxSend::Print()+0x48>)
 8009296:	f00d fad0 	bl	801683a <puts>
 800929a:	6820      	ldr	r0, [r4, #0]
 800929c:	f005 ffa4 	bl	800f1e8 <Dmx::GetDmxBreakTime() const>
 80092a0:	4601      	mov	r1, r0
 80092a2:	480e      	ldr	r0, [pc, #56]	@ (80092dc <DmxSend::Print()+0x4c>)
 80092a4:	f00d fa74 	bl	8016790 <printf>
 80092a8:	6820      	ldr	r0, [r4, #0]
 80092aa:	f005 ffd3 	bl	800f254 <Dmx::GetDmxMabTime() const>
 80092ae:	4601      	mov	r1, r0
 80092b0:	480b      	ldr	r0, [pc, #44]	@ (80092e0 <DmxSend::Print()+0x50>)
 80092b2:	f00d fa6d 	bl	8016790 <printf>
 80092b6:	6823      	ldr	r3, [r4, #0]
 80092b8:	490a      	ldr	r1, [pc, #40]	@ (80092e4 <DmxSend::Print()+0x54>)
 80092ba:	681b      	ldr	r3, [r3, #0]
 80092bc:	480a      	ldr	r0, [pc, #40]	@ (80092e8 <DmxSend::Print()+0x58>)
 80092be:	fbb1 f1f3 	udiv	r1, r1, r3
 80092c2:	f00d fa65 	bl	8016790 <printf>
 80092c6:	6823      	ldr	r3, [r4, #0]
 80092c8:	4808      	ldr	r0, [pc, #32]	@ (80092ec <DmxSend::Print()+0x5c>)
 80092ca:	8a19      	ldrh	r1, [r3, #16]
 80092cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092d0:	f00d ba5e 	b.w	8016790 <printf>
 80092d4:	20001380 	andcs	r1, r0, r0, lsl #7
 80092d8:	08016e91 	stmdaeq	r1, {r0, r4, r7, r9, sl, fp, sp, lr}
 80092dc:	08016e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, sp, lr}
 80092e0:	08016eae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, sl, fp, sp, lr}
 80092e4:	000f4240 	andeq	r4, pc, r0, asr #4
 80092e8:	08016ec2 	stmdaeq	r1, {r1, r6, r7, r9, sl, fp, sp, lr}
 80092ec:	08016ed6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, sl, fp, sp, lr}

080092f0 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)>:
 80092f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092f2:	2907      	cmp	r1, #7
 80092f4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80092f8:	460c      	mov	r4, r1
 80092fa:	4615      	mov	r5, r2
 80092fc:	461e      	mov	r6, r3
 80092fe:	d905      	bls.n	800930c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x1c>
 8009300:	4b11      	ldr	r3, [pc, #68]	@ (8009348 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x58>)
 8009302:	4a12      	ldr	r2, [pc, #72]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009304:	4812      	ldr	r0, [pc, #72]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009306:	2157      	movs	r1, #87	@ 0x57
 8009308:	f00d fb22 	bl	8016950 <__assert_func>
 800930c:	b92d      	cbnz	r5, 800931a <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x2a>
 800930e:	4b11      	ldr	r3, [pc, #68]	@ (8009354 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x64>)
 8009310:	4a0e      	ldr	r2, [pc, #56]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009312:	480f      	ldr	r0, [pc, #60]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009314:	2158      	movs	r1, #88	@ 0x58
 8009316:	f00d fb1b 	bl	8016950 <__assert_func>
 800931a:	b92e      	cbnz	r6, 8009328 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x38>
 800931c:	4b0e      	ldr	r3, [pc, #56]	@ (8009358 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x68>)
 800931e:	4a0b      	ldr	r2, [pc, #44]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009320:	480b      	ldr	r0, [pc, #44]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009322:	2159      	movs	r1, #89	@ 0x59
 8009324:	f00d fb14 	bl	8016950 <__assert_func>
 8009328:	b167      	cbz	r7, 8009344 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x54>
 800932a:	4f0c      	ldr	r7, [pc, #48]	@ (800935c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x6c>)
 800932c:	4621      	mov	r1, r4
 800932e:	6838      	ldr	r0, [r7, #0]
 8009330:	4633      	mov	r3, r6
 8009332:	462a      	mov	r2, r5
 8009334:	f006 f86c 	bl	800f410 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>
 8009338:	6838      	ldr	r0, [r7, #0]
 800933a:	4621      	mov	r1, r4
 800933c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009340:	f006 b984 	b.w	800f64c <Dmx::StartOutput(unsigned long)>
 8009344:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009346:	bf00      	nop
 8009348:	08016eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 800934c:	08016f00 	stmdaeq	r1, {r8, r9, sl, fp, sp, lr}
 8009350:	08016e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, sp, lr}
 8009354:	08016f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, sp, lr}
 8009358:	08016f19 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, fp, sp, lr}
 800935c:	20001380 	andcs	r1, r0, r0, lsl #7

08009360 <DmxSend::Stop(unsigned long)>:
 8009360:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009362:	2343      	movs	r3, #67	@ 0x43
 8009364:	460c      	mov	r4, r1
 8009366:	4a1c      	ldr	r2, [pc, #112]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 8009368:	491c      	ldr	r1, [pc, #112]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800936a:	4605      	mov	r5, r0
 800936c:	481c      	ldr	r0, [pc, #112]	@ (80093e0 <DmxSend::Stop(unsigned long)+0x80>)
 800936e:	f00d fa0f 	bl	8016790 <printf>
 8009372:	b2e2      	uxtb	r2, r4
 8009374:	2301      	movs	r3, #1
 8009376:	4093      	lsls	r3, r2
 8009378:	792a      	ldrb	r2, [r5, #4]
 800937a:	4917      	ldr	r1, [pc, #92]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 800937c:	4819      	ldr	r0, [pc, #100]	@ (80093e4 <DmxSend::Stop(unsigned long)+0x84>)
 800937e:	4393      	bics	r3, r2
 8009380:	bf0c      	ite	eq
 8009382:	2301      	moveq	r3, #1
 8009384:	2300      	movne	r3, #0
 8009386:	e9cd 4300 	strd	r4, r3, [sp]
 800938a:	4a14      	ldr	r2, [pc, #80]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800938c:	2344      	movs	r3, #68	@ 0x44
 800938e:	f00d f9ff 	bl	8016790 <printf>
 8009392:	2c07      	cmp	r4, #7
 8009394:	d905      	bls.n	80093a2 <DmxSend::Stop(unsigned long)+0x42>
 8009396:	4b14      	ldr	r3, [pc, #80]	@ (80093e8 <DmxSend::Stop(unsigned long)+0x88>)
 8009398:	4a0f      	ldr	r2, [pc, #60]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 800939a:	4810      	ldr	r0, [pc, #64]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800939c:	2146      	movs	r1, #70	@ 0x46
 800939e:	f00d fad7 	bl	8016950 <__assert_func>
 80093a2:	792b      	ldrb	r3, [r5, #4]
 80093a4:	2201      	movs	r2, #1
 80093a6:	40a2      	lsls	r2, r4
 80093a8:	ea32 0103 	bics.w	r1, r2, r3
 80093ac:	d008      	beq.n	80093c0 <DmxSend::Stop(unsigned long)+0x60>
 80093ae:	2349      	movs	r3, #73	@ 0x49
 80093b0:	4a09      	ldr	r2, [pc, #36]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 80093b2:	490a      	ldr	r1, [pc, #40]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 80093b4:	480d      	ldr	r0, [pc, #52]	@ (80093ec <DmxSend::Stop(unsigned long)+0x8c>)
 80093b6:	b003      	add	sp, #12
 80093b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80093bc:	f00d b9e8 	b.w	8016790 <printf>
 80093c0:	ea23 0302 	bic.w	r3, r3, r2
 80093c4:	480a      	ldr	r0, [pc, #40]	@ (80093f0 <DmxSend::Stop(unsigned long)+0x90>)
 80093c6:	712b      	strb	r3, [r5, #4]
 80093c8:	2300      	movs	r3, #0
 80093ca:	461a      	mov	r2, r3
 80093cc:	6800      	ldr	r0, [r0, #0]
 80093ce:	4621      	mov	r1, r4
 80093d0:	f005 fdfc 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80093d4:	2353      	movs	r3, #83	@ 0x53
 80093d6:	e7eb      	b.n	80093b0 <DmxSend::Stop(unsigned long)+0x50>
 80093d8:	08016f26 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, fp, sp, lr}
 80093dc:	08016e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, sp, lr}
 80093e0:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 80093e4:	08016f39 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sl, fp, sp, lr}
 80093e8:	08016eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 80093ec:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 80093f0:	20001380 	andcs	r1, r0, r0, lsl #7

080093f4 <DmxSend::Start(unsigned long)>:
 80093f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093f6:	232d      	movs	r3, #45	@ 0x2d
 80093f8:	460c      	mov	r4, r1
 80093fa:	4a19      	ldr	r2, [pc, #100]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 80093fc:	4919      	ldr	r1, [pc, #100]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 80093fe:	4605      	mov	r5, r0
 8009400:	4819      	ldr	r0, [pc, #100]	@ (8009468 <DmxSend::Start(unsigned long)+0x74>)
 8009402:	f00d f9c5 	bl	8016790 <printf>
 8009406:	4a17      	ldr	r2, [pc, #92]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 8009408:	4915      	ldr	r1, [pc, #84]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 800940a:	4818      	ldr	r0, [pc, #96]	@ (800946c <DmxSend::Start(unsigned long)+0x78>)
 800940c:	9400      	str	r4, [sp, #0]
 800940e:	232e      	movs	r3, #46	@ 0x2e
 8009410:	f00d f9be 	bl	8016790 <printf>
 8009414:	2c07      	cmp	r4, #7
 8009416:	d905      	bls.n	8009424 <DmxSend::Start(unsigned long)+0x30>
 8009418:	4b15      	ldr	r3, [pc, #84]	@ (8009470 <DmxSend::Start(unsigned long)+0x7c>)
 800941a:	4a11      	ldr	r2, [pc, #68]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 800941c:	4811      	ldr	r0, [pc, #68]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 800941e:	2130      	movs	r1, #48	@ 0x30
 8009420:	f00d fa96 	bl	8016950 <__assert_func>
 8009424:	792a      	ldrb	r2, [r5, #4]
 8009426:	2301      	movs	r3, #1
 8009428:	fa03 f104 	lsl.w	r1, r3, r4
 800942c:	ea31 0002 	bics.w	r0, r1, r2
 8009430:	d108      	bne.n	8009444 <DmxSend::Start(unsigned long)+0x50>
 8009432:	2333      	movs	r3, #51	@ 0x33
 8009434:	4a0a      	ldr	r2, [pc, #40]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 8009436:	490b      	ldr	r1, [pc, #44]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 8009438:	480e      	ldr	r0, [pc, #56]	@ (8009474 <DmxSend::Start(unsigned long)+0x80>)
 800943a:	b003      	add	sp, #12
 800943c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009440:	f00d b9a6 	b.w	8016790 <printf>
 8009444:	430a      	orrs	r2, r1
 8009446:	712a      	strb	r2, [r5, #4]
 8009448:	4d0b      	ldr	r5, [pc, #44]	@ (8009478 <DmxSend::Start(unsigned long)+0x84>)
 800944a:	2200      	movs	r2, #0
 800944c:	6828      	ldr	r0, [r5, #0]
 800944e:	4621      	mov	r1, r4
 8009450:	f005 fdbc 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8009454:	6828      	ldr	r0, [r5, #0]
 8009456:	4621      	mov	r1, r4
 8009458:	f005 ffd0 	bl	800f3fc <Dmx::GetOutputStyle(unsigned long) const>
 800945c:	233f      	movs	r3, #63	@ 0x3f
 800945e:	e7e9      	b.n	8009434 <DmxSend::Start(unsigned long)+0x40>
 8009460:	08016f6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 8009464:	08016e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, sp, lr}
 8009468:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 800946c:	08016f74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 8009470:	08016eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 8009474:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 8009478:	20001380 	andcs	r1, r0, r0, lsl #7

0800947c <DmxSend::Sync()>:
 800947c:	b538      	push	{r3, r4, r5, lr}
 800947e:	4b10      	ldr	r3, [pc, #64]	@ (80094c0 <DmxSend::Sync()+0x44>)
 8009480:	4d10      	ldr	r5, [pc, #64]	@ (80094c4 <DmxSend::Sync()+0x48>)
 8009482:	4604      	mov	r4, r0
 8009484:	6818      	ldr	r0, [r3, #0]
 8009486:	f006 f8fb 	bl	800f680 <Dmx::Sync()>
 800948a:	f8d5 3600 	ldr.w	r3, [r5, #1536]	@ 0x600
 800948e:	b14b      	cbz	r3, 80094a4 <DmxSend::Sync()+0x28>
 8009490:	2300      	movs	r3, #0
 8009492:	f8c5 3600 	str.w	r3, [r5, #1536]	@ 0x600
 8009496:	7921      	ldrb	r1, [r4, #4]
 8009498:	f011 0101 	ands.w	r1, r1, #1
 800949c:	d102      	bne.n	80094a4 <DmxSend::Sync()+0x28>
 800949e:	4620      	mov	r0, r4
 80094a0:	f7ff ffa8 	bl	80093f4 <DmxSend::Start(unsigned long)>
 80094a4:	f8d5 3c04 	ldr.w	r3, [r5, #3076]	@ 0xc04
 80094a8:	b14b      	cbz	r3, 80094be <DmxSend::Sync()+0x42>
 80094aa:	2300      	movs	r3, #0
 80094ac:	f8c5 3c04 	str.w	r3, [r5, #3076]	@ 0xc04
 80094b0:	7923      	ldrb	r3, [r4, #4]
 80094b2:	079b      	lsls	r3, r3, #30
 80094b4:	d403      	bmi.n	80094be <DmxSend::Sync()+0x42>
 80094b6:	2101      	movs	r1, #1
 80094b8:	4620      	mov	r0, r4
 80094ba:	f7ff ff9b 	bl	80093f4 <DmxSend::Start(unsigned long)>
 80094be:	bd38      	pop	{r3, r4, r5, pc}
 80094c0:	20001380 	andcs	r1, r0, r0, lsl #7
 80094c4:	20000078 	andcs	r0, r0, r8, ror r0

080094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>:
 80094c8:	b110      	cbz	r0, 80094d0 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]+0x8>
 80094ca:	6803      	ldr	r3, [r0, #0]
 80094cc:	6a1b      	ldr	r3, [r3, #32]
 80094ce:	4718      	bx	r3
 80094d0:	4770      	bx	lr

080094d2 <Display::PutChar(int) [clone .isra.0]>:
 80094d2:	b110      	cbz	r0, 80094da <Display::PutChar(int) [clone .isra.0]+0x8>
 80094d4:	6803      	ldr	r3, [r0, #0]
 80094d6:	695b      	ldr	r3, [r3, #20]
 80094d8:	4718      	bx	r3
 80094da:	4770      	bx	lr

080094dc <net::dhcp_run()>:
 80094dc:	b510      	push	{r4, lr}
 80094de:	4b11      	ldr	r3, [pc, #68]	@ (8009524 <net::dhcp_run()+0x48>)
 80094e0:	6a1c      	ldr	r4, [r3, #32]
 80094e2:	b086      	sub	sp, #24
 80094e4:	b1cc      	cbz	r4, 800951a <net::dhcp_run()+0x3e>
 80094e6:	a904      	add	r1, sp, #16
 80094e8:	6820      	ldr	r0, [r4, #0]
 80094ea:	f10d 030e 	add.w	r3, sp, #14
 80094ee:	aa05      	add	r2, sp, #20
 80094f0:	f008 f9a6 	bl	8011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 80094f4:	4601      	mov	r1, r0
 80094f6:	b180      	cbz	r0, 800951a <net::dhcp_run()+0x3e>
 80094f8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80094fc:	2b43      	cmp	r3, #67	@ 0x43
 80094fe:	d10c      	bne.n	800951a <net::dhcp_run()+0x3e>
 8009500:	9804      	ldr	r0, [sp, #16]
 8009502:	6862      	ldr	r2, [r4, #4]
 8009504:	6843      	ldr	r3, [r0, #4]
 8009506:	4293      	cmp	r3, r2
 8009508:	d009      	beq.n	800951e <net::dhcp_run()+0x42>
 800950a:	e9cd 3200 	strd	r3, r2, [sp]
 800950e:	4906      	ldr	r1, [pc, #24]	@ (8009528 <net::dhcp_run()+0x4c>)
 8009510:	4a06      	ldr	r2, [pc, #24]	@ (800952c <net::dhcp_run()+0x50>)
 8009512:	4807      	ldr	r0, [pc, #28]	@ (8009530 <net::dhcp_run()+0x54>)
 8009514:	2379      	movs	r3, #121	@ 0x79
 8009516:	f00d f93b 	bl	8016790 <printf>
 800951a:	b006      	add	sp, #24
 800951c:	bd10      	pop	{r4, pc}
 800951e:	f007 fc19 	bl	8010d54 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
 8009522:	e7fa      	b.n	800951a <net::dhcp_run()+0x3e>
 8009524:	20002088 	andcs	r2, r0, r8, lsl #1
 8009528:	08016fb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, sp, lr}
 800952c:	08016f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp, sp, lr}
 8009530:	08016fc0 	stmdaeq	r1, {r6, r7, r8, r9, sl, fp, sp, lr}

08009534 <Display::TextStatus(char const*)>:
 8009534:	6983      	ldr	r3, [r0, #24]
 8009536:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800953a:	4604      	mov	r4, r0
 800953c:	460d      	mov	r5, r1
 800953e:	2b00      	cmp	r3, #0
 8009540:	d038      	beq.n	80095b4 <Display::TextStatus(char const*)+0x80>
 8009542:	e9d3 6701 	ldrd	r6, r7, [r3, #4]
 8009546:	b92e      	cbnz	r6, 8009554 <Display::TextStatus(char const*)+0x20>
 8009548:	4b1b      	ldr	r3, [pc, #108]	@ (80095b8 <Display::TextStatus(char const*)+0x84>)
 800954a:	4a1c      	ldr	r2, [pc, #112]	@ (80095bc <Display::TextStatus(char const*)+0x88>)
 800954c:	481c      	ldr	r0, [pc, #112]	@ (80095c0 <Display::TextStatus(char const*)+0x8c>)
 800954e:	21ae      	movs	r1, #174	@ 0xae
 8009550:	f00d f9fe 	bl	8016950 <__assert_func>
 8009554:	b92f      	cbnz	r7, 8009562 <Display::TextStatus(char const*)+0x2e>
 8009556:	4b1b      	ldr	r3, [pc, #108]	@ (80095c4 <Display::TextStatus(char const*)+0x90>)
 8009558:	4a18      	ldr	r2, [pc, #96]	@ (80095bc <Display::TextStatus(char const*)+0x88>)
 800955a:	4819      	ldr	r0, [pc, #100]	@ (80095c0 <Display::TextStatus(char const*)+0x8c>)
 800955c:	21af      	movs	r1, #175	@ 0xaf
 800955e:	f00d f9f7 	bl	8016950 <__assert_func>
 8009562:	f107 39ff 	add.w	r9, r7, #4294967295	@ 0xffffffff
 8009566:	69a0      	ldr	r0, [r4, #24]
 8009568:	464a      	mov	r2, r9
 800956a:	2100      	movs	r1, #0
 800956c:	f7ff ffac 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009570:	f04f 0800 	mov.w	r8, #0
 8009574:	3e01      	subs	r6, #1
 8009576:	4546      	cmp	r6, r8
 8009578:	69a0      	ldr	r0, [r4, #24]
 800957a:	d815      	bhi.n	80095a8 <Display::TextStatus(char const*)+0x74>
 800957c:	464a      	mov	r2, r9
 800957e:	2100      	movs	r1, #0
 8009580:	f7ff ffa2 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009584:	69a0      	ldr	r0, [r4, #24]
 8009586:	b1a8      	cbz	r0, 80095b4 <Display::TextStatus(char const*)+0x80>
 8009588:	6841      	ldr	r1, [r0, #4]
 800958a:	2300      	movs	r3, #0
 800958c:	5cea      	ldrb	r2, [r5, r3]
 800958e:	b11a      	cbz	r2, 8009598 <Display::TextStatus(char const*)+0x64>
 8009590:	1c5a      	adds	r2, r3, #1
 8009592:	4299      	cmp	r1, r3
 8009594:	4613      	mov	r3, r2
 8009596:	d8f9      	bhi.n	800958c <Display::TextStatus(char const*)+0x58>
 8009598:	6802      	ldr	r2, [r0, #0]
 800959a:	69d4      	ldr	r4, [r2, #28]
 800959c:	4639      	mov	r1, r7
 800959e:	462a      	mov	r2, r5
 80095a0:	46a4      	mov	ip, r4
 80095a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095a6:	4760      	bx	ip
 80095a8:	2120      	movs	r1, #32
 80095aa:	f7ff ff92 	bl	80094d2 <Display::PutChar(int) [clone .isra.0]>
 80095ae:	f108 0801 	add.w	r8, r8, #1
 80095b2:	e7e0      	b.n	8009576 <Display::TextStatus(char const*)+0x42>
 80095b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80095b8:	08016ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 80095bc:	08017004 	stmdaeq	r1, {r2, ip, sp, lr}
 80095c0:	0801700f 	stmdaeq	r1, {r0, r1, r2, r3, ip, sp, lr}
 80095c4:	08017034 	stmdaeq	r1, {r2, r4, r5, ip, sp, lr}

080095c8 <Display::TextStatus(char const*, unsigned long)>:
 80095c8:	b538      	push	{r3, r4, r5, lr}
 80095ca:	4614      	mov	r4, r2
 80095cc:	460d      	mov	r5, r1
 80095ce:	f7ff ffb1 	bl	8009534 <Display::TextStatus(char const*)>
 80095d2:	1c63      	adds	r3, r4, #1
 80095d4:	d005      	beq.n	80095e2 <Display::TextStatus(char const*, unsigned long)+0x1a>
 80095d6:	4629      	mov	r1, r5
 80095d8:	4620      	mov	r0, r4
 80095da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80095de:	f00a bfe5 	b.w	80145ac <console_status>
 80095e2:	bd38      	pop	{r3, r4, r5, pc}

080095e4 <Display::SetSleep(bool)>:
 80095e4:	b538      	push	{r3, r4, r5, lr}
 80095e6:	4604      	mov	r4, r0
 80095e8:	6980      	ldr	r0, [r0, #24]
 80095ea:	460d      	mov	r5, r1
 80095ec:	b138      	cbz	r0, 80095fe <Display::SetSleep(bool)+0x1a>
 80095ee:	6803      	ldr	r3, [r0, #0]
 80095f0:	7561      	strb	r1, [r4, #21]
 80095f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80095f4:	4798      	blx	r3
 80095f6:	b915      	cbnz	r5, 80095fe <Display::SetSleep(bool)+0x1a>
 80095f8:	4b01      	ldr	r3, [pc, #4]	@ (8009600 <Display::SetSleep(bool)+0x1c>)
 80095fa:	681b      	ldr	r3, [r3, #0]
 80095fc:	6063      	str	r3, [r4, #4]
 80095fe:	bd38      	pop	{r3, r4, r5, pc}
 8009600:	20009ae8 	andcs	r9, r0, r8, ror #21

08009604 <E131Bridge::Run()>:
 8009604:	b513      	push	{r0, r1, r4, lr}
 8009606:	f100 02f0 	add.w	r2, r0, #240	@ 0xf0
 800960a:	4604      	mov	r4, r0
 800960c:	f10d 0306 	add.w	r3, sp, #6
 8009610:	f100 01ec 	add.w	r1, r0, #236	@ 0xec
 8009614:	6800      	ldr	r0, [r0, #0]
 8009616:	f008 f913 	bl	8011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 800961a:	4b26      	ldr	r3, [pc, #152]	@ (80096b4 <E131Bridge::Run()+0xb0>)
 800961c:	681b      	ldr	r3, [r3, #0]
 800961e:	6063      	str	r3, [r4, #4]
 8009620:	2800      	cmp	r0, #0
 8009622:	d138      	bne.n	8009696 <E131Bridge::Run()+0x92>
 8009624:	7fe2      	ldrb	r2, [r4, #31]
 8009626:	b172      	cbz	r2, 8009646 <E131Bridge::Run()+0x42>
 8009628:	68a2      	ldr	r2, [r4, #8]
 800962a:	1a9b      	subs	r3, r3, r2
 800962c:	f640 12c3 	movw	r2, #2499	@ 0x9c3
 8009630:	4293      	cmp	r3, r2
 8009632:	d927      	bls.n	8009684 <E131Bridge::Run()+0x80>
 8009634:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 8009638:	b9db      	cbnz	r3, 8009672 <E131Bridge::Run()+0x6e>
 800963a:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800963e:	f023 0302 	bic.w	r3, r3, #2
 8009642:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8009646:	4620      	mov	r0, r4
 8009648:	f003 fb46 	bl	800ccd8 <E131Bridge::HandleDmxIn()>
 800964c:	4620      	mov	r0, r4
 800964e:	f003 facb 	bl	800cbe8 <E131Bridge::SendDiscoveryPacket()>
 8009652:	f894 30e8 	ldrb.w	r3, [r4, #232]	@ 0xe8
 8009656:	b153      	cbz	r3, 800966e <E131Bridge::Run()+0x6a>
 8009658:	4b17      	ldr	r3, [pc, #92]	@ (80096b8 <E131Bridge::Run()+0xb4>)
 800965a:	6818      	ldr	r0, [r3, #0]
 800965c:	6943      	ldr	r3, [r0, #20]
 800965e:	2b04      	cmp	r3, #4
 8009660:	d005      	beq.n	800966e <E131Bridge::Run()+0x6a>
 8009662:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 8009666:	b1a3      	cbz	r3, 8009692 <E131Bridge::Run()+0x8e>
 8009668:	2103      	movs	r1, #3
 800966a:	f00a fd1d 	bl	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800966e:	b002      	add	sp, #8
 8009670:	bd10      	pop	{r4, pc}
 8009672:	f894 3029 	ldrb.w	r3, [r4, #41]	@ 0x29
 8009676:	2b00      	cmp	r3, #0
 8009678:	d1df      	bne.n	800963a <E131Bridge::Run()+0x36>
 800967a:	2201      	movs	r2, #1
 800967c:	4611      	mov	r1, r2
 800967e:	4620      	mov	r0, r4
 8009680:	f002 f92a 	bl	800b8d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 8009684:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8009688:	1a9b      	subs	r3, r3, r2
 800968a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800968e:	d3da      	bcc.n	8009646 <E131Bridge::Run()+0x42>
 8009690:	e7d3      	b.n	800963a <E131Bridge::Run()+0x36>
 8009692:	2102      	movs	r1, #2
 8009694:	e7e9      	b.n	800966a <E131Bridge::Run()+0x66>
 8009696:	4620      	mov	r0, r4
 8009698:	f002 fcd0 	bl	800c03c <E131Bridge::IsValidRoot()>
 800969c:	2800      	cmp	r0, #0
 800969e:	d0e6      	beq.n	800966e <E131Bridge::Run()+0x6a>
 80096a0:	4620      	mov	r0, r4
 80096a2:	f002 fcf3 	bl	800c08c <E131Bridge::Process()>
 80096a6:	6862      	ldr	r2, [r4, #4]
 80096a8:	68e3      	ldr	r3, [r4, #12]
 80096aa:	1ad3      	subs	r3, r2, r3
 80096ac:	2bc8      	cmp	r3, #200	@ 0xc8
 80096ae:	bf88      	it	hi
 80096b0:	60e2      	strhi	r2, [r4, #12]
 80096b2:	e7dc      	b.n	800966e <E131Bridge::Run()+0x6a>
 80096b4:	20009ae8 	andcs	r9, r0, r8, ror #21
 80096b8:	20002238 	andcs	r2, r0, r8, lsr r2

080096bc <hardware::ledblink::display(unsigned long)>:
 80096bc:	b538      	push	{r3, r4, r5, lr}
 80096be:	4d0d      	ldr	r5, [pc, #52]	@ (80096f4 <hardware::ledblink::display(unsigned long)+0x38>)
 80096c0:	682a      	ldr	r2, [r5, #0]
 80096c2:	4603      	mov	r3, r0
 80096c4:	6990      	ldr	r0, [r2, #24]
 80096c6:	b1a0      	cbz	r0, 80096f2 <hardware::ledblink::display(unsigned long)+0x36>
 80096c8:	2b05      	cmp	r3, #5
 80096ca:	bf9c      	itt	ls
 80096cc:	4a0a      	ldrls	r2, [pc, #40]	@ (80096f8 <hardware::ledblink::display(unsigned long)+0x3c>)
 80096ce:	5cd4      	ldrbls	r4, [r2, r3]
 80096d0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80096d4:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 80096d8:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80096dc:	bf88      	it	hi
 80096de:	2455      	movhi	r4, #85	@ 0x55
 80096e0:	f7ff fef2 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 80096e4:	682b      	ldr	r3, [r5, #0]
 80096e6:	4621      	mov	r1, r4
 80096e8:	6998      	ldr	r0, [r3, #24]
 80096ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80096ee:	f7ff bef0 	b.w	80094d2 <Display::PutChar(int) [clone .isra.0]>
 80096f2:	bd38      	pop	{r3, r4, r5, pc}
 80096f4:	2000214c 	andcs	r2, r0, ip, asr #2
 80096f8:	08017d1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, fp, ip, sp, lr}

080096fc <RDMSubDevices::~RDMSubDevices()>:
 80096fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80096fe:	4a12      	ldr	r2, [pc, #72]	@ (8009748 <RDMSubDevices::~RDMSubDevices()+0x4c>)
 8009700:	4912      	ldr	r1, [pc, #72]	@ (800974c <RDMSubDevices::~RDMSubDevices()+0x50>)
 8009702:	4604      	mov	r4, r0
 8009704:	2348      	movs	r3, #72	@ 0x48
 8009706:	4812      	ldr	r0, [pc, #72]	@ (8009750 <RDMSubDevices::~RDMSubDevices()+0x54>)
 8009708:	f00d f842 	bl	8016790 <printf>
 800970c:	2500      	movs	r5, #0
 800970e:	462e      	mov	r6, r5
 8009710:	88a3      	ldrh	r3, [r4, #4]
 8009712:	6820      	ldr	r0, [r4, #0]
 8009714:	42ab      	cmp	r3, r5
 8009716:	d80c      	bhi.n	8009732 <RDMSubDevices::~RDMSubDevices()+0x36>
 8009718:	b108      	cbz	r0, 800971e <RDMSubDevices::~RDMSubDevices()+0x22>
 800971a:	f00d fa8b 	bl	8016c34 <operator delete[](void*)>
 800971e:	2300      	movs	r3, #0
 8009720:	80a3      	strh	r3, [r4, #4]
 8009722:	4a09      	ldr	r2, [pc, #36]	@ (8009748 <RDMSubDevices::~RDMSubDevices()+0x4c>)
 8009724:	4909      	ldr	r1, [pc, #36]	@ (800974c <RDMSubDevices::~RDMSubDevices()+0x50>)
 8009726:	480b      	ldr	r0, [pc, #44]	@ (8009754 <RDMSubDevices::~RDMSubDevices()+0x58>)
 8009728:	2351      	movs	r3, #81	@ 0x51
 800972a:	f00d f831 	bl	8016790 <printf>
 800972e:	4620      	mov	r0, r4
 8009730:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009732:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8009736:	00af      	lsls	r7, r5, #2
 8009738:	b110      	cbz	r0, 8009740 <RDMSubDevices::~RDMSubDevices()+0x44>
 800973a:	6803      	ldr	r3, [r0, #0]
 800973c:	685b      	ldr	r3, [r3, #4]
 800973e:	4798      	blx	r3
 8009740:	6823      	ldr	r3, [r4, #0]
 8009742:	3501      	adds	r5, #1
 8009744:	51de      	str	r6, [r3, r7]
 8009746:	e7e3      	b.n	8009710 <RDMSubDevices::~RDMSubDevices()+0x14>
 8009748:	0801703f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, ip, sp, lr}
 800974c:	0801704e 	stmdaeq	r1, {r1, r2, r3, r6, ip, sp, lr}
 8009750:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 8009754:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}

08009758 <LLRPDevice::LLRPDevice()>:
 8009758:	b570      	push	{r4, r5, r6, lr}
 800975a:	2100      	movs	r1, #0
 800975c:	4605      	mov	r5, r0
 800975e:	f003 fe58 	bl	800d412 <RDMHandler::RDMHandler(bool)>
 8009762:	2335      	movs	r3, #53	@ 0x35
 8009764:	4a13      	ldr	r2, [pc, #76]	@ (80097b4 <LLRPDevice::LLRPDevice()+0x5c>)
 8009766:	4914      	ldr	r1, [pc, #80]	@ (80097b8 <LLRPDevice::LLRPDevice()+0x60>)
 8009768:	4814      	ldr	r0, [pc, #80]	@ (80097bc <LLRPDevice::LLRPDevice()+0x64>)
 800976a:	4e15      	ldr	r6, [pc, #84]	@ (80097c0 <LLRPDevice::LLRPDevice()+0x68>)
 800976c:	f00d f810 	bl	8016790 <printf>
 8009770:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 8009774:	f008 f82a 	bl	80117cc <net::udp_begin(unsigned short)>
 8009778:	1c43      	adds	r3, r0, #1
 800977a:	4604      	mov	r4, r0
 800977c:	d00b      	beq.n	8009796 <LLRPDevice::LLRPDevice()+0x3e>
 800977e:	6030      	str	r0, [r6, #0]
 8009780:	4810      	ldr	r0, [pc, #64]	@ (80097c4 <LLRPDevice::LLRPDevice()+0x6c>)
 8009782:	f007 fc0b 	bl	8010f9c <net::igmp_join(unsigned long)>
 8009786:	4a0b      	ldr	r2, [pc, #44]	@ (80097b4 <LLRPDevice::LLRPDevice()+0x5c>)
 8009788:	490b      	ldr	r1, [pc, #44]	@ (80097b8 <LLRPDevice::LLRPDevice()+0x60>)
 800978a:	480f      	ldr	r0, [pc, #60]	@ (80097c8 <LLRPDevice::LLRPDevice()+0x70>)
 800978c:	233b      	movs	r3, #59	@ 0x3b
 800978e:	f00c ffff 	bl	8016790 <printf>
 8009792:	4628      	mov	r0, r5
 8009794:	bd70      	pop	{r4, r5, r6, pc}
 8009796:	4b0d      	ldr	r3, [pc, #52]	@ (80097cc <LLRPDevice::LLRPDevice()+0x74>)
 8009798:	4a0d      	ldr	r2, [pc, #52]	@ (80097d0 <LLRPDevice::LLRPDevice()+0x78>)
 800979a:	480e      	ldr	r0, [pc, #56]	@ (80097d4 <LLRPDevice::LLRPDevice()+0x7c>)
 800979c:	21b9      	movs	r1, #185	@ 0xb9
 800979e:	f00d f8d7 	bl	8016950 <__assert_func>
 80097a2:	4b0d      	ldr	r3, [pc, #52]	@ (80097d8 <LLRPDevice::LLRPDevice()+0x80>)
 80097a4:	4a03      	ldr	r2, [pc, #12]	@ (80097b4 <LLRPDevice::LLRPDevice()+0x5c>)
 80097a6:	4804      	ldr	r0, [pc, #16]	@ (80097b8 <LLRPDevice::LLRPDevice()+0x60>)
 80097a8:	6034      	str	r4, [r6, #0]
 80097aa:	2138      	movs	r1, #56	@ 0x38
 80097ac:	f00d f8d0 	bl	8016950 <__assert_func>
 80097b0:	e7e6      	b.n	8009780 <LLRPDevice::LLRPDevice()+0x28>
 80097b2:	bf00      	nop
 80097b4:	08017140 	stmdaeq	r1, {r6, r8, ip, sp, lr}
 80097b8:	08017071 	stmdaeq	r1, {r0, r4, r5, r6, ip, sp, lr}
 80097bc:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 80097c0:	20001378 	andcs	r1, r0, r8, ror r3
 80097c4:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 80097c8:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 80097cc:	08017096 	stmdaeq	r1, {r1, r2, r4, r7, ip, sp, lr}
 80097d0:	080170a3 	stmdaeq	r1, {r0, r1, r5, r7, ip, sp, lr}
 80097d4:	080170a9 	stmdaeq	r1, {r0, r3, r5, r7, ip, sp, lr}
 80097d8:	080170cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, ip, sp, lr}

080097dc <RDMDeviceResponder::~RDMDeviceResponder()>:
 80097dc:	4b14      	ldr	r3, [pc, #80]	@ (8009830 <RDMDeviceResponder::~RDMDeviceResponder()+0x54>)
 80097de:	b570      	push	{r4, r5, r6, lr}
 80097e0:	4604      	mov	r4, r0
 80097e2:	f840 3b60 	str.w	r3, [r0], #96
 80097e6:	f7ff ff89 	bl	80096fc <RDMSubDevices::~RDMSubDevices()>
 80097ea:	4a12      	ldr	r2, [pc, #72]	@ (8009834 <RDMDeviceResponder::~RDMDeviceResponder()+0x58>)
 80097ec:	4912      	ldr	r1, [pc, #72]	@ (8009838 <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>)
 80097ee:	4813      	ldr	r0, [pc, #76]	@ (800983c <RDMDeviceResponder::~RDMDeviceResponder()+0x60>)
 80097f0:	2353      	movs	r3, #83	@ 0x53
 80097f2:	f00c ffcd 	bl	8016790 <printf>
 80097f6:	2500      	movs	r5, #0
 80097f8:	462e      	mov	r6, r5
 80097fa:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80097fe:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009800:	429d      	cmp	r5, r3
 8009802:	d30a      	bcc.n	800981a <RDMDeviceResponder::~RDMDeviceResponder()+0x3e>
 8009804:	b108      	cbz	r0, 800980a <RDMDeviceResponder::~RDMDeviceResponder()+0x2e>
 8009806:	f00d fa15 	bl	8016c34 <operator delete[](void*)>
 800980a:	4a0a      	ldr	r2, [pc, #40]	@ (8009834 <RDMDeviceResponder::~RDMDeviceResponder()+0x58>)
 800980c:	490a      	ldr	r1, [pc, #40]	@ (8009838 <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>)
 800980e:	480c      	ldr	r0, [pc, #48]	@ (8009840 <RDMDeviceResponder::~RDMDeviceResponder()+0x64>)
 8009810:	235c      	movs	r3, #92	@ 0x5c
 8009812:	f00c ffbd 	bl	8016790 <printf>
 8009816:	4620      	mov	r0, r4
 8009818:	bd70      	pop	{r4, r5, r6, pc}
 800981a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800981e:	b128      	cbz	r0, 800982c <RDMDeviceResponder::~RDMDeviceResponder()+0x50>
 8009820:	6803      	ldr	r3, [r0, #0]
 8009822:	685b      	ldr	r3, [r3, #4]
 8009824:	4798      	blx	r3
 8009826:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8009828:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800982c:	3501      	adds	r5, #1
 800982e:	e7e4      	b.n	80097fa <RDMDeviceResponder::~RDMDeviceResponder()+0x1e>
 8009830:	0801a244 	stmdaeq	r1, {r2, r6, r9, sp, pc}
 8009834:	080170e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, ip, sp, lr}
 8009838:	080170ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, ip, sp, lr}
 800983c:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 8009840:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}

08009844 <RDMNetDevice::~RDMNetDevice()>:
 8009844:	4b17      	ldr	r3, [pc, #92]	@ (80098a4 <RDMNetDevice::~RDMNetDevice()+0x60>)
 8009846:	4a18      	ldr	r2, [pc, #96]	@ (80098a8 <RDMNetDevice::~RDMNetDevice()+0x64>)
 8009848:	4918      	ldr	r1, [pc, #96]	@ (80098ac <RDMNetDevice::~RDMNetDevice()+0x68>)
 800984a:	b510      	push	{r4, lr}
 800984c:	6003      	str	r3, [r0, #0]
 800984e:	4604      	mov	r4, r0
 8009850:	2337      	movs	r3, #55	@ 0x37
 8009852:	4817      	ldr	r0, [pc, #92]	@ (80098b0 <RDMNetDevice::~RDMNetDevice()+0x6c>)
 8009854:	f00c ff9c 	bl	8016790 <printf>
 8009858:	4a13      	ldr	r2, [pc, #76]	@ (80098a8 <RDMNetDevice::~RDMNetDevice()+0x64>)
 800985a:	4914      	ldr	r1, [pc, #80]	@ (80098ac <RDMNetDevice::~RDMNetDevice()+0x68>)
 800985c:	4815      	ldr	r0, [pc, #84]	@ (80098b4 <RDMNetDevice::~RDMNetDevice()+0x70>)
 800985e:	2339      	movs	r3, #57	@ 0x39
 8009860:	f00c ff96 	bl	8016790 <printf>
 8009864:	4a14      	ldr	r2, [pc, #80]	@ (80098b8 <RDMNetDevice::~RDMNetDevice()+0x74>)
 8009866:	4915      	ldr	r1, [pc, #84]	@ (80098bc <RDMNetDevice::~RDMNetDevice()+0x78>)
 8009868:	4811      	ldr	r0, [pc, #68]	@ (80098b0 <RDMNetDevice::~RDMNetDevice()+0x6c>)
 800986a:	233f      	movs	r3, #63	@ 0x3f
 800986c:	f00c ff90 	bl	8016790 <printf>
 8009870:	4813      	ldr	r0, [pc, #76]	@ (80098c0 <RDMNetDevice::~RDMNetDevice()+0x7c>)
 8009872:	f007 fbb1 	bl	8010fd8 <net::igmp_leave(unsigned long)>
 8009876:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 800987a:	f007 ffbd 	bl	80117f8 <net::udp_end(unsigned short)>
 800987e:	b128      	cbz	r0, 800988c <RDMNetDevice::~RDMNetDevice()+0x48>
 8009880:	4b10      	ldr	r3, [pc, #64]	@ (80098c4 <RDMNetDevice::~RDMNetDevice()+0x80>)
 8009882:	4a11      	ldr	r2, [pc, #68]	@ (80098c8 <RDMNetDevice::~RDMNetDevice()+0x84>)
 8009884:	4811      	ldr	r0, [pc, #68]	@ (80098cc <RDMNetDevice::~RDMNetDevice()+0x88>)
 8009886:	21bf      	movs	r1, #191	@ 0xbf
 8009888:	f00d f862 	bl	8016950 <__assert_func>
 800988c:	4a0a      	ldr	r2, [pc, #40]	@ (80098b8 <RDMNetDevice::~RDMNetDevice()+0x74>)
 800988e:	490b      	ldr	r1, [pc, #44]	@ (80098bc <RDMNetDevice::~RDMNetDevice()+0x78>)
 8009890:	4808      	ldr	r0, [pc, #32]	@ (80098b4 <RDMNetDevice::~RDMNetDevice()+0x70>)
 8009892:	2344      	movs	r3, #68	@ 0x44
 8009894:	f00c ff7c 	bl	8016790 <printf>
 8009898:	4620      	mov	r0, r4
 800989a:	f7ff ff9f 	bl	80097dc <RDMDeviceResponder::~RDMDeviceResponder()>
 800989e:	4620      	mov	r0, r4
 80098a0:	bd10      	pop	{r4, pc}
 80098a2:	bf00      	nop
 80098a4:	08017d7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr}
 80098a8:	0801710f 	stmdaeq	r1, {r0, r1, r2, r3, r8, ip, sp, lr}
 80098ac:	0801711d 	stmdaeq	r1, {r0, r2, r3, r4, r8, ip, sp, lr}
 80098b0:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 80098b4:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 80098b8:	0801713f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, ip, sp, lr}
 80098bc:	08017071 	stmdaeq	r1, {r0, r4, r5, r6, ip, sp, lr}
 80098c0:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 80098c4:	0801714b 	stmdaeq	r1, {r0, r1, r3, r6, r8, ip, sp, lr}
 80098c8:	08017157 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, ip, sp, lr}
 80098cc:	080170a9 	stmdaeq	r1, {r0, r3, r5, r7, ip, sp, lr}

080098d0 <RDMNetDevice::~RDMNetDevice()>:
 80098d0:	b510      	push	{r4, lr}
 80098d2:	4604      	mov	r4, r0
 80098d4:	f7ff ffb6 	bl	8009844 <RDMNetDevice::~RDMNetDevice()>
 80098d8:	4620      	mov	r0, r4
 80098da:	21ac      	movs	r1, #172	@ 0xac
 80098dc:	f00d f9ac 	bl	8016c38 <operator delete(void*, unsigned int)>
 80098e0:	4620      	mov	r0, r4
 80098e2:	bd10      	pop	{r4, pc}

080098e4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 80098e4:	b510      	push	{r4, lr}
 80098e6:	4604      	mov	r4, r0
 80098e8:	f7ff ff78 	bl	80097dc <RDMDeviceResponder::~RDMDeviceResponder()>
 80098ec:	4620      	mov	r0, r4
 80098ee:	21a0      	movs	r1, #160	@ 0xa0
 80098f0:	f00d f9a2 	bl	8016c38 <operator delete(void*, unsigned int)>
 80098f4:	4620      	mov	r0, r4
 80098f6:	bd10      	pop	{r4, pc}

080098f8 <RDMNetDevice::Print()>:
 80098f8:	b530      	push	{r4, r5, lr}
 80098fa:	b091      	sub	sp, #68	@ 0x44
 80098fc:	2300      	movs	r3, #0
 80098fe:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
 8009902:	4b1a      	ldr	r3, [pc, #104]	@ (800996c <RDMNetDevice::Print()+0x74>)
 8009904:	681b      	ldr	r3, [r3, #0]
 8009906:	aa02      	add	r2, sp, #8
 8009908:	4604      	mov	r4, r0
 800990a:	f103 0110 	add.w	r1, r3, #16
 800990e:	4610      	mov	r0, r2
 8009910:	f813 5b01 	ldrb.w	r5, [r3], #1
 8009914:	f802 5b01 	strb.w	r5, [r2], #1
 8009918:	428b      	cmp	r3, r1
 800991a:	d1f9      	bne.n	8009910 <RDMNetDevice::Print()+0x18>
 800991c:	a906      	add	r1, sp, #24
 800991e:	f00d f811 	bl	8016944 <uuid_unparse>
 8009922:	4813      	ldr	r0, [pc, #76]	@ (8009970 <RDMNetDevice::Print()+0x78>)
 8009924:	f00c ff34 	bl	8016790 <printf>
 8009928:	a906      	add	r1, sp, #24
 800992a:	4812      	ldr	r0, [pc, #72]	@ (8009974 <RDMNetDevice::Print()+0x7c>)
 800992c:	f00c ff30 	bl	8016790 <printf>
 8009930:	4811      	ldr	r0, [pc, #68]	@ (8009978 <RDMNetDevice::Print()+0x80>)
 8009932:	f00c ff2d 	bl	8016790 <printf>
 8009936:	f241 51c1 	movw	r1, #5569	@ 0x15c1
 800993a:	4810      	ldr	r0, [pc, #64]	@ (800997c <RDMNetDevice::Print()+0x84>)
 800993c:	f00c ff28 	bl	8016790 <printf>
 8009940:	2385      	movs	r3, #133	@ 0x85
 8009942:	9300      	str	r3, [sp, #0]
 8009944:	22ff      	movs	r2, #255	@ 0xff
 8009946:	23fa      	movs	r3, #250	@ 0xfa
 8009948:	21ef      	movs	r1, #239	@ 0xef
 800994a:	480d      	ldr	r0, [pc, #52]	@ (8009980 <RDMNetDevice::Print()+0x88>)
 800994c:	f00c ff20 	bl	8016790 <printf>
 8009950:	2386      	movs	r3, #134	@ 0x86
 8009952:	9300      	str	r3, [sp, #0]
 8009954:	22ff      	movs	r2, #255	@ 0xff
 8009956:	23fa      	movs	r3, #250	@ 0xfa
 8009958:	21ef      	movs	r1, #239	@ 0xef
 800995a:	480a      	ldr	r0, [pc, #40]	@ (8009984 <RDMNetDevice::Print()+0x8c>)
 800995c:	f00c ff18 	bl	8016790 <printf>
 8009960:	4620      	mov	r0, r4
 8009962:	f003 fc2f 	bl	800d1c4 <RDMDeviceResponder::Print()>
 8009966:	b011      	add	sp, #68	@ 0x44
 8009968:	bd30      	pop	{r4, r5, pc}
 800996a:	bf00      	nop
 800996c:	20002238 	andcs	r2, r0, r8, lsr r2
 8009970:	0801715b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, ip, sp, lr}
 8009974:	08017163 	stmdaeq	r1, {r0, r1, r5, r6, r8, ip, sp, lr}
 8009978:	0801716e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, ip, sp, lr}
 800997c:	0801717b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, ip, sp, lr}
 8009980:	08017195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, sp, lr}
 8009984:	080171b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, sp, lr}

08009988 <Hardware::RebootHandler()>:
 8009988:	b508      	push	{r3, lr}
 800998a:	4b05      	ldr	r3, [pc, #20]	@ (80099a0 <Hardware::RebootHandler()+0x18>)
 800998c:	6818      	ldr	r0, [r3, #0]
 800998e:	f005 fd8f 	bl	800f4b0 <Dmx::Blackout()>
 8009992:	4b04      	ldr	r3, [pc, #16]	@ (80099a4 <Hardware::RebootHandler()+0x1c>)
 8009994:	6818      	ldr	r0, [r3, #0]
 8009996:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800999a:	f001 bdb9 	b.w	800b510 <E131Bridge::Stop()>
 800999e:	bf00      	nop
 80099a0:	20001380 	andcs	r1, r0, r0, lsl #7
 80099a4:	2000124c 	andcs	r1, r0, ip, asr #4

080099a8 <main>:
 80099a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80099ac:	f6ad 4dcc 	subw	sp, sp, #3276	@ 0xccc
 80099b0:	a864      	add	r0, sp, #400	@ 0x190
 80099b2:	f00a fcc3 	bl	801433c <Hardware::Hardware()>
 80099b6:	a84e      	add	r0, sp, #312	@ 0x138
 80099b8:	f008 ffc0 	bl	801293c <DisplayUdf::DisplayUdf()>
 80099bc:	a804      	add	r0, sp, #16
 80099be:	f009 fb55 	bl	801306c <ConfigStore::ConfigStore()>
 80099c2:	4963      	ldr	r1, [pc, #396]	@ (8009b50 <main+0x1a8>)
 80099c4:	4d63      	ldr	r5, [pc, #396]	@ (8009b54 <main+0x1ac>)
 80099c6:	2203      	movs	r2, #3
 80099c8:	a84e      	add	r0, sp, #312	@ 0x138
 80099ca:	f7ff fdfd 	bl	80095c8 <Display::TextStatus(char const*, unsigned long)>
 80099ce:	a8b9      	add	r0, sp, #740	@ 0x2e4
 80099d0:	f006 fcb8 	bl	8010344 <Network::Network()>
 80099d4:	a805      	add	r0, sp, #20
 80099d6:	f006 fa67 	bl	800fea8 <MDNS::MDNS()>
 80099da:	495f      	ldr	r1, [pc, #380]	@ (8009b58 <main+0x1b0>)
 80099dc:	2202      	movs	r2, #2
 80099de:	a84e      	add	r0, sp, #312	@ 0x138
 80099e0:	f7ff fdf2 	bl	80095c8 <Display::TextStatus(char const*, unsigned long)>
 80099e4:	4b5d      	ldr	r3, [pc, #372]	@ (8009b5c <main+0x1b4>)
 80099e6:	4a5e      	ldr	r2, [pc, #376]	@ (8009b60 <main+0x1b8>)
 80099e8:	495e      	ldr	r1, [pc, #376]	@ (8009b64 <main+0x1bc>)
 80099ea:	a806      	add	r0, sp, #24
 80099ec:	f00a fa76 	bl	8013edc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80099f0:	485d      	ldr	r0, [pc, #372]	@ (8009b68 <main+0x1c0>)
 80099f2:	f00c ff22 	bl	801683a <puts>
 80099f6:	495d      	ldr	r1, [pc, #372]	@ (8009b6c <main+0x1c4>)
 80099f8:	485d      	ldr	r0, [pc, #372]	@ (8009b70 <main+0x1c8>)
 80099fa:	f00c fec9 	bl	8016790 <printf>
 80099fe:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009a02:	f001 fcf3 	bl	800b3ec <E131Bridge::E131Bridge()>
 8009a06:	a8e7      	add	r0, sp, #924	@ 0x39c
 8009a08:	f002 fcac 	bl	800c364 <E131Params::E131Params()>
 8009a0c:	a8e7      	add	r0, sp, #924	@ 0x39c
 8009a0e:	f002 fcc5 	bl	800c39c <E131Params::Load()>
 8009a12:	a8e7      	add	r0, sp, #924	@ 0x39c
 8009a14:	f003 f842 	bl	800ca9c <E131Params::Set()>
 8009a18:	f8bd 23a9 	ldrh.w	r2, [sp, #937]	@ 0x3a9
 8009a1c:	f8bd 33a1 	ldrh.w	r3, [sp, #929]	@ 0x3a1
 8009a20:	f002 0203 	and.w	r2, r2, #3
 8009a24:	2100      	movs	r1, #0
 8009a26:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009a2a:	f001 fe71 	bl	800b710 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>
 8009a2e:	f8bd 23a9 	ldrh.w	r2, [sp, #937]	@ 0x3a9
 8009a32:	f8bd 33a3 	ldrh.w	r3, [sp, #931]	@ 0x3a3
 8009a36:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8009a3a:	2101      	movs	r1, #1
 8009a3c:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009a40:	f001 fe66 	bl	800b710 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>
 8009a44:	a80e      	add	r0, sp, #56	@ 0x38
 8009a46:	f005 f951 	bl	800ecec <Dmx::Dmx()>
 8009a4a:	a80b      	add	r0, sp, #44	@ 0x2c
 8009a4c:	f004 fc06 	bl	800e25c <DmxParams::DmxParams()>
 8009a50:	a80b      	add	r0, sp, #44	@ 0x2c
 8009a52:	f004 fc14 	bl	800e27e <DmxParams::Load()>
 8009a56:	a90e      	add	r1, sp, #56	@ 0x38
 8009a58:	a80b      	add	r0, sp, #44	@ 0x2c
 8009a5a:	f004 fd29 	bl	800e4b0 <DmxParams::Set(Dmx*)>
 8009a5e:	682c      	ldr	r4, [r5, #0]
 8009a60:	260c      	movs	r6, #12
 8009a62:	2c01      	cmp	r4, #1
 8009a64:	d95a      	bls.n	8009b1c <main+0x174>
 8009a66:	ac09      	add	r4, sp, #36	@ 0x24
 8009a68:	2600      	movs	r6, #0
 8009a6a:	4b42      	ldr	r3, [pc, #264]	@ (8009b74 <main+0x1cc>)
 8009a6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8009a6e:	4620      	mov	r0, r4
 8009a70:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8009a74:	f7ff fc0c 	bl	8009290 <DmxSend::Print()>
 8009a78:	f89d 3496 	ldrb.w	r3, [sp, #1174]	@ 0x496
 8009a7c:	f89d 5497 	ldrb.w	r5, [sp, #1175]	@ 0x497
 8009a80:	493d      	ldr	r1, [pc, #244]	@ (8009b78 <main+0x1d0>)
 8009a82:	f8cd 456c 	str.w	r4, [sp, #1388]	@ 0x56c
 8009a86:	441d      	add	r5, r3
 8009a88:	2203      	movs	r2, #3
 8009a8a:	a84e      	add	r0, sp, #312	@ 0x138
 8009a8c:	f7ff fd9c 	bl	80095c8 <Display::TextStatus(char const*, unsigned long)>
 8009a90:	462b      	mov	r3, r5
 8009a92:	4a3a      	ldr	r2, [pc, #232]	@ (8009b7c <main+0x1d4>)
 8009a94:	2120      	movs	r1, #32
 8009a96:	a81e      	add	r0, sp, #120	@ 0x78
 8009a98:	f00c fea2 	bl	80167e0 <snprintf>
 8009a9c:	4a38      	ldr	r2, [pc, #224]	@ (8009b80 <main+0x1d8>)
 8009a9e:	2120      	movs	r1, #32
 8009aa0:	a827      	add	r0, sp, #156	@ 0x9c
 8009aa2:	f00c fe9d 	bl	80167e0 <snprintf>
 8009aa6:	4604      	mov	r4, r0
 8009aa8:	202c      	movs	r0, #44	@ 0x2c
 8009aaa:	f00d f8c7 	bl	8016c3c <operator new(unsigned int)>
 8009aae:	4603      	mov	r3, r0
 8009ab0:	6046      	str	r6, [r0, #4]
 8009ab2:	6286      	str	r6, [r0, #40]	@ 0x28
 8009ab4:	aa1e      	add	r2, sp, #120	@ 0x78
 8009ab6:	f823 6b08 	strh.w	r6, [r3], #8
 8009aba:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 8009abe:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009ac2:	b109      	cbz	r1, 8009ac8 <main+0x120>
 8009ac4:	42b3      	cmp	r3, r6
 8009ac6:	d13c      	bne.n	8009b42 <main+0x19a>
 8009ac8:	2301      	movs	r3, #1
 8009aca:	461a      	mov	r2, r3
 8009acc:	a907      	add	r1, sp, #28
 8009ace:	9007      	str	r0, [sp, #28]
 8009ad0:	a88e      	add	r0, sp, #568	@ 0x238
 8009ad2:	f003 fa71 	bl	800cfb8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>
 8009ad6:	a8b6      	add	r0, sp, #728	@ 0x2d8
 8009ad8:	f7ff fe3e 	bl	8009758 <LLRPDevice::LLRPDevice()>
 8009adc:	4b29      	ldr	r3, [pc, #164]	@ (8009b84 <main+0x1dc>)
 8009ade:	4a2a      	ldr	r2, [pc, #168]	@ (8009b88 <main+0x1e0>)
 8009ae0:	492a      	ldr	r1, [pc, #168]	@ (8009b8c <main+0x1e4>)
 8009ae2:	938e      	str	r3, [sp, #568]	@ 0x238
 8009ae4:	482a      	ldr	r0, [pc, #168]	@ (8009b90 <main+0x1e8>)
 8009ae6:	2331      	movs	r3, #49	@ 0x31
 8009ae8:	f00c fe52 	bl	8016790 <printf>
 8009aec:	4a26      	ldr	r2, [pc, #152]	@ (8009b88 <main+0x1e0>)
 8009aee:	4927      	ldr	r1, [pc, #156]	@ (8009b8c <main+0x1e4>)
 8009af0:	4828      	ldr	r0, [pc, #160]	@ (8009b94 <main+0x1ec>)
 8009af2:	2333      	movs	r3, #51	@ 0x33
 8009af4:	f00c fe4c 	bl	8016790 <printf>
 8009af8:	b2e0      	uxtb	r0, r4
 8009afa:	2820      	cmp	r0, #32
 8009afc:	f89d 228e 	ldrb.w	r2, [sp, #654]	@ 0x28e
 8009b00:	bf28      	it	cs
 8009b02:	2020      	movcs	r0, #32
 8009b04:	4603      	mov	r3, r0
 8009b06:	2a00      	cmp	r2, #0
 8009b08:	f040 8153 	bne.w	8009db2 <main+0x40a>
 8009b0c:	a927      	add	r1, sp, #156	@ 0x9c
 8009b0e:	aa8f      	add	r2, sp, #572	@ 0x23c
 8009b10:	3b01      	subs	r3, #1
 8009b12:	f080 8151 	bcs.w	8009db8 <main+0x410>
 8009b16:	f88d 028d 	strb.w	r0, [sp, #653]	@ 0x28d
 8009b1a:	e05c      	b.n	8009bd6 <main+0x22e>
 8009b1c:	f50d 638f 	add.w	r3, sp, #1144	@ 0x478
 8009b20:	fb06 3304 	mla	r3, r6, r4, r3
 8009b24:	6829      	ldr	r1, [r5, #0]
 8009b26:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009b28:	2b01      	cmp	r3, #1
 8009b2a:	f04f 0300 	mov.w	r3, #0
 8009b2e:	eba4 0101 	sub.w	r1, r4, r1
 8009b32:	bf0c      	ite	eq
 8009b34:	461a      	moveq	r2, r3
 8009b36:	2201      	movne	r2, #1
 8009b38:	a80e      	add	r0, sp, #56	@ 0x38
 8009b3a:	f005 fa47 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8009b3e:	3401      	adds	r4, #1
 8009b40:	e78f      	b.n	8009a62 <main+0xba>
 8009b42:	f803 1b01 	strb.w	r1, [r3], #1
 8009b46:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8009b48:	3101      	adds	r1, #1
 8009b4a:	6281      	str	r1, [r0, #40]	@ 0x28
 8009b4c:	e7b7      	b.n	8009abe <main+0x116>
 8009b4e:	bf00      	nop
 8009b50:	0801a4e0 	stmdaeq	r1, {r5, r6, r7, sl, sp, pc}
 8009b54:	20000074 	andcs	r0, r0, r4, ror r0
 8009b58:	0801a4d0 	stmdaeq	r1, {r4, r6, r7, sl, sp, pc}
 8009b5c:	080171db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, sp, lr}
 8009b60:	080171e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, sp, lr}
 8009b64:	08017d8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, ip, sp, lr}
 8009b68:	200021e0 	andcs	r2, r0, r0, ror #3
 8009b6c:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}
 8009b70:	0801720e 	stmdaeq	r1, {r1, r2, r3, r9, ip, sp, lr}
 8009b74:	08017d30 	stmdaeq	r1, {r4, r5, r8, sl, fp, ip, sp, lr}
 8009b78:	0801a43a 	stmdaeq	r1, {r1, r3, r4, r5, sl, sp, pc}
 8009b7c:	0801721b 	stmdaeq	r1, {r0, r1, r3, r4, r9, ip, sp, lr}
 8009b80:	0801722d 	stmdaeq	r1, {r0, r2, r3, r5, r9, ip, sp, lr}
 8009b84:	08017d7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr}
 8009b88:	08017110 	stmdaeq	r1, {r4, r8, ip, sp, lr}
 8009b8c:	0801711d 	stmdaeq	r1, {r0, r2, r3, r4, r8, ip, sp, lr}
 8009b90:	08016f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, sp, lr}
 8009b94:	08016f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, sp, lr}
 8009b98:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009b9c:	f802 4b01 	strb.w	r4, [r2], #1
 8009ba0:	3b01      	subs	r3, #1
 8009ba2:	d2f9      	bcs.n	8009b98 <main+0x1f0>
 8009ba4:	2401      	movs	r4, #1
 8009ba6:	2700      	movs	r7, #0
 8009ba8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009bac:	4e9a      	ldr	r6, [pc, #616]	@ (8009e18 <main+0x470>)
 8009bae:	9000      	str	r0, [sp, #0]
 8009bb0:	f88d 028c 	strb.w	r0, [sp, #652]	@ 0x28c
 8009bb4:	f88d 010c 	strb.w	r0, [sp, #268]	@ 0x10c
 8009bb8:	ab97      	add	r3, sp, #604	@ 0x25c
 8009bba:	6830      	ldr	r0, [r6, #0]
 8009bbc:	2204      	movs	r2, #4
 8009bbe:	2109      	movs	r1, #9
 8009bc0:	f009 fae2 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009bc4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009bc8:	9400      	str	r4, [sp, #0]
 8009bca:	6830      	ldr	r0, [r6, #0]
 8009bcc:	ab43      	add	r3, sp, #268	@ 0x10c
 8009bce:	2224      	movs	r2, #36	@ 0x24
 8009bd0:	2109      	movs	r1, #9
 8009bd2:	f009 fad9 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009bd6:	4b91      	ldr	r3, [pc, #580]	@ (8009e1c <main+0x474>)
 8009bd8:	939f      	str	r3, [sp, #636]	@ 0x27c
 8009bda:	a88e      	add	r0, sp, #568	@ 0x238
 8009bdc:	f003 fa46 	bl	800d06c <RDMDeviceResponder::Init()>
 8009be0:	a843      	add	r0, sp, #268	@ 0x10c
 8009be2:	f003 f97f 	bl	800cee4 <RDMDeviceParams::RDMDeviceParams()>
 8009be6:	a843      	add	r0, sp, #268	@ 0x10c
 8009be8:	f003 f98f 	bl	800cf0a <RDMDeviceParams::Load()>
 8009bec:	a98f      	add	r1, sp, #572	@ 0x23c
 8009bee:	a843      	add	r0, sp, #268	@ 0x10c
 8009bf0:	f003 f990 	bl	800cf14 <RDMDeviceParams::Set(RDMDevice*)>
 8009bf4:	a88e      	add	r0, sp, #568	@ 0x238
 8009bf6:	f7ff fe7f 	bl	80098f8 <RDMNetDevice::Print()>
 8009bfa:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009bfe:	f002 faf9 	bl	800c1f4 <E131Bridge::Print()>
 8009c02:	4987      	ldr	r1, [pc, #540]	@ (8009e20 <main+0x478>)
 8009c04:	462a      	mov	r2, r5
 8009c06:	a84e      	add	r0, sp, #312	@ 0x138
 8009c08:	f008 feae 	bl	8012968 <DisplayUdf::SetTitle(char const*, ...)>
 8009c0c:	2202      	movs	r2, #2
 8009c0e:	4611      	mov	r1, r2
 8009c10:	a84e      	add	r0, sp, #312	@ 0x138
 8009c12:	f008 febc 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009c16:	2207      	movs	r2, #7
 8009c18:	2103      	movs	r1, #3
 8009c1a:	a84e      	add	r0, sp, #312	@ 0x138
 8009c1c:	f008 feb7 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009c20:	2208      	movs	r2, #8
 8009c22:	2104      	movs	r1, #4
 8009c24:	a84e      	add	r0, sp, #312	@ 0x138
 8009c26:	f008 feb2 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009c2a:	2209      	movs	r2, #9
 8009c2c:	2105      	movs	r1, #5
 8009c2e:	a84e      	add	r0, sp, #312	@ 0x138
 8009c30:	f008 fead 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009c34:	2201      	movs	r2, #1
 8009c36:	2106      	movs	r1, #6
 8009c38:	a84e      	add	r0, sp, #312	@ 0x138
 8009c3a:	f008 fea8 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009c3e:	a830      	add	r0, sp, #192	@ 0xc0
 8009c40:	f008 ff70 	bl	8012b24 <DisplayUdfParams::DisplayUdfParams()>
 8009c44:	a830      	add	r0, sp, #192	@ 0xc0
 8009c46:	f008 ff7b 	bl	8012b40 <DisplayUdfParams::Load()>
 8009c4a:	a94e      	add	r1, sp, #312	@ 0x138
 8009c4c:	a830      	add	r0, sp, #192	@ 0xc0
 8009c4e:	f009 f89f 	bl	8012d90 <DisplayUdfParams::Set(DisplayUdf*)>
 8009c52:	a84e      	add	r0, sp, #312	@ 0x138
 8009c54:	f008 feb6 	bl	80129c4 <DisplayUdf::Show()>
 8009c58:	2101      	movs	r1, #1
 8009c5a:	462b      	mov	r3, r5
 8009c5c:	2200      	movs	r2, #0
 8009c5e:	a839      	add	r0, sp, #228	@ 0xe4
 8009c60:	f000 fa50 	bl	800a104 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
 8009c64:	a816      	add	r0, sp, #88	@ 0x58
 8009c66:	f000 fd0d 	bl	800a684 <RemoteConfigParams::RemoteConfigParams()>
 8009c6a:	a816      	add	r0, sp, #88	@ 0x58
 8009c6c:	f000 fd12 	bl	800a694 <RemoteConfigParams::Load()>
 8009c70:	a939      	add	r1, sp, #228	@ 0xe4
 8009c72:	a816      	add	r0, sp, #88	@ 0x58
 8009c74:	f000 fe1c 	bl	800a8b0 <RemoteConfigParams::Set(RemoteConfig*)>
 8009c78:	a804      	add	r0, sp, #16
 8009c7a:	f009 fadb 	bl	8013234 <ConfigStore::Flash()>
 8009c7e:	2800      	cmp	r0, #0
 8009c80:	d1fa      	bne.n	8009c78 <main+0x2d0>
 8009c82:	a805      	add	r0, sp, #20
 8009c84:	f006 fa94 	bl	80101b0 <MDNS::Print()>
 8009c88:	4966      	ldr	r1, [pc, #408]	@ (8009e24 <main+0x47c>)
 8009c8a:	2203      	movs	r2, #3
 8009c8c:	a84e      	add	r0, sp, #312	@ 0x138
 8009c8e:	f7ff fc9b 	bl	80095c8 <Display::TextStatus(char const*, unsigned long)>
 8009c92:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009c96:	f001 fce3 	bl	800b660 <E131Bridge::Start()>
 8009c9a:	4963      	ldr	r1, [pc, #396]	@ (8009e28 <main+0x480>)
 8009c9c:	2202      	movs	r2, #2
 8009c9e:	a84e      	add	r0, sp, #312	@ 0x138
 8009ca0:	f7ff fc92 	bl	80095c8 <Display::TextStatus(char const*, unsigned long)>
 8009ca4:	2102      	movs	r1, #2
 8009ca6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8009caa:	f00b f8b3 	bl	8014e14 <fwdgt_config>
 8009cae:	2801      	cmp	r0, #1
 8009cb0:	bf0c      	ite	eq
 8009cb2:	2301      	moveq	r3, #1
 8009cb4:	2300      	movne	r3, #0
 8009cb6:	f88d 31a0 	strb.w	r3, [sp, #416]	@ 0x1a0
 8009cba:	d101      	bne.n	8009cc0 <main+0x318>
 8009cbc:	f00b f89a 	bl	8014df4 <fwdgt_enable>
 8009cc0:	4f5a      	ldr	r7, [pc, #360]	@ (8009e2c <main+0x484>)
 8009cc2:	4d5b      	ldr	r5, [pc, #364]	@ (8009e30 <main+0x488>)
 8009cc4:	4e5b      	ldr	r6, [pc, #364]	@ (8009e34 <main+0x48c>)
 8009cc6:	f00b f89d 	bl	8014e04 <fwdgt_counter_reload>
 8009cca:	f7fe fccb 	bl	8008664 <net::net_handle()>
 8009cce:	f7ff fc05 	bl	80094dc <net::dhcp_run()>
 8009cd2:	f50d 608f 	add.w	r0, sp, #1144	@ 0x478
 8009cd6:	f7ff fc95 	bl	8009604 <E131Bridge::Run()>
 8009cda:	f89d 30f0 	ldrb.w	r3, [sp, #240]	@ 0xf0
 8009cde:	bb1b      	cbnz	r3, 8009d28 <main+0x380>
 8009ce0:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8009ce2:	aa08      	add	r2, sp, #32
 8009ce4:	69a0      	ldr	r0, [r4, #24]
 8009ce6:	f104 011c 	add.w	r1, r4, #28
 8009cea:	f007 fcdd 	bl	80116a8 <net::tcp_read(long, unsigned char const**, unsigned long&)>
 8009cee:	4680      	mov	r8, r0
 8009cf0:	b170      	cbz	r0, 8009d10 <main+0x368>
 8009cf2:	9b08      	ldr	r3, [sp, #32]
 8009cf4:	4a50      	ldr	r2, [pc, #320]	@ (8009e38 <main+0x490>)
 8009cf6:	4951      	ldr	r1, [pc, #324]	@ (8009e3c <main+0x494>)
 8009cf8:	9300      	str	r3, [sp, #0]
 8009cfa:	4851      	ldr	r0, [pc, #324]	@ (8009e40 <main+0x498>)
 8009cfc:	2333      	movs	r3, #51	@ 0x33
 8009cfe:	f00c fd47 	bl	8016790 <printf>
 8009d02:	9b08      	ldr	r3, [sp, #32]
 8009d04:	69e2      	ldr	r2, [r4, #28]
 8009d06:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8009d0a:	4641      	mov	r1, r8
 8009d0c:	f001 fa28 	bl	800b160 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
 8009d10:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8009d12:	ab08      	add	r3, sp, #32
 8009d14:	aa3f      	add	r2, sp, #252	@ 0xfc
 8009d16:	4639      	mov	r1, r7
 8009d18:	f007 fd92 	bl	8011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009d1c:	2803      	cmp	r0, #3
 8009d1e:	9040      	str	r0, [sp, #256]	@ 0x100
 8009d20:	d902      	bls.n	8009d28 <main+0x380>
 8009d22:	a839      	add	r0, sp, #228	@ 0xe4
 8009d24:	f000 fb9a 	bl	800a45c <RemoteConfig::HandleRequest()>
 8009d28:	a804      	add	r0, sp, #16
 8009d2a:	f009 fa83 	bl	8013234 <ConfigStore::Flash()>
 8009d2e:	4b45      	ldr	r3, [pc, #276]	@ (8009e44 <main+0x49c>)
 8009d30:	4a45      	ldr	r2, [pc, #276]	@ (8009e48 <main+0x4a0>)
 8009d32:	493f      	ldr	r1, [pc, #252]	@ (8009e30 <main+0x488>)
 8009d34:	6830      	ldr	r0, [r6, #0]
 8009d36:	f007 fd83 	bl	8011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009d3a:	4b44      	ldr	r3, [pc, #272]	@ (8009e4c <main+0x4a4>)
 8009d3c:	280b      	cmp	r0, #11
 8009d3e:	6018      	str	r0, [r3, #0]
 8009d40:	d90a      	bls.n	8009d58 <main+0x3b0>
 8009d42:	682b      	ldr	r3, [r5, #0]
 8009d44:	789a      	ldrb	r2, [r3, #2]
 8009d46:	f012 0f78 	tst.w	r2, #120	@ 0x78
 8009d4a:	d105      	bne.n	8009d58 <main+0x3b0>
 8009d4c:	8899      	ldrh	r1, [r3, #4]
 8009d4e:	ba49      	rev16	r1, r1
 8009d50:	b289      	uxth	r1, r1
 8009d52:	a805      	add	r0, sp, #20
 8009d54:	f006 f95e 	bl	8010014 <MDNS::HandleQuestions(unsigned long)>
 8009d58:	4c3d      	ldr	r4, [pc, #244]	@ (8009e50 <main+0x4a8>)
 8009d5a:	483e      	ldr	r0, [pc, #248]	@ (8009e54 <main+0x4ac>)
 8009d5c:	4a3e      	ldr	r2, [pc, #248]	@ (8009e58 <main+0x4b0>)
 8009d5e:	6800      	ldr	r0, [r0, #0]
 8009d60:	f10d 031a 	add.w	r3, sp, #26
 8009d64:	4621      	mov	r1, r4
 8009d66:	f007 fd6b 	bl	8011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009d6a:	2841      	cmp	r0, #65	@ 0x41
 8009d6c:	d911      	bls.n	8009d92 <main+0x3ea>
 8009d6e:	a8b6      	add	r0, sp, #728	@ 0x2d8
 8009d70:	f003 ff7e 	bl	800dc70 <LLRPDevice::DumpCommon()>
 8009d74:	6823      	ldr	r3, [r4, #0]
 8009d76:	f8d3 302a 	ldr.w	r3, [r3, #42]	@ 0x2a
 8009d7a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009d7e:	d020      	beq.n	8009dc2 <main+0x41a>
 8009d80:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8009d84:	d026      	beq.n	8009dd4 <main+0x42c>
 8009d86:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009d8a:	d102      	bne.n	8009d92 <main+0x3ea>
 8009d8c:	a8b6      	add	r0, sp, #728	@ 0x2d8
 8009d8e:	f003 fe87 	bl	800daa0 <LLRPDevice::HandleRequestMessage()>
 8009d92:	9a52      	ldr	r2, [sp, #328]	@ 0x148
 8009d94:	4c31      	ldr	r4, [pc, #196]	@ (8009e5c <main+0x4b4>)
 8009d96:	b33a      	cbz	r2, 8009de8 <main+0x440>
 8009d98:	f89d 314d 	ldrb.w	r3, [sp, #333]	@ 0x14d
 8009d9c:	b9f3      	cbnz	r3, 8009ddc <main+0x434>
 8009d9e:	6823      	ldr	r3, [r4, #0]
 8009da0:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8009da2:	1a5b      	subs	r3, r3, r1
 8009da4:	429a      	cmp	r2, r3
 8009da6:	d21f      	bcs.n	8009de8 <main+0x440>
 8009da8:	2101      	movs	r1, #1
 8009daa:	a84e      	add	r0, sp, #312	@ 0x138
 8009dac:	f7ff fc1a 	bl	80095e4 <Display::SetSleep(bool)>
 8009db0:	e01a      	b.n	8009de8 <main+0x440>
 8009db2:	a927      	add	r1, sp, #156	@ 0x9c
 8009db4:	aa97      	add	r2, sp, #604	@ 0x25c
 8009db6:	e6f3      	b.n	8009ba0 <main+0x1f8>
 8009db8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009dbc:	f802 4b01 	strb.w	r4, [r2], #1
 8009dc0:	e6a6      	b.n	8009b10 <main+0x168>
 8009dc2:	4b27      	ldr	r3, [pc, #156]	@ (8009e60 <main+0x4b8>)
 8009dc4:	9300      	str	r3, [sp, #0]
 8009dc6:	4a27      	ldr	r2, [pc, #156]	@ (8009e64 <main+0x4bc>)
 8009dc8:	491c      	ldr	r1, [pc, #112]	@ (8009e3c <main+0x494>)
 8009dca:	4827      	ldr	r0, [pc, #156]	@ (8009e68 <main+0x4c0>)
 8009dcc:	2360      	movs	r3, #96	@ 0x60
 8009dce:	f00c fcdf 	bl	8016790 <printf>
 8009dd2:	e7de      	b.n	8009d92 <main+0x3ea>
 8009dd4:	a8b6      	add	r0, sp, #728	@ 0x2d8
 8009dd6:	f003 fef9 	bl	800dbcc <LLRPDevice::HandleRdmCommand()>
 8009dda:	e7da      	b.n	8009d92 <main+0x3ea>
 8009ddc:	4b23      	ldr	r3, [pc, #140]	@ (8009e6c <main+0x4c4>)
 8009dde:	f8d3 1810 	ldr.w	r1, [r3, #2064]	@ 0x810
 8009de2:	f411 5100 	ands.w	r1, r1, #8192	@ 0x2000
 8009de6:	d0e0      	beq.n	8009daa <main+0x402>
 8009de8:	f8d4 9000 	ldr.w	r9, [r4]
 8009dec:	f04f 0800 	mov.w	r8, #0
 8009df0:	ac64      	add	r4, sp, #400	@ 0x190
 8009df2:	9b8c      	ldr	r3, [sp, #560]	@ 0x230
 8009df4:	4598      	cmp	r8, r3
 8009df6:	d302      	bcc.n	8009dfe <main+0x456>
 8009df8:	f00a fc44 	bl	8014684 <stack_debug_run()>
 8009dfc:	e763      	b.n	8009cc6 <main+0x31e>
 8009dfe:	6a23      	ldr	r3, [r4, #32]
 8009e00:	4599      	cmp	r9, r3
 8009e02:	d304      	bcc.n	8009e0e <main+0x466>
 8009e04:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009e06:	4798      	blx	r3
 8009e08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009e0a:	444b      	add	r3, r9
 8009e0c:	6223      	str	r3, [r4, #32]
 8009e0e:	f108 0801 	add.w	r8, r8, #1
 8009e12:	3410      	adds	r4, #16
 8009e14:	e7ed      	b.n	8009df2 <main+0x44a>
 8009e16:	bf00      	nop
 8009e18:	20002134 	andcs	r2, r0, r4, lsr r1
 8009e1c:	06010801 	streq	r0, [r1], -r1, lsl #16
 8009e20:	08017240 	stmdaeq	r1, {r6, r9, ip, sp, lr}
 8009e24:	0801a1c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, pc}
 8009e28:	0801a1b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sp, pc}
 8009e2c:	20000c80 	andcs	r0, r0, r0, lsl #25
 8009e30:	20001e28 	andcs	r1, r0, r8, lsr #28
 8009e34:	20001e38 	andcs	r1, r0, r8, lsr lr
 8009e38:	08017252 	stmdaeq	r1, {r1, r4, r6, r9, ip, sp, lr}
 8009e3c:	0801727c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, ip, sp, lr}
 8009e40:	08017280 	stmdaeq	r1, {r7, r9, ip, sp, lr}
 8009e44:	20001e30 	andcs	r1, r0, r0, lsr lr
 8009e48:	20001e34 	andcs	r1, r0, r4, lsr lr
 8009e4c:	20001e2c 	andcs	r1, r0, ip, lsr #28
 8009e50:	20001370 	andcs	r1, r0, r0, ror r3
 8009e54:	20001378 	andcs	r1, r0, r8, ror r3
 8009e58:	20001374 	andcs	r1, r0, r4, ror r3
 8009e5c:	20009ae8 	andcs	r9, r0, r8, ror #21
 8009e60:	080172be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, ip, sp, lr}
 8009e64:	08017071 	stmdaeq	r1, {r0, r4, r5, r6, ip, sp, lr}
 8009e68:	080172a8 	stmdaeq	r1, {r3, r5, r7, r9, ip, sp, lr}
 8009e6c:	40020000 	andmi	r0, r2, r0

08009e70 <rdm::device::responder::factorydefaults()>:
 8009e70:	b510      	push	{r4, lr}
 8009e72:	4b0d      	ldr	r3, [pc, #52]	@ (8009ea8 <rdm::device::responder::factorydefaults()+0x38>)
 8009e74:	4c0d      	ldr	r4, [pc, #52]	@ (8009eac <rdm::device::responder::factorydefaults()+0x3c>)
 8009e76:	6818      	ldr	r0, [r3, #0]
 8009e78:	b086      	sub	sp, #24
 8009e7a:	2100      	movs	r1, #0
 8009e7c:	f000 f996 	bl	800a1ac <RemoteConfig::SetDisable(bool)>
 8009e80:	6820      	ldr	r0, [r4, #0]
 8009e82:	2109      	movs	r1, #9
 8009e84:	f009 f96e 	bl	8013164 <ConfigStore::ResetSetList(configstore::Store)>
 8009e88:	2301      	movs	r3, #1
 8009e8a:	2100      	movs	r1, #0
 8009e8c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009e90:	9300      	str	r3, [sp, #0]
 8009e92:	f88d 3017 	strb.w	r3, [sp, #23]
 8009e96:	6820      	ldr	r0, [r4, #0]
 8009e98:	f10d 0317 	add.w	r3, sp, #23
 8009e9c:	2214      	movs	r2, #20
 8009e9e:	f009 f973 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009ea2:	b006      	add	sp, #24
 8009ea4:	bd10      	pop	{r4, pc}
 8009ea6:	bf00      	nop
 8009ea8:	20000ca8 	andcs	r0, r0, r8, lsr #25
 8009eac:	20002134 	andcs	r2, r0, r4, lsr r1

08009eb0 <RDMSoftwareVersion::GetVersion()>:
 8009eb0:	4800      	ldr	r0, [pc, #0]	@ (8009eb4 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009eb2:	4770      	bx	lr
 8009eb4:	08017d90 	stmdaeq	r1, {r4, r7, r8, sl, fp, ip, sp, lr}

08009eb8 <RDMSoftwareVersion::GetVersionLength()>:
 8009eb8:	2003      	movs	r0, #3
 8009eba:	4770      	bx	lr

08009ebc <RDMSoftwareVersion::GetVersionId()>:
 8009ebc:	4800      	ldr	r0, [pc, #0]	@ (8009ec0 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009ebe:	4770      	bx	lr
 8009ec0:	66f19814 	usatvs	r9, #17, r4, lsl #16

08009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
 8009ec4:	b430      	push	{r4, r5}
 8009ec6:	4d05      	ldr	r5, [pc, #20]	@ (8009edc <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x18>)
 8009ec8:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8009ecc:	682d      	ldr	r5, [r5, #0]
 8009ece:	b11d      	cbz	r5, 8009ed8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x14>
 8009ed0:	9402      	str	r4, [sp, #8]
 8009ed2:	bc30      	pop	{r4, r5}
 8009ed4:	f007 bcd2 	b.w	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8009ed8:	bc30      	pop	{r4, r5}
 8009eda:	4770      	bx	lr
 8009edc:	20002088 	andcs	r2, r0, r8, lsl #1

08009ee0 <RemoteConfig::HandleDisplayGet()>:
 8009ee0:	4b0d      	ldr	r3, [pc, #52]	@ (8009f18 <RemoteConfig::HandleDisplayGet()+0x38>)
 8009ee2:	681b      	ldr	r3, [r3, #0]
 8009ee4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ee6:	7d59      	ldrb	r1, [r3, #21]
 8009ee8:	4d0c      	ldr	r5, [pc, #48]	@ (8009f1c <RemoteConfig::HandleDisplayGet()+0x3c>)
 8009eea:	4a0d      	ldr	r2, [pc, #52]	@ (8009f20 <RemoteConfig::HandleDisplayGet()+0x40>)
 8009eec:	4b0d      	ldr	r3, [pc, #52]	@ (8009f24 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009eee:	4604      	mov	r4, r0
 8009ef0:	2900      	cmp	r1, #0
 8009ef2:	bf08      	it	eq
 8009ef4:	4613      	moveq	r3, r2
 8009ef6:	6828      	ldr	r0, [r5, #0]
 8009ef8:	4a0b      	ldr	r2, [pc, #44]	@ (8009f28 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009efa:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009efe:	f00c fc6f 	bl	80167e0 <snprintf>
 8009f02:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009f06:	9300      	str	r3, [sp, #0]
 8009f08:	4602      	mov	r2, r0
 8009f0a:	69a3      	ldr	r3, [r4, #24]
 8009f0c:	6829      	ldr	r1, [r5, #0]
 8009f0e:	6960      	ldr	r0, [r4, #20]
 8009f10:	f7ff ffd8 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009f14:	b003      	add	sp, #12
 8009f16:	bd30      	pop	{r4, r5, pc}
 8009f18:	2000214c 	andcs	r2, r0, ip, asr #2
 8009f1c:	20000c80 	andcs	r0, r0, r0, lsl #25
 8009f20:	080172d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, ip, sp, lr}
 8009f24:	08017411 	stmdaeq	r1, {r0, r4, sl, ip, sp, lr}
 8009f28:	080172d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip, sp, lr}

08009f2c <RemoteConfig::HandleUptime()>:
 8009f2c:	7bc3      	ldrb	r3, [r0, #15]
 8009f2e:	b1ab      	cbz	r3, 8009f5c <RemoteConfig::HandleUptime()+0x30>
 8009f30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f32:	4b0b      	ldr	r3, [pc, #44]	@ (8009f60 <RemoteConfig::HandleUptime()+0x34>)
 8009f34:	4d0b      	ldr	r5, [pc, #44]	@ (8009f64 <RemoteConfig::HandleUptime()+0x38>)
 8009f36:	685b      	ldr	r3, [r3, #4]
 8009f38:	4a0b      	ldr	r2, [pc, #44]	@ (8009f68 <RemoteConfig::HandleUptime()+0x3c>)
 8009f3a:	4604      	mov	r4, r0
 8009f3c:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009f40:	6828      	ldr	r0, [r5, #0]
 8009f42:	f00c fc4d 	bl	80167e0 <snprintf>
 8009f46:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009f4a:	9300      	str	r3, [sp, #0]
 8009f4c:	4602      	mov	r2, r0
 8009f4e:	69a3      	ldr	r3, [r4, #24]
 8009f50:	6829      	ldr	r1, [r5, #0]
 8009f52:	6960      	ldr	r0, [r4, #20]
 8009f54:	f7ff ffb6 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009f58:	b003      	add	sp, #12
 8009f5a:	bd30      	pop	{r4, r5, pc}
 8009f5c:	4770      	bx	lr
 8009f5e:	bf00      	nop
 8009f60:	20009ae0 	andcs	r9, r0, r0, ror #21
 8009f64:	20000c80 	andcs	r0, r0, r0, lsl #25
 8009f68:	080172e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, ip, sp, lr}

08009f6c <RemoteConfig::HandleVersion()>:
 8009f6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f6e:	4d0a      	ldr	r5, [pc, #40]	@ (8009f98 <RemoteConfig::HandleVersion()+0x2c>)
 8009f70:	4b0a      	ldr	r3, [pc, #40]	@ (8009f9c <RemoteConfig::HandleVersion()+0x30>)
 8009f72:	4a0b      	ldr	r2, [pc, #44]	@ (8009fa0 <RemoteConfig::HandleVersion()+0x34>)
 8009f74:	4604      	mov	r4, r0
 8009f76:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009f7a:	6828      	ldr	r0, [r5, #0]
 8009f7c:	f00c fc30 	bl	80167e0 <snprintf>
 8009f80:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009f84:	9300      	str	r3, [sp, #0]
 8009f86:	4602      	mov	r2, r0
 8009f88:	69a3      	ldr	r3, [r4, #24]
 8009f8a:	6829      	ldr	r1, [r5, #0]
 8009f8c:	6960      	ldr	r0, [r4, #20]
 8009f8e:	f7ff ff99 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009f92:	b003      	add	sp, #12
 8009f94:	bd30      	pop	{r4, r5, pc}
 8009f96:	bf00      	nop
 8009f98:	20000c80 	andcs	r0, r0, r0, lsl #25
 8009f9c:	200021e0 	andcs	r2, r0, r0, ror #3
 8009fa0:	080172f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, ip, sp, lr}

08009fa4 <RemoteConfig::HandleTftpGet()>:
 8009fa4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fa6:	4604      	mov	r4, r0
 8009fa8:	4d0d      	ldr	r5, [pc, #52]	@ (8009fe0 <RemoteConfig::HandleTftpGet()+0x3c>)
 8009faa:	f000 fd21 	bl	800a9f0 <RemoteConfig::PlatformHandleTftpGet()>
 8009fae:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009fb2:	4a0c      	ldr	r2, [pc, #48]	@ (8009fe4 <RemoteConfig::HandleTftpGet()+0x40>)
 8009fb4:	4b0c      	ldr	r3, [pc, #48]	@ (8009fe8 <RemoteConfig::HandleTftpGet()+0x44>)
 8009fb6:	6828      	ldr	r0, [r5, #0]
 8009fb8:	2900      	cmp	r1, #0
 8009fba:	bf18      	it	ne
 8009fbc:	4613      	movne	r3, r2
 8009fbe:	4a0b      	ldr	r2, [pc, #44]	@ (8009fec <RemoteConfig::HandleTftpGet()+0x48>)
 8009fc0:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009fc4:	f00c fc0c 	bl	80167e0 <snprintf>
 8009fc8:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009fcc:	9300      	str	r3, [sp, #0]
 8009fce:	4602      	mov	r2, r0
 8009fd0:	69a3      	ldr	r3, [r4, #24]
 8009fd2:	6829      	ldr	r1, [r5, #0]
 8009fd4:	6960      	ldr	r0, [r4, #20]
 8009fd6:	f7ff ff75 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009fda:	b003      	add	sp, #12
 8009fdc:	bd30      	pop	{r4, r5, pc}
 8009fde:	bf00      	nop
 8009fe0:	20000c80 	andcs	r0, r0, r0, lsl #25
 8009fe4:	080172d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, ip, sp, lr}
 8009fe8:	08017411 	stmdaeq	r1, {r0, r4, sl, ip, sp, lr}
 8009fec:	080172fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp, lr}

08009ff0 <RemoteConfig::HandleList()>:
 8009ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ff4:	6801      	ldr	r1, [r0, #0]
 8009ff6:	4a23      	ldr	r2, [pc, #140]	@ (800a084 <RemoteConfig::HandleList()+0x94>)
 8009ff8:	4b23      	ldr	r3, [pc, #140]	@ (800a088 <RemoteConfig::HandleList()+0x98>)
 8009ffa:	4604      	mov	r4, r0
 8009ffc:	2012      	movs	r0, #18
 8009ffe:	fb00 2201 	mla	r2, r0, r1, r2
 800a002:	6860      	ldr	r0, [r4, #4]
 800a004:	4921      	ldr	r1, [pc, #132]	@ (800a08c <RemoteConfig::HandleList()+0x9c>)
 800a006:	681d      	ldr	r5, [r3, #0]
 800a008:	4b21      	ldr	r3, [pc, #132]	@ (800a090 <RemoteConfig::HandleList()+0xa0>)
 800a00a:	f04f 0e0c 	mov.w	lr, #12
 800a00e:	fb0e 1100 	mla	r1, lr, r0, r1
 800a012:	4820      	ldr	r0, [pc, #128]	@ (800a094 <RemoteConfig::HandleList()+0xa4>)
 800a014:	681e      	ldr	r6, [r3, #0]
 800a016:	f890 8009 	ldrb.w	r8, [r0, #9]
 800a01a:	f8d4 e008 	ldr.w	lr, [r4, #8]
 800a01e:	b2f3      	uxtb	r3, r6
 800a020:	f3c6 2707 	ubfx	r7, r6, #8, #8
 800a024:	f3c6 4c07 	ubfx	ip, r6, #16, #8
 800a028:	b088      	sub	sp, #32
 800a02a:	3507      	adds	r5, #7
 800a02c:	0e36      	lsrs	r6, r6, #24
 800a02e:	f1b8 0f00 	cmp.w	r8, #0
 800a032:	d019      	beq.n	800a068 <RemoteConfig::HandleList()+0x78>
 800a034:	3009      	adds	r0, #9
 800a036:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a03a:	e9cd e005 	strd	lr, r0, [sp, #20]
 800a03e:	e9cd c601 	strd	ip, r6, [sp, #4]
 800a042:	4a15      	ldr	r2, [pc, #84]	@ (800a098 <RemoteConfig::HandleList()+0xa8>)
 800a044:	9700      	str	r7, [sp, #0]
 800a046:	f240 5184 	movw	r1, #1412	@ 0x584
 800a04a:	4628      	mov	r0, r5
 800a04c:	f00c fbc8 	bl	80167e0 <snprintf>
 800a050:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a054:	9300      	str	r3, [sp, #0]
 800a056:	4602      	mov	r2, r0
 800a058:	69a3      	ldr	r3, [r4, #24]
 800a05a:	6960      	ldr	r0, [r4, #20]
 800a05c:	4629      	mov	r1, r5
 800a05e:	f7ff ff31 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a062:	b008      	add	sp, #32
 800a064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a068:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 800a06c:	e9cd 6202 	strd	r6, r2, [sp, #8]
 800a070:	e9cd 7c00 	strd	r7, ip, [sp]
 800a074:	4a09      	ldr	r2, [pc, #36]	@ (800a09c <RemoteConfig::HandleList()+0xac>)
 800a076:	f240 5184 	movw	r1, #1412	@ 0x584
 800a07a:	4628      	mov	r0, r5
 800a07c:	f00c fbb0 	bl	80167e0 <snprintf>
 800a080:	e7e6      	b.n	800a050 <RemoteConfig::HandleList()+0x60>
 800a082:	bf00      	nop
 800a084:	08017e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, ip, sp, lr}
 800a088:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a08c:	08017d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, sp, lr}
 800a090:	20002088 	andcs	r2, r0, r8, lsl #1
 800a094:	20000c84 	andcs	r0, r0, r4, lsl #25
 800a098:	08017306 	stmdaeq	r1, {r1, r2, r8, r9, ip, sp, lr}
 800a09c:	0801731f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, ip, sp, lr}

0800a0a0 <RemoteConfig::HandleDisplaySet()>:
 800a0a0:	b508      	push	{r3, lr}
 800a0a2:	69c3      	ldr	r3, [r0, #28]
 800a0a4:	2b09      	cmp	r3, #9
 800a0a6:	d10a      	bne.n	800a0be <RemoteConfig::HandleDisplaySet()+0x1e>
 800a0a8:	4b05      	ldr	r3, [pc, #20]	@ (800a0c0 <RemoteConfig::HandleDisplaySet()+0x20>)
 800a0aa:	681b      	ldr	r3, [r3, #0]
 800a0ac:	7a59      	ldrb	r1, [r3, #9]
 800a0ae:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 800a0b2:	4259      	negs	r1, r3
 800a0b4:	4159      	adcs	r1, r3
 800a0b6:	4b03      	ldr	r3, [pc, #12]	@ (800a0c4 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a0b8:	6818      	ldr	r0, [r3, #0]
 800a0ba:	f7ff fa93 	bl	80095e4 <Display::SetSleep(bool)>
 800a0be:	bd08      	pop	{r3, pc}
 800a0c0:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a0c4:	2000214c 	andcs	r2, r0, ip, asr #2

0800a0c8 <RemoteConfig::HandleTftpSet()>:
 800a0c8:	69c3      	ldr	r3, [r0, #28]
 800a0ca:	2b06      	cmp	r3, #6
 800a0cc:	d115      	bne.n	800a0fa <RemoteConfig::HandleTftpSet()+0x32>
 800a0ce:	b510      	push	{r4, lr}
 800a0d0:	4b0a      	ldr	r3, [pc, #40]	@ (800a0fc <RemoteConfig::HandleTftpSet()+0x34>)
 800a0d2:	681b      	ldr	r3, [r3, #0]
 800a0d4:	799b      	ldrb	r3, [r3, #6]
 800a0d6:	2b30      	cmp	r3, #48	@ 0x30
 800a0d8:	bf14      	ite	ne
 800a0da:	2301      	movne	r3, #1
 800a0dc:	2300      	moveq	r3, #0
 800a0de:	4604      	mov	r4, r0
 800a0e0:	f880 3020 	strb.w	r3, [r0, #32]
 800a0e4:	d004      	beq.n	800a0f0 <RemoteConfig::HandleTftpSet()+0x28>
 800a0e6:	4b06      	ldr	r3, [pc, #24]	@ (800a100 <RemoteConfig::HandleTftpSet()+0x38>)
 800a0e8:	2100      	movs	r1, #0
 800a0ea:	6818      	ldr	r0, [r3, #0]
 800a0ec:	f7ff fa7a 	bl	80095e4 <Display::SetSleep(bool)>
 800a0f0:	4620      	mov	r0, r4
 800a0f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0f6:	f000 bc57 	b.w	800a9a8 <RemoteConfig::PlatformHandleTftpSet()>
 800a0fa:	4770      	bx	lr
 800a0fc:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a100:	2000214c 	andcs	r2, r0, ip, asr #2

0800a104 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
 800a104:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a106:	2500      	movs	r5, #0
 800a108:	4604      	mov	r4, r0
 800a10a:	e9c0 1200 	strd	r1, r2, [r0]
 800a10e:	6083      	str	r3, [r0, #8]
 800a110:	60c5      	str	r5, [r0, #12]
 800a112:	8205      	strh	r5, [r0, #16]
 800a114:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a118:	e9c4 0505 	strd	r0, r5, [r4, #20]
 800a11c:	4f13      	ldr	r7, [pc, #76]	@ (800a16c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x68>)
 800a11e:	4814      	ldr	r0, [pc, #80]	@ (800a170 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x6c>)
 800a120:	4e14      	ldr	r6, [pc, #80]	@ (800a174 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x70>)
 800a122:	6004      	str	r4, [r0, #0]
 800a124:	6978      	ldr	r0, [r7, #20]
 800a126:	6030      	str	r0, [r6, #0]
 800a128:	8b38      	ldrh	r0, [r7, #24]
 800a12a:	61e5      	str	r5, [r4, #28]
 800a12c:	f884 5020 	strb.w	r5, [r4, #32]
 800a130:	6265      	str	r5, [r4, #36]	@ 0x24
 800a132:	80b0      	strh	r0, [r6, #4]
 800a134:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a138:	71b1      	strb	r1, [r6, #6]
 800a13a:	71f2      	strb	r2, [r6, #7]
 800a13c:	7233      	strb	r3, [r6, #8]
 800a13e:	7275      	strb	r5, [r6, #9]
 800a140:	f007 fb44 	bl	80117cc <net::udp_begin(unsigned short)>
 800a144:	6160      	str	r0, [r4, #20]
 800a146:	480c      	ldr	r0, [pc, #48]	@ (800a178 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x74>)
 800a148:	9500      	str	r5, [sp, #0]
 800a14a:	462b      	mov	r3, r5
 800a14c:	462a      	mov	r2, r5
 800a14e:	4629      	mov	r1, r5
 800a150:	6800      	ldr	r0, [r0, #0]
 800a152:	f005 feff 	bl	800ff54 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a156:	2020      	movs	r0, #32
 800a158:	f00c fd70 	bl	8016c3c <operator new(unsigned int)>
 800a15c:	4605      	mov	r5, r0
 800a15e:	f000 fc55 	bl	800aa0c <HttpDaemon::HttpDaemon()>
 800a162:	4620      	mov	r0, r4
 800a164:	6265      	str	r5, [r4, #36]	@ 0x24
 800a166:	b003      	add	sp, #12
 800a168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a16a:	bf00      	nop
 800a16c:	20002088 	andcs	r2, r0, r8, lsl #1
 800a170:	20000ca8 	andcs	r0, r0, r8, lsr #25
 800a174:	20000c84 	andcs	r0, r0, r4, lsl #25
 800a178:	20001e24 	andcs	r1, r0, r4, lsr #28

0800a17c <RemoteConfig::GetStringNode() const>:
 800a17c:	4b03      	ldr	r3, [pc, #12]	@ (800a18c <RemoteConfig::GetStringNode() const+0x10>)
 800a17e:	7998      	ldrb	r0, [r3, #6]
 800a180:	4b03      	ldr	r3, [pc, #12]	@ (800a190 <RemoteConfig::GetStringNode() const+0x14>)
 800a182:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a186:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a18a:	4770      	bx	lr
 800a18c:	20000c84 	andcs	r0, r0, r4, lsl #25
 800a190:	08017e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, ip, sp, lr}

0800a194 <RemoteConfig::GetStringOutput() const>:
 800a194:	4b03      	ldr	r3, [pc, #12]	@ (800a1a4 <RemoteConfig::GetStringOutput() const+0x10>)
 800a196:	79d8      	ldrb	r0, [r3, #7]
 800a198:	4b03      	ldr	r3, [pc, #12]	@ (800a1a8 <RemoteConfig::GetStringOutput() const+0x14>)
 800a19a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a19e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a1a2:	4770      	bx	lr
 800a1a4:	20000c84 	andcs	r0, r0, r4, lsl #25
 800a1a8:	08017d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, sp, lr}

0800a1ac <RemoteConfig::SetDisable(bool)>:
 800a1ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1ae:	7b06      	ldrb	r6, [r0, #12]
 800a1b0:	4605      	mov	r5, r0
 800a1b2:	b181      	cbz	r1, 800a1d6 <RemoteConfig::SetDisable(bool)+0x2a>
 800a1b4:	b96e      	cbnz	r6, 800a1d2 <RemoteConfig::SetDisable(bool)+0x26>
 800a1b6:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a1ba:	f007 fb1d 	bl	80117f8 <net::udp_end(unsigned short)>
 800a1be:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a1c2:	616b      	str	r3, [r5, #20]
 800a1c4:	4b0d      	ldr	r3, [pc, #52]	@ (800a1fc <RemoteConfig::SetDisable(bool)+0x50>)
 800a1c6:	4631      	mov	r1, r6
 800a1c8:	6818      	ldr	r0, [r3, #0]
 800a1ca:	f005 fea7 	bl	800ff1c <MDNS::ServiceRecordDelete(mdns::Services)>
 800a1ce:	2301      	movs	r3, #1
 800a1d0:	732b      	strb	r3, [r5, #12]
 800a1d2:	b002      	add	sp, #8
 800a1d4:	bd70      	pop	{r4, r5, r6, pc}
 800a1d6:	2e00      	cmp	r6, #0
 800a1d8:	d0fb      	beq.n	800a1d2 <RemoteConfig::SetDisable(bool)+0x26>
 800a1da:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a1de:	460c      	mov	r4, r1
 800a1e0:	f007 faf4 	bl	80117cc <net::udp_begin(unsigned short)>
 800a1e4:	6168      	str	r0, [r5, #20]
 800a1e6:	4805      	ldr	r0, [pc, #20]	@ (800a1fc <RemoteConfig::SetDisable(bool)+0x50>)
 800a1e8:	9400      	str	r4, [sp, #0]
 800a1ea:	6800      	ldr	r0, [r0, #0]
 800a1ec:	4623      	mov	r3, r4
 800a1ee:	4622      	mov	r2, r4
 800a1f0:	4621      	mov	r1, r4
 800a1f2:	f005 feaf 	bl	800ff54 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a1f6:	732c      	strb	r4, [r5, #12]
 800a1f8:	e7eb      	b.n	800a1d2 <RemoteConfig::SetDisable(bool)+0x26>
 800a1fa:	bf00      	nop
 800a1fc:	20001e24 	andcs	r1, r0, r4, lsr #28

0800a200 <RemoteConfig::SetDisplayName(char const*)>:
 800a200:	b508      	push	{r3, lr}
 800a202:	4809      	ldr	r0, [pc, #36]	@ (800a228 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a204:	3901      	subs	r1, #1
 800a206:	2217      	movs	r2, #23
 800a208:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a20c:	b11b      	cbz	r3, 800a216 <RemoteConfig::SetDisplayName(char const*)+0x16>
 800a20e:	3a01      	subs	r2, #1
 800a210:	f800 3b01 	strb.w	r3, [r0], #1
 800a214:	d1f8      	bne.n	800a208 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a216:	2100      	movs	r1, #0
 800a218:	f00b ffd6 	bl	80161c8 <memset>
 800a21c:	4b03      	ldr	r3, [pc, #12]	@ (800a22c <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a21e:	2200      	movs	r2, #0
 800a220:	f883 2020 	strb.w	r2, [r3, #32]
 800a224:	bd08      	pop	{r3, pc}
 800a226:	bf00      	nop
 800a228:	20000c8d 	andcs	r0, r0, sp, lsl #25
 800a22c:	20000c84 	andcs	r0, r0, r4, lsl #25

0800a230 <RemoteConfig::HandleGet(void*, unsigned long)>:
 800a230:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a232:	4f29      	ldr	r7, [pc, #164]	@ (800a2d8 <RemoteConfig::HandleGet(void*, unsigned long)+0xa8>)
 800a234:	b085      	sub	sp, #20
 800a236:	4604      	mov	r4, r0
 800a238:	4616      	mov	r6, r2
 800a23a:	460d      	mov	r5, r1
 800a23c:	b9a9      	cbnz	r1, 800a26a <RemoteConfig::HandleGet(void*, unsigned long)+0x3a>
 800a23e:	6839      	ldr	r1, [r7, #0]
 800a240:	f44f 63b1 	mov.w	r3, #1416	@ 0x588
 800a244:	aa03      	add	r2, sp, #12
 800a246:	3105      	adds	r1, #5
 800a248:	9303      	str	r3, [sp, #12]
 800a24a:	f000 fb81 	bl	800a950 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a24e:	1e03      	subs	r3, r0, #0
 800a250:	da1b      	bge.n	800a28a <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a252:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a256:	9300      	str	r3, [sp, #0]
 800a258:	69a3      	ldr	r3, [r4, #24]
 800a25a:	4920      	ldr	r1, [pc, #128]	@ (800a2dc <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a25c:	6960      	ldr	r0, [r4, #20]
 800a25e:	220b      	movs	r2, #11
 800a260:	f7ff fe30 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a264:	200c      	movs	r0, #12
 800a266:	b005      	add	sp, #20
 800a268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a26a:	9203      	str	r2, [sp, #12]
 800a26c:	aa03      	add	r2, sp, #12
 800a26e:	6039      	str	r1, [r7, #0]
 800a270:	f000 fb6e 	bl	800a950 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a274:	1e03      	subs	r3, r0, #0
 800a276:	da08      	bge.n	800a28a <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a278:	2e0b      	cmp	r6, #11
 800a27a:	4632      	mov	r2, r6
 800a27c:	4917      	ldr	r1, [pc, #92]	@ (800a2dc <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a27e:	bf28      	it	cs
 800a280:	220b      	movcs	r2, #11
 800a282:	4628      	mov	r0, r5
 800a284:	f00b ff7e 	bl	8016184 <memcpy>
 800a288:	e7ec      	b.n	800a264 <RemoteConfig::HandleGet(void*, unsigned long)+0x34>
 800a28a:	4915      	ldr	r1, [pc, #84]	@ (800a2e0 <RemoteConfig::HandleGet(void*, unsigned long)+0xb0>)
 800a28c:	2218      	movs	r2, #24
 800a28e:	4353      	muls	r3, r2
 800a290:	18ca      	adds	r2, r1, r3
 800a292:	58cb      	ldr	r3, [r1, r3]
 800a294:	6852      	ldr	r2, [r2, #4]
 800a296:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a29a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a29e:	07d2      	lsls	r2, r2, #31
 800a2a0:	bf48      	it	mi
 800a2a2:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a2a6:	a903      	add	r1, sp, #12
 800a2a8:	bf48      	it	mi
 800a2aa:	58d3      	ldrmi	r3, [r2, r3]
 800a2ac:	4798      	blx	r3
 800a2ae:	b955      	cbnz	r5, 800a2c6 <RemoteConfig::HandleGet(void*, unsigned long)+0x96>
 800a2b0:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a2b4:	9300      	str	r3, [sp, #0]
 800a2b6:	69a3      	ldr	r3, [r4, #24]
 800a2b8:	9a03      	ldr	r2, [sp, #12]
 800a2ba:	6839      	ldr	r1, [r7, #0]
 800a2bc:	6960      	ldr	r0, [r4, #20]
 800a2be:	f7ff fe01 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a2c2:	9803      	ldr	r0, [sp, #12]
 800a2c4:	e7cf      	b.n	800a266 <RemoteConfig::HandleGet(void*, unsigned long)+0x36>
 800a2c6:	9a03      	ldr	r2, [sp, #12]
 800a2c8:	6839      	ldr	r1, [r7, #0]
 800a2ca:	42b2      	cmp	r2, r6
 800a2cc:	bf28      	it	cs
 800a2ce:	4632      	movcs	r2, r6
 800a2d0:	4628      	mov	r0, r5
 800a2d2:	f00b ff62 	bl	801619a <memmove>
 800a2d6:	e7f4      	b.n	800a2c2 <RemoteConfig::HandleGet(void*, unsigned long)+0x92>
 800a2d8:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a2dc:	08017335 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, ip, sp, lr}
 800a2e0:	08017fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0800a2e4 <RemoteConfig::HandleGetNoParams()>:
 800a2e4:	2200      	movs	r2, #0
 800a2e6:	4611      	mov	r1, r2
 800a2e8:	f7ff bfa2 	b.w	800a230 <RemoteConfig::HandleGet(void*, unsigned long)>

0800a2ec <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
 800a2ec:	b510      	push	{r4, lr}
 800a2ee:	b08a      	sub	sp, #40	@ 0x28
 800a2f0:	a802      	add	r0, sp, #8
 800a2f2:	460c      	mov	r4, r1
 800a2f4:	f000 f9c6 	bl	800a684 <RemoteConfigParams::RemoteConfigParams()>
 800a2f8:	4a05      	ldr	r2, [pc, #20]	@ (800a310 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)+0x24>)
 800a2fa:	9400      	str	r4, [sp, #0]
 800a2fc:	6812      	ldr	r2, [r2, #0]
 800a2fe:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a302:	2100      	movs	r1, #0
 800a304:	a802      	add	r0, sp, #8
 800a306:	f000 fa35 	bl	800a774 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
 800a30a:	b00a      	add	sp, #40	@ 0x28
 800a30c:	bd10      	pop	{r4, pc}
 800a30e:	bf00      	nop
 800a310:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a314 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
 800a314:	b513      	push	{r0, r1, r4, lr}
 800a316:	a801      	add	r0, sp, #4
 800a318:	460c      	mov	r4, r1
 800a31a:	f009 f801 	bl	8013320 <EnvParams::EnvParams()>
 800a31e:	4905      	ldr	r1, [pc, #20]	@ (800a334 <RemoteConfig::HandleGetEnvTxt(unsigned long&)+0x20>)
 800a320:	4623      	mov	r3, r4
 800a322:	6809      	ldr	r1, [r1, #0]
 800a324:	f240 528c 	movw	r2, #1420	@ 0x58c
 800a328:	a801      	add	r0, sp, #4
 800a32a:	f009 f857 	bl	80133dc <EnvParams::Builder(char*, unsigned long, unsigned long&)>
 800a32e:	b002      	add	sp, #8
 800a330:	bd10      	pop	{r4, pc}
 800a332:	bf00      	nop
 800a334:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a338 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
 800a338:	b510      	push	{r4, lr}
 800a33a:	b09a      	sub	sp, #104	@ 0x68
 800a33c:	a802      	add	r0, sp, #8
 800a33e:	460c      	mov	r4, r1
 800a340:	f007 fb34 	bl	80119ac <NetworkParams::NetworkParams()>
 800a344:	4a05      	ldr	r2, [pc, #20]	@ (800a35c <RemoteConfig::HandleGetNetworkTxt(unsigned long&)+0x24>)
 800a346:	9400      	str	r4, [sp, #0]
 800a348:	6812      	ldr	r2, [r2, #0]
 800a34a:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a34e:	2100      	movs	r1, #0
 800a350:	a802      	add	r0, sp, #8
 800a352:	f007 fc17 	bl	8011b84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
 800a356:	b01a      	add	sp, #104	@ 0x68
 800a358:	bd10      	pop	{r4, pc}
 800a35a:	bf00      	nop
 800a35c:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a360 <RemoteConfig::HandleGetE131Txt(unsigned long&)>:
 800a360:	b510      	push	{r4, lr}
 800a362:	b0ba      	sub	sp, #232	@ 0xe8
 800a364:	a803      	add	r0, sp, #12
 800a366:	460c      	mov	r4, r1
 800a368:	f001 fffc 	bl	800c364 <E131Params::E131Params()>
 800a36c:	4a05      	ldr	r2, [pc, #20]	@ (800a384 <RemoteConfig::HandleGetE131Txt(unsigned long&)+0x24>)
 800a36e:	9400      	str	r4, [sp, #0]
 800a370:	6812      	ldr	r2, [r2, #0]
 800a372:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a376:	2100      	movs	r1, #0
 800a378:	a803      	add	r0, sp, #12
 800a37a:	f002 f9f7 	bl	800c76c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)>
 800a37e:	b03a      	add	sp, #232	@ 0xe8
 800a380:	bd10      	pop	{r4, pc}
 800a382:	bf00      	nop
 800a384:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a388 <RemoteConfig::HandleGetParamsTxt(unsigned long&)>:
 800a388:	b510      	push	{r4, lr}
 800a38a:	b086      	sub	sp, #24
 800a38c:	a803      	add	r0, sp, #12
 800a38e:	460c      	mov	r4, r1
 800a390:	f003 ff64 	bl	800e25c <DmxParams::DmxParams()>
 800a394:	4a05      	ldr	r2, [pc, #20]	@ (800a3ac <RemoteConfig::HandleGetParamsTxt(unsigned long&)+0x24>)
 800a396:	9400      	str	r4, [sp, #0]
 800a398:	6812      	ldr	r2, [r2, #0]
 800a39a:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a39e:	2100      	movs	r1, #0
 800a3a0:	a803      	add	r0, sp, #12
 800a3a2:	f004 f809 	bl	800e3b8 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)>
 800a3a6:	b006      	add	sp, #24
 800a3a8:	bd10      	pop	{r4, pc}
 800a3aa:	bf00      	nop
 800a3ac:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a3b0 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)>:
 800a3b0:	b510      	push	{r4, lr}
 800a3b2:	b08c      	sub	sp, #48	@ 0x30
 800a3b4:	a803      	add	r0, sp, #12
 800a3b6:	460c      	mov	r4, r1
 800a3b8:	f008 fbb4 	bl	8012b24 <DisplayUdfParams::DisplayUdfParams()>
 800a3bc:	4a05      	ldr	r2, [pc, #20]	@ (800a3d4 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)+0x24>)
 800a3be:	9400      	str	r4, [sp, #0]
 800a3c0:	6812      	ldr	r2, [r2, #0]
 800a3c2:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a3c6:	2100      	movs	r1, #0
 800a3c8:	a803      	add	r0, sp, #12
 800a3ca:	f008 fc4d 	bl	8012c68 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>
 800a3ce:	b00c      	add	sp, #48	@ 0x30
 800a3d0:	bd10      	pop	{r4, pc}
 800a3d2:	bf00      	nop
 800a3d4:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a3d8 <RemoteConfig::HandleSet(void*, unsigned long)>:
 800a3d8:	b530      	push	{r4, r5, lr}
 800a3da:	b085      	sub	sp, #20
 800a3dc:	4604      	mov	r4, r0
 800a3de:	9201      	str	r2, [sp, #4]
 800a3e0:	b9d1      	cbnz	r1, 800a418 <RemoteConfig::HandleSet(void*, unsigned long)+0x40>
 800a3e2:	f240 538b 	movw	r3, #1419	@ 0x58b
 800a3e6:	9303      	str	r3, [sp, #12]
 800a3e8:	4b19      	ldr	r3, [pc, #100]	@ (800a450 <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a3ea:	6819      	ldr	r1, [r3, #0]
 800a3ec:	aa03      	add	r2, sp, #12
 800a3ee:	3101      	adds	r1, #1
 800a3f0:	f000 faae 	bl	800a950 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a3f4:	2800      	cmp	r0, #0
 800a3f6:	db0d      	blt.n	800a414 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a3f8:	4b16      	ldr	r3, [pc, #88]	@ (800a454 <RemoteConfig::HandleSet(void*, unsigned long)+0x7c>)
 800a3fa:	2218      	movs	r2, #24
 800a3fc:	fb02 3300 	mla	r3, r2, r0, r3
 800a400:	68da      	ldr	r2, [r3, #12]
 800a402:	689b      	ldr	r3, [r3, #8]
 800a404:	1051      	asrs	r1, r2, #1
 800a406:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a40a:	07d2      	lsls	r2, r2, #31
 800a40c:	bf44      	itt	mi
 800a40e:	5862      	ldrmi	r2, [r4, r1]
 800a410:	58d3      	ldrmi	r3, [r2, r3]
 800a412:	4798      	blx	r3
 800a414:	b005      	add	sp, #20
 800a416:	bd30      	pop	{r4, r5, pc}
 800a418:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a41c:	429a      	cmp	r2, r3
 800a41e:	d8f9      	bhi.n	800a414 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a420:	4b0d      	ldr	r3, [pc, #52]	@ (800a458 <RemoteConfig::HandleSet(void*, unsigned long)+0x80>)
 800a422:	781b      	ldrb	r3, [r3, #0]
 800a424:	460d      	mov	r5, r1
 800a426:	07d9      	lsls	r1, r3, #31
 800a428:	d50b      	bpl.n	800a442 <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a42a:	782b      	ldrb	r3, [r5, #0]
 800a42c:	2b7b      	cmp	r3, #123	@ 0x7b
 800a42e:	d108      	bne.n	800a442 <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a430:	1e51      	subs	r1, r2, #1
 800a432:	b289      	uxth	r1, r1
 800a434:	2200      	movs	r2, #0
 800a436:	4628      	mov	r0, r5
 800a438:	f009 f824 	bl	8013484 <properties::convert_json_file(char*, unsigned long, bool)>
 800a43c:	1e02      	subs	r2, r0, #0
 800a43e:	dde9      	ble.n	800a414 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a440:	b292      	uxth	r2, r2
 800a442:	4b03      	ldr	r3, [pc, #12]	@ (800a450 <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a444:	61e2      	str	r2, [r4, #28]
 800a446:	601d      	str	r5, [r3, #0]
 800a448:	aa01      	add	r2, sp, #4
 800a44a:	1c69      	adds	r1, r5, #1
 800a44c:	4620      	mov	r0, r4
 800a44e:	e7cf      	b.n	800a3f0 <RemoteConfig::HandleSet(void*, unsigned long)+0x18>
 800a450:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a454:	08017fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 800a458:	20002149 	andcs	r2, r0, r9, asr #2

0800a45c <RemoteConfig::HandleRequest()>:
 800a45c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a460:	69c2      	ldr	r2, [r0, #28]
 800a462:	4b3f      	ldr	r3, [pc, #252]	@ (800a560 <RemoteConfig::HandleRequest()+0x104>)
 800a464:	3a01      	subs	r2, #1
 800a466:	681b      	ldr	r3, [r3, #0]
 800a468:	5c99      	ldrb	r1, [r3, r2]
 800a46a:	290a      	cmp	r1, #10
 800a46c:	bf08      	it	eq
 800a46e:	61c2      	streq	r2, [r0, #28]
 800a470:	7819      	ldrb	r1, [r3, #0]
 800a472:	293f      	cmp	r1, #63	@ 0x3f
 800a474:	d13c      	bne.n	800a4f0 <RemoteConfig::HandleRequest()+0x94>
 800a476:	69c4      	ldr	r4, [r0, #28]
 800a478:	493a      	ldr	r1, [pc, #232]	@ (800a564 <RemoteConfig::HandleRequest()+0x108>)
 800a47a:	3c01      	subs	r4, #1
 800a47c:	61c4      	str	r4, [r0, #28]
 800a47e:	2200      	movs	r2, #0
 800a480:	468c      	mov	ip, r1
 800a482:	7b8e      	ldrb	r6, [r1, #14]
 800a484:	898d      	ldrh	r5, [r1, #12]
 800a486:	b18e      	cbz	r6, 800a4ac <RemoteConfig::HandleRequest()+0x50>
 800a488:	42ac      	cmp	r4, r5
 800a48a:	d811      	bhi.n	800a4b0 <RemoteConfig::HandleRequest()+0x54>
 800a48c:	3201      	adds	r2, #1
 800a48e:	2a08      	cmp	r2, #8
 800a490:	f101 0110 	add.w	r1, r1, #16
 800a494:	d1f5      	bne.n	800a482 <RemoteConfig::HandleRequest()+0x26>
 800a496:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a49a:	9300      	str	r3, [sp, #0]
 800a49c:	6983      	ldr	r3, [r0, #24]
 800a49e:	4932      	ldr	r1, [pc, #200]	@ (800a568 <RemoteConfig::HandleRequest()+0x10c>)
 800a4a0:	6940      	ldr	r0, [r0, #20]
 800a4a2:	f7ff fd0f 	bl	8009ec4 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a4a6:	b002      	add	sp, #8
 800a4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a4ac:	42ac      	cmp	r4, r5
 800a4ae:	d1ed      	bne.n	800a48c <RemoteConfig::HandleRequest()+0x30>
 800a4b0:	688e      	ldr	r6, [r1, #8]
 800a4b2:	461f      	mov	r7, r3
 800a4b4:	3e01      	subs	r6, #1
 800a4b6:	441d      	add	r5, r3
 800a4b8:	42af      	cmp	r7, r5
 800a4ba:	d10f      	bne.n	800a4dc <RemoteConfig::HandleRequest()+0x80>
 800a4bc:	0113      	lsls	r3, r2, #4
 800a4be:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 800a4c2:	f85c 3003 	ldr.w	r3, [ip, r3]
 800a4c6:	6852      	ldr	r2, [r2, #4]
 800a4c8:	1054      	asrs	r4, r2, #1
 800a4ca:	eb00 0162 	add.w	r1, r0, r2, asr #1
 800a4ce:	07d2      	lsls	r2, r2, #31
 800a4d0:	d40b      	bmi.n	800a4ea <RemoteConfig::HandleRequest()+0x8e>
 800a4d2:	4608      	mov	r0, r1
 800a4d4:	b002      	add	sp, #8
 800a4d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a4da:	4718      	bx	r3
 800a4dc:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 800a4e0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a4e4:	45f0      	cmp	r8, lr
 800a4e6:	d0e7      	beq.n	800a4b8 <RemoteConfig::HandleRequest()+0x5c>
 800a4e8:	e7d0      	b.n	800a48c <RemoteConfig::HandleRequest()+0x30>
 800a4ea:	5902      	ldr	r2, [r0, r4]
 800a4ec:	58d3      	ldr	r3, [r2, r3]
 800a4ee:	e7f0      	b.n	800a4d2 <RemoteConfig::HandleRequest()+0x76>
 800a4f0:	7b42      	ldrb	r2, [r0, #13]
 800a4f2:	2a00      	cmp	r2, #0
 800a4f4:	d1d7      	bne.n	800a4a6 <RemoteConfig::HandleRequest()+0x4a>
 800a4f6:	2923      	cmp	r1, #35	@ 0x23
 800a4f8:	d105      	bne.n	800a506 <RemoteConfig::HandleRequest()+0xaa>
 800a4fa:	4611      	mov	r1, r2
 800a4fc:	b002      	add	sp, #8
 800a4fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a502:	f7ff bf69 	b.w	800a3d8 <RemoteConfig::HandleSet(void*, unsigned long)>
 800a506:	2921      	cmp	r1, #33	@ 0x21
 800a508:	d1cd      	bne.n	800a4a6 <RemoteConfig::HandleRequest()+0x4a>
 800a50a:	69c2      	ldr	r2, [r0, #28]
 800a50c:	3a01      	subs	r2, #1
 800a50e:	2a05      	cmp	r2, #5
 800a510:	61c2      	str	r2, [r0, #28]
 800a512:	d91e      	bls.n	800a552 <RemoteConfig::HandleRequest()+0xf6>
 800a514:	4d15      	ldr	r5, [pc, #84]	@ (800a56c <RemoteConfig::HandleRequest()+0x110>)
 800a516:	4619      	mov	r1, r3
 800a518:	1d5e      	adds	r6, r3, #5
 800a51a:	461c      	mov	r4, r3
 800a51c:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800a520:	f815 7b01 	ldrb.w	r7, [r5], #1
 800a524:	45bc      	cmp	ip, r7
 800a526:	d112      	bne.n	800a54e <RemoteConfig::HandleRequest()+0xf2>
 800a528:	42b4      	cmp	r4, r6
 800a52a:	d1f7      	bne.n	800a51c <RemoteConfig::HandleRequest()+0xc0>
 800a52c:	2300      	movs	r3, #0
 800a52e:	4a10      	ldr	r2, [pc, #64]	@ (800a570 <RemoteConfig::HandleRequest()+0x114>)
 800a530:	011b      	lsls	r3, r3, #4
 800a532:	58d3      	ldr	r3, [r2, r3]
 800a534:	e7ce      	b.n	800a4d4 <RemoteConfig::HandleRequest()+0x78>
 800a536:	4a0f      	ldr	r2, [pc, #60]	@ (800a574 <RemoteConfig::HandleRequest()+0x118>)
 800a538:	3308      	adds	r3, #8
 800a53a:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800a53e:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a542:	42a5      	cmp	r5, r4
 800a544:	d105      	bne.n	800a552 <RemoteConfig::HandleRequest()+0xf6>
 800a546:	4299      	cmp	r1, r3
 800a548:	d1f7      	bne.n	800a53a <RemoteConfig::HandleRequest()+0xde>
 800a54a:	2301      	movs	r3, #1
 800a54c:	e7ef      	b.n	800a52e <RemoteConfig::HandleRequest()+0xd2>
 800a54e:	2a08      	cmp	r2, #8
 800a550:	d8f1      	bhi.n	800a536 <RemoteConfig::HandleRequest()+0xda>
 800a552:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a556:	9300      	str	r3, [sp, #0]
 800a558:	6983      	ldr	r3, [r0, #24]
 800a55a:	4907      	ldr	r1, [pc, #28]	@ (800a578 <RemoteConfig::HandleRequest()+0x11c>)
 800a55c:	2208      	movs	r2, #8
 800a55e:	e79f      	b.n	800a4a0 <RemoteConfig::HandleRequest()+0x44>
 800a560:	20000c80 	andcs	r0, r0, r0, lsl #25
 800a564:	08017f3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}
 800a568:	08017341 	stmdaeq	r1, {r0, r6, r8, r9, ip, sp, lr}
 800a56c:	0801734a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp, lr}
 800a570:	08017f1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, fp, ip, sp, lr}
 800a574:	08017350 	stmdaeq	r1, {r4, r6, r8, r9, ip, sp, lr}
 800a578:	08017359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, ip, sp, lr}

0800a57c <RemoteConfig::HandleSetRconfigTxt()>:
 800a57c:	b510      	push	{r4, lr}
 800a57e:	b088      	sub	sp, #32
 800a580:	4604      	mov	r4, r0
 800a582:	4668      	mov	r0, sp
 800a584:	f000 f87e 	bl	800a684 <RemoteConfigParams::RemoteConfigParams()>
 800a588:	4b05      	ldr	r3, [pc, #20]	@ (800a5a0 <RemoteConfig::HandleSetRconfigTxt()+0x24>)
 800a58a:	69e2      	ldr	r2, [r4, #28]
 800a58c:	6819      	ldr	r1, [r3, #0]
 800a58e:	4668      	mov	r0, sp
 800a590:	f000 f88a 	bl	800a6a8 <RemoteConfigParams::Load(char const*, unsigned long)>
 800a594:	4621      	mov	r1, r4
 800a596:	4668      	mov	r0, sp
 800a598:	f000 f98a 	bl	800a8b0 <RemoteConfigParams::Set(RemoteConfig*)>
 800a59c:	b008      	add	sp, #32
 800a59e:	bd10      	pop	{r4, pc}
 800a5a0:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a5a4 <RemoteConfig::HandleSetEnvTxt()>:
 800a5a4:	b513      	push	{r0, r1, r4, lr}
 800a5a6:	4604      	mov	r4, r0
 800a5a8:	a801      	add	r0, sp, #4
 800a5aa:	f008 feb9 	bl	8013320 <EnvParams::EnvParams()>
 800a5ae:	4b04      	ldr	r3, [pc, #16]	@ (800a5c0 <RemoteConfig::HandleSetEnvTxt()+0x1c>)
 800a5b0:	69e2      	ldr	r2, [r4, #28]
 800a5b2:	6819      	ldr	r1, [r3, #0]
 800a5b4:	a801      	add	r0, sp, #4
 800a5b6:	f008 feb5 	bl	8013324 <EnvParams::LoadAndSet(char const*, unsigned long)>
 800a5ba:	b002      	add	sp, #8
 800a5bc:	bd10      	pop	{r4, pc}
 800a5be:	bf00      	nop
 800a5c0:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a5c4 <RemoteConfig::HandleSetNetworkTxt()>:
 800a5c4:	b510      	push	{r4, lr}
 800a5c6:	b098      	sub	sp, #96	@ 0x60
 800a5c8:	4604      	mov	r4, r0
 800a5ca:	4668      	mov	r0, sp
 800a5cc:	f007 f9ee 	bl	80119ac <NetworkParams::NetworkParams()>
 800a5d0:	4b03      	ldr	r3, [pc, #12]	@ (800a5e0 <RemoteConfig::HandleSetNetworkTxt()+0x1c>)
 800a5d2:	69e2      	ldr	r2, [r4, #28]
 800a5d4:	6819      	ldr	r1, [r3, #0]
 800a5d6:	4668      	mov	r0, sp
 800a5d8:	f007 f9fc 	bl	80119d4 <NetworkParams::Load(char const*, unsigned long)>
 800a5dc:	b018      	add	sp, #96	@ 0x60
 800a5de:	bd10      	pop	{r4, pc}
 800a5e0:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a5e4 <RemoteConfig::HandleSetE131Txt()>:
 800a5e4:	b510      	push	{r4, lr}
 800a5e6:	b0b8      	sub	sp, #224	@ 0xe0
 800a5e8:	4604      	mov	r4, r0
 800a5ea:	a801      	add	r0, sp, #4
 800a5ec:	f001 feba 	bl	800c364 <E131Params::E131Params()>
 800a5f0:	4b03      	ldr	r3, [pc, #12]	@ (800a600 <RemoteConfig::HandleSetE131Txt()+0x1c>)
 800a5f2:	69e2      	ldr	r2, [r4, #28]
 800a5f4:	6819      	ldr	r1, [r3, #0]
 800a5f6:	a801      	add	r0, sp, #4
 800a5f8:	f001 feda 	bl	800c3b0 <E131Params::Load(char const*, unsigned long)>
 800a5fc:	b038      	add	sp, #224	@ 0xe0
 800a5fe:	bd10      	pop	{r4, pc}
 800a600:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a604 <RemoteConfig::HandleSetParamsTxt()>:
 800a604:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a606:	4604      	mov	r4, r0
 800a608:	a801      	add	r0, sp, #4
 800a60a:	f003 fe27 	bl	800e25c <DmxParams::DmxParams()>
 800a60e:	4b04      	ldr	r3, [pc, #16]	@ (800a620 <RemoteConfig::HandleSetParamsTxt()+0x1c>)
 800a610:	69e2      	ldr	r2, [r4, #28]
 800a612:	6819      	ldr	r1, [r3, #0]
 800a614:	a801      	add	r0, sp, #4
 800a616:	f003 fe3b 	bl	800e290 <DmxParams::Load(char const*, unsigned long)>
 800a61a:	b004      	add	sp, #16
 800a61c:	bd10      	pop	{r4, pc}
 800a61e:	bf00      	nop
 800a620:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a624 <RemoteConfig::HandleSetDisplayTxt()>:
 800a624:	b510      	push	{r4, lr}
 800a626:	b08a      	sub	sp, #40	@ 0x28
 800a628:	4604      	mov	r4, r0
 800a62a:	a801      	add	r0, sp, #4
 800a62c:	f008 fa7a 	bl	8012b24 <DisplayUdfParams::DisplayUdfParams()>
 800a630:	4b03      	ldr	r3, [pc, #12]	@ (800a640 <RemoteConfig::HandleSetDisplayTxt()+0x1c>)
 800a632:	69e2      	ldr	r2, [r4, #28]
 800a634:	6819      	ldr	r1, [r3, #0]
 800a636:	a801      	add	r0, sp, #4
 800a638:	f008 fa8c 	bl	8012b54 <DisplayUdfParams::Load(char const*, unsigned long)>
 800a63c:	b00a      	add	sp, #40	@ 0x28
 800a63e:	bd10      	pop	{r4, pc}
 800a640:	20000c80 	andcs	r0, r0, r0, lsl #25

0800a644 <RemoteConfig::HandleFactory()>:
 800a644:	b538      	push	{r3, r4, r5, lr}
 800a646:	4b05      	ldr	r3, [pc, #20]	@ (800a65c <RemoteConfig::HandleFactory()+0x18>)
 800a648:	681d      	ldr	r5, [r3, #0]
 800a64a:	2400      	movs	r4, #0
 800a64c:	4621      	mov	r1, r4
 800a64e:	4628      	mov	r0, r5
 800a650:	3401      	adds	r4, #1
 800a652:	f008 fd87 	bl	8013164 <ConfigStore::ResetSetList(configstore::Store)>
 800a656:	2c1b      	cmp	r4, #27
 800a658:	d1f8      	bne.n	800a64c <RemoteConfig::HandleFactory()+0x8>
 800a65a:	bd38      	pop	{r3, r4, r5, pc}
 800a65c:	20002134 	andcs	r2, r0, r4, lsr r1

0800a660 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
 800a660:	b507      	push	{r0, r1, r2, lr}
 800a662:	2300      	movs	r3, #0
 800a664:	2101      	movs	r1, #1
 800a666:	e9cd 3100 	strd	r3, r1, [sp]
 800a66a:	4602      	mov	r2, r0
 800a66c:	4804      	ldr	r0, [pc, #16]	@ (800a680 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x20>)
 800a66e:	2320      	movs	r3, #32
 800a670:	6800      	ldr	r0, [r0, #0]
 800a672:	210a      	movs	r1, #10
 800a674:	f008 fdae 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800a678:	b003      	add	sp, #12
 800a67a:	f85d fb04 	ldr.w	pc, [sp], #4
 800a67e:	bf00      	nop
 800a680:	20002134 	andcs	r2, r0, r4, lsr r1

0800a684 <RemoteConfigParams::RemoteConfigParams()>:
 800a684:	b510      	push	{r4, lr}
 800a686:	2220      	movs	r2, #32
 800a688:	4604      	mov	r4, r0
 800a68a:	2100      	movs	r1, #0
 800a68c:	f00b fd9c 	bl	80161c8 <memset>
 800a690:	4620      	mov	r0, r4
 800a692:	bd10      	pop	{r4, pc}

0800a694 <RemoteConfigParams::Load()>:
 800a694:	b508      	push	{r3, lr}
 800a696:	2200      	movs	r2, #0
 800a698:	7002      	strb	r2, [r0, #0]
 800a69a:	7042      	strb	r2, [r0, #1]
 800a69c:	7082      	strb	r2, [r0, #2]
 800a69e:	70c2      	strb	r2, [r0, #3]
 800a6a0:	f7ff ffde 	bl	800a660 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a6a4:	bd08      	pop	{r3, pc}
	...

0800a6a8 <RemoteConfigParams::Load(char const*, unsigned long)>:
 800a6a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6aa:	2500      	movs	r5, #0
 800a6ac:	b087      	sub	sp, #28
 800a6ae:	4604      	mov	r4, r0
 800a6b0:	460e      	mov	r6, r1
 800a6b2:	4617      	mov	r7, r2
 800a6b4:	7005      	strb	r5, [r0, #0]
 800a6b6:	7045      	strb	r5, [r0, #1]
 800a6b8:	7085      	strb	r5, [r0, #2]
 800a6ba:	70c5      	strb	r5, [r0, #3]
 800a6bc:	4602      	mov	r2, r0
 800a6be:	490c      	ldr	r1, [pc, #48]	@ (800a6f0 <RemoteConfigParams::Load(char const*, unsigned long)+0x48>)
 800a6c0:	a804      	add	r0, sp, #16
 800a6c2:	f009 f861 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a6c6:	463a      	mov	r2, r7
 800a6c8:	4631      	mov	r1, r6
 800a6ca:	a804      	add	r0, sp, #16
 800a6cc:	f009 f860 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 800a6d0:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800a6d4:	2320      	movs	r3, #32
 800a6d6:	4807      	ldr	r0, [pc, #28]	@ (800a6f4 <RemoteConfigParams::Load(char const*, unsigned long)+0x4c>)
 800a6d8:	9300      	str	r3, [sp, #0]
 800a6da:	462a      	mov	r2, r5
 800a6dc:	4623      	mov	r3, r4
 800a6de:	210a      	movs	r1, #10
 800a6e0:	6800      	ldr	r0, [r0, #0]
 800a6e2:	f008 fd51 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a6e6:	a804      	add	r0, sp, #16
 800a6e8:	f009 f851 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 800a6ec:	b007      	add	sp, #28
 800a6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6f0:	0800a771 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, sp, pc}
 800a6f4:	20002134 	andcs	r2, r0, r4, lsr r1

0800a6f8 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
 800a6f8:	6803      	ldr	r3, [r0, #0]
 800a6fa:	b111      	cbz	r1, 800a702 <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0xa>
 800a6fc:	4313      	orrs	r3, r2
 800a6fe:	6003      	str	r3, [r0, #0]
 800a700:	4770      	bx	lr
 800a702:	ea23 0302 	bic.w	r3, r3, r2
 800a706:	e7fa      	b.n	800a6fe <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0x6>

0800a708 <RemoteConfigParams::callbackFunction(char const*)>:
 800a708:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a70c:	4f16      	ldr	r7, [pc, #88]	@ (800a768 <RemoteConfigParams::callbackFunction(char const*)+0x60>)
 800a70e:	4604      	mov	r4, r0
 800a710:	460e      	mov	r6, r1
 800a712:	2506      	movs	r5, #6
 800a714:	3d01      	subs	r5, #1
 800a716:	d113      	bne.n	800a740 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a718:	2317      	movs	r3, #23
 800a71a:	9301      	str	r3, [sp, #4]
 800a71c:	4913      	ldr	r1, [pc, #76]	@ (800a76c <RemoteConfigParams::callbackFunction(char const*)+0x64>)
 800a71e:	ab01      	add	r3, sp, #4
 800a720:	f104 0208 	add.w	r2, r4, #8
 800a724:	4630      	mov	r0, r6
 800a726:	f009 f869 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800a72a:	b930      	cbnz	r0, 800a73a <RemoteConfigParams::callbackFunction(char const*)+0x32>
 800a72c:	9b01      	ldr	r3, [sp, #4]
 800a72e:	4423      	add	r3, r4
 800a730:	721d      	strb	r5, [r3, #8]
 800a732:	6823      	ldr	r3, [r4, #0]
 800a734:	f043 0310 	orr.w	r3, r3, #16
 800a738:	6023      	str	r3, [r4, #0]
 800a73a:	b002      	add	sp, #8
 800a73c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a740:	6839      	ldr	r1, [r7, #0]
 800a742:	f8d7 8004 	ldr.w	r8, [r7, #4]
 800a746:	aa01      	add	r2, sp, #4
 800a748:	4630      	mov	r0, r6
 800a74a:	f009 f8cc 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a74e:	b108      	cbz	r0, 800a754 <RemoteConfigParams::callbackFunction(char const*)+0x4c>
 800a750:	3708      	adds	r7, #8
 800a752:	e7df      	b.n	800a714 <RemoteConfigParams::callbackFunction(char const*)+0xc>
 800a754:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a758:	4642      	mov	r2, r8
 800a75a:	4620      	mov	r0, r4
 800a75c:	b002      	add	sp, #8
 800a75e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a762:	f7ff bfc9 	b.w	800a6f8 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
 800a766:	bf00      	nop
 800a768:	08017fbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 800a76c:	08018430 	stmdaeq	r1, {r4, r5, sl, pc}

0800a770 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a770:	f7ff bfca 	b.w	800a708 <RemoteConfigParams::callbackFunction(char const*)>

0800a774 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
 800a774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a778:	4605      	mov	r5, r0
 800a77a:	b087      	sub	sp, #28
 800a77c:	4614      	mov	r4, r2
 800a77e:	461e      	mov	r6, r3
 800a780:	b361      	cbz	r1, 800a7dc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800a782:	2220      	movs	r2, #32
 800a784:	f00b fd09 	bl	801619a <memmove>
 800a788:	4940      	ldr	r1, [pc, #256]	@ (800a88c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800a78a:	4f41      	ldr	r7, [pc, #260]	@ (800a890 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800a78c:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800a8a8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800a790:	f8df a118 	ldr.w	sl, [pc, #280]	@ 800a8ac <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800a794:	4633      	mov	r3, r6
 800a796:	4622      	mov	r2, r4
 800a798:	a803      	add	r0, sp, #12
 800a79a:	f008 ff1f 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800a79e:	f04f 0806 	mov.w	r8, #6
 800a7a2:	f04f 0901 	mov.w	r9, #1
 800a7a6:	f1b8 0801 	subs.w	r8, r8, #1
 800a7aa:	f8d5 c000 	ldr.w	ip, [r5]
 800a7ae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a7b2:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a7b6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800a7ba:	d112      	bne.n	800a7e2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800a7bc:	42a2      	cmp	r2, r4
 800a7be:	d246      	bcs.n	800a84e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xda>
 800a7c0:	9803      	ldr	r0, [sp, #12]
 800a7c2:	f01c 0f10 	tst.w	ip, #16
 800a7c6:	f105 0508 	add.w	r5, r5, #8
 800a7ca:	4410      	add	r0, r2
 800a7cc:	eba4 0402 	sub.w	r4, r4, r2
 800a7d0:	d12f      	bne.n	800a832 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800a7d2:	bb7e      	cbnz	r6, 800a834 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
 800a7d4:	4b2f      	ldr	r3, [pc, #188]	@ (800a894 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a7d6:	4a30      	ldr	r2, [pc, #192]	@ (800a898 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800a7d8:	9500      	str	r5, [sp, #0]
 800a7da:	e02e      	b.n	800a83a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a7dc:	f7ff ff40 	bl	800a660 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a7e0:	e7d2      	b.n	800a788 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800a7e2:	42a2      	cmp	r2, r4
 800a7e4:	e9d7 3100 	ldrd	r3, r1, [r7]
 800a7e8:	d21d      	bcs.n	800a826 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb2>
 800a7ea:	9803      	ldr	r0, [sp, #12]
 800a7ec:	ea01 0e0c 	and.w	lr, r1, ip
 800a7f0:	ea31 0c0c 	bics.w	ip, r1, ip
 800a7f4:	4410      	add	r0, r2
 800a7f6:	eba4 0402 	sub.w	r4, r4, r2
 800a7fa:	d003      	beq.n	800a804 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x90>
 800a7fc:	b91e      	cbnz	r6, 800a806 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800a7fe:	4a27      	ldr	r2, [pc, #156]	@ (800a89c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x128>)
 800a800:	9600      	str	r6, [sp, #0]
 800a802:	e006      	b.n	800a812 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a804:	b18e      	cbz	r6, 800a82a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb6>
 800a806:	eba1 020e 	sub.w	r2, r1, lr
 800a80a:	4251      	negs	r1, r2
 800a80c:	4151      	adcs	r1, r2
 800a80e:	9100      	str	r1, [sp, #0]
 800a810:	465a      	mov	r2, fp
 800a812:	4621      	mov	r1, r4
 800a814:	f00b ffe4 	bl	80167e0 <snprintf>
 800a818:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a81c:	4284      	cmp	r4, r0
 800a81e:	bfa4      	itt	ge
 800a820:	181b      	addge	r3, r3, r0
 800a822:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a826:	3708      	adds	r7, #8
 800a828:	e7bd      	b.n	800a7a6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x32>
 800a82a:	f8cd 9000 	str.w	r9, [sp]
 800a82e:	4652      	mov	r2, sl
 800a830:	e7ef      	b.n	800a812 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a832:	b336      	cbz	r6, 800a882 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x10e>
 800a834:	4b17      	ldr	r3, [pc, #92]	@ (800a894 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a836:	4a1a      	ldr	r2, [pc, #104]	@ (800a8a0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>)
 800a838:	9500      	str	r5, [sp, #0]
 800a83a:	4621      	mov	r1, r4
 800a83c:	f00b ffd0 	bl	80167e0 <snprintf>
 800a840:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a844:	4284      	cmp	r4, r0
 800a846:	bfa4      	itt	ge
 800a848:	181b      	addge	r3, r3, r0
 800a84a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a84e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a852:	b17b      	cbz	r3, 800a874 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x100>
 800a854:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a858:	9b03      	ldr	r3, [sp, #12]
 800a85a:	4413      	add	r3, r2
 800a85c:	227d      	movs	r2, #125	@ 0x7d
 800a85e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a862:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a866:	9903      	ldr	r1, [sp, #12]
 800a868:	54ca      	strb	r2, [r1, r3]
 800a86a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a86e:	3301      	adds	r3, #1
 800a870:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a874:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a878:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a87a:	601a      	str	r2, [r3, #0]
 800a87c:	b007      	add	sp, #28
 800a87e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a882:	4b04      	ldr	r3, [pc, #16]	@ (800a894 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a884:	4a07      	ldr	r2, [pc, #28]	@ (800a8a4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x130>)
 800a886:	9500      	str	r5, [sp, #0]
 800a888:	e7d7      	b.n	800a83a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a88a:	bf00      	nop
 800a88c:	0801847e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, pc}
 800a890:	08017fbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 800a894:	08018430 	stmdaeq	r1, {r4, r5, sl, pc}
 800a898:	080173ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 800a89c:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 800a8a0:	080173a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, ip, sp, lr}
 800a8a4:	080173ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 800a8a8:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 800a8ac:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

0800a8b0 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a8b0:	b538      	push	{r3, r4, r5, lr}
 800a8b2:	460c      	mov	r4, r1
 800a8b4:	6801      	ldr	r1, [r0, #0]
 800a8b6:	4605      	mov	r5, r0
 800a8b8:	f001 0101 	and.w	r1, r1, #1
 800a8bc:	4620      	mov	r0, r4
 800a8be:	f7ff fc75 	bl	800a1ac <RemoteConfig::SetDisable(bool)>
 800a8c2:	682b      	ldr	r3, [r5, #0]
 800a8c4:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a8c8:	7362      	strb	r2, [r4, #13]
 800a8ca:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a8ce:	73a2      	strb	r2, [r4, #14]
 800a8d0:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a8d4:	73e2      	strb	r2, [r4, #15]
 800a8d6:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a8da:	06db      	lsls	r3, r3, #27
 800a8dc:	7422      	strb	r2, [r4, #16]
 800a8de:	d506      	bpl.n	800a8ee <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a8e0:	f105 0108 	add.w	r1, r5, #8
 800a8e4:	4620      	mov	r0, r4
 800a8e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a8ea:	f7ff bc89 	b.w	800a200 <RemoteConfig::SetDisplayName(char const*)>
 800a8ee:	bd38      	pop	{r3, r4, r5, pc}

0800a8f0 <RemoteConfig::HandleReboot()>:
 800a8f0:	b538      	push	{r3, r4, r5, lr}
 800a8f2:	7b83      	ldrb	r3, [r0, #14]
 800a8f4:	b30b      	cbz	r3, 800a93a <RemoteConfig::HandleReboot()+0x4a>
 800a8f6:	4c11      	ldr	r4, [pc, #68]	@ (800a93c <RemoteConfig::HandleReboot()+0x4c>)
 800a8f8:	6825      	ldr	r5, [r4, #0]
 800a8fa:	2301      	movs	r3, #1
 800a8fc:	7443      	strb	r3, [r0, #17]
 800a8fe:	69a8      	ldr	r0, [r5, #24]
 800a900:	b138      	cbz	r0, 800a912 <RemoteConfig::HandleReboot()+0x22>
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	2100      	movs	r1, #0
 800a906:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a908:	7569      	strb	r1, [r5, #21]
 800a90a:	4798      	blx	r3
 800a90c:	4b0c      	ldr	r3, [pc, #48]	@ (800a940 <RemoteConfig::HandleReboot()+0x50>)
 800a90e:	681b      	ldr	r3, [r3, #0]
 800a910:	606b      	str	r3, [r5, #4]
 800a912:	4d0c      	ldr	r5, [pc, #48]	@ (800a944 <RemoteConfig::HandleReboot()+0x54>)
 800a914:	6828      	ldr	r0, [r5, #0]
 800a916:	f008 fc8d 	bl	8013234 <ConfigStore::Flash()>
 800a91a:	2800      	cmp	r0, #0
 800a91c:	d1fa      	bne.n	800a914 <RemoteConfig::HandleReboot()+0x24>
 800a91e:	6823      	ldr	r3, [r4, #0]
 800a920:	6998      	ldr	r0, [r3, #24]
 800a922:	b110      	cbz	r0, 800a92a <RemoteConfig::HandleReboot()+0x3a>
 800a924:	6803      	ldr	r3, [r0, #0]
 800a926:	68db      	ldr	r3, [r3, #12]
 800a928:	4798      	blx	r3
 800a92a:	6820      	ldr	r0, [r4, #0]
 800a92c:	4906      	ldr	r1, [pc, #24]	@ (800a948 <RemoteConfig::HandleReboot()+0x58>)
 800a92e:	f7fe fe01 	bl	8009534 <Display::TextStatus(char const*)>
 800a932:	4b06      	ldr	r3, [pc, #24]	@ (800a94c <RemoteConfig::HandleReboot()+0x5c>)
 800a934:	6818      	ldr	r0, [r3, #0]
 800a936:	f009 fdd9 	bl	80144ec <Hardware::Reboot()>
 800a93a:	bd38      	pop	{r3, r4, r5, pc}
 800a93c:	2000214c 	andcs	r2, r0, ip, asr #2
 800a940:	20009ae8 	andcs	r9, r0, r8, ror #21
 800a944:	20002134 	andcs	r2, r0, r4, lsr r1
 800a948:	080173b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, ip, sp, lr}
 800a94c:	20002238 	andcs	r2, r0, r8, lsr r2

0800a950 <RemoteConfig::GetIndex(void const*, unsigned long&)>:
 800a950:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a954:	f8d2 c000 	ldr.w	ip, [r2]
 800a958:	4e12      	ldr	r6, [pc, #72]	@ (800a9a4 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x54>)
 800a95a:	2000      	movs	r0, #0
 800a95c:	f10d 0e04 	add.w	lr, sp, #4
 800a960:	7d33      	ldrb	r3, [r6, #20]
 800a962:	9301      	str	r3, [sp, #4]
 800a964:	4563      	cmp	r3, ip
 800a966:	bf2c      	ite	cs
 800a968:	4614      	movcs	r4, r2
 800a96a:	4674      	movcc	r4, lr
 800a96c:	6935      	ldr	r5, [r6, #16]
 800a96e:	6827      	ldr	r7, [r4, #0]
 800a970:	3d01      	subs	r5, #1
 800a972:	440f      	add	r7, r1
 800a974:	460c      	mov	r4, r1
 800a976:	42bc      	cmp	r4, r7
 800a978:	d101      	bne.n	800a97e <RemoteConfig::GetIndex(void const*, unsigned long&)+0x2e>
 800a97a:	6013      	str	r3, [r2, #0]
 800a97c:	e00c      	b.n	800a998 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x48>
 800a97e:	f894 9000 	ldrb.w	r9, [r4]
 800a982:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800a986:	45c1      	cmp	r9, r8
 800a988:	d009      	beq.n	800a99e <RemoteConfig::GetIndex(void const*, unsigned long&)+0x4e>
 800a98a:	3001      	adds	r0, #1
 800a98c:	2806      	cmp	r0, #6
 800a98e:	f106 0618 	add.w	r6, r6, #24
 800a992:	d1e5      	bne.n	800a960 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
 800a994:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a998:	b003      	add	sp, #12
 800a99a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a99e:	3401      	adds	r4, #1
 800a9a0:	e7e9      	b.n	800a976 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x26>
 800a9a2:	bf00      	nop
 800a9a4:	08017fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0800a9a8 <RemoteConfig::PlatformHandleTftpSet()>:
 800a9a8:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a9ac:	b510      	push	{r4, lr}
 800a9ae:	4c0d      	ldr	r4, [pc, #52]	@ (800a9e4 <RemoteConfig::PlatformHandleTftpSet()+0x3c>)
 800a9b0:	b171      	cbz	r1, 800a9d0 <RemoteConfig::PlatformHandleTftpSet()+0x28>
 800a9b2:	f24a 51a5 	movw	r1, #42405	@ 0xa5a5
 800a9b6:	2001      	movs	r0, #1
 800a9b8:	f00a fda2 	bl	8015500 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800a9bc:	490a      	ldr	r1, [pc, #40]	@ (800a9e8 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800a9be:	6820      	ldr	r0, [r4, #0]
 800a9c0:	f7fe fdb8 	bl	8009534 <Display::TextStatus(char const*)>
 800a9c4:	4908      	ldr	r1, [pc, #32]	@ (800a9e8 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800a9c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a9ca:	2002      	movs	r0, #2
 800a9cc:	f009 bdee 	b.w	80145ac <console_status>
 800a9d0:	2001      	movs	r0, #1
 800a9d2:	f00a fd95 	bl	8015500 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800a9d6:	4905      	ldr	r1, [pc, #20]	@ (800a9ec <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800a9d8:	6820      	ldr	r0, [r4, #0]
 800a9da:	f7fe fdab 	bl	8009534 <Display::TextStatus(char const*)>
 800a9de:	4903      	ldr	r1, [pc, #12]	@ (800a9ec <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800a9e0:	e7f1      	b.n	800a9c6 <RemoteConfig::PlatformHandleTftpSet()+0x1e>
 800a9e2:	bf00      	nop
 800a9e4:	2000214c 	andcs	r2, r0, ip, asr #2
 800a9e8:	08017403 	stmdaeq	r1, {r0, r1, sl, ip, sp, lr}
 800a9ec:	0801740c 	stmdaeq	r1, {r2, r3, sl, ip, sp, lr}

0800a9f0 <RemoteConfig::PlatformHandleTftpGet()>:
 800a9f0:	b510      	push	{r4, lr}
 800a9f2:	4604      	mov	r4, r0
 800a9f4:	2001      	movs	r0, #1
 800a9f6:	f00a fd91 	bl	801551c <bkp_data_read(bkp_data_register_enum)>
 800a9fa:	f24a 53a5 	movw	r3, #42405	@ 0xa5a5
 800a9fe:	1ac3      	subs	r3, r0, r3
 800aa00:	4258      	negs	r0, r3
 800aa02:	4158      	adcs	r0, r3
 800aa04:	f884 0020 	strb.w	r0, [r4, #32]
 800aa08:	bd10      	pop	{r4, pc}
	...

0800aa0c <HttpDaemon::HttpDaemon()>:
 800aa0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aa0e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800aa12:	2500      	movs	r5, #0
 800aa14:	e9c0 3506 	strd	r3, r5, [r0, #24]
 800aa18:	4606      	mov	r6, r0
 800aa1a:	2050      	movs	r0, #80	@ 0x50
 800aa1c:	f006 fe12 	bl	8011644 <net::tcp_begin(unsigned short)>
 800aa20:	462c      	mov	r4, r5
 800aa22:	61b0      	str	r0, [r6, #24]
 800aa24:	f44f 7702 	mov.w	r7, #520	@ 0x208
 800aa28:	2038      	movs	r0, #56	@ 0x38
 800aa2a:	f00c f907 	bl	8016c3c <operator new(unsigned int)>
 800aa2e:	69b3      	ldr	r3, [r6, #24]
 800aa30:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 800aa34:	e9c0 5300 	strd	r5, r3, [r0]
 800aa38:	3501      	adds	r5, #1
 800aa3a:	2203      	movs	r2, #3
 800aa3c:	2305      	movs	r3, #5
 800aa3e:	2d06      	cmp	r5, #6
 800aa40:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800aa44:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800aa48:	e9c0 4406 	strd	r4, r4, [r0, #24]
 800aa4c:	e9c0 4408 	strd	r4, r4, [r0, #32]
 800aa50:	e9c0 230b 	strd	r2, r3, [r0, #44]	@ 0x2c
 800aa54:	6287      	str	r7, [r0, #40]	@ 0x28
 800aa56:	f880 4034 	strb.w	r4, [r0, #52]	@ 0x34
 800aa5a:	d1e5      	bne.n	800aa28 <HttpDaemon::HttpDaemon()+0x1c>
 800aa5c:	4805      	ldr	r0, [pc, #20]	@ (800aa74 <HttpDaemon::HttpDaemon()+0x68>)
 800aa5e:	9400      	str	r4, [sp, #0]
 800aa60:	2300      	movs	r3, #0
 800aa62:	2202      	movs	r2, #2
 800aa64:	4619      	mov	r1, r3
 800aa66:	6800      	ldr	r0, [r0, #0]
 800aa68:	f005 fa74 	bl	800ff54 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800aa6c:	4630      	mov	r0, r6
 800aa6e:	b003      	add	sp, #12
 800aa70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa72:	bf00      	nop
 800aa74:	20001e24 	andcs	r1, r0, r4, lsr #28

0800aa78 <DisplaySet::SetSleep(bool)>:
 800aa78:	4770      	bx	lr
 800aa7a:	bf00      	nop

0800aa7c <HttpDeamonHandleRequest::ParseMethod(char*)>:
 800aa7c:	460b      	mov	r3, r1
 800aa7e:	b510      	push	{r4, lr}
 800aa80:	4929      	ldr	r1, [pc, #164]	@ (800ab28 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800aa82:	4604      	mov	r4, r0
 800aa84:	4618      	mov	r0, r3
 800aa86:	f00b fef1 	bl	801686c <strtok>
 800aa8a:	2800      	cmp	r0, #0
 800aa8c:	d039      	beq.n	800ab02 <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800aa8e:	7803      	ldrb	r3, [r0, #0]
 800aa90:	2b47      	cmp	r3, #71	@ 0x47
 800aa92:	d139      	bne.n	800ab08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x8c>
 800aa94:	4a25      	ldr	r2, [pc, #148]	@ (800ab2c <HttpDeamonHandleRequest::ParseMethod(char*)+0xb0>)
 800aa96:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800aa9a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800aa9e:	428b      	cmp	r3, r1
 800aaa0:	d12f      	bne.n	800ab02 <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d1f7      	bne.n	800aa96 <HttpDeamonHandleRequest::ParseMethod(char*)+0x1a>
 800aaa6:	4920      	ldr	r1, [pc, #128]	@ (800ab28 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800aaa8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800aaaa:	2000      	movs	r0, #0
 800aaac:	f00b fede 	bl	801686c <strtok>
 800aab0:	b320      	cbz	r0, 800aafc <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800aab2:	61a0      	str	r0, [r4, #24]
 800aab4:	491e      	ldr	r1, [pc, #120]	@ (800ab30 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb4>)
 800aab6:	2000      	movs	r0, #0
 800aab8:	f00b fed8 	bl	801686c <strtok>
 800aabc:	4603      	mov	r3, r0
 800aabe:	b1e8      	cbz	r0, 800aafc <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800aac0:	7802      	ldrb	r2, [r0, #0]
 800aac2:	2a48      	cmp	r2, #72	@ 0x48
 800aac4:	d11a      	bne.n	800aafc <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800aac6:	4a1b      	ldr	r2, [pc, #108]	@ (800ab34 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb8>)
 800aac8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800aacc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800aad0:	4288      	cmp	r0, r1
 800aad2:	d113      	bne.n	800aafc <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800aad4:	2800      	cmp	r0, #0
 800aad6:	d1f7      	bne.n	800aac8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x4c>
 800aad8:	4917      	ldr	r1, [pc, #92]	@ (800ab38 <HttpDeamonHandleRequest::ParseMethod(char*)+0xbc>)
 800aada:	f00b fec7 	bl	801686c <strtok>
 800aade:	b168      	cbz	r0, 800aafc <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800aae0:	7803      	ldrb	r3, [r0, #0]
 800aae2:	2b31      	cmp	r3, #49	@ 0x31
 800aae4:	d11d      	bne.n	800ab22 <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800aae6:	4a15      	ldr	r2, [pc, #84]	@ (800ab3c <HttpDeamonHandleRequest::ParseMethod(char*)+0xc0>)
 800aae8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800aaec:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800aaf0:	428b      	cmp	r3, r1
 800aaf2:	d116      	bne.n	800ab22 <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800aaf4:	2b00      	cmp	r3, #0
 800aaf6:	d1f7      	bne.n	800aae8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x6c>
 800aaf8:	20c8      	movs	r0, #200	@ 0xc8
 800aafa:	bd10      	pop	{r4, pc}
 800aafc:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ab00:	bd10      	pop	{r4, pc}
 800ab02:	f240 10f5 	movw	r0, #501	@ 0x1f5
 800ab06:	bd10      	pop	{r4, pc}
 800ab08:	2b50      	cmp	r3, #80	@ 0x50
 800ab0a:	d1fa      	bne.n	800ab02 <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ab0c:	4a0c      	ldr	r2, [pc, #48]	@ (800ab40 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc4>)
 800ab0e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ab12:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ab16:	428b      	cmp	r3, r1
 800ab18:	d1f3      	bne.n	800ab02 <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ab1a:	2b00      	cmp	r3, #0
 800ab1c:	d1f7      	bne.n	800ab0e <HttpDeamonHandleRequest::ParseMethod(char*)+0x92>
 800ab1e:	2301      	movs	r3, #1
 800ab20:	e7c1      	b.n	800aaa6 <HttpDeamonHandleRequest::ParseMethod(char*)+0x2a>
 800ab22:	f240 10f9 	movw	r0, #505	@ 0x1f9
 800ab26:	bd10      	pop	{r4, pc}
 800ab28:	08018074 	stmdaeq	r1, {r2, r4, r5, r6, pc}
 800ab2c:	08018078 	stmdaeq	r1, {r3, r4, r5, r6, pc}
 800ab30:	08018084 	stmdaeq	r1, {r2, r7, pc}
 800ab34:	08018088 	stmdaeq	r1, {r3, r7, pc}
 800ab38:	08018090 	stmdaeq	r1, {r4, r7, pc}
 800ab3c:	08018094 	stmdaeq	r1, {r2, r4, r7, pc}
 800ab40:	0801807c 	stmdaeq	r1, {r2, r3, r4, r5, r6, pc}

0800ab44 <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
 800ab44:	b538      	push	{r3, r4, r5, lr}
 800ab46:	460b      	mov	r3, r1
 800ab48:	4605      	mov	r5, r0
 800ab4a:	493f      	ldr	r1, [pc, #252]	@ (800ac48 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>)
 800ab4c:	4618      	mov	r0, r3
 800ab4e:	f00b fe8d 	bl	801686c <strtok>
 800ab52:	b370      	cbz	r0, 800abb2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ab54:	1e41      	subs	r1, r0, #1
 800ab56:	4c3d      	ldr	r4, [pc, #244]	@ (800ac4c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x108>)
 800ab58:	468c      	mov	ip, r1
 800ab5a:	e000      	b.n	800ab5e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a>
 800ab5c:	b360      	cbz	r0, 800abb8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x74>
 800ab5e:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 800ab62:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800ab66:	2b19      	cmp	r3, #25
 800ab68:	f814 3b01 	ldrb.w	r3, [r4], #1
 800ab6c:	f1a3 0e41 	sub.w	lr, r3, #65	@ 0x41
 800ab70:	4602      	mov	r2, r0
 800ab72:	bf98      	it	ls
 800ab74:	f100 0220 	addls.w	r2, r0, #32
 800ab78:	f1be 0f19 	cmp.w	lr, #25
 800ab7c:	bf98      	it	ls
 800ab7e:	3320      	addls	r3, #32
 800ab80:	4293      	cmp	r3, r2
 800ab82:	d0eb      	beq.n	800ab5c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18>
 800ab84:	4832      	ldr	r0, [pc, #200]	@ (800ac50 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>)
 800ab86:	e000      	b.n	800ab8a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x46>
 800ab88:	b34c      	cbz	r4, 800abde <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x9a>
 800ab8a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ab8e:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
 800ab92:	2b19      	cmp	r3, #25
 800ab94:	f810 3b01 	ldrb.w	r3, [r0], #1
 800ab98:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800ab9c:	4622      	mov	r2, r4
 800ab9e:	bf98      	it	ls
 800aba0:	f104 0220 	addls.w	r2, r4, #32
 800aba4:	f1bc 0f19 	cmp.w	ip, #25
 800aba8:	bf98      	it	ls
 800abaa:	3320      	addls	r3, #32
 800abac:	4293      	cmp	r3, r2
 800abae:	d0eb      	beq.n	800ab88 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x44>
 800abb0:	e03a      	b.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800abb2:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800abb6:	bd38      	pop	{r3, r4, r5, pc}
 800abb8:	4926      	ldr	r1, [pc, #152]	@ (800ac54 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x110>)
 800abba:	f00b fe57 	bl	801686c <strtok>
 800abbe:	2800      	cmp	r0, #0
 800abc0:	d0f7      	beq.n	800abb2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800abc2:	4a25      	ldr	r2, [pc, #148]	@ (800ac58 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x114>)
 800abc4:	1e43      	subs	r3, r0, #1
 800abc6:	f100 0c0b 	add.w	ip, r0, #11
 800abca:	e001      	b.n	800abd0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
 800abcc:	459c      	cmp	ip, r3
 800abce:	d019      	beq.n	800ac04 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xc0>
 800abd0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800abd4:	f812 4b01 	ldrb.w	r4, [r2], #1
 800abd8:	428c      	cmp	r4, r1
 800abda:	d0f7      	beq.n	800abcc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x88>
 800abdc:	e024      	b.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800abde:	491f      	ldr	r1, [pc, #124]	@ (800ac5c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x118>)
 800abe0:	4620      	mov	r0, r4
 800abe2:	f00b fe43 	bl	801686c <strtok>
 800abe6:	2800      	cmp	r0, #0
 800abe8:	d0e3      	beq.n	800abb2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800abea:	7803      	ldrb	r3, [r0, #0]
 800abec:	b1db      	cbz	r3, 800ac26 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe2>
 800abee:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 800abf2:	2a09      	cmp	r2, #9
 800abf4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800abf8:	d8db      	bhi.n	800abb2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800abfa:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800abfe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ac02:	e7f3      	b.n	800abec <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xa8>
 800ac04:	7b02      	ldrb	r2, [r0, #12]
 800ac06:	2a6a      	cmp	r2, #106	@ 0x6a
 800ac08:	f100 030c 	add.w	r3, r0, #12
 800ac0c:	d10e      	bne.n	800ac2c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
 800ac0e:	4914      	ldr	r1, [pc, #80]	@ (800ac60 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x11c>)
 800ac10:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ac14:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ac18:	4282      	cmp	r2, r0
 800ac1a:	d105      	bne.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac1c:	2a00      	cmp	r2, #0
 800ac1e:	d1f7      	bne.n	800ac10 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xcc>
 800ac20:	2303      	movs	r3, #3
 800ac22:	632b      	str	r3, [r5, #48]	@ 0x30
 800ac24:	e000      	b.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac26:	612c      	str	r4, [r5, #16]
 800ac28:	20c8      	movs	r0, #200	@ 0xc8
 800ac2a:	bd38      	pop	{r3, r4, r5, pc}
 800ac2c:	2a6f      	cmp	r2, #111	@ 0x6f
 800ac2e:	d1fb      	bne.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac30:	490c      	ldr	r1, [pc, #48]	@ (800ac64 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x120>)
 800ac32:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ac36:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ac3a:	4282      	cmp	r2, r0
 800ac3c:	d1f4      	bne.n	800ac28 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac3e:	2a00      	cmp	r2, #0
 800ac40:	d1f7      	bne.n	800ac32 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xee>
 800ac42:	2304      	movs	r3, #4
 800ac44:	e7ed      	b.n	800ac22 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xde>
 800ac46:	bf00      	nop
 800ac48:	08018098 	stmdaeq	r1, {r3, r4, r7, pc}
 800ac4c:	0801809c 	stmdaeq	r1, {r2, r3, r4, r7, pc}
 800ac50:	080180ac 	stmdaeq	r1, {r2, r3, r5, r7, pc}
 800ac54:	080180e4 	stmdaeq	r1, {r2, r5, r6, r7, pc}
 800ac58:	080180bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, pc}
 800ac5c:	08018074 	stmdaeq	r1, {r2, r4, r5, r6, pc}
 800ac60:	080180cc 	stmdaeq	r1, {r2, r3, r6, r7, pc}
 800ac64:	080180d4 	stmdaeq	r1, {r2, r4, r6, r7, pc}

0800ac68 <HttpDeamonHandleRequest::ParseRequest()>:
 800ac68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ac6a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ac6c:	4605      	mov	r5, r0
 800ac6e:	6940      	ldr	r0, [r0, #20]
 800ac70:	2400      	movs	r4, #0
 800ac72:	2205      	movs	r2, #5
 800ac74:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800ac78:	632a      	str	r2, [r5, #48]	@ 0x30
 800ac7a:	b300      	cbz	r0, 800acbe <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ac7c:	4619      	mov	r1, r3
 800ac7e:	46a4      	mov	ip, r4
 800ac80:	4626      	mov	r6, r4
 800ac82:	e002      	b.n	800ac8a <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800ac84:	3401      	adds	r4, #1
 800ac86:	42a0      	cmp	r0, r4
 800ac88:	d919      	bls.n	800acbe <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ac8a:	5d1a      	ldrb	r2, [r3, r4]
 800ac8c:	2a0a      	cmp	r2, #10
 800ac8e:	d1f9      	bne.n	800ac84 <HttpDeamonHandleRequest::ParseRequest()+0x1c>
 800ac90:	4423      	add	r3, r4
 800ac92:	f10c 0701 	add.w	r7, ip, #1
 800ac96:	f803 6c01 	strb.w	r6, [r3, #-1]
 800ac9a:	f1bc 0f00 	cmp.w	ip, #0
 800ac9e:	d010      	beq.n	800acc2 <HttpDeamonHandleRequest::ParseRequest()+0x5a>
 800aca0:	780b      	ldrb	r3, [r1, #0]
 800aca2:	b193      	cbz	r3, 800acca <HttpDeamonHandleRequest::ParseRequest()+0x62>
 800aca4:	4628      	mov	r0, r5
 800aca6:	f7ff ff4d 	bl	800ab44 <HttpDeamonHandleRequest::ParseHeaderField(char*)>
 800acaa:	28c8      	cmp	r0, #200	@ 0xc8
 800acac:	d108      	bne.n	800acc0 <HttpDeamonHandleRequest::ParseRequest()+0x58>
 800acae:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800acb0:	6968      	ldr	r0, [r5, #20]
 800acb2:	3401      	adds	r4, #1
 800acb4:	1919      	adds	r1, r3, r4
 800acb6:	3401      	adds	r4, #1
 800acb8:	42a0      	cmp	r0, r4
 800acba:	46bc      	mov	ip, r7
 800acbc:	d8e5      	bhi.n	800ac8a <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800acbe:	20c8      	movs	r0, #200	@ 0xc8
 800acc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800acc2:	4628      	mov	r0, r5
 800acc4:	f7ff feda 	bl	800aa7c <HttpDeamonHandleRequest::ParseMethod(char*)>
 800acc8:	e7ef      	b.n	800acaa <HttpDeamonHandleRequest::ParseRequest()+0x42>
 800acca:	696a      	ldr	r2, [r5, #20]
 800accc:	3a01      	subs	r2, #1
 800acce:	1b12      	subs	r2, r2, r4
 800acd0:	b292      	uxth	r2, r2
 800acd2:	60ea      	str	r2, [r5, #12]
 800acd4:	2a00      	cmp	r2, #0
 800acd6:	d0f2      	beq.n	800acbe <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800acd8:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800acda:	3401      	adds	r4, #1
 800acdc:	4421      	add	r1, r4
 800acde:	61e9      	str	r1, [r5, #28]
 800ace0:	548b      	strb	r3, [r1, r2]
 800ace2:	e7ec      	b.n	800acbe <HttpDeamonHandleRequest::ParseRequest()+0x56>

0800ace4 <HttpDeamonHandleRequest::HandleGetTxt()>:
 800ace4:	b570      	push	{r4, r5, r6, lr}
 800ace6:	4605      	mov	r5, r0
 800ace8:	6980      	ldr	r0, [r0, #24]
 800acea:	7983      	ldrb	r3, [r0, #6]
 800acec:	2b00      	cmp	r3, #0
 800acee:	d039      	beq.n	800ad64 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800acf0:	1d84      	adds	r4, r0, #6
 800acf2:	4623      	mov	r3, r4
 800acf4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800acf8:	2a00      	cmp	r2, #0
 800acfa:	d1fb      	bne.n	800acf4 <HttpDeamonHandleRequest::HandleGetTxt()+0x10>
 800acfc:	1b1a      	subs	r2, r3, r4
 800acfe:	2a04      	cmp	r2, #4
 800ad00:	d930      	bls.n	800ad64 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ad02:	1f13      	subs	r3, r2, #4
 800ad04:	18e1      	adds	r1, r4, r3
 800ad06:	5ce3      	ldrb	r3, [r4, r3]
 800ad08:	2b2e      	cmp	r3, #46	@ 0x2e
 800ad0a:	d12b      	bne.n	800ad64 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ad0c:	4c18      	ldr	r4, [pc, #96]	@ (800ad70 <HttpDeamonHandleRequest::HandleGetTxt()+0x8c>)
 800ad0e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ad12:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800ad16:	4563      	cmp	r3, ip
 800ad18:	d124      	bne.n	800ad64 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ad1a:	2b00      	cmp	r3, #0
 800ad1c:	d1f7      	bne.n	800ad0e <HttpDeamonHandleRequest::HandleGetTxt()+0x2a>
 800ad1e:	4c15      	ldr	r4, [pc, #84]	@ (800ad74 <HttpDeamonHandleRequest::HandleGetTxt()+0x90>)
 800ad20:	7821      	ldrb	r1, [r4, #0]
 800ad22:	f041 0601 	orr.w	r6, r1, #1
 800ad26:	1d43      	adds	r3, r0, #5
 800ad28:	7026      	strb	r6, [r4, #0]
 800ad2a:	4813      	ldr	r0, [pc, #76]	@ (800ad78 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800ad2c:	f001 0601 	and.w	r6, r1, #1
 800ad30:	e003      	b.n	800ad3a <HttpDeamonHandleRequest::HandleGetTxt()+0x56>
 800ad32:	3a01      	subs	r2, #1
 800ad34:	f800 1b01 	strb.w	r1, [r0], #1
 800ad38:	d005      	beq.n	800ad46 <HttpDeamonHandleRequest::HandleGetTxt()+0x62>
 800ad3a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ad3e:	2900      	cmp	r1, #0
 800ad40:	d1f7      	bne.n	800ad32 <HttpDeamonHandleRequest::HandleGetTxt()+0x4e>
 800ad42:	f00b fa41 	bl	80161c8 <memset>
 800ad46:	4b0d      	ldr	r3, [pc, #52]	@ (800ad7c <HttpDeamonHandleRequest::HandleGetTxt()+0x98>)
 800ad48:	490b      	ldr	r1, [pc, #44]	@ (800ad78 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800ad4a:	6818      	ldr	r0, [r3, #0]
 800ad4c:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800ad50:	f7ff fa6e 	bl	800a230 <RemoteConfig::HandleGet(void*, unsigned long)>
 800ad54:	7823      	ldrb	r3, [r4, #0]
 800ad56:	60a8      	str	r0, [r5, #8]
 800ad58:	b93e      	cbnz	r6, 800ad6a <HttpDeamonHandleRequest::HandleGetTxt()+0x86>
 800ad5a:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800ad5e:	7023      	strb	r3, [r4, #0]
 800ad60:	20c8      	movs	r0, #200	@ 0xc8
 800ad62:	bd70      	pop	{r4, r5, r6, pc}
 800ad64:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ad68:	bd70      	pop	{r4, r5, r6, pc}
 800ad6a:	f043 0301 	orr.w	r3, r3, #1
 800ad6e:	e7f6      	b.n	800ad5e <HttpDeamonHandleRequest::HandleGetTxt()+0x7a>
 800ad70:	080180e8 	stmdaeq	r1, {r3, r5, r6, r7, pc}
 800ad74:	20002149 	andcs	r2, r0, r9, asr #2
 800ad78:	20000cac 	andcs	r0, r0, ip, lsr #25
 800ad7c:	20000ca8 	andcs	r0, r0, r8, lsr #25

0800ad80 <HttpDeamonHandleRequest::HandleGet()>:
 800ad80:	b510      	push	{r4, lr}
 800ad82:	4604      	mov	r4, r0
 800ad84:	b082      	sub	sp, #8
 800ad86:	6980      	ldr	r0, [r0, #24]
 800ad88:	4b78      	ldr	r3, [pc, #480]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800ad8a:	6223      	str	r3, [r4, #32]
 800ad8c:	2100      	movs	r1, #0
 800ad8e:	4a78      	ldr	r2, [pc, #480]	@ (800af70 <HttpDeamonHandleRequest::HandleGet()+0x1f0>)
 800ad90:	9101      	str	r1, [sp, #4]
 800ad92:	1e43      	subs	r3, r0, #1
 800ad94:	f100 0e05 	add.w	lr, r0, #5
 800ad98:	e001      	b.n	800ad9e <HttpDeamonHandleRequest::HandleGet()+0x1e>
 800ad9a:	459e      	cmp	lr, r3
 800ad9c:	d01f      	beq.n	800adde <HttpDeamonHandleRequest::HandleGet()+0x5e>
 800ad9e:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800ada2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ada6:	458c      	cmp	ip, r1
 800ada8:	d0f7      	beq.n	800ad9a <HttpDeamonHandleRequest::HandleGet()+0x1a>
 800adaa:	7803      	ldrb	r3, [r0, #0]
 800adac:	2b2f      	cmp	r3, #47	@ 0x2f
 800adae:	d173      	bne.n	800ae98 <HttpDeamonHandleRequest::HandleGet()+0x118>
 800adb0:	4a70      	ldr	r2, [pc, #448]	@ (800af74 <HttpDeamonHandleRequest::HandleGet()+0x1f4>)
 800adb2:	4601      	mov	r1, r0
 800adb4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800adb8:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800adbc:	4563      	cmp	r3, ip
 800adbe:	d13c      	bne.n	800ae3a <HttpDeamonHandleRequest::HandleGet()+0xba>
 800adc0:	2b00      	cmp	r3, #0
 800adc2:	d1f7      	bne.n	800adb4 <HttpDeamonHandleRequest::HandleGet()+0x34>
 800adc4:	486c      	ldr	r0, [pc, #432]	@ (800af78 <HttpDeamonHandleRequest::HandleGet()+0x1f8>)
 800adc6:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800adca:	a901      	add	r1, sp, #4
 800adcc:	f000 faea 	bl	800b3a4 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
 800add0:	9b01      	ldr	r3, [sp, #4]
 800add2:	6220      	str	r0, [r4, #32]
 800add4:	b36b      	cbz	r3, 800ae32 <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800add6:	60a3      	str	r3, [r4, #8]
 800add8:	20c8      	movs	r0, #200	@ 0xc8
 800adda:	b002      	add	sp, #8
 800addc:	bd10      	pop	{r4, pc}
 800adde:	2303      	movs	r3, #3
 800ade0:	6323      	str	r3, [r4, #48]	@ 0x30
 800ade2:	7982      	ldrb	r2, [r0, #6]
 800ade4:	1dc1      	adds	r1, r0, #7
 800ade6:	2a00      	cmp	r2, #0
 800ade8:	d046      	beq.n	800ae78 <HttpDeamonHandleRequest::HandleGet()+0xf8>
 800adea:	f241 5305 	movw	r3, #5381	@ 0x1505
 800adee:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800adf2:	fa12 f383 	uxtah	r3, r2, r3
 800adf6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800adfa:	b29b      	uxth	r3, r3
 800adfc:	2a00      	cmp	r2, #0
 800adfe:	d1f6      	bne.n	800adee <HttpDeamonHandleRequest::HandleGet()+0x6e>
 800ae00:	f244 729b 	movw	r2, #18331	@ 0x479b
 800ae04:	4293      	cmp	r3, r2
 800ae06:	d066      	beq.n	800aed6 <HttpDeamonHandleRequest::HandleGet()+0x156>
 800ae08:	d84b      	bhi.n	800aea2 <HttpDeamonHandleRequest::HandleGet()+0x122>
 800ae0a:	f241 6261 	movw	r2, #5729	@ 0x1661
 800ae0e:	4293      	cmp	r3, r2
 800ae10:	d02b      	beq.n	800ae6a <HttpDeamonHandleRequest::HandleGet()+0xea>
 800ae12:	f242 4272 	movw	r2, #9330	@ 0x2472
 800ae16:	4293      	cmp	r3, r2
 800ae18:	d056      	beq.n	800aec8 <HttpDeamonHandleRequest::HandleGet()+0x148>
 800ae1a:	f241 12fa 	movw	r2, #4602	@ 0x11fa
 800ae1e:	4293      	cmp	r3, r2
 800ae20:	d12a      	bne.n	800ae78 <HttpDeamonHandleRequest::HandleGet()+0xf8>
 800ae22:	4852      	ldr	r0, [pc, #328]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800ae24:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800ae28:	f000 fab6 	bl	800b398 <remoteconfig::json_get_directory(char*, unsigned long)>
 800ae2c:	4603      	mov	r3, r0
 800ae2e:	2b00      	cmp	r3, #0
 800ae30:	d1d1      	bne.n	800add6 <HttpDeamonHandleRequest::HandleGet()+0x56>
 800ae32:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800ae36:	b002      	add	sp, #8
 800ae38:	bd10      	pop	{r4, pc}
 800ae3a:	4a50      	ldr	r2, [pc, #320]	@ (800af7c <HttpDeamonHandleRequest::HandleGet()+0x1fc>)
 800ae3c:	4601      	mov	r1, r0
 800ae3e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ae42:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800ae46:	4563      	cmp	r3, ip
 800ae48:	d103      	bne.n	800ae52 <HttpDeamonHandleRequest::HandleGet()+0xd2>
 800ae4a:	2b00      	cmp	r3, #0
 800ae4c:	d1f7      	bne.n	800ae3e <HttpDeamonHandleRequest::HandleGet()+0xbe>
 800ae4e:	484c      	ldr	r0, [pc, #304]	@ (800af80 <HttpDeamonHandleRequest::HandleGet()+0x200>)
 800ae50:	e7b9      	b.n	800adc6 <HttpDeamonHandleRequest::HandleGet()+0x46>
 800ae52:	4a4c      	ldr	r2, [pc, #304]	@ (800af84 <HttpDeamonHandleRequest::HandleGet()+0x204>)
 800ae54:	4601      	mov	r1, r0
 800ae56:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ae5a:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800ae5e:	4563      	cmp	r3, ip
 800ae60:	d11a      	bne.n	800ae98 <HttpDeamonHandleRequest::HandleGet()+0x118>
 800ae62:	2b00      	cmp	r3, #0
 800ae64:	d1f7      	bne.n	800ae56 <HttpDeamonHandleRequest::HandleGet()+0xd6>
 800ae66:	4848      	ldr	r0, [pc, #288]	@ (800af88 <HttpDeamonHandleRequest::HandleGet()+0x208>)
 800ae68:	e7ad      	b.n	800adc6 <HttpDeamonHandleRequest::HandleGet()+0x46>
 800ae6a:	4840      	ldr	r0, [pc, #256]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800ae6c:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800ae70:	f000 fa2e 	bl	800b2d0 <remoteconfig::json_get_list(char*, unsigned long)>
 800ae74:	4603      	mov	r3, r0
 800ae76:	e7da      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800ae78:	4b44      	ldr	r3, [pc, #272]	@ (800af8c <HttpDeamonHandleRequest::HandleGet()+0x20c>)
 800ae7a:	f100 0c09 	add.w	ip, r0, #9
 800ae7e:	e001      	b.n	800ae84 <HttpDeamonHandleRequest::HandleGet()+0x104>
 800ae80:	45f4      	cmp	ip, lr
 800ae82:	d039      	beq.n	800aef8 <HttpDeamonHandleRequest::HandleGet()+0x178>
 800ae84:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 800ae88:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ae8c:	4291      	cmp	r1, r2
 800ae8e:	d0f7      	beq.n	800ae80 <HttpDeamonHandleRequest::HandleGet()+0x100>
 800ae90:	4620      	mov	r0, r4
 800ae92:	f7ff ff27 	bl	800ace4 <HttpDeamonHandleRequest::HandleGetTxt()>
 800ae96:	e7a0      	b.n	800adda <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800ae98:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800ae9c:	a901      	add	r1, sp, #4
 800ae9e:	3001      	adds	r0, #1
 800aea0:	e794      	b.n	800adcc <HttpDeamonHandleRequest::HandleGet()+0x4c>
 800aea2:	f646 424b 	movw	r2, #27723	@ 0x6c4b
 800aea6:	4293      	cmp	r3, r2
 800aea8:	d01c      	beq.n	800aee4 <HttpDeamonHandleRequest::HandleGet()+0x164>
 800aeaa:	f24b 72d9 	movw	r2, #47065	@ 0xb7d9
 800aeae:	4293      	cmp	r3, r2
 800aeb0:	d1e2      	bne.n	800ae78 <HttpDeamonHandleRequest::HandleGet()+0xf8>
 800aeb2:	4b37      	ldr	r3, [pc, #220]	@ (800af90 <HttpDeamonHandleRequest::HandleGet()+0x210>)
 800aeb4:	681b      	ldr	r3, [r3, #0]
 800aeb6:	7bdb      	ldrb	r3, [r3, #15]
 800aeb8:	b1db      	cbz	r3, 800aef2 <HttpDeamonHandleRequest::HandleGet()+0x172>
 800aeba:	482c      	ldr	r0, [pc, #176]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800aebc:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800aec0:	f000 fa54 	bl	800b36c <remoteconfig::json_get_uptime(char*, unsigned long)>
 800aec4:	4603      	mov	r3, r0
 800aec6:	e7b2      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800aec8:	4828      	ldr	r0, [pc, #160]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800aeca:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800aece:	f009 f929 	bl	8014124 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
 800aed2:	4603      	mov	r3, r0
 800aed4:	e7ab      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800aed6:	4825      	ldr	r0, [pc, #148]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800aed8:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800aedc:	f000 fa50 	bl	800b380 <remoteconfig::json_get_display(char*, unsigned long)>
 800aee0:	4603      	mov	r3, r0
 800aee2:	e7a4      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800aee4:	4821      	ldr	r0, [pc, #132]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800aee6:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800aeea:	f000 fa23 	bl	800b334 <remoteconfig::json_get_version(char*, unsigned long)>
 800aeee:	4603      	mov	r3, r0
 800aef0:	e79d      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800aef2:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800aef6:	e770      	b.n	800adda <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800aef8:	f890 c010 	ldrb.w	ip, [r0, #16]
 800aefc:	7a82      	ldrb	r2, [r0, #10]
 800aefe:	f1bc 0f3f 	cmp.w	ip, #63	@ 0x3f
 800af02:	bf04      	itt	eq
 800af04:	2300      	moveq	r3, #0
 800af06:	7403      	strbeq	r3, [r0, #16]
 800af08:	f100 010b 	add.w	r1, r0, #11
 800af0c:	f241 5305 	movw	r3, #5381	@ 0x1505
 800af10:	2a00      	cmp	r2, #0
 800af12:	d08e      	beq.n	800ae32 <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800af14:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800af18:	fa12 f383 	uxtah	r3, r2, r3
 800af1c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800af20:	b29b      	uxth	r3, r3
 800af22:	2a00      	cmp	r2, #0
 800af24:	d1f6      	bne.n	800af14 <HttpDeamonHandleRequest::HandleGet()+0x194>
 800af26:	f643 124e 	movw	r2, #14670	@ 0x394e
 800af2a:	4293      	cmp	r3, r2
 800af2c:	d016      	beq.n	800af5c <HttpDeamonHandleRequest::HandleGet()+0x1dc>
 800af2e:	f648 5249 	movw	r2, #36169	@ 0x8d49
 800af32:	4293      	cmp	r3, r2
 800af34:	f47f af7d 	bne.w	800ae32 <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800af38:	f1bc 0f3f 	cmp.w	ip, #63	@ 0x3f
 800af3c:	f47f af79 	bne.w	800ae32 <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800af40:	7c40      	ldrb	r0, [r0, #17]
 800af42:	f020 0320 	bic.w	r3, r0, #32
 800af46:	3b41      	subs	r3, #65	@ 0x41
 800af48:	2b19      	cmp	r3, #25
 800af4a:	f63f af72 	bhi.w	800ae32 <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800af4e:	4907      	ldr	r1, [pc, #28]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800af50:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800af54:	f003 fb0e 	bl	800e574 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)>
 800af58:	4603      	mov	r3, r0
 800af5a:	e768      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800af5c:	4803      	ldr	r0, [pc, #12]	@ (800af6c <HttpDeamonHandleRequest::HandleGet()+0x1ec>)
 800af5e:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800af62:	f003 facf 	bl	800e504 <remoteconfig::dmx::json_get_ports(char*, unsigned long)>
 800af66:	4603      	mov	r3, r0
 800af68:	e761      	b.n	800ae2e <HttpDeamonHandleRequest::HandleGet()+0xae>
 800af6a:	bf00      	nop
 800af6c:	20000cac 	andcs	r0, r0, ip, lsr #25
 800af70:	080180f0 	stmdaeq	r1, {r4, r5, r6, r7, pc}
 800af74:	08018084 	stmdaeq	r1, {r2, r7, pc}
 800af78:	08018100 	stmdaeq	r1, {r8, pc}
 800af7c:	0801810c 	stmdaeq	r1, {r2, r3, r8, pc}
 800af80:	08018114 	stmdaeq	r1, {r2, r4, r8, pc}
 800af84:	08018120 	stmdaeq	r1, {r5, r8, pc}
 800af88:	08018128 	stmdaeq	r1, {r3, r5, r8, pc}
 800af8c:	080180f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, pc}
 800af90:	20000ca8 	andcs	r0, r0, r8, lsr #25

0800af94 <HttpDeamonHandleRequest::HandlePost(bool)>:
 800af94:	b570      	push	{r4, r5, r6, lr}
 800af96:	4604      	mov	r4, r0
 800af98:	b082      	sub	sp, #8
 800af9a:	b331      	cbz	r1, 800afea <HttpDeamonHandleRequest::HandlePost(bool)+0x56>
 800af9c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800af9e:	8aa1      	ldrh	r1, [r4, #20]
 800afa0:	61e0      	str	r0, [r4, #28]
 800afa2:	60e1      	str	r1, [r4, #12]
 800afa4:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
 800afa8:	2b00      	cmp	r3, #0
 800afaa:	d13c      	bne.n	800b026 <HttpDeamonHandleRequest::HandlePost(bool)+0x92>
 800afac:	4d5e      	ldr	r5, [pc, #376]	@ (800b128 <HttpDeamonHandleRequest::HandlePost(bool)+0x194>)
 800afae:	4b5f      	ldr	r3, [pc, #380]	@ (800b12c <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800afb0:	782e      	ldrb	r6, [r5, #0]
 800afb2:	460a      	mov	r2, r1
 800afb4:	4601      	mov	r1, r0
 800afb6:	6818      	ldr	r0, [r3, #0]
 800afb8:	f046 0301 	orr.w	r3, r6, #1
 800afbc:	702b      	strb	r3, [r5, #0]
 800afbe:	f7ff fa0b 	bl	800a3d8 <RemoteConfig::HandleSet(void*, unsigned long)>
 800afc2:	782b      	ldrb	r3, [r5, #0]
 800afc4:	07f2      	lsls	r2, r6, #31
 800afc6:	bf4c      	ite	mi
 800afc8:	f043 0301 	orrmi.w	r3, r3, #1
 800afcc:	f023 0301 	bicpl.w	r3, r3, #1
 800afd0:	702b      	strb	r3, [r5, #0]
 800afd2:	2300      	movs	r3, #0
 800afd4:	4a56      	ldr	r2, [pc, #344]	@ (800b130 <HttpDeamonHandleRequest::HandlePost(bool)+0x19c>)
 800afd6:	4857      	ldr	r0, [pc, #348]	@ (800b134 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a0>)
 800afd8:	6323      	str	r3, [r4, #48]	@ 0x30
 800afda:	f240 519f 	movw	r1, #1439	@ 0x59f
 800afde:	f00b fbff 	bl	80167e0 <snprintf>
 800afe2:	60a0      	str	r0, [r4, #8]
 800afe4:	20c8      	movs	r0, #200	@ 0xc8
 800afe6:	b002      	add	sp, #8
 800afe8:	bd70      	pop	{r4, r5, r6, pc}
 800afea:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800afec:	2b03      	cmp	r3, #3
 800afee:	d134      	bne.n	800b05a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800aff0:	6985      	ldr	r5, [r0, #24]
 800aff2:	782b      	ldrb	r3, [r5, #0]
 800aff4:	2b2f      	cmp	r3, #47	@ 0x2f
 800aff6:	f040 808c 	bne.w	800b112 <HttpDeamonHandleRequest::HandlePost(bool)+0x17e>
 800affa:	4a4f      	ldr	r2, [pc, #316]	@ (800b138 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a4>)
 800affc:	4629      	mov	r1, r5
 800affe:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b002:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b006:	4283      	cmp	r3, r0
 800b008:	d12b      	bne.n	800b062 <HttpDeamonHandleRequest::HandlePost(bool)+0xce>
 800b00a:	2b00      	cmp	r3, #0
 800b00c:	d1f7      	bne.n	800affe <HttpDeamonHandleRequest::HandlePost(bool)+0x6a>
 800b00e:	2301      	movs	r3, #1
 800b010:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b014:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800b018:	429a      	cmp	r2, r3
 800b01a:	d3e3      	bcc.n	800afe4 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b01c:	68e1      	ldr	r1, [r4, #12]
 800b01e:	2900      	cmp	r1, #0
 800b020:	d0e0      	beq.n	800afe4 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b022:	69e0      	ldr	r0, [r4, #28]
 800b024:	e7be      	b.n	800afa4 <HttpDeamonHandleRequest::HandlePost(bool)+0x10>
 800b026:	2201      	movs	r2, #1
 800b028:	f008 fa2c 	bl	8013484 <properties::convert_json_file(char*, unsigned long, bool)>
 800b02c:	1e05      	subs	r5, r0, #0
 800b02e:	dd14      	ble.n	800b05a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b030:	69e3      	ldr	r3, [r4, #28]
 800b032:	4942      	ldr	r1, [pc, #264]	@ (800b13c <HttpDeamonHandleRequest::HandlePost(bool)+0x1a8>)
 800b034:	442b      	add	r3, r5
 800b036:	2200      	movs	r2, #0
 800b038:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b03c:	69e0      	ldr	r0, [r4, #28]
 800b03e:	f10d 0207 	add.w	r2, sp, #7
 800b042:	f008 fc50 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b046:	bb20      	cbnz	r0, 800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0xfe>
 800b048:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b04c:	2b00      	cmp	r3, #0
 800b04e:	d0c0      	beq.n	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b050:	4b36      	ldr	r3, [pc, #216]	@ (800b12c <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800b052:	6818      	ldr	r0, [r3, #0]
 800b054:	7b83      	ldrb	r3, [r0, #14]
 800b056:	2b00      	cmp	r3, #0
 800b058:	d164      	bne.n	800b124 <HttpDeamonHandleRequest::HandlePost(bool)+0x190>
 800b05a:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800b05e:	b002      	add	sp, #8
 800b060:	bd70      	pop	{r4, r5, r6, pc}
 800b062:	1a1b      	subs	r3, r3, r0
 800b064:	2b00      	cmp	r3, #0
 800b066:	bf0c      	ite	eq
 800b068:	2301      	moveq	r3, #1
 800b06a:	2300      	movne	r3, #0
 800b06c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b070:	d0d0      	beq.n	800b014 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b072:	782b      	ldrb	r3, [r5, #0]
 800b074:	2b2f      	cmp	r3, #47	@ 0x2f
 800b076:	d109      	bne.n	800b08c <HttpDeamonHandleRequest::HandlePost(bool)+0xf8>
 800b078:	4a31      	ldr	r2, [pc, #196]	@ (800b140 <HttpDeamonHandleRequest::HandlePost(bool)+0x1ac>)
 800b07a:	e001      	b.n	800b080 <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
 800b07c:	2b00      	cmp	r3, #0
 800b07e:	d0c9      	beq.n	800b014 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b080:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800b084:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b088:	428b      	cmp	r3, r1
 800b08a:	d0f7      	beq.n	800b07c <HttpDeamonHandleRequest::HandlePost(bool)+0xe8>
 800b08c:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800b090:	e7a9      	b.n	800afe6 <HttpDeamonHandleRequest::HandlePost(bool)+0x52>
 800b092:	492c      	ldr	r1, [pc, #176]	@ (800b144 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b0>)
 800b094:	69e0      	ldr	r0, [r4, #28]
 800b096:	f10d 0207 	add.w	r2, sp, #7
 800b09a:	f008 fc24 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b09e:	b178      	cbz	r0, 800b0c0 <HttpDeamonHandleRequest::HandlePost(bool)+0x12c>
 800b0a0:	4929      	ldr	r1, [pc, #164]	@ (800b148 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b4>)
 800b0a2:	69e0      	ldr	r0, [r4, #28]
 800b0a4:	f10d 0207 	add.w	r2, sp, #7
 800b0a8:	f008 fc1d 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b0ac:	bb10      	cbnz	r0, 800b0f4 <HttpDeamonHandleRequest::HandlePost(bool)+0x160>
 800b0ae:	4a27      	ldr	r2, [pc, #156]	@ (800b14c <HttpDeamonHandleRequest::HandlePost(bool)+0x1b8>)
 800b0b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b0b4:	6810      	ldr	r0, [r2, #0]
 800b0b6:	b37b      	cbz	r3, 800b118 <HttpDeamonHandleRequest::HandlePost(bool)+0x184>
 800b0b8:	2104      	movs	r1, #4
 800b0ba:	f008 fff5 	bl	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b0be:	e788      	b.n	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b0c0:	4b23      	ldr	r3, [pc, #140]	@ (800b150 <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800b0c2:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b0c6:	681d      	ldr	r5, [r3, #0]
 800b0c8:	69a8      	ldr	r0, [r5, #24]
 800b0ca:	fab6 f186 	clz	r1, r6
 800b0ce:	0949      	lsrs	r1, r1, #5
 800b0d0:	2800      	cmp	r0, #0
 800b0d2:	f43f af7e 	beq.w	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b0d6:	6803      	ldr	r3, [r0, #0]
 800b0d8:	4a1e      	ldr	r2, [pc, #120]	@ (800b154 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800b0da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b0dc:	7569      	strb	r1, [r5, #21]
 800b0de:	4293      	cmp	r3, r2
 800b0e0:	d106      	bne.n	800b0f0 <HttpDeamonHandleRequest::HandlePost(bool)+0x15c>
 800b0e2:	2e00      	cmp	r6, #0
 800b0e4:	f43f af75 	beq.w	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b0e8:	4b1b      	ldr	r3, [pc, #108]	@ (800b158 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c4>)
 800b0ea:	681b      	ldr	r3, [r3, #0]
 800b0ec:	606b      	str	r3, [r5, #4]
 800b0ee:	e770      	b.n	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b0f0:	4798      	blx	r3
 800b0f2:	e7f6      	b.n	800b0e2 <HttpDeamonHandleRequest::HandlePost(bool)+0x14e>
 800b0f4:	69e0      	ldr	r0, [r4, #28]
 800b0f6:	4a19      	ldr	r2, [pc, #100]	@ (800b15c <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>)
 800b0f8:	1e43      	subs	r3, r0, #1
 800b0fa:	f100 0c04 	add.w	ip, r0, #4
 800b0fe:	e001      	b.n	800b104 <HttpDeamonHandleRequest::HandlePost(bool)+0x170>
 800b100:	4563      	cmp	r3, ip
 800b102:	d00b      	beq.n	800b11c <HttpDeamonHandleRequest::HandlePost(bool)+0x188>
 800b104:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b108:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b10c:	428e      	cmp	r6, r1
 800b10e:	d0f7      	beq.n	800b100 <HttpDeamonHandleRequest::HandlePost(bool)+0x16c>
 800b110:	e7a3      	b.n	800b05a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b112:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800b116:	e7ac      	b.n	800b072 <HttpDeamonHandleRequest::HandlePost(bool)+0xde>
 800b118:	2102      	movs	r1, #2
 800b11a:	e7ce      	b.n	800b0ba <HttpDeamonHandleRequest::HandlePost(bool)+0x126>
 800b11c:	4629      	mov	r1, r5
 800b11e:	f009 f86b 	bl	80141f8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
 800b122:	e756      	b.n	800afd2 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b124:	f7ff fbe4 	bl	800a8f0 <RemoteConfig::HandleReboot()>
 800b128:	20002149 	andcs	r2, r0, r9, asr #2
 800b12c:	20000ca8 	andcs	r0, r0, r8, lsr #25
 800b130:	08018170 	stmdaeq	r1, {r4, r5, r6, r8, pc}
 800b134:	20000cac 	andcs	r0, r0, ip, lsr #25
 800b138:	08018134 	stmdaeq	r1, {r2, r4, r5, r8, pc}
 800b13c:	0801814c 	stmdaeq	r1, {r2, r3, r6, r8, pc}
 800b140:	08018144 	stmdaeq	r1, {r2, r6, r8, pc}
 800b144:	08018154 	stmdaeq	r1, {r2, r4, r6, r8, pc}
 800b148:	0801815c 	stmdaeq	r1, {r2, r3, r4, r6, r8, pc}
 800b14c:	20002238 	andcs	r2, r0, r8, lsr r2
 800b150:	2000214c 	andcs	r2, r0, ip, asr #2
 800b154:	0800aa79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, sp, pc}
 800b158:	20009ae8 	andcs	r9, r0, r8, ror #21
 800b15c:	08018168 	stmdaeq	r1, {r3, r5, r6, r8, pc}

0800b160 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
 800b160:	b570      	push	{r4, r5, r6, lr}
 800b162:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b164:	6141      	str	r1, [r0, #20]
 800b166:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800b16a:	b084      	sub	sp, #16
 800b16c:	4604      	mov	r4, r0
 800b16e:	6242      	str	r2, [r0, #36]	@ 0x24
 800b170:	d05f      	beq.n	800b232 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xd2>
 800b172:	2bc8      	cmp	r3, #200	@ 0xc8
 800b174:	d055      	beq.n	800b222 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc2>
 800b176:	f5b3 7fcf 	cmp.w	r3, #414	@ 0x19e
 800b17a:	dc10      	bgt.n	800b19e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x3e>
 800b17c:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800b180:	db1c      	blt.n	800b1bc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b182:	f5a3 72c8 	sub.w	r2, r3, #400	@ 0x190
 800b186:	2a0e      	cmp	r2, #14
 800b188:	d818      	bhi.n	800b1bc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b18a:	e8df f002 	tbb	[pc, r2]
 800b18e:	17171772 			@ <UNDEFINED> instruction: 0x17171772
 800b192:	17171770 			@ <UNDEFINED> instruction: 0x17171770
 800b196:	17171717 			@ <UNDEFINED> instruction: 0x17171717
 800b19a:	00606217 	rsbeq	r6, r0, r7, lsl r2
 800b19e:	f240 12f5 	movw	r2, #501	@ 0x1f5
 800b1a2:	4293      	cmp	r3, r2
 800b1a4:	d057      	beq.n	800b256 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xf6>
 800b1a6:	f240 12f9 	movw	r2, #505	@ 0x1f9
 800b1aa:	4293      	cmp	r3, r2
 800b1ac:	d04d      	beq.n	800b24a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xea>
 800b1ae:	4e3a      	ldr	r6, [pc, #232]	@ (800b298 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b1b0:	4a3a      	ldr	r2, [pc, #232]	@ (800b29c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x13c>)
 800b1b2:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b1b6:	bf08      	it	eq
 800b1b8:	4616      	moveq	r6, r2
 800b1ba:	e000      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b1bc:	4e36      	ldr	r6, [pc, #216]	@ (800b298 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b1be:	4838      	ldr	r0, [pc, #224]	@ (800b2a0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>)
 800b1c0:	6220      	str	r0, [r4, #32]
 800b1c2:	2200      	movs	r2, #0
 800b1c4:	6322      	str	r2, [r4, #48]	@ 0x30
 800b1c6:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b1ca:	e9cd 6600 	strd	r6, r6, [sp]
 800b1ce:	4a35      	ldr	r2, [pc, #212]	@ (800b2a4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x144>)
 800b1d0:	f00b fb06 	bl	80167e0 <snprintf>
 800b1d4:	e9d4 5309 	ldrd	r5, r3, [r4, #36]	@ 0x24
 800b1d8:	60a0      	str	r0, [r4, #8]
 800b1da:	4933      	ldr	r1, [pc, #204]	@ (800b2a8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>)
 800b1dc:	9003      	str	r0, [sp, #12]
 800b1de:	9600      	str	r6, [sp, #0]
 800b1e0:	6809      	ldr	r1, [r1, #0]
 800b1e2:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800b1e4:	4a31      	ldr	r2, [pc, #196]	@ (800b2ac <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x14c>)
 800b1e6:	3116      	adds	r1, #22
 800b1e8:	9101      	str	r1, [sp, #4]
 800b1ea:	4931      	ldr	r1, [pc, #196]	@ (800b2b0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x150>)
 800b1ec:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b1f0:	9102      	str	r1, [sp, #8]
 800b1f2:	4628      	mov	r0, r5
 800b1f4:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b1f8:	f00b faf2 	bl	80167e0 <snprintf>
 800b1fc:	6823      	ldr	r3, [r4, #0]
 800b1fe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b200:	4602      	mov	r2, r0
 800b202:	6860      	ldr	r0, [r4, #4]
 800b204:	f006 fa88 	bl	8011718 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b208:	6823      	ldr	r3, [r4, #0]
 800b20a:	68a2      	ldr	r2, [r4, #8]
 800b20c:	6a21      	ldr	r1, [r4, #32]
 800b20e:	6860      	ldr	r0, [r4, #4]
 800b210:	f006 fa82 	bl	8011718 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b214:	f44f 7202 	mov.w	r2, #520	@ 0x208
 800b218:	2303      	movs	r3, #3
 800b21a:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 800b21e:	b004      	add	sp, #16
 800b220:	bd70      	pop	{r4, r5, r6, pc}
 800b222:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b224:	2901      	cmp	r1, #1
 800b226:	4615      	mov	r5, r2
 800b228:	d017      	beq.n	800b25a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfa>
 800b22a:	68a0      	ldr	r0, [r4, #8]
 800b22c:	4e21      	ldr	r6, [pc, #132]	@ (800b2b4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b22e:	23c8      	movs	r3, #200	@ 0xc8
 800b230:	e7d3      	b.n	800b1da <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b232:	f7ff fd19 	bl	800ac68 <HttpDeamonHandleRequest::ParseRequest()>
 800b236:	28c8      	cmp	r0, #200	@ 0xc8
 800b238:	4603      	mov	r3, r0
 800b23a:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b23c:	d19b      	bne.n	800b176 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b23e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b240:	b1cb      	cbz	r3, 800b276 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x116>
 800b242:	2b01      	cmp	r3, #1
 800b244:	d01b      	beq.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x11e>
 800b246:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b248:	e7ef      	b.n	800b22a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xca>
 800b24a:	4e1b      	ldr	r6, [pc, #108]	@ (800b2b8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x158>)
 800b24c:	e7b7      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b24e:	4e1b      	ldr	r6, [pc, #108]	@ (800b2bc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x15c>)
 800b250:	e7b5      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b252:	4e1b      	ldr	r6, [pc, #108]	@ (800b2c0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x160>)
 800b254:	e7b3      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b256:	4e1b      	ldr	r6, [pc, #108]	@ (800b2c4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x164>)
 800b258:	e7b1      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b25a:	f7ff fe9b 	bl	800af94 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b25e:	28c8      	cmp	r0, #200	@ 0xc8
 800b260:	4603      	mov	r3, r0
 800b262:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b264:	d187      	bne.n	800b176 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b266:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b268:	68a0      	ldr	r0, [r4, #8]
 800b26a:	4e12      	ldr	r6, [pc, #72]	@ (800b2b4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b26c:	e7b5      	b.n	800b1da <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b26e:	4e16      	ldr	r6, [pc, #88]	@ (800b2c8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x168>)
 800b270:	e7a5      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b272:	4e16      	ldr	r6, [pc, #88]	@ (800b2cc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16c>)
 800b274:	e7a3      	b.n	800b1be <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b276:	4620      	mov	r0, r4
 800b278:	f7ff fd82 	bl	800ad80 <HttpDeamonHandleRequest::HandleGet()>
 800b27c:	e7ef      	b.n	800b25e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfe>
 800b27e:	2100      	movs	r1, #0
 800b280:	4620      	mov	r0, r4
 800b282:	f7ff fe87 	bl	800af94 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b286:	28c8      	cmp	r0, #200	@ 0xc8
 800b288:	4603      	mov	r3, r0
 800b28a:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b28c:	f47f af73 	bne.w	800b176 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b290:	68e3      	ldr	r3, [r4, #12]
 800b292:	2b00      	cmp	r3, #0
 800b294:	d1d7      	bne.n	800b246 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xe6>
 800b296:	e7c2      	b.n	800b21e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xbe>
 800b298:	080181d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, pc}
 800b29c:	0801821c 	stmdaeq	r1, {r2, r3, r4, r9, pc}
 800b2a0:	20000cac 	andcs	r0, r0, ip, lsr #25
 800b2a4:	08018274 	stmdaeq	r1, {r2, r4, r5, r6, r9, pc}
 800b2a8:	20002068 	andcs	r2, r0, r8, rrx
 800b2ac:	080182d0 	stmdaeq	r1, {r4, r6, r7, r9, pc}
 800b2b0:	08018390 	stmdaeq	r1, {r4, r7, r8, r9, pc}
 800b2b4:	08018270 	stmdaeq	r1, {r4, r5, r6, r9, pc}
 800b2b8:	0801824c 	stmdaeq	r1, {r2, r3, r6, r9, pc}
 800b2bc:	08018204 	stmdaeq	r1, {r2, r9, pc}
 800b2c0:	080181e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, pc}
 800b2c4:	08018234 	stmdaeq	r1, {r2, r4, r5, r9, pc}
 800b2c8:	08018264 	stmdaeq	r1, {r2, r5, r6, r9, pc}
 800b2cc:	080181cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, pc}

0800b2d0 <remoteconfig::json_get_list(char*, unsigned long)>:
 800b2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2d4:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800b330 <remoteconfig::json_get_list(char*, unsigned long)+0x60>
 800b2d8:	4b12      	ldr	r3, [pc, #72]	@ (800b324 <remoteconfig::json_get_list(char*, unsigned long)+0x54>)
 800b2da:	b088      	sub	sp, #32
 800b2dc:	4605      	mov	r5, r0
 800b2de:	f8d8 0000 	ldr.w	r0, [r8]
 800b2e2:	681c      	ldr	r4, [r3, #0]
 800b2e4:	460e      	mov	r6, r1
 800b2e6:	f7fe ff49 	bl	800a17c <RemoteConfig::GetStringNode() const>
 800b2ea:	4607      	mov	r7, r0
 800b2ec:	f8d8 0000 	ldr.w	r0, [r8]
 800b2f0:	f7fe ff50 	bl	800a194 <RemoteConfig::GetStringOutput() const>
 800b2f4:	4b0c      	ldr	r3, [pc, #48]	@ (800b328 <remoteconfig::json_get_list(char*, unsigned long)+0x58>)
 800b2f6:	7a1a      	ldrb	r2, [r3, #8]
 800b2f8:	9704      	str	r7, [sp, #16]
 800b2fa:	3309      	adds	r3, #9
 800b2fc:	9303      	str	r3, [sp, #12]
 800b2fe:	0e23      	lsrs	r3, r4, #24
 800b300:	9302      	str	r3, [sp, #8]
 800b302:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b306:	9301      	str	r3, [sp, #4]
 800b308:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b30c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b310:	9300      	str	r3, [sp, #0]
 800b312:	4a06      	ldr	r2, [pc, #24]	@ (800b32c <remoteconfig::json_get_list(char*, unsigned long)+0x5c>)
 800b314:	b2e3      	uxtb	r3, r4
 800b316:	4631      	mov	r1, r6
 800b318:	4628      	mov	r0, r5
 800b31a:	f00b fa61 	bl	80167e0 <snprintf>
 800b31e:	b008      	add	sp, #32
 800b320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b324:	20002088 	andcs	r2, r0, r8, lsl #1
 800b328:	20000c84 	andcs	r0, r0, r4, lsl #25
 800b32c:	08017415 	stmdaeq	r1, {r0, r2, r4, sl, ip, sp, lr}
 800b330:	20000ca8 	andcs	r0, r0, r8, lsr #25

0800b334 <remoteconfig::json_get_version(char*, unsigned long)>:
 800b334:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b336:	4b0a      	ldr	r3, [pc, #40]	@ (800b360 <remoteconfig::json_get_version(char*, unsigned long)+0x2c>)
 800b338:	9305      	str	r3, [sp, #20]
 800b33a:	2208      	movs	r2, #8
 800b33c:	9204      	str	r2, [sp, #16]
 800b33e:	f1a3 020b 	sub.w	r2, r3, #11
 800b342:	9203      	str	r2, [sp, #12]
 800b344:	220b      	movs	r2, #11
 800b346:	9202      	str	r2, [sp, #8]
 800b348:	3b0e      	subs	r3, #14
 800b34a:	4a06      	ldr	r2, [pc, #24]	@ (800b364 <remoteconfig::json_get_version(char*, unsigned long)+0x30>)
 800b34c:	9201      	str	r2, [sp, #4]
 800b34e:	9300      	str	r3, [sp, #0]
 800b350:	4a05      	ldr	r2, [pc, #20]	@ (800b368 <remoteconfig::json_get_version(char*, unsigned long)+0x34>)
 800b352:	2303      	movs	r3, #3
 800b354:	f00b fa44 	bl	80167e0 <snprintf>
 800b358:	b007      	add	sp, #28
 800b35a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b35e:	bf00      	nop
 800b360:	2000222e 	andcs	r2, r0, lr, lsr #4
 800b364:	080174ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp, lr}
 800b368:	08017474 	stmdaeq	r1, {r2, r4, r5, r6, sl, ip, sp, lr}

0800b36c <remoteconfig::json_get_uptime(char*, unsigned long)>:
 800b36c:	4b02      	ldr	r3, [pc, #8]	@ (800b378 <remoteconfig::json_get_uptime(char*, unsigned long)+0xc>)
 800b36e:	4a03      	ldr	r2, [pc, #12]	@ (800b37c <remoteconfig::json_get_uptime(char*, unsigned long)+0x10>)
 800b370:	685b      	ldr	r3, [r3, #4]
 800b372:	f00b ba35 	b.w	80167e0 <snprintf>
 800b376:	bf00      	nop
 800b378:	20009ae0 	andcs	r9, r0, r0, ror #21
 800b37c:	080174c9 	stmdaeq	r1, {r0, r3, r6, r7, sl, ip, sp, lr}

0800b380 <remoteconfig::json_get_display(char*, unsigned long)>:
 800b380:	4b03      	ldr	r3, [pc, #12]	@ (800b390 <remoteconfig::json_get_display(char*, unsigned long)+0x10>)
 800b382:	4a04      	ldr	r2, [pc, #16]	@ (800b394 <remoteconfig::json_get_display(char*, unsigned long)+0x14>)
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	7d5b      	ldrb	r3, [r3, #21]
 800b388:	f083 0301 	eor.w	r3, r3, #1
 800b38c:	f00b ba28 	b.w	80167e0 <snprintf>
 800b390:	2000214c 	andcs	r2, r0, ip, asr #2
 800b394:	080174d8 	stmdaeq	r1, {r3, r4, r6, r7, sl, ip, sp, lr}

0800b398 <remoteconfig::json_get_directory(char*, unsigned long)>:
 800b398:	4a01      	ldr	r2, [pc, #4]	@ (800b3a0 <remoteconfig::json_get_directory(char*, unsigned long)+0x8>)
 800b39a:	f00b ba21 	b.w	80167e0 <snprintf>
 800b39e:	bf00      	nop
 800b3a0:	080174e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, ip, sp, lr}

0800b3a4 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
 800b3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3a6:	4c0e      	ldr	r4, [pc, #56]	@ (800b3e0 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x3c>)
 800b3a8:	230b      	movs	r3, #11
 800b3aa:	3b01      	subs	r3, #1
 800b3ac:	d104      	bne.n	800b3b8 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x14>
 800b3ae:	600b      	str	r3, [r1, #0]
 800b3b0:	2105      	movs	r1, #5
 800b3b2:	6011      	str	r1, [r2, #0]
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	e011      	b.n	800b3dc <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x38>
 800b3b8:	6825      	ldr	r5, [r4, #0]
 800b3ba:	1e47      	subs	r7, r0, #1
 800b3bc:	3d01      	subs	r5, #1
 800b3be:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b3c2:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800b3c6:	4566      	cmp	r6, ip
 800b3c8:	d001      	beq.n	800b3ce <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x2a>
 800b3ca:	3410      	adds	r4, #16
 800b3cc:	e7ed      	b.n	800b3aa <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x6>
 800b3ce:	2e00      	cmp	r6, #0
 800b3d0:	d1f5      	bne.n	800b3be <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1a>
 800b3d2:	68a3      	ldr	r3, [r4, #8]
 800b3d4:	600b      	str	r3, [r1, #0]
 800b3d6:	6860      	ldr	r0, [r4, #4]
 800b3d8:	68e3      	ldr	r3, [r4, #12]
 800b3da:	6013      	str	r3, [r2, #0]
 800b3dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3de:	bf00      	nop
 800b3e0:	0801848c 	stmdaeq	r1, {r2, r3, r7, sl, pc}

0800b3e4 <LightSet::Blackout(bool)>:
 800b3e4:	4770      	bx	lr
 800b3e6:	bf00      	nop

0800b3e8 <LightSet::FullOn()>:
 800b3e8:	4770      	bx	lr
 800b3ea:	bf00      	nop

0800b3ec <E131Bridge::E131Bridge()>:
 800b3ec:	b530      	push	{r4, r5, lr}
 800b3ee:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800b3f2:	2500      	movs	r5, #0
 800b3f4:	2201      	movs	r2, #1
 800b3f6:	4604      	mov	r4, r0
 800b3f8:	e9c0 3500 	strd	r3, r5, [r0]
 800b3fc:	f880 20e8 	strb.w	r2, [r0, #232]	@ 0xe8
 800b400:	f8c0 3848 	str.w	r3, [r0, #2120]	@ 0x848
 800b404:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800b408:	e9c0 553d 	strd	r5, r5, [r0, #244]	@ 0xf4
 800b40c:	f8c0 5844 	str.w	r5, [r0, #2116]	@ 0x844
 800b410:	f8c0 584c 	str.w	r5, [r0, #2124]	@ 0x84c
 800b414:	b093      	sub	sp, #76	@ 0x4c
 800b416:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800b41a:	f006 f9d7 	bl	80117cc <net::udp_begin(unsigned short)>
 800b41e:	4b37      	ldr	r3, [pc, #220]	@ (800b4fc <E131Bridge::E131Bridge()+0x110>)
 800b420:	f8c4 0848 	str.w	r0, [r4, #2120]	@ 0x848
 800b424:	f104 0c30 	add.w	ip, r4, #48	@ 0x30
 800b428:	601c      	str	r4, [r3, #0]
 800b42a:	4662      	mov	r2, ip
 800b42c:	f104 0348 	add.w	r3, r4, #72	@ 0x48
 800b430:	f842 5b04 	str.w	r5, [r2], #4
 800b434:	429a      	cmp	r2, r3
 800b436:	d1fb      	bne.n	800b430 <E131Bridge::E131Bridge()+0x44>
 800b438:	2202      	movs	r2, #2
 800b43a:	6362      	str	r2, [r4, #52]	@ 0x34
 800b43c:	6422      	str	r2, [r4, #64]	@ 0x40
 800b43e:	2100      	movs	r1, #0
 800b440:	f104 0210 	add.w	r2, r4, #16
 800b444:	f842 1b04 	str.w	r1, [r2], #4
 800b448:	4594      	cmp	ip, r2
 800b44a:	d1fb      	bne.n	800b444 <E131Bridge::E131Bridge()+0x58>
 800b44c:	2201      	movs	r2, #1
 800b44e:	f884 2020 	strb.w	r2, [r4, #32]
 800b452:	6261      	str	r1, [r4, #36]	@ 0x24
 800b454:	2200      	movs	r2, #0
 800b456:	f104 018c 	add.w	r1, r4, #140	@ 0x8c
 800b45a:	f843 2b04 	str.w	r2, [r3], #4
 800b45e:	428b      	cmp	r3, r1
 800b460:	d1fb      	bne.n	800b45a <E131Bridge::E131Bridge()+0x6e>
 800b462:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800b466:	f8c4 20d0 	str.w	r2, [r4, #208]	@ 0xd0
 800b46a:	f8c4 20d4 	str.w	r2, [r4, #212]	@ 0xd4
 800b46e:	f8c4 10d8 	str.w	r1, [r4, #216]	@ 0xd8
 800b472:	2200      	movs	r2, #0
 800b474:	f104 01d0 	add.w	r1, r4, #208	@ 0xd0
 800b478:	f843 2b04 	str.w	r2, [r3], #4
 800b47c:	4299      	cmp	r1, r3
 800b47e:	d1fb      	bne.n	800b478 <E131Bridge::E131Bridge()+0x8c>
 800b480:	4b1f      	ldr	r3, [pc, #124]	@ (800b500 <E131Bridge::E131Bridge()+0x114>)
 800b482:	4920      	ldr	r1, [pc, #128]	@ (800b504 <E131Bridge::E131Bridge()+0x118>)
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	f8c4 20dc 	str.w	r2, [r4, #220]	@ 0xdc
 800b48a:	f44f 40c8 	mov.w	r0, #25600	@ 0x6400
 800b48e:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
 800b492:	f8c4 00e4 	str.w	r0, [r4, #228]	@ 0xe4
 800b496:	3316      	adds	r3, #22
 800b498:	9100      	str	r1, [sp, #0]
 800b49a:	4a1b      	ldr	r2, [pc, #108]	@ (800b508 <E131Bridge::E131Bridge()+0x11c>)
 800b49c:	2140      	movs	r1, #64	@ 0x40
 800b49e:	a802      	add	r0, sp, #8
 800b4a0:	f00b f99e 	bl	80167e0 <snprintf>
 800b4a4:	f104 03fc 	add.w	r3, r4, #252	@ 0xfc
 800b4a8:	a902      	add	r1, sp, #8
 800b4aa:	f10d 0047 	add.w	r0, sp, #71	@ 0x47
 800b4ae:	e003      	b.n	800b4b8 <E131Bridge::E131Bridge()+0xcc>
 800b4b0:	4288      	cmp	r0, r1
 800b4b2:	f803 2b01 	strb.w	r2, [r3], #1
 800b4b6:	d009      	beq.n	800b4cc <E131Bridge::E131Bridge()+0xe0>
 800b4b8:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b4bc:	2a00      	cmp	r2, #0
 800b4be:	d1f7      	bne.n	800b4b0 <E131Bridge::E131Bridge()+0xc4>
 800b4c0:	f204 113b 	addw	r1, r4, #315	@ 0x13b
 800b4c4:	f803 2b01 	strb.w	r2, [r3], #1
 800b4c8:	428b      	cmp	r3, r1
 800b4ca:	d1fb      	bne.n	800b4c4 <E131Bridge::E131Bridge()+0xd8>
 800b4cc:	4b0f      	ldr	r3, [pc, #60]	@ (800b50c <E131Bridge::E131Bridge()+0x120>)
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	2200      	movs	r2, #0
 800b4d2:	f884 213b 	strb.w	r2, [r4, #315]	@ 0x13b
 800b4d6:	f103 0010 	add.w	r0, r3, #16
 800b4da:	f504 729e 	add.w	r2, r4, #316	@ 0x13c
 800b4de:	f853 1b04 	ldr.w	r1, [r3], #4
 800b4e2:	f842 1b04 	str.w	r1, [r2], #4
 800b4e6:	4283      	cmp	r3, r0
 800b4e8:	d1f9      	bne.n	800b4de <E131Bridge::E131Bridge()+0xf2>
 800b4ea:	f44f 50ae 	mov.w	r0, #5568	@ 0x15c0
 800b4ee:	f006 f96d 	bl	80117cc <net::udp_begin(unsigned short)>
 800b4f2:	6020      	str	r0, [r4, #0]
 800b4f4:	4620      	mov	r0, r4
 800b4f6:	b013      	add	sp, #76	@ 0x4c
 800b4f8:	bd30      	pop	{r4, r5, pc}
 800b4fa:	bf00      	nop
 800b4fc:	2000124c 	andcs	r1, r0, ip, asr #4
 800b500:	20002068 	andcs	r2, r0, r8, rrx
 800b504:	08018334 	stmdaeq	r1, {r2, r4, r5, r8, r9, pc}
 800b508:	08018328 	stmdaeq	r1, {r3, r5, r8, r9, pc}
 800b50c:	20002238 	andcs	r2, r0, r8, lsr r2

0800b510 <E131Bridge::Stop()>:
 800b510:	b570      	push	{r4, r5, r6, lr}
 800b512:	4604      	mov	r4, r0
 800b514:	f8d0 00f4 	ldr.w	r0, [r0, #244]	@ 0xf4
 800b518:	2601      	movs	r6, #1
 800b51a:	f884 6029 	strb.w	r6, [r4, #41]	@ 0x29
 800b51e:	2800      	cmp	r0, #0
 800b520:	d02e      	beq.n	800b580 <E131Bridge::Stop()+0x70>
 800b522:	6803      	ldr	r3, [r0, #0]
 800b524:	4d18      	ldr	r5, [pc, #96]	@ (800b588 <E131Bridge::Stop()+0x78>)
 800b526:	68db      	ldr	r3, [r3, #12]
 800b528:	2100      	movs	r1, #0
 800b52a:	4798      	blx	r3
 800b52c:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800b530:	2300      	movs	r3, #0
 800b532:	f8c5 3600 	str.w	r3, [r5, #1536]	@ 0x600
 800b536:	b118      	cbz	r0, 800b540 <E131Bridge::Stop()+0x30>
 800b538:	6803      	ldr	r3, [r0, #0]
 800b53a:	4631      	mov	r1, r6
 800b53c:	68db      	ldr	r3, [r3, #12]
 800b53e:	4798      	blx	r3
 800b540:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800b542:	2200      	movs	r2, #0
 800b544:	f8c5 2c04 	str.w	r2, [r5, #3076]	@ 0xc04
 800b548:	b153      	cbz	r3, 800b560 <E131Bridge::Stop()+0x50>
 800b54a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b54c:	b18b      	cbz	r3, 800b572 <E131Bridge::Stop()+0x62>
 800b54e:	4b0f      	ldr	r3, [pc, #60]	@ (800b58c <E131Bridge::Stop()+0x7c>)
 800b550:	2100      	movs	r1, #0
 800b552:	f884 1028 	strb.w	r1, [r4, #40]	@ 0x28
 800b556:	6818      	ldr	r0, [r3, #0]
 800b558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b55c:	f008 bda4 	b.w	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b560:	4a0b      	ldr	r2, [pc, #44]	@ (800b590 <E131Bridge::Stop()+0x80>)
 800b562:	4619      	mov	r1, r3
 800b564:	6810      	ldr	r0, [r2, #0]
 800b566:	2201      	movs	r2, #1
 800b568:	f003 fd30 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b56c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b56e:	2b00      	cmp	r3, #0
 800b570:	d1ed      	bne.n	800b54e <E131Bridge::Stop()+0x3e>
 800b572:	4907      	ldr	r1, [pc, #28]	@ (800b590 <E131Bridge::Stop()+0x80>)
 800b574:	2201      	movs	r2, #1
 800b576:	6808      	ldr	r0, [r1, #0]
 800b578:	4611      	mov	r1, r2
 800b57a:	f003 fd27 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b57e:	e7e6      	b.n	800b54e <E131Bridge::Stop()+0x3e>
 800b580:	4d01      	ldr	r5, [pc, #4]	@ (800b588 <E131Bridge::Stop()+0x78>)
 800b582:	f8c5 0600 	str.w	r0, [r5, #1536]	@ 0x600
 800b586:	e7db      	b.n	800b540 <E131Bridge::Stop()+0x30>
 800b588:	20000078 	andcs	r0, r0, r8, ror r0
 800b58c:	20002238 	andcs	r2, r0, r8, lsr r2
 800b590:	20001380 	andcs	r1, r0, r0, lsl #7

0800b594 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800b594:	b538      	push	{r3, r4, r5, lr}
 800b596:	461c      	mov	r4, r3
 800b598:	b1e1      	cbz	r1, 800b5d4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x40>
 800b59a:	8b43      	ldrh	r3, [r0, #26]
 800b59c:	f100 051a 	add.w	r5, r0, #26
 800b5a0:	b173      	cbz	r3, 800b5c0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800b5a2:	42a3      	cmp	r3, r4
 800b5a4:	d01d      	beq.n	800b5e2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4e>
 800b5a6:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800b5a8:	429a      	cmp	r2, r3
 800b5aa:	d009      	beq.n	800b5c0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800b5ac:	8f82      	ldrh	r2, [r0, #60]	@ 0x3c
 800b5ae:	429a      	cmp	r2, r3
 800b5b0:	d006      	beq.n	800b5c0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800b5b2:	ba18      	rev	r0, r3
 800b5b4:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800b5b8:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800b5bc:	f005 fd0c 	bl	8010fd8 <net::igmp_leave(unsigned long)>
 800b5c0:	ba20      	rev	r0, r4
 800b5c2:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800b5c6:	802c      	strh	r4, [r5, #0]
 800b5c8:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800b5cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b5d0:	f005 bce4 	b.w	8010f9c <net::igmp_join(unsigned long)>
 800b5d4:	b12a      	cbz	r2, 800b5e2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4e>
 800b5d6:	8b83      	ldrh	r3, [r0, #28]
 800b5d8:	f100 051c 	add.w	r5, r0, #28
 800b5dc:	2b00      	cmp	r3, #0
 800b5de:	d0ef      	beq.n	800b5c0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800b5e0:	e7df      	b.n	800b5a2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0xe>
 800b5e2:	bd38      	pop	{r3, r4, r5, pc}

0800b5e4 <E131Bridge::SetLocalMerging()>:
 800b5e4:	f100 0118 	add.w	r1, r0, #24
 800b5e8:	4603      	mov	r3, r0
 800b5ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b5ec:	2a01      	cmp	r2, #1
 800b5ee:	d01f      	beq.n	800b630 <E131Bridge::SetLocalMerging()+0x4c>
 800b5f0:	b570      	push	{r4, r5, r6, lr}
 800b5f2:	8e1c      	ldrh	r4, [r3, #48]	@ 0x30
 800b5f4:	b944      	cbnz	r4, 800b608 <E131Bridge::SetLocalMerging()+0x24>
 800b5f6:	330c      	adds	r3, #12
 800b5f8:	428b      	cmp	r3, r1
 800b5fa:	d018      	beq.n	800b62e <E131Bridge::SetLocalMerging()+0x4a>
 800b5fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b5fe:	2a01      	cmp	r2, #1
 800b600:	d0f9      	beq.n	800b5f6 <E131Bridge::SetLocalMerging()+0x12>
 800b602:	8e1c      	ldrh	r4, [r3, #48]	@ 0x30
 800b604:	2c00      	cmp	r4, #0
 800b606:	d0f6      	beq.n	800b5f6 <E131Bridge::SetLocalMerging()+0x12>
 800b608:	2200      	movs	r2, #0
 800b60a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800b60e:	4684      	mov	ip, r0
 800b610:	4602      	mov	r2, r0
 800b612:	6b55      	ldr	r5, [r2, #52]	@ 0x34
 800b614:	b11d      	cbz	r5, 800b61e <E131Bridge::SetLocalMerging()+0x3a>
 800b616:	f8b2 e030 	ldrh.w	lr, [r2, #48]	@ 0x30
 800b61a:	45a6      	cmp	lr, r4
 800b61c:	d00c      	beq.n	800b638 <E131Bridge::SetLocalMerging()+0x54>
 800b61e:	320c      	adds	r2, #12
 800b620:	428a      	cmp	r2, r1
 800b622:	f10c 0c44 	add.w	ip, ip, #68	@ 0x44
 800b626:	d1f4      	bne.n	800b612 <E131Bridge::SetLocalMerging()+0x2e>
 800b628:	330c      	adds	r3, #12
 800b62a:	428b      	cmp	r3, r1
 800b62c:	d1e6      	bne.n	800b5fc <E131Bridge::SetLocalMerging()+0x18>
 800b62e:	bd70      	pop	{r4, r5, r6, pc}
 800b630:	330c      	adds	r3, #12
 800b632:	428b      	cmp	r3, r1
 800b634:	d1d9      	bne.n	800b5ea <E131Bridge::SetLocalMerging()+0x6>
 800b636:	4770      	bx	lr
 800b638:	4d08      	ldr	r5, [pc, #32]	@ (800b65c <E131Bridge::SetLocalMerging()+0x78>)
 800b63a:	f892 6038 	ldrb.w	r6, [r2, #56]	@ 0x38
 800b63e:	682d      	ldr	r5, [r5, #0]
 800b640:	b146      	cbz	r6, 800b654 <E131Bridge::SetLocalMerging()+0x70>
 800b642:	f8cc 5068 	str.w	r5, [ip, #104]	@ 0x68
 800b646:	f04f 0e01 	mov.w	lr, #1
 800b64a:	f883 e038 	strb.w	lr, [r3, #56]	@ 0x38
 800b64e:	f882 e038 	strb.w	lr, [r2, #56]	@ 0x38
 800b652:	e7e4      	b.n	800b61e <E131Bridge::SetLocalMerging()+0x3a>
 800b654:	f8cc 504c 	str.w	r5, [ip, #76]	@ 0x4c
 800b658:	e7f5      	b.n	800b646 <E131Bridge::SetLocalMerging()+0x62>
 800b65a:	bf00      	nop
 800b65c:	20002088 	andcs	r2, r0, r8, lsl #1

0800b660 <E131Bridge::Start()>:
 800b660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b662:	4b28      	ldr	r3, [pc, #160]	@ (800b704 <E131Bridge::Start()+0xa4>)
 800b664:	f8c0 3844 	str.w	r3, [r0, #2116]	@ 0x844
 800b668:	4604      	mov	r4, r0
 800b66a:	f001 faf7 	bl	800cc5c <E131Bridge::FillDataPacket()>
 800b66e:	4620      	mov	r0, r4
 800b670:	f001 fa60 	bl	800cb34 <E131Bridge::FillDiscoveryPacket()>
 800b674:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800b676:	2900      	cmp	r1, #0
 800b678:	d03d      	beq.n	800b6f6 <E131Bridge::Start()+0x96>
 800b67a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b67c:	b39b      	cbz	r3, 800b6e6 <E131Bridge::Start()+0x86>
 800b67e:	4620      	mov	r0, r4
 800b680:	f7ff ffb0 	bl	800b5e4 <E131Bridge::SetLocalMerging()>
 800b684:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 800b688:	b323      	cbz	r3, 800b6d4 <E131Bridge::Start()+0x74>
 800b68a:	4625      	mov	r5, r4
 800b68c:	4626      	mov	r6, r4
 800b68e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800b690:	2b01      	cmp	r3, #1
 800b692:	f04f 0700 	mov.w	r7, #0
 800b696:	d007      	beq.n	800b6a8 <E131Bridge::Start()+0x48>
 800b698:	350c      	adds	r5, #12
 800b69a:	3644      	adds	r6, #68	@ 0x44
 800b69c:	b9d7      	cbnz	r7, 800b6d4 <E131Bridge::Start()+0x74>
 800b69e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800b6a0:	2b01      	cmp	r3, #1
 800b6a2:	f04f 0701 	mov.w	r7, #1
 800b6a6:	d1f7      	bne.n	800b698 <E131Bridge::Start()+0x38>
 800b6a8:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800b6ac:	f8d6 2084 	ldr.w	r2, [r6, #132]	@ 0x84
 800b6b0:	b150      	cbz	r0, 800b6c8 <E131Bridge::Start()+0x68>
 800b6b2:	6803      	ldr	r3, [r0, #0]
 800b6b4:	4639      	mov	r1, r7
 800b6b6:	69db      	ldr	r3, [r3, #28]
 800b6b8:	4798      	blx	r3
 800b6ba:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800b6be:	6803      	ldr	r3, [r0, #0]
 800b6c0:	4639      	mov	r1, r7
 800b6c2:	6a1b      	ldr	r3, [r3, #32]
 800b6c4:	4798      	blx	r3
 800b6c6:	4602      	mov	r2, r0
 800b6c8:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
 800b6cc:	350c      	adds	r5, #12
 800b6ce:	3644      	adds	r6, #68	@ 0x44
 800b6d0:	2f00      	cmp	r7, #0
 800b6d2:	d0e4      	beq.n	800b69e <E131Bridge::Start()+0x3e>
 800b6d4:	4b0c      	ldr	r3, [pc, #48]	@ (800b708 <E131Bridge::Start()+0xa8>)
 800b6d6:	2102      	movs	r1, #2
 800b6d8:	6818      	ldr	r0, [r3, #0]
 800b6da:	f884 1028 	strb.w	r1, [r4, #40]	@ 0x28
 800b6de:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800b6e2:	f008 bce1 	b.w	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b6e6:	4a09      	ldr	r2, [pc, #36]	@ (800b70c <E131Bridge::Start()+0xac>)
 800b6e8:	2301      	movs	r3, #1
 800b6ea:	6810      	ldr	r0, [r2, #0]
 800b6ec:	4619      	mov	r1, r3
 800b6ee:	461a      	mov	r2, r3
 800b6f0:	f003 fc6c 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b6f4:	e7c3      	b.n	800b67e <E131Bridge::Start()+0x1e>
 800b6f6:	4a05      	ldr	r2, [pc, #20]	@ (800b70c <E131Bridge::Start()+0xac>)
 800b6f8:	2301      	movs	r3, #1
 800b6fa:	6810      	ldr	r0, [r2, #0]
 800b6fc:	461a      	mov	r2, r3
 800b6fe:	f003 fc65 	bl	800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b702:	e7ba      	b.n	800b67a <E131Bridge::Start()+0x1a>
 800b704:	d6faffef 	ldrbtle	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>
 800b708:	20002238 	andcs	r2, r0, r8, lsr r2
 800b70c:	20001380 	andcs	r1, r0, r0, lsl #7

0800b710 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>:
 800b710:	2a02      	cmp	r2, #2
 800b712:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b714:	4606      	mov	r6, r0
 800b716:	460c      	mov	r4, r1
 800b718:	461f      	mov	r7, r3
 800b71a:	d034      	beq.n	800b786 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x76>
 800b71c:	b9c2      	cbnz	r2, 800b750 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x40>
 800b71e:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800b722:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800b726:	004d      	lsls	r5, r1, #1
 800b728:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b72a:	2a00      	cmp	r2, #0
 800b72c:	d13d      	bne.n	800b7aa <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x9a>
 800b72e:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800b730:	42bb      	cmp	r3, r7
 800b732:	d00c      	beq.n	800b74e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800b734:	4425      	add	r5, r4
 800b736:	ba3b      	rev	r3, r7
 800b738:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800b73c:	f443 437f 	orr.w	r3, r3, #65280	@ 0xff00
 800b740:	2200      	movs	r2, #0
 800b742:	f043 03ef 	orr.w	r3, r3, #239	@ 0xef
 800b746:	636a      	str	r2, [r5, #52]	@ 0x34
 800b748:	862f      	strh	r7, [r5, #48]	@ 0x30
 800b74a:	f8c5 30d0 	str.w	r3, [r5, #208]	@ 0xd0
 800b74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b750:	2a01      	cmp	r2, #1
 800b752:	d1fc      	bne.n	800b74e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800b754:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800b758:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800b75c:	004d      	lsls	r5, r1, #1
 800b75e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b760:	2a01      	cmp	r2, #1
 800b762:	d040      	beq.n	800b7e6 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xd6>
 800b764:	7fc3      	ldrb	r3, [r0, #31]
 800b766:	3301      	adds	r3, #1
 800b768:	77c3      	strb	r3, [r0, #31]
 800b76a:	ba38      	rev	r0, r7
 800b76c:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800b770:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800b774:	4425      	add	r5, r4
 800b776:	f005 fc11 	bl	8010f9c <net::igmp_join(unsigned long)>
 800b77a:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800b77e:	2301      	movs	r3, #1
 800b780:	6343      	str	r3, [r0, #52]	@ 0x34
 800b782:	8607      	strh	r7, [r0, #48]	@ 0x30
 800b784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b786:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800b78a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800b78e:	004d      	lsls	r5, r1, #1
 800b790:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b792:	2b01      	cmp	r3, #1
 800b794:	d00d      	beq.n	800b7b2 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xa2>
 800b796:	b913      	cbnz	r3, 800b79e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800b798:	7fb3      	ldrb	r3, [r6, #30]
 800b79a:	3b01      	subs	r3, #1
 800b79c:	77b3      	strb	r3, [r6, #30]
 800b79e:	4425      	add	r5, r4
 800b7a0:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800b7a4:	2302      	movs	r3, #2
 800b7a6:	636b      	str	r3, [r5, #52]	@ 0x34
 800b7a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b7aa:	7f83      	ldrb	r3, [r0, #30]
 800b7ac:	3301      	adds	r3, #1
 800b7ae:	7783      	strb	r3, [r0, #30]
 800b7b0:	e7c0      	b.n	800b734 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x24>
 800b7b2:	7fc3      	ldrb	r3, [r0, #31]
 800b7b4:	3b01      	subs	r3, #1
 800b7b6:	77c3      	strb	r3, [r0, #31]
 800b7b8:	b121      	cbz	r1, 800b7c4 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xb4>
 800b7ba:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800b7bc:	42bb      	cmp	r3, r7
 800b7be:	d0ee      	beq.n	800b79e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800b7c0:	2901      	cmp	r1, #1
 800b7c2:	d002      	beq.n	800b7ca <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xba>
 800b7c4:	8fb3      	ldrh	r3, [r6, #60]	@ 0x3c
 800b7c6:	42bb      	cmp	r3, r7
 800b7c8:	d0e9      	beq.n	800b79e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800b7ca:	ba38      	rev	r0, r7
 800b7cc:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800b7d0:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800b7d4:	f005 fc00 	bl	8010fd8 <net::igmp_leave(unsigned long)>
 800b7d8:	192b      	adds	r3, r5, r4
 800b7da:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800b7de:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b7e0:	2b00      	cmp	r3, #0
 800b7e2:	d0d9      	beq.n	800b798 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x88>
 800b7e4:	e7db      	b.n	800b79e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800b7e6:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800b7e8:	42bb      	cmp	r3, r7
 800b7ea:	d0b0      	beq.n	800b74e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800b7ec:	b121      	cbz	r1, 800b7f8 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xe8>
 800b7ee:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800b7f0:	429a      	cmp	r2, r3
 800b7f2:	d0ba      	beq.n	800b76a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800b7f4:	2901      	cmp	r1, #1
 800b7f6:	d002      	beq.n	800b7fe <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xee>
 800b7f8:	8fb2      	ldrh	r2, [r6, #60]	@ 0x3c
 800b7fa:	429a      	cmp	r2, r3
 800b7fc:	d0b5      	beq.n	800b76a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800b7fe:	0218      	lsls	r0, r3, #8
 800b800:	f400 007f 	and.w	r0, r0, #16711680	@ 0xff0000
 800b804:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 800b808:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800b80c:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800b810:	f005 fbe2 	bl	8010fd8 <net::igmp_leave(unsigned long)>
 800b814:	e7a9      	b.n	800b76a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800b816:	bf00      	nop

0800b818 <E131Bridge::CheckMergeTimeouts(unsigned long)>:
 800b818:	eb01 1301 	add.w	r3, r1, r1, lsl #4
 800b81c:	b530      	push	{r4, r5, lr}
 800b81e:	eb00 0e83 	add.w	lr, r0, r3, lsl #2
 800b822:	6844      	ldr	r4, [r0, #4]
 800b824:	009a      	lsls	r2, r3, #2
 800b826:	f8de 3048 	ldr.w	r3, [lr, #72]	@ 0x48
 800b82a:	f242 7510 	movw	r5, #10000	@ 0x2710
 800b82e:	eba4 0c03 	sub.w	ip, r4, r3
 800b832:	45ac      	cmp	ip, r5
 800b834:	ea4f 1301 	mov.w	r3, r1, lsl #4
 800b838:	d90b      	bls.n	800b852 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x3a>
 800b83a:	3250      	adds	r2, #80	@ 0x50
 800b83c:	2400      	movs	r4, #0
 800b83e:	f8ce 404c 	str.w	r4, [lr, #76]	@ 0x4c
 800b842:	5084      	str	r4, [r0, r2]
 800b844:	4402      	add	r2, r0
 800b846:	6054      	str	r4, [r2, #4]
 800b848:	6094      	str	r4, [r2, #8]
 800b84a:	60d4      	str	r4, [r2, #12]
 800b84c:	f88e 4088 	strb.w	r4, [lr, #136]	@ 0x88
 800b850:	6844      	ldr	r4, [r0, #4]
 800b852:	4419      	add	r1, r3
 800b854:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 800b858:	0089      	lsls	r1, r1, #2
 800b85a:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 800b85c:	1ae4      	subs	r4, r4, r3
 800b85e:	f242 7310 	movw	r3, #10000	@ 0x2710
 800b862:	429c      	cmp	r4, r3
 800b864:	d909      	bls.n	800b87a <E131Bridge::CheckMergeTimeouts(unsigned long)+0x62>
 800b866:	316c      	adds	r1, #108	@ 0x6c
 800b868:	1844      	adds	r4, r0, r1
 800b86a:	2300      	movs	r3, #0
 800b86c:	6693      	str	r3, [r2, #104]	@ 0x68
 800b86e:	5043      	str	r3, [r0, r1]
 800b870:	6063      	str	r3, [r4, #4]
 800b872:	60a3      	str	r3, [r4, #8]
 800b874:	60e3      	str	r3, [r4, #12]
 800b876:	f882 3088 	strb.w	r3, [r2, #136]	@ 0x88
 800b87a:	f890 3088 	ldrb.w	r3, [r0, #136]	@ 0x88
 800b87e:	b93b      	cbnz	r3, 800b890 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x78>
 800b880:	f890 30cc 	ldrb.w	r3, [r0, #204]	@ 0xcc
 800b884:	b923      	cbnz	r3, 800b890 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x78>
 800b886:	2201      	movs	r2, #1
 800b888:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
 800b88c:	f880 302a 	strb.w	r3, [r0, #42]	@ 0x2a
 800b890:	bd30      	pop	{r4, r5, pc}
 800b892:	bf00      	nop

0800b894 <E131Bridge::IsPriorityTimeOut(unsigned long) const>:
 800b894:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 800b898:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b89c:	6843      	ldr	r3, [r0, #4]
 800b89e:	e9d1 2019 	ldrd	r2, r0, [r1, #100]	@ 0x64
 800b8a2:	b410      	push	{r4}
 800b8a4:	6ccc      	ldr	r4, [r1, #76]	@ 0x4c
 800b8a6:	1a9a      	subs	r2, r3, r2
 800b8a8:	b94c      	cbnz	r4, 800b8be <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x2a>
 800b8aa:	b128      	cbz	r0, 800b8b8 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x24>
 800b8ac:	f242 7010 	movw	r0, #10000	@ 0x2710
 800b8b0:	4282      	cmp	r2, r0
 800b8b2:	bf94      	ite	ls
 800b8b4:	2000      	movls	r0, #0
 800b8b6:	2001      	movhi	r0, #1
 800b8b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b8bc:	4770      	bx	lr
 800b8be:	6c89      	ldr	r1, [r1, #72]	@ 0x48
 800b8c0:	1a5b      	subs	r3, r3, r1
 800b8c2:	b128      	cbz	r0, 800b8d0 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x3c>
 800b8c4:	f242 700f 	movw	r0, #9999	@ 0x270f
 800b8c8:	4283      	cmp	r3, r0
 800b8ca:	d8f1      	bhi.n	800b8b0 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x1c>
 800b8cc:	2000      	movs	r0, #0
 800b8ce:	e7f3      	b.n	800b8b8 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x24>
 800b8d0:	f242 7010 	movw	r0, #10000	@ 0x2710
 800b8d4:	4283      	cmp	r3, r0
 800b8d6:	e7ec      	b.n	800b8b2 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x1e>

0800b8d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800b8d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b8da:	2301      	movs	r3, #1
 800b8dc:	4604      	mov	r4, r0
 800b8de:	f880 302d 	strb.w	r3, [r0, #45]	@ 0x2d
 800b8e2:	b381      	cbz	r1, 800b946 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6e>
 800b8e4:	b37a      	cbz	r2, 800b946 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6e>
 800b8e6:	4942      	ldr	r1, [pc, #264]	@ (800b9f0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x118>)
 800b8e8:	f8c0 3029 	str.w	r3, [r0, #41]	@ 0x29
 800b8ec:	f880 3020 	strb.w	r3, [r0, #32]
 800b8f0:	f100 05d8 	add.w	r5, r0, #216	@ 0xd8
 800b8f4:	f100 0350 	add.w	r3, r0, #80	@ 0x50
 800b8f8:	2700      	movs	r7, #0
 800b8fa:	f893 0039 	ldrb.w	r0, [r3, #57]	@ 0x39
 800b8fe:	2800      	cmp	r0, #0
 800b900:	d163      	bne.n	800b9ca <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xf2>
 800b902:	3344      	adds	r3, #68	@ 0x44
 800b904:	42ab      	cmp	r3, r5
 800b906:	f201 6104 	addw	r1, r1, #1540	@ 0x604
 800b90a:	d1f6      	bne.n	800b8fa <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x22>
 800b90c:	b15f      	cbz	r7, 800b926 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800b90e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b910:	2901      	cmp	r1, #1
 800b912:	d035      	beq.n	800b980 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa8>
 800b914:	2902      	cmp	r1, #2
 800b916:	d106      	bne.n	800b926 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800b918:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800b91c:	4a35      	ldr	r2, [pc, #212]	@ (800b9f4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>)
 800b91e:	6803      	ldr	r3, [r0, #0]
 800b920:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b922:	4293      	cmp	r3, r2
 800b924:	d162      	bne.n	800b9ec <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800b926:	4b34      	ldr	r3, [pc, #208]	@ (800b9f8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x120>)
 800b928:	2102      	movs	r1, #2
 800b92a:	6818      	ldr	r0, [r3, #0]
 800b92c:	f008 fbbc 	bl	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b930:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800b934:	f023 0302 	bic.w	r3, r3, #2
 800b938:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800b93c:	4620      	mov	r0, r4
 800b93e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800b942:	f7ff be4f 	b.w	800b5e4 <E131Bridge::SetLocalMerging()>
 800b946:	482a      	ldr	r0, [pc, #168]	@ (800b9f0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x118>)
 800b948:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 800b94c:	f104 0cf4 	add.w	ip, r4, #244	@ 0xf4
 800b950:	2700      	movs	r7, #0
 800b952:	7f5d      	ldrb	r5, [r3, #29]
 800b954:	b175      	cbz	r5, 800b974 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800b956:	b111      	cbz	r1, 800b95e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x86>
 800b958:	f853 6c20 	ldr.w	r6, [r3, #-32]
 800b95c:	b9ce      	cbnz	r6, 800b992 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800b95e:	b112      	cbz	r2, 800b966 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 800b960:	f853 6c04 	ldr.w	r6, [r3, #-4]
 800b964:	bb26      	cbnz	r6, 800b9b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd8>
 800b966:	f894 602a 	ldrb.w	r6, [r4, #42]	@ 0x2a
 800b96a:	b91e      	cbnz	r6, 800b974 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800b96c:	f8c0 6600 	str.w	r6, [r0, #1536]	@ 0x600
 800b970:	462f      	mov	r7, r5
 800b972:	775e      	strb	r6, [r3, #29]
 800b974:	3344      	adds	r3, #68	@ 0x44
 800b976:	459c      	cmp	ip, r3
 800b978:	f200 6004 	addw	r0, r0, #1540	@ 0x604
 800b97c:	d1e9      	bne.n	800b952 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x7a>
 800b97e:	e7c5      	b.n	800b90c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x34>
 800b980:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800b984:	4a1d      	ldr	r2, [pc, #116]	@ (800b9fc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x124>)
 800b986:	6803      	ldr	r3, [r0, #0]
 800b988:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b98a:	4293      	cmp	r3, r2
 800b98c:	d0cb      	beq.n	800b926 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800b98e:	4798      	blx	r3
 800b990:	e7c9      	b.n	800b926 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800b992:	2600      	movs	r6, #0
 800b994:	771e      	strb	r6, [r3, #28]
 800b996:	f843 6c20 	str.w	r6, [r3, #-32]
 800b99a:	f843 6c1c 	str.w	r6, [r3, #-28]
 800b99e:	f843 6c18 	str.w	r6, [r3, #-24]
 800b9a2:	f843 6c14 	str.w	r6, [r3, #-20]
 800b9a6:	f843 6c10 	str.w	r6, [r3, #-16]
 800b9aa:	2a00      	cmp	r2, #0
 800b9ac:	d0db      	beq.n	800b966 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 800b9ae:	e7d7      	b.n	800b960 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x88>
 800b9b0:	2600      	movs	r6, #0
 800b9b2:	601e      	str	r6, [r3, #0]
 800b9b4:	605e      	str	r6, [r3, #4]
 800b9b6:	609e      	str	r6, [r3, #8]
 800b9b8:	60de      	str	r6, [r3, #12]
 800b9ba:	771e      	strb	r6, [r3, #28]
 800b9bc:	f843 6c04 	str.w	r6, [r3, #-4]
 800b9c0:	f894 602a 	ldrb.w	r6, [r4, #42]	@ 0x2a
 800b9c4:	2e00      	cmp	r6, #0
 800b9c6:	d1d5      	bne.n	800b974 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800b9c8:	e7d0      	b.n	800b96c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x94>
 800b9ca:	2200      	movs	r2, #0
 800b9cc:	f843 2c04 	str.w	r2, [r3, #-4]
 800b9d0:	601a      	str	r2, [r3, #0]
 800b9d2:	605a      	str	r2, [r3, #4]
 800b9d4:	609a      	str	r2, [r3, #8]
 800b9d6:	60da      	str	r2, [r3, #12]
 800b9d8:	619a      	str	r2, [r3, #24]
 800b9da:	61da      	str	r2, [r3, #28]
 800b9dc:	621a      	str	r2, [r3, #32]
 800b9de:	625a      	str	r2, [r3, #36]	@ 0x24
 800b9e0:	629a      	str	r2, [r3, #40]	@ 0x28
 800b9e2:	4607      	mov	r7, r0
 800b9e4:	f8c1 2600 	str.w	r2, [r1, #1536]	@ 0x600
 800b9e8:	871a      	strh	r2, [r3, #56]	@ 0x38
 800b9ea:	e78a      	b.n	800b902 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2a>
 800b9ec:	4798      	blx	r3
 800b9ee:	e79a      	b.n	800b926 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800b9f0:	20000078 	andcs	r0, r0, r8, ror r0
 800b9f4:	0800b3e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, ip, sp, pc}
 800b9f8:	20002238 	andcs	r2, r0, r8, lsr r2
 800b9fc:	0800b3e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, ip, sp, pc}

0800ba00 <E131Bridge::HandleDmx()>:
 800ba00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba04:	f8d0 90ec 	ldr.w	r9, [r0, #236]	@ 0xec
 800ba08:	f8df 862c 	ldr.w	r8, [pc, #1580]	@ 800c038 <E131Bridge::HandleDmx()+0x638>
 800ba0c:	f8b9 307b 	ldrh.w	r3, [r9, #123]	@ 0x7b
 800ba10:	ba5b      	rev16	r3, r3
 800ba12:	b08b      	sub	sp, #44	@ 0x2c
 800ba14:	fa1f fb83 	uxth.w	fp, r3
 800ba18:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
 800ba1c:	4605      	mov	r5, r0
 800ba1e:	f1a8 0702 	sub.w	r7, r8, #2
 800ba22:	9304      	str	r3, [sp, #16]
 800ba24:	eb07 030b 	add.w	r3, r7, fp
 800ba28:	9303      	str	r3, [sp, #12]
 800ba2a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800ba2c:	f109 027e 	add.w	r2, r9, #126	@ 0x7e
 800ba30:	2b01      	cmp	r3, #1
 800ba32:	4604      	mov	r4, r0
 800ba34:	9205      	str	r2, [sp, #20]
 800ba36:	f100 0650 	add.w	r6, r0, #80	@ 0x50
 800ba3a:	f04f 0a00 	mov.w	sl, #0
 800ba3e:	d010      	beq.n	800ba62 <E131Bridge::HandleDmx()+0x62>
 800ba40:	9b03      	ldr	r3, [sp, #12]
 800ba42:	f203 6304 	addw	r3, r3, #1540	@ 0x604
 800ba46:	350c      	adds	r5, #12
 800ba48:	f208 6804 	addw	r8, r8, #1540	@ 0x604
 800ba4c:	3644      	adds	r6, #68	@ 0x44
 800ba4e:	9303      	str	r3, [sp, #12]
 800ba50:	f1ba 0f00 	cmp.w	sl, #0
 800ba54:	f040 80ff 	bne.w	800bc56 <E131Bridge::HandleDmx()+0x256>
 800ba58:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800ba5a:	2b01      	cmp	r3, #1
 800ba5c:	f04f 0a01 	mov.w	sl, #1
 800ba60:	d1ee      	bne.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800ba62:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 800ba64:	f8b9 2071 	ldrh.w	r2, [r9, #113]	@ 0x71
 800ba68:	ba5b      	rev16	r3, r3
 800ba6a:	b29b      	uxth	r3, r3
 800ba6c:	429a      	cmp	r2, r3
 800ba6e:	d1e7      	bne.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800ba70:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800ba74:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800ba78:	69b1      	ldr	r1, [r6, #24]
 800ba7a:	9207      	str	r2, [sp, #28]
 800ba7c:	429a      	cmp	r2, r3
 800ba7e:	461f      	mov	r7, r3
 800ba80:	9106      	str	r1, [sp, #24]
 800ba82:	f000 80eb 	beq.w	800bc5c <E131Bridge::HandleDmx()+0x25c>
 800ba86:	4299      	cmp	r1, r3
 800ba88:	f040 8103 	bne.w	800bc92 <E131Bridge::HandleDmx()+0x292>
 800ba8c:	f8d4 20ec 	ldr.w	r2, [r4, #236]	@ 0xec
 800ba90:	2300      	movs	r3, #0
 800ba92:	3215      	adds	r2, #21
 800ba94:	461f      	mov	r7, r3
 800ba96:	f106 0c2b 	add.w	ip, r6, #43	@ 0x2b
 800ba9a:	f106 031b 	add.w	r3, r6, #27
 800ba9e:	e002      	b.n	800baa6 <E131Bridge::HandleDmx()+0xa6>
 800baa0:	4563      	cmp	r3, ip
 800baa2:	f000 8104 	beq.w	800bcae <E131Bridge::HandleDmx()+0x2ae>
 800baa6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800baaa:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800baae:	4288      	cmp	r0, r1
 800bab0:	d0f6      	beq.n	800baa0 <E131Bridge::HandleDmx()+0xa0>
 800bab2:	2f00      	cmp	r7, #0
 800bab4:	f000 80ed 	beq.w	800bc92 <E131Bridge::HandleDmx()+0x292>
 800bab8:	2200      	movs	r2, #0
 800baba:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800babe:	4617      	mov	r7, r2
 800bac0:	7c32      	ldrb	r2, [r6, #16]
 800bac2:	7433      	strb	r3, [r6, #16]
 800bac4:	3313      	adds	r3, #19
 800bac6:	1a9b      	subs	r3, r3, r2
 800bac8:	b2db      	uxtb	r3, r3
 800baca:	2b13      	cmp	r3, #19
 800bacc:	d9b8      	bls.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bace:	f999 3070 	ldrsb.w	r3, [r9, #112]	@ 0x70
 800bad2:	f899 2070 	ldrb.w	r2, [r9, #112]	@ 0x70
 800bad6:	2b00      	cmp	r3, #0
 800bad8:	dbb2      	blt.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bada:	0652      	lsls	r2, r2, #25
 800badc:	f100 81ba 	bmi.w	800be54 <E131Bridge::HandleDmx()+0x454>
 800bae0:	2301      	movs	r3, #1
 800bae2:	9309      	str	r3, [sp, #36]	@ 0x24
 800bae4:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800bae8:	b133      	cbz	r3, 800baf8 <E131Bridge::HandleDmx()+0xf8>
 800baea:	f894 302e 	ldrb.w	r3, [r4, #46]	@ 0x2e
 800baee:	b91b      	cbnz	r3, 800baf8 <E131Bridge::HandleDmx()+0xf8>
 800baf0:	4651      	mov	r1, sl
 800baf2:	4620      	mov	r0, r4
 800baf4:	f7ff fe90 	bl	800b818 <E131Bridge::CheckMergeTimeouts(unsigned long)>
 800baf8:	f899 206c 	ldrb.w	r2, [r9, #108]	@ 0x6c
 800bafc:	f894 3020 	ldrb.w	r3, [r4, #32]
 800bb00:	9208      	str	r2, [sp, #32]
 800bb02:	429a      	cmp	r2, r3
 800bb04:	f080 80f8 	bcs.w	800bcf8 <E131Bridge::HandleDmx()+0x2f8>
 800bb08:	4651      	mov	r1, sl
 800bb0a:	4620      	mov	r0, r4
 800bb0c:	f7ff fec2 	bl	800b894 <E131Bridge::IsPriorityTimeOut(unsigned long) const>
 800bb10:	2800      	cmp	r0, #0
 800bb12:	d095      	beq.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bb14:	9a08      	ldr	r2, [sp, #32]
 800bb16:	f884 2020 	strb.w	r2, [r4, #32]
 800bb1a:	f508 6380 	add.w	r3, r8, #1024	@ 0x400
 800bb1e:	9308      	str	r3, [sp, #32]
 800bb20:	9b07      	ldr	r3, [sp, #28]
 800bb22:	2b00      	cmp	r3, #0
 800bb24:	f040 80f5 	bne.w	800bd12 <E131Bridge::HandleDmx()+0x312>
 800bb28:	9b06      	ldr	r3, [sp, #24]
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	f000 8157 	beq.w	800bdde <E131Bridge::HandleDmx()+0x3de>
 800bb30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bb32:	2b00      	cmp	r3, #0
 800bb34:	f000 819c 	beq.w	800be70 <E131Bridge::HandleDmx()+0x470>
 800bb38:	2f00      	cmp	r7, #0
 800bb3a:	f040 819c 	bne.w	800be76 <E131Bridge::HandleDmx()+0x476>
 800bb3e:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800bb42:	f846 3c04 	str.w	r3, [r6, #-4]
 800bb46:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bb4a:	7433      	strb	r3, [r6, #16]
 800bb4c:	f109 0216 	add.w	r2, r9, #22
 800bb50:	4633      	mov	r3, r6
 800bb52:	f106 0010 	add.w	r0, r6, #16
 800bb56:	f852 1b04 	ldr.w	r1, [r2], #4
 800bb5a:	f843 1b04 	str.w	r1, [r3], #4
 800bb5e:	4283      	cmp	r3, r0
 800bb60:	d1f9      	bne.n	800bb56 <E131Bridge::HandleDmx()+0x156>
 800bb62:	6863      	ldr	r3, [r4, #4]
 800bb64:	f846 3c08 	str.w	r3, [r6, #-8]
 800bb68:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800bb6c:	b923      	cbnz	r3, 800bb78 <E131Bridge::HandleDmx()+0x178>
 800bb6e:	2301      	movs	r3, #1
 800bb70:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800bb74:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800bb78:	2301      	movs	r3, #1
 800bb7a:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800bb7e:	9b04      	ldr	r3, [sp, #16]
 800bb80:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	f000 81cd 	beq.w	800bf24 <E131Bridge::HandleDmx()+0x524>
 800bb8a:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800bb8e:	9b05      	ldr	r3, [sp, #20]
 800bb90:	4448      	add	r0, r9
 800bb92:	4642      	mov	r2, r8
 800bb94:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bb98:	f802 1b01 	strb.w	r1, [r2], #1
 800bb9c:	4298      	cmp	r0, r3
 800bb9e:	d1f9      	bne.n	800bb94 <E131Bridge::HandleDmx()+0x194>
 800bba0:	9b04      	ldr	r3, [sp, #16]
 800bba2:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bba6:	f1bc 0f00 	cmp.w	ip, #0
 800bbaa:	f000 8236 	beq.w	800c01a <E131Bridge::HandleDmx()+0x61a>
 800bbae:	9a08      	ldr	r2, [sp, #32]
 800bbb0:	9b05      	ldr	r3, [sp, #20]
 800bbb2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bbb6:	f802 1b01 	strb.w	r1, [r2], #1
 800bbba:	4298      	cmp	r0, r3
 800bbbc:	d1f9      	bne.n	800bbb2 <E131Bridge::HandleDmx()+0x1b2>
 800bbbe:	f899 3070 	ldrb.w	r3, [r9, #112]	@ 0x70
 800bbc2:	069b      	lsls	r3, r3, #26
 800bbc4:	f100 813b 	bmi.w	800be3e <E131Bridge::HandleDmx()+0x43e>
 800bbc8:	f8b9 306d 	ldrh.w	r3, [r9, #109]	@ 0x6d
 800bbcc:	b29a      	uxth	r2, r3
 800bbce:	2a00      	cmp	r2, #0
 800bbd0:	f000 8138 	beq.w	800be44 <E131Bridge::HandleDmx()+0x444>
 800bbd4:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800bbd8:	2a00      	cmp	r2, #0
 800bbda:	f040 8133 	bne.w	800be44 <E131Bridge::HandleDmx()+0x444>
 800bbde:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bbe0:	ba5b      	rev16	r3, r3
 800bbe2:	b29b      	uxth	r3, r3
 800bbe4:	b912      	cbnz	r2, 800bbec <E131Bridge::HandleDmx()+0x1ec>
 800bbe6:	2f00      	cmp	r7, #0
 800bbe8:	f000 81fe 	beq.w	800bfe8 <E131Bridge::HandleDmx()+0x5e8>
 800bbec:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800bbee:	463a      	mov	r2, r7
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	f7ff fccf 	bl	800b594 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800bbf6:	f240 1301 	movw	r3, #257	@ 0x101
 800bbfa:	f8a4 302b 	strh.w	r3, [r4, #43]	@ 0x2b
 800bbfe:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800bc02:	f894 202f 	ldrb.w	r2, [r4, #47]	@ 0x2f
 800bc06:	6803      	ldr	r3, [r0, #0]
 800bc08:	691b      	ldr	r3, [r3, #16]
 800bc0a:	461f      	mov	r7, r3
 800bc0c:	f8d8 3600 	ldr.w	r3, [r8, #1536]	@ 0x600
 800bc10:	2a00      	cmp	r2, #0
 800bc12:	f000 8125 	beq.w	800be60 <E131Bridge::HandleDmx()+0x460>
 800bc16:	6803      	ldr	r3, [r0, #0]
 800bc18:	9a08      	ldr	r2, [sp, #32]
 800bc1a:	2101      	movs	r1, #1
 800bc1c:	9100      	str	r1, [sp, #0]
 800bc1e:	691b      	ldr	r3, [r3, #16]
 800bc20:	4651      	mov	r1, sl
 800bc22:	461f      	mov	r7, r3
 800bc24:	f8d8 3600 	ldr.w	r3, [r8, #1536]	@ 0x600
 800bc28:	47b8      	blx	r7
 800bc2a:	f896 3039 	ldrb.w	r3, [r6, #57]	@ 0x39
 800bc2e:	b95b      	cbnz	r3, 800bc48 <E131Bridge::HandleDmx()+0x248>
 800bc30:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800bc34:	6803      	ldr	r3, [r0, #0]
 800bc36:	4651      	mov	r1, sl
 800bc38:	689b      	ldr	r3, [r3, #8]
 800bc3a:	4798      	blx	r3
 800bc3c:	f04f 0301 	mov.w	r3, #1
 800bc40:	f886 3039 	strb.w	r3, [r6, #57]	@ 0x39
 800bc44:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800bc48:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800bc4c:	f043 0302 	orr.w	r3, r3, #2
 800bc50:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800bc54:	e6f4      	b.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bc56:	b00b      	add	sp, #44	@ 0x2c
 800bc58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc5c:	f8d4 20ec 	ldr.w	r2, [r4, #236]	@ 0xec
 800bc60:	3215      	adds	r2, #21
 800bc62:	1e73      	subs	r3, r6, #1
 800bc64:	4610      	mov	r0, r2
 800bc66:	f106 0e0f 	add.w	lr, r6, #15
 800bc6a:	e001      	b.n	800bc70 <E131Bridge::HandleDmx()+0x270>
 800bc6c:	4573      	cmp	r3, lr
 800bc6e:	d03d      	beq.n	800bcec <E131Bridge::HandleDmx()+0x2ec>
 800bc70:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800bc74:	f810 cf01 	ldrb.w	ip, [r0, #1]!
 800bc78:	4561      	cmp	r1, ip
 800bc7a:	d0f7      	beq.n	800bc6c <E131Bridge::HandleDmx()+0x26c>
 800bc7c:	9b06      	ldr	r3, [sp, #24]
 800bc7e:	42bb      	cmp	r3, r7
 800bc80:	eba1 010c 	sub.w	r1, r1, ip
 800bc84:	f000 8082 	beq.w	800bd8c <E131Bridge::HandleDmx()+0x38c>
 800bc88:	b919      	cbnz	r1, 800bc92 <E131Bridge::HandleDmx()+0x292>
 800bc8a:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bc8e:	460f      	mov	r7, r1
 800bc90:	e716      	b.n	800bac0 <E131Bridge::HandleDmx()+0xc0>
 800bc92:	f999 2070 	ldrsb.w	r2, [r9, #112]	@ 0x70
 800bc96:	f899 3070 	ldrb.w	r3, [r9, #112]	@ 0x70
 800bc9a:	2a00      	cmp	r2, #0
 800bc9c:	f6ff aed0 	blt.w	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bca0:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800bca4:	f47f aecc 	bne.w	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bca8:	9309      	str	r3, [sp, #36]	@ 0x24
 800bcaa:	461f      	mov	r7, r3
 800bcac:	e71a      	b.n	800bae4 <E131Bridge::HandleDmx()+0xe4>
 800bcae:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bcb2:	f103 0213 	add.w	r2, r3, #19
 800bcb6:	b2d2      	uxtb	r2, r2
 800bcb8:	2f00      	cmp	r7, #0
 800bcba:	f47f af01 	bne.w	800bac0 <E131Bridge::HandleDmx()+0xc0>
 800bcbe:	f896 102c 	ldrb.w	r1, [r6, #44]	@ 0x2c
 800bcc2:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800bcc6:	1a52      	subs	r2, r2, r1
 800bcc8:	b2d2      	uxtb	r2, r2
 800bcca:	2a13      	cmp	r2, #19
 800bccc:	f67f aeb8 	bls.w	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bcd0:	f999 3070 	ldrsb.w	r3, [r9, #112]	@ 0x70
 800bcd4:	f899 2070 	ldrb.w	r2, [r9, #112]	@ 0x70
 800bcd8:	2b00      	cmp	r3, #0
 800bcda:	f6ff aeb1 	blt.w	800ba40 <E131Bridge::HandleDmx()+0x40>
 800bcde:	0651      	lsls	r1, r2, #25
 800bce0:	f100 80ea 	bmi.w	800beb8 <E131Bridge::HandleDmx()+0x4b8>
 800bce4:	2301      	movs	r3, #1
 800bce6:	9709      	str	r7, [sp, #36]	@ 0x24
 800bce8:	461f      	mov	r7, r3
 800bcea:	e6fb      	b.n	800bae4 <E131Bridge::HandleDmx()+0xe4>
 800bcec:	9b06      	ldr	r3, [sp, #24]
 800bcee:	42bb      	cmp	r3, r7
 800bcf0:	f47f aee2 	bne.w	800bab8 <E131Bridge::HandleDmx()+0xb8>
 800bcf4:	2301      	movs	r3, #1
 800bcf6:	e6cd      	b.n	800ba94 <E131Bridge::HandleDmx()+0x94>
 800bcf8:	f67f af0f 	bls.w	800bb1a <E131Bridge::HandleDmx()+0x11a>
 800bcfc:	2300      	movs	r3, #0
 800bcfe:	f846 3c04 	str.w	r3, [r6, #-4]
 800bd02:	61b3      	str	r3, [r6, #24]
 800bd04:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800bd08:	f899 306c 	ldrb.w	r3, [r9, #108]	@ 0x6c
 800bd0c:	f884 3020 	strb.w	r3, [r4, #32]
 800bd10:	e703      	b.n	800bb1a <E131Bridge::HandleDmx()+0x11a>
 800bd12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bd14:	2b00      	cmp	r3, #0
 800bd16:	d13d      	bne.n	800bd94 <E131Bridge::HandleDmx()+0x394>
 800bd18:	9b06      	ldr	r3, [sp, #24]
 800bd1a:	2b00      	cmp	r3, #0
 800bd1c:	f000 8106 	beq.w	800bf2c <E131Bridge::HandleDmx()+0x52c>
 800bd20:	2f00      	cmp	r7, #0
 800bd22:	f43f af4c 	beq.w	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bd26:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bd2a:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800bd2e:	6863      	ldr	r3, [r4, #4]
 800bd30:	6173      	str	r3, [r6, #20]
 800bd32:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800bd36:	b923      	cbnz	r3, 800bd42 <E131Bridge::HandleDmx()+0x342>
 800bd38:	2301      	movs	r3, #1
 800bd3a:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800bd3e:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800bd42:	2301      	movs	r3, #1
 800bd44:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800bd48:	9b04      	ldr	r3, [sp, #16]
 800bd4a:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800bd4e:	f508 7200 	add.w	r2, r8, #512	@ 0x200
 800bd52:	2b00      	cmp	r3, #0
 800bd54:	f000 80e6 	beq.w	800bf24 <E131Bridge::HandleDmx()+0x524>
 800bd58:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800bd5c:	9b05      	ldr	r3, [sp, #20]
 800bd5e:	4448      	add	r0, r9
 800bd60:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bd64:	f802 1b01 	strb.w	r1, [r2], #1
 800bd68:	4283      	cmp	r3, r0
 800bd6a:	d1f9      	bne.n	800bd60 <E131Bridge::HandleDmx()+0x360>
 800bd6c:	9b04      	ldr	r3, [sp, #16]
 800bd6e:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bd72:	f1bc 0f00 	cmp.w	ip, #0
 800bd76:	f000 8128 	beq.w	800bfca <E131Bridge::HandleDmx()+0x5ca>
 800bd7a:	9a08      	ldr	r2, [sp, #32]
 800bd7c:	9b05      	ldr	r3, [sp, #20]
 800bd7e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bd82:	f802 1b01 	strb.w	r1, [r2], #1
 800bd86:	4283      	cmp	r3, r0
 800bd88:	d1f9      	bne.n	800bd7e <E131Bridge::HandleDmx()+0x37e>
 800bd8a:	e718      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bd8c:	fab1 f381 	clz	r3, r1
 800bd90:	095b      	lsrs	r3, r3, #5
 800bd92:	e67f      	b.n	800ba94 <E131Bridge::HandleDmx()+0x94>
 800bd94:	9b06      	ldr	r3, [sp, #24]
 800bd96:	2b00      	cmp	r3, #0
 800bd98:	f040 8092 	bne.w	800bec0 <E131Bridge::HandleDmx()+0x4c0>
 800bd9c:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bda0:	7433      	strb	r3, [r6, #16]
 800bda2:	6863      	ldr	r3, [r4, #4]
 800bda4:	f846 3c08 	str.w	r3, [r6, #-8]
 800bda8:	9b04      	ldr	r3, [sp, #16]
 800bdaa:	2b00      	cmp	r3, #0
 800bdac:	f000 80ba 	beq.w	800bf24 <E131Bridge::HandleDmx()+0x524>
 800bdb0:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800bdb4:	9b05      	ldr	r3, [sp, #20]
 800bdb6:	444a      	add	r2, r9
 800bdb8:	4641      	mov	r1, r8
 800bdba:	f813 0b01 	ldrb.w	r0, [r3], #1
 800bdbe:	f801 0b01 	strb.w	r0, [r1], #1
 800bdc2:	4293      	cmp	r3, r2
 800bdc4:	d1f9      	bne.n	800bdba <E131Bridge::HandleDmx()+0x3ba>
 800bdc6:	9b04      	ldr	r3, [sp, #16]
 800bdc8:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bdcc:	9908      	ldr	r1, [sp, #32]
 800bdce:	9b05      	ldr	r3, [sp, #20]
 800bdd0:	f813 0b01 	ldrb.w	r0, [r3], #1
 800bdd4:	f801 0b01 	strb.w	r0, [r1], #1
 800bdd8:	4293      	cmp	r3, r2
 800bdda:	d1f9      	bne.n	800bdd0 <E131Bridge::HandleDmx()+0x3d0>
 800bddc:	e6ef      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bdde:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800bde2:	f846 3c04 	str.w	r3, [r6, #-4]
 800bde6:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bdea:	7433      	strb	r3, [r6, #16]
 800bdec:	f109 0216 	add.w	r2, r9, #22
 800bdf0:	4633      	mov	r3, r6
 800bdf2:	f106 0010 	add.w	r0, r6, #16
 800bdf6:	f852 1b04 	ldr.w	r1, [r2], #4
 800bdfa:	f843 1b04 	str.w	r1, [r3], #4
 800bdfe:	4283      	cmp	r3, r0
 800be00:	d1f9      	bne.n	800bdf6 <E131Bridge::HandleDmx()+0x3f6>
 800be02:	6863      	ldr	r3, [r4, #4]
 800be04:	f846 3c08 	str.w	r3, [r6, #-8]
 800be08:	9b04      	ldr	r3, [sp, #16]
 800be0a:	2b00      	cmp	r3, #0
 800be0c:	f000 808a 	beq.w	800bf24 <E131Bridge::HandleDmx()+0x524>
 800be10:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800be14:	9b05      	ldr	r3, [sp, #20]
 800be16:	444a      	add	r2, r9
 800be18:	4641      	mov	r1, r8
 800be1a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800be1e:	f801 0b01 	strb.w	r0, [r1], #1
 800be22:	4293      	cmp	r3, r2
 800be24:	d1f9      	bne.n	800be1a <E131Bridge::HandleDmx()+0x41a>
 800be26:	9b04      	ldr	r3, [sp, #16]
 800be28:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800be2c:	9908      	ldr	r1, [sp, #32]
 800be2e:	9b05      	ldr	r3, [sp, #20]
 800be30:	f813 0b01 	ldrb.w	r0, [r3], #1
 800be34:	f801 0b01 	strb.w	r0, [r1], #1
 800be38:	4293      	cmp	r3, r2
 800be3a:	d1f9      	bne.n	800be30 <E131Bridge::HandleDmx()+0x430>
 800be3c:	e6bf      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800be3e:	2300      	movs	r3, #0
 800be40:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800be44:	f894 302b 	ldrb.w	r3, [r4, #43]	@ 0x2b
 800be48:	2b00      	cmp	r3, #0
 800be4a:	f47f aed8 	bne.w	800bbfe <E131Bridge::HandleDmx()+0x1fe>
 800be4e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800be52:	e6e0      	b.n	800bc16 <E131Bridge::HandleDmx()+0x216>
 800be54:	2101      	movs	r1, #1
 800be56:	463a      	mov	r2, r7
 800be58:	4620      	mov	r0, r4
 800be5a:	f7ff fd3d 	bl	800b8d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800be5e:	e5ef      	b.n	800ba40 <E131Bridge::HandleDmx()+0x40>
 800be60:	9200      	str	r2, [sp, #0]
 800be62:	4651      	mov	r1, sl
 800be64:	9a08      	ldr	r2, [sp, #32]
 800be66:	47b8      	blx	r7
 800be68:	2301      	movs	r3, #1
 800be6a:	f886 303a 	strb.w	r3, [r6, #58]	@ 0x3a
 800be6e:	e6eb      	b.n	800bc48 <E131Bridge::HandleDmx()+0x248>
 800be70:	2f00      	cmp	r7, #0
 800be72:	f43f ae64 	beq.w	800bb3e <E131Bridge::HandleDmx()+0x13e>
 800be76:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800be7a:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800be7e:	6863      	ldr	r3, [r4, #4]
 800be80:	6173      	str	r3, [r6, #20]
 800be82:	9b04      	ldr	r3, [sp, #16]
 800be84:	f508 7100 	add.w	r1, r8, #512	@ 0x200
 800be88:	2b00      	cmp	r3, #0
 800be8a:	d04b      	beq.n	800bf24 <E131Bridge::HandleDmx()+0x524>
 800be8c:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800be90:	9b05      	ldr	r3, [sp, #20]
 800be92:	444a      	add	r2, r9
 800be94:	f813 0b01 	ldrb.w	r0, [r3], #1
 800be98:	f801 0b01 	strb.w	r0, [r1], #1
 800be9c:	429a      	cmp	r2, r3
 800be9e:	d1f9      	bne.n	800be94 <E131Bridge::HandleDmx()+0x494>
 800bea0:	9b04      	ldr	r3, [sp, #16]
 800bea2:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bea6:	9908      	ldr	r1, [sp, #32]
 800bea8:	9b05      	ldr	r3, [sp, #20]
 800beaa:	f813 0b01 	ldrb.w	r0, [r3], #1
 800beae:	f801 0b01 	strb.w	r0, [r1], #1
 800beb2:	429a      	cmp	r2, r3
 800beb4:	d1f9      	bne.n	800beaa <E131Bridge::HandleDmx()+0x4aa>
 800beb6:	e682      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800beb8:	2301      	movs	r3, #1
 800beba:	4639      	mov	r1, r7
 800bebc:	461f      	mov	r7, r3
 800bebe:	e7ca      	b.n	800be56 <E131Bridge::HandleDmx()+0x456>
 800bec0:	2f00      	cmp	r7, #0
 800bec2:	f47f ae7c 	bne.w	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bec6:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800beca:	7433      	strb	r3, [r6, #16]
 800becc:	6863      	ldr	r3, [r4, #4]
 800bece:	f846 3c08 	str.w	r3, [r6, #-8]
 800bed2:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800bed6:	b923      	cbnz	r3, 800bee2 <E131Bridge::HandleDmx()+0x4e2>
 800bed8:	2301      	movs	r3, #1
 800beda:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800bede:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800bee2:	2301      	movs	r3, #1
 800bee4:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800bee8:	9b04      	ldr	r3, [sp, #16]
 800beea:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800beee:	b1cb      	cbz	r3, 800bf24 <E131Bridge::HandleDmx()+0x524>
 800bef0:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800bef4:	9b05      	ldr	r3, [sp, #20]
 800bef6:	4448      	add	r0, r9
 800bef8:	4642      	mov	r2, r8
 800befa:	f813 1b01 	ldrb.w	r1, [r3], #1
 800befe:	f802 1b01 	strb.w	r1, [r2], #1
 800bf02:	4283      	cmp	r3, r0
 800bf04:	d1f9      	bne.n	800befa <E131Bridge::HandleDmx()+0x4fa>
 800bf06:	9b04      	ldr	r3, [sp, #16]
 800bf08:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bf0c:	f1bc 0f00 	cmp.w	ip, #0
 800bf10:	d04c      	beq.n	800bfac <E131Bridge::HandleDmx()+0x5ac>
 800bf12:	9a08      	ldr	r2, [sp, #32]
 800bf14:	9b05      	ldr	r3, [sp, #20]
 800bf16:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bf1a:	f802 1b01 	strb.w	r1, [r2], #1
 800bf1e:	4283      	cmp	r3, r0
 800bf20:	d1f9      	bne.n	800bf16 <E131Bridge::HandleDmx()+0x516>
 800bf22:	e64c      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bf24:	9b04      	ldr	r3, [sp, #16]
 800bf26:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bf2a:	e648      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bf2c:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800bf30:	61b3      	str	r3, [r6, #24]
 800bf32:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800bf36:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800bf3a:	f106 021c 	add.w	r2, r6, #28
 800bf3e:	f109 0316 	add.w	r3, r9, #22
 800bf42:	f109 0026 	add.w	r0, r9, #38	@ 0x26
 800bf46:	f853 1b04 	ldr.w	r1, [r3], #4
 800bf4a:	f842 1b04 	str.w	r1, [r2], #4
 800bf4e:	4298      	cmp	r0, r3
 800bf50:	d1f9      	bne.n	800bf46 <E131Bridge::HandleDmx()+0x546>
 800bf52:	6863      	ldr	r3, [r4, #4]
 800bf54:	6173      	str	r3, [r6, #20]
 800bf56:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800bf5a:	b923      	cbnz	r3, 800bf66 <E131Bridge::HandleDmx()+0x566>
 800bf5c:	2301      	movs	r3, #1
 800bf5e:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800bf62:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800bf66:	2301      	movs	r3, #1
 800bf68:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800bf6c:	9b04      	ldr	r3, [sp, #16]
 800bf6e:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800bf72:	f508 7200 	add.w	r2, r8, #512	@ 0x200
 800bf76:	2b00      	cmp	r3, #0
 800bf78:	d0d4      	beq.n	800bf24 <E131Bridge::HandleDmx()+0x524>
 800bf7a:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800bf7e:	9b05      	ldr	r3, [sp, #20]
 800bf80:	4448      	add	r0, r9
 800bf82:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bf86:	f802 1b01 	strb.w	r1, [r2], #1
 800bf8a:	4283      	cmp	r3, r0
 800bf8c:	d1f9      	bne.n	800bf82 <E131Bridge::HandleDmx()+0x582>
 800bf8e:	9b04      	ldr	r3, [sp, #16]
 800bf90:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800bf94:	f1bc 0f00 	cmp.w	ip, #0
 800bf98:	d030      	beq.n	800bffc <E131Bridge::HandleDmx()+0x5fc>
 800bf9a:	9a08      	ldr	r2, [sp, #32]
 800bf9c:	9b05      	ldr	r3, [sp, #20]
 800bf9e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bfa2:	f802 1b01 	strb.w	r1, [r2], #1
 800bfa6:	4283      	cmp	r3, r0
 800bfa8:	d1f9      	bne.n	800bf9e <E131Bridge::HandleDmx()+0x59e>
 800bfaa:	e608      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bfac:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800bfb0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800bfb4:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800bfb8:	428a      	cmp	r2, r1
 800bfba:	bf38      	it	cc
 800bfbc:	460a      	movcc	r2, r1
 800bfbe:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800bfc2:	9a03      	ldr	r2, [sp, #12]
 800bfc4:	429a      	cmp	r2, r3
 800bfc6:	d1f3      	bne.n	800bfb0 <E131Bridge::HandleDmx()+0x5b0>
 800bfc8:	e5f9      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bfca:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800bfce:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800bfd2:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800bfd6:	428a      	cmp	r2, r1
 800bfd8:	bf38      	it	cc
 800bfda:	460a      	movcc	r2, r1
 800bfdc:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800bfe0:	9a03      	ldr	r2, [sp, #12]
 800bfe2:	4293      	cmp	r3, r2
 800bfe4:	d1f3      	bne.n	800bfce <E131Bridge::HandleDmx()+0x5ce>
 800bfe6:	e5ea      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800bfe8:	69b2      	ldr	r2, [r6, #24]
 800bfea:	f856 1c04 	ldr.w	r1, [r6, #-4]
 800bfee:	3a00      	subs	r2, #0
 800bff0:	bf18      	it	ne
 800bff2:	2201      	movne	r2, #1
 800bff4:	3900      	subs	r1, #0
 800bff6:	bf18      	it	ne
 800bff8:	2101      	movne	r1, #1
 800bffa:	e5f9      	b.n	800bbf0 <E131Bridge::HandleDmx()+0x1f0>
 800bffc:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800c000:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c004:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800c008:	428a      	cmp	r2, r1
 800c00a:	bf38      	it	cc
 800c00c:	460a      	movcc	r2, r1
 800c00e:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800c012:	9a03      	ldr	r2, [sp, #12]
 800c014:	4293      	cmp	r3, r2
 800c016:	d1f3      	bne.n	800c000 <E131Bridge::HandleDmx()+0x600>
 800c018:	e5d1      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800c01a:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800c01e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c022:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800c026:	428a      	cmp	r2, r1
 800c028:	bf38      	it	cc
 800c02a:	460a      	movcc	r2, r1
 800c02c:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800c030:	9a03      	ldr	r2, [sp, #12]
 800c032:	4293      	cmp	r3, r2
 800c034:	d1f3      	bne.n	800c01e <E131Bridge::HandleDmx()+0x61e>
 800c036:	e5c2      	b.n	800bbbe <E131Bridge::HandleDmx()+0x1be>
 800c038:	20000078 	andcs	r0, r0, r8, ror r0

0800c03c <E131Bridge::IsValidRoot()>:
 800c03c:	b410      	push	{r4}
 800c03e:	f8d0 40ec 	ldr.w	r4, [r0, #236]	@ 0xec
 800c042:	4a11      	ldr	r2, [pc, #68]	@ (800c088 <E131Bridge::IsValidRoot()+0x4c>)
 800c044:	1ce3      	adds	r3, r4, #3
 800c046:	f104 0c0f 	add.w	ip, r4, #15
 800c04a:	e001      	b.n	800c050 <E131Bridge::IsValidRoot()+0x14>
 800c04c:	4563      	cmp	r3, ip
 800c04e:	d009      	beq.n	800c064 <E131Bridge::IsValidRoot()+0x28>
 800c050:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800c054:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c058:	4288      	cmp	r0, r1
 800c05a:	d0f7      	beq.n	800c04c <E131Bridge::IsValidRoot()+0x10>
 800c05c:	2000      	movs	r0, #0
 800c05e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c062:	4770      	bx	lr
 800c064:	f8d4 0012 	ldr.w	r0, [r4, #18]
 800c068:	f1b0 6f80 	cmp.w	r0, #67108864	@ 0x4000000
 800c06c:	d007      	beq.n	800c07e <E131Bridge::IsValidRoot()+0x42>
 800c06e:	f1a0 6000 	sub.w	r0, r0, #134217728	@ 0x8000000
 800c072:	fab0 f080 	clz	r0, r0
 800c076:	0940      	lsrs	r0, r0, #5
 800c078:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c07c:	4770      	bx	lr
 800c07e:	2001      	movs	r0, #1
 800c080:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c084:	4770      	bx	lr
 800c086:	bf00      	nop
 800c088:	0801a22d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp, pc}

0800c08c <E131Bridge::Process()>:
 800c08c:	f890 202b 	ldrb.w	r2, [r0, #43]	@ 0x2b
 800c090:	6843      	ldr	r3, [r0, #4]
 800c092:	2100      	movs	r1, #0
 800c094:	b510      	push	{r4, lr}
 800c096:	4604      	mov	r4, r0
 800c098:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800c09c:	6083      	str	r3, [r0, #8]
 800c09e:	b112      	cbz	r2, 800c0a6 <E131Bridge::Process()+0x1a>
 800c0a0:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800c0a4:	b31a      	cbz	r2, 800c0ee <E131Bridge::Process()+0x62>
 800c0a6:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 800c0aa:	b14b      	cbz	r3, 800c0c0 <E131Bridge::Process()+0x34>
 800c0ac:	f8d4 30ec 	ldr.w	r3, [r4, #236]	@ 0xec
 800c0b0:	f8d3 2012 	ldr.w	r2, [r3, #18]
 800c0b4:	f1b2 6f80 	cmp.w	r2, #67108864	@ 0x4000000
 800c0b8:	d022      	beq.n	800c100 <E131Bridge::Process()+0x74>
 800c0ba:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 800c0be:	d039      	beq.n	800c134 <E131Bridge::Process()+0xa8>
 800c0c0:	4620      	mov	r0, r4
 800c0c2:	f000 fe09 	bl	800ccd8 <E131Bridge::HandleDmxIn()>
 800c0c6:	4620      	mov	r0, r4
 800c0c8:	f000 fd8e 	bl	800cbe8 <E131Bridge::SendDiscoveryPacket()>
 800c0cc:	f894 30e8 	ldrb.w	r3, [r4, #232]	@ 0xe8
 800c0d0:	b163      	cbz	r3, 800c0ec <E131Bridge::Process()+0x60>
 800c0d2:	4b1c      	ldr	r3, [pc, #112]	@ (800c144 <E131Bridge::Process()+0xb8>)
 800c0d4:	6818      	ldr	r0, [r3, #0]
 800c0d6:	6943      	ldr	r3, [r0, #20]
 800c0d8:	2b04      	cmp	r3, #4
 800c0da:	d007      	beq.n	800c0ec <E131Bridge::Process()+0x60>
 800c0dc:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800c0e0:	bb1b      	cbnz	r3, 800c12a <E131Bridge::Process()+0x9e>
 800c0e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0e6:	2102      	movs	r1, #2
 800c0e8:	f007 bfde 	b.w	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800c0ec:	bd10      	pop	{r4, pc}
 800c0ee:	6900      	ldr	r0, [r0, #16]
 800c0f0:	f640 11c3 	movw	r1, #2499	@ 0x9c3
 800c0f4:	1a1b      	subs	r3, r3, r0
 800c0f6:	428b      	cmp	r3, r1
 800c0f8:	bf88      	it	hi
 800c0fa:	f884 202b 	strbhi.w	r2, [r4, #43]	@ 0x2b
 800c0fe:	e7d2      	b.n	800c0a6 <E131Bridge::Process()+0x1a>
 800c100:	f893 2075 	ldrb.w	r2, [r3, #117]	@ 0x75
 800c104:	2a02      	cmp	r2, #2
 800c106:	d1db      	bne.n	800c0c0 <E131Bridge::Process()+0x34>
 800c108:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
 800c10c:	2aa1      	cmp	r2, #161	@ 0xa1
 800c10e:	d1d7      	bne.n	800c0c0 <E131Bridge::Process()+0x34>
 800c110:	f8b3 2077 	ldrh.w	r2, [r3, #119]	@ 0x77
 800c114:	2a00      	cmp	r2, #0
 800c116:	d1d3      	bne.n	800c0c0 <E131Bridge::Process()+0x34>
 800c118:	f8b3 3079 	ldrh.w	r3, [r3, #121]	@ 0x79
 800c11c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c120:	d1ce      	bne.n	800c0c0 <E131Bridge::Process()+0x34>
 800c122:	4620      	mov	r0, r4
 800c124:	f7ff fc6c 	bl	800ba00 <E131Bridge::HandleDmx()>
 800c128:	e7ca      	b.n	800c0c0 <E131Bridge::Process()+0x34>
 800c12a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c12e:	2103      	movs	r1, #3
 800c130:	f007 bfba 	b.w	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800c134:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c136:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800c13a:	d1c1      	bne.n	800c0c0 <E131Bridge::Process()+0x34>
 800c13c:	4620      	mov	r0, r4
 800c13e:	f000 f803 	bl	800c148 <E131Bridge::HandleSynchronization()>
 800c142:	e7bd      	b.n	800c0c0 <E131Bridge::Process()+0x34>
 800c144:	20002238 	andcs	r2, r0, r8, lsr r2

0800c148 <E131Bridge::HandleSynchronization()>:
 800c148:	b510      	push	{r4, lr}
 800c14a:	f8d0 30ec 	ldr.w	r3, [r0, #236]	@ 0xec
 800c14e:	8b42      	ldrh	r2, [r0, #26]
 800c150:	f8b3 302d 	ldrh.w	r3, [r3, #45]	@ 0x2d
 800c154:	ba5b      	rev16	r3, r3
 800c156:	b29b      	uxth	r3, r3
 800c158:	429a      	cmp	r2, r3
 800c15a:	4604      	mov	r4, r0
 800c15c:	d009      	beq.n	800c172 <E131Bridge::HandleSynchronization()+0x2a>
 800c15e:	8b82      	ldrh	r2, [r0, #28]
 800c160:	429a      	cmp	r2, r3
 800c162:	d006      	beq.n	800c172 <E131Bridge::HandleSynchronization()+0x2a>
 800c164:	4b22      	ldr	r3, [pc, #136]	@ (800c1f0 <E131Bridge::HandleSynchronization()+0xa8>)
 800c166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c16a:	6818      	ldr	r0, [r3, #0]
 800c16c:	2102      	movs	r1, #2
 800c16e:	f007 bf9b 	b.w	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 800c172:	6863      	ldr	r3, [r4, #4]
 800c174:	6123      	str	r3, [r4, #16]
 800c176:	f894 308a 	ldrb.w	r3, [r4, #138]	@ 0x8a
 800c17a:	b12b      	cbz	r3, 800c188 <E131Bridge::HandleSynchronization()+0x40>
 800c17c:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800c180:	6803      	ldr	r3, [r0, #0]
 800c182:	2100      	movs	r1, #0
 800c184:	695b      	ldr	r3, [r3, #20]
 800c186:	4798      	blx	r3
 800c188:	f894 30ce 	ldrb.w	r3, [r4, #206]	@ 0xce
 800c18c:	b12b      	cbz	r3, 800c19a <E131Bridge::HandleSynchronization()+0x52>
 800c18e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800c192:	6803      	ldr	r3, [r0, #0]
 800c194:	2101      	movs	r1, #1
 800c196:	695b      	ldr	r3, [r3, #20]
 800c198:	4798      	blx	r3
 800c19a:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800c19e:	6803      	ldr	r3, [r0, #0]
 800c1a0:	699b      	ldr	r3, [r3, #24]
 800c1a2:	4798      	blx	r3
 800c1a4:	f894 308a 	ldrb.w	r3, [r4, #138]	@ 0x8a
 800c1a8:	b153      	cbz	r3, 800c1c0 <E131Bridge::HandleSynchronization()+0x78>
 800c1aa:	2300      	movs	r3, #0
 800c1ac:	f884 308a 	strb.w	r3, [r4, #138]	@ 0x8a
 800c1b0:	f894 3089 	ldrb.w	r3, [r4, #137]	@ 0x89
 800c1b4:	b923      	cbnz	r3, 800c1c0 <E131Bridge::HandleSynchronization()+0x78>
 800c1b6:	2301      	movs	r3, #1
 800c1b8:	f884 3089 	strb.w	r3, [r4, #137]	@ 0x89
 800c1bc:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800c1c0:	f894 30ce 	ldrb.w	r3, [r4, #206]	@ 0xce
 800c1c4:	b153      	cbz	r3, 800c1dc <E131Bridge::HandleSynchronization()+0x94>
 800c1c6:	2300      	movs	r3, #0
 800c1c8:	f884 30ce 	strb.w	r3, [r4, #206]	@ 0xce
 800c1cc:	f894 30cd 	ldrb.w	r3, [r4, #205]	@ 0xcd
 800c1d0:	b923      	cbnz	r3, 800c1dc <E131Bridge::HandleSynchronization()+0x94>
 800c1d2:	2301      	movs	r3, #1
 800c1d4:	f884 30cd 	strb.w	r3, [r4, #205]	@ 0xcd
 800c1d8:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800c1dc:	f8d4 00f8 	ldr.w	r0, [r4, #248]	@ 0xf8
 800c1e0:	b120      	cbz	r0, 800c1ec <E131Bridge::HandleSynchronization()+0xa4>
 800c1e2:	6803      	ldr	r3, [r0, #0]
 800c1e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1e8:	689b      	ldr	r3, [r3, #8]
 800c1ea:	4718      	bx	r3
 800c1ec:	bd10      	pop	{r4, pc}
 800c1ee:	bf00      	nop
 800c1f0:	20002238 	andcs	r2, r0, r8, lsr r2

0800c1f4 <E131Bridge::Print()>:
 800c1f4:	b530      	push	{r4, r5, lr}
 800c1f6:	b08b      	sub	sp, #44	@ 0x2c
 800c1f8:	4604      	mov	r4, r0
 800c1fa:	4669      	mov	r1, sp
 800c1fc:	f500 709e 	add.w	r0, r0, #316	@ 0x13c
 800c200:	2500      	movs	r5, #0
 800c202:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800c206:	f00a fb9d 	bl	8016944 <uuid_unparse>
 800c20a:	4b25      	ldr	r3, [pc, #148]	@ (800c2a0 <E131Bridge::Print()+0xac>)
 800c20c:	4825      	ldr	r0, [pc, #148]	@ (800c2a4 <E131Bridge::Print()+0xb0>)
 800c20e:	7819      	ldrb	r1, [r3, #0]
 800c210:	785a      	ldrb	r2, [r3, #1]
 800c212:	f00a fabd 	bl	8016790 <printf>
 800c216:	4824      	ldr	r0, [pc, #144]	@ (800c2a8 <E131Bridge::Print()+0xb4>)
 800c218:	4669      	mov	r1, sp
 800c21a:	f00a fab9 	bl	8016790 <printf>
 800c21e:	7fe3      	ldrb	r3, [r4, #31]
 800c220:	b1fb      	cbz	r3, 800c262 <E131Bridge::Print()+0x6e>
 800c222:	4822      	ldr	r0, [pc, #136]	@ (800c2ac <E131Bridge::Print()+0xb8>)
 800c224:	f00a fab4 	bl	8016790 <printf>
 800c228:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c22a:	2b01      	cmp	r3, #1
 800c22c:	d10b      	bne.n	800c246 <E131Bridge::Print()+0x52>
 800c22e:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 800c232:	4a1f      	ldr	r2, [pc, #124]	@ (800c2b0 <E131Bridge::Print()+0xbc>)
 800c234:	4b1f      	ldr	r3, [pc, #124]	@ (800c2b4 <E131Bridge::Print()+0xc0>)
 800c236:	4820      	ldr	r0, [pc, #128]	@ (800c2b8 <E131Bridge::Print()+0xc4>)
 800c238:	42a9      	cmp	r1, r5
 800c23a:	bf08      	it	eq
 800c23c:	4613      	moveq	r3, r2
 800c23e:	8e22      	ldrh	r2, [r4, #48]	@ 0x30
 800c240:	4629      	mov	r1, r5
 800c242:	f00a faa5 	bl	8016790 <printf>
 800c246:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800c248:	2901      	cmp	r1, #1
 800c24a:	d10a      	bne.n	800c262 <E131Bridge::Print()+0x6e>
 800c24c:	f8d4 00c4 	ldr.w	r0, [r4, #196]	@ 0xc4
 800c250:	4a17      	ldr	r2, [pc, #92]	@ (800c2b0 <E131Bridge::Print()+0xbc>)
 800c252:	4b18      	ldr	r3, [pc, #96]	@ (800c2b4 <E131Bridge::Print()+0xc0>)
 800c254:	2800      	cmp	r0, #0
 800c256:	bf08      	it	eq
 800c258:	4613      	moveq	r3, r2
 800c25a:	8fa2      	ldrh	r2, [r4, #60]	@ 0x3c
 800c25c:	4816      	ldr	r0, [pc, #88]	@ (800c2b8 <E131Bridge::Print()+0xc4>)
 800c25e:	f00a fa97 	bl	8016790 <printf>
 800c262:	7fa3      	ldrb	r3, [r4, #30]
 800c264:	b19b      	cbz	r3, 800c28e <E131Bridge::Print()+0x9a>
 800c266:	4815      	ldr	r0, [pc, #84]	@ (800c2bc <E131Bridge::Print()+0xc8>)
 800c268:	f00a fa92 	bl	8016790 <printf>
 800c26c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c26e:	b929      	cbnz	r1, 800c27c <E131Bridge::Print()+0x88>
 800c270:	f894 30d9 	ldrb.w	r3, [r4, #217]	@ 0xd9
 800c274:	8e22      	ldrh	r2, [r4, #48]	@ 0x30
 800c276:	4812      	ldr	r0, [pc, #72]	@ (800c2c0 <E131Bridge::Print()+0xcc>)
 800c278:	f00a fa8a 	bl	8016790 <printf>
 800c27c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c27e:	8fa2      	ldrh	r2, [r4, #60]	@ 0x3c
 800c280:	b92b      	cbnz	r3, 800c28e <E131Bridge::Print()+0x9a>
 800c282:	f894 30e5 	ldrb.w	r3, [r4, #229]	@ 0xe5
 800c286:	480e      	ldr	r0, [pc, #56]	@ (800c2c0 <E131Bridge::Print()+0xcc>)
 800c288:	2101      	movs	r1, #1
 800c28a:	f00a fa81 	bl	8016790 <printf>
 800c28e:	f894 302f 	ldrb.w	r3, [r4, #47]	@ 0x2f
 800c292:	b113      	cbz	r3, 800c29a <E131Bridge::Print()+0xa6>
 800c294:	480b      	ldr	r0, [pc, #44]	@ (800c2c4 <E131Bridge::Print()+0xd0>)
 800c296:	f00a fa7b 	bl	8016790 <printf>
 800c29a:	b00b      	add	sp, #44	@ 0x2c
 800c29c:	bd30      	pop	{r4, r5, pc}
 800c29e:	bf00      	nop
 800c2a0:	0801a239 	stmdaeq	r1, {r0, r3, r4, r5, r9, sp, pc}
 800c2a4:	080175fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 800c2a8:	08017611 	stmdaeq	r1, {r0, r4, r9, sl, ip, sp, lr}
 800c2ac:	08017621 	stmdaeq	r1, {r0, r5, r9, sl, ip, sp, lr}
 800c2b0:	080175fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 800c2b4:	080175f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 800c2b8:	0801762a 	stmdaeq	r1, {r1, r3, r5, r9, sl, ip, sp, lr}
 800c2bc:	0801763f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, ip, sp, lr}
 800c2c0:	08017647 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, ip, sp, lr}
 800c2c4:	0801765e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, ip, sp, lr}

0800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
 800c2c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c2ca:	88c6      	ldrh	r6, [r0, #6]
 800c2cc:	8885      	ldrh	r5, [r0, #4]
 800c2ce:	42ae      	cmp	r6, r5
 800c2d0:	d216      	bcs.n	800c300 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x38>
 800c2d2:	4604      	mov	r4, r0
 800c2d4:	6800      	ldr	r0, [r0, #0]
 800c2d6:	1bad      	subs	r5, r5, r6
 800c2d8:	4430      	add	r0, r6
 800c2da:	7a26      	ldrb	r6, [r4, #8]
 800c2dc:	b923      	cbnz	r3, 800c2e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x20>
 800c2de:	b926      	cbnz	r6, 800c2ea <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x22>
 800c2e0:	9200      	str	r2, [sp, #0]
 800c2e2:	460b      	mov	r3, r1
 800c2e4:	4a09      	ldr	r2, [pc, #36]	@ (800c30c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x44>)
 800c2e6:	e003      	b.n	800c2f0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800c2e8:	b166      	cbz	r6, 800c304 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x3c>
 800c2ea:	9200      	str	r2, [sp, #0]
 800c2ec:	4a08      	ldr	r2, [pc, #32]	@ (800c310 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>)
 800c2ee:	460b      	mov	r3, r1
 800c2f0:	4629      	mov	r1, r5
 800c2f2:	f00a fa75 	bl	80167e0 <snprintf>
 800c2f6:	4285      	cmp	r5, r0
 800c2f8:	bfa2      	ittt	ge
 800c2fa:	88e3      	ldrhge	r3, [r4, #6]
 800c2fc:	181b      	addge	r3, r3, r0
 800c2fe:	80e3      	strhge	r3, [r4, #6]
 800c300:	b002      	add	sp, #8
 800c302:	bd70      	pop	{r4, r5, r6, pc}
 800c304:	9200      	str	r2, [sp, #0]
 800c306:	460b      	mov	r3, r1
 800c308:	4a02      	ldr	r2, [pc, #8]	@ (800c314 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x4c>)
 800c30a:	e7f1      	b.n	800c2f0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800c30c:	080173ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 800c310:	080173a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, ip, sp, lr}
 800c314:	080173ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip, sp, lr}

0800c318 <memcmp>:
 800c318:	4402      	add	r2, r0
 800c31a:	4290      	cmp	r0, r2
 800c31c:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 800c320:	d106      	bne.n	800c330 <memcmp+0x18>
 800c322:	2000      	movs	r0, #0
 800c324:	4770      	bx	lr
 800c326:	3001      	adds	r0, #1
 800c328:	4290      	cmp	r0, r2
 800c32a:	d102      	bne.n	800c332 <memcmp+0x1a>
 800c32c:	2000      	movs	r0, #0
 800c32e:	e006      	b.n	800c33e <memcmp+0x26>
 800c330:	b510      	push	{r4, lr}
 800c332:	7803      	ldrb	r3, [r0, #0]
 800c334:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c338:	42a3      	cmp	r3, r4
 800c33a:	d0f4      	beq.n	800c326 <memcmp+0xe>
 800c33c:	1b18      	subs	r0, r3, r4
 800c33e:	bd10      	pop	{r4, pc}

0800c340 <E131ParamsStore::Copy(e131params::Params*)>:
 800c340:	b507      	push	{r0, r1, r2, lr}
 800c342:	2300      	movs	r3, #0
 800c344:	2101      	movs	r1, #1
 800c346:	e9cd 3100 	strd	r3, r1, [sp]
 800c34a:	4602      	mov	r2, r0
 800c34c:	4804      	ldr	r0, [pc, #16]	@ (800c360 <E131ParamsStore::Copy(e131params::Params*)+0x20>)
 800c34e:	23dc      	movs	r3, #220	@ 0xdc
 800c350:	6800      	ldr	r0, [r0, #0]
 800c352:	2119      	movs	r1, #25
 800c354:	f006 ff3e 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800c358:	b003      	add	sp, #12
 800c35a:	f85d fb04 	ldr.w	pc, [sp], #4
 800c35e:	bf00      	nop
 800c360:	20002134 	andcs	r2, r0, r4, lsr r1

0800c364 <E131Params::E131Params()>:
 800c364:	b510      	push	{r4, lr}
 800c366:	22dc      	movs	r2, #220	@ 0xdc
 800c368:	4604      	mov	r4, r0
 800c36a:	2100      	movs	r1, #0
 800c36c:	f009 ff2c 	bl	80161c8 <memset>
 800c370:	2201      	movs	r2, #1
 800c372:	7162      	strb	r2, [r4, #5]
 800c374:	2202      	movs	r2, #2
 800c376:	f8a4 2007 	strh.w	r2, [r4, #7]
 800c37a:	2203      	movs	r2, #3
 800c37c:	f8a4 2009 	strh.w	r2, [r4, #9]
 800c380:	2204      	movs	r2, #4
 800c382:	f8a4 200b 	strh.w	r2, [r4, #11]
 800c386:	f04f 3264 	mov.w	r2, #1684300900	@ 0x64646464
 800c38a:	2300      	movs	r3, #0
 800c38c:	f8c4 20b0 	str.w	r2, [r4, #176]	@ 0xb0
 800c390:	2255      	movs	r2, #85	@ 0x55
 800c392:	71a3      	strb	r3, [r4, #6]
 800c394:	7362      	strb	r2, [r4, #13]
 800c396:	73a3      	strb	r3, [r4, #14]
 800c398:	4620      	mov	r0, r4
 800c39a:	bd10      	pop	{r4, pc}

0800c39c <E131Params::Load()>:
 800c39c:	b508      	push	{r3, lr}
 800c39e:	2200      	movs	r2, #0
 800c3a0:	7002      	strb	r2, [r0, #0]
 800c3a2:	7042      	strb	r2, [r0, #1]
 800c3a4:	7082      	strb	r2, [r0, #2]
 800c3a6:	70c2      	strb	r2, [r0, #3]
 800c3a8:	f7ff ffca 	bl	800c340 <E131ParamsStore::Copy(e131params::Params*)>
 800c3ac:	2001      	movs	r0, #1
 800c3ae:	bd08      	pop	{r3, pc}

0800c3b0 <E131Params::Load(char const*, unsigned long)>:
 800c3b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c3b2:	2500      	movs	r5, #0
 800c3b4:	b087      	sub	sp, #28
 800c3b6:	4604      	mov	r4, r0
 800c3b8:	460e      	mov	r6, r1
 800c3ba:	4617      	mov	r7, r2
 800c3bc:	7005      	strb	r5, [r0, #0]
 800c3be:	7045      	strb	r5, [r0, #1]
 800c3c0:	7085      	strb	r5, [r0, #2]
 800c3c2:	70c5      	strb	r5, [r0, #3]
 800c3c4:	4602      	mov	r2, r0
 800c3c6:	490c      	ldr	r1, [pc, #48]	@ (800c3f8 <E131Params::Load(char const*, unsigned long)+0x48>)
 800c3c8:	a804      	add	r0, sp, #16
 800c3ca:	f007 f9dd 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c3ce:	463a      	mov	r2, r7
 800c3d0:	4631      	mov	r1, r6
 800c3d2:	a804      	add	r0, sp, #16
 800c3d4:	f007 f9dc 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 800c3d8:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800c3dc:	23dc      	movs	r3, #220	@ 0xdc
 800c3de:	4807      	ldr	r0, [pc, #28]	@ (800c3fc <E131Params::Load(char const*, unsigned long)+0x4c>)
 800c3e0:	9300      	str	r3, [sp, #0]
 800c3e2:	462a      	mov	r2, r5
 800c3e4:	4623      	mov	r3, r4
 800c3e6:	2119      	movs	r1, #25
 800c3e8:	6800      	ldr	r0, [r0, #0]
 800c3ea:	f006 fecd 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800c3ee:	a804      	add	r0, sp, #16
 800c3f0:	f007 f9cd 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 800c3f4:	b007      	add	sp, #28
 800c3f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3f8:	0800c769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, lr, pc}
 800c3fc:	20002134 	andcs	r2, r0, r4, lsr r1

0800c400 <E131Params::callbackFunction(char const*)>:
 800c400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c404:	460e      	mov	r6, r1
 800c406:	b089      	sub	sp, #36	@ 0x24
 800c408:	2708      	movs	r7, #8
 800c40a:	4604      	mov	r4, r0
 800c40c:	49a3      	ldr	r1, [pc, #652]	@ (800c69c <E131Params::callbackFunction(char const*)+0x29c>)
 800c40e:	9702      	str	r7, [sp, #8]
 800c410:	eb0d 0307 	add.w	r3, sp, r7
 800c414:	aa03      	add	r2, sp, #12
 800c416:	4630      	mov	r0, r6
 800c418:	f007 f9f0 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800c41c:	bb40      	cbnz	r0, 800c470 <E131Params::callbackFunction(char const*)+0x70>
 800c41e:	49a0      	ldr	r1, [pc, #640]	@ (800c6a0 <E131Params::callbackFunction(char const*)+0x2a0>)
 800c420:	2204      	movs	r2, #4
 800c422:	a803      	add	r0, sp, #12
 800c424:	f7ff ff78 	bl	800c318 <memcmp>
 800c428:	6825      	ldr	r5, [r4, #0]
 800c42a:	b188      	cbz	r0, 800c450 <E131Params::callbackFunction(char const*)+0x50>
 800c42c:	499d      	ldr	r1, [pc, #628]	@ (800c6a4 <E131Params::callbackFunction(char const*)+0x2a4>)
 800c42e:	2203      	movs	r2, #3
 800c430:	a803      	add	r0, sp, #12
 800c432:	f7ff ff71 	bl	800c318 <memcmp>
 800c436:	b198      	cbz	r0, 800c460 <E131Params::callbackFunction(char const*)+0x60>
 800c438:	499b      	ldr	r1, [pc, #620]	@ (800c6a8 <E131Params::callbackFunction(char const*)+0x2a8>)
 800c43a:	2202      	movs	r2, #2
 800c43c:	a803      	add	r0, sp, #12
 800c43e:	f7ff ff6b 	bl	800c318 <memcmp>
 800c442:	b188      	cbz	r0, 800c468 <E131Params::callbackFunction(char const*)+0x68>
 800c444:	4999      	ldr	r1, [pc, #612]	@ (800c6ac <E131Params::callbackFunction(char const*)+0x2ac>)
 800c446:	463a      	mov	r2, r7
 800c448:	a803      	add	r0, sp, #12
 800c44a:	f7ff ff65 	bl	800c318 <memcmp>
 800c44e:	b168      	cbz	r0, 800c46c <E131Params::callbackFunction(char const*)+0x6c>
 800c450:	f025 0520 	bic.w	r5, r5, #32
 800c454:	2300      	movs	r3, #0
 800c456:	6025      	str	r5, [r4, #0]
 800c458:	74a3      	strb	r3, [r4, #18]
 800c45a:	b009      	add	sp, #36	@ 0x24
 800c45c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c460:	2301      	movs	r3, #1
 800c462:	f045 0520 	orr.w	r5, r5, #32
 800c466:	e7f6      	b.n	800c456 <E131Params::callbackFunction(char const*)+0x56>
 800c468:	2302      	movs	r3, #2
 800c46a:	e7fa      	b.n	800c462 <E131Params::callbackFunction(char const*)+0x62>
 800c46c:	2303      	movs	r3, #3
 800c46e:	e7f8      	b.n	800c462 <E131Params::callbackFunction(char const*)+0x62>
 800c470:	2700      	movs	r7, #0
 800c472:	f8df a250 	ldr.w	sl, [pc, #592]	@ 800c6c4 <E131Params::callbackFunction(char const*)+0x2c4>
 800c476:	463d      	mov	r5, r7
 800c478:	4b8d      	ldr	r3, [pc, #564]	@ (800c6b0 <E131Params::callbackFunction(char const*)+0x2b0>)
 800c47a:	f10d 0206 	add.w	r2, sp, #6
 800c47e:	eb03 1105 	add.w	r1, r3, r5, lsl #4
 800c482:	4630      	mov	r0, r6
 800c484:	ea4f 1b05 	mov.w	fp, r5, lsl #4
 800c488:	f007 fa11 	bl	80138ae <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c48c:	b9d8      	cbnz	r0, 800c4c6 <E131Params::callbackFunction(char const*)+0xc6>
 800c48e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800c492:	6821      	ldr	r1, [r4, #0]
 800c494:	1e42      	subs	r2, r0, #1
 800c496:	b292      	uxth	r2, r2
 800c498:	f64f 16fe 	movw	r6, #63998	@ 0xf9fe
 800c49c:	2302      	movs	r3, #2
 800c49e:	42b2      	cmp	r2, r6
 800c4a0:	fa03 f305 	lsl.w	r3, r3, r5
 800c4a4:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800c4a8:	d907      	bls.n	800c4ba <E131Params::callbackFunction(char const*)+0xba>
 800c4aa:	4422      	add	r2, r4
 800c4ac:	3501      	adds	r5, #1
 800c4ae:	f8a2 5005 	strh.w	r5, [r2, #5]
 800c4b2:	ea21 0103 	bic.w	r1, r1, r3
 800c4b6:	6021      	str	r1, [r4, #0]
 800c4b8:	e7cf      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c4ba:	4422      	add	r2, r4
 800c4bc:	430b      	orrs	r3, r1
 800c4be:	f8a2 0005 	strh.w	r0, [r2, #5]
 800c4c2:	6023      	str	r3, [r4, #0]
 800c4c4:	e7c9      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c4c6:	497b      	ldr	r1, [pc, #492]	@ (800c6b4 <E131Params::callbackFunction(char const*)+0x2b4>)
 800c4c8:	f04f 0803 	mov.w	r8, #3
 800c4cc:	ab02      	add	r3, sp, #8
 800c4ce:	aa03      	add	r2, sp, #12
 800c4d0:	4439      	add	r1, r7
 800c4d2:	4630      	mov	r0, r6
 800c4d4:	f8cd 8008 	str.w	r8, [sp, #8]
 800c4d8:	f007 f990 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800c4dc:	b9f8      	cbnz	r0, 800c51e <E131Params::callbackFunction(char const*)+0x11e>
 800c4de:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800c4e2:	f8b4 300f 	ldrh.w	r3, [r4, #15]
 800c4e6:	006d      	lsls	r5, r5, #1
 800c4e8:	f042 0220 	orr.w	r2, r2, #32
 800c4ec:	fa08 f805 	lsl.w	r8, r8, r5
 800c4f0:	2a6c      	cmp	r2, #108	@ 0x6c
 800c4f2:	ea23 0308 	bic.w	r3, r3, r8
 800c4f6:	d10d      	bne.n	800c514 <E131Params::callbackFunction(char const*)+0x114>
 800c4f8:	f89d 200d 	ldrb.w	r2, [sp, #13]
 800c4fc:	f042 0220 	orr.w	r2, r2, #32
 800c500:	2a74      	cmp	r2, #116	@ 0x74
 800c502:	d107      	bne.n	800c514 <E131Params::callbackFunction(char const*)+0x114>
 800c504:	f89d 000e 	ldrb.w	r0, [sp, #14]
 800c508:	f040 0020 	orr.w	r0, r0, #32
 800c50c:	f1a0 0270 	sub.w	r2, r0, #112	@ 0x70
 800c510:	4250      	negs	r0, r2
 800c512:	4150      	adcs	r0, r2
 800c514:	40a8      	lsls	r0, r5
 800c516:	4303      	orrs	r3, r0
 800c518:	f8a4 300f 	strh.w	r3, [r4, #15]
 800c51c:	e79d      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c51e:	f104 0853 	add.w	r8, r4, #83	@ 0x53
 800c522:	44b8      	add	r8, r7
 800c524:	210e      	movs	r1, #14
 800c526:	f04f 0911 	mov.w	r9, #17
 800c52a:	ab02      	add	r3, sp, #8
 800c52c:	4642      	mov	r2, r8
 800c52e:	fb01 a105 	mla	r1, r1, r5, sl
 800c532:	4630      	mov	r0, r6
 800c534:	f8cd 9008 	str.w	r9, [sp, #8]
 800c538:	f007 f960 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800c53c:	bb18      	cbnz	r0, 800c586 <E131Params::callbackFunction(char const*)+0x186>
 800c53e:	9a02      	ldr	r2, [sp, #8]
 800c540:	2312      	movs	r3, #18
 800c542:	fb03 4305 	mla	r3, r3, r5, r4
 800c546:	4413      	add	r3, r2
 800c548:	4649      	mov	r1, r9
 800c54a:	f883 0053 	strb.w	r0, [r3, #83]	@ 0x53
 800c54e:	4a5a      	ldr	r2, [pc, #360]	@ (800c6b8 <E131Params::callbackFunction(char const*)+0x2b8>)
 800c550:	1c6b      	adds	r3, r5, #1
 800c552:	a803      	add	r0, sp, #12
 800c554:	f00a f944 	bl	80167e0 <snprintf>
 800c558:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800c55c:	a903      	add	r1, sp, #12
 800c55e:	f818 3f01 	ldrb.w	r3, [r8, #1]!
 800c562:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c566:	4293      	cmp	r3, r2
 800c568:	d001      	beq.n	800c56e <E131Params::callbackFunction(char const*)+0x16e>
 800c56a:	1a9b      	subs	r3, r3, r2
 800c56c:	e001      	b.n	800c572 <E131Params::callbackFunction(char const*)+0x172>
 800c56e:	2b00      	cmp	r3, #0
 800c570:	d1f5      	bne.n	800c55e <E131Params::callbackFunction(char const*)+0x15e>
 800c572:	2280      	movs	r2, #128	@ 0x80
 800c574:	6821      	ldr	r1, [r4, #0]
 800c576:	40aa      	lsls	r2, r5
 800c578:	b913      	cbnz	r3, 800c580 <E131Params::callbackFunction(char const*)+0x180>
 800c57a:	ea21 0102 	bic.w	r1, r1, r2
 800c57e:	e79a      	b.n	800c4b6 <E131Params::callbackFunction(char const*)+0xb6>
 800c580:	430a      	orrs	r2, r1
 800c582:	6022      	str	r2, [r4, #0]
 800c584:	e769      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c586:	494d      	ldr	r1, [pc, #308]	@ (800c6bc <E131Params::callbackFunction(char const*)+0x2bc>)
 800c588:	2307      	movs	r3, #7
 800c58a:	9302      	str	r3, [sp, #8]
 800c58c:	aa03      	add	r2, sp, #12
 800c58e:	ab02      	add	r3, sp, #8
 800c590:	4439      	add	r1, r7
 800c592:	4630      	mov	r0, r6
 800c594:	f007 f932 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800c598:	2800      	cmp	r0, #0
 800c59a:	d15e      	bne.n	800c65a <E131Params::callbackFunction(char const*)+0x25a>
 800c59c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c5a0:	f043 0320 	orr.w	r3, r3, #32
 800c5a4:	2b69      	cmp	r3, #105	@ 0x69
 800c5a6:	d123      	bne.n	800c5f0 <E131Params::callbackFunction(char const*)+0x1f0>
 800c5a8:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800c5ac:	f043 0320 	orr.w	r3, r3, #32
 800c5b0:	2b6e      	cmp	r3, #110	@ 0x6e
 800c5b2:	d146      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c5b4:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800c5b8:	f043 0320 	orr.w	r3, r3, #32
 800c5bc:	2b70      	cmp	r3, #112	@ 0x70
 800c5be:	d140      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c5c0:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800c5c4:	f043 0320 	orr.w	r3, r3, #32
 800c5c8:	2b75      	cmp	r3, #117	@ 0x75
 800c5ca:	d13a      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c5cc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c5d0:	f043 0320 	orr.w	r3, r3, #32
 800c5d4:	3b74      	subs	r3, #116	@ 0x74
 800c5d6:	bf18      	it	ne
 800c5d8:	2301      	movne	r3, #1
 800c5da:	f8b4 200d 	ldrh.w	r2, [r4, #13]
 800c5de:	006d      	lsls	r5, r5, #1
 800c5e0:	2103      	movs	r1, #3
 800c5e2:	40a9      	lsls	r1, r5
 800c5e4:	ea22 0201 	bic.w	r2, r2, r1
 800c5e8:	bb6b      	cbnz	r3, 800c646 <E131Params::callbackFunction(char const*)+0x246>
 800c5ea:	f8a4 200d 	strh.w	r2, [r4, #13]
 800c5ee:	e734      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c5f0:	2b64      	cmp	r3, #100	@ 0x64
 800c5f2:	d126      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c5f4:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800c5f8:	f043 0320 	orr.w	r3, r3, #32
 800c5fc:	2b69      	cmp	r3, #105	@ 0x69
 800c5fe:	d120      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c600:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800c604:	f043 0320 	orr.w	r3, r3, #32
 800c608:	2b73      	cmp	r3, #115	@ 0x73
 800c60a:	d11a      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c60c:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800c610:	f043 0320 	orr.w	r3, r3, #32
 800c614:	2b61      	cmp	r3, #97	@ 0x61
 800c616:	d114      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c618:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c61c:	f043 0320 	orr.w	r3, r3, #32
 800c620:	2b62      	cmp	r3, #98	@ 0x62
 800c622:	d10e      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c624:	f89d 3011 	ldrb.w	r3, [sp, #17]
 800c628:	f043 0320 	orr.w	r3, r3, #32
 800c62c:	2b6c      	cmp	r3, #108	@ 0x6c
 800c62e:	d108      	bne.n	800c642 <E131Params::callbackFunction(char const*)+0x242>
 800c630:	f89d 3012 	ldrb.w	r3, [sp, #18]
 800c634:	f043 0320 	orr.w	r3, r3, #32
 800c638:	2b65      	cmp	r3, #101	@ 0x65
 800c63a:	bf0c      	ite	eq
 800c63c:	2302      	moveq	r3, #2
 800c63e:	2301      	movne	r3, #1
 800c640:	e7cb      	b.n	800c5da <E131Params::callbackFunction(char const*)+0x1da>
 800c642:	2301      	movs	r3, #1
 800c644:	e7c9      	b.n	800c5da <E131Params::callbackFunction(char const*)+0x1da>
 800c646:	2b02      	cmp	r3, #2
 800c648:	d102      	bne.n	800c650 <E131Params::callbackFunction(char const*)+0x250>
 800c64a:	40ab      	lsls	r3, r5
 800c64c:	431a      	orrs	r2, r3
 800c64e:	e7cc      	b.n	800c5ea <E131Params::callbackFunction(char const*)+0x1ea>
 800c650:	2301      	movs	r3, #1
 800c652:	fa03 f505 	lsl.w	r5, r3, r5
 800c656:	432a      	orrs	r2, r5
 800c658:	e7c7      	b.n	800c5ea <E131Params::callbackFunction(char const*)+0x1ea>
 800c65a:	4919      	ldr	r1, [pc, #100]	@ (800c6c0 <E131Params::callbackFunction(char const*)+0x2c0>)
 800c65c:	f10d 0205 	add.w	r2, sp, #5
 800c660:	4439      	add	r1, r7
 800c662:	4630      	mov	r0, r6
 800c664:	f007 f93f 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c668:	bb70      	cbnz	r0, 800c6c8 <E131Params::callbackFunction(char const*)+0x2c8>
 800c66a:	f89d 1005 	ldrb.w	r1, [sp, #5]
 800c66e:	6823      	ldr	r3, [r4, #0]
 800c670:	1e48      	subs	r0, r1, #1
 800c672:	b2c0      	uxtb	r0, r0
 800c674:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800c678:	28c7      	cmp	r0, #199	@ 0xc7
 800c67a:	fa02 f205 	lsl.w	r2, r2, r5
 800c67e:	4425      	add	r5, r4
 800c680:	d805      	bhi.n	800c68e <E131Params::callbackFunction(char const*)+0x28e>
 800c682:	2964      	cmp	r1, #100	@ 0x64
 800c684:	d003      	beq.n	800c68e <E131Params::callbackFunction(char const*)+0x28e>
 800c686:	f885 10b0 	strb.w	r1, [r5, #176]	@ 0xb0
 800c68a:	4313      	orrs	r3, r2
 800c68c:	e719      	b.n	800c4c2 <E131Params::callbackFunction(char const*)+0xc2>
 800c68e:	2164      	movs	r1, #100	@ 0x64
 800c690:	f885 10b0 	strb.w	r1, [r5, #176]	@ 0xb0
 800c694:	ea23 0302 	bic.w	r3, r3, r2
 800c698:	e713      	b.n	800c4c2 <E131Params::callbackFunction(char const*)+0xc2>
 800c69a:	bf00      	nop
 800c69c:	0801a881 	stmdaeq	r1, {r0, r7, fp, sp, pc}
 800c6a0:	08017678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, ip, sp, lr}
 800c6a4:	0801767d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 800c6a8:	08017799 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 800c6ac:	08017681 	stmdaeq	r1, {r0, r7, r9, sl, ip, sp, lr}
 800c6b0:	0801a9ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, sp, pc}
 800c6b4:	0801a972 	stmdaeq	r1, {r1, r4, r5, r6, r8, fp, sp, pc}
 800c6b8:	0801768a 	stmdaeq	r1, {r1, r3, r7, r9, sl, ip, sp, lr}
 800c6bc:	0801a92a 	stmdaeq	r1, {r1, r3, r5, r8, fp, sp, pc}
 800c6c0:	0801a1dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sp, pc}
 800c6c4:	0801a8b2 	stmdaeq	r1, {r1, r4, r5, r7, fp, sp, pc}
 800c6c8:	4925      	ldr	r1, [pc, #148]	@ (800c760 <E131Params::callbackFunction(char const*)+0x360>)
 800c6ca:	2306      	movs	r3, #6
 800c6cc:	9302      	str	r3, [sp, #8]
 800c6ce:	aa03      	add	r2, sp, #12
 800c6d0:	ab02      	add	r3, sp, #8
 800c6d2:	4459      	add	r1, fp
 800c6d4:	4630      	mov	r0, r6
 800c6d6:	f007 f891 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800c6da:	bb40      	cbnz	r0, 800c72e <E131Params::callbackFunction(char const*)+0x32e>
 800c6dc:	f89d 100c 	ldrb.w	r1, [sp, #12]
 800c6e0:	7c62      	ldrb	r2, [r4, #17]
 800c6e2:	2301      	movs	r3, #1
 800c6e4:	f041 0120 	orr.w	r1, r1, #32
 800c6e8:	40ab      	lsls	r3, r5
 800c6ea:	2963      	cmp	r1, #99	@ 0x63
 800c6ec:	b2db      	uxtb	r3, r3
 800c6ee:	d11a      	bne.n	800c726 <E131Params::callbackFunction(char const*)+0x326>
 800c6f0:	f89d 100d 	ldrb.w	r1, [sp, #13]
 800c6f4:	f041 0120 	orr.w	r1, r1, #32
 800c6f8:	296f      	cmp	r1, #111	@ 0x6f
 800c6fa:	d114      	bne.n	800c726 <E131Params::callbackFunction(char const*)+0x326>
 800c6fc:	f89d 100e 	ldrb.w	r1, [sp, #14]
 800c700:	f041 0120 	orr.w	r1, r1, #32
 800c704:	296e      	cmp	r1, #110	@ 0x6e
 800c706:	d10e      	bne.n	800c726 <E131Params::callbackFunction(char const*)+0x326>
 800c708:	f89d 100f 	ldrb.w	r1, [sp, #15]
 800c70c:	f041 0120 	orr.w	r1, r1, #32
 800c710:	2973      	cmp	r1, #115	@ 0x73
 800c712:	d108      	bne.n	800c726 <E131Params::callbackFunction(char const*)+0x326>
 800c714:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800c718:	f041 0120 	orr.w	r1, r1, #32
 800c71c:	2974      	cmp	r1, #116	@ 0x74
 800c71e:	d102      	bne.n	800c726 <E131Params::callbackFunction(char const*)+0x326>
 800c720:	4313      	orrs	r3, r2
 800c722:	7463      	strb	r3, [r4, #17]
 800c724:	e699      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c726:	ea22 0203 	bic.w	r2, r2, r3
 800c72a:	7462      	strb	r2, [r4, #17]
 800c72c:	e695      	b.n	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c72e:	3501      	adds	r5, #1
 800c730:	2d04      	cmp	r5, #4
 800c732:	f107 0712 	add.w	r7, r7, #18
 800c736:	f47f ae9f 	bne.w	800c478 <E131Params::callbackFunction(char const*)+0x78>
 800c73a:	490a      	ldr	r1, [pc, #40]	@ (800c764 <E131Params::callbackFunction(char const*)+0x364>)
 800c73c:	f10d 0205 	add.w	r2, sp, #5
 800c740:	4630      	mov	r0, r6
 800c742:	f007 f8d0 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c746:	2800      	cmp	r0, #0
 800c748:	f47f ae87 	bne.w	800c45a <E131Params::callbackFunction(char const*)+0x5a>
 800c74c:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c750:	6823      	ldr	r3, [r4, #0]
 800c752:	b112      	cbz	r2, 800c75a <E131Params::callbackFunction(char const*)+0x35a>
 800c754:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800c758:	e6b3      	b.n	800c4c2 <E131Params::callbackFunction(char const*)+0xc2>
 800c75a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800c75e:	e6b0      	b.n	800c4c2 <E131Params::callbackFunction(char const*)+0xc2>
 800c760:	0801a8ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, fp, sp, pc}
 800c764:	0801a88a 	stmdaeq	r1, {r1, r3, r7, fp, sp, pc}

0800c768 <E131Params::staticCallbackFunction(void*, char const*)>:
 800c768:	f7ff be4a 	b.w	800c400 <E131Params::callbackFunction(char const*)>

0800c76c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)>:
 800c76c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c770:	4604      	mov	r4, r0
 800c772:	b087      	sub	sp, #28
 800c774:	4615      	mov	r5, r2
 800c776:	461e      	mov	r6, r3
 800c778:	2900      	cmp	r1, #0
 800c77a:	d067      	beq.n	800c84c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0xe0>
 800c77c:	22dc      	movs	r2, #220	@ 0xdc
 800c77e:	f009 fd0c 	bl	801619a <memmove>
 800c782:	462a      	mov	r2, r5
 800c784:	49a9      	ldr	r1, [pc, #676]	@ (800ca2c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2c0>)
 800c786:	f8df 92f8 	ldr.w	r9, [pc, #760]	@ 800ca80 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x314>
 800c78a:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 800ca84 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x318>
 800c78e:	f8df b2f8 	ldr.w	fp, [pc, #760]	@ 800ca88 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x31c>
 800c792:	4633      	mov	r3, r6
 800c794:	a803      	add	r0, sp, #12
 800c796:	f006 ff21 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800c79a:	f104 0753 	add.w	r7, r4, #83	@ 0x53
 800c79e:	2500      	movs	r5, #0
 800c7a0:	f8d8 3000 	ldr.w	r3, [r8]
 800c7a4:	6821      	ldr	r1, [r4, #0]
 800c7a6:	42ab      	cmp	r3, r5
 800c7a8:	d853      	bhi.n	800c852 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0xe6>
 800c7aa:	7ca3      	ldrb	r3, [r4, #18]
 800c7ac:	2b01      	cmp	r3, #1
 800c7ae:	f000 80b6 	beq.w	800c91e <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x1b2>
 800c7b2:	2b02      	cmp	r3, #2
 800c7b4:	f000 80b5 	beq.w	800c922 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x1b6>
 800c7b8:	4a9d      	ldr	r2, [pc, #628]	@ (800ca30 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2c4>)
 800c7ba:	489e      	ldr	r0, [pc, #632]	@ (800ca34 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2c8>)
 800c7bc:	2b03      	cmp	r3, #3
 800c7be:	bf18      	it	ne
 800c7c0:	4602      	movne	r2, r0
 800c7c2:	f3c1 1340 	ubfx	r3, r1, #5, #1
 800c7c6:	a803      	add	r0, sp, #12
 800c7c8:	499b      	ldr	r1, [pc, #620]	@ (800ca38 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2cc>)
 800c7ca:	4e9c      	ldr	r6, [pc, #624]	@ (800ca3c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2d0>)
 800c7cc:	4f9c      	ldr	r7, [pc, #624]	@ (800ca40 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2d4>)
 800c7ce:	f8df 92bc 	ldr.w	r9, [pc, #700]	@ 800ca8c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x320>
 800c7d2:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 800ca90 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x324>
 800c7d6:	f8df b2bc 	ldr.w	fp, [pc, #700]	@ 800ca94 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x328>
 800c7da:	f7ff fd75 	bl	800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800c7de:	4999      	ldr	r1, [pc, #612]	@ (800ca44 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2d8>)
 800c7e0:	a803      	add	r0, sp, #12
 800c7e2:	f006 ffb7 	bl	8013754 <PropertiesBuilder::AddComment(char const*)>
 800c7e6:	2500      	movs	r5, #0
 800c7e8:	f8d8 3000 	ldr.w	r3, [r8]
 800c7ec:	42ab      	cmp	r3, r5
 800c7ee:	f200 809a 	bhi.w	800c926 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x1ba>
 800c7f2:	4995      	ldr	r1, [pc, #596]	@ (800ca48 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2dc>)
 800c7f4:	f8df a2a0 	ldr.w	sl, [pc, #672]	@ 800ca98 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x32c>
 800c7f8:	a803      	add	r0, sp, #12
 800c7fa:	f006 ffab 	bl	8013754 <PropertiesBuilder::AddComment(char const*)>
 800c7fe:	f104 07af 	add.w	r7, r4, #175	@ 0xaf
 800c802:	2600      	movs	r6, #0
 800c804:	f44f 0980 	mov.w	r9, #4194304	@ 0x400000
 800c808:	f8d8 3000 	ldr.w	r3, [r8]
 800c80c:	42b3      	cmp	r3, r6
 800c80e:	f200 80ad 	bhi.w	800c96c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x200>
 800c812:	498e      	ldr	r1, [pc, #568]	@ (800ca4c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e0>)
 800c814:	a803      	add	r0, sp, #12
 800c816:	f006 ff9d 	bl	8013754 <PropertiesBuilder::AddComment(char const*)>
 800c81a:	6823      	ldr	r3, [r4, #0]
 800c81c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c820:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800c824:	42a2      	cmp	r2, r4
 800c826:	f080 80e2 	bcs.w	800c9ee <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x282>
 800c82a:	9803      	ldr	r0, [sp, #12]
 800c82c:	f413 6300 	ands.w	r3, r3, #2048	@ 0x800
 800c830:	4410      	add	r0, r2
 800c832:	eba4 0402 	sub.w	r4, r4, r2
 800c836:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c83a:	f040 80c7 	bne.w	800c9cc <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x260>
 800c83e:	2a00      	cmp	r2, #0
 800c840:	f040 80c5 	bne.w	800c9ce <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x262>
 800c844:	9200      	str	r2, [sp, #0]
 800c846:	4b82      	ldr	r3, [pc, #520]	@ (800ca50 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e4>)
 800c848:	4a82      	ldr	r2, [pc, #520]	@ (800ca54 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e8>)
 800c84a:	e0c6      	b.n	800c9da <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x26e>
 800c84c:	f7ff fd78 	bl	800c340 <E131ParamsStore::Copy(e131params::Params*)>
 800c850:	e797      	b.n	800c782 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x16>
 800c852:	f8bd e012 	ldrh.w	lr, [sp, #18]
 800c856:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 800c85a:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 800c85e:	45b6      	cmp	lr, r6
 800c860:	f8b3 2005 	ldrh.w	r2, [r3, #5]
 800c864:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800c868:	d223      	bcs.n	800c8b2 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x146>
 800c86a:	f04f 0c02 	mov.w	ip, #2
 800c86e:	9803      	ldr	r0, [sp, #12]
 800c870:	fa0c fc05 	lsl.w	ip, ip, r5
 800c874:	ea3c 0101 	bics.w	r1, ip, r1
 800c878:	4470      	add	r0, lr
 800c87a:	eba6 060e 	sub.w	r6, r6, lr
 800c87e:	eb0b 1305 	add.w	r3, fp, r5, lsl #4
 800c882:	f89d e014 	ldrb.w	lr, [sp, #20]
 800c886:	d005      	beq.n	800c894 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x128>
 800c888:	f1be 0f00 	cmp.w	lr, #0
 800c88c:	d105      	bne.n	800c89a <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x12e>
 800c88e:	9200      	str	r2, [sp, #0]
 800c890:	4a70      	ldr	r2, [pc, #448]	@ (800ca54 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e8>)
 800c892:	e004      	b.n	800c89e <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x132>
 800c894:	f1be 0f00 	cmp.w	lr, #0
 800c898:	d03c      	beq.n	800c914 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x1a8>
 800c89a:	9200      	str	r2, [sp, #0]
 800c89c:	4a6e      	ldr	r2, [pc, #440]	@ (800ca58 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2ec>)
 800c89e:	4631      	mov	r1, r6
 800c8a0:	f009 ff9e 	bl	80167e0 <snprintf>
 800c8a4:	4286      	cmp	r6, r0
 800c8a6:	bfa2      	ittt	ge
 800c8a8:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c8ac:	18c0      	addge	r0, r0, r3
 800c8ae:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c8b2:	f8b4 300d 	ldrh.w	r3, [r4, #13]
 800c8b6:	4969      	ldr	r1, [pc, #420]	@ (800ca5c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2f0>)
 800c8b8:	fa23 f30a 	lsr.w	r3, r3, sl
 800c8bc:	2212      	movs	r2, #18
 800c8be:	f013 0303 	ands.w	r3, r3, #3
 800c8c2:	fb02 1105 	mla	r1, r2, r5, r1
 800c8c6:	d028      	beq.n	800c91a <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x1ae>
 800c8c8:	4a65      	ldr	r2, [pc, #404]	@ (800ca60 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2f4>)
 800c8ca:	4866      	ldr	r0, [pc, #408]	@ (800ca64 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2f8>)
 800c8cc:	2b02      	cmp	r3, #2
 800c8ce:	bf18      	it	ne
 800c8d0:	4602      	movne	r2, r0
 800c8d2:	3b01      	subs	r3, #1
 800c8d4:	bf18      	it	ne
 800c8d6:	2301      	movne	r3, #1
 800c8d8:	a803      	add	r0, sp, #12
 800c8da:	f7ff fcf5 	bl	800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800c8de:	6822      	ldr	r2, [r4, #0]
 800c8e0:	2380      	movs	r3, #128	@ 0x80
 800c8e2:	40ab      	lsls	r3, r5
 800c8e4:	401a      	ands	r2, r3
 800c8e6:	4293      	cmp	r3, r2
 800c8e8:	bf0c      	ite	eq
 800c8ea:	2601      	moveq	r6, #1
 800c8ec:	2600      	movne	r6, #0
 800c8ee:	f105 0501 	add.w	r5, r5, #1
 800c8f2:	d005      	beq.n	800c900 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x194>
 800c8f4:	4a5c      	ldr	r2, [pc, #368]	@ (800ca68 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2fc>)
 800c8f6:	462b      	mov	r3, r5
 800c8f8:	2111      	movs	r1, #17
 800c8fa:	4638      	mov	r0, r7
 800c8fc:	f009 ff70 	bl	80167e0 <snprintf>
 800c900:	463a      	mov	r2, r7
 800c902:	4649      	mov	r1, r9
 800c904:	4633      	mov	r3, r6
 800c906:	a803      	add	r0, sp, #12
 800c908:	f7ff fcde 	bl	800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800c90c:	f109 090e 	add.w	r9, r9, #14
 800c910:	3712      	adds	r7, #18
 800c912:	e745      	b.n	800c7a0 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x34>
 800c914:	9200      	str	r2, [sp, #0]
 800c916:	4a55      	ldr	r2, [pc, #340]	@ (800ca6c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x300>)
 800c918:	e7c1      	b.n	800c89e <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x132>
 800c91a:	4a55      	ldr	r2, [pc, #340]	@ (800ca70 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x304>)
 800c91c:	e7d9      	b.n	800c8d2 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x166>
 800c91e:	4a55      	ldr	r2, [pc, #340]	@ (800ca74 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x308>)
 800c920:	e74f      	b.n	800c7c2 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x56>
 800c922:	4a55      	ldr	r2, [pc, #340]	@ (800ca78 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x30c>)
 800c924:	e74d      	b.n	800c7c2 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x56>
 800c926:	f8b4 300f 	ldrh.w	r3, [r4, #15]
 800c92a:	006a      	lsls	r2, r5, #1
 800c92c:	4113      	asrs	r3, r2
 800c92e:	f003 0303 	and.w	r3, r3, #3
 800c932:	2b00      	cmp	r3, #0
 800c934:	bf15      	itete	ne
 800c936:	2301      	movne	r3, #1
 800c938:	2300      	moveq	r3, #0
 800c93a:	464a      	movne	r2, r9
 800c93c:	4652      	moveq	r2, sl
 800c93e:	4639      	mov	r1, r7
 800c940:	a803      	add	r0, sp, #12
 800c942:	f7ff fcc1 	bl	800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800c946:	7c61      	ldrb	r1, [r4, #17]
 800c948:	2301      	movs	r3, #1
 800c94a:	40ab      	lsls	r3, r5
 800c94c:	b2da      	uxtb	r2, r3
 800c94e:	400b      	ands	r3, r1
 800c950:	429a      	cmp	r2, r3
 800c952:	4631      	mov	r1, r6
 800c954:	4a49      	ldr	r2, [pc, #292]	@ (800ca7c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x310>)
 800c956:	bf0a      	itet	eq
 800c958:	2301      	moveq	r3, #1
 800c95a:	2300      	movne	r3, #0
 800c95c:	465a      	moveq	r2, fp
 800c95e:	a803      	add	r0, sp, #12
 800c960:	f7ff fcb2 	bl	800c2c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800c964:	3501      	adds	r5, #1
 800c966:	3610      	adds	r6, #16
 800c968:	3712      	adds	r7, #18
 800c96a:	e73d      	b.n	800c7e8 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x7c>
 800c96c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800c970:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c974:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800c978:	f8d4 c000 	ldr.w	ip, [r4]
 800c97c:	42a9      	cmp	r1, r5
 800c97e:	d21d      	bcs.n	800c9bc <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x250>
 800c980:	9803      	ldr	r0, [sp, #12]
 800c982:	fa09 f306 	lsl.w	r3, r9, r6
 800c986:	ea33 030c 	bics.w	r3, r3, ip
 800c98a:	4408      	add	r0, r1
 800c98c:	eba5 0501 	sub.w	r5, r5, r1
 800c990:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c994:	d004      	beq.n	800c9a0 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x234>
 800c996:	b921      	cbnz	r1, 800c9a2 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x236>
 800c998:	9200      	str	r2, [sp, #0]
 800c99a:	4653      	mov	r3, sl
 800c99c:	4a2d      	ldr	r2, [pc, #180]	@ (800ca54 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e8>)
 800c99e:	e003      	b.n	800c9a8 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x23c>
 800c9a0:	b181      	cbz	r1, 800c9c4 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x258>
 800c9a2:	9200      	str	r2, [sp, #0]
 800c9a4:	4a2c      	ldr	r2, [pc, #176]	@ (800ca58 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2ec>)
 800c9a6:	4653      	mov	r3, sl
 800c9a8:	4629      	mov	r1, r5
 800c9aa:	f009 ff19 	bl	80167e0 <snprintf>
 800c9ae:	4285      	cmp	r5, r0
 800c9b0:	bfa2      	ittt	ge
 800c9b2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c9b6:	18c0      	addge	r0, r0, r3
 800c9b8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c9bc:	3601      	adds	r6, #1
 800c9be:	f10a 0a12 	add.w	sl, sl, #18
 800c9c2:	e721      	b.n	800c808 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 800c9c4:	9200      	str	r2, [sp, #0]
 800c9c6:	4653      	mov	r3, sl
 800c9c8:	4a28      	ldr	r2, [pc, #160]	@ (800ca6c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x300>)
 800c9ca:	e7ed      	b.n	800c9a8 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x23c>
 800c9cc:	b34a      	cbz	r2, 800ca22 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2b6>
 800c9ce:	3b00      	subs	r3, #0
 800c9d0:	bf18      	it	ne
 800c9d2:	2301      	movne	r3, #1
 800c9d4:	9300      	str	r3, [sp, #0]
 800c9d6:	4a20      	ldr	r2, [pc, #128]	@ (800ca58 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2ec>)
 800c9d8:	4b1d      	ldr	r3, [pc, #116]	@ (800ca50 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e4>)
 800c9da:	4621      	mov	r1, r4
 800c9dc:	f009 ff00 	bl	80167e0 <snprintf>
 800c9e0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c9e4:	4284      	cmp	r4, r0
 800c9e6:	bfa4      	itt	ge
 800c9e8:	181b      	addge	r3, r3, r0
 800c9ea:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800c9ee:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c9f2:	b17b      	cbz	r3, 800ca14 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2a8>
 800c9f4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c9f8:	9b03      	ldr	r3, [sp, #12]
 800c9fa:	4413      	add	r3, r2
 800c9fc:	227d      	movs	r2, #125	@ 0x7d
 800c9fe:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ca02:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ca06:	9903      	ldr	r1, [sp, #12]
 800ca08:	54ca      	strb	r2, [r1, r3]
 800ca0a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ca0e:	3301      	adds	r3, #1
 800ca10:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ca14:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ca18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ca1a:	601a      	str	r2, [r3, #0]
 800ca1c:	b007      	add	sp, #28
 800ca1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca22:	2301      	movs	r3, #1
 800ca24:	9300      	str	r3, [sp, #0]
 800ca26:	4a11      	ldr	r2, [pc, #68]	@ (800ca6c <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x300>)
 800ca28:	4b09      	ldr	r3, [pc, #36]	@ (800ca50 <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x2e4>)
 800ca2a:	e7d6      	b.n	800c9da <E131Params::Builder(e131params::Params const*, char*, unsigned long, unsigned long&)+0x26e>
 800ca2c:	0801a224 	stmdaeq	r1, {r2, r5, r9, sp, pc}
 800ca30:	08017681 	stmdaeq	r1, {r0, r7, r9, sl, ip, sp, lr}
 800ca34:	08017678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, ip, sp, lr}
 800ca38:	0801a881 	stmdaeq	r1, {r0, r7, fp, sp, pc}
 800ca3c:	0801a8ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, fp, sp, pc}
 800ca40:	0801a972 	stmdaeq	r1, {r1, r4, r5, r6, r8, fp, sp, pc}
 800ca44:	080176bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, ip, sp, lr}
 800ca48:	080176c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, ip, sp, lr}
 800ca4c:	08017369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
 800ca50:	0801a88a 	stmdaeq	r1, {r1, r3, r7, fp, sp, pc}
 800ca54:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 800ca58:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 800ca5c:	0801a92a 	stmdaeq	r1, {r1, r3, r5, r8, fp, sp, pc}
 800ca60:	0801769f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip, sp, lr}
 800ca64:	08017698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, sp, lr}
 800ca68:	0801768a 	stmdaeq	r1, {r1, r3, r7, r9, sl, ip, sp, lr}
 800ca6c:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}
 800ca70:	08017692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip, sp, lr}
 800ca74:	0801767d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 800ca78:	08017799 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 800ca7c:	080176b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 800ca80:	0801a8b2 	stmdaeq	r1, {r1, r4, r5, r7, fp, sp, pc}
 800ca84:	20001250 	andcs	r1, r0, r0, asr r2
 800ca88:	0801a9ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, sp, pc}
 800ca8c:	080176a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, sl, ip, sp, lr}
 800ca90:	080176ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl, ip, sp, lr}
 800ca94:	080176af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, ip, sp, lr}
 800ca98:	0801a1dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sp, pc}

0800ca9c <E131Params::Set()>:
 800ca9c:	4b22      	ldr	r3, [pc, #136]	@ (800cb28 <E131Params::Set()+0x8c>)
 800ca9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800caa2:	681d      	ldr	r5, [r3, #0]
 800caa4:	2d02      	cmp	r5, #2
 800caa6:	bf9e      	ittt	ls
 800caa8:	4a20      	ldrls	r2, [pc, #128]	@ (800cb2c <E131Params::Set()+0x90>)
 800caaa:	f1c5 0302 	rsbls	r3, r5, #2
 800caae:	6013      	strls	r3, [r2, #0]
 800cab0:	6803      	ldr	r3, [r0, #0]
 800cab2:	b1ab      	cbz	r3, 800cae0 <E131Params::Set()+0x44>
 800cab4:	4b1e      	ldr	r3, [pc, #120]	@ (800cb30 <E131Params::Set()+0x94>)
 800cab6:	681c      	ldr	r4, [r3, #0]
 800cab8:	4b1c      	ldr	r3, [pc, #112]	@ (800cb2c <E131Params::Set()+0x90>)
 800caba:	2244      	movs	r2, #68	@ 0x44
 800cabc:	681f      	ldr	r7, [r3, #0]
 800cabe:	fb02 4205 	mla	r2, r2, r5, r4
 800cac2:	2300      	movs	r3, #0
 800cac4:	f44f 0c80 	mov.w	ip, #4194304	@ 0x400000
 800cac8:	f100 0eb0 	add.w	lr, r0, #176	@ 0xb0
 800cacc:	429f      	cmp	r7, r3
 800cace:	6806      	ldr	r6, [r0, #0]
 800cad0:	d108      	bne.n	800cae4 <E131Params::Set()+0x48>
 800cad2:	7c83      	ldrb	r3, [r0, #18]
 800cad4:	6263      	str	r3, [r4, #36]	@ 0x24
 800cad6:	0533      	lsls	r3, r6, #20
 800cad8:	bf44      	itt	mi
 800cada:	2301      	movmi	r3, #1
 800cadc:	f884 302e 	strbmi.w	r3, [r4, #46]	@ 0x2e
 800cae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cae4:	18e9      	adds	r1, r5, r3
 800cae6:	2901      	cmp	r1, #1
 800cae8:	d8f3      	bhi.n	800cad2 <E131Params::Set()+0x36>
 800caea:	f8b0 100f 	ldrh.w	r1, [r0, #15]
 800caee:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800caf2:	fa41 f108 	asr.w	r1, r1, r8
 800caf6:	f001 0103 	and.w	r1, r1, #3
 800cafa:	f8c2 1080 	str.w	r1, [r2, #128]	@ 0x80
 800cafe:	fa0c f103 	lsl.w	r1, ip, r3
 800cb02:	43b1      	bics	r1, r6
 800cb04:	d10c      	bne.n	800cb20 <E131Params::Set()+0x84>
 800cb06:	f81e 8003 	ldrb.w	r8, [lr, r3]
 800cb0a:	f108 31ff 	add.w	r1, r8, #4294967295	@ 0xffffffff
 800cb0e:	b2c9      	uxtb	r1, r1
 800cb10:	29c7      	cmp	r1, #199	@ 0xc7
 800cb12:	bf9f      	itttt	ls
 800cb14:	210c      	movls	r1, #12
 800cb16:	f104 06d9 	addls.w	r6, r4, #217	@ 0xd9
 800cb1a:	4359      	mulls	r1, r3
 800cb1c:	f806 8001 	strbls.w	r8, [r6, r1]
 800cb20:	3301      	adds	r3, #1
 800cb22:	3244      	adds	r2, #68	@ 0x44
 800cb24:	e7d2      	b.n	800cacc <E131Params::Set()+0x30>
 800cb26:	bf00      	nop
 800cb28:	20000074 	andcs	r0, r0, r4, ror r0
 800cb2c:	20001250 	andcs	r1, r0, r0, asr r2
 800cb30:	2000124c 	andcs	r1, r0, ip, asr #4

0800cb34 <E131Bridge::FillDiscoveryPacket()>:
 800cb34:	7f83      	ldrb	r3, [r0, #30]
 800cb36:	b510      	push	{r4, lr}
 800cb38:	333c      	adds	r3, #60	@ 0x3c
 800cb3a:	005b      	lsls	r3, r3, #1
 800cb3c:	8303      	strh	r3, [r0, #24]
 800cb3e:	f600 0242 	addw	r2, r0, #2114	@ 0x842
 800cb42:	f200 33ca 	addw	r3, r0, #970	@ 0x3ca
 800cb46:	2100      	movs	r1, #0
 800cb48:	f803 1b01 	strb.w	r1, [r3], #1
 800cb4c:	4293      	cmp	r3, r2
 800cb4e:	d1fb      	bne.n	800cb48 <E131Bridge::FillDiscoveryPacket()+0x14>
 800cb50:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800cb54:	4a23      	ldr	r2, [pc, #140]	@ (800cbe4 <E131Bridge::FillDiscoveryPacket()+0xb0>)
 800cb56:	f8a0 33ca 	strh.w	r3, [r0, #970]	@ 0x3ca
 800cb5a:	f200 31da 	addw	r1, r0, #986	@ 0x3da
 800cb5e:	f200 33ce 	addw	r3, r0, #974	@ 0x3ce
 800cb62:	f812 4b01 	ldrb.w	r4, [r2], #1
 800cb66:	f803 4b01 	strb.w	r4, [r3], #1
 800cb6a:	4299      	cmp	r1, r3
 800cb6c:	d1f9      	bne.n	800cb62 <E131Bridge::FillDiscoveryPacket()+0x2e>
 800cb6e:	7f83      	ldrb	r3, [r0, #30]
 800cb70:	3334      	adds	r3, #52	@ 0x34
 800cb72:	005b      	lsls	r3, r3, #1
 800cb74:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cb78:	ba5b      	rev16	r3, r3
 800cb7a:	f8a0 33da 	strh.w	r3, [r0, #986]	@ 0x3da
 800cb7e:	f500 729e 	add.w	r2, r0, #316	@ 0x13c
 800cb82:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800cb86:	f8c0 33dc 	str.w	r3, [r0, #988]	@ 0x3dc
 800cb8a:	f500 71a6 	add.w	r1, r0, #332	@ 0x14c
 800cb8e:	4613      	mov	r3, r2
 800cb90:	f813 4b01 	ldrb.w	r4, [r3], #1
 800cb94:	f883 42a3 	strb.w	r4, [r3, #675]	@ 0x2a3
 800cb98:	428b      	cmp	r3, r1
 800cb9a:	d1f9      	bne.n	800cb90 <E131Bridge::FillDiscoveryPacket()+0x5c>
 800cb9c:	7f83      	ldrb	r3, [r0, #30]
 800cb9e:	3329      	adds	r3, #41	@ 0x29
 800cba0:	005b      	lsls	r3, r3, #1
 800cba2:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cba6:	ba5b      	rev16	r3, r3
 800cba8:	f8a0 33f0 	strh.w	r3, [r0, #1008]	@ 0x3f0
 800cbac:	2300      	movs	r3, #0
 800cbae:	f8a0 33f2 	strh.w	r3, [r0, #1010]	@ 0x3f2
 800cbb2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800cbb6:	f8a0 33f4 	strh.w	r3, [r0, #1012]	@ 0x3f4
 800cbba:	f100 03fc 	add.w	r3, r0, #252	@ 0xfc
 800cbbe:	f813 1b01 	ldrb.w	r1, [r3], #1
 800cbc2:	f883 12f9 	strb.w	r1, [r3, #761]	@ 0x2f9
 800cbc6:	429a      	cmp	r2, r3
 800cbc8:	d1f9      	bne.n	800cbbe <E131Bridge::FillDiscoveryPacket()+0x8a>
 800cbca:	7f83      	ldrb	r3, [r0, #30]
 800cbcc:	3304      	adds	r3, #4
 800cbce:	005b      	lsls	r3, r3, #1
 800cbd0:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cbd4:	ba5b      	rev16	r3, r3
 800cbd6:	f8a0 343a 	strh.w	r3, [r0, #1082]	@ 0x43a
 800cbda:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800cbde:	f8c0 343c 	str.w	r3, [r0, #1084]	@ 0x43c
 800cbe2:	bd10      	pop	{r4, pc}
 800cbe4:	0801a22d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp, pc}

0800cbe8 <E131Bridge::SendDiscoveryPacket()>:
 800cbe8:	b513      	push	{r0, r1, r4, lr}
 800cbea:	6942      	ldr	r2, [r0, #20]
 800cbec:	6841      	ldr	r1, [r0, #4]
 800cbee:	4603      	mov	r3, r0
 800cbf0:	1a8a      	subs	r2, r1, r2
 800cbf2:	f242 700f 	movw	r0, #9999	@ 0x270f
 800cbf6:	4282      	cmp	r2, r0
 800cbf8:	d91f      	bls.n	800cc3a <E131Bridge::SendDiscoveryPacket()+0x52>
 800cbfa:	7f9a      	ldrb	r2, [r3, #30]
 800cbfc:	6159      	str	r1, [r3, #20]
 800cbfe:	b1e2      	cbz	r2, 800cc3a <E131Bridge::SendDiscoveryPacket()+0x52>
 800cc00:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800cc02:	b9e2      	cbnz	r2, 800cc3e <E131Bridge::SendDiscoveryPacket()+0x56>
 800cc04:	8e1a      	ldrh	r2, [r3, #48]	@ 0x30
 800cc06:	ba52      	rev16	r2, r2
 800cc08:	f8a3 2442 	strh.w	r2, [r3, #1090]	@ 0x442
 800cc0c:	2201      	movs	r2, #1
 800cc0e:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 800cc10:	b929      	cbnz	r1, 800cc1e <E131Bridge::SendDiscoveryPacket()+0x36>
 800cc12:	8f99      	ldrh	r1, [r3, #60]	@ 0x3c
 800cc14:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800cc18:	ba49      	rev16	r1, r1
 800cc1a:	f8a2 1442 	strh.w	r1, [r2, #1090]	@ 0x442
 800cc1e:	4c09      	ldr	r4, [pc, #36]	@ (800cc44 <E131Bridge::SendDiscoveryPacket()+0x5c>)
 800cc20:	6818      	ldr	r0, [r3, #0]
 800cc22:	6824      	ldr	r4, [r4, #0]
 800cc24:	8b1a      	ldrh	r2, [r3, #24]
 800cc26:	f203 31ca 	addw	r1, r3, #970	@ 0x3ca
 800cc2a:	f8d3 3844 	ldr.w	r3, [r3, #2116]	@ 0x844
 800cc2e:	b124      	cbz	r4, 800cc3a <E131Bridge::SendDiscoveryPacket()+0x52>
 800cc30:	f44f 54ae 	mov.w	r4, #5568	@ 0x15c0
 800cc34:	9400      	str	r4, [sp, #0]
 800cc36:	f004 fe21 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800cc3a:	b002      	add	sp, #8
 800cc3c:	bd10      	pop	{r4, pc}
 800cc3e:	2200      	movs	r2, #0
 800cc40:	e7e5      	b.n	800cc0e <E131Bridge::SendDiscoveryPacket()+0x26>
 800cc42:	bf00      	nop
 800cc44:	20002088 	andcs	r2, r0, r8, lsl #1

0800cc48 <memcpy.isra.0>:
 800cc48:	440a      	add	r2, r1
 800cc4a:	4291      	cmp	r1, r2
 800cc4c:	d100      	bne.n	800cc50 <memcpy.isra.0+0x8>
 800cc4e:	4770      	bx	lr
 800cc50:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cc54:	f800 3b01 	strb.w	r3, [r0], #1
 800cc58:	e7f7      	b.n	800cc4a <memcpy.isra.0+0x2>
	...

0800cc5c <E131Bridge::FillDataPacket()>:
 800cc5c:	b538      	push	{r3, r4, r5, lr}
 800cc5e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800cc62:	4604      	mov	r4, r0
 800cc64:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800cc68:	491a      	ldr	r1, [pc, #104]	@ (800ccd4 <E131Bridge::FillDataPacket()+0x78>)
 800cc6a:	220c      	movs	r2, #12
 800cc6c:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 800cc70:	f7ff ffea 	bl	800cc48 <memcpy.isra.0>
 800cc74:	2500      	movs	r5, #0
 800cc76:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800cc7a:	f8a4 3160 	strh.w	r3, [r4, #352]	@ 0x160
 800cc7e:	2210      	movs	r2, #16
 800cc80:	f504 719e 	add.w	r1, r4, #316	@ 0x13c
 800cc84:	f504 70b1 	add.w	r0, r4, #354	@ 0x162
 800cc88:	f8a4 515e 	strh.w	r5, [r4, #350]	@ 0x15e
 800cc8c:	f7ff ffdc 	bl	800cc48 <memcpy.isra.0>
 800cc90:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800cc94:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
 800cc98:	2240      	movs	r2, #64	@ 0x40
 800cc9a:	f104 01fc 	add.w	r1, r4, #252	@ 0xfc
 800cc9e:	f504 70bc 	add.w	r0, r4, #376	@ 0x178
 800cca2:	f7ff ffd1 	bl	800cc48 <memcpy.isra.0>
 800cca6:	2302      	movs	r3, #2
 800cca8:	f884 31c1 	strb.w	r3, [r4, #449]	@ 0x1c1
 800ccac:	23a1      	movs	r3, #161	@ 0xa1
 800ccae:	f884 31c2 	strb.w	r3, [r4, #450]	@ 0x1c2
 800ccb2:	f884 51bc 	strb.w	r5, [r4, #444]	@ 0x1bc
 800ccb6:	2301      	movs	r3, #1
 800ccb8:	f884 51b9 	strb.w	r5, [r4, #441]	@ 0x1b9
 800ccbc:	f884 51ba 	strb.w	r5, [r4, #442]	@ 0x1ba
 800ccc0:	f884 51c3 	strb.w	r5, [r4, #451]	@ 0x1c3
 800ccc4:	f884 51c4 	strb.w	r5, [r4, #452]	@ 0x1c4
 800ccc8:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 800cccc:	f884 31c6 	strb.w	r3, [r4, #454]	@ 0x1c6
 800ccd0:	bd38      	pop	{r3, r4, r5, pc}
 800ccd2:	bf00      	nop
 800ccd4:	0801a22d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp, pc}

0800ccd8 <E131Bridge::HandleDmxIn()>:
 800ccd8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ccdc:	4604      	mov	r4, r0
 800ccde:	4605      	mov	r5, r0
 800cce0:	2600      	movs	r6, #0
 800cce2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800cce4:	2b00      	cmp	r3, #0
 800cce6:	d165      	bne.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800cce8:	f895 30da 	ldrb.w	r3, [r5, #218]	@ 0xda
 800ccec:	2b00      	cmp	r3, #0
 800ccee:	d161      	bne.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800ccf0:	4f6f      	ldr	r7, [pc, #444]	@ (800ceb0 <E131Bridge::HandleDmxIn()+0x1d8>)
 800ccf2:	4631      	mov	r1, r6
 800ccf4:	6838      	ldr	r0, [r7, #0]
 800ccf6:	f002 fcf7 	bl	800f6e8 <Dmx::GetDmxChanged(unsigned long)>
 800ccfa:	4601      	mov	r1, r0
 800ccfc:	2800      	cmp	r0, #0
 800ccfe:	d060      	beq.n	800cdc2 <E131Bridge::HandleDmxIn()+0xea>
 800cd00:	f8d0 8204 	ldr.w	r8, [r0, #516]	@ 0x204
 800cd04:	f108 0201 	add.w	r2, r8, #1
 800cd08:	b297      	uxth	r7, r2
 800cd0a:	f107 036d 	add.w	r3, r7, #109	@ 0x6d
 800cd0e:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cd12:	ba5b      	rev16	r3, r3
 800cd14:	f8a4 315c 	strh.w	r3, [r4, #348]	@ 0x15c
 800cd18:	f107 0357 	add.w	r3, r7, #87	@ 0x57
 800cd1c:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cd20:	ba5b      	rev16	r3, r3
 800cd22:	f8a4 3172 	strh.w	r3, [r4, #370]	@ 0x172
 800cd26:	f895 30d9 	ldrb.w	r3, [r5, #217]	@ 0xd9
 800cd2a:	f884 31b8 	strb.w	r3, [r4, #440]	@ 0x1b8
 800cd2e:	f895 30d8 	ldrb.w	r3, [r5, #216]	@ 0xd8
 800cd32:	1c58      	adds	r0, r3, #1
 800cd34:	f885 00d8 	strb.w	r0, [r5, #216]	@ 0xd8
 800cd38:	f884 31bb 	strb.w	r3, [r4, #443]	@ 0x1bb
 800cd3c:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 800cd3e:	ba5b      	rev16	r3, r3
 800cd40:	f8a4 31bd 	strh.w	r3, [r4, #445]	@ 0x1bd
 800cd44:	f107 030a 	add.w	r3, r7, #10
 800cd48:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800cd4c:	ba5b      	rev16	r3, r3
 800cd4e:	f8a4 31bf 	strh.w	r3, [r4, #447]	@ 0x1bf
 800cd52:	f204 10c9 	addw	r0, r4, #457	@ 0x1c9
 800cd56:	ba7f      	rev16	r7, r7
 800cd58:	f7ff ff76 	bl	800cc48 <memcpy.isra.0>
 800cd5c:	f8a4 71c7 	strh.w	r7, [r4, #455]	@ 0x1c7
 800cd60:	4f54      	ldr	r7, [pc, #336]	@ (800ceb4 <E131Bridge::HandleDmxIn()+0x1dc>)
 800cd62:	6820      	ldr	r0, [r4, #0]
 800cd64:	6839      	ldr	r1, [r7, #0]
 800cd66:	f8d5 30d0 	ldr.w	r3, [r5, #208]	@ 0xd0
 800cd6a:	f504 79a6 	add.w	r9, r4, #332	@ 0x14c
 800cd6e:	f108 027e 	add.w	r2, r8, #126	@ 0x7e
 800cd72:	b129      	cbz	r1, 800cd80 <E131Bridge::HandleDmxIn()+0xa8>
 800cd74:	f44f 51ae 	mov.w	r1, #5568	@ 0x15c0
 800cd78:	9100      	str	r1, [sp, #0]
 800cd7a:	4649      	mov	r1, r9
 800cd7c:	f004 fd7e 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800cd80:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
 800cd84:	b13b      	cbz	r3, 800cd96 <E131Bridge::HandleDmxIn()+0xbe>
 800cd86:	683b      	ldr	r3, [r7, #0]
 800cd88:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
 800cd8c:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 800cd90:	4620      	mov	r0, r4
 800cd92:	f7fe fe35 	bl	800ba00 <E131Bridge::HandleDmx()>
 800cd96:	4a48      	ldr	r2, [pc, #288]	@ (800ceb8 <E131Bridge::HandleDmxIn()+0x1e0>)
 800cd98:	2301      	movs	r3, #1
 800cd9a:	6811      	ldr	r1, [r2, #0]
 800cd9c:	40b3      	lsls	r3, r6
 800cd9e:	ea33 0001 	bics.w	r0, r3, r1
 800cda2:	d007      	beq.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800cda4:	430b      	orrs	r3, r1
 800cda6:	6013      	str	r3, [r2, #0]
 800cda8:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800cdac:	f043 0301 	orr.w	r3, r3, #1
 800cdb0:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800cdb4:	350c      	adds	r5, #12
 800cdb6:	b116      	cbz	r6, 800cdbe <E131Bridge::HandleDmxIn()+0xe6>
 800cdb8:	b003      	add	sp, #12
 800cdba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdbe:	2601      	movs	r6, #1
 800cdc0:	e78f      	b.n	800cce2 <E131Bridge::HandleDmxIn()+0xa>
 800cdc2:	6838      	ldr	r0, [r7, #0]
 800cdc4:	4631      	mov	r1, r6
 800cdc6:	f002 fcff 	bl	800f7c8 <Dmx::GetDmxUpdatesPerSecond(unsigned long)>
 800cdca:	2800      	cmp	r0, #0
 800cdcc:	d1f2      	bne.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800cdce:	493a      	ldr	r1, [pc, #232]	@ (800ceb8 <E131Bridge::HandleDmxIn()+0x1e0>)
 800cdd0:	2201      	movs	r2, #1
 800cdd2:	680b      	ldr	r3, [r1, #0]
 800cdd4:	40b2      	lsls	r2, r6
 800cdd6:	ea32 0003 	bics.w	r0, r2, r3
 800cdda:	d15b      	bne.n	800ce94 <E131Bridge::HandleDmxIn()+0x1bc>
 800cddc:	ea23 0302 	bic.w	r3, r3, r2
 800cde0:	600b      	str	r3, [r1, #0]
 800cde2:	b92b      	cbnz	r3, 800cdf0 <E131Bridge::HandleDmxIn()+0x118>
 800cde4:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800cde8:	f023 0301 	bic.w	r3, r3, #1
 800cdec:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800cdf0:	6838      	ldr	r0, [r7, #0]
 800cdf2:	4631      	mov	r1, r6
 800cdf4:	f002 fce0 	bl	800f7b8 <Dmx::GetDmxCurrentData(unsigned long)>
 800cdf8:	f8d0 8204 	ldr.w	r8, [r0, #516]	@ 0x204
 800cdfc:	f108 0201 	add.w	r2, r8, #1
 800ce00:	b297      	uxth	r7, r2
 800ce02:	f107 036d 	add.w	r3, r7, #109	@ 0x6d
 800ce06:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800ce0a:	ba5b      	rev16	r3, r3
 800ce0c:	f8a4 315c 	strh.w	r3, [r4, #348]	@ 0x15c
 800ce10:	f107 0357 	add.w	r3, r7, #87	@ 0x57
 800ce14:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800ce18:	ba5b      	rev16	r3, r3
 800ce1a:	f8a4 3172 	strh.w	r3, [r4, #370]	@ 0x172
 800ce1e:	f895 30d9 	ldrb.w	r3, [r5, #217]	@ 0xd9
 800ce22:	f884 31b8 	strb.w	r3, [r4, #440]	@ 0x1b8
 800ce26:	f895 30d8 	ldrb.w	r3, [r5, #216]	@ 0xd8
 800ce2a:	4601      	mov	r1, r0
 800ce2c:	1c58      	adds	r0, r3, #1
 800ce2e:	f885 00d8 	strb.w	r0, [r5, #216]	@ 0xd8
 800ce32:	f884 31bb 	strb.w	r3, [r4, #443]	@ 0x1bb
 800ce36:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 800ce38:	ba5b      	rev16	r3, r3
 800ce3a:	f8a4 31bd 	strh.w	r3, [r4, #445]	@ 0x1bd
 800ce3e:	f107 030a 	add.w	r3, r7, #10
 800ce42:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800ce46:	ba5b      	rev16	r3, r3
 800ce48:	f8a4 31bf 	strh.w	r3, [r4, #447]	@ 0x1bf
 800ce4c:	f204 10c9 	addw	r0, r4, #457	@ 0x1c9
 800ce50:	ba7f      	rev16	r7, r7
 800ce52:	f7ff fef9 	bl	800cc48 <memcpy.isra.0>
 800ce56:	f8a4 71c7 	strh.w	r7, [r4, #455]	@ 0x1c7
 800ce5a:	4f16      	ldr	r7, [pc, #88]	@ (800ceb4 <E131Bridge::HandleDmxIn()+0x1dc>)
 800ce5c:	6820      	ldr	r0, [r4, #0]
 800ce5e:	6839      	ldr	r1, [r7, #0]
 800ce60:	f8d5 30d0 	ldr.w	r3, [r5, #208]	@ 0xd0
 800ce64:	f504 79a6 	add.w	r9, r4, #332	@ 0x14c
 800ce68:	f108 027e 	add.w	r2, r8, #126	@ 0x7e
 800ce6c:	b129      	cbz	r1, 800ce7a <E131Bridge::HandleDmxIn()+0x1a2>
 800ce6e:	f44f 51ae 	mov.w	r1, #5568	@ 0x15c0
 800ce72:	9100      	str	r1, [sp, #0]
 800ce74:	4649      	mov	r1, r9
 800ce76:	f004 fd01 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800ce7a:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
 800ce7e:	2b00      	cmp	r3, #0
 800ce80:	d098      	beq.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800ce82:	683b      	ldr	r3, [r7, #0]
 800ce84:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
 800ce88:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 800ce8c:	4620      	mov	r0, r4
 800ce8e:	f7fe fdb7 	bl	800ba00 <E131Bridge::HandleDmx()>
 800ce92:	e78f      	b.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800ce94:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 800ce98:	2b00      	cmp	r3, #0
 800ce9a:	d08b      	beq.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800ce9c:	4a07      	ldr	r2, [pc, #28]	@ (800cebc <E131Bridge::HandleDmxIn()+0x1e4>)
 800ce9e:	6812      	ldr	r2, [r2, #0]
 800cea0:	1ad3      	subs	r3, r2, r3
 800cea2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800cea6:	d985      	bls.n	800cdb4 <E131Bridge::HandleDmxIn()+0xdc>
 800cea8:	f8c5 20d4 	str.w	r2, [r5, #212]	@ 0xd4
 800ceac:	e7a0      	b.n	800cdf0 <E131Bridge::HandleDmxIn()+0x118>
 800ceae:	bf00      	nop
 800ceb0:	20001380 	andcs	r1, r0, r0, lsl #7
 800ceb4:	20002088 	andcs	r2, r0, r8, lsl #1
 800ceb8:	20001254 	andcs	r1, r0, r4, asr r2
 800cebc:	20009ae8 	andcs	r9, r0, r8, ror #21

0800cec0 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>:
 800cec0:	b507      	push	{r0, r1, r2, lr}
 800cec2:	2300      	movs	r3, #0
 800cec4:	2101      	movs	r1, #1
 800cec6:	e9cd 3100 	strd	r3, r1, [sp]
 800ceca:	4602      	mov	r2, r0
 800cecc:	4804      	ldr	r0, [pc, #16]	@ (800cee0 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)+0x20>)
 800cece:	2329      	movs	r3, #41	@ 0x29
 800ced0:	6800      	ldr	r0, [r0, #0]
 800ced2:	2109      	movs	r1, #9
 800ced4:	f006 f97e 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800ced8:	b003      	add	sp, #12
 800ceda:	f85d fb04 	ldr.w	pc, [sp], #4
 800cede:	bf00      	nop
 800cee0:	20002134 	andcs	r2, r0, r4, lsr r1

0800cee4 <RDMDeviceParams::RDMDeviceParams()>:
 800cee4:	b510      	push	{r4, lr}
 800cee6:	2225      	movs	r2, #37	@ 0x25
 800cee8:	4604      	mov	r4, r0
 800ceea:	2100      	movs	r1, #0
 800ceec:	f009 f96c 	bl	80161c8 <memset>
 800cef0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800cef4:	237f      	movs	r3, #127	@ 0x7f
 800cef6:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 800cefa:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 800cefe:	f884 2027 	strb.w	r2, [r4, #39]	@ 0x27
 800cf02:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800cf06:	4620      	mov	r0, r4
 800cf08:	bd10      	pop	{r4, pc}

0800cf0a <RDMDeviceParams::Load()>:
 800cf0a:	b508      	push	{r3, lr}
 800cf0c:	f7ff ffd8 	bl	800cec0 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>
 800cf10:	bd08      	pop	{r3, pc}
	...

0800cf14 <RDMDeviceParams::Set(RDMDevice*)>:
 800cf14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf18:	6803      	ldr	r3, [r0, #0]
 800cf1a:	460c      	mov	r4, r1
 800cf1c:	07d9      	lsls	r1, r3, #31
 800cf1e:	b087      	sub	sp, #28
 800cf20:	4605      	mov	r5, r0
 800cf22:	d52d      	bpl.n	800cf80 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800cf24:	f890 6024 	ldrb.w	r6, [r0, #36]	@ 0x24
 800cf28:	f894 3052 	ldrb.w	r3, [r4, #82]	@ 0x52
 800cf2c:	2e20      	cmp	r6, #32
 800cf2e:	f100 0104 	add.w	r1, r0, #4
 800cf32:	bf28      	it	cs
 800cf34:	2620      	movcs	r6, #32
 800cf36:	b39b      	cbz	r3, 800cfa0 <RDMDeviceParams::Set(RDMDevice*)+0x8c>
 800cf38:	f104 0320 	add.w	r3, r4, #32
 800cf3c:	2701      	movs	r7, #1
 800cf3e:	4632      	mov	r2, r6
 800cf40:	4618      	mov	r0, r3
 800cf42:	f04f 0900 	mov.w	r9, #0
 800cf46:	f009 f928 	bl	801619a <memmove>
 800cf4a:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800cf4e:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800cf52:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800cfb0 <RDMDeviceParams::Set(RDMDevice*)+0x9c>
 800cf56:	9600      	str	r6, [sp, #0]
 800cf58:	4603      	mov	r3, r0
 800cf5a:	2204      	movs	r2, #4
 800cf5c:	f8d8 0000 	ldr.w	r0, [r8]
 800cf60:	f88d 6017 	strb.w	r6, [sp, #23]
 800cf64:	2109      	movs	r1, #9
 800cf66:	f006 f90f 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cf6a:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800cf6e:	9700      	str	r7, [sp, #0]
 800cf70:	f8d8 0000 	ldr.w	r0, [r8]
 800cf74:	f10d 0317 	add.w	r3, sp, #23
 800cf78:	2224      	movs	r2, #36	@ 0x24
 800cf7a:	2109      	movs	r1, #9
 800cf7c:	f006 f904 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cf80:	682b      	ldr	r3, [r5, #0]
 800cf82:	079a      	lsls	r2, r3, #30
 800cf84:	bf44      	itt	mi
 800cf86:	f8b5 2025 	ldrhmi.w	r2, [r5, #37]	@ 0x25
 800cf8a:	f8a4 2040 	strhmi.w	r2, [r4, #64]	@ 0x40
 800cf8e:	075b      	lsls	r3, r3, #29
 800cf90:	bf44      	itt	mi
 800cf92:	f8b5 3027 	ldrhmi.w	r3, [r5, #39]	@ 0x27
 800cf96:	f8a4 3042 	strhmi.w	r3, [r4, #66]	@ 0x42
 800cf9a:	b007      	add	sp, #28
 800cf9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cfa0:	4632      	mov	r2, r6
 800cfa2:	4620      	mov	r0, r4
 800cfa4:	f009 f8f9 	bl	801619a <memmove>
 800cfa8:	f884 6051 	strb.w	r6, [r4, #81]	@ 0x51
 800cfac:	e7e8      	b.n	800cf80 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800cfae:	bf00      	nop
 800cfb0:	20002134 	andcs	r2, r0, r4, lsr r1

0800cfb4 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800cfb4:	4770      	bx	lr

0800cfb6 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800cfb6:	4770      	bx	lr

0800cfb8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>:
 800cfb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfba:	4604      	mov	r4, r0
 800cfbc:	3004      	adds	r0, #4
 800cfbe:	460f      	mov	r7, r1
 800cfc0:	4616      	mov	r6, r2
 800cfc2:	461d      	mov	r5, r3
 800cfc4:	f001 f870 	bl	800e0a8 <RDMDevice::RDMDevice()>
 800cfc8:	4620      	mov	r0, r4
 800cfca:	4b24      	ldr	r3, [pc, #144]	@ (800d05c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa4>)
 800cfcc:	f840 3b57 	str.w	r3, [r0], #87
 800cfd0:	f000 fd54 	bl	800da7c <RDMIdentify::RDMIdentify()>
 800cfd4:	4a22      	ldr	r2, [pc, #136]	@ (800d060 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa8>)
 800cfd6:	66a7      	str	r7, [r4, #104]	@ 0x68
 800cfd8:	f104 0158 	add.w	r1, r4, #88	@ 0x58
 800cfdc:	6011      	str	r1, [r2, #0]
 800cfde:	4a21      	ldr	r2, [pc, #132]	@ (800d064 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xac>)
 800cfe0:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 800cfe4:	6011      	str	r1, [r2, #0]
 800cfe6:	4a20      	ldr	r2, [pc, #128]	@ (800d068 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xb0>)
 800cfe8:	6014      	str	r4, [r2, #0]
 800cfea:	2265      	movs	r2, #101	@ 0x65
 800cfec:	f884 2097 	strb.w	r2, [r4, #151]	@ 0x97
 800cff0:	f44f 72b7 	mov.w	r2, #366	@ 0x16e
 800cff4:	2300      	movs	r3, #0
 800cff6:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 800cffa:	2201      	movs	r2, #1
 800cffc:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
 800d000:	65a3      	str	r3, [r4, #88]	@ 0x58
 800d002:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800d006:	6623      	str	r3, [r4, #96]	@ 0x60
 800d008:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 800d00c:	f104 0271 	add.w	r2, r4, #113	@ 0x71
 800d010:	f104 0184 	add.w	r1, r4, #132	@ 0x84
 800d014:	f802 3b01 	strb.w	r3, [r2], #1
 800d018:	428a      	cmp	r2, r1
 800d01a:	d1fb      	bne.n	800d014 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x5c>
 800d01c:	f104 0397 	add.w	r3, r4, #151	@ 0x97
 800d020:	2200      	movs	r2, #0
 800d022:	f801 2b01 	strb.w	r2, [r1], #1
 800d026:	428b      	cmp	r3, r1
 800d028:	d1fb      	bne.n	800d022 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x6a>
 800d02a:	f884 607e 	strb.w	r6, [r4, #126]	@ 0x7e
 800d02e:	f884 507d 	strb.w	r5, [r4, #125]	@ 0x7d
 800d032:	f7fc ff3d 	bl	8009eb0 <RDMSoftwareVersion::GetVersion()>
 800d036:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800d038:	f7fc ff3e 	bl	8009eb8 <RDMSoftwareVersion::GetVersionLength()>
 800d03c:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 800d040:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800d042:	f884 0070 	strb.w	r0, [r4, #112]	@ 0x70
 800d046:	3b01      	subs	r3, #1
 800d048:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d04c:	685b      	ldr	r3, [r3, #4]
 800d04e:	b91b      	cbnz	r3, 800d058 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa0>
 800d050:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d054:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
 800d058:	4620      	mov	r0, r4
 800d05a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d05c:	0801a244 	stmdaeq	r1, {r2, r6, r9, sp, pc}
 800d060:	20001264 	andcs	r1, r0, r4, ror #4
 800d064:	20001268 	andcs	r1, r0, r8, ror #4
 800d068:	20001258 	andcs	r1, r0, r8, asr r2

0800d06c <RDMDeviceResponder::Init()>:
 800d06c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d06e:	2301      	movs	r3, #1
 800d070:	4604      	mov	r4, r0
 800d072:	f880 3056 	strb.w	r3, [r0, #86]	@ 0x56
 800d076:	f894 2055 	ldrb.w	r2, [r4, #85]	@ 0x55
 800d07a:	2a20      	cmp	r2, #32
 800d07c:	bf28      	it	cs
 800d07e:	2220      	movcs	r2, #32
 800d080:	b087      	sub	sp, #28
 800d082:	3004      	adds	r0, #4
 800d084:	f104 0324 	add.w	r3, r4, #36	@ 0x24
 800d088:	4611      	mov	r1, r2
 800d08a:	3901      	subs	r1, #1
 800d08c:	d275      	bcs.n	800d17a <RDMDeviceResponder::Init()+0x10e>
 800d08e:	2501      	movs	r5, #1
 800d090:	2700      	movs	r7, #0
 800d092:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800d096:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800d09a:	4e49      	ldr	r6, [pc, #292]	@ (800d1c0 <RDMDeviceResponder::Init()+0x154>)
 800d09c:	9200      	str	r2, [sp, #0]
 800d09e:	6830      	ldr	r0, [r6, #0]
 800d0a0:	f88d 2017 	strb.w	r2, [sp, #23]
 800d0a4:	2109      	movs	r1, #9
 800d0a6:	2204      	movs	r2, #4
 800d0a8:	f006 f86e 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d0ac:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800d0b0:	9500      	str	r5, [sp, #0]
 800d0b2:	6830      	ldr	r0, [r6, #0]
 800d0b4:	f10d 0317 	add.w	r3, sp, #23
 800d0b8:	2224      	movs	r2, #36	@ 0x24
 800d0ba:	2109      	movs	r1, #9
 800d0bc:	f006 f864 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d0c0:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800d0c4:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800d0c8:	f894 0054 	ldrb.w	r0, [r4, #84]	@ 0x54
 800d0cc:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800d0d0:	1b2d      	subs	r5, r5, r4
 800d0d2:	18a9      	adds	r1, r5, r2
 800d0d4:	4288      	cmp	r0, r1
 800d0d6:	d854      	bhi.n	800d182 <RDMDeviceResponder::Init()+0x116>
 800d0d8:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800d0dc:	f7fc feee 	bl	8009ebc <RDMSoftwareVersion::GetVersionId()>
 800d0e0:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800d0e4:	f884 3076 	strb.w	r3, [r4, #118]	@ 0x76
 800d0e8:	2201      	movs	r2, #1
 800d0ea:	f884 2071 	strb.w	r2, [r4, #113]	@ 0x71
 800d0ee:	2200      	movs	r2, #0
 800d0f0:	f8a4 2072 	strh.w	r2, [r4, #114]	@ 0x72
 800d0f4:	f884 2074 	strb.w	r2, [r4, #116]	@ 0x74
 800d0f8:	0a1a      	lsrs	r2, r3, #8
 800d0fa:	0e03      	lsrs	r3, r0, #24
 800d0fc:	f884 3077 	strb.w	r3, [r4, #119]	@ 0x77
 800d100:	0c03      	lsrs	r3, r0, #16
 800d102:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
 800d106:	0a03      	lsrs	r3, r0, #8
 800d108:	f884 3079 	strb.w	r3, [r4, #121]	@ 0x79
 800d10c:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800d110:	f884 2075 	strb.w	r2, [r4, #117]	@ 0x75
 800d114:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800d118:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800d11a:	f884 007a 	strb.w	r0, [r4, #122]	@ 0x7a
 800d11e:	3b01      	subs	r3, #1
 800d120:	f8b4 6064 	ldrh.w	r6, [r4, #100]	@ 0x64
 800d124:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d128:	685d      	ldr	r5, [r3, #4]
 800d12a:	bb7d      	cbnz	r5, 800d18c <RDMDeviceResponder::Init()+0x120>
 800d12c:	f8b4 009c 	ldrh.w	r0, [r4, #156]	@ 0x9c
 800d130:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800d134:	0a03      	lsrs	r3, r0, #8
 800d136:	f884 507c 	strb.w	r5, [r4, #124]	@ 0x7c
 800d13a:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800d13e:	0a33      	lsrs	r3, r6, #8
 800d140:	b2c0      	uxtb	r0, r0
 800d142:	f884 3081 	strb.w	r3, [r4, #129]	@ 0x81
 800d146:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800d14a:	f884 3083 	strb.w	r3, [r4, #131]	@ 0x83
 800d14e:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800d152:	f884 6082 	strb.w	r6, [r4, #130]	@ 0x82
 800d156:	f104 0371 	add.w	r3, r4, #113	@ 0x71
 800d15a:	f104 0284 	add.w	r2, r4, #132	@ 0x84
 800d15e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d162:	7499      	strb	r1, [r3, #18]
 800d164:	429a      	cmp	r2, r3
 800d166:	d1fa      	bne.n	800d15e <RDMDeviceResponder::Init()+0xf2>
 800d168:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800d16c:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800d170:	4413      	add	r3, r2
 800d172:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800d176:	b007      	add	sp, #28
 800d178:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d17a:	f810 5b01 	ldrb.w	r5, [r0], #1
 800d17e:	77c5      	strb	r5, [r0, #31]
 800d180:	e783      	b.n	800d08a <RDMDeviceResponder::Init()+0x1e>
 800d182:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800d186:	440b      	add	r3, r1
 800d188:	b29b      	uxth	r3, r3
 800d18a:	e7a2      	b.n	800d0d2 <RDMDeviceResponder::Init()+0x66>
 800d18c:	682b      	ldr	r3, [r5, #0]
 800d18e:	4628      	mov	r0, r5
 800d190:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d192:	4798      	blx	r3
 800d194:	0a00      	lsrs	r0, r0, #8
 800d196:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800d19a:	682b      	ldr	r3, [r5, #0]
 800d19c:	4628      	mov	r0, r5
 800d19e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d1a0:	4798      	blx	r3
 800d1a2:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800d1a6:	682b      	ldr	r3, [r5, #0]
 800d1a8:	4628      	mov	r0, r5
 800d1aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d1ac:	4798      	blx	r3
 800d1ae:	0a00      	lsrs	r0, r0, #8
 800d1b0:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800d1b4:	682b      	ldr	r3, [r5, #0]
 800d1b6:	4628      	mov	r0, r5
 800d1b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d1ba:	4798      	blx	r3
 800d1bc:	e7bf      	b.n	800d13e <RDMDeviceResponder::Init()+0xd2>
 800d1be:	bf00      	nop
 800d1c0:	20002134 	andcs	r2, r0, r4, lsr r1

0800d1c4 <RDMDeviceResponder::Print()>:
 800d1c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1c6:	4604      	mov	r4, r0
 800d1c8:	3004      	adds	r0, #4
 800d1ca:	f000 ffbd 	bl	800e148 <RDMDevice::Print()>
 800d1ce:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800d1d2:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800d1d4:	481b      	ldr	r0, [pc, #108]	@ (800d244 <RDMDeviceResponder::Print()+0x80>)
 800d1d6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800d1da:	3b01      	subs	r3, #1
 800d1dc:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 800d1e0:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 800d1e2:	f009 fb2a 	bl	801683a <puts>
 800d1e6:	f894 2072 	ldrb.w	r2, [r4, #114]	@ 0x72
 800d1ea:	f894 1071 	ldrb.w	r1, [r4, #113]	@ 0x71
 800d1ee:	4816      	ldr	r0, [pc, #88]	@ (800d248 <RDMDeviceResponder::Print()+0x84>)
 800d1f0:	f009 face 	bl	8016790 <printf>
 800d1f4:	f8b4 107f 	ldrh.w	r1, [r4, #127]	@ 0x7f
 800d1f8:	4814      	ldr	r0, [pc, #80]	@ (800d24c <RDMDeviceResponder::Print()+0x88>)
 800d1fa:	ba49      	rev16	r1, r1
 800d1fc:	b289      	uxth	r1, r1
 800d1fe:	f009 fac7 	bl	8016790 <printf>
 800d202:	f8b4 107b 	ldrh.w	r1, [r4, #123]	@ 0x7b
 800d206:	4812      	ldr	r0, [pc, #72]	@ (800d250 <RDMDeviceResponder::Print()+0x8c>)
 800d208:	ba49      	rev16	r1, r1
 800d20a:	b289      	uxth	r1, r1
 800d20c:	3508      	adds	r5, #8
 800d20e:	f009 fabf 	bl	8016790 <printf>
 800d212:	9500      	str	r5, [sp, #0]
 800d214:	f894 207e 	ldrb.w	r2, [r4, #126]	@ 0x7e
 800d218:	f894 107d 	ldrb.w	r1, [r4, #125]	@ 0x7d
 800d21c:	480d      	ldr	r0, [pc, #52]	@ (800d254 <RDMDeviceResponder::Print()+0x90>)
 800d21e:	b2f3      	uxtb	r3, r6
 800d220:	f009 fab6 	bl	8016790 <printf>
 800d224:	f8b4 1081 	ldrh.w	r1, [r4, #129]	@ 0x81
 800d228:	480b      	ldr	r0, [pc, #44]	@ (800d258 <RDMDeviceResponder::Print()+0x94>)
 800d22a:	ba49      	rev16	r1, r1
 800d22c:	b289      	uxth	r1, r1
 800d22e:	f009 faaf 	bl	8016790 <printf>
 800d232:	f894 1083 	ldrb.w	r1, [r4, #131]	@ 0x83
 800d236:	4809      	ldr	r0, [pc, #36]	@ (800d25c <RDMDeviceResponder::Print()+0x98>)
 800d238:	b002      	add	sp, #8
 800d23a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d23e:	f009 baa7 	b.w	8016790 <printf>
 800d242:	bf00      	nop
 800d244:	080176d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, ip, sp, lr}
 800d248:	080176ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, ip, sp, lr}
 800d24c:	08017705 	stmdaeq	r1, {r0, r2, r8, r9, sl, ip, sp, lr}
 800d250:	0801771d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, ip, sp, lr}
 800d254:	08017735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, ip, sp, lr}
 800d258:	08017753 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, ip, sp, lr}
 800d25c:	0801776b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, ip, sp, lr}

0800d260 <memcpy.isra.0>:
 800d260:	440a      	add	r2, r1
 800d262:	4291      	cmp	r1, r2
 800d264:	d100      	bne.n	800d268 <memcpy.isra.0+0x8>
 800d266:	4770      	bx	lr
 800d268:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d26c:	f800 3b01 	strb.w	r3, [r0], #1
 800d270:	e7f7      	b.n	800d262 <memcpy.isra.0+0x2>
	...

0800d274 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800d274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d278:	790c      	ldrb	r4, [r1, #4]
 800d27a:	f890 3052 	ldrb.w	r3, [r0, #82]	@ 0x52
 800d27e:	6809      	ldr	r1, [r1, #0]
 800d280:	2c20      	cmp	r4, #32
 800d282:	b086      	sub	sp, #24
 800d284:	4605      	mov	r5, r0
 800d286:	bf28      	it	cs
 800d288:	2420      	movcs	r4, #32
 800d28a:	b313      	cbz	r3, 800d2d2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x5e>
 800d28c:	f100 0820 	add.w	r8, r0, #32
 800d290:	4622      	mov	r2, r4
 800d292:	4640      	mov	r0, r8
 800d294:	f7ff ffe4 	bl	800d260 <memcpy.isra.0>
 800d298:	2700      	movs	r7, #0
 800d29a:	f885 4050 	strb.w	r4, [r5, #80]	@ 0x50
 800d29e:	2501      	movs	r5, #1
 800d2a0:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800d2a4:	4e0e      	ldr	r6, [pc, #56]	@ (800d2e0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6c>)
 800d2a6:	9400      	str	r4, [sp, #0]
 800d2a8:	6830      	ldr	r0, [r6, #0]
 800d2aa:	f88d 4017 	strb.w	r4, [sp, #23]
 800d2ae:	4643      	mov	r3, r8
 800d2b0:	2204      	movs	r2, #4
 800d2b2:	2109      	movs	r1, #9
 800d2b4:	f005 ff68 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d2b8:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800d2bc:	9500      	str	r5, [sp, #0]
 800d2be:	6830      	ldr	r0, [r6, #0]
 800d2c0:	f10d 0317 	add.w	r3, sp, #23
 800d2c4:	2224      	movs	r2, #36	@ 0x24
 800d2c6:	2109      	movs	r1, #9
 800d2c8:	f005 ff5e 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d2cc:	b006      	add	sp, #24
 800d2ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d2d2:	4622      	mov	r2, r4
 800d2d4:	f7ff ffc4 	bl	800d260 <memcpy.isra.0>
 800d2d8:	f885 4051 	strb.w	r4, [r5, #81]	@ 0x51
 800d2dc:	e7f6      	b.n	800d2cc <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x58>
 800d2de:	bf00      	nop
 800d2e0:	20002134 	andcs	r2, r0, r4, lsr r1

0800d2e4 <RDMDeviceResponder::SetFactoryDefaults()>:
 800d2e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2e6:	4604      	mov	r4, r0
 800d2e8:	4669      	mov	r1, sp
 800d2ea:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800d2ee:	f88d 3004 	strb.w	r3, [sp, #4]
 800d2f2:	3004      	adds	r0, #4
 800d2f4:	9000      	str	r0, [sp, #0]
 800d2f6:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800d2fa:	f7ff ffbb 	bl	800d274 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800d2fe:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800d302:	f894 1054 	ldrb.w	r1, [r4, #84]	@ 0x54
 800d306:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800d30a:	1b2d      	subs	r5, r5, r4
 800d30c:	18a8      	adds	r0, r5, r2
 800d30e:	4288      	cmp	r0, r1
 800d310:	d361      	bcc.n	800d3d6 <RDMDeviceResponder::SetFactoryDefaults()+0xf2>
 800d312:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800d316:	2301      	movs	r3, #1
 800d318:	f884 307d 	strb.w	r3, [r4, #125]	@ 0x7d
 800d31c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800d31e:	681b      	ldr	r3, [r3, #0]
 800d320:	685d      	ldr	r5, [r3, #4]
 800d322:	b1f5      	cbz	r5, 800d362 <RDMDeviceResponder::SetFactoryDefaults()+0x7e>
 800d324:	682b      	ldr	r3, [r5, #0]
 800d326:	4628      	mov	r0, r5
 800d328:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d32a:	4798      	blx	r3
 800d32c:	0a00      	lsrs	r0, r0, #8
 800d32e:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800d332:	682b      	ldr	r3, [r5, #0]
 800d334:	4628      	mov	r0, r5
 800d336:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d338:	4798      	blx	r3
 800d33a:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800d33e:	682b      	ldr	r3, [r5, #0]
 800d340:	4628      	mov	r0, r5
 800d342:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d344:	4798      	blx	r3
 800d346:	0a00      	lsrs	r0, r0, #8
 800d348:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800d34c:	682b      	ldr	r3, [r5, #0]
 800d34e:	4628      	mov	r0, r5
 800d350:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d352:	4798      	blx	r3
 800d354:	6823      	ldr	r3, [r4, #0]
 800d356:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800d35a:	689b      	ldr	r3, [r3, #8]
 800d35c:	4629      	mov	r1, r5
 800d35e:	4620      	mov	r0, r4
 800d360:	4798      	blx	r3
 800d362:	f8b4 509c 	ldrh.w	r5, [r4, #156]	@ 0x9c
 800d366:	1e6b      	subs	r3, r5, #1
 800d368:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d36c:	d217      	bcs.n	800d39e <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800d36e:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800d372:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800d374:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800d378:	3b01      	subs	r3, #1
 800d37a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d37e:	6858      	ldr	r0, [r3, #4]
 800d380:	b168      	cbz	r0, 800d39e <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800d382:	6803      	ldr	r3, [r0, #0]
 800d384:	4629      	mov	r1, r5
 800d386:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d388:	4798      	blx	r3
 800d38a:	b120      	cbz	r0, 800d396 <RDMDeviceResponder::SetFactoryDefaults()+0xb2>
 800d38c:	0a2b      	lsrs	r3, r5, #8
 800d38e:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800d392:	f884 5080 	strb.w	r5, [r4, #128]	@ 0x80
 800d396:	6823      	ldr	r3, [r4, #0]
 800d398:	4620      	mov	r0, r4
 800d39a:	68db      	ldr	r3, [r3, #12]
 800d39c:	4798      	blx	r3
 800d39e:	f104 0171 	add.w	r1, r4, #113	@ 0x71
 800d3a2:	2213      	movs	r2, #19
 800d3a4:	f104 0084 	add.w	r0, r4, #132	@ 0x84
 800d3a8:	f7ff ff5a 	bl	800d260 <memcpy.isra.0>
 800d3ac:	2601      	movs	r6, #1
 800d3ae:	2100      	movs	r1, #0
 800d3b0:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 800d3b4:	4299      	cmp	r1, r3
 800d3b6:	d313      	bcc.n	800d3e0 <RDMDeviceResponder::SetFactoryDefaults()+0xfc>
 800d3b8:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800d3bc:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800d3c0:	4413      	add	r3, r2
 800d3c2:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800d3c6:	2301      	movs	r3, #1
 800d3c8:	f884 3099 	strb.w	r3, [r4, #153]	@ 0x99
 800d3cc:	b002      	add	sp, #8
 800d3ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d3d2:	f7fc bd4d 	b.w	8009e70 <rdm::device::responder::factorydefaults()>
 800d3d6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d3da:	4403      	add	r3, r0
 800d3dc:	b29b      	uxth	r3, r3
 800d3de:	e795      	b.n	800d30c <RDMDeviceResponder::SetFactoryDefaults()+0x28>
 800d3e0:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800d3e2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d3e6:	b193      	cbz	r3, 800d40e <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800d3e8:	7a1a      	ldrb	r2, [r3, #8]
 800d3ea:	b982      	cbnz	r2, 800d40e <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800d3ec:	f103 0015 	add.w	r0, r3, #21
 800d3f0:	f890 5023 	ldrb.w	r5, [r0, #35]	@ 0x23
 800d3f4:	b125      	cbz	r5, 800d400 <RDMDeviceResponder::SetFactoryDefaults()+0x11c>
 800d3f6:	3201      	adds	r2, #1
 800d3f8:	2a20      	cmp	r2, #32
 800d3fa:	f800 5f01 	strb.w	r5, [r0, #1]!
 800d3fe:	d1f7      	bne.n	800d3f0 <RDMDeviceResponder::SetFactoryDefaults()+0x10c>
 800d400:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800d404:	899a      	ldrh	r2, [r3, #12]
 800d406:	825a      	strh	r2, [r3, #18]
 800d408:	7b9a      	ldrb	r2, [r3, #14]
 800d40a:	751a      	strb	r2, [r3, #20]
 800d40c:	721e      	strb	r6, [r3, #8]
 800d40e:	3101      	adds	r1, #1
 800d410:	e7ce      	b.n	800d3b0 <RDMDeviceResponder::SetFactoryDefaults()+0xcc>

0800d412 <RDMHandler::RDMHandler(bool)>:
 800d412:	2200      	movs	r2, #0
 800d414:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800d418:	7001      	strb	r1, [r0, #0]
 800d41a:	7042      	strb	r2, [r0, #1]
 800d41c:	4770      	bx	lr

0800d41e <RDMHandler::HandleString(char const*, unsigned long)>:
 800d41e:	6883      	ldr	r3, [r0, #8]
 800d420:	f803 2f17 	strb.w	r2, [r3, #23]!
 800d424:	440a      	add	r2, r1
 800d426:	4291      	cmp	r1, r2
 800d428:	d100      	bne.n	800d42c <RDMHandler::HandleString(char const*, unsigned long)+0xe>
 800d42a:	4770      	bx	lr
 800d42c:	f811 0b01 	ldrb.w	r0, [r1], #1
 800d430:	f803 0f01 	strb.w	r0, [r3, #1]!
 800d434:	e7f7      	b.n	800d426 <RDMHandler::HandleString(char const*, unsigned long)+0x8>
	...

0800d438 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800d438:	b570      	push	{r4, r5, r6, lr}
 800d43a:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800d43e:	25cc      	movs	r5, #204	@ 0xcc
 800d440:	701d      	strb	r5, [r3, #0]
 800d442:	7825      	ldrb	r5, [r4, #0]
 800d444:	705d      	strb	r5, [r3, #1]
 800d446:	7ba5      	ldrb	r5, [r4, #14]
 800d448:	73dd      	strb	r5, [r3, #15]
 800d44a:	2500      	movs	r5, #0
 800d44c:	745d      	strb	r5, [r3, #17]
 800d44e:	7c65      	ldrb	r5, [r4, #17]
 800d450:	749d      	strb	r5, [r3, #18]
 800d452:	7ca5      	ldrb	r5, [r4, #18]
 800d454:	74dd      	strb	r5, [r3, #19]
 800d456:	7ce5      	ldrb	r5, [r4, #19]
 800d458:	3501      	adds	r5, #1
 800d45a:	751d      	strb	r5, [r3, #20]
 800d45c:	7d25      	ldrb	r5, [r4, #20]
 800d45e:	755d      	strb	r5, [r3, #21]
 800d460:	7d65      	ldrb	r5, [r4, #21]
 800d462:	759d      	strb	r5, [r3, #22]
 800d464:	b119      	cbz	r1, 800d46e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800d466:	1e4d      	subs	r5, r1, #1
 800d468:	2d01      	cmp	r5, #1
 800d46a:	d91f      	bls.n	800d4ac <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x74>
 800d46c:	bd70      	pop	{r4, r5, r6, pc}
 800d46e:	7dda      	ldrb	r2, [r3, #23]
 800d470:	7419      	strb	r1, [r3, #16]
 800d472:	3218      	adds	r2, #24
 800d474:	709a      	strb	r2, [r3, #2]
 800d476:	4a14      	ldr	r2, [pc, #80]	@ (800d4c8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x90>)
 800d478:	6812      	ldr	r2, [r2, #0]
 800d47a:	1de1      	adds	r1, r4, #7
 800d47c:	1c9d      	adds	r5, r3, #2
 800d47e:	3249      	adds	r2, #73	@ 0x49
 800d480:	340d      	adds	r4, #13
 800d482:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800d486:	f805 6f01 	strb.w	r6, [r5, #1]!
 800d48a:	42a1      	cmp	r1, r4
 800d48c:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800d490:	71ae      	strb	r6, [r5, #6]
 800d492:	d1f6      	bne.n	800d482 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800d494:	2200      	movs	r2, #0
 800d496:	6884      	ldr	r4, [r0, #8]
 800d498:	7899      	ldrb	r1, [r3, #2]
 800d49a:	4613      	mov	r3, r2
 800d49c:	4291      	cmp	r1, r2
 800d49e:	d80e      	bhi.n	800d4be <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x86>
 800d4a0:	0a1d      	lsrs	r5, r3, #8
 800d4a2:	54a5      	strb	r5, [r4, r2]
 800d4a4:	6882      	ldr	r2, [r0, #8]
 800d4a6:	440a      	add	r2, r1
 800d4a8:	7053      	strb	r3, [r2, #1]
 800d4aa:	e7df      	b.n	800d46c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800d4ac:	7419      	strb	r1, [r3, #16]
 800d4ae:	2102      	movs	r1, #2
 800d4b0:	251a      	movs	r5, #26
 800d4b2:	75d9      	strb	r1, [r3, #23]
 800d4b4:	0a11      	lsrs	r1, r2, #8
 800d4b6:	709d      	strb	r5, [r3, #2]
 800d4b8:	7619      	strb	r1, [r3, #24]
 800d4ba:	765a      	strb	r2, [r3, #25]
 800d4bc:	e7db      	b.n	800d476 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800d4be:	5ca5      	ldrb	r5, [r4, r2]
 800d4c0:	442b      	add	r3, r5
 800d4c2:	b29b      	uxth	r3, r3
 800d4c4:	3201      	adds	r2, #1
 800d4c6:	e7e9      	b.n	800d49c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800d4c8:	20001258 	andcs	r1, r0, r8, asr r2

0800d4cc <RDMHandler::RespondMessageAck()>:
 800d4cc:	2200      	movs	r2, #0
 800d4ce:	4611      	mov	r1, r2
 800d4d0:	f7ff bfb2 	b.w	800d438 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800d4d4 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800d4d4:	4b1c      	ldr	r3, [pc, #112]	@ (800d548 <RDMHandler::GetDeviceInfo(unsigned short)+0x74>)
 800d4d6:	b510      	push	{r4, lr}
 800d4d8:	681b      	ldr	r3, [r3, #0]
 800d4da:	4604      	mov	r4, r0
 800d4dc:	b351      	cbz	r1, 800d534 <RDMHandler::GetDeviceInfo(unsigned short)+0x60>
 800d4de:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800d4e2:	3901      	subs	r1, #1
 800d4e4:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800d4e6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800d4ea:	8a11      	ldrh	r1, [r2, #16]
 800d4ec:	0a09      	lsrs	r1, r1, #8
 800d4ee:	f883 108e 	strb.w	r1, [r3, #142]	@ 0x8e
 800d4f2:	8a11      	ldrh	r1, [r2, #16]
 800d4f4:	f883 108f 	strb.w	r1, [r3, #143]	@ 0x8f
 800d4f8:	7d11      	ldrb	r1, [r2, #20]
 800d4fa:	f883 1090 	strb.w	r1, [r3, #144]	@ 0x90
 800d4fe:	7d51      	ldrb	r1, [r2, #21]
 800d500:	f883 1091 	strb.w	r1, [r3, #145]	@ 0x91
 800d504:	8a51      	ldrh	r1, [r2, #18]
 800d506:	0a09      	lsrs	r1, r1, #8
 800d508:	f883 1092 	strb.w	r1, [r3, #146]	@ 0x92
 800d50c:	8a51      	ldrh	r1, [r2, #18]
 800d50e:	f883 1093 	strb.w	r1, [r3, #147]	@ 0x93
 800d512:	f892 2037 	ldrb.w	r2, [r2, #55]	@ 0x37
 800d516:	f883 2096 	strb.w	r2, [r3, #150]	@ 0x96
 800d51a:	f103 0184 	add.w	r1, r3, #132	@ 0x84
 800d51e:	68a0      	ldr	r0, [r4, #8]
 800d520:	2213      	movs	r2, #19
 800d522:	75c2      	strb	r2, [r0, #23]
 800d524:	3018      	adds	r0, #24
 800d526:	f7ff fe9b 	bl	800d260 <memcpy.isra.0>
 800d52a:	4620      	mov	r0, r4
 800d52c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d530:	f7ff bfcc 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d534:	f8b3 2044 	ldrh.w	r2, [r3, #68]	@ 0x44
 800d538:	f883 2076 	strb.w	r2, [r3, #118]	@ 0x76
 800d53c:	0a11      	lsrs	r1, r2, #8
 800d53e:	f883 1075 	strb.w	r1, [r3, #117]	@ 0x75
 800d542:	f103 0171 	add.w	r1, r3, #113	@ 0x71
 800d546:	e7ea      	b.n	800d51e <RDMHandler::GetDeviceInfo(unsigned short)+0x4a>
 800d548:	20001258 	andcs	r1, r0, r8, asr r2

0800d54c <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800d54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d550:	6887      	ldr	r7, [r0, #8]
 800d552:	2301      	movs	r3, #1
 800d554:	75fb      	strb	r3, [r7, #23]
 800d556:	4b2c      	ldr	r3, [pc, #176]	@ (800d608 <RDMHandler::GetFactoryDefaults(unsigned short)+0xbc>)
 800d558:	681b      	ldr	r3, [r3, #0]
 800d55a:	f893 1099 	ldrb.w	r1, [r3, #153]	@ 0x99
 800d55e:	b309      	cbz	r1, 800d5a4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x58>
 800d560:	f06f 0e22 	mvn.w	lr, #34	@ 0x22
 800d564:	f8b3 5048 	ldrh.w	r5, [r3, #72]	@ 0x48
 800d568:	f893 2055 	ldrb.w	r2, [r3, #85]	@ 0x55
 800d56c:	f893 c054 	ldrb.w	ip, [r3, #84]	@ 0x54
 800d570:	f103 0423 	add.w	r4, r3, #35	@ 0x23
 800d574:	ebae 0e03 	sub.w	lr, lr, r3
 800d578:	eb0e 0604 	add.w	r6, lr, r4
 800d57c:	45b4      	cmp	ip, r6
 800d57e:	d813      	bhi.n	800d5a8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x5c>
 800d580:	4295      	cmp	r5, r2
 800d582:	d130      	bne.n	800d5e6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800d584:	f893 2080 	ldrb.w	r2, [r3, #128]	@ 0x80
 800d588:	f893 507d 	ldrb.w	r5, [r3, #125]	@ 0x7d
 800d58c:	f8b3 409a 	ldrh.w	r4, [r3, #154]	@ 0x9a
 800d590:	442a      	add	r2, r5
 800d592:	4294      	cmp	r4, r2
 800d594:	d127      	bne.n	800d5e6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800d596:	f8b3 c064 	ldrh.w	ip, [r3, #100]	@ 0x64
 800d59a:	2500      	movs	r5, #0
 800d59c:	f06f 0e14 	mvn.w	lr, #20
 800d5a0:	4565      	cmp	r5, ip
 800d5a2:	d306      	bcc.n	800d5b2 <RDMHandler::GetFactoryDefaults(unsigned short)+0x66>
 800d5a4:	460b      	mov	r3, r1
 800d5a6:	e022      	b.n	800d5ee <RDMHandler::GetFactoryDefaults(unsigned short)+0xa2>
 800d5a8:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 800d5ac:	4432      	add	r2, r6
 800d5ae:	b292      	uxth	r2, r2
 800d5b0:	e7e2      	b.n	800d578 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800d5b2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800d5b4:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800d5b8:	b31a      	cbz	r2, 800d602 <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800d5ba:	7a14      	ldrb	r4, [r2, #8]
 800d5bc:	b19c      	cbz	r4, 800d5e6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800d5be:	7d16      	ldrb	r6, [r2, #20]
 800d5c0:	8a54      	ldrh	r4, [r2, #18]
 800d5c2:	f8b2 800a 	ldrh.w	r8, [r2, #10]
 800d5c6:	f892 9036 	ldrb.w	r9, [r2, #54]	@ 0x36
 800d5ca:	4434      	add	r4, r6
 800d5cc:	b2a4      	uxth	r4, r4
 800d5ce:	f102 0615 	add.w	r6, r2, #21
 800d5d2:	ebae 0a02 	sub.w	sl, lr, r2
 800d5d6:	eb0a 0b06 	add.w	fp, sl, r6
 800d5da:	45cb      	cmp	fp, r9
 800d5dc:	d30c      	bcc.n	800d5f8 <RDMHandler::GetFactoryDefaults(unsigned short)+0xac>
 800d5de:	45a0      	cmp	r8, r4
 800d5e0:	d00f      	beq.n	800d602 <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800d5e2:	2100      	movs	r1, #0
 800d5e4:	7211      	strb	r1, [r2, #8]
 800d5e6:	2200      	movs	r2, #0
 800d5e8:	f883 2099 	strb.w	r2, [r3, #153]	@ 0x99
 800d5ec:	4613      	mov	r3, r2
 800d5ee:	763b      	strb	r3, [r7, #24]
 800d5f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5f4:	f7ff bf6a 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d5f8:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 800d5fc:	445c      	add	r4, fp
 800d5fe:	b2a4      	uxth	r4, r4
 800d600:	e7e9      	b.n	800d5d6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x8a>
 800d602:	3501      	adds	r5, #1
 800d604:	e7cc      	b.n	800d5a0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800d606:	bf00      	nop
 800d608:	20001258 	andcs	r1, r0, r8, asr r2

0800d60c <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800d60c:	b510      	push	{r4, lr}
 800d60e:	4905      	ldr	r1, [pc, #20]	@ (800d624 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800d610:	4604      	mov	r4, r0
 800d612:	220e      	movs	r2, #14
 800d614:	f7ff ff03 	bl	800d41e <RDMHandler::HandleString(char const*, unsigned long)>
 800d618:	4620      	mov	r0, r4
 800d61a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d61e:	f7ff bf55 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d622:	bf00      	nop
 800d624:	080174ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp, lr}

0800d628 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800d628:	4b0d      	ldr	r3, [pc, #52]	@ (800d660 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800d62a:	b510      	push	{r4, lr}
 800d62c:	681b      	ldr	r3, [r3, #0]
 800d62e:	4604      	mov	r4, r0
 800d630:	b189      	cbz	r1, 800d656 <RDMHandler::GetDeviceLabel(unsigned short)+0x2e>
 800d632:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800d636:	3901      	subs	r1, #1
 800d638:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800d63a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d63e:	f893 2036 	ldrb.w	r2, [r3, #54]	@ 0x36
 800d642:	f103 0116 	add.w	r1, r3, #22
 800d646:	4620      	mov	r0, r4
 800d648:	f7ff fee9 	bl	800d41e <RDMHandler::HandleString(char const*, unsigned long)>
 800d64c:	4620      	mov	r0, r4
 800d64e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d652:	f7ff bf3b 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d656:	f893 2054 	ldrb.w	r2, [r3, #84]	@ 0x54
 800d65a:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 800d65e:	e7f2      	b.n	800d646 <RDMHandler::GetDeviceLabel(unsigned short)+0x1e>
 800d660:	20001258 	andcs	r1, r0, r8, asr r2

0800d664 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800d664:	6883      	ldr	r3, [r0, #8]
 800d666:	2201      	movs	r2, #1
 800d668:	75da      	strb	r2, [r3, #23]
 800d66a:	4a02      	ldr	r2, [pc, #8]	@ (800d674 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800d66c:	7812      	ldrb	r2, [r2, #0]
 800d66e:	761a      	strb	r2, [r3, #24]
 800d670:	f7ff bf2c 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d674:	20001261 	andcs	r1, r0, r1, ror #4

0800d678 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800d678:	4b0a      	ldr	r3, [pc, #40]	@ (800d6a4 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800d67a:	b510      	push	{r4, lr}
 800d67c:	4619      	mov	r1, r3
 800d67e:	4604      	mov	r4, r0
 800d680:	461a      	mov	r2, r3
 800d682:	3301      	adds	r3, #1
 800d684:	7810      	ldrb	r0, [r2, #0]
 800d686:	2800      	cmp	r0, #0
 800d688:	d1fa      	bne.n	800d680 <RDMHandler::GetManufacturerLabel(unsigned short)+0x8>
 800d68a:	1a52      	subs	r2, r2, r1
 800d68c:	2a20      	cmp	r2, #32
 800d68e:	4620      	mov	r0, r4
 800d690:	4904      	ldr	r1, [pc, #16]	@ (800d6a4 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800d692:	bf28      	it	cs
 800d694:	2220      	movcs	r2, #32
 800d696:	f7ff fec2 	bl	800d41e <RDMHandler::HandleString(char const*, unsigned long)>
 800d69a:	4620      	mov	r0, r4
 800d69c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6a0:	f7ff bf14 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d6a4:	0801a44f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp, pc}

0800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>:
 800d6a8:	460a      	mov	r2, r1
 800d6aa:	2102      	movs	r1, #2
 800d6ac:	f7ff bec4 	b.w	800d438 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800d6b0 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800d6b0:	b510      	push	{r4, lr}
 800d6b2:	6843      	ldr	r3, [r0, #4]
 800d6b4:	7d9a      	ldrb	r2, [r3, #22]
 800d6b6:	2a01      	cmp	r2, #1
 800d6b8:	4604      	mov	r4, r0
 800d6ba:	d004      	beq.n	800d6c6 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800d6bc:	2101      	movs	r1, #1
 800d6be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6c2:	f7ff bff1 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800d6c6:	7ddb      	ldrb	r3, [r3, #23]
 800d6c8:	2b01      	cmp	r3, #1
 800d6ca:	d003      	beq.n	800d6d4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800d6cc:	2bff      	cmp	r3, #255	@ 0xff
 800d6ce:	d001      	beq.n	800d6d4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800d6d0:	2106      	movs	r1, #6
 800d6d2:	e7f4      	b.n	800d6be <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800d6d4:	68a2      	ldr	r2, [r4, #8]
 800d6d6:	2100      	movs	r1, #0
 800d6d8:	2bff      	cmp	r3, #255	@ 0xff
 800d6da:	75d1      	strb	r1, [r2, #23]
 800d6dc:	d102      	bne.n	800d6e4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800d6de:	2104      	movs	r1, #4
 800d6e0:	4620      	mov	r0, r4
 800d6e2:	e7ec      	b.n	800d6be <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800d6e4:	4b03      	ldr	r3, [pc, #12]	@ (800d6f4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800d6e6:	6818      	ldr	r0, [r3, #0]
 800d6e8:	f006 ff00 	bl	80144ec <Hardware::Reboot()>
 800d6ec:	2800      	cmp	r0, #0
 800d6ee:	d0f6      	beq.n	800d6de <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800d6f0:	bd10      	pop	{r4, pc}
 800d6f2:	bf00      	nop
 800d6f4:	20002238 	andcs	r2, r0, r8, lsr r2

0800d6f8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800d6f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6fa:	6843      	ldr	r3, [r0, #4]
 800d6fc:	7d9a      	ldrb	r2, [r3, #22]
 800d6fe:	2a01      	cmp	r2, #1
 800d700:	4604      	mov	r4, r0
 800d702:	460d      	mov	r5, r1
 800d704:	d004      	beq.n	800d710 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800d706:	2101      	movs	r1, #1
 800d708:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d70c:	f7ff bfcc 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800d710:	7ddb      	ldrb	r3, [r3, #23]
 800d712:	2b01      	cmp	r3, #1
 800d714:	d901      	bls.n	800d71a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800d716:	2106      	movs	r1, #6
 800d718:	e7f6      	b.n	800d708 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800d71a:	4912      	ldr	r1, [pc, #72]	@ (800d764 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800d71c:	4f12      	ldr	r7, [pc, #72]	@ (800d768 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800d71e:	680e      	ldr	r6, [r1, #0]
 800d720:	4912      	ldr	r1, [pc, #72]	@ (800d76c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800d722:	6808      	ldr	r0, [r1, #0]
 800d724:	4912      	ldr	r1, [pc, #72]	@ (800d770 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800d726:	b98b      	cbnz	r3, 800d74c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x54>
 800d728:	700b      	strb	r3, [r1, #0]
 800d72a:	461a      	mov	r2, r3
 800d72c:	2102      	movs	r1, #2
 800d72e:	f006 fcdd 	bl	80140ec <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800d732:	7839      	ldrb	r1, [r7, #0]
 800d734:	b111      	cbz	r1, 800d73c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800d736:	4630      	mov	r0, r6
 800d738:	f000 f9a7 	bl	800da8a <RDMIdentify::Off(rdm::identify::Mode)>
 800d73c:	b98d      	cbnz	r5, 800d762 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6a>
 800d73e:	68a3      	ldr	r3, [r4, #8]
 800d740:	75dd      	strb	r5, [r3, #23]
 800d742:	4620      	mov	r0, r4
 800d744:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d748:	f7ff bec0 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d74c:	700a      	strb	r2, [r1, #0]
 800d74e:	2104      	movs	r1, #4
 800d750:	f006 fccc 	bl	80140ec <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800d754:	7839      	ldrb	r1, [r7, #0]
 800d756:	2900      	cmp	r1, #0
 800d758:	d0f0      	beq.n	800d73c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800d75a:	4630      	mov	r0, r6
 800d75c:	f000 f994 	bl	800da88 <RDMIdentify::On(rdm::identify::Mode)>
 800d760:	e7ec      	b.n	800d73c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800d762:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d764:	2000125c 	andcs	r1, r0, ip, asr r2
 800d768:	20001260 	andcs	r1, r0, r0, ror #4
 800d76c:	20002238 	andcs	r2, r0, r8, lsr r2
 800d770:	20001261 	andcs	r1, r0, r1, ror #4

0800d774 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800d774:	b538      	push	{r3, r4, r5, lr}
 800d776:	6843      	ldr	r3, [r0, #4]
 800d778:	7d9b      	ldrb	r3, [r3, #22]
 800d77a:	4604      	mov	r4, r0
 800d77c:	460d      	mov	r5, r1
 800d77e:	b123      	cbz	r3, 800d78a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800d780:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d784:	2101      	movs	r1, #1
 800d786:	f7ff bf8f 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800d78a:	4b06      	ldr	r3, [pc, #24]	@ (800d7a4 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800d78c:	6818      	ldr	r0, [r3, #0]
 800d78e:	f7ff fda9 	bl	800d2e4 <RDMDeviceResponder::SetFactoryDefaults()>
 800d792:	b935      	cbnz	r5, 800d7a2 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800d794:	68a3      	ldr	r3, [r4, #8]
 800d796:	75dd      	strb	r5, [r3, #23]
 800d798:	4620      	mov	r0, r4
 800d79a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d79e:	f7ff be95 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d7a2:	bd38      	pop	{r3, r4, r5, pc}
 800d7a4:	20001258 	andcs	r1, r0, r8, asr r2

0800d7a8 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800d7a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d7aa:	6843      	ldr	r3, [r0, #4]
 800d7ac:	460d      	mov	r5, r1
 800d7ae:	7d99      	ldrb	r1, [r3, #22]
 800d7b0:	2920      	cmp	r1, #32
 800d7b2:	4604      	mov	r4, r0
 800d7b4:	d905      	bls.n	800d7c2 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1a>
 800d7b6:	2101      	movs	r1, #1
 800d7b8:	b003      	add	sp, #12
 800d7ba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d7be:	f7ff bf73 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800d7c2:	4817      	ldr	r0, [pc, #92]	@ (800d820 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x78>)
 800d7c4:	6800      	ldr	r0, [r0, #0]
 800d7c6:	b302      	cbz	r2, 800d80a <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x62>
 800d7c8:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800d7cc:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800d7ce:	3a01      	subs	r2, #1
 800d7d0:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800d7d4:	b1b9      	cbz	r1, 800d806 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x5e>
 800d7d6:	3316      	adds	r3, #22
 800d7d8:	f100 0615 	add.w	r6, r0, #21
 800d7dc:	2200      	movs	r2, #0
 800d7de:	3201      	adds	r2, #1
 800d7e0:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800d7e4:	f806 7f01 	strb.w	r7, [r6, #1]!
 800d7e8:	2a20      	cmp	r2, #32
 800d7ea:	d001      	beq.n	800d7f0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800d7ec:	4291      	cmp	r1, r2
 800d7ee:	d8f6      	bhi.n	800d7de <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x36>
 800d7f0:	f880 2036 	strb.w	r2, [r0, #54]	@ 0x36
 800d7f4:	b995      	cbnz	r5, 800d81c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x74>
 800d7f6:	68a3      	ldr	r3, [r4, #8]
 800d7f8:	4620      	mov	r0, r4
 800d7fa:	75dd      	strb	r5, [r3, #23]
 800d7fc:	b003      	add	sp, #12
 800d7fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d802:	f7ff be63 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800d806:	460a      	mov	r2, r1
 800d808:	e7f2      	b.n	800d7f0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800d80a:	3317      	adds	r3, #23
 800d80c:	f88d 1004 	strb.w	r1, [sp, #4]
 800d810:	3004      	adds	r0, #4
 800d812:	4669      	mov	r1, sp
 800d814:	9300      	str	r3, [sp, #0]
 800d816:	f7ff fd2d 	bl	800d274 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800d81a:	e7eb      	b.n	800d7f4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4c>
 800d81c:	b003      	add	sp, #12
 800d81e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d820:	20001258 	andcs	r1, r0, r8, asr r2

0800d824 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800d824:	b4f0      	push	{r4, r5, r6, r7}
 800d826:	4615      	mov	r5, r2
 800d828:	f005 04ef 	and.w	r4, r5, #239	@ 0xef
 800d82c:	2c20      	cmp	r4, #32
 800d82e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800d832:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d836:	d003      	beq.n	800d840 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800d838:	2105      	movs	r1, #5
 800d83a:	bcf0      	pop	{r4, r5, r6, r7}
 800d83c:	f7ff bf34 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800d840:	4c28      	ldr	r4, [pc, #160]	@ (800d8e4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>)
 800d842:	6824      	ldr	r4, [r4, #0]
 800d844:	88a4      	ldrh	r4, [r4, #4]
 800d846:	4294      	cmp	r4, r2
 800d848:	d205      	bcs.n	800d856 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800d84a:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800d84e:	42a2      	cmp	r2, r4
 800d850:	d001      	beq.n	800d856 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800d852:	2109      	movs	r1, #9
 800d854:	e7f1      	b.n	800d83a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800d856:	4c24      	ldr	r4, [pc, #144]	@ (800d8e8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc4>)
 800d858:	4f24      	ldr	r7, [pc, #144]	@ (800d8ec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc8>)
 800d85a:	f8b4 c000 	ldrh.w	ip, [r4]
 800d85e:	459c      	cmp	ip, r3
 800d860:	d108      	bne.n	800d874 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x50>
 800d862:	f890 c000 	ldrb.w	ip, [r0]
 800d866:	7da7      	ldrb	r7, [r4, #22]
 800d868:	7de3      	ldrb	r3, [r4, #23]
 800d86a:	f1bc 0f00 	cmp.w	ip, #0
 800d86e:	d106      	bne.n	800d87e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5a>
 800d870:	b93b      	cbnz	r3, 800d882 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800d872:	e002      	b.n	800d87a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800d874:	3418      	adds	r4, #24
 800d876:	42bc      	cmp	r4, r7
 800d878:	d1ef      	bne.n	800d85a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800d87a:	2100      	movs	r1, #0
 800d87c:	e7dd      	b.n	800d83a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800d87e:	2f00      	cmp	r7, #0
 800d880:	d0fb      	beq.n	800d87a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800d882:	2d20      	cmp	r5, #32
 800d884:	d11b      	bne.n	800d8be <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x9a>
 800d886:	bb59      	cbnz	r1, 800d8e0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xbc>
 800d888:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d88c:	429a      	cmp	r2, r3
 800d88e:	d0e0      	beq.n	800d852 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2e>
 800d890:	6863      	ldr	r3, [r4, #4]
 800d892:	b913      	cbnz	r3, 800d89a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x76>
 800d894:	68a1      	ldr	r1, [r4, #8]
 800d896:	07cd      	lsls	r5, r1, #31
 800d898:	d5ce      	bpl.n	800d838 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800d89a:	7d21      	ldrb	r1, [r4, #20]
 800d89c:	42b1      	cmp	r1, r6
 800d89e:	d001      	beq.n	800d8a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x80>
 800d8a0:	2101      	movs	r1, #1
 800d8a2:	e7ca      	b.n	800d83a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800d8a4:	68a1      	ldr	r1, [r4, #8]
 800d8a6:	104d      	asrs	r5, r1, #1
 800d8a8:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800d8ac:	07c9      	lsls	r1, r1, #31
 800d8ae:	bf48      	it	mi
 800d8b0:	5941      	ldrmi	r1, [r0, r5]
 800d8b2:	4620      	mov	r0, r4
 800d8b4:	bf48      	it	mi
 800d8b6:	58cb      	ldrmi	r3, [r1, r3]
 800d8b8:	bcf0      	pop	{r4, r5, r6, r7}
 800d8ba:	4611      	mov	r1, r2
 800d8bc:	4718      	bx	r3
 800d8be:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800d8c2:	f003 0401 	and.w	r4, r3, #1
 800d8c6:	b90d      	cbnz	r5, 800d8cc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xa8>
 800d8c8:	2c00      	cmp	r4, #0
 800d8ca:	d0b5      	beq.n	800d838 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800d8cc:	105e      	asrs	r6, r3, #1
 800d8ce:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800d8d2:	b10c      	cbz	r4, 800d8d8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb4>
 800d8d4:	5980      	ldr	r0, [r0, r6]
 800d8d6:	5945      	ldr	r5, [r0, r5]
 800d8d8:	4618      	mov	r0, r3
 800d8da:	462b      	mov	r3, r5
 800d8dc:	bcf0      	pop	{r4, r5, r6, r7}
 800d8de:	4718      	bx	r3
 800d8e0:	bcf0      	pop	{r4, r5, r6, r7}
 800d8e2:	4770      	bx	lr
 800d8e4:	20001268 	andcs	r1, r0, r8, ror #4
 800d8e8:	0801a254 	stmdaeq	r1, {r2, r4, r6, r9, sp, pc}
 800d8ec:	0801a434 	stmdaeq	r1, {r2, r4, r5, sl, sp, pc}

0800d8f0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800d8f0:	23ff      	movs	r3, #255	@ 0xff
 800d8f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8f6:	7013      	strb	r3, [r2, #0]
 800d8f8:	7bcb      	ldrb	r3, [r1, #15]
 800d8fa:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800d8fe:	4607      	mov	r7, r0
 800d900:	468a      	mov	sl, r1
 800d902:	4614      	mov	r4, r2
 800d904:	2b00      	cmp	r3, #0
 800d906:	d079      	beq.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d908:	7c0b      	ldrb	r3, [r1, #16]
 800d90a:	2b00      	cmp	r3, #0
 800d90c:	d176      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d90e:	4b58      	ldr	r3, [pc, #352]	@ (800da70 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800d910:	1c8e      	adds	r6, r1, #2
 800d912:	2206      	movs	r2, #6
 800d914:	4957      	ldr	r1, [pc, #348]	@ (800da74 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800d916:	f8d3 8000 	ldr.w	r8, [r3]
 800d91a:	4630      	mov	r0, r6
 800d91c:	f7fe fcfc 	bl	800c318 <memcmp>
 800d920:	f108 094a 	add.w	r9, r8, #74	@ 0x4a
 800d924:	4605      	mov	r5, r0
 800d926:	2800      	cmp	r0, #0
 800d928:	d06b      	beq.n	800da02 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800d92a:	4630      	mov	r0, r6
 800d92c:	2202      	movs	r2, #2
 800d92e:	4649      	mov	r1, r9
 800d930:	f7fe fcf2 	bl	800c318 <memcmp>
 800d934:	4606      	mov	r6, r0
 800d936:	2800      	cmp	r0, #0
 800d938:	d160      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d93a:	f10a 0b04 	add.w	fp, sl, #4
 800d93e:	494d      	ldr	r1, [pc, #308]	@ (800da74 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800d940:	2204      	movs	r2, #4
 800d942:	4658      	mov	r0, fp
 800d944:	f7fe fce8 	bl	800c318 <memcmp>
 800d948:	4605      	mov	r5, r0
 800d94a:	2800      	cmp	r0, #0
 800d94c:	d059      	beq.n	800da02 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800d94e:	f108 014c 	add.w	r1, r8, #76	@ 0x4c
 800d952:	2204      	movs	r2, #4
 800d954:	4658      	mov	r0, fp
 800d956:	f7fe fcdf 	bl	800c318 <memcmp>
 800d95a:	fab0 f580 	clz	r5, r0
 800d95e:	096d      	lsrs	r5, r5, #5
 800d960:	4631      	mov	r1, r6
 800d962:	f89a 2013 	ldrb.w	r2, [sl, #19]
 800d966:	f8ba 3014 	ldrh.w	r3, [sl, #20]
 800d96a:	b90d      	cbnz	r5, 800d970 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x80>
 800d96c:	2900      	cmp	r1, #0
 800d96e:	d045      	beq.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d970:	2a10      	cmp	r2, #16
 800d972:	d16f      	bne.n	800da54 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x164>
 800d974:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d978:	d145      	bne.n	800da06 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x116>
 800d97a:	787b      	ldrb	r3, [r7, #1]
 800d97c:	2b00      	cmp	r3, #0
 800d97e:	d13d      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d980:	2206      	movs	r2, #6
 800d982:	4649      	mov	r1, r9
 800d984:	f10a 0017 	add.w	r0, sl, #23
 800d988:	f7fe fcc6 	bl	800c318 <memcmp>
 800d98c:	2800      	cmp	r0, #0
 800d98e:	dc35      	bgt.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d990:	2206      	movs	r2, #6
 800d992:	f10a 011d 	add.w	r1, sl, #29
 800d996:	4648      	mov	r0, r9
 800d998:	f7fe fcbe 	bl	800c318 <memcmp>
 800d99c:	2800      	cmp	r0, #0
 800d99e:	dc2d      	bgt.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800d9a0:	23fe      	movs	r3, #254	@ 0xfe
 800d9a2:	7023      	strb	r3, [r4, #0]
 800d9a4:	7063      	strb	r3, [r4, #1]
 800d9a6:	70a3      	strb	r3, [r4, #2]
 800d9a8:	70e3      	strb	r3, [r4, #3]
 800d9aa:	7123      	strb	r3, [r4, #4]
 800d9ac:	7163      	strb	r3, [r4, #5]
 800d9ae:	71a3      	strb	r3, [r4, #6]
 800d9b0:	23aa      	movs	r3, #170	@ 0xaa
 800d9b2:	71e3      	strb	r3, [r4, #7]
 800d9b4:	f108 0249 	add.w	r2, r8, #73	@ 0x49
 800d9b8:	4621      	mov	r1, r4
 800d9ba:	f108 084f 	add.w	r8, r8, #79	@ 0x4f
 800d9be:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 800d9c2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d9c6:	f060 0055 	orn	r0, r0, #85	@ 0x55
 800d9ca:	7208      	strb	r0, [r1, #8]
 800d9cc:	7810      	ldrb	r0, [r2, #0]
 800d9ce:	f040 0055 	orr.w	r0, r0, #85	@ 0x55
 800d9d2:	7248      	strb	r0, [r1, #9]
 800d9d4:	7810      	ldrb	r0, [r2, #0]
 800d9d6:	4542      	cmp	r2, r8
 800d9d8:	4403      	add	r3, r0
 800d9da:	b29b      	uxth	r3, r3
 800d9dc:	f101 0102 	add.w	r1, r1, #2
 800d9e0:	d1ef      	bne.n	800d9c2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xd2>
 800d9e2:	0a1a      	lsrs	r2, r3, #8
 800d9e4:	f062 0155 	orn	r1, r2, #85	@ 0x55
 800d9e8:	f042 0255 	orr.w	r2, r2, #85	@ 0x55
 800d9ec:	7562      	strb	r2, [r4, #21]
 800d9ee:	f063 0255 	orn	r2, r3, #85	@ 0x55
 800d9f2:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 800d9f6:	7521      	strb	r1, [r4, #20]
 800d9f8:	75a2      	strb	r2, [r4, #22]
 800d9fa:	75e3      	strb	r3, [r4, #23]
 800d9fc:	b003      	add	sp, #12
 800d9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da02:	2101      	movs	r1, #1
 800da04:	e7ad      	b.n	800d962 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800da06:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800da0a:	d11a      	bne.n	800da42 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x152>
 800da0c:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800da10:	2b00      	cmp	r3, #0
 800da12:	d1f3      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da14:	707b      	strb	r3, [r7, #1]
 800da16:	2900      	cmp	r1, #0
 800da18:	d1f0      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da1a:	2d00      	cmp	r5, #0
 800da1c:	d0ee      	beq.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da1e:	2302      	movs	r3, #2
 800da20:	75e3      	strb	r3, [r4, #23]
 800da22:	4b15      	ldr	r3, [pc, #84]	@ (800da78 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x188>)
 800da24:	7661      	strb	r1, [r4, #25]
 800da26:	681b      	ldr	r3, [r3, #0]
 800da28:	7621      	strb	r1, [r4, #24]
 800da2a:	889b      	ldrh	r3, [r3, #4]
 800da2c:	3b00      	subs	r3, #0
 800da2e:	bf18      	it	ne
 800da30:	2301      	movne	r3, #1
 800da32:	005b      	lsls	r3, r3, #1
 800da34:	4638      	mov	r0, r7
 800da36:	7663      	strb	r3, [r4, #25]
 800da38:	b003      	add	sp, #12
 800da3a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da3e:	f7ff bd45 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800da42:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800da46:	d1d9      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da48:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800da4c:	2b00      	cmp	r3, #0
 800da4e:	d1d5      	bne.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da50:	2301      	movs	r3, #1
 800da52:	e7df      	b.n	800da14 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x124>
 800da54:	f8ba 0011 	ldrh.w	r0, [sl, #17]
 800da58:	ba40      	rev16	r0, r0
 800da5a:	b280      	uxth	r0, r0
 800da5c:	9001      	str	r0, [sp, #4]
 800da5e:	f89a 0016 	ldrb.w	r0, [sl, #22]
 800da62:	9000      	str	r0, [sp, #0]
 800da64:	ba5b      	rev16	r3, r3
 800da66:	b29b      	uxth	r3, r3
 800da68:	4638      	mov	r0, r7
 800da6a:	f7ff fedb 	bl	800d824 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800da6e:	e7c5      	b.n	800d9fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800da70:	20001258 	andcs	r1, r0, r8, asr r2
 800da74:	0801a434 	stmdaeq	r1, {r2, r4, r5, sl, sp, pc}
 800da78:	20001268 	andcs	r1, r0, r8, ror #4

0800da7c <RDMIdentify::RDMIdentify()>:
 800da7c:	4b01      	ldr	r3, [pc, #4]	@ (800da84 <RDMIdentify::RDMIdentify()+0x8>)
 800da7e:	6018      	str	r0, [r3, #0]
 800da80:	4770      	bx	lr
 800da82:	bf00      	nop
 800da84:	2000125c 	andcs	r1, r0, ip, asr r2

0800da88 <RDMIdentify::On(rdm::identify::Mode)>:
 800da88:	4770      	bx	lr

0800da8a <RDMIdentify::Off(rdm::identify::Mode)>:
 800da8a:	4770      	bx	lr

0800da8c <memcpy.isra.0>:
 800da8c:	440a      	add	r2, r1
 800da8e:	4291      	cmp	r1, r2
 800da90:	d100      	bne.n	800da94 <memcpy.isra.0+0x8>
 800da92:	4770      	bx	lr
 800da94:	f811 3b01 	ldrb.w	r3, [r1], #1
 800da98:	f800 3b01 	strb.w	r3, [r0], #1
 800da9c:	e7f7      	b.n	800da8e <memcpy.isra.0+0x2>
	...

0800daa0 <LLRPDevice::HandleRequestMessage()>:
 800daa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800daa4:	4e43      	ldr	r6, [pc, #268]	@ (800dbb4 <LLRPDevice::HandleRequestMessage()+0x114>)
 800daa6:	4f44      	ldr	r7, [pc, #272]	@ (800dbb8 <LLRPDevice::HandleRequestMessage()+0x118>)
 800daa8:	6835      	ldr	r5, [r6, #0]
 800daaa:	6839      	ldr	r1, [r7, #0]
 800daac:	f895 4042 	ldrb.w	r4, [r5, #66]	@ 0x42
 800dab0:	f8b5 3043 	ldrh.w	r3, [r5, #67]	@ 0x43
 800dab4:	0424      	lsls	r4, r4, #16
 800dab6:	ba5b      	rev16	r3, r3
 800dab8:	b089      	sub	sp, #36	@ 0x24
 800daba:	b29b      	uxth	r3, r3
 800dabc:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
 800dac0:	431c      	orrs	r4, r3
 800dac2:	2206      	movs	r2, #6
 800dac4:	314a      	adds	r1, #74	@ 0x4a
 800dac6:	a802      	add	r0, sp, #8
 800dac8:	f7ff ffe0 	bl	800da8c <memcpy.isra.0>
 800dacc:	2c12      	cmp	r4, #18
 800dace:	d909      	bls.n	800dae4 <LLRPDevice::HandleRequestMessage()+0x44>
 800dad0:	f105 0954 	add.w	r9, r5, #84	@ 0x54
 800dad4:	f04f 0800 	mov.w	r8, #0
 800dad8:	3c12      	subs	r4, #18
 800dada:	2306      	movs	r3, #6
 800dadc:	fbb4 f4f3 	udiv	r4, r4, r3
 800dae0:	45a0      	cmp	r8, r4
 800dae2:	d15b      	bne.n	800db9c <LLRPDevice::HandleRequestMessage()+0xfc>
 800dae4:	2206      	movs	r2, #6
 800dae6:	a902      	add	r1, sp, #8
 800dae8:	f105 0046 	add.w	r0, r5, #70	@ 0x46
 800daec:	f7fe fc14 	bl	800c318 <memcmp>
 800daf0:	2800      	cmp	r0, #0
 800daf2:	dc50      	bgt.n	800db96 <LLRPDevice::HandleRequestMessage()+0xf6>
 800daf4:	2206      	movs	r2, #6
 800daf6:	f105 014c 	add.w	r1, r5, #76	@ 0x4c
 800dafa:	a802      	add	r0, sp, #8
 800dafc:	f7fe fc0c 	bl	800c318 <memcmp>
 800db00:	2800      	cmp	r0, #0
 800db02:	dc48      	bgt.n	800db96 <LLRPDevice::HandleRequestMessage()+0xf6>
 800db04:	6834      	ldr	r4, [r6, #0]
 800db06:	2210      	movs	r2, #16
 800db08:	f104 0517 	add.w	r5, r4, #23
 800db0c:	4629      	mov	r1, r5
 800db0e:	eb0d 0002 	add.w	r0, sp, r2
 800db12:	f7ff ffbb 	bl	800da8c <memcpy.isra.0>
 800db16:	2343      	movs	r3, #67	@ 0x43
 800db18:	74a3      	strb	r3, [r4, #18]
 800db1a:	4b28      	ldr	r3, [pc, #160]	@ (800dbbc <LLRPDevice::HandleRequestMessage()+0x11c>)
 800db1c:	4628      	mov	r0, r5
 800db1e:	6819      	ldr	r1, [r3, #0]
 800db20:	4d27      	ldr	r5, [pc, #156]	@ (800dbc0 <LLRPDevice::HandleRequestMessage()+0x120>)
 800db22:	2210      	movs	r2, #16
 800db24:	f7ff ffb2 	bl	800da8c <memcpy.isra.0>
 800db28:	232c      	movs	r3, #44	@ 0x2c
 800db2a:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800db2e:	2300      	movs	r3, #0
 800db30:	2210      	movs	r2, #16
 800db32:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800db36:	f884 302b 	strb.w	r3, [r4, #43]	@ 0x2b
 800db3a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800db3e:	2302      	movs	r3, #2
 800db40:	eb0d 0102 	add.w	r1, sp, r2
 800db44:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800db48:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800db4c:	f7ff ff9e 	bl	800da8c <memcpy.isra.0>
 800db50:	6839      	ldr	r1, [r7, #0]
 800db52:	2311      	movs	r3, #17
 800db54:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800db58:	2301      	movs	r3, #1
 800db5a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800db5e:	2206      	movs	r2, #6
 800db60:	314a      	adds	r1, #74	@ 0x4a
 800db62:	f104 0046 	add.w	r0, r4, #70	@ 0x46
 800db66:	f7ff ff91 	bl	800da8c <memcpy.isra.0>
 800db6a:	f104 004c 	add.w	r0, r4, #76	@ 0x4c
 800db6e:	2206      	movs	r2, #6
 800db70:	4629      	mov	r1, r5
 800db72:	f7ff ff8b 	bl	800da8c <memcpy.isra.0>
 800db76:	23ff      	movs	r3, #255	@ 0xff
 800db78:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 800db7c:	4b11      	ldr	r3, [pc, #68]	@ (800dbc4 <LLRPDevice::HandleRequestMessage()+0x124>)
 800db7e:	6818      	ldr	r0, [r3, #0]
 800db80:	f855 3c14 	ldr.w	r3, [r5, #-20]
 800db84:	b13b      	cbz	r3, 800db96 <LLRPDevice::HandleRequestMessage()+0xf6>
 800db86:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800db8a:	9300      	str	r3, [sp, #0]
 800db8c:	2253      	movs	r2, #83	@ 0x53
 800db8e:	4b0e      	ldr	r3, [pc, #56]	@ (800dbc8 <LLRPDevice::HandleRequestMessage()+0x128>)
 800db90:	4621      	mov	r1, r4
 800db92:	f003 fe73 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800db96:	b009      	add	sp, #36	@ 0x24
 800db98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db9c:	2206      	movs	r2, #6
 800db9e:	a902      	add	r1, sp, #8
 800dba0:	4648      	mov	r0, r9
 800dba2:	f7fe fbb9 	bl	800c318 <memcmp>
 800dba6:	2800      	cmp	r0, #0
 800dba8:	d0f5      	beq.n	800db96 <LLRPDevice::HandleRequestMessage()+0xf6>
 800dbaa:	f109 0906 	add.w	r9, r9, #6
 800dbae:	f108 0801 	add.w	r8, r8, #1
 800dbb2:	e795      	b.n	800dae0 <LLRPDevice::HandleRequestMessage()+0x40>
 800dbb4:	20001370 	andcs	r1, r0, r0, ror r3
 800dbb8:	20001258 	andcs	r1, r0, r8, asr r2
 800dbbc:	20002238 	andcs	r2, r0, r8, lsr r2
 800dbc0:	2000209c 	mulcs	r0, ip, r0
 800dbc4:	20001378 	andcs	r1, r0, r8, ror r3
 800dbc8:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800dbcc <LLRPDevice::HandleRdmCommand()>:
 800dbcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbd0:	4b21      	ldr	r3, [pc, #132]	@ (800dc58 <LLRPDevice::HandleRdmCommand()+0x8c>)
 800dbd2:	4f22      	ldr	r7, [pc, #136]	@ (800dc5c <LLRPDevice::HandleRdmCommand()+0x90>)
 800dbd4:	681c      	ldr	r4, [r3, #0]
 800dbd6:	f104 0946 	add.w	r9, r4, #70	@ 0x46
 800dbda:	b087      	sub	sp, #28
 800dbdc:	463a      	mov	r2, r7
 800dbde:	4649      	mov	r1, r9
 800dbe0:	f7ff fe86 	bl	800d8f0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800dbe4:	783b      	ldrb	r3, [r7, #0]
 800dbe6:	2bcc      	cmp	r3, #204	@ 0xcc
 800dbe8:	d132      	bne.n	800dc50 <LLRPDevice::HandleRdmCommand()+0x84>
 800dbea:	f104 0817 	add.w	r8, r4, #23
 800dbee:	2210      	movs	r2, #16
 800dbf0:	4641      	mov	r1, r8
 800dbf2:	a802      	add	r0, sp, #8
 800dbf4:	f7ff ff4a 	bl	800da8c <memcpy.isra.0>
 800dbf8:	78be      	ldrb	r6, [r7, #2]
 800dbfa:	4b19      	ldr	r3, [pc, #100]	@ (800dc60 <LLRPDevice::HandleRdmCommand()+0x94>)
 800dbfc:	f106 0537 	add.w	r5, r6, #55	@ 0x37
 800dc00:	b2ed      	uxtb	r5, r5
 800dc02:	6819      	ldr	r1, [r3, #0]
 800dc04:	74a5      	strb	r5, [r4, #18]
 800dc06:	2210      	movs	r2, #16
 800dc08:	4640      	mov	r0, r8
 800dc0a:	f7ff ff3f 	bl	800da8c <memcpy.isra.0>
 800dc0e:	f106 0320 	add.w	r3, r6, #32
 800dc12:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800dc16:	2210      	movs	r2, #16
 800dc18:	a902      	add	r1, sp, #8
 800dc1a:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800dc1e:	f7ff ff35 	bl	800da8c <memcpy.isra.0>
 800dc22:	1d73      	adds	r3, r6, #5
 800dc24:	1c72      	adds	r2, r6, #1
 800dc26:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800dc2a:	b2d2      	uxtb	r2, r2
 800dc2c:	4648      	mov	r0, r9
 800dc2e:	1c79      	adds	r1, r7, #1
 800dc30:	f7ff ff2c 	bl	800da8c <memcpy.isra.0>
 800dc34:	4b0b      	ldr	r3, [pc, #44]	@ (800dc64 <LLRPDevice::HandleRdmCommand()+0x98>)
 800dc36:	6818      	ldr	r0, [r3, #0]
 800dc38:	4b0b      	ldr	r3, [pc, #44]	@ (800dc68 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800dc3a:	681b      	ldr	r3, [r3, #0]
 800dc3c:	f105 0210 	add.w	r2, r5, #16
 800dc40:	b133      	cbz	r3, 800dc50 <LLRPDevice::HandleRdmCommand()+0x84>
 800dc42:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800dc46:	9300      	str	r3, [sp, #0]
 800dc48:	4621      	mov	r1, r4
 800dc4a:	4b08      	ldr	r3, [pc, #32]	@ (800dc6c <LLRPDevice::HandleRdmCommand()+0xa0>)
 800dc4c:	f003 fe16 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800dc50:	b007      	add	sp, #28
 800dc52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc56:	bf00      	nop
 800dc58:	20001370 	andcs	r1, r0, r0, ror r3
 800dc5c:	2000126c 	andcs	r1, r0, ip, ror #4
 800dc60:	20002238 	andcs	r2, r0, r8, lsr r2
 800dc64:	20001378 	andcs	r1, r0, r8, ror r3
 800dc68:	20002088 	andcs	r2, r0, r8, lsl #1
 800dc6c:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800dc70 <LLRPDevice::DumpCommon()>:
 800dc70:	4770      	bx	lr

0800dc72 <memcpy.isra.0>:
 800dc72:	440a      	add	r2, r1
 800dc74:	4291      	cmp	r1, r2
 800dc76:	d100      	bne.n	800dc7a <memcpy.isra.0+0x8>
 800dc78:	4770      	bx	lr
 800dc7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dc7e:	f800 3b01 	strb.w	r3, [r0], #1
 800dc82:	e7f7      	b.n	800dc74 <memcpy.isra.0+0x2>

0800dc84 <RDMHandler::GetInterfaceList(unsigned short)>:
 800dc84:	6883      	ldr	r3, [r0, #8]
 800dc86:	2200      	movs	r2, #0
 800dc88:	761a      	strb	r2, [r3, #24]
 800dc8a:	765a      	strb	r2, [r3, #25]
 800dc8c:	769a      	strb	r2, [r3, #26]
 800dc8e:	2101      	movs	r1, #1
 800dc90:	771a      	strb	r2, [r3, #28]
 800dc92:	2206      	movs	r2, #6
 800dc94:	76d9      	strb	r1, [r3, #27]
 800dc96:	775a      	strb	r2, [r3, #29]
 800dc98:	75da      	strb	r2, [r3, #23]
 800dc9a:	f7ff bc17 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
	...

0800dca0 <RDMHandler::GetInterfaceName(unsigned short)>:
 800dca0:	b538      	push	{r3, r4, r5, lr}
 800dca2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800dca6:	2204      	movs	r2, #4
 800dca8:	4604      	mov	r4, r0
 800dcaa:	3117      	adds	r1, #23
 800dcac:	f105 0018 	add.w	r0, r5, #24
 800dcb0:	f7ff ffdf 	bl	800dc72 <memcpy.isra.0>
 800dcb4:	4a0d      	ldr	r2, [pc, #52]	@ (800dcec <RDMHandler::GetInterfaceName(unsigned short)+0x4c>)
 800dcb6:	6813      	ldr	r3, [r2, #0]
 800dcb8:	f105 001c 	add.w	r0, r5, #28
 800dcbc:	3306      	adds	r3, #6
 800dcbe:	f813 1b01 	ldrb.w	r1, [r3], #1
 800dcc2:	f800 1b01 	strb.w	r1, [r0], #1
 800dcc6:	2900      	cmp	r1, #0
 800dcc8:	d1f9      	bne.n	800dcbe <RDMHandler::GetInterfaceName(unsigned short)+0x1e>
 800dcca:	6812      	ldr	r2, [r2, #0]
 800dccc:	3206      	adds	r2, #6
 800dcce:	4611      	mov	r1, r2
 800dcd0:	460b      	mov	r3, r1
 800dcd2:	3101      	adds	r1, #1
 800dcd4:	7818      	ldrb	r0, [r3, #0]
 800dcd6:	2800      	cmp	r0, #0
 800dcd8:	d1fa      	bne.n	800dcd0 <RDMHandler::GetInterfaceName(unsigned short)+0x30>
 800dcda:	1a9b      	subs	r3, r3, r2
 800dcdc:	3304      	adds	r3, #4
 800dcde:	75eb      	strb	r3, [r5, #23]
 800dce0:	4620      	mov	r0, r4
 800dce2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dce6:	f7ff bbf1 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800dcea:	bf00      	nop
 800dcec:	20002068 	andcs	r2, r0, r8, rrx

0800dcf0 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800dcf0:	b538      	push	{r3, r4, r5, lr}
 800dcf2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800dcf6:	4604      	mov	r4, r0
 800dcf8:	2204      	movs	r2, #4
 800dcfa:	f105 0018 	add.w	r0, r5, #24
 800dcfe:	3117      	adds	r1, #23
 800dd00:	f7ff ffb7 	bl	800dc72 <memcpy.isra.0>
 800dd04:	f105 001c 	add.w	r0, r5, #28
 800dd08:	4905      	ldr	r1, [pc, #20]	@ (800dd20 <RDMHandler::GetHardwareAddress(unsigned short)+0x30>)
 800dd0a:	2206      	movs	r2, #6
 800dd0c:	f7ff ffb1 	bl	800dc72 <memcpy.isra.0>
 800dd10:	230a      	movs	r3, #10
 800dd12:	75eb      	strb	r3, [r5, #23]
 800dd14:	4620      	mov	r0, r4
 800dd16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dd1a:	f7ff bbd7 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800dd1e:	bf00      	nop
 800dd20:	2000209c 	mulcs	r0, ip, r0

0800dd24 <RDMHandler::GetDHCPMode(unsigned short)>:
 800dd24:	b538      	push	{r3, r4, r5, lr}
 800dd26:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800dd2a:	4604      	mov	r4, r0
 800dd2c:	2204      	movs	r2, #4
 800dd2e:	f105 0018 	add.w	r0, r5, #24
 800dd32:	3117      	adds	r1, #23
 800dd34:	f7ff ff9d 	bl	800dc72 <memcpy.isra.0>
 800dd38:	4b05      	ldr	r3, [pc, #20]	@ (800dd50 <RDMHandler::GetDHCPMode(unsigned short)+0x2c>)
 800dd3a:	7e9b      	ldrb	r3, [r3, #26]
 800dd3c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800dd40:	772b      	strb	r3, [r5, #28]
 800dd42:	2305      	movs	r3, #5
 800dd44:	75eb      	strb	r3, [r5, #23]
 800dd46:	4620      	mov	r0, r4
 800dd48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dd4c:	f7ff bbbe 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800dd50:	20002088 	andcs	r2, r0, r8, lsl #1

0800dd54 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800dd54:	4b0b      	ldr	r3, [pc, #44]	@ (800dd84 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x30>)
 800dd56:	6842      	ldr	r2, [r0, #4]
 800dd58:	681b      	ldr	r3, [r3, #0]
 800dd5a:	7919      	ldrb	r1, [r3, #4]
 800dd5c:	b911      	cbnz	r1, 800dd64 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800dd5e:	210b      	movs	r1, #11
 800dd60:	f7ff bca2 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800dd64:	7ed2      	ldrb	r2, [r2, #27]
 800dd66:	2a01      	cmp	r2, #1
 800dd68:	d809      	bhi.n	800dd7e <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800dd6a:	f883 20b4 	strb.w	r2, [r3, #180]	@ 0xb4
 800dd6e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800dd72:	f042 0208 	orr.w	r2, r2, #8
 800dd76:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800dd7a:	f7ff bba7 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800dd7e:	2106      	movs	r1, #6
 800dd80:	e7ee      	b.n	800dd60 <RDMHandler::SetDHCPMode(bool, unsigned short)+0xc>
 800dd82:	bf00      	nop
 800dd84:	20002068 	andcs	r2, r0, r8, rrx

0800dd88 <RDMHandler::GetNameServers(unsigned short)>:
 800dd88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd8a:	6843      	ldr	r3, [r0, #4]
 800dd8c:	7ddb      	ldrb	r3, [r3, #23]
 800dd8e:	2b02      	cmp	r3, #2
 800dd90:	4604      	mov	r4, r0
 800dd92:	d905      	bls.n	800dda0 <RDMHandler::GetNameServers(unsigned short)+0x18>
 800dd94:	2106      	movs	r1, #6
 800dd96:	b003      	add	sp, #12
 800dd98:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dd9c:	f7ff bc84 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800dda0:	4a0b      	ldr	r2, [pc, #44]	@ (800ddd0 <RDMHandler::GetNameServers(unsigned short)+0x48>)
 800dda2:	6885      	ldr	r5, [r0, #8]
 800dda4:	6812      	ldr	r2, [r2, #0]
 800dda6:	f103 0126 	add.w	r1, r3, #38	@ 0x26
 800ddaa:	f105 0019 	add.w	r0, r5, #25
 800ddae:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800ddb2:	9201      	str	r2, [sp, #4]
 800ddb4:	2204      	movs	r2, #4
 800ddb6:	762b      	strb	r3, [r5, #24]
 800ddb8:	eb0d 0102 	add.w	r1, sp, r2
 800ddbc:	f7ff ff59 	bl	800dc72 <memcpy.isra.0>
 800ddc0:	2305      	movs	r3, #5
 800ddc2:	4620      	mov	r0, r4
 800ddc4:	75eb      	strb	r3, [r5, #23]
 800ddc6:	b003      	add	sp, #12
 800ddc8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ddcc:	f7ff bb7e 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800ddd0:	20002068 	andcs	r2, r0, r8, rrx

0800ddd4 <RDMHandler::GetZeroconf(unsigned short)>:
 800ddd4:	b538      	push	{r3, r4, r5, lr}
 800ddd6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ddda:	4604      	mov	r4, r0
 800dddc:	2204      	movs	r2, #4
 800ddde:	3117      	adds	r1, #23
 800dde0:	f105 0018 	add.w	r0, r5, #24
 800dde4:	f7ff ff45 	bl	800dc72 <memcpy.isra.0>
 800dde8:	4b07      	ldr	r3, [pc, #28]	@ (800de08 <RDMHandler::GetZeroconf(unsigned short)+0x34>)
 800ddea:	681b      	ldr	r3, [r3, #0]
 800ddec:	795b      	ldrb	r3, [r3, #5]
 800ddee:	b11b      	cbz	r3, 800ddf8 <RDMHandler::GetZeroconf(unsigned short)+0x24>
 800ddf0:	4b06      	ldr	r3, [pc, #24]	@ (800de0c <RDMHandler::GetZeroconf(unsigned short)+0x38>)
 800ddf2:	7e9b      	ldrb	r3, [r3, #26]
 800ddf4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800ddf8:	772b      	strb	r3, [r5, #28]
 800ddfa:	2305      	movs	r3, #5
 800ddfc:	75eb      	strb	r3, [r5, #23]
 800ddfe:	4620      	mov	r0, r4
 800de00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de04:	f7ff bb62 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800de08:	20002068 	andcs	r2, r0, r8, rrx
 800de0c:	20002088 	andcs	r2, r0, r8, lsl #1

0800de10 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800de10:	4b10      	ldr	r3, [pc, #64]	@ (800de54 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800de12:	6842      	ldr	r2, [r0, #4]
 800de14:	681b      	ldr	r3, [r3, #0]
 800de16:	7959      	ldrb	r1, [r3, #5]
 800de18:	b510      	push	{r4, lr}
 800de1a:	4604      	mov	r4, r0
 800de1c:	b921      	cbnz	r1, 800de28 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800de1e:	210b      	movs	r1, #11
 800de20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de24:	f7ff bc40 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800de28:	7ed2      	ldrb	r2, [r2, #27]
 800de2a:	2a01      	cmp	r2, #1
 800de2c:	d109      	bne.n	800de42 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800de2e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800de32:	f042 0210 	orr.w	r2, r2, #16
 800de36:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800de3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de3e:	f7ff bb45 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800de42:	b92a      	cbnz	r2, 800de50 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800de44:	4618      	mov	r0, r3
 800de46:	4611      	mov	r1, r2
 800de48:	f002 fbca 	bl	80105e0 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800de4c:	4620      	mov	r0, r4
 800de4e:	e7f4      	b.n	800de3a <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800de50:	2106      	movs	r1, #6
 800de52:	e7e5      	b.n	800de20 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800de54:	20002068 	andcs	r2, r0, r8, rrx

0800de58 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800de58:	b510      	push	{r4, lr}
 800de5a:	4b09      	ldr	r3, [pc, #36]	@ (800de80 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800de5c:	7e9b      	ldrb	r3, [r3, #26]
 800de5e:	079b      	lsls	r3, r3, #30
 800de60:	4604      	mov	r4, r0
 800de62:	d404      	bmi.n	800de6e <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800de64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de68:	210b      	movs	r1, #11
 800de6a:	f7ff bc1d 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800de6e:	4b05      	ldr	r3, [pc, #20]	@ (800de84 <RDMHandler::RenewDhcp(bool, unsigned short)+0x2c>)
 800de70:	6818      	ldr	r0, [r3, #0]
 800de72:	f002 fbae 	bl	80105d2 <Network::EnableDhcp()>
 800de76:	4620      	mov	r0, r4
 800de78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de7c:	f7ff bb26 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800de80:	20002088 	andcs	r2, r0, r8, lsl #1
 800de84:	20002068 	andcs	r2, r0, r8, rrx

0800de88 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800de88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800de8a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800de8e:	4e11      	ldr	r6, [pc, #68]	@ (800ded4 <RDMHandler::GetAddressNetmask(unsigned short)+0x4c>)
 800de90:	4604      	mov	r4, r0
 800de92:	6833      	ldr	r3, [r6, #0]
 800de94:	9301      	str	r3, [sp, #4]
 800de96:	f105 0018 	add.w	r0, r5, #24
 800de9a:	2204      	movs	r2, #4
 800de9c:	3117      	adds	r1, #23
 800de9e:	f7ff fee8 	bl	800dc72 <memcpy.isra.0>
 800dea2:	2204      	movs	r2, #4
 800dea4:	eb0d 0102 	add.w	r1, sp, r2
 800dea8:	f105 001c 	add.w	r0, r5, #28
 800deac:	f7ff fee1 	bl	800dc72 <memcpy.isra.0>
 800deb0:	6870      	ldr	r0, [r6, #4]
 800deb2:	f008 ff13 	bl	8016cdc <__popcountsi2>
 800deb6:	7eb3      	ldrb	r3, [r6, #26]
 800deb8:	f885 0020 	strb.w	r0, [r5, #32]
 800debc:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800dec0:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800dec4:	4620      	mov	r0, r4
 800dec6:	230a      	movs	r3, #10
 800dec8:	75eb      	strb	r3, [r5, #23]
 800deca:	b002      	add	sp, #8
 800decc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ded0:	f7ff bafc 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800ded4:	20002088 	andcs	r2, r0, r8, lsl #1

0800ded8 <RDMHandler::GetStaticAddress(unsigned short)>:
 800ded8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800deda:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800dede:	4e0f      	ldr	r6, [pc, #60]	@ (800df1c <RDMHandler::GetStaticAddress(unsigned short)+0x44>)
 800dee0:	4604      	mov	r4, r0
 800dee2:	6833      	ldr	r3, [r6, #0]
 800dee4:	9301      	str	r3, [sp, #4]
 800dee6:	f105 0018 	add.w	r0, r5, #24
 800deea:	2204      	movs	r2, #4
 800deec:	3117      	adds	r1, #23
 800deee:	f7ff fec0 	bl	800dc72 <memcpy.isra.0>
 800def2:	2204      	movs	r2, #4
 800def4:	eb0d 0102 	add.w	r1, sp, r2
 800def8:	f105 001c 	add.w	r0, r5, #28
 800defc:	f7ff feb9 	bl	800dc72 <memcpy.isra.0>
 800df00:	6870      	ldr	r0, [r6, #4]
 800df02:	f008 feeb 	bl	8016cdc <__popcountsi2>
 800df06:	2309      	movs	r3, #9
 800df08:	f885 0020 	strb.w	r0, [r5, #32]
 800df0c:	4620      	mov	r0, r4
 800df0e:	75eb      	strb	r3, [r5, #23]
 800df10:	b002      	add	sp, #8
 800df12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df16:	f7ff bad9 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800df1a:	bf00      	nop
 800df1c:	20002088 	andcs	r2, r0, r8, lsl #1

0800df20 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800df20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df22:	6845      	ldr	r5, [r0, #4]
 800df24:	7dab      	ldrb	r3, [r5, #22]
 800df26:	2b09      	cmp	r3, #9
 800df28:	4604      	mov	r4, r0
 800df2a:	d005      	beq.n	800df38 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800df2c:	2101      	movs	r1, #1
 800df2e:	b003      	add	sp, #12
 800df30:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800df34:	f7ff bbb8 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800df38:	2204      	movs	r2, #4
 800df3a:	eb0d 0002 	add.w	r0, sp, r2
 800df3e:	f105 011b 	add.w	r1, r5, #27
 800df42:	f7ff fe96 	bl	800dc72 <memcpy.isra.0>
 800df46:	4b09      	ldr	r3, [pc, #36]	@ (800df6c <RDMHandler::SetStaticAddress(bool, unsigned short)+0x4c>)
 800df48:	7fea      	ldrb	r2, [r5, #31]
 800df4a:	6818      	ldr	r0, [r3, #0]
 800df4c:	9901      	ldr	r1, [sp, #4]
 800df4e:	b12a      	cbz	r2, 800df5c <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3c>
 800df50:	f1c2 0220 	rsb	r2, r2, #32
 800df54:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800df58:	4093      	lsls	r3, r2
 800df5a:	ba1a      	rev	r2, r3
 800df5c:	f002 fb40 	bl	80105e0 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800df60:	4620      	mov	r0, r4
 800df62:	b003      	add	sp, #12
 800df64:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800df68:	f7ff bab0 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800df6c:	20002068 	andcs	r2, r0, r8, rrx

0800df70 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800df70:	4b08      	ldr	r3, [pc, #32]	@ (800df94 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800df72:	b510      	push	{r4, lr}
 800df74:	4604      	mov	r4, r0
 800df76:	6818      	ldr	r0, [r3, #0]
 800df78:	f002 fb54 	bl	8010624 <Network::ApplyQueuedConfig()>
 800df7c:	b120      	cbz	r0, 800df88 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800df7e:	4620      	mov	r0, r4
 800df80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df84:	f7ff baa2 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800df88:	4620      	mov	r0, r4
 800df8a:	2101      	movs	r1, #1
 800df8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df90:	f7ff bb8a 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800df94:	20002068 	andcs	r2, r0, r8, rrx

0800df98 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800df98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df9a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800df9e:	4b0c      	ldr	r3, [pc, #48]	@ (800dfd0 <RDMHandler::GetDefaultRoute(unsigned short)+0x38>)
 800dfa0:	4604      	mov	r4, r0
 800dfa2:	689b      	ldr	r3, [r3, #8]
 800dfa4:	9301      	str	r3, [sp, #4]
 800dfa6:	f105 0018 	add.w	r0, r5, #24
 800dfaa:	2204      	movs	r2, #4
 800dfac:	3117      	adds	r1, #23
 800dfae:	f7ff fe60 	bl	800dc72 <memcpy.isra.0>
 800dfb2:	2204      	movs	r2, #4
 800dfb4:	f105 001c 	add.w	r0, r5, #28
 800dfb8:	eb0d 0102 	add.w	r1, sp, r2
 800dfbc:	f7ff fe59 	bl	800dc72 <memcpy.isra.0>
 800dfc0:	2308      	movs	r3, #8
 800dfc2:	4620      	mov	r0, r4
 800dfc4:	75eb      	strb	r3, [r5, #23]
 800dfc6:	b003      	add	sp, #12
 800dfc8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dfcc:	f7ff ba7e 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800dfd0:	20002088 	andcs	r2, r0, r8, lsl #1

0800dfd4 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800dfd4:	b513      	push	{r0, r1, r4, lr}
 800dfd6:	6841      	ldr	r1, [r0, #4]
 800dfd8:	7d8b      	ldrb	r3, [r1, #22]
 800dfda:	2b08      	cmp	r3, #8
 800dfdc:	4604      	mov	r4, r0
 800dfde:	d005      	beq.n	800dfec <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x18>
 800dfe0:	2101      	movs	r1, #1
 800dfe2:	b002      	add	sp, #8
 800dfe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dfe8:	f7ff bb5e 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800dfec:	2204      	movs	r2, #4
 800dfee:	eb0d 0002 	add.w	r0, sp, r2
 800dff2:	311b      	adds	r1, #27
 800dff4:	f7ff fe3d 	bl	800dc72 <memcpy.isra.0>
 800dff8:	4b05      	ldr	r3, [pc, #20]	@ (800e010 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x3c>)
 800dffa:	9901      	ldr	r1, [sp, #4]
 800dffc:	6818      	ldr	r0, [r3, #0]
 800dffe:	f002 fb03 	bl	8010608 <Network::SetQueuedDefaultRoute(unsigned long)>
 800e002:	4620      	mov	r0, r4
 800e004:	b002      	add	sp, #8
 800e006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e00a:	f7ff ba5f 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800e00e:	bf00      	nop
 800e010:	20002068 	andcs	r2, r0, r8, rrx

0800e014 <RDMHandler::GetHostName(unsigned short)>:
 800e014:	4b09      	ldr	r3, [pc, #36]	@ (800e03c <RDMHandler::GetHostName(unsigned short)+0x28>)
 800e016:	6819      	ldr	r1, [r3, #0]
 800e018:	3116      	adds	r1, #22
 800e01a:	b510      	push	{r4, lr}
 800e01c:	460b      	mov	r3, r1
 800e01e:	4604      	mov	r4, r0
 800e020:	461a      	mov	r2, r3
 800e022:	3301      	adds	r3, #1
 800e024:	7810      	ldrb	r0, [r2, #0]
 800e026:	2800      	cmp	r0, #0
 800e028:	d1fa      	bne.n	800e020 <RDMHandler::GetHostName(unsigned short)+0xc>
 800e02a:	4620      	mov	r0, r4
 800e02c:	1a52      	subs	r2, r2, r1
 800e02e:	f7ff f9f6 	bl	800d41e <RDMHandler::HandleString(char const*, unsigned long)>
 800e032:	4620      	mov	r0, r4
 800e034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e038:	f7ff ba48 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800e03c:	20002068 	andcs	r2, r0, r8, rrx

0800e040 <RDMHandler::SetHostName(bool, unsigned short)>:
 800e040:	b510      	push	{r4, lr}
 800e042:	6841      	ldr	r1, [r0, #4]
 800e044:	7d8b      	ldrb	r3, [r1, #22]
 800e046:	2b3f      	cmp	r3, #63	@ 0x3f
 800e048:	4604      	mov	r4, r0
 800e04a:	d904      	bls.n	800e056 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800e04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e050:	2102      	movs	r1, #2
 800e052:	f7ff bb29 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
 800e056:	440b      	add	r3, r1
 800e058:	2200      	movs	r2, #0
 800e05a:	75da      	strb	r2, [r3, #23]
 800e05c:	4b04      	ldr	r3, [pc, #16]	@ (800e070 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800e05e:	3117      	adds	r1, #23
 800e060:	6818      	ldr	r0, [r3, #0]
 800e062:	f002 fa85 	bl	8010570 <Network::SetHostName(char const*)>
 800e066:	4620      	mov	r0, r4
 800e068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e06c:	f7ff ba2e 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800e070:	20002068 	andcs	r2, r0, r8, rrx

0800e074 <RDMHandler::GetDomainName(unsigned short)>:
 800e074:	4b09      	ldr	r3, [pc, #36]	@ (800e09c <RDMHandler::GetDomainName(unsigned short)+0x28>)
 800e076:	6819      	ldr	r1, [r3, #0]
 800e078:	3156      	adds	r1, #86	@ 0x56
 800e07a:	b510      	push	{r4, lr}
 800e07c:	460b      	mov	r3, r1
 800e07e:	4604      	mov	r4, r0
 800e080:	461a      	mov	r2, r3
 800e082:	3301      	adds	r3, #1
 800e084:	7810      	ldrb	r0, [r2, #0]
 800e086:	2800      	cmp	r0, #0
 800e088:	d1fa      	bne.n	800e080 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800e08a:	4620      	mov	r0, r4
 800e08c:	1a52      	subs	r2, r2, r1
 800e08e:	f7ff f9c6 	bl	800d41e <RDMHandler::HandleString(char const*, unsigned long)>
 800e092:	4620      	mov	r0, r4
 800e094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e098:	f7ff ba18 	b.w	800d4cc <RDMHandler::RespondMessageAck()>
 800e09c:	20002068 	andcs	r2, r0, r8, rrx

0800e0a0 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800e0a0:	210b      	movs	r1, #11
 800e0a2:	f7ff bb01 	b.w	800d6a8 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800e0a8 <RDMDevice::RDMDevice()>:
 800e0a8:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800e0ac:	b513      	push	{r0, r1, r4, lr}
 800e0ae:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800e0b2:	f8a0 3042 	strh.w	r3, [r0, #66]	@ 0x42
 800e0b6:	2300      	movs	r3, #0
 800e0b8:	f8a0 3044 	strh.w	r3, [r0, #68]	@ 0x44
 800e0bc:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 800e0c0:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
 800e0c4:	4b1c      	ldr	r3, [pc, #112]	@ (800e138 <RDMDevice::RDMDevice()+0x90>)
 800e0c6:	491d      	ldr	r1, [pc, #116]	@ (800e13c <RDMDevice::RDMDevice()+0x94>)
 800e0c8:	6018      	str	r0, [r3, #0]
 800e0ca:	4b1d      	ldr	r3, [pc, #116]	@ (800e140 <RDMDevice::RDMDevice()+0x98>)
 800e0cc:	781a      	ldrb	r2, [r3, #0]
 800e0ce:	f880 2046 	strb.w	r2, [r0, #70]	@ 0x46
 800e0d2:	785b      	ldrb	r3, [r3, #1]
 800e0d4:	f880 3047 	strb.w	r3, [r0, #71]	@ 0x47
 800e0d8:	466a      	mov	r2, sp
 800e0da:	2306      	movs	r3, #6
 800e0dc:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e0e0:	f802 4b01 	strb.w	r4, [r2], #1
 800e0e4:	3b01      	subs	r3, #1
 800e0e6:	d1f9      	bne.n	800e0dc <RDMDevice::RDMDevice()+0x34>
 800e0e8:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800e0ec:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800e0f0:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800e0f4:	f89d 4005 	ldrb.w	r4, [sp, #5]
 800e0f8:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
 800e0fc:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
 800e100:	f880 204e 	strb.w	r2, [r0, #78]	@ 0x4e
 800e104:	f880 304f 	strb.w	r3, [r0, #79]	@ 0x4f
 800e108:	4a0e      	ldr	r2, [pc, #56]	@ (800e144 <RDMDevice::RDMDevice()+0x9c>)
 800e10a:	f880 104a 	strb.w	r1, [r0, #74]	@ 0x4a
 800e10e:	2319      	movs	r3, #25
 800e110:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
 800e114:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 800e118:	f880 404b 	strb.w	r4, [r0, #75]	@ 0x4b
 800e11c:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
 800e120:	4603      	mov	r3, r0
 800e122:	f100 0119 	add.w	r1, r0, #25
 800e126:	f812 4b01 	ldrb.w	r4, [r2], #1
 800e12a:	f803 4b01 	strb.w	r4, [r3], #1
 800e12e:	4299      	cmp	r1, r3
 800e130:	d1f9      	bne.n	800e126 <RDMDevice::RDMDevice()+0x7e>
 800e132:	b002      	add	sp, #8
 800e134:	bd10      	pop	{r4, pc}
 800e136:	bf00      	nop
 800e138:	2000137c 	andcs	r1, r0, ip, ror r3
 800e13c:	2000209c 	mulcs	r0, ip, r0
 800e140:	0801a44d 	stmdaeq	r1, {r0, r2, r3, r6, sl, sp, pc}
 800e144:	0801a46b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, sp, pc}

0800e148 <RDMDevice::Print()>:
 800e148:	b513      	push	{r0, r1, r4, lr}
 800e14a:	4604      	mov	r4, r0
 800e14c:	481f      	ldr	r0, [pc, #124]	@ (800e1cc <RDMDevice::Print()+0x84>)
 800e14e:	f008 fb74 	bl	801683a <puts>
 800e152:	4b1f      	ldr	r3, [pc, #124]	@ (800e1d0 <RDMDevice::Print()+0x88>)
 800e154:	461a      	mov	r2, r3
 800e156:	4619      	mov	r1, r3
 800e158:	3301      	adds	r3, #1
 800e15a:	7808      	ldrb	r0, [r1, #0]
 800e15c:	2800      	cmp	r0, #0
 800e15e:	d1fa      	bne.n	800e156 <RDMDevice::Print()+0xe>
 800e160:	1a89      	subs	r1, r1, r2
 800e162:	2920      	cmp	r1, #32
 800e164:	bf28      	it	cs
 800e166:	2120      	movcs	r1, #32
 800e168:	4a19      	ldr	r2, [pc, #100]	@ (800e1d0 <RDMDevice::Print()+0x88>)
 800e16a:	481a      	ldr	r0, [pc, #104]	@ (800e1d4 <RDMDevice::Print()+0x8c>)
 800e16c:	f008 fb10 	bl	8016790 <printf>
 800e170:	f894 2047 	ldrb.w	r2, [r4, #71]	@ 0x47
 800e174:	f894 1046 	ldrb.w	r1, [r4, #70]	@ 0x46
 800e178:	4817      	ldr	r0, [pc, #92]	@ (800e1d8 <RDMDevice::Print()+0x90>)
 800e17a:	f008 fb09 	bl	8016790 <printf>
 800e17e:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 800e182:	9300      	str	r3, [sp, #0]
 800e184:	f894 304d 	ldrb.w	r3, [r4, #77]	@ 0x4d
 800e188:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
 800e18c:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 800e190:	4812      	ldr	r0, [pc, #72]	@ (800e1dc <RDMDevice::Print()+0x94>)
 800e192:	f008 fafd 	bl	8016790 <printf>
 800e196:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 800e19a:	4811      	ldr	r0, [pc, #68]	@ (800e1e0 <RDMDevice::Print()+0x98>)
 800e19c:	f104 0220 	add.w	r2, r4, #32
 800e1a0:	f008 faf6 	bl	8016790 <printf>
 800e1a4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800e1a8:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
 800e1ac:	480d      	ldr	r0, [pc, #52]	@ (800e1e4 <RDMDevice::Print()+0x9c>)
 800e1ae:	0a09      	lsrs	r1, r1, #8
 800e1b0:	f008 faee 	bl	8016790 <printf>
 800e1b4:	f8b4 1042 	ldrh.w	r1, [r4, #66]	@ 0x42
 800e1b8:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 800e1bc:	480a      	ldr	r0, [pc, #40]	@ (800e1e8 <RDMDevice::Print()+0xa0>)
 800e1be:	0a09      	lsrs	r1, r1, #8
 800e1c0:	b002      	add	sp, #8
 800e1c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1c6:	f008 bae3 	b.w	8016790 <printf>
 800e1ca:	bf00      	nop
 800e1cc:	08017783 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, ip, sp, lr}
 800e1d0:	0801a44f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp, pc}
 800e1d4:	0801779c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 800e1d8:	080177b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800e1dc:	080177d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800e1e0:	080177fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800e1e4:	08017818 	stmdaeq	r1, {r3, r4, fp, ip, sp, lr}
 800e1e8:	08017837 	stmdaeq	r1, {r0, r1, r2, r4, r5, fp, ip, sp, lr}

0800e1ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>:
 800e1ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e1ee:	88c6      	ldrh	r6, [r0, #6]
 800e1f0:	8885      	ldrh	r5, [r0, #4]
 800e1f2:	42ae      	cmp	r6, r5
 800e1f4:	d216      	bcs.n	800e224 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x38>
 800e1f6:	4604      	mov	r4, r0
 800e1f8:	6800      	ldr	r0, [r0, #0]
 800e1fa:	1bad      	subs	r5, r5, r6
 800e1fc:	4430      	add	r0, r6
 800e1fe:	7a26      	ldrb	r6, [r4, #8]
 800e200:	b923      	cbnz	r3, 800e20c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x20>
 800e202:	b926      	cbnz	r6, 800e20e <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x22>
 800e204:	9200      	str	r2, [sp, #0]
 800e206:	460b      	mov	r3, r1
 800e208:	4a09      	ldr	r2, [pc, #36]	@ (800e230 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x44>)
 800e20a:	e003      	b.n	800e214 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800e20c:	b166      	cbz	r6, 800e228 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x3c>
 800e20e:	9200      	str	r2, [sp, #0]
 800e210:	4a08      	ldr	r2, [pc, #32]	@ (800e234 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x48>)
 800e212:	460b      	mov	r3, r1
 800e214:	4629      	mov	r1, r5
 800e216:	f008 fae3 	bl	80167e0 <snprintf>
 800e21a:	4285      	cmp	r5, r0
 800e21c:	bfa2      	ittt	ge
 800e21e:	88e3      	ldrhge	r3, [r4, #6]
 800e220:	181b      	addge	r3, r3, r0
 800e222:	80e3      	strhge	r3, [r4, #6]
 800e224:	b002      	add	sp, #8
 800e226:	bd70      	pop	{r4, r5, r6, pc}
 800e228:	9200      	str	r2, [sp, #0]
 800e22a:	460b      	mov	r3, r1
 800e22c:	4a02      	ldr	r2, [pc, #8]	@ (800e238 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x4c>)
 800e22e:	e7f1      	b.n	800e214 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800e230:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 800e234:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 800e238:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

0800e23c <StoreDmxSend::Copy(dmxsendparams::Params*)>:
 800e23c:	b507      	push	{r0, r1, r2, lr}
 800e23e:	2300      	movs	r3, #0
 800e240:	2101      	movs	r1, #1
 800e242:	e9cd 3100 	strd	r3, r1, [sp]
 800e246:	4602      	mov	r2, r0
 800e248:	4803      	ldr	r0, [pc, #12]	@ (800e258 <StoreDmxSend::Copy(dmxsendparams::Params*)+0x1c>)
 800e24a:	230a      	movs	r3, #10
 800e24c:	6800      	ldr	r0, [r0, #0]
 800e24e:	f004 ffc1 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800e252:	b003      	add	sp, #12
 800e254:	f85d fb04 	ldr.w	pc, [sp], #4
 800e258:	20002134 	andcs	r2, r0, r4, lsr r1

0800e25c <DmxParams::DmxParams()>:
 800e25c:	2200      	movs	r2, #0
 800e25e:	7002      	strb	r2, [r0, #0]
 800e260:	7042      	strb	r2, [r0, #1]
 800e262:	7082      	strb	r2, [r0, #2]
 800e264:	70c2      	strb	r2, [r0, #3]
 800e266:	f06f 014f 	mvn.w	r1, #79	@ 0x4f
 800e26a:	7142      	strb	r2, [r0, #5]
 800e26c:	71c2      	strb	r2, [r0, #7]
 800e26e:	2228      	movs	r2, #40	@ 0x28
 800e270:	7101      	strb	r1, [r0, #4]
 800e272:	7202      	strb	r2, [r0, #8]
 800e274:	210c      	movs	r1, #12
 800e276:	22ff      	movs	r2, #255	@ 0xff
 800e278:	7181      	strb	r1, [r0, #6]
 800e27a:	7242      	strb	r2, [r0, #9]
 800e27c:	4770      	bx	lr

0800e27e <DmxParams::Load()>:
 800e27e:	b508      	push	{r3, lr}
 800e280:	2200      	movs	r2, #0
 800e282:	7002      	strb	r2, [r0, #0]
 800e284:	7042      	strb	r2, [r0, #1]
 800e286:	7082      	strb	r2, [r0, #2]
 800e288:	70c2      	strb	r2, [r0, #3]
 800e28a:	f7ff ffd7 	bl	800e23c <StoreDmxSend::Copy(dmxsendparams::Params*)>
 800e28e:	bd08      	pop	{r3, pc}

0800e290 <DmxParams::Load(char const*, unsigned long)>:
 800e290:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e292:	2500      	movs	r5, #0
 800e294:	b087      	sub	sp, #28
 800e296:	4604      	mov	r4, r0
 800e298:	460e      	mov	r6, r1
 800e29a:	4617      	mov	r7, r2
 800e29c:	7005      	strb	r5, [r0, #0]
 800e29e:	7045      	strb	r5, [r0, #1]
 800e2a0:	7085      	strb	r5, [r0, #2]
 800e2a2:	70c5      	strb	r5, [r0, #3]
 800e2a4:	4602      	mov	r2, r0
 800e2a6:	490c      	ldr	r1, [pc, #48]	@ (800e2d8 <DmxParams::Load(char const*, unsigned long)+0x48>)
 800e2a8:	a804      	add	r0, sp, #16
 800e2aa:	f005 fa6d 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e2ae:	463a      	mov	r2, r7
 800e2b0:	4631      	mov	r1, r6
 800e2b2:	a804      	add	r0, sp, #16
 800e2b4:	f005 fa6c 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 800e2b8:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800e2bc:	230a      	movs	r3, #10
 800e2be:	4807      	ldr	r0, [pc, #28]	@ (800e2dc <DmxParams::Load(char const*, unsigned long)+0x4c>)
 800e2c0:	9300      	str	r3, [sp, #0]
 800e2c2:	462a      	mov	r2, r5
 800e2c4:	4623      	mov	r3, r4
 800e2c6:	2101      	movs	r1, #1
 800e2c8:	6800      	ldr	r0, [r0, #0]
 800e2ca:	f004 ff5d 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800e2ce:	a804      	add	r0, sp, #16
 800e2d0:	f005 fa5d 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 800e2d4:	b007      	add	sp, #28
 800e2d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e2d8:	0800e3b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sp, lr, pc}
 800e2dc:	20002134 	andcs	r2, r0, r4, lsr r1

0800e2e0 <DmxParams::callbackFunction(char const*)>:
 800e2e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2e2:	460d      	mov	r5, r1
 800e2e4:	4604      	mov	r4, r0
 800e2e6:	492f      	ldr	r1, [pc, #188]	@ (800e3a4 <DmxParams::callbackFunction(char const*)+0xc4>)
 800e2e8:	f10d 0206 	add.w	r2, sp, #6
 800e2ec:	4628      	mov	r0, r5
 800e2ee:	f005 fade 	bl	80138ae <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e2f2:	b9a0      	cbnz	r0, 800e31e <DmxParams::callbackFunction(char const*)+0x3e>
 800e2f4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e2f8:	6823      	ldr	r3, [r4, #0]
 800e2fa:	2a5b      	cmp	r2, #91	@ 0x5b
 800e2fc:	d907      	bls.n	800e30e <DmxParams::callbackFunction(char const*)+0x2e>
 800e2fe:	2ab0      	cmp	r2, #176	@ 0xb0
 800e300:	d005      	beq.n	800e30e <DmxParams::callbackFunction(char const*)+0x2e>
 800e302:	80a2      	strh	r2, [r4, #4]
 800e304:	f043 0301 	orr.w	r3, r3, #1
 800e308:	6023      	str	r3, [r4, #0]
 800e30a:	b003      	add	sp, #12
 800e30c:	bd30      	pop	{r4, r5, pc}
 800e30e:	f06f 024f 	mvn.w	r2, #79	@ 0x4f
 800e312:	7122      	strb	r2, [r4, #4]
 800e314:	2200      	movs	r2, #0
 800e316:	7162      	strb	r2, [r4, #5]
 800e318:	f023 0301 	bic.w	r3, r3, #1
 800e31c:	e7f4      	b.n	800e308 <DmxParams::callbackFunction(char const*)+0x28>
 800e31e:	4922      	ldr	r1, [pc, #136]	@ (800e3a8 <DmxParams::callbackFunction(char const*)+0xc8>)
 800e320:	f10d 0206 	add.w	r2, sp, #6
 800e324:	4628      	mov	r0, r5
 800e326:	f005 fac2 	bl	80138ae <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e32a:	b970      	cbnz	r0, 800e34a <DmxParams::callbackFunction(char const*)+0x6a>
 800e32c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e330:	6823      	ldr	r3, [r4, #0]
 800e332:	2a0c      	cmp	r2, #12
 800e334:	bf93      	iteet	ls
 800e336:	220c      	movls	r2, #12
 800e338:	80e2      	strhhi	r2, [r4, #6]
 800e33a:	f043 0302 	orrhi.w	r3, r3, #2
 800e33e:	71a2      	strbls	r2, [r4, #6]
 800e340:	bf9c      	itt	ls
 800e342:	71e0      	strbls	r0, [r4, #7]
 800e344:	f023 0302 	bicls.w	r3, r3, #2
 800e348:	e7de      	b.n	800e308 <DmxParams::callbackFunction(char const*)+0x28>
 800e34a:	4918      	ldr	r1, [pc, #96]	@ (800e3ac <DmxParams::callbackFunction(char const*)+0xcc>)
 800e34c:	f10d 0205 	add.w	r2, sp, #5
 800e350:	4628      	mov	r0, r5
 800e352:	f005 fac8 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e356:	b950      	cbnz	r0, 800e36e <DmxParams::callbackFunction(char const*)+0x8e>
 800e358:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800e35c:	6823      	ldr	r3, [r4, #0]
 800e35e:	7222      	strb	r2, [r4, #8]
 800e360:	2a28      	cmp	r2, #40	@ 0x28
 800e362:	bf14      	ite	ne
 800e364:	f043 0304 	orrne.w	r3, r3, #4
 800e368:	f023 0304 	biceq.w	r3, r3, #4
 800e36c:	e7cc      	b.n	800e308 <DmxParams::callbackFunction(char const*)+0x28>
 800e36e:	4910      	ldr	r1, [pc, #64]	@ (800e3b0 <DmxParams::callbackFunction(char const*)+0xd0>)
 800e370:	f10d 0206 	add.w	r2, sp, #6
 800e374:	4628      	mov	r0, r5
 800e376:	f005 fa9a 	bl	80138ae <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e37a:	2800      	cmp	r0, #0
 800e37c:	d1c5      	bne.n	800e30a <DmxParams::callbackFunction(char const*)+0x2a>
 800e37e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e382:	6823      	ldr	r3, [r4, #0]
 800e384:	1e91      	subs	r1, r2, #2
 800e386:	f5b1 7fff 	cmp.w	r1, #510	@ 0x1fe
 800e38a:	bf3b      	ittet	cc
 800e38c:	0852      	lsrcc	r2, r2, #1
 800e38e:	f102 32ff 	addcc.w	r2, r2, #4294967295	@ 0xffffffff
 800e392:	22ff      	movcs	r2, #255	@ 0xff
 800e394:	7262      	strbcc	r2, [r4, #9]
 800e396:	bf32      	itee	cc
 800e398:	f043 0308 	orrcc.w	r3, r3, #8
 800e39c:	7262      	strbcs	r2, [r4, #9]
 800e39e:	f023 0308 	biccs.w	r3, r3, #8
 800e3a2:	e7b1      	b.n	800e308 <DmxParams::callbackFunction(char const*)+0x28>
 800e3a4:	0801a4a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp, pc}
 800e3a8:	0801a49e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, sp, pc}
 800e3ac:	0801a491 	stmdaeq	r1, {r0, r4, r7, sl, sp, pc}
 800e3b0:	0801a485 	stmdaeq	r1, {r0, r2, r7, sl, sp, pc}

0800e3b4 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800e3b4:	f7ff bf94 	b.w	800e2e0 <DmxParams::callbackFunction(char const*)>

0800e3b8 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)>:
 800e3b8:	b570      	push	{r4, r5, r6, lr}
 800e3ba:	4604      	mov	r4, r0
 800e3bc:	b086      	sub	sp, #24
 800e3be:	4615      	mov	r5, r2
 800e3c0:	461e      	mov	r6, r3
 800e3c2:	b369      	cbz	r1, 800e420 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800e3c4:	220a      	movs	r2, #10
 800e3c6:	f007 fee8 	bl	801619a <memmove>
 800e3ca:	462a      	mov	r2, r5
 800e3cc:	4930      	ldr	r1, [pc, #192]	@ (800e490 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xd8>)
 800e3ce:	4633      	mov	r3, r6
 800e3d0:	a803      	add	r0, sp, #12
 800e3d2:	f005 f903 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800e3d6:	6823      	ldr	r3, [r4, #0]
 800e3d8:	88a2      	ldrh	r2, [r4, #4]
 800e3da:	492e      	ldr	r1, [pc, #184]	@ (800e494 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xdc>)
 800e3dc:	f003 0301 	and.w	r3, r3, #1
 800e3e0:	a803      	add	r0, sp, #12
 800e3e2:	f7ff ff03 	bl	800e1ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800e3e6:	6823      	ldr	r3, [r4, #0]
 800e3e8:	88e2      	ldrh	r2, [r4, #6]
 800e3ea:	492b      	ldr	r1, [pc, #172]	@ (800e498 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe0>)
 800e3ec:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800e3f0:	a803      	add	r0, sp, #12
 800e3f2:	f7ff fefb 	bl	800e1ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800e3f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e3fa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e3fe:	7a23      	ldrb	r3, [r4, #8]
 800e400:	6821      	ldr	r1, [r4, #0]
 800e402:	42aa      	cmp	r2, r5
 800e404:	d21d      	bcs.n	800e442 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x8a>
 800e406:	9803      	ldr	r0, [sp, #12]
 800e408:	0749      	lsls	r1, r1, #29
 800e40a:	4410      	add	r0, r2
 800e40c:	eba5 0502 	sub.w	r5, r5, r2
 800e410:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e414:	d407      	bmi.n	800e426 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800e416:	b93a      	cbnz	r2, 800e428 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x70>
 800e418:	9300      	str	r3, [sp, #0]
 800e41a:	4a20      	ldr	r2, [pc, #128]	@ (800e49c <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe4>)
 800e41c:	4b20      	ldr	r3, [pc, #128]	@ (800e4a0 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 800e41e:	e006      	b.n	800e42e <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x76>
 800e420:	f7ff ff0c 	bl	800e23c <StoreDmxSend::Copy(dmxsendparams::Params*)>
 800e424:	e7d1      	b.n	800e3ca <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x12>
 800e426:	b37a      	cbz	r2, 800e488 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xd0>
 800e428:	9300      	str	r3, [sp, #0]
 800e42a:	4a1e      	ldr	r2, [pc, #120]	@ (800e4a4 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xec>)
 800e42c:	4b1c      	ldr	r3, [pc, #112]	@ (800e4a0 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 800e42e:	4629      	mov	r1, r5
 800e430:	f008 f9d6 	bl	80167e0 <snprintf>
 800e434:	4285      	cmp	r5, r0
 800e436:	bfa2      	ittt	ge
 800e438:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e43c:	18c0      	addge	r0, r0, r3
 800e43e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e442:	7a62      	ldrb	r2, [r4, #9]
 800e444:	6823      	ldr	r3, [r4, #0]
 800e446:	4918      	ldr	r1, [pc, #96]	@ (800e4a8 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>)
 800e448:	3201      	adds	r2, #1
 800e44a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800e44e:	0052      	lsls	r2, r2, #1
 800e450:	a803      	add	r0, sp, #12
 800e452:	f7ff fecb 	bl	800e1ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800e456:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e45a:	b17b      	cbz	r3, 800e47c <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 800e45c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e460:	9b03      	ldr	r3, [sp, #12]
 800e462:	4413      	add	r3, r2
 800e464:	227d      	movs	r2, #125	@ 0x7d
 800e466:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e46a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e46e:	9903      	ldr	r1, [sp, #12]
 800e470:	54ca      	strb	r2, [r1, r3]
 800e472:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e476:	3301      	adds	r3, #1
 800e478:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e47c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e480:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e482:	601a      	str	r2, [r3, #0]
 800e484:	b006      	add	sp, #24
 800e486:	bd70      	pop	{r4, r5, r6, pc}
 800e488:	9300      	str	r3, [sp, #0]
 800e48a:	4a08      	ldr	r2, [pc, #32]	@ (800e4ac <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xf4>)
 800e48c:	4b04      	ldr	r3, [pc, #16]	@ (800e4a0 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 800e48e:	e7ce      	b.n	800e42e <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x76>
 800e490:	0801a4b2 	stmdaeq	r1, {r1, r4, r5, r7, sl, sp, pc}
 800e494:	0801a4a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, sp, pc}
 800e498:	0801a49e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, sp, pc}
 800e49c:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 800e4a0:	0801a491 	stmdaeq	r1, {r0, r4, r7, sl, sp, pc}
 800e4a4:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 800e4a8:	0801a485 	stmdaeq	r1, {r0, r2, r7, sl, sp, pc}
 800e4ac:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

0800e4b0 <DmxParams::Set(Dmx*)>:
 800e4b0:	b538      	push	{r3, r4, r5, lr}
 800e4b2:	6803      	ldr	r3, [r0, #0]
 800e4b4:	4604      	mov	r4, r0
 800e4b6:	07d8      	lsls	r0, r3, #31
 800e4b8:	460d      	mov	r5, r1
 800e4ba:	d503      	bpl.n	800e4c4 <DmxParams::Set(Dmx*)+0x14>
 800e4bc:	88a1      	ldrh	r1, [r4, #4]
 800e4be:	4628      	mov	r0, r5
 800e4c0:	f000 fe62 	bl	800f188 <Dmx::SetDmxBreakTime(unsigned long)>
 800e4c4:	6823      	ldr	r3, [r4, #0]
 800e4c6:	0799      	lsls	r1, r3, #30
 800e4c8:	d503      	bpl.n	800e4d2 <DmxParams::Set(Dmx*)+0x22>
 800e4ca:	88e1      	ldrh	r1, [r4, #6]
 800e4cc:	4628      	mov	r0, r5
 800e4ce:	f000 fe91 	bl	800f1f4 <Dmx::SetDmxMabTime(unsigned long)>
 800e4d2:	6823      	ldr	r3, [r4, #0]
 800e4d4:	075a      	lsls	r2, r3, #29
 800e4d6:	d507      	bpl.n	800e4e8 <DmxParams::Set(Dmx*)+0x38>
 800e4d8:	7a21      	ldrb	r1, [r4, #8]
 800e4da:	b111      	cbz	r1, 800e4e2 <DmxParams::Set(Dmx*)+0x32>
 800e4dc:	4b08      	ldr	r3, [pc, #32]	@ (800e500 <DmxParams::Set(Dmx*)+0x50>)
 800e4de:	fbb3 f1f1 	udiv	r1, r3, r1
 800e4e2:	4628      	mov	r0, r5
 800e4e4:	f000 febc 	bl	800f260 <Dmx::SetDmxPeriodTime(unsigned long)>
 800e4e8:	6823      	ldr	r3, [r4, #0]
 800e4ea:	071b      	lsls	r3, r3, #28
 800e4ec:	d507      	bpl.n	800e4fe <DmxParams::Set(Dmx*)+0x4e>
 800e4ee:	7a61      	ldrb	r1, [r4, #9]
 800e4f0:	3101      	adds	r1, #1
 800e4f2:	4628      	mov	r0, r5
 800e4f4:	0049      	lsls	r1, r1, #1
 800e4f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e4fa:	f000 bee1 	b.w	800f2c0 <Dmx::SetDmxSlots(unsigned short)>
 800e4fe:	bd38      	pop	{r3, r4, r5, pc}
 800e500:	000f4240 	andeq	r4, pc, r0, asr #4

0800e504 <remoteconfig::dmx::json_get_ports(char*, unsigned long)>:
 800e504:	235b      	movs	r3, #91	@ 0x5b
 800e506:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e50a:	4604      	mov	r4, r0
 800e50c:	f8df 905c 	ldr.w	r9, [pc, #92]	@ 800e56c <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x68>
 800e510:	f800 3b01 	strb.w	r3, [r0], #1
 800e514:	f8d9 3000 	ldr.w	r3, [r9]
 800e518:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 800e570 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x6c>
 800e51c:	695a      	ldr	r2, [r3, #20]
 800e51e:	4f11      	ldr	r7, [pc, #68]	@ (800e564 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x60>)
 800e520:	2a01      	cmp	r2, #1
 800e522:	bf0c      	ite	eq
 800e524:	4643      	moveq	r3, r8
 800e526:	463b      	movne	r3, r7
 800e528:	460e      	mov	r6, r1
 800e52a:	9300      	str	r3, [sp, #0]
 800e52c:	4a0e      	ldr	r2, [pc, #56]	@ (800e568 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x64>)
 800e52e:	2341      	movs	r3, #65	@ 0x41
 800e530:	3901      	subs	r1, #1
 800e532:	f008 f955 	bl	80167e0 <snprintf>
 800e536:	f8d9 3000 	ldr.w	r3, [r9]
 800e53a:	4a0b      	ldr	r2, [pc, #44]	@ (800e568 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x64>)
 800e53c:	699b      	ldr	r3, [r3, #24]
 800e53e:	1c45      	adds	r5, r0, #1
 800e540:	2b01      	cmp	r3, #1
 800e542:	bf08      	it	eq
 800e544:	4647      	moveq	r7, r8
 800e546:	1960      	adds	r0, r4, r5
 800e548:	9700      	str	r7, [sp, #0]
 800e54a:	2342      	movs	r3, #66	@ 0x42
 800e54c:	1b71      	subs	r1, r6, r5
 800e54e:	f008 f947 	bl	80167e0 <snprintf>
 800e552:	4428      	add	r0, r5
 800e554:	4404      	add	r4, r0
 800e556:	235d      	movs	r3, #93	@ 0x5d
 800e558:	f804 3c01 	strb.w	r3, [r4, #-1]
 800e55c:	b003      	add	sp, #12
 800e55e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e562:	bf00      	nop
 800e564:	08017698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, sp, lr}
 800e568:	08017856 	stmdaeq	r1, {r1, r2, r4, r6, fp, ip, sp, lr}
 800e56c:	20001380 	andcs	r1, r0, r0, lsl #7
 800e570:	08017692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip, sp, lr}

0800e574 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)>:
 800e574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e578:	f040 0420 	orr.w	r4, r0, #32
 800e57c:	460d      	mov	r5, r1
 800e57e:	f1a4 0161 	sub.w	r1, r4, #97	@ 0x61
 800e582:	2901      	cmp	r1, #1
 800e584:	b088      	sub	sp, #32
 800e586:	4616      	mov	r6, r2
 800e588:	d81f      	bhi.n	800e5ca <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x56>
 800e58a:	4b11      	ldr	r3, [pc, #68]	@ (800e5d0 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x5c>)
 800e58c:	6818      	ldr	r0, [r3, #0]
 800e58e:	f000 fd8f 	bl	800f0b0 <Dmx::GetTotalStatistics(unsigned long)>
 800e592:	6802      	ldr	r2, [r0, #0]
 800e594:	6841      	ldr	r1, [r0, #4]
 800e596:	6947      	ldr	r7, [r0, #20]
 800e598:	f8d0 c018 	ldr.w	ip, [r0, #24]
 800e59c:	f8d0 e008 	ldr.w	lr, [r0, #8]
 800e5a0:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800e5a4:	6900      	ldr	r0, [r0, #16]
 800e5a6:	9200      	str	r2, [sp, #0]
 800e5a8:	f1a4 0320 	sub.w	r3, r4, #32
 800e5ac:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800e5b0:	e9cd 1701 	strd	r1, r7, [sp, #4]
 800e5b4:	e9cd ce03 	strd	ip, lr, [sp, #12]
 800e5b8:	4a06      	ldr	r2, [pc, #24]	@ (800e5d4 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x60>)
 800e5ba:	b2db      	uxtb	r3, r3
 800e5bc:	4631      	mov	r1, r6
 800e5be:	4628      	mov	r0, r5
 800e5c0:	f008 f90e 	bl	80167e0 <snprintf>
 800e5c4:	b008      	add	sp, #32
 800e5c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5ca:	2000      	movs	r0, #0
 800e5cc:	e7fa      	b.n	800e5c4 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x50>
 800e5ce:	bf00      	nop
 800e5d0:	20001380 	andcs	r1, r0, r0, lsl #7
 800e5d4:	08017876 	stmdaeq	r1, {r1, r2, r4, r5, r6, fp, ip, sp, lr}

0800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>:
 800e5d8:	b430      	push	{r4, r5}
 800e5da:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800e5de:	4d1f      	ldr	r5, [pc, #124]	@ (800e65c <Dmx::StopData(unsigned long) [clone .part.0]+0x84>)
 800e5e0:	4a1f      	ldr	r2, [pc, #124]	@ (800e660 <Dmx::StopData(unsigned long) [clone .part.0]+0x88>)
 800e5e2:	6940      	ldr	r0, [r0, #20]
 800e5e4:	4b1f      	ldr	r3, [pc, #124]	@ (800e664 <Dmx::StopData(unsigned long) [clone .part.0]+0x8c>)
 800e5e6:	2400      	movs	r4, #0
 800e5e8:	f845 4021 	str.w	r4, [r5, r1, lsl #2]
 800e5ec:	4d1e      	ldr	r5, [pc, #120]	@ (800e668 <Dmx::StopData(unsigned long) [clone .part.0]+0x90>)
 800e5ee:	2900      	cmp	r1, #0
 800e5f0:	bf18      	it	ne
 800e5f2:	4613      	movne	r3, r2
 800e5f4:	4a1d      	ldr	r2, [pc, #116]	@ (800e66c <Dmx::StopData(unsigned long) [clone .part.0]+0x94>)
 800e5f6:	bf18      	it	ne
 800e5f8:	462a      	movne	r2, r5
 800e5fa:	b9e8      	cbnz	r0, 800e638 <Dmx::StopData(unsigned long) [clone .part.0]+0x60>
 800e5fc:	4b1c      	ldr	r3, [pc, #112]	@ (800e670 <Dmx::StopData(unsigned long) [clone .part.0]+0x98>)
 800e5fe:	f44f 7405 	mov.w	r4, #532	@ 0x214
 800e602:	fb04 3101 	mla	r1, r4, r1, r3
 800e606:	e002      	b.n	800e60e <Dmx::StopData(unsigned long) [clone .part.0]+0x36>
 800e608:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 800e60c:	b193      	cbz	r3, 800e634 <Dmx::StopData(unsigned long) [clone .part.0]+0x5c>
 800e60e:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 800e612:	2b04      	cmp	r3, #4
 800e614:	d1f8      	bne.n	800e608 <Dmx::StopData(unsigned long) [clone .part.0]+0x30>
 800e616:	6813      	ldr	r3, [r2, #0]
 800e618:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800e61c:	6013      	str	r3, [r2, #0]
 800e61e:	f3bf 8f5f 	dmb	sy
 800e622:	6813      	ldr	r3, [r2, #0]
 800e624:	065b      	lsls	r3, r3, #25
 800e626:	d5fa      	bpl.n	800e61e <Dmx::StopData(unsigned long) [clone .part.0]+0x46>
 800e628:	f8c1 0210 	str.w	r0, [r1, #528]	@ 0x210
 800e62c:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 800e630:	2b00      	cmp	r3, #0
 800e632:	d1ec      	bne.n	800e60e <Dmx::StopData(unsigned long) [clone .part.0]+0x36>
 800e634:	bc30      	pop	{r4, r5}
 800e636:	4770      	bx	lr
 800e638:	6818      	ldr	r0, [r3, #0]
 800e63a:	4a0e      	ldr	r2, [pc, #56]	@ (800e674 <Dmx::StopData(unsigned long) [clone .part.0]+0x9c>)
 800e63c:	f020 0020 	bic.w	r0, r0, #32
 800e640:	6018      	str	r0, [r3, #0]
 800e642:	6818      	ldr	r0, [r3, #0]
 800e644:	f020 0010 	bic.w	r0, r0, #16
 800e648:	6018      	str	r0, [r3, #0]
 800e64a:	f240 531c 	movw	r3, #1308	@ 0x51c
 800e64e:	fb03 2301 	mla	r3, r3, r1, r2
 800e652:	f8c3 4518 	str.w	r4, [r3, #1304]	@ 0x518
 800e656:	bc30      	pop	{r4, r5}
 800e658:	4770      	bx	lr
 800e65a:	bf00      	nop
 800e65c:	20001e1c 	andcs	r1, r0, ip, lsl lr
 800e660:	4001140c 	andmi	r1, r1, ip, lsl #8
 800e664:	4000480c 	andmi	r4, r0, ip, lsl #16
 800e668:	40011400 	andmi	r1, r1, r0, lsl #8
 800e66c:	40004800 	andmi	r4, r0, r0, lsl #16
 800e670:	2001c000 	andcs	ip, r1, r0
 800e674:	20001390 	mulcs	r0, r0, r3

0800e678 <USART2_IRQHandler>:
 800e678:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 800e67c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800e680:	06d2      	lsls	r2, r2, #27
 800e682:	d50b      	bpl.n	800e69c <USART2_IRQHandler+0x24>
 800e684:	4a57      	ldr	r2, [pc, #348]	@ (800e7e4 <USART2_IRQHandler+0x16c>)
 800e686:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800e68a:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 800e68e:	2b03      	cmp	r3, #3
 800e690:	d018      	beq.n	800e6c4 <USART2_IRQHandler+0x4c>
 800e692:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 800e696:	2b08      	cmp	r3, #8
 800e698:	d02e      	beq.n	800e6f8 <USART2_IRQHandler+0x80>
 800e69a:	4770      	bx	lr
 800e69c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800e6a0:	f012 0f02 	tst.w	r2, #2
 800e6a4:	4a4f      	ldr	r2, [pc, #316]	@ (800e7e4 <USART2_IRQHandler+0x16c>)
 800e6a6:	d11f      	bne.n	800e6e8 <USART2_IRQHandler+0x70>
 800e6a8:	f8d3 1804 	ldr.w	r1, [r3, #2052]	@ 0x804
 800e6ac:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 800e6b0:	b2c9      	uxtb	r1, r1
 800e6b2:	2b08      	cmp	r3, #8
 800e6b4:	d810      	bhi.n	800e6d8 <USART2_IRQHandler+0x60>
 800e6b6:	e8df f003 	tbb	[pc, r3]
 800e6ba:	320f6962 	andcc	r6, pc, #1605632	@ 0x188000
 800e6be:	7355430f 	cmpvc	r5, #1006632960	@ 0x3c000000
 800e6c2:	23000029 	movwcs	r0, #41	@ 0x29
 800e6c6:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 800e6ca:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800e6ce:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800e6d2:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800e6d6:	4770      	bx	lr
 800e6d8:	2300      	movs	r3, #0
 800e6da:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800e6de:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 800e6e2:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 800e6e6:	4770      	bx	lr
 800e6e8:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 800e6ec:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 800e6f0:	2b00      	cmp	r3, #0
 800e6f2:	d1d2      	bne.n	800e69a <USART2_IRQHandler+0x22>
 800e6f4:	2301      	movs	r3, #1
 800e6f6:	e7f4      	b.n	800e6e2 <USART2_IRQHandler+0x6a>
 800e6f8:	2300      	movs	r3, #0
 800e6fa:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 800e6fe:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 800e702:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800e706:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 800e70a:	4770      	bx	lr
 800e70c:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 800e710:	2b17      	cmp	r3, #23
 800e712:	d8c2      	bhi.n	800e69a <USART2_IRQHandler+0x22>
 800e714:	18d0      	adds	r0, r2, r3
 800e716:	3301      	adds	r3, #1
 800e718:	f880 1410 	strb.w	r1, [r0, #1040]	@ 0x410
 800e71c:	e7f3      	b.n	800e706 <USART2_IRQHandler+0x8e>
 800e71e:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 800e722:	1c43      	adds	r3, r0, #1
 800e724:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e728:	5411      	strb	r1, [r2, r0]
 800e72a:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800e72e:	d9b4      	bls.n	800e69a <USART2_IRQHandler+0x22>
 800e730:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800e734:	2100      	movs	r1, #0
 800e736:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800e73a:	f8c2 1518 	str.w	r1, [r2, #1304]	@ 0x518
 800e73e:	4770      	bx	lr
 800e740:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 800e744:	eb02 0c03 	add.w	ip, r2, r3
 800e748:	1c58      	adds	r0, r3, #1
 800e74a:	3b17      	subs	r3, #23
 800e74c:	2be9      	cmp	r3, #233	@ 0xe9
 800e74e:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 800e752:	f8c2 0514 	str.w	r0, [r2, #1300]	@ 0x514
 800e756:	d835      	bhi.n	800e7c4 <USART2_IRQHandler+0x14c>
 800e758:	f892 3412 	ldrb.w	r3, [r2, #1042]	@ 0x412
 800e75c:	4298      	cmp	r0, r3
 800e75e:	d19c      	bne.n	800e69a <USART2_IRQHandler+0x22>
 800e760:	2306      	movs	r3, #6
 800e762:	e7be      	b.n	800e6e2 <USART2_IRQHandler+0x6a>
 800e764:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 800e768:	eb02 0c03 	add.w	ip, r2, r3
 800e76c:	2007      	movs	r0, #7
 800e76e:	3301      	adds	r3, #1
 800e770:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 800e774:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 800e778:	f8c2 0518 	str.w	r0, [r2, #1304]	@ 0x518
 800e77c:	4770      	bx	lr
 800e77e:	2008      	movs	r0, #8
 800e780:	f8c2 0518 	str.w	r0, [r2, #1304]	@ 0x518
 800e784:	2301      	movs	r3, #1
 800e786:	f882 1410 	strb.w	r1, [r2, #1040]	@ 0x410
 800e78a:	e7bc      	b.n	800e706 <USART2_IRQHandler+0x8e>
 800e78c:	b301      	cbz	r1, 800e7d0 <USART2_IRQHandler+0x158>
 800e78e:	29cc      	cmp	r1, #204	@ 0xcc
 800e790:	d1a2      	bne.n	800e6d8 <USART2_IRQHandler+0x60>
 800e792:	2001      	movs	r0, #1
 800e794:	f882 1410 	strb.w	r1, [r2, #1040]	@ 0x410
 800e798:	2305      	movs	r3, #5
 800e79a:	f8c2 0514 	str.w	r0, [r2, #1300]	@ 0x514
 800e79e:	e7a0      	b.n	800e6e2 <USART2_IRQHandler+0x6a>
 800e7a0:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 800e7a4:	4810      	ldr	r0, [pc, #64]	@ (800e7e8 <USART2_IRQHandler+0x170>)
 800e7a6:	eb02 0c03 	add.w	ip, r2, r3
 800e7aa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800e7ae:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 800e7b2:	2100      	movs	r1, #0
 800e7b4:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 800e7b8:	f8c2 1518 	str.w	r1, [r2, #1304]	@ 0x518
 800e7bc:	4b0b      	ldr	r3, [pc, #44]	@ (800e7ec <USART2_IRQHandler+0x174>)
 800e7be:	6842      	ldr	r2, [r0, #4]
 800e7c0:	601a      	str	r2, [r3, #0]
 800e7c2:	4770      	bx	lr
 800e7c4:	f5b0 7f81 	cmp.w	r0, #258	@ 0x102
 800e7c8:	f4ff af67 	bcc.w	800e69a <USART2_IRQHandler+0x22>
 800e7cc:	2300      	movs	r3, #0
 800e7ce:	e788      	b.n	800e6e2 <USART2_IRQHandler+0x6a>
 800e7d0:	4807      	ldr	r0, [pc, #28]	@ (800e7f0 <USART2_IRQHandler+0x178>)
 800e7d2:	7011      	strb	r1, [r2, #0]
 800e7d4:	2301      	movs	r3, #1
 800e7d6:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800e7da:	6843      	ldr	r3, [r0, #4]
 800e7dc:	3301      	adds	r3, #1
 800e7de:	2103      	movs	r1, #3
 800e7e0:	6043      	str	r3, [r0, #4]
 800e7e2:	e7aa      	b.n	800e73a <USART2_IRQHandler+0xc2>
 800e7e4:	20001390 	mulcs	r0, r0, r3
 800e7e8:	e0001000 	and	r1, r0, r0
 800e7ec:	20001dc8 	andcs	r1, r0, r8, asr #27
 800e7f0:	20001dcc 	andcs	r1, r0, ip, asr #27

0800e7f4 <USART5_IRQHandler>:
 800e7f4:	4b5b      	ldr	r3, [pc, #364]	@ (800e964 <USART5_IRQHandler+0x170>)
 800e7f6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800e7fa:	06d2      	lsls	r2, r2, #27
 800e7fc:	d50b      	bpl.n	800e816 <USART5_IRQHandler+0x22>
 800e7fe:	4a5a      	ldr	r2, [pc, #360]	@ (800e968 <USART5_IRQHandler+0x174>)
 800e800:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 800e804:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 800e808:	2b03      	cmp	r3, #3
 800e80a:	d018      	beq.n	800e83e <USART5_IRQHandler+0x4a>
 800e80c:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 800e810:	2b08      	cmp	r3, #8
 800e812:	d02e      	beq.n	800e872 <USART5_IRQHandler+0x7e>
 800e814:	4770      	bx	lr
 800e816:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800e81a:	f012 0f02 	tst.w	r2, #2
 800e81e:	4a52      	ldr	r2, [pc, #328]	@ (800e968 <USART5_IRQHandler+0x174>)
 800e820:	d11f      	bne.n	800e862 <USART5_IRQHandler+0x6e>
 800e822:	f8d3 1404 	ldr.w	r1, [r3, #1028]	@ 0x404
 800e826:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 800e82a:	b2c9      	uxtb	r1, r1
 800e82c:	2b08      	cmp	r3, #8
 800e82e:	d810      	bhi.n	800e852 <USART5_IRQHandler+0x5e>
 800e830:	e8df f003 	tbb	[pc, r3]
 800e834:	320f6b64 	andcc	r6, pc, #100, 22	@ 0x19000
 800e838:	7557450f 	ldrbvc	r4, [r7, #-1295]	@ 0xfffffaf1
 800e83c:	23000029 	movwcs	r0, #41	@ 0x29
 800e840:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 800e844:	f8d2 3720 	ldr.w	r3, [r2, #1824]	@ 0x720
 800e848:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800e84c:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 800e850:	4770      	bx	lr
 800e852:	2300      	movs	r3, #0
 800e854:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 800e858:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 800e85c:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 800e860:	4770      	bx	lr
 800e862:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 800e866:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 800e86a:	2b00      	cmp	r3, #0
 800e86c:	d1d2      	bne.n	800e814 <USART5_IRQHandler+0x20>
 800e86e:	2301      	movs	r3, #1
 800e870:	e7f4      	b.n	800e85c <USART5_IRQHandler+0x68>
 800e872:	2300      	movs	r3, #0
 800e874:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 800e878:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 800e87c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800e880:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 800e884:	4770      	bx	lr
 800e886:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 800e88a:	2b17      	cmp	r3, #23
 800e88c:	d8c2      	bhi.n	800e814 <USART5_IRQHandler+0x20>
 800e88e:	18d0      	adds	r0, r2, r3
 800e890:	3301      	adds	r3, #1
 800e892:	f880 192c 	strb.w	r1, [r0, #2348]	@ 0x92c
 800e896:	e7f3      	b.n	800e880 <USART5_IRQHandler+0x8c>
 800e898:	f8d2 3720 	ldr.w	r3, [r2, #1824]	@ 0x720
 800e89c:	18d0      	adds	r0, r2, r3
 800e89e:	3301      	adds	r3, #1
 800e8a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e8a4:	f880 151c 	strb.w	r1, [r0, #1308]	@ 0x51c
 800e8a8:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 800e8ac:	d9b2      	bls.n	800e814 <USART5_IRQHandler+0x20>
 800e8ae:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800e8b2:	2100      	movs	r1, #0
 800e8b4:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 800e8b8:	f8c2 1a34 	str.w	r1, [r2, #2612]	@ 0xa34
 800e8bc:	4770      	bx	lr
 800e8be:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 800e8c2:	eb02 0c03 	add.w	ip, r2, r3
 800e8c6:	1c58      	adds	r0, r3, #1
 800e8c8:	3b17      	subs	r3, #23
 800e8ca:	2be9      	cmp	r3, #233	@ 0xe9
 800e8cc:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 800e8d0:	f8c2 0a30 	str.w	r0, [r2, #2608]	@ 0xa30
 800e8d4:	d835      	bhi.n	800e942 <USART5_IRQHandler+0x14e>
 800e8d6:	f892 392e 	ldrb.w	r3, [r2, #2350]	@ 0x92e
 800e8da:	4298      	cmp	r0, r3
 800e8dc:	d19a      	bne.n	800e814 <USART5_IRQHandler+0x20>
 800e8de:	2306      	movs	r3, #6
 800e8e0:	e7bc      	b.n	800e85c <USART5_IRQHandler+0x68>
 800e8e2:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 800e8e6:	eb02 0c03 	add.w	ip, r2, r3
 800e8ea:	2007      	movs	r0, #7
 800e8ec:	3301      	adds	r3, #1
 800e8ee:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 800e8f2:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 800e8f6:	f8c2 0a34 	str.w	r0, [r2, #2612]	@ 0xa34
 800e8fa:	4770      	bx	lr
 800e8fc:	2008      	movs	r0, #8
 800e8fe:	f8c2 0a34 	str.w	r0, [r2, #2612]	@ 0xa34
 800e902:	2301      	movs	r3, #1
 800e904:	f882 192c 	strb.w	r1, [r2, #2348]	@ 0x92c
 800e908:	e7ba      	b.n	800e880 <USART5_IRQHandler+0x8c>
 800e90a:	b301      	cbz	r1, 800e94e <USART5_IRQHandler+0x15a>
 800e90c:	29cc      	cmp	r1, #204	@ 0xcc
 800e90e:	d1a0      	bne.n	800e852 <USART5_IRQHandler+0x5e>
 800e910:	2001      	movs	r0, #1
 800e912:	f882 192c 	strb.w	r1, [r2, #2348]	@ 0x92c
 800e916:	2305      	movs	r3, #5
 800e918:	f8c2 0a30 	str.w	r0, [r2, #2608]	@ 0xa30
 800e91c:	e79e      	b.n	800e85c <USART5_IRQHandler+0x68>
 800e91e:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 800e922:	4812      	ldr	r0, [pc, #72]	@ (800e96c <USART5_IRQHandler+0x178>)
 800e924:	eb02 0c03 	add.w	ip, r2, r3
 800e928:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800e92c:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 800e930:	2100      	movs	r1, #0
 800e932:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 800e936:	f8c2 1a34 	str.w	r1, [r2, #2612]	@ 0xa34
 800e93a:	4b0d      	ldr	r3, [pc, #52]	@ (800e970 <USART5_IRQHandler+0x17c>)
 800e93c:	6842      	ldr	r2, [r0, #4]
 800e93e:	601a      	str	r2, [r3, #0]
 800e940:	4770      	bx	lr
 800e942:	f5b0 7f81 	cmp.w	r0, #258	@ 0x102
 800e946:	f4ff af65 	bcc.w	800e814 <USART5_IRQHandler+0x20>
 800e94a:	2300      	movs	r3, #0
 800e94c:	e786      	b.n	800e85c <USART5_IRQHandler+0x68>
 800e94e:	4809      	ldr	r0, [pc, #36]	@ (800e974 <USART5_IRQHandler+0x180>)
 800e950:	f882 151c 	strb.w	r1, [r2, #1308]	@ 0x51c
 800e954:	2301      	movs	r3, #1
 800e956:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 800e95a:	6903      	ldr	r3, [r0, #16]
 800e95c:	3301      	adds	r3, #1
 800e95e:	2103      	movs	r1, #3
 800e960:	6103      	str	r3, [r0, #16]
 800e962:	e7a9      	b.n	800e8b8 <USART5_IRQHandler+0xc4>
 800e964:	40011000 	andmi	r1, r1, r0
 800e968:	20001390 	mulcs	r0, r0, r3
 800e96c:	e0001000 	and	r1, r0, r0
 800e970:	20001dc8 	andcs	r1, r0, r8, asr #27
 800e974:	20001dcc 	andcs	r1, r0, ip, asr #27

0800e978 <TIMER1_IRQHandler>:
 800e978:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e97c:	691a      	ldr	r2, [r3, #16]
 800e97e:	0712      	lsls	r2, r2, #28
 800e980:	d53a      	bpl.n	800e9f8 <TIMER1_IRQHandler+0x80>
 800e982:	493a      	ldr	r1, [pc, #232]	@ (800ea6c <TIMER1_IRQHandler+0xf4>)
 800e984:	f8d1 2210 	ldr.w	r2, [r1, #528]	@ 0x210
 800e988:	2a02      	cmp	r2, #2
 800e98a:	b430      	push	{r4, r5}
 800e98c:	d03a      	beq.n	800ea04 <TIMER1_IRQHandler+0x8c>
 800e98e:	2a04      	cmp	r2, #4
 800e990:	d051      	beq.n	800ea36 <TIMER1_IRQHandler+0xbe>
 800e992:	2a01      	cmp	r2, #1
 800e994:	d124      	bne.n	800e9e0 <TIMER1_IRQHandler+0x68>
 800e996:	4a36      	ldr	r2, [pc, #216]	@ (800ea70 <TIMER1_IRQHandler+0xf8>)
 800e998:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 800e99c:	f8d2 040c 	ldr.w	r0, [r2, #1036]	@ 0x40c
 800e9a0:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 800e9a4:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
 800e9a8:	f444 1400 	orr.w	r4, r4, #2097152	@ 0x200000
 800e9ac:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 800e9b0:	f8c2 4400 	str.w	r4, [r2, #1024]	@ 0x400
 800e9b4:	f8c2 040c 	str.w	r0, [r2, #1036]	@ 0x40c
 800e9b8:	f8d2 4420 	ldr.w	r4, [r2, #1056]	@ 0x420
 800e9bc:	f8d2 0424 	ldr.w	r0, [r2, #1060]	@ 0x424
 800e9c0:	f8c2 4420 	str.w	r4, [r2, #1056]	@ 0x420
 800e9c4:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 800e9c8:	f440 60e0 	orr.w	r0, r0, #1792	@ 0x700
 800e9cc:	f8c2 0424 	str.w	r0, [r2, #1060]	@ 0x424
 800e9d0:	2402      	movs	r4, #2
 800e9d2:	4828      	ldr	r0, [pc, #160]	@ (800ea74 <TIMER1_IRQHandler+0xfc>)
 800e9d4:	f8c1 4210 	str.w	r4, [r1, #528]	@ 0x210
 800e9d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800e9da:	6841      	ldr	r1, [r0, #4]
 800e9dc:	440a      	add	r2, r1
 800e9de:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e9e0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e9e4:	f06f 0208 	mvn.w	r2, #8
 800e9e8:	611a      	str	r2, [r3, #16]
 800e9ea:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e9ee:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800e9f2:	bc30      	pop	{r4, r5}
 800e9f4:	611a      	str	r2, [r3, #16]
 800e9f6:	4770      	bx	lr
 800e9f8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e9fc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800ea00:	611a      	str	r2, [r3, #16]
 800ea02:	4770      	bx	lr
 800ea04:	4b1c      	ldr	r3, [pc, #112]	@ (800ea78 <TIMER1_IRQHandler+0x100>)
 800ea06:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800ea08:	f022 0201 	bic.w	r2, r2, #1
 800ea0c:	659a      	str	r2, [r3, #88]	@ 0x58
 800ea0e:	6898      	ldr	r0, [r3, #8]
 800ea10:	f040 6000 	orr.w	r0, r0, #134217728	@ 0x8000000
 800ea14:	6098      	str	r0, [r3, #8]
 800ea16:	f8b1 0204 	ldrh.w	r0, [r1, #516]	@ 0x204
 800ea1a:	6659      	str	r1, [r3, #100]	@ 0x64
 800ea1c:	f04f 2440 	mov.w	r4, #1073758208	@ 0x40004000
 800ea20:	f042 0211 	orr.w	r2, r2, #17
 800ea24:	65d8      	str	r0, [r3, #92]	@ 0x5c
 800ea26:	659a      	str	r2, [r3, #88]	@ 0x58
 800ea28:	f8d4 3814 	ldr.w	r3, [r4, #2068]	@ 0x814
 800ea2c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ea30:	f8c4 3814 	str.w	r3, [r4, #2068]	@ 0x814
 800ea34:	e7d4      	b.n	800e9e0 <TIMER1_IRQHandler+0x68>
 800ea36:	4a0e      	ldr	r2, [pc, #56]	@ (800ea70 <TIMER1_IRQHandler+0xf8>)
 800ea38:	f8d2 0400 	ldr.w	r0, [r2, #1024]	@ 0x400
 800ea3c:	f8d2 440c 	ldr.w	r4, [r2, #1036]	@ 0x40c
 800ea40:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
 800ea44:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 800ea48:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 800ea4c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
 800ea50:	f8c2 0400 	str.w	r0, [r2, #1024]	@ 0x400
 800ea54:	f8c2 440c 	str.w	r4, [r2, #1036]	@ 0x40c
 800ea58:	4806      	ldr	r0, [pc, #24]	@ (800ea74 <TIMER1_IRQHandler+0xfc>)
 800ea5a:	f8c2 5428 	str.w	r5, [r2, #1064]	@ 0x428
 800ea5e:	2201      	movs	r2, #1
 800ea60:	f8c1 2210 	str.w	r2, [r1, #528]	@ 0x210
 800ea64:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ea66:	6801      	ldr	r1, [r0, #0]
 800ea68:	e7b8      	b.n	800e9dc <TIMER1_IRQHandler+0x64>
 800ea6a:	bf00      	nop
 800ea6c:	2001c000 	andcs	ip, r1, r0
 800ea70:	40020000 	andmi	r0, r2, r0
 800ea74:	20001384 	andcs	r1, r0, r4, lsl #7
 800ea78:	40026000 	andmi	r6, r2, r0

0800ea7c <TIMER4_IRQHandler>:
 800ea7c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800ea80:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	@ 0xc10
 800ea84:	0752      	lsls	r2, r2, #29
 800ea86:	d53e      	bpl.n	800eb06 <TIMER4_IRQHandler+0x8a>
 800ea88:	4940      	ldr	r1, [pc, #256]	@ (800eb8c <TIMER4_IRQHandler+0x110>)
 800ea8a:	f8d1 2424 	ldr.w	r2, [r1, #1060]	@ 0x424
 800ea8e:	2a02      	cmp	r2, #2
 800ea90:	b430      	push	{r4, r5}
 800ea92:	d03f      	beq.n	800eb14 <TIMER4_IRQHandler+0x98>
 800ea94:	2a04      	cmp	r2, #4
 800ea96:	d05e      	beq.n	800eb56 <TIMER4_IRQHandler+0xda>
 800ea98:	2a01      	cmp	r2, #1
 800ea9a:	d126      	bne.n	800eaea <TIMER4_IRQHandler+0x6e>
 800ea9c:	4a3c      	ldr	r2, [pc, #240]	@ (800eb90 <TIMER4_IRQHandler+0x114>)
 800ea9e:	f8d2 4800 	ldr.w	r4, [r2, #2048]	@ 0x800
 800eaa2:	f8d2 080c 	ldr.w	r0, [r2, #2060]	@ 0x80c
 800eaa6:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 800eaaa:	f420 5040 	bic.w	r0, r0, #12288	@ 0x3000
 800eaae:	f444 5400 	orr.w	r4, r4, #8192	@ 0x2000
 800eab2:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 800eab6:	f8c2 4800 	str.w	r4, [r2, #2048]	@ 0x800
 800eaba:	f8c2 080c 	str.w	r0, [r2, #2060]	@ 0x80c
 800eabe:	f8d2 0820 	ldr.w	r0, [r2, #2080]	@ 0x820
 800eac2:	f8d2 5824 	ldr.w	r5, [r2, #2084]	@ 0x824
 800eac6:	f020 6070 	bic.w	r0, r0, #251658240	@ 0xf000000
 800eaca:	f040 6000 	orr.w	r0, r0, #134217728	@ 0x8000000
 800eace:	f8c2 0820 	str.w	r0, [r2, #2080]	@ 0x820
 800ead2:	2402      	movs	r4, #2
 800ead4:	482f      	ldr	r0, [pc, #188]	@ (800eb94 <TIMER4_IRQHandler+0x118>)
 800ead6:	f8c2 5824 	str.w	r5, [r2, #2084]	@ 0x824
 800eada:	f8c1 4424 	str.w	r4, [r1, #1060]	@ 0x424
 800eade:	f8d3 2c24 	ldr.w	r2, [r3, #3108]	@ 0xc24
 800eae2:	6841      	ldr	r1, [r0, #4]
 800eae4:	440a      	add	r2, r1
 800eae6:	f8c3 2c38 	str.w	r2, [r3, #3128]	@ 0xc38
 800eaea:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800eaee:	f06f 0204 	mvn.w	r2, #4
 800eaf2:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 800eaf6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800eafa:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800eafe:	bc30      	pop	{r4, r5}
 800eb00:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 800eb04:	4770      	bx	lr
 800eb06:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800eb0a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800eb0e:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 800eb12:	4770      	bx	lr
 800eb14:	4b20      	ldr	r3, [pc, #128]	@ (800eb98 <TIMER4_IRQHandler+0x11c>)
 800eb16:	4c21      	ldr	r4, [pc, #132]	@ (800eb9c <TIMER4_IRQHandler+0x120>)
 800eb18:	f8d3 24a0 	ldr.w	r2, [r3, #1184]	@ 0x4a0
 800eb1c:	f022 0201 	bic.w	r2, r2, #1
 800eb20:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 800eb24:	f8d3 040c 	ldr.w	r0, [r3, #1036]	@ 0x40c
 800eb28:	f440 1000 	orr.w	r0, r0, #2097152	@ 0x200000
 800eb2c:	f8c3 040c 	str.w	r0, [r3, #1036]	@ 0x40c
 800eb30:	f042 0211 	orr.w	r2, r2, #17
 800eb34:	f501 7005 	add.w	r0, r1, #532	@ 0x214
 800eb38:	f8b1 1418 	ldrh.w	r1, [r1, #1048]	@ 0x418
 800eb3c:	f8c3 04ac 	str.w	r0, [r3, #1196]	@ 0x4ac
 800eb40:	f8c3 14a4 	str.w	r1, [r3, #1188]	@ 0x4a4
 800eb44:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 800eb48:	f8d4 3414 	ldr.w	r3, [r4, #1044]	@ 0x414
 800eb4c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800eb50:	f8c4 3414 	str.w	r3, [r4, #1044]	@ 0x414
 800eb54:	e7c9      	b.n	800eaea <TIMER4_IRQHandler+0x6e>
 800eb56:	4a0e      	ldr	r2, [pc, #56]	@ (800eb90 <TIMER4_IRQHandler+0x114>)
 800eb58:	f8d2 0800 	ldr.w	r0, [r2, #2048]	@ 0x800
 800eb5c:	f8d2 480c 	ldr.w	r4, [r2, #2060]	@ 0x80c
 800eb60:	f420 5040 	bic.w	r0, r0, #12288	@ 0x3000
 800eb64:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 800eb68:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 800eb6c:	2540      	movs	r5, #64	@ 0x40
 800eb6e:	f8c2 0800 	str.w	r0, [r2, #2048]	@ 0x800
 800eb72:	f8c2 480c 	str.w	r4, [r2, #2060]	@ 0x80c
 800eb76:	4807      	ldr	r0, [pc, #28]	@ (800eb94 <TIMER4_IRQHandler+0x118>)
 800eb78:	f8c2 5828 	str.w	r5, [r2, #2088]	@ 0x828
 800eb7c:	2201      	movs	r2, #1
 800eb7e:	f8c1 2424 	str.w	r2, [r1, #1060]	@ 0x424
 800eb82:	f8d3 2c24 	ldr.w	r2, [r3, #3108]	@ 0xc24
 800eb86:	6801      	ldr	r1, [r0, #0]
 800eb88:	e7ac      	b.n	800eae4 <TIMER4_IRQHandler+0x68>
 800eb8a:	bf00      	nop
 800eb8c:	2001c000 	andcs	ip, r1, r0
 800eb90:	40020000 	andmi	r0, r2, r0
 800eb94:	20001384 	andcs	r1, r0, r4, lsl #7
 800eb98:	40026000 	andmi	r6, r2, r0
 800eb9c:	40011000 	andmi	r1, r1, r0

0800eba0 <TIMER6_IRQHandler>:
 800eba0:	4b11      	ldr	r3, [pc, #68]	@ (800ebe8 <TIMER6_IRQHandler+0x48>)
 800eba2:	f8d3 2410 	ldr.w	r2, [r3, #1040]	@ 0x410
 800eba6:	07d3      	lsls	r3, r2, #31
 800eba8:	d518      	bpl.n	800ebdc <TIMER6_IRQHandler+0x3c>
 800ebaa:	4b10      	ldr	r3, [pc, #64]	@ (800ebec <TIMER6_IRQHandler+0x4c>)
 800ebac:	4810      	ldr	r0, [pc, #64]	@ (800ebf0 <TIMER6_IRQHandler+0x50>)
 800ebae:	6859      	ldr	r1, [r3, #4]
 800ebb0:	b410      	push	{r4}
 800ebb2:	689c      	ldr	r4, [r3, #8]
 800ebb4:	1b09      	subs	r1, r1, r4
 800ebb6:	6019      	str	r1, [r3, #0]
 800ebb8:	6859      	ldr	r1, [r3, #4]
 800ebba:	6099      	str	r1, [r3, #8]
 800ebbc:	6919      	ldr	r1, [r3, #16]
 800ebbe:	695c      	ldr	r4, [r3, #20]
 800ebc0:	1b09      	subs	r1, r1, r4
 800ebc2:	60d9      	str	r1, [r3, #12]
 800ebc4:	6919      	ldr	r1, [r3, #16]
 800ebc6:	6159      	str	r1, [r3, #20]
 800ebc8:	6843      	ldr	r3, [r0, #4]
 800ebca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ebce:	3301      	adds	r3, #1
 800ebd0:	6043      	str	r3, [r0, #4]
 800ebd2:	4b05      	ldr	r3, [pc, #20]	@ (800ebe8 <TIMER6_IRQHandler+0x48>)
 800ebd4:	43d2      	mvns	r2, r2
 800ebd6:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
 800ebda:	4770      	bx	lr
 800ebdc:	4b02      	ldr	r3, [pc, #8]	@ (800ebe8 <TIMER6_IRQHandler+0x48>)
 800ebde:	43d2      	mvns	r2, r2
 800ebe0:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
 800ebe4:	4770      	bx	lr
 800ebe6:	bf00      	nop
 800ebe8:	40001000 	andmi	r1, r0, r0
 800ebec:	20001dcc 	andcs	r1, r0, ip, asr #27
 800ebf0:	20009ae0 	andcs	r9, r0, r0, ror #21

0800ebf4 <DMA0_Channel3_IRQHandler>:
 800ebf4:	4b17      	ldr	r3, [pc, #92]	@ (800ec54 <DMA0_Channel3_IRQHandler+0x60>)
 800ebf6:	681a      	ldr	r2, [r3, #0]
 800ebf8:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 800ebfa:	0110      	lsls	r0, r2, #4
 800ebfc:	d516      	bpl.n	800ec2c <DMA0_Channel3_IRQHandler+0x38>
 800ebfe:	06ca      	lsls	r2, r1, #27
 800ec00:	d514      	bpl.n	800ec2c <DMA0_Channel3_IRQHandler+0x38>
 800ec02:	b510      	push	{r4, lr}
 800ec04:	4c14      	ldr	r4, [pc, #80]	@ (800ec58 <DMA0_Channel3_IRQHandler+0x64>)
 800ec06:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800ec08:	f8d4 120c 	ldr.w	r1, [r4, #524]	@ 0x20c
 800ec0c:	f022 0298 	bic.w	r2, r2, #152	@ 0x98
 800ec10:	659a      	str	r2, [r3, #88]	@ 0x58
 800ec12:	b989      	cbnz	r1, 800ec38 <DMA0_Channel3_IRQHandler+0x44>
 800ec14:	f8c4 1210 	str.w	r1, [r4, #528]	@ 0x210
 800ec18:	4a10      	ldr	r2, [pc, #64]	@ (800ec5c <DMA0_Channel3_IRQHandler+0x68>)
 800ec1a:	6813      	ldr	r3, [r2, #0]
 800ec1c:	3301      	adds	r3, #1
 800ec1e:	6013      	str	r3, [r2, #0]
 800ec20:	4a0c      	ldr	r2, [pc, #48]	@ (800ec54 <DMA0_Channel3_IRQHandler+0x60>)
 800ec22:	6893      	ldr	r3, [r2, #8]
 800ec24:	f043 6320 	orr.w	r3, r3, #167772160	@ 0xa000000
 800ec28:	6093      	str	r3, [r2, #8]
 800ec2a:	bd10      	pop	{r4, pc}
 800ec2c:	4a09      	ldr	r2, [pc, #36]	@ (800ec54 <DMA0_Channel3_IRQHandler+0x60>)
 800ec2e:	6893      	ldr	r3, [r2, #8]
 800ec30:	f043 6320 	orr.w	r3, r3, #167772160	@ 0xa000000
 800ec34:	6093      	str	r3, [r2, #8]
 800ec36:	4770      	bx	lr
 800ec38:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800ec3c:	4b08      	ldr	r3, [pc, #32]	@ (800ec60 <DMA0_Channel3_IRQHandler+0x6c>)
 800ec3e:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ec40:	689b      	ldr	r3, [r3, #8]
 800ec42:	2102      	movs	r1, #2
 800ec44:	441a      	add	r2, r3
 800ec46:	f006 fb5c 	bl	8015302 <timer_channel_output_pulse_value_config>
 800ec4a:	2304      	movs	r3, #4
 800ec4c:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
 800ec50:	e7e2      	b.n	800ec18 <DMA0_Channel3_IRQHandler+0x24>
 800ec52:	bf00      	nop
 800ec54:	40026000 	andmi	r6, r2, r0
 800ec58:	2001c000 	andcs	ip, r1, r0
 800ec5c:	20001de4 	andcs	r1, r0, r4, ror #27
 800ec60:	20001384 	andcs	r1, r0, r4, lsl #7

0800ec64 <DMA1_Channel6_IRQHandler>:
 800ec64:	4b1c      	ldr	r3, [pc, #112]	@ (800ecd8 <DMA1_Channel6_IRQHandler+0x74>)
 800ec66:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 800ec6a:	f8d3 14a0 	ldr.w	r1, [r3, #1184]	@ 0x4a0
 800ec6e:	0290      	lsls	r0, r2, #10
 800ec70:	d51a      	bpl.n	800eca8 <DMA1_Channel6_IRQHandler+0x44>
 800ec72:	06ca      	lsls	r2, r1, #27
 800ec74:	d518      	bpl.n	800eca8 <DMA1_Channel6_IRQHandler+0x44>
 800ec76:	b510      	push	{r4, lr}
 800ec78:	4c18      	ldr	r4, [pc, #96]	@ (800ecdc <DMA1_Channel6_IRQHandler+0x78>)
 800ec7a:	f8d3 24a0 	ldr.w	r2, [r3, #1184]	@ 0x4a0
 800ec7e:	f8d4 1420 	ldr.w	r1, [r4, #1056]	@ 0x420
 800ec82:	f022 0298 	bic.w	r2, r2, #152	@ 0x98
 800ec86:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 800ec8a:	b9a9      	cbnz	r1, 800ecb8 <DMA1_Channel6_IRQHandler+0x54>
 800ec8c:	f8c4 1424 	str.w	r1, [r4, #1060]	@ 0x424
 800ec90:	4a13      	ldr	r2, [pc, #76]	@ (800ece0 <DMA1_Channel6_IRQHandler+0x7c>)
 800ec92:	69d3      	ldr	r3, [r2, #28]
 800ec94:	3301      	adds	r3, #1
 800ec96:	61d3      	str	r3, [r2, #28]
 800ec98:	4a0f      	ldr	r2, [pc, #60]	@ (800ecd8 <DMA1_Channel6_IRQHandler+0x74>)
 800ec9a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 800ec9e:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 800eca2:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 800eca6:	bd10      	pop	{r4, pc}
 800eca8:	4a0b      	ldr	r2, [pc, #44]	@ (800ecd8 <DMA1_Channel6_IRQHandler+0x74>)
 800ecaa:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 800ecae:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 800ecb2:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 800ecb6:	4770      	bx	lr
 800ecb8:	4b0a      	ldr	r3, [pc, #40]	@ (800ece4 <DMA1_Channel6_IRQHandler+0x80>)
 800ecba:	480b      	ldr	r0, [pc, #44]	@ (800ece8 <DMA1_Channel6_IRQHandler+0x84>)
 800ecbc:	689b      	ldr	r3, [r3, #8]
 800ecbe:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800ecc2:	2101      	movs	r1, #1
 800ecc4:	f8d2 2c24 	ldr.w	r2, [r2, #3108]	@ 0xc24
 800ecc8:	441a      	add	r2, r3
 800ecca:	f006 fb1a 	bl	8015302 <timer_channel_output_pulse_value_config>
 800ecce:	2304      	movs	r3, #4
 800ecd0:	f8c4 3424 	str.w	r3, [r4, #1060]	@ 0x424
 800ecd4:	e7dc      	b.n	800ec90 <DMA1_Channel6_IRQHandler+0x2c>
 800ecd6:	bf00      	nop
 800ecd8:	40026000 	andmi	r6, r2, r0
 800ecdc:	2001c000 	andcs	ip, r1, r0
 800ece0:	20001de4 	andcs	r1, r0, r4, ror #27
 800ece4:	20001384 	andcs	r1, r0, r4, lsl #7
 800ece8:	40000c00 	andmi	r0, r0, r0, lsl #24

0800ecec <Dmx::Dmx()>:
 800ecec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecf0:	49a7      	ldr	r1, [pc, #668]	@ (800ef90 <Dmx::Dmx()+0x2a4>)
 800ecf2:	4ba8      	ldr	r3, [pc, #672]	@ (800ef94 <Dmx::Dmx()+0x2a8>)
 800ecf4:	f8df b2d0 	ldr.w	fp, [pc, #720]	@ 800efc8 <Dmx::Dmx()+0x2dc>
 800ecf8:	6008      	str	r0, [r1, #0]
 800ecfa:	f246 12a8 	movw	r2, #25000	@ 0x61a8
 800ecfe:	e9c0 2200 	strd	r2, r2, [r0]
 800ed02:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800ed06:	6102      	str	r2, [r0, #16]
 800ed08:	21b0      	movs	r1, #176	@ 0xb0
 800ed0a:	220c      	movs	r2, #12
 800ed0c:	2500      	movs	r5, #0
 800ed0e:	e9c3 1200 	strd	r1, r2, [r3]
 800ed12:	4ea1      	ldr	r6, [pc, #644]	@ (800ef98 <Dmx::Dmx()+0x2ac>)
 800ed14:	7705      	strb	r5, [r0, #28]
 800ed16:	f44f 620c 	mov.w	r2, #2240	@ 0x8c0
 800ed1a:	b08f      	sub	sp, #60	@ 0x3c
 800ed1c:	4607      	mov	r7, r0
 800ed1e:	609a      	str	r2, [r3, #8]
 800ed20:	46d8      	mov	r8, fp
 800ed22:	f100 0910 	add.w	r9, r0, #16
 800ed26:	f04f 0a01 	mov.w	sl, #1
 800ed2a:	462c      	mov	r4, r5
 800ed2c:	e9d6 0300 	ldrd	r0, r3, [r6]
 800ed30:	2202      	movs	r2, #2
 800ed32:	2101      	movs	r1, #1
 800ed34:	9303      	str	r3, [sp, #12]
 800ed36:	9002      	str	r0, [sp, #8]
 800ed38:	f006 f896 	bl	8014e68 <gpio_mode_set>
 800ed3c:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 800ed40:	2100      	movs	r1, #0
 800ed42:	2202      	movs	r2, #2
 800ed44:	f006 f8b2 	bl	8014eac <gpio_output_options_set>
 800ed48:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ed4c:	f849 3c08 	str.w	r3, [r9, #-8]
 800ed50:	f859 3f04 	ldr.w	r3, [r9, #4]!
 800ed54:	2b01      	cmp	r3, #1
 800ed56:	4b91      	ldr	r3, [pc, #580]	@ (800ef9c <Dmx::Dmx()+0x2b0>)
 800ed58:	4629      	mov	r1, r5
 800ed5a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800ed5e:	f000 8110 	beq.w	800ef82 <Dmx::Dmx()+0x296>
 800ed62:	f8c9 a000 	str.w	sl, [r9]
 800ed66:	b113      	cbz	r3, 800ed6e <Dmx::Dmx()+0x82>
 800ed68:	4638      	mov	r0, r7
 800ed6a:	f7ff fc35 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800ed6e:	e9d6 3200 	ldrd	r3, r2, [r6]
 800ed72:	629a      	str	r2, [r3, #40]	@ 0x28
 800ed74:	498a      	ldr	r1, [pc, #552]	@ (800efa0 <Dmx::Dmx()+0x2b4>)
 800ed76:	f240 521c 	movw	r2, #1308	@ 0x51c
 800ed7a:	f44f 7305 	mov.w	r3, #532	@ 0x214
 800ed7e:	fb02 1205 	mla	r2, r2, r5, r1
 800ed82:	fb03 b305 	mla	r3, r3, r5, fp
 800ed86:	f8c2 4518 	str.w	r4, [r2, #1304]	@ 0x518
 800ed8a:	f8c3 4210 	str.w	r4, [r3, #528]	@ 0x210
 800ed8e:	f240 2301 	movw	r3, #513	@ 0x201
 800ed92:	f8c8 420c 	str.w	r4, [r8, #524]	@ 0x20c
 800ed96:	f8c8 3204 	str.w	r3, [r8, #516]	@ 0x204
 800ed9a:	4640      	mov	r0, r8
 800ed9c:	f44f 7201 	mov.w	r2, #516	@ 0x204
 800eda0:	2100      	movs	r1, #0
 800eda2:	f007 fa11 	bl	80161c8 <memset>
 800eda6:	3608      	adds	r6, #8
 800eda8:	f508 7805 	add.w	r8, r8, #532	@ 0x214
 800edac:	b90d      	cbnz	r5, 800edb2 <Dmx::Dmx()+0xc6>
 800edae:	2501      	movs	r5, #1
 800edb0:	e7bc      	b.n	800ed2c <Dmx::Dmx()+0x40>
 800edb2:	4e7c      	ldr	r6, [pc, #496]	@ (800efa4 <Dmx::Dmx()+0x2b8>)
 800edb4:	4d7c      	ldr	r5, [pc, #496]	@ (800efa8 <Dmx::Dmx()+0x2bc>)
 800edb6:	f640 4015 	movw	r0, #3093	@ 0xc15
 800edba:	f006 f8d7 	bl	8014f6c <rcu_periph_clock_enable>
 800edbe:	f640 4016 	movw	r0, #3094	@ 0xc16
 800edc2:	f006 f8d3 	bl	8014f6c <rcu_periph_clock_enable>
 800edc6:	4630      	mov	r0, r6
 800edc8:	2103      	movs	r1, #3
 800edca:	f005 fd23 	bl	8014814 <dma_deinit>
 800edce:	f04f 0b40 	mov.w	fp, #64	@ 0x40
 800edd2:	4b76      	ldr	r3, [pc, #472]	@ (800efac <Dmx::Dmx()+0x2c0>)
 800edd4:	9305      	str	r3, [sp, #20]
 800edd6:	aa05      	add	r2, sp, #20
 800edd8:	4630      	mov	r0, r6
 800edda:	f44f 3900 	mov.w	r9, #131072	@ 0x20000
 800edde:	2103      	movs	r1, #3
 800ede0:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 800ede4:	9408      	str	r4, [sp, #32]
 800ede6:	f8cd a018 	str.w	sl, [sp, #24]
 800edea:	9409      	str	r4, [sp, #36]	@ 0x24
 800edec:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800edf0:	f005 fd3c 	bl	801486c <dma_single_data_mode_init>
 800edf4:	4630      	mov	r0, r6
 800edf6:	2103      	movs	r1, #3
 800edf8:	f005 fd77 	bl	80148ea <dma_circulation_disable>
 800edfc:	2204      	movs	r2, #4
 800edfe:	2103      	movs	r1, #3
 800ee00:	4630      	mov	r0, r6
 800ee02:	f005 fd7a 	bl	80148fa <dma_channel_subperipheral_select>
 800ee06:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 800ee08:	f04f 0810 	mov.w	r8, #16
 800ee0c:	f023 0398 	bic.w	r3, r3, #152	@ 0x98
 800ee10:	65b3      	str	r3, [r6, #88]	@ 0x58
 800ee12:	f885 830e 	strb.w	r8, [r5, #782]	@ 0x30e
 800ee16:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800ee1a:	602b      	str	r3, [r5, #0]
 800ee1c:	4864      	ldr	r0, [pc, #400]	@ (800efb0 <Dmx::Dmx()+0x2c4>)
 800ee1e:	2106      	movs	r1, #6
 800ee20:	f005 fcf8 	bl	8014814 <dma_deinit>
 800ee24:	4b63      	ldr	r3, [pc, #396]	@ (800efb4 <Dmx::Dmx()+0x2c8>)
 800ee26:	4862      	ldr	r0, [pc, #392]	@ (800efb0 <Dmx::Dmx()+0x2c4>)
 800ee28:	9305      	str	r3, [sp, #20]
 800ee2a:	aa05      	add	r2, sp, #20
 800ee2c:	2106      	movs	r1, #6
 800ee2e:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800ee32:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 800ee36:	f8cd a018 	str.w	sl, [sp, #24]
 800ee3a:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800ee3e:	f005 fd15 	bl	801486c <dma_single_data_mode_init>
 800ee42:	485b      	ldr	r0, [pc, #364]	@ (800efb0 <Dmx::Dmx()+0x2c4>)
 800ee44:	2106      	movs	r1, #6
 800ee46:	f005 fd50 	bl	80148ea <dma_circulation_disable>
 800ee4a:	4859      	ldr	r0, [pc, #356]	@ (800efb0 <Dmx::Dmx()+0x2c4>)
 800ee4c:	2205      	movs	r2, #5
 800ee4e:	2106      	movs	r1, #6
 800ee50:	f005 fd53 	bl	80148fa <dma_channel_subperipheral_select>
 800ee54:	f8d6 34a0 	ldr.w	r3, [r6, #1184]	@ 0x4a0
 800ee58:	f023 0398 	bic.w	r3, r3, #152	@ 0x98
 800ee5c:	f8c6 34a0 	str.w	r3, [r6, #1184]	@ 0x4a0
 800ee60:	f885 8345 	strb.w	r8, [r5, #837]	@ 0x345
 800ee64:	2320      	movs	r3, #32
 800ee66:	60ab      	str	r3, [r5, #8]
 800ee68:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800ee6c:	f006 f87e 	bl	8014f6c <rcu_periph_clock_enable>
 800ee70:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800ee74:	f006 f936 	bl	80150e4 <timer_deinit>
 800ee78:	a805      	add	r0, sp, #20
 800ee7a:	f006 f9d9 	bl	8015230 <timer_struct_para_init>
 800ee7e:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 800ee82:	a905      	add	r1, sp, #20
 800ee84:	f04f 09ef 	mov.w	r9, #239	@ 0xef
 800ee88:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800ee8c:	9406      	str	r4, [sp, #24]
 800ee8e:	f88d 4020 	strb.w	r4, [sp, #32]
 800ee92:	9607      	str	r6, [sp, #28]
 800ee94:	f8cd 9014 	str.w	r9, [sp, #20]
 800ee98:	f006 f9d2 	bl	8015240 <timer_init>
 800ee9c:	4631      	mov	r1, r6
 800ee9e:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eea2:	f006 fa3c 	bl	801531e <timer_flag_clear>
 800eea6:	4631      	mov	r1, r6
 800eea8:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eeac:	f006 fa3e 	bl	801532c <timer_interrupt_flag_clear>
 800eeb0:	4642      	mov	r2, r8
 800eeb2:	2102      	movs	r1, #2
 800eeb4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eeb8:	f006 f9fd 	bl	80152b6 <timer_channel_output_mode_config>
 800eebc:	4632      	mov	r2, r6
 800eebe:	2102      	movs	r1, #2
 800eec0:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eec4:	f006 fa1d 	bl	8015302 <timer_channel_output_pulse_value_config>
 800eec8:	2108      	movs	r1, #8
 800eeca:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eece:	f006 fa29 	bl	8015324 <timer_interrupt_enable>
 800eed2:	f885 431c 	strb.w	r4, [r5, #796]	@ 0x31c
 800eed6:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 800eeda:	602b      	str	r3, [r5, #0]
 800eedc:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800eee0:	f006 f9e2 	bl	80152a8 <timer_enable>
 800eee4:	f241 0003 	movw	r0, #4099	@ 0x1003
 800eee8:	f006 f840 	bl	8014f6c <rcu_periph_clock_enable>
 800eeec:	4832      	ldr	r0, [pc, #200]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800eeee:	f006 f8f9 	bl	80150e4 <timer_deinit>
 800eef2:	a805      	add	r0, sp, #20
 800eef4:	f006 f99c 	bl	8015230 <timer_struct_para_init>
 800eef8:	a905      	add	r1, sp, #20
 800eefa:	482f      	ldr	r0, [pc, #188]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800eefc:	f8cd 9014 	str.w	r9, [sp, #20]
 800ef00:	e9cd 4606 	strd	r4, r6, [sp, #24]
 800ef04:	f88d 4020 	strb.w	r4, [sp, #32]
 800ef08:	f006 f99a 	bl	8015240 <timer_init>
 800ef0c:	4631      	mov	r1, r6
 800ef0e:	482a      	ldr	r0, [pc, #168]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef10:	f006 fa05 	bl	801531e <timer_flag_clear>
 800ef14:	4631      	mov	r1, r6
 800ef16:	4828      	ldr	r0, [pc, #160]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef18:	f006 fa08 	bl	801532c <timer_interrupt_flag_clear>
 800ef1c:	4642      	mov	r2, r8
 800ef1e:	4826      	ldr	r0, [pc, #152]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef20:	2101      	movs	r1, #1
 800ef22:	f006 f9c8 	bl	80152b6 <timer_channel_output_mode_config>
 800ef26:	4632      	mov	r2, r6
 800ef28:	4823      	ldr	r0, [pc, #140]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef2a:	2101      	movs	r1, #1
 800ef2c:	f006 f9e9 	bl	8015302 <timer_channel_output_pulse_value_config>
 800ef30:	4821      	ldr	r0, [pc, #132]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef32:	2104      	movs	r1, #4
 800ef34:	f006 f9f6 	bl	8015324 <timer_interrupt_enable>
 800ef38:	f885 4332 	strb.w	r4, [r5, #818]	@ 0x332
 800ef3c:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 800ef40:	606b      	str	r3, [r5, #4]
 800ef42:	481d      	ldr	r0, [pc, #116]	@ (800efb8 <Dmx::Dmx()+0x2cc>)
 800ef44:	f04f 0802 	mov.w	r8, #2
 800ef48:	f006 f9ae 	bl	80152a8 <timer_enable>
 800ef4c:	491b      	ldr	r1, [pc, #108]	@ (800efbc <Dmx::Dmx()+0x2d0>)
 800ef4e:	481c      	ldr	r0, [pc, #112]	@ (800efc0 <Dmx::Dmx()+0x2d4>)
 800ef50:	f8cd 8000 	str.w	r8, [sp]
 800ef54:	2300      	movs	r3, #0
 800ef56:	2208      	movs	r2, #8
 800ef58:	f006 faf0 	bl	801553c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 800ef5c:	f885 4327 	strb.w	r4, [r5, #807]	@ 0x327
 800ef60:	2680      	movs	r6, #128	@ 0x80
 800ef62:	606e      	str	r6, [r5, #4]
 800ef64:	4915      	ldr	r1, [pc, #84]	@ (800efbc <Dmx::Dmx()+0x2d0>)
 800ef66:	4817      	ldr	r0, [pc, #92]	@ (800efc4 <Dmx::Dmx()+0x2d8>)
 800ef68:	f8cd 8000 	str.w	r8, [sp]
 800ef6c:	2300      	movs	r3, #0
 800ef6e:	2208      	movs	r2, #8
 800ef70:	f006 fae4 	bl	801553c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 800ef74:	f885 4347 	strb.w	r4, [r5, #839]	@ 0x347
 800ef78:	60ae      	str	r6, [r5, #8]
 800ef7a:	4638      	mov	r0, r7
 800ef7c:	b00f      	add	sp, #60	@ 0x3c
 800ef7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef82:	2b00      	cmp	r3, #0
 800ef84:	f43f aef6 	beq.w	800ed74 <Dmx::Dmx()+0x88>
 800ef88:	4638      	mov	r0, r7
 800ef8a:	f7ff fb25 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800ef8e:	e6f1      	b.n	800ed74 <Dmx::Dmx()+0x88>
 800ef90:	20001380 	andcs	r1, r0, r0, lsl #7
 800ef94:	20001384 	andcs	r1, r0, r4, lsl #7
 800ef98:	0801a4c0 	stmdaeq	r1, {r6, r7, sl, sp, pc}
 800ef9c:	20001e1c 	andcs	r1, r0, ip, lsl lr
 800efa0:	20001390 	mulcs	r0, r0, r3
 800efa4:	40026000 	andmi	r6, r2, r0
 800efa8:	e000e100 	and	lr, r0, r0, lsl #2
 800efac:	40004804 	andmi	r4, r0, r4, lsl #16
 800efb0:	40026400 	andmi	r6, r2, r0, lsl #8
 800efb4:	40011404 	andmi	r1, r1, r4, lsl #8
 800efb8:	40000c00 	andmi	r0, r0, r0, lsl #24
 800efbc:	0003d090 	muleq	r3, r0, r0
 800efc0:	40004800 	andmi	r4, r0, r0, lsl #16
 800efc4:	40011400 	andmi	r1, r1, r0, lsl #8
 800efc8:	2001c000 	andcs	ip, r1, r0

0800efcc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>:
 800efcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efd0:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 800efd4:	4615      	mov	r5, r2
 800efd6:	6972      	ldr	r2, [r6, #20]
 800efd8:	42aa      	cmp	r2, r5
 800efda:	461f      	mov	r7, r3
 800efdc:	460c      	mov	r4, r1
 800efde:	d021      	beq.n	800f024 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x58>
 800efe0:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 800f09c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>
 800efe4:	6175      	str	r5, [r6, #20]
 800efe6:	f858 3021 	ldr.w	r3, [r8, r1, lsl #2]
 800efea:	b10b      	cbz	r3, 800eff0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x24>
 800efec:	f7ff faf4 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800eff0:	b975      	cbnz	r5, 800f010 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x44>
 800eff2:	4b29      	ldr	r3, [pc, #164]	@ (800f098 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xcc>)
 800eff4:	eb03 02c4 	add.w	r2, r3, r4, lsl #3
 800eff8:	f853 3034 	ldr.w	r3, [r3, r4, lsl #3]
 800effc:	6852      	ldr	r2, [r2, #4]
 800effe:	619a      	str	r2, [r3, #24]
 800f000:	b127      	cbz	r7, 800f00c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x40>
 800f002:	6975      	ldr	r5, [r6, #20]
 800f004:	b9cd      	cbnz	r5, 800f03a <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x6e>
 800f006:	2301      	movs	r3, #1
 800f008:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 800f00c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f010:	2d01      	cmp	r5, #1
 800f012:	d1f5      	bne.n	800f000 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
 800f014:	4b20      	ldr	r3, [pc, #128]	@ (800f098 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xcc>)
 800f016:	eb03 02c4 	add.w	r2, r3, r4, lsl #3
 800f01a:	f853 3034 	ldr.w	r3, [r3, r4, lsl #3]
 800f01e:	6852      	ldr	r2, [r2, #4]
 800f020:	629a      	str	r2, [r3, #40]	@ 0x28
 800f022:	e7ed      	b.n	800f000 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
 800f024:	2b00      	cmp	r3, #0
 800f026:	d134      	bne.n	800f092 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xc6>
 800f028:	4b1c      	ldr	r3, [pc, #112]	@ (800f09c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>)
 800f02a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f02e:	2b00      	cmp	r3, #0
 800f030:	d0ec      	beq.n	800f00c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x40>
 800f032:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f036:	f7ff bacf 	b.w	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800f03a:	4b19      	ldr	r3, [pc, #100]	@ (800f0a0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd4>)
 800f03c:	4919      	ldr	r1, [pc, #100]	@ (800f0a4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd8>)
 800f03e:	f240 521c 	movw	r2, #1308	@ 0x51c
 800f042:	fb02 3304 	mla	r3, r2, r4, r3
 800f046:	2200      	movs	r2, #0
 800f048:	f8c3 2518 	str.w	r2, [r3, #1304]	@ 0x518
 800f04c:	4b16      	ldr	r3, [pc, #88]	@ (800f0a8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xdc>)
 800f04e:	4a17      	ldr	r2, [pc, #92]	@ (800f0ac <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xe0>)
 800f050:	2c00      	cmp	r4, #0
 800f052:	bf18      	it	ne
 800f054:	4619      	movne	r1, r3
 800f056:	f1a3 030c 	sub.w	r3, r3, #12
 800f05a:	bf18      	it	ne
 800f05c:	461a      	movne	r2, r3
 800f05e:	f3bf 8f5f 	dmb	sy
 800f062:	6813      	ldr	r3, [r2, #0]
 800f064:	061b      	lsls	r3, r3, #24
 800f066:	d5fa      	bpl.n	800f05e <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x92>
 800f068:	6813      	ldr	r3, [r2, #0]
 800f06a:	f023 0320 	bic.w	r3, r3, #32
 800f06e:	6013      	str	r3, [r2, #0]
 800f070:	6813      	ldr	r3, [r2, #0]
 800f072:	f023 0310 	bic.w	r3, r3, #16
 800f076:	6013      	str	r3, [r2, #0]
 800f078:	680b      	ldr	r3, [r1, #0]
 800f07a:	f043 0320 	orr.w	r3, r3, #32
 800f07e:	600b      	str	r3, [r1, #0]
 800f080:	680b      	ldr	r3, [r1, #0]
 800f082:	2202      	movs	r2, #2
 800f084:	f043 0310 	orr.w	r3, r3, #16
 800f088:	600b      	str	r3, [r1, #0]
 800f08a:	f848 2024 	str.w	r2, [r8, r4, lsl #2]
 800f08e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f092:	f8df 8008 	ldr.w	r8, [pc, #8]	@ 800f09c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>
 800f096:	e7b5      	b.n	800f004 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x38>
 800f098:	0801a4c0 	stmdaeq	r1, {r6, r7, sl, sp, pc}
 800f09c:	20001e1c 	andcs	r1, r0, ip, lsl lr
 800f0a0:	20001390 	mulcs	r0, r0, r3
 800f0a4:	4000480c 	andmi	r4, r0, ip, lsl #16
 800f0a8:	4001140c 	andmi	r1, r1, ip, lsl #8
 800f0ac:	40004800 	andmi	r4, r0, r0, lsl #16

0800f0b0 <Dmx::GetTotalStatistics(unsigned long)>:
 800f0b0:	4b06      	ldr	r3, [pc, #24]	@ (800f0cc <Dmx::GetTotalStatistics(unsigned long)+0x1c>)
 800f0b2:	4807      	ldr	r0, [pc, #28]	@ (800f0d0 <Dmx::GetTotalStatistics(unsigned long)+0x20>)
 800f0b4:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 800f0b8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800f0bc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800f0c0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800f0c4:	685b      	ldr	r3, [r3, #4]
 800f0c6:	6043      	str	r3, [r0, #4]
 800f0c8:	4770      	bx	lr
 800f0ca:	bf00      	nop
 800f0cc:	20001dcc 	andcs	r1, r0, ip, asr #27
 800f0d0:	20001de4 	andcs	r1, r0, r4, ror #27

0800f0d4 <Dmx::StartDmxOutput(unsigned long)>:
 800f0d4:	b538      	push	{r3, r4, r5, lr}
 800f0d6:	b339      	cbz	r1, 800f128 <Dmx::StartDmxOutput(unsigned long)+0x54>
 800f0d8:	2901      	cmp	r1, #1
 800f0da:	d124      	bne.n	800f126 <Dmx::StartDmxOutput(unsigned long)+0x52>
 800f0dc:	4c25      	ldr	r4, [pc, #148]	@ (800f174 <Dmx::StartDmxOutput(unsigned long)+0xa0>)
 800f0de:	2106      	movs	r1, #6
 800f0e0:	4620      	mov	r0, r4
 800f0e2:	f006 fa05 	bl	80154f0 <usart_flag_get>
 800f0e6:	2801      	cmp	r0, #1
 800f0e8:	d1f9      	bne.n	800f0de <Dmx::StartDmxOutput(unsigned long)+0xa>
 800f0ea:	4b23      	ldr	r3, [pc, #140]	@ (800f178 <Dmx::StartDmxOutput(unsigned long)+0xa4>)
 800f0ec:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 800f0f0:	f8d3 180c 	ldr.w	r1, [r3, #2060]	@ 0x80c
 800f0f4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800f0f8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800f0fc:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 800f100:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 800f104:	4a1d      	ldr	r2, [pc, #116]	@ (800f17c <Dmx::StartDmxOutput(unsigned long)+0xa8>)
 800f106:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
 800f10a:	2540      	movs	r5, #64	@ 0x40
 800f10c:	f8c3 180c 	str.w	r1, [r3, #2060]	@ 0x80c
 800f110:	f8c3 5828 	str.w	r5, [r3, #2088]	@ 0x828
 800f114:	f8d4 3c24 	ldr.w	r3, [r4, #3108]	@ 0xc24
 800f118:	6811      	ldr	r1, [r2, #0]
 800f11a:	4a19      	ldr	r2, [pc, #100]	@ (800f180 <Dmx::StartDmxOutput(unsigned long)+0xac>)
 800f11c:	440b      	add	r3, r1
 800f11e:	f8c4 3c38 	str.w	r3, [r4, #3128]	@ 0xc38
 800f122:	f8c2 0424 	str.w	r0, [r2, #1060]	@ 0x424
 800f126:	bd38      	pop	{r3, r4, r5, pc}
 800f128:	4c16      	ldr	r4, [pc, #88]	@ (800f184 <Dmx::StartDmxOutput(unsigned long)+0xb0>)
 800f12a:	2106      	movs	r1, #6
 800f12c:	4620      	mov	r0, r4
 800f12e:	f006 f9df 	bl	80154f0 <usart_flag_get>
 800f132:	2801      	cmp	r0, #1
 800f134:	d1f9      	bne.n	800f12a <Dmx::StartDmxOutput(unsigned long)+0x56>
 800f136:	4b10      	ldr	r3, [pc, #64]	@ (800f178 <Dmx::StartDmxOutput(unsigned long)+0xa4>)
 800f138:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800f13c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800f140:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800f144:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800f148:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
 800f14c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 800f150:	4a0a      	ldr	r2, [pc, #40]	@ (800f17c <Dmx::StartDmxOutput(unsigned long)+0xa8>)
 800f152:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 800f156:	f44f 6580 	mov.w	r5, #1024	@ 0x400
 800f15a:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800f15e:	f8c3 5428 	str.w	r5, [r3, #1064]	@ 0x428
 800f162:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f164:	6811      	ldr	r1, [r2, #0]
 800f166:	4a06      	ldr	r2, [pc, #24]	@ (800f180 <Dmx::StartDmxOutput(unsigned long)+0xac>)
 800f168:	440b      	add	r3, r1
 800f16a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800f16c:	f8c2 0210 	str.w	r0, [r2, #528]	@ 0x210
 800f170:	bd38      	pop	{r3, r4, r5, pc}
 800f172:	bf00      	nop
 800f174:	40011400 	andmi	r1, r1, r0, lsl #8
 800f178:	40020000 	andmi	r0, r2, r0
 800f17c:	20001384 	andcs	r1, r0, r4, lsl #7
 800f180:	2001c000 	andcs	ip, r1, r0
 800f184:	40004800 	andmi	r4, r0, r0, lsl #16

0800f188 <Dmx::SetDmxBreakTime(unsigned long)>:
 800f188:	4a15      	ldr	r2, [pc, #84]	@ (800f1e0 <Dmx::SetDmxBreakTime(unsigned long)+0x58>)
 800f18a:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800f18e:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 800f192:	b410      	push	{r4}
 800f194:	4293      	cmp	r3, r2
 800f196:	4c13      	ldr	r4, [pc, #76]	@ (800f1e4 <Dmx::SetDmxBreakTime(unsigned long)+0x5c>)
 800f198:	bf38      	it	cc
 800f19a:	4613      	movcc	r3, r2
 800f19c:	469c      	mov	ip, r3
 800f19e:	295c      	cmp	r1, #92	@ 0x5c
 800f1a0:	6863      	ldr	r3, [r4, #4]
 800f1a2:	6842      	ldr	r2, [r0, #4]
 800f1a4:	bf38      	it	cc
 800f1a6:	215c      	movcc	r1, #92	@ 0x5c
 800f1a8:	440b      	add	r3, r1
 800f1aa:	6021      	str	r1, [r4, #0]
 800f1ac:	212c      	movs	r1, #44	@ 0x2c
 800f1ae:	fb01 330c 	mla	r3, r1, ip, r3
 800f1b2:	b16a      	cbz	r2, 800f1d0 <Dmx::SetDmxBreakTime(unsigned long)+0x48>
 800f1b4:	429a      	cmp	r2, r3
 800f1b6:	d205      	bcs.n	800f1c4 <Dmx::SetDmxBreakTime(unsigned long)+0x3c>
 800f1b8:	185a      	adds	r2, r3, r1
 800f1ba:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 800f1be:	428a      	cmp	r2, r1
 800f1c0:	bf38      	it	cc
 800f1c2:	460a      	movcc	r2, r1
 800f1c4:	1ad3      	subs	r3, r2, r3
 800f1c6:	60a3      	str	r3, [r4, #8]
 800f1c8:	6002      	str	r2, [r0, #0]
 800f1ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f1ce:	4770      	bx	lr
 800f1d0:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f1d4:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 800f1d8:	428a      	cmp	r2, r1
 800f1da:	bf38      	it	cc
 800f1dc:	460a      	movcc	r2, r1
 800f1de:	e7f1      	b.n	800f1c4 <Dmx::SetDmxBreakTime(unsigned long)+0x3c>
 800f1e0:	2001c000 	andcs	ip, r1, r0
 800f1e4:	20001384 	andcs	r1, r0, r4, lsl #7

0800f1e8 <Dmx::GetDmxBreakTime() const>:
 800f1e8:	4b01      	ldr	r3, [pc, #4]	@ (800f1f0 <Dmx::GetDmxBreakTime() const+0x8>)
 800f1ea:	6818      	ldr	r0, [r3, #0]
 800f1ec:	4770      	bx	lr
 800f1ee:	bf00      	nop
 800f1f0:	20001384 	andcs	r1, r0, r4, lsl #7

0800f1f4 <Dmx::SetDmxMabTime(unsigned long)>:
 800f1f4:	4a15      	ldr	r2, [pc, #84]	@ (800f24c <Dmx::SetDmxMabTime(unsigned long)+0x58>)
 800f1f6:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800f1fa:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 800f1fe:	b410      	push	{r4}
 800f200:	4293      	cmp	r3, r2
 800f202:	4c13      	ldr	r4, [pc, #76]	@ (800f250 <Dmx::SetDmxMabTime(unsigned long)+0x5c>)
 800f204:	bf38      	it	cc
 800f206:	4613      	movcc	r3, r2
 800f208:	469c      	mov	ip, r3
 800f20a:	290c      	cmp	r1, #12
 800f20c:	6823      	ldr	r3, [r4, #0]
 800f20e:	6842      	ldr	r2, [r0, #4]
 800f210:	bf38      	it	cc
 800f212:	210c      	movcc	r1, #12
 800f214:	440b      	add	r3, r1
 800f216:	6061      	str	r1, [r4, #4]
 800f218:	212c      	movs	r1, #44	@ 0x2c
 800f21a:	fb01 330c 	mla	r3, r1, ip, r3
 800f21e:	b16a      	cbz	r2, 800f23c <Dmx::SetDmxMabTime(unsigned long)+0x48>
 800f220:	429a      	cmp	r2, r3
 800f222:	d205      	bcs.n	800f230 <Dmx::SetDmxMabTime(unsigned long)+0x3c>
 800f224:	185a      	adds	r2, r3, r1
 800f226:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 800f22a:	428a      	cmp	r2, r1
 800f22c:	bf38      	it	cc
 800f22e:	460a      	movcc	r2, r1
 800f230:	1ad3      	subs	r3, r2, r3
 800f232:	60a3      	str	r3, [r4, #8]
 800f234:	6002      	str	r2, [r0, #0]
 800f236:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f23a:	4770      	bx	lr
 800f23c:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f240:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 800f244:	428a      	cmp	r2, r1
 800f246:	bf38      	it	cc
 800f248:	460a      	movcc	r2, r1
 800f24a:	e7f1      	b.n	800f230 <Dmx::SetDmxMabTime(unsigned long)+0x3c>
 800f24c:	2001c000 	andcs	ip, r1, r0
 800f250:	20001384 	andcs	r1, r0, r4, lsl #7

0800f254 <Dmx::GetDmxMabTime() const>:
 800f254:	4b01      	ldr	r3, [pc, #4]	@ (800f25c <Dmx::GetDmxMabTime() const+0x8>)
 800f256:	6858      	ldr	r0, [r3, #4]
 800f258:	4770      	bx	lr
 800f25a:	bf00      	nop
 800f25c:	20001384 	andcs	r1, r0, r4, lsl #7

0800f260 <Dmx::SetDmxPeriodTime(unsigned long)>:
 800f260:	4a15      	ldr	r2, [pc, #84]	@ (800f2b8 <Dmx::SetDmxPeriodTime(unsigned long)+0x58>)
 800f262:	6041      	str	r1, [r0, #4]
 800f264:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800f268:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 800f26c:	4293      	cmp	r3, r2
 800f26e:	bf38      	it	cc
 800f270:	4613      	movcc	r3, r2
 800f272:	4a12      	ldr	r2, [pc, #72]	@ (800f2bc <Dmx::SetDmxPeriodTime(unsigned long)+0x5c>)
 800f274:	b510      	push	{r4, lr}
 800f276:	469c      	mov	ip, r3
 800f278:	e9d2 3400 	ldrd	r3, r4, [r2]
 800f27c:	f04f 0e2c 	mov.w	lr, #44	@ 0x2c
 800f280:	4423      	add	r3, r4
 800f282:	fb0e 330c 	mla	r3, lr, ip, r3
 800f286:	b161      	cbz	r1, 800f2a2 <Dmx::SetDmxPeriodTime(unsigned long)+0x42>
 800f288:	4299      	cmp	r1, r3
 800f28a:	d206      	bcs.n	800f29a <Dmx::SetDmxPeriodTime(unsigned long)+0x3a>
 800f28c:	eb03 010e 	add.w	r1, r3, lr
 800f290:	f240 4cb4 	movw	ip, #1204	@ 0x4b4
 800f294:	4561      	cmp	r1, ip
 800f296:	bf38      	it	cc
 800f298:	4661      	movcc	r1, ip
 800f29a:	1acb      	subs	r3, r1, r3
 800f29c:	6001      	str	r1, [r0, #0]
 800f29e:	6093      	str	r3, [r2, #8]
 800f2a0:	bd10      	pop	{r4, pc}
 800f2a2:	f103 012c 	add.w	r1, r3, #44	@ 0x2c
 800f2a6:	f240 4cb4 	movw	ip, #1204	@ 0x4b4
 800f2aa:	4561      	cmp	r1, ip
 800f2ac:	bf38      	it	cc
 800f2ae:	4661      	movcc	r1, ip
 800f2b0:	1acb      	subs	r3, r1, r3
 800f2b2:	6001      	str	r1, [r0, #0]
 800f2b4:	6093      	str	r3, [r2, #8]
 800f2b6:	bd10      	pop	{r4, pc}
 800f2b8:	2001c000 	andcs	ip, r1, r0
 800f2bc:	20001384 	andcs	r1, r0, r4, lsl #7

0800f2c0 <Dmx::SetDmxSlots(unsigned short)>:
 800f2c0:	1e8b      	subs	r3, r1, #2
 800f2c2:	f5b3 7fff 	cmp.w	r3, #510	@ 0x1fe
 800f2c6:	d829      	bhi.n	800f31c <Dmx::SetDmxSlots(unsigned short)+0x5c>
 800f2c8:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
 800f2cc:	428a      	cmp	r2, r1
 800f2ce:	bf28      	it	cs
 800f2d0:	460a      	movcs	r2, r1
 800f2d2:	428b      	cmp	r3, r1
 800f2d4:	bf28      	it	cs
 800f2d6:	460b      	movcs	r3, r1
 800f2d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800f2dc:	b430      	push	{r4, r5}
 800f2de:	4d12      	ldr	r5, [pc, #72]	@ (800f328 <Dmx::SetDmxSlots(unsigned short)+0x68>)
 800f2e0:	6101      	str	r1, [r0, #16]
 800f2e2:	f8d5 4204 	ldr.w	r4, [r5, #516]	@ 0x204
 800f2e6:	f8d5 5418 	ldr.w	r5, [r5, #1048]	@ 0x418
 800f2ea:	4910      	ldr	r1, [pc, #64]	@ (800f32c <Dmx::SetDmxSlots(unsigned short)+0x6c>)
 800f2ec:	6842      	ldr	r2, [r0, #4]
 800f2ee:	680b      	ldr	r3, [r1, #0]
 800f2f0:	42ac      	cmp	r4, r5
 800f2f2:	bf38      	it	cc
 800f2f4:	462c      	movcc	r4, r5
 800f2f6:	46a4      	mov	ip, r4
 800f2f8:	684c      	ldr	r4, [r1, #4]
 800f2fa:	4423      	add	r3, r4
 800f2fc:	242c      	movs	r4, #44	@ 0x2c
 800f2fe:	fb04 330c 	mla	r3, r4, ip, r3
 800f302:	b962      	cbnz	r2, 800f31e <Dmx::SetDmxSlots(unsigned short)+0x5e>
 800f304:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f308:	f240 44b4 	movw	r4, #1204	@ 0x4b4
 800f30c:	42a2      	cmp	r2, r4
 800f30e:	bf38      	it	cc
 800f310:	4622      	movcc	r2, r4
 800f312:	1ad3      	subs	r3, r2, r3
 800f314:	bc30      	pop	{r4, r5}
 800f316:	6002      	str	r2, [r0, #0]
 800f318:	608b      	str	r3, [r1, #8]
 800f31a:	4770      	bx	lr
 800f31c:	4770      	bx	lr
 800f31e:	429a      	cmp	r2, r3
 800f320:	d2f7      	bcs.n	800f312 <Dmx::SetDmxSlots(unsigned short)+0x52>
 800f322:	191a      	adds	r2, r3, r4
 800f324:	e7f0      	b.n	800f308 <Dmx::SetDmxSlots(unsigned short)+0x48>
 800f326:	bf00      	nop
 800f328:	2001c000 	andcs	ip, r1, r0
 800f32c:	20001384 	andcs	r1, r0, r4, lsl #7

0800f330 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>:
 800f330:	b570      	push	{r4, r5, r6, lr}
 800f332:	4d30      	ldr	r5, [pc, #192]	@ (800f3f4 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc4>)
 800f334:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 800f338:	fb0c 5c01 	mla	ip, ip, r1, r5
 800f33c:	2a01      	cmp	r2, #1
 800f33e:	4604      	mov	r4, r0
 800f340:	f8cc 220c 	str.w	r2, [ip, #524]	@ 0x20c
 800f344:	d00a      	beq.n	800f35c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2c>
 800f346:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 800f34a:	2200      	movs	r2, #0
 800f34c:	2b01      	cmp	r3, #1
 800f34e:	7702      	strb	r2, [r0, #28]
 800f350:	d041      	beq.n	800f3d6 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xa6>
 800f352:	f8d5 3420 	ldr.w	r3, [r5, #1056]	@ 0x420
 800f356:	2b01      	cmp	r3, #1
 800f358:	d03d      	beq.n	800f3d6 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xa6>
 800f35a:	bd70      	pop	{r4, r5, r6, pc}
 800f35c:	7f06      	ldrb	r6, [r0, #28]
 800f35e:	2e00      	cmp	r6, #0
 800f360:	d03c      	beq.n	800f3dc <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xac>
 800f362:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 800f366:	2b01      	cmp	r3, #1
 800f368:	d024      	beq.n	800f3b4 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x84>
 800f36a:	f8d5 1420 	ldr.w	r1, [r5, #1056]	@ 0x420
 800f36e:	2901      	cmp	r1, #1
 800f370:	d013      	beq.n	800f39a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x6a>
 800f372:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 800f376:	2b01      	cmp	r3, #1
 800f378:	d1ef      	bne.n	800f35a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 800f37a:	6961      	ldr	r1, [r4, #20]
 800f37c:	2900      	cmp	r1, #0
 800f37e:	d034      	beq.n	800f3ea <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xba>
 800f380:	f8d5 3420 	ldr.w	r3, [r5, #1056]	@ 0x420
 800f384:	2b01      	cmp	r3, #1
 800f386:	d1e8      	bne.n	800f35a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 800f388:	69a3      	ldr	r3, [r4, #24]
 800f38a:	2b00      	cmp	r3, #0
 800f38c:	d1e5      	bne.n	800f35a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 800f38e:	2101      	movs	r1, #1
 800f390:	4620      	mov	r0, r4
 800f392:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f396:	f7ff be9d 	b.w	800f0d4 <Dmx::StartDmxOutput(unsigned long)>
 800f39a:	69a3      	ldr	r3, [r4, #24]
 800f39c:	b9a3      	cbnz	r3, 800f3c8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x98>
 800f39e:	4a16      	ldr	r2, [pc, #88]	@ (800f3f8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc8>)
 800f3a0:	6852      	ldr	r2, [r2, #4]
 800f3a2:	b18a      	cbz	r2, 800f3c8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x98>
 800f3a4:	4620      	mov	r0, r4
 800f3a6:	f7ff f917 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800f3aa:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 800f3ae:	2b01      	cmp	r3, #1
 800f3b0:	d1e6      	bne.n	800f380 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x50>
 800f3b2:	e7e2      	b.n	800f37a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x4a>
 800f3b4:	6941      	ldr	r1, [r0, #20]
 800f3b6:	2900      	cmp	r1, #0
 800f3b8:	d1d7      	bne.n	800f36a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 800f3ba:	4b0f      	ldr	r3, [pc, #60]	@ (800f3f8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc8>)
 800f3bc:	681b      	ldr	r3, [r3, #0]
 800f3be:	2b00      	cmp	r3, #0
 800f3c0:	d0d3      	beq.n	800f36a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 800f3c2:	f7ff f909 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800f3c6:	e7d0      	b.n	800f36a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 800f3c8:	f8d5 220c 	ldr.w	r2, [r5, #524]	@ 0x20c
 800f3cc:	2a01      	cmp	r2, #1
 800f3ce:	d0d4      	beq.n	800f37a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x4a>
 800f3d0:	2b00      	cmp	r3, #0
 800f3d2:	d1c2      	bne.n	800f35a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 800f3d4:	e7db      	b.n	800f38e <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x5e>
 800f3d6:	2301      	movs	r3, #1
 800f3d8:	7723      	strb	r3, [r4, #28]
 800f3da:	bd70      	pop	{r4, r5, r6, pc}
 800f3dc:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800f3e0:	7702      	strb	r2, [r0, #28]
 800f3e2:	695b      	ldr	r3, [r3, #20]
 800f3e4:	2b00      	cmp	r3, #0
 800f3e6:	d0d4      	beq.n	800f392 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x62>
 800f3e8:	bd70      	pop	{r4, r5, r6, pc}
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	f7ff fe72 	bl	800f0d4 <Dmx::StartDmxOutput(unsigned long)>
 800f3f0:	e7c6      	b.n	800f380 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x50>
 800f3f2:	bf00      	nop
 800f3f4:	2001c000 	andcs	ip, r1, r0
 800f3f8:	20001e1c 	andcs	r1, r0, ip, lsl lr

0800f3fc <Dmx::GetOutputStyle(unsigned long) const>:
 800f3fc:	4b03      	ldr	r3, [pc, #12]	@ (800f40c <Dmx::GetOutputStyle(unsigned long) const+0x10>)
 800f3fe:	f44f 7205 	mov.w	r2, #532	@ 0x214
 800f402:	fb02 3301 	mla	r3, r2, r1, r3
 800f406:	f8d3 020c 	ldr.w	r0, [r3, #524]	@ 0x20c
 800f40a:	4770      	bx	lr
 800f40c:	2001c000 	andcs	ip, r1, r0

0800f410 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>:
 800f410:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 800f414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f416:	fb0c fc01 	mul.w	ip, ip, r1
 800f41a:	460c      	mov	r4, r1
 800f41c:	4611      	mov	r1, r2
 800f41e:	6902      	ldr	r2, [r0, #16]
 800f420:	4f21      	ldr	r7, [pc, #132]	@ (800f4a8 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x98>)
 800f422:	4293      	cmp	r3, r2
 800f424:	bf28      	it	cs
 800f426:	4613      	movcs	r3, r2
 800f428:	1c5a      	adds	r2, r3, #1
 800f42a:	461d      	mov	r5, r3
 800f42c:	eb07 030c 	add.w	r3, r7, ip
 800f430:	4606      	mov	r6, r0
 800f432:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800f436:	2201      	movs	r2, #1
 800f438:	f883 2208 	strb.w	r2, [r3, #520]	@ 0x208
 800f43c:	1898      	adds	r0, r3, r2
 800f43e:	2300      	movs	r3, #0
 800f440:	f807 300c 	strb.w	r3, [r7, ip]
 800f444:	b115      	cbz	r5, 800f44c <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x3c>
 800f446:	462a      	mov	r2, r5
 800f448:	f006 fea7 	bl	801619a <memmove>
 800f44c:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800f450:	68a3      	ldr	r3, [r4, #8]
 800f452:	42ab      	cmp	r3, r5
 800f454:	d100      	bne.n	800f458 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x48>
 800f456:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f458:	60a5      	str	r5, [r4, #8]
 800f45a:	f8d7 0204 	ldr.w	r0, [r7, #516]	@ 0x204
 800f45e:	f8d7 4418 	ldr.w	r4, [r7, #1048]	@ 0x418
 800f462:	4912      	ldr	r1, [pc, #72]	@ (800f4ac <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x9c>)
 800f464:	6872      	ldr	r2, [r6, #4]
 800f466:	680b      	ldr	r3, [r1, #0]
 800f468:	42a0      	cmp	r0, r4
 800f46a:	bf38      	it	cc
 800f46c:	4620      	movcc	r0, r4
 800f46e:	684c      	ldr	r4, [r1, #4]
 800f470:	4423      	add	r3, r4
 800f472:	242c      	movs	r4, #44	@ 0x2c
 800f474:	fb04 3300 	mla	r3, r4, r0, r3
 800f478:	b15a      	cbz	r2, 800f492 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x82>
 800f47a:	429a      	cmp	r2, r3
 800f47c:	d205      	bcs.n	800f48a <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x7a>
 800f47e:	191a      	adds	r2, r3, r4
 800f480:	f240 40b4 	movw	r0, #1204	@ 0x4b4
 800f484:	4282      	cmp	r2, r0
 800f486:	bf38      	it	cc
 800f488:	4602      	movcc	r2, r0
 800f48a:	1ad3      	subs	r3, r2, r3
 800f48c:	6032      	str	r2, [r6, #0]
 800f48e:	608b      	str	r3, [r1, #8]
 800f490:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f492:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f496:	f240 40b4 	movw	r0, #1204	@ 0x4b4
 800f49a:	4282      	cmp	r2, r0
 800f49c:	bf38      	it	cc
 800f49e:	4602      	movcc	r2, r0
 800f4a0:	1ad3      	subs	r3, r2, r3
 800f4a2:	6032      	str	r2, [r6, #0]
 800f4a4:	608b      	str	r3, [r1, #8]
 800f4a6:	e7f3      	b.n	800f490 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x80>
 800f4a8:	2001c000 	andcs	ip, r1, r0
 800f4ac:	20001384 	andcs	r1, r0, r4, lsl #7

0800f4b0 <Dmx::Blackout()>:
 800f4b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f4b4:	f100 0610 	add.w	r6, r0, #16
 800f4b8:	4d29      	ldr	r5, [pc, #164]	@ (800f560 <Dmx::Blackout()+0xb0>)
 800f4ba:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800f4be:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 800f578 <Dmx::Blackout()+0xc8>
 800f4c2:	4607      	mov	r7, r0
 800f4c4:	2400      	movs	r4, #0
 800f4c6:	f240 2901 	movw	r9, #513	@ 0x201
 800f4ca:	b99b      	cbnz	r3, 800f4f4 <Dmx::Blackout()+0x44>
 800f4cc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800f4d0:	b11b      	cbz	r3, 800f4da <Dmx::Blackout()+0x2a>
 800f4d2:	4621      	mov	r1, r4
 800f4d4:	4638      	mov	r0, r7
 800f4d6:	f7ff f87f 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800f4da:	f8c5 9204 	str.w	r9, [r5, #516]	@ 0x204
 800f4de:	f44f 7201 	mov.w	r2, #516	@ 0x204
 800f4e2:	2100      	movs	r1, #0
 800f4e4:	4628      	mov	r0, r5
 800f4e6:	f006 fe6f 	bl	80161c8 <memset>
 800f4ea:	6833      	ldr	r3, [r6, #0]
 800f4ec:	b983      	cbnz	r3, 800f510 <Dmx::Blackout()+0x60>
 800f4ee:	2301      	movs	r3, #1
 800f4f0:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 800f4f4:	f505 7505 	add.w	r5, r5, #532	@ 0x214
 800f4f8:	b944      	cbnz	r4, 800f50c <Dmx::Blackout()+0x5c>
 800f4fa:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800f4fe:	2401      	movs	r4, #1
 800f500:	2b00      	cmp	r3, #0
 800f502:	d0e3      	beq.n	800f4cc <Dmx::Blackout()+0x1c>
 800f504:	f505 7505 	add.w	r5, r5, #532	@ 0x214
 800f508:	2c00      	cmp	r4, #0
 800f50a:	d0f6      	beq.n	800f4fa <Dmx::Blackout()+0x4a>
 800f50c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f510:	4b14      	ldr	r3, [pc, #80]	@ (800f564 <Dmx::Blackout()+0xb4>)
 800f512:	4815      	ldr	r0, [pc, #84]	@ (800f568 <Dmx::Blackout()+0xb8>)
 800f514:	4915      	ldr	r1, [pc, #84]	@ (800f56c <Dmx::Blackout()+0xbc>)
 800f516:	f240 521c 	movw	r2, #1308	@ 0x51c
 800f51a:	fb02 3304 	mla	r3, r2, r4, r3
 800f51e:	4a14      	ldr	r2, [pc, #80]	@ (800f570 <Dmx::Blackout()+0xc0>)
 800f520:	2c01      	cmp	r4, #1
 800f522:	bf18      	it	ne
 800f524:	4611      	movne	r1, r2
 800f526:	4a13      	ldr	r2, [pc, #76]	@ (800f574 <Dmx::Blackout()+0xc4>)
 800f528:	bf18      	it	ne
 800f52a:	4602      	movne	r2, r0
 800f52c:	2000      	movs	r0, #0
 800f52e:	f8c3 0518 	str.w	r0, [r3, #1304]	@ 0x518
 800f532:	f3bf 8f5f 	dmb	sy
 800f536:	6813      	ldr	r3, [r2, #0]
 800f538:	061b      	lsls	r3, r3, #24
 800f53a:	d5fa      	bpl.n	800f532 <Dmx::Blackout()+0x82>
 800f53c:	6813      	ldr	r3, [r2, #0]
 800f53e:	f023 0320 	bic.w	r3, r3, #32
 800f542:	6013      	str	r3, [r2, #0]
 800f544:	6813      	ldr	r3, [r2, #0]
 800f546:	f023 0310 	bic.w	r3, r3, #16
 800f54a:	6013      	str	r3, [r2, #0]
 800f54c:	680b      	ldr	r3, [r1, #0]
 800f54e:	f043 0320 	orr.w	r3, r3, #32
 800f552:	600b      	str	r3, [r1, #0]
 800f554:	680b      	ldr	r3, [r1, #0]
 800f556:	f043 0310 	orr.w	r3, r3, #16
 800f55a:	600b      	str	r3, [r1, #0]
 800f55c:	2302      	movs	r3, #2
 800f55e:	e7c7      	b.n	800f4f0 <Dmx::Blackout()+0x40>
 800f560:	2001c000 	andcs	ip, r1, r0
 800f564:	20001390 	mulcs	r0, r0, r3
 800f568:	40004800 	andmi	r4, r0, r0, lsl #16
 800f56c:	4001140c 	andmi	r1, r1, ip, lsl #8
 800f570:	4000480c 	andmi	r4, r0, ip, lsl #16
 800f574:	40011400 	andmi	r1, r1, r0, lsl #8
 800f578:	20001e1c 	andcs	r1, r0, ip, lsl lr

0800f57c <Dmx::FullOn()>:
 800f57c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f580:	f100 0610 	add.w	r6, r0, #16
 800f584:	4c2b      	ldr	r4, [pc, #172]	@ (800f634 <Dmx::FullOn()+0xb8>)
 800f586:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800f58a:	4607      	mov	r7, r0
 800f58c:	2500      	movs	r5, #0
 800f58e:	b143      	cbz	r3, 800f5a2 <Dmx::FullOn()+0x26>
 800f590:	f504 7405 	add.w	r4, r4, #532	@ 0x214
 800f594:	2d00      	cmp	r5, #0
 800f596:	d148      	bne.n	800f62a <Dmx::FullOn()+0xae>
 800f598:	f856 3f04 	ldr.w	r3, [r6, #4]!
 800f59c:	2501      	movs	r5, #1
 800f59e:	2b00      	cmp	r3, #0
 800f5a0:	d1f6      	bne.n	800f590 <Dmx::FullOn()+0x14>
 800f5a2:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 800f648 <Dmx::FullOn()+0xcc>
 800f5a6:	f858 3025 	ldr.w	r3, [r8, r5, lsl #2]
 800f5aa:	b11b      	cbz	r3, 800f5b4 <Dmx::FullOn()+0x38>
 800f5ac:	4629      	mov	r1, r5
 800f5ae:	4638      	mov	r0, r7
 800f5b0:	f7ff f812 	bl	800e5d8 <Dmx::StopData(unsigned long) [clone .part.0]>
 800f5b4:	f44f 7201 	mov.w	r2, #516	@ 0x204
 800f5b8:	21ff      	movs	r1, #255	@ 0xff
 800f5ba:	4620      	mov	r0, r4
 800f5bc:	f006 fe04 	bl	80161c8 <memset>
 800f5c0:	f240 2201 	movw	r2, #513	@ 0x201
 800f5c4:	2300      	movs	r3, #0
 800f5c6:	7023      	strb	r3, [r4, #0]
 800f5c8:	f8c4 2204 	str.w	r2, [r4, #516]	@ 0x204
 800f5cc:	6832      	ldr	r2, [r6, #0]
 800f5ce:	b372      	cbz	r2, 800f62e <Dmx::FullOn()+0xb2>
 800f5d0:	4a19      	ldr	r2, [pc, #100]	@ (800f638 <Dmx::FullOn()+0xbc>)
 800f5d2:	f240 511c 	movw	r1, #1308	@ 0x51c
 800f5d6:	fb01 2205 	mla	r2, r1, r5, r2
 800f5da:	2d01      	cmp	r5, #1
 800f5dc:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 800f5e0:	4b16      	ldr	r3, [pc, #88]	@ (800f63c <Dmx::FullOn()+0xc0>)
 800f5e2:	4917      	ldr	r1, [pc, #92]	@ (800f640 <Dmx::FullOn()+0xc4>)
 800f5e4:	4a17      	ldr	r2, [pc, #92]	@ (800f644 <Dmx::FullOn()+0xc8>)
 800f5e6:	bf18      	it	ne
 800f5e8:	4619      	movne	r1, r3
 800f5ea:	f1a3 030c 	sub.w	r3, r3, #12
 800f5ee:	bf18      	it	ne
 800f5f0:	461a      	movne	r2, r3
 800f5f2:	f3bf 8f5f 	dmb	sy
 800f5f6:	6813      	ldr	r3, [r2, #0]
 800f5f8:	061b      	lsls	r3, r3, #24
 800f5fa:	d5fa      	bpl.n	800f5f2 <Dmx::FullOn()+0x76>
 800f5fc:	6813      	ldr	r3, [r2, #0]
 800f5fe:	f023 0320 	bic.w	r3, r3, #32
 800f602:	6013      	str	r3, [r2, #0]
 800f604:	6813      	ldr	r3, [r2, #0]
 800f606:	f023 0310 	bic.w	r3, r3, #16
 800f60a:	6013      	str	r3, [r2, #0]
 800f60c:	680b      	ldr	r3, [r1, #0]
 800f60e:	f043 0320 	orr.w	r3, r3, #32
 800f612:	600b      	str	r3, [r1, #0]
 800f614:	680b      	ldr	r3, [r1, #0]
 800f616:	f043 0310 	orr.w	r3, r3, #16
 800f61a:	600b      	str	r3, [r1, #0]
 800f61c:	2302      	movs	r3, #2
 800f61e:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
 800f622:	f504 7405 	add.w	r4, r4, #532	@ 0x214
 800f626:	2d00      	cmp	r5, #0
 800f628:	d0b6      	beq.n	800f598 <Dmx::FullOn()+0x1c>
 800f62a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f62e:	2301      	movs	r3, #1
 800f630:	e7f5      	b.n	800f61e <Dmx::FullOn()+0xa2>
 800f632:	bf00      	nop
 800f634:	2001c000 	andcs	ip, r1, r0
 800f638:	20001390 	mulcs	r0, r0, r3
 800f63c:	4000480c 	andmi	r4, r0, ip, lsl #16
 800f640:	4001140c 	andmi	r1, r1, ip, lsl #8
 800f644:	40011400 	andmi	r1, r1, r0, lsl #8
 800f648:	20001e1c 	andcs	r1, r0, ip, lsl lr

0800f64c <Dmx::StartOutput(unsigned long)>:
 800f64c:	4a0a      	ldr	r2, [pc, #40]	@ (800f678 <Dmx::StartOutput(unsigned long)+0x2c>)
 800f64e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800f652:	2a01      	cmp	r2, #1
 800f654:	d000      	beq.n	800f658 <Dmx::StartOutput(unsigned long)+0xc>
 800f656:	4770      	bx	lr
 800f658:	4a08      	ldr	r2, [pc, #32]	@ (800f67c <Dmx::StartOutput(unsigned long)+0x30>)
 800f65a:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 800f65e:	fb0c 2301 	mla	r3, ip, r1, r2
 800f662:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800f666:	2a00      	cmp	r2, #0
 800f668:	d1f5      	bne.n	800f656 <Dmx::StartOutput(unsigned long)+0xa>
 800f66a:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 800f66e:	2b00      	cmp	r3, #0
 800f670:	d1f1      	bne.n	800f656 <Dmx::StartOutput(unsigned long)+0xa>
 800f672:	f7ff bd2f 	b.w	800f0d4 <Dmx::StartDmxOutput(unsigned long)>
 800f676:	bf00      	nop
 800f678:	20001e1c 	andcs	r1, r0, ip, lsl lr
 800f67c:	2001c000 	andcs	ip, r1, r0

0800f680 <Dmx::Sync()>:
 800f680:	b538      	push	{r3, r4, r5, lr}
 800f682:	4c17      	ldr	r4, [pc, #92]	@ (800f6e0 <Dmx::Sync()+0x60>)
 800f684:	f894 3208 	ldrb.w	r3, [r4, #520]	@ 0x208
 800f688:	4605      	mov	r5, r0
 800f68a:	b133      	cbz	r3, 800f69a <Dmx::Sync()+0x1a>
 800f68c:	4b15      	ldr	r3, [pc, #84]	@ (800f6e4 <Dmx::Sync()+0x64>)
 800f68e:	681b      	ldr	r3, [r3, #0]
 800f690:	2200      	movs	r2, #0
 800f692:	2b01      	cmp	r3, #1
 800f694:	f884 2208 	strb.w	r2, [r4, #520]	@ 0x208
 800f698:	d017      	beq.n	800f6ca <Dmx::Sync()+0x4a>
 800f69a:	f894 341c 	ldrb.w	r3, [r4, #1052]	@ 0x41c
 800f69e:	b133      	cbz	r3, 800f6ae <Dmx::Sync()+0x2e>
 800f6a0:	4a10      	ldr	r2, [pc, #64]	@ (800f6e4 <Dmx::Sync()+0x64>)
 800f6a2:	6851      	ldr	r1, [r2, #4]
 800f6a4:	2300      	movs	r3, #0
 800f6a6:	2901      	cmp	r1, #1
 800f6a8:	f884 341c 	strb.w	r3, [r4, #1052]	@ 0x41c
 800f6ac:	d000      	beq.n	800f6b0 <Dmx::Sync()+0x30>
 800f6ae:	bd38      	pop	{r3, r4, r5, pc}
 800f6b0:	f8d4 3420 	ldr.w	r3, [r4, #1056]	@ 0x420
 800f6b4:	2b00      	cmp	r3, #0
 800f6b6:	d1fa      	bne.n	800f6ae <Dmx::Sync()+0x2e>
 800f6b8:	f8d4 3424 	ldr.w	r3, [r4, #1060]	@ 0x424
 800f6bc:	2b00      	cmp	r3, #0
 800f6be:	d1f6      	bne.n	800f6ae <Dmx::Sync()+0x2e>
 800f6c0:	4628      	mov	r0, r5
 800f6c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f6c6:	f7ff bd05 	b.w	800f0d4 <Dmx::StartDmxOutput(unsigned long)>
 800f6ca:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
 800f6ce:	2b00      	cmp	r3, #0
 800f6d0:	d1e3      	bne.n	800f69a <Dmx::Sync()+0x1a>
 800f6d2:	f8d4 1210 	ldr.w	r1, [r4, #528]	@ 0x210
 800f6d6:	2900      	cmp	r1, #0
 800f6d8:	d1df      	bne.n	800f69a <Dmx::Sync()+0x1a>
 800f6da:	f7ff fcfb 	bl	800f0d4 <Dmx::StartDmxOutput(unsigned long)>
 800f6de:	e7dc      	b.n	800f69a <Dmx::Sync()+0x1a>
 800f6e0:	2001c000 	andcs	ip, r1, r0
 800f6e4:	20001e1c 	andcs	r1, r0, ip, lsl lr

0800f6e8 <Dmx::GetDmxChanged(unsigned long)>:
 800f6e8:	f240 531c 	movw	r3, #1308	@ 0x51c
 800f6ec:	b470      	push	{r4, r5, r6}
 800f6ee:	4d31      	ldr	r5, [pc, #196]	@ (800f7b4 <Dmx::GetDmxChanged(unsigned long)+0xcc>)
 800f6f0:	fb03 f101 	mul.w	r1, r3, r1
 800f6f4:	186a      	adds	r2, r5, r1
 800f6f6:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800f6fa:	0418      	lsls	r0, r3, #16
 800f6fc:	d557      	bpl.n	800f7ae <Dmx::GetDmxChanged(unsigned long)+0xc6>
 800f6fe:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800f702:	3b01      	subs	r3, #1
 800f704:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800f708:	f8d2 6204 	ldr.w	r6, [r2, #516]	@ 0x204
 800f70c:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 800f710:	f501 7402 	add.w	r4, r1, #520	@ 0x208
 800f714:	429e      	cmp	r6, r3
 800f716:	4610      	mov	r0, r2
 800f718:	442c      	add	r4, r5
 800f71a:	d036      	beq.n	800f78a <Dmx::GetDmxChanged(unsigned long)+0xa2>
 800f71c:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800f720:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 800f724:	4621      	mov	r1, r4
 800f726:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
 800f72a:	2500      	movs	r5, #0
 800f72c:	f853 6c5c 	ldr.w	r6, [r3, #-92]
 800f730:	f893 f000 	pld	[r3]
 800f734:	600e      	str	r6, [r1, #0]
 800f736:	f853 6c58 	ldr.w	r6, [r3, #-88]
 800f73a:	604e      	str	r6, [r1, #4]
 800f73c:	f853 6c54 	ldr.w	r6, [r3, #-84]
 800f740:	608e      	str	r6, [r1, #8]
 800f742:	f853 6c50 	ldr.w	r6, [r3, #-80]
 800f746:	60ce      	str	r6, [r1, #12]
 800f748:	f853 6c4c 	ldr.w	r6, [r3, #-76]
 800f74c:	610e      	str	r6, [r1, #16]
 800f74e:	f853 6c48 	ldr.w	r6, [r3, #-72]
 800f752:	614e      	str	r6, [r1, #20]
 800f754:	f853 6c44 	ldr.w	r6, [r3, #-68]
 800f758:	618e      	str	r6, [r1, #24]
 800f75a:	3508      	adds	r5, #8
 800f75c:	f853 6c40 	ldr.w	r6, [r3, #-64]
 800f760:	61ce      	str	r6, [r1, #28]
 800f762:	2d80      	cmp	r5, #128	@ 0x80
 800f764:	f103 0320 	add.w	r3, r3, #32
 800f768:	f101 0120 	add.w	r1, r1, #32
 800f76c:	d1de      	bne.n	800f72c <Dmx::GetDmxChanged(unsigned long)+0x44>
 800f76e:	f504 73fe 	add.w	r3, r4, #508	@ 0x1fc
 800f772:	f502 7200 	add.w	r2, r2, #512	@ 0x200
 800f776:	f504 7400 	add.w	r4, r4, #512	@ 0x200
 800f77a:	f852 1b04 	ldr.w	r1, [r2], #4
 800f77e:	f843 1f04 	str.w	r1, [r3, #4]!
 800f782:	429c      	cmp	r4, r3
 800f784:	d1f9      	bne.n	800f77a <Dmx::GetDmxChanged(unsigned long)+0x92>
 800f786:	bc70      	pop	{r4, r5, r6}
 800f788:	4770      	bx	lr
 800f78a:	1f23      	subs	r3, r4, #4
 800f78c:	f504 7c00 	add.w	ip, r4, #512	@ 0x200
 800f790:	2500      	movs	r5, #0
 800f792:	6811      	ldr	r1, [r2, #0]
 800f794:	f853 4f04 	ldr.w	r4, [r3, #4]!
 800f798:	42a1      	cmp	r1, r4
 800f79a:	bf1c      	itt	ne
 800f79c:	6019      	strne	r1, [r3, #0]
 800f79e:	2501      	movne	r5, #1
 800f7a0:	4563      	cmp	r3, ip
 800f7a2:	f102 0204 	add.w	r2, r2, #4
 800f7a6:	d1f4      	bne.n	800f792 <Dmx::GetDmxChanged(unsigned long)+0xaa>
 800f7a8:	b10d      	cbz	r5, 800f7ae <Dmx::GetDmxChanged(unsigned long)+0xc6>
 800f7aa:	bc70      	pop	{r4, r5, r6}
 800f7ac:	4770      	bx	lr
 800f7ae:	2000      	movs	r0, #0
 800f7b0:	bc70      	pop	{r4, r5, r6}
 800f7b2:	4770      	bx	lr
 800f7b4:	20001390 	mulcs	r0, r0, r3

0800f7b8 <Dmx::GetDmxCurrentData(unsigned long)>:
 800f7b8:	4b02      	ldr	r3, [pc, #8]	@ (800f7c4 <Dmx::GetDmxCurrentData(unsigned long)+0xc>)
 800f7ba:	f240 501c 	movw	r0, #1308	@ 0x51c
 800f7be:	fb00 3001 	mla	r0, r0, r1, r3
 800f7c2:	4770      	bx	lr
 800f7c4:	20001390 	mulcs	r0, r0, r3

0800f7c8 <Dmx::GetDmxUpdatesPerSecond(unsigned long)>:
 800f7c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800f7cc:	4b01      	ldr	r3, [pc, #4]	@ (800f7d4 <Dmx::GetDmxUpdatesPerSecond(unsigned long)+0xc>)
 800f7ce:	0089      	lsls	r1, r1, #2
 800f7d0:	5858      	ldr	r0, [r3, r1]
 800f7d2:	4770      	bx	lr
 800f7d4:	20001dcc 	andcs	r1, r0, ip, asr #27

0800f7d8 <memcpy.isra.0>:
 800f7d8:	440a      	add	r2, r1
 800f7da:	4291      	cmp	r1, r2
 800f7dc:	d100      	bne.n	800f7e0 <memcpy.isra.0+0x8>
 800f7de:	4770      	bx	lr
 800f7e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f7e4:	f800 3b01 	strb.w	r3, [r0], #1
 800f7e8:	e7f7      	b.n	800f7da <memcpy.isra.0+0x2>

0800f7ea <strlen>:
 800f7ea:	4603      	mov	r3, r0
 800f7ec:	461a      	mov	r2, r3
 800f7ee:	3301      	adds	r3, #1
 800f7f0:	7811      	ldrb	r1, [r2, #0]
 800f7f2:	2900      	cmp	r1, #0
 800f7f4:	d1fa      	bne.n	800f7ec <strlen+0x2>
 800f7f6:	1a10      	subs	r0, r2, r0
 800f7f8:	4770      	bx	lr
	...

0800f7fc <mdns::Domain::AddDotLocal()>:
 800f7fc:	b510      	push	{r4, lr}
 800f7fe:	4604      	mov	r4, r0
 800f800:	f8b0 0100 	ldrh.w	r0, [r0, #256]	@ 0x100
 800f804:	4905      	ldr	r1, [pc, #20]	@ (800f81c <mdns::Domain::AddDotLocal()+0x20>)
 800f806:	2207      	movs	r2, #7
 800f808:	4420      	add	r0, r4
 800f80a:	f7ff ffe5 	bl	800f7d8 <memcpy.isra.0>
 800f80e:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800f812:	3307      	adds	r3, #7
 800f814:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800f818:	bd10      	pop	{r4, pc}
 800f81a:	bf00      	nop
 800f81c:	0801a6ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, pc}

0800f820 <create_host_domain(mdns::Domain&)>:
 800f820:	2300      	movs	r3, #0
 800f822:	b570      	push	{r4, r5, r6, lr}
 800f824:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800f828:	4b0c      	ldr	r3, [pc, #48]	@ (800f85c <create_host_domain(mdns::Domain&)+0x3c>)
 800f82a:	681e      	ldr	r6, [r3, #0]
 800f82c:	3616      	adds	r6, #22
 800f82e:	4604      	mov	r4, r0
 800f830:	4630      	mov	r0, r6
 800f832:	f7ff ffda 	bl	800f7ea <strlen>
 800f836:	2301      	movs	r3, #1
 800f838:	7020      	strb	r0, [r4, #0]
 800f83a:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800f83e:	4602      	mov	r2, r0
 800f840:	4605      	mov	r5, r0
 800f842:	4631      	mov	r1, r6
 800f844:	18e0      	adds	r0, r4, r3
 800f846:	f7ff ffc7 	bl	800f7d8 <memcpy.isra.0>
 800f84a:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800f84e:	441d      	add	r5, r3
 800f850:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800f854:	4620      	mov	r0, r4
 800f856:	f7ff ffd1 	bl	800f7fc <mdns::Domain::AddDotLocal()>
 800f85a:	bd70      	pop	{r4, r5, r6, pc}
 800f85c:	20002068 	andcs	r2, r0, r8, rrx

0800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
 800f860:	2300      	movs	r3, #0
 800f862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f866:	4604      	mov	r4, r0
 800f868:	460e      	mov	r6, r1
 800f86a:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800f86e:	b1aa      	cbz	r2, 800f89c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x3c>
 800f870:	680f      	ldr	r7, [r1, #0]
 800f872:	f100 0801 	add.w	r8, r0, #1
 800f876:	b3b7      	cbz	r7, 800f8e6 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x86>
 800f878:	4638      	mov	r0, r7
 800f87a:	f7ff ffb6 	bl	800f7ea <strlen>
 800f87e:	2301      	movs	r3, #1
 800f880:	4605      	mov	r5, r0
 800f882:	7020      	strb	r0, [r4, #0]
 800f884:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800f888:	4602      	mov	r2, r0
 800f88a:	4639      	mov	r1, r7
 800f88c:	4640      	mov	r0, r8
 800f88e:	f7ff ffa3 	bl	800f7d8 <memcpy.isra.0>
 800f892:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800f896:	441d      	add	r5, r3
 800f898:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800f89c:	4b15      	ldr	r3, [pc, #84]	@ (800f8f4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x94>)
 800f89e:	68f6      	ldr	r6, [r6, #12]
 800f8a0:	f8b4 0100 	ldrh.w	r0, [r4, #256]	@ 0x100
 800f8a4:	0131      	lsls	r1, r6, #4
 800f8a6:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 800f8aa:	5859      	ldr	r1, [r3, r1]
 800f8ac:	88b5      	ldrh	r5, [r6, #4]
 800f8ae:	4420      	add	r0, r4
 800f8b0:	462a      	mov	r2, r5
 800f8b2:	f7ff ff91 	bl	800f7d8 <memcpy.isra.0>
 800f8b6:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800f8ba:	18e8      	adds	r0, r5, r3
 800f8bc:	68b3      	ldr	r3, [r6, #8]
 800f8be:	b280      	uxth	r0, r0
 800f8c0:	f8a4 0100 	strh.w	r0, [r4, #256]	@ 0x100
 800f8c4:	2205      	movs	r2, #5
 800f8c6:	4420      	add	r0, r4
 800f8c8:	b98b      	cbnz	r3, 800f8ee <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x8e>
 800f8ca:	490b      	ldr	r1, [pc, #44]	@ (800f8f8 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x98>)
 800f8cc:	f7ff ff84 	bl	800f7d8 <memcpy.isra.0>
 800f8d0:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800f8d4:	3305      	adds	r3, #5
 800f8d6:	b29b      	uxth	r3, r3
 800f8d8:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800f8dc:	4620      	mov	r0, r4
 800f8de:	f7ff ff8d 	bl	800f7fc <mdns::Domain::AddDotLocal()>
 800f8e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f8e6:	4b05      	ldr	r3, [pc, #20]	@ (800f8fc <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x9c>)
 800f8e8:	681f      	ldr	r7, [r3, #0]
 800f8ea:	3716      	adds	r7, #22
 800f8ec:	e7c4      	b.n	800f878 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x18>
 800f8ee:	4904      	ldr	r1, [pc, #16]	@ (800f900 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xa0>)
 800f8f0:	e7ec      	b.n	800f8cc <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x6c>
 800f8f2:	bf00      	nop
 800f8f4:	0801a5f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, sp, pc}
 800f8f8:	0801a6c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, pc}
 800f8fc:	20002068 	andcs	r2, r0, r8, rrx
 800f900:	0801a6c0 	stmdaeq	r1, {r6, r7, r9, sl, sp, pc}

0800f904 <mdns::Domain::Print(bool)>:
 800f904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f908:	4605      	mov	r5, r0
 800f90a:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 800f948 <mdns::Domain::Print(bool)+0x44>
 800f90e:	2020      	movs	r0, #32
 800f910:	460e      	mov	r6, r1
 800f912:	f006 ff8d 	bl	8016830 <putchar>
 800f916:	462a      	mov	r2, r5
 800f918:	7817      	ldrb	r7, [r2, #0]
 800f91a:	b92f      	cbnz	r7, 800f928 <mdns::Domain::Print(bool)+0x24>
 800f91c:	b18e      	cbz	r6, 800f942 <mdns::Domain::Print(bool)+0x3e>
 800f91e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f922:	200a      	movs	r0, #10
 800f924:	f006 bf84 	b.w	8016830 <putchar>
 800f928:	f8b5 3100 	ldrh.w	r3, [r5, #256]	@ 0x100
 800f92c:	442b      	add	r3, r5
 800f92e:	429a      	cmp	r2, r3
 800f930:	d2f4      	bcs.n	800f91c <mdns::Domain::Print(bool)+0x18>
 800f932:	1c54      	adds	r4, r2, #1
 800f934:	4622      	mov	r2, r4
 800f936:	4639      	mov	r1, r7
 800f938:	4640      	mov	r0, r8
 800f93a:	f006 ff29 	bl	8016790 <printf>
 800f93e:	19e2      	adds	r2, r4, r7
 800f940:	e7ea      	b.n	800f918 <mdns::Domain::Print(bool)+0x14>
 800f942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f946:	bf00      	nop
 800f948:	0801790c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp, lr}

0800f94c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
 800f94c:	f8b0 2100 	ldrh.w	r2, [r0, #256]	@ 0x100
 800f950:	f8b1 3100 	ldrh.w	r3, [r1, #256]	@ 0x100
 800f954:	4293      	cmp	r3, r2
 800f956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f95a:	d127      	bne.n	800f9ac <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800f95c:	18c2      	adds	r2, r0, r3
 800f95e:	7803      	ldrb	r3, [r0, #0]
 800f960:	b11b      	cbz	r3, 800f96a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800f962:	780c      	ldrb	r4, [r1, #0]
 800f964:	b10c      	cbz	r4, 800f96a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800f966:	4290      	cmp	r0, r2
 800f968:	d301      	bcc.n	800f96e <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x22>
 800f96a:	2001      	movs	r0, #1
 800f96c:	e01f      	b.n	800f9ae <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x62>
 800f96e:	42a3      	cmp	r3, r4
 800f970:	d11c      	bne.n	800f9ac <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800f972:	4684      	mov	ip, r0
 800f974:	460f      	mov	r7, r1
 800f976:	461e      	mov	r6, r3
 800f978:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 800f97c:	f1a4 0541 	sub.w	r5, r4, #65	@ 0x41
 800f980:	2d19      	cmp	r5, #25
 800f982:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800f986:	f1a5 0841 	sub.w	r8, r5, #65	@ 0x41
 800f98a:	46a6      	mov	lr, r4
 800f98c:	bf98      	it	ls
 800f98e:	f104 0e20 	addls.w	lr, r4, #32
 800f992:	f1b8 0f19 	cmp.w	r8, #25
 800f996:	bf98      	it	ls
 800f998:	3520      	addls	r5, #32
 800f99a:	4575      	cmp	r5, lr
 800f99c:	d106      	bne.n	800f9ac <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800f99e:	b10c      	cbz	r4, 800f9a4 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x58>
 800f9a0:	3e01      	subs	r6, #1
 800f9a2:	d1e9      	bne.n	800f978 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x2c>
 800f9a4:	3301      	adds	r3, #1
 800f9a6:	4418      	add	r0, r3
 800f9a8:	4419      	add	r1, r3
 800f9aa:	e7d8      	b.n	800f95e <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x12>
 800f9ac:	2000      	movs	r0, #0
 800f9ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f9b2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
 800f9b2:	f892 c000 	ldrb.w	ip, [r2]
 800f9b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9ba:	ea6f 050c 	mvn.w	r5, ip
 800f9be:	4606      	mov	r6, r0
 800f9c0:	440d      	add	r5, r1
 800f9c2:	42b5      	cmp	r5, r6
 800f9c4:	4628      	mov	r0, r5
 800f9c6:	d201      	bcs.n	800f9cc <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x1a>
 800f9c8:	2000      	movs	r0, #0
 800f9ca:	e040      	b.n	800fa4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x9c>
 800f9cc:	7803      	ldrb	r3, [r0, #0]
 800f9ce:	4563      	cmp	r3, ip
 800f9d0:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 800f9d4:	d1f5      	bne.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800f9d6:	78ac      	ldrb	r4, [r5, #2]
 800f9d8:	7853      	ldrb	r3, [r2, #1]
 800f9da:	429c      	cmp	r4, r3
 800f9dc:	d1f1      	bne.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800f9de:	4604      	mov	r4, r0
 800f9e0:	4617      	mov	r7, r2
 800f9e2:	e018      	b.n	800fa16 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800f9e4:	4573      	cmp	r3, lr
 800f9e6:	db27      	blt.n	800fa38 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x86>
 800f9e8:	e7eb      	b.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800f9ea:	2b3f      	cmp	r3, #63	@ 0x3f
 800f9ec:	d913      	bls.n	800fa16 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800f9ee:	2bbf      	cmp	r3, #191	@ 0xbf
 800f9f0:	d9e7      	bls.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800f9f2:	f104 0e01 	add.w	lr, r4, #1
 800f9f6:	4571      	cmp	r1, lr
 800f9f8:	d9e3      	bls.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800f9fa:	f894 e001 	ldrb.w	lr, [r4, #1]
 800f9fe:	021b      	lsls	r3, r3, #8
 800fa00:	f403 537c 	and.w	r3, r3, #16128	@ 0x3f00
 800fa04:	4473      	add	r3, lr
 800fa06:	eb06 0e03 	add.w	lr, r6, r3
 800fa0a:	4574      	cmp	r4, lr
 800fa0c:	d3d9      	bcc.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fa0e:	5cf3      	ldrb	r3, [r6, r3]
 800fa10:	2b3f      	cmp	r3, #63	@ 0x3f
 800fa12:	d8d6      	bhi.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fa14:	4674      	mov	r4, lr
 800fa16:	783b      	ldrb	r3, [r7, #0]
 800fa18:	eb04 0e03 	add.w	lr, r4, r3
 800fa1c:	4571      	cmp	r1, lr
 800fa1e:	d9d0      	bls.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fa20:	f04f 0e00 	mov.w	lr, #0
 800fa24:	f814 900e 	ldrb.w	r9, [r4, lr]
 800fa28:	f817 800e 	ldrb.w	r8, [r7, lr]
 800fa2c:	45c1      	cmp	r9, r8
 800fa2e:	d1d9      	bne.n	800f9e4 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x32>
 800fa30:	f10e 0e01 	add.w	lr, lr, #1
 800fa34:	4573      	cmp	r3, lr
 800fa36:	daf5      	bge.n	800fa24 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x72>
 800fa38:	3301      	adds	r3, #1
 800fa3a:	441f      	add	r7, r3
 800fa3c:	441c      	add	r4, r3
 800fa3e:	f897 e000 	ldrb.w	lr, [r7]
 800fa42:	7823      	ldrb	r3, [r4, #0]
 800fa44:	f1be 0f00 	cmp.w	lr, #0
 800fa48:	d1cf      	bne.n	800f9ea <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x38>
 800fa4a:	2b00      	cmp	r3, #0
 800fa4c:	d1b9      	bne.n	800f9c2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fa4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
 800fa54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa56:	460a      	mov	r2, r1
 800fa58:	4606      	mov	r6, r0
 800fa5a:	4605      	mov	r5, r0
 800fa5c:	7814      	ldrb	r4, [r2, #0]
 800fa5e:	b91c      	cbnz	r4, 800fa68 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x14>
 800fa60:	4628      	mov	r0, r5
 800fa62:	f800 4b01 	strb.w	r4, [r0], #1
 800fa66:	e00e      	b.n	800fa86 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x32>
 800fa68:	4810      	ldr	r0, [pc, #64]	@ (800faac <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800fa6a:	4631      	mov	r1, r6
 800fa6c:	f7ff ffa1 	bl	800f9b2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
 800fa70:	b150      	cbz	r0, 800fa88 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x34>
 800fa72:	4b0e      	ldr	r3, [pc, #56]	@ (800faac <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800fa74:	1ac3      	subs	r3, r0, r3
 800fa76:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800fa7a:	4628      	mov	r0, r5
 800fa7c:	f062 023f 	orn	r2, r2, #63	@ 0x3f
 800fa80:	f800 2b02 	strb.w	r2, [r0], #2
 800fa84:	706b      	strb	r3, [r5, #1]
 800fa86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa88:	462b      	mov	r3, r5
 800fa8a:	3201      	adds	r2, #1
 800fa8c:	f803 4b01 	strb.w	r4, [r3], #1
 800fa90:	4617      	mov	r7, r2
 800fa92:	4618      	mov	r0, r3
 800fa94:	f817 1b01 	ldrb.w	r1, [r7], #1
 800fa98:	f800 1b01 	strb.w	r1, [r0], #1
 800fa9c:	1b41      	subs	r1, r0, r5
 800fa9e:	3901      	subs	r1, #1
 800faa0:	42a1      	cmp	r1, r4
 800faa2:	d3f7      	bcc.n	800fa94 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x40>
 800faa4:	4422      	add	r2, r4
 800faa6:	191d      	adds	r5, r3, r4
 800faa8:	e7d8      	b.n	800fa5c <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x8>
 800faaa:	bf00      	nop
 800faac:	20001e3d 	andcs	r1, r0, sp, lsr lr

0800fab0 <add_answer_a(unsigned char*, unsigned long)>:
 800fab0:	b530      	push	{r4, r5, lr}
 800fab2:	b0c3      	sub	sp, #268	@ 0x10c
 800fab4:	4605      	mov	r5, r0
 800fab6:	a801      	add	r0, sp, #4
 800fab8:	460c      	mov	r4, r1
 800faba:	f7ff feb1 	bl	800f820 <create_host_domain(mdns::Domain&)>
 800fabe:	a901      	add	r1, sp, #4
 800fac0:	4628      	mov	r0, r5
 800fac2:	f7ff ffc7 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fac6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800faca:	8003      	strh	r3, [r0, #0]
 800facc:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800fad0:	8043      	strh	r3, [r0, #2]
 800fad2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800fad6:	8103      	strh	r3, [r0, #8]
 800fad8:	4b04      	ldr	r3, [pc, #16]	@ (800faec <add_answer_a(unsigned char*, unsigned long)+0x3c>)
 800fada:	ba24      	rev	r4, r4
 800fadc:	681b      	ldr	r3, [r3, #0]
 800fade:	6044      	str	r4, [r0, #4]
 800fae0:	f8c0 300a 	str.w	r3, [r0, #10]
 800fae4:	300e      	adds	r0, #14
 800fae6:	1b40      	subs	r0, r0, r5
 800fae8:	b043      	add	sp, #268	@ 0x10c
 800faea:	bd30      	pop	{r4, r5, pc}
 800faec:	20002088 	andcs	r2, r0, r8, lsl #1

0800faf0 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
 800faf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800faf2:	4e11      	ldr	r6, [pc, #68]	@ (800fb38 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x48>)
 800faf4:	b0c3      	sub	sp, #268	@ 0x10c
 800faf6:	4607      	mov	r7, r0
 800faf8:	460d      	mov	r5, r1
 800fafa:	4630      	mov	r0, r6
 800fafc:	490f      	ldr	r1, [pc, #60]	@ (800fb3c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x4c>)
 800fafe:	f7ff ffa9 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fb02:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800fb06:	8003      	strh	r3, [r0, #0]
 800fb08:	ba2d      	rev	r5, r5
 800fb0a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800fb0e:	8043      	strh	r3, [r0, #2]
 800fb10:	4604      	mov	r4, r0
 800fb12:	6045      	str	r5, [r0, #4]
 800fb14:	2200      	movs	r2, #0
 800fb16:	f100 050a 	add.w	r5, r0, #10
 800fb1a:	4639      	mov	r1, r7
 800fb1c:	a801      	add	r0, sp, #4
 800fb1e:	f7ff fe9f 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fb22:	a901      	add	r1, sp, #4
 800fb24:	4628      	mov	r0, r5
 800fb26:	f7ff ff95 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fb2a:	1b45      	subs	r5, r0, r5
 800fb2c:	ba6d      	rev16	r5, r5
 800fb2e:	1b80      	subs	r0, r0, r6
 800fb30:	8125      	strh	r5, [r4, #8]
 800fb32:	b043      	add	sp, #268	@ 0x10c
 800fb34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb36:	bf00      	nop
 800fb38:	20001e49 	andcs	r1, r0, r9, asr #28
 800fb3c:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}

0800fb40 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800fb40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb42:	b0c3      	sub	sp, #268	@ 0x10c
 800fb44:	460e      	mov	r6, r1
 800fb46:	4607      	mov	r7, r0
 800fb48:	4601      	mov	r1, r0
 800fb4a:	4615      	mov	r5, r2
 800fb4c:	a801      	add	r0, sp, #4
 800fb4e:	2201      	movs	r2, #1
 800fb50:	f7ff fe86 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fb54:	a901      	add	r1, sp, #4
 800fb56:	4630      	mov	r0, r6
 800fb58:	f7ff ff7c 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fb5c:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 800fb60:	8003      	strh	r3, [r0, #0]
 800fb62:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800fb66:	8043      	strh	r3, [r0, #2]
 800fb68:	2300      	movs	r3, #0
 800fb6a:	f8c0 300a 	str.w	r3, [r0, #10]
 800fb6e:	ba2d      	rev	r5, r5
 800fb70:	897b      	ldrh	r3, [r7, #10]
 800fb72:	81c3      	strh	r3, [r0, #14]
 800fb74:	4604      	mov	r4, r0
 800fb76:	6045      	str	r5, [r0, #4]
 800fb78:	f100 0510 	add.w	r5, r0, #16
 800fb7c:	a801      	add	r0, sp, #4
 800fb7e:	f7ff fe4f 	bl	800f820 <create_host_domain(mdns::Domain&)>
 800fb82:	a901      	add	r1, sp, #4
 800fb84:	4628      	mov	r0, r5
 800fb86:	f7ff ff65 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fb8a:	1d83      	adds	r3, r0, #6
 800fb8c:	1b5b      	subs	r3, r3, r5
 800fb8e:	ba5b      	rev16	r3, r3
 800fb90:	1b80      	subs	r0, r0, r6
 800fb92:	8123      	strh	r3, [r4, #8]
 800fb94:	b043      	add	sp, #268	@ 0x10c
 800fb96:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fb98 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800fb98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb9a:	b0c3      	sub	sp, #268	@ 0x10c
 800fb9c:	460e      	mov	r6, r1
 800fb9e:	4607      	mov	r7, r0
 800fba0:	4601      	mov	r1, r0
 800fba2:	4615      	mov	r5, r2
 800fba4:	a801      	add	r0, sp, #4
 800fba6:	2200      	movs	r2, #0
 800fba8:	f7ff fe5a 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fbac:	a901      	add	r1, sp, #4
 800fbae:	4630      	mov	r0, r6
 800fbb0:	f7ff ff50 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fbb4:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800fbb8:	8003      	strh	r3, [r0, #0]
 800fbba:	ba2d      	rev	r5, r5
 800fbbc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800fbc0:	8043      	strh	r3, [r0, #2]
 800fbc2:	4604      	mov	r4, r0
 800fbc4:	6045      	str	r5, [r0, #4]
 800fbc6:	2201      	movs	r2, #1
 800fbc8:	f100 050a 	add.w	r5, r0, #10
 800fbcc:	4639      	mov	r1, r7
 800fbce:	a801      	add	r0, sp, #4
 800fbd0:	f7ff fe46 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fbd4:	a901      	add	r1, sp, #4
 800fbd6:	4628      	mov	r0, r5
 800fbd8:	f7ff ff3c 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fbdc:	1b45      	subs	r5, r0, r5
 800fbde:	ba6d      	rev16	r5, r5
 800fbe0:	1b80      	subs	r0, r0, r6
 800fbe2:	8125      	strh	r5, [r4, #8]
 800fbe4:	b043      	add	sp, #268	@ 0x10c
 800fbe6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fbe8 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800fbe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbea:	b0c3      	sub	sp, #268	@ 0x10c
 800fbec:	4604      	mov	r4, r0
 800fbee:	460e      	mov	r6, r1
 800fbf0:	4615      	mov	r5, r2
 800fbf2:	4601      	mov	r1, r0
 800fbf4:	2201      	movs	r2, #1
 800fbf6:	a801      	add	r0, sp, #4
 800fbf8:	f7ff fe32 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fbfc:	a901      	add	r1, sp, #4
 800fbfe:	4630      	mov	r0, r6
 800fc00:	f7ff ff28 	bl	800fa54 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fc04:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800fc08:	8002      	strh	r2, [r0, #0]
 800fc0a:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 800fc0e:	8042      	strh	r2, [r0, #2]
 800fc10:	6862      	ldr	r2, [r4, #4]
 800fc12:	ba2d      	rev	r5, r5
 800fc14:	6045      	str	r5, [r0, #4]
 800fc16:	f100 050b 	add.w	r5, r0, #11
 800fc1a:	b932      	cbnz	r2, 800fc2a <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x42>
 800fc1c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800fc20:	8101      	strh	r1, [r0, #8]
 800fc22:	7282      	strb	r2, [r0, #10]
 800fc24:	1ba8      	subs	r0, r5, r6
 800fc26:	b043      	add	sp, #268	@ 0x10c
 800fc28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc2a:	8927      	ldrh	r7, [r4, #8]
 800fc2c:	7287      	strb	r7, [r0, #10]
 800fc2e:	1c7a      	adds	r2, r7, #1
 800fc30:	ba52      	rev16	r2, r2
 800fc32:	8102      	strh	r2, [r0, #8]
 800fc34:	8922      	ldrh	r2, [r4, #8]
 800fc36:	6861      	ldr	r1, [r4, #4]
 800fc38:	4628      	mov	r0, r5
 800fc3a:	f7ff fdcd 	bl	800f7d8 <memcpy.isra.0>
 800fc3e:	443d      	add	r5, r7
 800fc40:	e7f0      	b.n	800fc24 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x3c>

0800fc42 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
 800fc42:	4281      	cmp	r1, r0
 800fc44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc48:	4606      	mov	r6, r0
 800fc4a:	d310      	bcc.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc4c:	4291      	cmp	r1, r2
 800fc4e:	d20e      	bcs.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc50:	2500      	movs	r5, #0
 800fc52:	f503 7c80 	add.w	ip, r3, #256	@ 0x100
 800fc56:	701d      	strb	r5, [r3, #0]
 800fc58:	4608      	mov	r0, r1
 800fc5a:	4607      	mov	r7, r0
 800fc5c:	f810 4b01 	ldrb.w	r4, [r0], #1
 800fc60:	b38c      	cbz	r4, 800fcc6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
 800fc62:	f004 01c0 	and.w	r1, r4, #192	@ 0xc0
 800fc66:	2980      	cmp	r1, #128	@ 0x80
 800fc68:	d001      	beq.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc6a:	d803      	bhi.n	800fc74 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x32>
 800fc6c:	b199      	cbz	r1, 800fc96 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x54>
 800fc6e:	2000      	movs	r0, #0
 800fc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc74:	29c0      	cmp	r1, #192	@ 0xc0
 800fc76:	d1f0      	bne.n	800fc5a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x18>
 800fc78:	7800      	ldrb	r0, [r0, #0]
 800fc7a:	0224      	lsls	r4, r4, #8
 800fc7c:	f404 547c 	and.w	r4, r4, #16128	@ 0x3f00
 800fc80:	4320      	orrs	r0, r4
 800fc82:	b905      	cbnz	r5, 800fc86 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x44>
 800fc84:	1cbd      	adds	r5, r7, #2
 800fc86:	1831      	adds	r1, r6, r0
 800fc88:	d2f1      	bcs.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc8a:	428a      	cmp	r2, r1
 800fc8c:	d9ef      	bls.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc8e:	5c30      	ldrb	r0, [r6, r0]
 800fc90:	283f      	cmp	r0, #63	@ 0x3f
 800fc92:	d9e1      	bls.n	800fc58 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 800fc94:	e7eb      	b.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc96:	1901      	adds	r1, r0, r4
 800fc98:	4291      	cmp	r1, r2
 800fc9a:	d2e8      	bcs.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fc9c:	1c67      	adds	r7, r4, #1
 800fc9e:	441f      	add	r7, r3
 800fca0:	4567      	cmp	r7, ip
 800fca2:	d2e4      	bcs.n	800fc6e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800fca4:	469e      	mov	lr, r3
 800fca6:	f80e 4b01 	strb.w	r4, [lr], #1
 800fcaa:	f810 8b01 	ldrb.w	r8, [r0], #1
 800fcae:	f80e 8b01 	strb.w	r8, [lr], #1
 800fcb2:	ebae 0803 	sub.w	r8, lr, r3
 800fcb6:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800fcba:	4544      	cmp	r4, r8
 800fcbc:	dcf5      	bgt.n	800fcaa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x68>
 800fcbe:	2300      	movs	r3, #0
 800fcc0:	703b      	strb	r3, [r7, #0]
 800fcc2:	463b      	mov	r3, r7
 800fcc4:	e7c8      	b.n	800fc58 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 800fcc6:	2d00      	cmp	r5, #0
 800fcc8:	bf18      	it	ne
 800fcca:	4628      	movne	r0, r5
 800fccc:	e7d0      	b.n	800fc70 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2e>
	...

0800fcd0 <MDNS::SendTo(unsigned long)>:
 800fcd0:	4b0d      	ldr	r3, [pc, #52]	@ (800fd08 <MDNS::SendTo(unsigned long)+0x38>)
 800fcd2:	b513      	push	{r0, r1, r4, lr}
 800fcd4:	6818      	ldr	r0, [r3, #0]
 800fcd6:	4b0d      	ldr	r3, [pc, #52]	@ (800fd0c <MDNS::SendTo(unsigned long)+0x3c>)
 800fcd8:	460a      	mov	r2, r1
 800fcda:	6819      	ldr	r1, [r3, #0]
 800fcdc:	4b0c      	ldr	r3, [pc, #48]	@ (800fd10 <MDNS::SendTo(unsigned long)+0x40>)
 800fcde:	781b      	ldrb	r3, [r3, #0]
 800fce0:	b94b      	cbnz	r3, 800fcf6 <MDNS::SendTo(unsigned long)+0x26>
 800fce2:	b131      	cbz	r1, 800fcf2 <MDNS::SendTo(unsigned long)+0x22>
 800fce4:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 800fce8:	9300      	str	r3, [sp, #0]
 800fcea:	4b0a      	ldr	r3, [pc, #40]	@ (800fd14 <MDNS::SendTo(unsigned long)+0x44>)
 800fcec:	490a      	ldr	r1, [pc, #40]	@ (800fd18 <MDNS::SendTo(unsigned long)+0x48>)
 800fcee:	f001 fdc5 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800fcf2:	b002      	add	sp, #8
 800fcf4:	bd10      	pop	{r4, pc}
 800fcf6:	4b09      	ldr	r3, [pc, #36]	@ (800fd1c <MDNS::SendTo(unsigned long)+0x4c>)
 800fcf8:	4c09      	ldr	r4, [pc, #36]	@ (800fd20 <MDNS::SendTo(unsigned long)+0x50>)
 800fcfa:	681b      	ldr	r3, [r3, #0]
 800fcfc:	8824      	ldrh	r4, [r4, #0]
 800fcfe:	2900      	cmp	r1, #0
 800fd00:	d0f7      	beq.n	800fcf2 <MDNS::SendTo(unsigned long)+0x22>
 800fd02:	9400      	str	r4, [sp, #0]
 800fd04:	e7f2      	b.n	800fcec <MDNS::SendTo(unsigned long)+0x1c>
 800fd06:	bf00      	nop
 800fd08:	20001e38 	andcs	r1, r0, r8, lsr lr
 800fd0c:	20002088 	andcs	r2, r0, r8, lsl #1
 800fd10:	20001e3c 	andcs	r1, r0, ip, lsr lr
 800fd14:	fb0000e0 	blx	801009e <MDNS::HandleQuestions(unsigned long)+0x8a>
 800fd18:	20001e3d 	andcs	r1, r0, sp, lsr lr
 800fd1c:	20001e34 	andcs	r1, r0, r4, lsr lr
 800fd20:	20001e30 	andcs	r1, r0, r0, lsr lr

0800fd24 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>:
 800fd24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd26:	4b11      	ldr	r3, [pc, #68]	@ (800fd6c <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x48>)
 800fd28:	4c11      	ldr	r4, [pc, #68]	@ (800fd70 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x4c>)
 800fd2a:	681d      	ldr	r5, [r3, #0]
 800fd2c:	f015 0501 	ands.w	r5, r5, #1
 800fd30:	460f      	mov	r7, r1
 800fd32:	4606      	mov	r6, r0
 800fd34:	4611      	mov	r1, r2
 800fd36:	d003      	beq.n	800fd40 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x1c>
 800fd38:	4620      	mov	r0, r4
 800fd3a:	f7ff feb9 	bl	800fab0 <add_answer_a(unsigned char*, unsigned long)>
 800fd3e:	4404      	add	r4, r0
 800fd40:	4b0c      	ldr	r3, [pc, #48]	@ (800fd74 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x50>)
 800fd42:	2284      	movs	r2, #132	@ 0x84
 800fd44:	709a      	strb	r2, [r3, #2]
 800fd46:	2200      	movs	r2, #0
 800fd48:	ba6d      	rev16	r5, r5
 800fd4a:	1ae4      	subs	r4, r4, r3
 800fd4c:	70da      	strb	r2, [r3, #3]
 800fd4e:	801f      	strh	r7, [r3, #0]
 800fd50:	711a      	strb	r2, [r3, #4]
 800fd52:	715a      	strb	r2, [r3, #5]
 800fd54:	80dd      	strh	r5, [r3, #6]
 800fd56:	721a      	strb	r2, [r3, #8]
 800fd58:	725a      	strb	r2, [r3, #9]
 800fd5a:	729a      	strb	r2, [r3, #10]
 800fd5c:	72da      	strb	r2, [r3, #11]
 800fd5e:	b2a1      	uxth	r1, r4
 800fd60:	4630      	mov	r0, r6
 800fd62:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800fd66:	f7ff bfb3 	b.w	800fcd0 <MDNS::SendTo(unsigned long)>
 800fd6a:	bf00      	nop
 800fd6c:	20002044 	andcs	r2, r0, r4, asr #32
 800fd70:	20001e49 	andcs	r1, r0, r9, asr #28
 800fd74:	20001e3d 	andcs	r1, r0, sp, lsr lr

0800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
 800fd78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fd7c:	461e      	mov	r6, r3
 800fd7e:	4b25      	ldr	r3, [pc, #148]	@ (800fe14 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x9c>)
 800fd80:	4c25      	ldr	r4, [pc, #148]	@ (800fe18 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa0>)
 800fd82:	f8d3 9000 	ldr.w	r9, [r3]
 800fd86:	f019 0510 	ands.w	r5, r9, #16
 800fd8a:	4607      	mov	r7, r0
 800fd8c:	4688      	mov	r8, r1
 800fd8e:	4692      	mov	sl, r2
 800fd90:	d005      	beq.n	800fd9e <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x26>
 800fd92:	4631      	mov	r1, r6
 800fd94:	4640      	mov	r0, r8
 800fd96:	f7ff feab 	bl	800faf0 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
 800fd9a:	2501      	movs	r5, #1
 800fd9c:	4404      	add	r4, r0
 800fd9e:	f019 0f20 	tst.w	r9, #32
 800fda2:	d006      	beq.n	800fdb2 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x3a>
 800fda4:	4621      	mov	r1, r4
 800fda6:	4632      	mov	r2, r6
 800fda8:	4640      	mov	r0, r8
 800fdaa:	f7ff fef5 	bl	800fb98 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800fdae:	3501      	adds	r5, #1
 800fdb0:	4404      	add	r4, r0
 800fdb2:	f019 0f40 	tst.w	r9, #64	@ 0x40
 800fdb6:	d006      	beq.n	800fdc6 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x4e>
 800fdb8:	4621      	mov	r1, r4
 800fdba:	4632      	mov	r2, r6
 800fdbc:	4640      	mov	r0, r8
 800fdbe:	f7ff febf 	bl	800fb40 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800fdc2:	3501      	adds	r5, #1
 800fdc4:	4404      	add	r4, r0
 800fdc6:	f019 0f80 	tst.w	r9, #128	@ 0x80
 800fdca:	d006      	beq.n	800fdda <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x62>
 800fdcc:	4621      	mov	r1, r4
 800fdce:	4632      	mov	r2, r6
 800fdd0:	4640      	mov	r0, r8
 800fdd2:	f7ff ff09 	bl	800fbe8 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800fdd6:	3501      	adds	r5, #1
 800fdd8:	4404      	add	r4, r0
 800fdda:	4631      	mov	r1, r6
 800fddc:	4620      	mov	r0, r4
 800fdde:	f7ff fe67 	bl	800fab0 <add_answer_a(unsigned char*, unsigned long)>
 800fde2:	4b0e      	ldr	r3, [pc, #56]	@ (800fe1c <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa4>)
 800fde4:	2284      	movs	r2, #132	@ 0x84
 800fde6:	2101      	movs	r1, #1
 800fde8:	709a      	strb	r2, [r3, #2]
 800fdea:	7259      	strb	r1, [r3, #9]
 800fdec:	2200      	movs	r2, #0
 800fdee:	1821      	adds	r1, r4, r0
 800fdf0:	ba6d      	rev16	r5, r5
 800fdf2:	70da      	strb	r2, [r3, #3]
 800fdf4:	1ac9      	subs	r1, r1, r3
 800fdf6:	f8a3 a000 	strh.w	sl, [r3]
 800fdfa:	80dd      	strh	r5, [r3, #6]
 800fdfc:	4638      	mov	r0, r7
 800fdfe:	b289      	uxth	r1, r1
 800fe00:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fe04:	711a      	strb	r2, [r3, #4]
 800fe06:	715a      	strb	r2, [r3, #5]
 800fe08:	721a      	strb	r2, [r3, #8]
 800fe0a:	729a      	strb	r2, [r3, #10]
 800fe0c:	72da      	strb	r2, [r3, #11]
 800fe0e:	f7ff bf5f 	b.w	800fcd0 <MDNS::SendTo(unsigned long)>
 800fe12:	bf00      	nop
 800fe14:	20002040 	andcs	r2, r0, r0, asr #32
 800fe18:	20001e49 	andcs	r1, r0, r9, asr #28
 800fe1c:	20001e3d 	andcs	r1, r0, sp, lsr lr

0800fe20 <MDNS::SendAnnouncement(unsigned long)>:
 800fe20:	4b14      	ldr	r3, [pc, #80]	@ (800fe74 <MDNS::SendAnnouncement(unsigned long)+0x54>)
 800fe22:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 800fe26:	b570      	push	{r4, r5, r6, lr}
 800fe28:	801a      	strh	r2, [r3, #0]
 800fe2a:	4b13      	ldr	r3, [pc, #76]	@ (800fe78 <MDNS::SendAnnouncement(unsigned long)+0x58>)
 800fe2c:	4e13      	ldr	r6, [pc, #76]	@ (800fe7c <MDNS::SendAnnouncement(unsigned long)+0x5c>)
 800fe2e:	2201      	movs	r2, #1
 800fe30:	601a      	str	r2, [r3, #0]
 800fe32:	460c      	mov	r4, r1
 800fe34:	460a      	mov	r2, r1
 800fe36:	2100      	movs	r1, #0
 800fe38:	4605      	mov	r5, r0
 800fe3a:	f7ff ff73 	bl	800fd24 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 800fe3e:	68f3      	ldr	r3, [r6, #12]
 800fe40:	2b08      	cmp	r3, #8
 800fe42:	dc08      	bgt.n	800fe56 <MDNS::SendAnnouncement(unsigned long)+0x36>
 800fe44:	4b0e      	ldr	r3, [pc, #56]	@ (800fe80 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 800fe46:	22f0      	movs	r2, #240	@ 0xf0
 800fe48:	601a      	str	r2, [r3, #0]
 800fe4a:	4631      	mov	r1, r6
 800fe4c:	4623      	mov	r3, r4
 800fe4e:	2200      	movs	r2, #0
 800fe50:	4628      	mov	r0, r5
 800fe52:	f7ff ff91 	bl	800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800fe56:	69f3      	ldr	r3, [r6, #28]
 800fe58:	2b08      	cmp	r3, #8
 800fe5a:	dc0a      	bgt.n	800fe72 <MDNS::SendAnnouncement(unsigned long)+0x52>
 800fe5c:	4b08      	ldr	r3, [pc, #32]	@ (800fe80 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 800fe5e:	4909      	ldr	r1, [pc, #36]	@ (800fe84 <MDNS::SendAnnouncement(unsigned long)+0x64>)
 800fe60:	22f0      	movs	r2, #240	@ 0xf0
 800fe62:	601a      	str	r2, [r3, #0]
 800fe64:	4628      	mov	r0, r5
 800fe66:	4623      	mov	r3, r4
 800fe68:	2200      	movs	r2, #0
 800fe6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fe6e:	f7ff bf83 	b.w	800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800fe72:	bd70      	pop	{r4, r5, r6, pc}
 800fe74:	20001e30 	andcs	r1, r0, r0, lsr lr
 800fe78:	20002044 	andcs	r2, r0, r4, asr #32
 800fe7c:	20002048 	andcs	r2, r0, r8, asr #32
 800fe80:	20002040 	andcs	r2, r0, r0, asr #32
 800fe84:	20002058 	andcs	r2, r0, r8, asr r0

0800fe88 <network::mdns_announcement()>:
 800fe88:	4b02      	ldr	r3, [pc, #8]	@ (800fe94 <network::mdns_announcement()+0xc>)
 800fe8a:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800fe8e:	6818      	ldr	r0, [r3, #0]
 800fe90:	f7ff bfc6 	b.w	800fe20 <MDNS::SendAnnouncement(unsigned long)>
 800fe94:	20001e24 	andcs	r1, r0, r4, lsr #28

0800fe98 <network::mdns_shutdown()>:
 800fe98:	4b02      	ldr	r3, [pc, #8]	@ (800fea4 <network::mdns_shutdown()+0xc>)
 800fe9a:	2100      	movs	r1, #0
 800fe9c:	6818      	ldr	r0, [r3, #0]
 800fe9e:	f7ff bfbf 	b.w	800fe20 <MDNS::SendAnnouncement(unsigned long)>
 800fea2:	bf00      	nop
 800fea4:	20001e24 	andcs	r1, r0, r4, lsr #28

0800fea8 <MDNS::MDNS()>:
 800fea8:	b538      	push	{r3, r4, r5, lr}
 800feaa:	4b16      	ldr	r3, [pc, #88]	@ (800ff04 <MDNS::MDNS()+0x5c>)
 800feac:	4d16      	ldr	r5, [pc, #88]	@ (800ff08 <MDNS::MDNS()+0x60>)
 800feae:	6018      	str	r0, [r3, #0]
 800feb0:	4b16      	ldr	r3, [pc, #88]	@ (800ff0c <MDNS::MDNS()+0x64>)
 800feb2:	2209      	movs	r2, #9
 800feb4:	4604      	mov	r4, r0
 800feb6:	f241 40e9 	movw	r0, #5353	@ 0x14e9
 800feba:	60da      	str	r2, [r3, #12]
 800febc:	61da      	str	r2, [r3, #28]
 800febe:	f001 fc85 	bl	80117cc <net::udp_begin(unsigned short)>
 800fec2:	4b13      	ldr	r3, [pc, #76]	@ (800ff10 <MDNS::MDNS()+0x68>)
 800fec4:	6018      	str	r0, [r3, #0]
 800fec6:	4813      	ldr	r0, [pc, #76]	@ (800ff14 <MDNS::MDNS()+0x6c>)
 800fec8:	f001 f868 	bl	8010f9c <net::igmp_join(unsigned long)>
 800fecc:	4b12      	ldr	r3, [pc, #72]	@ (800ff18 <MDNS::MDNS()+0x70>)
 800fece:	6819      	ldr	r1, [r3, #0]
 800fed0:	233f      	movs	r3, #63	@ 0x3f
 800fed2:	f101 0256 	add.w	r2, r1, #86	@ 0x56
 800fed6:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 800feda:	b118      	cbz	r0, 800fee4 <MDNS::MDNS()+0x3c>
 800fedc:	3b01      	subs	r3, #1
 800fede:	f802 0b01 	strb.w	r0, [r2], #1
 800fee2:	d1f8      	bne.n	800fed6 <MDNS::MDNS()+0x2e>
 800fee4:	4413      	add	r3, r2
 800fee6:	2000      	movs	r0, #0
 800fee8:	429a      	cmp	r2, r3
 800feea:	d108      	bne.n	800fefe <MDNS::MDNS()+0x56>
 800feec:	f881 0095 	strb.w	r0, [r1, #149]	@ 0x95
 800fef0:	4620      	mov	r0, r4
 800fef2:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800fef6:	f7ff ff93 	bl	800fe20 <MDNS::SendAnnouncement(unsigned long)>
 800fefa:	4620      	mov	r0, r4
 800fefc:	bd38      	pop	{r3, r4, r5, pc}
 800fefe:	f802 0b01 	strb.w	r0, [r2], #1
 800ff02:	e7f1      	b.n	800fee8 <MDNS::MDNS()+0x40>
 800ff04:	20001e24 	andcs	r1, r0, r4, lsr #28
 800ff08:	0801a6ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, sp, pc}
 800ff0c:	20002048 	andcs	r2, r0, r8, asr #32
 800ff10:	20001e38 	andcs	r1, r0, r8, lsr lr
 800ff14:	fb0000e0 	blx	801029e <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x3a>
 800ff18:	20002068 	andcs	r2, r0, r8, rrx

0800ff1c <MDNS::ServiceRecordDelete(mdns::Services)>:
 800ff1c:	b510      	push	{r4, lr}
 800ff1e:	4c0c      	ldr	r4, [pc, #48]	@ (800ff50 <MDNS::ServiceRecordDelete(mdns::Services)+0x34>)
 800ff20:	68e3      	ldr	r3, [r4, #12]
 800ff22:	4299      	cmp	r1, r3
 800ff24:	d003      	beq.n	800ff2e <MDNS::ServiceRecordDelete(mdns::Services)+0x12>
 800ff26:	69e3      	ldr	r3, [r4, #28]
 800ff28:	4299      	cmp	r1, r3
 800ff2a:	d10f      	bne.n	800ff4c <MDNS::ServiceRecordDelete(mdns::Services)+0x30>
 800ff2c:	3410      	adds	r4, #16
 800ff2e:	2300      	movs	r3, #0
 800ff30:	461a      	mov	r2, r3
 800ff32:	4621      	mov	r1, r4
 800ff34:	f7ff ff20 	bl	800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800ff38:	6820      	ldr	r0, [r4, #0]
 800ff3a:	b108      	cbz	r0, 800ff40 <MDNS::ServiceRecordDelete(mdns::Services)+0x24>
 800ff3c:	f006 fe7a 	bl	8016c34 <operator delete[](void*)>
 800ff40:	6860      	ldr	r0, [r4, #4]
 800ff42:	b108      	cbz	r0, 800ff48 <MDNS::ServiceRecordDelete(mdns::Services)+0x2c>
 800ff44:	f006 fe76 	bl	8016c34 <operator delete[](void*)>
 800ff48:	2001      	movs	r0, #1
 800ff4a:	bd10      	pop	{r4, pc}
 800ff4c:	2000      	movs	r0, #0
 800ff4e:	e7fc      	b.n	800ff4a <MDNS::ServiceRecordDelete(mdns::Services)+0x2e>
 800ff50:	20002048 	andcs	r2, r0, r8, asr #32

0800ff54 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>:
 800ff54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ff58:	4d2a      	ldr	r5, [pc, #168]	@ (8010004 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb0>)
 800ff5a:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 800ff5e:	461f      	mov	r7, r3
 800ff60:	68eb      	ldr	r3, [r5, #12]
 800ff62:	2b09      	cmp	r3, #9
 800ff64:	4680      	mov	r8, r0
 800ff66:	4689      	mov	r9, r1
 800ff68:	4692      	mov	sl, r2
 800ff6a:	d003      	beq.n	800ff74 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x20>
 800ff6c:	69eb      	ldr	r3, [r5, #28]
 800ff6e:	2b09      	cmp	r3, #9
 800ff70:	d145      	bne.n	800fffe <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xaa>
 800ff72:	3510      	adds	r5, #16
 800ff74:	f1b9 0f00 	cmp.w	r9, #0
 800ff78:	d012      	beq.n	800ffa0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x4c>
 800ff7a:	4648      	mov	r0, r9
 800ff7c:	f7ff fc35 	bl	800f7ea <strlen>
 800ff80:	283f      	cmp	r0, #63	@ 0x3f
 800ff82:	4604      	mov	r4, r0
 800ff84:	d839      	bhi.n	800fffa <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa6>
 800ff86:	2800      	cmp	r0, #0
 800ff88:	d035      	beq.n	800fff6 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 800ff8a:	1c60      	adds	r0, r4, #1
 800ff8c:	f006 fe58 	bl	8016c40 <operator new[](unsigned int)>
 800ff90:	4622      	mov	r2, r4
 800ff92:	6028      	str	r0, [r5, #0]
 800ff94:	4649      	mov	r1, r9
 800ff96:	f7ff fc1f 	bl	800f7d8 <memcpy.isra.0>
 800ff9a:	682b      	ldr	r3, [r5, #0]
 800ff9c:	2200      	movs	r2, #0
 800ff9e:	551a      	strb	r2, [r3, r4]
 800ffa0:	f8c5 a00c 	str.w	sl, [r5, #12]
 800ffa4:	b91e      	cbnz	r6, 800ffae <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x5a>
 800ffa6:	4b18      	ldr	r3, [pc, #96]	@ (8010008 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb4>)
 800ffa8:	eb03 130a 	add.w	r3, r3, sl, lsl #4
 800ffac:	899e      	ldrh	r6, [r3, #12]
 800ffae:	ba76      	rev16	r6, r6
 800ffb0:	b2b6      	uxth	r6, r6
 800ffb2:	816e      	strh	r6, [r5, #10]
 800ffb4:	b187      	cbz	r7, 800ffd8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x84>
 800ffb6:	4638      	mov	r0, r7
 800ffb8:	f7ff fc17 	bl	800f7ea <strlen>
 800ffbc:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800ffc0:	bf28      	it	cs
 800ffc2:	f44f 7080 	movcs.w	r0, #256	@ 0x100
 800ffc6:	4604      	mov	r4, r0
 800ffc8:	f006 fe3a 	bl	8016c40 <operator new[](unsigned int)>
 800ffcc:	4622      	mov	r2, r4
 800ffce:	6068      	str	r0, [r5, #4]
 800ffd0:	4639      	mov	r1, r7
 800ffd2:	f7ff fc01 	bl	800f7d8 <memcpy.isra.0>
 800ffd6:	812c      	strh	r4, [r5, #8]
 800ffd8:	4b0c      	ldr	r3, [pc, #48]	@ (801000c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb8>)
 800ffda:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 800ffde:	801a      	strh	r2, [r3, #0]
 800ffe0:	4b0b      	ldr	r3, [pc, #44]	@ (8010010 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xbc>)
 800ffe2:	22f0      	movs	r2, #240	@ 0xf0
 800ffe4:	601a      	str	r2, [r3, #0]
 800ffe6:	4640      	mov	r0, r8
 800ffe8:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 800ffec:	2200      	movs	r2, #0
 800ffee:	4629      	mov	r1, r5
 800fff0:	f7ff fec2 	bl	800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800fff4:	2001      	movs	r0, #1
 800fff6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fffa:	243f      	movs	r4, #63	@ 0x3f
 800fffc:	e7c5      	b.n	800ff8a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x36>
 800fffe:	2000      	movs	r0, #0
 8010000:	e7f9      	b.n	800fff6 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 8010002:	bf00      	nop
 8010004:	20002048 	andcs	r2, r0, r8, asr #32
 8010008:	0801a5f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, sp, pc}
 801000c:	20001e30 	andcs	r1, r0, r0, lsr lr
 8010010:	20002040 	andcs	r2, r0, r0, asr #32

08010014 <MDNS::HandleQuestions(unsigned long)>:
 8010014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010018:	4b5c      	ldr	r3, [pc, #368]	@ (801018c <MDNS::HandleQuestions(unsigned long)+0x178>)
 801001a:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 80101ac <MDNS::HandleQuestions(unsigned long)+0x198>
 801001e:	881a      	ldrh	r2, [r3, #0]
 8010020:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 8010024:	429a      	cmp	r2, r3
 8010026:	f04f 0500 	mov.w	r5, #0
 801002a:	4b59      	ldr	r3, [pc, #356]	@ (8010190 <MDNS::HandleQuestions(unsigned long)+0x17c>)
 801002c:	f8c9 5000 	str.w	r5, [r9]
 8010030:	f5ad 7d47 	sub.w	sp, sp, #796	@ 0x31c
 8010034:	bf14      	ite	ne
 8010036:	2201      	movne	r2, #1
 8010038:	462a      	moveq	r2, r5
 801003a:	9001      	str	r0, [sp, #4]
 801003c:	4688      	mov	r8, r1
 801003e:	701a      	strb	r2, [r3, #0]
 8010040:	d004      	beq.n	801004c <MDNS::HandleQuestions(unsigned long)+0x38>
 8010042:	2901      	cmp	r1, #1
 8010044:	bf02      	ittt	eq
 8010046:	4b53      	ldreq	r3, [pc, #332]	@ (8010194 <MDNS::HandleQuestions(unsigned long)+0x180>)
 8010048:	681b      	ldreq	r3, [r3, #0]
 801004a:	881d      	ldrheq	r5, [r3, #0]
 801004c:	4c52      	ldr	r4, [pc, #328]	@ (8010198 <MDNS::HandleQuestions(unsigned long)+0x184>)
 801004e:	f04f 0b00 	mov.w	fp, #0
 8010052:	f04f 0a0c 	mov.w	sl, #12
 8010056:	45c3      	cmp	fp, r8
 8010058:	d10e      	bne.n	8010078 <MDNS::HandleQuestions(unsigned long)+0x64>
 801005a:	f8d9 3000 	ldr.w	r3, [r9]
 801005e:	2b00      	cmp	r3, #0
 8010060:	f000 808f 	beq.w	8010182 <MDNS::HandleQuestions(unsigned long)+0x16e>
 8010064:	9801      	ldr	r0, [sp, #4]
 8010066:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 801006a:	4629      	mov	r1, r5
 801006c:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 8010070:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010074:	f7ff be56 	b.w	800fd24 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 8010078:	4b48      	ldr	r3, [pc, #288]	@ (801019c <MDNS::HandleQuestions(unsigned long)+0x188>)
 801007a:	4e46      	ldr	r6, [pc, #280]	@ (8010194 <MDNS::HandleQuestions(unsigned long)+0x180>)
 801007c:	681a      	ldr	r2, [r3, #0]
 801007e:	6830      	ldr	r0, [r6, #0]
 8010080:	ab03      	add	r3, sp, #12
 8010082:	4402      	add	r2, r0
 8010084:	eb00 010a 	add.w	r1, r0, sl
 8010088:	f7ff fddb 	bl	800fc42 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
 801008c:	2800      	cmp	r0, #0
 801008e:	d078      	beq.n	8010182 <MDNS::HandleQuestions(unsigned long)+0x16e>
 8010090:	6833      	ldr	r3, [r6, #0]
 8010092:	eb03 020a 	add.w	r2, r3, sl
 8010096:	1a80      	subs	r0, r0, r2
 8010098:	f8ad 010c 	strh.w	r0, [sp, #268]	@ 0x10c
 801009c:	fa1a f080 	uxtah	r0, sl, r0
 80100a0:	181a      	adds	r2, r3, r0
 80100a2:	f100 0a04 	add.w	sl, r0, #4
 80100a6:	8852      	ldrh	r2, [r2, #2]
 80100a8:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 80100ac:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80100b0:	d002      	beq.n	80100b8 <MDNS::HandleQuestions(unsigned long)+0xa4>
 80100b2:	f10b 0b01 	add.w	fp, fp, #1
 80100b6:	e7ce      	b.n	8010056 <MDNS::HandleQuestions(unsigned long)+0x42>
 80100b8:	5a1e      	ldrh	r6, [r3, r0]
 80100ba:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 80100be:	d002      	beq.n	80100c6 <MDNS::HandleQuestions(unsigned long)+0xb2>
 80100c0:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80100c4:	d10d      	bne.n	80100e2 <MDNS::HandleQuestions(unsigned long)+0xce>
 80100c6:	a844      	add	r0, sp, #272	@ 0x110
 80100c8:	f7ff fbaa 	bl	800f820 <create_host_domain(mdns::Domain&)>
 80100cc:	a903      	add	r1, sp, #12
 80100ce:	a844      	add	r0, sp, #272	@ 0x110
 80100d0:	f7ff fc3c 	bl	800f94c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 80100d4:	b128      	cbz	r0, 80100e2 <MDNS::HandleQuestions(unsigned long)+0xce>
 80100d6:	f8d9 3000 	ldr.w	r3, [r9]
 80100da:	f043 0301 	orr.w	r3, r3, #1
 80100de:	f8c9 3000 	str.w	r3, [r9]
 80100e2:	4f2f      	ldr	r7, [pc, #188]	@ (80101a0 <MDNS::HandleQuestions(unsigned long)+0x18c>)
 80100e4:	68fb      	ldr	r3, [r7, #12]
 80100e6:	2b08      	cmp	r3, #8
 80100e8:	dc46      	bgt.n	8010178 <MDNS::HandleQuestions(unsigned long)+0x164>
 80100ea:	2300      	movs	r3, #0
 80100ec:	f5b6 6f40 	cmp.w	r6, #3072	@ 0xc00
 80100f0:	6023      	str	r3, [r4, #0]
 80100f2:	d002      	beq.n	80100fa <MDNS::HandleQuestions(unsigned long)+0xe6>
 80100f4:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80100f8:	d115      	bne.n	8010126 <MDNS::HandleQuestions(unsigned long)+0x112>
 80100fa:	482a      	ldr	r0, [pc, #168]	@ (80101a4 <MDNS::HandleQuestions(unsigned long)+0x190>)
 80100fc:	a903      	add	r1, sp, #12
 80100fe:	f7ff fc25 	bl	800f94c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8010102:	b108      	cbz	r0, 8010108 <MDNS::HandleQuestions(unsigned long)+0xf4>
 8010104:	2310      	movs	r3, #16
 8010106:	6023      	str	r3, [r4, #0]
 8010108:	2200      	movs	r2, #0
 801010a:	4639      	mov	r1, r7
 801010c:	a885      	add	r0, sp, #532	@ 0x214
 801010e:	f7ff fba7 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010112:	a903      	add	r1, sp, #12
 8010114:	a885      	add	r0, sp, #532	@ 0x214
 8010116:	f7ff fc19 	bl	800f94c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 801011a:	6823      	ldr	r3, [r4, #0]
 801011c:	b118      	cbz	r0, 8010126 <MDNS::HandleQuestions(unsigned long)+0x112>
 801011e:	f043 0320 	orr.w	r3, r3, #32
 8010122:	b2db      	uxtb	r3, r3
 8010124:	6023      	str	r3, [r4, #0]
 8010126:	4639      	mov	r1, r7
 8010128:	a885      	add	r0, sp, #532	@ 0x214
 801012a:	2201      	movs	r2, #1
 801012c:	f7ff fb98 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010130:	a903      	add	r1, sp, #12
 8010132:	a885      	add	r0, sp, #532	@ 0x214
 8010134:	f7ff fc0a 	bl	800f94c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8010138:	b1d8      	cbz	r0, 8010172 <MDNS::HandleQuestions(unsigned long)+0x15e>
 801013a:	f5b6 5f04 	cmp.w	r6, #8448	@ 0x2100
 801013e:	d002      	beq.n	8010146 <MDNS::HandleQuestions(unsigned long)+0x132>
 8010140:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8010144:	d112      	bne.n	801016c <MDNS::HandleQuestions(unsigned long)+0x158>
 8010146:	7823      	ldrb	r3, [r4, #0]
 8010148:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 801014c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8010150:	6023      	str	r3, [r4, #0]
 8010152:	d103      	bne.n	801015c <MDNS::HandleQuestions(unsigned long)+0x148>
 8010154:	7823      	ldrb	r3, [r4, #0]
 8010156:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801015a:	6023      	str	r3, [r4, #0]
 801015c:	9801      	ldr	r0, [sp, #4]
 801015e:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8010162:	462a      	mov	r2, r5
 8010164:	4639      	mov	r1, r7
 8010166:	f7ff fe07 	bl	800fd78 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 801016a:	e005      	b.n	8010178 <MDNS::HandleQuestions(unsigned long)+0x164>
 801016c:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
 8010170:	d0f0      	beq.n	8010154 <MDNS::HandleQuestions(unsigned long)+0x140>
 8010172:	6823      	ldr	r3, [r4, #0]
 8010174:	2b00      	cmp	r3, #0
 8010176:	d1f1      	bne.n	801015c <MDNS::HandleQuestions(unsigned long)+0x148>
 8010178:	4b0b      	ldr	r3, [pc, #44]	@ (80101a8 <MDNS::HandleQuestions(unsigned long)+0x194>)
 801017a:	3710      	adds	r7, #16
 801017c:	429f      	cmp	r7, r3
 801017e:	d1b1      	bne.n	80100e4 <MDNS::HandleQuestions(unsigned long)+0xd0>
 8010180:	e797      	b.n	80100b2 <MDNS::HandleQuestions(unsigned long)+0x9e>
 8010182:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 8010186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801018a:	bf00      	nop
 801018c:	20001e30 	andcs	r1, r0, r0, lsr lr
 8010190:	20001e3c 	andcs	r1, r0, ip, lsr lr
 8010194:	20001e28 	andcs	r1, r0, r8, lsr #28
 8010198:	20002040 	andcs	r2, r0, r0, asr #32
 801019c:	20001e2c 	andcs	r1, r0, ip, lsr #28
 80101a0:	20002048 	andcs	r2, r0, r8, asr #32
 80101a4:	0801a4ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, pc}
 80101a8:	20002068 	andcs	r2, r0, r8, rrx
 80101ac:	20002044 	andcs	r2, r0, r4, asr #32

080101b0 <MDNS::Print()>:
 80101b0:	b530      	push	{r4, r5, lr}
 80101b2:	4815      	ldr	r0, [pc, #84]	@ (8010208 <MDNS::Print()+0x58>)
 80101b4:	4c15      	ldr	r4, [pc, #84]	@ (801020c <MDNS::Print()+0x5c>)
 80101b6:	b0c3      	sub	sp, #268	@ 0x10c
 80101b8:	f006 faea 	bl	8016790 <printf>
 80101bc:	a801      	add	r0, sp, #4
 80101be:	f7ff fb2f 	bl	800f820 <create_host_domain(mdns::Domain&)>
 80101c2:	2101      	movs	r1, #1
 80101c4:	a801      	add	r0, sp, #4
 80101c6:	f7ff fb9d 	bl	800f904 <mdns::Domain::Print(bool)>
 80101ca:	2503      	movs	r5, #3
 80101cc:	3d01      	subs	r5, #1
 80101ce:	d101      	bne.n	80101d4 <MDNS::Print()+0x24>
 80101d0:	b043      	add	sp, #268	@ 0x10c
 80101d2:	bd30      	pop	{r4, r5, pc}
 80101d4:	68e3      	ldr	r3, [r4, #12]
 80101d6:	2b08      	cmp	r3, #8
 80101d8:	dc14      	bgt.n	8010204 <MDNS::Print()+0x54>
 80101da:	2200      	movs	r2, #0
 80101dc:	4621      	mov	r1, r4
 80101de:	a801      	add	r0, sp, #4
 80101e0:	f7ff fb3e 	bl	800f860 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 80101e4:	2100      	movs	r1, #0
 80101e6:	a801      	add	r0, sp, #4
 80101e8:	f7ff fb8c 	bl	800f904 <mdns::Domain::Print(bool)>
 80101ec:	8961      	ldrh	r1, [r4, #10]
 80101ee:	4a08      	ldr	r2, [pc, #32]	@ (8010210 <MDNS::Print()+0x60>)
 80101f0:	6863      	ldr	r3, [r4, #4]
 80101f2:	4808      	ldr	r0, [pc, #32]	@ (8010214 <MDNS::Print()+0x64>)
 80101f4:	ba49      	rev16	r1, r1
 80101f6:	2b00      	cmp	r3, #0
 80101f8:	bf08      	it	eq
 80101fa:	4613      	moveq	r3, r2
 80101fc:	b289      	uxth	r1, r1
 80101fe:	8922      	ldrh	r2, [r4, #8]
 8010200:	f006 fac6 	bl	8016790 <printf>
 8010204:	3410      	adds	r4, #16
 8010206:	e7e1      	b.n	80101cc <MDNS::Print()+0x1c>
 8010208:	08017912 	stmdaeq	r1, {r1, r4, r8, fp, ip, sp, lr}
 801020c:	20002048 	andcs	r2, r0, r8, asr #32
 8010210:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 8010214:	08017918 	stmdaeq	r1, {r3, r4, r8, fp, ip, sp, lr}

08010218 <strncpy.isra.0>:
 8010218:	3901      	subs	r1, #1
 801021a:	b112      	cbz	r2, 8010222 <strncpy.isra.0+0xa>
 801021c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8010220:	b913      	cbnz	r3, 8010228 <strncpy.isra.0+0x10>
 8010222:	4402      	add	r2, r0
 8010224:	2300      	movs	r3, #0
 8010226:	e005      	b.n	8010234 <strncpy.isra.0+0x1c>
 8010228:	f800 3b01 	strb.w	r3, [r0], #1
 801022c:	3a01      	subs	r2, #1
 801022e:	e7f4      	b.n	801021a <strncpy.isra.0+0x2>
 8010230:	f800 3b01 	strb.w	r3, [r0], #1
 8010234:	4290      	cmp	r0, r2
 8010236:	d1fb      	bne.n	8010230 <strncpy.isra.0+0x18>
 8010238:	4770      	bx	lr
	...

0801023c <NetworkStore::SaveDhcp(bool)>:
 801023c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801023e:	2301      	movs	r3, #1
 8010240:	2100      	movs	r1, #0
 8010242:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010246:	f88d 0017 	strb.w	r0, [sp, #23]
 801024a:	4805      	ldr	r0, [pc, #20]	@ (8010260 <NetworkStore::SaveDhcp(bool)+0x24>)
 801024c:	9300      	str	r3, [sp, #0]
 801024e:	6800      	ldr	r0, [r0, #0]
 8010250:	f10d 0317 	add.w	r3, sp, #23
 8010254:	2214      	movs	r2, #20
 8010256:	f002 ff97 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 801025a:	b007      	add	sp, #28
 801025c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010260:	20002134 	andcs	r2, r0, r4, lsr r1

08010264 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 8010264:	b530      	push	{r4, r5, lr}
 8010266:	4605      	mov	r5, r0
 8010268:	06e8      	lsls	r0, r5, #27
 801026a:	b087      	sub	sp, #28
 801026c:	460c      	mov	r4, r1
 801026e:	d51a      	bpl.n	80102a6 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x42>
 8010270:	f002 fe90 	bl	8012f94 <net::display_ip()>
 8010274:	f7ff fe08 	bl	800fe88 <network::mdns_announcement()>
 8010278:	4b2e      	ldr	r3, [pc, #184]	@ (8010334 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 801027a:	6821      	ldr	r1, [r4, #0]
 801027c:	681b      	ldr	r3, [r3, #0]
 801027e:	482e      	ldr	r0, [pc, #184]	@ (8010338 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd4>)
 8010280:	0e1a      	lsrs	r2, r3, #24
 8010282:	9204      	str	r2, [sp, #16]
 8010284:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010288:	9203      	str	r2, [sp, #12]
 801028a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801028e:	b2db      	uxtb	r3, r3
 8010290:	9301      	str	r3, [sp, #4]
 8010292:	0e0b      	lsrs	r3, r1, #24
 8010294:	9202      	str	r2, [sp, #8]
 8010296:	9300      	str	r3, [sp, #0]
 8010298:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801029c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80102a0:	b2c9      	uxtb	r1, r1
 80102a2:	f006 fa75 	bl	8016790 <printf>
 80102a6:	0669      	lsls	r1, r5, #25
 80102a8:	d518      	bpl.n	80102dc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x78>
 80102aa:	f002 fe7b 	bl	8012fa4 <net::display_netmask()>
 80102ae:	4b21      	ldr	r3, [pc, #132]	@ (8010334 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 80102b0:	6861      	ldr	r1, [r4, #4]
 80102b2:	685b      	ldr	r3, [r3, #4]
 80102b4:	4821      	ldr	r0, [pc, #132]	@ (801033c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd8>)
 80102b6:	0e1a      	lsrs	r2, r3, #24
 80102b8:	9204      	str	r2, [sp, #16]
 80102ba:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80102be:	9203      	str	r2, [sp, #12]
 80102c0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80102c4:	b2db      	uxtb	r3, r3
 80102c6:	9301      	str	r3, [sp, #4]
 80102c8:	0e0b      	lsrs	r3, r1, #24
 80102ca:	9202      	str	r2, [sp, #8]
 80102cc:	9300      	str	r3, [sp, #0]
 80102ce:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80102d2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80102d6:	b2c9      	uxtb	r1, r1
 80102d8:	f006 fa5a 	bl	8016790 <printf>
 80102dc:	06aa      	lsls	r2, r5, #26
 80102de:	d518      	bpl.n	8010312 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xae>
 80102e0:	f002 fe82 	bl	8012fe8 <net::display_gateway()>
 80102e4:	4b13      	ldr	r3, [pc, #76]	@ (8010334 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 80102e6:	68a1      	ldr	r1, [r4, #8]
 80102e8:	689b      	ldr	r3, [r3, #8]
 80102ea:	4815      	ldr	r0, [pc, #84]	@ (8010340 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xdc>)
 80102ec:	0e1a      	lsrs	r2, r3, #24
 80102ee:	9204      	str	r2, [sp, #16]
 80102f0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80102f4:	9203      	str	r2, [sp, #12]
 80102f6:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80102fa:	b2db      	uxtb	r3, r3
 80102fc:	9301      	str	r3, [sp, #4]
 80102fe:	0e0b      	lsrs	r3, r1, #24
 8010300:	9202      	str	r2, [sp, #8]
 8010302:	9300      	str	r3, [sp, #0]
 8010304:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010308:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801030c:	b2c9      	uxtb	r1, r1
 801030e:	f006 fa3f 	bl	8016790 <printf>
 8010312:	076b      	lsls	r3, r5, #29
 8010314:	d50c      	bpl.n	8010330 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 8010316:	7823      	ldrb	r3, [r4, #0]
 8010318:	b953      	cbnz	r3, 8010330 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 801031a:	f7ff fdbd 	bl	800fe98 <network::mdns_shutdown()>
 801031e:	f001 f98f 	bl	8011640 <net::tcp_shutdown()>
 8010322:	f7f7 ffb9 	bl	8008298 <net::igmp_shutdown()>
 8010326:	b007      	add	sp, #28
 8010328:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801032c:	f000 bc7a 	b.w	8010c24 <net::dhcp_release_and_stop()>
 8010330:	b007      	add	sp, #28
 8010332:	bd30      	pop	{r4, r5, pc}
 8010334:	20002088 	andcs	r2, r0, r8, lsl #1
 8010338:	08017922 	stmdaeq	r1, {r1, r5, r8, fp, ip, sp, lr}
 801033c:	08017942 	stmdaeq	r1, {r1, r6, r8, fp, ip, sp, lr}
 8010340:	08017967 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, fp, ip, sp, lr}

08010344 <Network::Network()>:
 8010344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010346:	2300      	movs	r3, #0
 8010348:	f240 1201 	movw	r2, #257	@ 0x101
 801034c:	6003      	str	r3, [r0, #0]
 801034e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 8010352:	4b53      	ldr	r3, [pc, #332]	@ (80104a0 <Network::Network()+0x15c>)
 8010354:	8082      	strh	r2, [r0, #4]
 8010356:	4a53      	ldr	r2, [pc, #332]	@ (80104a4 <Network::Network()+0x160>)
 8010358:	6018      	str	r0, [r3, #0]
 801035a:	b09f      	sub	sp, #124	@ 0x7c
 801035c:	4604      	mov	r4, r0
 801035e:	1d83      	adds	r3, r0, #6
 8010360:	f812 6b01 	ldrb.w	r6, [r2], #1
 8010364:	f803 6b01 	strb.w	r6, [r3], #1
 8010368:	2e00      	cmp	r6, #0
 801036a:	d1f9      	bne.n	8010360 <Network::Network()+0x1c>
 801036c:	f884 6056 	strb.w	r6, [r4, #86]	@ 0x56
 8010370:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8010374:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
 8010378:	f803 6b01 	strb.w	r6, [r3], #1
 801037c:	4293      	cmp	r3, r2
 801037e:	d1fb      	bne.n	8010378 <Network::Network()+0x34>
 8010380:	4d49      	ldr	r5, [pc, #292]	@ (80104a8 <Network::Network()+0x164>)
 8010382:	f002 fdc7 	bl	8012f14 <net::display_emac_config()>
 8010386:	f7f8 f80b 	bl	80083a0 <emac_config()>
 801038a:	f002 fdd5 	bl	8012f38 <net::display_emac_start()>
 801038e:	4847      	ldr	r0, [pc, #284]	@ (80104ac <Network::Network()+0x168>)
 8010390:	4621      	mov	r1, r4
 8010392:	f7f8 f829 	bl	80083e8 <emac_start(unsigned char*, net::Link&)>
 8010396:	7e6b      	ldrb	r3, [r5, #25]
 8010398:	9302      	str	r3, [sp, #8]
 801039a:	7e2b      	ldrb	r3, [r5, #24]
 801039c:	9301      	str	r3, [sp, #4]
 801039e:	7deb      	ldrb	r3, [r5, #23]
 80103a0:	9300      	str	r3, [sp, #0]
 80103a2:	7dab      	ldrb	r3, [r5, #22]
 80103a4:	7d6a      	ldrb	r2, [r5, #21]
 80103a6:	7d29      	ldrb	r1, [r5, #20]
 80103a8:	4841      	ldr	r0, [pc, #260]	@ (80104b0 <Network::Network()+0x16c>)
 80103aa:	f006 f9f1 	bl	8016790 <printf>
 80103ae:	f001 fd08 	bl	8011dc2 <net::phy_customized_timing()>
 80103b2:	f001 fd05 	bl	8011dc0 <net::phy_customized_led()>
 80103b6:	f000 ff17 	bl	80111e8 <net::netif_init()>
 80103ba:	483e      	ldr	r0, [pc, #248]	@ (80104b4 <Network::Network()+0x170>)
 80103bc:	f000 ffb4 	bl	8011328 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
 80103c0:	a806      	add	r0, sp, #24
 80103c2:	f001 faf3 	bl	80119ac <NetworkParams::NetworkParams()>
 80103c6:	a806      	add	r0, sp, #24
 80103c8:	f001 fafa 	bl	80119c0 <NetworkParams::Load()>
 80103cc:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
 80103d0:	2b00      	cmp	r3, #0
 80103d2:	d15b      	bne.n	801048c <Network::Network()+0x148>
 80103d4:	4a38      	ldr	r2, [pc, #224]	@ (80104b8 <Network::Network()+0x174>)
 80103d6:	f104 0315 	add.w	r3, r4, #21
 80103da:	f104 0120 	add.w	r1, r4, #32
 80103de:	f812 0b01 	ldrb.w	r0, [r2], #1
 80103e2:	f803 0f01 	strb.w	r0, [r3, #1]!
 80103e6:	428b      	cmp	r3, r1
 80103e8:	d1f9      	bne.n	80103de <Network::Network()+0x9a>
 80103ea:	7deb      	ldrb	r3, [r5, #23]
 80103ec:	091a      	lsrs	r2, r3, #4
 80103ee:	2b9f      	cmp	r3, #159	@ 0x9f
 80103f0:	f003 030f 	and.w	r3, r3, #15
 80103f4:	bf94      	ite	ls
 80103f6:	3230      	addls	r2, #48	@ 0x30
 80103f8:	3237      	addhi	r2, #55	@ 0x37
 80103fa:	2b09      	cmp	r3, #9
 80103fc:	bf94      	ite	ls
 80103fe:	3330      	addls	r3, #48	@ 0x30
 8010400:	3337      	addhi	r3, #55	@ 0x37
 8010402:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8010406:	7e2b      	ldrb	r3, [r5, #24]
 8010408:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 801040c:	2b9f      	cmp	r3, #159	@ 0x9f
 801040e:	ea4f 1213 	mov.w	r2, r3, lsr #4
 8010412:	f003 030f 	and.w	r3, r3, #15
 8010416:	bf94      	ite	ls
 8010418:	3230      	addls	r2, #48	@ 0x30
 801041a:	3237      	addhi	r2, #55	@ 0x37
 801041c:	2b09      	cmp	r3, #9
 801041e:	bf94      	ite	ls
 8010420:	3330      	addls	r3, #48	@ 0x30
 8010422:	3337      	addhi	r3, #55	@ 0x37
 8010424:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8010428:	7e6b      	ldrb	r3, [r5, #25]
 801042a:	f884 2023 	strb.w	r2, [r4, #35]	@ 0x23
 801042e:	2b9f      	cmp	r3, #159	@ 0x9f
 8010430:	ea4f 1213 	mov.w	r2, r3, lsr #4
 8010434:	f003 030f 	and.w	r3, r3, #15
 8010438:	bf94      	ite	ls
 801043a:	3230      	addls	r2, #48	@ 0x30
 801043c:	3237      	addhi	r2, #55	@ 0x37
 801043e:	2b09      	cmp	r3, #9
 8010440:	bf94      	ite	ls
 8010442:	3330      	addls	r3, #48	@ 0x30
 8010444:	3337      	addhi	r3, #55	@ 0x37
 8010446:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 801044a:	2300      	movs	r3, #0
 801044c:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 8010450:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 8010454:	6820      	ldr	r0, [r4, #0]
 8010456:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8010458:	f104 0316 	add.w	r3, r4, #22
 801045c:	61eb      	str	r3, [r5, #28]
 801045e:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 8010462:	f88d 3017 	strb.w	r3, [sp, #23]
 8010466:	1e43      	subs	r3, r0, #1
 8010468:	4258      	negs	r0, r3
 801046a:	4158      	adcs	r0, r3
 801046c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8010470:	f002 fd74 	bl	8012f5c <net::display_emac_status(bool)>
 8010474:	f10d 0317 	add.w	r3, sp, #23
 8010478:	9300      	str	r3, [sp, #0]
 801047a:	6820      	ldr	r0, [r4, #0]
 801047c:	463b      	mov	r3, r7
 801047e:	4632      	mov	r2, r6
 8010480:	4629      	mov	r1, r5
 8010482:	f7f7 ff17 	bl	80082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
 8010486:	4620      	mov	r0, r4
 8010488:	b01f      	add	sp, #124	@ 0x7c
 801048a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801048c:	223f      	movs	r2, #63	@ 0x3f
 801048e:	f10d 012d 	add.w	r1, sp, #45	@ 0x2d
 8010492:	f104 0016 	add.w	r0, r4, #22
 8010496:	f7ff febf 	bl	8010218 <strncpy.isra.0>
 801049a:	f884 6055 	strb.w	r6, [r4, #85]	@ 0x55
 801049e:	e7d9      	b.n	8010454 <Network::Network()+0x110>
 80104a0:	20002068 	andcs	r2, r0, r8, rrx
 80104a4:	08017987 	stmdaeq	r1, {r0, r1, r2, r7, r8, fp, ip, sp, lr}
 80104a8:	20002088 	andcs	r2, r0, r8, lsl #1
 80104ac:	2000209c 	mulcs	r0, ip, r0
 80104b0:	0801798c 	stmdaeq	r1, {r2, r3, r7, r8, fp, ip, sp, lr}
 80104b4:	08010265 	stmdaeq	r1, {r0, r2, r5, r6, r9}
 80104b8:	080179ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, fp, ip, sp, lr}

080104bc <Network::SetIp(unsigned long)>:
 80104bc:	b510      	push	{r4, lr}
 80104be:	4b0d      	ldr	r3, [pc, #52]	@ (80104f4 <Network::SetIp(unsigned long)+0x38>)
 80104c0:	681b      	ldr	r3, [r3, #0]
 80104c2:	428b      	cmp	r3, r1
 80104c4:	b086      	sub	sp, #24
 80104c6:	460c      	mov	r4, r1
 80104c8:	d012      	beq.n	80104f0 <Network::SetIp(unsigned long)+0x34>
 80104ca:	4608      	mov	r0, r1
 80104cc:	f000 fe04 	bl	80110d8 <net::net_set_primary_ip(net::ip_addr)>
 80104d0:	9405      	str	r4, [sp, #20]
 80104d2:	2302      	movs	r3, #2
 80104d4:	2400      	movs	r4, #0
 80104d6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80104da:	2204      	movs	r2, #4
 80104dc:	4806      	ldr	r0, [pc, #24]	@ (80104f8 <Network::SetIp(unsigned long)+0x3c>)
 80104de:	9200      	str	r2, [sp, #0]
 80104e0:	6800      	ldr	r0, [r0, #0]
 80104e2:	ab05      	add	r3, sp, #20
 80104e4:	4621      	mov	r1, r4
 80104e6:	f002 fe4f 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80104ea:	4620      	mov	r0, r4
 80104ec:	f7ff fea6 	bl	801023c <NetworkStore::SaveDhcp(bool)>
 80104f0:	b006      	add	sp, #24
 80104f2:	bd10      	pop	{r4, pc}
 80104f4:	20002088 	andcs	r2, r0, r8, lsl #1
 80104f8:	20002134 	andcs	r2, r0, r4, lsr r1

080104fc <Network::SetNetmask(unsigned long)>:
 80104fc:	b510      	push	{r4, lr}
 80104fe:	4b0b      	ldr	r3, [pc, #44]	@ (801052c <Network::SetNetmask(unsigned long)+0x30>)
 8010500:	685b      	ldr	r3, [r3, #4]
 8010502:	428b      	cmp	r3, r1
 8010504:	b086      	sub	sp, #24
 8010506:	460c      	mov	r4, r1
 8010508:	d00e      	beq.n	8010528 <Network::SetNetmask(unsigned long)+0x2c>
 801050a:	4608      	mov	r0, r1
 801050c:	f000 fe9e 	bl	801124c <net::netif_set_netmask(net::ip_addr)>
 8010510:	2304      	movs	r3, #4
 8010512:	2100      	movs	r1, #0
 8010514:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010518:	4805      	ldr	r0, [pc, #20]	@ (8010530 <Network::SetNetmask(unsigned long)+0x34>)
 801051a:	9300      	str	r3, [sp, #0]
 801051c:	6800      	ldr	r0, [r0, #0]
 801051e:	9405      	str	r4, [sp, #20]
 8010520:	ab05      	add	r3, sp, #20
 8010522:	2208      	movs	r2, #8
 8010524:	f002 fe30 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8010528:	b006      	add	sp, #24
 801052a:	bd10      	pop	{r4, pc}
 801052c:	20002088 	andcs	r2, r0, r8, lsl #1
 8010530:	20002134 	andcs	r2, r0, r4, lsr r1

08010534 <Network::SetGatewayIp(unsigned long)>:
 8010534:	b510      	push	{r4, lr}
 8010536:	4b0c      	ldr	r3, [pc, #48]	@ (8010568 <Network::SetGatewayIp(unsigned long)+0x34>)
 8010538:	689b      	ldr	r3, [r3, #8]
 801053a:	428b      	cmp	r3, r1
 801053c:	b086      	sub	sp, #24
 801053e:	460c      	mov	r4, r1
 8010540:	d00f      	beq.n	8010562 <Network::SetGatewayIp(unsigned long)+0x2e>
 8010542:	4608      	mov	r0, r1
 8010544:	f000 fe96 	bl	8011274 <net::netif_set_gw(net::ip_addr)>
 8010548:	2308      	movs	r3, #8
 801054a:	2100      	movs	r1, #0
 801054c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010550:	4806      	ldr	r0, [pc, #24]	@ (801056c <Network::SetGatewayIp(unsigned long)+0x38>)
 8010552:	9405      	str	r4, [sp, #20]
 8010554:	2304      	movs	r3, #4
 8010556:	9300      	str	r3, [sp, #0]
 8010558:	6800      	ldr	r0, [r0, #0]
 801055a:	ab05      	add	r3, sp, #20
 801055c:	220c      	movs	r2, #12
 801055e:	f002 fe13 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8010562:	b006      	add	sp, #24
 8010564:	bd10      	pop	{r4, pc}
 8010566:	bf00      	nop
 8010568:	20002088 	andcs	r2, r0, r8, lsl #1
 801056c:	20002134 	andcs	r2, r0, r4, lsr r1

08010570 <Network::SetHostName(char const*)>:
 8010570:	b530      	push	{r4, r5, lr}
 8010572:	f100 0416 	add.w	r4, r0, #22
 8010576:	4605      	mov	r5, r0
 8010578:	b085      	sub	sp, #20
 801057a:	223f      	movs	r2, #63	@ 0x3f
 801057c:	4620      	mov	r0, r4
 801057e:	f7ff fe4b 	bl	8010218 <strncpy.isra.0>
 8010582:	2300      	movs	r3, #0
 8010584:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8010588:	4623      	mov	r3, r4
 801058a:	461a      	mov	r2, r3
 801058c:	3301      	adds	r3, #1
 801058e:	7811      	ldrb	r1, [r2, #0]
 8010590:	2900      	cmp	r1, #0
 8010592:	d1fa      	bne.n	801058a <Network::SetHostName(char const*)+0x1a>
 8010594:	1b12      	subs	r2, r2, r4
 8010596:	2a40      	cmp	r2, #64	@ 0x40
 8010598:	bf28      	it	cs
 801059a:	2240      	movcs	r2, #64	@ 0x40
 801059c:	2320      	movs	r3, #32
 801059e:	4808      	ldr	r0, [pc, #32]	@ (80105c0 <Network::SetHostName(char const*)+0x50>)
 80105a0:	9102      	str	r1, [sp, #8]
 80105a2:	9301      	str	r3, [sp, #4]
 80105a4:	9200      	str	r2, [sp, #0]
 80105a6:	6800      	ldr	r0, [r0, #0]
 80105a8:	4623      	mov	r3, r4
 80105aa:	2215      	movs	r2, #21
 80105ac:	f002 fdec 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80105b0:	f7ff fc6a 	bl	800fe88 <network::mdns_announcement()>
 80105b4:	b005      	add	sp, #20
 80105b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80105ba:	f002 bd35 	b.w	8013028 <net::display_hostname()>
 80105be:	bf00      	nop
 80105c0:	20002134 	andcs	r2, r0, r4, lsr r1

080105c4 <Network::SetZeroconf()>:
 80105c4:	b508      	push	{r3, lr}
 80105c6:	f000 f869 	bl	801069c <net::autoip_start()>
 80105ca:	2000      	movs	r0, #0
 80105cc:	f7ff fe36 	bl	801023c <NetworkStore::SaveDhcp(bool)>
 80105d0:	bd08      	pop	{r3, pc}

080105d2 <Network::EnableDhcp()>:
 80105d2:	b508      	push	{r3, lr}
 80105d4:	f000 fada 	bl	8010b8c <net::dhcp_start()>
 80105d8:	2001      	movs	r0, #1
 80105da:	f7ff fe2f 	bl	801023c <NetworkStore::SaveDhcp(bool)>
 80105de:	bd08      	pop	{r3, pc}

080105e0 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>:
 80105e0:	b909      	cbnz	r1, 80105e6 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x6>
 80105e2:	4b08      	ldr	r3, [pc, #32]	@ (8010604 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 80105e4:	6819      	ldr	r1, [r3, #0]
 80105e6:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
 80105ea:	b90a      	cbnz	r2, 80105f0 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x10>
 80105ec:	4b05      	ldr	r3, [pc, #20]	@ (8010604 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 80105ee:	685a      	ldr	r2, [r3, #4]
 80105f0:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80105f4:	f8c0 20ac 	str.w	r2, [r0, #172]	@ 0xac
 80105f8:	f043 0303 	orr.w	r3, r3, #3
 80105fc:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 8010600:	4770      	bx	lr
 8010602:	bf00      	nop
 8010604:	20002088 	andcs	r2, r0, r8, lsl #1

08010608 <Network::SetQueuedDefaultRoute(unsigned long)>:
 8010608:	b909      	cbnz	r1, 801060e <Network::SetQueuedDefaultRoute(unsigned long)+0x6>
 801060a:	4b05      	ldr	r3, [pc, #20]	@ (8010620 <Network::SetQueuedDefaultRoute(unsigned long)+0x18>)
 801060c:	6899      	ldr	r1, [r3, #8]
 801060e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8010612:	f8c0 10b0 	str.w	r1, [r0, #176]	@ 0xb0
 8010616:	f043 0304 	orr.w	r3, r3, #4
 801061a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 801061e:	4770      	bx	lr
 8010620:	20002088 	andcs	r2, r0, r8, lsl #1

08010624 <Network::ApplyQueuedConfig()>:
 8010624:	b538      	push	{r3, r4, r5, lr}
 8010626:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 801062a:	4604      	mov	r4, r0
 801062c:	b3a3      	cbz	r3, 8010698 <Network::ApplyQueuedConfig()+0x74>
 801062e:	07d9      	lsls	r1, r3, #31
 8010630:	d40f      	bmi.n	8010652 <Network::ApplyQueuedConfig()+0x2e>
 8010632:	f013 0f06 	tst.w	r3, #6
 8010636:	d110      	bne.n	801065a <Network::ApplyQueuedConfig()+0x36>
 8010638:	f013 0508 	ands.w	r5, r3, #8
 801063c:	d024      	beq.n	8010688 <Network::ApplyQueuedConfig()+0x64>
 801063e:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
 8010642:	2b01      	cmp	r3, #1
 8010644:	d101      	bne.n	801064a <Network::ApplyQueuedConfig()+0x26>
 8010646:	f7ff ffc4 	bl	80105d2 <Network::EnableDhcp()>
 801064a:	2302      	movs	r3, #2
 801064c:	f884 30b4 	strb.w	r3, [r4, #180]	@ 0xb4
 8010650:	e015      	b.n	801067e <Network::ApplyQueuedConfig()+0x5a>
 8010652:	f8d0 10a8 	ldr.w	r1, [r0, #168]	@ 0xa8
 8010656:	f7ff ff31 	bl	80104bc <Network::SetIp(unsigned long)>
 801065a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 801065e:	079a      	lsls	r2, r3, #30
 8010660:	d504      	bpl.n	801066c <Network::ApplyQueuedConfig()+0x48>
 8010662:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
 8010666:	4620      	mov	r0, r4
 8010668:	f7ff ff48 	bl	80104fc <Network::SetNetmask(unsigned long)>
 801066c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8010670:	075b      	lsls	r3, r3, #29
 8010672:	d504      	bpl.n	801067e <Network::ApplyQueuedConfig()+0x5a>
 8010674:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
 8010678:	4620      	mov	r0, r4
 801067a:	f7ff ff5b 	bl	8010534 <Network::SetGatewayIp(unsigned long)>
 801067e:	2300      	movs	r3, #0
 8010680:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 8010684:	2001      	movs	r0, #1
 8010686:	bd38      	pop	{r3, r4, r5, pc}
 8010688:	f013 0310 	ands.w	r3, r3, #16
 801068c:	d004      	beq.n	8010698 <Network::ApplyQueuedConfig()+0x74>
 801068e:	f7ff ff99 	bl	80105c4 <Network::SetZeroconf()>
 8010692:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8010696:	e7f5      	b.n	8010684 <Network::ApplyQueuedConfig()+0x60>
 8010698:	4618      	mov	r0, r3
 801069a:	e7f4      	b.n	8010686 <Network::ApplyQueuedConfig()+0x62>

0801069c <net::autoip_start()>:
 801069c:	b570      	push	{r4, r5, r6, lr}
 801069e:	4e21      	ldr	r6, [pc, #132]	@ (8010724 <net::autoip_start()+0x88>)
 80106a0:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 80106a2:	b95c      	cbnz	r4, 80106bc <net::autoip_start()+0x20>
 80106a4:	201c      	movs	r0, #28
 80106a6:	f006 fac9 	bl	8016c3c <operator new(unsigned int)>
 80106aa:	2100      	movs	r1, #0
 80106ac:	4604      	mov	r4, r0
 80106ae:	f100 021c 	add.w	r2, r0, #28
 80106b2:	4603      	mov	r3, r0
 80106b4:	f803 1b01 	strb.w	r1, [r3], #1
 80106b8:	4293      	cmp	r3, r2
 80106ba:	d1fb      	bne.n	80106b4 <net::autoip_start()+0x18>
 80106bc:	6863      	ldr	r3, [r4, #4]
 80106be:	bb7b      	cbnz	r3, 8010720 <net::autoip_start()+0x84>
 80106c0:	f104 050c 	add.w	r5, r4, #12
 80106c4:	4918      	ldr	r1, [pc, #96]	@ (8010728 <net::autoip_start()+0x8c>)
 80106c6:	4628      	mov	r0, r5
 80106c8:	f001 fec2 	bl	8012450 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 80106cc:	8822      	ldrh	r2, [r4, #0]
 80106ce:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 80106d2:	429a      	cmp	r2, r3
 80106d4:	d01c      	beq.n	8010710 <net::autoip_start()+0x74>
 80106d6:	f8b6 3017 	ldrh.w	r3, [r6, #23]
 80106da:	4a14      	ldr	r2, [pc, #80]	@ (801072c <net::autoip_start()+0x90>)
 80106dc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80106e0:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 80106e2:	7a1b      	ldrb	r3, [r3, #8]
 80106e4:	ba12      	rev	r2, r2
 80106e6:	4413      	add	r3, r2
 80106e8:	b29b      	uxth	r3, r3
 80106ea:	4a11      	ldr	r2, [pc, #68]	@ (8010730 <net::autoip_start()+0x94>)
 80106ec:	f043 4329 	orr.w	r3, r3, #2835349504	@ 0xa9000000
 80106f0:	f443 037e 	orr.w	r3, r3, #16646144	@ 0xfe0000
 80106f4:	4293      	cmp	r3, r2
 80106f6:	4a0f      	ldr	r2, [pc, #60]	@ (8010734 <net::autoip_start()+0x98>)
 80106f8:	bf98      	it	ls
 80106fa:	f503 437e 	addls.w	r3, r3, #65024	@ 0xfe00
 80106fe:	4293      	cmp	r3, r2
 8010700:	6023      	str	r3, [r4, #0]
 8010702:	bf84      	itt	hi
 8010704:	f5a3 437e 	subhi.w	r3, r3, #65024	@ 0xfe00
 8010708:	6023      	strhi	r3, [r4, #0]
 801070a:	6823      	ldr	r3, [r4, #0]
 801070c:	ba1b      	rev	r3, r3
 801070e:	6023      	str	r3, [r4, #0]
 8010710:	2301      	movs	r3, #1
 8010712:	6821      	ldr	r1, [r4, #0]
 8010714:	6063      	str	r3, [r4, #4]
 8010716:	4628      	mov	r0, r5
 8010718:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801071c:	f001 bd62 	b.w	80121e4 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8010720:	bd70      	pop	{r4, r5, r6, pc}
 8010722:	bf00      	nop
 8010724:	20002088 	andcs	r2, r0, r8, lsl #1
 8010728:	0801075d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl}
 801072c:	0001fea9 	andeq	pc, r1, r9, lsr #29
 8010730:	a9fe00ff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7}^
 8010734:	a9fefeff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}^

08010738 <net::autoip_stop()>:
 8010738:	4b07      	ldr	r3, [pc, #28]	@ (8010758 <net::autoip_stop()+0x20>)
 801073a:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 801073c:	b151      	cbz	r1, 8010754 <net::autoip_stop()+0x1c>
 801073e:	2200      	movs	r2, #0
 8010740:	604a      	str	r2, [r1, #4]
 8010742:	8819      	ldrh	r1, [r3, #0]
 8010744:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8010748:	4299      	cmp	r1, r3
 801074a:	d103      	bne.n	8010754 <net::autoip_stop()+0x1c>
 801074c:	4611      	mov	r1, r2
 801074e:	4610      	mov	r0, r2
 8010750:	f000 bda4 	b.w	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010754:	4770      	bx	lr
 8010756:	bf00      	nop
 8010758:	20002088 	andcs	r2, r0, r8, lsl #1

0801075c <net::autoip_conflict_callback(net::acd::Callback)>:
 801075c:	b510      	push	{r4, lr}
 801075e:	4c11      	ldr	r4, [pc, #68]	@ (80107a4 <net::autoip_conflict_callback(net::acd::Callback)+0x48>)
 8010760:	2801      	cmp	r0, #1
 8010762:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010764:	4602      	mov	r2, r0
 8010766:	d00e      	beq.n	8010786 <net::autoip_conflict_callback(net::acd::Callback)+0x2a>
 8010768:	2802      	cmp	r0, #2
 801076a:	d013      	beq.n	8010794 <net::autoip_conflict_callback(net::acd::Callback)+0x38>
 801076c:	b950      	cbnz	r0, 8010784 <net::autoip_conflict_callback(net::acd::Callback)+0x28>
 801076e:	2102      	movs	r1, #2
 8010770:	6059      	str	r1, [r3, #4]
 8010772:	6818      	ldr	r0, [r3, #0]
 8010774:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010778:	f000 fd90 	bl	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 801077c:	7ea3      	ldrb	r3, [r4, #26]
 801077e:	f043 0304 	orr.w	r3, r3, #4
 8010782:	76a3      	strb	r3, [r4, #26]
 8010784:	bd10      	pop	{r4, pc}
 8010786:	7a1a      	ldrb	r2, [r3, #8]
 8010788:	3201      	adds	r2, #1
 801078a:	721a      	strb	r2, [r3, #8]
 801078c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010790:	f7ff bf84 	b.w	801069c <net::autoip_start()>
 8010794:	2200      	movs	r2, #0
 8010796:	601a      	str	r2, [r3, #0]
 8010798:	f7ff ffce 	bl	8010738 <net::autoip_stop()>
 801079c:	7ea3      	ldrb	r3, [r4, #26]
 801079e:	f023 0304 	bic.w	r3, r3, #4
 80107a2:	e7ee      	b.n	8010782 <net::autoip_conflict_callback(net::acd::Callback)+0x26>
 80107a4:	20002088 	andcs	r2, r0, r8, lsl #1

080107a8 <net::dhcp_bind()>:
 80107a8:	4833      	ldr	r0, [pc, #204]	@ (8010878 <net::dhcp_bind()+0xd0>)
 80107aa:	6a03      	ldr	r3, [r0, #32]
 80107ac:	2200      	movs	r2, #0
 80107ae:	b410      	push	{r4}
 80107b0:	82da      	strh	r2, [r3, #22]
 80107b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80107b4:	1c51      	adds	r1, r2, #1
 80107b6:	d009      	beq.n	80107cc <net::dhcp_bind()+0x24>
 80107b8:	321e      	adds	r2, #30
 80107ba:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 80107be:	d23f      	bcs.n	8010840 <net::dhcp_bind()+0x98>
 80107c0:	2a3b      	cmp	r2, #59	@ 0x3b
 80107c2:	d940      	bls.n	8010846 <net::dhcp_bind()+0x9e>
 80107c4:	213c      	movs	r1, #60	@ 0x3c
 80107c6:	fbb2 f2f1 	udiv	r2, r2, r1
 80107ca:	831a      	strh	r2, [r3, #24]
 80107cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80107ce:	1c54      	adds	r4, r2, #1
 80107d0:	d00b      	beq.n	80107ea <net::dhcp_bind()+0x42>
 80107d2:	321e      	adds	r2, #30
 80107d4:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 80107d8:	d237      	bcs.n	801084a <net::dhcp_bind()+0xa2>
 80107da:	2a3b      	cmp	r2, #59	@ 0x3b
 80107dc:	d938      	bls.n	8010850 <net::dhcp_bind()+0xa8>
 80107de:	213c      	movs	r1, #60	@ 0x3c
 80107e0:	fbb2 f2f1 	udiv	r2, r2, r1
 80107e4:	b292      	uxth	r2, r2
 80107e6:	81da      	strh	r2, [r3, #14]
 80107e8:	825a      	strh	r2, [r3, #18]
 80107ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80107ec:	1c51      	adds	r1, r2, #1
 80107ee:	d00b      	beq.n	8010808 <net::dhcp_bind()+0x60>
 80107f0:	321e      	adds	r2, #30
 80107f2:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 80107f6:	d22d      	bcs.n	8010854 <net::dhcp_bind()+0xac>
 80107f8:	2a3b      	cmp	r2, #59	@ 0x3b
 80107fa:	d92e      	bls.n	801085a <net::dhcp_bind()+0xb2>
 80107fc:	213c      	movs	r1, #60	@ 0x3c
 80107fe:	fbb2 f2f1 	udiv	r2, r2, r1
 8010802:	b292      	uxth	r2, r2
 8010804:	821a      	strh	r2, [r3, #16]
 8010806:	829a      	strh	r2, [r3, #20]
 8010808:	8a1a      	ldrh	r2, [r3, #16]
 801080a:	89d9      	ldrh	r1, [r3, #14]
 801080c:	4291      	cmp	r1, r2
 801080e:	d302      	bcc.n	8010816 <net::dhcp_bind()+0x6e>
 8010810:	b10a      	cbz	r2, 8010816 <net::dhcp_bind()+0x6e>
 8010812:	2200      	movs	r2, #0
 8010814:	81da      	strh	r2, [r3, #14]
 8010816:	7a9a      	ldrb	r2, [r3, #10]
 8010818:	07d4      	lsls	r4, r2, #31
 801081a:	d520      	bpl.n	801085e <net::dhcp_bind()+0xb6>
 801081c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 801081e:	7a1c      	ldrb	r4, [r3, #8]
 8010820:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8010822:	2c0a      	cmp	r4, #10
 8010824:	bf1f      	itttt	ne
 8010826:	240a      	movne	r4, #10
 8010828:	811c      	strhne	r4, [r3, #8]
 801082a:	2400      	movne	r4, #0
 801082c:	819c      	strhne	r4, [r3, #12]
 801082e:	7e84      	ldrb	r4, [r0, #26]
 8010830:	f044 0402 	orr.w	r4, r4, #2
 8010834:	7684      	strb	r4, [r0, #26]
 8010836:	f85d 4b04 	ldr.w	r4, [sp], #4
 801083a:	6a18      	ldr	r0, [r3, #32]
 801083c:	f000 bd2e 	b.w	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010840:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010844:	e7c1      	b.n	80107ca <net::dhcp_bind()+0x22>
 8010846:	2201      	movs	r2, #1
 8010848:	e7bf      	b.n	80107ca <net::dhcp_bind()+0x22>
 801084a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801084e:	e7c9      	b.n	80107e4 <net::dhcp_bind()+0x3c>
 8010850:	2201      	movs	r2, #1
 8010852:	e7c7      	b.n	80107e4 <net::dhcp_bind()+0x3c>
 8010854:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010858:	e7d3      	b.n	8010802 <net::dhcp_bind()+0x5a>
 801085a:	2201      	movs	r2, #1
 801085c:	e7d1      	b.n	8010802 <net::dhcp_bind()+0x5a>
 801085e:	6a1a      	ldr	r2, [r3, #32]
 8010860:	0611      	lsls	r1, r2, #24
 8010862:	d507      	bpl.n	8010874 <net::dhcp_bind()+0xcc>
 8010864:	b2d2      	uxtb	r2, r2
 8010866:	2abf      	cmp	r2, #191	@ 0xbf
 8010868:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801086c:	bf88      	it	hi
 801086e:	f06f 417f 	mvnhi.w	r1, #4278190080	@ 0xff000000
 8010872:	e7d4      	b.n	801081e <net::dhcp_bind()+0x76>
 8010874:	21ff      	movs	r1, #255	@ 0xff
 8010876:	e7d2      	b.n	801081e <net::dhcp_bind()+0x76>
 8010878:	20002088 	andcs	r2, r0, r8, lsl #1

0801087c <net::message_init()>:
 801087c:	b508      	push	{r3, lr}
 801087e:	4b0c      	ldr	r3, [pc, #48]	@ (80108b0 <net::message_init()+0x34>)
 8010880:	f44f 7209 	mov.w	r2, #548	@ 0x224
 8010884:	2100      	movs	r1, #0
 8010886:	4618      	mov	r0, r3
 8010888:	f005 fc9e 	bl	80161c8 <memset>
 801088c:	f240 1201 	movw	r2, #257	@ 0x101
 8010890:	8002      	strh	r2, [r0, #0]
 8010892:	2206      	movs	r2, #6
 8010894:	7082      	strb	r2, [r0, #2]
 8010896:	4a07      	ldr	r2, [pc, #28]	@ (80108b4 <net::message_init()+0x38>)
 8010898:	6951      	ldr	r1, [r2, #20]
 801089a:	8b12      	ldrh	r2, [r2, #24]
 801089c:	8402      	strh	r2, [r0, #32]
 801089e:	4a06      	ldr	r2, [pc, #24]	@ (80108b8 <net::message_init()+0x3c>)
 80108a0:	f8c0 20ec 	str.w	r2, [r0, #236]	@ 0xec
 80108a4:	f240 1235 	movw	r2, #309	@ 0x135
 80108a8:	f8a0 20f0 	strh.w	r2, [r0, #240]	@ 0xf0
 80108ac:	61c1      	str	r1, [r0, #28]
 80108ae:	bd08      	pop	{r3, pc}
 80108b0:	10008000 	andne	r8, r0, r0
 80108b4:	20002088 	andcs	r2, r0, r8, lsl #1
 80108b8:	63538263 	cmpvs	r3, #805306374	@ 0x30000006

080108bc <net::dhcp_discover()>:
 80108bc:	4a27      	ldr	r2, [pc, #156]	@ (801095c <net::dhcp_discover()+0xa0>)
 80108be:	b513      	push	{r0, r1, r4, lr}
 80108c0:	6a14      	ldr	r4, [r2, #32]
 80108c2:	7a21      	ldrb	r1, [r4, #8]
 80108c4:	2906      	cmp	r1, #6
 80108c6:	bf1c      	itt	ne
 80108c8:	2106      	movne	r1, #6
 80108ca:	8121      	strhne	r1, [r4, #8]
 80108cc:	f04f 0300 	mov.w	r3, #0
 80108d0:	6a10      	ldr	r0, [r2, #32]
 80108d2:	6223      	str	r3, [r4, #32]
 80108d4:	bf18      	it	ne
 80108d6:	81a3      	strhne	r3, [r4, #12]
 80108d8:	7a43      	ldrb	r3, [r0, #9]
 80108da:	b923      	cbnz	r3, 80108e6 <net::dhcp_discover()+0x2a>
 80108dc:	6843      	ldr	r3, [r0, #4]
 80108de:	ba1b      	rev	r3, r3
 80108e0:	3301      	adds	r3, #1
 80108e2:	ba1b      	rev	r3, r3
 80108e4:	6043      	str	r3, [r0, #4]
 80108e6:	491e      	ldr	r1, [pc, #120]	@ (8010960 <net::dhcp_discover()+0xa4>)
 80108e8:	6843      	ldr	r3, [r0, #4]
 80108ea:	604b      	str	r3, [r1, #4]
 80108ec:	f643 5301 	movw	r3, #15617	@ 0x3d01
 80108f0:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 80108f4:	f240 1307 	movw	r3, #263	@ 0x107
 80108f8:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 80108fc:	8a93      	ldrh	r3, [r2, #20]
 80108fe:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8010902:	8ad3      	ldrh	r3, [r2, #22]
 8010904:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8010908:	8b13      	ldrh	r3, [r2, #24]
 801090a:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 801090e:	4a15      	ldr	r2, [pc, #84]	@ (8010964 <net::dhcp_discover()+0xa8>)
 8010910:	4b15      	ldr	r3, [pc, #84]	@ (8010968 <net::dhcp_discover()+0xac>)
 8010912:	e9c1 233f 	strd	r2, r3, [r1, #252]	@ 0xfc
 8010916:	23ff      	movs	r3, #255	@ 0xff
 8010918:	f881 3104 	strb.w	r3, [r1, #260]	@ 0x104
 801091c:	2343      	movs	r3, #67	@ 0x43
 801091e:	9300      	str	r3, [sp, #0]
 8010920:	6800      	ldr	r0, [r0, #0]
 8010922:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010926:	f240 1205 	movw	r2, #261	@ 0x105
 801092a:	f000 ffa7 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 801092e:	7a63      	ldrb	r3, [r4, #9]
 8010930:	2bff      	cmp	r3, #255	@ 0xff
 8010932:	bf1c      	itt	ne
 8010934:	3301      	addne	r3, #1
 8010936:	7263      	strbne	r3, [r4, #9]
 8010938:	7a62      	ldrb	r2, [r4, #9]
 801093a:	2a05      	cmp	r2, #5
 801093c:	bf9a      	itte	ls
 801093e:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8010942:	4093      	lslls	r3, r2
 8010944:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8010948:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 801094c:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010950:	fbb3 f3f2 	udiv	r3, r3, r2
 8010954:	81a3      	strh	r3, [r4, #12]
 8010956:	b002      	add	sp, #8
 8010958:	bd10      	pop	{r4, pc}
 801095a:	bf00      	nop
 801095c:	20002088 	andcs	r2, r0, r8, lsl #1
 8010960:	10008000 	andne	r8, r0, r0
 8010964:	03010637 	movweq	r0, #5687	@ 0x1637
 8010968:	3b3a330f 	blcc	8e9d5ac <_sidata+0xe82870>

0801096c <net::memcpy_ip(unsigned char*, unsigned long)>:
 801096c:	6001      	str	r1, [r0, #0]
 801096e:	4770      	bx	lr

08010970 <net::send_request()>:
 8010970:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010972:	4c31      	ldr	r4, [pc, #196]	@ (8010a38 <net::send_request()+0xc8>)
 8010974:	4d31      	ldr	r5, [pc, #196]	@ (8010a3c <net::send_request()+0xcc>)
 8010976:	f643 5303 	movw	r3, #15619	@ 0x3d03
 801097a:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 801097e:	f240 1307 	movw	r3, #263	@ 0x107
 8010982:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 8010986:	8aab      	ldrh	r3, [r5, #20]
 8010988:	f8a4 30f6 	strh.w	r3, [r4, #246]	@ 0xf6
 801098c:	8aeb      	ldrh	r3, [r5, #22]
 801098e:	f8a4 30f8 	strh.w	r3, [r4, #248]	@ 0xf8
 8010992:	8b2b      	ldrh	r3, [r5, #24]
 8010994:	6a2e      	ldr	r6, [r5, #32]
 8010996:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
 801099a:	f240 4332 	movw	r3, #1074	@ 0x432
 801099e:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
 80109a2:	6a31      	ldr	r1, [r6, #32]
 80109a4:	f104 00fe 	add.w	r0, r4, #254	@ 0xfe
 80109a8:	f7ff ffe0 	bl	801096c <net::memcpy_ip(unsigned char*, unsigned long)>
 80109ac:	f240 4336 	movw	r3, #1078	@ 0x436
 80109b0:	f8a4 3102 	strh.w	r3, [r4, #258]	@ 0x102
 80109b4:	69f1      	ldr	r1, [r6, #28]
 80109b6:	f504 7082 	add.w	r0, r4, #260	@ 0x104
 80109ba:	f7ff ffd7 	bl	801096c <net::memcpy_ip(unsigned char*, unsigned long)>
 80109be:	230c      	movs	r3, #12
 80109c0:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
 80109c4:	69eb      	ldr	r3, [r5, #28]
 80109c6:	221e      	movs	r2, #30
 80109c8:	3b01      	subs	r3, #1
 80109ca:	f204 1509 	addw	r5, r4, #265	@ 0x109
 80109ce:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80109d2:	1c51      	adds	r1, r2, #1
 80109d4:	bb58      	cbnz	r0, 8010a2e <net::send_request()+0xbe>
 80109d6:	f1a2 031e 	sub.w	r3, r2, #30
 80109da:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 80109de:	18a3      	adds	r3, r4, r2
 80109e0:	440c      	add	r4, r1
 80109e2:	2037      	movs	r0, #55	@ 0x37
 80109e4:	2106      	movs	r1, #6
 80109e6:	f883 00ec 	strb.w	r0, [r3, #236]	@ 0xec
 80109ea:	f884 10ec 	strb.w	r1, [r4, #236]	@ 0xec
 80109ee:	f883 10f0 	strb.w	r1, [r3, #240]	@ 0xf0
 80109f2:	210f      	movs	r1, #15
 80109f4:	f883 10f1 	strb.w	r1, [r3, #241]	@ 0xf1
 80109f8:	213a      	movs	r1, #58	@ 0x3a
 80109fa:	f883 10f2 	strb.w	r1, [r3, #242]	@ 0xf2
 80109fe:	2001      	movs	r0, #1
 8010a00:	213b      	movs	r1, #59	@ 0x3b
 8010a02:	f883 00ee 	strb.w	r0, [r3, #238]	@ 0xee
 8010a06:	f883 10f3 	strb.w	r1, [r3, #243]	@ 0xf3
 8010a0a:	2003      	movs	r0, #3
 8010a0c:	21ff      	movs	r1, #255	@ 0xff
 8010a0e:	f883 10f4 	strb.w	r1, [r3, #244]	@ 0xf4
 8010a12:	f883 00ef 	strb.w	r0, [r3, #239]	@ 0xef
 8010a16:	2343      	movs	r3, #67	@ 0x43
 8010a18:	9300      	str	r3, [sp, #0]
 8010a1a:	32f5      	adds	r2, #245	@ 0xf5
 8010a1c:	4906      	ldr	r1, [pc, #24]	@ (8010a38 <net::send_request()+0xc8>)
 8010a1e:	6830      	ldr	r0, [r6, #0]
 8010a20:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010a24:	b292      	uxth	r2, r2
 8010a26:	f000 ff29 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010a2a:	b002      	add	sp, #8
 8010a2c:	bd70      	pop	{r4, r5, r6, pc}
 8010a2e:	f805 0f01 	strb.w	r0, [r5, #1]!
 8010a32:	460a      	mov	r2, r1
 8010a34:	e7cb      	b.n	80109ce <net::send_request()+0x5e>
 8010a36:	bf00      	nop
 8010a38:	10008000 	andne	r8, r0, r0
 8010a3c:	20002088 	andcs	r2, r0, r8, lsl #1

08010a40 <net::dhcp_select()>:
 8010a40:	4b11      	ldr	r3, [pc, #68]	@ (8010a88 <net::dhcp_select()+0x48>)
 8010a42:	b510      	push	{r4, lr}
 8010a44:	6a1c      	ldr	r4, [r3, #32]
 8010a46:	7a23      	ldrb	r3, [r4, #8]
 8010a48:	2b01      	cmp	r3, #1
 8010a4a:	bf1f      	itttt	ne
 8010a4c:	2301      	movne	r3, #1
 8010a4e:	8123      	strhne	r3, [r4, #8]
 8010a50:	2300      	movne	r3, #0
 8010a52:	81a3      	strhne	r3, [r4, #12]
 8010a54:	f7ff ff8c 	bl	8010970 <net::send_request()>
 8010a58:	7a63      	ldrb	r3, [r4, #9]
 8010a5a:	2bff      	cmp	r3, #255	@ 0xff
 8010a5c:	bf1c      	itt	ne
 8010a5e:	3301      	addne	r3, #1
 8010a60:	7263      	strbne	r3, [r4, #9]
 8010a62:	7a62      	ldrb	r2, [r4, #9]
 8010a64:	2a05      	cmp	r2, #5
 8010a66:	bf9d      	ittte	ls
 8010a68:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8010a6c:	4093      	lslls	r3, r2
 8010a6e:	b29b      	uxthls	r3, r3
 8010a70:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8010a74:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010a78:	b29b      	uxth	r3, r3
 8010a7a:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010a7e:	fbb3 f3f2 	udiv	r3, r3, r2
 8010a82:	81a3      	strh	r3, [r4, #12]
 8010a84:	bd10      	pop	{r4, pc}
 8010a86:	bf00      	nop
 8010a88:	20002088 	andcs	r2, r0, r8, lsl #1

08010a8c <net::dhcp_reboot()>:
 8010a8c:	4b12      	ldr	r3, [pc, #72]	@ (8010ad8 <net::dhcp_reboot()+0x4c>)
 8010a8e:	b510      	push	{r4, lr}
 8010a90:	6a1c      	ldr	r4, [r3, #32]
 8010a92:	7a23      	ldrb	r3, [r4, #8]
 8010a94:	2b03      	cmp	r3, #3
 8010a96:	bf1f      	itttt	ne
 8010a98:	2303      	movne	r3, #3
 8010a9a:	8123      	strhne	r3, [r4, #8]
 8010a9c:	2300      	movne	r3, #0
 8010a9e:	81a3      	strhne	r3, [r4, #12]
 8010aa0:	f7ff ff66 	bl	8010970 <net::send_request()>
 8010aa4:	7a63      	ldrb	r3, [r4, #9]
 8010aa6:	2bff      	cmp	r3, #255	@ 0xff
 8010aa8:	bf1c      	itt	ne
 8010aaa:	3301      	addne	r3, #1
 8010aac:	7263      	strbne	r3, [r4, #9]
 8010aae:	7a63      	ldrb	r3, [r4, #9]
 8010ab0:	2b09      	cmp	r3, #9
 8010ab2:	bf9f      	itttt	ls
 8010ab4:	ebc3 1243 	rsbls	r2, r3, r3, lsl #5
 8010ab8:	eb03 0382 	addls.w	r3, r3, r2, lsl #2
 8010abc:	00db      	lslls	r3, r3, #3
 8010abe:	b29b      	uxthls	r3, r3
 8010ac0:	bf88      	it	hi
 8010ac2:	f242 7310 	movwhi	r3, #10000	@ 0x2710
 8010ac6:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010aca:	b29b      	uxth	r3, r3
 8010acc:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010ad0:	fbb3 f3f2 	udiv	r3, r3, r2
 8010ad4:	81a3      	strh	r3, [r4, #12]
 8010ad6:	bd10      	pop	{r4, pc}
 8010ad8:	20002088 	andcs	r2, r0, r8, lsl #1

08010adc <net::memcpy_ip(unsigned char const*)>:
 8010adc:	6800      	ldr	r0, [r0, #0]
 8010ade:	4770      	bx	lr

08010ae0 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
 8010ae0:	4b0e      	ldr	r3, [pc, #56]	@ (8010b1c <net::dhcp_handle_ack(net::dhcp::Message const*)+0x3c>)
 8010ae2:	b510      	push	{r4, lr}
 8010ae4:	6a1c      	ldr	r4, [r3, #32]
 8010ae6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010ae8:	b913      	cbnz	r3, 8010af0 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x10>
 8010aea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010aec:	085b      	lsrs	r3, r3, #1
 8010aee:	6323      	str	r3, [r4, #48]	@ 0x30
 8010af0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8010af2:	b923      	cbnz	r3, 8010afe <net::dhcp_handle_ack(net::dhcp::Message const*)+0x1e>
 8010af4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010af6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8010afa:	08db      	lsrs	r3, r3, #3
 8010afc:	6363      	str	r3, [r4, #52]	@ 0x34
 8010afe:	3010      	adds	r0, #16
 8010b00:	f7ff ffec 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010b04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8010b06:	7aa3      	ldrb	r3, [r4, #10]
 8010b08:	6220      	str	r0, [r4, #32]
 8010b0a:	b11a      	cbz	r2, 8010b14 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x34>
 8010b0c:	f043 0301 	orr.w	r3, r3, #1
 8010b10:	72a3      	strb	r3, [r4, #10]
 8010b12:	bd10      	pop	{r4, pc}
 8010b14:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8010b18:	e7fa      	b.n	8010b10 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x30>
 8010b1a:	bf00      	nop
 8010b1c:	20002088 	andcs	r2, r0, r8, lsl #1

08010b20 <net::dhcp_inform()>:
 8010b20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010b22:	2044      	movs	r0, #68	@ 0x44
 8010b24:	f000 fe52 	bl	80117cc <net::udp_begin(unsigned short)>
 8010b28:	4c16      	ldr	r4, [pc, #88]	@ (8010b84 <net::dhcp_inform()+0x64>)
 8010b2a:	4d17      	ldr	r5, [pc, #92]	@ (8010b88 <net::dhcp_inform()+0x68>)
 8010b2c:	4606      	mov	r6, r0
 8010b2e:	f7ff fea5 	bl	801087c <net::message_init()>
 8010b32:	6829      	ldr	r1, [r5, #0]
 8010b34:	4620      	mov	r0, r4
 8010b36:	f7ff ff19 	bl	801096c <net::memcpy_ip(unsigned char*, unsigned long)>
 8010b3a:	f1a4 010c 	sub.w	r1, r4, #12
 8010b3e:	f643 5308 	movw	r3, #15624	@ 0x3d08
 8010b42:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8010b46:	f240 1307 	movw	r3, #263	@ 0x107
 8010b4a:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8010b4e:	8aab      	ldrh	r3, [r5, #20]
 8010b50:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8010b54:	8aeb      	ldrh	r3, [r5, #22]
 8010b56:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8010b5a:	8b2b      	ldrh	r3, [r5, #24]
 8010b5c:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8010b60:	23ff      	movs	r3, #255	@ 0xff
 8010b62:	f881 30fc 	strb.w	r3, [r1, #252]	@ 0xfc
 8010b66:	2343      	movs	r3, #67	@ 0x43
 8010b68:	9300      	str	r3, [sp, #0]
 8010b6a:	4630      	mov	r0, r6
 8010b6c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010b70:	22fd      	movs	r2, #253	@ 0xfd
 8010b72:	f000 fe83 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010b76:	2044      	movs	r0, #68	@ 0x44
 8010b78:	b002      	add	sp, #8
 8010b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b7e:	f000 be3b 	b.w	80117f8 <net::udp_end(unsigned short)>
 8010b82:	bf00      	nop
 8010b84:	1000800c 	andne	r8, r0, ip
 8010b88:	20002088 	andcs	r2, r0, r8, lsl #1

08010b8c <net::dhcp_start()>:
 8010b8c:	b570      	push	{r4, r5, r6, lr}
 8010b8e:	4d20      	ldr	r5, [pc, #128]	@ (8010c10 <net::dhcp_start()+0x84>)
 8010b90:	6a2c      	ldr	r4, [r5, #32]
 8010b92:	b96c      	cbnz	r4, 8010bb0 <net::dhcp_start()+0x24>
 8010b94:	2048      	movs	r0, #72	@ 0x48
 8010b96:	f006 f851 	bl	8016c3c <operator new(unsigned int)>
 8010b9a:	4b1e      	ldr	r3, [pc, #120]	@ (8010c14 <net::dhcp_start()+0x88>)
 8010b9c:	6228      	str	r0, [r5, #32]
 8010b9e:	681b      	ldr	r3, [r3, #0]
 8010ba0:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 8010ba4:	2907      	cmp	r1, #7
 8010ba6:	4604      	mov	r4, r0
 8010ba8:	d919      	bls.n	8010bde <net::dhcp_start()+0x52>
 8010baa:	481b      	ldr	r0, [pc, #108]	@ (8010c18 <net::dhcp_start()+0x8c>)
 8010bac:	f003 fcca 	bl	8014544 <console_error>
 8010bb0:	2248      	movs	r2, #72	@ 0x48
 8010bb2:	2100      	movs	r1, #0
 8010bb4:	4620      	mov	r0, r4
 8010bb6:	f005 fb07 	bl	80161c8 <memset>
 8010bba:	2044      	movs	r0, #68	@ 0x44
 8010bbc:	f000 fe06 	bl	80117cc <net::udp_begin(unsigned short)>
 8010bc0:	6020      	str	r0, [r4, #0]
 8010bc2:	f7ff fe5b 	bl	801087c <net::message_init()>
 8010bc6:	7ead      	ldrb	r5, [r5, #26]
 8010bc8:	f015 0501 	ands.w	r5, r5, #1
 8010bcc:	d11d      	bne.n	8010c0a <net::dhcp_start()+0x7e>
 8010bce:	7a23      	ldrb	r3, [r4, #8]
 8010bd0:	2b02      	cmp	r3, #2
 8010bd2:	d002      	beq.n	8010bda <net::dhcp_start()+0x4e>
 8010bd4:	2302      	movs	r3, #2
 8010bd6:	8123      	strh	r3, [r4, #8]
 8010bd8:	81a5      	strh	r5, [r4, #12]
 8010bda:	4628      	mov	r0, r5
 8010bdc:	bd70      	pop	{r4, r5, r6, pc}
 8010bde:	f8d3 00a4 	ldr.w	r0, [r3, #164]	@ 0xa4
 8010be2:	4a0e      	ldr	r2, [pc, #56]	@ (8010c1c <net::dhcp_start()+0x90>)
 8010be4:	1c46      	adds	r6, r0, #1
 8010be6:	f8c3 60a4 	str.w	r6, [r3, #164]	@ 0xa4
 8010bea:	6812      	ldr	r2, [r2, #0]
 8010bec:	1c4e      	adds	r6, r1, #1
 8010bee:	f8c3 60a0 	str.w	r6, [r3, #160]	@ 0xa0
 8010bf2:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8010bf6:	f502 72fa 	add.w	r2, r2, #500	@ 0x1f4
 8010bfa:	621a      	str	r2, [r3, #32]
 8010bfc:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010c00:	e9c3 2009 	strd	r2, r0, [r3, #36]	@ 0x24
 8010c04:	4a06      	ldr	r2, [pc, #24]	@ (8010c20 <net::dhcp_start()+0x94>)
 8010c06:	62da      	str	r2, [r3, #44]	@ 0x2c
 8010c08:	e7d2      	b.n	8010bb0 <net::dhcp_start()+0x24>
 8010c0a:	f7ff fe57 	bl	80108bc <net::dhcp_discover()>
 8010c0e:	e7e4      	b.n	8010bda <net::dhcp_start()+0x4e>
 8010c10:	20002088 	andcs	r2, r0, r8, lsl #1
 8010c14:	20002238 	andcs	r2, r0, r8, lsr r2
 8010c18:	080179b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, ip, sp, lr}
 8010c1c:	20009ae8 	andcs	r9, r0, r8, ror #21
 8010c20:	08010cc9 	stmdaeq	r1, {r0, r3, r6, r7, sl, fp}

08010c24 <net::dhcp_release_and_stop()>:
 8010c24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010c28:	4d25      	ldr	r5, [pc, #148]	@ (8010cc0 <net::dhcp_release_and_stop()+0x9c>)
 8010c2a:	6a2c      	ldr	r4, [r5, #32]
 8010c2c:	2c00      	cmp	r4, #0
 8010c2e:	d044      	beq.n	8010cba <net::dhcp_release_and_stop()+0x96>
 8010c30:	7a23      	ldrb	r3, [r4, #8]
 8010c32:	2b00      	cmp	r3, #0
 8010c34:	d041      	beq.n	8010cba <net::dhcp_release_and_stop()+0x96>
 8010c36:	2600      	movs	r6, #0
 8010c38:	69e7      	ldr	r7, [r4, #28]
 8010c3a:	61e6      	str	r6, [r4, #28]
 8010c3c:	2218      	movs	r2, #24
 8010c3e:	4631      	mov	r1, r6
 8010c40:	f104 0020 	add.w	r0, r4, #32
 8010c44:	f005 fac0 	bl	80161c8 <memset>
 8010c48:	6a2b      	ldr	r3, [r5, #32]
 8010c4a:	8266      	strh	r6, [r4, #18]
 8010c4c:	6166      	str	r6, [r4, #20]
 8010c4e:	8326      	strh	r6, [r4, #24]
 8010c50:	b363      	cbz	r3, 8010cac <net::dhcp_release_and_stop()+0x88>
 8010c52:	7a1b      	ldrb	r3, [r3, #8]
 8010c54:	2b0a      	cmp	r3, #10
 8010c56:	d002      	beq.n	8010c5e <net::dhcp_release_and_stop()+0x3a>
 8010c58:	3b04      	subs	r3, #4
 8010c5a:	2b01      	cmp	r3, #1
 8010c5c:	d826      	bhi.n	8010cac <net::dhcp_release_and_stop()+0x88>
 8010c5e:	2600      	movs	r6, #0
 8010c60:	8126      	strh	r6, [r4, #8]
 8010c62:	81a6      	strh	r6, [r4, #12]
 8010c64:	4c17      	ldr	r4, [pc, #92]	@ (8010cc4 <net::dhcp_release_and_stop()+0xa0>)
 8010c66:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8010c6a:	f243 6307 	movw	r3, #13831	@ 0x3607
 8010c6e:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8010c72:	2304      	movs	r3, #4
 8010c74:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 8010c78:	f8d8 101c 	ldr.w	r1, [r8, #28]
 8010c7c:	f104 00f5 	add.w	r0, r4, #245	@ 0xf5
 8010c80:	f7ff fe74 	bl	801096c <net::memcpy_ip(unsigned char*, unsigned long)>
 8010c84:	23ff      	movs	r3, #255	@ 0xff
 8010c86:	f884 30f9 	strb.w	r3, [r4, #249]	@ 0xf9
 8010c8a:	2343      	movs	r3, #67	@ 0x43
 8010c8c:	9300      	str	r3, [sp, #0]
 8010c8e:	22fa      	movs	r2, #250	@ 0xfa
 8010c90:	4621      	mov	r1, r4
 8010c92:	f8d8 0000 	ldr.w	r0, [r8]
 8010c96:	463b      	mov	r3, r7
 8010c98:	f000 fdf0 	bl	801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010c9c:	2044      	movs	r0, #68	@ 0x44
 8010c9e:	f000 fdab 	bl	80117f8 <net::udp_end(unsigned short)>
 8010ca2:	4632      	mov	r2, r6
 8010ca4:	4631      	mov	r1, r6
 8010ca6:	4630      	mov	r0, r6
 8010ca8:	f000 faf8 	bl	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010cac:	6a28      	ldr	r0, [r5, #32]
 8010cae:	b110      	cbz	r0, 8010cb6 <net::dhcp_release_and_stop()+0x92>
 8010cb0:	2148      	movs	r1, #72	@ 0x48
 8010cb2:	f005 ffc1 	bl	8016c38 <operator delete(void*, unsigned int)>
 8010cb6:	2300      	movs	r3, #0
 8010cb8:	622b      	str	r3, [r5, #32]
 8010cba:	b002      	add	sp, #8
 8010cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010cc0:	20002088 	andcs	r2, r0, r8, lsl #1
 8010cc4:	10008000 	andne	r8, r0, r0

08010cc8 <net::dhcp_fine_tmr()>:
 8010cc8:	b508      	push	{r3, lr}
 8010cca:	4b21      	ldr	r3, [pc, #132]	@ (8010d50 <net::dhcp_fine_tmr()+0x88>)
 8010ccc:	6a1b      	ldr	r3, [r3, #32]
 8010cce:	b123      	cbz	r3, 8010cda <net::dhcp_fine_tmr()+0x12>
 8010cd0:	899a      	ldrh	r2, [r3, #12]
 8010cd2:	2a01      	cmp	r2, #1
 8010cd4:	d902      	bls.n	8010cdc <net::dhcp_fine_tmr()+0x14>
 8010cd6:	3a01      	subs	r2, #1
 8010cd8:	819a      	strh	r2, [r3, #12]
 8010cda:	bd08      	pop	{r3, pc}
 8010cdc:	d1fd      	bne.n	8010cda <net::dhcp_fine_tmr()+0x12>
 8010cde:	2200      	movs	r2, #0
 8010ce0:	819a      	strh	r2, [r3, #12]
 8010ce2:	7a1a      	ldrb	r2, [r3, #8]
 8010ce4:	3a01      	subs	r2, #1
 8010ce6:	2a0b      	cmp	r2, #11
 8010ce8:	d8f7      	bhi.n	8010cda <net::dhcp_fine_tmr()+0x12>
 8010cea:	a101      	add	r1, pc, #4	@ (adr r1, 8010cf0 <net::dhcp_fine_tmr()+0x28>)
 8010cec:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8010cf0:	08010d21 	stmdaeq	r1, {r0, r5, r8, sl, fp}
 8010cf4:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010cf8:	08010d3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, sl, fp}
 8010cfc:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d00:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d04:	08010d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp}
 8010d08:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d0c:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d10:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d14:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d18:	08010cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp}
 8010d1c:	08010d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp}
 8010d20:	7a5b      	ldrb	r3, [r3, #9]
 8010d22:	2b05      	cmp	r3, #5
 8010d24:	d803      	bhi.n	8010d2e <net::dhcp_fine_tmr()+0x66>
 8010d26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010d2a:	f7ff be89 	b.w	8010a40 <net::dhcp_select()>
 8010d2e:	f7ff ff79 	bl	8010c24 <net::dhcp_release_and_stop()>
 8010d32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010d36:	f7ff bf29 	b.w	8010b8c <net::dhcp_start()>
 8010d3a:	7a5b      	ldrb	r3, [r3, #9]
 8010d3c:	2b01      	cmp	r3, #1
 8010d3e:	d803      	bhi.n	8010d48 <net::dhcp_fine_tmr()+0x80>
 8010d40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010d44:	f7ff bea2 	b.w	8010a8c <net::dhcp_reboot()>
 8010d48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010d4c:	f7ff bdb6 	b.w	80108bc <net::dhcp_discover()>
 8010d50:	20002088 	andcs	r2, r0, r8, lsl #1

08010d54 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
 8010d54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010d58:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 8010eac <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x158>
 8010d5c:	f8d8 5020 	ldr.w	r5, [r8, #32]
 8010d60:	4606      	mov	r6, r0
 8010d62:	4689      	mov	r9, r1
 8010d64:	2218      	movs	r2, #24
 8010d66:	2100      	movs	r1, #0
 8010d68:	f105 0020 	add.w	r0, r5, #32
 8010d6c:	2700      	movs	r7, #0
 8010d6e:	f106 04f0 	add.w	r4, r6, #240	@ 0xf0
 8010d72:	f005 fa29 	bl	80161c8 <memset>
 8010d76:	44a1      	add	r9, r4
 8010d78:	61ef      	str	r7, [r5, #28]
 8010d7a:	454c      	cmp	r4, r9
 8010d7c:	d318      	bcc.n	8010db0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x5c>
 8010d7e:	2f02      	cmp	r7, #2
 8010d80:	d167      	bne.n	8010e52 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xfe>
 8010d82:	3610      	adds	r6, #16
 8010d84:	4630      	mov	r0, r6
 8010d86:	f7ff fea9 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010d8a:	7a2b      	ldrb	r3, [r5, #8]
 8010d8c:	6228      	str	r0, [r5, #32]
 8010d8e:	2b06      	cmp	r3, #6
 8010d90:	d170      	bne.n	8010e74 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8010d92:	f8d8 4020 	ldr.w	r4, [r8, #32]
 8010d96:	69e3      	ldr	r3, [r4, #28]
 8010d98:	2b00      	cmp	r3, #0
 8010d9a:	d06b      	beq.n	8010e74 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8010d9c:	2300      	movs	r3, #0
 8010d9e:	81a3      	strh	r3, [r4, #12]
 8010da0:	4630      	mov	r0, r6
 8010da2:	f7ff fe9b 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010da6:	6220      	str	r0, [r4, #32]
 8010da8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010dac:	f7ff be48 	b.w	8010a40 <net::dhcp_select()>
 8010db0:	7823      	ldrb	r3, [r4, #0]
 8010db2:	2b3b      	cmp	r3, #59	@ 0x3b
 8010db4:	d822      	bhi.n	8010dfc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xa8>
 8010db6:	2b32      	cmp	r3, #50	@ 0x32
 8010db8:	d808      	bhi.n	8010dcc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x78>
 8010dba:	2b01      	cmp	r3, #1
 8010dbc:	d027      	beq.n	8010e0e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xba>
 8010dbe:	2b03      	cmp	r3, #3
 8010dc0:	d02b      	beq.n	8010e1a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc6>
 8010dc2:	b1fb      	cbz	r3, 8010e04 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb0>
 8010dc4:	7863      	ldrb	r3, [r4, #1]
 8010dc6:	3302      	adds	r3, #2
 8010dc8:	441c      	add	r4, r3
 8010dca:	e7d6      	b.n	8010d7a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8010dcc:	3b33      	subs	r3, #51	@ 0x33
 8010dce:	2b08      	cmp	r3, #8
 8010dd0:	d8f8      	bhi.n	8010dc4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8010dd2:	a201      	add	r2, pc, #4	@ (adr r2, 8010dd8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x84>)
 8010dd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010dd8:	08010e2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, sl, fp}
 8010ddc:	08010dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp}
 8010de0:	08010e09 	stmdaeq	r1, {r0, r3, r9, sl, fp}
 8010de4:	08010e25 	stmdaeq	r1, {r0, r2, r5, r9, sl, fp}
 8010de8:	08010dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp}
 8010dec:	08010dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp}
 8010df0:	08010dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp}
 8010df4:	08010e3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, fp}
 8010df8:	08010e47 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, fp}
 8010dfc:	2bff      	cmp	r3, #255	@ 0xff
 8010dfe:	d1e1      	bne.n	8010dc4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8010e00:	464c      	mov	r4, r9
 8010e02:	e7ba      	b.n	8010d7a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8010e04:	3401      	adds	r4, #1
 8010e06:	e7b8      	b.n	8010d7a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8010e08:	78a7      	ldrb	r7, [r4, #2]
 8010e0a:	3403      	adds	r4, #3
 8010e0c:	e7b5      	b.n	8010d7a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8010e0e:	1ca0      	adds	r0, r4, #2
 8010e10:	f7ff fe64 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e14:	6268      	str	r0, [r5, #36]	@ 0x24
 8010e16:	3406      	adds	r4, #6
 8010e18:	e7af      	b.n	8010d7a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8010e1a:	1ca0      	adds	r0, r4, #2
 8010e1c:	f7ff fe5e 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e20:	62a8      	str	r0, [r5, #40]	@ 0x28
 8010e22:	e7f8      	b.n	8010e16 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8010e24:	1ca0      	adds	r0, r4, #2
 8010e26:	f7ff fe59 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e2a:	61e8      	str	r0, [r5, #28]
 8010e2c:	e7f3      	b.n	8010e16 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8010e2e:	1ca0      	adds	r0, r4, #2
 8010e30:	f7ff fe54 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e34:	ba00      	rev	r0, r0
 8010e36:	62e8      	str	r0, [r5, #44]	@ 0x2c
 8010e38:	e7ed      	b.n	8010e16 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8010e3a:	1ca0      	adds	r0, r4, #2
 8010e3c:	f7ff fe4e 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e40:	ba00      	rev	r0, r0
 8010e42:	6328      	str	r0, [r5, #48]	@ 0x30
 8010e44:	e7e7      	b.n	8010e16 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8010e46:	1ca0      	adds	r0, r4, #2
 8010e48:	f7ff fe48 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 8010e4c:	ba00      	rev	r0, r0
 8010e4e:	6368      	str	r0, [r5, #52]	@ 0x34
 8010e50:	e7e1      	b.n	8010e16 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8010e52:	2f05      	cmp	r7, #5
 8010e54:	d110      	bne.n	8010e78 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x124>
 8010e56:	7a2b      	ldrb	r3, [r5, #8]
 8010e58:	f003 02fd 	and.w	r2, r3, #253	@ 0xfd
 8010e5c:	2a01      	cmp	r2, #1
 8010e5e:	d106      	bne.n	8010e6e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x11a>
 8010e60:	4630      	mov	r0, r6
 8010e62:	f7ff fe3d 	bl	8010ae0 <net::dhcp_handle_ack(net::dhcp::Message const*)>
 8010e66:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010e6a:	f7ff bc9d 	b.w	80107a8 <net::dhcp_bind()>
 8010e6e:	3b04      	subs	r3, #4
 8010e70:	2b01      	cmp	r3, #1
 8010e72:	d9f5      	bls.n	8010e60 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x10c>
 8010e74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010e78:	2f06      	cmp	r7, #6
 8010e7a:	d1fb      	bne.n	8010e74 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8010e7c:	7a2b      	ldrb	r3, [r5, #8]
 8010e7e:	1eda      	subs	r2, r3, #3
 8010e80:	2a02      	cmp	r2, #2
 8010e82:	d901      	bls.n	8010e88 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x134>
 8010e84:	2b01      	cmp	r3, #1
 8010e86:	d1f5      	bne.n	8010e74 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8010e88:	f8d8 3020 	ldr.w	r3, [r8, #32]
 8010e8c:	7a1a      	ldrb	r2, [r3, #8]
 8010e8e:	2a0c      	cmp	r2, #12
 8010e90:	bf1f      	itttt	ne
 8010e92:	220c      	movne	r2, #12
 8010e94:	811a      	strhne	r2, [r3, #8]
 8010e96:	2200      	movne	r2, #0
 8010e98:	819a      	strhne	r2, [r3, #12]
 8010e9a:	2200      	movs	r2, #0
 8010e9c:	4611      	mov	r1, r2
 8010e9e:	4610      	mov	r0, r2
 8010ea0:	f000 f9fc 	bl	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010ea4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010ea8:	f7ff bd08 	b.w	80108bc <net::dhcp_discover()>
 8010eac:	20002088 	andcs	r2, r0, r8, lsl #1

08010eb0 <net::igmp_send_report(unsigned long)>:
 8010eb0:	4a19      	ldr	r2, [pc, #100]	@ (8010f18 <net::igmp_send_report(unsigned long)+0x68>)
 8010eb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010eb4:	f3c0 2106 	ubfx	r1, r0, #8, #7
 8010eb8:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8010ebc:	4c17      	ldr	r4, [pc, #92]	@ (8010f1c <net::igmp_send_report(unsigned long)+0x6c>)
 8010ebe:	70d1      	strb	r1, [r2, #3]
 8010ec0:	7113      	strb	r3, [r2, #4]
 8010ec2:	f3c0 6107 	ubfx	r1, r0, #24, #8
 8010ec6:	4613      	mov	r3, r2
 8010ec8:	7151      	strb	r1, [r2, #5]
 8010eca:	4605      	mov	r5, r0
 8010ecc:	4622      	mov	r2, r4
 8010ece:	f103 0c06 	add.w	ip, r3, #6
 8010ed2:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010ed6:	f802 1b01 	strb.w	r1, [r2], #1
 8010eda:	4563      	cmp	r3, ip
 8010edc:	d1f9      	bne.n	8010ed2 <net::igmp_send_report(unsigned long)+0x22>
 8010ede:	4e10      	ldr	r6, [pc, #64]	@ (8010f20 <net::igmp_send_report(unsigned long)+0x70>)
 8010ee0:	4810      	ldr	r0, [pc, #64]	@ (8010f24 <net::igmp_send_report(unsigned long)+0x74>)
 8010ee2:	8833      	ldrh	r3, [r6, #0]
 8010ee4:	8263      	strh	r3, [r4, #18]
 8010ee6:	2700      	movs	r7, #0
 8010ee8:	2118      	movs	r1, #24
 8010eea:	f8c4 501e 	str.w	r5, [r4, #30]
 8010eee:	8327      	strh	r7, [r4, #24]
 8010ef0:	f000 f90e 	bl	8011110 <net::net_chksum(void const*, unsigned long)>
 8010ef4:	2120      	movs	r1, #32
 8010ef6:	8320      	strh	r0, [r4, #24]
 8010ef8:	480a      	ldr	r0, [pc, #40]	@ (8010f24 <net::igmp_send_report(unsigned long)+0x74>)
 8010efa:	f8c4 502a 	str.w	r5, [r4, #42]	@ 0x2a
 8010efe:	8527      	strh	r7, [r4, #40]	@ 0x28
 8010f00:	f000 f906 	bl	8011110 <net::net_chksum(void const*, unsigned long)>
 8010f04:	212e      	movs	r1, #46	@ 0x2e
 8010f06:	4603      	mov	r3, r0
 8010f08:	4804      	ldr	r0, [pc, #16]	@ (8010f1c <net::igmp_send_report(unsigned long)+0x6c>)
 8010f0a:	8523      	strh	r3, [r4, #40]	@ 0x28
 8010f0c:	f001 f924 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 8010f10:	8833      	ldrh	r3, [r6, #0]
 8010f12:	3301      	adds	r3, #1
 8010f14:	8033      	strh	r3, [r6, #0]
 8010f16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010f18:	10008348 	andne	r8, r0, r8, asr #6
 8010f1c:	10008380 	andne	r8, r0, r0, lsl #7
 8010f20:	10008224 	andne	r8, r0, r4, lsr #4
 8010f24:	1000838e 	andne	r8, r0, lr, lsl #7

08010f28 <net::igmp_timer()>:
 8010f28:	b570      	push	{r4, r5, r6, lr}
 8010f2a:	4c12      	ldr	r4, [pc, #72]	@ (8010f74 <net::igmp_timer()+0x4c>)
 8010f2c:	4e12      	ldr	r6, [pc, #72]	@ (8010f78 <net::igmp_timer()+0x50>)
 8010f2e:	f504 7590 	add.w	r5, r4, #288	@ 0x120
 8010f32:	e002      	b.n	8010f3a <net::igmp_timer()+0x12>
 8010f34:	3408      	adds	r4, #8
 8010f36:	42ac      	cmp	r4, r5
 8010f38:	d01a      	beq.n	8010f70 <net::igmp_timer()+0x48>
 8010f3a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8010f3e:	1e53      	subs	r3, r2, #1
 8010f40:	b29b      	uxth	r3, r3
 8010f42:	2a00      	cmp	r2, #0
 8010f44:	d0f6      	beq.n	8010f34 <net::igmp_timer()+0xc>
 8010f46:	f824 3c04 	strh.w	r3, [r4, #-4]
 8010f4a:	2b00      	cmp	r3, #0
 8010f4c:	d1f2      	bne.n	8010f34 <net::igmp_timer()+0xc>
 8010f4e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8010f52:	2b01      	cmp	r3, #1
 8010f54:	d1ee      	bne.n	8010f34 <net::igmp_timer()+0xc>
 8010f56:	f854 0c08 	ldr.w	r0, [r4, #-8]
 8010f5a:	42b0      	cmp	r0, r6
 8010f5c:	f04f 0302 	mov.w	r3, #2
 8010f60:	d0e8      	beq.n	8010f34 <net::igmp_timer()+0xc>
 8010f62:	f804 3c02 	strb.w	r3, [r4, #-2]
 8010f66:	3408      	adds	r4, #8
 8010f68:	f7ff ffa2 	bl	8010eb0 <net::igmp_send_report(unsigned long)>
 8010f6c:	42ac      	cmp	r4, r5
 8010f6e:	d1e4      	bne.n	8010f3a <net::igmp_timer()+0x12>
 8010f70:	bd70      	pop	{r4, r5, r6, pc}
 8010f72:	bf00      	nop
 8010f74:	10008230 	andne	r8, r0, r0, lsr r2
 8010f78:	010000e0 	smlatteq	r0, r0, r0, r0

08010f7c <net::igmp_set_ip()>:
 8010f7c:	4b04      	ldr	r3, [pc, #16]	@ (8010f90 <net::igmp_set_ip()+0x14>)
 8010f7e:	4905      	ldr	r1, [pc, #20]	@ (8010f94 <net::igmp_set_ip()+0x18>)
 8010f80:	4a05      	ldr	r2, [pc, #20]	@ (8010f98 <net::igmp_set_ip()+0x1c>)
 8010f82:	681b      	ldr	r3, [r3, #0]
 8010f84:	f8c1 301a 	str.w	r3, [r1, #26]
 8010f88:	f8c2 301a 	str.w	r3, [r2, #26]
 8010f8c:	4770      	bx	lr
 8010f8e:	bf00      	nop
 8010f90:	20002088 	andcs	r2, r0, r8, lsl #1
 8010f94:	10008380 	andne	r8, r0, r0, lsl #7
 8010f98:	10008350 	andne	r8, r0, r0, asr r3

08010f9c <net::igmp_join(unsigned long)>:
 8010f9c:	f000 03e0 	and.w	r3, r0, #224	@ 0xe0
 8010fa0:	2be0      	cmp	r3, #224	@ 0xe0
 8010fa2:	d10c      	bne.n	8010fbe <net::igmp_join(unsigned long)+0x22>
 8010fa4:	490b      	ldr	r1, [pc, #44]	@ (8010fd4 <net::igmp_join(unsigned long)+0x38>)
 8010fa6:	2300      	movs	r3, #0
 8010fa8:	e003      	b.n	8010fb2 <net::igmp_join(unsigned long)+0x16>
 8010faa:	b14a      	cbz	r2, 8010fc0 <net::igmp_join(unsigned long)+0x24>
 8010fac:	3301      	adds	r3, #1
 8010fae:	2b24      	cmp	r3, #36	@ 0x24
 8010fb0:	d005      	beq.n	8010fbe <net::igmp_join(unsigned long)+0x22>
 8010fb2:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8010fb6:	4282      	cmp	r2, r0
 8010fb8:	eb01 0cc3 	add.w	ip, r1, r3, lsl #3
 8010fbc:	d1f5      	bne.n	8010faa <net::igmp_join(unsigned long)+0xe>
 8010fbe:	4770      	bx	lr
 8010fc0:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
 8010fc4:	2201      	movs	r2, #1
 8010fc6:	2302      	movs	r3, #2
 8010fc8:	f88c 2006 	strb.w	r2, [ip, #6]
 8010fcc:	f8ac 3004 	strh.w	r3, [ip, #4]
 8010fd0:	f7ff bf6e 	b.w	8010eb0 <net::igmp_send_report(unsigned long)>
 8010fd4:	10008228 	andne	r8, r0, r8, lsr #4

08010fd8 <net::igmp_leave(unsigned long)>:
 8010fd8:	b570      	push	{r4, r5, r6, lr}
 8010fda:	4c0f      	ldr	r4, [pc, #60]	@ (8011018 <net::igmp_leave(unsigned long)+0x40>)
 8010fdc:	4602      	mov	r2, r0
 8010fde:	f504 7190 	add.w	r1, r4, #288	@ 0x120
 8010fe2:	e002      	b.n	8010fea <net::igmp_leave(unsigned long)+0x12>
 8010fe4:	3408      	adds	r4, #8
 8010fe6:	428c      	cmp	r4, r1
 8010fe8:	d014      	beq.n	8011014 <net::igmp_leave(unsigned long)+0x3c>
 8010fea:	6823      	ldr	r3, [r4, #0]
 8010fec:	4293      	cmp	r3, r2
 8010fee:	d1f9      	bne.n	8010fe4 <net::igmp_leave(unsigned long)+0xc>
 8010ff0:	4e0a      	ldr	r6, [pc, #40]	@ (801101c <net::igmp_leave(unsigned long)+0x44>)
 8010ff2:	480b      	ldr	r0, [pc, #44]	@ (8011020 <net::igmp_leave(unsigned long)+0x48>)
 8010ff4:	8833      	ldrh	r3, [r6, #0]
 8010ff6:	8243      	strh	r3, [r0, #18]
 8010ff8:	2500      	movs	r5, #0
 8010ffa:	212e      	movs	r1, #46	@ 0x2e
 8010ffc:	f8c0 202a 	str.w	r2, [r0, #42]	@ 0x2a
 8011000:	8305      	strh	r5, [r0, #24]
 8011002:	8505      	strh	r5, [r0, #40]	@ 0x28
 8011004:	f001 f8a8 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 8011008:	8833      	ldrh	r3, [r6, #0]
 801100a:	6025      	str	r5, [r4, #0]
 801100c:	3301      	adds	r3, #1
 801100e:	8033      	strh	r3, [r6, #0]
 8011010:	71a5      	strb	r5, [r4, #6]
 8011012:	80a5      	strh	r5, [r4, #4]
 8011014:	bd70      	pop	{r4, r5, r6, pc}
 8011016:	bf00      	nop
 8011018:	10008228 	andne	r8, r0, r8, lsr #4
 801101c:	10008224 	andne	r8, r0, r4, lsr #4
 8011020:	10008350 	andne	r8, r0, r0, asr r3

08011024 <net::igmp_report_groups()>:
 8011024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011026:	4c14      	ldr	r4, [pc, #80]	@ (8011078 <net::igmp_report_groups()+0x54>)
 8011028:	4d14      	ldr	r5, [pc, #80]	@ (801107c <net::igmp_report_groups()+0x58>)
 801102a:	f504 7790 	add.w	r7, r4, #288	@ 0x120
 801102e:	2601      	movs	r6, #1
 8011030:	e002      	b.n	8011038 <net::igmp_report_groups()+0x14>
 8011032:	3408      	adds	r4, #8
 8011034:	42bc      	cmp	r4, r7
 8011036:	d01e      	beq.n	8011076 <net::igmp_report_groups()+0x52>
 8011038:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801103c:	2b02      	cmp	r3, #2
 801103e:	d007      	beq.n	8011050 <net::igmp_report_groups()+0x2c>
 8011040:	2b01      	cmp	r3, #1
 8011042:	d1f6      	bne.n	8011032 <net::igmp_report_groups()+0xe>
 8011044:	f834 3c04 	ldrh.w	r3, [r4, #-4]
 8011048:	3b01      	subs	r3, #1
 801104a:	b29b      	uxth	r3, r3
 801104c:	2b04      	cmp	r3, #4
 801104e:	d9f0      	bls.n	8011032 <net::igmp_report_groups()+0xe>
 8011050:	f005 fbfc 	bl	801684c <random>
 8011054:	fba5 3200 	umull	r3, r2, r5, r0
 8011058:	f022 0303 	bic.w	r3, r2, #3
 801105c:	eb03 0392 	add.w	r3, r3, r2, lsr #2
 8011060:	1ac0      	subs	r0, r0, r3
 8011062:	2801      	cmp	r0, #1
 8011064:	bf38      	it	cc
 8011066:	2001      	movcc	r0, #1
 8011068:	f824 0c04 	strh.w	r0, [r4, #-4]
 801106c:	f804 6c02 	strb.w	r6, [r4, #-2]
 8011070:	3408      	adds	r4, #8
 8011072:	42bc      	cmp	r4, r7
 8011074:	d1e0      	bne.n	8011038 <net::igmp_report_groups()+0x14>
 8011076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011078:	10008230 	andne	r8, r0, r0, lsr r2
 801107c:	cccccccd 	stclgt	12, cr12, [ip], {205}	@ 0xcd

08011080 <net::primary_ip_conflict_callback(net::acd::Callback)>:
 8011080:	b140      	cbz	r0, 8011094 <net::primary_ip_conflict_callback(net::acd::Callback)+0x14>
 8011082:	2802      	cmp	r0, #2
 8011084:	d000      	beq.n	8011088 <net::primary_ip_conflict_callback(net::acd::Callback)+0x8>
 8011086:	4770      	bx	lr
 8011088:	4a10      	ldr	r2, [pc, #64]	@ (80110cc <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 801108a:	7e93      	ldrb	r3, [r2, #26]
 801108c:	f023 0308 	bic.w	r3, r3, #8
 8011090:	7693      	strb	r3, [r2, #26]
 8011092:	4770      	bx	lr
 8011094:	4b0e      	ldr	r3, [pc, #56]	@ (80110d0 <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>)
 8011096:	b510      	push	{r4, lr}
 8011098:	4c0c      	ldr	r4, [pc, #48]	@ (80110cc <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 801109a:	6818      	ldr	r0, [r3, #0]
 801109c:	6923      	ldr	r3, [r4, #16]
 801109e:	4298      	cmp	r0, r3
 80110a0:	d008      	beq.n	80110b4 <net::primary_ip_conflict_callback(net::acd::Callback)+0x34>
 80110a2:	f000 f8c1 	bl	8011228 <net::netif_set_ipaddr(net::ip_addr)>
 80110a6:	f7ff fd3b 	bl	8010b20 <net::dhcp_inform()>
 80110aa:	7ea3      	ldrb	r3, [r4, #26]
 80110ac:	f043 0308 	orr.w	r3, r3, #8
 80110b0:	76a3      	strb	r3, [r4, #26]
 80110b2:	bd10      	pop	{r4, pc}
 80110b4:	4602      	mov	r2, r0
 80110b6:	21ff      	movs	r1, #255	@ 0xff
 80110b8:	f000 f8f0 	bl	801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 80110bc:	f7ff fd30 	bl	8010b20 <net::dhcp_inform()>
 80110c0:	7ea3      	ldrb	r3, [r4, #26]
 80110c2:	f043 0308 	orr.w	r3, r3, #8
 80110c6:	76a3      	strb	r3, [r4, #26]
 80110c8:	bd10      	pop	{r4, pc}
 80110ca:	bf00      	nop
 80110cc:	20002088 	andcs	r2, r0, r8, lsl #1
 80110d0:	20002074 	andcs	r2, r0, r4, ror r0

080110d4 <net::net_shutdown()>:
 80110d4:	f000 b92e 	b.w	8011334 <net::netif_set_link_down()>

080110d8 <net::net_set_primary_ip(net::ip_addr)>:
 80110d8:	b510      	push	{r4, lr}
 80110da:	4604      	mov	r4, r0
 80110dc:	f7ff fda2 	bl	8010c24 <net::dhcp_release_and_stop()>
 80110e0:	4908      	ldr	r1, [pc, #32]	@ (8011104 <net::net_set_primary_ip(net::ip_addr)+0x2c>)
 80110e2:	4809      	ldr	r0, [pc, #36]	@ (8011108 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 80110e4:	f001 f9b4 	bl	8012450 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 80110e8:	b934      	cbnz	r4, 80110f8 <net::net_set_primary_ip(net::ip_addr)+0x20>
 80110ea:	4b08      	ldr	r3, [pc, #32]	@ (801110c <net::net_set_primary_ip(net::ip_addr)+0x34>)
 80110ec:	4806      	ldr	r0, [pc, #24]	@ (8011108 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 80110ee:	6919      	ldr	r1, [r3, #16]
 80110f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110f4:	f001 b876 	b.w	80121e4 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 80110f8:	4621      	mov	r1, r4
 80110fa:	4803      	ldr	r0, [pc, #12]	@ (8011108 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 80110fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011100:	f001 b870 	b.w	80121e4 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8011104:	08011081 	stmdaeq	r1, {r0, r7, ip}
 8011108:	20002074 	andcs	r2, r0, r4, ror r0
 801110c:	20002088 	andcs	r2, r0, r8, lsl #1

08011110 <net::net_chksum(void const*, unsigned long)>:
 8011110:	2901      	cmp	r1, #1
 8011112:	d91f      	bls.n	8011154 <net::net_chksum(void const*, unsigned long)+0x44>
 8011114:	f1a1 0c02 	sub.w	ip, r1, #2
 8011118:	f02c 0c01 	bic.w	ip, ip, #1
 801111c:	f10c 0c02 	add.w	ip, ip, #2
 8011120:	4484      	add	ip, r0
 8011122:	2300      	movs	r3, #0
 8011124:	f830 2b02 	ldrh.w	r2, [r0], #2
 8011128:	4560      	cmp	r0, ip
 801112a:	4413      	add	r3, r2
 801112c:	d1fa      	bne.n	8011124 <net::net_chksum(void const*, unsigned long)+0x14>
 801112e:	07ca      	lsls	r2, r1, #31
 8011130:	d40a      	bmi.n	8011148 <net::net_chksum(void const*, unsigned long)+0x38>
 8011132:	0c1a      	lsrs	r2, r3, #16
 8011134:	d005      	beq.n	8011142 <net::net_chksum(void const*, unsigned long)+0x32>
 8011136:	fa12 f383 	uxtah	r3, r2, r3
 801113a:	0c1a      	lsrs	r2, r3, #16
 801113c:	bf1c      	itt	ne
 801113e:	b29b      	uxthne	r3, r3
 8011140:	3301      	addne	r3, #1
 8011142:	43db      	mvns	r3, r3
 8011144:	b298      	uxth	r0, r3
 8011146:	4770      	bx	lr
 8011148:	7802      	ldrb	r2, [r0, #0]
 801114a:	0212      	lsls	r2, r2, #8
 801114c:	ba52      	rev16	r2, r2
 801114e:	fa13 f382 	uxtah	r3, r3, r2
 8011152:	e7ee      	b.n	8011132 <net::net_chksum(void const*, unsigned long)+0x22>
 8011154:	b121      	cbz	r1, 8011160 <net::net_chksum(void const*, unsigned long)+0x50>
 8011156:	7803      	ldrb	r3, [r0, #0]
 8011158:	021b      	lsls	r3, r3, #8
 801115a:	ba5b      	rev16	r3, r3
 801115c:	b29b      	uxth	r3, r3
 801115e:	e7f0      	b.n	8011142 <net::net_chksum(void const*, unsigned long)+0x32>
 8011160:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8011164:	4770      	bx	lr
 8011166:	bf00      	nop

08011168 <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 8011168:	4770      	bx	lr
	...

0801116c <net::netif_do_update_globals()>:
 801116c:	4908      	ldr	r1, [pc, #32]	@ (8011190 <net::netif_do_update_globals()+0x24>)
 801116e:	e9d1 3200 	ldrd	r3, r2, [r1]
 8011172:	b410      	push	{r4}
 8011174:	ea63 0402 	orn	r4, r3, r2
 8011178:	43d0      	mvns	r0, r2
 801117a:	60cc      	str	r4, [r1, #12]
 801117c:	4013      	ands	r3, r2
 801117e:	4905      	ldr	r1, [pc, #20]	@ (8011194 <net::netif_do_update_globals()+0x28>)
 8011180:	4a05      	ldr	r2, [pc, #20]	@ (8011198 <net::netif_do_update_globals()+0x2c>)
 8011182:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011186:	6008      	str	r0, [r1, #0]
 8011188:	6013      	str	r3, [r2, #0]
 801118a:	f001 bab7 	b.w	80126fc <net::ip_set_ip()>
 801118e:	bf00      	nop
 8011190:	20002088 	andcs	r2, r0, r8, lsl #1
 8011194:	20002070 	andcs	r2, r0, r0, ror r0
 8011198:	2000206c 	andcs	r2, r0, ip, rrx

0801119c <net::netif_issue_reports()>:
 801119c:	4b04      	ldr	r3, [pc, #16]	@ (80111b0 <net::netif_issue_reports()+0x14>)
 801119e:	7e9a      	ldrb	r2, [r3, #26]
 80111a0:	07d2      	lsls	r2, r2, #31
 80111a2:	d503      	bpl.n	80111ac <net::netif_issue_reports()+0x10>
 80111a4:	681b      	ldr	r3, [r3, #0]
 80111a6:	b10b      	cbz	r3, 80111ac <net::netif_issue_reports()+0x10>
 80111a8:	f7ff bf3c 	b.w	8011024 <net::igmp_report_groups()>
 80111ac:	4770      	bx	lr
 80111ae:	bf00      	nop
 80111b0:	20002088 	andcs	r2, r0, r8, lsl #1

080111b4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
 80111b4:	b570      	push	{r4, r5, r6, lr}
 80111b6:	4e0b      	ldr	r6, [pc, #44]	@ (80111e4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x30>)
 80111b8:	6833      	ldr	r3, [r6, #0]
 80111ba:	4283      	cmp	r3, r0
 80111bc:	4604      	mov	r4, r0
 80111be:	460d      	mov	r5, r1
 80111c0:	d00d      	beq.n	80111de <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x2a>
 80111c2:	600b      	str	r3, [r1, #0]
 80111c4:	f001 fa9a 	bl	80126fc <net::ip_set_ip()>
 80111c8:	6828      	ldr	r0, [r5, #0]
 80111ca:	4621      	mov	r1, r4
 80111cc:	f001 f946 	bl	801245c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
 80111d0:	6034      	str	r4, [r6, #0]
 80111d2:	f7ff ffcb 	bl	801116c <net::netif_do_update_globals()>
 80111d6:	f7ff ffe1 	bl	801119c <net::netif_issue_reports()>
 80111da:	2001      	movs	r0, #1
 80111dc:	bd70      	pop	{r4, r5, r6, pc}
 80111de:	2000      	movs	r0, #0
 80111e0:	e7fc      	b.n	80111dc <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x28>
 80111e2:	bf00      	nop
 80111e4:	20002088 	andcs	r2, r0, r8, lsl #1

080111e8 <net::netif_init()>:
 80111e8:	4b0c      	ldr	r3, [pc, #48]	@ (801121c <net::netif_init()+0x34>)
 80111ea:	7e1a      	ldrb	r2, [r3, #24]
 80111ec:	7dd8      	ldrb	r0, [r3, #23]
 80111ee:	0412      	lsls	r2, r2, #16
 80111f0:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 80111f4:	7e58      	ldrb	r0, [r3, #25]
 80111f6:	3202      	adds	r2, #2
 80111f8:	2100      	movs	r1, #0
 80111fa:	eb02 6200 	add.w	r2, r2, r0, lsl #24
 80111fe:	e9c3 1100 	strd	r1, r1, [r3]
 8011202:	611a      	str	r2, [r3, #16]
 8011204:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8011208:	e9c3 1108 	strd	r1, r1, [r3, #32]
 801120c:	7699      	strb	r1, [r3, #26]
 801120e:	6299      	str	r1, [r3, #40]	@ 0x28
 8011210:	4b03      	ldr	r3, [pc, #12]	@ (8011220 <net::netif_init()+0x38>)
 8011212:	4a04      	ldr	r2, [pc, #16]	@ (8011224 <net::netif_init()+0x3c>)
 8011214:	601a      	str	r2, [r3, #0]
 8011216:	f7f7 b917 	b.w	8008448 <net::arp_init()>
 801121a:	bf00      	nop
 801121c:	20002088 	andcs	r2, r0, r8, lsl #1
 8011220:	20002084 	andcs	r2, r0, r4, lsl #1
 8011224:	08011169 	stmdaeq	r1, {r0, r3, r5, r6, r8, ip}

08011228 <net::netif_set_ipaddr(net::ip_addr)>:
 8011228:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801122a:	4669      	mov	r1, sp
 801122c:	f7ff ffc2 	bl	80111b4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8011230:	b130      	cbz	r0, 8011240 <net::netif_set_ipaddr(net::ip_addr)+0x18>
 8011232:	9b00      	ldr	r3, [sp, #0]
 8011234:	9301      	str	r3, [sp, #4]
 8011236:	4b04      	ldr	r3, [pc, #16]	@ (8011248 <net::netif_set_ipaddr(net::ip_addr)+0x20>)
 8011238:	a901      	add	r1, sp, #4
 801123a:	681b      	ldr	r3, [r3, #0]
 801123c:	2010      	movs	r0, #16
 801123e:	4798      	blx	r3
 8011240:	b005      	add	sp, #20
 8011242:	f85d fb04 	ldr.w	pc, [sp], #4
 8011246:	bf00      	nop
 8011248:	20002084 	andcs	r2, r0, r4, lsl #1

0801124c <net::netif_set_netmask(net::ip_addr)>:
 801124c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801124e:	4b07      	ldr	r3, [pc, #28]	@ (801126c <net::netif_set_netmask(net::ip_addr)+0x20>)
 8011250:	685c      	ldr	r4, [r3, #4]
 8011252:	42a0      	cmp	r0, r4
 8011254:	d008      	beq.n	8011268 <net::netif_set_netmask(net::ip_addr)+0x1c>
 8011256:	6058      	str	r0, [r3, #4]
 8011258:	f7ff ff88 	bl	801116c <net::netif_do_update_globals()>
 801125c:	4b04      	ldr	r3, [pc, #16]	@ (8011270 <net::netif_set_netmask(net::ip_addr)+0x24>)
 801125e:	9402      	str	r4, [sp, #8]
 8011260:	681b      	ldr	r3, [r3, #0]
 8011262:	a901      	add	r1, sp, #4
 8011264:	2040      	movs	r0, #64	@ 0x40
 8011266:	4798      	blx	r3
 8011268:	b004      	add	sp, #16
 801126a:	bd10      	pop	{r4, pc}
 801126c:	20002088 	andcs	r2, r0, r8, lsl #1
 8011270:	20002084 	andcs	r2, r0, r4, lsl #1

08011274 <net::netif_set_gw(net::ip_addr)>:
 8011274:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011276:	4a07      	ldr	r2, [pc, #28]	@ (8011294 <net::netif_set_gw(net::ip_addr)+0x20>)
 8011278:	6893      	ldr	r3, [r2, #8]
 801127a:	4298      	cmp	r0, r3
 801127c:	d006      	beq.n	801128c <net::netif_set_gw(net::ip_addr)+0x18>
 801127e:	9303      	str	r3, [sp, #12]
 8011280:	4b05      	ldr	r3, [pc, #20]	@ (8011298 <net::netif_set_gw(net::ip_addr)+0x24>)
 8011282:	6090      	str	r0, [r2, #8]
 8011284:	681b      	ldr	r3, [r3, #0]
 8011286:	a901      	add	r1, sp, #4
 8011288:	2020      	movs	r0, #32
 801128a:	4798      	blx	r3
 801128c:	b005      	add	sp, #20
 801128e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011292:	bf00      	nop
 8011294:	20002088 	andcs	r2, r0, r8, lsl #1
 8011298:	20002084 	andcs	r2, r0, r4, lsl #1

0801129c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
 801129c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80112a0:	4688      	mov	r8, r1
 80112a2:	b085      	sub	sp, #20
 80112a4:	4617      	mov	r7, r2
 80112a6:	4605      	mov	r5, r0
 80112a8:	b348      	cbz	r0, 80112fe <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x62>
 80112aa:	2400      	movs	r4, #0
 80112ac:	4e1c      	ldr	r6, [pc, #112]	@ (8011320 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>)
 80112ae:	f8d6 9004 	ldr.w	r9, [r6, #4]
 80112b2:	45c8      	cmp	r8, r9
 80112b4:	d007      	beq.n	80112c6 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x2a>
 80112b6:	f8c6 8004 	str.w	r8, [r6, #4]
 80112ba:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
 80112be:	f7ff ff55 	bl	801116c <net::netif_do_update_globals()>
 80112c2:	f8cd 9008 	str.w	r9, [sp, #8]
 80112c6:	68b3      	ldr	r3, [r6, #8]
 80112c8:	429f      	cmp	r7, r3
 80112ca:	bf1e      	ittt	ne
 80112cc:	60b7      	strne	r7, [r6, #8]
 80112ce:	f044 0420 	orrne.w	r4, r4, #32
 80112d2:	9303      	strne	r3, [sp, #12]
 80112d4:	b30d      	cbz	r5, 801131a <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x7e>
 80112d6:	4669      	mov	r1, sp
 80112d8:	4628      	mov	r0, r5
 80112da:	f7ff ff6b 	bl	80111b4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 80112de:	b1b8      	cbz	r0, 8011310 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x74>
 80112e0:	9b00      	ldr	r3, [sp, #0]
 80112e2:	9301      	str	r3, [sp, #4]
 80112e4:	f044 0410 	orr.w	r4, r4, #16
 80112e8:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 80112ec:	b995      	cbnz	r5, 8011314 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x78>
 80112ee:	4b0d      	ldr	r3, [pc, #52]	@ (8011324 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x88>)
 80112f0:	a901      	add	r1, sp, #4
 80112f2:	681b      	ldr	r3, [r3, #0]
 80112f4:	4620      	mov	r0, r4
 80112f6:	4798      	blx	r3
 80112f8:	b005      	add	sp, #20
 80112fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112fe:	4669      	mov	r1, sp
 8011300:	f7ff ff58 	bl	80111b4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8011304:	2800      	cmp	r0, #0
 8011306:	d0d0      	beq.n	80112aa <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe>
 8011308:	9b00      	ldr	r3, [sp, #0]
 801130a:	9301      	str	r3, [sp, #4]
 801130c:	2410      	movs	r4, #16
 801130e:	e7cd      	b.n	80112ac <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x10>
 8011310:	2c00      	cmp	r4, #0
 8011312:	d1e9      	bne.n	80112e8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 8011314:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 8011318:	e7e9      	b.n	80112ee <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x52>
 801131a:	2c00      	cmp	r4, #0
 801131c:	d1e4      	bne.n	80112e8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 801131e:	e7eb      	b.n	80112f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
 8011320:	20002088 	andcs	r2, r0, r8, lsl #1
 8011324:	20002084 	andcs	r2, r0, r4, lsl #1

08011328 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
 8011328:	4b01      	ldr	r3, [pc, #4]	@ (8011330 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0x8>)
 801132a:	6018      	str	r0, [r3, #0]
 801132c:	4770      	bx	lr
 801132e:	bf00      	nop
 8011330:	20002084 	andcs	r2, r0, r4, lsl #1

08011334 <net::netif_set_link_down()>:
 8011334:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011336:	4a0d      	ldr	r2, [pc, #52]	@ (801136c <net::netif_set_link_down()+0x38>)
 8011338:	7e93      	ldrb	r3, [r2, #26]
 801133a:	07d9      	lsls	r1, r3, #31
 801133c:	d512      	bpl.n	8011364 <net::netif_set_link_down()+0x30>
 801133e:	f023 0301 	bic.w	r3, r3, #1
 8011342:	7693      	strb	r3, [r2, #26]
 8011344:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8011346:	b11b      	cbz	r3, 8011350 <net::netif_set_link_down()+0x1c>
 8011348:	685b      	ldr	r3, [r3, #4]
 801134a:	b10b      	cbz	r3, 8011350 <net::netif_set_link_down()+0x1c>
 801134c:	f7ff f9f4 	bl	8010738 <net::autoip_stop()>
 8011350:	f001 f822 	bl	8012398 <net::acd_network_changed_link_down()>
 8011354:	2300      	movs	r3, #0
 8011356:	f88d 3004 	strb.w	r3, [sp, #4]
 801135a:	4b05      	ldr	r3, [pc, #20]	@ (8011370 <net::netif_set_link_down()+0x3c>)
 801135c:	a901      	add	r1, sp, #4
 801135e:	681b      	ldr	r3, [r3, #0]
 8011360:	2004      	movs	r0, #4
 8011362:	4798      	blx	r3
 8011364:	b005      	add	sp, #20
 8011366:	f85d fb04 	ldr.w	pc, [sp], #4
 801136a:	bf00      	nop
 801136c:	20002088 	andcs	r2, r0, r8, lsl #1
 8011370:	20002084 	andcs	r2, r0, r4, lsl #1

08011374 <net::_bswap32(t_tcp*)>:
 8011374:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
 8011378:	079a      	lsls	r2, r3, #30
 801137a:	bf0b      	itete	eq
 801137c:	f8d0 302a 	ldreq.w	r3, [r0, #42]	@ 0x2a
 8011380:	f8d0 302a 	ldrne.w	r3, [r0, #42]	@ 0x2a
 8011384:	ba1b      	reveq	r3, r3
 8011386:	ba1b      	revne	r3, r3
 8011388:	bf0c      	ite	eq
 801138a:	f8c0 302a 	streq.w	r3, [r0, #42]	@ 0x2a
 801138e:	f8c0 302a 	strne.w	r3, [r0, #42]	@ 0x2a
 8011392:	f100 0326 	add.w	r3, r0, #38	@ 0x26
 8011396:	079b      	lsls	r3, r3, #30
 8011398:	bf0b      	itete	eq
 801139a:	f8d0 3026 	ldreq.w	r3, [r0, #38]	@ 0x26
 801139e:	f8d0 3026 	ldrne.w	r3, [r0, #38]	@ 0x26
 80113a2:	ba1b      	reveq	r3, r3
 80113a4:	ba1b      	revne	r3, r3
 80113a6:	bf0c      	ite	eq
 80113a8:	f8c0 3026 	streq.w	r3, [r0, #38]	@ 0x26
 80113ac:	f8c0 3026 	strne.w	r3, [r0, #38]	@ 0x26
 80113b0:	4770      	bx	lr
 80113b2:	bf00      	nop

080113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>:
 80113b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113b8:	7a0b      	ldrb	r3, [r1, #8]
 80113ba:	8f86      	ldrh	r6, [r0, #60]	@ 0x3c
 80113bc:	4c52      	ldr	r4, [pc, #328]	@ (8011508 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 80113be:	f003 0302 	and.w	r3, r3, #2
 80113c2:	2b00      	cmp	r3, #0
 80113c4:	bf14      	ite	ne
 80113c6:	2324      	movne	r3, #36	@ 0x24
 80113c8:	2320      	moveq	r3, #32
 80113ca:	441e      	add	r6, r3
 80113cc:	b084      	sub	sp, #16
 80113ce:	4605      	mov	r5, r0
 80113d0:	bf14      	ite	ne
 80113d2:	f04f 0e90 	movne.w	lr, #144	@ 0x90
 80113d6:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 80113da:	f100 030c 	add.w	r3, r0, #12
 80113de:	f100 0c12 	add.w	ip, r0, #18
 80113e2:	4622      	mov	r2, r4
 80113e4:	f813 0b01 	ldrb.w	r0, [r3], #1
 80113e8:	f802 0b01 	strb.w	r0, [r2], #1
 80113ec:	459c      	cmp	ip, r3
 80113ee:	d1f9      	bne.n	80113e4 <net::send_package(net::tcb const*, net::SendInfo const&)+0x30>
 80113f0:	b2b7      	uxth	r7, r6
 80113f2:	4a46      	ldr	r2, [pc, #280]	@ (801150c <net::send_package(net::tcb const*, net::SendInfo const&)+0x158>)
 80113f4:	f107 0314 	add.w	r3, r7, #20
 80113f8:	ba5b      	rev16	r3, r3
 80113fa:	8223      	strh	r3, [r4, #16]
 80113fc:	8813      	ldrh	r3, [r2, #0]
 80113fe:	8263      	strh	r3, [r4, #18]
 8011400:	3301      	adds	r3, #1
 8011402:	8013      	strh	r3, [r2, #0]
 8011404:	682b      	ldr	r3, [r5, #0]
 8011406:	f8c4 301a 	str.w	r3, [r4, #26]
 801140a:	686b      	ldr	r3, [r5, #4]
 801140c:	f8c4 301e 	str.w	r3, [r4, #30]
 8011410:	2300      	movs	r3, #0
 8011412:	8323      	strh	r3, [r4, #24]
 8011414:	892a      	ldrh	r2, [r5, #8]
 8011416:	8462      	strh	r2, [r4, #34]	@ 0x22
 8011418:	680a      	ldr	r2, [r1, #0]
 801141a:	8968      	ldrh	r0, [r5, #10]
 801141c:	f8c4 2026 	str.w	r2, [r4, #38]	@ 0x26
 8011420:	684a      	ldr	r2, [r1, #4]
 8011422:	84a0      	strh	r0, [r4, #36]	@ 0x24
 8011424:	f884 e02e 	strb.w	lr, [r4, #46]	@ 0x2e
 8011428:	f8c4 202a 	str.w	r2, [r4, #42]	@ 0x2a
 801142c:	7a0a      	ldrb	r2, [r1, #8]
 801142e:	f884 202f 	strb.w	r2, [r4, #47]	@ 0x2f
 8011432:	f8b5 2044 	ldrh.w	r2, [r5, #68]	@ 0x44
 8011436:	8622      	strh	r2, [r4, #48]	@ 0x30
 8011438:	8c2a      	ldrh	r2, [r5, #32]
 801143a:	86a2      	strh	r2, [r4, #52]	@ 0x34
 801143c:	8663      	strh	r3, [r4, #50]	@ 0x32
 801143e:	7a0b      	ldrb	r3, [r1, #8]
 8011440:	079b      	lsls	r3, r3, #30
 8011442:	bf41      	itttt	mi
 8011444:	f240 4302 	movwmi	r3, #1026	@ 0x402
 8011448:	86e3      	strhmi	r3, [r4, #54]	@ 0x36
 801144a:	f648 4305 	movwmi	r3, #35845	@ 0x8c05
 801144e:	8723      	strhmi	r3, [r4, #56]	@ 0x38
 8011450:	4b2f      	ldr	r3, [pc, #188]	@ (8011510 <net::send_package(net::tcb const*, net::SendInfo const&)+0x15c>)
 8011452:	bf48      	it	mi
 8011454:	4a2f      	ldrmi	r2, [pc, #188]	@ (8011514 <net::send_package(net::tcb const*, net::SendInfo const&)+0x160>)
 8011456:	681b      	ldr	r3, [r3, #0]
 8011458:	bf58      	it	pl
 801145a:	4a2f      	ldrpl	r2, [pc, #188]	@ (8011518 <net::send_package(net::tcb const*, net::SendInfo const&)+0x164>)
 801145c:	ba1b      	rev	r3, r3
 801145e:	6053      	str	r3, [r2, #4]
 8011460:	4b2e      	ldr	r3, [pc, #184]	@ (801151c <net::send_package(net::tcb const*, net::SendInfo const&)+0x168>)
 8011462:	6013      	str	r3, [r2, #0]
 8011464:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8011466:	6093      	str	r3, [r2, #8]
 8011468:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 801146a:	b18b      	cbz	r3, 8011490 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 801146c:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 801146e:	b179      	cbz	r1, 8011490 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 8011470:	781b      	ldrb	r3, [r3, #0]
 8011472:	7313      	strb	r3, [r2, #12]
 8011474:	8fab      	ldrh	r3, [r5, #60]	@ 0x3c
 8011476:	2b01      	cmp	r3, #1
 8011478:	f102 020d 	add.w	r2, r2, #13
 801147c:	d908      	bls.n	8011490 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 801147e:	2301      	movs	r3, #1
 8011480:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 8011482:	5cc9      	ldrb	r1, [r1, r3]
 8011484:	f802 1b01 	strb.w	r1, [r2], #1
 8011488:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 801148a:	3301      	adds	r3, #1
 801148c:	4299      	cmp	r1, r3
 801148e:	dcf7      	bgt.n	8011480 <net::send_package(net::tcb const*, net::SendInfo const&)+0xcc>
 8011490:	8c63      	ldrh	r3, [r4, #34]	@ 0x22
 8011492:	481d      	ldr	r0, [pc, #116]	@ (8011508 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8011494:	ba5b      	rev16	r3, r3
 8011496:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011498:	8ca3      	ldrh	r3, [r4, #36]	@ 0x24
 801149a:	ba5b      	rev16	r3, r3
 801149c:	84a3      	strh	r3, [r4, #36]	@ 0x24
 801149e:	f7ff ff69 	bl	8011374 <net::_bswap32(t_tcp*)>
 80114a2:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 80114a4:	ba5b      	rev16	r3, r3
 80114a6:	8623      	strh	r3, [r4, #48]	@ 0x30
 80114a8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80114aa:	f100 0816 	add.w	r8, r0, #22
 80114ae:	ba5b      	rev16	r3, r3
 80114b0:	86a3      	strh	r3, [r4, #52]	@ 0x34
 80114b2:	4642      	mov	r2, r8
 80114b4:	ab01      	add	r3, sp, #4
 80114b6:	f852 1b04 	ldr.w	r1, [r2], #4
 80114ba:	f843 1b04 	str.w	r1, [r3], #4
 80114be:	a904      	add	r1, sp, #16
 80114c0:	428b      	cmp	r3, r1
 80114c2:	d1f8      	bne.n	80114b6 <net::send_package(net::tcb const*, net::SendInfo const&)+0x102>
 80114c4:	682b      	ldr	r3, [r5, #0]
 80114c6:	f8c4 3016 	str.w	r3, [r4, #22]
 80114ca:	686b      	ldr	r3, [r5, #4]
 80114cc:	f8c4 301a 	str.w	r3, [r4, #26]
 80114d0:	b2b1      	uxth	r1, r6
 80114d2:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80114d6:	4812      	ldr	r0, [pc, #72]	@ (8011520 <net::send_package(net::tcb const*, net::SendInfo const&)+0x16c>)
 80114d8:	83e3      	strh	r3, [r4, #30]
 80114da:	ba7f      	rev16	r7, r7
 80114dc:	310c      	adds	r1, #12
 80114de:	8427      	strh	r7, [r4, #32]
 80114e0:	f7ff fe16 	bl	8011110 <net::net_chksum(void const*, unsigned long)>
 80114e4:	ab01      	add	r3, sp, #4
 80114e6:	4605      	mov	r5, r0
 80114e8:	f853 2b04 	ldr.w	r2, [r3], #4
 80114ec:	f848 2b04 	str.w	r2, [r8], #4
 80114f0:	aa04      	add	r2, sp, #16
 80114f2:	4293      	cmp	r3, r2
 80114f4:	d1f8      	bne.n	80114e8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x134>
 80114f6:	4804      	ldr	r0, [pc, #16]	@ (8011508 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 80114f8:	8665      	strh	r5, [r4, #50]	@ 0x32
 80114fa:	f106 0122 	add.w	r1, r6, #34	@ 0x22
 80114fe:	b004      	add	sp, #16
 8011500:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011504:	f000 be28 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 8011508:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 801150c:	1000899c 	mulne	r0, ip, r9
 8011510:	20009ae8 	andcs	r9, r0, r8, ror #21
 8011514:	100083ea 	andne	r8, r0, sl, ror #7
 8011518:	100083e6 	andne	r8, r0, r6, ror #7
 801151c:	0a080101 	beq	8211928 <_sidata+0x1f6bec>
 8011520:	100083c6 	andne	r8, r0, r6, asr #7

08011524 <net::send_reset(t_tcp*, net::tcb const*)>:
 8011524:	f890 202f 	ldrb.w	r2, [r0, #47]	@ 0x2f
 8011528:	0753      	lsls	r3, r2, #29
 801152a:	d42d      	bmi.n	8011588 <net::send_reset(t_tcp*, net::tcb const*)+0x64>
 801152c:	b500      	push	{lr}
 801152e:	b085      	sub	sp, #20
 8011530:	4603      	mov	r3, r0
 8011532:	4608      	mov	r0, r1
 8011534:	2104      	movs	r1, #4
 8011536:	f88d 100c 	strb.w	r1, [sp, #12]
 801153a:	f012 0110 	ands.w	r1, r2, #16
 801153e:	d119      	bne.n	8011574 <net::send_reset(t_tcp*, net::tcb const*)+0x50>
 8011540:	f04f 0c14 	mov.w	ip, #20
 8011544:	9101      	str	r1, [sp, #4]
 8011546:	f88d c00c 	strb.w	ip, [sp, #12]
 801154a:	f3c2 0140 	ubfx	r1, r2, #1, #1
 801154e:	07d2      	lsls	r2, r2, #31
 8011550:	f103 0226 	add.w	r2, r3, #38	@ 0x26
 8011554:	bf48      	it	mi
 8011556:	3101      	addmi	r1, #1
 8011558:	0792      	lsls	r2, r2, #30
 801155a:	bf0c      	ite	eq
 801155c:	f8d3 3026 	ldreq.w	r3, [r3, #38]	@ 0x26
 8011560:	f8d3 3026 	ldrne.w	r3, [r3, #38]	@ 0x26
 8011564:	440b      	add	r3, r1
 8011566:	a901      	add	r1, sp, #4
 8011568:	9302      	str	r3, [sp, #8]
 801156a:	f7ff ff23 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 801156e:	b005      	add	sp, #20
 8011570:	f85d fb04 	ldr.w	pc, [sp], #4
 8011574:	f103 012a 	add.w	r1, r3, #42	@ 0x2a
 8011578:	0789      	lsls	r1, r1, #30
 801157a:	bf0c      	ite	eq
 801157c:	f8d3 102a 	ldreq.w	r1, [r3, #42]	@ 0x2a
 8011580:	f8d3 102a 	ldrne.w	r1, [r3, #42]	@ 0x2a
 8011584:	9101      	str	r1, [sp, #4]
 8011586:	e7e0      	b.n	801154a <net::send_reset(t_tcp*, net::tcb const*)+0x26>
 8011588:	4770      	bx	lr
 801158a:	bf00      	nop

0801158c <net::scan_options(t_tcp*, net::tcb*, long)>:
 801158c:	f100 0322 	add.w	r3, r0, #34	@ 0x22
 8011590:	441a      	add	r2, r3
 8011592:	f100 0c3c 	add.w	ip, r0, #60	@ 0x3c
 8011596:	4562      	cmp	r2, ip
 8011598:	d349      	bcc.n	801162e <net::scan_options(t_tcp*, net::tcb*, long)+0xa2>
 801159a:	b530      	push	{r4, r5, lr}
 801159c:	f100 0336 	add.w	r3, r0, #54	@ 0x36
 80115a0:	f893 c000 	ldrb.w	ip, [r3]
 80115a4:	f1bc 0f08 	cmp.w	ip, #8
 80115a8:	d820      	bhi.n	80115ec <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 80115aa:	e8df f00c 	tbb	[pc, ip]
 80115ae:	1f052726 	svcne	0x00052726
 80115b2:	1f1f1f1f 	svcne	0x001f1f1f
 80115b6:	f8930029 			@ <UNDEFINED> instruction: 0xf8930029
 80115ba:	c001      	stmia	r0!, {r0}
 80115bc:	f1bc 0f04 	cmp.w	ip, #4
 80115c0:	d116      	bne.n	80115f0 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80115c2:	f103 0e04 	add.w	lr, r3, #4
 80115c6:	4572      	cmp	r2, lr
 80115c8:	d312      	bcc.n	80115f0 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80115ca:	f8b3 c002 	ldrh.w	ip, [r3, #2]
 80115ce:	fa9c fc9c 	rev16.w	ip, ip
 80115d2:	fa1f fc8c 	uxth.w	ip, ip
 80115d6:	f10c 0c14 	add.w	ip, ip, #20
 80115da:	f240 5e8c 	movw	lr, #1420	@ 0x58c
 80115de:	45f4      	cmp	ip, lr
 80115e0:	bfa8      	it	ge
 80115e2:	46f4      	movge	ip, lr
 80115e4:	f1ac 0c14 	sub.w	ip, ip, #20
 80115e8:	f8a1 c034 	strh.w	ip, [r1, #52]	@ 0x34
 80115ec:	f893 c001 	ldrb.w	ip, [r3, #1]
 80115f0:	4463      	add	r3, ip
 80115f2:	f103 0c06 	add.w	ip, r3, #6
 80115f6:	4562      	cmp	r2, ip
 80115f8:	d2d2      	bcs.n	80115a0 <net::scan_options(t_tcp*, net::tcb*, long)+0x14>
 80115fa:	bd30      	pop	{r4, r5, pc}
 80115fc:	3301      	adds	r3, #1
 80115fe:	e7f8      	b.n	80115f2 <net::scan_options(t_tcp*, net::tcb*, long)+0x66>
 8011600:	f893 c001 	ldrb.w	ip, [r3, #1]
 8011604:	f1bc 0f0a 	cmp.w	ip, #10
 8011608:	d1f2      	bne.n	80115f0 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801160a:	f103 0e0a 	add.w	lr, r3, #10
 801160e:	4572      	cmp	r2, lr
 8011610:	d3ee      	bcc.n	80115f0 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8011612:	1c9c      	adds	r4, r3, #2
 8011614:	f890 e02f 	ldrb.w	lr, [r0, #47]	@ 0x2f
 8011618:	07a4      	lsls	r4, r4, #30
 801161a:	bf0c      	ite	eq
 801161c:	f8d3 4002 	ldreq.w	r4, [r3, #2]
 8011620:	f8d3 4002 	ldrne.w	r4, [r3, #2]
 8011624:	f01e 0f02 	tst.w	lr, #2
 8011628:	d002      	beq.n	8011630 <net::scan_options(t_tcp*, net::tcb*, long)+0xa4>
 801162a:	630c      	str	r4, [r1, #48]	@ 0x30
 801162c:	e7de      	b.n	80115ec <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 801162e:	4770      	bx	lr
 8011630:	6b0d      	ldr	r5, [r1, #48]	@ 0x30
 8011632:	fa95 fe85 	rev.w	lr, r5
 8011636:	ba25      	rev	r5, r4
 8011638:	4575      	cmp	r5, lr
 801163a:	d9d9      	bls.n	80115f0 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801163c:	e7f5      	b.n	801162a <net::scan_options(t_tcp*, net::tcb*, long)+0x9e>
 801163e:	bf00      	nop

08011640 <net::tcp_shutdown()>:
 8011640:	4770      	bx	lr
 8011642:	bf00      	nop

08011644 <net::tcp_begin(unsigned short)>:
 8011644:	4b16      	ldr	r3, [pc, #88]	@ (80116a0 <net::tcp_begin(unsigned short)+0x5c>)
 8011646:	f8b3 1d04 	ldrh.w	r1, [r3, #3332]	@ 0xd04
 801164a:	4281      	cmp	r1, r0
 801164c:	d025      	beq.n	801169a <net::tcp_begin(unsigned short)+0x56>
 801164e:	bb09      	cbnz	r1, 8011694 <net::tcp_begin(unsigned short)+0x50>
 8011650:	b530      	push	{r4, r5, lr}
 8011652:	4d14      	ldr	r5, [pc, #80]	@ (80116a4 <net::tcp_begin(unsigned short)+0x60>)
 8011654:	f8a3 0d04 	strh.w	r0, [r3, #3332]	@ 0xd04
 8011658:	f103 0250 	add.w	r2, r3, #80	@ 0x50
 801165c:	f503 7c0c 	add.w	ip, r3, #560	@ 0x230
 8011660:	f640 3418 	movw	r4, #2840	@ 0xb18
 8011664:	f04f 0e01 	mov.w	lr, #1
 8011668:	f1a2 0350 	sub.w	r3, r2, #80	@ 0x50
 801166c:	f843 1b04 	str.w	r1, [r3], #4
 8011670:	4293      	cmp	r3, r2
 8011672:	d1fb      	bne.n	801166c <net::tcp_begin(unsigned short)+0x28>
 8011674:	682b      	ldr	r3, [r5, #0]
 8011676:	f822 0c48 	strh.w	r0, [r2, #-72]
 801167a:	f822 4c0c 	strh.w	r4, [r2, #-12]
 801167e:	f802 ec04 	strb.w	lr, [r2, #-4]
 8011682:	e942 330f 	strd	r3, r3, [r2, #-60]	@ 0x3c
 8011686:	e942 330a 	strd	r3, r3, [r2, #-40]	@ 0x28
 801168a:	3250      	adds	r2, #80	@ 0x50
 801168c:	4562      	cmp	r2, ip
 801168e:	d1eb      	bne.n	8011668 <net::tcp_begin(unsigned short)+0x24>
 8011690:	2000      	movs	r0, #0
 8011692:	bd30      	pop	{r4, r5, pc}
 8011694:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011698:	4770      	bx	lr
 801169a:	2000      	movs	r0, #0
 801169c:	4770      	bx	lr
 801169e:	bf00      	nop
 80116a0:	100089a0 	andne	r8, r0, r0, lsr #19
 80116a4:	20009ae8 	andcs	r9, r0, r8, ror #21

080116a8 <net::tcp_read(long, unsigned char const**, unsigned long&)>:
 80116a8:	b570      	push	{r4, r5, r6, lr}
 80116aa:	4b1a      	ldr	r3, [pc, #104]	@ (8011714 <net::tcp_read(long, unsigned char const**, unsigned long&)+0x6c>)
 80116ac:	f640 5408 	movw	r4, #3336	@ 0xd08
 80116b0:	fb04 f000 	mul.w	r0, r4, r0
 80116b4:	eb03 0c00 	add.w	ip, r3, r0
 80116b8:	f8bc e1e2 	ldrh.w	lr, [ip, #482]	@ 0x1e2
 80116bc:	f8bc 41e0 	ldrh.w	r4, [ip, #480]	@ 0x1e0
 80116c0:	4574      	cmp	r4, lr
 80116c2:	bf08      	it	eq
 80116c4:	2000      	moveq	r0, #0
 80116c6:	d100      	bne.n	80116ca <net::tcp_read(long, unsigned char const**, unsigned long&)+0x22>
 80116c8:	bd70      	pop	{r4, r5, r6, pc}
 80116ca:	f44f 64b2 	mov.w	r4, #1424	@ 0x590
 80116ce:	fb04 fe0e 	mul.w	lr, r4, lr
 80116d2:	eb0e 0500 	add.w	r5, lr, r0
 80116d6:	441d      	add	r5, r3
 80116d8:	f500 76f2 	add.w	r6, r0, #484	@ 0x1e4
 80116dc:	f8b5 4772 	ldrh.w	r4, [r5, #1906]	@ 0x772
 80116e0:	6014      	str	r4, [r2, #0]
 80116e2:	4476      	add	r6, lr
 80116e4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80116e8:	441e      	add	r6, r3
 80116ea:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 80116ee:	600e      	str	r6, [r1, #0]
 80116f0:	4403      	add	r3, r0
 80116f2:	f8bc 21e2 	ldrh.w	r2, [ip, #482]	@ 0x1e2
 80116f6:	f8b3 1044 	ldrh.w	r1, [r3, #68]	@ 0x44
 80116fa:	f8b5 0770 	ldrh.w	r0, [r5, #1904]	@ 0x770
 80116fe:	3201      	adds	r2, #1
 8011700:	f201 518c 	addw	r1, r1, #1420	@ 0x58c
 8011704:	f002 0201 	and.w	r2, r2, #1
 8011708:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 801170c:	f8ac 21e2 	strh.w	r2, [ip, #482]	@ 0x1e2
 8011710:	bd70      	pop	{r4, r5, r6, pc}
 8011712:	bf00      	nop
 8011714:	100089a0 	andne	r8, r0, r0, lsr #19

08011718 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
 8011718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801171c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011720:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 80117b4 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x9c>
 8011724:	f640 5408 	movw	r4, #3336	@ 0xd08
 8011728:	011b      	lsls	r3, r3, #4
 801172a:	fb04 3700 	mla	r7, r4, r0, r3
 801172e:	b085      	sub	sp, #20
 8011730:	eb08 0907 	add.w	r9, r8, r7
 8011734:	2a00      	cmp	r2, #0
 8011736:	d038      	beq.n	80117aa <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 8011738:	f107 0b10 	add.w	fp, r7, #16
 801173c:	468a      	mov	sl, r1
 801173e:	4616      	mov	r6, r2
 8011740:	44c3      	add	fp, r8
 8011742:	e01e      	b.n	8011782 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 8011744:	f8c5 a038 	str.w	sl, [r5, #56]	@ 0x38
 8011748:	87ac      	strh	r4, [r5, #60]	@ 0x3c
 801174a:	f8db 3008 	ldr.w	r3, [fp, #8]
 801174e:	f8db 2030 	ldr.w	r2, [fp, #48]	@ 0x30
 8011752:	4566      	cmp	r6, ip
 8011754:	bf8c      	ite	hi
 8011756:	f04f 0c10 	movhi.w	ip, #16
 801175a:	f04f 0c18 	movls.w	ip, #24
 801175e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011762:	f88d c00c 	strb.w	ip, [sp, #12]
 8011766:	f7ff fe25 	bl	80113b4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 801176a:	e9d5 2306 	ldrd	r2, r3, [r5, #24]
 801176e:	2100      	movs	r1, #0
 8011770:	4422      	add	r2, r4
 8011772:	1b1b      	subs	r3, r3, r4
 8011774:	1b36      	subs	r6, r6, r4
 8011776:	e9c5 2306 	strd	r2, r3, [r5, #24]
 801177a:	63a9      	str	r1, [r5, #56]	@ 0x38
 801177c:	87a9      	strh	r1, [r5, #60]	@ 0x3c
 801177e:	44a2      	add	sl, r4
 8011780:	d013      	beq.n	80117aa <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 8011782:	eb08 0507 	add.w	r5, r8, r7
 8011786:	f240 548c 	movw	r4, #1420	@ 0x58c
 801178a:	42b4      	cmp	r4, r6
 801178c:	69eb      	ldr	r3, [r5, #28]
 801178e:	bf28      	it	cs
 8011790:	4634      	movcs	r4, r6
 8011792:	429c      	cmp	r4, r3
 8011794:	f240 5c8b 	movw	ip, #1419	@ 0x58b
 8011798:	a901      	add	r1, sp, #4
 801179a:	4648      	mov	r0, r9
 801179c:	d9d2      	bls.n	8011744 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x2c>
 801179e:	4804      	ldr	r0, [pc, #16]	@ (80117b0 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x98>)
 80117a0:	f002 fed0 	bl	8014544 <console_error>
 80117a4:	1b36      	subs	r6, r6, r4
 80117a6:	44a2      	add	sl, r4
 80117a8:	d1eb      	bne.n	8011782 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 80117aa:	b005      	add	sp, #20
 80117ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117b0:	08018358 	stmdaeq	r1, {r3, r4, r6, r8, r9, pc}
 80117b4:	100089a0 	andne	r8, r0, r0, lsr #19

080117b8 <net::udp_set_ip()>:
 80117b8:	4a02      	ldr	r2, [pc, #8]	@ (80117c4 <net::udp_set_ip()+0xc>)
 80117ba:	4b03      	ldr	r3, [pc, #12]	@ (80117c8 <net::udp_set_ip()+0x10>)
 80117bc:	6812      	ldr	r2, [r2, #0]
 80117be:	f8c3 201a 	str.w	r2, [r3, #26]
 80117c2:	4770      	bx	lr
 80117c4:	20002088 	andcs	r2, r0, r8, lsl #1
 80117c8:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4

080117cc <net::udp_begin(unsigned short)>:
 80117cc:	4a08      	ldr	r2, [pc, #32]	@ (80117f0 <net::udp_begin(unsigned short)+0x24>)
 80117ce:	4601      	mov	r1, r0
 80117d0:	2000      	movs	r0, #0
 80117d2:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80117d6:	428b      	cmp	r3, r1
 80117d8:	d005      	beq.n	80117e6 <net::udp_begin(unsigned short)+0x1a>
 80117da:	b12b      	cbz	r3, 80117e8 <net::udp_begin(unsigned short)+0x1c>
 80117dc:	3001      	adds	r0, #1
 80117de:	2808      	cmp	r0, #8
 80117e0:	d1f7      	bne.n	80117d2 <net::udp_begin(unsigned short)+0x6>
 80117e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80117e6:	4770      	bx	lr
 80117e8:	4b02      	ldr	r3, [pc, #8]	@ (80117f4 <net::udp_begin(unsigned short)+0x28>)
 80117ea:	f823 1010 	strh.w	r1, [r3, r0, lsl #1]
 80117ee:	4770      	bx	lr
 80117f0:	1000cafe 	strdne	ip, [r0], -lr
 80117f4:	1000cb00 	andne	ip, r0, r0, lsl #22

080117f8 <net::udp_end(unsigned short)>:
 80117f8:	4a0d      	ldr	r2, [pc, #52]	@ (8011830 <net::udp_end(unsigned short)+0x38>)
 80117fa:	b508      	push	{r3, lr}
 80117fc:	2300      	movs	r3, #0
 80117fe:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8011802:	4281      	cmp	r1, r0
 8011804:	d008      	beq.n	8011818 <net::udp_end(unsigned short)+0x20>
 8011806:	3301      	adds	r3, #1
 8011808:	2b08      	cmp	r3, #8
 801180a:	d1f8      	bne.n	80117fe <net::udp_end(unsigned short)+0x6>
 801180c:	4809      	ldr	r0, [pc, #36]	@ (8011834 <net::udp_end(unsigned short)+0x3c>)
 801180e:	f002 fe99 	bl	8014544 <console_error>
 8011812:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011816:	bd08      	pop	{r3, pc}
 8011818:	4a07      	ldr	r2, [pc, #28]	@ (8011838 <net::udp_end(unsigned short)+0x40>)
 801181a:	4908      	ldr	r1, [pc, #32]	@ (801183c <net::udp_end(unsigned short)+0x44>)
 801181c:	f240 50cc 	movw	r0, #1484	@ 0x5cc
 8011820:	fb00 2203 	mla	r2, r0, r3, r2
 8011824:	2000      	movs	r0, #0
 8011826:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
 801182a:	6050      	str	r0, [r2, #4]
 801182c:	bd08      	pop	{r3, pc}
 801182e:	bf00      	nop
 8011830:	1000cafe 	strdne	ip, [r0], -lr
 8011834:	08018388 	stmdaeq	r1, {r3, r7, r8, r9, pc}
 8011838:	10009ca0 	andne	r9, r0, r0, lsr #25
 801183c:	1000cb00 	andne	ip, r0, r0, lsl #22

08011840 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>:
 8011840:	b510      	push	{r4, lr}
 8011842:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 8011846:	4c0c      	ldr	r4, [pc, #48]	@ (8011878 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x38>)
 8011848:	fb0c fc00 	mul.w	ip, ip, r0
 801184c:	eb04 0e0c 	add.w	lr, r4, ip
 8011850:	f8de 0004 	ldr.w	r0, [lr, #4]
 8011854:	b900      	cbnz	r0, 8011858 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x18>
 8011856:	bd10      	pop	{r4, pc}
 8011858:	f10c 000a 	add.w	r0, ip, #10
 801185c:	4420      	add	r0, r4
 801185e:	6008      	str	r0, [r1, #0]
 8011860:	f854 100c 	ldr.w	r1, [r4, ip]
 8011864:	6011      	str	r1, [r2, #0]
 8011866:	f8be 2008 	ldrh.w	r2, [lr, #8]
 801186a:	801a      	strh	r2, [r3, #0]
 801186c:	2300      	movs	r3, #0
 801186e:	f8de 0004 	ldr.w	r0, [lr, #4]
 8011872:	f8ce 3004 	str.w	r3, [lr, #4]
 8011876:	bd10      	pop	{r4, pc}
 8011878:	10009ca0 	andne	r9, r0, r0, lsr #25

0801187c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
 801187c:	b570      	push	{r4, r5, r6, lr}
 801187e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8011882:	4e3d      	ldr	r6, [pc, #244]	@ (8011978 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>)
 8011884:	fa94 fe94 	rev16.w	lr, r4
 8011888:	4c3c      	ldr	r4, [pc, #240]	@ (801197c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>)
 801188a:	f8b6 c000 	ldrh.w	ip, [r6]
 801188e:	f834 5010 	ldrh.w	r5, [r4, r0, lsl #1]
 8011892:	4c3b      	ldr	r4, [pc, #236]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011894:	b290      	uxth	r0, r2
 8011896:	f8a4 c012 	strh.w	ip, [r4, #18]
 801189a:	f10c 0c01 	add.w	ip, ip, #1
 801189e:	f8a6 c000 	strh.w	ip, [r6]
 80118a2:	f100 0c1c 	add.w	ip, r0, #28
 80118a6:	3008      	adds	r0, #8
 80118a8:	ba40      	rev16	r0, r0
 80118aa:	ba6d      	rev16	r5, r5
 80118ac:	fa9c fc9c 	rev16.w	ip, ip
 80118b0:	84e0      	strh	r0, [r4, #38]	@ 0x26
 80118b2:	f5b2 6fb8 	cmp.w	r2, #1472	@ 0x5c0
 80118b6:	f04f 0000 	mov.w	r0, #0
 80118ba:	8465      	strh	r5, [r4, #34]	@ 0x22
 80118bc:	f8a4 e024 	strh.w	lr, [r4, #36]	@ 0x24
 80118c0:	4615      	mov	r5, r2
 80118c2:	f8a4 c010 	strh.w	ip, [r4, #16]
 80118c6:	bf28      	it	cs
 80118c8:	f44f 65b8 	movcs.w	r5, #1472	@ 0x5c0
 80118cc:	8320      	strh	r0, [r4, #24]
 80118ce:	b14a      	cbz	r2, 80118e4 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
 80118d0:	eb01 0e05 	add.w	lr, r1, r5
 80118d4:	f104 002a 	add.w	r0, r4, #42	@ 0x2a
 80118d8:	f811 cb01 	ldrb.w	ip, [r1], #1
 80118dc:	f800 cb01 	strb.w	ip, [r0], #1
 80118e0:	4571      	cmp	r1, lr
 80118e2:	d1f9      	bne.n	80118d8 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5c>
 80118e4:	1c5a      	adds	r2, r3, #1
 80118e6:	f105 012a 	add.w	r1, r5, #42	@ 0x2a
 80118ea:	d02e      	beq.n	801194a <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce>
 80118ec:	4a25      	ldr	r2, [pc, #148]	@ (8011984 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x108>)
 80118ee:	6812      	ldr	r2, [r2, #0]
 80118f0:	439a      	bics	r2, r3
 80118f2:	d01c      	beq.n	801192e <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb2>
 80118f4:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80118f8:	2ae0      	cmp	r2, #224	@ 0xe0
 80118fa:	d136      	bne.n	801196a <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee>
 80118fc:	4822      	ldr	r0, [pc, #136]	@ (8011988 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x10c>)
 80118fe:	f3c3 2206 	ubfx	r2, r3, #8, #7
 8011902:	70c2      	strb	r2, [r0, #3]
 8011904:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011908:	7102      	strb	r2, [r0, #4]
 801190a:	f3c3 6207 	ubfx	r2, r3, #24, #8
 801190e:	7142      	strb	r2, [r0, #5]
 8011910:	4a1b      	ldr	r2, [pc, #108]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011912:	1d85      	adds	r5, r0, #6
 8011914:	f810 cb01 	ldrb.w	ip, [r0], #1
 8011918:	f802 cb01 	strb.w	ip, [r2], #1
 801191c:	42a8      	cmp	r0, r5
 801191e:	d1f9      	bne.n	8011914 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
 8011920:	f8c4 301e 	str.w	r3, [r4, #30]
 8011924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011928:	4815      	ldr	r0, [pc, #84]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 801192a:	f000 bc15 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 801192e:	4a14      	ldr	r2, [pc, #80]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011930:	25ff      	movs	r5, #255	@ 0xff
 8011932:	1d90      	adds	r0, r2, #6
 8011934:	f802 5b01 	strb.w	r5, [r2], #1
 8011938:	4282      	cmp	r2, r0
 801193a:	d1fb      	bne.n	8011934 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
 801193c:	f8c4 301e 	str.w	r3, [r4, #30]
 8011940:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011944:	480e      	ldr	r0, [pc, #56]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011946:	f000 bc07 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 801194a:	4b0d      	ldr	r3, [pc, #52]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 801194c:	22ff      	movs	r2, #255	@ 0xff
 801194e:	1d98      	adds	r0, r3, #6
 8011950:	f803 2b01 	strb.w	r2, [r3], #1
 8011954:	4283      	cmp	r3, r0
 8011956:	d1fb      	bne.n	8011950 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
 8011958:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 801195c:	f8c4 301e 	str.w	r3, [r4, #30]
 8011960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011964:	4806      	ldr	r0, [pc, #24]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011966:	f000 bbf7 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 801196a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801196e:	4804      	ldr	r0, [pc, #16]	@ (8011980 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011970:	461a      	mov	r2, r3
 8011972:	f000 be27 	b.w	80125c4 <net::arp_send(t_udp*, unsigned long, unsigned long)>
 8011976:	bf00      	nop
 8011978:	100096b0 			@ <UNDEFINED> instruction: 0x100096b0
 801197c:	1000cb00 	andne	ip, r0, r0, lsl #22
 8011980:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8011984:	20002070 	andcs	r2, r0, r0, ror r0
 8011988:	100096a8 	andne	r9, r0, r8, lsr #13

0801198c <NetworkParamsStore::Copy(networkparams::Params*)>:
 801198c:	b507      	push	{r0, r1, r2, lr}
 801198e:	2301      	movs	r3, #1
 8011990:	2100      	movs	r1, #0
 8011992:	e9cd 1300 	strd	r1, r3, [sp]
 8011996:	4602      	mov	r2, r0
 8011998:	4803      	ldr	r0, [pc, #12]	@ (80119a8 <NetworkParamsStore::Copy(networkparams::Params*)+0x1c>)
 801199a:	235e      	movs	r3, #94	@ 0x5e
 801199c:	6800      	ldr	r0, [r0, #0]
 801199e:	f001 fc19 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 80119a2:	b003      	add	sp, #12
 80119a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80119a8:	20002134 	andcs	r2, r0, r4, lsr r1

080119ac <NetworkParams::NetworkParams()>:
 80119ac:	b510      	push	{r4, lr}
 80119ae:	225e      	movs	r2, #94	@ 0x5e
 80119b0:	4604      	mov	r4, r0
 80119b2:	2100      	movs	r1, #0
 80119b4:	f004 fc08 	bl	80161c8 <memset>
 80119b8:	2301      	movs	r3, #1
 80119ba:	7523      	strb	r3, [r4, #20]
 80119bc:	4620      	mov	r0, r4
 80119be:	bd10      	pop	{r4, pc}

080119c0 <NetworkParams::Load()>:
 80119c0:	b508      	push	{r3, lr}
 80119c2:	2200      	movs	r2, #0
 80119c4:	7002      	strb	r2, [r0, #0]
 80119c6:	7042      	strb	r2, [r0, #1]
 80119c8:	7082      	strb	r2, [r0, #2]
 80119ca:	70c2      	strb	r2, [r0, #3]
 80119cc:	f7ff ffde 	bl	801198c <NetworkParamsStore::Copy(networkparams::Params*)>
 80119d0:	bd08      	pop	{r3, pc}
	...

080119d4 <NetworkParams::Load(char const*, unsigned long)>:
 80119d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119d6:	2500      	movs	r5, #0
 80119d8:	b087      	sub	sp, #28
 80119da:	4604      	mov	r4, r0
 80119dc:	460e      	mov	r6, r1
 80119de:	4617      	mov	r7, r2
 80119e0:	7005      	strb	r5, [r0, #0]
 80119e2:	7045      	strb	r5, [r0, #1]
 80119e4:	7085      	strb	r5, [r0, #2]
 80119e6:	70c5      	strb	r5, [r0, #3]
 80119e8:	4602      	mov	r2, r0
 80119ea:	490c      	ldr	r1, [pc, #48]	@ (8011a1c <NetworkParams::Load(char const*, unsigned long)+0x48>)
 80119ec:	a804      	add	r0, sp, #16
 80119ee:	f001 fecb 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80119f2:	463a      	mov	r2, r7
 80119f4:	4631      	mov	r1, r6
 80119f6:	a804      	add	r0, sp, #16
 80119f8:	f001 feca 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 80119fc:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8011a00:	235e      	movs	r3, #94	@ 0x5e
 8011a02:	4807      	ldr	r0, [pc, #28]	@ (8011a20 <NetworkParams::Load(char const*, unsigned long)+0x4c>)
 8011a04:	9300      	str	r3, [sp, #0]
 8011a06:	462a      	mov	r2, r5
 8011a08:	4623      	mov	r3, r4
 8011a0a:	4629      	mov	r1, r5
 8011a0c:	6800      	ldr	r0, [r0, #0]
 8011a0e:	f001 fbbb 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8011a12:	a804      	add	r0, sp, #16
 8011a14:	f001 febb 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 8011a18:	b007      	add	sp, #28
 8011a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a1c:	08011b81 	stmdaeq	r1, {r0, r7, r8, r9, fp, ip}
 8011a20:	20002134 	andcs	r2, r0, r4, lsr r1

08011a24 <NetworkParams::callbackFunction(char const*)>:
 8011a24:	b530      	push	{r4, r5, lr}
 8011a26:	460d      	mov	r5, r1
 8011a28:	b085      	sub	sp, #20
 8011a2a:	4604      	mov	r4, r0
 8011a2c:	494d      	ldr	r1, [pc, #308]	@ (8011b64 <NetworkParams::callbackFunction(char const*)+0x140>)
 8011a2e:	f10d 0207 	add.w	r2, sp, #7
 8011a32:	4628      	mov	r0, r5
 8011a34:	f001 ff57 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011a38:	b978      	cbnz	r0, 8011a5a <NetworkParams::callbackFunction(char const*)+0x36>
 8011a3a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011a3e:	6823      	ldr	r3, [r4, #0]
 8011a40:	b142      	cbz	r2, 8011a54 <NetworkParams::callbackFunction(char const*)+0x30>
 8011a42:	f023 0301 	bic.w	r3, r3, #1
 8011a46:	3a00      	subs	r2, #0
 8011a48:	bf18      	it	ne
 8011a4a:	2201      	movne	r2, #1
 8011a4c:	6023      	str	r3, [r4, #0]
 8011a4e:	7522      	strb	r2, [r4, #20]
 8011a50:	b005      	add	sp, #20
 8011a52:	bd30      	pop	{r4, r5, pc}
 8011a54:	f043 0301 	orr.w	r3, r3, #1
 8011a58:	e7f5      	b.n	8011a46 <NetworkParams::callbackFunction(char const*)+0x22>
 8011a5a:	4943      	ldr	r1, [pc, #268]	@ (8011b68 <NetworkParams::callbackFunction(char const*)+0x144>)
 8011a5c:	f10d 0207 	add.w	r2, sp, #7
 8011a60:	4628      	mov	r0, r5
 8011a62:	f001 ff40 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011a66:	b980      	cbnz	r0, 8011a8a <NetworkParams::callbackFunction(char const*)+0x66>
 8011a68:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011a6c:	6823      	ldr	r3, [r4, #0]
 8011a6e:	1e51      	subs	r1, r2, #1
 8011a70:	2904      	cmp	r1, #4
 8011a72:	bf97      	itett	ls
 8011a74:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 8011a78:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 8011a7c:	6023      	strls	r3, [r4, #0]
 8011a7e:	f884 205d 	strbls.w	r2, [r4, #93]	@ 0x5d
 8011a82:	bf84      	itt	hi
 8011a84:	6023      	strhi	r3, [r4, #0]
 8011a86:	f884 005d 	strbhi.w	r0, [r4, #93]	@ 0x5d
 8011a8a:	4938      	ldr	r1, [pc, #224]	@ (8011b6c <NetworkParams::callbackFunction(char const*)+0x148>)
 8011a8c:	aa02      	add	r2, sp, #8
 8011a8e:	4628      	mov	r0, r5
 8011a90:	f001 fecd 	bl	801382e <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011a94:	b9d8      	cbnz	r0, 8011ace <NetworkParams::callbackFunction(char const*)+0xaa>
 8011a96:	9a02      	ldr	r2, [sp, #8]
 8011a98:	6823      	ldr	r3, [r4, #0]
 8011a9a:	b2d1      	uxtb	r1, r2
 8011a9c:	29ac      	cmp	r1, #172	@ 0xac
 8011a9e:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8011aa2:	d007      	beq.n	8011ab4 <NetworkParams::callbackFunction(char const*)+0x90>
 8011aa4:	29c0      	cmp	r1, #192	@ 0xc0
 8011aa6:	d00c      	beq.n	8011ac2 <NetworkParams::callbackFunction(char const*)+0x9e>
 8011aa8:	290a      	cmp	r1, #10
 8011aaa:	d006      	beq.n	8011aba <NetworkParams::callbackFunction(char const*)+0x96>
 8011aac:	2902      	cmp	r1, #2
 8011aae:	d004      	beq.n	8011aba <NetworkParams::callbackFunction(char const*)+0x96>
 8011ab0:	b11a      	cbz	r2, 8011aba <NetworkParams::callbackFunction(char const*)+0x96>
 8011ab2:	e008      	b.n	8011ac6 <NetworkParams::callbackFunction(char const*)+0xa2>
 8011ab4:	3810      	subs	r0, #16
 8011ab6:	280f      	cmp	r0, #15
 8011ab8:	d805      	bhi.n	8011ac6 <NetworkParams::callbackFunction(char const*)+0xa2>
 8011aba:	6062      	str	r2, [r4, #4]
 8011abc:	f043 0302 	orr.w	r3, r3, #2
 8011ac0:	e003      	b.n	8011aca <NetworkParams::callbackFunction(char const*)+0xa6>
 8011ac2:	28a8      	cmp	r0, #168	@ 0xa8
 8011ac4:	d0f9      	beq.n	8011aba <NetworkParams::callbackFunction(char const*)+0x96>
 8011ac6:	f023 0302 	bic.w	r3, r3, #2
 8011aca:	6023      	str	r3, [r4, #0]
 8011acc:	e7c0      	b.n	8011a50 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011ace:	4928      	ldr	r1, [pc, #160]	@ (8011b70 <NetworkParams::callbackFunction(char const*)+0x14c>)
 8011ad0:	aa02      	add	r2, sp, #8
 8011ad2:	4628      	mov	r0, r5
 8011ad4:	f001 feab 	bl	801382e <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011ad8:	b970      	cbnz	r0, 8011af8 <NetworkParams::callbackFunction(char const*)+0xd4>
 8011ada:	9a02      	ldr	r2, [sp, #8]
 8011adc:	6823      	ldr	r3, [r4, #0]
 8011ade:	b142      	cbz	r2, 8011af2 <NetworkParams::callbackFunction(char const*)+0xce>
 8011ae0:	ba11      	rev	r1, r2
 8011ae2:	43c8      	mvns	r0, r1
 8011ae4:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8011ae8:	d103      	bne.n	8011af2 <NetworkParams::callbackFunction(char const*)+0xce>
 8011aea:	60a2      	str	r2, [r4, #8]
 8011aec:	f043 0304 	orr.w	r3, r3, #4
 8011af0:	e7eb      	b.n	8011aca <NetworkParams::callbackFunction(char const*)+0xa6>
 8011af2:	f023 0304 	bic.w	r3, r3, #4
 8011af6:	e7e8      	b.n	8011aca <NetworkParams::callbackFunction(char const*)+0xa6>
 8011af8:	491e      	ldr	r1, [pc, #120]	@ (8011b74 <NetworkParams::callbackFunction(char const*)+0x150>)
 8011afa:	aa02      	add	r2, sp, #8
 8011afc:	4628      	mov	r0, r5
 8011afe:	f001 fe96 	bl	801382e <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011b02:	b950      	cbnz	r0, 8011b1a <NetworkParams::callbackFunction(char const*)+0xf6>
 8011b04:	9a02      	ldr	r2, [sp, #8]
 8011b06:	6823      	ldr	r3, [r4, #0]
 8011b08:	b122      	cbz	r2, 8011b14 <NetworkParams::callbackFunction(char const*)+0xf0>
 8011b0a:	f043 0308 	orr.w	r3, r3, #8
 8011b0e:	6023      	str	r3, [r4, #0]
 8011b10:	60e2      	str	r2, [r4, #12]
 8011b12:	e79d      	b.n	8011a50 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011b14:	f023 0308 	bic.w	r3, r3, #8
 8011b18:	e7d7      	b.n	8011aca <NetworkParams::callbackFunction(char const*)+0xa6>
 8011b1a:	233f      	movs	r3, #63	@ 0x3f
 8011b1c:	9303      	str	r3, [sp, #12]
 8011b1e:	4916      	ldr	r1, [pc, #88]	@ (8011b78 <NetworkParams::callbackFunction(char const*)+0x154>)
 8011b20:	ab03      	add	r3, sp, #12
 8011b22:	f104 0215 	add.w	r2, r4, #21
 8011b26:	4628      	mov	r0, r5
 8011b28:	f001 fe68 	bl	80137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8011b2c:	b930      	cbnz	r0, 8011b3c <NetworkParams::callbackFunction(char const*)+0x118>
 8011b2e:	9b03      	ldr	r3, [sp, #12]
 8011b30:	4423      	add	r3, r4
 8011b32:	7558      	strb	r0, [r3, #21]
 8011b34:	6823      	ldr	r3, [r4, #0]
 8011b36:	f043 0320 	orr.w	r3, r3, #32
 8011b3a:	e7c6      	b.n	8011aca <NetworkParams::callbackFunction(char const*)+0xa6>
 8011b3c:	490f      	ldr	r1, [pc, #60]	@ (8011b7c <NetworkParams::callbackFunction(char const*)+0x158>)
 8011b3e:	aa02      	add	r2, sp, #8
 8011b40:	4628      	mov	r0, r5
 8011b42:	f001 fe74 	bl	801382e <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011b46:	2800      	cmp	r0, #0
 8011b48:	d182      	bne.n	8011a50 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011b4a:	9a02      	ldr	r2, [sp, #8]
 8011b4c:	6823      	ldr	r3, [r4, #0]
 8011b4e:	b12a      	cbz	r2, 8011b5c <NetworkParams::callbackFunction(char const*)+0x138>
 8011b50:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011b54:	6023      	str	r3, [r4, #0]
 8011b56:	f8c4 2055 	str.w	r2, [r4, #85]	@ 0x55
 8011b5a:	e779      	b.n	8011a50 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011b5c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011b60:	e7f8      	b.n	8011b54 <NetworkParams::callbackFunction(char const*)+0x130>
 8011b62:	bf00      	nop
 8011b64:	0801a719 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, sp, pc}
 8011b68:	0801a709 	stmdaeq	r1, {r0, r3, r8, r9, sl, sp, pc}
 8011b6c:	0801a6fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp, pc}
 8011b70:	0801a6f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, sp, pc}
 8011b74:	0801a6e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, sp, pc}
 8011b78:	0801a6dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, sp, pc}
 8011b7c:	0801a6d1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, sp, pc}

08011b80 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8011b80:	f7ff bf50 	b.w	8011a24 <NetworkParams::callbackFunction(char const*)>

08011b84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
 8011b84:	b570      	push	{r4, r5, r6, lr}
 8011b86:	4604      	mov	r4, r0
 8011b88:	b086      	sub	sp, #24
 8011b8a:	4615      	mov	r5, r2
 8011b8c:	461e      	mov	r6, r3
 8011b8e:	2900      	cmp	r1, #0
 8011b90:	d046      	beq.n	8011c20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 8011b92:	225e      	movs	r2, #94	@ 0x5e
 8011b94:	f004 fb01 	bl	801619a <memmove>
 8011b98:	462a      	mov	r2, r5
 8011b9a:	4d76      	ldr	r5, [pc, #472]	@ (8011d74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>)
 8011b9c:	4976      	ldr	r1, [pc, #472]	@ (8011d78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f4>)
 8011b9e:	4633      	mov	r3, r6
 8011ba0:	a803      	add	r0, sp, #12
 8011ba2:	f001 fd1b 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8011ba6:	692a      	ldr	r2, [r5, #16]
 8011ba8:	4974      	ldr	r1, [pc, #464]	@ (8011d7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>)
 8011baa:	2300      	movs	r3, #0
 8011bac:	a803      	add	r0, sp, #12
 8011bae:	f001 fd57 	bl	8013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011bb2:	6823      	ldr	r3, [r4, #0]
 8011bb4:	0799      	lsls	r1, r3, #30
 8011bb6:	bf5c      	itt	pl
 8011bb8:	682a      	ldrpl	r2, [r5, #0]
 8011bba:	6062      	strpl	r2, [r4, #4]
 8011bbc:	075a      	lsls	r2, r3, #29
 8011bbe:	bf5c      	itt	pl
 8011bc0:	686a      	ldrpl	r2, [r5, #4]
 8011bc2:	60a2      	strpl	r2, [r4, #8]
 8011bc4:	071e      	lsls	r6, r3, #28
 8011bc6:	bf5c      	itt	pl
 8011bc8:	68aa      	ldrpl	r2, [r5, #8]
 8011bca:	60e2      	strpl	r2, [r4, #12]
 8011bcc:	0698      	lsls	r0, r3, #26
 8011bce:	d412      	bmi.n	8011bf6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x72>
 8011bd0:	4b6b      	ldr	r3, [pc, #428]	@ (8011d80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1fc>)
 8011bd2:	681b      	ldr	r3, [r3, #0]
 8011bd4:	f104 0015 	add.w	r0, r4, #21
 8011bd8:	3315      	adds	r3, #21
 8011bda:	223f      	movs	r2, #63	@ 0x3f
 8011bdc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011be0:	b119      	cbz	r1, 8011bea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x66>
 8011be2:	3a01      	subs	r2, #1
 8011be4:	f800 1b01 	strb.w	r1, [r0], #1
 8011be8:	d1f8      	bne.n	8011bdc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x58>
 8011bea:	2100      	movs	r1, #0
 8011bec:	f004 faec 	bl	80161c8 <memset>
 8011bf0:	2300      	movs	r3, #0
 8011bf2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011bf6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011bfa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011bfe:	7d23      	ldrb	r3, [r4, #20]
 8011c00:	6821      	ldr	r1, [r4, #0]
 8011c02:	42aa      	cmp	r2, r5
 8011c04:	d21d      	bcs.n	8011c42 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 8011c06:	9803      	ldr	r0, [sp, #12]
 8011c08:	07c9      	lsls	r1, r1, #31
 8011c0a:	4410      	add	r0, r2
 8011c0c:	eba5 0502 	sub.w	r5, r5, r2
 8011c10:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011c14:	d407      	bmi.n	8011c26 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8011c16:	b93a      	cbnz	r2, 8011c28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
 8011c18:	9300      	str	r3, [sp, #0]
 8011c1a:	4a5a      	ldr	r2, [pc, #360]	@ (8011d84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8011c1c:	4b5a      	ldr	r3, [pc, #360]	@ (8011d88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011c1e:	e006      	b.n	8011c2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8011c20:	f7ff feb4 	bl	801198c <NetworkParamsStore::Copy(networkparams::Params*)>
 8011c24:	e7b8      	b.n	8011b98 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8011c26:	b312      	cbz	r2, 8011c6e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 8011c28:	9300      	str	r3, [sp, #0]
 8011c2a:	4a58      	ldr	r2, [pc, #352]	@ (8011d8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8011c2c:	4b56      	ldr	r3, [pc, #344]	@ (8011d88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011c2e:	4629      	mov	r1, r5
 8011c30:	f004 fdd6 	bl	80167e0 <snprintf>
 8011c34:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011c38:	4285      	cmp	r5, r0
 8011c3a:	bfa4      	itt	ge
 8011c3c:	181b      	addge	r3, r3, r0
 8011c3e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011c42:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011c46:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011c4a:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8011c4e:	6821      	ldr	r1, [r4, #0]
 8011c50:	42aa      	cmp	r2, r5
 8011c52:	d21f      	bcs.n	8011c94 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
 8011c54:	9803      	ldr	r0, [sp, #12]
 8011c56:	05ce      	lsls	r6, r1, #23
 8011c58:	4410      	add	r0, r2
 8011c5a:	eba5 0502 	sub.w	r5, r5, r2
 8011c5e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011c62:	d408      	bmi.n	8011c76 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf2>
 8011c64:	b94a      	cbnz	r2, 8011c7a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf6>
 8011c66:	9300      	str	r3, [sp, #0]
 8011c68:	4a46      	ldr	r2, [pc, #280]	@ (8011d84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8011c6a:	4b49      	ldr	r3, [pc, #292]	@ (8011d90 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8011c6c:	e008      	b.n	8011c80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8011c6e:	9300      	str	r3, [sp, #0]
 8011c70:	4a48      	ldr	r2, [pc, #288]	@ (8011d94 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8011c72:	4b45      	ldr	r3, [pc, #276]	@ (8011d88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011c74:	e7db      	b.n	8011c2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8011c76:	2a00      	cmp	r2, #0
 8011c78:	d03e      	beq.n	8011cf8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x174>
 8011c7a:	9300      	str	r3, [sp, #0]
 8011c7c:	4a43      	ldr	r2, [pc, #268]	@ (8011d8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8011c7e:	4b44      	ldr	r3, [pc, #272]	@ (8011d90 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8011c80:	4629      	mov	r1, r5
 8011c82:	f004 fdad 	bl	80167e0 <snprintf>
 8011c86:	4285      	cmp	r5, r0
 8011c88:	bfa2      	ittt	ge
 8011c8a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011c8e:	18c0      	addge	r0, r0, r3
 8011c90:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8011c94:	4940      	ldr	r1, [pc, #256]	@ (8011d98 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 8011c96:	a803      	add	r0, sp, #12
 8011c98:	f001 fd5c 	bl	8013754 <PropertiesBuilder::AddComment(char const*)>
 8011c9c:	6823      	ldr	r3, [r4, #0]
 8011c9e:	6862      	ldr	r2, [r4, #4]
 8011ca0:	493e      	ldr	r1, [pc, #248]	@ (8011d9c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 8011ca2:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8011ca6:	a803      	add	r0, sp, #12
 8011ca8:	f001 fcda 	bl	8013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011cac:	6823      	ldr	r3, [r4, #0]
 8011cae:	68a2      	ldr	r2, [r4, #8]
 8011cb0:	493b      	ldr	r1, [pc, #236]	@ (8011da0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 8011cb2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8011cb6:	a803      	add	r0, sp, #12
 8011cb8:	f001 fcd2 	bl	8013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011cbc:	6823      	ldr	r3, [r4, #0]
 8011cbe:	68e2      	ldr	r2, [r4, #12]
 8011cc0:	4938      	ldr	r1, [pc, #224]	@ (8011da4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 8011cc2:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8011cc6:	a803      	add	r0, sp, #12
 8011cc8:	f001 fcca 	bl	8013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011ccc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011cd0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011cd4:	6821      	ldr	r1, [r4, #0]
 8011cd6:	42aa      	cmp	r2, r5
 8011cd8:	d221      	bcs.n	8011d1e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x19a>
 8011cda:	9803      	ldr	r0, [sp, #12]
 8011cdc:	0689      	lsls	r1, r1, #26
 8011cde:	4410      	add	r0, r2
 8011ce0:	eba5 0502 	sub.w	r5, r5, r2
 8011ce4:	f104 0315 	add.w	r3, r4, #21
 8011ce8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011cec:	d408      	bmi.n	8011d00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
 8011cee:	b94a      	cbnz	r2, 8011d04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x180>
 8011cf0:	9300      	str	r3, [sp, #0]
 8011cf2:	4a2d      	ldr	r2, [pc, #180]	@ (8011da8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 8011cf4:	4b2d      	ldr	r3, [pc, #180]	@ (8011dac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8011cf6:	e008      	b.n	8011d0a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8011cf8:	9300      	str	r3, [sp, #0]
 8011cfa:	4a26      	ldr	r2, [pc, #152]	@ (8011d94 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8011cfc:	4b24      	ldr	r3, [pc, #144]	@ (8011d90 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8011cfe:	e7bf      	b.n	8011c80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8011d00:	2a00      	cmp	r2, #0
 8011d02:	d032      	beq.n	8011d6a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1e6>
 8011d04:	9300      	str	r3, [sp, #0]
 8011d06:	4a2a      	ldr	r2, [pc, #168]	@ (8011db0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 8011d08:	4b28      	ldr	r3, [pc, #160]	@ (8011dac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8011d0a:	4629      	mov	r1, r5
 8011d0c:	f004 fd68 	bl	80167e0 <snprintf>
 8011d10:	4285      	cmp	r5, r0
 8011d12:	bfa2      	ittt	ge
 8011d14:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011d18:	18c0      	addge	r0, r0, r3
 8011d1a:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8011d1e:	4925      	ldr	r1, [pc, #148]	@ (8011db4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 8011d20:	a803      	add	r0, sp, #12
 8011d22:	f001 fd17 	bl	8013754 <PropertiesBuilder::AddComment(char const*)>
 8011d26:	6823      	ldr	r3, [r4, #0]
 8011d28:	f8d4 2055 	ldr.w	r2, [r4, #85]	@ 0x55
 8011d2c:	4922      	ldr	r1, [pc, #136]	@ (8011db8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 8011d2e:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8011d32:	a803      	add	r0, sp, #12
 8011d34:	f001 fc94 	bl	8013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011d38:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011d3c:	b17b      	cbz	r3, 8011d5e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1da>
 8011d3e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011d42:	9b03      	ldr	r3, [sp, #12]
 8011d44:	4413      	add	r3, r2
 8011d46:	227d      	movs	r2, #125	@ 0x7d
 8011d48:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011d4c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011d50:	9903      	ldr	r1, [sp, #12]
 8011d52:	54ca      	strb	r2, [r1, r3]
 8011d54:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011d58:	3301      	adds	r3, #1
 8011d5a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011d5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011d62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011d64:	601a      	str	r2, [r3, #0]
 8011d66:	b006      	add	sp, #24
 8011d68:	bd70      	pop	{r4, r5, r6, pc}
 8011d6a:	9300      	str	r3, [sp, #0]
 8011d6c:	4a13      	ldr	r2, [pc, #76]	@ (8011dbc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 8011d6e:	4b0f      	ldr	r3, [pc, #60]	@ (8011dac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8011d70:	e7cb      	b.n	8011d0a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8011d72:	bf00      	nop
 8011d74:	20002088 	andcs	r2, r0, r8, lsl #1
 8011d78:	0801a722 	stmdaeq	r1, {r1, r5, r8, r9, sl, sp, pc}
 8011d7c:	080179c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, ip, sp, lr}
 8011d80:	20002068 	andcs	r2, r0, r8, rrx
 8011d84:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 8011d88:	0801a719 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, sp, pc}
 8011d8c:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 8011d90:	0801a709 	stmdaeq	r1, {r0, r3, r8, r9, sl, sp, pc}
 8011d94:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}
 8011d98:	080179d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, ip, sp, lr}
 8011d9c:	0801a6fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp, pc}
 8011da0:	0801a6f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, sp, pc}
 8011da4:	0801a6e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, sp, pc}
 8011da8:	080173ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 8011dac:	0801a6dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, sp, pc}
 8011db0:	080173a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, ip, sp, lr}
 8011db4:	080179e0 	stmdaeq	r1, {r5, r6, r7, r8, fp, ip, sp, lr}
 8011db8:	0801a6d1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, sp, pc}
 8011dbc:	080173ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, ip, sp, lr}

08011dc0 <net::phy_customized_led()>:
 8011dc0:	4770      	bx	lr

08011dc2 <net::phy_customized_timing()>:
 8011dc2:	4770      	bx	lr

08011dc4 <emac_adjust_link(net::PhyStatus)>:
 8011dc4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011dc6:	ac04      	add	r4, sp, #16
 8011dc8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8011dcc:	460c      	mov	r4, r1
 8011dce:	4b14      	ldr	r3, [pc, #80]	@ (8011e20 <emac_adjust_link(net::PhyStatus)+0x5c>)
 8011dd0:	4914      	ldr	r1, [pc, #80]	@ (8011e24 <emac_adjust_link(net::PhyStatus)+0x60>)
 8011dd2:	2a00      	cmp	r2, #0
 8011dd4:	4615      	mov	r5, r2
 8011dd6:	4606      	mov	r6, r0
 8011dd8:	bf14      	ite	ne
 8011dda:	2264      	movne	r2, #100	@ 0x64
 8011ddc:	220a      	moveq	r2, #10
 8011dde:	4812      	ldr	r0, [pc, #72]	@ (8011e28 <emac_adjust_link(net::PhyStatus)+0x64>)
 8011de0:	2c00      	cmp	r4, #0
 8011de2:	bf18      	it	ne
 8011de4:	460b      	movne	r3, r1
 8011de6:	4911      	ldr	r1, [pc, #68]	@ (8011e2c <emac_adjust_link(net::PhyStatus)+0x68>)
 8011de8:	2e01      	cmp	r6, #1
 8011dea:	bf08      	it	eq
 8011dec:	4601      	moveq	r1, r0
 8011dee:	4810      	ldr	r0, [pc, #64]	@ (8011e30 <emac_adjust_link(net::PhyStatus)+0x6c>)
 8011df0:	f004 fcce 	bl	8016790 <printf>
 8011df4:	2d01      	cmp	r5, #1
 8011df6:	d10d      	bne.n	8011e14 <emac_adjust_link(net::PhyStatus)+0x50>
 8011df8:	2c01      	cmp	r4, #1
 8011dfa:	bf14      	ite	ne
 8011dfc:	f44f 4080 	movne.w	r0, #16384	@ 0x4000
 8011e00:	f44f 4090 	moveq.w	r0, #18432	@ 0x4800
 8011e04:	2210      	movs	r2, #16
 8011e06:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8011e0a:	b004      	add	sp, #16
 8011e0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e10:	f002 be22 	b.w	8014a58 <enet_init>
 8011e14:	1e63      	subs	r3, r4, #1
 8011e16:	4258      	negs	r0, r3
 8011e18:	4158      	adcs	r0, r3
 8011e1a:	02c0      	lsls	r0, r0, #11
 8011e1c:	e7f2      	b.n	8011e04 <emac_adjust_link(net::PhyStatus)+0x40>
 8011e1e:	bf00      	nop
 8011e20:	08017a18 	stmdaeq	r1, {r3, r4, r9, fp, ip, sp, lr}
 8011e24:	08017a1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, fp, ip, sp, lr}
 8011e28:	08017a10 	stmdaeq	r1, {r4, r9, fp, ip, sp, lr}
 8011e2c:	08017a13 	stmdaeq	r1, {r0, r1, r4, r9, fp, ip, sp, lr}
 8011e30:	08017a22 	stmdaeq	r1, {r1, r5, r9, fp, ip, sp, lr}

08011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
 8011e34:	b508      	push	{r3, lr}
 8011e36:	4613      	mov	r3, r2
 8011e38:	b28a      	uxth	r2, r1
 8011e3a:	b281      	uxth	r1, r0
 8011e3c:	2000      	movs	r0, #0
 8011e3e:	f002 fde1 	bl	8014a04 <enet_phy_write_read>
 8011e42:	1e43      	subs	r3, r0, #1
 8011e44:	4258      	negs	r0, r3
 8011e46:	4158      	adcs	r0, r3
 8011e48:	bd08      	pop	{r3, pc}

08011e4a <net::phy_write(unsigned long, unsigned long, unsigned short)>:
 8011e4a:	b507      	push	{r0, r1, r2, lr}
 8011e4c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011e50:	f10d 0306 	add.w	r3, sp, #6
 8011e54:	b28a      	uxth	r2, r1
 8011e56:	b281      	uxth	r1, r0
 8011e58:	2002      	movs	r0, #2
 8011e5a:	f002 fdd3 	bl	8014a04 <enet_phy_write_read>
 8011e5e:	1e43      	subs	r3, r0, #1
 8011e60:	4258      	negs	r0, r3
 8011e62:	4158      	adcs	r0, r3
 8011e64:	b003      	add	sp, #12
 8011e66:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08011e6c <net::phy_config(unsigned long)>:
 8011e6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011e6e:	4e28      	ldr	r6, [pc, #160]	@ (8011f10 <net::phy_config(unsigned long)+0xa4>)
 8011e70:	4605      	mov	r5, r0
 8011e72:	2001      	movs	r0, #1
 8011e74:	6934      	ldr	r4, [r6, #16]
 8011e76:	f003 f8b5 	bl	8014fe4 <rcu_clock_freq_get>
 8011e7a:	4b26      	ldr	r3, [pc, #152]	@ (8011f14 <net::phy_config(unsigned long)+0xa8>)
 8011e7c:	4a26      	ldr	r2, [pc, #152]	@ (8011f18 <net::phy_config(unsigned long)+0xac>)
 8011e7e:	4403      	add	r3, r0
 8011e80:	4293      	cmp	r3, r2
 8011e82:	f024 041c 	bic.w	r4, r4, #28
 8011e86:	d216      	bcs.n	8011eb6 <net::phy_config(unsigned long)+0x4a>
 8011e88:	f044 0408 	orr.w	r4, r4, #8
 8011e8c:	6134      	str	r4, [r6, #16]
 8011e8e:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8011e92:	2100      	movs	r1, #0
 8011e94:	4628      	mov	r0, r5
 8011e96:	f7ff ffd8 	bl	8011e4a <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8011e9a:	b330      	cbz	r0, 8011eea <net::phy_config(unsigned long)+0x7e>
 8011e9c:	4c1f      	ldr	r4, [pc, #124]	@ (8011f1c <net::phy_config(unsigned long)+0xb0>)
 8011e9e:	6826      	ldr	r6, [r4, #0]
 8011ea0:	6823      	ldr	r3, [r4, #0]
 8011ea2:	1b9b      	subs	r3, r3, r6
 8011ea4:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8011ea8:	d325      	bcc.n	8011ef6 <net::phy_config(unsigned long)+0x8a>
 8011eaa:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011eae:	43c0      	mvns	r0, r0
 8011eb0:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8011eb4:	e01a      	b.n	8011eec <net::phy_config(unsigned long)+0x80>
 8011eb6:	4b1a      	ldr	r3, [pc, #104]	@ (8011f20 <net::phy_config(unsigned long)+0xb4>)
 8011eb8:	4a1a      	ldr	r2, [pc, #104]	@ (8011f24 <net::phy_config(unsigned long)+0xb8>)
 8011eba:	4403      	add	r3, r0
 8011ebc:	4293      	cmp	r3, r2
 8011ebe:	d802      	bhi.n	8011ec6 <net::phy_config(unsigned long)+0x5a>
 8011ec0:	f044 040c 	orr.w	r4, r4, #12
 8011ec4:	e7e2      	b.n	8011e8c <net::phy_config(unsigned long)+0x20>
 8011ec6:	4b18      	ldr	r3, [pc, #96]	@ (8011f28 <net::phy_config(unsigned long)+0xbc>)
 8011ec8:	4a18      	ldr	r2, [pc, #96]	@ (8011f2c <net::phy_config(unsigned long)+0xc0>)
 8011eca:	4403      	add	r3, r0
 8011ecc:	4293      	cmp	r3, r2
 8011ece:	d3dd      	bcc.n	8011e8c <net::phy_config(unsigned long)+0x20>
 8011ed0:	4b17      	ldr	r3, [pc, #92]	@ (8011f30 <net::phy_config(unsigned long)+0xc4>)
 8011ed2:	4a18      	ldr	r2, [pc, #96]	@ (8011f34 <net::phy_config(unsigned long)+0xc8>)
 8011ed4:	4403      	add	r3, r0
 8011ed6:	4293      	cmp	r3, r2
 8011ed8:	d802      	bhi.n	8011ee0 <net::phy_config(unsigned long)+0x74>
 8011eda:	f044 0404 	orr.w	r4, r4, #4
 8011ede:	e7d5      	b.n	8011e8c <net::phy_config(unsigned long)+0x20>
 8011ee0:	4b15      	ldr	r3, [pc, #84]	@ (8011f38 <net::phy_config(unsigned long)+0xcc>)
 8011ee2:	4a16      	ldr	r2, [pc, #88]	@ (8011f3c <net::phy_config(unsigned long)+0xd0>)
 8011ee4:	4403      	add	r3, r0
 8011ee6:	4293      	cmp	r3, r2
 8011ee8:	d902      	bls.n	8011ef0 <net::phy_config(unsigned long)+0x84>
 8011eea:	2000      	movs	r0, #0
 8011eec:	b002      	add	sp, #8
 8011eee:	bd70      	pop	{r4, r5, r6, pc}
 8011ef0:	f044 0410 	orr.w	r4, r4, #16
 8011ef4:	e7ca      	b.n	8011e8c <net::phy_config(unsigned long)+0x20>
 8011ef6:	f10d 0206 	add.w	r2, sp, #6
 8011efa:	2100      	movs	r1, #0
 8011efc:	4628      	mov	r0, r5
 8011efe:	f7ff ff99 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8011f02:	2800      	cmp	r0, #0
 8011f04:	d0f1      	beq.n	8011eea <net::phy_config(unsigned long)+0x7e>
 8011f06:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011f0a:	2b00      	cmp	r3, #0
 8011f0c:	dbc8      	blt.n	8011ea0 <net::phy_config(unsigned long)+0x34>
 8011f0e:	e7ed      	b.n	8011eec <net::phy_config(unsigned long)+0x80>
 8011f10:	40028000 	andmi	r8, r2, r0
 8011f14:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8011f18:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8011f1c:	20009ae8 	andcs	r9, r0, r8, ror #21
 8011f20:	fde9f140 	stc2l	1, cr15, [r9, #256]!	@ 0x100
 8011f24:	017d783f 	cmneq	sp, pc, lsr r8
 8011f28:	fc6c7900 	stc2l	9, cr7, [ip], #-0	@ <UNPREDICTABLE>
 8011f2c:	02625a00 	rsbeq	r5, r2, #0, 20
 8011f30:	fa0a1f00 	blx	8299b38 <_sidata+0x27edfc>
 8011f34:	02faf07f 	rscseq	pc, sl, #127	@ 0x7f
 8011f38:	f70f2e80 			@ <UNDEFINED> instruction: 0xf70f2e80
 8011f3c:	055d4a80 	ldrbeq	r4, [sp, #-2688]	@ 0xfffff580

08011f40 <enet_gpio_config()>:
 8011f40:	b510      	push	{r4, lr}
 8011f42:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8011f46:	f003 f811 	bl	8014f6c <rcu_periph_clock_enable>
 8011f4a:	f640 4001 	movw	r0, #3073	@ 0xc01
 8011f4e:	4c68      	ldr	r4, [pc, #416]	@ (80120f0 <enet_gpio_config()+0x1b0>)
 8011f50:	f003 f80c 	bl	8014f6c <rcu_periph_clock_enable>
 8011f54:	f640 4002 	movw	r0, #3074	@ 0xc02
 8011f58:	f003 f808 	bl	8014f6c <rcu_periph_clock_enable>
 8011f5c:	f241 100e 	movw	r0, #4366	@ 0x110e
 8011f60:	f003 f804 	bl	8014f6c <rcu_periph_clock_enable>
 8011f64:	4620      	mov	r0, r4
 8011f66:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8011f6a:	2100      	movs	r1, #0
 8011f6c:	f002 ffba 	bl	8014ee4 <gpio_af_set>
 8011f70:	4620      	mov	r0, r4
 8011f72:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8011f76:	2200      	movs	r2, #0
 8011f78:	2102      	movs	r1, #2
 8011f7a:	f002 ff75 	bl	8014e68 <gpio_mode_set>
 8011f7e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8011f82:	2203      	movs	r2, #3
 8011f84:	4620      	mov	r0, r4
 8011f86:	2100      	movs	r1, #0
 8011f88:	f002 ff90 	bl	8014eac <gpio_output_options_set>
 8011f8c:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 8011f90:	f44f 00c0 	mov.w	r0, #6291456	@ 0x600000
 8011f94:	f003 f80a 	bl	8014fac <rcu_ckout0_config>
 8011f98:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8011f9c:	f003 f896 	bl	80150cc <syscfg_enet_phy_interface_config>
 8011fa0:	2302      	movs	r3, #2
 8011fa2:	4619      	mov	r1, r3
 8011fa4:	4620      	mov	r0, r4
 8011fa6:	2200      	movs	r2, #0
 8011fa8:	f002 ff5e 	bl	8014e68 <gpio_mode_set>
 8011fac:	4620      	mov	r0, r4
 8011fae:	2302      	movs	r3, #2
 8011fb0:	2203      	movs	r2, #3
 8011fb2:	2100      	movs	r1, #0
 8011fb4:	f002 ff7a 	bl	8014eac <gpio_output_options_set>
 8011fb8:	4620      	mov	r0, r4
 8011fba:	2304      	movs	r3, #4
 8011fbc:	2200      	movs	r2, #0
 8011fbe:	2102      	movs	r1, #2
 8011fc0:	f002 ff52 	bl	8014e68 <gpio_mode_set>
 8011fc4:	4620      	mov	r0, r4
 8011fc6:	2304      	movs	r3, #4
 8011fc8:	2203      	movs	r2, #3
 8011fca:	2100      	movs	r1, #0
 8011fcc:	f002 ff6e 	bl	8014eac <gpio_output_options_set>
 8011fd0:	4620      	mov	r0, r4
 8011fd2:	2380      	movs	r3, #128	@ 0x80
 8011fd4:	2200      	movs	r2, #0
 8011fd6:	2102      	movs	r1, #2
 8011fd8:	f002 ff46 	bl	8014e68 <gpio_mode_set>
 8011fdc:	2380      	movs	r3, #128	@ 0x80
 8011fde:	4620      	mov	r0, r4
 8011fe0:	2203      	movs	r2, #3
 8011fe2:	2100      	movs	r1, #0
 8011fe4:	f002 ff62 	bl	8014eac <gpio_output_options_set>
 8011fe8:	4620      	mov	r0, r4
 8011fea:	2202      	movs	r2, #2
 8011fec:	210b      	movs	r1, #11
 8011fee:	f002 ff79 	bl	8014ee4 <gpio_af_set>
 8011ff2:	4620      	mov	r0, r4
 8011ff4:	2204      	movs	r2, #4
 8011ff6:	210b      	movs	r1, #11
 8011ff8:	f002 ff74 	bl	8014ee4 <gpio_af_set>
 8011ffc:	4620      	mov	r0, r4
 8011ffe:	2280      	movs	r2, #128	@ 0x80
 8012000:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8012004:	210b      	movs	r1, #11
 8012006:	f002 ff6d 	bl	8014ee4 <gpio_af_set>
 801200a:	4620      	mov	r0, r4
 801200c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012010:	2200      	movs	r2, #0
 8012012:	2102      	movs	r1, #2
 8012014:	f002 ff28 	bl	8014e68 <gpio_mode_set>
 8012018:	4620      	mov	r0, r4
 801201a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801201e:	2203      	movs	r2, #3
 8012020:	2100      	movs	r1, #0
 8012022:	f002 ff43 	bl	8014eac <gpio_output_options_set>
 8012026:	4620      	mov	r0, r4
 8012028:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 801202c:	2200      	movs	r2, #0
 801202e:	2102      	movs	r1, #2
 8012030:	f002 ff1a 	bl	8014e68 <gpio_mode_set>
 8012034:	4620      	mov	r0, r4
 8012036:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 801203a:	2203      	movs	r2, #3
 801203c:	2100      	movs	r1, #0
 801203e:	f002 ff35 	bl	8014eac <gpio_output_options_set>
 8012042:	4620      	mov	r0, r4
 8012044:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8012048:	2200      	movs	r2, #0
 801204a:	2102      	movs	r1, #2
 801204c:	f002 ff0c 	bl	8014e68 <gpio_mode_set>
 8012050:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8012054:	4620      	mov	r0, r4
 8012056:	2203      	movs	r2, #3
 8012058:	2100      	movs	r1, #0
 801205a:	f002 ff27 	bl	8014eac <gpio_output_options_set>
 801205e:	4620      	mov	r0, r4
 8012060:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8012064:	210b      	movs	r1, #11
 8012066:	f002 ff3d 	bl	8014ee4 <gpio_af_set>
 801206a:	4620      	mov	r0, r4
 801206c:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8012070:	210b      	movs	r1, #11
 8012072:	f002 ff37 	bl	8014ee4 <gpio_af_set>
 8012076:	4620      	mov	r0, r4
 8012078:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 801207c:	210b      	movs	r1, #11
 801207e:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8012082:	f002 ff2f 	bl	8014ee4 <gpio_af_set>
 8012086:	2302      	movs	r3, #2
 8012088:	4619      	mov	r1, r3
 801208a:	4620      	mov	r0, r4
 801208c:	2200      	movs	r2, #0
 801208e:	f002 feeb 	bl	8014e68 <gpio_mode_set>
 8012092:	4620      	mov	r0, r4
 8012094:	2302      	movs	r3, #2
 8012096:	2203      	movs	r2, #3
 8012098:	2100      	movs	r1, #0
 801209a:	f002 ff07 	bl	8014eac <gpio_output_options_set>
 801209e:	4620      	mov	r0, r4
 80120a0:	2310      	movs	r3, #16
 80120a2:	2200      	movs	r2, #0
 80120a4:	2102      	movs	r1, #2
 80120a6:	f002 fedf 	bl	8014e68 <gpio_mode_set>
 80120aa:	4620      	mov	r0, r4
 80120ac:	2310      	movs	r3, #16
 80120ae:	2203      	movs	r2, #3
 80120b0:	2100      	movs	r1, #0
 80120b2:	f002 fefb 	bl	8014eac <gpio_output_options_set>
 80120b6:	4620      	mov	r0, r4
 80120b8:	2320      	movs	r3, #32
 80120ba:	2200      	movs	r2, #0
 80120bc:	2102      	movs	r1, #2
 80120be:	f002 fed3 	bl	8014e68 <gpio_mode_set>
 80120c2:	2320      	movs	r3, #32
 80120c4:	4620      	mov	r0, r4
 80120c6:	2203      	movs	r2, #3
 80120c8:	2100      	movs	r1, #0
 80120ca:	f002 feef 	bl	8014eac <gpio_output_options_set>
 80120ce:	4620      	mov	r0, r4
 80120d0:	2202      	movs	r2, #2
 80120d2:	210b      	movs	r1, #11
 80120d4:	f002 ff06 	bl	8014ee4 <gpio_af_set>
 80120d8:	4620      	mov	r0, r4
 80120da:	2210      	movs	r2, #16
 80120dc:	210b      	movs	r1, #11
 80120de:	f002 ff01 	bl	8014ee4 <gpio_af_set>
 80120e2:	4620      	mov	r0, r4
 80120e4:	2220      	movs	r2, #32
 80120e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120ea:	210b      	movs	r1, #11
 80120ec:	f002 befa 	b.w	8014ee4 <gpio_af_set>
 80120f0:	40020000 	andmi	r0, r2, r0

080120f4 <emac_eth_recv(unsigned char**)>:
 80120f4:	b538      	push	{r3, r4, r5, lr}
 80120f6:	4d07      	ldr	r5, [pc, #28]	@ (8012114 <emac_eth_recv(unsigned char**)+0x20>)
 80120f8:	4604      	mov	r4, r0
 80120fa:	2102      	movs	r1, #2
 80120fc:	6828      	ldr	r0, [r5, #0]
 80120fe:	f002 fe2d 	bl	8014d5c <enet_desc_information_get>
 8012102:	b118      	cbz	r0, 801210c <emac_eth_recv(unsigned char**)+0x18>
 8012104:	682b      	ldr	r3, [r5, #0]
 8012106:	689b      	ldr	r3, [r3, #8]
 8012108:	6023      	str	r3, [r4, #0]
 801210a:	bd38      	pop	{r3, r4, r5, pc}
 801210c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8012110:	bd38      	pop	{r3, r4, r5, pc}
 8012112:	bf00      	nop
 8012114:	20002288 	andcs	r2, r0, r8, lsl #5

08012118 <emac_free_pkt()>:
 8012118:	490d      	ldr	r1, [pc, #52]	@ (8012150 <emac_free_pkt()+0x38>)
 801211a:	e001      	b.n	8012120 <emac_free_pkt()+0x8>
 801211c:	f3bf 8f5f 	dmb	sy
 8012120:	680b      	ldr	r3, [r1, #0]
 8012122:	681a      	ldr	r2, [r3, #0]
 8012124:	2a00      	cmp	r2, #0
 8012126:	dbf9      	blt.n	801211c <emac_free_pkt()+0x4>
 8012128:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 801212c:	4a09      	ldr	r2, [pc, #36]	@ (8012154 <emac_free_pkt()+0x3c>)
 801212e:	6018      	str	r0, [r3, #0]
 8012130:	6950      	ldr	r0, [r2, #20]
 8012132:	0600      	lsls	r0, r0, #24
 8012134:	d509      	bpl.n	801214a <emac_free_pkt()+0x32>
 8012136:	b410      	push	{r4}
 8012138:	2000      	movs	r0, #0
 801213a:	2480      	movs	r4, #128	@ 0x80
 801213c:	6154      	str	r4, [r2, #20]
 801213e:	6090      	str	r0, [r2, #8]
 8012140:	68db      	ldr	r3, [r3, #12]
 8012142:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012146:	600b      	str	r3, [r1, #0]
 8012148:	4770      	bx	lr
 801214a:	68db      	ldr	r3, [r3, #12]
 801214c:	600b      	str	r3, [r1, #0]
 801214e:	4770      	bx	lr
 8012150:	20002288 	andcs	r2, r0, r8, lsl #5
 8012154:	40029000 	andmi	r9, r2, r0

08012158 <emac_eth_send(void*, unsigned long)>:
 8012158:	b570      	push	{r4, r5, r6, lr}
 801215a:	4c20      	ldr	r4, [pc, #128]	@ (80121dc <emac_eth_send(void*, unsigned long)+0x84>)
 801215c:	e001      	b.n	8012162 <emac_eth_send(void*, unsigned long)+0xa>
 801215e:	f3bf 8f5f 	dmb	sy
 8012162:	6823      	ldr	r3, [r4, #0]
 8012164:	681a      	ldr	r2, [r3, #0]
 8012166:	2a00      	cmp	r2, #0
 8012168:	dbf9      	blt.n	801215e <emac_eth_send(void*, unsigned long)+0x6>
 801216a:	689b      	ldr	r3, [r3, #8]
 801216c:	ea43 0200 	orr.w	r2, r3, r0
 8012170:	0792      	lsls	r2, r2, #30
 8012172:	d01e      	beq.n	80121b2 <emac_eth_send(void*, unsigned long)+0x5a>
 8012174:	460a      	mov	r2, r1
 8012176:	eb00 0c02 	add.w	ip, r0, r2
 801217a:	b12a      	cbz	r2, 8012188 <emac_eth_send(void*, unsigned long)+0x30>
 801217c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012180:	f803 2b01 	strb.w	r2, [r3], #1
 8012184:	4584      	cmp	ip, r0
 8012186:	d1f9      	bne.n	801217c <emac_eth_send(void*, unsigned long)+0x24>
 8012188:	6822      	ldr	r2, [r4, #0]
 801218a:	4815      	ldr	r0, [pc, #84]	@ (80121e0 <emac_eth_send(void*, unsigned long)+0x88>)
 801218c:	6813      	ldr	r3, [r2, #0]
 801218e:	6051      	str	r1, [r2, #4]
 8012190:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 8012194:	6013      	str	r3, [r2, #0]
 8012196:	6943      	ldr	r3, [r0, #20]
 8012198:	6941      	ldr	r1, [r0, #20]
 801219a:	f003 0304 	and.w	r3, r3, #4
 801219e:	f001 0120 	and.w	r1, r1, #32
 80121a2:	430b      	orrs	r3, r1
 80121a4:	d002      	beq.n	80121ac <emac_eth_send(void*, unsigned long)+0x54>
 80121a6:	2100      	movs	r1, #0
 80121a8:	6143      	str	r3, [r0, #20]
 80121aa:	6041      	str	r1, [r0, #4]
 80121ac:	68d3      	ldr	r3, [r2, #12]
 80121ae:	6023      	str	r3, [r4, #0]
 80121b0:	bd70      	pop	{r4, r5, r6, pc}
 80121b2:	2903      	cmp	r1, #3
 80121b4:	d9de      	bls.n	8012174 <emac_eth_send(void*, unsigned long)+0x1c>
 80121b6:	1f0e      	subs	r6, r1, #4
 80121b8:	f026 0603 	bic.w	r6, r6, #3
 80121bc:	3604      	adds	r6, #4
 80121be:	eb00 0c06 	add.w	ip, r0, r6
 80121c2:	eba3 0e00 	sub.w	lr, r3, r0
 80121c6:	eb00 020e 	add.w	r2, r0, lr
 80121ca:	f850 5b04 	ldr.w	r5, [r0], #4
 80121ce:	6015      	str	r5, [r2, #0]
 80121d0:	4560      	cmp	r0, ip
 80121d2:	d1f8      	bne.n	80121c6 <emac_eth_send(void*, unsigned long)+0x6e>
 80121d4:	4433      	add	r3, r6
 80121d6:	f001 0203 	and.w	r2, r1, #3
 80121da:	e7cc      	b.n	8012176 <emac_eth_send(void*, unsigned long)+0x1e>
 80121dc:	2000228c 	andcs	r2, r0, ip, lsl #5
 80121e0:	40029000 	andmi	r9, r2, r0

080121e4 <net::acd_start(net::acd::Acd*, net::ip_addr)>:
 80121e4:	2301      	movs	r3, #1
 80121e6:	b510      	push	{r4, lr}
 80121e8:	7103      	strb	r3, [r0, #4]
 80121ea:	6001      	str	r1, [r0, #0]
 80121ec:	4604      	mov	r4, r0
 80121ee:	f004 fb2d 	bl	801684c <random>
 80121f2:	230a      	movs	r3, #10
 80121f4:	fbb0 f2f3 	udiv	r2, r0, r3
 80121f8:	fb02 0013 	mls	r0, r2, r3, r0
 80121fc:	4b11      	ldr	r3, [pc, #68]	@ (8012244 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x60>)
 80121fe:	81a0      	strh	r0, [r4, #12]
 8012200:	681b      	ldr	r3, [r3, #0]
 8012202:	f8d3 00a0 	ldr.w	r0, [r3, #160]	@ 0xa0
 8012206:	2807      	cmp	r0, #7
 8012208:	d907      	bls.n	801221a <net::acd_start(net::acd::Acd*, net::ip_addr)+0x36>
 801220a:	480f      	ldr	r0, [pc, #60]	@ (8012248 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x64>)
 801220c:	f002 f99a 	bl	8014544 <console_error>
 8012210:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8012214:	4b0d      	ldr	r3, [pc, #52]	@ (801224c <net::acd_start(net::acd::Acd*, net::ip_addr)+0x68>)
 8012216:	601a      	str	r2, [r3, #0]
 8012218:	bd10      	pop	{r4, pc}
 801221a:	4a0d      	ldr	r2, [pc, #52]	@ (8012250 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x6c>)
 801221c:	6811      	ldr	r1, [r2, #0]
 801221e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 8012222:	1c54      	adds	r4, r2, #1
 8012224:	f8c3 40a4 	str.w	r4, [r3, #164]	@ 0xa4
 8012228:	1c44      	adds	r4, r0, #1
 801222a:	f8c3 40a0 	str.w	r4, [r3, #160]	@ 0xa0
 801222e:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 8012232:	3164      	adds	r1, #100	@ 0x64
 8012234:	6219      	str	r1, [r3, #32]
 8012236:	2164      	movs	r1, #100	@ 0x64
 8012238:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 801223c:	4905      	ldr	r1, [pc, #20]	@ (8012254 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x70>)
 801223e:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8012240:	e7e8      	b.n	8012214 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x30>
 8012242:	bf00      	nop
 8012244:	20002238 	andcs	r2, r0, r8, lsr r2
 8012248:	080179b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, ip, sp, lr}
 801224c:	200020b4 	strhcs	r2, [r0], -r4
 8012250:	20009ae8 	andcs	r9, r0, r8, ror #21
 8012254:	080122b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sp}

08012258 <net::acd_stop(net::acd::Acd*)>:
 8012258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801225a:	4e13      	ldr	r6, [pc, #76]	@ (80122a8 <net::acd_stop(net::acd::Acd*)+0x50>)
 801225c:	6832      	ldr	r2, [r6, #0]
 801225e:	2300      	movs	r3, #0
 8012260:	429a      	cmp	r2, r3
 8012262:	7103      	strb	r3, [r0, #4]
 8012264:	db1a      	blt.n	801229c <net::acd_stop(net::acd::Acd*)+0x44>
 8012266:	4911      	ldr	r1, [pc, #68]	@ (80122ac <net::acd_stop(net::acd::Acd*)+0x54>)
 8012268:	680d      	ldr	r5, [r1, #0]
 801226a:	f8d5 40a0 	ldr.w	r4, [r5, #160]	@ 0xa0
 801226e:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 8012272:	42a3      	cmp	r3, r4
 8012274:	d012      	beq.n	801229c <net::acd_stop(net::acd::Acd*)+0x44>
 8012276:	0118      	lsls	r0, r3, #4
 8012278:	580f      	ldr	r7, [r1, r0]
 801227a:	42ba      	cmp	r2, r7
 801227c:	d112      	bne.n	80122a4 <net::acd_stop(net::acd::Acd*)+0x4c>
 801227e:	3c01      	subs	r4, #1
 8012280:	1ae2      	subs	r2, r4, r3
 8012282:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 8012286:	0112      	lsls	r2, r2, #4
 8012288:	3020      	adds	r0, #32
 801228a:	42a3      	cmp	r3, r4
 801228c:	bf88      	it	hi
 801228e:	2200      	movhi	r2, #0
 8012290:	4429      	add	r1, r5
 8012292:	4428      	add	r0, r5
 8012294:	f003 ff81 	bl	801619a <memmove>
 8012298:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
 801229c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80122a0:	6033      	str	r3, [r6, #0]
 80122a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80122a4:	3301      	adds	r3, #1
 80122a6:	e7e4      	b.n	8012272 <net::acd_stop(net::acd::Acd*)+0x1a>
 80122a8:	200020b4 	strhcs	r2, [r0], -r4
 80122ac:	20002238 	andcs	r2, r0, r8, lsr r2

080122b0 <net::acd_timer()>:
 80122b0:	b510      	push	{r4, lr}
 80122b2:	4b2b      	ldr	r3, [pc, #172]	@ (8012360 <net::acd_timer()+0xb0>)
 80122b4:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80122b6:	79a3      	ldrb	r3, [r4, #6]
 80122b8:	b10b      	cbz	r3, 80122be <net::acd_timer()+0xe>
 80122ba:	3b01      	subs	r3, #1
 80122bc:	71a3      	strb	r3, [r4, #6]
 80122be:	89a3      	ldrh	r3, [r4, #12]
 80122c0:	b10b      	cbz	r3, 80122c6 <net::acd_timer()+0x16>
 80122c2:	3b01      	subs	r3, #1
 80122c4:	81a3      	strh	r3, [r4, #12]
 80122c6:	7923      	ldrb	r3, [r4, #4]
 80122c8:	2b04      	cmp	r3, #4
 80122ca:	d805      	bhi.n	80122d8 <net::acd_timer()+0x28>
 80122cc:	2b02      	cmp	r3, #2
 80122ce:	d82b      	bhi.n	8012328 <net::acd_timer()+0x78>
 80122d0:	3b01      	subs	r3, #1
 80122d2:	2b01      	cmp	r3, #1
 80122d4:	d90b      	bls.n	80122ee <net::acd_timer()+0x3e>
 80122d6:	bd10      	pop	{r4, pc}
 80122d8:	2b07      	cmp	r3, #7
 80122da:	d1fc      	bne.n	80122d6 <net::acd_timer()+0x26>
 80122dc:	89a3      	ldrh	r3, [r4, #12]
 80122de:	2b00      	cmp	r3, #0
 80122e0:	d1f9      	bne.n	80122d6 <net::acd_timer()+0x26>
 80122e2:	4620      	mov	r0, r4
 80122e4:	f7ff ffb8 	bl	8012258 <net::acd_stop(net::acd::Acd*)>
 80122e8:	68a3      	ldr	r3, [r4, #8]
 80122ea:	2001      	movs	r0, #1
 80122ec:	e034      	b.n	8012358 <net::acd_timer()+0xa8>
 80122ee:	89a3      	ldrh	r3, [r4, #12]
 80122f0:	2b00      	cmp	r3, #0
 80122f2:	d1f0      	bne.n	80122d6 <net::acd_timer()+0x26>
 80122f4:	2302      	movs	r3, #2
 80122f6:	7123      	strb	r3, [r4, #4]
 80122f8:	6820      	ldr	r0, [r4, #0]
 80122fa:	f000 f9df 	bl	80126bc <net::arp_acd_probe(net::ip_addr)>
 80122fe:	7963      	ldrb	r3, [r4, #5]
 8012300:	3301      	adds	r3, #1
 8012302:	b2db      	uxtb	r3, r3
 8012304:	2b02      	cmp	r3, #2
 8012306:	7163      	strb	r3, [r4, #5]
 8012308:	d904      	bls.n	8012314 <net::acd_timer()+0x64>
 801230a:	2303      	movs	r3, #3
 801230c:	80a3      	strh	r3, [r4, #4]
 801230e:	2314      	movs	r3, #20
 8012310:	81a3      	strh	r3, [r4, #12]
 8012312:	e7e0      	b.n	80122d6 <net::acd_timer()+0x26>
 8012314:	f004 fa9a 	bl	801684c <random>
 8012318:	230a      	movs	r3, #10
 801231a:	fbb0 f2f3 	udiv	r2, r0, r3
 801231e:	fb02 0013 	mls	r0, r2, r3, r0
 8012322:	4418      	add	r0, r3
 8012324:	81a0      	strh	r0, [r4, #12]
 8012326:	e7d6      	b.n	80122d6 <net::acd_timer()+0x26>
 8012328:	89a3      	ldrh	r3, [r4, #12]
 801232a:	2b00      	cmp	r3, #0
 801232c:	d1d3      	bne.n	80122d6 <net::acd_timer()+0x26>
 801232e:	7963      	ldrb	r3, [r4, #5]
 8012330:	b913      	cbnz	r3, 8012338 <net::acd_timer()+0x88>
 8012332:	2204      	movs	r2, #4
 8012334:	7122      	strb	r2, [r4, #4]
 8012336:	71e3      	strb	r3, [r4, #7]
 8012338:	6820      	ldr	r0, [r4, #0]
 801233a:	f000 f9d3 	bl	80126e4 <net::arp_acd_send_announcement(net::ip_addr)>
 801233e:	2314      	movs	r3, #20
 8012340:	81a3      	strh	r3, [r4, #12]
 8012342:	7963      	ldrb	r3, [r4, #5]
 8012344:	3301      	adds	r3, #1
 8012346:	b2db      	uxtb	r3, r3
 8012348:	2b01      	cmp	r3, #1
 801234a:	7163      	strb	r3, [r4, #5]
 801234c:	d9c3      	bls.n	80122d6 <net::acd_timer()+0x26>
 801234e:	2305      	movs	r3, #5
 8012350:	80a3      	strh	r3, [r4, #4]
 8012352:	2000      	movs	r0, #0
 8012354:	68a3      	ldr	r3, [r4, #8]
 8012356:	81a0      	strh	r0, [r4, #12]
 8012358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801235c:	4718      	bx	r3
 801235e:	bf00      	nop
 8012360:	20002088 	andcs	r2, r0, r8, lsl #1

08012364 <net::acd_restart(net::acd::Acd*)>:
 8012364:	b510      	push	{r4, lr}
 8012366:	79c3      	ldrb	r3, [r0, #7]
 8012368:	4604      	mov	r4, r0
 801236a:	3301      	adds	r3, #1
 801236c:	71c3      	strb	r3, [r0, #7]
 801236e:	6883      	ldr	r3, [r0, #8]
 8012370:	2002      	movs	r0, #2
 8012372:	4798      	blx	r3
 8012374:	79e3      	ldrb	r3, [r4, #7]
 8012376:	2b09      	cmp	r3, #9
 8012378:	d905      	bls.n	8012386 <net::acd_restart(net::acd::Acd*)+0x22>
 801237a:	2307      	movs	r3, #7
 801237c:	7123      	strb	r3, [r4, #4]
 801237e:	f44f 7316 	mov.w	r3, #600	@ 0x258
 8012382:	81a3      	strh	r3, [r4, #12]
 8012384:	bd10      	pop	{r4, pc}
 8012386:	4620      	mov	r0, r4
 8012388:	f7ff ff66 	bl	8012258 <net::acd_stop(net::acd::Acd*)>
 801238c:	68a3      	ldr	r3, [r4, #8]
 801238e:	2001      	movs	r0, #1
 8012390:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012394:	4718      	bx	r3
	...

08012398 <net::acd_network_changed_link_down()>:
 8012398:	4b01      	ldr	r3, [pc, #4]	@ (80123a0 <net::acd_network_changed_link_down()+0x8>)
 801239a:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 801239c:	f7ff bf5c 	b.w	8012258 <net::acd_stop(net::acd::Acd*)>
 80123a0:	20002088 	andcs	r2, r0, r8, lsl #1

080123a4 <net::acd_arp_reply(t_arp*)>:
 80123a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123a8:	4e28      	ldr	r6, [pc, #160]	@ (801244c <net::acd_arp_reply(t_arp*)+0xa8>)
 80123aa:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 80123ac:	792f      	ldrb	r7, [r5, #4]
 80123ae:	2f03      	cmp	r7, #3
 80123b0:	4604      	mov	r4, r0
 80123b2:	d802      	bhi.n	80123ba <net::acd_arp_reply(t_arp*)+0x16>
 80123b4:	b9bf      	cbnz	r7, 80123e6 <net::acd_arp_reply(t_arp*)+0x42>
 80123b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123ba:	1f3b      	subs	r3, r7, #4
 80123bc:	2b02      	cmp	r3, #2
 80123be:	d8fa      	bhi.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 80123c0:	301c      	adds	r0, #28
 80123c2:	f7fe fb8b 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 80123c6:	682b      	ldr	r3, [r5, #0]
 80123c8:	4298      	cmp	r0, r3
 80123ca:	d1f4      	bne.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 80123cc:	f104 0315 	add.w	r3, r4, #21
 80123d0:	3613      	adds	r6, #19
 80123d2:	341b      	adds	r4, #27
 80123d4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80123d8:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 80123dc:	4291      	cmp	r1, r2
 80123de:	d121      	bne.n	8012424 <net::acd_arp_reply(t_arp*)+0x80>
 80123e0:	42a3      	cmp	r3, r4
 80123e2:	d1f7      	bne.n	80123d4 <net::acd_arp_reply(t_arp*)+0x30>
 80123e4:	e7e7      	b.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 80123e6:	301c      	adds	r0, #28
 80123e8:	f7fe fb78 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 80123ec:	682f      	ldr	r7, [r5, #0]
 80123ee:	42b8      	cmp	r0, r7
 80123f0:	d013      	beq.n	801241a <net::acd_arp_reply(t_arp*)+0x76>
 80123f2:	2800      	cmp	r0, #0
 80123f4:	d0df      	beq.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 80123f6:	f104 0026 	add.w	r0, r4, #38	@ 0x26
 80123fa:	f7fe fb6f 	bl	8010adc <net::memcpy_ip(unsigned char const*)>
 80123fe:	4287      	cmp	r7, r0
 8012400:	d1d9      	bne.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 8012402:	f104 0315 	add.w	r3, r4, #21
 8012406:	3613      	adds	r6, #19
 8012408:	341b      	adds	r4, #27
 801240a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801240e:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8012412:	4291      	cmp	r1, r2
 8012414:	d1cf      	bne.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 8012416:	42a3      	cmp	r3, r4
 8012418:	d1f7      	bne.n	801240a <net::acd_arp_reply(t_arp*)+0x66>
 801241a:	4628      	mov	r0, r5
 801241c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012420:	f7ff bfa0 	b.w	8012364 <net::acd_restart(net::acd::Acd*)>
 8012424:	2f06      	cmp	r7, #6
 8012426:	d107      	bne.n	8012438 <net::acd_arp_reply(t_arp*)+0x94>
 8012428:	4628      	mov	r0, r5
 801242a:	f7ff ff15 	bl	8012258 <net::acd_stop(net::acd::Acd*)>
 801242e:	68ab      	ldr	r3, [r5, #8]
 8012430:	2002      	movs	r0, #2
 8012432:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012436:	4718      	bx	r3
 8012438:	79ab      	ldrb	r3, [r5, #6]
 801243a:	2b00      	cmp	r3, #0
 801243c:	d1ed      	bne.n	801241a <net::acd_arp_reply(t_arp*)+0x76>
 801243e:	6828      	ldr	r0, [r5, #0]
 8012440:	f000 f950 	bl	80126e4 <net::arp_acd_send_announcement(net::ip_addr)>
 8012444:	2364      	movs	r3, #100	@ 0x64
 8012446:	71ab      	strb	r3, [r5, #6]
 8012448:	e7b5      	b.n	80123b6 <net::acd_arp_reply(t_arp*)+0x12>
 801244a:	bf00      	nop
 801244c:	20002088 	andcs	r2, r0, r8, lsl #1

08012450 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
 8012450:	4b01      	ldr	r3, [pc, #4]	@ (8012458 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x8>)
 8012452:	6081      	str	r1, [r0, #8]
 8012454:	6258      	str	r0, [r3, #36]	@ 0x24
 8012456:	4770      	bx	lr
 8012458:	20002088 	andcs	r2, r0, r8, lsl #1

0801245c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
 801245c:	b320      	cbz	r0, 80124a8 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 801245e:	b319      	cbz	r1, 80124a8 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 8012460:	4b12      	ldr	r3, [pc, #72]	@ (80124ac <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x50>)
 8012462:	b510      	push	{r4, lr}
 8012464:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8012466:	6823      	ldr	r3, [r4, #0]
 8012468:	4283      	cmp	r3, r0
 801246a:	d119      	bne.n	80124a0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 801246c:	b29b      	uxth	r3, r3
 801246e:	f64a 12fe 	movw	r2, #43518	@ 0xa9fe
 8012472:	4293      	cmp	r3, r2
 8012474:	d114      	bne.n	80124a0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8012476:	b289      	uxth	r1, r1
 8012478:	4299      	cmp	r1, r3
 801247a:	d011      	beq.n	80124a0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 801247c:	7923      	ldrb	r3, [r4, #4]
 801247e:	2b05      	cmp	r3, #5
 8012480:	d80c      	bhi.n	801249c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x40>
 8012482:	2b03      	cmp	r3, #3
 8012484:	d80d      	bhi.n	80124a2 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x46>
 8012486:	3b01      	subs	r3, #1
 8012488:	2b02      	cmp	r3, #2
 801248a:	d809      	bhi.n	80124a0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 801248c:	4620      	mov	r0, r4
 801248e:	f7ff fee3 	bl	8012258 <net::acd_stop(net::acd::Acd*)>
 8012492:	68a3      	ldr	r3, [r4, #8]
 8012494:	2002      	movs	r0, #2
 8012496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801249a:	4718      	bx	r3
 801249c:	2b07      	cmp	r3, #7
 801249e:	d0f5      	beq.n	801248c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x30>
 80124a0:	bd10      	pop	{r4, pc}
 80124a2:	2306      	movs	r3, #6
 80124a4:	7123      	strb	r3, [r4, #4]
 80124a6:	e7fb      	b.n	80124a0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80124a8:	4770      	bx	lr
 80124aa:	bf00      	nop
 80124ac:	20002088 	andcs	r2, r0, r8, lsl #1

080124b0 <net::arp_find_record(unsigned long, net::arp::Flags)>:
 80124b0:	4b17      	ldr	r3, [pc, #92]	@ (8012510 <net::arp_find_record(unsigned long, net::arp::Flags)+0x60>)
 80124b2:	b570      	push	{r4, r5, r6, lr}
 80124b4:	f04f 0e00 	mov.w	lr, #0
 80124b8:	4604      	mov	r4, r0
 80124ba:	f503 7cc0 	add.w	ip, r3, #384	@ 0x180
 80124be:	4676      	mov	r6, lr
 80124c0:	4675      	mov	r5, lr
 80124c2:	4670      	mov	r0, lr
 80124c4:	e004      	b.n	80124d0 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 80124c6:	2a03      	cmp	r2, #3
 80124c8:	d019      	beq.n	80124fe <net::arp_find_record(unsigned long, net::arp::Flags)+0x4e>
 80124ca:	3318      	adds	r3, #24
 80124cc:	4563      	cmp	r3, ip
 80124ce:	d012      	beq.n	80124f6 <net::arp_find_record(unsigned long, net::arp::Flags)+0x46>
 80124d0:	681a      	ldr	r2, [r3, #0]
 80124d2:	42a2      	cmp	r2, r4
 80124d4:	d01a      	beq.n	801250c <net::arp_find_record(unsigned long, net::arp::Flags)+0x5c>
 80124d6:	2901      	cmp	r1, #1
 80124d8:	d0f7      	beq.n	80124ca <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 80124da:	695a      	ldr	r2, [r3, #20]
 80124dc:	b1aa      	cbz	r2, 801250a <net::arp_find_record(unsigned long, net::arp::Flags)+0x5a>
 80124de:	2a02      	cmp	r2, #2
 80124e0:	d1f1      	bne.n	80124c6 <net::arp_find_record(unsigned long, net::arp::Flags)+0x16>
 80124e2:	8a5a      	ldrh	r2, [r3, #18]
 80124e4:	4572      	cmp	r2, lr
 80124e6:	bf88      	it	hi
 80124e8:	461d      	movhi	r5, r3
 80124ea:	f103 0318 	add.w	r3, r3, #24
 80124ee:	bf88      	it	hi
 80124f0:	4696      	movhi	lr, r2
 80124f2:	4563      	cmp	r3, ip
 80124f4:	d1ec      	bne.n	80124d0 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 80124f6:	2800      	cmp	r0, #0
 80124f8:	bf08      	it	eq
 80124fa:	4628      	moveq	r0, r5
 80124fc:	bd70      	pop	{r4, r5, r6, pc}
 80124fe:	8a5a      	ldrh	r2, [r3, #18]
 8012500:	42b2      	cmp	r2, r6
 8012502:	bf84      	itt	hi
 8012504:	4616      	movhi	r6, r2
 8012506:	4618      	movhi	r0, r3
 8012508:	e7df      	b.n	80124ca <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 801250a:	601c      	str	r4, [r3, #0]
 801250c:	4618      	mov	r0, r3
 801250e:	bd70      	pop	{r4, r5, r6, pc}
 8012510:	1000cb10 	andne	ip, r0, r0, lsl fp

08012514 <net::arp_timer()>:
 8012514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012518:	4c28      	ldr	r4, [pc, #160]	@ (80125bc <net::arp_timer()+0xa8>)
 801251a:	2703      	movs	r7, #3
 801251c:	f504 76c0 	add.w	r6, r4, #384	@ 0x180
 8012520:	f04f 0800 	mov.w	r8, #0
 8012524:	e006      	b.n	8012534 <net::arp_timer()+0x20>
 8012526:	2a01      	cmp	r2, #1
 8012528:	d101      	bne.n	801252e <net::arp_timer()+0x1a>
 801252a:	2b02      	cmp	r3, #2
 801252c:	d839      	bhi.n	80125a2 <net::arp_timer()+0x8e>
 801252e:	3418      	adds	r4, #24
 8012530:	42a6      	cmp	r6, r4
 8012532:	d02c      	beq.n	801258e <net::arp_timer()+0x7a>
 8012534:	f854 2c04 	ldr.w	r2, [r4, #-4]
 8012538:	2a00      	cmp	r2, #0
 801253a:	d0f8      	beq.n	801252e <net::arp_timer()+0x1a>
 801253c:	f834 3c06 	ldrh.w	r3, [r4, #-6]
 8012540:	3301      	adds	r3, #1
 8012542:	b29b      	uxth	r3, r3
 8012544:	2a02      	cmp	r2, #2
 8012546:	f824 3c06 	strh.w	r3, [r4, #-6]
 801254a:	d022      	beq.n	8012592 <net::arp_timer()+0x7e>
 801254c:	2a03      	cmp	r2, #3
 801254e:	d1ea      	bne.n	8012526 <net::arp_timer()+0x12>
 8012550:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8012554:	d9eb      	bls.n	801252e <net::arp_timer()+0x1a>
 8012556:	4d1a      	ldr	r5, [pc, #104]	@ (80125c0 <net::arp_timer()+0xac>)
 8012558:	2301      	movs	r3, #1
 801255a:	f844 3c04 	str.w	r3, [r4, #-4]
 801255e:	f854 3c18 	ldr.w	r3, [r4, #-24]
 8012562:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8012566:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 801256a:	602b      	str	r3, [r5, #0]
 801256c:	4628      	mov	r0, r5
 801256e:	f834 3c08 	ldrh.w	r3, [r4, #-8]
 8012572:	80ab      	strh	r3, [r5, #4]
 8012574:	213c      	movs	r1, #60	@ 0x3c
 8012576:	f7ff fdef 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 801257a:	4628      	mov	r0, r5
 801257c:	1dab      	adds	r3, r5, #6
 801257e:	22ff      	movs	r2, #255	@ 0xff
 8012580:	f800 2b01 	strb.w	r2, [r0], #1
 8012584:	4298      	cmp	r0, r3
 8012586:	d1fb      	bne.n	8012580 <net::arp_timer()+0x6c>
 8012588:	3418      	adds	r4, #24
 801258a:	42a6      	cmp	r6, r4
 801258c:	d1d2      	bne.n	8012534 <net::arp_timer()+0x20>
 801258e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012592:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 8012596:	d9ca      	bls.n	801252e <net::arp_timer()+0x1a>
 8012598:	f844 7c04 	str.w	r7, [r4, #-4]
 801259c:	f824 8c06 	strh.w	r8, [r4, #-6]
 80125a0:	e7c5      	b.n	801252e <net::arp_timer()+0x1a>
 80125a2:	f854 0c14 	ldr.w	r0, [r4, #-20]
 80125a6:	b108      	cbz	r0, 80125ac <net::arp_timer()+0x98>
 80125a8:	f004 fb44 	bl	8016c34 <operator delete[](void*)>
 80125ac:	f1a4 0318 	sub.w	r3, r4, #24
 80125b0:	2200      	movs	r2, #0
 80125b2:	f843 2b04 	str.w	r2, [r3], #4
 80125b6:	42a3      	cmp	r3, r4
 80125b8:	d1fb      	bne.n	80125b2 <net::arp_timer()+0x9e>
 80125ba:	e7b8      	b.n	801252e <net::arp_timer()+0x1a>
 80125bc:	1000cb28 	andne	ip, r0, r8, lsr #22
 80125c0:	200020f4 	strdcs	r2, [r0], -r4

080125c4 <net::arp_send(t_udp*, unsigned long, unsigned long)>:
 80125c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80125c6:	4b39      	ldr	r3, [pc, #228]	@ (80126ac <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>)
 80125c8:	681b      	ldr	r3, [r3, #0]
 80125ca:	4604      	mov	r4, r0
 80125cc:	4393      	bics	r3, r2
 80125ce:	f04f 0000 	mov.w	r0, #0
 80125d2:	4615      	mov	r5, r2
 80125d4:	f8c4 201e 	str.w	r2, [r4, #30]
 80125d8:	7620      	strb	r0, [r4, #24]
 80125da:	7660      	strb	r0, [r4, #25]
 80125dc:	460e      	mov	r6, r1
 80125de:	d15c      	bne.n	801269a <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd6>
 80125e0:	4b33      	ldr	r3, [pc, #204]	@ (80126b0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xec>)
 80125e2:	f503 72c0 	add.w	r2, r3, #384	@ 0x180
 80125e6:	6959      	ldr	r1, [r3, #20]
 80125e8:	2901      	cmp	r1, #1
 80125ea:	dd02      	ble.n	80125f2 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2e>
 80125ec:	6819      	ldr	r1, [r3, #0]
 80125ee:	42a9      	cmp	r1, r5
 80125f0:	d031      	beq.n	8012656 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x92>
 80125f2:	3318      	adds	r3, #24
 80125f4:	4293      	cmp	r3, r2
 80125f6:	d1f6      	bne.n	80125e6 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x22>
 80125f8:	2100      	movs	r1, #0
 80125fa:	4628      	mov	r0, r5
 80125fc:	f7ff ff58 	bl	80124b0 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8012600:	6943      	ldr	r3, [r0, #20]
 8012602:	4607      	mov	r7, r0
 8012604:	b1d3      	cbz	r3, 801263c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x78>
 8012606:	2b01      	cmp	r3, #1
 8012608:	d000      	beq.n	801260c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 801260a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801260c:	6878      	ldr	r0, [r7, #4]
 801260e:	b108      	cbz	r0, 8012614 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x50>
 8012610:	f004 fb10 	bl	8016c34 <operator delete[](void*)>
 8012614:	4630      	mov	r0, r6
 8012616:	f004 fb13 	bl	8016c40 <operator new[](unsigned int)>
 801261a:	ea44 0200 	orr.w	r2, r4, r0
 801261e:	0792      	lsls	r2, r2, #30
 8012620:	4603      	mov	r3, r0
 8012622:	6078      	str	r0, [r7, #4]
 8012624:	d027      	beq.n	8012676 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xb2>
 8012626:	4631      	mov	r1, r6
 8012628:	b131      	cbz	r1, 8012638 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
 801262a:	4421      	add	r1, r4
 801262c:	f814 2b01 	ldrb.w	r2, [r4], #1
 8012630:	f803 2b01 	strb.w	r2, [r3], #1
 8012634:	428c      	cmp	r4, r1
 8012636:	d1f9      	bne.n	801262c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
 8012638:	60be      	str	r6, [r7, #8]
 801263a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801263c:	8243      	strh	r3, [r0, #18]
 801263e:	2301      	movs	r3, #1
 8012640:	481c      	ldr	r0, [pc, #112]	@ (80126b4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf0>)
 8012642:	617b      	str	r3, [r7, #20]
 8012644:	213c      	movs	r1, #60	@ 0x3c
 8012646:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 801264a:	f7ff fd85 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 801264e:	697b      	ldr	r3, [r7, #20]
 8012650:	2b01      	cmp	r3, #1
 8012652:	d1da      	bne.n	801260a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x46>
 8012654:	e7da      	b.n	801260c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 8012656:	f103 020c 	add.w	r2, r3, #12
 801265a:	4621      	mov	r1, r4
 801265c:	3312      	adds	r3, #18
 801265e:	f812 0b01 	ldrb.w	r0, [r2], #1
 8012662:	f801 0b01 	strb.w	r0, [r1], #1
 8012666:	429a      	cmp	r2, r3
 8012668:	d1f9      	bne.n	801265e <net::arp_send(t_udp*, unsigned long, unsigned long)+0x9a>
 801266a:	4631      	mov	r1, r6
 801266c:	4620      	mov	r0, r4
 801266e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8012672:	f7ff bd71 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 8012676:	2e03      	cmp	r6, #3
 8012678:	d9d5      	bls.n	8012626 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x62>
 801267a:	1f35      	subs	r5, r6, #4
 801267c:	f025 0503 	bic.w	r5, r5, #3
 8012680:	3504      	adds	r5, #4
 8012682:	1960      	adds	r0, r4, r5
 8012684:	461a      	mov	r2, r3
 8012686:	f854 1b04 	ldr.w	r1, [r4], #4
 801268a:	f842 1b04 	str.w	r1, [r2], #4
 801268e:	4284      	cmp	r4, r0
 8012690:	d1f9      	bne.n	8012686 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc2>
 8012692:	442b      	add	r3, r5
 8012694:	f006 0103 	and.w	r1, r6, #3
 8012698:	e7c6      	b.n	8012628 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x64>
 801269a:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 801269e:	b292      	uxth	r2, r2
 80126a0:	429a      	cmp	r2, r3
 80126a2:	bf1c      	itt	ne
 80126a4:	4b04      	ldrne	r3, [pc, #16]	@ (80126b8 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf4>)
 80126a6:	689d      	ldrne	r5, [r3, #8]
 80126a8:	e79a      	b.n	80125e0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c>
 80126aa:	bf00      	nop
 80126ac:	2000206c 	andcs	r2, r0, ip, rrx
 80126b0:	1000cb10 	andne	ip, r0, r0, lsl fp
 80126b4:	200020f4 	strdcs	r2, [r0], -r4
 80126b8:	20002088 	andcs	r2, r0, r8, lsl #1

080126bc <net::arp_acd_probe(net::ip_addr)>:
 80126bc:	b510      	push	{r4, lr}
 80126be:	4c07      	ldr	r4, [pc, #28]	@ (80126dc <net::arp_acd_probe(net::ip_addr)+0x20>)
 80126c0:	4603      	mov	r3, r0
 80126c2:	2200      	movs	r2, #0
 80126c4:	213c      	movs	r1, #60	@ 0x3c
 80126c6:	4620      	mov	r0, r4
 80126c8:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 80126cc:	61e2      	str	r2, [r4, #28]
 80126ce:	f7ff fd43 	bl	8012158 <emac_eth_send(void*, unsigned long)>
 80126d2:	4b03      	ldr	r3, [pc, #12]	@ (80126e0 <net::arp_acd_probe(net::ip_addr)+0x24>)
 80126d4:	681b      	ldr	r3, [r3, #0]
 80126d6:	61e3      	str	r3, [r4, #28]
 80126d8:	bd10      	pop	{r4, pc}
 80126da:	bf00      	nop
 80126dc:	200020f4 	strdcs	r2, [r0], -r4
 80126e0:	20002088 	andcs	r2, r0, r8, lsl #1

080126e4 <net::arp_acd_send_announcement(net::ip_addr)>:
 80126e4:	4a04      	ldr	r2, [pc, #16]	@ (80126f8 <net::arp_acd_send_announcement(net::ip_addr)+0x14>)
 80126e6:	4603      	mov	r3, r0
 80126e8:	213c      	movs	r1, #60	@ 0x3c
 80126ea:	4610      	mov	r0, r2
 80126ec:	f8c2 3026 	str.w	r3, [r2, #38]	@ 0x26
 80126f0:	61d3      	str	r3, [r2, #28]
 80126f2:	f7ff bd31 	b.w	8012158 <emac_eth_send(void*, unsigned long)>
 80126f6:	bf00      	nop
 80126f8:	200020f4 	strdcs	r2, [r0], -r4

080126fc <net::ip_set_ip()>:
 80126fc:	b508      	push	{r3, lr}
 80126fe:	f7ff f85b 	bl	80117b8 <net::udp_set_ip()>
 8012702:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012706:	f7fe bc39 	b.w	8010f7c <net::igmp_set_ip()>
 801270a:	bf00      	nop

0801270c <net::phy_get_link(unsigned long)>:
 801270c:	b507      	push	{r0, r1, r2, lr}
 801270e:	2300      	movs	r3, #0
 8012710:	f10d 0206 	add.w	r2, sp, #6
 8012714:	2101      	movs	r1, #1
 8012716:	f8ad 3006 	strh.w	r3, [sp, #6]
 801271a:	f7ff fb8b 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801271e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012722:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012726:	b003      	add	sp, #12
 8012728:	f85d fb04 	ldr.w	pc, [sp], #4

0801272c <net::phy_start(unsigned long, net::PhyStatus&)>:
 801272c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012730:	460d      	mov	r5, r1
 8012732:	f10d 0206 	add.w	r2, sp, #6
 8012736:	2104      	movs	r1, #4
 8012738:	4604      	mov	r4, r0
 801273a:	f7ff fb7b 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801273e:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8012742:	f240 1241 	movw	r2, #321	@ 0x141
 8012746:	f401 637e 	and.w	r3, r1, #4064	@ 0xfe0
 801274a:	4313      	orrs	r3, r2
 801274c:	f411 616a 	ands.w	r1, r1, #3744	@ 0xea0
 8012750:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012754:	d10a      	bne.n	801276c <net::phy_start(unsigned long, net::PhyStatus&)+0x40>
 8012756:	f10d 0206 	add.w	r2, sp, #6
 801275a:	4620      	mov	r0, r4
 801275c:	f7ff fb6a 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012760:	b9f8      	cbnz	r0, 80127a2 <net::phy_start(unsigned long, net::PhyStatus&)+0x76>
 8012762:	2600      	movs	r6, #0
 8012764:	4630      	mov	r0, r6
 8012766:	b003      	add	sp, #12
 8012768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801276c:	2104      	movs	r1, #4
 801276e:	4620      	mov	r0, r4
 8012770:	f7ff fb6b 	bl	8011e4a <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8012774:	2800      	cmp	r0, #0
 8012776:	d0f4      	beq.n	8012762 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8012778:	f10d 0206 	add.w	r2, sp, #6
 801277c:	2100      	movs	r1, #0
 801277e:	4620      	mov	r0, r4
 8012780:	f7ff fb58 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012784:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012788:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 801278c:	f442 5290 	orr.w	r2, r2, #4608	@ 0x1200
 8012790:	b292      	uxth	r2, r2
 8012792:	2100      	movs	r1, #0
 8012794:	4620      	mov	r0, r4
 8012796:	f8ad 2006 	strh.w	r2, [sp, #6]
 801279a:	f7ff fb56 	bl	8011e4a <net::phy_write(unsigned long, unsigned long, unsigned short)>
 801279e:	b938      	cbnz	r0, 80127b0 <net::phy_start(unsigned long, net::PhyStatus&)+0x84>
 80127a0:	e7df      	b.n	8012762 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 80127a2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80127a6:	f403 53a0 	and.w	r3, r3, #5120	@ 0x1400
 80127aa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80127ae:	d1e3      	bne.n	8012778 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
 80127b0:	f10d 0206 	add.w	r2, sp, #6
 80127b4:	2101      	movs	r1, #1
 80127b6:	4620      	mov	r0, r4
 80127b8:	f7ff fb3c 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80127bc:	4606      	mov	r6, r0
 80127be:	2800      	cmp	r0, #0
 80127c0:	d0cf      	beq.n	8012762 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 80127c2:	682a      	ldr	r2, [r5, #0]
 80127c4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80127c8:	b90a      	cbnz	r2, 80127ce <net::phy_start(unsigned long, net::PhyStatus&)+0xa2>
 80127ca:	0759      	lsls	r1, r3, #29
 80127cc:	d40f      	bmi.n	80127ee <net::phy_start(unsigned long, net::PhyStatus&)+0xc2>
 80127ce:	069a      	lsls	r2, r3, #26
 80127d0:	d43b      	bmi.n	801284a <net::phy_start(unsigned long, net::PhyStatus&)+0x11e>
 80127d2:	4f25      	ldr	r7, [pc, #148]	@ (8012868 <net::phy_start(unsigned long, net::PhyStatus&)+0x13c>)
 80127d4:	4825      	ldr	r0, [pc, #148]	@ (801286c <net::phy_start(unsigned long, net::PhyStatus&)+0x140>)
 80127d6:	f004 f830 	bl	801683a <puts>
 80127da:	f8d7 8000 	ldr.w	r8, [r7]
 80127de:	f241 3988 	movw	r9, #5000	@ 0x1388
 80127e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80127e6:	069b      	lsls	r3, r3, #26
 80127e8:	d523      	bpl.n	8012832 <net::phy_start(unsigned long, net::PhyStatus&)+0x106>
 80127ea:	2301      	movs	r3, #1
 80127ec:	602b      	str	r3, [r5, #0]
 80127ee:	2300      	movs	r3, #0
 80127f0:	e9c5 3301 	strd	r3, r3, [r5, #4]
 80127f4:	aa01      	add	r2, sp, #4
 80127f6:	2104      	movs	r1, #4
 80127f8:	4620      	mov	r0, r4
 80127fa:	f7ff fb1b 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80127fe:	f10d 0206 	add.w	r2, sp, #6
 8012802:	2105      	movs	r1, #5
 8012804:	4620      	mov	r0, r4
 8012806:	f7ff fb15 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801280a:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801280e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012812:	4013      	ands	r3, r2
 8012814:	f413 7fc0 	tst.w	r3, #384	@ 0x180
 8012818:	d022      	beq.n	8012860 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
 801281a:	2201      	movs	r2, #1
 801281c:	60aa      	str	r2, [r5, #8]
 801281e:	f413 7f80 	tst.w	r3, #256	@ 0x100
 8012822:	d001      	beq.n	8012828 <net::phy_start(unsigned long, net::PhyStatus&)+0xfc>
 8012824:	2301      	movs	r3, #1
 8012826:	606b      	str	r3, [r5, #4]
 8012828:	4620      	mov	r0, r4
 801282a:	f7ff ff6f 	bl	801270c <net::phy_get_link(unsigned long)>
 801282e:	6028      	str	r0, [r5, #0]
 8012830:	e798      	b.n	8012764 <net::phy_start(unsigned long, net::PhyStatus&)+0x38>
 8012832:	683b      	ldr	r3, [r7, #0]
 8012834:	eba3 0308 	sub.w	r3, r3, r8
 8012838:	454b      	cmp	r3, r9
 801283a:	d892      	bhi.n	8012762 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 801283c:	f10d 0206 	add.w	r2, sp, #6
 8012840:	2101      	movs	r1, #1
 8012842:	4620      	mov	r0, r4
 8012844:	f7ff faf6 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012848:	e7cb      	b.n	80127e2 <net::phy_start(unsigned long, net::PhyStatus&)+0xb6>
 801284a:	f10d 0206 	add.w	r2, sp, #6
 801284e:	2101      	movs	r1, #1
 8012850:	4620      	mov	r0, r4
 8012852:	f7ff faef 	bl	8011e34 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012856:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801285a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801285e:	e7c5      	b.n	80127ec <net::phy_start(unsigned long, net::PhyStatus&)+0xc0>
 8012860:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8012864:	e7dd      	b.n	8012822 <net::phy_start(unsigned long, net::PhyStatus&)+0xf6>
 8012866:	bf00      	nop
 8012868:	20009ae8 	andcs	r9, r0, r8, ror #21
 801286c:	08017a33 	stmdaeq	r1, {r0, r1, r4, r5, r9, fp, ip, sp, lr}

08012870 <Display::ClearEndOfLine() [clone .isra.0]>:
 8012870:	b108      	cbz	r0, 8012876 <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 8012872:	2301      	movs	r3, #1
 8012874:	7303      	strb	r3, [r0, #12]
 8012876:	4770      	bx	lr

08012878 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8012878:	b430      	push	{r4, r5}
 801287a:	b160      	cbz	r0, 8012896 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 801287c:	6845      	ldr	r5, [r0, #4]
 801287e:	2300      	movs	r3, #0
 8012880:	5cd4      	ldrb	r4, [r2, r3]
 8012882:	b11c      	cbz	r4, 801288c <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8012884:	1c5c      	adds	r4, r3, #1
 8012886:	429d      	cmp	r5, r3
 8012888:	4623      	mov	r3, r4
 801288a:	d8f9      	bhi.n	8012880 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 801288c:	6804      	ldr	r4, [r0, #0]
 801288e:	69e4      	ldr	r4, [r4, #28]
 8012890:	46a4      	mov	ip, r4
 8012892:	bc30      	pop	{r4, r5}
 8012894:	4760      	bx	ip
 8012896:	bc30      	pop	{r4, r5}
 8012898:	4770      	bx	lr

0801289a <Display::Printf(unsigned long, char const*, ...)>:
 801289a:	b40c      	push	{r2, r3}
 801289c:	b570      	push	{r4, r5, r6, lr}
 801289e:	6984      	ldr	r4, [r0, #24]
 80128a0:	b08a      	sub	sp, #40	@ 0x28
 80128a2:	4605      	mov	r5, r0
 80128a4:	460e      	mov	r6, r1
 80128a6:	b174      	cbz	r4, 80128c6 <Display::Printf(unsigned long, char const*, ...)+0x2c>
 80128a8:	ab0f      	add	r3, sp, #60	@ 0x3c
 80128aa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80128ac:	9301      	str	r3, [sp, #4]
 80128ae:	2120      	movs	r1, #32
 80128b0:	a802      	add	r0, sp, #8
 80128b2:	f003 ffad 	bl	8016810 <vsnprintf>
 80128b6:	4604      	mov	r4, r0
 80128b8:	69a8      	ldr	r0, [r5, #24]
 80128ba:	6803      	ldr	r3, [r0, #0]
 80128bc:	aa02      	add	r2, sp, #8
 80128be:	69dd      	ldr	r5, [r3, #28]
 80128c0:	4631      	mov	r1, r6
 80128c2:	4623      	mov	r3, r4
 80128c4:	47a8      	blx	r5
 80128c6:	4620      	mov	r0, r4
 80128c8:	b00a      	add	sp, #40	@ 0x28
 80128ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80128ce:	b002      	add	sp, #8
 80128d0:	4770      	bx	lr
	...

080128d4 <DisplayUdf::ShowIpAddress()>:
 80128d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128d8:	4e16      	ldr	r6, [pc, #88]	@ (8012934 <DisplayUdf::ShowIpAddress()+0x60>)
 80128da:	b086      	sub	sp, #24
 80128dc:	4605      	mov	r5, r0
 80128de:	6980      	ldr	r0, [r0, #24]
 80128e0:	f7ff ffc6 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 80128e4:	6870      	ldr	r0, [r6, #4]
 80128e6:	6834      	ldr	r4, [r6, #0]
 80128e8:	f895 703e 	ldrb.w	r7, [r5, #62]	@ 0x3e
 80128ec:	f004 f9f6 	bl	8016cdc <__popcountsi2>
 80128f0:	7eb3      	ldrb	r3, [r6, #26]
 80128f2:	075a      	lsls	r2, r3, #29
 80128f4:	fa5f f884 	uxtb.w	r8, r4
 80128f8:	f3c4 2907 	ubfx	r9, r4, #8, #8
 80128fc:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 8012900:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8012904:	d413      	bmi.n	801292e <DisplayUdf::ShowIpAddress()+0x5a>
 8012906:	f013 0f02 	tst.w	r3, #2
 801290a:	bf0c      	ite	eq
 801290c:	2253      	moveq	r2, #83	@ 0x53
 801290e:	2244      	movne	r2, #68	@ 0x44
 8012910:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8012914:	e9cd a401 	strd	sl, r4, [sp, #4]
 8012918:	4a07      	ldr	r2, [pc, #28]	@ (8012938 <DisplayUdf::ShowIpAddress()+0x64>)
 801291a:	f8cd 9000 	str.w	r9, [sp]
 801291e:	4643      	mov	r3, r8
 8012920:	4639      	mov	r1, r7
 8012922:	4628      	mov	r0, r5
 8012924:	f7ff ffb9 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012928:	b006      	add	sp, #24
 801292a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801292e:	225a      	movs	r2, #90	@ 0x5a
 8012930:	e7ee      	b.n	8012910 <DisplayUdf::ShowIpAddress()+0x3c>
 8012932:	bf00      	nop
 8012934:	20002088 	andcs	r2, r0, r8, lsl #1
 8012938:	08017a60 	stmdaeq	r1, {r5, r6, r9, fp, ip, sp, lr}

0801293c <DisplayUdf::DisplayUdf()>:
 801293c:	b510      	push	{r4, lr}
 801293e:	4604      	mov	r4, r0
 8012940:	f001 f89a 	bl	8013a78 <Display::Display()>
 8012944:	2202      	movs	r2, #2
 8012946:	2300      	movs	r3, #0
 8012948:	e9c4 2314 	strd	r2, r3, [r4, #80]	@ 0x50
 801294c:	4b05      	ldr	r3, [pc, #20]	@ (8012964 <DisplayUdf::DisplayUdf()+0x28>)
 801294e:	f104 023b 	add.w	r2, r4, #59	@ 0x3b
 8012952:	601c      	str	r4, [r3, #0]
 8012954:	2301      	movs	r3, #1
 8012956:	f802 3f01 	strb.w	r3, [r2, #1]!
 801295a:	3301      	adds	r3, #1
 801295c:	2b15      	cmp	r3, #21
 801295e:	d1fa      	bne.n	8012956 <DisplayUdf::DisplayUdf()+0x1a>
 8012960:	4620      	mov	r0, r4
 8012962:	bd10      	pop	{r4, pc}
 8012964:	20002130 	andcs	r2, r0, r0, lsr r1

08012968 <DisplayUdf::SetTitle(char const*, ...)>:
 8012968:	b40e      	push	{r1, r2, r3}
 801296a:	b517      	push	{r0, r1, r2, r4, lr}
 801296c:	ab05      	add	r3, sp, #20
 801296e:	4604      	mov	r4, r0
 8012970:	f853 2b04 	ldr.w	r2, [r3], #4
 8012974:	9301      	str	r3, [sp, #4]
 8012976:	211f      	movs	r1, #31
 8012978:	301c      	adds	r0, #28
 801297a:	f003 ff49 	bl	8016810 <vsnprintf>
 801297e:	4404      	add	r4, r0
 8012980:	2300      	movs	r3, #0
 8012982:	7723      	strb	r3, [r4, #28]
 8012984:	b003      	add	sp, #12
 8012986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801298a:	b003      	add	sp, #12
 801298c:	4770      	bx	lr

0801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>:
 801298e:	1e4b      	subs	r3, r1, #1
 8012990:	2b05      	cmp	r3, #5
 8012992:	b530      	push	{r4, r5, lr}
 8012994:	d810      	bhi.n	80129b8 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2a>
 8012996:	f100 043b 	add.w	r4, r0, #59	@ 0x3b
 801299a:	2300      	movs	r3, #0
 801299c:	b2c9      	uxtb	r1, r1
 801299e:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80129a2:	428d      	cmp	r5, r1
 80129a4:	d109      	bne.n	80129ba <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2c>
 80129a6:	1884      	adds	r4, r0, r2
 80129a8:	4403      	add	r3, r0
 80129aa:	f894 403c 	ldrb.w	r4, [r4, #60]	@ 0x3c
 80129ae:	f883 403c 	strb.w	r4, [r3, #60]	@ 0x3c
 80129b2:	4410      	add	r0, r2
 80129b4:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 80129b8:	bd30      	pop	{r4, r5, pc}
 80129ba:	3301      	adds	r3, #1
 80129bc:	2b14      	cmp	r3, #20
 80129be:	d1ee      	bne.n	801299e <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x10>
 80129c0:	e7f7      	b.n	80129b2 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x24>
	...

080129c4 <DisplayUdf::Show()>:
 80129c4:	b530      	push	{r4, r5, lr}
 80129c6:	4604      	mov	r4, r0
 80129c8:	b085      	sub	sp, #20
 80129ca:	f000 fa17 	bl	8012dfc <DisplayUdf::ShowE131Bridge()>
 80129ce:	f104 033b 	add.w	r3, r4, #59	@ 0x3b
 80129d2:	f104 024f 	add.w	r2, r4, #79	@ 0x4f
 80129d6:	21ff      	movs	r1, #255	@ 0xff
 80129d8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80129dc:	2806      	cmp	r0, #6
 80129de:	bf88      	it	hi
 80129e0:	7019      	strbhi	r1, [r3, #0]
 80129e2:	4293      	cmp	r3, r2
 80129e4:	d1f8      	bne.n	80129d8 <DisplayUdf::Show()+0x14>
 80129e6:	69a0      	ldr	r0, [r4, #24]
 80129e8:	4d2a      	ldr	r5, [pc, #168]	@ (8012a94 <DisplayUdf::Show()+0xd0>)
 80129ea:	f7ff ff41 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 80129ee:	f104 021c 	add.w	r2, r4, #28
 80129f2:	f894 103c 	ldrb.w	r1, [r4, #60]	@ 0x3c
 80129f6:	f7ff ff3f 	bl	8012878 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 80129fa:	69a0      	ldr	r0, [r4, #24]
 80129fc:	4a26      	ldr	r2, [pc, #152]	@ (8012a98 <DisplayUdf::Show()+0xd4>)
 80129fe:	f7ff ff37 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 8012a02:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 8012a06:	f7ff ff37 	bl	8012878 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8012a0a:	69a0      	ldr	r0, [r4, #24]
 8012a0c:	4a23      	ldr	r2, [pc, #140]	@ (8012a9c <DisplayUdf::Show()+0xd8>)
 8012a0e:	f7ff ff2f 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 8012a12:	4b23      	ldr	r3, [pc, #140]	@ (8012aa0 <DisplayUdf::Show()+0xdc>)
 8012a14:	9300      	str	r3, [sp, #0]
 8012a16:	f894 103f 	ldrb.w	r1, [r4, #63]	@ 0x3f
 8012a1a:	2303      	movs	r3, #3
 8012a1c:	4620      	mov	r0, r4
 8012a1e:	f7ff ff3c 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012a22:	4620      	mov	r0, r4
 8012a24:	f7ff ff56 	bl	80128d4 <DisplayUdf::ShowIpAddress()>
 8012a28:	69a0      	ldr	r0, [r4, #24]
 8012a2a:	f7ff ff21 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 8012a2e:	68ab      	ldr	r3, [r5, #8]
 8012a30:	0e1a      	lsrs	r2, r3, #24
 8012a32:	9202      	str	r2, [sp, #8]
 8012a34:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012a38:	9201      	str	r2, [sp, #4]
 8012a3a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012a3e:	9200      	str	r2, [sp, #0]
 8012a40:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 8012a44:	4a17      	ldr	r2, [pc, #92]	@ (8012aa4 <DisplayUdf::Show()+0xe0>)
 8012a46:	b2db      	uxtb	r3, r3
 8012a48:	4620      	mov	r0, r4
 8012a4a:	f7ff ff26 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012a4e:	69a0      	ldr	r0, [r4, #24]
 8012a50:	f7ff ff0e 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 8012a54:	686b      	ldr	r3, [r5, #4]
 8012a56:	0e1a      	lsrs	r2, r3, #24
 8012a58:	9202      	str	r2, [sp, #8]
 8012a5a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012a5e:	9201      	str	r2, [sp, #4]
 8012a60:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012a64:	9200      	str	r2, [sp, #0]
 8012a66:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8012a6a:	4a0f      	ldr	r2, [pc, #60]	@ (8012aa8 <DisplayUdf::Show()+0xe4>)
 8012a6c:	b2db      	uxtb	r3, r3
 8012a6e:	4620      	mov	r0, r4
 8012a70:	f7ff ff13 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012a74:	4620      	mov	r0, r4
 8012a76:	f7ff ff2d 	bl	80128d4 <DisplayUdf::ShowIpAddress()>
 8012a7a:	69a0      	ldr	r0, [r4, #24]
 8012a7c:	f7ff fef8 	bl	8012870 <Display::ClearEndOfLine() [clone .isra.0]>
 8012a80:	4b0a      	ldr	r3, [pc, #40]	@ (8012aac <DisplayUdf::Show()+0xe8>)
 8012a82:	f894 1043 	ldrb.w	r1, [r4, #67]	@ 0x43
 8012a86:	681a      	ldr	r2, [r3, #0]
 8012a88:	3216      	adds	r2, #22
 8012a8a:	b005      	add	sp, #20
 8012a8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012a90:	f7ff bef2 	b.w	8012878 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8012a94:	20002088 	andcs	r2, r0, r8, lsl #1
 8012a98:	080174ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp, lr}
 8012a9c:	08017a72 	stmdaeq	r1, {r1, r4, r5, r6, r9, fp, ip, sp, lr}
 8012aa0:	20002220 	andcs	r2, r0, r0, lsr #4
 8012aa4:	08017a81 	stmdaeq	r1, {r0, r7, r9, fp, ip, sp, lr}
 8012aa8:	08017a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, sp, lr}
 8012aac:	20002068 	andcs	r2, r0, r8, rrx

08012ab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 8012ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ab2:	88c6      	ldrh	r6, [r0, #6]
 8012ab4:	8885      	ldrh	r5, [r0, #4]
 8012ab6:	42ae      	cmp	r6, r5
 8012ab8:	d216      	bcs.n	8012ae8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 8012aba:	4604      	mov	r4, r0
 8012abc:	6800      	ldr	r0, [r0, #0]
 8012abe:	1bad      	subs	r5, r5, r6
 8012ac0:	4430      	add	r0, r6
 8012ac2:	7a26      	ldrb	r6, [r4, #8]
 8012ac4:	b923      	cbnz	r3, 8012ad0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 8012ac6:	b926      	cbnz	r6, 8012ad2 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 8012ac8:	9200      	str	r2, [sp, #0]
 8012aca:	460b      	mov	r3, r1
 8012acc:	4a09      	ldr	r2, [pc, #36]	@ (8012af4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 8012ace:	e003      	b.n	8012ad8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8012ad0:	b166      	cbz	r6, 8012aec <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 8012ad2:	9200      	str	r2, [sp, #0]
 8012ad4:	4a08      	ldr	r2, [pc, #32]	@ (8012af8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 8012ad6:	460b      	mov	r3, r1
 8012ad8:	4629      	mov	r1, r5
 8012ada:	f003 fe81 	bl	80167e0 <snprintf>
 8012ade:	4285      	cmp	r5, r0
 8012ae0:	bfa2      	ittt	ge
 8012ae2:	88e3      	ldrhge	r3, [r4, #6]
 8012ae4:	181b      	addge	r3, r3, r0
 8012ae6:	80e3      	strhge	r3, [r4, #6]
 8012ae8:	b002      	add	sp, #8
 8012aea:	bd70      	pop	{r4, r5, r6, pc}
 8012aec:	9200      	str	r2, [sp, #0]
 8012aee:	460b      	mov	r3, r1
 8012af0:	4a02      	ldr	r2, [pc, #8]	@ (8012afc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 8012af2:	e7f1      	b.n	8012ad8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8012af4:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 8012af8:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 8012afc:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

08012b00 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>:
 8012b00:	b507      	push	{r0, r1, r2, lr}
 8012b02:	2300      	movs	r3, #0
 8012b04:	2101      	movs	r1, #1
 8012b06:	e9cd 3100 	strd	r3, r1, [sp]
 8012b0a:	4602      	mov	r2, r0
 8012b0c:	4804      	ldr	r0, [pc, #16]	@ (8012b20 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)+0x20>)
 8012b0e:	2322      	movs	r3, #34	@ 0x22
 8012b10:	6800      	ldr	r0, [r0, #0]
 8012b12:	210d      	movs	r1, #13
 8012b14:	f000 fb5e 	bl	80131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8012b18:	b003      	add	sp, #12
 8012b1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8012b1e:	bf00      	nop
 8012b20:	20002134 	andcs	r2, r0, r4, lsr r1

08012b24 <DisplayUdfParams::DisplayUdfParams()>:
 8012b24:	b510      	push	{r4, lr}
 8012b26:	2220      	movs	r2, #32
 8012b28:	4604      	mov	r4, r0
 8012b2a:	2100      	movs	r1, #0
 8012b2c:	f003 fb4c 	bl	80161c8 <memset>
 8012b30:	2305      	movs	r3, #5
 8012b32:	f884 3020 	strb.w	r3, [r4, #32]
 8012b36:	237f      	movs	r3, #127	@ 0x7f
 8012b38:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8012b3c:	4620      	mov	r0, r4
 8012b3e:	bd10      	pop	{r4, pc}

08012b40 <DisplayUdfParams::Load()>:
 8012b40:	b508      	push	{r3, lr}
 8012b42:	2200      	movs	r2, #0
 8012b44:	7002      	strb	r2, [r0, #0]
 8012b46:	7042      	strb	r2, [r0, #1]
 8012b48:	7082      	strb	r2, [r0, #2]
 8012b4a:	70c2      	strb	r2, [r0, #3]
 8012b4c:	f7ff ffd8 	bl	8012b00 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8012b50:	bd08      	pop	{r3, pc}
	...

08012b54 <DisplayUdfParams::Load(char const*, unsigned long)>:
 8012b54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b56:	2500      	movs	r5, #0
 8012b58:	b087      	sub	sp, #28
 8012b5a:	4604      	mov	r4, r0
 8012b5c:	460e      	mov	r6, r1
 8012b5e:	4617      	mov	r7, r2
 8012b60:	7005      	strb	r5, [r0, #0]
 8012b62:	7045      	strb	r5, [r0, #1]
 8012b64:	7085      	strb	r5, [r0, #2]
 8012b66:	70c5      	strb	r5, [r0, #3]
 8012b68:	4602      	mov	r2, r0
 8012b6a:	490c      	ldr	r1, [pc, #48]	@ (8012b9c <DisplayUdfParams::Load(char const*, unsigned long)+0x48>)
 8012b6c:	a804      	add	r0, sp, #16
 8012b6e:	f000 fe0b 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012b72:	463a      	mov	r2, r7
 8012b74:	4631      	mov	r1, r6
 8012b76:	a804      	add	r0, sp, #16
 8012b78:	f000 fe0a 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 8012b7c:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8012b80:	2322      	movs	r3, #34	@ 0x22
 8012b82:	4807      	ldr	r0, [pc, #28]	@ (8012ba0 <DisplayUdfParams::Load(char const*, unsigned long)+0x4c>)
 8012b84:	9300      	str	r3, [sp, #0]
 8012b86:	462a      	mov	r2, r5
 8012b88:	4623      	mov	r3, r4
 8012b8a:	210d      	movs	r1, #13
 8012b8c:	6800      	ldr	r0, [r0, #0]
 8012b8e:	f000 fafb 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8012b92:	a804      	add	r0, sp, #16
 8012b94:	f000 fdfb 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 8012b98:	b007      	add	sp, #28
 8012b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b9c:	08012c65 	stmdaeq	r1, {r0, r2, r5, r6, sl, fp, sp}
 8012ba0:	20002134 	andcs	r2, r0, r4, lsr r1

08012ba4 <DisplayUdfParams::callbackFunction(char const*)>:
 8012ba4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012ba6:	460e      	mov	r6, r1
 8012ba8:	4604      	mov	r4, r0
 8012baa:	492a      	ldr	r1, [pc, #168]	@ (8012c54 <DisplayUdfParams::callbackFunction(char const*)+0xb0>)
 8012bac:	f10d 0207 	add.w	r2, sp, #7
 8012bb0:	4630      	mov	r0, r6
 8012bb2:	f000 fe98 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012bb6:	b968      	cbnz	r0, 8012bd4 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012bb8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012bbc:	6823      	ldr	r3, [r4, #0]
 8012bbe:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8012bc2:	2a7f      	cmp	r2, #127	@ 0x7f
 8012bc4:	bf14      	ite	ne
 8012bc6:	f043 5300 	orrne.w	r3, r3, #536870912	@ 0x20000000
 8012bca:	f023 5300 	biceq.w	r3, r3, #536870912	@ 0x20000000
 8012bce:	6023      	str	r3, [r4, #0]
 8012bd0:	b003      	add	sp, #12
 8012bd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012bd4:	4920      	ldr	r1, [pc, #128]	@ (8012c58 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8012bd6:	f10d 0207 	add.w	r2, sp, #7
 8012bda:	4630      	mov	r0, r6
 8012bdc:	f000 fe83 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012be0:	b958      	cbnz	r0, 8012bfa <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8012be2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012be6:	6823      	ldr	r3, [r4, #0]
 8012be8:	f884 2020 	strb.w	r2, [r4, #32]
 8012bec:	2a05      	cmp	r2, #5
 8012bee:	bf14      	ite	ne
 8012bf0:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8012bf4:	f023 5380 	biceq.w	r3, r3, #268435456	@ 0x10000000
 8012bf8:	e7e9      	b.n	8012bce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012bfa:	4918      	ldr	r1, [pc, #96]	@ (8012c5c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8012bfc:	f10d 0207 	add.w	r2, sp, #7
 8012c00:	4630      	mov	r0, r6
 8012c02:	f000 fe70 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012c06:	b948      	cbnz	r0, 8012c1c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012c08:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012c0c:	6823      	ldr	r3, [r4, #0]
 8012c0e:	b112      	cbz	r2, 8012c16 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8012c10:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012c14:	e7db      	b.n	8012bce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012c16:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012c1a:	e7d8      	b.n	8012bce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012c1c:	4f10      	ldr	r7, [pc, #64]	@ (8012c60 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8012c1e:	2500      	movs	r5, #0
 8012c20:	f857 1b04 	ldr.w	r1, [r7], #4
 8012c24:	f10d 0207 	add.w	r2, sp, #7
 8012c28:	4630      	mov	r0, r6
 8012c2a:	f000 fe5c 	bl	80138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012c2e:	b968      	cbnz	r0, 8012c4c <DisplayUdfParams::callbackFunction(char const*)+0xa8>
 8012c30:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012c34:	6823      	ldr	r3, [r4, #0]
 8012c36:	2201      	movs	r2, #1
 8012c38:	40aa      	lsls	r2, r5
 8012c3a:	1e4e      	subs	r6, r1, #1
 8012c3c:	4425      	add	r5, r4
 8012c3e:	2e05      	cmp	r6, #5
 8012c40:	bf99      	ittee	ls
 8012c42:	7129      	strbls	r1, [r5, #4]
 8012c44:	4313      	orrls	r3, r2
 8012c46:	7128      	strbhi	r0, [r5, #4]
 8012c48:	4393      	bichi	r3, r2
 8012c4a:	e7c0      	b.n	8012bce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012c4c:	3501      	adds	r5, #1
 8012c4e:	2d14      	cmp	r5, #20
 8012c50:	d1e6      	bne.n	8012c20 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8012c52:	e7bd      	b.n	8012bd0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012c54:	0801a7d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, sp, pc}
 8012c58:	0801a7c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, sp, pc}
 8012c5c:	0801a7b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, sp, pc}
 8012c60:	0801a730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, pc}

08012c64 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8012c64:	f7ff bf9e 	b.w	8012ba4 <DisplayUdfParams::callbackFunction(char const*)>

08012c68 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>:
 8012c68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c6c:	4604      	mov	r4, r0
 8012c6e:	b086      	sub	sp, #24
 8012c70:	4615      	mov	r5, r2
 8012c72:	461e      	mov	r6, r3
 8012c74:	b379      	cbz	r1, 8012cd6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 8012c76:	2222      	movs	r2, #34	@ 0x22
 8012c78:	f003 fa8f 	bl	801619a <memmove>
 8012c7c:	462a      	mov	r2, r5
 8012c7e:	493c      	ldr	r1, [pc, #240]	@ (8012d70 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x108>)
 8012c80:	4633      	mov	r3, r6
 8012c82:	a803      	add	r0, sp, #12
 8012c84:	f000 fcaa 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8012c88:	6823      	ldr	r3, [r4, #0]
 8012c8a:	f894 2021 	ldrb.w	r2, [r4, #33]	@ 0x21
 8012c8e:	4939      	ldr	r1, [pc, #228]	@ (8012d74 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x10c>)
 8012c90:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8012c94:	a803      	add	r0, sp, #12
 8012c96:	f7ff ff0b 	bl	8012ab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8012c9a:	6823      	ldr	r3, [r4, #0]
 8012c9c:	f894 2020 	ldrb.w	r2, [r4, #32]
 8012ca0:	4935      	ldr	r1, [pc, #212]	@ (8012d78 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x110>)
 8012ca2:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8012ca6:	a803      	add	r0, sp, #12
 8012ca8:	f7ff ff02 	bl	8012ab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8012cac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012cb0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012cb4:	6823      	ldr	r3, [r4, #0]
 8012cb6:	42aa      	cmp	r2, r5
 8012cb8:	d222      	bcs.n	8012d00 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x98>
 8012cba:	9803      	ldr	r0, [sp, #12]
 8012cbc:	f013 4380 	ands.w	r3, r3, #1073741824	@ 0x40000000
 8012cc0:	4410      	add	r0, r2
 8012cc2:	eba5 0502 	sub.w	r5, r5, r2
 8012cc6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012cca:	d107      	bne.n	8012cdc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x74>
 8012ccc:	b942      	cbnz	r2, 8012ce0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x78>
 8012cce:	9200      	str	r2, [sp, #0]
 8012cd0:	4b2a      	ldr	r3, [pc, #168]	@ (8012d7c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8012cd2:	4a2b      	ldr	r2, [pc, #172]	@ (8012d80 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 8012cd4:	e00a      	b.n	8012cec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8012cd6:	f7ff ff13 	bl	8012b00 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8012cda:	e7cf      	b.n	8012c7c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8012cdc:	2a00      	cmp	r2, #0
 8012cde:	d042      	beq.n	8012d66 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xfe>
 8012ce0:	3b00      	subs	r3, #0
 8012ce2:	bf18      	it	ne
 8012ce4:	2301      	movne	r3, #1
 8012ce6:	9300      	str	r3, [sp, #0]
 8012ce8:	4a26      	ldr	r2, [pc, #152]	@ (8012d84 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 8012cea:	4b24      	ldr	r3, [pc, #144]	@ (8012d7c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8012cec:	4629      	mov	r1, r5
 8012cee:	f003 fd77 	bl	80167e0 <snprintf>
 8012cf2:	4285      	cmp	r5, r0
 8012cf4:	bfa2      	ittt	ge
 8012cf6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012cfa:	18c0      	addge	r0, r0, r3
 8012cfc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012d00:	4e21      	ldr	r6, [pc, #132]	@ (8012d88 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 8012d02:	2500      	movs	r5, #0
 8012d04:	2701      	movs	r7, #1
 8012d06:	f104 0804 	add.w	r8, r4, #4
 8012d0a:	f856 1b04 	ldr.w	r1, [r6], #4
 8012d0e:	780b      	ldrb	r3, [r1, #0]
 8012d10:	b163      	cbz	r3, 8012d2c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 8012d12:	6822      	ldr	r2, [r4, #0]
 8012d14:	fa07 f305 	lsl.w	r3, r7, r5
 8012d18:	4393      	bics	r3, r2
 8012d1a:	bf08      	it	eq
 8012d1c:	2301      	moveq	r3, #1
 8012d1e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8012d22:	bf18      	it	ne
 8012d24:	2300      	movne	r3, #0
 8012d26:	a803      	add	r0, sp, #12
 8012d28:	f7ff fec2 	bl	8012ab0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8012d2c:	3501      	adds	r5, #1
 8012d2e:	2d14      	cmp	r5, #20
 8012d30:	d1eb      	bne.n	8012d0a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8012d32:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012d36:	b17b      	cbz	r3, 8012d58 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
 8012d38:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012d3c:	9b03      	ldr	r3, [sp, #12]
 8012d3e:	4413      	add	r3, r2
 8012d40:	227d      	movs	r2, #125	@ 0x7d
 8012d42:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012d46:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012d4a:	9903      	ldr	r1, [sp, #12]
 8012d4c:	54ca      	strb	r2, [r1, r3]
 8012d4e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012d52:	3301      	adds	r3, #1
 8012d54:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012d58:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012d5c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012d5e:	601a      	str	r2, [r3, #0]
 8012d60:	b006      	add	sp, #24
 8012d62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d66:	2301      	movs	r3, #1
 8012d68:	9300      	str	r3, [sp, #0]
 8012d6a:	4a08      	ldr	r2, [pc, #32]	@ (8012d8c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 8012d6c:	4b03      	ldr	r3, [pc, #12]	@ (8012d7c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8012d6e:	e7bd      	b.n	8012cec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8012d70:	0801a7dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, sp, pc}
 8012d74:	0801a7d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, sp, pc}
 8012d78:	0801a7c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, sp, pc}
 8012d7c:	0801a7b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, sp, pc}
 8012d80:	0801739a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, ip, sp, lr}
 8012d84:	08017391 	stmdaeq	r1, {r0, r4, r7, r8, r9, ip, sp, lr}
 8012d88:	0801a730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, pc}
 8012d8c:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

08012d90 <DisplayUdfParams::Set(DisplayUdf*)>:
 8012d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d94:	4604      	mov	r4, r0
 8012d96:	460d      	mov	r5, r1
 8012d98:	6823      	ldr	r3, [r4, #0]
 8012d9a:	6988      	ldr	r0, [r1, #24]
 8012d9c:	009a      	lsls	r2, r3, #2
 8012d9e:	d506      	bpl.n	8012dae <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8012da0:	f894 1021 	ldrb.w	r1, [r4, #33]	@ 0x21
 8012da4:	7529      	strb	r1, [r5, #20]
 8012da6:	b110      	cbz	r0, 8012dae <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8012da8:	6803      	ldr	r3, [r0, #0]
 8012daa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012dac:	4798      	blx	r3
 8012dae:	6823      	ldr	r3, [r4, #0]
 8012db0:	69a8      	ldr	r0, [r5, #24]
 8012db2:	00db      	lsls	r3, r3, #3
 8012db4:	bf41      	itttt	mi
 8012db6:	f894 3020 	ldrbmi.w	r3, [r4, #32]
 8012dba:	f64e 2260 	movwmi	r2, #60000	@ 0xea60
 8012dbe:	4353      	mulmi	r3, r2
 8012dc0:	612b      	strmi	r3, [r5, #16]
 8012dc2:	6821      	ldr	r1, [r4, #0]
 8012dc4:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8012dc8:	75a9      	strb	r1, [r5, #22]
 8012dca:	b110      	cbz	r0, 8012dd2 <DisplayUdfParams::Set(DisplayUdf*)+0x42>
 8012dcc:	6803      	ldr	r3, [r0, #0]
 8012dce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012dd0:	4798      	blx	r3
 8012dd2:	2600      	movs	r6, #0
 8012dd4:	2701      	movs	r7, #1
 8012dd6:	f104 0804 	add.w	r8, r4, #4
 8012dda:	6822      	ldr	r2, [r4, #0]
 8012ddc:	fa07 f306 	lsl.w	r3, r7, r6
 8012de0:	4393      	bics	r3, r2
 8012de2:	d105      	bne.n	8012df0 <DisplayUdfParams::Set(DisplayUdf*)+0x60>
 8012de4:	f818 1006 	ldrb.w	r1, [r8, r6]
 8012de8:	4632      	mov	r2, r6
 8012dea:	4628      	mov	r0, r5
 8012dec:	f7ff fdcf 	bl	801298e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8012df0:	3601      	adds	r6, #1
 8012df2:	2e14      	cmp	r6, #20
 8012df4:	d1f1      	bne.n	8012dda <DisplayUdfParams::Set(DisplayUdf*)+0x4a>
 8012df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08012dfc <DisplayUdf::ShowE131Bridge()>:
 8012dfc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012dfe:	4b30      	ldr	r3, [pc, #192]	@ (8012ec0 <DisplayUdf::ShowE131Bridge()+0xc4>)
 8012e00:	4e30      	ldr	r6, [pc, #192]	@ (8012ec4 <DisplayUdf::ShowE131Bridge()+0xc8>)
 8012e02:	681d      	ldr	r5, [r3, #0]
 8012e04:	f890 1041 	ldrb.w	r1, [r0, #65]	@ 0x41
 8012e08:	7fea      	ldrb	r2, [r5, #31]
 8012e0a:	7fab      	ldrb	r3, [r5, #30]
 8012e0c:	4413      	add	r3, r2
 8012e0e:	4a2e      	ldr	r2, [pc, #184]	@ (8012ec8 <DisplayUdf::ShowE131Bridge()+0xcc>)
 8012e10:	4604      	mov	r4, r0
 8012e12:	f7ff fd42 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012e16:	6833      	ldr	r3, [r6, #0]
 8012e18:	2b01      	cmp	r3, #1
 8012e1a:	d81d      	bhi.n	8012e58 <DisplayUdf::ShowE131Bridge()+0x5c>
 8012e1c:	220c      	movs	r2, #12
 8012e1e:	fb02 5203 	mla	r2, r2, r3, r5
 8012e22:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8012e24:	2901      	cmp	r1, #1
 8012e26:	d113      	bne.n	8012e50 <DisplayUdf::ShowE131Bridge()+0x54>
 8012e28:	2144      	movs	r1, #68	@ 0x44
 8012e2a:	fb01 5303 	mla	r3, r1, r3, r5
 8012e2e:	4927      	ldr	r1, [pc, #156]	@ (8012ecc <DisplayUdf::ShowE131Bridge()+0xd0>)
 8012e30:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 8012e34:	4b26      	ldr	r3, [pc, #152]	@ (8012ed0 <DisplayUdf::ShowE131Bridge()+0xd4>)
 8012e36:	8e12      	ldrh	r2, [r2, #48]	@ 0x30
 8012e38:	2800      	cmp	r0, #0
 8012e3a:	bf18      	it	ne
 8012e3c:	460b      	movne	r3, r1
 8012e3e:	e9cd 2300 	strd	r2, r3, [sp]
 8012e42:	4620      	mov	r0, r4
 8012e44:	4a23      	ldr	r2, [pc, #140]	@ (8012ed4 <DisplayUdf::ShowE131Bridge()+0xd8>)
 8012e46:	f894 1044 	ldrb.w	r1, [r4, #68]	@ 0x44
 8012e4a:	2341      	movs	r3, #65	@ 0x41
 8012e4c:	f7ff fd25 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012e50:	6833      	ldr	r3, [r6, #0]
 8012e52:	3301      	adds	r3, #1
 8012e54:	2b01      	cmp	r3, #1
 8012e56:	d90a      	bls.n	8012e6e <DisplayUdf::ShowE131Bridge()+0x72>
 8012e58:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8012e5a:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 8012e5e:	2a02      	cmp	r2, #2
 8012e60:	d120      	bne.n	8012ea4 <DisplayUdf::ShowE131Bridge()+0xa8>
 8012e62:	4a1d      	ldr	r2, [pc, #116]	@ (8012ed8 <DisplayUdf::ShowE131Bridge()+0xdc>)
 8012e64:	4620      	mov	r0, r4
 8012e66:	f7ff fd18 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012e6a:	b002      	add	sp, #8
 8012e6c:	bd70      	pop	{r4, r5, r6, pc}
 8012e6e:	220c      	movs	r2, #12
 8012e70:	fb02 5203 	mla	r2, r2, r3, r5
 8012e74:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8012e76:	2901      	cmp	r1, #1
 8012e78:	d1ee      	bne.n	8012e58 <DisplayUdf::ShowE131Bridge()+0x5c>
 8012e7a:	2144      	movs	r1, #68	@ 0x44
 8012e7c:	fb01 5503 	mla	r5, r1, r3, r5
 8012e80:	4913      	ldr	r1, [pc, #76]	@ (8012ed0 <DisplayUdf::ShowE131Bridge()+0xd4>)
 8012e82:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 8012e86:	4b11      	ldr	r3, [pc, #68]	@ (8012ecc <DisplayUdf::ShowE131Bridge()+0xd0>)
 8012e88:	8e12      	ldrh	r2, [r2, #48]	@ 0x30
 8012e8a:	2800      	cmp	r0, #0
 8012e8c:	bf08      	it	eq
 8012e8e:	460b      	moveq	r3, r1
 8012e90:	e9cd 2300 	strd	r2, r3, [sp]
 8012e94:	4620      	mov	r0, r4
 8012e96:	4a0f      	ldr	r2, [pc, #60]	@ (8012ed4 <DisplayUdf::ShowE131Bridge()+0xd8>)
 8012e98:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8012e9c:	2342      	movs	r3, #66	@ 0x42
 8012e9e:	f7ff fcfc 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012ea2:	e7d9      	b.n	8012e58 <DisplayUdf::ShowE131Bridge()+0x5c>
 8012ea4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8012ea6:	2b00      	cmp	r3, #0
 8012ea8:	d0db      	beq.n	8012e62 <DisplayUdf::ShowE131Bridge()+0x66>
 8012eaa:	480c      	ldr	r0, [pc, #48]	@ (8012edc <DisplayUdf::ShowE131Bridge()+0xe0>)
 8012eac:	9300      	str	r3, [sp, #0]
 8012eae:	4b0c      	ldr	r3, [pc, #48]	@ (8012ee0 <DisplayUdf::ShowE131Bridge()+0xe4>)
 8012eb0:	2a00      	cmp	r2, #0
 8012eb2:	bf18      	it	ne
 8012eb4:	4603      	movne	r3, r0
 8012eb6:	4a0b      	ldr	r2, [pc, #44]	@ (8012ee4 <DisplayUdf::ShowE131Bridge()+0xe8>)
 8012eb8:	4620      	mov	r0, r4
 8012eba:	f7ff fcee 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012ebe:	e7d4      	b.n	8012e6a <DisplayUdf::ShowE131Bridge()+0x6e>
 8012ec0:	2000124c 	andcs	r1, r0, ip, asr #4
 8012ec4:	20000074 	andcs	r0, r0, r4, ror r0
 8012ec8:	08017a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, ip, sp, lr}
 8012ecc:	080175f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 8012ed0:	080175fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 8012ed4:	08017aa6 	stmdaeq	r1, {r1, r2, r5, r7, r9, fp, ip, sp, lr}
 8012ed8:	08017ab5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, fp, ip, sp, lr}
 8012edc:	080176bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, sl, ip, sp, lr}
 8012ee0:	080176ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, ip, sp, lr}
 8012ee4:	08017abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, sp, lr}

08012ee8 <Display::ClearEndOfLine() [clone .isra.0]>:
 8012ee8:	b108      	cbz	r0, 8012eee <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 8012eea:	2301      	movs	r3, #1
 8012eec:	7303      	strb	r3, [r0, #12]
 8012eee:	4770      	bx	lr

08012ef0 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8012ef0:	b430      	push	{r4, r5}
 8012ef2:	b160      	cbz	r0, 8012f0e <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8012ef4:	6845      	ldr	r5, [r0, #4]
 8012ef6:	2300      	movs	r3, #0
 8012ef8:	5cd4      	ldrb	r4, [r2, r3]
 8012efa:	b11c      	cbz	r4, 8012f04 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8012efc:	1c5c      	adds	r4, r3, #1
 8012efe:	429d      	cmp	r5, r3
 8012f00:	4623      	mov	r3, r4
 8012f02:	d8f9      	bhi.n	8012ef8 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8012f04:	6804      	ldr	r4, [r0, #0]
 8012f06:	69e4      	ldr	r4, [r4, #28]
 8012f08:	46a4      	mov	ip, r4
 8012f0a:	bc30      	pop	{r4, r5}
 8012f0c:	4760      	bx	ip
 8012f0e:	bc30      	pop	{r4, r5}
 8012f10:	4770      	bx	lr
	...

08012f14 <net::display_emac_config()>:
 8012f14:	4b06      	ldr	r3, [pc, #24]	@ (8012f30 <net::display_emac_config()+0x1c>)
 8012f16:	4a07      	ldr	r2, [pc, #28]	@ (8012f34 <net::display_emac_config()+0x20>)
 8012f18:	b510      	push	{r4, lr}
 8012f1a:	681c      	ldr	r4, [r3, #0]
 8012f1c:	69a0      	ldr	r0, [r4, #24]
 8012f1e:	f7ff ffe3 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8012f22:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8012f26:	4620      	mov	r0, r4
 8012f28:	f7ff fcb7 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012f2c:	bd10      	pop	{r4, pc}
 8012f2e:	bf00      	nop
 8012f30:	20002130 	andcs	r2, r0, r0, lsr r1
 8012f34:	08017ac6 	stmdaeq	r1, {r1, r2, r6, r7, r9, fp, ip, sp, lr}

08012f38 <net::display_emac_start()>:
 8012f38:	4b06      	ldr	r3, [pc, #24]	@ (8012f54 <net::display_emac_start()+0x1c>)
 8012f3a:	4a07      	ldr	r2, [pc, #28]	@ (8012f58 <net::display_emac_start()+0x20>)
 8012f3c:	b510      	push	{r4, lr}
 8012f3e:	681c      	ldr	r4, [r3, #0]
 8012f40:	69a0      	ldr	r0, [r4, #24]
 8012f42:	f7ff ffd1 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8012f46:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8012f4a:	4620      	mov	r0, r4
 8012f4c:	f7ff fca5 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012f50:	bd10      	pop	{r4, pc}
 8012f52:	bf00      	nop
 8012f54:	20002130 	andcs	r2, r0, r0, lsr r1
 8012f58:	08017ad4 	stmdaeq	r1, {r2, r4, r6, r7, r9, fp, ip, sp, lr}

08012f5c <net::display_emac_status(bool)>:
 8012f5c:	4b09      	ldr	r3, [pc, #36]	@ (8012f84 <net::display_emac_status(bool)+0x28>)
 8012f5e:	490a      	ldr	r1, [pc, #40]	@ (8012f88 <net::display_emac_status(bool)+0x2c>)
 8012f60:	b510      	push	{r4, lr}
 8012f62:	681c      	ldr	r4, [r3, #0]
 8012f64:	4602      	mov	r2, r0
 8012f66:	69a0      	ldr	r0, [r4, #24]
 8012f68:	f7ff ffbe 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8012f6c:	4b07      	ldr	r3, [pc, #28]	@ (8012f8c <net::display_emac_status(bool)+0x30>)
 8012f6e:	4620      	mov	r0, r4
 8012f70:	2a00      	cmp	r2, #0
 8012f72:	bf08      	it	eq
 8012f74:	460b      	moveq	r3, r1
 8012f76:	4a06      	ldr	r2, [pc, #24]	@ (8012f90 <net::display_emac_status(bool)+0x34>)
 8012f78:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8012f7c:	f7ff fc8d 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012f80:	bd10      	pop	{r4, pc}
 8012f82:	bf00      	nop
 8012f84:	20002130 	andcs	r2, r0, r0, lsr r1
 8012f88:	08017ae6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, fp, ip, sp, lr}
 8012f8c:	08017ae3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, fp, ip, sp, lr}
 8012f90:	08017aeb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, fp, ip, sp, lr}

08012f94 <net::display_ip()>:
 8012f94:	b508      	push	{r3, lr}
 8012f96:	4b02      	ldr	r3, [pc, #8]	@ (8012fa0 <net::display_ip()+0xc>)
 8012f98:	6818      	ldr	r0, [r3, #0]
 8012f9a:	f7ff fc9b 	bl	80128d4 <DisplayUdf::ShowIpAddress()>
 8012f9e:	bd08      	pop	{r3, pc}
 8012fa0:	20002130 	andcs	r2, r0, r0, lsr r1

08012fa4 <net::display_netmask()>:
 8012fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012fa6:	4b0d      	ldr	r3, [pc, #52]	@ (8012fdc <net::display_netmask()+0x38>)
 8012fa8:	681c      	ldr	r4, [r3, #0]
 8012faa:	69a0      	ldr	r0, [r4, #24]
 8012fac:	f7ff ff9c 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8012fb0:	4b0b      	ldr	r3, [pc, #44]	@ (8012fe0 <net::display_netmask()+0x3c>)
 8012fb2:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8012fb6:	685b      	ldr	r3, [r3, #4]
 8012fb8:	0e1a      	lsrs	r2, r3, #24
 8012fba:	9202      	str	r2, [sp, #8]
 8012fbc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012fc0:	9201      	str	r2, [sp, #4]
 8012fc2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012fc6:	9200      	str	r2, [sp, #0]
 8012fc8:	b2db      	uxtb	r3, r3
 8012fca:	4a06      	ldr	r2, [pc, #24]	@ (8012fe4 <net::display_netmask()+0x40>)
 8012fcc:	4620      	mov	r0, r4
 8012fce:	f7ff fc64 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8012fd2:	4620      	mov	r0, r4
 8012fd4:	f7ff fc7e 	bl	80128d4 <DisplayUdf::ShowIpAddress()>
 8012fd8:	b004      	add	sp, #16
 8012fda:	bd10      	pop	{r4, pc}
 8012fdc:	20002130 	andcs	r2, r0, r0, lsr r1
 8012fe0:	20002088 	andcs	r2, r0, r8, lsl #1
 8012fe4:	08017a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, sp, lr}

08012fe8 <net::display_gateway()>:
 8012fe8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012fea:	4b0c      	ldr	r3, [pc, #48]	@ (801301c <net::display_gateway()+0x34>)
 8012fec:	681c      	ldr	r4, [r3, #0]
 8012fee:	69a0      	ldr	r0, [r4, #24]
 8012ff0:	f7ff ff7a 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8012ff4:	4b0a      	ldr	r3, [pc, #40]	@ (8013020 <net::display_gateway()+0x38>)
 8012ff6:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 8012ffa:	689b      	ldr	r3, [r3, #8]
 8012ffc:	0e1a      	lsrs	r2, r3, #24
 8012ffe:	9202      	str	r2, [sp, #8]
 8013000:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013004:	9201      	str	r2, [sp, #4]
 8013006:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801300a:	9200      	str	r2, [sp, #0]
 801300c:	b2db      	uxtb	r3, r3
 801300e:	4a05      	ldr	r2, [pc, #20]	@ (8013024 <net::display_gateway()+0x3c>)
 8013010:	4620      	mov	r0, r4
 8013012:	f7ff fc42 	bl	801289a <Display::Printf(unsigned long, char const*, ...)>
 8013016:	b004      	add	sp, #16
 8013018:	bd10      	pop	{r4, pc}
 801301a:	bf00      	nop
 801301c:	20002130 	andcs	r2, r0, r0, lsr r1
 8013020:	20002088 	andcs	r2, r0, r8, lsl #1
 8013024:	08017a81 	stmdaeq	r1, {r0, r7, r9, fp, ip, sp, lr}

08013028 <net::display_hostname()>:
 8013028:	b508      	push	{r3, lr}
 801302a:	4b07      	ldr	r3, [pc, #28]	@ (8013048 <net::display_hostname()+0x20>)
 801302c:	6819      	ldr	r1, [r3, #0]
 801302e:	6988      	ldr	r0, [r1, #24]
 8013030:	f7ff ff5a 	bl	8012ee8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013034:	4b05      	ldr	r3, [pc, #20]	@ (801304c <net::display_hostname()+0x24>)
 8013036:	f891 1043 	ldrb.w	r1, [r1, #67]	@ 0x43
 801303a:	681a      	ldr	r2, [r3, #0]
 801303c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013040:	3216      	adds	r2, #22
 8013042:	f7ff bf55 	b.w	8012ef0 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8013046:	bf00      	nop
 8013048:	20002130 	andcs	r2, r0, r0, lsr r1
 801304c:	20002068 	andcs	r2, r0, r8, rrx

08013050 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8013050:	b510      	push	{r4, lr}
 8013052:	4a05      	ldr	r2, [pc, #20]	@ (8013068 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8013054:	2300      	movs	r3, #0
 8013056:	2020      	movs	r0, #32
 8013058:	428b      	cmp	r3, r1
 801305a:	d100      	bne.n	801305e <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 801305c:	bd10      	pop	{r4, pc}
 801305e:	f852 4b04 	ldr.w	r4, [r2], #4
 8013062:	3301      	adds	r3, #1
 8013064:	4420      	add	r0, r4
 8013066:	e7f7      	b.n	8013058 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8013068:	0801a7e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, pc}

0801306c <ConfigStore::ConfigStore()>:
 801306c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013070:	b085      	sub	sp, #20
 8013072:	4605      	mov	r5, r0
 8013074:	f000 f9e4 	bl	8013440 <StoreDevice::StoreDevice()>
 8013078:	4b30      	ldr	r3, [pc, #192]	@ (801313c <ConfigStore::ConfigStore()+0xd0>)
 801307a:	4c31      	ldr	r4, [pc, #196]	@ (8013140 <ConfigStore::ConfigStore()+0xd4>)
 801307c:	601d      	str	r5, [r3, #0]
 801307e:	4b31      	ldr	r3, [pc, #196]	@ (8013144 <ConfigStore::ConfigStore()+0xd8>)
 8013080:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8013160 <ConfigStore::ConfigStore()+0xf4>
 8013084:	601c      	str	r4, [r3, #0]
 8013086:	4628      	mov	r0, r5
 8013088:	782b      	ldrb	r3, [r5, #0]
 801308a:	f888 3000 	strb.w	r3, [r8]
 801308e:	f000 f9e8 	bl	8013462 <StoreDevice::GetSectorSize() const>
 8013092:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 8013096:	4606      	mov	r6, r0
 8013098:	fbb7 f9f0 	udiv	r9, r7, r0
 801309c:	4628      	mov	r0, r5
 801309e:	f000 f9dd 	bl	801345c <StoreDevice::GetSize() const>
 80130a2:	4b29      	ldr	r3, [pc, #164]	@ (8013148 <ConfigStore::ConfigStore()+0xdc>)
 80130a4:	fb09 0116 	mls	r1, r9, r6, r0
 80130a8:	6019      	str	r1, [r3, #0]
 80130aa:	f898 3000 	ldrb.w	r3, [r8]
 80130ae:	3c10      	subs	r4, #16
 80130b0:	b133      	cbz	r3, 80130c0 <ConfigStore::ConfigStore()+0x54>
 80130b2:	ab03      	add	r3, sp, #12
 80130b4:	9300      	str	r3, [sp, #0]
 80130b6:	463a      	mov	r2, r7
 80130b8:	4623      	mov	r3, r4
 80130ba:	4628      	mov	r0, r5
 80130bc:	f000 f9d4 	bl	8013468 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 80130c0:	4822      	ldr	r0, [pc, #136]	@ (801314c <ConfigStore::ConfigStore()+0xe0>)
 80130c2:	4b23      	ldr	r3, [pc, #140]	@ (8013150 <ConfigStore::ConfigStore()+0xe4>)
 80130c4:	2104      	movs	r1, #4
 80130c6:	2201      	movs	r2, #1
 80130c8:	f810 6b01 	ldrb.w	r6, [r0], #1
 80130cc:	f813 7b01 	ldrb.w	r7, [r3], #1
 80130d0:	42be      	cmp	r6, r7
 80130d2:	bf1c      	itt	ne
 80130d4:	f803 6c01 	strbne.w	r6, [r3, #-1]
 80130d8:	2200      	movne	r2, #0
 80130da:	3901      	subs	r1, #1
 80130dc:	d1f4      	bne.n	80130c8 <ConfigStore::ConfigStore()+0x5c>
 80130de:	b952      	cbnz	r2, 80130f6 <ConfigStore::ConfigStore()+0x8a>
 80130e0:	4a17      	ldr	r2, [pc, #92]	@ (8013140 <ConfigStore::ConfigStore()+0xd4>)
 80130e2:	f44f 637f 	mov.w	r3, #4080	@ 0xff0
 80130e6:	4608      	mov	r0, r1
 80130e8:	3b01      	subs	r3, #1
 80130ea:	f802 0b01 	strb.w	r0, [r2], #1
 80130ee:	d1fb      	bne.n	80130e8 <ConfigStore::ConfigStore()+0x7c>
 80130f0:	4b18      	ldr	r3, [pc, #96]	@ (8013154 <ConfigStore::ConfigStore()+0xe8>)
 80130f2:	2201      	movs	r2, #1
 80130f4:	601a      	str	r2, [r3, #0]
 80130f6:	4818      	ldr	r0, [pc, #96]	@ (8013158 <ConfigStore::ConfigStore()+0xec>)
 80130f8:	2200      	movs	r2, #0
 80130fa:	2320      	movs	r3, #32
 80130fc:	f850 6b04 	ldr.w	r6, [r0], #4
 8013100:	3201      	adds	r2, #1
 8013102:	2a1b      	cmp	r2, #27
 8013104:	4433      	add	r3, r6
 8013106:	d1f9      	bne.n	80130fc <ConfigStore::ConfigStore()+0x90>
 8013108:	4a14      	ldr	r2, [pc, #80]	@ (801315c <ConfigStore::ConfigStore()+0xf0>)
 801310a:	2600      	movs	r6, #0
 801310c:	6013      	str	r3, [r2, #0]
 801310e:	4628      	mov	r0, r5
 8013110:	f7ff ff9e 	bl	8013050 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013114:	5823      	ldr	r3, [r4, r0]
 8013116:	3101      	adds	r1, #1
 8013118:	3301      	adds	r3, #1
 801311a:	bf08      	it	eq
 801311c:	5026      	streq	r6, [r4, r0]
 801311e:	291b      	cmp	r1, #27
 8013120:	d1f5      	bne.n	801310e <ConfigStore::ConfigStore()+0xa2>
 8013122:	6923      	ldr	r3, [r4, #16]
 8013124:	3301      	adds	r3, #1
 8013126:	d104      	bne.n	8013132 <ConfigStore::ConfigStore()+0xc6>
 8013128:	2300      	movs	r3, #0
 801312a:	7423      	strb	r3, [r4, #16]
 801312c:	7463      	strb	r3, [r4, #17]
 801312e:	74a3      	strb	r3, [r4, #18]
 8013130:	74e3      	strb	r3, [r4, #19]
 8013132:	4628      	mov	r0, r5
 8013134:	b005      	add	sp, #20
 8013136:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801313a:	bf00      	nop
 801313c:	20002134 	andcs	r2, r0, r4, lsr r1
 8013140:	40024010 	andmi	r4, r2, r0, lsl r0
 8013144:	20009b1c 	andcs	r9, r0, ip, lsl fp
 8013148:	20002140 	andcs	r2, r0, r0, asr #2
 801314c:	0801a854 	stmdaeq	r1, {r2, r4, r6, fp, sp, pc}
 8013150:	40024000 	andmi	r4, r2, r0
 8013154:	20002144 	andcs	r2, r0, r4, asr #2
 8013158:	0801a7e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, pc}
 801315c:	2000213c 	andcs	r2, r0, ip, lsr r1
 8013160:	20002148 	andcs	r2, r0, r8, asr #2

08013164 <ConfigStore::ResetSetList(configstore::Store)>:
 8013164:	b508      	push	{r3, lr}
 8013166:	f7ff ff73 	bl	8013050 <ConfigStore::GetStoreOffset(configstore::Store)>
 801316a:	4905      	ldr	r1, [pc, #20]	@ (8013180 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 801316c:	1842      	adds	r2, r0, r1
 801316e:	2300      	movs	r3, #0
 8013170:	540b      	strb	r3, [r1, r0]
 8013172:	7053      	strb	r3, [r2, #1]
 8013174:	7093      	strb	r3, [r2, #2]
 8013176:	70d3      	strb	r3, [r2, #3]
 8013178:	4b02      	ldr	r3, [pc, #8]	@ (8013184 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 801317a:	2201      	movs	r2, #1
 801317c:	601a      	str	r2, [r3, #0]
 801317e:	bd08      	pop	{r3, pc}
 8013180:	40024000 	andmi	r4, r2, r0
 8013184:	20002144 	andcs	r2, r0, r4, asr #2

08013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 8013188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801318a:	4614      	mov	r4, r2
 801318c:	461d      	mov	r5, r3
 801318e:	f7ff ff5f 	bl	8013050 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013192:	490e      	ldr	r1, [pc, #56]	@ (80131cc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x44>)
 8013194:	1902      	adds	r2, r0, r4
 8013196:	9c06      	ldr	r4, [sp, #24]
 8013198:	440a      	add	r2, r1
 801319a:	1e6b      	subs	r3, r5, #1
 801319c:	4414      	add	r4, r2
 801319e:	2500      	movs	r5, #0
 80131a0:	42a2      	cmp	r2, r4
 80131a2:	d10a      	bne.n	80131ba <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x32>
 80131a4:	b145      	cbz	r5, 80131b8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x30>
 80131a6:	9b08      	ldr	r3, [sp, #32]
 80131a8:	9a07      	ldr	r2, [sp, #28]
 80131aa:	4418      	add	r0, r3
 80131ac:	580b      	ldr	r3, [r1, r0]
 80131ae:	4313      	orrs	r3, r2
 80131b0:	500b      	str	r3, [r1, r0]
 80131b2:	4b07      	ldr	r3, [pc, #28]	@ (80131d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x48>)
 80131b4:	2201      	movs	r2, #1
 80131b6:	601a      	str	r2, [r3, #0]
 80131b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80131ba:	7817      	ldrb	r7, [r2, #0]
 80131bc:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 80131c0:	42b7      	cmp	r7, r6
 80131c2:	bf1c      	itt	ne
 80131c4:	7016      	strbne	r6, [r2, #0]
 80131c6:	2501      	movne	r5, #1
 80131c8:	3201      	adds	r2, #1
 80131ca:	e7e9      	b.n	80131a0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x18>
 80131cc:	40024000 	andmi	r4, r2, r0
 80131d0:	20002144 	andcs	r2, r0, r4, asr #2

080131d4 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
 80131d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80131d8:	b085      	sub	sp, #20
 80131da:	461e      	mov	r6, r3
 80131dc:	4615      	mov	r5, r2
 80131de:	4607      	mov	r7, r0
 80131e0:	f7ff ff36 	bl	8013050 <ConfigStore::GetStoreOffset(configstore::Store)>
 80131e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80131e6:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80131ea:	18c4      	adds	r4, r0, r3
 80131ec:	4b10      	ldr	r3, [pc, #64]	@ (8013230 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>)
 80131ee:	441c      	add	r4, r3
 80131f0:	4688      	mov	r8, r1
 80131f2:	4623      	mov	r3, r4
 80131f4:	1932      	adds	r2, r6, r4
 80131f6:	4293      	cmp	r3, r2
 80131f8:	d10c      	bne.n	8013214 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x40>
 80131fa:	f1b9 0f00 	cmp.w	r9, #0
 80131fe:	d00f      	beq.n	8013220 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8013200:	2200      	movs	r2, #0
 8013202:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8013206:	9600      	str	r6, [sp, #0]
 8013208:	462b      	mov	r3, r5
 801320a:	4641      	mov	r1, r8
 801320c:	4638      	mov	r0, r7
 801320e:	f7ff ffbb 	bl	8013188 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8013212:	e005      	b.n	8013220 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8013214:	f813 1b01 	ldrb.w	r1, [r3], #1
 8013218:	2900      	cmp	r1, #0
 801321a:	d0ec      	beq.n	80131f6 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x22>
 801321c:	4294      	cmp	r4, r2
 801321e:	d102      	bne.n	8013226 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x52>
 8013220:	b005      	add	sp, #20
 8013222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013226:	f814 3b01 	ldrb.w	r3, [r4], #1
 801322a:	f805 3b01 	strb.w	r3, [r5], #1
 801322e:	e7f5      	b.n	801321c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
 8013230:	40024000 	andmi	r4, r2, r0

08013234 <ConfigStore::Flash()>:
 8013234:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013236:	4c24      	ldr	r4, [pc, #144]	@ (80132c8 <ConfigStore::Flash()+0x94>)
 8013238:	6823      	ldr	r3, [r4, #0]
 801323a:	2b00      	cmp	r3, #0
 801323c:	d041      	beq.n	80132c2 <ConfigStore::Flash()+0x8e>
 801323e:	3b01      	subs	r3, #1
 8013240:	2b05      	cmp	r3, #5
 8013242:	d82f      	bhi.n	80132a4 <ConfigStore::Flash()+0x70>
 8013244:	e8df f003 	tbb	[pc, r3]
 8013248:	2c140b03 			@ <UNDEFINED> instruction: 0x2c140b03
 801324c:	4b1f2e23 	blmi	87deae0 <_sidata+0x7c3da4>
 8013250:	681a      	ldr	r2, [r3, #0]
 8013252:	4b1f      	ldr	r3, [pc, #124]	@ (80132d0 <ConfigStore::Flash()+0x9c>)
 8013254:	601a      	str	r2, [r3, #0]
 8013256:	2302      	movs	r3, #2
 8013258:	6023      	str	r3, [r4, #0]
 801325a:	2001      	movs	r0, #1
 801325c:	e02f      	b.n	80132be <ConfigStore::Flash()+0x8a>
 801325e:	4b1b      	ldr	r3, [pc, #108]	@ (80132cc <ConfigStore::Flash()+0x98>)
 8013260:	4a1b      	ldr	r2, [pc, #108]	@ (80132d0 <ConfigStore::Flash()+0x9c>)
 8013262:	681b      	ldr	r3, [r3, #0]
 8013264:	6812      	ldr	r2, [r2, #0]
 8013266:	1a9b      	subs	r3, r3, r2
 8013268:	2b63      	cmp	r3, #99	@ 0x63
 801326a:	d9f6      	bls.n	801325a <ConfigStore::Flash()+0x26>
 801326c:	2303      	movs	r3, #3
 801326e:	e7f3      	b.n	8013258 <ConfigStore::Flash()+0x24>
 8013270:	4918      	ldr	r1, [pc, #96]	@ (80132d4 <ConfigStore::Flash()+0xa0>)
 8013272:	ab03      	add	r3, sp, #12
 8013274:	6809      	ldr	r1, [r1, #0]
 8013276:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 801327a:	f000 f8fa 	bl	8013472 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 801327e:	2800      	cmp	r0, #0
 8013280:	d0eb      	beq.n	801325a <ConfigStore::Flash()+0x26>
 8013282:	4b12      	ldr	r3, [pc, #72]	@ (80132cc <ConfigStore::Flash()+0x98>)
 8013284:	681a      	ldr	r2, [r3, #0]
 8013286:	4b12      	ldr	r3, [pc, #72]	@ (80132d0 <ConfigStore::Flash()+0x9c>)
 8013288:	601a      	str	r2, [r3, #0]
 801328a:	2305      	movs	r3, #5
 801328c:	e7e4      	b.n	8013258 <ConfigStore::Flash()+0x24>
 801328e:	4b0f      	ldr	r3, [pc, #60]	@ (80132cc <ConfigStore::Flash()+0x98>)
 8013290:	4a0f      	ldr	r2, [pc, #60]	@ (80132d0 <ConfigStore::Flash()+0x9c>)
 8013292:	681b      	ldr	r3, [r3, #0]
 8013294:	6812      	ldr	r2, [r2, #0]
 8013296:	1a9b      	subs	r3, r3, r2
 8013298:	2b63      	cmp	r3, #99	@ 0x63
 801329a:	d9de      	bls.n	801325a <ConfigStore::Flash()+0x26>
 801329c:	2304      	movs	r3, #4
 801329e:	e7db      	b.n	8013258 <ConfigStore::Flash()+0x24>
 80132a0:	2306      	movs	r3, #6
 80132a2:	e7d9      	b.n	8013258 <ConfigStore::Flash()+0x24>
 80132a4:	ab03      	add	r3, sp, #12
 80132a6:	4a0c      	ldr	r2, [pc, #48]	@ (80132d8 <ConfigStore::Flash()+0xa4>)
 80132a8:	490a      	ldr	r1, [pc, #40]	@ (80132d4 <ConfigStore::Flash()+0xa0>)
 80132aa:	9300      	str	r3, [sp, #0]
 80132ac:	6812      	ldr	r2, [r2, #0]
 80132ae:	4b0b      	ldr	r3, [pc, #44]	@ (80132dc <ConfigStore::Flash()+0xa8>)
 80132b0:	6809      	ldr	r1, [r1, #0]
 80132b2:	f000 f8e2 	bl	801347a <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 80132b6:	2800      	cmp	r0, #0
 80132b8:	d0cf      	beq.n	801325a <ConfigStore::Flash()+0x26>
 80132ba:	2000      	movs	r0, #0
 80132bc:	6020      	str	r0, [r4, #0]
 80132be:	b004      	add	sp, #16
 80132c0:	bd10      	pop	{r4, pc}
 80132c2:	4618      	mov	r0, r3
 80132c4:	e7fb      	b.n	80132be <ConfigStore::Flash()+0x8a>
 80132c6:	bf00      	nop
 80132c8:	20002144 	andcs	r2, r0, r4, asr #2
 80132cc:	20009ae8 	andcs	r9, r0, r8, ror #21
 80132d0:	20002138 	andcs	r2, r0, r8, lsr r1
 80132d4:	20002140 	andcs	r2, r0, r0, asr #2
 80132d8:	2000213c 	andcs	r2, r0, ip, lsr r1
 80132dc:	40024000 	andmi	r4, r2, r0

080132e0 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
 80132e0:	b510      	push	{r4, lr}
 80132e2:	4a0d      	ldr	r2, [pc, #52]	@ (8013318 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x38>)
 80132e4:	f44f 6461 	mov.w	r4, #3600	@ 0xe10
 80132e8:	6913      	ldr	r3, [r2, #16]
 80132ea:	fb93 f3f4 	sdiv	r3, r3, r4
 80132ee:	b25b      	sxtb	r3, r3
 80132f0:	7003      	strb	r3, [r0, #0]
 80132f2:	2b00      	cmp	r3, #0
 80132f4:	6912      	ldr	r2, [r2, #16]
 80132f6:	dd08      	ble.n	801330a <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x2a>
 80132f8:	4808      	ldr	r0, [pc, #32]	@ (801331c <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x3c>)
 80132fa:	fb00 2203 	mla	r2, r0, r3, r2
 80132fe:	233c      	movs	r3, #60	@ 0x3c
 8013300:	fbb2 f2f3 	udiv	r2, r2, r3
 8013304:	b2d3      	uxtb	r3, r2
 8013306:	700b      	strb	r3, [r1, #0]
 8013308:	bd10      	pop	{r4, pc}
 801330a:	4363      	muls	r3, r4
 801330c:	1a9b      	subs	r3, r3, r2
 801330e:	223c      	movs	r2, #60	@ 0x3c
 8013310:	fbb3 f3f2 	udiv	r3, r3, r2
 8013314:	b2db      	uxtb	r3, r3
 8013316:	e7f6      	b.n	8013306 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x26>
 8013318:	40024000 	andmi	r4, r2, r0
 801331c:	fffff1f0 			@ <UNDEFINED> instruction: 0xfffff1f0

08013320 <EnvParams::EnvParams()>:
 8013320:	4770      	bx	lr
	...

08013324 <EnvParams::LoadAndSet(char const*, unsigned long)>:
 8013324:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013326:	460c      	mov	r4, r1
 8013328:	4615      	mov	r5, r2
 801332a:	4907      	ldr	r1, [pc, #28]	@ (8013348 <EnvParams::LoadAndSet(char const*, unsigned long)+0x24>)
 801332c:	4602      	mov	r2, r0
 801332e:	4668      	mov	r0, sp
 8013330:	f000 fa2a 	bl	8013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8013334:	462a      	mov	r2, r5
 8013336:	4621      	mov	r1, r4
 8013338:	4668      	mov	r0, sp
 801333a:	f000 fa29 	bl	8013790 <ReadConfigFile::Read(char const*, unsigned int)>
 801333e:	4668      	mov	r0, sp
 8013340:	f000 fa25 	bl	801378e <ReadConfigFile::~ReadConfigFile()>
 8013344:	b003      	add	sp, #12
 8013346:	bd30      	pop	{r4, r5, pc}
 8013348:	080133d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, ip, sp}

0801334c <EnvParams::callbackFunction(char const*)>:
 801334c:	b513      	push	{r0, r1, r4, lr}
 801334e:	4608      	mov	r0, r1
 8013350:	f10d 0307 	add.w	r3, sp, #7
 8013354:	491c      	ldr	r1, [pc, #112]	@ (80133c8 <EnvParams::callbackFunction(char const*)+0x7c>)
 8013356:	f10d 0206 	add.w	r2, sp, #6
 801335a:	f000 fadf 	bl	801391c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
 801335e:	bb70      	cbnz	r0, 80133be <EnvParams::callbackFunction(char const*)+0x72>
 8013360:	f99d 1006 	ldrsb.w	r1, [sp, #6]
 8013364:	f101 030c 	add.w	r3, r1, #12
 8013368:	b2db      	uxtb	r3, r3
 801336a:	2b1a      	cmp	r3, #26
 801336c:	d827      	bhi.n	80133be <EnvParams::callbackFunction(char const*)+0x72>
 801336e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013372:	bb32      	cbnz	r2, 80133c2 <EnvParams::callbackFunction(char const*)+0x76>
 8013374:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8013378:	434b      	muls	r3, r1
 801337a:	4a14      	ldr	r2, [pc, #80]	@ (80133cc <EnvParams::callbackFunction(char const*)+0x80>)
 801337c:	6911      	ldr	r1, [r2, #16]
 801337e:	4299      	cmp	r1, r3
 8013380:	bf1f      	itttt	ne
 8013382:	6113      	strne	r3, [r2, #16]
 8013384:	4b12      	ldrne	r3, [pc, #72]	@ (80133d0 <EnvParams::callbackFunction(char const*)+0x84>)
 8013386:	2201      	movne	r2, #1
 8013388:	601a      	strne	r2, [r3, #0]
 801338a:	e018      	b.n	80133be <EnvParams::callbackFunction(char const*)+0x72>
 801338c:	f993 4000 	ldrsb.w	r4, [r3]
 8013390:	428c      	cmp	r4, r1
 8013392:	d111      	bne.n	80133b8 <EnvParams::callbackFunction(char const*)+0x6c>
 8013394:	785c      	ldrb	r4, [r3, #1]
 8013396:	4294      	cmp	r4, r2
 8013398:	d10e      	bne.n	80133b8 <EnvParams::callbackFunction(char const*)+0x6c>
 801339a:	2900      	cmp	r1, #0
 801339c:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80133a0:	fb01 f303 	mul.w	r3, r1, r3
 80133a4:	bfcb      	itete	gt
 80133a6:	ebc2 1202 	rsbgt	r2, r2, r2, lsl #4
 80133aa:	f06f 013b 	mvnle.w	r1, #59	@ 0x3b
 80133ae:	eb03 0382 	addgt.w	r3, r3, r2, lsl #2
 80133b2:	fb01 3302 	mlale	r3, r1, r2, r3
 80133b6:	e7e0      	b.n	801337a <EnvParams::callbackFunction(char const*)+0x2e>
 80133b8:	3302      	adds	r3, #2
 80133ba:	3801      	subs	r0, #1
 80133bc:	d1e6      	bne.n	801338c <EnvParams::callbackFunction(char const*)+0x40>
 80133be:	b002      	add	sp, #8
 80133c0:	bd10      	pop	{r4, pc}
 80133c2:	4b04      	ldr	r3, [pc, #16]	@ (80133d4 <EnvParams::callbackFunction(char const*)+0x88>)
 80133c4:	200c      	movs	r0, #12
 80133c6:	e7f8      	b.n	80133ba <EnvParams::callbackFunction(char const*)+0x6e>
 80133c8:	0801a86e 	stmdaeq	r1, {r1, r2, r3, r5, r6, fp, sp, pc}
 80133cc:	40024000 	andmi	r4, r2, r0
 80133d0:	20002144 	andcs	r2, r0, r4, asr #2
 80133d4:	0801a858 	stmdaeq	r1, {r3, r4, r6, fp, sp, pc}

080133d8 <EnvParams::staticCallbackFunction(void*, char const*)>:
 80133d8:	f7ff bfb8 	b.w	801334c <EnvParams::callbackFunction(char const*)>

080133dc <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
 80133dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80133de:	461c      	mov	r4, r3
 80133e0:	a801      	add	r0, sp, #4
 80133e2:	4613      	mov	r3, r2
 80133e4:	460a      	mov	r2, r1
 80133e6:	4914      	ldr	r1, [pc, #80]	@ (8013438 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x5c>)
 80133e8:	f000 f8f8 	bl	80135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 80133ec:	f10d 0103 	add.w	r1, sp, #3
 80133f0:	f10d 0002 	add.w	r0, sp, #2
 80133f4:	f7ff ff74 	bl	80132e0 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
 80133f8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80133fc:	f99d 2002 	ldrsb.w	r2, [sp, #2]
 8013400:	490e      	ldr	r1, [pc, #56]	@ (801343c <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x60>)
 8013402:	a801      	add	r0, sp, #4
 8013404:	f000 f970 	bl	80136e8 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
 8013408:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801340c:	b17b      	cbz	r3, 801342e <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x52>
 801340e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013412:	9b01      	ldr	r3, [sp, #4]
 8013414:	4413      	add	r3, r2
 8013416:	227d      	movs	r2, #125	@ 0x7d
 8013418:	f803 2c01 	strb.w	r2, [r3, #-1]
 801341c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013420:	9901      	ldr	r1, [sp, #4]
 8013422:	54ca      	strb	r2, [r1, r3]
 8013424:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013428:	3301      	adds	r3, #1
 801342a:	f8ad 300a 	strh.w	r3, [sp, #10]
 801342e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013432:	6023      	str	r3, [r4, #0]
 8013434:	b004      	add	sp, #16
 8013436:	bd10      	pop	{r4, pc}
 8013438:	0801a879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, pc}
 801343c:	0801a86e 	stmdaeq	r1, {r1, r2, r3, r5, r6, fp, sp, pc}

08013440 <StoreDevice::StoreDevice()>:
 8013440:	b510      	push	{r4, lr}
 8013442:	2301      	movs	r3, #1
 8013444:	4604      	mov	r4, r0
 8013446:	7003      	strb	r3, [r0, #0]
 8013448:	2204      	movs	r2, #4
 801344a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 801344e:	4802      	ldr	r0, [pc, #8]	@ (8013458 <StoreDevice::StoreDevice()+0x18>)
 8013450:	f003 f99e 	bl	8016790 <printf>
 8013454:	4620      	mov	r0, r4
 8013456:	bd10      	pop	{r4, pc}
 8013458:	08017afc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr}

0801345c <StoreDevice::GetSize() const>:
 801345c:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8013460:	4770      	bx	lr

08013462 <StoreDevice::GetSectorSize() const>:
 8013462:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8013466:	4770      	bx	lr

08013468 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 8013468:	9b00      	ldr	r3, [sp, #0]
 801346a:	2200      	movs	r2, #0
 801346c:	601a      	str	r2, [r3, #0]
 801346e:	2001      	movs	r0, #1
 8013470:	4770      	bx	lr

08013472 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 8013472:	2200      	movs	r2, #0
 8013474:	601a      	str	r2, [r3, #0]
 8013476:	2001      	movs	r0, #1
 8013478:	4770      	bx	lr

0801347a <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 801347a:	9b00      	ldr	r3, [sp, #0]
 801347c:	2200      	movs	r2, #0
 801347e:	601a      	str	r2, [r3, #0]
 8013480:	2001      	movs	r0, #1
 8013482:	4770      	bx	lr

08013484 <properties::convert_json_file(char*, unsigned long, bool)>:
 8013484:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013488:	7803      	ldrb	r3, [r0, #0]
 801348a:	2b7b      	cmp	r3, #123	@ 0x7b
 801348c:	4604      	mov	r4, r0
 801348e:	f040 80a2 	bne.w	80135d6 <properties::convert_json_file(char*, unsigned long, bool)+0x152>
 8013492:	b172      	cbz	r2, 80134b2 <properties::convert_json_file(char*, unsigned long, bool)+0x2e>
 8013494:	2501      	movs	r5, #1
 8013496:	4603      	mov	r3, r0
 8013498:	4628      	mov	r0, r5
 801349a:	f04f 0c3d 	mov.w	ip, #61	@ 0x3d
 801349e:	f04f 0e0a 	mov.w	lr, #10
 80134a2:	428d      	cmp	r5, r1
 80134a4:	d377      	bcc.n	8013596 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 80134a6:	b102      	cbz	r2, 80134aa <properties::convert_json_file(char*, unsigned long, bool)+0x26>
 80134a8:	3801      	subs	r0, #1
 80134aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80134ae:	4635      	mov	r5, r6
 80134b0:	e7f3      	b.n	801349a <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 80134b2:	4605      	mov	r5, r0
 80134b4:	2323      	movs	r3, #35	@ 0x23
 80134b6:	f805 3b01 	strb.w	r3, [r5], #1
 80134ba:	2601      	movs	r6, #1
 80134bc:	462f      	mov	r7, r5
 80134be:	428e      	cmp	r6, r1
 80134c0:	d317      	bcc.n	80134f2 <properties::convert_json_file(char*, unsigned long, bool)+0x6e>
 80134c2:	1c6b      	adds	r3, r5, #1
 80134c4:	428e      	cmp	r6, r1
 80134c6:	eba3 0004 	sub.w	r0, r3, r4
 80134ca:	d205      	bcs.n	80134d8 <properties::convert_json_file(char*, unsigned long, bool)+0x54>
 80134cc:	46bc      	mov	ip, r7
 80134ce:	f81c eb01 	ldrb.w	lr, [ip], #1
 80134d2:	f1be 0f22 	cmp.w	lr, #34	@ 0x22
 80134d6:	d112      	bne.n	80134fe <properties::convert_json_file(char*, unsigned long, bool)+0x7a>
 80134d8:	240a      	movs	r4, #10
 80134da:	702c      	strb	r4, [r5, #0]
 80134dc:	463c      	mov	r4, r7
 80134de:	3701      	adds	r7, #1
 80134e0:	7825      	ldrb	r5, [r4, #0]
 80134e2:	2d7b      	cmp	r5, #123	@ 0x7b
 80134e4:	d0e3      	beq.n	80134ae <properties::convert_json_file(char*, unsigned long, bool)+0x2a>
 80134e6:	428e      	cmp	r6, r1
 80134e8:	f106 0501 	add.w	r5, r6, #1
 80134ec:	d2d5      	bcs.n	801349a <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 80134ee:	462e      	mov	r6, r5
 80134f0:	e7f4      	b.n	80134dc <properties::convert_json_file(char*, unsigned long, bool)+0x58>
 80134f2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80134f6:	2b22      	cmp	r3, #34	@ 0x22
 80134f8:	d0e3      	beq.n	80134c2 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 80134fa:	3601      	adds	r6, #1
 80134fc:	e7df      	b.n	80134be <properties::convert_json_file(char*, unsigned long, bool)+0x3a>
 80134fe:	f803 ec01 	strb.w	lr, [r3, #-1]
 8013502:	3601      	adds	r6, #1
 8013504:	4667      	mov	r7, ip
 8013506:	461d      	mov	r5, r3
 8013508:	e7db      	b.n	80134c2 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 801350a:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 801350e:	d142      	bne.n	8013596 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 8013510:	eba0 0904 	sub.w	r9, r0, r4
 8013514:	f894 8000 	ldrb.w	r8, [r4]
 8013518:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 801351c:	eb04 0009 	add.w	r0, r4, r9
 8013520:	4626      	mov	r6, r4
 8013522:	f105 0701 	add.w	r7, r5, #1
 8013526:	f104 0401 	add.w	r4, r4, #1
 801352a:	d13f      	bne.n	80135ac <properties::convert_json_file(char*, unsigned long, bool)+0x128>
 801352c:	f803 cb01 	strb.w	ip, [r3], #1
 8013530:	3001      	adds	r0, #1
 8013532:	462f      	mov	r7, r5
 8013534:	428f      	cmp	r7, r1
 8013536:	f896 8000 	ldrb.w	r8, [r6]
 801353a:	4634      	mov	r4, r6
 801353c:	f107 0701 	add.w	r7, r7, #1
 8013540:	f106 0601 	add.w	r6, r6, #1
 8013544:	d338      	bcc.n	80135b8 <properties::convert_json_file(char*, unsigned long, bool)+0x134>
 8013546:	7825      	ldrb	r5, [r4, #0]
 8013548:	2d20      	cmp	r5, #32
 801354a:	4626      	mov	r6, r4
 801354c:	46b8      	mov	r8, r7
 801354e:	f104 0401 	add.w	r4, r4, #1
 8013552:	f107 0701 	add.w	r7, r7, #1
 8013556:	d134      	bne.n	80135c2 <properties::convert_json_file(char*, unsigned long, bool)+0x13e>
 8013558:	4588      	cmp	r8, r1
 801355a:	d3f4      	bcc.n	8013546 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 801355c:	46b8      	mov	r8, r7
 801355e:	7834      	ldrb	r4, [r6, #0]
 8013560:	2c22      	cmp	r4, #34	@ 0x22
 8013562:	d100      	bne.n	8013566 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 8013564:	3601      	adds	r6, #1
 8013566:	4634      	mov	r4, r6
 8013568:	f108 0501 	add.w	r5, r8, #1
 801356c:	f814 7b01 	ldrb.w	r7, [r4], #1
 8013570:	2f22      	cmp	r7, #34	@ 0x22
 8013572:	d02a      	beq.n	80135ca <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 8013574:	2f2c      	cmp	r7, #44	@ 0x2c
 8013576:	d028      	beq.n	80135ca <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 8013578:	2f7d      	cmp	r7, #125	@ 0x7d
 801357a:	d026      	beq.n	80135ca <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 801357c:	4588      	cmp	r8, r1
 801357e:	d228      	bcs.n	80135d2 <properties::convert_json_file(char*, unsigned long, bool)+0x14e>
 8013580:	f1a7 0820 	sub.w	r8, r7, #32
 8013584:	f1b8 0f5a 	cmp.w	r8, #90	@ 0x5a
 8013588:	d803      	bhi.n	8013592 <properties::convert_json_file(char*, unsigned long, bool)+0x10e>
 801358a:	f803 7b01 	strb.w	r7, [r3], #1
 801358e:	3001      	adds	r0, #1
 8013590:	4626      	mov	r6, r4
 8013592:	46a8      	mov	r8, r5
 8013594:	e7e7      	b.n	8013566 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 8013596:	428d      	cmp	r5, r1
 8013598:	f894 8000 	ldrb.w	r8, [r4]
 801359c:	4627      	mov	r7, r4
 801359e:	f105 0501 	add.w	r5, r5, #1
 80135a2:	f104 0401 	add.w	r4, r4, #1
 80135a6:	d3b0      	bcc.n	801350a <properties::convert_json_file(char*, unsigned long, bool)+0x86>
 80135a8:	463c      	mov	r4, r7
 80135aa:	e7b1      	b.n	8013510 <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
 80135ac:	428d      	cmp	r5, r1
 80135ae:	d2c1      	bcs.n	8013534 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 80135b0:	f803 8b01 	strb.w	r8, [r3], #1
 80135b4:	463d      	mov	r5, r7
 80135b6:	e7ad      	b.n	8013514 <properties::convert_json_file(char*, unsigned long, bool)+0x90>
 80135b8:	f1b8 0f3a 	cmp.w	r8, #58	@ 0x3a
 80135bc:	d1ba      	bne.n	8013534 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 80135be:	4634      	mov	r4, r6
 80135c0:	e7c1      	b.n	8013546 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 80135c2:	2d22      	cmp	r5, #34	@ 0x22
 80135c4:	bf08      	it	eq
 80135c6:	4626      	moveq	r6, r4
 80135c8:	e7c9      	b.n	801355e <properties::convert_json_file(char*, unsigned long, bool)+0xda>
 80135ca:	f803 eb01 	strb.w	lr, [r3], #1
 80135ce:	3001      	adds	r0, #1
 80135d0:	4645      	mov	r5, r8
 80135d2:	3501      	adds	r5, #1
 80135d4:	e765      	b.n	80134a2 <properties::convert_json_file(char*, unsigned long, bool)+0x1e>
 80135d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80135da:	e766      	b.n	80134aa <properties::convert_json_file(char*, unsigned long, bool)+0x26>

080135dc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
 80135dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80135e0:	6002      	str	r2, [r0, #0]
 80135e2:	4614      	mov	r4, r2
 80135e4:	2200      	movs	r2, #0
 80135e6:	80c2      	strh	r2, [r0, #6]
 80135e8:	4a1c      	ldr	r2, [pc, #112]	@ (801365c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x80>)
 80135ea:	8083      	strh	r3, [r0, #4]
 80135ec:	7812      	ldrb	r2, [r2, #0]
 80135ee:	f002 0201 	and.w	r2, r2, #1
 80135f2:	4606      	mov	r6, r0
 80135f4:	7202      	strb	r2, [r0, #8]
 80135f6:	4608      	mov	r0, r1
 80135f8:	4605      	mov	r5, r0
 80135fa:	3001      	adds	r0, #1
 80135fc:	782f      	ldrb	r7, [r5, #0]
 80135fe:	2f00      	cmp	r7, #0
 8013600:	d1fa      	bne.n	80135f8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x1c>
 8013602:	1a6d      	subs	r5, r5, r1
 8013604:	b29b      	uxth	r3, r3
 8013606:	b1d2      	cbz	r2, 801363e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x62>
 8013608:	1d2f      	adds	r7, r5, #4
 801360a:	429f      	cmp	r7, r3
 801360c:	d814      	bhi.n	8013638 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 801360e:	f04f 087b 	mov.w	r8, #123	@ 0x7b
 8013612:	f04f 0922 	mov.w	r9, #34	@ 0x22
 8013616:	462a      	mov	r2, r5
 8013618:	f884 8000 	strb.w	r8, [r4]
 801361c:	f884 9001 	strb.w	r9, [r4, #1]
 8013620:	1ca0      	adds	r0, r4, #2
 8013622:	f002 fdba 	bl	801619a <memmove>
 8013626:	1963      	adds	r3, r4, r5
 8013628:	223a      	movs	r2, #58	@ 0x3a
 801362a:	f883 9002 	strb.w	r9, [r3, #2]
 801362e:	70da      	strb	r2, [r3, #3]
 8013630:	3505      	adds	r5, #5
 8013632:	f804 8007 	strb.w	r8, [r4, r7]
 8013636:	80f5      	strh	r5, [r6, #6]
 8013638:	4630      	mov	r0, r6
 801363a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801363e:	1caf      	adds	r7, r5, #2
 8013640:	42bb      	cmp	r3, r7
 8013642:	d3f9      	bcc.n	8013638 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8013644:	4620      	mov	r0, r4
 8013646:	2323      	movs	r3, #35	@ 0x23
 8013648:	f800 3b01 	strb.w	r3, [r0], #1
 801364c:	462a      	mov	r2, r5
 801364e:	442c      	add	r4, r5
 8013650:	f002 fda3 	bl	801619a <memmove>
 8013654:	230a      	movs	r3, #10
 8013656:	7063      	strb	r3, [r4, #1]
 8013658:	80f7      	strh	r7, [r6, #6]
 801365a:	e7ed      	b.n	8013638 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 801365c:	20002149 	andcs	r2, r0, r9, asr #2

08013660 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
 8013660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013662:	469c      	mov	ip, r3
 8013664:	8885      	ldrh	r5, [r0, #4]
 8013666:	88c3      	ldrh	r3, [r0, #6]
 8013668:	42ab      	cmp	r3, r5
 801366a:	b085      	sub	sp, #20
 801366c:	d302      	bcc.n	8013674 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x14>
 801366e:	2000      	movs	r0, #0
 8013670:	b005      	add	sp, #20
 8013672:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013674:	4604      	mov	r4, r0
 8013676:	6800      	ldr	r0, [r0, #0]
 8013678:	f894 e008 	ldrb.w	lr, [r4, #8]
 801367c:	4418      	add	r0, r3
 801367e:	1aed      	subs	r5, r5, r3
 8013680:	b2d6      	uxtb	r6, r2
 8013682:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8013686:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801368a:	0e12      	lsrs	r2, r2, #24
 801368c:	f1bc 0f00 	cmp.w	ip, #0
 8013690:	d109      	bne.n	80136a6 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x46>
 8013692:	f1be 0f00 	cmp.w	lr, #0
 8013696:	d109      	bne.n	80136ac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x4c>
 8013698:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801369c:	e9cd 6700 	strd	r6, r7, [sp]
 80136a0:	4a0e      	ldr	r2, [pc, #56]	@ (80136dc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x7c>)
 80136a2:	460b      	mov	r3, r1
 80136a4:	e008      	b.n	80136b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 80136a6:	f1be 0f00 	cmp.w	lr, #0
 80136aa:	d00f      	beq.n	80136cc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x6c>
 80136ac:	e9cd 6700 	strd	r6, r7, [sp]
 80136b0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80136b4:	4a0a      	ldr	r2, [pc, #40]	@ (80136e0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x80>)
 80136b6:	460b      	mov	r3, r1
 80136b8:	4629      	mov	r1, r5
 80136ba:	f003 f891 	bl	80167e0 <snprintf>
 80136be:	4285      	cmp	r5, r0
 80136c0:	dbd5      	blt.n	801366e <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xe>
 80136c2:	88e3      	ldrh	r3, [r4, #6]
 80136c4:	4403      	add	r3, r0
 80136c6:	80e3      	strh	r3, [r4, #6]
 80136c8:	2001      	movs	r0, #1
 80136ca:	e7d1      	b.n	8013670 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x10>
 80136cc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80136d0:	e9cd 6700 	strd	r6, r7, [sp]
 80136d4:	4a03      	ldr	r2, [pc, #12]	@ (80136e4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x84>)
 80136d6:	460b      	mov	r3, r1
 80136d8:	e7ee      	b.n	80136b8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 80136da:	bf00      	nop
 80136dc:	08017b40 	stmdaeq	r1, {r6, r8, r9, fp, ip, sp, lr}
 80136e0:	08017b2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, ip, sp, lr}
 80136e4:	08017b41 	stmdaeq	r1, {r0, r6, r8, r9, fp, ip, sp, lr}

080136e8 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
 80136e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80136ea:	88c6      	ldrh	r6, [r0, #6]
 80136ec:	8885      	ldrh	r5, [r0, #4]
 80136ee:	42ae      	cmp	r6, r5
 80136f0:	b085      	sub	sp, #20
 80136f2:	d302      	bcc.n	80136fa <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x12>
 80136f4:	2000      	movs	r0, #0
 80136f6:	b005      	add	sp, #20
 80136f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80136fa:	4604      	mov	r4, r0
 80136fc:	6800      	ldr	r0, [r0, #0]
 80136fe:	1bad      	subs	r5, r5, r6
 8013700:	4430      	add	r0, r6
 8013702:	7a26      	ldrb	r6, [r4, #8]
 8013704:	b19e      	cbz	r6, 801372e <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x46>
 8013706:	4e0f      	ldr	r6, [pc, #60]	@ (8013744 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8013708:	4f0f      	ldr	r7, [pc, #60]	@ (8013748 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 801370a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801370e:	2a00      	cmp	r2, #0
 8013710:	bfc8      	it	gt
 8013712:	463e      	movgt	r6, r7
 8013714:	4a0d      	ldr	r2, [pc, #52]	@ (801374c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x64>)
 8013716:	9600      	str	r6, [sp, #0]
 8013718:	460b      	mov	r3, r1
 801371a:	4629      	mov	r1, r5
 801371c:	f003 f860 	bl	80167e0 <snprintf>
 8013720:	4285      	cmp	r5, r0
 8013722:	dbe7      	blt.n	80136f4 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xc>
 8013724:	88e3      	ldrh	r3, [r4, #6]
 8013726:	4403      	add	r3, r0
 8013728:	80e3      	strh	r3, [r4, #6]
 801372a:	2001      	movs	r0, #1
 801372c:	e7e3      	b.n	80136f6 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xe>
 801372e:	4e05      	ldr	r6, [pc, #20]	@ (8013744 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8013730:	4f05      	ldr	r7, [pc, #20]	@ (8013748 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 8013732:	2a00      	cmp	r2, #0
 8013734:	bfc8      	it	gt
 8013736:	463e      	movgt	r6, r7
 8013738:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801373c:	9600      	str	r6, [sp, #0]
 801373e:	4a04      	ldr	r2, [pc, #16]	@ (8013750 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x68>)
 8013740:	460b      	mov	r3, r1
 8013742:	e7ea      	b.n	801371a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x32>
 8013744:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 8013748:	08017b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, sp, lr}
 801374c:	08017b53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, fp, ip, sp, lr}
 8013750:	08017b67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, fp, ip, sp, lr}

08013754 <PropertiesBuilder::AddComment(char const*)>:
 8013754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013756:	7a06      	ldrb	r6, [r0, #8]
 8013758:	b98e      	cbnz	r6, 801377e <PropertiesBuilder::AddComment(char const*)+0x2a>
 801375a:	4604      	mov	r4, r0
 801375c:	88c0      	ldrh	r0, [r0, #6]
 801375e:	88a5      	ldrh	r5, [r4, #4]
 8013760:	42a8      	cmp	r0, r5
 8013762:	d20d      	bcs.n	8013780 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013764:	6827      	ldr	r7, [r4, #0]
 8013766:	4a07      	ldr	r2, [pc, #28]	@ (8013784 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8013768:	1a2d      	subs	r5, r5, r0
 801376a:	460b      	mov	r3, r1
 801376c:	4438      	add	r0, r7
 801376e:	4629      	mov	r1, r5
 8013770:	f003 f836 	bl	80167e0 <snprintf>
 8013774:	4285      	cmp	r5, r0
 8013776:	db03      	blt.n	8013780 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013778:	88e3      	ldrh	r3, [r4, #6]
 801377a:	4418      	add	r0, r3
 801377c:	80e0      	strh	r0, [r4, #6]
 801377e:	2601      	movs	r6, #1
 8013780:	4630      	mov	r0, r6
 8013782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013784:	08017b76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, sp, lr}

08013788 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8013788:	e9c0 1200 	strd	r1, r2, [r0]
 801378c:	4770      	bx	lr

0801378e <ReadConfigFile::~ReadConfigFile()>:
 801378e:	4770      	bx	lr

08013790 <ReadConfigFile::Read(char const*, unsigned int)>:
 8013790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013794:	b0a0      	sub	sp, #128	@ 0x80
 8013796:	230a      	movs	r3, #10
 8013798:	4607      	mov	r7, r0
 801379a:	460d      	mov	r5, r1
 801379c:	4614      	mov	r4, r2
 801379e:	f88d 3000 	strb.w	r3, [sp]
 80137a2:	f04f 0800 	mov.w	r8, #0
 80137a6:	b334      	cbz	r4, 80137f6 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 80137a8:	466e      	mov	r6, sp
 80137aa:	462a      	mov	r2, r5
 80137ac:	4631      	mov	r1, r6
 80137ae:	7810      	ldrb	r0, [r2, #0]
 80137b0:	280d      	cmp	r0, #13
 80137b2:	4613      	mov	r3, r2
 80137b4:	f102 0201 	add.w	r2, r2, #1
 80137b8:	d009      	beq.n	80137ce <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 80137ba:	280a      	cmp	r0, #10
 80137bc:	d007      	beq.n	80137ce <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 80137be:	f806 0b01 	strb.w	r0, [r6], #1
 80137c2:	1a73      	subs	r3, r6, r1
 80137c4:	2b7f      	cmp	r3, #127	@ 0x7f
 80137c6:	dc16      	bgt.n	80137f6 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 80137c8:	3c01      	subs	r4, #1
 80137ca:	d1f0      	bne.n	80137ae <ReadConfigFile::Read(char const*, unsigned int)+0x1e>
 80137cc:	4613      	mov	r3, r2
 80137ce:	461d      	mov	r5, r3
 80137d0:	b12c      	cbz	r4, 80137de <ReadConfigFile::Read(char const*, unsigned int)+0x4e>
 80137d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80137d6:	2a0d      	cmp	r2, #13
 80137d8:	d00b      	beq.n	80137f2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80137da:	2a0a      	cmp	r2, #10
 80137dc:	d009      	beq.n	80137f2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80137de:	f89d 3000 	ldrb.w	r3, [sp]
 80137e2:	2b2f      	cmp	r3, #47	@ 0x2f
 80137e4:	d9df      	bls.n	80137a6 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 80137e6:	e9d7 3000 	ldrd	r3, r0, [r7]
 80137ea:	f886 8000 	strb.w	r8, [r6]
 80137ee:	4798      	blx	r3
 80137f0:	e7d9      	b.n	80137a6 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 80137f2:	3c01      	subs	r4, #1
 80137f4:	e7eb      	b.n	80137ce <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 80137f6:	b020      	add	sp, #128	@ 0x80
 80137f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080137fc <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
 80137fc:	b570      	push	{r4, r5, r6, lr}
 80137fe:	4615      	mov	r5, r2
 8013800:	461c      	mov	r4, r3
 8013802:	f000 f8d5 	bl	80139b0 <Sscan::checkName(char const*, char const*)>
 8013806:	b170      	cbz	r0, 8013826 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2a>
 8013808:	2100      	movs	r1, #0
 801380a:	5c43      	ldrb	r3, [r0, r1]
 801380c:	6826      	ldr	r6, [r4, #0]
 801380e:	b28a      	uxth	r2, r1
 8013810:	b11b      	cbz	r3, 801381a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1e>
 8013812:	4296      	cmp	r6, r2
 8013814:	d804      	bhi.n	8013820 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x24>
 8013816:	2b0a      	cmp	r3, #10
 8013818:	d107      	bne.n	801382a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2e>
 801381a:	6022      	str	r2, [r4, #0]
 801381c:	2000      	movs	r0, #0
 801381e:	bd70      	pop	{r4, r5, r6, pc}
 8013820:	546b      	strb	r3, [r5, r1]
 8013822:	3101      	adds	r1, #1
 8013824:	e7f1      	b.n	801380a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0xe>
 8013826:	2001      	movs	r0, #1
 8013828:	e7f9      	b.n	801381e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>
 801382a:	2002      	movs	r0, #2
 801382c:	e7f7      	b.n	801381e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>

0801382e <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
 801382e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013830:	4615      	mov	r5, r2
 8013832:	f000 f8bd 	bl	80139b0 <Sscan::checkName(char const*, char const*)>
 8013836:	bb60      	cbnz	r0, 8013892 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x64>
 8013838:	2001      	movs	r0, #1
 801383a:	e028      	b.n	801388e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 801383c:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8013840:	2b09      	cmp	r3, #9
 8013842:	d823      	bhi.n	801388c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013844:	230a      	movs	r3, #10
 8013846:	fb03 2101 	mla	r1, r3, r1, r2
 801384a:	3930      	subs	r1, #48	@ 0x30
 801384c:	4603      	mov	r3, r0
 801384e:	4618      	mov	r0, r3
 8013850:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013854:	2a2e      	cmp	r2, #46	@ 0x2e
 8013856:	d115      	bne.n	8013884 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x56>
 8013858:	29ff      	cmp	r1, #255	@ 0xff
 801385a:	d817      	bhi.n	801388c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 801385c:	3401      	adds	r4, #1
 801385e:	2c03      	cmp	r4, #3
 8013860:	f806 1b01 	strb.w	r1, [r6], #1
 8013864:	d117      	bne.n	8013896 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x68>
 8013866:	1d1a      	adds	r2, r3, #4
 8013868:	2400      	movs	r4, #0
 801386a:	260a      	movs	r6, #10
 801386c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013870:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 8013874:	d113      	bne.n	801389e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x70>
 8013876:	2cff      	cmp	r4, #255	@ 0xff
 8013878:	d808      	bhi.n	801388c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 801387a:	f88d 4007 	strb.w	r4, [sp, #7]
 801387e:	9b01      	ldr	r3, [sp, #4]
 8013880:	602b      	str	r3, [r5, #0]
 8013882:	e004      	b.n	801388e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8013884:	2a00      	cmp	r2, #0
 8013886:	d0e7      	beq.n	8013858 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x2a>
 8013888:	42b8      	cmp	r0, r7
 801388a:	d1d7      	bne.n	801383c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xe>
 801388c:	2002      	movs	r0, #2
 801388e:	b003      	add	sp, #12
 8013890:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013892:	ae01      	add	r6, sp, #4
 8013894:	2400      	movs	r4, #0
 8013896:	4603      	mov	r3, r0
 8013898:	1d07      	adds	r7, r0, #4
 801389a:	2100      	movs	r1, #0
 801389c:	e7d7      	b.n	801384e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x20>
 801389e:	4293      	cmp	r3, r2
 80138a0:	d0f4      	beq.n	801388c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 80138a2:	3930      	subs	r1, #48	@ 0x30
 80138a4:	2909      	cmp	r1, #9
 80138a6:	d8f1      	bhi.n	801388c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 80138a8:	fb06 1404 	mla	r4, r6, r4, r1
 80138ac:	e7de      	b.n	801386c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x3e>

080138ae <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80138ae:	b538      	push	{r3, r4, r5, lr}
 80138b0:	4615      	mov	r5, r2
 80138b2:	f000 f87d 	bl	80139b0 <Sscan::checkName(char const*, char const*)>
 80138b6:	b190      	cbz	r0, 80138de <Sscan::Uint16(char const*, char const*, unsigned short&)+0x30>
 80138b8:	4601      	mov	r1, r0
 80138ba:	2400      	movs	r4, #0
 80138bc:	780b      	ldrb	r3, [r1, #0]
 80138be:	3b30      	subs	r3, #48	@ 0x30
 80138c0:	2b09      	cmp	r3, #9
 80138c2:	d80e      	bhi.n	80138e2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80138c4:	220a      	movs	r2, #10
 80138c6:	fb02 3404 	mla	r4, r2, r4, r3
 80138ca:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80138ce:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 80138d2:	d1f3      	bne.n	80138bc <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 80138d4:	f5b4 3f80 	cmp.w	r4, #65536	@ 0x10000
 80138d8:	d203      	bcs.n	80138e2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80138da:	802c      	strh	r4, [r5, #0]
 80138dc:	bd38      	pop	{r3, r4, r5, pc}
 80138de:	2001      	movs	r0, #1
 80138e0:	e7fc      	b.n	80138dc <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>
 80138e2:	2002      	movs	r0, #2
 80138e4:	e7fa      	b.n	80138dc <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>

080138e6 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80138e6:	b538      	push	{r3, r4, r5, lr}
 80138e8:	4615      	mov	r5, r2
 80138ea:	f000 f861 	bl	80139b0 <Sscan::checkName(char const*, char const*)>
 80138ee:	b188      	cbz	r0, 8013914 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2e>
 80138f0:	4601      	mov	r1, r0
 80138f2:	2400      	movs	r4, #0
 80138f4:	780b      	ldrb	r3, [r1, #0]
 80138f6:	3b30      	subs	r3, #48	@ 0x30
 80138f8:	2b09      	cmp	r3, #9
 80138fa:	d80d      	bhi.n	8013918 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80138fc:	220a      	movs	r2, #10
 80138fe:	fb02 3404 	mla	r4, r2, r4, r3
 8013902:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8013906:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 801390a:	d1f3      	bne.n	80138f4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 801390c:	2cff      	cmp	r4, #255	@ 0xff
 801390e:	d803      	bhi.n	8013918 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8013910:	702c      	strb	r4, [r5, #0]
 8013912:	bd38      	pop	{r3, r4, r5, pc}
 8013914:	2001      	movs	r0, #1
 8013916:	e7fc      	b.n	8013912 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>
 8013918:	2002      	movs	r0, #2
 801391a:	e7fa      	b.n	8013912 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>

0801391c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
 801391c:	b570      	push	{r4, r5, r6, lr}
 801391e:	4615      	mov	r5, r2
 8013920:	461e      	mov	r6, r3
 8013922:	f000 f845 	bl	80139b0 <Sscan::checkName(char const*, char const*)>
 8013926:	2800      	cmp	r0, #0
 8013928:	d040      	beq.n	80139ac <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x90>
 801392a:	7803      	ldrb	r3, [r0, #0]
 801392c:	2b2d      	cmp	r3, #45	@ 0x2d
 801392e:	4601      	mov	r1, r0
 8013930:	d107      	bne.n	8013942 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x26>
 8013932:	3101      	adds	r1, #1
 8013934:	2201      	movs	r2, #1
 8013936:	780b      	ldrb	r3, [r1, #0]
 8013938:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 801393c:	d106      	bne.n	801394c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x30>
 801393e:	2002      	movs	r0, #2
 8013940:	bd70      	pop	{r4, r5, r6, pc}
 8013942:	2b2b      	cmp	r3, #43	@ 0x2b
 8013944:	bf08      	it	eq
 8013946:	3101      	addeq	r1, #1
 8013948:	2200      	movs	r2, #0
 801394a:	e7f4      	b.n	8013936 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x1a>
 801394c:	2300      	movs	r3, #0
 801394e:	702b      	strb	r3, [r5, #0]
 8013950:	780b      	ldrb	r3, [r1, #0]
 8013952:	f1a3 0030 	sub.w	r0, r3, #48	@ 0x30
 8013956:	2801      	cmp	r0, #1
 8013958:	d8f1      	bhi.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801395a:	2b31      	cmp	r3, #49	@ 0x31
 801395c:	bf14      	ite	ne
 801395e:	2300      	movne	r3, #0
 8013960:	230a      	moveq	r3, #10
 8013962:	702b      	strb	r3, [r5, #0]
 8013964:	7848      	ldrb	r0, [r1, #1]
 8013966:	3830      	subs	r0, #48	@ 0x30
 8013968:	2809      	cmp	r0, #9
 801396a:	d8e8      	bhi.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801396c:	4403      	add	r3, r0
 801396e:	702b      	strb	r3, [r5, #0]
 8013970:	788b      	ldrb	r3, [r1, #2]
 8013972:	2b3a      	cmp	r3, #58	@ 0x3a
 8013974:	d1e3      	bne.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013976:	78cc      	ldrb	r4, [r1, #3]
 8013978:	3c30      	subs	r4, #48	@ 0x30
 801397a:	2c09      	cmp	r4, #9
 801397c:	d8df      	bhi.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801397e:	790b      	ldrb	r3, [r1, #4]
 8013980:	3b30      	subs	r3, #48	@ 0x30
 8013982:	2b09      	cmp	r3, #9
 8013984:	d8db      	bhi.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013986:	7948      	ldrb	r0, [r1, #5]
 8013988:	f010 00df 	ands.w	r0, r0, #223	@ 0xdf
 801398c:	d1d7      	bne.n	801393e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801398e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8013992:	0064      	lsls	r4, r4, #1
 8013994:	b2e4      	uxtb	r4, r4
 8013996:	7034      	strb	r4, [r6, #0]
 8013998:	790b      	ldrb	r3, [r1, #4]
 801399a:	3b30      	subs	r3, #48	@ 0x30
 801399c:	441c      	add	r4, r3
 801399e:	7034      	strb	r4, [r6, #0]
 80139a0:	2a00      	cmp	r2, #0
 80139a2:	d0cd      	beq.n	8013940 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 80139a4:	782b      	ldrb	r3, [r5, #0]
 80139a6:	425b      	negs	r3, r3
 80139a8:	702b      	strb	r3, [r5, #0]
 80139aa:	e7c9      	b.n	8013940 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 80139ac:	2001      	movs	r0, #1
 80139ae:	e7c7      	b.n	8013940 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>

080139b0 <Sscan::checkName(char const*, char const*)>:
 80139b0:	3901      	subs	r1, #1
 80139b2:	4602      	mov	r2, r0
 80139b4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80139b8:	b130      	cbz	r0, 80139c8 <Sscan::checkName(char const*, char const*)+0x18>
 80139ba:	f812 3b01 	ldrb.w	r3, [r2], #1
 80139be:	b10b      	cbz	r3, 80139c4 <Sscan::checkName(char const*, char const*)+0x14>
 80139c0:	4298      	cmp	r0, r3
 80139c2:	d0f7      	beq.n	80139b4 <Sscan::checkName(char const*, char const*)+0x4>
 80139c4:	2000      	movs	r0, #0
 80139c6:	4770      	bx	lr
 80139c8:	7813      	ldrb	r3, [r2, #0]
 80139ca:	2b3d      	cmp	r3, #61	@ 0x3d
 80139cc:	d1fb      	bne.n	80139c6 <Sscan::checkName(char const*, char const*)+0x16>
 80139ce:	7853      	ldrb	r3, [r2, #1]
 80139d0:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 80139d4:	d0f7      	beq.n	80139c6 <Sscan::checkName(char const*, char const*)+0x16>
 80139d6:	1c50      	adds	r0, r2, #1
 80139d8:	4770      	bx	lr
	...

080139dc <Display::PrintInfo() [clone .isra.0]>:
 80139dc:	b910      	cbnz	r0, 80139e4 <Display::PrintInfo() [clone .isra.0]+0x8>
 80139de:	4803      	ldr	r0, [pc, #12]	@ (80139ec <Display::PrintInfo() [clone .isra.0]+0x10>)
 80139e0:	f002 bf2b 	b.w	801683a <puts>
 80139e4:	6803      	ldr	r3, [r0, #0]
 80139e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80139e8:	4718      	bx	r3
 80139ea:	bf00      	nop
 80139ec:	08017b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, lr}

080139f0 <display::timeout::gpio_init()>:
 80139f0:	b510      	push	{r4, lr}
 80139f2:	4c0a      	ldr	r4, [pc, #40]	@ (8013a1c <display::timeout::gpio_init()+0x2c>)
 80139f4:	f640 4002 	movw	r0, #3074	@ 0xc02
 80139f8:	f001 fab8 	bl	8014f6c <rcu_periph_clock_enable>
 80139fc:	4620      	mov	r0, r4
 80139fe:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8013a02:	2201      	movs	r2, #1
 8013a04:	2100      	movs	r1, #0
 8013a06:	f001 fa2f 	bl	8014e68 <gpio_mode_set>
 8013a0a:	4620      	mov	r0, r4
 8013a0c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8013a10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a14:	2201      	movs	r2, #1
 8013a16:	2100      	movs	r1, #0
 8013a18:	f001 ba26 	b.w	8014e68 <gpio_mode_set>
 8013a1c:	40020800 	andmi	r0, r2, r0, lsl #16

08013a20 <Display::Detect(display::Type)>:
 8013a20:	2902      	cmp	r1, #2
 8013a22:	b538      	push	{r3, r4, r5, lr}
 8013a24:	4604      	mov	r4, r0
 8013a26:	d014      	beq.n	8013a52 <Display::Detect(display::Type)+0x32>
 8013a28:	2904      	cmp	r1, #4
 8013a2a:	d01b      	beq.n	8013a64 <Display::Detect(display::Type)+0x44>
 8013a2c:	69a0      	ldr	r0, [r4, #24]
 8013a2e:	b168      	cbz	r0, 8013a4c <Display::Detect(display::Type)+0x2c>
 8013a30:	6803      	ldr	r3, [r0, #0]
 8013a32:	689b      	ldr	r3, [r3, #8]
 8013a34:	4798      	blx	r3
 8013a36:	4603      	mov	r3, r0
 8013a38:	69a0      	ldr	r0, [r4, #24]
 8013a3a:	b9ab      	cbnz	r3, 8013a68 <Display::Detect(display::Type)+0x48>
 8013a3c:	b110      	cbz	r0, 8013a44 <Display::Detect(display::Type)+0x24>
 8013a3e:	6803      	ldr	r3, [r0, #0]
 8013a40:	685b      	ldr	r3, [r3, #4]
 8013a42:	4798      	blx	r3
 8013a44:	2300      	movs	r3, #0
 8013a46:	61a3      	str	r3, [r4, #24]
 8013a48:	2304      	movs	r3, #4
 8013a4a:	6023      	str	r3, [r4, #0]
 8013a4c:	2300      	movs	r3, #0
 8013a4e:	6123      	str	r3, [r4, #16]
 8013a50:	e010      	b.n	8013a74 <Display::Detect(display::Type)+0x54>
 8013a52:	2020      	movs	r0, #32
 8013a54:	f003 f8f2 	bl	8016c3c <operator new(unsigned int)>
 8013a58:	2100      	movs	r1, #0
 8013a5a:	4605      	mov	r5, r0
 8013a5c:	f000 f8bc 	bl	8013bd8 <Ssd1306::Ssd1306(TOledPanel)>
 8013a60:	61a5      	str	r5, [r4, #24]
 8013a62:	e7e3      	b.n	8013a2c <Display::Detect(display::Type)+0xc>
 8013a64:	6001      	str	r1, [r0, #0]
 8013a66:	e7e1      	b.n	8013a2c <Display::Detect(display::Type)+0xc>
 8013a68:	6803      	ldr	r3, [r0, #0]
 8013a6a:	68db      	ldr	r3, [r3, #12]
 8013a6c:	4798      	blx	r3
 8013a6e:	69a3      	ldr	r3, [r4, #24]
 8013a70:	2b00      	cmp	r3, #0
 8013a72:	d0eb      	beq.n	8013a4c <Display::Detect(display::Type)+0x2c>
 8013a74:	bd38      	pop	{r3, r4, r5, pc}
	...

08013a78 <Display::Display()>:
 8013a78:	2304      	movs	r3, #4
 8013a7a:	b510      	push	{r4, lr}
 8013a7c:	6003      	str	r3, [r0, #0]
 8013a7e:	4b0e      	ldr	r3, [pc, #56]	@ (8013ab8 <Display::Display()+0x40>)
 8013a80:	4a0e      	ldr	r2, [pc, #56]	@ (8013abc <Display::Display()+0x44>)
 8013a82:	681b      	ldr	r3, [r3, #0]
 8013a84:	6043      	str	r3, [r0, #4]
 8013a86:	2321      	movs	r3, #33	@ 0x21
 8013a88:	7203      	strb	r3, [r0, #8]
 8013a8a:	4b0d      	ldr	r3, [pc, #52]	@ (8013ac0 <Display::Display()+0x48>)
 8013a8c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8013a90:	237f      	movs	r3, #127	@ 0x7f
 8013a92:	8283      	strh	r3, [r0, #20]
 8013a94:	2300      	movs	r3, #0
 8013a96:	4604      	mov	r4, r0
 8013a98:	7583      	strb	r3, [r0, #22]
 8013a9a:	6183      	str	r3, [r0, #24]
 8013a9c:	4b09      	ldr	r3, [pc, #36]	@ (8013ac4 <Display::Display()+0x4c>)
 8013a9e:	2102      	movs	r1, #2
 8013aa0:	6018      	str	r0, [r3, #0]
 8013aa2:	f7ff ffbd 	bl	8013a20 <Display::Detect(display::Type)>
 8013aa6:	69a3      	ldr	r3, [r4, #24]
 8013aa8:	b10b      	cbz	r3, 8013aae <Display::Display()+0x36>
 8013aaa:	f7ff ffa1 	bl	80139f0 <display::timeout::gpio_init()>
 8013aae:	69a0      	ldr	r0, [r4, #24]
 8013ab0:	f7ff ff94 	bl	80139dc <Display::PrintInfo() [clone .isra.0]>
 8013ab4:	4620      	mov	r0, r4
 8013ab6:	bd10      	pop	{r4, pc}
 8013ab8:	20009ae8 	andcs	r9, r0, r8, ror #21
 8013abc:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013ac0:	000493e0 	andeq	r9, r4, r0, ror #7
 8013ac4:	2000214c 	andcs	r2, r0, ip, asr #2

08013ac8 <Ssd1306::~Ssd1306()>:
 8013ac8:	4770      	bx	lr

08013aca <Ssd1306::SetCursor(unsigned long)>:
 8013aca:	4770      	bx	lr

08013acc <Ssd1306::PrintInfo()>:
 8013acc:	b410      	push	{r4}
 8013ace:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8013ad2:	7e44      	ldrb	r4, [r0, #25]
 8013ad4:	4904      	ldr	r1, [pc, #16]	@ (8013ae8 <Ssd1306::PrintInfo()+0x1c>)
 8013ad6:	4805      	ldr	r0, [pc, #20]	@ (8013aec <Ssd1306::PrintInfo()+0x20>)
 8013ad8:	2c00      	cmp	r4, #0
 8013ada:	bf18      	it	ne
 8013adc:	4601      	movne	r1, r0
 8013ade:	4804      	ldr	r0, [pc, #16]	@ (8013af0 <Ssd1306::PrintInfo()+0x24>)
 8013ae0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013ae4:	f002 be54 	b.w	8016790 <printf>
 8013ae8:	08017b96 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, fp, ip, sp, lr}
 8013aec:	08017b8f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, fp, ip, sp, lr}
 8013af0:	08017b9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, r9, fp, ip, sp, lr}

08013af4 <Ssd1306::~Ssd1306()>:
 8013af4:	b510      	push	{r4, lr}
 8013af6:	2120      	movs	r1, #32
 8013af8:	4604      	mov	r4, r0
 8013afa:	f003 f89d 	bl	8016c38 <operator delete(void*, unsigned int)>
 8013afe:	4620      	mov	r0, r4
 8013b00:	bd10      	pop	{r4, pc}

08013b02 <HAL_I2C::Setup()>:
 8013b02:	b510      	push	{r4, lr}
 8013b04:	4604      	mov	r4, r0
 8013b06:	7800      	ldrb	r0, [r0, #0]
 8013b08:	f002 f836 	bl	8015b78 <gd32_i2c_set_address>
 8013b0c:	6860      	ldr	r0, [r4, #4]
 8013b0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b12:	f002 b829 	b.w	8015b68 <gd32_i2c_set_baudrate>
	...

08013b18 <Ssd1306::PutChar(int)>:
 8013b18:	b510      	push	{r4, lr}
 8013b1a:	f1a1 0420 	sub.w	r4, r1, #32
 8013b1e:	2c5f      	cmp	r4, #95	@ 0x5f
 8013b20:	f100 0010 	add.w	r0, r0, #16
 8013b24:	bf88      	it	hi
 8013b26:	2400      	movhi	r4, #0
 8013b28:	f7ff ffeb 	bl	8013b02 <HAL_I2C::Setup()>
 8013b2c:	4804      	ldr	r0, [pc, #16]	@ (8013b40 <Ssd1306::PutChar(int)+0x28>)
 8013b2e:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013b32:	4420      	add	r0, r4
 8013b34:	2107      	movs	r1, #7
 8013b36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b3a:	f002 b823 	b.w	8015b84 <gd32_i2c_write>
 8013b3e:	bf00      	nop
 8013b40:	0801aa6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, sp, pc}

08013b44 <Ssd1306::PutString(char const*)>:
 8013b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013b46:	4604      	mov	r4, r0
 8013b48:	460e      	mov	r6, r1
 8013b4a:	460f      	mov	r7, r1
 8013b4c:	463d      	mov	r5, r7
 8013b4e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013b52:	b939      	cbnz	r1, 8013b64 <Ssd1306::PutString(char const*)+0x20>
 8013b54:	7b23      	ldrb	r3, [r4, #12]
 8013b56:	b123      	cbz	r3, 8013b62 <Ssd1306::PutString(char const*)+0x1e>
 8013b58:	7321      	strb	r1, [r4, #12]
 8013b5a:	1bad      	subs	r5, r5, r6
 8013b5c:	6863      	ldr	r3, [r4, #4]
 8013b5e:	42ab      	cmp	r3, r5
 8013b60:	d804      	bhi.n	8013b6c <Ssd1306::PutString(char const*)+0x28>
 8013b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013b64:	4620      	mov	r0, r4
 8013b66:	f7ff ffd7 	bl	8013b18 <Ssd1306::PutChar(int)>
 8013b6a:	e7ef      	b.n	8013b4c <Ssd1306::PutString(char const*)+0x8>
 8013b6c:	2120      	movs	r1, #32
 8013b6e:	4620      	mov	r0, r4
 8013b70:	f7ff ffd2 	bl	8013b18 <Ssd1306::PutChar(int)>
 8013b74:	3501      	adds	r5, #1
 8013b76:	e7f1      	b.n	8013b5c <Ssd1306::PutString(char const*)+0x18>

08013b78 <Ssd1306::Text(char const*, unsigned long)>:
 8013b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013b7a:	6843      	ldr	r3, [r0, #4]
 8013b7c:	429a      	cmp	r2, r3
 8013b7e:	bf28      	it	cs
 8013b80:	461a      	movcs	r2, r3
 8013b82:	4604      	mov	r4, r0
 8013b84:	4615      	mov	r5, r2
 8013b86:	460e      	mov	r6, r1
 8013b88:	188f      	adds	r7, r1, r2
 8013b8a:	42be      	cmp	r6, r7
 8013b8c:	d107      	bne.n	8013b9e <Ssd1306::Text(char const*, unsigned long)+0x26>
 8013b8e:	7b23      	ldrb	r3, [r4, #12]
 8013b90:	b123      	cbz	r3, 8013b9c <Ssd1306::Text(char const*, unsigned long)+0x24>
 8013b92:	2300      	movs	r3, #0
 8013b94:	7323      	strb	r3, [r4, #12]
 8013b96:	6863      	ldr	r3, [r4, #4]
 8013b98:	42ab      	cmp	r3, r5
 8013b9a:	d806      	bhi.n	8013baa <Ssd1306::Text(char const*, unsigned long)+0x32>
 8013b9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013b9e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8013ba2:	4620      	mov	r0, r4
 8013ba4:	f7ff ffb8 	bl	8013b18 <Ssd1306::PutChar(int)>
 8013ba8:	e7ef      	b.n	8013b8a <Ssd1306::Text(char const*, unsigned long)+0x12>
 8013baa:	2120      	movs	r1, #32
 8013bac:	4620      	mov	r0, r4
 8013bae:	f7ff ffb3 	bl	8013b18 <Ssd1306::PutChar(int)>
 8013bb2:	3501      	adds	r5, #1
 8013bb4:	e7ef      	b.n	8013b96 <Ssd1306::Text(char const*, unsigned long)+0x1e>

08013bb6 <Ssd1306::InitMembers()>:
 8013bb6:	2315      	movs	r3, #21
 8013bb8:	6043      	str	r3, [r0, #4]
 8013bba:	7e03      	ldrb	r3, [r0, #24]
 8013bbc:	b12b      	cbz	r3, 8013bca <Ssd1306::InitMembers()+0x14>
 8013bbe:	3b01      	subs	r3, #1
 8013bc0:	2b01      	cmp	r3, #1
 8013bc2:	d807      	bhi.n	8013bd4 <Ssd1306::InitMembers()+0x1e>
 8013bc4:	2304      	movs	r3, #4
 8013bc6:	2204      	movs	r2, #4
 8013bc8:	e001      	b.n	8013bce <Ssd1306::InitMembers()+0x18>
 8013bca:	2308      	movs	r3, #8
 8013bcc:	461a      	mov	r2, r3
 8013bce:	6083      	str	r3, [r0, #8]
 8013bd0:	61c2      	str	r2, [r0, #28]
 8013bd2:	4770      	bx	lr
 8013bd4:	2308      	movs	r3, #8
 8013bd6:	e7f6      	b.n	8013bc6 <Ssd1306::InitMembers()+0x10>

08013bd8 <Ssd1306::Ssd1306(TOledPanel)>:
 8013bd8:	b510      	push	{r4, lr}
 8013bda:	4c07      	ldr	r4, [pc, #28]	@ (8013bf8 <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8013bdc:	6004      	str	r4, [r0, #0]
 8013bde:	2200      	movs	r2, #0
 8013be0:	243c      	movs	r4, #60	@ 0x3c
 8013be2:	7302      	strb	r2, [r0, #12]
 8013be4:	7404      	strb	r4, [r0, #16]
 8013be6:	7642      	strb	r2, [r0, #25]
 8013be8:	4c04      	ldr	r4, [pc, #16]	@ (8013bfc <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8013bea:	4a05      	ldr	r2, [pc, #20]	@ (8013c00 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8013bec:	6144      	str	r4, [r0, #20]
 8013bee:	7601      	strb	r1, [r0, #24]
 8013bf0:	6010      	str	r0, [r2, #0]
 8013bf2:	f7ff ffe0 	bl	8013bb6 <Ssd1306::InitMembers()>
 8013bf6:	bd10      	pop	{r4, pc}
 8013bf8:	0801aa04 	stmdaeq	r1, {r2, r9, fp, sp, pc}
 8013bfc:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013c00:	20002150 	andcs	r2, r0, r0, asr r1

08013c04 <Ssd1306::SendCommand(unsigned char)>:
 8013c04:	b507      	push	{r0, r1, r2, lr}
 8013c06:	2300      	movs	r3, #0
 8013c08:	3010      	adds	r0, #16
 8013c0a:	f88d 3004 	strb.w	r3, [sp, #4]
 8013c0e:	f88d 1005 	strb.w	r1, [sp, #5]
 8013c12:	f7ff ff76 	bl	8013b02 <HAL_I2C::Setup()>
 8013c16:	2102      	movs	r1, #2
 8013c18:	a801      	add	r0, sp, #4
 8013c1a:	f001 ffb3 	bl	8015b84 <gd32_i2c_write>
 8013c1e:	b003      	add	sp, #12
 8013c20:	f85d fb04 	ldr.w	pc, [sp], #4

08013c24 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 8013c24:	2914      	cmp	r1, #20
 8013c26:	b570      	push	{r4, r5, r6, lr}
 8013c28:	4605      	mov	r5, r0
 8013c2a:	4616      	mov	r6, r2
 8013c2c:	d81d      	bhi.n	8013c6a <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8013c2e:	6883      	ldr	r3, [r0, #8]
 8013c30:	4293      	cmp	r3, r2
 8013c32:	d91a      	bls.n	8013c6a <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8013c34:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013c38:	7e43      	ldrb	r3, [r0, #25]
 8013c3a:	004c      	lsls	r4, r1, #1
 8013c3c:	b2e4      	uxtb	r4, r4
 8013c3e:	b10b      	cbz	r3, 8013c44 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 8013c40:	3404      	adds	r4, #4
 8013c42:	b2e4      	uxtb	r4, r4
 8013c44:	f004 010e 	and.w	r1, r4, #14
 8013c48:	4628      	mov	r0, r5
 8013c4a:	f7ff ffdb 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013c4e:	0921      	lsrs	r1, r4, #4
 8013c50:	4628      	mov	r0, r5
 8013c52:	f041 0110 	orr.w	r1, r1, #16
 8013c56:	f7ff ffd5 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013c5a:	f066 014f 	orn	r1, r6, #79	@ 0x4f
 8013c5e:	4628      	mov	r0, r5
 8013c60:	b2c9      	uxtb	r1, r1
 8013c62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013c66:	f7ff bfcd 	b.w	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013c6a:	bd70      	pop	{r4, r5, r6, pc}

08013c6c <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 8013c6c:	b570      	push	{r4, r5, r6, lr}
 8013c6e:	461e      	mov	r6, r3
 8013c70:	6883      	ldr	r3, [r0, #8]
 8013c72:	428b      	cmp	r3, r1
 8013c74:	4604      	mov	r4, r0
 8013c76:	4615      	mov	r5, r2
 8013c78:	d30b      	bcc.n	8013c92 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 8013c7a:	3901      	subs	r1, #1
 8013c7c:	b2ca      	uxtb	r2, r1
 8013c7e:	2100      	movs	r1, #0
 8013c80:	f7ff ffd0 	bl	8013c24 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8013c84:	4632      	mov	r2, r6
 8013c86:	4629      	mov	r1, r5
 8013c88:	4620      	mov	r0, r4
 8013c8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013c8e:	f7ff bf73 	b.w	8013b78 <Ssd1306::Text(char const*, unsigned long)>
 8013c92:	bd70      	pop	{r4, r5, r6, pc}

08013c94 <Ssd1306::ClearLine(unsigned long)>:
 8013c94:	b538      	push	{r3, r4, r5, lr}
 8013c96:	6883      	ldr	r3, [r0, #8]
 8013c98:	428b      	cmp	r3, r1
 8013c9a:	4605      	mov	r5, r0
 8013c9c:	d314      	bcc.n	8013cc8 <Ssd1306::ClearLine(unsigned long)+0x34>
 8013c9e:	3901      	subs	r1, #1
 8013ca0:	b2cc      	uxtb	r4, r1
 8013ca2:	4622      	mov	r2, r4
 8013ca4:	2100      	movs	r1, #0
 8013ca6:	f7ff ffbd 	bl	8013c24 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8013caa:	f105 0010 	add.w	r0, r5, #16
 8013cae:	f7ff ff28 	bl	8013b02 <HAL_I2C::Setup()>
 8013cb2:	2181      	movs	r1, #129	@ 0x81
 8013cb4:	4805      	ldr	r0, [pc, #20]	@ (8013ccc <Ssd1306::ClearLine(unsigned long)+0x38>)
 8013cb6:	f001 ff65 	bl	8015b84 <gd32_i2c_write>
 8013cba:	4622      	mov	r2, r4
 8013cbc:	4628      	mov	r0, r5
 8013cbe:	2100      	movs	r1, #0
 8013cc0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013cc4:	f7ff bfae 	b.w	8013c24 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8013cc8:	bd38      	pop	{r3, r4, r5, pc}
 8013cca:	bf00      	nop
 8013ccc:	20002154 	andcs	r2, r0, r4, asr r1

08013cd0 <Ssd1306::SetSleep(bool)>:
 8013cd0:	b111      	cbz	r1, 8013cd8 <Ssd1306::SetSleep(bool)+0x8>
 8013cd2:	21ae      	movs	r1, #174	@ 0xae
 8013cd4:	f7ff bf96 	b.w	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013cd8:	21af      	movs	r1, #175	@ 0xaf
 8013cda:	e7fb      	b.n	8013cd4 <Ssd1306::SetSleep(bool)+0x4>

08013cdc <Ssd1306::SetContrast(unsigned char)>:
 8013cdc:	b538      	push	{r3, r4, r5, lr}
 8013cde:	4604      	mov	r4, r0
 8013ce0:	460d      	mov	r5, r1
 8013ce2:	2181      	movs	r1, #129	@ 0x81
 8013ce4:	f7ff ff8e 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013ce8:	4629      	mov	r1, r5
 8013cea:	4620      	mov	r0, r4
 8013cec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013cf0:	f7ff bf88 	b.w	8013c04 <Ssd1306::SendCommand(unsigned char)>

08013cf4 <Ssd1306::SetFlipVertically(bool)>:
 8013cf4:	b510      	push	{r4, lr}
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	b141      	cbz	r1, 8013d0c <Ssd1306::SetFlipVertically(bool)+0x18>
 8013cfa:	21a0      	movs	r1, #160	@ 0xa0
 8013cfc:	f7ff ff82 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d00:	21c0      	movs	r1, #192	@ 0xc0
 8013d02:	4620      	mov	r0, r4
 8013d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d08:	f7ff bf7c 	b.w	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d0c:	21a1      	movs	r1, #161	@ 0xa1
 8013d0e:	f7ff ff79 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d12:	21c8      	movs	r1, #200	@ 0xc8
 8013d14:	e7f5      	b.n	8013d02 <Ssd1306::SetFlipVertically(bool)+0xe>
	...

08013d18 <Ssd1306::CheckSH1106()>:
 8013d18:	b530      	push	{r4, r5, lr}
 8013d1a:	2100      	movs	r1, #0
 8013d1c:	b087      	sub	sp, #28
 8013d1e:	4604      	mov	r4, r0
 8013d20:	f7ff ff70 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d24:	2190      	movs	r1, #144	@ 0x90
 8013d26:	4620      	mov	r0, r4
 8013d28:	f7ff ff6c 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d2c:	21b0      	movs	r1, #176	@ 0xb0
 8013d2e:	4620      	mov	r0, r4
 8013d30:	f7ff ff68 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d34:	4b21      	ldr	r3, [pc, #132]	@ (8013dbc <Ssd1306::CheckSH1106()+0xa4>)
 8013d36:	f104 0510 	add.w	r5, r4, #16
 8013d3a:	6818      	ldr	r0, [r3, #0]
 8013d3c:	9002      	str	r0, [sp, #8]
 8013d3e:	791b      	ldrb	r3, [r3, #4]
 8013d40:	f88d 300c 	strb.w	r3, [sp, #12]
 8013d44:	4628      	mov	r0, r5
 8013d46:	f7ff fedc 	bl	8013b02 <HAL_I2C::Setup()>
 8013d4a:	2105      	movs	r1, #5
 8013d4c:	a802      	add	r0, sp, #8
 8013d4e:	f001 ff19 	bl	8015b84 <gd32_i2c_write>
 8013d52:	2100      	movs	r1, #0
 8013d54:	4620      	mov	r0, r4
 8013d56:	f7ff ff55 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d5a:	2190      	movs	r1, #144	@ 0x90
 8013d5c:	4620      	mov	r0, r4
 8013d5e:	f7ff ff51 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d62:	21b0      	movs	r1, #176	@ 0xb0
 8013d64:	4620      	mov	r0, r4
 8013d66:	f7ff ff4d 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013d6a:	2300      	movs	r3, #0
 8013d6c:	4628      	mov	r0, r5
 8013d6e:	9304      	str	r3, [sp, #16]
 8013d70:	f88d 3014 	strb.w	r3, [sp, #20]
 8013d74:	f7ff fec5 	bl	8013b02 <HAL_I2C::Setup()>
 8013d78:	2340      	movs	r3, #64	@ 0x40
 8013d7a:	2101      	movs	r1, #1
 8013d7c:	a801      	add	r0, sp, #4
 8013d7e:	f88d 3004 	strb.w	r3, [sp, #4]
 8013d82:	f001 feff 	bl	8015b84 <gd32_i2c_write>
 8013d86:	4628      	mov	r0, r5
 8013d88:	f7ff febb 	bl	8013b02 <HAL_I2C::Setup()>
 8013d8c:	2105      	movs	r1, #5
 8013d8e:	a804      	add	r0, sp, #16
 8013d90:	f001 ff5e 	bl	8015c50 <gd32_i2c_read>
 8013d94:	a902      	add	r1, sp, #8
 8013d96:	aa04      	add	r2, sp, #16
 8013d98:	2003      	movs	r0, #3
 8013d9a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8013d9e:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8013da2:	42ab      	cmp	r3, r5
 8013da4:	d006      	beq.n	8013db4 <Ssd1306::CheckSH1106()+0x9c>
 8013da6:	1b5b      	subs	r3, r3, r5
 8013da8:	fab3 f383 	clz	r3, r3
 8013dac:	095b      	lsrs	r3, r3, #5
 8013dae:	7663      	strb	r3, [r4, #25]
 8013db0:	b007      	add	sp, #28
 8013db2:	bd30      	pop	{r4, r5, pc}
 8013db4:	3801      	subs	r0, #1
 8013db6:	d2f0      	bcs.n	8013d9a <Ssd1306::CheckSH1106()+0x82>
 8013db8:	2300      	movs	r3, #0
 8013dba:	e7f5      	b.n	8013da8 <Ssd1306::CheckSH1106()+0x90>
 8013dbc:	08017baa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, fp, ip, sp, lr}

08013dc0 <Ssd1306::Cls()>:
 8013dc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013dc4:	7e46      	ldrb	r6, [r0, #25]
 8013dc6:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 8013e28 <Ssd1306::Cls()+0x68>
 8013dca:	00b6      	lsls	r6, r6, #2
 8013dcc:	b2f7      	uxtb	r7, r6
 8013dce:	4604      	mov	r4, r0
 8013dd0:	2500      	movs	r5, #0
 8013dd2:	f047 0810 	orr.w	r8, r7, #16
 8013dd6:	69e3      	ldr	r3, [r4, #28]
 8013dd8:	42ab      	cmp	r3, r5
 8013dda:	4639      	mov	r1, r7
 8013ddc:	4620      	mov	r0, r4
 8013dde:	d80b      	bhi.n	8013df8 <Ssd1306::Cls()+0x38>
 8013de0:	f7ff ff10 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013de4:	4641      	mov	r1, r8
 8013de6:	4620      	mov	r0, r4
 8013de8:	f7ff ff0c 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013dec:	4620      	mov	r0, r4
 8013dee:	21b0      	movs	r1, #176	@ 0xb0
 8013df0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013df4:	f7ff bf06 	b.w	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013df8:	f7ff ff04 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013dfc:	4641      	mov	r1, r8
 8013dfe:	4620      	mov	r0, r4
 8013e00:	f7ff ff00 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013e04:	f065 014f 	orn	r1, r5, #79	@ 0x4f
 8013e08:	b2c9      	uxtb	r1, r1
 8013e0a:	4620      	mov	r0, r4
 8013e0c:	f7ff fefa 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013e10:	f104 0010 	add.w	r0, r4, #16
 8013e14:	f7ff fe75 	bl	8013b02 <HAL_I2C::Setup()>
 8013e18:	f106 0181 	add.w	r1, r6, #129	@ 0x81
 8013e1c:	4648      	mov	r0, r9
 8013e1e:	f001 feb1 	bl	8015b84 <gd32_i2c_write>
 8013e22:	3501      	adds	r5, #1
 8013e24:	e7d7      	b.n	8013dd6 <Ssd1306::Cls()+0x16>
 8013e26:	bf00      	nop
 8013e28:	20002154 	andcs	r2, r0, r4, asr r1

08013e2c <Ssd1306::Start()>:
 8013e2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013e2e:	7c04      	ldrb	r4, [r0, #16]
 8013e30:	6946      	ldr	r6, [r0, #20]
 8013e32:	4605      	mov	r5, r0
 8013e34:	4620      	mov	r0, r4
 8013e36:	f001 fe9f 	bl	8015b78 <gd32_i2c_set_address>
 8013e3a:	4630      	mov	r0, r6
 8013e3c:	f001 fe94 	bl	8015b68 <gd32_i2c_set_baudrate>
 8013e40:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8013e44:	2b07      	cmp	r3, #7
 8013e46:	d902      	bls.n	8013e4e <Ssd1306::Start()+0x22>
 8013e48:	3c50      	subs	r4, #80	@ 0x50
 8013e4a:	2c0f      	cmp	r4, #15
 8013e4c:	d80f      	bhi.n	8013e6e <Ssd1306::Start()+0x42>
 8013e4e:	2101      	movs	r1, #1
 8013e50:	f10d 0007 	add.w	r0, sp, #7
 8013e54:	f001 fefc 	bl	8015c50 <gd32_i2c_read>
 8013e58:	fab0 f480 	clz	r4, r0
 8013e5c:	0964      	lsrs	r4, r4, #5
 8013e5e:	b34c      	cbz	r4, 8013eb4 <Ssd1306::Start()+0x88>
 8013e60:	7e2e      	ldrb	r6, [r5, #24]
 8013e62:	b14e      	cbz	r6, 8013e78 <Ssd1306::Start()+0x4c>
 8013e64:	3e01      	subs	r6, #1
 8013e66:	2e01      	cmp	r6, #1
 8013e68:	d927      	bls.n	8013eba <Ssd1306::Start()+0x8e>
 8013e6a:	2400      	movs	r4, #0
 8013e6c:	e022      	b.n	8013eb4 <Ssd1306::Start()+0x88>
 8013e6e:	2100      	movs	r1, #0
 8013e70:	4608      	mov	r0, r1
 8013e72:	f001 fe87 	bl	8015b84 <gd32_i2c_write>
 8013e76:	e7ef      	b.n	8013e58 <Ssd1306::Start()+0x2c>
 8013e78:	4f15      	ldr	r7, [pc, #84]	@ (8013ed0 <Ssd1306::Start()+0xa4>)
 8013e7a:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013e7e:	4628      	mov	r0, r5
 8013e80:	3601      	adds	r6, #1
 8013e82:	f7ff febf 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013e86:	2e18      	cmp	r6, #24
 8013e88:	d1f7      	bne.n	8013e7a <Ssd1306::Start()+0x4e>
 8013e8a:	4a12      	ldr	r2, [pc, #72]	@ (8013ed4 <Ssd1306::Start()+0xa8>)
 8013e8c:	2300      	movs	r3, #0
 8013e8e:	4611      	mov	r1, r2
 8013e90:	4618      	mov	r0, r3
 8013e92:	3301      	adds	r3, #1
 8013e94:	2b86      	cmp	r3, #134	@ 0x86
 8013e96:	f802 0b01 	strb.w	r0, [r2], #1
 8013e9a:	d1fa      	bne.n	8013e92 <Ssd1306::Start()+0x66>
 8013e9c:	2340      	movs	r3, #64	@ 0x40
 8013e9e:	4628      	mov	r0, r5
 8013ea0:	700b      	strb	r3, [r1, #0]
 8013ea2:	f7ff ff39 	bl	8013d18 <Ssd1306::CheckSH1106()>
 8013ea6:	4628      	mov	r0, r5
 8013ea8:	f7ff ff8a 	bl	8013dc0 <Ssd1306::Cls()>
 8013eac:	21af      	movs	r1, #175	@ 0xaf
 8013eae:	4628      	mov	r0, r5
 8013eb0:	f7ff fea8 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013eb4:	4620      	mov	r0, r4
 8013eb6:	b003      	add	sp, #12
 8013eb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013eba:	4f07      	ldr	r7, [pc, #28]	@ (8013ed8 <Ssd1306::Start()+0xac>)
 8013ebc:	2600      	movs	r6, #0
 8013ebe:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013ec2:	4628      	mov	r0, r5
 8013ec4:	3601      	adds	r6, #1
 8013ec6:	f7ff fe9d 	bl	8013c04 <Ssd1306::SendCommand(unsigned char)>
 8013eca:	2e18      	cmp	r6, #24
 8013ecc:	d1f7      	bne.n	8013ebe <Ssd1306::Start()+0x92>
 8013ece:	e7dc      	b.n	8013e8a <Ssd1306::Start()+0x5e>
 8013ed0:	0801aa54 	stmdaeq	r1, {r2, r4, r6, r9, fp, sp, pc}
 8013ed4:	20002154 	andcs	r2, r0, r4, asr r1
 8013ed8:	0801aa3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, fp, sp, pc}

08013edc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8013edc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ee0:	4d15      	ldr	r5, [pc, #84]	@ (8013f38 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8013ee2:	461e      	mov	r6, r3
 8013ee4:	4b15      	ldr	r3, [pc, #84]	@ (8013f3c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8013ee6:	b086      	sub	sp, #24
 8013ee8:	6018      	str	r0, [r3, #0]
 8013eea:	4604      	mov	r4, r0
 8013eec:	4617      	mov	r7, r2
 8013eee:	f105 0803 	add.w	r8, r5, #3
 8013ef2:	2203      	movs	r2, #3
 8013ef4:	4628      	mov	r0, r5
 8013ef6:	f002 f950 	bl	801619a <memmove>
 8013efa:	4639      	mov	r1, r7
 8013efc:	220b      	movs	r2, #11
 8013efe:	4640      	mov	r0, r8
 8013f00:	f002 f94b 	bl	801619a <memmove>
 8013f04:	f105 030e 	add.w	r3, r5, #14
 8013f08:	4631      	mov	r1, r6
 8013f0a:	2208      	movs	r2, #8
 8013f0c:	4618      	mov	r0, r3
 8013f0e:	f002 f944 	bl	801619a <memmove>
 8013f12:	2308      	movs	r3, #8
 8013f14:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8013f18:	230b      	movs	r3, #11
 8013f1a:	9302      	str	r3, [sp, #8]
 8013f1c:	4b08      	ldr	r3, [pc, #32]	@ (8013f40 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8013f1e:	9005      	str	r0, [sp, #20]
 8013f20:	e9cd 5300 	strd	r5, r3, [sp]
 8013f24:	4a07      	ldr	r2, [pc, #28]	@ (8013f44 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8013f26:	4808      	ldr	r0, [pc, #32]	@ (8013f48 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8013f28:	2303      	movs	r3, #3
 8013f2a:	213f      	movs	r1, #63	@ 0x3f
 8013f2c:	f002 fc58 	bl	80167e0 <snprintf>
 8013f30:	4620      	mov	r0, r4
 8013f32:	b006      	add	sp, #24
 8013f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f38:	20002220 	andcs	r2, r0, r0, lsr #4
 8013f3c:	200021dc 	ldrdcs	r2, [r0], -ip
 8013f40:	080174ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp, lr}
 8013f44:	08017bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, ip, sp, lr}
 8013f48:	200021e0 	andcs	r2, r0, r0, ror #3

08013f4c <Hardware::ledblink()>:
 8013f4c:	4b02      	ldr	r3, [pc, #8]	@ (8013f58 <Hardware::ledblink()+0xc>)
 8013f4e:	2210      	movs	r2, #16
 8013f50:	f8c3 2c2c 	str.w	r2, [r3, #3116]	@ 0xc2c
 8013f54:	4770      	bx	lr
 8013f56:	bf00      	nop
 8013f58:	40020000 	andmi	r0, r2, r0

08013f5c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 8013f5c:	2900      	cmp	r1, #0
 8013f5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f60:	db10      	blt.n	8013f84 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8013f62:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 8013f66:	2300      	movs	r3, #0
 8013f68:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 8013f6c:	42ab      	cmp	r3, r5
 8013f6e:	d009      	beq.n	8013f84 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8013f70:	011c      	lsls	r4, r3, #4
 8013f72:	5937      	ldr	r7, [r6, r4]
 8013f74:	42b9      	cmp	r1, r7
 8013f76:	d106      	bne.n	8013f86 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 8013f78:	4b04      	ldr	r3, [pc, #16]	@ (8013f8c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 8013f7a:	681b      	ldr	r3, [r3, #0]
 8013f7c:	4420      	add	r0, r4
 8013f7e:	4413      	add	r3, r2
 8013f80:	e9c0 3208 	strd	r3, r2, [r0, #32]
 8013f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f86:	3301      	adds	r3, #1
 8013f88:	e7f0      	b.n	8013f6c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 8013f8a:	bf00      	nop
 8013f8c:	20009ae8 	andcs	r9, r0, r8, ror #21

08013f90 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>:
 8013f90:	680a      	ldr	r2, [r1, #0]
 8013f92:	2a00      	cmp	r2, #0
 8013f94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f96:	4606      	mov	r6, r0
 8013f98:	468e      	mov	lr, r1
 8013f9a:	db17      	blt.n	8013fcc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 8013f9c:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8013fa0:	2400      	movs	r4, #0
 8013fa2:	f100 0128 	add.w	r1, r0, #40	@ 0x28
 8013fa6:	429c      	cmp	r4, r3
 8013fa8:	d010      	beq.n	8013fcc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 8013faa:	0125      	lsls	r5, r4, #4
 8013fac:	5948      	ldr	r0, [r1, r5]
 8013fae:	4282      	cmp	r2, r0
 8013fb0:	d116      	bne.n	8013fe0 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x50>
 8013fb2:	4435      	add	r5, r6
 8013fb4:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
 8013fb8:	4564      	cmp	r4, ip
 8013fba:	f105 0510 	add.w	r5, r5, #16
 8013fbe:	d306      	bcc.n	8013fce <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3e>
 8013fc0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8013fc4:	f8c6 c0a0 	str.w	ip, [r6, #160]	@ 0xa0
 8013fc8:	f8ce 3000 	str.w	r3, [lr]
 8013fcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fce:	f105 0320 	add.w	r3, r5, #32
 8013fd2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8013fd4:	f105 0710 	add.w	r7, r5, #16
 8013fd8:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8013fdc:	3401      	adds	r4, #1
 8013fde:	e7eb      	b.n	8013fb8 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x28>
 8013fe0:	3401      	adds	r4, #1
 8013fe2:	e7e0      	b.n	8013fa6 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x16>

08013fe4 <Hardware::SetFrequency(unsigned long)>:
 8013fe4:	460a      	mov	r2, r1
 8013fe6:	69c1      	ldr	r1, [r0, #28]
 8013fe8:	2900      	cmp	r1, #0
 8013fea:	b538      	push	{r3, r4, r5, lr}
 8013fec:	4604      	mov	r4, r0
 8013fee:	da21      	bge.n	8014034 <Hardware::SetFrequency(unsigned long)+0x50>
 8013ff0:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8013ff4:	2b07      	cmp	r3, #7
 8013ff6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8013ffa:	fbb1 f1f2 	udiv	r1, r1, r2
 8013ffe:	d906      	bls.n	801400e <Hardware::SetFrequency(unsigned long)+0x2a>
 8014000:	4825      	ldr	r0, [pc, #148]	@ (8014098 <Hardware::SetFrequency(unsigned long)+0xb4>)
 8014002:	f000 fa9f 	bl	8014544 <console_error>
 8014006:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 801400a:	61e2      	str	r2, [r4, #28]
 801400c:	bd38      	pop	{r3, r4, r5, pc}
 801400e:	4a23      	ldr	r2, [pc, #140]	@ (801409c <Hardware::SetFrequency(unsigned long)+0xb8>)
 8014010:	6810      	ldr	r0, [r2, #0]
 8014012:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 8014016:	1c55      	adds	r5, r2, #1
 8014018:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 801401c:	4408      	add	r0, r1
 801401e:	1c5d      	adds	r5, r3, #1
 8014020:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8014024:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8014028:	e9c3 0108 	strd	r0, r1, [r3, #32]
 801402c:	491c      	ldr	r1, [pc, #112]	@ (80140a0 <Hardware::SetFrequency(unsigned long)+0xbc>)
 801402e:	629a      	str	r2, [r3, #40]	@ 0x28
 8014030:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8014032:	e7ea      	b.n	801400a <Hardware::SetFrequency(unsigned long)+0x26>
 8014034:	2a08      	cmp	r2, #8
 8014036:	d808      	bhi.n	801404a <Hardware::SetFrequency(unsigned long)+0x66>
 8014038:	2a08      	cmp	r2, #8
 801403a:	d808      	bhi.n	801404e <Hardware::SetFrequency(unsigned long)+0x6a>
 801403c:	e8df f002 	tbb	[pc, r2]
 8014040:	1c07150c 	cfstr32ne	mvfx1, [r7], {12}
 8014044:	07071f07 	streq	r1, [r7, -r7, lsl #30]
 8014048:	2aff0021 	bcs	7fd40d4 <__stack_size+0x7fcc0d4>
 801404c:	d01b      	beq.n	8014086 <Hardware::SetFrequency(unsigned long)+0xa2>
 801404e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8014052:	fbb3 f2f2 	udiv	r2, r3, r2
 8014056:	e00a      	b.n	801406e <Hardware::SetFrequency(unsigned long)+0x8a>
 8014058:	f100 011c 	add.w	r1, r0, #28
 801405c:	f7ff ff98 	bl	8013f90 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 8014060:	4b10      	ldr	r3, [pc, #64]	@ (80140a4 <Hardware::SetFrequency(unsigned long)+0xc0>)
 8014062:	2210      	movs	r2, #16
 8014064:	f8c3 2c28 	str.w	r2, [r3, #3112]	@ 0xc28
 8014068:	e7d0      	b.n	801400c <Hardware::SetFrequency(unsigned long)+0x28>
 801406a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 801406e:	4620      	mov	r0, r4
 8014070:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014074:	f7ff bf72 	b.w	8013f5c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 8014078:	f240 124d 	movw	r2, #333	@ 0x14d
 801407c:	e7f7      	b.n	801406e <Hardware::SetFrequency(unsigned long)+0x8a>
 801407e:	22c8      	movs	r2, #200	@ 0xc8
 8014080:	e7f5      	b.n	801406e <Hardware::SetFrequency(unsigned long)+0x8a>
 8014082:	227d      	movs	r2, #125	@ 0x7d
 8014084:	e7f3      	b.n	801406e <Hardware::SetFrequency(unsigned long)+0x8a>
 8014086:	f100 011c 	add.w	r1, r0, #28
 801408a:	f7ff ff81 	bl	8013f90 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 801408e:	4b05      	ldr	r3, [pc, #20]	@ (80140a4 <Hardware::SetFrequency(unsigned long)+0xc0>)
 8014090:	2210      	movs	r2, #16
 8014092:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 8014096:	e7b9      	b.n	801400c <Hardware::SetFrequency(unsigned long)+0x28>
 8014098:	080179b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, ip, sp, lr}
 801409c:	20009ae8 	andcs	r9, r0, r8, ror #21
 80140a0:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}
 80140a4:	40020000 	andmi	r0, r2, r0

080140a8 <Hardware::SetMode(hardware::ledblink::Mode)>:
 80140a8:	7e03      	ldrb	r3, [r0, #24]
 80140aa:	b510      	push	{r4, lr}
 80140ac:	4604      	mov	r4, r0
 80140ae:	b993      	cbnz	r3, 80140d6 <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80140b0:	6943      	ldr	r3, [r0, #20]
 80140b2:	428b      	cmp	r3, r1
 80140b4:	d00f      	beq.n	80140d6 <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80140b6:	6141      	str	r1, [r0, #20]
 80140b8:	3901      	subs	r1, #1
 80140ba:	2904      	cmp	r1, #4
 80140bc:	d804      	bhi.n	80140c8 <Hardware::SetMode(hardware::ledblink::Mode)+0x20>
 80140be:	e8df f001 	tbb	[pc, r1]
 80140c2:	110f0d0b 	tstne	pc, fp, lsl #26
 80140c6:	21000013 	tstcs	r0, r3, lsl r0
 80140ca:	4620      	mov	r0, r4
 80140cc:	f7ff ff8a 	bl	8013fe4 <Hardware::SetFrequency(unsigned long)>
 80140d0:	6960      	ldr	r0, [r4, #20]
 80140d2:	f7f5 faf3 	bl	80096bc <hardware::ledblink::display(unsigned long)>
 80140d6:	bd10      	pop	{r4, pc}
 80140d8:	21ff      	movs	r1, #255	@ 0xff
 80140da:	e7f6      	b.n	80140ca <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 80140dc:	2101      	movs	r1, #1
 80140de:	e7f4      	b.n	80140ca <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 80140e0:	2103      	movs	r1, #3
 80140e2:	e7f2      	b.n	80140ca <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 80140e4:	2105      	movs	r1, #5
 80140e6:	e7f0      	b.n	80140ca <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 80140e8:	2108      	movs	r1, #8
 80140ea:	e7ee      	b.n	80140ca <Hardware::SetMode(hardware::ledblink::Mode)+0x22>

080140ec <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
 80140ec:	b538      	push	{r3, r4, r5, lr}
 80140ee:	4604      	mov	r4, r0
 80140f0:	2300      	movs	r3, #0
 80140f2:	4615      	mov	r5, r2
 80140f4:	7603      	strb	r3, [r0, #24]
 80140f6:	f7ff ffd7 	bl	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 80140fa:	7625      	strb	r5, [r4, #24]
 80140fc:	bd38      	pop	{r3, r4, r5, pc}

080140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>:
 80140fe:	b530      	push	{r4, r5, lr}
 8014100:	4603      	mov	r3, r0
 8014102:	4401      	add	r1, r0
 8014104:	250a      	movs	r5, #10
 8014106:	2000      	movs	r0, #0
 8014108:	f813 2b01 	ldrb.w	r2, [r3], #1
 801410c:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8014110:	2c09      	cmp	r4, #9
 8014112:	d805      	bhi.n	8014120 <remoteconfig::timedate::atoi(char const*, unsigned long)+0x22>
 8014114:	fb05 2000 	mla	r0, r5, r0, r2
 8014118:	428b      	cmp	r3, r1
 801411a:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 801411e:	d1f3      	bne.n	8014108 <remoteconfig::timedate::atoi(char const*, unsigned long)+0xa>
 8014120:	bd30      	pop	{r4, r5, pc}
	...

08014124 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
 8014124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014128:	b08a      	sub	sp, #40	@ 0x28
 801412a:	4605      	mov	r5, r0
 801412c:	460e      	mov	r6, r1
 801412e:	a808      	add	r0, sp, #32
 8014130:	2100      	movs	r1, #0
 8014132:	f002 fd05 	bl	8016b40 <gettimeofday>
 8014136:	2800      	cmp	r0, #0
 8014138:	db52      	blt.n	80141e0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xbc>
 801413a:	a808      	add	r0, sp, #32
 801413c:	f002 fc88 	bl	8016a50 <localtime>
 8014140:	4b28      	ldr	r3, [pc, #160]	@ (80141e4 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc0>)
 8014142:	4604      	mov	r4, r0
 8014144:	6919      	ldr	r1, [r3, #16]
 8014146:	6827      	ldr	r7, [r4, #0]
 8014148:	6963      	ldr	r3, [r4, #20]
 801414a:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 801414e:	fb91 fcf2 	sdiv	ip, r1, r2
 8014152:	fa4f f08c 	sxtb.w	r0, ip
 8014156:	2800      	cmp	r0, #0
 8014158:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 801415c:	dd21      	ble.n	80141a2 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x7e>
 801415e:	f5a2 52e1 	sub.w	r2, r2, #7200	@ 0x1c20
 8014162:	fb02 1100 	mla	r1, r2, r0, r1
 8014166:	fbb1 f1fe 	udiv	r1, r1, lr
 801416a:	b2ca      	uxtb	r2, r1
 801416c:	e9d4 8e02 	ldrd	r8, lr, [r4, #8]
 8014170:	6921      	ldr	r1, [r4, #16]
 8014172:	6864      	ldr	r4, [r4, #4]
 8014174:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 80141f4 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xd0>
 8014178:	9403      	str	r4, [sp, #12]
 801417a:	4c1b      	ldr	r4, [pc, #108]	@ (80141e8 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>)
 801417c:	3101      	adds	r1, #1
 801417e:	2800      	cmp	r0, #0
 8014180:	bfd8      	it	le
 8014182:	4664      	movle	r4, ip
 8014184:	e9cd 0206 	strd	r0, r2, [sp, #24]
 8014188:	9100      	str	r1, [sp, #0]
 801418a:	e9cd 7404 	strd	r7, r4, [sp, #16]
 801418e:	e9cd e801 	strd	lr, r8, [sp, #4]
 8014192:	4a16      	ldr	r2, [pc, #88]	@ (80141ec <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc8>)
 8014194:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8014198:	4631      	mov	r1, r6
 801419a:	4628      	mov	r0, r5
 801419c:	f002 fb20 	bl	80167e0 <snprintf>
 80141a0:	e01b      	b.n	80141da <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 80141a2:	4342      	muls	r2, r0
 80141a4:	1a52      	subs	r2, r2, r1
 80141a6:	fbb2 f2fe 	udiv	r2, r2, lr
 80141aa:	b2d2      	uxtb	r2, r2
 80141ac:	ea42 0c0c 	orr.w	ip, r2, ip
 80141b0:	fa5f f18c 	uxtb.w	r1, ip
 80141b4:	2900      	cmp	r1, #0
 80141b6:	d1d9      	bne.n	801416c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x48>
 80141b8:	9704      	str	r7, [sp, #16]
 80141ba:	6862      	ldr	r2, [r4, #4]
 80141bc:	9203      	str	r2, [sp, #12]
 80141be:	68a2      	ldr	r2, [r4, #8]
 80141c0:	9202      	str	r2, [sp, #8]
 80141c2:	68e2      	ldr	r2, [r4, #12]
 80141c4:	9201      	str	r2, [sp, #4]
 80141c6:	6922      	ldr	r2, [r4, #16]
 80141c8:	3201      	adds	r2, #1
 80141ca:	9200      	str	r2, [sp, #0]
 80141cc:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 80141d0:	4a07      	ldr	r2, [pc, #28]	@ (80141f0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xcc>)
 80141d2:	4631      	mov	r1, r6
 80141d4:	4628      	mov	r0, r5
 80141d6:	f002 fb03 	bl	80167e0 <snprintf>
 80141da:	b00a      	add	sp, #40	@ 0x28
 80141dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80141e0:	2000      	movs	r0, #0
 80141e2:	e7fa      	b.n	80141da <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 80141e4:	40024000 	andmi	r4, r2, r0
 80141e8:	08017b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, sp, lr}
 80141ec:	08017bfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 80141f0:	08017bd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 80141f4:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}

080141f8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
 80141f8:	b570      	push	{r4, r5, r6, lr}
 80141fa:	291a      	cmp	r1, #26
 80141fc:	b08c      	sub	sp, #48	@ 0x30
 80141fe:	4606      	mov	r6, r0
 8014200:	460c      	mov	r4, r1
 8014202:	d001      	beq.n	8014208 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10>
 8014204:	291f      	cmp	r1, #31
 8014206:	d174      	bne.n	80142f2 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfa>
 8014208:	2104      	movs	r1, #4
 801420a:	1d70      	adds	r0, r6, #5
 801420c:	f7ff ff77 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014210:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 8014214:	9008      	str	r0, [sp, #32]
 8014216:	2102      	movs	r1, #2
 8014218:	f106 000a 	add.w	r0, r6, #10
 801421c:	f7ff ff6f 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014220:	3801      	subs	r0, #1
 8014222:	9007      	str	r0, [sp, #28]
 8014224:	2102      	movs	r1, #2
 8014226:	f106 000d 	add.w	r0, r6, #13
 801422a:	f7ff ff68 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801422e:	2102      	movs	r1, #2
 8014230:	9006      	str	r0, [sp, #24]
 8014232:	f106 0010 	add.w	r0, r6, #16
 8014236:	f7ff ff62 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801423a:	2102      	movs	r1, #2
 801423c:	9005      	str	r0, [sp, #20]
 801423e:	f106 0013 	add.w	r0, r6, #19
 8014242:	f7ff ff5c 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014246:	2102      	movs	r1, #2
 8014248:	9004      	str	r0, [sp, #16]
 801424a:	f106 0016 	add.w	r0, r6, #22
 801424e:	f7ff ff56 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014252:	9003      	str	r0, [sp, #12]
 8014254:	a803      	add	r0, sp, #12
 8014256:	f002 fc0b 	bl	8016a70 <mktime>
 801425a:	2300      	movs	r3, #0
 801425c:	2c1a      	cmp	r4, #26
 801425e:	4605      	mov	r5, r0
 8014260:	9001      	str	r0, [sp, #4]
 8014262:	9302      	str	r3, [sp, #8]
 8014264:	d041      	beq.n	80142ea <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xf2>
 8014266:	7e33      	ldrb	r3, [r6, #24]
 8014268:	2102      	movs	r1, #2
 801426a:	2b2d      	cmp	r3, #45	@ 0x2d
 801426c:	f106 0019 	add.w	r0, r6, #25
 8014270:	bf14      	ite	ne
 8014272:	2401      	movne	r4, #1
 8014274:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
 8014278:	f7ff ff41 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801427c:	4344      	muls	r4, r0
 801427e:	f004 04ff 	and.w	r4, r4, #255	@ 0xff
 8014282:	f104 030c 	add.w	r3, r4, #12
 8014286:	b2db      	uxtb	r3, r3
 8014288:	2b1a      	cmp	r3, #26
 801428a:	d82a      	bhi.n	80142e2 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 801428c:	2102      	movs	r1, #2
 801428e:	f106 001c 	add.w	r0, r6, #28
 8014292:	f7ff ff34 	bl	80140fe <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014296:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
 801429a:	b264      	sxtb	r4, r4
 801429c:	d12b      	bne.n	80142f6 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfe>
 801429e:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80142a2:	4363      	muls	r3, r4
 80142a4:	4a15      	ldr	r2, [pc, #84]	@ (80142fc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 80142a6:	6911      	ldr	r1, [r2, #16]
 80142a8:	4299      	cmp	r1, r3
 80142aa:	bf1f      	itttt	ne
 80142ac:	6113      	strne	r3, [r2, #16]
 80142ae:	4b14      	ldrne	r3, [pc, #80]	@ (8014300 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x108>)
 80142b0:	2201      	movne	r2, #1
 80142b2:	601a      	strne	r2, [r3, #0]
 80142b4:	e015      	b.n	80142e2 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80142b6:	f993 1000 	ldrsb.w	r1, [r3]
 80142ba:	42a1      	cmp	r1, r4
 80142bc:	d10e      	bne.n	80142dc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 80142be:	7859      	ldrb	r1, [r3, #1]
 80142c0:	4281      	cmp	r1, r0
 80142c2:	d10b      	bne.n	80142dc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 80142c4:	2c00      	cmp	r4, #0
 80142c6:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80142ca:	fb04 f303 	mul.w	r3, r4, r3
 80142ce:	bfcc      	ite	gt
 80142d0:	223c      	movgt	r2, #60	@ 0x3c
 80142d2:	f06f 023b 	mvnle.w	r2, #59	@ 0x3b
 80142d6:	fb02 3300 	mla	r3, r2, r0, r3
 80142da:	e7e3      	b.n	80142a4 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xac>
 80142dc:	3302      	adds	r3, #2
 80142de:	3a01      	subs	r2, #1
 80142e0:	d1e9      	bne.n	80142b6 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xbe>
 80142e2:	4b06      	ldr	r3, [pc, #24]	@ (80142fc <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 80142e4:	691b      	ldr	r3, [r3, #16]
 80142e6:	1aed      	subs	r5, r5, r3
 80142e8:	9501      	str	r5, [sp, #4]
 80142ea:	2100      	movs	r1, #0
 80142ec:	a801      	add	r0, sp, #4
 80142ee:	f002 fc59 	bl	8016ba4 <settimeofday>
 80142f2:	b00c      	add	sp, #48	@ 0x30
 80142f4:	bd70      	pop	{r4, r5, r6, pc}
 80142f6:	4b03      	ldr	r3, [pc, #12]	@ (8014304 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10c>)
 80142f8:	220c      	movs	r2, #12
 80142fa:	e7f0      	b.n	80142de <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe6>
 80142fc:	40024000 	andmi	r4, r2, r0
 8014300:	20002144 	andcs	r2, r0, r4, asr #2
 8014304:	0801a858 	stmdaeq	r1, {r3, r4, r6, fp, sp, pc}

08014308 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 8014308:	2900      	cmp	r1, #0
 801430a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801430c:	db10      	blt.n	8014330 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 801430e:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 8014312:	2300      	movs	r3, #0
 8014314:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 8014318:	42ab      	cmp	r3, r5
 801431a:	d009      	beq.n	8014330 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 801431c:	011c      	lsls	r4, r3, #4
 801431e:	5937      	ldr	r7, [r6, r4]
 8014320:	42b9      	cmp	r1, r7
 8014322:	d106      	bne.n	8014332 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 8014324:	4b04      	ldr	r3, [pc, #16]	@ (8014338 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 8014326:	681b      	ldr	r3, [r3, #0]
 8014328:	4420      	add	r0, r4
 801432a:	4413      	add	r3, r2
 801432c:	e9c0 3208 	strd	r3, r2, [r0, #32]
 8014330:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014332:	3301      	adds	r3, #1
 8014334:	e7f0      	b.n	8014318 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 8014336:	bf00      	nop
 8014338:	20009ae8 	andcs	r9, r0, r8, ror #21

0801433c <Hardware::Hardware()>:
 801433c:	b570      	push	{r4, r5, r6, lr}
 801433e:	2306      	movs	r3, #6
 8014340:	6143      	str	r3, [r0, #20]
 8014342:	2500      	movs	r5, #0
 8014344:	4b5c      	ldr	r3, [pc, #368]	@ (80144b8 <Hardware::Hardware()+0x17c>)
 8014346:	7405      	strb	r5, [r0, #16]
 8014348:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 801434c:	b090      	sub	sp, #64	@ 0x40
 801434e:	e9c0 5528 	strd	r5, r5, [r0, #160]	@ 0xa0
 8014352:	4604      	mov	r4, r0
 8014354:	7605      	strb	r5, [r0, #24]
 8014356:	61c6      	str	r6, [r0, #28]
 8014358:	6018      	str	r0, [r3, #0]
 801435a:	f7f4 f91d 	bl	8008598 <console_init()>
 801435e:	f001 facb 	bl	80158f8 <timer6_config()>
 8014362:	f001 fb2f 	bl	80159c4 <systick_config>
 8014366:	f001 fb01 	bl	801596c <udelay_init()>
 801436a:	4620      	mov	r0, r4
 801436c:	f002 fbcc 	bl	8016b08 <hal::uuid_init(unsigned char*)>
 8014370:	f001 fb4e 	bl	8015a10 <gd32_adc_init()>
 8014374:	f001 fbac 	bl	8015ad0 <gd32_i2c_begin>
 8014378:	f241 0004 	movw	r0, #4100	@ 0x1004
 801437c:	f000 fdf6 	bl	8014f6c <rcu_periph_clock_enable>
 8014380:	484e      	ldr	r0, [pc, #312]	@ (80144bc <Hardware::Hardware()+0x180>)
 8014382:	f000 feaf 	bl	80150e4 <timer_deinit>
 8014386:	a803      	add	r0, sp, #12
 8014388:	f000 ff52 	bl	8015230 <timer_struct_para_init>
 801438c:	23ef      	movs	r3, #239	@ 0xef
 801438e:	a903      	add	r1, sp, #12
 8014390:	484a      	ldr	r0, [pc, #296]	@ (80144bc <Hardware::Hardware()+0x180>)
 8014392:	f8ad 300c 	strh.w	r3, [sp, #12]
 8014396:	9605      	str	r6, [sp, #20]
 8014398:	f000 ff52 	bl	8015240 <timer_init>
 801439c:	4847      	ldr	r0, [pc, #284]	@ (80144bc <Hardware::Hardware()+0x180>)
 801439e:	f000 ff83 	bl	80152a8 <timer_enable>
 80143a2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 80143a6:	f000 fe0d 	bl	8014fc4 <rcu_timer_clock_prescaler_config>
 80143aa:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 80143ae:	f000 fddd 	bl	8014f6c <rcu_periph_clock_enable>
 80143b2:	f241 001c 	movw	r0, #4124	@ 0x101c
 80143b6:	f000 fdd9 	bl	8014f6c <rcu_periph_clock_enable>
 80143ba:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80143be:	f000 fdc1 	bl	8014f44 <pmu_backup_ldo_config>
 80143c2:	f640 4012 	movw	r0, #3090	@ 0xc12
 80143c6:	f000 fdd1 	bl	8014f6c <rcu_periph_clock_enable>
 80143ca:	f000 fdc7 	bl	8014f5c <pmu_backup_write_enable>
 80143ce:	4629      	mov	r1, r5
 80143d0:	2001      	movs	r0, #1
 80143d2:	f001 f895 	bl	8015500 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 80143d6:	4a3a      	ldr	r2, [pc, #232]	@ (80144c0 <Hardware::Hardware()+0x184>)
 80143d8:	4b3a      	ldr	r3, [pc, #232]	@ (80144c4 <Hardware::Hardware()+0x188>)
 80143da:	1a9b      	subs	r3, r3, r2
 80143dc:	3b01      	subs	r3, #1
 80143de:	d245      	bcs.n	801446c <Hardware::Hardware()+0x130>
 80143e0:	4a39      	ldr	r2, [pc, #228]	@ (80144c8 <Hardware::Hardware()+0x18c>)
 80143e2:	4b3a      	ldr	r3, [pc, #232]	@ (80144cc <Hardware::Hardware()+0x190>)
 80143e4:	2100      	movs	r1, #0
 80143e6:	1a9b      	subs	r3, r3, r2
 80143e8:	3b01      	subs	r3, #1
 80143ea:	d242      	bcs.n	8014472 <Hardware::Hardware()+0x136>
 80143ec:	4a38      	ldr	r2, [pc, #224]	@ (80144d0 <Hardware::Hardware()+0x194>)
 80143ee:	4b39      	ldr	r3, [pc, #228]	@ (80144d4 <Hardware::Hardware()+0x198>)
 80143f0:	2100      	movs	r1, #0
 80143f2:	1a9b      	subs	r3, r3, r2
 80143f4:	3b01      	subs	r3, #1
 80143f6:	d23f      	bcs.n	8014478 <Hardware::Hardware()+0x13c>
 80143f8:	ab07      	add	r3, sp, #28
 80143fa:	2524      	movs	r5, #36	@ 0x24
 80143fc:	4618      	mov	r0, r3
 80143fe:	2200      	movs	r2, #0
 8014400:	3d01      	subs	r5, #1
 8014402:	f803 2b01 	strb.w	r2, [r3], #1
 8014406:	d1fb      	bne.n	8014400 <Hardware::Hardware()+0xc4>
 8014408:	2217      	movs	r2, #23
 801440a:	2308      	movs	r3, #8
 801440c:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 8014410:	237c      	movs	r3, #124	@ 0x7c
 8014412:	930c      	str	r3, [sp, #48]	@ 0x30
 8014414:	f002 fb2c 	bl	8016a70 <mktime>
 8014418:	4629      	mov	r1, r5
 801441a:	e9cd 0501 	strd	r0, r5, [sp, #4]
 801441e:	a801      	add	r0, sp, #4
 8014420:	f002 fbc0 	bl	8016ba4 <settimeofday>
 8014424:	f640 4003 	movw	r0, #3075	@ 0xc03
 8014428:	f000 fda0 	bl	8014f6c <rcu_periph_clock_enable>
 801442c:	482a      	ldr	r0, [pc, #168]	@ (80144d8 <Hardware::Hardware()+0x19c>)
 801442e:	2310      	movs	r3, #16
 8014430:	462a      	mov	r2, r5
 8014432:	2101      	movs	r1, #1
 8014434:	f000 fd18 	bl	8014e68 <gpio_mode_set>
 8014438:	2310      	movs	r3, #16
 801443a:	2202      	movs	r2, #2
 801443c:	4629      	mov	r1, r5
 801443e:	4826      	ldr	r0, [pc, #152]	@ (80144d8 <Hardware::Hardware()+0x19c>)
 8014440:	f000 fd34 	bl	8014eac <gpio_output_options_set>
 8014444:	4b25      	ldr	r3, [pc, #148]	@ (80144dc <Hardware::Hardware()+0x1a0>)
 8014446:	2210      	movs	r2, #16
 8014448:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 801444c:	69e1      	ldr	r1, [r4, #28]
 801444e:	2900      	cmp	r1, #0
 8014450:	da2b      	bge.n	80144aa <Hardware::Hardware()+0x16e>
 8014452:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8014456:	2b07      	cmp	r3, #7
 8014458:	d911      	bls.n	801447e <Hardware::Hardware()+0x142>
 801445a:	4821      	ldr	r0, [pc, #132]	@ (80144e0 <Hardware::Hardware()+0x1a4>)
 801445c:	f000 f872 	bl	8014544 <console_error>
 8014460:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8014464:	61e2      	str	r2, [r4, #28]
 8014466:	4620      	mov	r0, r4
 8014468:	b010      	add	sp, #64	@ 0x40
 801446a:	bd70      	pop	{r4, r5, r6, pc}
 801446c:	f802 5b01 	strb.w	r5, [r2], #1
 8014470:	e7b4      	b.n	80143dc <Hardware::Hardware()+0xa0>
 8014472:	f802 1b01 	strb.w	r1, [r2], #1
 8014476:	e7b7      	b.n	80143e8 <Hardware::Hardware()+0xac>
 8014478:	f802 1b01 	strb.w	r1, [r2], #1
 801447c:	e7ba      	b.n	80143f4 <Hardware::Hardware()+0xb8>
 801447e:	4a19      	ldr	r2, [pc, #100]	@ (80144e4 <Hardware::Hardware()+0x1a8>)
 8014480:	6811      	ldr	r1, [r2, #0]
 8014482:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 8014486:	1c50      	adds	r0, r2, #1
 8014488:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
 801448c:	1c58      	adds	r0, r3, #1
 801448e:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8014492:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8014496:	f8c4 00a0 	str.w	r0, [r4, #160]	@ 0xa0
 801449a:	6219      	str	r1, [r3, #32]
 801449c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80144a0:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80144a4:	4910      	ldr	r1, [pc, #64]	@ (80144e8 <Hardware::Hardware()+0x1ac>)
 80144a6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80144a8:	e7dc      	b.n	8014464 <Hardware::Hardware()+0x128>
 80144aa:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80144ae:	4620      	mov	r0, r4
 80144b0:	f7ff ff2a 	bl	8014308 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80144b4:	e7d7      	b.n	8014466 <Hardware::Hardware()+0x12a>
 80144b6:	bf00      	nop
 80144b8:	20002238 	andcs	r2, r0, r8, lsr r2
 80144bc:	40001000 	andmi	r1, r0, r0
 80144c0:	2001c000 	andcs	ip, r1, r0
 80144c4:	2001c428 	andcs	ip, r1, r8, lsr #8
 80144c8:	10008000 	andne	r8, r0, r0
 80144cc:	1000cc90 	mulne	r0, r0, ip
 80144d0:	20020000 	andcs	r0, r2, r0
 80144d4:	20020000 	andcs	r0, r2, r0
 80144d8:	40020c00 	andmi	r0, r2, r0, lsl #24
 80144dc:	40020000 	andmi	r0, r2, r0
 80144e0:	080179b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, fp, ip, sp, lr}
 80144e4:	20009ae8 	andcs	r9, r0, r8, ror #21
 80144e8:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}

080144ec <Hardware::Reboot()>:
 80144ec:	4604      	mov	r4, r0
 80144ee:	b508      	push	{r3, lr}
 80144f0:	2500      	movs	r5, #0
 80144f2:	480f      	ldr	r0, [pc, #60]	@ (8014530 <Hardware::Reboot()+0x44>)
 80144f4:	f002 f9a1 	bl	801683a <puts>
 80144f8:	2104      	movs	r1, #4
 80144fa:	7425      	strb	r5, [r4, #16]
 80144fc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8014500:	f000 fc88 	bl	8014e14 <fwdgt_config>
 8014504:	4620      	mov	r0, r4
 8014506:	f7f5 fa3f 	bl	8009988 <Hardware::RebootHandler()>
 801450a:	f7fc fde3 	bl	80110d4 <net::net_shutdown()>
 801450e:	4629      	mov	r1, r5
 8014510:	4620      	mov	r0, r4
 8014512:	f7ff fdc9 	bl	80140a8 <Hardware::SetMode(hardware::ledblink::Mode)>
 8014516:	f3bf 8f4f 	dsb	sy
 801451a:	4906      	ldr	r1, [pc, #24]	@ (8014534 <Hardware::Reboot()+0x48>)
 801451c:	4b06      	ldr	r3, [pc, #24]	@ (8014538 <Hardware::Reboot()+0x4c>)
 801451e:	68ca      	ldr	r2, [r1, #12]
 8014520:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8014524:	4313      	orrs	r3, r2
 8014526:	60cb      	str	r3, [r1, #12]
 8014528:	f3bf 8f4f 	dsb	sy
 801452c:	bf00      	nop
 801452e:	e7fd      	b.n	801452c <Hardware::Reboot()+0x40>
 8014530:	080173b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, ip, sp, lr}
 8014534:	e000ed00 	and	lr, r0, r0, lsl #26
 8014538:	05fa0004 	ldrbeq	r0, [sl, #4]!

0801453c <console_putc>:
 801453c:	f001 bc3e 	b.w	8015dbc <uart0_putc>

08014540 <console_puts>:
 8014540:	f001 bc56 	b.w	8015df0 <uart0_puts>

08014544 <console_error>:
 8014544:	b510      	push	{r4, lr}
 8014546:	4604      	mov	r4, r0
 8014548:	4805      	ldr	r0, [pc, #20]	@ (8014560 <console_error+0x1c>)
 801454a:	f001 fc51 	bl	8015df0 <uart0_puts>
 801454e:	4620      	mov	r0, r4
 8014550:	f001 fc4e 	bl	8015df0 <uart0_puts>
 8014554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014558:	4802      	ldr	r0, [pc, #8]	@ (8014564 <console_error+0x20>)
 801455a:	f001 bc49 	b.w	8015df0 <uart0_puts>
 801455e:	bf00      	nop
 8014560:	08017c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, sp, lr}
 8014564:	08017c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp, lr}

08014568 <console_set_fg_color>:
 8014568:	2807      	cmp	r0, #7
 801456a:	d810      	bhi.n	801458e <console_set_fg_color+0x26>
 801456c:	e8df f000 	tbb	[pc, r0]
 8014570:	0b090704 	bleq	8256188 <_sidata+0x23b44c>
 8014574:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	@ 8014540 <console_puts>
 8014578:	4806      	ldr	r0, [pc, #24]	@ (8014594 <console_set_fg_color+0x2c>)
 801457a:	f001 bc39 	b.w	8015df0 <uart0_puts>
 801457e:	4806      	ldr	r0, [pc, #24]	@ (8014598 <console_set_fg_color+0x30>)
 8014580:	e7fb      	b.n	801457a <console_set_fg_color+0x12>
 8014582:	4806      	ldr	r0, [pc, #24]	@ (801459c <console_set_fg_color+0x34>)
 8014584:	e7f9      	b.n	801457a <console_set_fg_color+0x12>
 8014586:	4806      	ldr	r0, [pc, #24]	@ (80145a0 <console_set_fg_color+0x38>)
 8014588:	e7f7      	b.n	801457a <console_set_fg_color+0x12>
 801458a:	4806      	ldr	r0, [pc, #24]	@ (80145a4 <console_set_fg_color+0x3c>)
 801458c:	e7f5      	b.n	801457a <console_set_fg_color+0x12>
 801458e:	4806      	ldr	r0, [pc, #24]	@ (80145a8 <console_set_fg_color+0x40>)
 8014590:	e7f3      	b.n	801457a <console_set_fg_color+0x12>
 8014592:	bf00      	nop
 8014594:	08017c3c 	stmdaeq	r1, {r2, r3, r4, r5, sl, fp, ip, sp, lr}
 8014598:	08017c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, sp, lr}
 801459c:	08017c42 	stmdaeq	r1, {r1, r6, sl, fp, ip, sp, lr}
 80145a0:	08017c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, sp, lr}
 80145a4:	08017c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp, lr}
 80145a8:	08017c4e 	stmdaeq	r1, {r1, r2, r3, r6, sl, fp, ip, sp, lr}

080145ac <console_status>:
 80145ac:	b510      	push	{r4, lr}
 80145ae:	b280      	uxth	r0, r0
 80145b0:	460c      	mov	r4, r1
 80145b2:	f7ff ffd9 	bl	8014568 <console_set_fg_color>
 80145b6:	4807      	ldr	r0, [pc, #28]	@ (80145d4 <console_status+0x28>)
 80145b8:	f001 fc1a 	bl	8015df0 <uart0_puts>
 80145bc:	4620      	mov	r0, r4
 80145be:	f001 fc17 	bl	8015df0 <uart0_puts>
 80145c2:	200a      	movs	r0, #10
 80145c4:	f001 fbfa 	bl	8015dbc <uart0_putc>
 80145c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80145cc:	4802      	ldr	r0, [pc, #8]	@ (80145d8 <console_status+0x2c>)
 80145ce:	f001 bc0f 	b.w	8015df0 <uart0_puts>
 80145d2:	bf00      	nop
 80145d4:	08017c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, ip, sp, lr}
 80145d8:	08017c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, ip, sp, lr}

080145dc <stack_debug_init>:
 80145dc:	4b04      	ldr	r3, [pc, #16]	@ (80145f0 <stack_debug_init+0x14>)
 80145de:	4a05      	ldr	r2, [pc, #20]	@ (80145f4 <stack_debug_init+0x18>)
 80145e0:	4905      	ldr	r1, [pc, #20]	@ (80145f8 <stack_debug_init+0x1c>)
 80145e2:	4293      	cmp	r3, r2
 80145e4:	d300      	bcc.n	80145e8 <stack_debug_init+0xc>
 80145e6:	4770      	bx	lr
 80145e8:	f843 1b04 	str.w	r1, [r3], #4
 80145ec:	e7f9      	b.n	80145e2 <stack_debug_init+0x6>
 80145ee:	bf00      	nop
 80145f0:	10000000 	andne	r0, r0, r0
 80145f4:	10008000 	andne	r8, r0, r0
 80145f8:	abcdabcd 	blge	737f534 <__stack_size+0x7377534>

080145fc <stack_debug_print()>:
 80145fc:	b570      	push	{r4, r5, r6, lr}
 80145fe:	4d18      	ldr	r5, [pc, #96]	@ (8014660 <stack_debug_print()+0x64>)
 8014600:	4c18      	ldr	r4, [pc, #96]	@ (8014664 <stack_debug_print()+0x68>)
 8014602:	4a19      	ldr	r2, [pc, #100]	@ (8014668 <stack_debug_print()+0x6c>)
 8014604:	4629      	mov	r1, r5
 8014606:	42a5      	cmp	r5, r4
 8014608:	d202      	bcs.n	8014610 <stack_debug_print()+0x14>
 801460a:	6828      	ldr	r0, [r5, #0]
 801460c:	4290      	cmp	r0, r2
 801460e:	d005      	beq.n	801461c <stack_debug_print()+0x20>
 8014610:	4a16      	ldr	r2, [pc, #88]	@ (801466c <stack_debug_print()+0x70>)
 8014612:	6810      	ldr	r0, [r2, #0]
 8014614:	1b66      	subs	r6, r4, r5
 8014616:	42b0      	cmp	r0, r6
 8014618:	d102      	bne.n	8014620 <stack_debug_print()+0x24>
 801461a:	bd70      	pop	{r4, r5, r6, pc}
 801461c:	3504      	adds	r5, #4
 801461e:	e7f2      	b.n	8014606 <stack_debug_print()+0xa>
 8014620:	1a64      	subs	r4, r4, r1
 8014622:	1a6d      	subs	r5, r5, r1
 8014624:	2319      	movs	r3, #25
 8014626:	10a4      	asrs	r4, r4, #2
 8014628:	436b      	muls	r3, r5
 801462a:	6016      	str	r6, [r2, #0]
 801462c:	fb93 f3f4 	sdiv	r3, r3, r4
 8014630:	b983      	cbnz	r3, 8014654 <stack_debug_print()+0x58>
 8014632:	480f      	ldr	r0, [pc, #60]	@ (8014670 <stack_debug_print()+0x74>)
 8014634:	f002 f8ac 	bl	8016790 <printf>
 8014638:	1e21      	subs	r1, r4, #0
 801463a:	bfb8      	it	lt
 801463c:	31ff      	addlt	r1, #255	@ 0xff
 801463e:	462b      	mov	r3, r5
 8014640:	4632      	mov	r2, r6
 8014642:	480c      	ldr	r0, [pc, #48]	@ (8014674 <stack_debug_print()+0x78>)
 8014644:	1209      	asrs	r1, r1, #8
 8014646:	f002 f8a3 	bl	8016790 <printf>
 801464a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801464e:	480a      	ldr	r0, [pc, #40]	@ (8014678 <stack_debug_print()+0x7c>)
 8014650:	f002 b89e 	b.w	8016790 <printf>
 8014654:	2b01      	cmp	r3, #1
 8014656:	bf0c      	ite	eq
 8014658:	4808      	ldreq	r0, [pc, #32]	@ (801467c <stack_debug_print()+0x80>)
 801465a:	4809      	ldrne	r0, [pc, #36]	@ (8014680 <stack_debug_print()+0x84>)
 801465c:	e7ea      	b.n	8014634 <stack_debug_print()+0x38>
 801465e:	bf00      	nop
 8014660:	10000000 	andne	r0, r0, r0
 8014664:	10008000 	andne	r8, r0, r0
 8014668:	abcdabcd 	blge	737f5a4 <__stack_size+0x73775a4>
 801466c:	20002240 	andcs	r2, r0, r0, asr #4
 8014670:	08017c30 	stmdaeq	r1, {r4, r5, sl, fp, ip, sp, lr}
 8014674:	08017c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, ip, sp, lr}
 8014678:	08017c97 	stmdaeq	r1, {r0, r1, r2, r4, r7, sl, fp, ip, sp, lr}
 801467c:	08017c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, sp, lr}
 8014680:	08017c6c 	stmdaeq	r1, {r2, r3, r5, r6, sl, fp, ip, sp, lr}

08014684 <stack_debug_run()>:
 8014684:	b508      	push	{r3, lr}
 8014686:	2000      	movs	r0, #0
 8014688:	f002 faa2 	bl	8016bd0 <time>
 801468c:	4b04      	ldr	r3, [pc, #16]	@ (80146a0 <stack_debug_run()+0x1c>)
 801468e:	681a      	ldr	r2, [r3, #0]
 8014690:	4282      	cmp	r2, r0
 8014692:	d004      	beq.n	801469e <stack_debug_run()+0x1a>
 8014694:	6018      	str	r0, [r3, #0]
 8014696:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801469a:	f7ff bfaf 	b.w	80145fc <stack_debug_print()>
 801469e:	bd08      	pop	{r3, pc}
 80146a0:	2000223c 	andcs	r2, r0, ip, lsr r2

080146a4 <SystemInit>:
 80146a4:	4a56      	ldr	r2, [pc, #344]	@ (8014800 <SystemInit+0x15c>)
 80146a6:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80146aa:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80146ae:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80146b2:	4b54      	ldr	r3, [pc, #336]	@ (8014804 <SystemInit+0x160>)
 80146b4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80146b8:	f042 0201 	orr.w	r2, r2, #1
 80146bc:	b082      	sub	sp, #8
 80146be:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 80146c2:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80146c6:	0790      	lsls	r0, r2, #30
 80146c8:	d5fb      	bpl.n	80146c2 <SystemInit+0x1e>
 80146ca:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80146ce:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80146d2:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80146d6:	2300      	movs	r3, #0
 80146d8:	9301      	str	r3, [sp, #4]
 80146da:	9b01      	ldr	r3, [sp, #4]
 80146dc:	2b4f      	cmp	r3, #79	@ 0x4f
 80146de:	d93d      	bls.n	801475c <SystemInit+0xb8>
 80146e0:	4b48      	ldr	r3, [pc, #288]	@ (8014804 <SystemInit+0x160>)
 80146e2:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80146e6:	f042 0290 	orr.w	r2, r2, #144	@ 0x90
 80146ea:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80146ee:	2200      	movs	r2, #0
 80146f0:	9201      	str	r2, [sp, #4]
 80146f2:	9a01      	ldr	r2, [sp, #4]
 80146f4:	2a4f      	cmp	r2, #79	@ 0x4f
 80146f6:	d934      	bls.n	8014762 <SystemInit+0xbe>
 80146f8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80146fc:	f022 0203 	bic.w	r2, r2, #3
 8014700:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014704:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014708:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 801470c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8014710:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8014714:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014718:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 801471c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8014720:	2200      	movs	r2, #0
 8014722:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014726:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 801472a:	4937      	ldr	r1, [pc, #220]	@ (8014808 <SystemInit+0x164>)
 801472c:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8014730:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 8014734:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014738:	f042 0201 	orr.w	r2, r2, #1
 801473c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8014740:	4b30      	ldr	r3, [pc, #192]	@ (8014804 <SystemInit+0x160>)
 8014742:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 8014746:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 801474a:	0789      	lsls	r1, r1, #30
 801474c:	d401      	bmi.n	8014752 <SystemInit+0xae>
 801474e:	3a01      	subs	r2, #1
 8014750:	d1f9      	bne.n	8014746 <SystemInit+0xa2>
 8014752:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014756:	0792      	lsls	r2, r2, #30
 8014758:	d406      	bmi.n	8014768 <SystemInit+0xc4>
 801475a:	e7fe      	b.n	801475a <SystemInit+0xb6>
 801475c:	9b01      	ldr	r3, [sp, #4]
 801475e:	3301      	adds	r3, #1
 8014760:	e7ba      	b.n	80146d8 <SystemInit+0x34>
 8014762:	9a01      	ldr	r2, [sp, #4]
 8014764:	3201      	adds	r2, #1
 8014766:	e7c3      	b.n	80146f0 <SystemInit+0x4c>
 8014768:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 801476c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8014770:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 8014774:	4a25      	ldr	r2, [pc, #148]	@ (801480c <SystemInit+0x168>)
 8014776:	6811      	ldr	r1, [r2, #0]
 8014778:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 801477c:	6011      	str	r1, [r2, #0]
 801477e:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8014782:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8014786:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 801478a:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 801478e:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8014792:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8014796:	f441 51a0 	orr.w	r1, r1, #5120	@ 0x1400
 801479a:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 801479e:	491c      	ldr	r1, [pc, #112]	@ (8014810 <SystemInit+0x16c>)
 80147a0:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 80147a4:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 80147a8:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 80147ac:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
 80147b0:	4914      	ldr	r1, [pc, #80]	@ (8014804 <SystemInit+0x160>)
 80147b2:	f8d1 3800 	ldr.w	r3, [r1, #2048]	@ 0x800
 80147b6:	019b      	lsls	r3, r3, #6
 80147b8:	d5fb      	bpl.n	80147b2 <SystemInit+0x10e>
 80147ba:	6813      	ldr	r3, [r2, #0]
 80147bc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80147c0:	6013      	str	r3, [r2, #0]
 80147c2:	4b12      	ldr	r3, [pc, #72]	@ (801480c <SystemInit+0x168>)
 80147c4:	685a      	ldr	r2, [r3, #4]
 80147c6:	03d0      	lsls	r0, r2, #15
 80147c8:	d5fc      	bpl.n	80147c4 <SystemInit+0x120>
 80147ca:	681a      	ldr	r2, [r3, #0]
 80147cc:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80147d0:	601a      	str	r2, [r3, #0]
 80147d2:	685a      	ldr	r2, [r3, #4]
 80147d4:	0391      	lsls	r1, r2, #14
 80147d6:	d5fc      	bpl.n	80147d2 <SystemInit+0x12e>
 80147d8:	4b0a      	ldr	r3, [pc, #40]	@ (8014804 <SystemInit+0x160>)
 80147da:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80147de:	f022 0203 	bic.w	r2, r2, #3
 80147e2:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80147e6:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80147ea:	f042 0202 	orr.w	r2, r2, #2
 80147ee:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80147f2:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80147f6:	0712      	lsls	r2, r2, #28
 80147f8:	d5fb      	bpl.n	80147f2 <SystemInit+0x14e>
 80147fa:	b002      	add	sp, #8
 80147fc:	4770      	bx	lr
 80147fe:	bf00      	nop
 8014800:	e000ed00 	and	lr, r0, r0, lsl #26
 8014804:	40023000 	andmi	r3, r2, r0
 8014808:	24003010 	strcs	r3, [r0], #-16
 801480c:	40007000 	andmi	r7, r0, r0
 8014810:	0a007810 	beq	8032858 <_sidata+0x17b1c>

08014814 <dma_deinit>:
 8014814:	2318      	movs	r3, #24
 8014816:	fb03 0301 	mla	r3, r3, r1, r0
 801481a:	b510      	push	{r4, lr}
 801481c:	691a      	ldr	r2, [r3, #16]
 801481e:	f022 0201 	bic.w	r2, r2, #1
 8014822:	611a      	str	r2, [r3, #16]
 8014824:	2200      	movs	r2, #0
 8014826:	611a      	str	r2, [r3, #16]
 8014828:	2903      	cmp	r1, #3
 801482a:	615a      	str	r2, [r3, #20]
 801482c:	619a      	str	r2, [r3, #24]
 801482e:	61da      	str	r2, [r3, #28]
 8014830:	621a      	str	r2, [r3, #32]
 8014832:	f04f 0221 	mov.w	r2, #33	@ 0x21
 8014836:	625a      	str	r2, [r3, #36]	@ 0x24
 8014838:	d80a      	bhi.n	8014850 <dma_deinit+0x3c>
 801483a:	2406      	movs	r4, #6
 801483c:	084b      	lsrs	r3, r1, #1
 801483e:	4361      	muls	r1, r4
 8014840:	6882      	ldr	r2, [r0, #8]
 8014842:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014846:	233d      	movs	r3, #61	@ 0x3d
 8014848:	408b      	lsls	r3, r1
 801484a:	4313      	orrs	r3, r2
 801484c:	6083      	str	r3, [r0, #8]
 801484e:	bd10      	pop	{r4, pc}
 8014850:	3904      	subs	r1, #4
 8014852:	b2ca      	uxtb	r2, r1
 8014854:	2306      	movs	r3, #6
 8014856:	435a      	muls	r2, r3
 8014858:	f3c1 0140 	ubfx	r1, r1, #1, #1
 801485c:	68c4      	ldr	r4, [r0, #12]
 801485e:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8014862:	233d      	movs	r3, #61	@ 0x3d
 8014864:	4093      	lsls	r3, r2
 8014866:	4323      	orrs	r3, r4
 8014868:	60c3      	str	r3, [r0, #12]
 801486a:	e7f0      	b.n	801484e <dma_deinit+0x3a>

0801486c <dma_single_data_mode_init>:
 801486c:	2318      	movs	r3, #24
 801486e:	fb03 0101 	mla	r1, r3, r1, r0
 8014872:	b530      	push	{r4, r5, lr}
 8014874:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8014876:	f023 0304 	bic.w	r3, r3, #4
 801487a:	624b      	str	r3, [r1, #36]	@ 0x24
 801487c:	6813      	ldr	r3, [r2, #0]
 801487e:	618b      	str	r3, [r1, #24]
 8014880:	6893      	ldr	r3, [r2, #8]
 8014882:	61cb      	str	r3, [r1, #28]
 8014884:	69d3      	ldr	r3, [r2, #28]
 8014886:	614b      	str	r3, [r1, #20]
 8014888:	6914      	ldr	r4, [r2, #16]
 801488a:	6a13      	ldr	r3, [r2, #32]
 801488c:	6908      	ldr	r0, [r1, #16]
 801488e:	6995      	ldr	r5, [r2, #24]
 8014890:	4323      	orrs	r3, r4
 8014892:	f420 305e 	bic.w	r0, r0, #227328	@ 0x37800
 8014896:	432b      	orrs	r3, r5
 8014898:	f020 00c0 	bic.w	r0, r0, #192	@ 0xc0
 801489c:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 80148a0:	4303      	orrs	r3, r0
 80148a2:	610b      	str	r3, [r1, #16]
 80148a4:	6853      	ldr	r3, [r2, #4]
 80148a6:	b983      	cbnz	r3, 80148ca <dma_single_data_mode_init+0x5e>
 80148a8:	690b      	ldr	r3, [r1, #16]
 80148aa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80148ae:	610b      	str	r3, [r1, #16]
 80148b0:	68d3      	ldr	r3, [r2, #12]
 80148b2:	b993      	cbnz	r3, 80148da <dma_single_data_mode_init+0x6e>
 80148b4:	690b      	ldr	r3, [r1, #16]
 80148b6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80148ba:	610b      	str	r3, [r1, #16]
 80148bc:	6953      	ldr	r3, [r2, #20]
 80148be:	b983      	cbnz	r3, 80148e2 <dma_single_data_mode_init+0x76>
 80148c0:	690b      	ldr	r3, [r1, #16]
 80148c2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80148c6:	610b      	str	r3, [r1, #16]
 80148c8:	bd30      	pop	{r4, r5, pc}
 80148ca:	2b01      	cmp	r3, #1
 80148cc:	690b      	ldr	r3, [r1, #16]
 80148ce:	bf0c      	ite	eq
 80148d0:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 80148d4:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 80148d8:	e7e9      	b.n	80148ae <dma_single_data_mode_init+0x42>
 80148da:	690b      	ldr	r3, [r1, #16]
 80148dc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80148e0:	e7eb      	b.n	80148ba <dma_single_data_mode_init+0x4e>
 80148e2:	690b      	ldr	r3, [r1, #16]
 80148e4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80148e8:	e7ed      	b.n	80148c6 <dma_single_data_mode_init+0x5a>

080148ea <dma_circulation_disable>:
 80148ea:	2318      	movs	r3, #24
 80148ec:	4359      	muls	r1, r3
 80148ee:	3010      	adds	r0, #16
 80148f0:	580b      	ldr	r3, [r1, r0]
 80148f2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80148f6:	500b      	str	r3, [r1, r0]
 80148f8:	4770      	bx	lr

080148fa <dma_channel_subperipheral_select>:
 80148fa:	2318      	movs	r3, #24
 80148fc:	4359      	muls	r1, r3
 80148fe:	3010      	adds	r0, #16
 8014900:	580b      	ldr	r3, [r1, r0]
 8014902:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8014906:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 801490a:	500b      	str	r3, [r1, r0]
 801490c:	4770      	bx	lr
	...

08014910 <enet_software_reset>:
 8014910:	4b07      	ldr	r3, [pc, #28]	@ (8014930 <enet_software_reset+0x20>)
 8014912:	681a      	ldr	r2, [r3, #0]
 8014914:	f042 0201 	orr.w	r2, r2, #1
 8014918:	601a      	str	r2, [r3, #0]
 801491a:	4a06      	ldr	r2, [pc, #24]	@ (8014934 <enet_software_reset+0x24>)
 801491c:	6819      	ldr	r1, [r3, #0]
 801491e:	07c9      	lsls	r1, r1, #31
 8014920:	d501      	bpl.n	8014926 <enet_software_reset+0x16>
 8014922:	3a01      	subs	r2, #1
 8014924:	d1fa      	bne.n	801491c <enet_software_reset+0xc>
 8014926:	6818      	ldr	r0, [r3, #0]
 8014928:	43c0      	mvns	r0, r0
 801492a:	f000 0001 	and.w	r0, r0, #1
 801492e:	4770      	bx	lr
 8014930:	40029000 	andmi	r9, r2, r0
 8014934:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08014938 <enet_descriptors_chain_init>:
 8014938:	f5b0 0fe0 	cmp.w	r0, #7340032	@ 0x700000
 801493c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801493e:	4a19      	ldr	r2, [pc, #100]	@ (80149a4 <enet_descriptors_chain_init+0x6c>)
 8014940:	d125      	bne.n	801498e <enet_descriptors_chain_init+0x56>
 8014942:	4b19      	ldr	r3, [pc, #100]	@ (80149a8 <enet_descriptors_chain_init+0x70>)
 8014944:	6113      	str	r3, [r2, #16]
 8014946:	4a19      	ldr	r2, [pc, #100]	@ (80149ac <enet_descriptors_chain_init+0x74>)
 8014948:	4c19      	ldr	r4, [pc, #100]	@ (80149b0 <enet_descriptors_chain_init+0x78>)
 801494a:	6013      	str	r3, [r2, #0]
 801494c:	2500      	movs	r5, #0
 801494e:	f44f 1680 	mov.w	r6, #1048576	@ 0x100000
 8014952:	2004      	movs	r0, #4
 8014954:	4917      	ldr	r1, [pc, #92]	@ (80149b4 <enet_descriptors_chain_init+0x7c>)
 8014956:	2200      	movs	r2, #0
 8014958:	600a      	str	r2, [r1, #0]
 801495a:	4917      	ldr	r1, [pc, #92]	@ (80149b8 <enet_descriptors_chain_init+0x80>)
 801495c:	f240 5ef4 	movw	lr, #1524	@ 0x5f4
 8014960:	600a      	str	r2, [r1, #0]
 8014962:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8014966:	f103 0110 	add.w	r1, r3, #16
 801496a:	fb0e 4702 	mla	r7, lr, r2, r4
 801496e:	f841 7c08 	str.w	r7, [r1, #-8]
 8014972:	4594      	cmp	ip, r2
 8014974:	bf94      	ite	ls
 8014976:	461f      	movls	r7, r3
 8014978:	460f      	movhi	r7, r1
 801497a:	3201      	adds	r2, #1
 801497c:	4290      	cmp	r0, r2
 801497e:	e941 6504 	strd	r6, r5, [r1, #-16]
 8014982:	f841 7c04 	str.w	r7, [r1, #-4]
 8014986:	f101 0110 	add.w	r1, r1, #16
 801498a:	d1ee      	bne.n	801496a <enet_descriptors_chain_init+0x32>
 801498c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801498e:	4b0b      	ldr	r3, [pc, #44]	@ (80149bc <enet_descriptors_chain_init+0x84>)
 8014990:	60d3      	str	r3, [r2, #12]
 8014992:	4a0b      	ldr	r2, [pc, #44]	@ (80149c0 <enet_descriptors_chain_init+0x88>)
 8014994:	4c0b      	ldr	r4, [pc, #44]	@ (80149c4 <enet_descriptors_chain_init+0x8c>)
 8014996:	6013      	str	r3, [r2, #0]
 8014998:	f244 55f4 	movw	r5, #17908	@ 0x45f4
 801499c:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 80149a0:	2010      	movs	r0, #16
 80149a2:	e7d7      	b.n	8014954 <enet_descriptors_chain_init+0x1c>
 80149a4:	40029000 	andmi	r9, r2, r0
 80149a8:	200099a0 	andcs	r9, r0, r0, lsr #19
 80149ac:	2000228c 	andcs	r2, r0, ip, lsl #5
 80149b0:	20002290 	mulcs	r0, r0, r2
 80149b4:	20002280 	andcs	r2, r0, r0, lsl #5
 80149b8:	20002284 	andcs	r2, r0, r4, lsl #5
 80149bc:	200099e0 	andcs	r9, r0, r0, ror #19
 80149c0:	20002288 	andcs	r2, r0, r8, lsl #5
 80149c4:	20003a60 	andcs	r3, r0, r0, ror #20

080149c8 <enet_transmit_checksum_config>:
 80149c8:	6803      	ldr	r3, [r0, #0]
 80149ca:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 80149ce:	430b      	orrs	r3, r1
 80149d0:	6003      	str	r3, [r0, #0]
 80149d2:	4770      	bx	lr

080149d4 <enet_mac_address_set>:
 80149d4:	4b03      	ldr	r3, [pc, #12]	@ (80149e4 <enet_mac_address_set+0x10>)
 80149d6:	888a      	ldrh	r2, [r1, #4]
 80149d8:	50c2      	str	r2, [r0, r3]
 80149da:	3304      	adds	r3, #4
 80149dc:	680a      	ldr	r2, [r1, #0]
 80149de:	50c2      	str	r2, [r0, r3]
 80149e0:	4770      	bx	lr
 80149e2:	bf00      	nop
 80149e4:	40028040 	andmi	r8, r2, r0, asr #32

080149e8 <enet_rx_enable>:
 80149e8:	4a05      	ldr	r2, [pc, #20]	@ (8014a00 <enet_rx_enable+0x18>)
 80149ea:	6813      	ldr	r3, [r2, #0]
 80149ec:	f043 0304 	orr.w	r3, r3, #4
 80149f0:	6013      	str	r3, [r2, #0]
 80149f2:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80149f6:	6993      	ldr	r3, [r2, #24]
 80149f8:	f043 0302 	orr.w	r3, r3, #2
 80149fc:	6193      	str	r3, [r2, #24]
 80149fe:	4770      	bx	lr
 8014a00:	40028000 	andmi	r8, r2, r0

08014a04 <enet_phy_write_read>:
 8014a04:	b530      	push	{r4, r5, lr}
 8014a06:	4d12      	ldr	r5, [pc, #72]	@ (8014a50 <enet_phy_write_read+0x4c>)
 8014a08:	4604      	mov	r4, r0
 8014a0a:	6928      	ldr	r0, [r5, #16]
 8014a0c:	0192      	lsls	r2, r2, #6
 8014a0e:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8014a12:	f402 62f8 	and.w	r2, r2, #1984	@ 0x7c0
 8014a16:	f020 00c3 	bic.w	r0, r0, #195	@ 0xc3
 8014a1a:	4302      	orrs	r2, r0
 8014a1c:	02c9      	lsls	r1, r1, #11
 8014a1e:	b289      	uxth	r1, r1
 8014a20:	4322      	orrs	r2, r4
 8014a22:	430a      	orrs	r2, r1
 8014a24:	2c02      	cmp	r4, #2
 8014a26:	bf04      	itt	eq
 8014a28:	8819      	ldrheq	r1, [r3, #0]
 8014a2a:	6169      	streq	r1, [r5, #20]
 8014a2c:	f042 0201 	orr.w	r2, r2, #1
 8014a30:	612a      	str	r2, [r5, #16]
 8014a32:	4907      	ldr	r1, [pc, #28]	@ (8014a50 <enet_phy_write_read+0x4c>)
 8014a34:	4a07      	ldr	r2, [pc, #28]	@ (8014a54 <enet_phy_write_read+0x50>)
 8014a36:	6908      	ldr	r0, [r1, #16]
 8014a38:	07c0      	lsls	r0, r0, #31
 8014a3a:	d501      	bpl.n	8014a40 <enet_phy_write_read+0x3c>
 8014a3c:	3a01      	subs	r2, #1
 8014a3e:	d1fa      	bne.n	8014a36 <enet_phy_write_read+0x32>
 8014a40:	690a      	ldr	r2, [r1, #16]
 8014a42:	43d2      	mvns	r2, r2
 8014a44:	f002 0001 	and.w	r0, r2, #1
 8014a48:	b90c      	cbnz	r4, 8014a4e <enet_phy_write_read+0x4a>
 8014a4a:	694a      	ldr	r2, [r1, #20]
 8014a4c:	801a      	strh	r2, [r3, #0]
 8014a4e:	bd30      	pop	{r4, r5, pc}
 8014a50:	40028000 	andmi	r8, r2, r0
 8014a54:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08014a58 <enet_init>:
 8014a58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014a5a:	4616      	mov	r6, r2
 8014a5c:	4a9d      	ldr	r2, [pc, #628]	@ (8014cd4 <enet_init+0x27c>)
 8014a5e:	460d      	mov	r5, r1
 8014a60:	6814      	ldr	r4, [r2, #0]
 8014a62:	499d      	ldr	r1, [pc, #628]	@ (8014cd8 <enet_init+0x280>)
 8014a64:	2300      	movs	r3, #0
 8014a66:	4021      	ands	r1, r4
 8014a68:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014a6c:	6011      	str	r1, [r2, #0]
 8014a6e:	6053      	str	r3, [r2, #4]
 8014a70:	6093      	str	r3, [r2, #8]
 8014a72:	60d3      	str	r3, [r2, #12]
 8014a74:	6991      	ldr	r1, [r2, #24]
 8014a76:	f021 01be 	bic.w	r1, r1, #190	@ 0xbe
 8014a7a:	0409      	lsls	r1, r1, #16
 8014a7c:	0c09      	lsrs	r1, r1, #16
 8014a7e:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 8014a82:	6191      	str	r1, [r2, #24]
 8014a84:	4995      	ldr	r1, [pc, #596]	@ (8014cdc <enet_init+0x284>)
 8014a86:	61d3      	str	r3, [r2, #28]
 8014a88:	698c      	ldr	r4, [r1, #24]
 8014a8a:	4a95      	ldr	r2, [pc, #596]	@ (8014ce0 <enet_init+0x288>)
 8014a8c:	4022      	ands	r2, r4
 8014a8e:	f042 7208 	orr.w	r2, r2, #35651584	@ 0x2200000
 8014a92:	618a      	str	r2, [r1, #24]
 8014a94:	680a      	ldr	r2, [r1, #0]
 8014a96:	4a93      	ldr	r2, [pc, #588]	@ (8014ce4 <enet_init+0x28c>)
 8014a98:	600a      	str	r2, [r1, #0]
 8014a9a:	2801      	cmp	r0, #1
 8014a9c:	d146      	bne.n	8014b2c <enet_init+0xd4>
 8014a9e:	4f92      	ldr	r7, [pc, #584]	@ (8014ce8 <enet_init+0x290>)
 8014aa0:	461c      	mov	r4, r3
 8014aa2:	2201      	movs	r2, #1
 8014aa4:	4611      	mov	r1, r2
 8014aa6:	f10d 0306 	add.w	r3, sp, #6
 8014aaa:	2000      	movs	r0, #0
 8014aac:	f7ff ffaa 	bl	8014a04 <enet_phy_write_read>
 8014ab0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014ab4:	f002 0204 	and.w	r2, r2, #4
 8014ab8:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014abc:	3401      	adds	r4, #1
 8014abe:	b922      	cbnz	r2, 8014aca <enet_init+0x72>
 8014ac0:	42bc      	cmp	r4, r7
 8014ac2:	d1ee      	bne.n	8014aa2 <enet_init+0x4a>
 8014ac4:	2000      	movs	r0, #0
 8014ac6:	b003      	add	sp, #12
 8014ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014aca:	42bc      	cmp	r4, r7
 8014acc:	d0fa      	beq.n	8014ac4 <enet_init+0x6c>
 8014ace:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8014ad2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014ad6:	2101      	movs	r1, #1
 8014ad8:	2200      	movs	r2, #0
 8014ada:	2002      	movs	r0, #2
 8014adc:	f7ff ff92 	bl	8014a04 <enet_phy_write_read>
 8014ae0:	2800      	cmp	r0, #0
 8014ae2:	d0ef      	beq.n	8014ac4 <enet_init+0x6c>
 8014ae4:	4f80      	ldr	r7, [pc, #512]	@ (8014ce8 <enet_init+0x290>)
 8014ae6:	2400      	movs	r4, #0
 8014ae8:	2201      	movs	r2, #1
 8014aea:	4611      	mov	r1, r2
 8014aec:	f10d 0306 	add.w	r3, sp, #6
 8014af0:	2000      	movs	r0, #0
 8014af2:	f7ff ff87 	bl	8014a04 <enet_phy_write_read>
 8014af6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014afa:	f002 0220 	and.w	r2, r2, #32
 8014afe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014b02:	3401      	adds	r4, #1
 8014b04:	b912      	cbnz	r2, 8014b0c <enet_init+0xb4>
 8014b06:	42bc      	cmp	r4, r7
 8014b08:	d1ee      	bne.n	8014ae8 <enet_init+0x90>
 8014b0a:	e7db      	b.n	8014ac4 <enet_init+0x6c>
 8014b0c:	42bc      	cmp	r4, r7
 8014b0e:	d0d9      	beq.n	8014ac4 <enet_init+0x6c>
 8014b10:	2101      	movs	r1, #1
 8014b12:	2210      	movs	r2, #16
 8014b14:	2000      	movs	r0, #0
 8014b16:	f7ff ff75 	bl	8014a04 <enet_phy_write_read>
 8014b1a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8014b1e:	f3c3 0080 	ubfx	r0, r3, #2, #1
 8014b22:	02c0      	lsls	r0, r0, #11
 8014b24:	0799      	lsls	r1, r3, #30
 8014b26:	bf58      	it	pl
 8014b28:	f440 4080 	orrpl.w	r0, r0, #16384	@ 0x4000
 8014b2c:	4b69      	ldr	r3, [pc, #420]	@ (8014cd4 <enet_init+0x27c>)
 8014b2e:	681a      	ldr	r2, [r3, #0]
 8014b30:	f422 42b0 	bic.w	r2, r2, #22528	@ 0x5800
 8014b34:	4310      	orrs	r0, r2
 8014b36:	056a      	lsls	r2, r5, #21
 8014b38:	6018      	str	r0, [r3, #0]
 8014b3a:	d50b      	bpl.n	8014b54 <enet_init+0xfc>
 8014b3c:	681a      	ldr	r2, [r3, #0]
 8014b3e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8014b42:	601a      	str	r2, [r3, #0]
 8014b44:	4a65      	ldr	r2, [pc, #404]	@ (8014cdc <enet_init+0x284>)
 8014b46:	6993      	ldr	r3, [r2, #24]
 8014b48:	f005 6580 	and.w	r5, r5, #67108864	@ 0x4000000
 8014b4c:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8014b50:	431d      	orrs	r5, r3
 8014b52:	6195      	str	r5, [r2, #24]
 8014b54:	485f      	ldr	r0, [pc, #380]	@ (8014cd4 <enet_init+0x27c>)
 8014b56:	6843      	ldr	r3, [r0, #4]
 8014b58:	431e      	orrs	r6, r3
 8014b5a:	4b64      	ldr	r3, [pc, #400]	@ (8014cec <enet_init+0x294>)
 8014b5c:	6046      	str	r6, [r0, #4]
 8014b5e:	681a      	ldr	r2, [r3, #0]
 8014b60:	07d7      	lsls	r7, r2, #31
 8014b62:	d513      	bpl.n	8014b8c <enet_init+0x134>
 8014b64:	6801      	ldr	r1, [r0, #0]
 8014b66:	685a      	ldr	r2, [r3, #4]
 8014b68:	4c61      	ldr	r4, [pc, #388]	@ (8014cf0 <enet_init+0x298>)
 8014b6a:	f021 7100 	bic.w	r1, r1, #33554432	@ 0x2000000
 8014b6e:	4014      	ands	r4, r2
 8014b70:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8014b74:	4321      	orrs	r1, r4
 8014b76:	6001      	str	r1, [r0, #0]
 8014b78:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8014b7c:	0892      	lsrs	r2, r2, #2
 8014b7e:	6981      	ldr	r1, [r0, #24]
 8014b80:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
 8014b84:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8014b88:	430a      	orrs	r2, r1
 8014b8a:	6182      	str	r2, [r0, #24]
 8014b8c:	681a      	ldr	r2, [r3, #0]
 8014b8e:	0796      	lsls	r6, r2, #30
 8014b90:	d508      	bpl.n	8014ba4 <enet_init+0x14c>
 8014b92:	4952      	ldr	r1, [pc, #328]	@ (8014cdc <enet_init+0x284>)
 8014b94:	6898      	ldr	r0, [r3, #8]
 8014b96:	680a      	ldr	r2, [r1, #0]
 8014b98:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8014b9c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8014ba0:	4302      	orrs	r2, r0
 8014ba2:	600a      	str	r2, [r1, #0]
 8014ba4:	681a      	ldr	r2, [r3, #0]
 8014ba6:	0755      	lsls	r5, r2, #29
 8014ba8:	d508      	bpl.n	8014bbc <enet_init+0x164>
 8014baa:	494c      	ldr	r1, [pc, #304]	@ (8014cdc <enet_init+0x284>)
 8014bac:	68d8      	ldr	r0, [r3, #12]
 8014bae:	680a      	ldr	r2, [r1, #0]
 8014bb0:	f422 027e 	bic.w	r2, r2, #16646144	@ 0xfe0000
 8014bb4:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 8014bb8:	4302      	orrs	r2, r0
 8014bba:	600a      	str	r2, [r1, #0]
 8014bbc:	681a      	ldr	r2, [r3, #0]
 8014bbe:	0714      	lsls	r4, r2, #28
 8014bc0:	d508      	bpl.n	8014bd4 <enet_init+0x17c>
 8014bc2:	4946      	ldr	r1, [pc, #280]	@ (8014cdc <enet_init+0x284>)
 8014bc4:	6918      	ldr	r0, [r3, #16]
 8014bc6:	680a      	ldr	r2, [r1, #0]
 8014bc8:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8014bcc:	f022 0202 	bic.w	r2, r2, #2
 8014bd0:	4302      	orrs	r2, r0
 8014bd2:	600a      	str	r2, [r1, #0]
 8014bd4:	681a      	ldr	r2, [r3, #0]
 8014bd6:	06d0      	lsls	r0, r2, #27
 8014bd8:	d506      	bpl.n	8014be8 <enet_init+0x190>
 8014bda:	4940      	ldr	r1, [pc, #256]	@ (8014cdc <enet_init+0x284>)
 8014bdc:	4a45      	ldr	r2, [pc, #276]	@ (8014cf4 <enet_init+0x29c>)
 8014bde:	6988      	ldr	r0, [r1, #24]
 8014be0:	4002      	ands	r2, r0
 8014be2:	6958      	ldr	r0, [r3, #20]
 8014be4:	4302      	orrs	r2, r0
 8014be6:	618a      	str	r2, [r1, #24]
 8014be8:	681a      	ldr	r2, [r3, #0]
 8014bea:	0691      	lsls	r1, r2, #26
 8014bec:	d511      	bpl.n	8014c12 <enet_init+0x1ba>
 8014bee:	483b      	ldr	r0, [pc, #236]	@ (8014cdc <enet_init+0x284>)
 8014bf0:	699a      	ldr	r2, [r3, #24]
 8014bf2:	6981      	ldr	r1, [r0, #24]
 8014bf4:	4c40      	ldr	r4, [pc, #256]	@ (8014cf8 <enet_init+0x2a0>)
 8014bf6:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8014bfa:	4014      	ands	r4, r2
 8014bfc:	f021 0104 	bic.w	r1, r1, #4
 8014c00:	4321      	orrs	r1, r4
 8014c02:	6181      	str	r1, [r0, #24]
 8014c04:	6801      	ldr	r1, [r0, #0]
 8014c06:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8014c0a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8014c0e:	430a      	orrs	r2, r1
 8014c10:	6002      	str	r2, [r0, #0]
 8014c12:	681a      	ldr	r2, [r3, #0]
 8014c14:	0652      	lsls	r2, r2, #25
 8014c16:	d506      	bpl.n	8014c26 <enet_init+0x1ce>
 8014c18:	492e      	ldr	r1, [pc, #184]	@ (8014cd4 <enet_init+0x27c>)
 8014c1a:	69d8      	ldr	r0, [r3, #28]
 8014c1c:	69ca      	ldr	r2, [r1, #28]
 8014c1e:	f36f 0210 	bfc	r2, #0, #17
 8014c22:	4302      	orrs	r2, r0
 8014c24:	61ca      	str	r2, [r1, #28]
 8014c26:	681a      	ldr	r2, [r3, #0]
 8014c28:	0617      	lsls	r7, r2, #24
 8014c2a:	d517      	bpl.n	8014c5c <enet_init+0x204>
 8014c2c:	4c29      	ldr	r4, [pc, #164]	@ (8014cd4 <enet_init+0x27c>)
 8014c2e:	6a1a      	ldr	r2, [r3, #32]
 8014c30:	69a0      	ldr	r0, [r4, #24]
 8014c32:	f020 00be 	bic.w	r0, r0, #190	@ 0xbe
 8014c36:	f422 417f 	bic.w	r1, r2, #65280	@ 0xff00
 8014c3a:	0400      	lsls	r0, r0, #16
 8014c3c:	0c00      	lsrs	r0, r0, #16
 8014c3e:	f021 0141 	bic.w	r1, r1, #65	@ 0x41
 8014c42:	4301      	orrs	r1, r0
 8014c44:	4825      	ldr	r0, [pc, #148]	@ (8014cdc <enet_init+0x284>)
 8014c46:	61a1      	str	r1, [r4, #24]
 8014c48:	f8d0 1080 	ldr.w	r1, [r0, #128]	@ 0x80
 8014c4c:	0a12      	lsrs	r2, r2, #8
 8014c4e:	f021 0177 	bic.w	r1, r1, #119	@ 0x77
 8014c52:	f002 0277 	and.w	r2, r2, #119	@ 0x77
 8014c56:	430a      	orrs	r2, r1
 8014c58:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 8014c5c:	681a      	ldr	r2, [r3, #0]
 8014c5e:	05d6      	lsls	r6, r2, #23
 8014c60:	bf42      	ittt	mi
 8014c62:	4a1c      	ldrmi	r2, [pc, #112]	@ (8014cd4 <enet_init+0x27c>)
 8014c64:	6a59      	ldrmi	r1, [r3, #36]	@ 0x24
 8014c66:	6091      	strmi	r1, [r2, #8]
 8014c68:	681a      	ldr	r2, [r3, #0]
 8014c6a:	0595      	lsls	r5, r2, #22
 8014c6c:	bf42      	ittt	mi
 8014c6e:	4a19      	ldrmi	r2, [pc, #100]	@ (8014cd4 <enet_init+0x27c>)
 8014c70:	6a99      	ldrmi	r1, [r3, #40]	@ 0x28
 8014c72:	60d1      	strmi	r1, [r2, #12]
 8014c74:	681a      	ldr	r2, [r3, #0]
 8014c76:	0554      	lsls	r4, r2, #21
 8014c78:	d508      	bpl.n	8014c8c <enet_init+0x234>
 8014c7a:	4916      	ldr	r1, [pc, #88]	@ (8014cd4 <enet_init+0x27c>)
 8014c7c:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8014c7e:	684a      	ldr	r2, [r1, #4]
 8014c80:	f422 62fb 	bic.w	r2, r2, #2008	@ 0x7d8
 8014c84:	f022 0206 	bic.w	r2, r2, #6
 8014c88:	4302      	orrs	r2, r0
 8014c8a:	604a      	str	r2, [r1, #4]
 8014c8c:	681a      	ldr	r2, [r3, #0]
 8014c8e:	0510      	lsls	r0, r2, #20
 8014c90:	d508      	bpl.n	8014ca4 <enet_init+0x24c>
 8014c92:	4910      	ldr	r1, [pc, #64]	@ (8014cd4 <enet_init+0x27c>)
 8014c94:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8014c96:	680a      	ldr	r2, [r1, #0]
 8014c98:	f422 3291 	bic.w	r2, r2, #74240	@ 0x12200
 8014c9c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8014ca0:	4302      	orrs	r2, r0
 8014ca2:	600a      	str	r2, [r1, #0]
 8014ca4:	681a      	ldr	r2, [r3, #0]
 8014ca6:	04d1      	lsls	r1, r2, #19
 8014ca8:	d506      	bpl.n	8014cb8 <enet_init+0x260>
 8014caa:	490a      	ldr	r1, [pc, #40]	@ (8014cd4 <enet_init+0x27c>)
 8014cac:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8014cae:	680a      	ldr	r2, [r1, #0]
 8014cb0:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8014cb4:	4302      	orrs	r2, r0
 8014cb6:	600a      	str	r2, [r1, #0]
 8014cb8:	681a      	ldr	r2, [r3, #0]
 8014cba:	0492      	lsls	r2, r2, #18
 8014cbc:	d401      	bmi.n	8014cc2 <enet_init+0x26a>
 8014cbe:	2001      	movs	r0, #1
 8014cc0:	e701      	b.n	8014ac6 <enet_init+0x6e>
 8014cc2:	4904      	ldr	r1, [pc, #16]	@ (8014cd4 <enet_init+0x27c>)
 8014cc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014cc6:	680a      	ldr	r2, [r1, #0]
 8014cc8:	f422 2260 	bic.w	r2, r2, #917504	@ 0xe0000
 8014ccc:	4313      	orrs	r3, r2
 8014cce:	600b      	str	r3, [r1, #0]
 8014cd0:	e7f5      	b.n	8014cbe <enet_init+0x266>
 8014cd2:	bf00      	nop
 8014cd4:	40028000 	andmi	r8, r2, r0
 8014cd8:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	@ 0xffffffc4
 8014cdc:	40029000 	andmi	r9, r2, r0
 8014ce0:	f8de3f23 			@ <UNDEFINED> instruction: 0xf8de3f23
 8014ce4:	02c16000 	sbceq	r6, r1, #0
 8014ce8:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>
 8014cec:	20002244 	andcs	r2, r0, r4, asr #4
 8014cf0:	02000080 	andeq	r0, r0, #128	@ 0x80
 8014cf4:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	@ 0x39c
 8014cf8:	01000004 	tsteq	r0, r4

08014cfc <enet_txfifo_flush>:
 8014cfc:	4a08      	ldr	r2, [pc, #32]	@ (8014d20 <enet_txfifo_flush+0x24>)
 8014cfe:	6993      	ldr	r3, [r2, #24]
 8014d00:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8014d04:	6193      	str	r3, [r2, #24]
 8014d06:	4b07      	ldr	r3, [pc, #28]	@ (8014d24 <enet_txfifo_flush+0x28>)
 8014d08:	6990      	ldr	r0, [r2, #24]
 8014d0a:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
 8014d0e:	d003      	beq.n	8014d18 <enet_txfifo_flush+0x1c>
 8014d10:	3b01      	subs	r3, #1
 8014d12:	d1f9      	bne.n	8014d08 <enet_txfifo_flush+0xc>
 8014d14:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8014d18:	fab0 f080 	clz	r0, r0
 8014d1c:	0940      	lsrs	r0, r0, #5
 8014d1e:	4770      	bx	lr
 8014d20:	40029000 	andmi	r9, r2, r0
 8014d24:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08014d28 <enet_tx_enable>:
 8014d28:	4a06      	ldr	r2, [pc, #24]	@ (8014d44 <enet_tx_enable+0x1c>)
 8014d2a:	b508      	push	{r3, lr}
 8014d2c:	6813      	ldr	r3, [r2, #0]
 8014d2e:	f043 0308 	orr.w	r3, r3, #8
 8014d32:	6013      	str	r3, [r2, #0]
 8014d34:	f7ff ffe2 	bl	8014cfc <enet_txfifo_flush>
 8014d38:	4a03      	ldr	r2, [pc, #12]	@ (8014d48 <enet_tx_enable+0x20>)
 8014d3a:	6993      	ldr	r3, [r2, #24]
 8014d3c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8014d40:	6193      	str	r3, [r2, #24]
 8014d42:	bd08      	pop	{r3, pc}
 8014d44:	40028000 	andmi	r8, r2, r0
 8014d48:	40029000 	andmi	r9, r2, r0

08014d4c <enet_enable>:
 8014d4c:	b508      	push	{r3, lr}
 8014d4e:	f7ff ffeb 	bl	8014d28 <enet_tx_enable>
 8014d52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014d56:	f7ff be47 	b.w	80149e8 <enet_rx_enable>
	...

08014d5c <enet_desc_information_get>:
 8014d5c:	2905      	cmp	r1, #5
 8014d5e:	d820      	bhi.n	8014da2 <enet_desc_information_get+0x46>
 8014d60:	e8df f001 	tbb	[pc, r1]
 8014d64:	0309191b 	movweq	r1, #39195	@ 0x991b
 8014d68:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8014d6c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014d70:	4770      	bx	lr
 8014d72:	88c0      	ldrh	r0, [r0, #6]
 8014d74:	e7fa      	b.n	8014d6c <enet_desc_information_get+0x10>
 8014d76:	6802      	ldr	r2, [r0, #0]
 8014d78:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8014d7c:	2b04      	cmp	r3, #4
 8014d7e:	d913      	bls.n	8014da8 <enet_desc_information_get+0x4c>
 8014d80:	490a      	ldr	r1, [pc, #40]	@ (8014dac <enet_desc_information_get+0x50>)
 8014d82:	6809      	ldr	r1, [r1, #0]
 8014d84:	0189      	lsls	r1, r1, #6
 8014d86:	f1a3 0004 	sub.w	r0, r3, #4
 8014d8a:	d50e      	bpl.n	8014daa <enet_desc_information_get+0x4e>
 8014d8c:	f012 0f20 	tst.w	r2, #32
 8014d90:	bf18      	it	ne
 8014d92:	4618      	movne	r0, r3
 8014d94:	4770      	bx	lr
 8014d96:	6880      	ldr	r0, [r0, #8]
 8014d98:	4770      	bx	lr
 8014d9a:	6800      	ldr	r0, [r0, #0]
 8014d9c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8014da0:	4770      	bx	lr
 8014da2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8014da6:	4770      	bx	lr
 8014da8:	2000      	movs	r0, #0
 8014daa:	4770      	bx	lr
 8014dac:	40028000 	andmi	r8, r2, r0

08014db0 <enet_initpara_reset>:
 8014db0:	4b08      	ldr	r3, [pc, #32]	@ (8014dd4 <enet_initpara_reset+0x24>)
 8014db2:	2200      	movs	r2, #0
 8014db4:	e9c3 2200 	strd	r2, r2, [r3]
 8014db8:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8014dbc:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8014dc0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8014dc4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8014dc8:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
 8014dcc:	e9c3 220c 	strd	r2, r2, [r3, #48]	@ 0x30
 8014dd0:	639a      	str	r2, [r3, #56]	@ 0x38
 8014dd2:	4770      	bx	lr
 8014dd4:	20002244 	andcs	r2, r0, r4, asr #4

08014dd8 <enet_deinit>:
 8014dd8:	b508      	push	{r3, lr}
 8014dda:	f240 4019 	movw	r0, #1049	@ 0x419
 8014dde:	f000 f8e0 	bl	8014fa2 <rcu_periph_reset_enable>
 8014de2:	f240 4019 	movw	r0, #1049	@ 0x419
 8014de6:	f000 f8de 	bl	8014fa6 <rcu_periph_reset_disable>
 8014dea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014dee:	f7ff bfdf 	b.w	8014db0 <enet_initpara_reset>
	...

08014df4 <fwdgt_enable>:
 8014df4:	4b02      	ldr	r3, [pc, #8]	@ (8014e00 <fwdgt_enable+0xc>)
 8014df6:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
 8014dfa:	601a      	str	r2, [r3, #0]
 8014dfc:	4770      	bx	lr
 8014dfe:	bf00      	nop
 8014e00:	40003000 	andmi	r3, r0, r0

08014e04 <fwdgt_counter_reload>:
 8014e04:	4b02      	ldr	r3, [pc, #8]	@ (8014e10 <fwdgt_counter_reload+0xc>)
 8014e06:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
 8014e0a:	601a      	str	r2, [r3, #0]
 8014e0c:	4770      	bx	lr
 8014e0e:	bf00      	nop
 8014e10:	40003000 	andmi	r3, r0, r0

08014e14 <fwdgt_config>:
 8014e14:	4a12      	ldr	r2, [pc, #72]	@ (8014e60 <fwdgt_config+0x4c>)
 8014e16:	b510      	push	{r4, lr}
 8014e18:	f245 5355 	movw	r3, #21845	@ 0x5555
 8014e1c:	4c11      	ldr	r4, [pc, #68]	@ (8014e64 <fwdgt_config+0x50>)
 8014e1e:	6013      	str	r3, [r2, #0]
 8014e20:	68d3      	ldr	r3, [r2, #12]
 8014e22:	3c01      	subs	r4, #1
 8014e24:	f003 0301 	and.w	r3, r3, #1
 8014e28:	d013      	beq.n	8014e52 <fwdgt_config+0x3e>
 8014e2a:	2b00      	cmp	r3, #0
 8014e2c:	d1f8      	bne.n	8014e20 <fwdgt_config+0xc>
 8014e2e:	6051      	str	r1, [r2, #4]
 8014e30:	490c      	ldr	r1, [pc, #48]	@ (8014e64 <fwdgt_config+0x50>)
 8014e32:	4a0b      	ldr	r2, [pc, #44]	@ (8014e60 <fwdgt_config+0x4c>)
 8014e34:	68d3      	ldr	r3, [r2, #12]
 8014e36:	3901      	subs	r1, #1
 8014e38:	f003 0302 	and.w	r3, r3, #2
 8014e3c:	d00d      	beq.n	8014e5a <fwdgt_config+0x46>
 8014e3e:	2b00      	cmp	r3, #0
 8014e40:	d1f8      	bne.n	8014e34 <fwdgt_config+0x20>
 8014e42:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8014e46:	f64a 23aa 	movw	r3, #43690	@ 0xaaaa
 8014e4a:	6090      	str	r0, [r2, #8]
 8014e4c:	6013      	str	r3, [r2, #0]
 8014e4e:	2001      	movs	r0, #1
 8014e50:	e002      	b.n	8014e58 <fwdgt_config+0x44>
 8014e52:	2b00      	cmp	r3, #0
 8014e54:	d0eb      	beq.n	8014e2e <fwdgt_config+0x1a>
 8014e56:	2000      	movs	r0, #0
 8014e58:	bd10      	pop	{r4, pc}
 8014e5a:	2b00      	cmp	r3, #0
 8014e5c:	d1fb      	bne.n	8014e56 <fwdgt_config+0x42>
 8014e5e:	e7f0      	b.n	8014e42 <fwdgt_config+0x2e>
 8014e60:	40003000 	andmi	r3, r0, r0
 8014e64:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

08014e68 <gpio_mode_set>:
 8014e68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014e6c:	6805      	ldr	r5, [r0, #0]
 8014e6e:	68c4      	ldr	r4, [r0, #12]
 8014e70:	2600      	movs	r6, #0
 8014e72:	f04f 0e01 	mov.w	lr, #1
 8014e76:	f04f 0803 	mov.w	r8, #3
 8014e7a:	fa0e f706 	lsl.w	r7, lr, r6
 8014e7e:	421f      	tst	r7, r3
 8014e80:	d00d      	beq.n	8014e9e <gpio_mode_set+0x36>
 8014e82:	0077      	lsls	r7, r6, #1
 8014e84:	fa08 fc07 	lsl.w	ip, r8, r7
 8014e88:	fa01 f907 	lsl.w	r9, r1, r7
 8014e8c:	ea25 050c 	bic.w	r5, r5, ip
 8014e90:	ea24 040c 	bic.w	r4, r4, ip
 8014e94:	fa02 f707 	lsl.w	r7, r2, r7
 8014e98:	ea49 0505 	orr.w	r5, r9, r5
 8014e9c:	433c      	orrs	r4, r7
 8014e9e:	3601      	adds	r6, #1
 8014ea0:	2e10      	cmp	r6, #16
 8014ea2:	d1ea      	bne.n	8014e7a <gpio_mode_set+0x12>
 8014ea4:	6005      	str	r5, [r0, #0]
 8014ea6:	60c4      	str	r4, [r0, #12]
 8014ea8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08014eac <gpio_output_options_set>:
 8014eac:	2901      	cmp	r1, #1
 8014eae:	6841      	ldr	r1, [r0, #4]
 8014eb0:	bf0c      	ite	eq
 8014eb2:	4319      	orreq	r1, r3
 8014eb4:	4399      	bicne	r1, r3
 8014eb6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014eb8:	6041      	str	r1, [r0, #4]
 8014eba:	6881      	ldr	r1, [r0, #8]
 8014ebc:	2400      	movs	r4, #0
 8014ebe:	2601      	movs	r6, #1
 8014ec0:	2703      	movs	r7, #3
 8014ec2:	fa06 f504 	lsl.w	r5, r6, r4
 8014ec6:	421d      	tst	r5, r3
 8014ec8:	d007      	beq.n	8014eda <gpio_output_options_set+0x2e>
 8014eca:	0065      	lsls	r5, r4, #1
 8014ecc:	fa07 fc05 	lsl.w	ip, r7, r5
 8014ed0:	ea21 010c 	bic.w	r1, r1, ip
 8014ed4:	fa02 f505 	lsl.w	r5, r2, r5
 8014ed8:	4329      	orrs	r1, r5
 8014eda:	3401      	adds	r4, #1
 8014edc:	2c10      	cmp	r4, #16
 8014ede:	d1f0      	bne.n	8014ec2 <gpio_output_options_set+0x16>
 8014ee0:	6081      	str	r1, [r0, #8]
 8014ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014ee4 <gpio_af_set>:
 8014ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ee6:	6a06      	ldr	r6, [r0, #32]
 8014ee8:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 8014eea:	2300      	movs	r3, #0
 8014eec:	f04f 0c01 	mov.w	ip, #1
 8014ef0:	f04f 0e0f 	mov.w	lr, #15
 8014ef4:	fa0c f403 	lsl.w	r4, ip, r3
 8014ef8:	4214      	tst	r4, r2
 8014efa:	d007      	beq.n	8014f0c <gpio_af_set+0x28>
 8014efc:	009c      	lsls	r4, r3, #2
 8014efe:	fa0e f704 	lsl.w	r7, lr, r4
 8014f02:	ea26 0607 	bic.w	r6, r6, r7
 8014f06:	fa01 f404 	lsl.w	r4, r1, r4
 8014f0a:	4326      	orrs	r6, r4
 8014f0c:	3301      	adds	r3, #1
 8014f0e:	2b08      	cmp	r3, #8
 8014f10:	d1f0      	bne.n	8014ef4 <gpio_af_set+0x10>
 8014f12:	2300      	movs	r3, #0
 8014f14:	f04f 0c01 	mov.w	ip, #1
 8014f18:	f04f 0e0f 	mov.w	lr, #15
 8014f1c:	f103 0408 	add.w	r4, r3, #8
 8014f20:	fa0c f404 	lsl.w	r4, ip, r4
 8014f24:	4214      	tst	r4, r2
 8014f26:	d007      	beq.n	8014f38 <gpio_af_set+0x54>
 8014f28:	009c      	lsls	r4, r3, #2
 8014f2a:	fa0e f704 	lsl.w	r7, lr, r4
 8014f2e:	ea25 0507 	bic.w	r5, r5, r7
 8014f32:	fa01 f404 	lsl.w	r4, r1, r4
 8014f36:	4325      	orrs	r5, r4
 8014f38:	3301      	adds	r3, #1
 8014f3a:	2b08      	cmp	r3, #8
 8014f3c:	d1ee      	bne.n	8014f1c <gpio_af_set+0x38>
 8014f3e:	6206      	str	r6, [r0, #32]
 8014f40:	6245      	str	r5, [r0, #36]	@ 0x24
 8014f42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014f44 <pmu_backup_ldo_config>:
 8014f44:	4b04      	ldr	r3, [pc, #16]	@ (8014f58 <pmu_backup_ldo_config+0x14>)
 8014f46:	685a      	ldr	r2, [r3, #4]
 8014f48:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8014f4c:	605a      	str	r2, [r3, #4]
 8014f4e:	685a      	ldr	r2, [r3, #4]
 8014f50:	4302      	orrs	r2, r0
 8014f52:	605a      	str	r2, [r3, #4]
 8014f54:	4770      	bx	lr
 8014f56:	bf00      	nop
 8014f58:	40007000 	andmi	r7, r0, r0

08014f5c <pmu_backup_write_enable>:
 8014f5c:	4a02      	ldr	r2, [pc, #8]	@ (8014f68 <pmu_backup_write_enable+0xc>)
 8014f5e:	6813      	ldr	r3, [r2, #0]
 8014f60:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8014f64:	6013      	str	r3, [r2, #0]
 8014f66:	4770      	bx	lr
 8014f68:	40007000 	andmi	r7, r0, r0

08014f6c <rcu_periph_clock_enable>:
 8014f6c:	0983      	lsrs	r3, r0, #6
 8014f6e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8014f72:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8014f76:	f000 001f 	and.w	r0, r0, #31
 8014f7a:	6819      	ldr	r1, [r3, #0]
 8014f7c:	2201      	movs	r2, #1
 8014f7e:	4082      	lsls	r2, r0
 8014f80:	430a      	orrs	r2, r1
 8014f82:	601a      	str	r2, [r3, #0]
 8014f84:	4770      	bx	lr

08014f86 <rcu_periph_clock_disable>:
 8014f86:	0983      	lsrs	r3, r0, #6
 8014f88:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8014f8c:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8014f90:	f000 001f 	and.w	r0, r0, #31
 8014f94:	681a      	ldr	r2, [r3, #0]
 8014f96:	2101      	movs	r1, #1
 8014f98:	4081      	lsls	r1, r0
 8014f9a:	ea22 0201 	bic.w	r2, r2, r1
 8014f9e:	601a      	str	r2, [r3, #0]
 8014fa0:	4770      	bx	lr

08014fa2 <rcu_periph_reset_enable>:
 8014fa2:	f7ff bfe3 	b.w	8014f6c <rcu_periph_clock_enable>

08014fa6 <rcu_periph_reset_disable>:
 8014fa6:	f7ff bfee 	b.w	8014f86 <rcu_periph_clock_disable>
	...

08014fac <rcu_ckout0_config>:
 8014fac:	4a04      	ldr	r2, [pc, #16]	@ (8014fc0 <rcu_ckout0_config+0x14>)
 8014fae:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8014fb2:	f023 63ec 	bic.w	r3, r3, #123731968	@ 0x7600000
 8014fb6:	430b      	orrs	r3, r1
 8014fb8:	4303      	orrs	r3, r0
 8014fba:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 8014fbe:	4770      	bx	lr
 8014fc0:	40023000 	andmi	r3, r2, r0

08014fc4 <rcu_timer_clock_prescaler_config>:
 8014fc4:	f06f 7380 	mvn.w	r3, #16777216	@ 0x1000000
 8014fc8:	4298      	cmp	r0, r3
 8014fca:	4b05      	ldr	r3, [pc, #20]	@ (8014fe0 <rcu_timer_clock_prescaler_config+0x1c>)
 8014fcc:	f8d3 288c 	ldr.w	r2, [r3, #2188]	@ 0x88c
 8014fd0:	bf0c      	ite	eq
 8014fd2:	f022 7280 	biceq.w	r2, r2, #16777216	@ 0x1000000
 8014fd6:	4302      	orrne	r2, r0
 8014fd8:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
 8014fdc:	4770      	bx	lr
 8014fde:	bf00      	nop
 8014fe0:	40023000 	andmi	r3, r2, r0

08014fe4 <rcu_clock_freq_get>:
 8014fe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fe6:	4b35      	ldr	r3, [pc, #212]	@ (80150bc <rcu_clock_freq_get+0xd8>)
 8014fe8:	b089      	sub	sp, #36	@ 0x24
 8014fea:	4604      	mov	r4, r0
 8014fec:	ad04      	add	r5, sp, #16
 8014fee:	f103 0610 	add.w	r6, r3, #16
 8014ff2:	461f      	mov	r7, r3
 8014ff4:	6818      	ldr	r0, [r3, #0]
 8014ff6:	6859      	ldr	r1, [r3, #4]
 8014ff8:	462a      	mov	r2, r5
 8014ffa:	c203      	stmia	r2!, {r0, r1}
 8014ffc:	3308      	adds	r3, #8
 8014ffe:	42b3      	cmp	r3, r6
 8015000:	4615      	mov	r5, r2
 8015002:	d1f7      	bne.n	8014ff4 <rcu_clock_freq_get+0x10>
 8015004:	6938      	ldr	r0, [r7, #16]
 8015006:	6871      	ldr	r1, [r6, #4]
 8015008:	4a2d      	ldr	r2, [pc, #180]	@ (80150c0 <rcu_clock_freq_get+0xdc>)
 801500a:	466b      	mov	r3, sp
 801500c:	c303      	stmia	r3!, {r0, r1}
 801500e:	c303      	stmia	r3!, {r0, r1}
 8015010:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8015014:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015018:	2b01      	cmp	r3, #1
 801501a:	d03f      	beq.n	801509c <rcu_clock_freq_get+0xb8>
 801501c:	2b02      	cmp	r3, #2
 801501e:	d13f      	bne.n	80150a0 <rcu_clock_freq_get+0xbc>
 8015020:	f8d2 0804 	ldr.w	r0, [r2, #2052]	@ 0x804
 8015024:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804
 8015028:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 801502c:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 8015030:	4d24      	ldr	r5, [pc, #144]	@ (80150c4 <rcu_clock_freq_get+0xe0>)
 8015032:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8015036:	f412 0f80 	tst.w	r2, #4194304	@ 0x400000
 801503a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801503e:	f103 0301 	add.w	r3, r3, #1
 8015042:	4a21      	ldr	r2, [pc, #132]	@ (80150c8 <rcu_clock_freq_get+0xe4>)
 8015044:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8015048:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801504c:	bf18      	it	ne
 801504e:	462a      	movne	r2, r5
 8015050:	fbb2 f2f0 	udiv	r2, r2, r0
 8015054:	434a      	muls	r2, r1
 8015056:	fbb2 f0f3 	udiv	r0, r2, r3
 801505a:	4919      	ldr	r1, [pc, #100]	@ (80150c0 <rcu_clock_freq_get+0xdc>)
 801505c:	f8d1 3808 	ldr.w	r3, [r1, #2056]	@ 0x808
 8015060:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 8015064:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8015068:	3220      	adds	r2, #32
 801506a:	446a      	add	r2, sp
 801506c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8015070:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 8015074:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 8015078:	3320      	adds	r3, #32
 801507a:	446b      	add	r3, sp
 801507c:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8015080:	3220      	adds	r2, #32
 8015082:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8015086:	446a      	add	r2, sp
 8015088:	fa20 f303 	lsr.w	r3, r0, r3
 801508c:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8015090:	2c03      	cmp	r4, #3
 8015092:	d807      	bhi.n	80150a4 <rcu_clock_freq_get+0xc0>
 8015094:	e8df f004 	tbb	[pc, r4]
 8015098:	0e0b0907 	vmlaeq.f16	s0, s22, s14	@ <UNPREDICTABLE>
 801509c:	4809      	ldr	r0, [pc, #36]	@ (80150c4 <rcu_clock_freq_get+0xe0>)
 801509e:	e7dc      	b.n	801505a <rcu_clock_freq_get+0x76>
 80150a0:	4809      	ldr	r0, [pc, #36]	@ (80150c8 <rcu_clock_freq_get+0xe4>)
 80150a2:	e7da      	b.n	801505a <rcu_clock_freq_get+0x76>
 80150a4:	2000      	movs	r0, #0
 80150a6:	b009      	add	sp, #36	@ 0x24
 80150a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80150aa:	4618      	mov	r0, r3
 80150ac:	e7fb      	b.n	80150a6 <rcu_clock_freq_get+0xc2>
 80150ae:	fa23 f005 	lsr.w	r0, r3, r5
 80150b2:	e7f8      	b.n	80150a6 <rcu_clock_freq_get+0xc2>
 80150b4:	fa23 f002 	lsr.w	r0, r3, r2
 80150b8:	e7f5      	b.n	80150a6 <rcu_clock_freq_get+0xc2>
 80150ba:	bf00      	nop
 80150bc:	08016d04 	stmdaeq	r1, {r2, r8, sl, fp, sp, lr}
 80150c0:	40023000 	andmi	r3, r2, r0
 80150c4:	017d7840 	cmneq	sp, r0, asr #16
 80150c8:	00f42400 	rscseq	r2, r4, r0, lsl #8

080150cc <syscfg_enet_phy_interface_config>:
 80150cc:	4a04      	ldr	r2, [pc, #16]	@ (80150e0 <syscfg_enet_phy_interface_config+0x14>)
 80150ce:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 80150d2:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80150d6:	4303      	orrs	r3, r0
 80150d8:	f8c2 3804 	str.w	r3, [r2, #2052]	@ 0x804
 80150dc:	4770      	bx	lr
 80150de:	bf00      	nop
 80150e0:	40013000 	andmi	r3, r1, r0

080150e4 <timer_deinit>:
 80150e4:	b508      	push	{r3, lr}
 80150e6:	4b4e      	ldr	r3, [pc, #312]	@ (8015220 <timer_deinit+0x13c>)
 80150e8:	4298      	cmp	r0, r3
 80150ea:	f000 8092 	beq.w	8015212 <timer_deinit+0x12e>
 80150ee:	d822      	bhi.n	8015136 <timer_deinit+0x52>
 80150f0:	f5a3 5380 	sub.w	r3, r3, #4096	@ 0x1000
 80150f4:	4298      	cmp	r0, r3
 80150f6:	d062      	beq.n	80151be <timer_deinit+0xda>
 80150f8:	d80b      	bhi.n	8015112 <timer_deinit+0x2e>
 80150fa:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80150fe:	4298      	cmp	r0, r3
 8015100:	d04f      	beq.n	80151a2 <timer_deinit+0xbe>
 8015102:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8015106:	4298      	cmp	r0, r3
 8015108:	d052      	beq.n	80151b0 <timer_deinit+0xcc>
 801510a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 801510e:	d041      	beq.n	8015194 <timer_deinit+0xb0>
 8015110:	bd08      	pop	{r3, pc}
 8015112:	4b44      	ldr	r3, [pc, #272]	@ (8015224 <timer_deinit+0x140>)
 8015114:	4298      	cmp	r0, r3
 8015116:	d059      	beq.n	80151cc <timer_deinit+0xe8>
 8015118:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801511c:	4298      	cmp	r0, r3
 801511e:	d071      	beq.n	8015204 <timer_deinit+0x120>
 8015120:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8015124:	4298      	cmp	r0, r3
 8015126:	d1f3      	bne.n	8015110 <timer_deinit+0x2c>
 8015128:	f640 0004 	movw	r0, #2052	@ 0x804
 801512c:	f7ff ff39 	bl	8014fa2 <rcu_periph_reset_enable>
 8015130:	f640 0004 	movw	r0, #2052	@ 0x804
 8015134:	e02a      	b.n	801518c <timer_deinit+0xa8>
 8015136:	4b3c      	ldr	r3, [pc, #240]	@ (8015228 <timer_deinit+0x144>)
 8015138:	4298      	cmp	r0, r3
 801513a:	d055      	beq.n	80151e8 <timer_deinit+0x104>
 801513c:	d812      	bhi.n	8015164 <timer_deinit+0x80>
 801513e:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 8015142:	4298      	cmp	r0, r3
 8015144:	d01c      	beq.n	8015180 <timer_deinit+0x9c>
 8015146:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801514a:	4298      	cmp	r0, r3
 801514c:	d045      	beq.n	80151da <timer_deinit+0xf6>
 801514e:	f5a3 4364 	sub.w	r3, r3, #58368	@ 0xe400
 8015152:	4298      	cmp	r0, r3
 8015154:	d1dc      	bne.n	8015110 <timer_deinit+0x2c>
 8015156:	f640 0008 	movw	r0, #2056	@ 0x808
 801515a:	f7ff ff22 	bl	8014fa2 <rcu_periph_reset_enable>
 801515e:	f640 0008 	movw	r0, #2056	@ 0x808
 8015162:	e013      	b.n	801518c <timer_deinit+0xa8>
 8015164:	4b31      	ldr	r3, [pc, #196]	@ (801522c <timer_deinit+0x148>)
 8015166:	4298      	cmp	r0, r3
 8015168:	d045      	beq.n	80151f6 <timer_deinit+0x112>
 801516a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801516e:	4298      	cmp	r0, r3
 8015170:	d1ce      	bne.n	8015110 <timer_deinit+0x2c>
 8015172:	f640 1012 	movw	r0, #2322	@ 0x912
 8015176:	f7ff ff14 	bl	8014fa2 <rcu_periph_reset_enable>
 801517a:	f640 1012 	movw	r0, #2322	@ 0x912
 801517e:	e005      	b.n	801518c <timer_deinit+0xa8>
 8015180:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 8015184:	f7ff ff0d 	bl	8014fa2 <rcu_periph_reset_enable>
 8015188:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 801518c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015190:	f7ff bf09 	b.w	8014fa6 <rcu_periph_reset_disable>
 8015194:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8015198:	f7ff ff03 	bl	8014fa2 <rcu_periph_reset_enable>
 801519c:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80151a0:	e7f4      	b.n	801518c <timer_deinit+0xa8>
 80151a2:	f640 0001 	movw	r0, #2049	@ 0x801
 80151a6:	f7ff fefc 	bl	8014fa2 <rcu_periph_reset_enable>
 80151aa:	f640 0001 	movw	r0, #2049	@ 0x801
 80151ae:	e7ed      	b.n	801518c <timer_deinit+0xa8>
 80151b0:	f640 0002 	movw	r0, #2050	@ 0x802
 80151b4:	f7ff fef5 	bl	8014fa2 <rcu_periph_reset_enable>
 80151b8:	f640 0002 	movw	r0, #2050	@ 0x802
 80151bc:	e7e6      	b.n	801518c <timer_deinit+0xa8>
 80151be:	f640 0003 	movw	r0, #2051	@ 0x803
 80151c2:	f7ff feee 	bl	8014fa2 <rcu_periph_reset_enable>
 80151c6:	f640 0003 	movw	r0, #2051	@ 0x803
 80151ca:	e7df      	b.n	801518c <timer_deinit+0xa8>
 80151cc:	f640 0005 	movw	r0, #2053	@ 0x805
 80151d0:	f7ff fee7 	bl	8014fa2 <rcu_periph_reset_enable>
 80151d4:	f640 0005 	movw	r0, #2053	@ 0x805
 80151d8:	e7d8      	b.n	801518c <timer_deinit+0xa8>
 80151da:	f640 1001 	movw	r0, #2305	@ 0x901
 80151de:	f7ff fee0 	bl	8014fa2 <rcu_periph_reset_enable>
 80151e2:	f640 1001 	movw	r0, #2305	@ 0x901
 80151e6:	e7d1      	b.n	801518c <timer_deinit+0xa8>
 80151e8:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 80151ec:	f7ff fed9 	bl	8014fa2 <rcu_periph_reset_enable>
 80151f0:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 80151f4:	e7ca      	b.n	801518c <timer_deinit+0xa8>
 80151f6:	f640 1011 	movw	r0, #2321	@ 0x911
 80151fa:	f7ff fed2 	bl	8014fa2 <rcu_periph_reset_enable>
 80151fe:	f640 1011 	movw	r0, #2321	@ 0x911
 8015202:	e7c3      	b.n	801518c <timer_deinit+0xa8>
 8015204:	f640 0006 	movw	r0, #2054	@ 0x806
 8015208:	f7ff fecb 	bl	8014fa2 <rcu_periph_reset_enable>
 801520c:	f640 0006 	movw	r0, #2054	@ 0x806
 8015210:	e7bc      	b.n	801518c <timer_deinit+0xa8>
 8015212:	f640 0007 	movw	r0, #2055	@ 0x807
 8015216:	f7ff fec4 	bl	8014fa2 <rcu_periph_reset_enable>
 801521a:	f640 0007 	movw	r0, #2055	@ 0x807
 801521e:	e7b5      	b.n	801518c <timer_deinit+0xa8>
 8015220:	40001c00 	andmi	r1, r0, r0, lsl #24
 8015224:	40001400 	andmi	r1, r0, r0, lsl #8
 8015228:	40014000 	andmi	r4, r1, r0
 801522c:	40014400 	andmi	r4, r1, r0, lsl #8

08015230 <timer_struct_para_init>:
 8015230:	2300      	movs	r3, #0
 8015232:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8015236:	e9c0 3300 	strd	r3, r3, [r0]
 801523a:	6082      	str	r2, [r0, #8]
 801523c:	7303      	strb	r3, [r0, #12]
 801523e:	4770      	bx	lr

08015240 <timer_init>:
 8015240:	880b      	ldrh	r3, [r1, #0]
 8015242:	4a17      	ldr	r2, [pc, #92]	@ (80152a0 <timer_init+0x60>)
 8015244:	b510      	push	{r4, lr}
 8015246:	6283      	str	r3, [r0, #40]	@ 0x28
 8015248:	f420 6380 	bic.w	r3, r0, #1024	@ 0x400
 801524c:	4293      	cmp	r3, r2
 801524e:	d004      	beq.n	801525a <timer_init+0x1a>
 8015250:	f420 6240 	bic.w	r2, r0, #3072	@ 0xc00
 8015254:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8015258:	d10b      	bne.n	8015272 <timer_init+0x32>
 801525a:	6802      	ldr	r2, [r0, #0]
 801525c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8015260:	6002      	str	r2, [r0, #0]
 8015262:	6804      	ldr	r4, [r0, #0]
 8015264:	884a      	ldrh	r2, [r1, #2]
 8015266:	4322      	orrs	r2, r4
 8015268:	6002      	str	r2, [r0, #0]
 801526a:	6804      	ldr	r4, [r0, #0]
 801526c:	888a      	ldrh	r2, [r1, #4]
 801526e:	4322      	orrs	r2, r4
 8015270:	6002      	str	r2, [r0, #0]
 8015272:	688a      	ldr	r2, [r1, #8]
 8015274:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8015276:	4a0b      	ldr	r2, [pc, #44]	@ (80152a4 <timer_init+0x64>)
 8015278:	4293      	cmp	r3, r2
 801527a:	d00c      	beq.n	8015296 <timer_init+0x56>
 801527c:	6802      	ldr	r2, [r0, #0]
 801527e:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8015282:	6002      	str	r2, [r0, #0]
 8015284:	6804      	ldr	r4, [r0, #0]
 8015286:	88ca      	ldrh	r2, [r1, #6]
 8015288:	4322      	orrs	r2, r4
 801528a:	6002      	str	r2, [r0, #0]
 801528c:	4a04      	ldr	r2, [pc, #16]	@ (80152a0 <timer_init+0x60>)
 801528e:	4293      	cmp	r3, r2
 8015290:	bf04      	itt	eq
 8015292:	7b0b      	ldrbeq	r3, [r1, #12]
 8015294:	6303      	streq	r3, [r0, #48]	@ 0x30
 8015296:	6943      	ldr	r3, [r0, #20]
 8015298:	f043 0301 	orr.w	r3, r3, #1
 801529c:	6143      	str	r3, [r0, #20]
 801529e:	bd10      	pop	{r4, pc}
 80152a0:	40010000 	andmi	r0, r1, r0
 80152a4:	40001000 	andmi	r1, r0, r0

080152a8 <timer_enable>:
 80152a8:	6803      	ldr	r3, [r0, #0]
 80152aa:	f043 0301 	orr.w	r3, r3, #1
 80152ae:	6003      	str	r3, [r0, #0]
 80152b0:	4770      	bx	lr

080152b2 <timer_counter_value_config>:
 80152b2:	6241      	str	r1, [r0, #36]	@ 0x24
 80152b4:	4770      	bx	lr

080152b6 <timer_channel_output_mode_config>:
 80152b6:	2903      	cmp	r1, #3
 80152b8:	d81a      	bhi.n	80152f0 <timer_channel_output_mode_config+0x3a>
 80152ba:	e8df f001 	tbb	[pc, r1]
 80152be:	1a120a02 	bne	8497ace <_sidata+0x47cd92>
 80152c2:	6983      	ldr	r3, [r0, #24]
 80152c4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80152c8:	6183      	str	r3, [r0, #24]
 80152ca:	6983      	ldr	r3, [r0, #24]
 80152cc:	4313      	orrs	r3, r2
 80152ce:	6183      	str	r3, [r0, #24]
 80152d0:	4770      	bx	lr
 80152d2:	6983      	ldr	r3, [r0, #24]
 80152d4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80152d8:	6183      	str	r3, [r0, #24]
 80152da:	6983      	ldr	r3, [r0, #24]
 80152dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80152e0:	e7f5      	b.n	80152ce <timer_channel_output_mode_config+0x18>
 80152e2:	69c3      	ldr	r3, [r0, #28]
 80152e4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80152e8:	61c3      	str	r3, [r0, #28]
 80152ea:	69c3      	ldr	r3, [r0, #28]
 80152ec:	4313      	orrs	r3, r2
 80152ee:	61c3      	str	r3, [r0, #28]
 80152f0:	4770      	bx	lr
 80152f2:	69c3      	ldr	r3, [r0, #28]
 80152f4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80152f8:	61c3      	str	r3, [r0, #28]
 80152fa:	69c3      	ldr	r3, [r0, #28]
 80152fc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015300:	e7f5      	b.n	80152ee <timer_channel_output_mode_config+0x38>

08015302 <timer_channel_output_pulse_value_config>:
 8015302:	2903      	cmp	r1, #3
 8015304:	d80a      	bhi.n	801531c <timer_channel_output_pulse_value_config+0x1a>
 8015306:	e8df f001 	tbb	[pc, r1]
 801530a:	08060402 	stmdaeq	r6, {r1, sl}
 801530e:	6342      	str	r2, [r0, #52]	@ 0x34
 8015310:	4770      	bx	lr
 8015312:	6382      	str	r2, [r0, #56]	@ 0x38
 8015314:	4770      	bx	lr
 8015316:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8015318:	4770      	bx	lr
 801531a:	6402      	str	r2, [r0, #64]	@ 0x40
 801531c:	4770      	bx	lr

0801531e <timer_flag_clear>:
 801531e:	43c9      	mvns	r1, r1
 8015320:	6101      	str	r1, [r0, #16]
 8015322:	4770      	bx	lr

08015324 <timer_interrupt_enable>:
 8015324:	68c3      	ldr	r3, [r0, #12]
 8015326:	430b      	orrs	r3, r1
 8015328:	60c3      	str	r3, [r0, #12]
 801532a:	4770      	bx	lr

0801532c <timer_interrupt_flag_clear>:
 801532c:	43c9      	mvns	r1, r1
 801532e:	6101      	str	r1, [r0, #16]
 8015330:	4770      	bx	lr
	...

08015334 <usart_deinit>:
 8015334:	b508      	push	{r3, lr}
 8015336:	4b2d      	ldr	r3, [pc, #180]	@ (80153ec <usart_deinit+0xb8>)
 8015338:	4298      	cmp	r0, r3
 801533a:	d050      	beq.n	80153de <usart_deinit+0xaa>
 801533c:	d817      	bhi.n	801536e <usart_deinit+0x3a>
 801533e:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8015342:	4298      	cmp	r0, r3
 8015344:	d044      	beq.n	80153d0 <usart_deinit+0x9c>
 8015346:	d808      	bhi.n	801535a <usart_deinit+0x26>
 8015348:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 801534c:	4298      	cmp	r0, r3
 801534e:	d02a      	beq.n	80153a6 <usart_deinit+0x72>
 8015350:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8015354:	4298      	cmp	r0, r3
 8015356:	d02d      	beq.n	80153b4 <usart_deinit+0x80>
 8015358:	bd08      	pop	{r3, pc}
 801535a:	4b25      	ldr	r3, [pc, #148]	@ (80153f0 <usart_deinit+0xbc>)
 801535c:	4298      	cmp	r0, r3
 801535e:	d1fb      	bne.n	8015358 <usart_deinit+0x24>
 8015360:	f640 0014 	movw	r0, #2068	@ 0x814
 8015364:	f7ff fe1d 	bl	8014fa2 <rcu_periph_reset_enable>
 8015368:	f640 0014 	movw	r0, #2068	@ 0x814
 801536c:	e017      	b.n	801539e <usart_deinit+0x6a>
 801536e:	4b21      	ldr	r3, [pc, #132]	@ (80153f4 <usart_deinit+0xc0>)
 8015370:	4298      	cmp	r0, r3
 8015372:	d00e      	beq.n	8015392 <usart_deinit+0x5e>
 8015374:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8015378:	4298      	cmp	r0, r3
 801537a:	d022      	beq.n	80153c2 <usart_deinit+0x8e>
 801537c:	f5a3 4318 	sub.w	r3, r3, #38912	@ 0x9800
 8015380:	4298      	cmp	r0, r3
 8015382:	d1e9      	bne.n	8015358 <usart_deinit+0x24>
 8015384:	f640 001f 	movw	r0, #2079	@ 0x81f
 8015388:	f7ff fe0b 	bl	8014fa2 <rcu_periph_reset_enable>
 801538c:	f640 001f 	movw	r0, #2079	@ 0x81f
 8015390:	e005      	b.n	801539e <usart_deinit+0x6a>
 8015392:	f640 1004 	movw	r0, #2308	@ 0x904
 8015396:	f7ff fe04 	bl	8014fa2 <rcu_periph_reset_enable>
 801539a:	f640 1004 	movw	r0, #2308	@ 0x904
 801539e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80153a2:	f7ff be00 	b.w	8014fa6 <rcu_periph_reset_disable>
 80153a6:	f640 0011 	movw	r0, #2065	@ 0x811
 80153aa:	f7ff fdfa 	bl	8014fa2 <rcu_periph_reset_enable>
 80153ae:	f640 0011 	movw	r0, #2065	@ 0x811
 80153b2:	e7f4      	b.n	801539e <usart_deinit+0x6a>
 80153b4:	f640 0012 	movw	r0, #2066	@ 0x812
 80153b8:	f7ff fdf3 	bl	8014fa2 <rcu_periph_reset_enable>
 80153bc:	f640 0012 	movw	r0, #2066	@ 0x812
 80153c0:	e7ed      	b.n	801539e <usart_deinit+0x6a>
 80153c2:	f640 1005 	movw	r0, #2309	@ 0x905
 80153c6:	f7ff fdec 	bl	8014fa2 <rcu_periph_reset_enable>
 80153ca:	f640 1005 	movw	r0, #2309	@ 0x905
 80153ce:	e7e6      	b.n	801539e <usart_deinit+0x6a>
 80153d0:	f640 0013 	movw	r0, #2067	@ 0x813
 80153d4:	f7ff fde5 	bl	8014fa2 <rcu_periph_reset_enable>
 80153d8:	f640 0013 	movw	r0, #2067	@ 0x813
 80153dc:	e7df      	b.n	801539e <usart_deinit+0x6a>
 80153de:	f640 001e 	movw	r0, #2078	@ 0x81e
 80153e2:	f7ff fdde 	bl	8014fa2 <rcu_periph_reset_enable>
 80153e6:	f640 001e 	movw	r0, #2078	@ 0x81e
 80153ea:	e7d8      	b.n	801539e <usart_deinit+0x6a>
 80153ec:	40007800 	andmi	r7, r0, r0, lsl #16
 80153f0:	40005000 	andmi	r5, r0, r0
 80153f4:	40011000 	andmi	r1, r1, r0

080153f8 <usart_baudrate_set>:
 80153f8:	b538      	push	{r3, r4, r5, lr}
 80153fa:	4b1e      	ldr	r3, [pc, #120]	@ (8015474 <usart_baudrate_set+0x7c>)
 80153fc:	4298      	cmp	r0, r3
 80153fe:	4604      	mov	r4, r0
 8015400:	460d      	mov	r5, r1
 8015402:	d02e      	beq.n	8015462 <usart_baudrate_set+0x6a>
 8015404:	d821      	bhi.n	801544a <usart_baudrate_set+0x52>
 8015406:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 801540a:	4298      	cmp	r0, r3
 801540c:	d029      	beq.n	8015462 <usart_baudrate_set+0x6a>
 801540e:	d81a      	bhi.n	8015446 <usart_baudrate_set+0x4e>
 8015410:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8015414:	4298      	cmp	r0, r3
 8015416:	d024      	beq.n	8015462 <usart_baudrate_set+0x6a>
 8015418:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801541c:	429c      	cmp	r4, r3
 801541e:	d020      	beq.n	8015462 <usart_baudrate_set+0x6a>
 8015420:	2000      	movs	r0, #0
 8015422:	68e2      	ldr	r2, [r4, #12]
 8015424:	0412      	lsls	r2, r2, #16
 8015426:	ea4f 0355 	mov.w	r3, r5, lsr #1
 801542a:	d51c      	bpl.n	8015466 <usart_baudrate_set+0x6e>
 801542c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8015430:	fbb3 f1f5 	udiv	r1, r3, r5
 8015434:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8015438:	f021 010f 	bic.w	r1, r1, #15
 801543c:	0409      	lsls	r1, r1, #16
 801543e:	0c09      	lsrs	r1, r1, #16
 8015440:	430b      	orrs	r3, r1
 8015442:	60a3      	str	r3, [r4, #8]
 8015444:	bd38      	pop	{r3, r4, r5, pc}
 8015446:	4b0c      	ldr	r3, [pc, #48]	@ (8015478 <usart_baudrate_set+0x80>)
 8015448:	e7e8      	b.n	801541c <usart_baudrate_set+0x24>
 801544a:	4b0c      	ldr	r3, [pc, #48]	@ (801547c <usart_baudrate_set+0x84>)
 801544c:	f420 6280 	bic.w	r2, r0, #1024	@ 0x400
 8015450:	429a      	cmp	r2, r3
 8015452:	d002      	beq.n	801545a <usart_baudrate_set+0x62>
 8015454:	f5a3 4314 	sub.w	r3, r3, #37888	@ 0x9400
 8015458:	e7e0      	b.n	801541c <usart_baudrate_set+0x24>
 801545a:	2003      	movs	r0, #3
 801545c:	f7ff fdc2 	bl	8014fe4 <rcu_clock_freq_get>
 8015460:	e7df      	b.n	8015422 <usart_baudrate_set+0x2a>
 8015462:	2002      	movs	r0, #2
 8015464:	e7fa      	b.n	801545c <usart_baudrate_set+0x64>
 8015466:	18c1      	adds	r1, r0, r3
 8015468:	fbb1 f1f5 	udiv	r1, r1, r5
 801546c:	b289      	uxth	r1, r1
 801546e:	60a1      	str	r1, [r4, #8]
 8015470:	e7e8      	b.n	8015444 <usart_baudrate_set+0x4c>
 8015472:	bf00      	nop
 8015474:	40007800 	andmi	r7, r0, r0, lsl #16
 8015478:	40005000 	andmi	r5, r0, r0
 801547c:	40011000 	andmi	r1, r1, r0

08015480 <usart_parity_config>:
 8015480:	68c3      	ldr	r3, [r0, #12]
 8015482:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8015486:	60c3      	str	r3, [r0, #12]
 8015488:	68c3      	ldr	r3, [r0, #12]
 801548a:	430b      	orrs	r3, r1
 801548c:	60c3      	str	r3, [r0, #12]
 801548e:	4770      	bx	lr

08015490 <usart_word_length_set>:
 8015490:	68c3      	ldr	r3, [r0, #12]
 8015492:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8015496:	60c3      	str	r3, [r0, #12]
 8015498:	68c3      	ldr	r3, [r0, #12]
 801549a:	430b      	orrs	r3, r1
 801549c:	60c3      	str	r3, [r0, #12]
 801549e:	4770      	bx	lr

080154a0 <usart_stop_bit_set>:
 80154a0:	6903      	ldr	r3, [r0, #16]
 80154a2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80154a6:	6103      	str	r3, [r0, #16]
 80154a8:	6903      	ldr	r3, [r0, #16]
 80154aa:	430b      	orrs	r3, r1
 80154ac:	6103      	str	r3, [r0, #16]
 80154ae:	4770      	bx	lr

080154b0 <usart_transmit_config>:
 80154b0:	68c3      	ldr	r3, [r0, #12]
 80154b2:	f023 0308 	bic.w	r3, r3, #8
 80154b6:	430b      	orrs	r3, r1
 80154b8:	60c3      	str	r3, [r0, #12]
 80154ba:	4770      	bx	lr

080154bc <usart_receive_config>:
 80154bc:	68c3      	ldr	r3, [r0, #12]
 80154be:	f023 0304 	bic.w	r3, r3, #4
 80154c2:	430b      	orrs	r3, r1
 80154c4:	60c3      	str	r3, [r0, #12]
 80154c6:	4770      	bx	lr

080154c8 <usart_hardware_flow_rts_config>:
 80154c8:	6943      	ldr	r3, [r0, #20]
 80154ca:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80154ce:	6143      	str	r3, [r0, #20]
 80154d0:	6943      	ldr	r3, [r0, #20]
 80154d2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80154d6:	4319      	orrs	r1, r3
 80154d8:	6141      	str	r1, [r0, #20]
 80154da:	4770      	bx	lr

080154dc <usart_hardware_flow_cts_config>:
 80154dc:	6943      	ldr	r3, [r0, #20]
 80154de:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80154e2:	6143      	str	r3, [r0, #20]
 80154e4:	6943      	ldr	r3, [r0, #20]
 80154e6:	f401 7100 	and.w	r1, r1, #512	@ 0x200
 80154ea:	4319      	orrs	r1, r3
 80154ec:	6141      	str	r1, [r0, #20]
 80154ee:	4770      	bx	lr

080154f0 <usart_flag_get>:
 80154f0:	098b      	lsrs	r3, r1, #6
 80154f2:	f001 011f 	and.w	r1, r1, #31
 80154f6:	5818      	ldr	r0, [r3, r0]
 80154f8:	40c8      	lsrs	r0, r1
 80154fa:	f000 0001 	and.w	r0, r0, #1
 80154fe:	4770      	bx	lr

08015500 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 8015500:	b110      	cbz	r0, 8015508 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x8>
 8015502:	2801      	cmp	r0, #1
 8015504:	d004      	beq.n	8015510 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x10>
 8015506:	4770      	bx	lr
 8015508:	4b03      	ldr	r3, [pc, #12]	@ (8015518 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 801550a:	f8c3 1850 	str.w	r1, [r3, #2128]	@ 0x850
 801550e:	4770      	bx	lr
 8015510:	4b01      	ldr	r3, [pc, #4]	@ (8015518 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 8015512:	f8c3 1854 	str.w	r1, [r3, #2132]	@ 0x854
 8015516:	4770      	bx	lr
 8015518:	40002000 	andmi	r2, r0, r0

0801551c <bkp_data_read(bkp_data_register_enum)>:
 801551c:	b118      	cbz	r0, 8015526 <bkp_data_read(bkp_data_register_enum)+0xa>
 801551e:	2801      	cmp	r0, #1
 8015520:	d006      	beq.n	8015530 <bkp_data_read(bkp_data_register_enum)+0x14>
 8015522:	2000      	movs	r0, #0
 8015524:	4770      	bx	lr
 8015526:	4b04      	ldr	r3, [pc, #16]	@ (8015538 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8015528:	f8d3 0850 	ldr.w	r0, [r3, #2128]	@ 0x850
 801552c:	b280      	uxth	r0, r0
 801552e:	4770      	bx	lr
 8015530:	4b01      	ldr	r3, [pc, #4]	@ (8015538 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8015532:	f8d3 0854 	ldr.w	r0, [r3, #2132]	@ 0x854
 8015536:	e7f9      	b.n	801552c <bkp_data_read(bkp_data_register_enum)+0x10>
 8015538:	40002000 	andmi	r2, r0, r0

0801553c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
 801553c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801553e:	461e      	mov	r6, r3
 8015540:	4bc3      	ldr	r3, [pc, #780]	@ (8015850 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x314>)
 8015542:	4298      	cmp	r0, r3
 8015544:	4604      	mov	r4, r0
 8015546:	460f      	mov	r7, r1
 8015548:	4615      	mov	r5, r2
 801554a:	f000 818f 	beq.w	801586c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x330>
 801554e:	d83a      	bhi.n	80155c6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x8a>
 8015550:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8015554:	4298      	cmp	r0, r3
 8015556:	f000 80f5 	beq.w	8015744 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x208>
 801555a:	f200 8122 	bhi.w	80157a2 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x266>
 801555e:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8015562:	4298      	cmp	r0, r3
 8015564:	f000 80c8 	beq.w	80156f8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x1bc>
 8015568:	f241 0012 	movw	r0, #4114	@ 0x1012
 801556c:	f7ff fcfe 	bl	8014f6c <rcu_periph_clock_enable>
 8015570:	f640 4001 	movw	r0, #3073	@ 0xc01
 8015574:	f7ff fcfa 	bl	8014f6c <rcu_periph_clock_enable>
 8015578:	48b6      	ldr	r0, [pc, #728]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 801557a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801557e:	2107      	movs	r1, #7
 8015580:	f7ff fcb0 	bl	8014ee4 <gpio_af_set>
 8015584:	48b3      	ldr	r0, [pc, #716]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8015586:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801558a:	2201      	movs	r2, #1
 801558c:	2102      	movs	r1, #2
 801558e:	f7ff fc6b 	bl	8014e68 <gpio_mode_set>
 8015592:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015596:	48af      	ldr	r0, [pc, #700]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8015598:	2202      	movs	r2, #2
 801559a:	2100      	movs	r1, #0
 801559c:	f7ff fc86 	bl	8014eac <gpio_output_options_set>
 80155a0:	48ac      	ldr	r0, [pc, #688]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 80155a2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80155a6:	2107      	movs	r1, #7
 80155a8:	f7ff fc9c 	bl	8014ee4 <gpio_af_set>
 80155ac:	48a9      	ldr	r0, [pc, #676]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 80155ae:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80155b2:	2201      	movs	r2, #1
 80155b4:	2102      	movs	r1, #2
 80155b6:	f7ff fc57 	bl	8014e68 <gpio_mode_set>
 80155ba:	48a6      	ldr	r0, [pc, #664]	@ (8015854 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 80155bc:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80155c0:	2202      	movs	r2, #2
 80155c2:	2100      	movs	r1, #0
 80155c4:	e05b      	b.n	801567e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 80155c6:	4ba4      	ldr	r3, [pc, #656]	@ (8015858 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x31c>)
 80155c8:	4298      	cmp	r0, r3
 80155ca:	d02a      	beq.n	8015622 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0xe6>
 80155cc:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80155d0:	4298      	cmp	r0, r3
 80155d2:	f000 8116 	beq.w	8015802 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x2c6>
 80155d6:	f241 001f 	movw	r0, #4127	@ 0x101f
 80155da:	f7ff fcc7 	bl	8014f6c <rcu_periph_clock_enable>
 80155de:	f640 4004 	movw	r0, #3076	@ 0xc04
 80155e2:	f7ff fcc3 	bl	8014f6c <rcu_periph_clock_enable>
 80155e6:	489d      	ldr	r0, [pc, #628]	@ (801585c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80155e8:	2202      	movs	r2, #2
 80155ea:	2108      	movs	r1, #8
 80155ec:	f7ff fc7a 	bl	8014ee4 <gpio_af_set>
 80155f0:	2302      	movs	r3, #2
 80155f2:	4619      	mov	r1, r3
 80155f4:	4899      	ldr	r0, [pc, #612]	@ (801585c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80155f6:	2201      	movs	r2, #1
 80155f8:	f7ff fc36 	bl	8014e68 <gpio_mode_set>
 80155fc:	2302      	movs	r3, #2
 80155fe:	461a      	mov	r2, r3
 8015600:	4896      	ldr	r0, [pc, #600]	@ (801585c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8015602:	2100      	movs	r1, #0
 8015604:	f7ff fc52 	bl	8014eac <gpio_output_options_set>
 8015608:	4894      	ldr	r0, [pc, #592]	@ (801585c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 801560a:	2201      	movs	r2, #1
 801560c:	2108      	movs	r1, #8
 801560e:	f7ff fc69 	bl	8014ee4 <gpio_af_set>
 8015612:	2301      	movs	r3, #1
 8015614:	461a      	mov	r2, r3
 8015616:	4891      	ldr	r0, [pc, #580]	@ (801585c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8015618:	2102      	movs	r1, #2
 801561a:	f7ff fc25 	bl	8014e68 <gpio_mode_set>
 801561e:	2301      	movs	r3, #1
 8015620:	e14c      	b.n	80158bc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x380>
 8015622:	f241 1004 	movw	r0, #4356	@ 0x1104
 8015626:	f7ff fca1 	bl	8014f6c <rcu_periph_clock_enable>
 801562a:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 801562e:	f7ff fc9d 	bl	8014f6c <rcu_periph_clock_enable>
 8015632:	488b      	ldr	r0, [pc, #556]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015634:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8015638:	2107      	movs	r1, #7
 801563a:	f7ff fc53 	bl	8014ee4 <gpio_af_set>
 801563e:	4888      	ldr	r0, [pc, #544]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015640:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015644:	2201      	movs	r2, #1
 8015646:	2102      	movs	r1, #2
 8015648:	f7ff fc0e 	bl	8014e68 <gpio_mode_set>
 801564c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015650:	4883      	ldr	r0, [pc, #524]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015652:	2202      	movs	r2, #2
 8015654:	2100      	movs	r1, #0
 8015656:	f7ff fc29 	bl	8014eac <gpio_output_options_set>
 801565a:	4881      	ldr	r0, [pc, #516]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801565c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8015660:	2107      	movs	r1, #7
 8015662:	f7ff fc3f 	bl	8014ee4 <gpio_af_set>
 8015666:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801566a:	487d      	ldr	r0, [pc, #500]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801566c:	2201      	movs	r2, #1
 801566e:	2102      	movs	r1, #2
 8015670:	f7ff fbfa 	bl	8014e68 <gpio_mode_set>
 8015674:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015678:	4879      	ldr	r0, [pc, #484]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801567a:	2202      	movs	r2, #2
 801567c:	2100      	movs	r1, #0
 801567e:	f7ff fc15 	bl	8014eac <gpio_output_options_set>
 8015682:	4620      	mov	r0, r4
 8015684:	f7ff fe56 	bl	8015334 <usart_deinit>
 8015688:	68e3      	ldr	r3, [r4, #12]
 801568a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801568e:	60e3      	str	r3, [r4, #12]
 8015690:	4639      	mov	r1, r7
 8015692:	4620      	mov	r0, r4
 8015694:	f7ff feb0 	bl	80153f8 <usart_baudrate_set>
 8015698:	f1a5 0309 	sub.w	r3, r5, #9
 801569c:	4259      	negs	r1, r3
 801569e:	4159      	adcs	r1, r3
 80156a0:	0309      	lsls	r1, r1, #12
 80156a2:	4620      	mov	r0, r4
 80156a4:	f7ff fef4 	bl	8015490 <usart_word_length_set>
 80156a8:	9906      	ldr	r1, [sp, #24]
 80156aa:	1e8a      	subs	r2, r1, #2
 80156ac:	4251      	negs	r1, r2
 80156ae:	4151      	adcs	r1, r2
 80156b0:	0349      	lsls	r1, r1, #13
 80156b2:	4620      	mov	r0, r4
 80156b4:	f7ff fef4 	bl	80154a0 <usart_stop_bit_set>
 80156b8:	2e01      	cmp	r6, #1
 80156ba:	f000 8103 	beq.w	80158c4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x388>
 80156be:	2e02      	cmp	r6, #2
 80156c0:	f040 8103 	bne.w	80158ca <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x38e>
 80156c4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80156c8:	4620      	mov	r0, r4
 80156ca:	f7ff fed9 	bl	8015480 <usart_parity_config>
 80156ce:	2100      	movs	r1, #0
 80156d0:	4620      	mov	r0, r4
 80156d2:	f7ff fef9 	bl	80154c8 <usart_hardware_flow_rts_config>
 80156d6:	2100      	movs	r1, #0
 80156d8:	4620      	mov	r0, r4
 80156da:	f7ff feff 	bl	80154dc <usart_hardware_flow_cts_config>
 80156de:	2104      	movs	r1, #4
 80156e0:	4620      	mov	r0, r4
 80156e2:	f7ff feeb 	bl	80154bc <usart_receive_config>
 80156e6:	2108      	movs	r1, #8
 80156e8:	4620      	mov	r0, r4
 80156ea:	f7ff fee1 	bl	80154b0 <usart_transmit_config>
 80156ee:	68e3      	ldr	r3, [r4, #12]
 80156f0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80156f4:	60e3      	str	r3, [r4, #12]
 80156f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80156f8:	f241 0011 	movw	r0, #4113	@ 0x1011
 80156fc:	f7ff fc36 	bl	8014f6c <rcu_periph_clock_enable>
 8015700:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8015704:	f7ff fc32 	bl	8014f6c <rcu_periph_clock_enable>
 8015708:	4855      	ldr	r0, [pc, #340]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801570a:	2204      	movs	r2, #4
 801570c:	2107      	movs	r1, #7
 801570e:	f7ff fbe9 	bl	8014ee4 <gpio_af_set>
 8015712:	4853      	ldr	r0, [pc, #332]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015714:	2304      	movs	r3, #4
 8015716:	2201      	movs	r2, #1
 8015718:	2102      	movs	r1, #2
 801571a:	f7ff fba5 	bl	8014e68 <gpio_mode_set>
 801571e:	2304      	movs	r3, #4
 8015720:	484f      	ldr	r0, [pc, #316]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015722:	2202      	movs	r2, #2
 8015724:	2100      	movs	r1, #0
 8015726:	f7ff fbc1 	bl	8014eac <gpio_output_options_set>
 801572a:	484d      	ldr	r0, [pc, #308]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801572c:	2208      	movs	r2, #8
 801572e:	2107      	movs	r1, #7
 8015730:	f7ff fbd8 	bl	8014ee4 <gpio_af_set>
 8015734:	2308      	movs	r3, #8
 8015736:	484a      	ldr	r0, [pc, #296]	@ (8015860 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8015738:	2201      	movs	r2, #1
 801573a:	2102      	movs	r1, #2
 801573c:	f7ff fb94 	bl	8014e68 <gpio_mode_set>
 8015740:	2308      	movs	r3, #8
 8015742:	e799      	b.n	8015678 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x13c>
 8015744:	f241 0013 	movw	r0, #4115	@ 0x1013
 8015748:	f7ff fc10 	bl	8014f6c <rcu_periph_clock_enable>
 801574c:	f640 4002 	movw	r0, #3074	@ 0xc02
 8015750:	f7ff fc0c 	bl	8014f6c <rcu_periph_clock_enable>
 8015754:	4843      	ldr	r0, [pc, #268]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015756:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801575a:	2108      	movs	r1, #8
 801575c:	f7ff fbc2 	bl	8014ee4 <gpio_af_set>
 8015760:	4840      	ldr	r0, [pc, #256]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015762:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015766:	2201      	movs	r2, #1
 8015768:	2102      	movs	r1, #2
 801576a:	f7ff fb7d 	bl	8014e68 <gpio_mode_set>
 801576e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015772:	483c      	ldr	r0, [pc, #240]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015774:	2202      	movs	r2, #2
 8015776:	2100      	movs	r1, #0
 8015778:	f7ff fb98 	bl	8014eac <gpio_output_options_set>
 801577c:	4839      	ldr	r0, [pc, #228]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801577e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8015782:	2108      	movs	r1, #8
 8015784:	f7ff fbae 	bl	8014ee4 <gpio_af_set>
 8015788:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801578c:	4835      	ldr	r0, [pc, #212]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801578e:	2201      	movs	r2, #1
 8015790:	2102      	movs	r1, #2
 8015792:	f7ff fb69 	bl	8014e68 <gpio_mode_set>
 8015796:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801579a:	4832      	ldr	r0, [pc, #200]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801579c:	2202      	movs	r2, #2
 801579e:	2100      	movs	r1, #0
 80157a0:	e76d      	b.n	801567e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 80157a2:	f241 0014 	movw	r0, #4116	@ 0x1014
 80157a6:	f7ff fbe1 	bl	8014f6c <rcu_periph_clock_enable>
 80157aa:	f640 4002 	movw	r0, #3074	@ 0xc02
 80157ae:	f7ff fbdd 	bl	8014f6c <rcu_periph_clock_enable>
 80157b2:	f640 4003 	movw	r0, #3075	@ 0xc03
 80157b6:	f7ff fbd9 	bl	8014f6c <rcu_periph_clock_enable>
 80157ba:	482a      	ldr	r0, [pc, #168]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80157bc:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80157c0:	2108      	movs	r1, #8
 80157c2:	f7ff fb8f 	bl	8014ee4 <gpio_af_set>
 80157c6:	4827      	ldr	r0, [pc, #156]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80157c8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80157cc:	2201      	movs	r2, #1
 80157ce:	2102      	movs	r1, #2
 80157d0:	f7ff fb4a 	bl	8014e68 <gpio_mode_set>
 80157d4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80157d8:	4822      	ldr	r0, [pc, #136]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80157da:	2202      	movs	r2, #2
 80157dc:	2100      	movs	r1, #0
 80157de:	f7ff fb65 	bl	8014eac <gpio_output_options_set>
 80157e2:	4821      	ldr	r0, [pc, #132]	@ (8015868 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 80157e4:	2204      	movs	r2, #4
 80157e6:	2108      	movs	r1, #8
 80157e8:	f7ff fb7c 	bl	8014ee4 <gpio_af_set>
 80157ec:	481e      	ldr	r0, [pc, #120]	@ (8015868 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 80157ee:	2304      	movs	r3, #4
 80157f0:	2201      	movs	r2, #1
 80157f2:	2102      	movs	r1, #2
 80157f4:	f7ff fb38 	bl	8014e68 <gpio_mode_set>
 80157f8:	481b      	ldr	r0, [pc, #108]	@ (8015868 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 80157fa:	2304      	movs	r3, #4
 80157fc:	2202      	movs	r2, #2
 80157fe:	2100      	movs	r1, #0
 8015800:	e73d      	b.n	801567e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8015802:	f241 1005 	movw	r0, #4357	@ 0x1105
 8015806:	f7ff fbb1 	bl	8014f6c <rcu_periph_clock_enable>
 801580a:	f640 4002 	movw	r0, #3074	@ 0xc02
 801580e:	f7ff fbad 	bl	8014f6c <rcu_periph_clock_enable>
 8015812:	4814      	ldr	r0, [pc, #80]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015814:	2240      	movs	r2, #64	@ 0x40
 8015816:	2108      	movs	r1, #8
 8015818:	f7ff fb64 	bl	8014ee4 <gpio_af_set>
 801581c:	4811      	ldr	r0, [pc, #68]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801581e:	2340      	movs	r3, #64	@ 0x40
 8015820:	2201      	movs	r2, #1
 8015822:	2102      	movs	r1, #2
 8015824:	f7ff fb20 	bl	8014e68 <gpio_mode_set>
 8015828:	2340      	movs	r3, #64	@ 0x40
 801582a:	480e      	ldr	r0, [pc, #56]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801582c:	2202      	movs	r2, #2
 801582e:	2100      	movs	r1, #0
 8015830:	f7ff fb3c 	bl	8014eac <gpio_output_options_set>
 8015834:	480b      	ldr	r0, [pc, #44]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015836:	2280      	movs	r2, #128	@ 0x80
 8015838:	2108      	movs	r1, #8
 801583a:	f7ff fb53 	bl	8014ee4 <gpio_af_set>
 801583e:	2380      	movs	r3, #128	@ 0x80
 8015840:	4808      	ldr	r0, [pc, #32]	@ (8015864 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8015842:	2201      	movs	r2, #1
 8015844:	2102      	movs	r1, #2
 8015846:	f7ff fb0f 	bl	8014e68 <gpio_mode_set>
 801584a:	2380      	movs	r3, #128	@ 0x80
 801584c:	e7a5      	b.n	801579a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x25e>
 801584e:	bf00      	nop
 8015850:	40007800 	andmi	r7, r0, r0, lsl #16
 8015854:	40020400 	andmi	r0, r2, r0, lsl #8
 8015858:	40011000 	andmi	r1, r1, r0
 801585c:	40021000 	andmi	r1, r2, r0
 8015860:	40020000 	andmi	r0, r2, r0
 8015864:	40020800 	andmi	r0, r2, r0, lsl #16
 8015868:	40020c00 	andmi	r0, r2, r0, lsl #24
 801586c:	f241 001e 	movw	r0, #4126	@ 0x101e
 8015870:	f7ff fb7c 	bl	8014f6c <rcu_periph_clock_enable>
 8015874:	f640 4004 	movw	r0, #3076	@ 0xc04
 8015878:	f7ff fb78 	bl	8014f6c <rcu_periph_clock_enable>
 801587c:	4814      	ldr	r0, [pc, #80]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801587e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015882:	2108      	movs	r1, #8
 8015884:	f7ff fb2e 	bl	8014ee4 <gpio_af_set>
 8015888:	4811      	ldr	r0, [pc, #68]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801588a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801588e:	2201      	movs	r2, #1
 8015890:	2102      	movs	r1, #2
 8015892:	f7ff fae9 	bl	8014e68 <gpio_mode_set>
 8015896:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801589a:	480d      	ldr	r0, [pc, #52]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801589c:	2202      	movs	r2, #2
 801589e:	2100      	movs	r1, #0
 80158a0:	f7ff fb04 	bl	8014eac <gpio_output_options_set>
 80158a4:	480a      	ldr	r0, [pc, #40]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80158a6:	2280      	movs	r2, #128	@ 0x80
 80158a8:	2108      	movs	r1, #8
 80158aa:	f7ff fb1b 	bl	8014ee4 <gpio_af_set>
 80158ae:	2380      	movs	r3, #128	@ 0x80
 80158b0:	4807      	ldr	r0, [pc, #28]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80158b2:	2201      	movs	r2, #1
 80158b4:	2102      	movs	r1, #2
 80158b6:	f7ff fad7 	bl	8014e68 <gpio_mode_set>
 80158ba:	2380      	movs	r3, #128	@ 0x80
 80158bc:	4804      	ldr	r0, [pc, #16]	@ (80158d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80158be:	2202      	movs	r2, #2
 80158c0:	2100      	movs	r1, #0
 80158c2:	e6dc      	b.n	801567e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 80158c4:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 80158c8:	e6fe      	b.n	80156c8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 80158ca:	2100      	movs	r1, #0
 80158cc:	e6fc      	b.n	80156c8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 80158ce:	bf00      	nop
 80158d0:	40021000 	andmi	r1, r2, r0

080158d4 <mac_address_get(unsigned char*)>:
 80158d4:	4a07      	ldr	r2, [pc, #28]	@ (80158f4 <mac_address_get(unsigned char*)+0x20>)
 80158d6:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 80158da:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	@ 0xa14
 80158de:	7042      	strb	r2, [r0, #1]
 80158e0:	0e1a      	lsrs	r2, r3, #24
 80158e2:	7082      	strb	r2, [r0, #2]
 80158e4:	0c1a      	lsrs	r2, r3, #16
 80158e6:	2102      	movs	r1, #2
 80158e8:	70c2      	strb	r2, [r0, #3]
 80158ea:	0a1a      	lsrs	r2, r3, #8
 80158ec:	7001      	strb	r1, [r0, #0]
 80158ee:	7102      	strb	r2, [r0, #4]
 80158f0:	7143      	strb	r3, [r0, #5]
 80158f2:	4770      	bx	lr
 80158f4:	1fff7000 	svcne	0x00ff7000

080158f8 <timer6_config()>:
 80158f8:	b530      	push	{r4, r5, lr}
 80158fa:	4b19      	ldr	r3, [pc, #100]	@ (8015960 <timer6_config()+0x68>)
 80158fc:	4c19      	ldr	r4, [pc, #100]	@ (8015964 <timer6_config()+0x6c>)
 80158fe:	b085      	sub	sp, #20
 8015900:	2500      	movs	r5, #0
 8015902:	f241 0005 	movw	r0, #4101	@ 0x1005
 8015906:	605d      	str	r5, [r3, #4]
 8015908:	f7ff fb30 	bl	8014f6c <rcu_periph_clock_enable>
 801590c:	4620      	mov	r0, r4
 801590e:	f7ff fbe9 	bl	80150e4 <timer_deinit>
 8015912:	4668      	mov	r0, sp
 8015914:	f7ff fc8c 	bl	8015230 <timer_struct_para_init>
 8015918:	f645 52bf 	movw	r2, #23999	@ 0x5dbf
 801591c:	f242 730f 	movw	r3, #9999	@ 0x270f
 8015920:	4669      	mov	r1, sp
 8015922:	4620      	mov	r0, r4
 8015924:	f8ad 2000 	strh.w	r2, [sp]
 8015928:	9302      	str	r3, [sp, #8]
 801592a:	f7ff fc89 	bl	8015240 <timer_init>
 801592e:	4629      	mov	r1, r5
 8015930:	4620      	mov	r0, r4
 8015932:	f7ff fcbe 	bl	80152b2 <timer_counter_value_config>
 8015936:	4620      	mov	r0, r4
 8015938:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 801593c:	f7ff fcf6 	bl	801532c <timer_interrupt_flag_clear>
 8015940:	2101      	movs	r1, #1
 8015942:	4620      	mov	r0, r4
 8015944:	f7ff fcee 	bl	8015324 <timer_interrupt_enable>
 8015948:	4b07      	ldr	r3, [pc, #28]	@ (8015968 <timer6_config()+0x70>)
 801594a:	22f0      	movs	r2, #240	@ 0xf0
 801594c:	f883 2337 	strb.w	r2, [r3, #823]	@ 0x337
 8015950:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8015954:	605a      	str	r2, [r3, #4]
 8015956:	4620      	mov	r0, r4
 8015958:	f7ff fca6 	bl	80152a8 <timer_enable>
 801595c:	b005      	add	sp, #20
 801595e:	bd30      	pop	{r4, r5, pc}
 8015960:	20009ae0 	andcs	r9, r0, r0, ror #21
 8015964:	40001400 	andmi	r1, r0, r0, lsl #8
 8015968:	e000e100 	and	lr, r0, r0, lsl #2

0801596c <udelay_init()>:
 801596c:	4a07      	ldr	r2, [pc, #28]	@ (801598c <udelay_init()+0x20>)
 801596e:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 8015972:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8015976:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
 801597a:	4b05      	ldr	r3, [pc, #20]	@ (8015990 <udelay_init()+0x24>)
 801597c:	2200      	movs	r2, #0
 801597e:	605a      	str	r2, [r3, #4]
 8015980:	681a      	ldr	r2, [r3, #0]
 8015982:	f042 0201 	orr.w	r2, r2, #1
 8015986:	601a      	str	r2, [r3, #0]
 8015988:	4770      	bx	lr
 801598a:	bf00      	nop
 801598c:	e000ed00 	and	lr, r0, r0, lsl #26
 8015990:	e0001000 	and	r1, r0, r0

08015994 <udelay(unsigned long, unsigned long)>:
 8015994:	23f0      	movs	r3, #240	@ 0xf0
 8015996:	b530      	push	{r4, r5, lr}
 8015998:	4358      	muls	r0, r3
 801599a:	b909      	cbnz	r1, 80159a0 <udelay(unsigned long, unsigned long)+0xc>
 801599c:	4b08      	ldr	r3, [pc, #32]	@ (80159c0 <udelay(unsigned long, unsigned long)+0x2c>)
 801599e:	6859      	ldr	r1, [r3, #4]
 80159a0:	4c07      	ldr	r4, [pc, #28]	@ (80159c0 <udelay(unsigned long, unsigned long)+0x2c>)
 80159a2:	2300      	movs	r3, #0
 80159a4:	6862      	ldr	r2, [r4, #4]
 80159a6:	4291      	cmp	r1, r2
 80159a8:	d0fc      	beq.n	80159a4 <udelay(unsigned long, unsigned long)+0x10>
 80159aa:	bf2a      	itet	cs
 80159ac:	f102 35ff 	addcs.w	r5, r2, #4294967295	@ 0xffffffff
 80159b0:	189b      	addcc	r3, r3, r2
 80159b2:	195b      	addcs	r3, r3, r5
 80159b4:	1a5b      	subs	r3, r3, r1
 80159b6:	4283      	cmp	r3, r0
 80159b8:	d300      	bcc.n	80159bc <udelay(unsigned long, unsigned long)+0x28>
 80159ba:	bd30      	pop	{r4, r5, pc}
 80159bc:	4611      	mov	r1, r2
 80159be:	e7f1      	b.n	80159a4 <udelay(unsigned long, unsigned long)+0x10>
 80159c0:	e0001000 	and	r1, r0, r0

080159c4 <systick_config>:
 80159c4:	4b0c      	ldr	r3, [pc, #48]	@ (80159f8 <systick_config+0x34>)
 80159c6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80159ca:	681b      	ldr	r3, [r3, #0]
 80159cc:	fbb3 f3f2 	udiv	r3, r3, r2
 80159d0:	3b01      	subs	r3, #1
 80159d2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80159d6:	d20d      	bcs.n	80159f4 <systick_config+0x30>
 80159d8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80159dc:	21f0      	movs	r1, #240	@ 0xf0
 80159de:	6153      	str	r3, [r2, #20]
 80159e0:	4b06      	ldr	r3, [pc, #24]	@ (80159fc <systick_config+0x38>)
 80159e2:	2000      	movs	r0, #0
 80159e4:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 80159e8:	6190      	str	r0, [r2, #24]
 80159ea:	2007      	movs	r0, #7
 80159ec:	6110      	str	r0, [r2, #16]
 80159ee:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 80159f2:	4770      	bx	lr
 80159f4:	e7fe      	b.n	80159f4 <systick_config+0x30>
 80159f6:	bf00      	nop
 80159f8:	20000000 	andcs	r0, r0, r0
 80159fc:	e000ed00 	and	lr, r0, r0, lsl #26

08015a00 <SysTick_Handler>:
 8015a00:	4a02      	ldr	r2, [pc, #8]	@ (8015a0c <SysTick_Handler+0xc>)
 8015a02:	6813      	ldr	r3, [r2, #0]
 8015a04:	3301      	adds	r3, #1
 8015a06:	6013      	str	r3, [r2, #0]
 8015a08:	4770      	bx	lr
 8015a0a:	bf00      	nop
 8015a0c:	20009ae8 	andcs	r9, r0, r8, ror #21

08015a10 <gd32_adc_init()>:
 8015a10:	b510      	push	{r4, lr}
 8015a12:	f241 1008 	movw	r0, #4360	@ 0x1108
 8015a16:	4c24      	ldr	r4, [pc, #144]	@ (8015aa8 <gd32_adc_init()+0x98>)
 8015a18:	f7ff faa8 	bl	8014f6c <rcu_periph_clock_enable>
 8015a1c:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 8015a20:	f000 f9f6 	bl	8015e10 <adc_clock_config>
 8015a24:	4620      	mov	r0, r4
 8015a26:	2203      	movs	r2, #3
 8015a28:	2102      	movs	r1, #2
 8015a2a:	f000 fa73 	bl	8015f14 <adc_channel_length_config>
 8015a2e:	4620      	mov	r0, r4
 8015a30:	2306      	movs	r3, #6
 8015a32:	2210      	movs	r2, #16
 8015a34:	2100      	movs	r1, #0
 8015a36:	f000 fa8a 	bl	8015f4e <adc_inserted_channel_config>
 8015a3a:	4620      	mov	r0, r4
 8015a3c:	2306      	movs	r3, #6
 8015a3e:	2211      	movs	r2, #17
 8015a40:	2101      	movs	r1, #1
 8015a42:	f000 fa84 	bl	8015f4e <adc_inserted_channel_config>
 8015a46:	2306      	movs	r3, #6
 8015a48:	4620      	mov	r0, r4
 8015a4a:	2212      	movs	r2, #18
 8015a4c:	2102      	movs	r1, #2
 8015a4e:	f000 fa7e 	bl	8015f4e <adc_inserted_channel_config>
 8015a52:	2200      	movs	r2, #0
 8015a54:	4620      	mov	r0, r4
 8015a56:	2102      	movs	r1, #2
 8015a58:	f000 faa9 	bl	8015fae <adc_external_trigger_config>
 8015a5c:	4620      	mov	r0, r4
 8015a5e:	2100      	movs	r1, #0
 8015a60:	f000 fa0e 	bl	8015e80 <adc_data_alignment_config>
 8015a64:	2201      	movs	r2, #1
 8015a66:	4620      	mov	r0, r4
 8015a68:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8015a6c:	f000 f9e0 	bl	8015e30 <adc_special_function_config>
 8015a70:	2101      	movs	r1, #1
 8015a72:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8015a76:	f000 fa25 	bl	8015ec4 <adc_channel_16_to_18>
 8015a7a:	2101      	movs	r1, #1
 8015a7c:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8015a80:	f000 fa20 	bl	8015ec4 <adc_channel_16_to_18>
 8015a84:	4620      	mov	r0, r4
 8015a86:	f000 fa04 	bl	8015e92 <adc_enable>
 8015a8a:	2100      	movs	r1, #0
 8015a8c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8015a90:	f7ff ff80 	bl	8015994 <udelay(unsigned long, unsigned long)>
 8015a94:	4620      	mov	r0, r4
 8015a96:	f000 fa04 	bl	8015ea2 <adc_calibration_enable>
 8015a9a:	4620      	mov	r0, r4
 8015a9c:	2102      	movs	r1, #2
 8015a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015aa2:	f000 ba9a 	b.w	8015fda <adc_software_trigger_enable>
 8015aa6:	bf00      	nop
 8015aa8:	40012000 	andmi	r2, r1, r0

08015aac <send_stop() [clone .isra.0]>:
 8015aac:	b508      	push	{r3, lr}
 8015aae:	4806      	ldr	r0, [pc, #24]	@ (8015ac8 <send_stop() [clone .isra.0]+0x1c>)
 8015ab0:	f000 fb22 	bl	80160f8 <i2c_stop_on_bus>
 8015ab4:	4905      	ldr	r1, [pc, #20]	@ (8015acc <send_stop() [clone .isra.0]+0x20>)
 8015ab6:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8015aba:	f8d1 2400 	ldr.w	r2, [r1, #1024]	@ 0x400
 8015abe:	0592      	lsls	r2, r2, #22
 8015ac0:	d501      	bpl.n	8015ac6 <send_stop() [clone .isra.0]+0x1a>
 8015ac2:	3b01      	subs	r3, #1
 8015ac4:	d1f9      	bne.n	8015aba <send_stop() [clone .isra.0]+0xe>
 8015ac6:	bd08      	pop	{r3, pc}
 8015ac8:	40005400 	andmi	r5, r0, r0, lsl #8
 8015acc:	40005000 	andmi	r5, r0, r0

08015ad0 <gd32_i2c_begin>:
 8015ad0:	b510      	push	{r4, lr}
 8015ad2:	f241 0015 	movw	r0, #4117	@ 0x1015
 8015ad6:	4c22      	ldr	r4, [pc, #136]	@ (8015b60 <gd32_i2c_begin+0x90>)
 8015ad8:	f7ff fa48 	bl	8014f6c <rcu_periph_clock_enable>
 8015adc:	f640 4001 	movw	r0, #3073	@ 0xc01
 8015ae0:	f7ff fa44 	bl	8014f6c <rcu_periph_clock_enable>
 8015ae4:	f640 4001 	movw	r0, #3073	@ 0xc01
 8015ae8:	f7ff fa40 	bl	8014f6c <rcu_periph_clock_enable>
 8015aec:	4620      	mov	r0, r4
 8015aee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015af2:	2104      	movs	r1, #4
 8015af4:	f7ff f9f6 	bl	8014ee4 <gpio_af_set>
 8015af8:	4620      	mov	r0, r4
 8015afa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8015afe:	2201      	movs	r2, #1
 8015b00:	2102      	movs	r1, #2
 8015b02:	f7ff f9b1 	bl	8014e68 <gpio_mode_set>
 8015b06:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8015b0a:	4620      	mov	r0, r4
 8015b0c:	2202      	movs	r2, #2
 8015b0e:	2101      	movs	r1, #1
 8015b10:	f7ff f9cc 	bl	8014eac <gpio_output_options_set>
 8015b14:	4620      	mov	r0, r4
 8015b16:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8015b1a:	2104      	movs	r1, #4
 8015b1c:	f7ff f9e2 	bl	8014ee4 <gpio_af_set>
 8015b20:	4620      	mov	r0, r4
 8015b22:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015b26:	2201      	movs	r2, #1
 8015b28:	2102      	movs	r1, #2
 8015b2a:	f7ff f99d 	bl	8014e68 <gpio_mode_set>
 8015b2e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015b32:	4620      	mov	r0, r4
 8015b34:	2202      	movs	r2, #2
 8015b36:	f5a4 34d8 	sub.w	r4, r4, #110592	@ 0x1b000
 8015b3a:	2101      	movs	r1, #1
 8015b3c:	f7ff f9b6 	bl	8014eac <gpio_output_options_set>
 8015b40:	4908      	ldr	r1, [pc, #32]	@ (8015b64 <gd32_i2c_begin+0x94>)
 8015b42:	4620      	mov	r0, r4
 8015b44:	2200      	movs	r2, #0
 8015b46:	f000 fa57 	bl	8015ff8 <i2c_clock_config>
 8015b4a:	4620      	mov	r0, r4
 8015b4c:	f000 faca 	bl	80160e4 <i2c_enable>
 8015b50:	4620      	mov	r0, r4
 8015b52:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8015b56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b5a:	f000 baaf 	b.w	80160bc <i2c_ack_config>
 8015b5e:	bf00      	nop
 8015b60:	40020400 	andmi	r0, r2, r0, lsl #8
 8015b64:	00061a80 	andeq	r1, r6, r0, lsl #21

08015b68 <gd32_i2c_set_baudrate>:
 8015b68:	4601      	mov	r1, r0
 8015b6a:	2200      	movs	r2, #0
 8015b6c:	4801      	ldr	r0, [pc, #4]	@ (8015b74 <gd32_i2c_set_baudrate+0xc>)
 8015b6e:	f000 ba43 	b.w	8015ff8 <i2c_clock_config>
 8015b72:	bf00      	nop
 8015b74:	40005400 	andmi	r5, r0, r0, lsl #8

08015b78 <gd32_i2c_set_address>:
 8015b78:	4b01      	ldr	r3, [pc, #4]	@ (8015b80 <gd32_i2c_set_address+0x8>)
 8015b7a:	0040      	lsls	r0, r0, #1
 8015b7c:	7018      	strb	r0, [r3, #0]
 8015b7e:	4770      	bx	lr
 8015b80:	20009aec 	andcs	r9, r0, ip, ror #21

08015b84 <gd32_i2c_write>:
 8015b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b86:	4f30      	ldr	r7, [pc, #192]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015b88:	4604      	mov	r4, r0
 8015b8a:	460d      	mov	r5, r1
 8015b8c:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015b90:	f240 6101 	movw	r1, #1537	@ 0x601
 8015b94:	4638      	mov	r0, r7
 8015b96:	f000 fab9 	bl	801610c <i2c_flag_get>
 8015b9a:	bb90      	cbnz	r0, 8015c02 <gd32_i2c_write+0x7e>
 8015b9c:	482a      	ldr	r0, [pc, #168]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015b9e:	4f2a      	ldr	r7, [pc, #168]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015ba0:	f000 faa5 	bl	80160ee <i2c_start_on_bus>
 8015ba4:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015ba8:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8015bac:	4638      	mov	r0, r7
 8015bae:	f000 faad 	bl	801610c <i2c_flag_get>
 8015bb2:	b370      	cbz	r0, 8015c12 <gd32_i2c_write+0x8e>
 8015bb4:	4b25      	ldr	r3, [pc, #148]	@ (8015c4c <gd32_i2c_write+0xc8>)
 8015bb6:	4824      	ldr	r0, [pc, #144]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015bb8:	7819      	ldrb	r1, [r3, #0]
 8015bba:	4f23      	ldr	r7, [pc, #140]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015bbc:	f06f 0201 	mvn.w	r2, #1
 8015bc0:	f000 fa88 	bl	80160d4 <i2c_master_addressing>
 8015bc4:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015bc8:	f240 5101 	movw	r1, #1281	@ 0x501
 8015bcc:	4638      	mov	r0, r7
 8015bce:	f000 fa9d 	bl	801610c <i2c_flag_get>
 8015bd2:	b308      	cbz	r0, 8015c18 <gd32_i2c_write+0x94>
 8015bd4:	481c      	ldr	r0, [pc, #112]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015bd6:	4f1c      	ldr	r7, [pc, #112]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015bd8:	f240 5101 	movw	r1, #1281	@ 0x501
 8015bdc:	f000 fa9e 	bl	801611c <i2c_flag_clear>
 8015be0:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015be4:	f240 5107 	movw	r1, #1287	@ 0x507
 8015be8:	4638      	mov	r0, r7
 8015bea:	f000 fa8f 	bl	801610c <i2c_flag_get>
 8015bee:	2801      	cmp	r0, #1
 8015bf0:	d115      	bne.n	8015c1e <gd32_i2c_write+0x9a>
 8015bf2:	4f15      	ldr	r7, [pc, #84]	@ (8015c48 <gd32_i2c_write+0xc4>)
 8015bf4:	4425      	add	r5, r4
 8015bf6:	42ac      	cmp	r4, r5
 8015bf8:	d114      	bne.n	8015c24 <gd32_i2c_write+0xa0>
 8015bfa:	f7ff ff57 	bl	8015aac <send_stop() [clone .isra.0]>
 8015bfe:	2000      	movs	r0, #0
 8015c00:	e005      	b.n	8015c0e <gd32_i2c_write+0x8a>
 8015c02:	3e01      	subs	r6, #1
 8015c04:	d1c4      	bne.n	8015b90 <gd32_i2c_write+0xc>
 8015c06:	f7ff ff51 	bl	8015aac <send_stop() [clone .isra.0]>
 8015c0a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8015c0e:	4240      	negs	r0, r0
 8015c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c12:	3e01      	subs	r6, #1
 8015c14:	d1c8      	bne.n	8015ba8 <gd32_i2c_write+0x24>
 8015c16:	e7f6      	b.n	8015c06 <gd32_i2c_write+0x82>
 8015c18:	3e01      	subs	r6, #1
 8015c1a:	d1d5      	bne.n	8015bc8 <gd32_i2c_write+0x44>
 8015c1c:	e7f3      	b.n	8015c06 <gd32_i2c_write+0x82>
 8015c1e:	3e01      	subs	r6, #1
 8015c20:	d1e0      	bne.n	8015be4 <gd32_i2c_write+0x60>
 8015c22:	e7f0      	b.n	8015c06 <gd32_i2c_write+0x82>
 8015c24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015c28:	4638      	mov	r0, r7
 8015c2a:	f000 fa6a 	bl	8016102 <i2c_data_transmit>
 8015c2e:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015c32:	f240 5102 	movw	r1, #1282	@ 0x502
 8015c36:	4638      	mov	r0, r7
 8015c38:	f000 fa68 	bl	801610c <i2c_flag_get>
 8015c3c:	2800      	cmp	r0, #0
 8015c3e:	d1da      	bne.n	8015bf6 <gd32_i2c_write+0x72>
 8015c40:	3e01      	subs	r6, #1
 8015c42:	d1f6      	bne.n	8015c32 <gd32_i2c_write+0xae>
 8015c44:	e7df      	b.n	8015c06 <gd32_i2c_write+0x82>
 8015c46:	bf00      	nop
 8015c48:	40005400 	andmi	r5, r0, r0, lsl #8
 8015c4c:	20009aec 	andcs	r9, r0, ip, ror #21

08015c50 <gd32_i2c_read>:
 8015c50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015c54:	4f4e      	ldr	r7, [pc, #312]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015c56:	4680      	mov	r8, r0
 8015c58:	460c      	mov	r4, r1
 8015c5a:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015c5e:	f240 6101 	movw	r1, #1537	@ 0x601
 8015c62:	4638      	mov	r0, r7
 8015c64:	f000 fa52 	bl	801610c <i2c_flag_get>
 8015c68:	4606      	mov	r6, r0
 8015c6a:	bb10      	cbnz	r0, 8015cb2 <gd32_i2c_read+0x62>
 8015c6c:	2c02      	cmp	r4, #2
 8015c6e:	d104      	bne.n	8015c7a <gd32_i2c_read+0x2a>
 8015c70:	4847      	ldr	r0, [pc, #284]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015c72:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8015c76:	f000 fa27 	bl	80160c8 <i2c_ackpos_config>
 8015c7a:	4845      	ldr	r0, [pc, #276]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015c7c:	4f44      	ldr	r7, [pc, #272]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015c7e:	f000 fa36 	bl	80160ee <i2c_start_on_bus>
 8015c82:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015c86:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8015c8a:	4638      	mov	r0, r7
 8015c8c:	f000 fa3e 	bl	801610c <i2c_flag_get>
 8015c90:	b1b8      	cbz	r0, 8015cc2 <gd32_i2c_read+0x72>
 8015c92:	4b40      	ldr	r3, [pc, #256]	@ (8015d94 <gd32_i2c_read+0x144>)
 8015c94:	483e      	ldr	r0, [pc, #248]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015c96:	7819      	ldrb	r1, [r3, #0]
 8015c98:	2201      	movs	r2, #1
 8015c9a:	f000 fa1b 	bl	80160d4 <i2c_master_addressing>
 8015c9e:	2c02      	cmp	r4, #2
 8015ca0:	d803      	bhi.n	8015caa <gd32_i2c_read+0x5a>
 8015ca2:	483b      	ldr	r0, [pc, #236]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015ca4:	2100      	movs	r1, #0
 8015ca6:	f000 fa09 	bl	80160bc <i2c_ack_config>
 8015caa:	4f39      	ldr	r7, [pc, #228]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015cac:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015cb0:	e00c      	b.n	8015ccc <gd32_i2c_read+0x7c>
 8015cb2:	3d01      	subs	r5, #1
 8015cb4:	d1d3      	bne.n	8015c5e <gd32_i2c_read+0xe>
 8015cb6:	f7ff fef9 	bl	8015aac <send_stop() [clone .isra.0]>
 8015cba:	2604      	movs	r6, #4
 8015cbc:	4630      	mov	r0, r6
 8015cbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015cc2:	3d01      	subs	r5, #1
 8015cc4:	d1df      	bne.n	8015c86 <gd32_i2c_read+0x36>
 8015cc6:	e7f6      	b.n	8015cb6 <gd32_i2c_read+0x66>
 8015cc8:	3d01      	subs	r5, #1
 8015cca:	d0f4      	beq.n	8015cb6 <gd32_i2c_read+0x66>
 8015ccc:	f240 5101 	movw	r1, #1281	@ 0x501
 8015cd0:	4638      	mov	r0, r7
 8015cd2:	f000 fa1b 	bl	801610c <i2c_flag_get>
 8015cd6:	2800      	cmp	r0, #0
 8015cd8:	d0f6      	beq.n	8015cc8 <gd32_i2c_read+0x78>
 8015cda:	482d      	ldr	r0, [pc, #180]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015cdc:	f240 5101 	movw	r1, #1281	@ 0x501
 8015ce0:	f000 fa1c 	bl	801611c <i2c_flag_clear>
 8015ce4:	2c01      	cmp	r4, #1
 8015ce6:	d102      	bne.n	8015cee <gd32_i2c_read+0x9e>
 8015ce8:	4829      	ldr	r0, [pc, #164]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015cea:	f000 fa05 	bl	80160f8 <i2c_stop_on_bus>
 8015cee:	4d28      	ldr	r5, [pc, #160]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015cf0:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8015cf4:	e022      	b.n	8015d3c <gd32_i2c_read+0xec>
 8015cf6:	2c03      	cmp	r4, #3
 8015cf8:	d134      	bne.n	8015d64 <gd32_i2c_read+0x114>
 8015cfa:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8015cfe:	e002      	b.n	8015d06 <gd32_i2c_read+0xb6>
 8015d00:	f1b9 0901 	subs.w	r9, r9, #1
 8015d04:	d0d7      	beq.n	8015cb6 <gd32_i2c_read+0x66>
 8015d06:	f240 5102 	movw	r1, #1282	@ 0x502
 8015d0a:	4628      	mov	r0, r5
 8015d0c:	f000 f9fe 	bl	801610c <i2c_flag_get>
 8015d10:	2800      	cmp	r0, #0
 8015d12:	d0f5      	beq.n	8015d00 <gd32_i2c_read+0xb0>
 8015d14:	2100      	movs	r1, #0
 8015d16:	4628      	mov	r0, r5
 8015d18:	f000 f9d0 	bl	80160bc <i2c_ack_config>
 8015d1c:	f240 5106 	movw	r1, #1286	@ 0x506
 8015d20:	4628      	mov	r0, r5
 8015d22:	f000 f9f3 	bl	801610c <i2c_flag_get>
 8015d26:	b138      	cbz	r0, 8015d38 <gd32_i2c_read+0xe8>
 8015d28:	4628      	mov	r0, r5
 8015d2a:	f000 f9ec 	bl	8016106 <i2c_data_receive>
 8015d2e:	f808 0b01 	strb.w	r0, [r8], #1
 8015d32:	3c01      	subs	r4, #1
 8015d34:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8015d38:	3f01      	subs	r7, #1
 8015d3a:	d0bc      	beq.n	8015cb6 <gd32_i2c_read+0x66>
 8015d3c:	2c00      	cmp	r4, #0
 8015d3e:	d1da      	bne.n	8015cf6 <gd32_i2c_read+0xa6>
 8015d40:	4a15      	ldr	r2, [pc, #84]	@ (8015d98 <gd32_i2c_read+0x148>)
 8015d42:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8015d46:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 8015d4a:	f414 7400 	ands.w	r4, r4, #512	@ 0x200
 8015d4e:	d11c      	bne.n	8015d8a <gd32_i2c_read+0x13a>
 8015d50:	480f      	ldr	r0, [pc, #60]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015d52:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8015d56:	f000 f9b1 	bl	80160bc <i2c_ack_config>
 8015d5a:	480d      	ldr	r0, [pc, #52]	@ (8015d90 <gd32_i2c_read+0x140>)
 8015d5c:	4621      	mov	r1, r4
 8015d5e:	f000 f9b3 	bl	80160c8 <i2c_ackpos_config>
 8015d62:	e7ab      	b.n	8015cbc <gd32_i2c_read+0x6c>
 8015d64:	2c02      	cmp	r4, #2
 8015d66:	d1d9      	bne.n	8015d1c <gd32_i2c_read+0xcc>
 8015d68:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8015d6c:	e002      	b.n	8015d74 <gd32_i2c_read+0x124>
 8015d6e:	f1b9 0901 	subs.w	r9, r9, #1
 8015d72:	d0a0      	beq.n	8015cb6 <gd32_i2c_read+0x66>
 8015d74:	f240 5102 	movw	r1, #1282	@ 0x502
 8015d78:	4628      	mov	r0, r5
 8015d7a:	f000 f9c7 	bl	801610c <i2c_flag_get>
 8015d7e:	2800      	cmp	r0, #0
 8015d80:	d0f5      	beq.n	8015d6e <gd32_i2c_read+0x11e>
 8015d82:	4628      	mov	r0, r5
 8015d84:	f000 f9b8 	bl	80160f8 <i2c_stop_on_bus>
 8015d88:	e7c8      	b.n	8015d1c <gd32_i2c_read+0xcc>
 8015d8a:	3b01      	subs	r3, #1
 8015d8c:	d1db      	bne.n	8015d46 <gd32_i2c_read+0xf6>
 8015d8e:	e794      	b.n	8015cba <gd32_i2c_read+0x6a>
 8015d90:	40005400 	andmi	r5, r0, r0, lsl #8
 8015d94:	20009aec 	andcs	r9, r0, ip, ror #21
 8015d98:	40005000 	andmi	r5, r0, r0

08015d9c <uart0_init>:
 8015d9c:	b507      	push	{r0, r1, r2, lr}
 8015d9e:	2301      	movs	r3, #1
 8015da0:	9300      	str	r3, [sp, #0]
 8015da2:	4805      	ldr	r0, [pc, #20]	@ (8015db8 <uart0_init+0x1c>)
 8015da4:	2300      	movs	r3, #0
 8015da6:	2208      	movs	r2, #8
 8015da8:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8015dac:	f7ff fbc6 	bl	801553c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 8015db0:	b003      	add	sp, #12
 8015db2:	f85d fb04 	ldr.w	pc, [sp], #4
 8015db6:	bf00      	nop
 8015db8:	40011000 	andmi	r1, r1, r0

08015dbc <uart0_putc>:
 8015dbc:	280a      	cmp	r0, #10
 8015dbe:	b570      	push	{r4, r5, r6, lr}
 8015dc0:	4d0a      	ldr	r5, [pc, #40]	@ (8015dec <uart0_putc+0x30>)
 8015dc2:	4604      	mov	r4, r0
 8015dc4:	d107      	bne.n	8015dd6 <uart0_putc+0x1a>
 8015dc6:	2107      	movs	r1, #7
 8015dc8:	4628      	mov	r0, r5
 8015dca:	f7ff fb91 	bl	80154f0 <usart_flag_get>
 8015dce:	2800      	cmp	r0, #0
 8015dd0:	d0f9      	beq.n	8015dc6 <uart0_putc+0xa>
 8015dd2:	230d      	movs	r3, #13
 8015dd4:	606b      	str	r3, [r5, #4]
 8015dd6:	4e05      	ldr	r6, [pc, #20]	@ (8015dec <uart0_putc+0x30>)
 8015dd8:	2107      	movs	r1, #7
 8015dda:	4630      	mov	r0, r6
 8015ddc:	f7ff fb88 	bl	80154f0 <usart_flag_get>
 8015de0:	2800      	cmp	r0, #0
 8015de2:	d0f9      	beq.n	8015dd8 <uart0_putc+0x1c>
 8015de4:	b2e4      	uxtb	r4, r4
 8015de6:	606c      	str	r4, [r5, #4]
 8015de8:	bd70      	pop	{r4, r5, r6, pc}
 8015dea:	bf00      	nop
 8015dec:	40011000 	andmi	r1, r1, r0

08015df0 <uart0_puts>:
 8015df0:	b510      	push	{r4, lr}
 8015df2:	1e44      	subs	r4, r0, #1
 8015df4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8015df8:	b903      	cbnz	r3, 8015dfc <uart0_puts+0xc>
 8015dfa:	bd10      	pop	{r4, pc}
 8015dfc:	2b0a      	cmp	r3, #10
 8015dfe:	d102      	bne.n	8015e06 <uart0_puts+0x16>
 8015e00:	200d      	movs	r0, #13
 8015e02:	f7ff ffdb 	bl	8015dbc <uart0_putc>
 8015e06:	7820      	ldrb	r0, [r4, #0]
 8015e08:	f7ff ffd8 	bl	8015dbc <uart0_putc>
 8015e0c:	e7f2      	b.n	8015df4 <uart0_puts+0x4>
	...

08015e10 <adc_clock_config>:
 8015e10:	4b06      	ldr	r3, [pc, #24]	@ (8015e2c <adc_clock_config+0x1c>)
 8015e12:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8015e16:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8015e1a:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8015e1e:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8015e22:	4302      	orrs	r2, r0
 8015e24:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8015e28:	4770      	bx	lr
 8015e2a:	bf00      	nop
 8015e2c:	40012000 	andmi	r2, r1, r0

08015e30 <adc_special_function_config>:
 8015e30:	b510      	push	{r4, lr}
 8015e32:	f401 7380 	and.w	r3, r1, #256	@ 0x100
 8015e36:	f401 6480 	and.w	r4, r1, #1024	@ 0x400
 8015e3a:	f001 0102 	and.w	r1, r1, #2
 8015e3e:	b17a      	cbz	r2, 8015e60 <adc_special_function_config+0x30>
 8015e40:	b11b      	cbz	r3, 8015e4a <adc_special_function_config+0x1a>
 8015e42:	6843      	ldr	r3, [r0, #4]
 8015e44:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8015e48:	6043      	str	r3, [r0, #4]
 8015e4a:	b11c      	cbz	r4, 8015e54 <adc_special_function_config+0x24>
 8015e4c:	6843      	ldr	r3, [r0, #4]
 8015e4e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8015e52:	6043      	str	r3, [r0, #4]
 8015e54:	b119      	cbz	r1, 8015e5e <adc_special_function_config+0x2e>
 8015e56:	6883      	ldr	r3, [r0, #8]
 8015e58:	f043 0302 	orr.w	r3, r3, #2
 8015e5c:	6083      	str	r3, [r0, #8]
 8015e5e:	bd10      	pop	{r4, pc}
 8015e60:	b11b      	cbz	r3, 8015e6a <adc_special_function_config+0x3a>
 8015e62:	6843      	ldr	r3, [r0, #4]
 8015e64:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015e68:	6043      	str	r3, [r0, #4]
 8015e6a:	b11c      	cbz	r4, 8015e74 <adc_special_function_config+0x44>
 8015e6c:	6843      	ldr	r3, [r0, #4]
 8015e6e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8015e72:	6043      	str	r3, [r0, #4]
 8015e74:	2900      	cmp	r1, #0
 8015e76:	d0f2      	beq.n	8015e5e <adc_special_function_config+0x2e>
 8015e78:	6883      	ldr	r3, [r0, #8]
 8015e7a:	f023 0302 	bic.w	r3, r3, #2
 8015e7e:	e7ed      	b.n	8015e5c <adc_special_function_config+0x2c>

08015e80 <adc_data_alignment_config>:
 8015e80:	6883      	ldr	r3, [r0, #8]
 8015e82:	b119      	cbz	r1, 8015e8c <adc_data_alignment_config+0xc>
 8015e84:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8015e88:	6083      	str	r3, [r0, #8]
 8015e8a:	4770      	bx	lr
 8015e8c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8015e90:	e7fa      	b.n	8015e88 <adc_data_alignment_config+0x8>

08015e92 <adc_enable>:
 8015e92:	6883      	ldr	r3, [r0, #8]
 8015e94:	07db      	lsls	r3, r3, #31
 8015e96:	bf5e      	ittt	pl
 8015e98:	6883      	ldrpl	r3, [r0, #8]
 8015e9a:	f043 0301 	orrpl.w	r3, r3, #1
 8015e9e:	6083      	strpl	r3, [r0, #8]
 8015ea0:	4770      	bx	lr

08015ea2 <adc_calibration_enable>:
 8015ea2:	6883      	ldr	r3, [r0, #8]
 8015ea4:	f043 0308 	orr.w	r3, r3, #8
 8015ea8:	f100 0208 	add.w	r2, r0, #8
 8015eac:	6083      	str	r3, [r0, #8]
 8015eae:	6813      	ldr	r3, [r2, #0]
 8015eb0:	0719      	lsls	r1, r3, #28
 8015eb2:	d4fc      	bmi.n	8015eae <adc_calibration_enable+0xc>
 8015eb4:	6883      	ldr	r3, [r0, #8]
 8015eb6:	f043 0304 	orr.w	r3, r3, #4
 8015eba:	6083      	str	r3, [r0, #8]
 8015ebc:	6813      	ldr	r3, [r2, #0]
 8015ebe:	075b      	lsls	r3, r3, #29
 8015ec0:	d4fc      	bmi.n	8015ebc <adc_calibration_enable+0x1a>
 8015ec2:	4770      	bx	lr

08015ec4 <adc_channel_16_to_18>:
 8015ec4:	f400 0380 	and.w	r3, r0, #4194304	@ 0x400000
 8015ec8:	f400 0000 	and.w	r0, r0, #8388608	@ 0x800000
 8015ecc:	b181      	cbz	r1, 8015ef0 <adc_channel_16_to_18+0x2c>
 8015ece:	b133      	cbz	r3, 8015ede <adc_channel_16_to_18+0x1a>
 8015ed0:	4a0f      	ldr	r2, [pc, #60]	@ (8015f10 <adc_channel_16_to_18+0x4c>)
 8015ed2:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015ed6:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8015eda:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015ede:	b130      	cbz	r0, 8015eee <adc_channel_16_to_18+0x2a>
 8015ee0:	4a0b      	ldr	r2, [pc, #44]	@ (8015f10 <adc_channel_16_to_18+0x4c>)
 8015ee2:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015ee6:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8015eea:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015eee:	4770      	bx	lr
 8015ef0:	b133      	cbz	r3, 8015f00 <adc_channel_16_to_18+0x3c>
 8015ef2:	4a07      	ldr	r2, [pc, #28]	@ (8015f10 <adc_channel_16_to_18+0x4c>)
 8015ef4:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015ef8:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8015efc:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015f00:	2800      	cmp	r0, #0
 8015f02:	d0f4      	beq.n	8015eee <adc_channel_16_to_18+0x2a>
 8015f04:	4a02      	ldr	r2, [pc, #8]	@ (8015f10 <adc_channel_16_to_18+0x4c>)
 8015f06:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015f0a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8015f0e:	e7ec      	b.n	8015eea <adc_channel_16_to_18+0x26>
 8015f10:	40012000 	andmi	r2, r1, r0

08015f14 <adc_channel_length_config>:
 8015f14:	2901      	cmp	r1, #1
 8015f16:	d002      	beq.n	8015f1e <adc_channel_length_config+0xa>
 8015f18:	2902      	cmp	r1, #2
 8015f1a:	d00c      	beq.n	8015f36 <adc_channel_length_config+0x22>
 8015f1c:	4770      	bx	lr
 8015f1e:	3a01      	subs	r2, #1
 8015f20:	2a0f      	cmp	r2, #15
 8015f22:	d813      	bhi.n	8015f4c <adc_channel_length_config+0x38>
 8015f24:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8015f26:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8015f2a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8015f2c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8015f2e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8015f32:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8015f34:	4770      	bx	lr
 8015f36:	3a01      	subs	r2, #1
 8015f38:	2a03      	cmp	r2, #3
 8015f3a:	d807      	bhi.n	8015f4c <adc_channel_length_config+0x38>
 8015f3c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8015f3e:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8015f42:	6383      	str	r3, [r0, #56]	@ 0x38
 8015f44:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8015f46:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8015f4a:	6383      	str	r3, [r0, #56]	@ 0x38
 8015f4c:	4770      	bx	lr

08015f4e <adc_inserted_channel_config>:
 8015f4e:	2903      	cmp	r1, #3
 8015f50:	b530      	push	{r4, r5, lr}
 8015f52:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8015f54:	d80f      	bhi.n	8015f76 <adc_inserted_channel_config+0x28>
 8015f56:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8015f5a:	1a61      	subs	r1, r4, r1
 8015f5c:	f06f 0404 	mvn.w	r4, #4
 8015f60:	4361      	muls	r1, r4
 8015f62:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8015f64:	310f      	adds	r1, #15
 8015f66:	241f      	movs	r4, #31
 8015f68:	408c      	lsls	r4, r1
 8015f6a:	ea25 0404 	bic.w	r4, r5, r4
 8015f6e:	fa02 f101 	lsl.w	r1, r2, r1
 8015f72:	4321      	orrs	r1, r4
 8015f74:	6381      	str	r1, [r0, #56]	@ 0x38
 8015f76:	2a09      	cmp	r2, #9
 8015f78:	d80b      	bhi.n	8015f92 <adc_inserted_channel_config+0x44>
 8015f7a:	6901      	ldr	r1, [r0, #16]
 8015f7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f80:	2407      	movs	r4, #7
 8015f82:	4094      	lsls	r4, r2
 8015f84:	ea21 0104 	bic.w	r1, r1, r4
 8015f88:	fa03 f202 	lsl.w	r2, r3, r2
 8015f8c:	430a      	orrs	r2, r1
 8015f8e:	6102      	str	r2, [r0, #16]
 8015f90:	bd30      	pop	{r4, r5, pc}
 8015f92:	2a12      	cmp	r2, #18
 8015f94:	d8fc      	bhi.n	8015f90 <adc_inserted_channel_config+0x42>
 8015f96:	3a0a      	subs	r2, #10
 8015f98:	68c1      	ldr	r1, [r0, #12]
 8015f9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f9e:	2407      	movs	r4, #7
 8015fa0:	4094      	lsls	r4, r2
 8015fa2:	ea21 0104 	bic.w	r1, r1, r4
 8015fa6:	4093      	lsls	r3, r2
 8015fa8:	430b      	orrs	r3, r1
 8015faa:	60c3      	str	r3, [r0, #12]
 8015fac:	e7f0      	b.n	8015f90 <adc_inserted_channel_config+0x42>

08015fae <adc_external_trigger_config>:
 8015fae:	2901      	cmp	r1, #1
 8015fb0:	d002      	beq.n	8015fb8 <adc_external_trigger_config+0xa>
 8015fb2:	2902      	cmp	r1, #2
 8015fb4:	d009      	beq.n	8015fca <adc_external_trigger_config+0x1c>
 8015fb6:	4770      	bx	lr
 8015fb8:	6883      	ldr	r3, [r0, #8]
 8015fba:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8015fbe:	6083      	str	r3, [r0, #8]
 8015fc0:	6883      	ldr	r3, [r0, #8]
 8015fc2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8015fc6:	6083      	str	r3, [r0, #8]
 8015fc8:	4770      	bx	lr
 8015fca:	6883      	ldr	r3, [r0, #8]
 8015fcc:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8015fd0:	6083      	str	r3, [r0, #8]
 8015fd2:	6883      	ldr	r3, [r0, #8]
 8015fd4:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8015fd8:	e7f5      	b.n	8015fc6 <adc_external_trigger_config+0x18>

08015fda <adc_software_trigger_enable>:
 8015fda:	2901      	cmp	r1, #1
 8015fdc:	d002      	beq.n	8015fe4 <adc_software_trigger_enable+0xa>
 8015fde:	2902      	cmp	r1, #2
 8015fe0:	d005      	beq.n	8015fee <adc_software_trigger_enable+0x14>
 8015fe2:	4770      	bx	lr
 8015fe4:	6883      	ldr	r3, [r0, #8]
 8015fe6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8015fea:	6083      	str	r3, [r0, #8]
 8015fec:	4770      	bx	lr
 8015fee:	6883      	ldr	r3, [r0, #8]
 8015ff0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8015ff4:	e7f9      	b.n	8015fea <adc_software_trigger_enable+0x10>
	...

08015ff8 <i2c_clock_config>:
 8015ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015ffa:	4605      	mov	r5, r0
 8015ffc:	2002      	movs	r0, #2
 8015ffe:	460c      	mov	r4, r1
 8016000:	4617      	mov	r7, r2
 8016002:	f7fe ffef 	bl	8014fe4 <rcu_clock_freq_get>
 8016006:	4a29      	ldr	r2, [pc, #164]	@ (80160ac <i2c_clock_config+0xb4>)
 8016008:	686e      	ldr	r6, [r5, #4]
 801600a:	4603      	mov	r3, r0
 801600c:	4828      	ldr	r0, [pc, #160]	@ (80160b0 <i2c_clock_config+0xb8>)
 801600e:	fbb3 f0f0 	udiv	r0, r3, r0
 8016012:	4293      	cmp	r3, r2
 8016014:	bf34      	ite	cc
 8016016:	4601      	movcc	r1, r0
 8016018:	213c      	movcs	r1, #60	@ 0x3c
 801601a:	4a26      	ldr	r2, [pc, #152]	@ (80160b4 <i2c_clock_config+0xbc>)
 801601c:	f026 063f 	bic.w	r6, r6, #63	@ 0x3f
 8016020:	430e      	orrs	r6, r1
 8016022:	4294      	cmp	r4, r2
 8016024:	606e      	str	r6, [r5, #4]
 8016026:	d816      	bhi.n	8016056 <i2c_clock_config+0x5e>
 8016028:	3001      	adds	r0, #1
 801602a:	283b      	cmp	r0, #59	@ 0x3b
 801602c:	d90d      	bls.n	801604a <i2c_clock_config+0x52>
 801602e:	223c      	movs	r2, #60	@ 0x3c
 8016030:	622a      	str	r2, [r5, #32]
 8016032:	0064      	lsls	r4, r4, #1
 8016034:	fbb3 f4f4 	udiv	r4, r3, r4
 8016038:	2c04      	cmp	r4, #4
 801603a:	69ea      	ldr	r2, [r5, #28]
 801603c:	bf38      	it	cc
 801603e:	2404      	movcc	r4, #4
 8016040:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8016044:	4314      	orrs	r4, r2
 8016046:	61ec      	str	r4, [r5, #28]
 8016048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801604a:	2802      	cmp	r0, #2
 801604c:	d801      	bhi.n	8016052 <i2c_clock_config+0x5a>
 801604e:	2202      	movs	r2, #2
 8016050:	e7ee      	b.n	8016030 <i2c_clock_config+0x38>
 8016052:	6228      	str	r0, [r5, #32]
 8016054:	e7ed      	b.n	8016032 <i2c_clock_config+0x3a>
 8016056:	4a18      	ldr	r2, [pc, #96]	@ (80160b8 <i2c_clock_config+0xc0>)
 8016058:	4294      	cmp	r4, r2
 801605a:	d8f5      	bhi.n	8016048 <i2c_clock_config+0x50>
 801605c:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8016060:	4351      	muls	r1, r2
 8016062:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8016066:	fbb1 f1f2 	udiv	r1, r1, r2
 801606a:	3101      	adds	r1, #1
 801606c:	6229      	str	r1, [r5, #32]
 801606e:	b9a7      	cbnz	r7, 801609a <i2c_clock_config+0xa2>
 8016070:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016074:	fbb3 f4f4 	udiv	r4, r3, r4
 8016078:	69eb      	ldr	r3, [r5, #28]
 801607a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 801607e:	61eb      	str	r3, [r5, #28]
 8016080:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8016084:	b90b      	cbnz	r3, 801608a <i2c_clock_config+0x92>
 8016086:	f044 0401 	orr.w	r4, r4, #1
 801608a:	69eb      	ldr	r3, [r5, #28]
 801608c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8016090:	61eb      	str	r3, [r5, #28]
 8016092:	69eb      	ldr	r3, [r5, #28]
 8016094:	4323      	orrs	r3, r4
 8016096:	61eb      	str	r3, [r5, #28]
 8016098:	e7d6      	b.n	8016048 <i2c_clock_config+0x50>
 801609a:	2219      	movs	r2, #25
 801609c:	4354      	muls	r4, r2
 801609e:	fbb3 f4f4 	udiv	r4, r3, r4
 80160a2:	69eb      	ldr	r3, [r5, #28]
 80160a4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80160a8:	e7e9      	b.n	801607e <i2c_clock_config+0x86>
 80160aa:	bf00      	nop
 80160ac:	03938700 	orrseq	r8, r3, #0, 14
 80160b0:	000f4240 	andeq	r4, pc, r0, asr #4
 80160b4:	000186a0 	andeq	r8, r1, r0, lsr #13
 80160b8:	00061a80 	andeq	r1, r6, r0, lsl #21

080160bc <i2c_ack_config>:
 80160bc:	6803      	ldr	r3, [r0, #0]
 80160be:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80160c2:	430b      	orrs	r3, r1
 80160c4:	6003      	str	r3, [r0, #0]
 80160c6:	4770      	bx	lr

080160c8 <i2c_ackpos_config>:
 80160c8:	6803      	ldr	r3, [r0, #0]
 80160ca:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80160ce:	430b      	orrs	r3, r1
 80160d0:	6003      	str	r3, [r0, #0]
 80160d2:	4770      	bx	lr

080160d4 <i2c_master_addressing>:
 80160d4:	3202      	adds	r2, #2
 80160d6:	bf0c      	ite	eq
 80160d8:	f021 0101 	biceq.w	r1, r1, #1
 80160dc:	f041 0101 	orrne.w	r1, r1, #1
 80160e0:	6101      	str	r1, [r0, #16]
 80160e2:	4770      	bx	lr

080160e4 <i2c_enable>:
 80160e4:	6803      	ldr	r3, [r0, #0]
 80160e6:	f043 0301 	orr.w	r3, r3, #1
 80160ea:	6003      	str	r3, [r0, #0]
 80160ec:	4770      	bx	lr

080160ee <i2c_start_on_bus>:
 80160ee:	6803      	ldr	r3, [r0, #0]
 80160f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80160f4:	6003      	str	r3, [r0, #0]
 80160f6:	4770      	bx	lr

080160f8 <i2c_stop_on_bus>:
 80160f8:	6803      	ldr	r3, [r0, #0]
 80160fa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80160fe:	6003      	str	r3, [r0, #0]
 8016100:	4770      	bx	lr

08016102 <i2c_data_transmit>:
 8016102:	6101      	str	r1, [r0, #16]
 8016104:	4770      	bx	lr

08016106 <i2c_data_receive>:
 8016106:	6900      	ldr	r0, [r0, #16]
 8016108:	b2c0      	uxtb	r0, r0
 801610a:	4770      	bx	lr

0801610c <i2c_flag_get>:
 801610c:	098b      	lsrs	r3, r1, #6
 801610e:	f001 011f 	and.w	r1, r1, #31
 8016112:	5818      	ldr	r0, [r3, r0]
 8016114:	40c8      	lsrs	r0, r1
 8016116:	f000 0001 	and.w	r0, r0, #1
 801611a:	4770      	bx	lr

0801611c <i2c_flag_clear>:
 801611c:	f240 5301 	movw	r3, #1281	@ 0x501
 8016120:	4299      	cmp	r1, r3
 8016122:	b510      	push	{r4, lr}
 8016124:	d102      	bne.n	801612c <i2c_flag_clear+0x10>
 8016126:	6943      	ldr	r3, [r0, #20]
 8016128:	6983      	ldr	r3, [r0, #24]
 801612a:	bd10      	pop	{r4, pc}
 801612c:	098c      	lsrs	r4, r1, #6
 801612e:	2201      	movs	r2, #1
 8016130:	5823      	ldr	r3, [r4, r0]
 8016132:	f001 011f 	and.w	r1, r1, #31
 8016136:	408a      	lsls	r2, r1
 8016138:	ea23 0302 	bic.w	r3, r3, r2
 801613c:	5023      	str	r3, [r4, r0]
 801613e:	e7f4      	b.n	801612a <i2c_flag_clear+0xe>

08016140 <__libc_init_array>:
 8016140:	b570      	push	{r4, r5, r6, lr}
 8016142:	4d0c      	ldr	r5, [pc, #48]	@ (8016174 <__libc_init_array+0x34>)
 8016144:	4c0c      	ldr	r4, [pc, #48]	@ (8016178 <__libc_init_array+0x38>)
 8016146:	1b64      	subs	r4, r4, r5
 8016148:	10a4      	asrs	r4, r4, #2
 801614a:	2600      	movs	r6, #0
 801614c:	42a6      	cmp	r6, r4
 801614e:	d107      	bne.n	8016160 <__libc_init_array+0x20>
 8016150:	4d0a      	ldr	r5, [pc, #40]	@ (801617c <__libc_init_array+0x3c>)
 8016152:	4c0b      	ldr	r4, [pc, #44]	@ (8016180 <__libc_init_array+0x40>)
 8016154:	1b64      	subs	r4, r4, r5
 8016156:	10a4      	asrs	r4, r4, #2
 8016158:	2600      	movs	r6, #0
 801615a:	42a6      	cmp	r6, r4
 801615c:	d105      	bne.n	801616a <__libc_init_array+0x2a>
 801615e:	bd70      	pop	{r4, r5, r6, pc}
 8016160:	f855 3b04 	ldr.w	r3, [r5], #4
 8016164:	4798      	blx	r3
 8016166:	3601      	adds	r6, #1
 8016168:	e7f0      	b.n	801614c <__libc_init_array+0xc>
 801616a:	f855 3b04 	ldr.w	r3, [r5], #4
 801616e:	4798      	blx	r3
 8016170:	3601      	adds	r6, #1
 8016172:	e7f2      	b.n	801615a <__libc_init_array+0x1a>
 8016174:	0801ad3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, sp, pc}
 8016178:	0801ad3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, sp, pc}
 801617c:	0801ad3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, sp, pc}
 8016180:	0801ad3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, sp, pc}

08016184 <memcpy>:
 8016184:	b510      	push	{r4, lr}
 8016186:	1e43      	subs	r3, r0, #1
 8016188:	440a      	add	r2, r1
 801618a:	4291      	cmp	r1, r2
 801618c:	d100      	bne.n	8016190 <memcpy+0xc>
 801618e:	bd10      	pop	{r4, pc}
 8016190:	f811 4b01 	ldrb.w	r4, [r1], #1
 8016194:	f803 4f01 	strb.w	r4, [r3, #1]!
 8016198:	e7f7      	b.n	801618a <memcpy+0x6>

0801619a <memmove>:
 801619a:	4288      	cmp	r0, r1
 801619c:	b510      	push	{r4, lr}
 801619e:	eb01 0302 	add.w	r3, r1, r2
 80161a2:	d208      	bcs.n	80161b6 <memmove+0x1c>
 80161a4:	1e42      	subs	r2, r0, #1
 80161a6:	4299      	cmp	r1, r3
 80161a8:	d100      	bne.n	80161ac <memmove+0x12>
 80161aa:	bd10      	pop	{r4, pc}
 80161ac:	f811 4b01 	ldrb.w	r4, [r1], #1
 80161b0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80161b4:	e7f7      	b.n	80161a6 <memmove+0xc>
 80161b6:	4402      	add	r2, r0
 80161b8:	4601      	mov	r1, r0
 80161ba:	428a      	cmp	r2, r1
 80161bc:	d0f5      	beq.n	80161aa <memmove+0x10>
 80161be:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80161c2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80161c6:	e7f8      	b.n	80161ba <memmove+0x20>

080161c8 <memset>:
 80161c8:	b570      	push	{r4, r5, r6, lr}
 80161ca:	b1ca      	cbz	r2, 8016200 <memset+0x38>
 80161cc:	b2c9      	uxtb	r1, r1
 80161ce:	4603      	mov	r3, r0
 80161d0:	075c      	lsls	r4, r3, #29
 80161d2:	d111      	bne.n	80161f8 <memset+0x30>
 80161d4:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
 80161d8:	fba1 5605 	umull	r5, r6, r1, r5
 80161dc:	f022 0407 	bic.w	r4, r2, #7
 80161e0:	442e      	add	r6, r5
 80161e2:	441c      	add	r4, r3
 80161e4:	42a3      	cmp	r3, r4
 80161e6:	d10c      	bne.n	8016202 <memset+0x3a>
 80161e8:	f002 0207 	and.w	r2, r2, #7
 80161ec:	4422      	add	r2, r4
 80161ee:	4294      	cmp	r4, r2
 80161f0:	d006      	beq.n	8016200 <memset+0x38>
 80161f2:	f804 1b01 	strb.w	r1, [r4], #1
 80161f6:	e7fa      	b.n	80161ee <memset+0x26>
 80161f8:	3a01      	subs	r2, #1
 80161fa:	f803 1b01 	strb.w	r1, [r3], #1
 80161fe:	d1e7      	bne.n	80161d0 <memset+0x8>
 8016200:	bd70      	pop	{r4, r5, r6, pc}
 8016202:	f843 5b08 	str.w	r5, [r3], #8
 8016206:	f843 6c04 	str.w	r6, [r3, #-4]
 801620a:	e7eb      	b.n	80161e4 <memset+0x1c>

0801620c <_itostr>:
 801620c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801620e:	0fc7      	lsrs	r7, r0, #31
 8016210:	b091      	sub	sp, #68	@ 0x44
 8016212:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 8016216:	d01b      	beq.n	8016250 <_itostr+0x44>
 8016218:	4240      	negs	r0, r0
 801621a:	4623      	mov	r3, r4
 801621c:	250a      	movs	r5, #10
 801621e:	46ec      	mov	ip, sp
 8016220:	fb90 f6f5 	sdiv	r6, r0, r5
 8016224:	fb05 0016 	mls	r0, r5, r6, r0
 8016228:	3030      	adds	r0, #48	@ 0x30
 801622a:	f803 0901 	strb.w	r0, [r3], #-1
 801622e:	4630      	mov	r0, r6
 8016230:	b10e      	cbz	r6, 8016236 <_itostr+0x2a>
 8016232:	4563      	cmp	r3, ip
 8016234:	d1f4      	bne.n	8016220 <_itostr+0x14>
 8016236:	b132      	cbz	r2, 8016246 <_itostr+0x3a>
 8016238:	4668      	mov	r0, sp
 801623a:	2530      	movs	r5, #48	@ 0x30
 801623c:	1ae6      	subs	r6, r4, r3
 801623e:	4296      	cmp	r6, r2
 8016240:	da01      	bge.n	8016246 <_itostr+0x3a>
 8016242:	4283      	cmp	r3, r0
 8016244:	d816      	bhi.n	8016274 <_itostr+0x68>
 8016246:	b167      	cbz	r7, 8016262 <_itostr+0x56>
 8016248:	222d      	movs	r2, #45	@ 0x2d
 801624a:	f803 2901 	strb.w	r2, [r3], #-1
 801624e:	e008      	b.n	8016262 <_itostr+0x56>
 8016250:	2800      	cmp	r0, #0
 8016252:	d1e2      	bne.n	801621a <_itostr+0xe>
 8016254:	2330      	movs	r3, #48	@ 0x30
 8016256:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 801625a:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801625e:	2a00      	cmp	r2, #0
 8016260:	d1ea      	bne.n	8016238 <_itostr+0x2c>
 8016262:	3301      	adds	r3, #1
 8016264:	1ae0      	subs	r0, r4, r3
 8016266:	3901      	subs	r1, #1
 8016268:	aa10      	add	r2, sp, #64	@ 0x40
 801626a:	4293      	cmp	r3, r2
 801626c:	d305      	bcc.n	801627a <_itostr+0x6e>
 801626e:	3001      	adds	r0, #1
 8016270:	b011      	add	sp, #68	@ 0x44
 8016272:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016274:	f803 5901 	strb.w	r5, [r3], #-1
 8016278:	e7e0      	b.n	801623c <_itostr+0x30>
 801627a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801627e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8016282:	e7f1      	b.n	8016268 <_itostr+0x5c>

08016284 <_xputch>:
 8016284:	4603      	mov	r3, r0
 8016286:	b410      	push	{r4}
 8016288:	4c09      	ldr	r4, [pc, #36]	@ (80162b0 <_xputch+0x2c>)
 801628a:	68da      	ldr	r2, [r3, #12]
 801628c:	4608      	mov	r0, r1
 801628e:	6821      	ldr	r1, [r4, #0]
 8016290:	3201      	adds	r2, #1
 8016292:	60da      	str	r2, [r3, #12]
 8016294:	b141      	cbz	r1, 80162a8 <_xputch+0x24>
 8016296:	691b      	ldr	r3, [r3, #16]
 8016298:	429a      	cmp	r2, r3
 801629a:	da02      	bge.n	80162a2 <_xputch+0x1e>
 801629c:	1c4b      	adds	r3, r1, #1
 801629e:	6023      	str	r3, [r4, #0]
 80162a0:	7008      	strb	r0, [r1, #0]
 80162a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80162a6:	4770      	bx	lr
 80162a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80162ac:	f7fe b946 	b.w	801453c <console_putc>
 80162b0:	20009af0 	strdcs	r9, [r0], -r0

080162b4 <_format_int>:
 80162b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162b6:	b091      	sub	sp, #68	@ 0x44
 80162b8:	4606      	mov	r6, r0
 80162ba:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 80162be:	bb91      	cbnz	r1, 8016326 <_format_int+0x72>
 80162c0:	2330      	movs	r3, #48	@ 0x30
 80162c2:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 80162c6:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 80162ca:	6832      	ldr	r2, [r6, #0]
 80162cc:	07d5      	lsls	r5, r2, #31
 80162ce:	d507      	bpl.n	80162e0 <_format_int+0x2c>
 80162d0:	6870      	ldr	r0, [r6, #4]
 80162d2:	4669      	mov	r1, sp
 80162d4:	2530      	movs	r5, #48	@ 0x30
 80162d6:	1ae7      	subs	r7, r4, r3
 80162d8:	4287      	cmp	r7, r0
 80162da:	da01      	bge.n	80162e0 <_format_int+0x2c>
 80162dc:	428b      	cmp	r3, r1
 80162de:	d833      	bhi.n	8016348 <_format_int+0x94>
 80162e0:	0690      	lsls	r0, r2, #26
 80162e2:	d507      	bpl.n	80162f4 <_format_int+0x40>
 80162e4:	68b0      	ldr	r0, [r6, #8]
 80162e6:	4669      	mov	r1, sp
 80162e8:	2530      	movs	r5, #48	@ 0x30
 80162ea:	1ae7      	subs	r7, r4, r3
 80162ec:	4287      	cmp	r7, r0
 80162ee:	da01      	bge.n	80162f4 <_format_int+0x40>
 80162f0:	428b      	cmp	r3, r1
 80162f2:	d82c      	bhi.n	801634e <_format_int+0x9a>
 80162f4:	0711      	lsls	r1, r2, #28
 80162f6:	bf44      	itt	mi
 80162f8:	212d      	movmi	r1, #45	@ 0x2d
 80162fa:	f803 1901 	strbmi.w	r1, [r3], #-1
 80162fe:	0652      	lsls	r2, r2, #25
 8016300:	d407      	bmi.n	8016312 <_format_int+0x5e>
 8016302:	68b1      	ldr	r1, [r6, #8]
 8016304:	466a      	mov	r2, sp
 8016306:	2020      	movs	r0, #32
 8016308:	1ae5      	subs	r5, r4, r3
 801630a:	428d      	cmp	r5, r1
 801630c:	da01      	bge.n	8016312 <_format_int+0x5e>
 801630e:	4293      	cmp	r3, r2
 8016310:	d820      	bhi.n	8016354 <_format_int+0xa0>
 8016312:	1ae5      	subs	r5, r4, r3
 8016314:	1c5c      	adds	r4, r3, #1
 8016316:	ab10      	add	r3, sp, #64	@ 0x40
 8016318:	429c      	cmp	r4, r3
 801631a:	d31e      	bcc.n	801635a <_format_int+0xa6>
 801631c:	68b3      	ldr	r3, [r6, #8]
 801631e:	42ab      	cmp	r3, r5
 8016320:	dc21      	bgt.n	8016366 <_format_int+0xb2>
 8016322:	b011      	add	sp, #68	@ 0x44
 8016324:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016326:	4623      	mov	r3, r4
 8016328:	200a      	movs	r0, #10
 801632a:	466f      	mov	r7, sp
 801632c:	fbb1 f5f0 	udiv	r5, r1, r0
 8016330:	fb00 1215 	mls	r2, r0, r5, r1
 8016334:	3230      	adds	r2, #48	@ 0x30
 8016336:	f803 2901 	strb.w	r2, [r3], #-1
 801633a:	460a      	mov	r2, r1
 801633c:	2a09      	cmp	r2, #9
 801633e:	4629      	mov	r1, r5
 8016340:	d9c3      	bls.n	80162ca <_format_int+0x16>
 8016342:	42bb      	cmp	r3, r7
 8016344:	d1f2      	bne.n	801632c <_format_int+0x78>
 8016346:	e7c0      	b.n	80162ca <_format_int+0x16>
 8016348:	f803 5901 	strb.w	r5, [r3], #-1
 801634c:	e7c3      	b.n	80162d6 <_format_int+0x22>
 801634e:	f803 5901 	strb.w	r5, [r3], #-1
 8016352:	e7ca      	b.n	80162ea <_format_int+0x36>
 8016354:	f803 0901 	strb.w	r0, [r3], #-1
 8016358:	e7d6      	b.n	8016308 <_format_int+0x54>
 801635a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801635e:	4630      	mov	r0, r6
 8016360:	f7ff ff90 	bl	8016284 <_xputch>
 8016364:	e7d7      	b.n	8016316 <_format_int+0x62>
 8016366:	2120      	movs	r1, #32
 8016368:	4630      	mov	r0, r6
 801636a:	f7ff ff8b 	bl	8016284 <_xputch>
 801636e:	3501      	adds	r5, #1
 8016370:	e7d4      	b.n	801631c <_format_int+0x68>

08016372 <_format_hex>:
 8016372:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016374:	b091      	sub	sp, #68	@ 0x44
 8016376:	6804      	ldr	r4, [r0, #0]
 8016378:	4606      	mov	r6, r0
 801637a:	f10d 023f 	add.w	r2, sp, #63	@ 0x3f
 801637e:	bb61      	cbnz	r1, 80163da <_format_hex+0x68>
 8016380:	2330      	movs	r3, #48	@ 0x30
 8016382:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8016386:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801638a:	07e5      	lsls	r5, r4, #31
 801638c:	d507      	bpl.n	801639e <_format_hex+0x2c>
 801638e:	6870      	ldr	r0, [r6, #4]
 8016390:	4669      	mov	r1, sp
 8016392:	2530      	movs	r5, #48	@ 0x30
 8016394:	1ad7      	subs	r7, r2, r3
 8016396:	4287      	cmp	r7, r0
 8016398:	da01      	bge.n	801639e <_format_hex+0x2c>
 801639a:	428b      	cmp	r3, r1
 801639c:	d831      	bhi.n	8016402 <_format_hex+0x90>
 801639e:	06a0      	lsls	r0, r4, #26
 80163a0:	d507      	bpl.n	80163b2 <_format_hex+0x40>
 80163a2:	68b0      	ldr	r0, [r6, #8]
 80163a4:	4669      	mov	r1, sp
 80163a6:	2530      	movs	r5, #48	@ 0x30
 80163a8:	1ad7      	subs	r7, r2, r3
 80163aa:	4287      	cmp	r7, r0
 80163ac:	da01      	bge.n	80163b2 <_format_hex+0x40>
 80163ae:	428b      	cmp	r3, r1
 80163b0:	d82a      	bhi.n	8016408 <_format_hex+0x96>
 80163b2:	0661      	lsls	r1, r4, #25
 80163b4:	d407      	bmi.n	80163c6 <_format_hex+0x54>
 80163b6:	68b0      	ldr	r0, [r6, #8]
 80163b8:	4669      	mov	r1, sp
 80163ba:	2420      	movs	r4, #32
 80163bc:	1ad5      	subs	r5, r2, r3
 80163be:	4285      	cmp	r5, r0
 80163c0:	da01      	bge.n	80163c6 <_format_hex+0x54>
 80163c2:	428b      	cmp	r3, r1
 80163c4:	d823      	bhi.n	801640e <_format_hex+0x9c>
 80163c6:	1ad5      	subs	r5, r2, r3
 80163c8:	1c5c      	adds	r4, r3, #1
 80163ca:	ab10      	add	r3, sp, #64	@ 0x40
 80163cc:	429c      	cmp	r4, r3
 80163ce:	d321      	bcc.n	8016414 <_format_hex+0xa2>
 80163d0:	68b3      	ldr	r3, [r6, #8]
 80163d2:	42ab      	cmp	r3, r5
 80163d4:	dc24      	bgt.n	8016420 <_format_hex+0xae>
 80163d6:	b011      	add	sp, #68	@ 0x44
 80163d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80163da:	f014 0f02 	tst.w	r4, #2
 80163de:	bf0c      	ite	eq
 80163e0:	2757      	moveq	r7, #87	@ 0x57
 80163e2:	2737      	movne	r7, #55	@ 0x37
 80163e4:	4613      	mov	r3, r2
 80163e6:	466d      	mov	r5, sp
 80163e8:	f001 000f 	and.w	r0, r1, #15
 80163ec:	2809      	cmp	r0, #9
 80163ee:	bf94      	ite	ls
 80163f0:	3030      	addls	r0, #48	@ 0x30
 80163f2:	19c0      	addhi	r0, r0, r7
 80163f4:	0909      	lsrs	r1, r1, #4
 80163f6:	f803 0901 	strb.w	r0, [r3], #-1
 80163fa:	d0c6      	beq.n	801638a <_format_hex+0x18>
 80163fc:	42ab      	cmp	r3, r5
 80163fe:	d1f3      	bne.n	80163e8 <_format_hex+0x76>
 8016400:	e7c3      	b.n	801638a <_format_hex+0x18>
 8016402:	f803 5901 	strb.w	r5, [r3], #-1
 8016406:	e7c5      	b.n	8016394 <_format_hex+0x22>
 8016408:	f803 5901 	strb.w	r5, [r3], #-1
 801640c:	e7cc      	b.n	80163a8 <_format_hex+0x36>
 801640e:	f803 4901 	strb.w	r4, [r3], #-1
 8016412:	e7d3      	b.n	80163bc <_format_hex+0x4a>
 8016414:	f814 1b01 	ldrb.w	r1, [r4], #1
 8016418:	4630      	mov	r0, r6
 801641a:	f7ff ff33 	bl	8016284 <_xputch>
 801641e:	e7d4      	b.n	80163ca <_format_hex+0x58>
 8016420:	2120      	movs	r1, #32
 8016422:	4630      	mov	r0, r6
 8016424:	f7ff ff2e 	bl	8016284 <_xputch>
 8016428:	3501      	adds	r5, #1
 801642a:	e7d1      	b.n	80163d0 <_format_hex+0x5e>

0801642c <_vprintf>:
 801642c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016430:	2700      	movs	r7, #0
 8016432:	b096      	sub	sp, #88	@ 0x58
 8016434:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8016438:	460b      	mov	r3, r1
 801643a:	4614      	mov	r4, r2
 801643c:	f04f 080a 	mov.w	r8, #10
 8016440:	7819      	ldrb	r1, [r3, #0]
 8016442:	b919      	cbnz	r1, 801644c <_vprintf+0x20>
 8016444:	9804      	ldr	r0, [sp, #16]
 8016446:	b016      	add	sp, #88	@ 0x58
 8016448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801644c:	2925      	cmp	r1, #37	@ 0x25
 801644e:	f103 0501 	add.w	r5, r3, #1
 8016452:	d004      	beq.n	801645e <_vprintf+0x32>
 8016454:	a801      	add	r0, sp, #4
 8016456:	f7ff ff15 	bl	8016284 <_xputch>
 801645a:	462b      	mov	r3, r5
 801645c:	e7f0      	b.n	8016440 <_vprintf+0x14>
 801645e:	785a      	ldrb	r2, [r3, #1]
 8016460:	9703      	str	r7, [sp, #12]
 8016462:	2a30      	cmp	r2, #48	@ 0x30
 8016464:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8016468:	d127      	bne.n	80164ba <_vprintf+0x8e>
 801646a:	2220      	movs	r2, #32
 801646c:	9201      	str	r2, [sp, #4]
 801646e:	1c9d      	adds	r5, r3, #2
 8016470:	2200      	movs	r2, #0
 8016472:	462e      	mov	r6, r5
 8016474:	4613      	mov	r3, r2
 8016476:	7831      	ldrb	r1, [r6, #0]
 8016478:	f1a1 0030 	sub.w	r0, r1, #48	@ 0x30
 801647c:	2809      	cmp	r0, #9
 801647e:	4635      	mov	r5, r6
 8016480:	f106 0601 	add.w	r6, r6, #1
 8016484:	d91d      	bls.n	80164c2 <_vprintf+0x96>
 8016486:	b12a      	cbz	r2, 8016494 <_vprintf+0x68>
 8016488:	9303      	str	r3, [sp, #12]
 801648a:	b11b      	cbz	r3, 8016494 <_vprintf+0x68>
 801648c:	9b01      	ldr	r3, [sp, #4]
 801648e:	f043 0310 	orr.w	r3, r3, #16
 8016492:	9301      	str	r3, [sp, #4]
 8016494:	292e      	cmp	r1, #46	@ 0x2e
 8016496:	d123      	bne.n	80164e0 <_vprintf+0xb4>
 8016498:	786b      	ldrb	r3, [r5, #1]
 801649a:	2b2a      	cmp	r3, #42	@ 0x2a
 801649c:	d015      	beq.n	80164ca <_vprintf+0x9e>
 801649e:	2100      	movs	r1, #0
 80164a0:	1c68      	adds	r0, r5, #1
 80164a2:	460a      	mov	r2, r1
 80164a4:	260a      	movs	r6, #10
 80164a6:	7803      	ldrb	r3, [r0, #0]
 80164a8:	3b30      	subs	r3, #48	@ 0x30
 80164aa:	2b09      	cmp	r3, #9
 80164ac:	4605      	mov	r5, r0
 80164ae:	f100 0001 	add.w	r0, r0, #1
 80164b2:	d959      	bls.n	8016568 <_vprintf+0x13c>
 80164b4:	b181      	cbz	r1, 80164d8 <_vprintf+0xac>
 80164b6:	9202      	str	r2, [sp, #8]
 80164b8:	e00e      	b.n	80164d8 <_vprintf+0xac>
 80164ba:	2a2d      	cmp	r2, #45	@ 0x2d
 80164bc:	d1d8      	bne.n	8016470 <_vprintf+0x44>
 80164be:	2240      	movs	r2, #64	@ 0x40
 80164c0:	e7d4      	b.n	801646c <_vprintf+0x40>
 80164c2:	fb08 0303 	mla	r3, r8, r3, r0
 80164c6:	2201      	movs	r2, #1
 80164c8:	e7d5      	b.n	8016476 <_vprintf+0x4a>
 80164ca:	f854 3b04 	ldr.w	r3, [r4], #4
 80164ce:	2b00      	cmp	r3, #0
 80164d0:	bfb8      	it	lt
 80164d2:	425b      	neglt	r3, r3
 80164d4:	3502      	adds	r5, #2
 80164d6:	9302      	str	r3, [sp, #8]
 80164d8:	9b01      	ldr	r3, [sp, #4]
 80164da:	f043 0301 	orr.w	r3, r3, #1
 80164de:	9301      	str	r3, [sp, #4]
 80164e0:	782b      	ldrb	r3, [r5, #0]
 80164e2:	2b6c      	cmp	r3, #108	@ 0x6c
 80164e4:	bf04      	itt	eq
 80164e6:	3501      	addeq	r5, #1
 80164e8:	9b01      	ldreq	r3, [sp, #4]
 80164ea:	7829      	ldrb	r1, [r5, #0]
 80164ec:	bf04      	itt	eq
 80164ee:	f043 0304 	orreq.w	r3, r3, #4
 80164f2:	9301      	streq	r3, [sp, #4]
 80164f4:	2958      	cmp	r1, #88	@ 0x58
 80164f6:	f000 8143 	beq.w	8016780 <_vprintf+0x354>
 80164fa:	f1a1 0363 	sub.w	r3, r1, #99	@ 0x63
 80164fe:	b2da      	uxtb	r2, r3
 8016500:	2a15      	cmp	r2, #21
 8016502:	d8a7      	bhi.n	8016454 <_vprintf+0x28>
 8016504:	2b15      	cmp	r3, #21
 8016506:	d8a5      	bhi.n	8016454 <_vprintf+0x28>
 8016508:	a201      	add	r2, pc, #4	@ (adr r2, 8016510 <_vprintf+0xe4>)
 801650a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801650e:	bf00      	nop
 8016510:	08016571 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, sp, lr}
 8016514:	0801657f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, sp, lr}
 8016518:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 801651c:	08016599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, sp, lr}
 8016520:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016524:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016528:	0801657f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, sp, lr}
 801652c:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016530:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016534:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016538:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 801653c:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016540:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016544:	080166e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, sp, lr}
 8016548:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 801654c:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016550:	08016707 	stmdaeq	r1, {r0, r1, r2, r8, r9, sl, sp, lr}
 8016554:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016558:	0801677b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, sp, lr}
 801655c:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016560:	08016455 	stmdaeq	r1, {r0, r2, r4, r6, sl, sp, lr}
 8016564:	08016789 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, sp, lr}
 8016568:	fb06 3202 	mla	r2, r6, r2, r3
 801656c:	2101      	movs	r1, #1
 801656e:	e79a      	b.n	80164a6 <_vprintf+0x7a>
 8016570:	f854 1b04 	ldr.w	r1, [r4], #4
 8016574:	a801      	add	r0, sp, #4
 8016576:	f7ff fe85 	bl	8016284 <_xputch>
 801657a:	3501      	adds	r5, #1
 801657c:	e76d      	b.n	801645a <_vprintf+0x2e>
 801657e:	f854 1b04 	ldr.w	r1, [r4], #4
 8016582:	9b01      	ldr	r3, [sp, #4]
 8016584:	2900      	cmp	r1, #0
 8016586:	da03      	bge.n	8016590 <_vprintf+0x164>
 8016588:	f043 0308 	orr.w	r3, r3, #8
 801658c:	9301      	str	r3, [sp, #4]
 801658e:	4249      	negs	r1, r1
 8016590:	a801      	add	r0, sp, #4
 8016592:	f7ff fe8f 	bl	80162b4 <_format_int>
 8016596:	e7f0      	b.n	801657a <_vprintf+0x14e>
 8016598:	3407      	adds	r4, #7
 801659a:	f024 0407 	bic.w	r4, r4, #7
 801659e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80165a2:	f7f2 fce7 	bl	8008f74 <__aeabi_d2f>
 80165a6:	9b01      	ldr	r3, [sp, #4]
 80165a8:	ee07 0a90 	vmov	s15, r0
 80165ac:	07de      	lsls	r6, r3, #31
 80165ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80165b2:	bf4c      	ite	mi
 80165b4:	9e02      	ldrmi	r6, [sp, #8]
 80165b6:	2606      	movpl	r6, #6
 80165b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165bc:	bf48      	it	mi
 80165be:	eef1 7a67 	vnegmi.f32	s15, s15
 80165c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80165c6:	bf4a      	itet	mi
 80165c8:	f10d 0a19 	addmi.w	sl, sp, #25
 80165cc:	f10d 0a18 	addpl.w	sl, sp, #24
 80165d0:	232d      	movmi	r3, #45	@ 0x2d
 80165d2:	ee17 0a10 	vmov	r0, s14
 80165d6:	f04f 0200 	mov.w	r2, #0
 80165da:	4651      	mov	r1, sl
 80165dc:	bf48      	it	mi
 80165de:	f88d 3018 	strbmi.w	r3, [sp, #24]
 80165e2:	f7ff fe13 	bl	801620c <_itostr>
 80165e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80165ea:	232e      	movs	r3, #46	@ 0x2e
 80165ec:	f80a 3000 	strb.w	r3, [sl, r0]
 80165f0:	eb0a 0900 	add.w	r9, sl, r0
 80165f4:	230a      	movs	r3, #10
 80165f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80165fa:	1c72      	adds	r2, r6, #1
 80165fc:	f109 0901 	add.w	r9, r9, #1
 8016600:	4619      	mov	r1, r3
 8016602:	2e00      	cmp	r6, #0
 8016604:	dc41      	bgt.n	801668a <_vprintf+0x25e>
 8016606:	ee07 3a10 	vmov	s14, r3
 801660a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801660e:	4649      	mov	r1, r9
 8016610:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016614:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016618:	ee17 0a90 	vmov	r0, s15
 801661c:	f7ff fdf6 	bl	801620c <_itostr>
 8016620:	4448      	add	r0, r9
 8016622:	f10d 0918 	add.w	r9, sp, #24
 8016626:	eba0 0009 	sub.w	r0, r0, r9
 801662a:	1e46      	subs	r6, r0, #1
 801662c:	eb09 0206 	add.w	r2, r9, r6
 8016630:	f819 3006 	ldrb.w	r3, [r9, r6]
 8016634:	2b34      	cmp	r3, #52	@ 0x34
 8016636:	d911      	bls.n	801665c <_vprintf+0x230>
 8016638:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 801663c:	292e      	cmp	r1, #46	@ 0x2e
 801663e:	f102 33ff 	add.w	r3, r2, #4294967295	@ 0xffffffff
 8016642:	d028      	beq.n	8016696 <_vprintf+0x26a>
 8016644:	469c      	mov	ip, r3
 8016646:	f04f 0e30 	mov.w	lr, #48	@ 0x30
 801664a:	4663      	mov	r3, ip
 801664c:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8016650:	2939      	cmp	r1, #57	@ 0x39
 8016652:	d01d      	beq.n	8016690 <_vprintf+0x264>
 8016654:	292e      	cmp	r1, #46	@ 0x2e
 8016656:	d01e      	beq.n	8016696 <_vprintf+0x26a>
 8016658:	3101      	adds	r1, #1
 801665a:	7019      	strb	r1, [r3, #0]
 801665c:	f106 0358 	add.w	r3, r6, #88	@ 0x58
 8016660:	446b      	add	r3, sp
 8016662:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8016666:	2b2e      	cmp	r3, #46	@ 0x2e
 8016668:	bf08      	it	eq
 801666a:	f106 36ff 	addeq.w	r6, r6, #4294967295	@ 0xffffffff
 801666e:	46b2      	mov	sl, r6
 8016670:	9b03      	ldr	r3, [sp, #12]
 8016672:	4553      	cmp	r3, sl
 8016674:	dc2d      	bgt.n	80166d2 <_vprintf+0x2a6>
 8016676:	2e00      	cmp	r6, #0
 8016678:	f77f af7f 	ble.w	801657a <_vprintf+0x14e>
 801667c:	f819 1b01 	ldrb.w	r1, [r9], #1
 8016680:	a801      	add	r0, sp, #4
 8016682:	f7ff fdff 	bl	8016284 <_xputch>
 8016686:	3e01      	subs	r6, #1
 8016688:	e7f5      	b.n	8016676 <_vprintf+0x24a>
 801668a:	434b      	muls	r3, r1
 801668c:	3e01      	subs	r6, #1
 801668e:	e7b8      	b.n	8016602 <_vprintf+0x1d6>
 8016690:	f88c e001 	strb.w	lr, [ip, #1]
 8016694:	e7d9      	b.n	801664a <_vprintf+0x21e>
 8016696:	3b01      	subs	r3, #1
 8016698:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 801669c:	7819      	ldrb	r1, [r3, #0]
 801669e:	2939      	cmp	r1, #57	@ 0x39
 80166a0:	d10d      	bne.n	80166be <_vprintf+0x292>
 80166a2:	454b      	cmp	r3, r9
 80166a4:	d208      	bcs.n	80166b8 <_vprintf+0x28c>
 80166a6:	1c51      	adds	r1, r2, #1
 80166a8:	1c9e      	adds	r6, r3, #2
 80166aa:	3202      	adds	r2, #2
 80166ac:	4296      	cmp	r6, r2
 80166ae:	d10b      	bne.n	80166c8 <_vprintf+0x29c>
 80166b0:	2231      	movs	r2, #49	@ 0x31
 80166b2:	705a      	strb	r2, [r3, #1]
 80166b4:	4606      	mov	r6, r0
 80166b6:	e7d1      	b.n	801665c <_vprintf+0x230>
 80166b8:	f803 c901 	strb.w	ip, [r3], #-1
 80166bc:	e7ee      	b.n	801669c <_vprintf+0x270>
 80166be:	454b      	cmp	r3, r9
 80166c0:	d3f1      	bcc.n	80166a6 <_vprintf+0x27a>
 80166c2:	292d      	cmp	r1, #45	@ 0x2d
 80166c4:	d1c8      	bne.n	8016658 <_vprintf+0x22c>
 80166c6:	e7ee      	b.n	80166a6 <_vprintf+0x27a>
 80166c8:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 80166cc:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80166d0:	e7ec      	b.n	80166ac <_vprintf+0x280>
 80166d2:	2120      	movs	r1, #32
 80166d4:	a801      	add	r0, sp, #4
 80166d6:	f7ff fdd5 	bl	8016284 <_xputch>
 80166da:	f10a 0a01 	add.w	sl, sl, #1
 80166de:	e7c7      	b.n	8016670 <_vprintf+0x244>
 80166e0:	2308      	movs	r3, #8
 80166e2:	f854 6b04 	ldr.w	r6, [r4], #4
 80166e6:	9303      	str	r3, [sp, #12]
 80166e8:	2130      	movs	r1, #48	@ 0x30
 80166ea:	2320      	movs	r3, #32
 80166ec:	a801      	add	r0, sp, #4
 80166ee:	9301      	str	r3, [sp, #4]
 80166f0:	f7ff fdc8 	bl	8016284 <_xputch>
 80166f4:	2178      	movs	r1, #120	@ 0x78
 80166f6:	a801      	add	r0, sp, #4
 80166f8:	f7ff fdc4 	bl	8016284 <_xputch>
 80166fc:	4631      	mov	r1, r6
 80166fe:	a801      	add	r0, sp, #4
 8016700:	f7ff fe37 	bl	8016372 <_format_hex>
 8016704:	e739      	b.n	801657a <_vprintf+0x14e>
 8016706:	f854 9b04 	ldr.w	r9, [r4], #4
 801670a:	2600      	movs	r6, #0
 801670c:	f819 3006 	ldrb.w	r3, [r9, r6]
 8016710:	b993      	cbnz	r3, 8016738 <_vprintf+0x30c>
 8016712:	9b01      	ldr	r3, [sp, #4]
 8016714:	07d9      	lsls	r1, r3, #31
 8016716:	d503      	bpl.n	8016720 <_vprintf+0x2f4>
 8016718:	9b02      	ldr	r3, [sp, #8]
 801671a:	429e      	cmp	r6, r3
 801671c:	bfa8      	it	ge
 801671e:	461e      	movge	r6, r3
 8016720:	9b01      	ldr	r3, [sp, #4]
 8016722:	065a      	lsls	r2, r3, #25
 8016724:	f106 0a01 	add.w	sl, r6, #1
 8016728:	d403      	bmi.n	8016732 <_vprintf+0x306>
 801672a:	9b03      	ldr	r3, [sp, #12]
 801672c:	429e      	cmp	r6, r3
 801672e:	db05      	blt.n	801673c <_vprintf+0x310>
 8016730:	4656      	mov	r6, sl
 8016732:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8016736:	e00d      	b.n	8016754 <_vprintf+0x328>
 8016738:	3601      	adds	r6, #1
 801673a:	e7e7      	b.n	801670c <_vprintf+0x2e0>
 801673c:	2120      	movs	r1, #32
 801673e:	a801      	add	r0, sp, #4
 8016740:	f7ff fda0 	bl	8016284 <_xputch>
 8016744:	4656      	mov	r6, sl
 8016746:	e7eb      	b.n	8016720 <_vprintf+0x2f4>
 8016748:	a801      	add	r0, sp, #4
 801674a:	f7ff fd9b 	bl	8016284 <_xputch>
 801674e:	9b02      	ldr	r3, [sp, #8]
 8016750:	3b01      	subs	r3, #1
 8016752:	9302      	str	r3, [sp, #8]
 8016754:	9b01      	ldr	r3, [sp, #4]
 8016756:	07db      	lsls	r3, r3, #31
 8016758:	d501      	bpl.n	801675e <_vprintf+0x332>
 801675a:	9b02      	ldr	r3, [sp, #8]
 801675c:	b11b      	cbz	r3, 8016766 <_vprintf+0x33a>
 801675e:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8016762:	2900      	cmp	r1, #0
 8016764:	d1f0      	bne.n	8016748 <_vprintf+0x31c>
 8016766:	9b03      	ldr	r3, [sp, #12]
 8016768:	42b3      	cmp	r3, r6
 801676a:	f77f af06 	ble.w	801657a <_vprintf+0x14e>
 801676e:	2120      	movs	r1, #32
 8016770:	a801      	add	r0, sp, #4
 8016772:	f7ff fd87 	bl	8016284 <_xputch>
 8016776:	3601      	adds	r6, #1
 8016778:	e7f5      	b.n	8016766 <_vprintf+0x33a>
 801677a:	f854 1b04 	ldr.w	r1, [r4], #4
 801677e:	e707      	b.n	8016590 <_vprintf+0x164>
 8016780:	9b01      	ldr	r3, [sp, #4]
 8016782:	f043 0302 	orr.w	r3, r3, #2
 8016786:	9301      	str	r3, [sp, #4]
 8016788:	f854 1b04 	ldr.w	r1, [r4], #4
 801678c:	e7b7      	b.n	80166fe <_vprintf+0x2d2>
 801678e:	bf00      	nop

08016790 <printf>:
 8016790:	b40f      	push	{r0, r1, r2, r3}
 8016792:	b507      	push	{r0, r1, r2, lr}
 8016794:	aa04      	add	r2, sp, #16
 8016796:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801679a:	f852 1b04 	ldr.w	r1, [r2], #4
 801679e:	9201      	str	r2, [sp, #4]
 80167a0:	f7ff fe44 	bl	801642c <_vprintf>
 80167a4:	b003      	add	sp, #12
 80167a6:	f85d eb04 	ldr.w	lr, [sp], #4
 80167aa:	b004      	add	sp, #16
 80167ac:	4770      	bx	lr
	...

080167b0 <sprintf>:
 80167b0:	b40e      	push	{r1, r2, r3}
 80167b2:	b517      	push	{r0, r1, r2, r4, lr}
 80167b4:	4c09      	ldr	r4, [pc, #36]	@ (80167dc <sprintf+0x2c>)
 80167b6:	aa05      	add	r2, sp, #20
 80167b8:	6020      	str	r0, [r4, #0]
 80167ba:	f852 1b04 	ldr.w	r1, [r2], #4
 80167be:	9201      	str	r2, [sp, #4]
 80167c0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80167c4:	f7ff fe32 	bl	801642c <_vprintf>
 80167c8:	6822      	ldr	r2, [r4, #0]
 80167ca:	2300      	movs	r3, #0
 80167cc:	7013      	strb	r3, [r2, #0]
 80167ce:	6023      	str	r3, [r4, #0]
 80167d0:	b003      	add	sp, #12
 80167d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80167d6:	b003      	add	sp, #12
 80167d8:	4770      	bx	lr
 80167da:	bf00      	nop
 80167dc:	20009af0 	strdcs	r9, [r0], -r0

080167e0 <snprintf>:
 80167e0:	b40c      	push	{r2, r3}
 80167e2:	b513      	push	{r0, r1, r4, lr}
 80167e4:	4c09      	ldr	r4, [pc, #36]	@ (801680c <snprintf+0x2c>)
 80167e6:	aa04      	add	r2, sp, #16
 80167e8:	460b      	mov	r3, r1
 80167ea:	6020      	str	r0, [r4, #0]
 80167ec:	f852 1b04 	ldr.w	r1, [r2], #4
 80167f0:	9201      	str	r2, [sp, #4]
 80167f2:	4618      	mov	r0, r3
 80167f4:	f7ff fe1a 	bl	801642c <_vprintf>
 80167f8:	6822      	ldr	r2, [r4, #0]
 80167fa:	2300      	movs	r3, #0
 80167fc:	7013      	strb	r3, [r2, #0]
 80167fe:	6023      	str	r3, [r4, #0]
 8016800:	b002      	add	sp, #8
 8016802:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016806:	b002      	add	sp, #8
 8016808:	4770      	bx	lr
 801680a:	bf00      	nop
 801680c:	20009af0 	strdcs	r9, [r0], -r0

08016810 <vsnprintf>:
 8016810:	b538      	push	{r3, r4, r5, lr}
 8016812:	4c06      	ldr	r4, [pc, #24]	@ (801682c <vsnprintf+0x1c>)
 8016814:	4605      	mov	r5, r0
 8016816:	4608      	mov	r0, r1
 8016818:	4611      	mov	r1, r2
 801681a:	461a      	mov	r2, r3
 801681c:	6025      	str	r5, [r4, #0]
 801681e:	f7ff fe05 	bl	801642c <_vprintf>
 8016822:	6822      	ldr	r2, [r4, #0]
 8016824:	2300      	movs	r3, #0
 8016826:	7013      	strb	r3, [r2, #0]
 8016828:	6023      	str	r3, [r4, #0]
 801682a:	bd38      	pop	{r3, r4, r5, pc}
 801682c:	20009af0 	strdcs	r9, [r0], -r0

08016830 <putchar>:
 8016830:	b508      	push	{r3, lr}
 8016832:	f7fd fe83 	bl	801453c <console_putc>
 8016836:	2001      	movs	r0, #1
 8016838:	bd08      	pop	{r3, pc}

0801683a <puts>:
 801683a:	b508      	push	{r3, lr}
 801683c:	f7fd fe80 	bl	8014540 <console_puts>
 8016840:	200a      	movs	r0, #10
 8016842:	f7fd fe7b 	bl	801453c <console_putc>
 8016846:	2001      	movs	r0, #1
 8016848:	bd08      	pop	{r3, pc}
	...

0801684c <random>:
 801684c:	4a06      	ldr	r2, [pc, #24]	@ (8016868 <random+0x1c>)
 801684e:	6813      	ldr	r3, [r2, #0]
 8016850:	10d8      	asrs	r0, r3, #3
 8016852:	ea80 00a3 	eor.w	r0, r0, r3, asr #2
 8016856:	4058      	eors	r0, r3
 8016858:	ea80 1063 	eor.w	r0, r0, r3, asr #5
 801685c:	03c0      	lsls	r0, r0, #15
 801685e:	b280      	uxth	r0, r0
 8016860:	ea40 0063 	orr.w	r0, r0, r3, asr #1
 8016864:	6010      	str	r0, [r2, #0]
 8016866:	4770      	bx	lr
 8016868:	20000004 	andcs	r0, r0, r4

0801686c <strtok>:
 801686c:	b570      	push	{r4, r5, r6, lr}
 801686e:	4603      	mov	r3, r0
 8016870:	b910      	cbnz	r0, 8016878 <strtok+0xc>
 8016872:	4b12      	ldr	r3, [pc, #72]	@ (80168bc <strtok+0x50>)
 8016874:	681b      	ldr	r3, [r3, #0]
 8016876:	b14b      	cbz	r3, 801688c <strtok+0x20>
 8016878:	4618      	mov	r0, r3
 801687a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801687e:	460d      	mov	r5, r1
 8016880:	f815 4b01 	ldrb.w	r4, [r5], #1
 8016884:	b924      	cbnz	r4, 8016890 <strtok+0x24>
 8016886:	b94a      	cbnz	r2, 801689c <strtok+0x30>
 8016888:	4b0c      	ldr	r3, [pc, #48]	@ (80168bc <strtok+0x50>)
 801688a:	601a      	str	r2, [r3, #0]
 801688c:	2000      	movs	r0, #0
 801688e:	bd70      	pop	{r4, r5, r6, pc}
 8016890:	42a2      	cmp	r2, r4
 8016892:	d1f5      	bne.n	8016880 <strtok+0x14>
 8016894:	e7f0      	b.n	8016878 <strtok+0xc>
 8016896:	4613      	mov	r3, r2
 8016898:	e00c      	b.n	80168b4 <strtok+0x48>
 801689a:	b91c      	cbnz	r4, 80168a4 <strtok+0x38>
 801689c:	461e      	mov	r6, r3
 801689e:	f813 2b01 	ldrb.w	r2, [r3], #1
 80168a2:	460d      	mov	r5, r1
 80168a4:	f815 4b01 	ldrb.w	r4, [r5], #1
 80168a8:	42a2      	cmp	r2, r4
 80168aa:	d1f6      	bne.n	801689a <strtok+0x2e>
 80168ac:	2a00      	cmp	r2, #0
 80168ae:	d0f2      	beq.n	8016896 <strtok+0x2a>
 80168b0:	2200      	movs	r2, #0
 80168b2:	7032      	strb	r2, [r6, #0]
 80168b4:	4a01      	ldr	r2, [pc, #4]	@ (80168bc <strtok+0x50>)
 80168b6:	6013      	str	r3, [r2, #0]
 80168b8:	e7e9      	b.n	801688e <strtok+0x22>
 80168ba:	bf00      	nop
 80168bc:	20009af4 	strdcs	r9, [r0], -r4

080168c0 <uuid_unparse_x>:
 80168c0:	b530      	push	{r4, r5, lr}
 80168c2:	4603      	mov	r3, r0
 80168c4:	4608      	mov	r0, r1
 80168c6:	4611      	mov	r1, r2
 80168c8:	681a      	ldr	r2, [r3, #0]
 80168ca:	891c      	ldrh	r4, [r3, #8]
 80168cc:	b08f      	sub	sp, #60	@ 0x3c
 80168ce:	ba12      	rev	r2, r2
 80168d0:	920a      	str	r2, [sp, #40]	@ 0x28
 80168d2:	889a      	ldrh	r2, [r3, #4]
 80168d4:	ba52      	rev16	r2, r2
 80168d6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80168da:	88da      	ldrh	r2, [r3, #6]
 80168dc:	ba64      	rev16	r4, r4
 80168de:	ba52      	rev16	r2, r2
 80168e0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80168e4:	f8ad 4030 	strh.w	r4, [sp, #48]	@ 0x30
 80168e8:	f103 020a 	add.w	r2, r3, #10
 80168ec:	f10d 0431 	add.w	r4, sp, #49	@ 0x31
 80168f0:	3310      	adds	r3, #16
 80168f2:	f812 5b01 	ldrb.w	r5, [r2], #1
 80168f6:	f804 5f01 	strb.w	r5, [r4, #1]!
 80168fa:	4293      	cmp	r3, r2
 80168fc:	d1f9      	bne.n	80168f2 <uuid_unparse_x+0x32>
 80168fe:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
 8016902:	9208      	str	r2, [sp, #32]
 8016904:	f89d 2036 	ldrb.w	r2, [sp, #54]	@ 0x36
 8016908:	9207      	str	r2, [sp, #28]
 801690a:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
 801690e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8016912:	9206      	str	r2, [sp, #24]
 8016914:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
 8016918:	9205      	str	r2, [sp, #20]
 801691a:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
 801691e:	9204      	str	r2, [sp, #16]
 8016920:	0a1b      	lsrs	r3, r3, #8
 8016922:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
 8016926:	9203      	str	r2, [sp, #12]
 8016928:	9301      	str	r3, [sp, #4]
 801692a:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
 801692e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8016932:	9202      	str	r2, [sp, #8]
 8016934:	9300      	str	r3, [sp, #0]
 8016936:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016938:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801693c:	f7ff ff38 	bl	80167b0 <sprintf>
 8016940:	b00f      	add	sp, #60	@ 0x3c
 8016942:	bd30      	pop	{r4, r5, pc}

08016944 <uuid_unparse>:
 8016944:	4a01      	ldr	r2, [pc, #4]	@ (801694c <uuid_unparse+0x8>)
 8016946:	f7ff bfbb 	b.w	80168c0 <uuid_unparse_x>
 801694a:	bf00      	nop
 801694c:	08017c9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, fp, ip, sp, lr}

08016950 <__assert_func>:
 8016950:	b507      	push	{r0, r1, r2, lr}
 8016952:	460c      	mov	r4, r1
 8016954:	4619      	mov	r1, r3
 8016956:	b142      	cbz	r2, 801696a <__assert_func+0x1a>
 8016958:	4b05      	ldr	r3, [pc, #20]	@ (8016970 <__assert_func+0x20>)
 801695a:	e9cd 3200 	strd	r3, r2, [sp]
 801695e:	4602      	mov	r2, r0
 8016960:	4623      	mov	r3, r4
 8016962:	4804      	ldr	r0, [pc, #16]	@ (8016974 <__assert_func+0x24>)
 8016964:	f7ff ff14 	bl	8016790 <printf>
 8016968:	e7fe      	b.n	8016968 <__assert_func+0x18>
 801696a:	4b03      	ldr	r3, [pc, #12]	@ (8016978 <__assert_func+0x28>)
 801696c:	461a      	mov	r2, r3
 801696e:	e7f4      	b.n	801695a <__assert_func+0xa>
 8016970:	08017ccf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, fp, ip, sp, lr}
 8016974:	08017cdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, fp, ip, sp, lr}
 8016978:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}

0801697c <isleapyear(int)>:
 801697c:	2264      	movs	r2, #100	@ 0x64
 801697e:	fb90 f3f2 	sdiv	r3, r0, r2
 8016982:	fb02 0313 	mls	r3, r2, r3, r0
 8016986:	b94b      	cbnz	r3, 801699c <isleapyear(int)+0x20>
 8016988:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 801698c:	fb90 f2f3 	sdiv	r2, r0, r3
 8016990:	fb03 0012 	mls	r0, r3, r2, r0
 8016994:	fab0 f080 	clz	r0, r0
 8016998:	0940      	lsrs	r0, r0, #5
 801699a:	4770      	bx	lr
 801699c:	f010 0f03 	tst.w	r0, #3
 80169a0:	bf0c      	ite	eq
 80169a2:	2001      	moveq	r0, #1
 80169a4:	2000      	movne	r0, #0
 80169a6:	4770      	bx	lr

080169a8 <getdaysofmonth(int, int)>:
 80169a8:	b510      	push	{r4, lr}
 80169aa:	4604      	mov	r4, r0
 80169ac:	2c01      	cmp	r4, #1
 80169ae:	4608      	mov	r0, r1
 80169b0:	d102      	bne.n	80169b8 <getdaysofmonth(int, int)+0x10>
 80169b2:	f7ff ffe3 	bl	801697c <isleapyear(int)>
 80169b6:	b918      	cbnz	r0, 80169c0 <getdaysofmonth(int, int)+0x18>
 80169b8:	4b02      	ldr	r3, [pc, #8]	@ (80169c4 <getdaysofmonth(int, int)+0x1c>)
 80169ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80169be:	bd10      	pop	{r4, pc}
 80169c0:	201d      	movs	r0, #29
 80169c2:	e7fc      	b.n	80169be <getdaysofmonth(int, int)+0x16>
 80169c4:	0801ad0c 	stmdaeq	r1, {r2, r3, r8, sl, fp, sp, pc}

080169c8 <gmtime>:
 80169c8:	b570      	push	{r4, r5, r6, lr}
 80169ca:	2800      	cmp	r0, #0
 80169cc:	d03c      	beq.n	8016a48 <gmtime+0x80>
 80169ce:	6803      	ldr	r3, [r0, #0]
 80169d0:	4d1e      	ldr	r5, [pc, #120]	@ (8016a4c <gmtime+0x84>)
 80169d2:	213c      	movs	r1, #60	@ 0x3c
 80169d4:	fb93 f2f1 	sdiv	r2, r3, r1
 80169d8:	fb01 3312 	mls	r3, r1, r2, r3
 80169dc:	602b      	str	r3, [r5, #0]
 80169de:	fb92 f3f1 	sdiv	r3, r2, r1
 80169e2:	fb01 2213 	mls	r2, r1, r3, r2
 80169e6:	606a      	str	r2, [r5, #4]
 80169e8:	2218      	movs	r2, #24
 80169ea:	fb93 f4f2 	sdiv	r4, r3, r2
 80169ee:	fb02 3314 	mls	r3, r2, r4, r3
 80169f2:	60ab      	str	r3, [r5, #8]
 80169f4:	1d22      	adds	r2, r4, #4
 80169f6:	2307      	movs	r3, #7
 80169f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80169fc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8016a00:	1ad2      	subs	r2, r2, r3
 8016a02:	61aa      	str	r2, [r5, #24]
 8016a04:	f240 71b2 	movw	r1, #1970	@ 0x7b2
 8016a08:	f240 166d 	movw	r6, #365	@ 0x16d
 8016a0c:	4608      	mov	r0, r1
 8016a0e:	f7ff ffb5 	bl	801697c <isleapyear(int)>
 8016a12:	2800      	cmp	r0, #0
 8016a14:	bf0c      	ite	eq
 8016a16:	4633      	moveq	r3, r6
 8016a18:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8016a1c:	429c      	cmp	r4, r3
 8016a1e:	db02      	blt.n	8016a26 <gmtime+0x5e>
 8016a20:	1ae4      	subs	r4, r4, r3
 8016a22:	3101      	adds	r1, #1
 8016a24:	e7f2      	b.n	8016a0c <gmtime+0x44>
 8016a26:	f2a1 736c 	subw	r3, r1, #1900	@ 0x76c
 8016a2a:	616b      	str	r3, [r5, #20]
 8016a2c:	61ec      	str	r4, [r5, #28]
 8016a2e:	2600      	movs	r6, #0
 8016a30:	4630      	mov	r0, r6
 8016a32:	f7ff ffb9 	bl	80169a8 <getdaysofmonth(int, int)>
 8016a36:	4284      	cmp	r4, r0
 8016a38:	db02      	blt.n	8016a40 <gmtime+0x78>
 8016a3a:	1a24      	subs	r4, r4, r0
 8016a3c:	3601      	adds	r6, #1
 8016a3e:	e7f7      	b.n	8016a30 <gmtime+0x68>
 8016a40:	3401      	adds	r4, #1
 8016a42:	4802      	ldr	r0, [pc, #8]	@ (8016a4c <gmtime+0x84>)
 8016a44:	612e      	str	r6, [r5, #16]
 8016a46:	60ec      	str	r4, [r5, #12]
 8016a48:	bd70      	pop	{r4, r5, r6, pc}
 8016a4a:	bf00      	nop
 8016a4c:	20009af8 	strdcs	r9, [r0], -r8

08016a50 <localtime>:
 8016a50:	b507      	push	{r0, r1, r2, lr}
 8016a52:	b140      	cbz	r0, 8016a66 <localtime+0x16>
 8016a54:	4b05      	ldr	r3, [pc, #20]	@ (8016a6c <localtime+0x1c>)
 8016a56:	6802      	ldr	r2, [r0, #0]
 8016a58:	681b      	ldr	r3, [r3, #0]
 8016a5a:	681b      	ldr	r3, [r3, #0]
 8016a5c:	a801      	add	r0, sp, #4
 8016a5e:	4413      	add	r3, r2
 8016a60:	9301      	str	r3, [sp, #4]
 8016a62:	f7ff ffb1 	bl	80169c8 <gmtime>
 8016a66:	b003      	add	sp, #12
 8016a68:	f85d fb04 	ldr.w	pc, [sp], #4
 8016a6c:	20009b1c 	andcs	r9, r0, ip, lsl fp

08016a70 <mktime>:
 8016a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a74:	4604      	mov	r4, r0
 8016a76:	2800      	cmp	r0, #0
 8016a78:	d043      	beq.n	8016b02 <mktime+0x92>
 8016a7a:	6941      	ldr	r1, [r0, #20]
 8016a7c:	f1a1 0346 	sub.w	r3, r1, #70	@ 0x46
 8016a80:	2b45      	cmp	r3, #69	@ 0x45
 8016a82:	d83e      	bhi.n	8016b02 <mktime+0x92>
 8016a84:	f240 75b2 	movw	r5, #1970	@ 0x7b2
 8016a88:	2600      	movs	r6, #0
 8016a8a:	f201 776b 	addw	r7, r1, #1899	@ 0x76b
 8016a8e:	f240 186d 	movw	r8, #365	@ 0x16d
 8016a92:	42af      	cmp	r7, r5
 8016a94:	da24      	bge.n	8016ae0 <mktime+0x70>
 8016a96:	6927      	ldr	r7, [r4, #16]
 8016a98:	2f0b      	cmp	r7, #11
 8016a9a:	d832      	bhi.n	8016b02 <mktime+0x92>
 8016a9c:	2500      	movs	r5, #0
 8016a9e:	42af      	cmp	r7, r5
 8016aa0:	d129      	bne.n	8016af6 <mktime+0x86>
 8016aa2:	68e5      	ldr	r5, [r4, #12]
 8016aa4:	2d00      	cmp	r5, #0
 8016aa6:	dd2c      	ble.n	8016b02 <mktime+0x92>
 8016aa8:	4638      	mov	r0, r7
 8016aaa:	f7ff ff7d 	bl	80169a8 <getdaysofmonth(int, int)>
 8016aae:	4285      	cmp	r5, r0
 8016ab0:	dc27      	bgt.n	8016b02 <mktime+0x92>
 8016ab2:	3d01      	subs	r5, #1
 8016ab4:	2318      	movs	r3, #24
 8016ab6:	4435      	add	r5, r6
 8016ab8:	435d      	muls	r5, r3
 8016aba:	68a3      	ldr	r3, [r4, #8]
 8016abc:	2b17      	cmp	r3, #23
 8016abe:	d820      	bhi.n	8016b02 <mktime+0x92>
 8016ac0:	442b      	add	r3, r5
 8016ac2:	213c      	movs	r1, #60	@ 0x3c
 8016ac4:	fb01 f203 	mul.w	r2, r1, r3
 8016ac8:	6863      	ldr	r3, [r4, #4]
 8016aca:	2b3b      	cmp	r3, #59	@ 0x3b
 8016acc:	d819      	bhi.n	8016b02 <mktime+0x92>
 8016ace:	6820      	ldr	r0, [r4, #0]
 8016ad0:	4413      	add	r3, r2
 8016ad2:	283b      	cmp	r0, #59	@ 0x3b
 8016ad4:	fb01 f303 	mul.w	r3, r1, r3
 8016ad8:	d813      	bhi.n	8016b02 <mktime+0x92>
 8016ada:	4418      	add	r0, r3
 8016adc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ae0:	4628      	mov	r0, r5
 8016ae2:	f7ff ff4b 	bl	801697c <isleapyear(int)>
 8016ae6:	2800      	cmp	r0, #0
 8016ae8:	bf0c      	ite	eq
 8016aea:	4643      	moveq	r3, r8
 8016aec:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8016af0:	441e      	add	r6, r3
 8016af2:	3501      	adds	r5, #1
 8016af4:	e7cd      	b.n	8016a92 <mktime+0x22>
 8016af6:	4628      	mov	r0, r5
 8016af8:	f7ff ff56 	bl	80169a8 <getdaysofmonth(int, int)>
 8016afc:	3501      	adds	r5, #1
 8016afe:	4406      	add	r6, r0
 8016b00:	e7cd      	b.n	8016a9e <mktime+0x2e>
 8016b02:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016b06:	e7e9      	b.n	8016adc <mktime+0x6c>

08016b08 <hal::uuid_init(unsigned char*)>:
 8016b08:	4a0c      	ldr	r2, [pc, #48]	@ (8016b3c <hal::uuid_init(unsigned char*)+0x34>)
 8016b0a:	b084      	sub	sp, #16
 8016b0c:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8016b10:	9300      	str	r3, [sp, #0]
 8016b12:	f8d2 1a14 	ldr.w	r1, [r2, #2580]	@ 0xa14
 8016b16:	9101      	str	r1, [sp, #4]
 8016b18:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	@ 0xa18
 8016b1c:	9202      	str	r2, [sp, #8]
 8016b1e:	440b      	add	r3, r1
 8016b20:	4413      	add	r3, r2
 8016b22:	9303      	str	r3, [sp, #12]
 8016b24:	f100 0210 	add.w	r2, r0, #16
 8016b28:	466b      	mov	r3, sp
 8016b2a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8016b2e:	f800 1b01 	strb.w	r1, [r0], #1
 8016b32:	4282      	cmp	r2, r0
 8016b34:	d1f9      	bne.n	8016b2a <hal::uuid_init(unsigned char*)+0x22>
 8016b36:	b004      	add	sp, #16
 8016b38:	4770      	bx	lr
 8016b3a:	bf00      	nop
 8016b3c:	1fff7000 	svcne	0x00ff7000

08016b40 <gettimeofday>:
 8016b40:	4b13      	ldr	r3, [pc, #76]	@ (8016b90 <gettimeofday+0x50>)
 8016b42:	4a14      	ldr	r2, [pc, #80]	@ (8016b94 <gettimeofday+0x54>)
 8016b44:	6819      	ldr	r1, [r3, #0]
 8016b46:	6812      	ldr	r2, [r2, #0]
 8016b48:	b510      	push	{r4, lr}
 8016b4a:	4c13      	ldr	r4, [pc, #76]	@ (8016b98 <gettimeofday+0x58>)
 8016b4c:	601a      	str	r2, [r3, #0]
 8016b4e:	4b13      	ldr	r3, [pc, #76]	@ (8016b9c <gettimeofday+0x5c>)
 8016b50:	1a51      	subs	r1, r2, r1
 8016b52:	fba3 2301 	umull	r2, r3, r3, r1
 8016b56:	6822      	ldr	r2, [r4, #0]
 8016b58:	ea4f 1e93 	mov.w	lr, r3, lsr #6
 8016b5c:	eb02 1293 	add.w	r2, r2, r3, lsr #6
 8016b60:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8016b64:	6863      	ldr	r3, [r4, #4]
 8016b66:	6022      	str	r2, [r4, #0]
 8016b68:	fb0c 111e 	mls	r1, ip, lr, r1
 8016b6c:	fb0c 3301 	mla	r3, ip, r1, r3
 8016b70:	490b      	ldr	r1, [pc, #44]	@ (8016ba0 <gettimeofday+0x60>)
 8016b72:	6063      	str	r3, [r4, #4]
 8016b74:	428b      	cmp	r3, r1
 8016b76:	bfc2      	ittt	gt
 8016b78:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8016b7c:	3201      	addgt	r2, #1
 8016b7e:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8016b82:	e9c0 2300 	strd	r2, r3, [r0]
 8016b86:	bfc8      	it	gt
 8016b88:	e9c4 2300 	strdgt	r2, r3, [r4]
 8016b8c:	2000      	movs	r0, #0
 8016b8e:	bd10      	pop	{r4, pc}
 8016b90:	20009b28 	andcs	r9, r0, r8, lsr #22
 8016b94:	20009ae8 	andcs	r9, r0, r8, ror #21
 8016b98:	20009b20 	andcs	r9, r0, r0, lsr #22
 8016b9c:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 8016ba0:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

08016ba4 <settimeofday>:
 8016ba4:	4a07      	ldr	r2, [pc, #28]	@ (8016bc4 <settimeofday+0x20>)
 8016ba6:	4b08      	ldr	r3, [pc, #32]	@ (8016bc8 <settimeofday+0x24>)
 8016ba8:	4908      	ldr	r1, [pc, #32]	@ (8016bcc <settimeofday+0x28>)
 8016baa:	b410      	push	{r4}
 8016bac:	6814      	ldr	r4, [r2, #0]
 8016bae:	6844      	ldr	r4, [r0, #4]
 8016bb0:	6812      	ldr	r2, [r2, #0]
 8016bb2:	6800      	ldr	r0, [r0, #0]
 8016bb4:	605c      	str	r4, [r3, #4]
 8016bb6:	6018      	str	r0, [r3, #0]
 8016bb8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016bbc:	600a      	str	r2, [r1, #0]
 8016bbe:	2000      	movs	r0, #0
 8016bc0:	4770      	bx	lr
 8016bc2:	bf00      	nop
 8016bc4:	20009ae8 	andcs	r9, r0, r8, ror #21
 8016bc8:	20009b20 	andcs	r9, r0, r0, lsr #22
 8016bcc:	20009b28 	andcs	r9, r0, r8, lsr #22

08016bd0 <time>:
 8016bd0:	4b13      	ldr	r3, [pc, #76]	@ (8016c20 <time+0x50>)
 8016bd2:	4914      	ldr	r1, [pc, #80]	@ (8016c24 <time+0x54>)
 8016bd4:	681a      	ldr	r2, [r3, #0]
 8016bd6:	b430      	push	{r4, r5}
 8016bd8:	680d      	ldr	r5, [r1, #0]
 8016bda:	601d      	str	r5, [r3, #0]
 8016bdc:	4912      	ldr	r1, [pc, #72]	@ (8016c28 <time+0x58>)
 8016bde:	4b13      	ldr	r3, [pc, #76]	@ (8016c2c <time+0x5c>)
 8016be0:	1aaa      	subs	r2, r5, r2
 8016be2:	fba3 3c02 	umull	r3, ip, r3, r2
 8016be6:	680b      	ldr	r3, [r1, #0]
 8016be8:	ea4f 159c 	mov.w	r5, ip, lsr #6
 8016bec:	4604      	mov	r4, r0
 8016bee:	eb03 109c 	add.w	r0, r3, ip, lsr #6
 8016bf2:	684b      	ldr	r3, [r1, #4]
 8016bf4:	6008      	str	r0, [r1, #0]
 8016bf6:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8016bfa:	fb0c 2215 	mls	r2, ip, r5, r2
 8016bfe:	fb0c 3302 	mla	r3, ip, r2, r3
 8016c02:	4a0b      	ldr	r2, [pc, #44]	@ (8016c30 <time+0x60>)
 8016c04:	604b      	str	r3, [r1, #4]
 8016c06:	4293      	cmp	r3, r2
 8016c08:	bfc1      	itttt	gt
 8016c0a:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8016c0e:	3001      	addgt	r0, #1
 8016c10:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8016c14:	e9c1 0300 	strdgt	r0, r3, [r1]
 8016c18:	b104      	cbz	r4, 8016c1c <time+0x4c>
 8016c1a:	6020      	str	r0, [r4, #0]
 8016c1c:	bc30      	pop	{r4, r5}
 8016c1e:	4770      	bx	lr
 8016c20:	20009b28 	andcs	r9, r0, r8, lsr #22
 8016c24:	20009ae8 	andcs	r9, r0, r8, ror #21
 8016c28:	20009b20 	andcs	r9, r0, r0, lsr #22
 8016c2c:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 8016c30:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

08016c34 <operator delete[](void*)>:
 8016c34:	f000 b838 	b.w	8016ca8 <free>

08016c38 <operator delete(void*, unsigned int)>:
 8016c38:	f000 b836 	b.w	8016ca8 <free>

08016c3c <operator new(unsigned int)>:
 8016c3c:	f000 b802 	b.w	8016c44 <malloc>

08016c40 <operator new[](unsigned int)>:
 8016c40:	f000 b800 	b.w	8016c44 <malloc>

08016c44 <malloc>:
 8016c44:	b510      	push	{r4, lr}
 8016c46:	b180      	cbz	r0, 8016c6a <malloc+0x26>
 8016c48:	4b12      	ldr	r3, [pc, #72]	@ (8016c94 <malloc+0x50>)
 8016c4a:	681a      	ldr	r2, [r3, #0]
 8016c4c:	b97a      	cbnz	r2, 8016c6e <malloc+0x2a>
 8016c4e:	4602      	mov	r2, r0
 8016c50:	4911      	ldr	r1, [pc, #68]	@ (8016c98 <malloc+0x54>)
 8016c52:	4c12      	ldr	r4, [pc, #72]	@ (8016c9c <malloc+0x58>)
 8016c54:	6808      	ldr	r0, [r1, #0]
 8016c56:	f102 031b 	add.w	r3, r2, #27
 8016c5a:	f023 030f 	bic.w	r3, r3, #15
 8016c5e:	4403      	add	r3, r0
 8016c60:	42a3      	cmp	r3, r4
 8016c62:	d911      	bls.n	8016c88 <malloc+0x44>
 8016c64:	480e      	ldr	r0, [pc, #56]	@ (8016ca0 <malloc+0x5c>)
 8016c66:	f7fd fc6d 	bl	8014544 <console_error>
 8016c6a:	2000      	movs	r0, #0
 8016c6c:	bd10      	pop	{r4, pc}
 8016c6e:	4282      	cmp	r2, r0
 8016c70:	d201      	bcs.n	8016c76 <malloc+0x32>
 8016c72:	3308      	adds	r3, #8
 8016c74:	e7e9      	b.n	8016c4a <malloc+0x6>
 8016c76:	6858      	ldr	r0, [r3, #4]
 8016c78:	2800      	cmp	r0, #0
 8016c7a:	d0e9      	beq.n	8016c50 <malloc+0xc>
 8016c7c:	6882      	ldr	r2, [r0, #8]
 8016c7e:	605a      	str	r2, [r3, #4]
 8016c80:	2300      	movs	r3, #0
 8016c82:	6083      	str	r3, [r0, #8]
 8016c84:	300c      	adds	r0, #12
 8016c86:	e7f1      	b.n	8016c6c <malloc+0x28>
 8016c88:	600b      	str	r3, [r1, #0]
 8016c8a:	4b06      	ldr	r3, [pc, #24]	@ (8016ca4 <malloc+0x60>)
 8016c8c:	e9c0 3200 	strd	r3, r2, [r0]
 8016c90:	e7f6      	b.n	8016c80 <malloc+0x3c>
 8016c92:	bf00      	nop
 8016c94:	20000008 	andcs	r0, r0, r8
 8016c98:	20000070 	andcs	r0, r0, r0, ror r0
 8016c9c:	1000ec90 	mulne	r0, r0, ip
 8016ca0:	08017d0b 	stmdaeq	r1, {r0, r1, r3, r8, sl, fp, ip, sp, lr}
 8016ca4:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0

08016ca8 <free>:
 8016ca8:	b138      	cbz	r0, 8016cba <free+0x12>
 8016caa:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 8016cae:	4b09      	ldr	r3, [pc, #36]	@ (8016cd4 <free+0x2c>)
 8016cb0:	429a      	cmp	r2, r3
 8016cb2:	d102      	bne.n	8016cba <free+0x12>
 8016cb4:	4b08      	ldr	r3, [pc, #32]	@ (8016cd8 <free+0x30>)
 8016cb6:	681a      	ldr	r2, [r3, #0]
 8016cb8:	b902      	cbnz	r2, 8016cbc <free+0x14>
 8016cba:	4770      	bx	lr
 8016cbc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8016cc0:	4291      	cmp	r1, r2
 8016cc2:	d105      	bne.n	8016cd0 <free+0x28>
 8016cc4:	685a      	ldr	r2, [r3, #4]
 8016cc6:	f840 2c04 	str.w	r2, [r0, #-4]
 8016cca:	380c      	subs	r0, #12
 8016ccc:	6058      	str	r0, [r3, #4]
 8016cce:	4770      	bx	lr
 8016cd0:	3308      	adds	r3, #8
 8016cd2:	e7f0      	b.n	8016cb6 <free+0xe>
 8016cd4:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0
 8016cd8:	20000008 	andcs	r0, r0, r8

08016cdc <__popcountsi2>:
 8016cdc:	0843      	lsrs	r3, r0, #1
 8016cde:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
 8016ce2:	1ac0      	subs	r0, r0, r3
 8016ce4:	0883      	lsrs	r3, r0, #2
 8016ce6:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
 8016cea:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
 8016cee:	4418      	add	r0, r3
 8016cf0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8016cf4:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
 8016cf8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8016cfc:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8016d00:	0e00      	lsrs	r0, r0, #24
 8016d02:	4770      	bx	lr

Disassembly of section .rodata:

08016d04 <CSWTCH.113-0x101b>:
	...
 8016d0c:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8016d10:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8016d14:	00000000 	andeq	r0, r0, r0
 8016d18:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8016d1c:	7261485b 	rsbvc	r4, r1, #5963776	@ 0x5b0000
 8016d20:	75614664 	strbvc	r4, [r1, #-1636]!	@ 0xfffff99c
 8016d24:	0a5d746c 	beq	9773edc <__init_array_end+0x17591a0>
 8016d28:	53202d00 	noppl	{0}	@ <UNPREDICTABLE>
 8016d2c:	6b636174 	blvs	98ef304 <__init_array_end+0x18d45c8>
 8016d30:	61726620 	cmnvs	r2, r0, lsr #12
 8016d34:	0a3a656d 	beq	8eb02f0 <__init_array_end+0xe955b4>
 8016d38:	30522000 	subscc	r2, r2, r0
 8016d3c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8016d40:	000a7825 	andeq	r7, sl, r5, lsr #16
 8016d44:	20315220 	eorscs	r5, r1, r0, lsr #4
 8016d48:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8016d4c:	20000a78 	andcs	r0, r0, r8, ror sl
 8016d50:	20203252 	eorcs	r3, r0, r2, asr r2
 8016d54:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8016d58:	5220000a 	eorpl	r0, r0, #10
 8016d5c:	3d202033 	stccc	0, cr2, [r0, #-204]!	@ 0xffffff34
 8016d60:	0a782520 	beq	9e201e8 <__init_array_end+0x1e054ac>
 8016d64:	31522000 	cmpcc	r2, r0
 8016d68:	203d2032 	eorscs	r2, sp, r2, lsr r0
 8016d6c:	000a7825 	andeq	r7, sl, r5, lsr #16
 8016d70:	20524c20 	subscs	r4, r2, r0, lsr #24
 8016d74:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8016d78:	20000a78 	andcs	r0, r0, r8, ror sl
 8016d7c:	20204350 	eorcs	r4, r0, r0, asr r3
 8016d80:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8016d84:	5020000a 	eorpl	r0, r0, sl
 8016d88:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8016d8c:	0a782520 	beq	9e20214 <__init_array_end+0x1e054d8>
 8016d90:	46202d00 	strtmi	r2, [r0], -r0, lsl #26
 8016d94:	462f5253 			@ <UNDEFINED> instruction: 0x462f5253
 8016d98:	0a3a5241 	beq	8eab6a4 <__init_array_end+0xe90968>
 8016d9c:	46432000 	strbmi	r2, [r3], -r0
 8016da0:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8016da4:	0a782520 	beq	9e2022c <__init_array_end+0x1e054f0>
 8016da8:	46482000 	strbmi	r2, [r8], -r0
 8016dac:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8016db0:	0a782520 	beq	9e20238 <__init_array_end+0x1e054fc>
 8016db4:	46442000 	strbmi	r2, [r4], -r0
 8016db8:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8016dbc:	0a782520 	beq	9e20244 <__init_array_end+0x1e05508>
 8016dc0:	46412000 	strbmi	r2, [r1], -r0
 8016dc4:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8016dc8:	0a782520 	beq	9e20250 <__init_array_end+0x1e05514>
 8016dcc:	4d4d2000 	stclmi	0, cr2, [sp, #-0]
 8016dd0:	20524146 	subscs	r4, r2, r6, asr #2
 8016dd4:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8016dd8:	4220000a 	eormi	r0, r0, #10
 8016ddc:	20524146 	subscs	r4, r2, r6, asr #2
 8016de0:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8016de4:	202d000a 	eorcs	r0, sp, sl
 8016de8:	6373694d 	cmnvs	r3, #1261568	@ 0x134000
 8016dec:	4c20000a 	stcmi	0, cr0, [r0], #-40	@ 0xffffffd8
 8016df0:	58452f52 	stmdapl	r5, {r1, r4, r6, r8, r9, sl, fp, sp}^
 8016df4:	45525f43 	ldrbmi	r5, [r2, #-3907]	@ 0xfffff0bd
 8016df8:	4e525554 	mrcmi	5, 2, r5, cr2, cr4, {2}
 8016dfc:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8016e00:	696c000a 	stmdbvs	ip!, {r1, r3}^
 8016e04:	73746867 	cmnvc	r4, #6750208	@ 0x670000
 8016e08:	3a3a7465 	bcc	8eb3fa4 <__init_array_end+0xe99268>
 8016e0c:	61746144 	cmnvs	r4, r4, asr #2
 8016e10:	65473a3a 	strbvs	r3, [r7, #-2618]	@ 0xfffff5c6
 8016e14:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
 8016e18:	28687467 	stmdacs	r8!, {r0, r1, r2, r5, r6, sl, ip, sp, lr}^
 8016e1c:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 8016e20:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 8016e24:	20297865 	eorcs	r7, r9, r5, ror #16
 8016e28:	30203d21 	eorcc	r3, r0, r1, lsr #26
 8016e2c:	6e795300 	cdpvs	3, 7, cr5, cr9, cr0, {0}
 8016e30:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
 8016e34:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 8016e38:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8016e3c:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 8016e40:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 8016e44:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 8016e48:	646e6573 	strbtvs	r6, [lr], #-1395	@ 0xfffffa8d
 8016e4c:	6e00682e 	cdpvs	8, 0, cr6, cr0, cr14, {1}
 8016e50:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 8016e54:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 8016e58:	203c2078 	eorscs	r2, ip, r8, ror r0
 8016e5c:	54524f50 	ldrbpl	r4, [r2], #-3920	@ 0xfffff0b0
 8016e60:	42490053 	submi	r0, r9, #83	@ 0x53
 8016e64:	756b6361 	strbvc	r6, [fp, #-865]!	@ 0xfffffc9f
 8016e68:	2e2e0070 	mcrcs	0, 1, r0, cr14, cr0, {3}
 8016e6c:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 8016e70:	67696c2d 	strbvs	r6, [r9, -sp, lsr #24]!
 8016e74:	65737468 	ldrbvs	r7, [r3, #-1128]!	@ 0xfffffb98
 8016e78:	6e692f74 	mcrvs	15, 3, r2, cr9, cr4, {3}
 8016e7c:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8016e80:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 8016e84:	73746867 	cmnvc	r4, #6750208	@ 0x670000
 8016e88:	61647465 	cmnvs	r4, r5, ror #8
 8016e8c:	682e6174 	stmdavs	lr!, {r2, r4, r5, r6, r8, sp, lr}
 8016e90:	584d4400 	stmdapl	sp, {sl, lr}^
 8016e94:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 8016e98:	42200064 	eormi	r0, r0, #100	@ 0x64
 8016e9c:	6b616572 	blvs	987046c <__init_array_end+0x1855730>
 8016ea0:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	@ 0xffffff80
 8016ea4:	20202065 	eorcs	r2, r0, r5, rrx
 8016ea8:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8016eac:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	@ 0xffffffd8
 8016eb0:	74204241 	strtvc	r4, [r0], #-577	@ 0xfffffdbf
 8016eb4:	20656d69 	rsbcs	r6, r5, r9, ror #26
 8016eb8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016ebc:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8016ec0:	5220000a 	eorpl	r0, r0, #10
 8016ec4:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8016ec8:	72206873 	eorvc	r6, r0, #7536640	@ 0x730000
 8016ecc:	20657461 	rsbcs	r7, r5, r1, ror #8
 8016ed0:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8016ed4:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 8016ed8:	73746f6c 	cmnvc	r4, #108, 30	@ 0x1b0
 8016edc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016ee0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016ee4:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8016ee8:	506e000a 	rsbpl	r0, lr, sl
 8016eec:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8016ef0:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8016ef4:	43203c20 			@ <UNDEFINED> instruction: 0x43203c20
 8016ef8:	5f524148 	svcpl	0x00524148
 8016efc:	00544942 	subseq	r4, r4, r2, asr #18
 8016f00:	44746553 	ldrbtmi	r6, [r4], #-1363	@ 0xfffffaad
 8016f04:	00617461 	rsbeq	r7, r1, r1, ror #8
 8016f08:	74614470 	strbtvc	r4, [r1], #-1136	@ 0xfffffb90
 8016f0c:	3d212061 	stccc	0, cr2, [r1, #-388]!	@ 0xfffffe7c
 8016f10:	6c756e20 	ldclvs	14, cr6, [r5], #-128	@ 0xffffff80
 8016f14:	7274706c 	rsbsvc	r7, r4, #108	@ 0x6c
 8016f18:	654c6e00 	strbvs	r6, [ip, #-3584]	@ 0xfffff200
 8016f1c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8016f20:	203d2120 	eorscs	r2, sp, r0, lsr #2
 8016f24:	74530030 	ldrbvc	r0, [r3], #-48	@ 0xffffffd0
 8016f28:	2d00706f 	stccs	0, cr7, [r0, #-444]	@ 0xfffffe44
 8016f2c:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 8016f30:	73253a73 			@ <UNDEFINED> instruction: 0x73253a73
 8016f34:	0a64253a 	beq	9920424 <__init_array_end+0x19056e8>
 8016f38:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8016f3c:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 8016f40:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8016f44:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 8016f48:	6e203a69 	vnmulvs.f32	s6, s0, s19
 8016f4c:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 8016f50:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 8016f54:	64253d78 	strtvs	r3, [r5], #-3448	@ 0xfffff288
 8016f58:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8016f5c:	000a7525 	andeq	r7, sl, r5, lsr #10
 8016f60:	202d2d3c 	eorcs	r2, sp, ip, lsr sp
 8016f64:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 8016f68:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 8016f6c:	7453000a 	ldrbvc	r0, [r3], #-10
 8016f70:	00747261 	rsbseq	r7, r4, r1, ror #4
 8016f74:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016f78:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8016f7c:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8016f80:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8016f84:	506e203a 	rsbpl	r2, lr, sl, lsr r0
 8016f88:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8016f8c:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8016f90:	0a64253d 	beq	992048c <__init_array_end+0x1905750>
 8016f94:	2f2e2e00 	svccs	0x002e2e00
 8016f98:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 8016f9c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8016fa0:	2f6b726f 	svccs	0x006b726f
 8016fa4:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 8016fa8:	2f656475 	svccs	0x00656475
 8016fac:	2f74656e 	svccs	0x0074656e
 8016fb0:	70636864 	rsbvc	r6, r3, r4, ror #16
 8016fb4:	6400682e 	strvs	r6, [r0], #-2094	@ 0xfffff7d2
 8016fb8:	5f706368 	svcpl	0x00706368
 8016fbc:	006e7572 	rsbeq	r7, lr, r2, ror r5
 8016fc0:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016fc4:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8016fc8:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8016fcc:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8016fd0:	4470203a 	ldrbtmi	r2, [r0], #-58	@ 0xffffffc6
 8016fd4:	4d706368 	ldclmi	3, cr6, [r0, #-416]!	@ 0xfffffe60
 8016fd8:	61737365 	cmnvs	r3, r5, ror #6
 8016fdc:	3e2d6567 	cfsh64cc	mvdx6, mvdx13, #55
 8016fe0:	3d646978 			@ <UNDEFINED> instruction: 0x3d646978
 8016fe4:	202c7525 	eorcs	r7, ip, r5, lsr #10
 8016fe8:	70636864 	rsbvc	r6, r3, r4, ror #16
 8016fec:	69783e2d 	ldmdbvs	r8!, {r0, r2, r3, r5, r9, sl, fp, ip, sp}^
 8016ff0:	75253d64 	strvc	r3, [r5, #-3428]!	@ 0xfffff29c
 8016ff4:	436e000a 	cmnmi	lr, #10
 8016ff8:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	@ 0xfffffe44
 8016ffc:	3e20736e 	cdpcc	3, 2, cr7, cr0, cr14, {3}
 8017000:	0031203d 	eorseq	r2, r1, sp, lsr r0
 8017004:	74786554 	ldrbtvc	r6, [r8], #-1364	@ 0xfffffaac
 8017008:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 801700c:	2e007375 	mcrcs	3, 0, r7, cr0, cr5, {3}
 8017010:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8017014:	69642d62 	stmdbvs	r4!, {r1, r5, r6, r8, sl, fp, sp}^
 8017018:	616c7073 	smcvs	50947	@ 0xc703
 801701c:	6e692f79 	mcrvs	15, 3, r2, cr9, cr9, {3}
 8017020:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8017024:	32692f65 	rsbcc	r2, r9, #404	@ 0x194
 8017028:	69642f63 	stmdbvs	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 801702c:	616c7073 	smcvs	50947	@ 0xc703
 8017030:	00682e79 	rsbeq	r2, r8, r9, ror lr
 8017034:	776f526e 	strbvc	r5, [pc, -lr, ror #4]!
 8017038:	3d3e2073 	ldccc	0, cr2, [lr, #-460]!	@ 0xfffffe34
 801703c:	7e003120 	adfvcsp	f3, f0, f0
 8017040:	534d4452 	movtpl	r4, #54354	@ 0xd452
 8017044:	65446275 	strbvs	r6, [r4, #-629]	@ 0xfffffd8b
 8017048:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801704c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
 8017050:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 8017054:	6d64722d 	sfmvs	f7, 2, [r4, #-180]!	@ 0xffffff4c
 8017058:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 801705c:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 8017060:	6d64722f 	sfmvs	f7, 2, [r4, #-188]!	@ 0xffffff44
 8017064:	64627573 	strbtvs	r7, [r2], #-1395	@ 0xfffffa8d
 8017068:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801706c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 8017070:	2f2e2e00 	svccs	0x002e2e00
 8017074:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 8017078:	2f6d6472 	svccs	0x006d6472
 801707c:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 8017080:	2f656475 	svccs	0x00656475
 8017084:	70726c6c 	rsbsvc	r6, r2, ip, ror #24
 8017088:	726c6c2f 	rsbvc	r6, ip, #12032	@ 0x2f00
 801708c:	76656470 			@ <UNDEFINED> instruction: 0x76656470
 8017090:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
 8017094:	496e0068 	stmdbmi	lr!, {r3, r5, r6}^
 8017098:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801709c:	203d2120 	eorscs	r2, sp, r0, lsr #2
 80170a0:	4200312d 	andmi	r3, r0, #1073741835	@ 0x4000000b
 80170a4:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
 80170a8:	2f2e2e00 	svccs	0x002e2e00
 80170ac:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 80170b0:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80170b4:	2f6b726f 	svccs	0x006b726f
 80170b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 80170bc:	2f656475 	svccs	0x00656475
 80170c0:	63616d65 	cmnvs	r1, #6464	@ 0x1940
 80170c4:	74656e2f 	strbtvc	r6, [r5], #-3631	@ 0xfffff1d1
 80170c8:	6b726f77 	blvs	9cb2eac <__init_array_end+0x1c98170>
 80170cc:	7300682e 	movwvc	r6, #2094	@ 0x82e
 80170d0:	61486e5f 	cmpvs	r8, pc, asr lr
 80170d4:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
 80170d8:	50524c4c 	subspl	r4, r2, ip, asr #24
 80170dc:	203d2120 	eorscs	r2, sp, r0, lsr #2
 80170e0:	7e00312d 	adfvcsp	f3, f0, #5.0
 80170e4:	534d4452 	movtpl	r4, #54354	@ 0xd452
 80170e8:	6f736e65 	svcvs	0x00736e65
 80170ec:	2e007372 	mcrcs	3, 0, r7, cr0, cr2, {3}
 80170f0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 80170f4:	64722d62 	ldrbtvs	r2, [r2], #-3426	@ 0xfffff29e
 80170f8:	6e692f6d 	cdpvs	15, 6, cr2, cr9, cr13, {3}
 80170fc:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8017100:	64722f65 	ldrbtvs	r2, [r2], #-3941	@ 0xfffff09b
 8017104:	6e65736d 	cdpvs	3, 6, cr7, cr5, cr13, {3}
 8017108:	73726f73 	cmnvc	r2, #460	@ 0x1cc
 801710c:	7e00682e 	cdpvc	8, 0, cr6, cr0, cr14, {1}
 8017110:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8017114:	65447465 	strbvs	r7, [r4, #-1125]	@ 0xfffffb9b
 8017118:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801711c:	2f2e2e00 	svccs	0x002e2e00
 8017120:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 8017124:	2f6d6472 	svccs	0x006d6472
 8017128:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801712c:	2f656475 	svccs	0x00656475
 8017130:	6e6d6472 	mcrvs	4, 3, r6, cr13, cr2, {3}
 8017134:	65647465 	strbvs	r7, [r4, #-1125]!	@ 0xfffffb9b
 8017138:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801713c:	7e00682e 	cdpvc	8, 0, cr6, cr0, cr14, {1}
 8017140:	50524c4c 	subspl	r4, r2, ip, asr #24
 8017144:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8017148:	6e006563 	cfsh32vs	mvfx6, mvfx0, #51
 801714c:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 8017150:	3d3d2078 	ldccc	0, cr2, [sp, #-480]!	@ 0xfffffe20
 8017154:	45003020 	strmi	r3, [r0, #-32]	@ 0xffffffe0
 8017158:	5200646e 	andpl	r6, r0, #1845493760	@ 0x6e000000
 801715c:	654e4d44 	strbvs	r4, [lr, #-3396]	@ 0xfffff2bc
 8017160:	20000a74 	andcs	r0, r0, r4, ror sl
 8017164:	20444943 	subcs	r4, r4, r3, asr #18
 8017168:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 801716c:	4c4c000a 	mcrrmi	0, 0, r0, ip, cr10
 8017170:	44205052 	strtmi	r5, [r0], #-82	@ 0xffffffae
 8017174:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8017178:	20000a65 	andcs	r0, r0, r5, ror #20
 801717c:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 8017180:	50445520 	subpl	r5, r4, r0, lsr #10
 8017184:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017188:	20202020 	eorcs	r2, r0, r0, lsr #32
 801718c:	3a202020 	bcc	881f214 <__init_array_end+0x8044d8>
 8017190:	0a642520 	beq	9920618 <__init_array_end+0x19058dc>
 8017194:	6f4a2000 	svcvs	0x004a2000
 8017198:	52206e69 	eorpl	r6, r0, #1680	@ 0x690
 801719c:	65757165 	ldrbvs	r7, [r5, #-357]!	@ 0xfffffe9b
 80171a0:	20207473 	eorcs	r7, r0, r3, ror r4
 80171a4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80171a8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80171ac:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80171b0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80171b4:	000a6425 	andeq	r6, sl, r5, lsr #8
 80171b8:	6c754d20 	ldclvs	13, cr4, [r5], #-128	@ 0xffffff80
 80171bc:	61636974 	smcvs	13972	@ 0x3694
 80171c0:	52207473 	eorpl	r7, r0, #1929379840	@ 0x73000000
 80171c4:	6f707365 	svcvs	0x00707365
 80171c8:	2065736e 	rsbcs	r7, r5, lr, ror #6
 80171cc:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 80171d0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80171d4:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80171d8:	31000a64 	tstcc	r0, r4, ror #20
 80171dc:	32333a38 	eorscc	r3, r3, #56, 20	@ 0x38000
 80171e0:	0030323a 	eorseq	r3, r0, sl, lsr r2
 80171e4:	20706553 	rsbscs	r6, r0, r3, asr r5
 80171e8:	32203332 	eorcc	r3, r0, #-939524096	@ 0xc8000000
 80171ec:	00343230 	eorseq	r3, r4, r0, lsr r2
 80171f0:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80171f4:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80171f8:	44203133 	strtmi	r3, [r0], #-307	@ 0xfffffecd
 80171fc:	2020584d 	eorcs	r5, r0, sp, asr #16
 8017200:	5520327b 	strpl	r3, [r0, #-635]!	@ 0xfffffd85
 8017204:	6576696e 	ldrbvs	r6, [r6, #-2414]!	@ 0xfffff692
 8017208:	73657372 	cmnvc	r5, #-939524095	@ 0xc8000001
 801720c:	5b1b007d 	blpl	86d7408 <__init_array_end+0x6bc6cc>
 8017210:	256d3233 	strbcs	r3, [sp, #-563]!	@ 0xfffffdcd
 8017214:	305b1b73 	subscc	r1, fp, r3, ror fp
 8017218:	73000a6d 	movwvc	r0, #2669	@ 0xa6d
 801721c:	204e4341 	subcs	r4, lr, r1, asr #6
 8017220:	332e3145 			@ <UNDEFINED> instruction: 0x332e3145
 8017224:	4d442031 	stclmi	0, cr2, [r4, #-196]	@ 0xffffff3c
 8017228:	64252058 	strtvs	r2, [r5], #-88	@ 0xffffffa8
 801722c:	33444700 	movtcc	r4, #18176	@ 0x4700
 8017230:	37344632 			@ <UNDEFINED> instruction: 0x37344632
 8017234:	455f5a30 	ldrbmi	r5, [pc, #-2608]	@ 801680c <snprintf+0x2c>
 8017238:	204c4156 	subcs	r4, ip, r6, asr r1
 801723c:	00584d44 	subseq	r4, r8, r4, asr #26
 8017240:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8017244:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8017248:	44203133 	strtmi	r3, [r0], #-307	@ 0xfffffecd
 801724c:	2520584d 	strcs	r5, [r0, #-2125]!	@ 0xfffff7b3
 8017250:	2e2e0075 	mcrcs	0, 1, r0, cr14, cr5, {3}
 8017254:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 8017258:	6d65722d 	sfmvs	f7, 2, [r5, #-180]!	@ 0xffffff4c
 801725c:	6365746f 	cmnvs	r5, #1862270976	@ 0x6f000000
 8017260:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8017264:	6e692f67 	cdpvs	15, 6, cr2, cr9, cr7, {3}
 8017268:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 801726c:	74682f65 	strbtvc	r2, [r8], #-3941	@ 0xfffff09b
 8017270:	2f647074 	svccs	0x00647074
 8017274:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8017278:	00682e64 	rsbeq	r2, r8, r4, ror #28
 801727c:	006e7552 	rsbeq	r7, lr, r2, asr r5
 8017280:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8017284:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8017288:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 801728c:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8017290:	436e203a 	cmnmi	lr, #58	@ 0x3a
 8017294:	656e6e6f 	strbvs	r6, [lr, #-3695]!	@ 0xfffff191
 8017298:	6f697463 	svcvs	0x00697463
 801729c:	6e61486e 	cdpvs	8, 6, cr4, cr1, cr14, {3}
 80172a0:	3d656c64 	stclcc	12, cr6, [r5, #-400]!	@ 0xfffffe70
 80172a4:	000a7525 	andeq	r7, sl, r5, lsr #10
 80172a8:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 80172ac:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 80172b0:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 80172b4:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 80172b8:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 80172bc:	4556000a 	ldrbmi	r0, [r6, #-10]
 80172c0:	524f5443 	subpl	r5, pc, #1124073472	@ 0x43000000
 80172c4:	524c4c5f 	subpl	r4, ip, #24320	@ 0x5f00
 80172c8:	52505f50 	subspl	r5, r0, #80, 30	@ 0x140
 80172cc:	5f45424f 	svcpl	0x0045424f
 80172d0:	4c504552 	cfldr64mi	mvdx4, [r0], {82}	@ 0x52
 80172d4:	6e4f0059 	mcrvs	0, 2, r0, cr15, cr9, {2}
 80172d8:	73696400 	cmnvc	r9, #0, 8
 80172dc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80172e0:	0a73253a 	beq	9ce07d0 <__init_array_end+0x1cc5a94>
 80172e4:	74707500 	ldrbtvc	r7, [r0], #-1280	@ 0xfffffb00
 80172e8:	3a656d69 	bcc	9972894 <__init_array_end+0x1957b58>
 80172ec:	73752520 	cmnvc	r5, #32, 10	@ 0x8000000
 80172f0:	6576000a 	ldrbvs	r0, [r6, #-10]!
 80172f4:	6f697372 	svcvs	0x00697372
 80172f8:	73253a6e 			@ <UNDEFINED> instruction: 0x73253a6e
 80172fc:	74667400 	strbtvc	r7, [r6], #-1024	@ 0xfffffc00
 8017300:	73253a70 			@ <UNDEFINED> instruction: 0x73253a70
 8017304:	6425000a 	strtvs	r0, [r5], #-10
 8017308:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801730c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017310:	73252c64 			@ <UNDEFINED> instruction: 0x73252c64
 8017314:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 8017318:	252c7525 	strcs	r7, [ip, #-1317]!	@ 0xfffffadb
 801731c:	25000a73 	strcs	r0, [r0, #-2675]	@ 0xfffff58d
 8017320:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017324:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017328:	252c6425 	strcs	r6, [ip, #-1061]!	@ 0xfffffbdb
 801732c:	73252c73 			@ <UNDEFINED> instruction: 0x73252c73
 8017330:	0a75252c 	beq	9d607e8 <__init_array_end+0x1d45aac>
 8017334:	52524500 	subspl	r4, r2, #0, 10
 8017338:	3f23524f 	svccc	0x0023524f
 801733c:	0a746567 	beq	9d308e0 <__init_array_end+0x1d15ba4>
 8017340:	52524500 	subspl	r4, r2, #0, 10
 8017344:	3f23524f 	svccc	0x0023524f
 8017348:	6674000a 	ldrbtvs	r0, [r4], -sl
 801734c:	00237074 	eoreq	r7, r3, r4, ror r0
 8017350:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017354:	2379616c 	cmncs	r9, #108, 2
 8017358:	52524500 	subspl	r4, r2, #0, 10
 801735c:	2123524f 			@ <UNDEFINED> instruction: 0x2123524f
 8017360:	6572000a 	ldrbvs	r0, [r2, #-10]!
 8017364:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801736c <_etext+0x668>
 8017368:	6c002323 	stcvs	3, cr2, [r0], {35}	@ 0x23
 801736c:	23747369 	cmncs	r4, #-1543503871	@ 0xa4000001
 8017370:	72657600 	rsbvc	r7, r5, #0, 12
 8017374:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8017378:	70750023 	rsbsvc	r0, r5, r3, lsr #32
 801737c:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8017380:	65670023 	strbvs	r0, [r7, #-35]!	@ 0xffffffdd
 8017384:	66002374 			@ <UNDEFINED> instruction: 0x66002374
 8017388:	6f746361 	svcvs	0x00746361
 801738c:	23237972 			@ <UNDEFINED> instruction: 0x23237972
 8017390:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 8017394:	64253a22 	strtvs	r3, [r5], #-2594	@ 0xfffff5de
 8017398:	2523002c 	strcs	r0, [r3, #-44]!	@ 0xffffffd4
 801739c:	64253d73 	strtvs	r3, [r5], #-3443	@ 0xfffff28d
 80173a0:	2522000a 	strcs	r0, [r2, #-10]!
 80173a4:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 80173a8:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 80173ac:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 80173b0:	0a73253d 	beq	9ce08ac <__init_array_end+0x1cc5b70>
 80173b4:	62655200 	rsbvs	r5, r5, #0, 4
 80173b8:	69746f6f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80173bc:	2e20676e 	cdpcs	7, 2, cr6, cr0, cr14, {3}
 80173c0:	72002e2e 	andvc	r2, r0, #736	@ 0x2e0
 80173c4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80173c8:	742e6769 	strtvc	r6, [lr], #-1897	@ 0xfffff897
 80173cc:	65007478 	strvs	r7, [r0, #-1144]	@ 0xfffffb88
 80173d0:	742e766e 	strtvc	r7, [lr], #-1646	@ 0xfffff992
 80173d4:	6e007478 	mcrvs	4, 0, r7, cr0, cr8, {3}
 80173d8:	6f777465 	svcvs	0x00777465
 80173dc:	742e6b72 	strtvc	r6, [lr], #-2930	@ 0xfffff48e
 80173e0:	64007478 	strvs	r7, [r0], #-1144	@ 0xfffffb88
 80173e4:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80173e8:	742e7961 	strtvc	r7, [lr], #-2401	@ 0xfffff69f
 80173ec:	65007478 	strvs	r7, [r0, #-1144]	@ 0xfffffb88
 80173f0:	2e313331 	mrccs	3, 1, r3, cr1, cr1, {1}
 80173f4:	00747874 	rsbseq	r7, r4, r4, ror r8
 80173f8:	61726170 	cmnvs	r2, r0, ror r1
 80173fc:	742e736d 	strtvc	r7, [lr], #-877	@ 0xfffffc93
 8017400:	54007478 	strpl	r7, [r0], #-1144	@ 0xfffffb88
 8017404:	20505446 	subscs	r5, r0, r6, asr #8
 8017408:	00206e4f 	eoreq	r6, r0, pc, asr #28
 801740c:	50544654 	subspl	r4, r4, r4, asr r6
 8017410:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 8017414:	6c227b00 			@ <UNDEFINED> instruction: 0x6c227b00
 8017418:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801741c:	69227b3a 	stmdbvs	r2!, {r1, r3, r4, r5, r8, r9, fp, ip, sp, lr}
 8017420:	223a2270 	eorscs	r2, sl, #112, 4
 8017424:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017428:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801742c:	2264252e 	rsbcs	r2, r4, #192937984	@ 0xb800000
 8017430:	616e222c 	cmnvs	lr, ip, lsr #4
 8017434:	3a22656d 	bcc	88b09f0 <__init_array_end+0x895cb4>
 8017438:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801743c:	6f6e222c 	svcvs	0x006e222c
 8017440:	3a226564 	bcc	88b09d8 <__init_array_end+0x895c9c>
 8017444:	7974227b 	ldmdbvc	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 8017448:	3a226570 	bcc	88b0a10 <__init_array_end+0x895cd4>
 801744c:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8017450:	6f70222c 	svcvs	0x0070222c
 8017454:	3a227472 	bcc	88b4624 <__init_array_end+0x8998e8>
 8017458:	7974227b 	ldmdbvc	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 801745c:	3a226570 	bcc	88b0a24 <__init_array_end+0x895ce8>
 8017460:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8017464:	6f63222c 	svcvs	0x0063222c
 8017468:	22746e75 	rsbscs	r6, r4, #1872	@ 0x750
 801746c:	7d64253a 	cfstr64vc	mvdx2, [r4, #-232]!	@ 0xffffff18
 8017470:	007d7d7d 	rsbseq	r7, sp, sp, ror sp
 8017474:	6576227b 	ldrbvs	r2, [r6, #-635]!	@ 0xfffffd85
 8017478:	6f697372 	svcvs	0x00697372
 801747c:	223a226e 	eorscs	r2, sl, #-536870906	@ 0xe0000006
 8017480:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017484:	62222c22 	eorvs	r2, r2, #8704	@ 0x2200
 8017488:	6472616f 	ldrbtvs	r6, [r2], #-367	@ 0xfffffe91
 801748c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8017490:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 8017494:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 8017498:	7b3a2264 	blvc	8e9fe30 <__init_array_end+0xe850f4>
 801749c:	74616422 	strbtvc	r6, [r1], #-1058	@ 0xfffffbde
 80174a0:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 80174a4:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80174a8:	74222c22 	strtvc	r2, [r2], #-3106	@ 0xfffff3de
 80174ac:	22656d69 	rsbcs	r6, r5, #6720	@ 0x1a40
 80174b0:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80174b4:	7d22732a 	stcvc	3, cr7, [r2, #-168]!	@ 0xffffff58
 80174b8:	4447007d 	strbmi	r0, [r7], #-125	@ 0xffffff83
 80174bc:	34463233 	strbcc	r3, [r6], #-563	@ 0xfffffdcd
 80174c0:	5f5a3037 	svcpl	0x005a3037
 80174c4:	4c415645 	mcrrmi	6, 4, r5, r1, cr5
 80174c8:	75227b00 	strvc	r7, [r2, #-2816]!	@ 0xfffff500
 80174cc:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 80174d0:	253a2265 	ldrcs	r2, [sl, #-613]!	@ 0xfffffd9b
 80174d4:	000a7d75 	andeq	r7, sl, r5, ror sp
 80174d8:	6964227b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 80174dc:	616c7073 	smcvs	50947	@ 0xc703
 80174e0:	253a2279 	ldrcs	r2, [sl, #-633]!	@ 0xfffffd87
 80174e4:	7b007d64 	blvc	8036a7c <__init_array_end+0x1bd40>
 80174e8:	6c696622 	stclvs	6, cr6, [r9], #-136	@ 0xffffff78
 80174ec:	3a227365 	bcc	88b4288 <__init_array_end+0x89954c>
 80174f0:	3165227b 	smccc	21035	@ 0x522b
 80174f4:	742e3133 	strtvc	r3, [lr], #-307	@ 0xfffffecd
 80174f8:	3a227478 	bcc	88b46e0 <__init_array_end+0x8999a4>
 80174fc:	43417322 	movtmi	r7, #4898	@ 0x1322
 8017500:	3145204e 	cmpcc	r5, lr, asr #32
 8017504:	2231332e 	eorscs	r3, r1, #-1207959552	@ 0xb8000000
 8017508:	6170222c 	cmnvs	r0, ip, lsr #4
 801750c:	736d6172 	cmnvc	sp, #-2147483620	@ 0x8000001c
 8017510:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 8017514:	44223a22 	strtmi	r3, [r2], #-2594	@ 0xfffff5de
 8017518:	5420584d 	strtpl	r5, [r0], #-2125	@ 0xfffff7b3
 801751c:	736e6172 	cmnvc	lr, #-2147483620	@ 0x8000001c
 8017520:	2274696d 	rsbscs	r6, r4, #1785856	@ 0x1b4000
 8017524:	6964222c 	stmdbvs	r4!, {r2, r3, r5, r9, sp}^
 8017528:	616c7073 	smcvs	50947	@ 0xc703
 801752c:	78742e79 	ldmdavc	r4!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}^
 8017530:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 8017534:	70736944 	rsbsvc	r6, r3, r4, asr #18
 8017538:	2079616c 	rsbscs	r6, r9, ip, ror #2
 801753c:	22464455 	subcs	r4, r6, #1426063360	@ 0x55000000
 8017540:	656e222c 	strbvs	r2, [lr, #-556]!	@ 0xfffffdd4
 8017544:	726f7774 	rsbvc	r7, pc, #116, 14	@ 0x1d00000
 8017548:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 801754c:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 8017550:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8017554:	226b726f 	rsbcs	r7, fp, #-268435450	@ 0xf0000006
 8017558:	6e65222c 	cdpvs	2, 6, cr2, cr5, cr12, {1}
 801755c:	78742e76 	ldmdavc	r4!, {r1, r2, r4, r5, r6, r9, sl, fp, sp}^
 8017560:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 8017564:	69766e45 	ldmdbvs	r6!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 8017568:	6d6e6f72 	stclvs	15, cr6, [lr, #-456]!	@ 0xfffffe38
 801756c:	22746e65 	rsbscs	r6, r4, #1616	@ 0x650
 8017570:	6372222c 	cmnvs	r2, #44, 4	@ 0xc0000002
 8017574:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8017578:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 801757c:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 8017580:	6f6d6552 	svcvs	0x006d6552
 8017584:	63206574 			@ <UNDEFINED> instruction: 0x63206574
 8017588:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801758c:	61727567 	cmnvs	r2, r7, ror #10
 8017590:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8017594:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8017598:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801759c:	7300736a 	movwvc	r7, #874	@ 0x36a
 80175a0:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 80175a4:	736a2e63 	cmnvc	sl, #1584	@ 0x630
 80175a8:	79747300 	ldmdbvc	r4!, {r8, r9, ip, sp, lr}^
 80175ac:	2e73656c 	cdpcs	5, 7, cr6, cr3, cr12, {3}
 80175b0:	00737363 	rsbseq	r7, r3, r3, ror #6
 80175b4:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 80175b8:	736a2e78 	cmnvc	sl, #120, 28	@ 0x780
 80175bc:	74616400 	strbtvc	r6, [r1], #-1024	@ 0xfffffc00
 80175c0:	736a2e65 	cmnvc	sl, #1616	@ 0x650
 80175c4:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
 80175c8:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 80175cc:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 80175d0:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80175d4:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 80175d8:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 80175dc:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 80175e0:	74006c6d 	strvc	r6, [r0], #-3181	@ 0xfffff393
 80175e4:	2e656d69 	cdpcs	13, 6, cr6, cr5, cr9, {3}
 80175e8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 80175ec:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 80175f0:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 80175f4:	544c006c 	strbpl	r0, [ip], #-108	@ 0xffffff94
 80175f8:	54480050 	strbpl	r0, [r8], #-80	@ 0xffffffb0
 80175fc:	41730050 	cmnmi	r3, r0, asr r0
 8017600:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 8017604:	31332e31 	teqcc	r3, r1, lsr lr
 8017608:	64255620 	strtvs	r5, [r5], #-1568	@ 0xfffff9e0
 801760c:	0a64252e 	beq	9920acc <__init_array_end+0x1905d90>
 8017610:	49432000 	stmdbmi	r3, {sp}^
 8017614:	20202044 	eorcs	r2, r0, r4, asr #32
 8017618:	3a202020 	bcc	881f6a0 <__init_array_end+0x804964>
 801761c:	0a732520 	beq	9ce0aa4 <__init_array_end+0x1cc5d68>
 8017620:	754f2000 	strbvc	r2, [pc, #-0]	@ 8017628 <_etext+0x924>
 8017624:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
 8017628:	2020000a 	eorcs	r0, r0, sl
 801762c:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 8017630:	322d2520 	eorcc	r2, sp, #32, 10	@ 0x8000000
 8017634:	2d252075 	stccs	0, cr2, [r5, #-468]!	@ 0xfffffe2c
 8017638:	25207534 	strcs	r7, [r0, #-1332]!	@ 0xfffffacc
 801763c:	20000a73 	andcs	r0, r0, r3, ror sl
 8017640:	75706e49 	ldrbvc	r6, [r0, #-3657]!	@ 0xfffff1b7
 8017644:	20000a74 	andcs	r0, r0, r4, ror sl
 8017648:	726f5020 	rsbvc	r5, pc, #32
 801764c:	2d252074 	stccs	0, cr2, [r5, #-464]!	@ 0xfffffe30
 8017650:	25207532 	strcs	r7, [r0, #-1330]!	@ 0xffffface
 8017654:	2075342d 	rsbscs	r3, r5, sp, lsr #8
 8017658:	75332d25 	ldrvc	r2, [r3, #-3365]!	@ 0xfffff2db
 801765c:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 8017660:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8017664:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017668:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 801766c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8017670:	6c626173 	stfvse	f6, [r2], #-460	@ 0xfffffe34
 8017674:	000a6465 	andeq	r6, sl, r5, ror #8
 8017678:	646c6f68 	strbtvs	r6, [ip], #-3944	@ 0xfffff098
 801767c:	66666f00 	strbtvs	r6, [r6], -r0, lsl #30
 8017680:	616c7000 	cmnvs	ip, r0
 8017684:	63616279 	cmnvs	r1, #-1879048185	@ 0x90000007
 8017688:	6f50006b 	svcvs	0x0050006b
 801768c:	25207472 	strcs	r7, [r0, #-1138]!	@ 0xfffffb8e
 8017690:	6e690075 	mcrvs	0, 3, r0, cr9, cr5, {3}
 8017694:	00747570 	rsbseq	r7, r4, r0, ror r5
 8017698:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801769c:	64007475 	strvs	r7, [r0], #-1141	@ 0xfffffb8b
 80176a0:	62617369 	rsbvs	r7, r1, #-1543503871	@ 0xa4000001
 80176a4:	6c00656c 	cfstr32vs	mvfx6, [r0], {108}	@ 0x6c
 80176a8:	68007074 	stmdavs	r0, {r2, r4, r5, r6, ip, sp, lr}
 80176ac:	63007074 	movwvs	r7, #116	@ 0x74
 80176b0:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 80176b4:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 80176b8:	44006174 	strmi	r6, [r0], #-372	@ 0xfffffe8c
 80176bc:	4f20584d 	svcmi	0x0020584d
 80176c0:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
 80176c4:	4d440074 	stclmi	0, cr0, [r4, #-464]	@ 0xfffffe30
 80176c8:	6e492058 	mcrvs	0, 2, r2, cr9, cr8, {2}
 80176cc:	00747570 	rsbseq	r7, r4, r0, ror r5
 80176d0:	204d4452 	subcs	r4, sp, r2, asr r4
 80176d4:	70736552 	rsbsvc	r6, r3, r2, asr r5
 80176d8:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80176dc:	6f632072 	svcvs	0x00632072
 80176e0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80176e4:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 80176e8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 80176ec:	6f725020 	svcvs	0x00725020
 80176f0:	6f636f74 	svcvs	0x00636f74
 80176f4:	6556206c 	ldrbvs	r2, [r6, #-108]	@ 0xffffff94
 80176f8:	6f697372 	svcvs	0x00697372
 80176fc:	6425206e 	strtvs	r2, [r5], #-110	@ 0xffffff92
 8017700:	0a64252e 	beq	9920bc0 <__init_array_end+0x1905e84>
 8017704:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8017708:	64412058 	strbvs	r2, [r1], #-88	@ 0xffffffa8
 801770c:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 8017710:	20202073 	eorcs	r2, r0, r3, ror r0
 8017714:	3a202020 	bcc	881f79c <__init_array_end+0x804a60>
 8017718:	0a642520 	beq	9920ba0 <__init_array_end+0x1905e64>
 801771c:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8017720:	6f462058 	svcvs	0x00462058
 8017724:	7270746f 	rsbsvc	r7, r0, #1862270976	@ 0x6f000000
 8017728:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801772c:	3a202020 	bcc	881f7b4 <__init_array_end+0x804a78>
 8017730:	0a642520 	beq	9920bb8 <__init_array_end+0x1905e7c>
 8017734:	65502000 	ldrbvs	r2, [r0, #-0]
 8017738:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801773c:	74696c61 	strbtvc	r6, [r9], #-3169	@ 0xfffff39f
 8017740:	64252079 	strtvs	r2, [r5], #-121	@ 0xffffff87
 8017744:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8017748:	5b206425 	blpl	88307e4 <__init_array_end+0x815aa8>
 801774c:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017750:	20000a5d 	andcs	r0, r0, sp, asr sl
 8017754:	20627553 	rsbcs	r7, r2, r3, asr r5
 8017758:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801775c:	20736563 	rsbscs	r6, r3, r3, ror #10
 8017760:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017764:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017768:	20000a64 	andcs	r0, r0, r4, ror #20
 801776c:	736e6553 	cmnvc	lr, #348127232	@ 0x14c00000
 8017770:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8017774:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017778:	20202020 	eorcs	r2, r0, r0, lsr #32
 801777c:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017780:	52000a64 	andpl	r0, r0, #100, 20	@ 0x64000
 8017784:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 8017788:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801778c:	6f632065 	svcvs	0x00632065
 8017790:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017794:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8017798:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801779c:	6e614d20 	cdpvs	13, 6, cr4, cr1, cr0, {1}
 80177a0:	63616675 	cmnvs	r1, #122683392	@ 0x7500000
 80177a4:	65727574 	ldrbvs	r7, [r2, #-1396]!	@ 0xfffffa8c
 80177a8:	614e2072 	hvcvs	57858	@ 0xe202
 80177ac:	3a20656d 	bcc	8830d68 <__init_array_end+0x81602c>
 80177b0:	2a2e2520 	bcs	8ba0c38 <__init_array_end+0xb85efc>
 80177b4:	20000a73 	andcs	r0, r0, r3, ror sl
 80177b8:	756e614d 	strbvc	r6, [lr, #-333]!	@ 0xfffffeb3
 80177bc:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 80177c0:	72657275 	rsbvc	r7, r5, #1342177287	@ 0x50000007
 80177c4:	20444920 	subcs	r4, r4, r0, lsr #18
 80177c8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80177cc:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80177d0:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80177d4:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 80177d8:	61697265 	cmnvs	r9, r5, ror #4
 80177dc:	754e206c 	strbvc	r2, [lr, #-108]	@ 0xffffff94
 80177e0:	7265626d 	rsbvc	r6, r5, #-805306362	@ 0xd0000006
 80177e4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80177e8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80177ec:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 80177f0:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 80177f4:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 80177f8:	0a58322e 	beq	96240b8 <__init_array_end+0x160937c>
 80177fc:	6f522000 	svcvs	0x00522000
 8017800:	6c20746f 	cfstrsvs	mvf7, [r0], #-444	@ 0xfffffe44
 8017804:	6c656261 	sfmvs	f6, 2, [r5], #-388	@ 0xfffffe7c
 8017808:	20202020 	eorcs	r2, r0, r0, lsr #32
 801780c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017810:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017814:	000a732a 	andeq	r7, sl, sl, lsr #6
 8017818:	6f725020 	svcvs	0x00725020
 801781c:	74637564 	strbtvc	r7, [r3], #-1380	@ 0xfffffa9c
 8017820:	74614320 	strbtvc	r4, [r1], #-800	@ 0xfffffce0
 8017824:	726f6765 	rsbvc	r6, pc, #26476544	@ 0x1940000
 8017828:	3a202079 	bcc	881fa14 <__init_array_end+0x804cd8>
 801782c:	322e2520 	eorcc	r2, lr, #32, 10	@ 0x8000000
 8017830:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 8017834:	20000a58 	andcs	r0, r0, r8, asr sl
 8017838:	646f7250 	strbtvs	r7, [pc], #-592	@ 8017840 <_etext+0xb3c>
 801783c:	20746375 	rsbscs	r6, r4, r5, ror r3
 8017840:	61746544 	cmnvs	r4, r4, asr #10
 8017844:	20206c69 	eorcs	r6, r0, r9, ror #24
 8017848:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801784c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017850:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017854:	227b000a 	rsbscs	r0, fp, #10
 8017858:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801785c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8017860:	222c2263 	eorcs	r2, ip, #805306374	@ 0x30000006
 8017864:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 8017868:	6f697463 	svcvs	0x00697463
 801786c:	223a226e 	eorscs	r2, sl, #-536870906	@ 0xe0000006
 8017870:	7d227325 	stcvc	3, cr7, [r2, #-148]!	@ 0xffffff6c
 8017874:	227b002c 	rsbscs	r0, fp, #44	@ 0x2c
 8017878:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801787c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8017880:	222c2263 	eorcs	r2, ip, #805306374	@ 0x30000006
 8017884:	22786d64 	rsbscs	r6, r8, #100, 26	@ 0x1900
 8017888:	73227b3a 			@ <UNDEFINED> instruction: 0x73227b3a
 801788c:	22746e65 	rsbscs	r6, r4, #1616	@ 0x650
 8017890:	7525223a 	strvc	r2, [r5, #-570]!	@ 0xfffffdc6
 8017894:	72222c22 	eorvc	r2, r2, #8704	@ 0x2200
 8017898:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801789c:	22646576 	rsbcs	r6, r4, #494927872	@ 0x1d800000
 80178a0:	7525223a 	strvc	r2, [r5, #-570]!	@ 0xfffffdc6
 80178a4:	222c7d22 	eorcs	r7, ip, #2176	@ 0x880
 80178a8:	226d6472 	rsbcs	r6, sp, #1912602624	@ 0x72000000
 80178ac:	73227b3a 			@ <UNDEFINED> instruction: 0x73227b3a
 80178b0:	22746e65 	rsbscs	r6, r4, #1616	@ 0x650
 80178b4:	63227b3a 			@ <UNDEFINED> instruction: 0x63227b3a
 80178b8:	7373616c 	cmnvc	r3, #108, 2
 80178bc:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 80178c0:	222c2275 	eorcs	r2, ip, #1342177287	@ 0x50000007
 80178c4:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 80178c8:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 80178cc:	223a2279 	eorscs	r2, sl, #-1879048185	@ 0x90000007
 80178d0:	7d227525 	cfstr32vc	mvfx7, [r2, #-148]!	@ 0xffffff6c
 80178d4:	6572222c 	ldrbvs	r2, [r2, #-556]!	@ 0xfffffdd4
 80178d8:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 80178dc:	3a226465 	bcc	88b0a78 <__init_array_end+0x895d3c>
 80178e0:	6f67227b 	svcvs	0x0067227b
 80178e4:	3a22646f 	bcc	88b0aa8 <__init_array_end+0x895d6c>
 80178e8:	22752522 	rsbscs	r2, r5, #142606336	@ 0x8800000
 80178ec:	6162222c 	cmnvs	r2, ip, lsr #4
 80178f0:	223a2264 	eorscs	r2, sl, #100, 4	@ 0x40000006
 80178f4:	2c227525 	cfstr32cs	mvfx7, [r2], #-148	@ 0xffffff6c
 80178f8:	73696422 	cmnvc	r9, #570425344	@ 0x22000000
 80178fc:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 8017900:	3a227972 	bcc	88b5ed0 <__init_array_end+0x89b194>
 8017904:	22752522 	rsbscs	r2, r5, #142606336	@ 0x8800000
 8017908:	007d7d7d 	rsbseq	r7, sp, sp, ror sp
 801790c:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017910:	446d002e 	strbtmi	r0, [sp], #-46	@ 0xffffffd2
 8017914:	000a534e 	andeq	r5, sl, lr, asr #6
 8017918:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801791c:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017920:	7069000a 	rsbvc	r0, r9, sl
 8017924:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8017928:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801792c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017930:	3e2d2064 	cdpcc	0, 2, cr2, cr13, cr4, {3}
 8017934:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017938:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801793c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017940:	656e000a 	strbvs	r0, [lr, #-10]!
 8017944:	73616d74 	cmnvc	r1, #116, 26	@ 0x1d00
 8017948:	25203a6b 	strcs	r3, [r0, #-2667]!	@ 0xfffff595
 801794c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017950:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017954:	2d206425 	cfstrscs	mvf6, [r0, #-148]!	@ 0xffffff6c
 8017958:	6425203e 	strtvs	r2, [r5], #-62	@ 0xffffffc2
 801795c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017960:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017964:	67000a64 	strvs	r0, [r0, -r4, ror #20]
 8017968:	25203a77 	strcs	r3, [r0, #-2679]!	@ 0xfffff589
 801796c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017970:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017974:	2d206425 	cfstrscs	mvf6, [r0, #-148]!	@ 0xffffff6c
 8017978:	6425203e 	strtvs	r2, [r5], #-62	@ 0xffffffc2
 801797c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017980:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017984:	65000a64 	strvs	r0, [r0, #-2660]	@ 0xfffff59c
 8017988:	00306874 	eorseq	r6, r0, r4, ror r8
 801798c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017990:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8017994:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 8017998:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 801799c:	3a78322e 	bcc	9e2425c <__init_array_end+0x1e09520>
 80179a0:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80179a4:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 80179a8:	67000a78 	smlsdxvs	r0, r8, sl, r0
 80179ac:	64616769 	strbtvs	r6, [r1], #-1897	@ 0xfffff897
 80179b0:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 80179b4:	53005f65 	movwpl	r5, #3941	@ 0xf65
 80179b8:	7774666f 	ldrbvc	r6, [r4, -pc, ror #12]!
 80179bc:	54657261 	strbtpl	r7, [r5], #-609	@ 0xfffffd9f
 80179c0:	72656d69 	rsbvc	r6, r5, #6720	@ 0x1a40
 80179c4:	0a646441 	beq	9930ad0 <__init_array_end+0x1915d94>
 80179c8:	63657300 	cmnvs	r5, #0, 6
 80179cc:	61646e6f 	cmnvs	r4, pc, ror #28
 80179d0:	695f7972 	ldmdbvs	pc, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^	@ <UNPREDICTABLE>
 80179d4:	74530070 	ldrbvc	r0, [r3], #-112	@ 0xffffff90
 80179d8:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 80179dc:	00504920 	subseq	r4, r0, r0, lsr #18
 80179e0:	2050544e 	subscs	r5, r0, lr, asr #8
 80179e4:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 80179e8:	44007265 	strmi	r7, [r0], #-613	@ 0xfffffd9b
 80179ec:	38333850 	ldmdacc	r3!, {r4, r6, fp, ip, sp}
 80179f0:	6e003834 	mcrvs	8, 0, r3, cr0, cr4, {1}
 80179f4:	3a3a7465 	bcc	8eb4b90 <__init_array_end+0xe99e54>
 80179f8:	5f796870 	svcpl	0x00796870
 80179fc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8017a00:	50286769 	eorpl	r6, r8, r9, ror #14
 8017a04:	415f5948 	cmpmi	pc, r8, asr #18
 8017a08:	45524444 	ldrbmi	r4, [r2, #-1092]	@ 0xfffffbbc
 8017a0c:	00295353 	eoreq	r5, r9, r3, asr r3
 8017a10:	44007055 	strmi	r7, [r0], #-85	@ 0xffffffab
 8017a14:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8017a18:	464c4148 	strbmi	r4, [ip], -r8, asr #2
 8017a1c:	4c554600 	mrrcmi	6, 0, r4, r5, cr0
 8017a20:	694c004c 	stmdbvs	ip, {r2, r3, r6}^
 8017a24:	25206b6e 	strcs	r6, [r0, #-2926]!	@ 0xfffff492
 8017a28:	25202c73 	strcs	r2, [r0, #-3187]!	@ 0xfffff38d
 8017a2c:	25202c64 	strcs	r2, [r0, #-3172]!	@ 0xfffff39c
 8017a30:	57000a73 	smlsdxpl	r0, r3, sl, r0
 8017a34:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
 8017a38:	6620676e 	strtvs	r6, [r0], -lr, ror #14
 8017a3c:	5020726f 	eorpl	r7, r0, pc, ror #4
 8017a40:	61205948 			@ <UNDEFINED> instruction: 0x61205948
 8017a44:	206f7475 	rsbcs	r7, pc, r5, ror r4	@ <UNPREDICTABLE>
 8017a48:	6f67656e 	svcvs	0x0067656e
 8017a4c:	74616974 	strbtvc	r6, [r1], #-2420	@ 0xfffff68c
 8017a50:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8017a54:	63206f74 			@ <UNDEFINED> instruction: 0x63206f74
 8017a58:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	@ 0xfffffe44
 8017a5c:	00657465 	rsbeq	r7, r5, r5, ror #8
 8017a60:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017a64:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017a68:	2f64252e 	svccs	0x0064252e
 8017a6c:	25206425 	strcs	r6, [r0, #-1061]!	@ 0xfffffbdb
 8017a70:	69460063 	stmdbvs	r6, {r0, r1, r5, r6}^
 8017a74:	61776d72 	cmnvs	r7, r2, ror sp
 8017a78:	56206572 			@ <UNDEFINED> instruction: 0x56206572
 8017a7c:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017a80:	203a4700 	eorscs	r4, sl, r0, lsl #14
 8017a84:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017a88:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017a8c:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8017a90:	25203a4e 	strcs	r3, [r0, #-2638]!	@ 0xfffff5b2
 8017a94:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017a98:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017a9c:	41006425 	tstmi	r0, r5, lsr #8
 8017aa0:	25203a50 	strcs	r3, [r0, #-2640]!	@ 0xfffff5b0
 8017aa4:	6f500064 	svcvs	0x00500064
 8017aa8:	25207472 	strcs	r7, [r0, #-1138]!	@ 0xfffffb8e
 8017aac:	25203a63 	strcs	r3, [r0, #-2659]!	@ 0xfffff59d
 8017ab0:	73252064 			@ <UNDEFINED> instruction: 0x73252064
 8017ab4:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8017ab8:	00584d44 	subseq	r4, r8, r4, asr #26
 8017abc:	20584d44 	subscs	r4, r8, r4, asr #26
 8017ac0:	25207325 	strcs	r7, [r0, #-805]!	@ 0xfffffcdb
 8017ac4:	74450064 	strbvc	r0, [r5], #-100	@ 0xffffff9c
 8017ac8:	6e726568 	cdpvs	5, 7, cr6, cr2, cr8, {3}
 8017acc:	69207465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
 8017ad0:	0074696e 	rsbseq	r6, r4, lr, ror #18
 8017ad4:	65687445 	strbvs	r7, [r8, #-1093]!	@ 0xfffffbbb
 8017ad8:	74656e72 	strbtvc	r6, [r5], #-3698	@ 0xfffff18e
 8017adc:	61747320 	cmnvs	r4, r0, lsr #6
 8017ae0:	55007472 	strpl	r7, [r0, #-1138]	@ 0xfffffb8e
 8017ae4:	4f440050 	svcmi	0x00440050
 8017ae8:	45004e57 	strmi	r4, [r0, #-3671]	@ 0xfffff1a9
 8017aec:	72656874 	rsbvc	r6, r5, #116, 16	@ 0x740000
 8017af0:	2074656e 	rsbscs	r6, r4, lr, ror #10
 8017af4:	6b6e694c 	blvs	9bb202c <__init_array_end+0x1b972f0>
 8017af8:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8017afc:	726f7453 	rsbvc	r7, pc, #1392508928	@ 0x53000000
 8017b00:	76654465 	strbtvc	r4, [r5], -r5, ror #8
 8017b04:	3a656369 	bcc	99708b0 <__init_array_end+0x1955b74>
 8017b08:	52534220 	subspl	r4, r3, #32, 4
 8017b0c:	77204d41 	strvc	r4, [r0, -r1, asr #26]!
 8017b10:	20687469 	rsbcs	r7, r8, r9, ror #8
 8017b14:	61746f74 	cmnvs	r4, r4, ror pc
 8017b18:	6425206c 	strtvs	r2, [r5], #-108	@ 0xffffff94
 8017b1c:	74796220 	ldrbtvc	r6, [r9], #-544	@ 0xfffffde0
 8017b20:	5b207365 	blpl	88348bc <__init_array_end+0x819b80>
 8017b24:	6b206425 	blvs	8830bc0 <__init_array_end+0x815e84>
 8017b28:	000a5d42 	andeq	r5, sl, r2, asr #26
 8017b2c:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8017b30:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 8017b34:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017b38:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017b3c:	002c2264 	eoreq	r2, ip, r4, ror #4
 8017b40:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	@ 0xffffff74
 8017b44:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017b48:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017b4c:	0a64252e 	beq	992100c <__init_array_end+0x19062d0>
 8017b50:	22002b00 	andcs	r2, r0, #0, 22
 8017b54:	3a227325 	bcc	88b47f0 <__init_array_end+0x899ab4>
 8017b58:	25732522 	ldrbcs	r2, [r3, #-1314]!	@ 0xfffffade
 8017b5c:	3a64322e 	bcc	992441c <__init_array_end+0x19096e0>
 8017b60:	75322e25 	ldrvc	r2, [r2, #-3621]!	@ 0xfffff1db
 8017b64:	25002c22 	strcs	r2, [r0, #-3106]	@ 0xfffff3de
 8017b68:	73253d73 			@ <UNDEFINED> instruction: 0x73253d73
 8017b6c:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017b70:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8017b74:	20230075 	eorcs	r0, r3, r5, ror r0
 8017b78:	23207325 			@ <UNDEFINED> instruction: 0x23207325
 8017b7c:	6f4e000a 	svcvs	0x004e000a
 8017b80:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 8017b84:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017b88:	756f6620 	strbvc	r6, [pc, #-1568]!	@ 8017570 <_etext+0x86c>
 8017b8c:	5300646e 	movwpl	r6, #1134	@ 0x46e
 8017b90:	30313148 	eorscc	r3, r1, r8, asr #2
 8017b94:	53530036 	cmppl	r3, #54	@ 0x36
 8017b98:	30333144 	eorscc	r3, r3, r4, asr #2
 8017b9c:	73250036 			@ <UNDEFINED> instruction: 0x73250036
 8017ba0:	75252820 	strvc	r2, [r5, #-2080]!	@ 0xfffff7e0
 8017ba4:	2975252c 	ldmdbcs	r5!, {r2, r3, r5, r8, sl, sp}^
 8017ba8:	aa40000a 	bge	9017bd8 <__init_array_end+0xffce9c>
 8017bac:	00eeaaee 	rsceq	sl, lr, lr, ror #21
 8017bb0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8017bb4:	205d732a 	subscs	r7, sp, sl, lsr #6
 8017bb8:	43207325 			@ <UNDEFINED> instruction: 0x43207325
 8017bbc:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8017bc0:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8017bc4:	25206e6f 	strcs	r6, [r0, #-3695]!	@ 0xfffff191
 8017bc8:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8017bcc:	25207461 	strcs	r7, [r0, #-1121]!	@ 0xfffffb9f
 8017bd0:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8017bd4:	6164227b 	smcvs	16939	@ 0x422b
 8017bd8:	3a226574 	bcc	88b11b0 <__init_array_end+0x896474>
 8017bdc:	2d642522 	cfstr64cs	mvdx2, [r4, #-136]!	@ 0xffffff78
 8017be0:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017be4:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 8017be8:	2e255464 	cdpcs	4, 2, cr5, cr5, cr4, {3}
 8017bec:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8017bf0:	3a64322e 	bcc	99244b0 <__init_array_end+0x1909774>
 8017bf4:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017bf8:	0a7d225a 	beq	9f60568 <__init_array_end+0x1f4582c>
 8017bfc:	64227b00 	strtvs	r7, [r2], #-2816	@ 0xfffff500
 8017c00:	22657461 	rsbcs	r7, r5, #1627389952	@ 0x61000000
 8017c04:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 8017c08:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 8017c0c:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
 8017c10:	25546432 	ldrbcs	r6, [r4, #-1074]	@ 0xfffffbce
 8017c14:	3a64322e 	bcc	99244d4 <__init_array_end+0x1909798>
 8017c18:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017c1c:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8017c20:	25732564 	ldrbcs	r2, [r3, #-1380]!	@ 0xfffffa9c
 8017c24:	3a64322e 	bcc	99244e4 <__init_array_end+0x19097a8>
 8017c28:	75322e25 	ldrvc	r2, [r2, #-3621]!	@ 0xfffff1db
 8017c2c:	000a7d22 	andeq	r7, sl, r2, lsr #26
 8017c30:	31335b1b 	teqcc	r3, fp, lsl fp
 8017c34:	5b1b006d 	blpl	86d7df0 <__init_array_end+0x6bd0b4>
 8017c38:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 8017c3c:	30335b1b 	eorscc	r5, r3, fp, lsl fp
 8017c40:	5b1b006d 	blpl	86d7dfc <__init_array_end+0x6bd0c0>
 8017c44:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8017c48:	33335b1b 	teqcc	r3, #27648	@ 0x6c00
 8017c4c:	5b1b006d 	blpl	86d7e08 <__init_array_end+0x6bd0cc>
 8017c50:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8017c54:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8017c58:	5b1b006d 	blpl	86d7e14 <__init_array_end+0x6bd0d8>
 8017c5c:	006d3134 	rsbeq	r3, sp, r4, lsr r1
 8017c60:	37345b1b 			@ <UNDEFINED> instruction: 0x37345b1b
 8017c64:	5b1b006d 	blpl	86d7e20 <__init_array_end+0x6bd0e4>
 8017c68:	006d3934 	rsbeq	r3, sp, r4, lsr r9
 8017c6c:	34335b1b 	ldrtcc	r5, [r3], #-2843	@ 0xfffff4e5
 8017c70:	7453006d 	ldrbvc	r0, [r3], #-109	@ 0xffffff93
 8017c74:	3a6b6361 	bcc	9af0a00 <__init_array_end+0x1ad5cc4>
 8017c78:	7a695320 	bvc	9a6c900 <__init_array_end+0x1a51bc4>
 8017c7c:	75252065 	strvc	r2, [r5, #-101]!	@ 0xffffff9b
 8017c80:	202c424b 	eorcs	r4, ip, fp, asr #4
 8017c84:	64657355 	strbtvs	r7, [r5], #-853	@ 0xfffffcab
 8017c88:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8017c8c:	7246202c 	subvc	r2, r6, #44	@ 0x2c
 8017c90:	203a6565 	eorscs	r6, sl, r5, ror #10
 8017c94:	1b007525 	blne	8035130 <__init_array_end+0x1a3f4>
 8017c98:	6d39335b 	ldcvs	3, cr3, [r9, #-364]!	@ 0xfffffe94
 8017c9c:	3025000a 	eorcc	r0, r5, sl
 8017ca0:	252d7838 	strcs	r7, [sp, #-2104]!	@ 0xfffff7c8
 8017ca4:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	@ 0xffffff40
 8017ca8:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8017cac:	3230252d 	eorscc	r2, r0, #188743680	@ 0xb400000
 8017cb0:	32302578 	eorscc	r2, r0, #120, 10	@ 0x1e000000
 8017cb4:	30252d78 	eorcc	r2, r5, r8, ror sp
 8017cb8:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017cbc:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017cc0:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017cc4:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017cc8:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017ccc:	2c007832 	stccs	8, cr7, [r0], {50}	@ 0x32
 8017cd0:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 8017cd4:	6f697463 	svcvs	0x00697463
 8017cd8:	00203a6e 	eoreq	r3, r0, lr, ror #20
 8017cdc:	65737361 	ldrbvs	r7, [r3, #-865]!	@ 0xfffffc9f
 8017ce0:	6f697472 	svcvs	0x00697472
 8017ce4:	2522206e 	strcs	r2, [r2, #-110]!	@ 0xffffff92
 8017ce8:	66202273 			@ <UNDEFINED> instruction: 0x66202273
 8017cec:	656c6961 	strbvs	r6, [ip, #-2401]!	@ 0xfffff69f
 8017cf0:	66203a64 	strtvs	r3, [r0], -r4, ror #20
 8017cf4:	20656c69 	rsbcs	r6, r5, r9, ror #24
 8017cf8:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8017cfc:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8017d00:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 8017d04:	25732564 	ldrbcs	r2, [r3, #-1380]!	@ 0xfffffa9c
 8017d08:	6e000a73 			@ <UNDEFINED> instruction: 0x6e000a73
 8017d0c:	20747865 	rsbscs	r7, r4, r5, ror #16
 8017d10:	6c62203e 	stclvs	0, cr2, [r2], #-248	@ 0xffffff08
 8017d14:	5f6b636f 	svcpl	0x006b636f
 8017d18:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 8017d1c:	 	svcmi	0x00000a74

08017d1f <CSWTCH.113>:
 8017d1f:	444e4f4f 	strbmi	r4, [lr], #-3919	@ 0xfffff0b1
 8017d23:	00005246 	andeq	r5, r0, r6, asr #4
	...

08017d28 <vtable for DmxSend>:
	...
 8017d30:	080091c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, pc}
 8017d34:	08009281 	stmdaeq	r0, {r0, r7, r9, ip, pc}
 8017d38:	080093f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, ip, pc}
 8017d3c:	08009361 	stmdaeq	r0, {r0, r5, r6, r8, r9, ip, pc}
 8017d40:	080092f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, pc}
 8017d44:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 8017d48:	0800947d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, ip, pc}
 8017d4c:	080091f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, pc}
 8017d50:	080091e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, ip, pc}
 8017d54:	080091ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, ip, pc}
 8017d58:	080091c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, ip, pc}
 8017d5c:	080091d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, ip, pc}
 8017d60:	08009291 	stmdaeq	r0, {r0, r4, r7, r9, ip, pc}
 8017d64:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8017d68:	08009199 	stmdaeq	r0, {r0, r3, r4, r7, r8, ip, pc}
 8017d6c:	0800919d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, ip, pc}
 8017d70:	080091a3 	stmdaeq	r0, {r0, r1, r5, r7, r8, ip, pc}

08017d74 <vtable for RDMNetDevice>:
	...
 8017d7c:	08009845 	stmdaeq	r0, {r0, r2, r6, fp, ip, pc}
 8017d80:	080098d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, ip, pc}
 8017d84:	0800cfb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, lr, pc}
 8017d88:	0800cfb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, lr, pc}

08017d8c <SOFTWARE_VERSION>:
 8017d8c:	00302e31 	eorseq	r2, r0, r1, lsr lr

08017d90 <SOFTWARE_VERSION>:
 8017d90:	00302e31 	eorseq	r2, r0, r1, lsr lr

08017d94 <s_Output>:
 8017d94:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8017da0:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8017dac:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8017db0:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8017db4:	00000000 	andeq	r0, r0, r0
 8017db8:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8017dbc:	0000006c 	andeq	r0, r0, ip, rrx
 8017dc0:	00000000 	andeq	r0, r0, r0
 8017dc4:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8017dc8:	65646f43 	strbvs	r6, [r4, #-3907]!	@ 0xfffff0bd
 8017dcc:	00000000 	andeq	r0, r0, r0
 8017dd0:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8017ddc:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8017de0:	00006769 	andeq	r6, r0, r9, ror #14
 8017de4:	00000000 	andeq	r0, r0, r0
 8017de8:	70657453 	rsbvc	r7, r5, r3, asr r4
 8017dec:	00726570 	rsbseq	r6, r2, r0, ror r5
 8017df0:	00000000 	andeq	r0, r0, r0
 8017df4:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8017df8:	00007265 	andeq	r7, r0, r5, ror #4
 8017dfc:	00000000 	andeq	r0, r0, r0
 8017e00:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 8017e04:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8017e08:	00000000 	andeq	r0, r0, r0
 8017e0c:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8017e10:	00006c61 	andeq	r6, r0, r1, ror #24
 8017e14:	00000000 	andeq	r0, r0, r0
 8017e18:	20424752 	subcs	r4, r2, r2, asr r7
 8017e1c:	656e6150 	strbvs	r6, [lr, #-336]!	@ 0xfffffeb0
 8017e20:	0000006c 	andeq	r0, r0, ip, rrx
 8017e24:	004d5750 	subeq	r5, sp, r0, asr r7
	...

08017e30 <s_Node>:
 8017e30:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 8017e34:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8017e40:	41730000 	cmnmi	r3, r0
 8017e44:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 8017e48:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8017e54:	2043534f 	subcs	r5, r3, pc, asr #6
 8017e58:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 8017e5c:	00007265 	andeq	r7, r0, r5, ror #4
 8017e60:	00000000 	andeq	r0, r0, r0
 8017e64:	544c0000 	strbpl	r0, [ip], #-0
 8017e68:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8017e78:	2043534f 	subcs	r5, r3, pc, asr #6
 8017e7c:	65696c43 	strbvs	r6, [r9, #-3139]!	@ 0xfffff3bd
 8017e80:	0000746e 	andeq	r7, r0, lr, ror #8
 8017e84:	00000000 	andeq	r0, r0, r0
 8017e88:	44520000 	ldrbmi	r0, [r2], #-0
 8017e8c:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 8017e90:	524c4c20 	subpl	r4, ip, #32, 24	@ 0x2000
 8017e94:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8017e98:	0000796c 	andeq	r7, r0, ip, ror #18
 8017e9c:	776f6853 			@ <UNDEFINED> instruction: 0x776f6853
 8017ea0:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
	...
 8017eac:	494d0000 	stmdbmi	sp, {}^	@ <UNPREDICTABLE>
 8017eb0:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8017ec0:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8017ed0:	69500000 	ldmdbvs	r0, {}^	@ <UNPREDICTABLE>
 8017ed4:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8017ed8:	65687375 	strbvs	r7, [r8, #-885]!	@ 0xfffffc8b
 8017edc:	00000072 	andeq	r0, r0, r2, ror r0
 8017ee0:	00000000 	andeq	r0, r0, r0
 8017ee4:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
	...
 8017ef4:	6f420000 	svcvs	0x00420000
 8017ef8:	6f6c746f 	svcvs	0x006c746f
 8017efc:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8017f00:	54465420 	strbpl	r5, [r6], #-1056	@ 0xfffffbe0
 8017f04:	00000050 	andeq	r0, r0, r0, asr r0
 8017f08:	204d4452 	subcs	r4, sp, r2, asr r4
 8017f0c:	70736552 	rsbsvc	r6, r3, r2, asr r5
 8017f10:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8017f14:	00000072 	andeq	r0, r0, r2, ror r0
 8017f18:	00000000 	andeq	r0, r0, r0

08017f1c <RemoteConfig::s_SET>:
 8017f1c:	0800a0c9 	stmdaeq	r0, {r0, r3, r6, r7, sp, pc}
 8017f20:	00000000 	andeq	r0, r0, r0
 8017f24:	0801734a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp, lr}
 8017f28:	00010005 	andeq	r0, r1, r5
 8017f2c:	0800a0a1 	stmdaeq	r0, {r0, r5, r7, sp, pc}
 8017f30:	00000000 	andeq	r0, r0, r0
 8017f34:	08017350 	stmdaeq	r1, {r4, r6, r8, r9, ip, sp, lr}
 8017f38:	00010008 	andeq	r0, r1, r8

08017f3c <RemoteConfig::s_GET>:
 8017f3c:	0800a8f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, sp, pc}
 8017f40:	00000000 	andeq	r0, r0, r0
 8017f44:	08017362 	stmdaeq	r1, {r1, r5, r6, r8, r9, ip, sp, lr}
 8017f48:	00000008 	andeq	r0, r0, r8
 8017f4c:	08009ff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
 8017f50:	00000000 	andeq	r0, r0, r0
 8017f54:	0801736b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
 8017f58:	00000005 	andeq	r0, r0, r5
 8017f5c:	08009f6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, pc}
 8017f60:	00000000 	andeq	r0, r0, r0
 8017f64:	08017371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, ip, sp, lr}
 8017f68:	00000008 	andeq	r0, r0, r8
 8017f6c:	08009ee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, ip, pc}
 8017f70:	00000000 	andeq	r0, r0, r0
 8017f74:	08017350 	stmdaeq	r1, {r4, r6, r8, r9, ip, sp, lr}
 8017f78:	00000008 	andeq	r0, r0, r8
 8017f7c:	08009f2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, fp, ip, pc}
 8017f80:	00000000 	andeq	r0, r0, r0
 8017f84:	0801737a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, ip, sp, lr}
 8017f88:	00000007 	andeq	r0, r0, r7
 8017f8c:	0800a2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sp, pc}
 8017f90:	00000000 	andeq	r0, r0, r0
 8017f94:	08017382 	stmdaeq	r1, {r1, r7, r8, r9, ip, sp, lr}
 8017f98:	00010004 	andeq	r0, r1, r4
 8017f9c:	08009fa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip, pc}
 8017fa0:	00000000 	andeq	r0, r0, r0
 8017fa4:	0801734a 	stmdaeq	r1, {r1, r3, r6, r8, r9, ip, sp, lr}
 8017fa8:	00000005 	andeq	r0, r0, r5
 8017fac:	0800a645 	stmdaeq	r0, {r0, r2, r6, r9, sl, sp, pc}
 8017fb0:	00000000 	andeq	r0, r0, r0
 8017fb4:	08017387 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, ip, sp, lr}
 8017fb8:	00000009 	andeq	r0, r0, r9

08017fbc <paramMasks>:
 8017fbc:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}
 8017fc0:	00000001 	andeq	r0, r0, r1
 8017fc4:	08018468 	stmdaeq	r1, {r3, r5, r6, sl, pc}
 8017fc8:	00000002 	andeq	r0, r0, r2
 8017fcc:	0801845a 	stmdaeq	r1, {r1, r3, r4, r6, sl, pc}
 8017fd0:	00000004 	andeq	r0, r0, r4
 8017fd4:	0801844c 	stmdaeq	r1, {r2, r3, r6, sl, pc}
 8017fd8:	00000008 	andeq	r0, r0, r8
 8017fdc:	0801843d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, pc}
 8017fe0:	00000020 	andeq	r0, r0, r0, lsr #32

08017fe4 <RemoteConfig::s_TXT>:
 8017fe4:	0800a2ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sp, pc}
 8017fe8:	00000000 	andeq	r0, r0, r0
 8017fec:	0800a57d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, sp, pc}
 8017ff0:	00000000 	andeq	r0, r0, r0
 8017ff4:	080173c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, ip, sp, lr}
 8017ff8:	0000000b 	andeq	r0, r0, fp
 8017ffc:	0800a315 	stmdaeq	r0, {r0, r2, r4, r8, r9, sp, pc}
 8018000:	00000000 	andeq	r0, r0, r0
 8018004:	0800a5a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, sp, pc}
 8018008:	00000000 	andeq	r0, r0, r0
 801800c:	080173cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, ip, sp, lr}
 8018010:	00000007 	andeq	r0, r0, r7
 8018014:	0800a339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sp, pc}
 8018018:	00000000 	andeq	r0, r0, r0
 801801c:	0800a5c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, sp, pc}
 8018020:	00000000 	andeq	r0, r0, r0
 8018024:	080173d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, ip, sp, lr}
 8018028:	0000000b 	andeq	r0, r0, fp
 801802c:	0800a3b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sp, pc}
 8018030:	00000000 	andeq	r0, r0, r0
 8018034:	0800a625 	stmdaeq	r0, {r0, r2, r5, r9, sl, sp, pc}
 8018038:	00000000 	andeq	r0, r0, r0
 801803c:	080173e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, ip, sp, lr}
 8018040:	0000000b 	andeq	r0, r0, fp
 8018044:	0800a361 	stmdaeq	r0, {r0, r5, r6, r8, r9, sp, pc}
 8018048:	00000000 	andeq	r0, r0, r0
 801804c:	0800a5e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, sp, pc}
 8018050:	00000000 	andeq	r0, r0, r0
 8018054:	080173ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, ip, sp, lr}
 8018058:	00000008 	andeq	r0, r0, r8
 801805c:	0800a389 	stmdaeq	r0, {r0, r3, r7, r8, r9, sp, pc}
 8018060:	00000000 	andeq	r0, r0, r0
 8018064:	0800a605 	stmdaeq	r0, {r0, r2, r9, sl, sp, pc}
 8018068:	00000000 	andeq	r0, r0, r0
 801806c:	080173f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 8018070:	0000000a 	andeq	r0, r0, sl
 8018074:	00000020 	andeq	r0, r0, r0, lsr #32
 8018078:	00544547 	subseq	r4, r4, r7, asr #10
 801807c:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 8018080:	00000000 	andeq	r0, r0, r0
 8018084:	0000002f 	andeq	r0, r0, pc, lsr #32
 8018088:	50545448 	subspl	r5, r4, r8, asr #8
 801808c:	00000000 	andeq	r0, r0, r0
 8018090:	00000a20 	andeq	r0, r0, r0, lsr #20
 8018094:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8018098:	0000003a 	andeq	r0, r0, sl, lsr r0
 801809c:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80180a0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80180a4:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 80180a8:	00000000 	andeq	r0, r0, r0
 80180ac:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80180b0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80180b4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80180b8:	00006874 	andeq	r6, r0, r4, ror r8
 80180bc:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 80180c0:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80180c4:	2f6e6f69 	svccs	0x006e6f69
 80180c8:	00000000 	andeq	r0, r0, r0
 80180cc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80180d0:	00000000 	andeq	r0, r0, r0
 80180d4:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 80180d8:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 80180dc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
 80180e0:	00000000 	andeq	r0, r0, r0
 80180e4:	00003b20 	andeq	r3, r0, r0, lsr #22
 80180e8:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80180ec:	00000000 	andeq	r0, r0, r0
 80180f0:	6f736a2f 	svcvs	0x00736a2f
 80180f4:	00002f6e 	andeq	r2, r0, lr, ror #30
 80180f8:	2f786d64 	svccs	0x00786d64
 80180fc:	00000000 	andeq	r0, r0, r0
 8018100:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 8018104:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 8018108:	00006c6d 	andeq	r6, r0, sp, ror #24
 801810c:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 8018110:	00000000 	andeq	r0, r0, r0
 8018114:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8018118:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801811c:	00000000 	andeq	r0, r0, r0
 8018120:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	@ 0xffffff44
 8018124:	00000065 	andeq	r0, r0, r5, rrx
 8018128:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801812c:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 8018130:	0000006c 	andeq	r0, r0, ip, rrx
 8018134:	6f736a2f 	svcvs	0x00736a2f
 8018138:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 801813c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018140:	00000000 	andeq	r0, r0, r0
 8018144:	6f736a2f 	svcvs	0x00736a2f
 8018148:	0000006e 	andeq	r0, r0, lr, rrx
 801814c:	6f626572 	svcvs	0x00626572
 8018150:	0000746f 	andeq	r7, r0, pc, ror #8
 8018154:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018158:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801815c:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8018160:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8018164:	00000000 	andeq	r0, r0, r0
 8018168:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801816c:	0000003d 	andeq	r0, r0, sp, lsr r0
 8018170:	4f44213c 	svcmi	0x0044213c
 8018174:	50595443 	subspl	r5, r9, r3, asr #8
 8018178:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801817c:	0a3e6c6d 	beq	8fb3338 <__init_array_end+0xf985fc>
 8018180:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018184:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8018188:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801818c:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018190:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018194:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	@ 0xfffffeb4
 8018198:	2f3c7469 	svccs	0x003c7469
 801819c:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 80181a0:	2f3c3e65 	svccs	0x003c3e65
 80181a4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80181a8:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 80181ac:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80181b0:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80181b4:	2f3c4b4f 	svccs	0x003c4b4f
 80181b8:	3c3e3168 	ldfccs	f3, [lr], #-416	@ 0xfffffe60
 80181bc:	646f622f 	strbtvs	r6, [pc], #-559	@ 80181c4 <RemoteConfig::s_TXT+0x1e0>
 80181c0:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 80181c4:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 80181c8:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80181cc:	20646142 	rsbcs	r6, r4, r2, asr #2
 80181d0:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80181d4:	00747365 	rsbseq	r7, r4, r5, ror #6
 80181d8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80181dc:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80181e0:	6f727245 	svcvs	0x00727245
 80181e4:	00000072 	andeq	r0, r0, r2, ror r0
 80181e8:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80181ec:	20747365 	rsbscs	r7, r4, r5, ror #6
 80181f0:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 80181f4:	54207974 	strtpl	r7, [r0], #-2420	@ 0xfffff68c
 80181f8:	4c206f6f 	stcmi	15, cr6, [r0], #-444	@ 0xfffffe44
 80181fc:	65677261 	strbvs	r7, [r7, #-609]!	@ 0xfffffd9f
 8018200:	00000000 	andeq	r0, r0, r0
 8018204:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 8018208:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	@ 0xfffffe6c
 801820c:	20495255 	subcs	r5, r9, r5, asr r2
 8018210:	206f6f54 	rsbcs	r6, pc, r4, asr pc	@ <UNPREDICTABLE>
 8018214:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8018218:	00000000 	andeq	r0, r0, r0
 801821c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 8018220:	6c616e72 	stclvs	14, cr6, [r1], #-456	@ 0xfffffe38
 8018224:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 8018228:	20726576 	rsbscs	r6, r2, r6, ror r5
 801822c:	6f727245 	svcvs	0x00727245
 8018230:	00000072 	andeq	r0, r0, r2, ror r0
 8018234:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
 8018238:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
 801823c:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 8018240:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
 8018244:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8018248:	00006465 	andeq	r6, r0, r5, ror #8
 801824c:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8018250:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8018254:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018258:	70707553 	rsbsvc	r7, r0, r3, asr r5
 801825c:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8018260:	00000064 	andeq	r0, r0, r4, rrx
 8018264:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018268:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 801826c:	00000064 	andeq	r0, r0, r4, rrx
 8018270:	00004b4f 	andeq	r4, r0, pc, asr #22
 8018274:	4f44213c 	svcmi	0x0044213c
 8018278:	50595443 	subspl	r5, r9, r3, asr #8
 801827c:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8018280:	0a3e6c6d 	beq	8fb343c <__init_array_end+0xf98700>
 8018284:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018288:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801828c:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018290:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018294:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018298:	25207525 	strcs	r7, [r0, #-1317]!	@ 0xfffffadb
 801829c:	742f3c73 	strtvc	r3, [pc], #-3187	@ 80182a4 <RemoteConfig::s_TXT+0x2c0>
 80182a0:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 80182a4:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 80182a8:	3e646165 	powccsz	f6, f4, f5
 80182ac:	6f623c0a 	svcvs	0x00623c0a
 80182b0:	3c3e7964 			@ <UNDEFINED> instruction: 0x3c3e7964
 80182b4:	253e3168 	ldrcs	r3, [lr, #-360]!	@ 0xfffffe98
 80182b8:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 80182bc:	2f3c3e31 	svccs	0x003c3e31
 80182c0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80182c4:	2f3c0a3e 	svccs	0x003c0a3e
 80182c8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 80182cc:	00000a3e 	andeq	r0, r0, lr, lsr sl
 80182d0:	50545448 	subspl	r5, r4, r8, asr #8
 80182d4:	312e312f 			@ <UNDEFINED> instruction: 0x312e312f
 80182d8:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80182dc:	0a0d7325 	beq	8374f78 <__init_array_end+0x35a23c>
 80182e0:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 80182e4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80182e8:	0a0d7325 	beq	8374f84 <__init_array_end+0x35a248>
 80182ec:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80182f0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80182f4:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 80182f8:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 80182fc:	6f430a0d 	svcvs	0x00430a0d
 8018300:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8018304:	654c2d74 	strbvs	r2, [ip, #-3444]	@ 0xfffff28c
 8018308:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 801830c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8018310:	6f430a0d 	svcvs	0x00430a0d
 8018314:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 8018318:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801831c:	6c63203a 	stclvs	0, cr2, [r3], #-232	@ 0xffffff18
 8018320:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	@ 0xfffffe44
 8018324:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8018328:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 801832c:	73252073 			@ <UNDEFINED> instruction: 0x73252073
 8018330:	00000000 	andeq	r0, r0, r0
 8018334:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 8018338:	30373446 	eorscc	r3, r7, r6, asr #8
 801833c:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 8018340:	00004c41 	andeq	r4, r0, r1, asr #24
 8018344:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 8018348:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 801834c:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8018350:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 8018354:	0000000a 	andeq	r0, r0, sl
 8018358:	72746552 	rsbsvc	r6, r4, #343932928	@ 0x14800000
 801835c:	726f2079 	rsbvc	r2, pc, #121	@ 0x79
 8018360:	65757120 	ldrbvs	r7, [r5, #-288]!	@ 0xfffffee0
 8018364:	74206575 	strtvc	r6, [r0], #-1397	@ 0xfffffa8b
 8018368:	64206568 	strtvs	r6, [r0], #-1384	@ 0xfffffa98
 801836c:	20617461 	rsbcs	r7, r1, r1, ror #8
 8018370:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8018374:	6574616c 	ldrbvs	r6, [r4, #-364]!	@ 0xfffffe94
 8018378:	72742072 	rsbsvc	r2, r4, #114	@ 0x72
 801837c:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	@ 0xfffffe7c
 8018380:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8018384:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8018388:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 801838c:	000a646e 	andeq	r6, sl, lr, ror #8

08018390 <s_contentType>:
 8018390:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8018394:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8018398:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80183b0:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 80183b4:	7373632f 	cmnvc	r3, #-1140850688	@ 0xbc000000
	...
 80183d0:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 80183d4:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80183d8:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 80183dc:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80183f0:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 80183f4:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80183f8:	2f6e6f69 	svccs	0x006e6f69
 80183fc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
 8018410:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8018414:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8018418:	2f6e6f69 	svccs	0x006e6f69
 801841c:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 8018420:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 8018424:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
	...

08018430 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8018430:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018434:	5f79616c 	svcpl	0x0079616c
 8018438:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801843d <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801843d:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8018441:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8018445:	6f746361 	svcvs	0x00746361
 8018449:	 	strvs	r7, [r0, #-2418]	@ 0xfffff68e

0801844c <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 801844c:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8018450:	755f656c 	ldrbvc	r6, [pc, #-1388]	@ 8017eec <s_Node+0xbc>
 8018454:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 8018458:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801845a <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801845a:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801845e:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 8018462:	6f6f6265 	svcvs	0x006f6265
 8018466:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08018468 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8018468:	61736964 	cmnvs	r3, r4, ror #18
 801846c:	5f656c62 	svcpl	0x00656c62
 8018470:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 8018474:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

08018476 <RemoteConfigConst::PARAMS_DISABLE>:
 8018476:	61736964 	cmnvs	r3, r4, ror #18
 801847a:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801847e <RemoteConfigConst::PARAMS_FILE_NAME>:
 801847e:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8018482:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 8018486:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801848c <HttpContent>:
 801848c:	08017598 	stmdaeq	r1, {r3, r4, r7, r8, sl, ip, sp, lr}
 8018490:	08019c63 	stmdaeq	r1, {r0, r1, r5, r6, sl, fp, ip, pc}
 8018494:	00000551 	andeq	r0, r0, r1, asr r5
 8018498:	00000002 	andeq	r0, r0, r2
 801849c:	0801759f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, ip, sp, lr}
 80184a0:	0801979f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, ip, pc}
 80184a4:	000004c3 	andeq	r0, r0, r3, asr #9
 80184a8:	00000002 	andeq	r0, r0, r2
 80184ac:	080175a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, ip, sp, lr}
 80184b0:	08019605 	stmdaeq	r1, {r0, r2, r9, sl, ip, pc}
 80184b4:	00000199 	muleq	r0, r9, r1
 80184b8:	00000001 	andeq	r0, r0, r1
 80184bc:	080175b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, ip, sp, lr}
 80184c0:	08019190 	stmdaeq	r1, {r4, r7, r8, ip, pc}
 80184c4:	00000474 	andeq	r0, r0, r4, ror r4
 80184c8:	00000002 	andeq	r0, r0, r2
 80184cc:	080175bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, ip, sp, lr}
 80184d0:	08018ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, pc}
 80184d4:	000002cc 	andeq	r0, r0, ip, asr #5
 80184d8:	00000002 	andeq	r0, r0, r2
 80184dc:	080175c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, ip, sp, lr}
 80184e0:	08018dc4 	stmdaeq	r1, {r2, r6, r7, r8, sl, fp, pc}
 80184e4:	000000fe 	strdeq	r0, [r0], -lr
 80184e8:	00000002 	andeq	r0, r0, r2
 80184ec:	080175d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, ip, sp, lr}
 80184f0:	08018c3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, fp, pc}
 80184f4:	00000186 	andeq	r0, r0, r6, lsl #3
 80184f8:	00000002 	andeq	r0, r0, r2
 80184fc:	080175d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, sp, lr}
 8018500:	0801899f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, fp, pc}
 8018504:	0000029d 	muleq	r0, sp, r2
 8018508:	00000000 	andeq	r0, r0, r0
 801850c:	080175e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, ip, sp, lr}
 8018510:	08018747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, pc}
 8018514:	00000257 	andeq	r0, r0, r7, asr r2
 8018518:	00000000 	andeq	r0, r0, r0
 801851c:	080175ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, ip, sp, lr}
 8018520:	0801852c 	stmdaeq	r1, {r2, r3, r5, r8, sl, pc}
 8018524:	0000021a 	andeq	r0, r0, sl, lsl r2
 8018528:	00000000 	andeq	r0, r0, r0

0801852c <dmx_html>:
 801852c:	4f44213c 	svcmi	0x0044213c
 8018530:	50595443 	subspl	r5, r9, r3, asr #8
 8018534:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8018538:	0a3e6c6d 	beq	8fb36f4 <__init_array_end+0xf989b8>
 801853c:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018540:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8018544:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018548:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801854c:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 8018550:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 8018554:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 8018558:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 801855c:	20227465 	eorcs	r7, r2, r5, ror #8
 8018560:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 8018564:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 8018568:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801856c:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 8018570:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 8018574:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 8018578:	443e656c 	ldrtmi	r6, [lr], #-1388	@ 0xfffffa94
 801857c:	2f3c584d 	svccs	0x003c584d
 8018580:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 8018584:	2f3c3e65 	svccs	0x003c3e65
 8018588:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801858c:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8018590:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018594:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 8018598:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801859c:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 80185a0:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 80185a4:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 80185a8:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 80185ac:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8017976 <_etext+0xc72>
 80185b0:	2f3c3e6c 	svccs	0x003c3e6c
 80185b4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80185b8:	0a3e7265 	beq	8fb4f54 <__init_array_end+0xf9a218>
 80185bc:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 80185c0:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 80185c4:	6f206e6f 	svcvs	0x00206e6f
 80185c8:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80185cc:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 80185d0:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 80185d4:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 80185d8:	523e2229 	eorspl	r2, lr, #-1879048190	@ 0x90000002
 80185dc:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 80185e0:	2f3c6873 	svccs	0x003c6873
 80185e4:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 80185e8:	3c3e6e6f 	ldccc	14, cr6, [lr], #-444	@ 0xfffffe44
 80185ec:	0a3e702f 	beq	8fb46b0 <__init_array_end+0xf99974>
 80185f0:	7669643c 			@ <UNDEFINED> instruction: 0x7669643c
 80185f4:	616c6320 	cmnvs	ip, r0, lsr #6
 80185f8:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 80185fc:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 8018600:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	@ 0xfffffe34
 8018604:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 8018608:	64692065 	strbtvs	r2, [r9], #-101	@ 0xffffff9b
 801860c:	6469223d 	strbtvs	r2, [r9], #-573	@ 0xfffffdc3
 8018610:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 8018614:	62202273 	eorvs	r2, r0, #805306375	@ 0x30000007
 8018618:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 801861c:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 8018620:	2f3c3e27 	svccs	0x003c3e27
 8018624:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 8018628:	2f3c3e65 	svccs	0x003c3e65
 801862c:	3e766964 	vsubcc.f16	s13, s12, s9	@ <UNPREDICTABLE>
 8018630:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 8018634:	6c632076 	stclvs	0, cr2, [r3], #-472	@ 0xfffffe28
 8018638:	3d737361 	ldclcc	3, cr7, [r3, #-388]!	@ 0xfffffe7c
 801863c:	726f7022 	rsbvc	r7, pc, #34	@ 0x22
 8018640:	3e227374 	mcrcc	3, 1, r7, cr2, cr4, {3}
 8018644:	6261743c 	rsbvs	r7, r1, #60, 8	@ 0x3c000000
 8018648:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
 801864c:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018650:	726f5064 	rsbvc	r5, pc, #100	@ 0x64
 8018654:	20227374 	eorcs	r7, r2, r4, ror r3
 8018658:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801865c:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8018660:	3c3e2731 	ldccc	7, cr2, [lr], #-196	@ 0xffffff3c
 8018664:	6261742f 	rsbvs	r7, r1, #788529152	@ 0x2f000000
 8018668:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	@ 0xfffffe50
 801866c:	7669642f 	strbtvc	r6, [r9], -pc, lsr #8
 8018670:	663c0a3e 			@ <UNDEFINED> instruction: 0x663c0a3e
 8018674:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 8018678:	753c3e72 	ldrvc	r3, [ip, #-3698]!	@ 0xfffff18e
 801867c:	6469206c 	strbtvs	r2, [r9], #-108	@ 0xffffff94
 8018680:	6469223d 	strbtvs	r2, [r9], #-573	@ 0xfffffdc3
 8018684:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8018688:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 801868c:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8017a56 <_etext+0xd52>
 8018690:	2f3c3e6c 	svccs	0x003c3e6c
 8018694:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801869c <dmx_html+0x170>
 8018698:	0a3e7265 	beq	8fb5034 <__init_array_end+0xf9a2f8>
 801869c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 80186a0:	20747069 	rsbscs	r7, r4, r9, rrx
 80186a4:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 80186a8:	61747322 	cmnvs	r4, r2, lsr #6
 80186ac:	2e636974 			@ <UNDEFINED> instruction: 0x2e636974
 80186b0:	2022736a 	eorcs	r7, r2, sl, ror #6
 80186b4:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 80186b8:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 80186bc:	6a2f7478 	bvs	8bf58a4 <__init_array_end+0xbdab68>
 80186c0:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 80186c4:	70697263 	rsbvc	r7, r9, r3, ror #4
 80186c8:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 80186cc:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 80186d0:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80186d4:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 80186d8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80186dc:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 80186e0:	6d64223d 	sfmvs	f2, 2, [r4, #-244]!	@ 0xffffff0c
 80186e4:	736a2e78 	cmnvc	sl, #120, 28	@ 0x780
 80186e8:	79742022 	ldmdbvc	r4!, {r1, r5, sp}^
 80186ec:	223d6570 	eorscs	r6, sp, #112, 10	@ 0x1c000000
 80186f0:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 80186f4:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80186f8:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 80186fc:	22747069 	rsbscs	r7, r4, #105	@ 0x69
 8018700:	732f3c3e 			@ <UNDEFINED> instruction: 0x732f3c3e
 8018704:	70697263 	rsbvc	r7, r9, r3, ror #4
 8018708:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 801870c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018710:	6c3e7470 	cfldrsvs	mvf7, [lr], #-448	@ 0xfffffe40
 8018714:	28747369 	ldmdacs	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8018718:	65763b29 	ldrbvs	r3, [r6, #-2857]!	@ 0xfffff4d7
 801871c:	6f697372 	svcvs	0x00697372
 8018720:	3b29286e 	blcc	8a628e0 <__init_array_end+0xa47ba4>
 8018724:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 8018728:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 801872c:	732f3c29 			@ <UNDEFINED> instruction: 0x732f3c29
 8018730:	70697263 	rsbvc	r7, r9, r3, ror #4
 8018734:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 8018738:	646f622f 	strbtvs	r6, [pc], #-559	@ 8018740 <dmx_html+0x214>
 801873c:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 8018740:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8018744:	 	stccc	14, cr3, [r0], {108}	@ 0x6c

08018747 <time_html>:
 8018747:	4f44213c 	svcmi	0x0044213c
 801874b:	50595443 	subspl	r5, r9, r3, asr #8
 801874f:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8018753:	0a3e6c6d 	beq	8fb390f <__init_array_end+0xf98bd3>
 8018757:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801875b:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801875f:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018763:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018767:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801876b:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 801876f:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 8018773:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 8018777:	20227465 	eorcs	r7, r2, r5, ror #8
 801877b:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 801877f:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 8018783:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 8018787:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801878b:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 801878f:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 8018793:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
 8018797:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801879b:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801879f:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80187a3:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 80187a7:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 80187ab:	0a3e6461 	beq	8fb1937 <__init_array_end+0xf96bfb>
 80187af:	646f623c 	strbtvs	r6, [pc], #-572	@ 80187b7 <time_html+0x70>
 80187b3:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 80187b7:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80187bb:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 80187bf:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 80187c3:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80187c7:	73694c64 	cmnvc	r9, #100, 24	@ 0x6400
 80187cb:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 80187cf:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 80187d3:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 80187d7:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 80187db:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 80187df:	75623c3e 	strbvc	r3, [r2, #-3134]!	@ 0xfffff3c2
 80187e3:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80187e7:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 80187eb:	6b63696c 	blvs	98f2da3 <__init_array_end+0x18d8067>
 80187ef:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 80187f3:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 80187f7:	22292868 	eorcs	r2, r9, #104, 16	@ 0x680000
 80187fb:	6665523e 			@ <UNDEFINED> instruction: 0x6665523e
 80187ff:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8018803:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 8018807:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801880b:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	@ <UNPREDICTABLE>
 801880f:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 8018813:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8018817:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 801881f <time_html+0xd8>
 801881b:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 801881f:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
 8018823:	2065646f 	rsbcs	r6, r5, pc, ror #8
 8018827:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801882b:	6c697720 	stclvs	7, cr7, [r9], #-128	@ 0xffffff80
 801882f:	6562206c 	strbvs	r2, [r2, #-108]!	@ 0xffffff94
 8018833:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 8018837:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801883b:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 801883f:	3c657265 	sfmcc	f7, 2, [r5], #-404	@ 0xfffffe6c
 8018843:	0a3e702f 	beq	8fb4907 <__init_array_end+0xf99bcb>
 8018847:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801884b:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801884f:	6f206e6f 	svcvs	0x00206e6f
 8018853:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018857:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 801885b:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801885f:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
 8018863:	61636f4c 	cmnvs	r3, ip, asr #30
 8018867:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	@ 0xfffffe50
 801886b:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 801886f:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
 8018873:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
 8018877:	4c206874 	stcmi	8, cr6, [r0], #-464	@ 0xfffffe30
 801887b:	6c61636f 	stclvs	3, cr6, [r1], #-444	@ 0xfffffe44
 801887f:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 8018883:	622f3c65 	eorvs	r3, pc, #25856	@ 0x6500
 8018887:	6f747475 	svcvs	0x00747475
 801888b:	2f3c3e6e 	svccs	0x003c3e6e
 801888f:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 8018893:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801889b <time_html+0x154>
 8018897:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801889b:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801889f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80188a3:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 80188a7:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 80188ab:	2f3c3e22 	svccs	0x003c3e22
 80188af:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 80188b3:	6f6f662f 	svcvs	0x006f662f
 80188b7:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 80188bb:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 80188bf:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80188c3:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 80188c7:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 80188cb:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 80188cf:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 80188d3:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 80188d7:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 80188db:	2f747865 	svccs	0x00747865
 80188df:	6176616a 	cmnvs	r6, sl, ror #2
 80188e3:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80188e7:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 80188eb:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 80188ef:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80188f3:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 80188f7:	70697263 	rsbvc	r7, r9, r3, ror #4
 80188fb:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 80188ff:	64223d63 	strtvs	r3, [r2], #-3427	@ 0xfffff29d
 8018903:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8018907:	2022736a 	eorcs	r7, r2, sl, ror #6
 801890b:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801890f:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 8018913:	6a2f7478 	bvs	8bf5afb <__init_array_end+0xbdadbf>
 8018917:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 801891b:	70697263 	rsbvc	r7, r9, r3, ror #4
 801891f:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 8018923:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8018927:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801892b:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801892f:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018933:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8018937:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
 801893b:	6a2e656d 	bvs	8bb1ef7 <__init_array_end+0xb971bb>
 801893f:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018943:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018947:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801894b:	616a2f74 	smcvs	41716	@ 0xa2f4
 801894f:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018953:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018957:	2f3c3e22 	svccs	0x003c3e22
 801895b:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801895f:	0a3e7470 	beq	8fb5b27 <__init_array_end+0xf9adeb>
 8018963:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018967:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801896b:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801896f:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
 8018973:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018977:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801897b:	6665723b 			@ <UNDEFINED> instruction: 0x6665723b
 801897f:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8018983:	2f3c2928 	svccs	0x003c2928
 8018987:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801898b:	0a3e7470 	beq	8fb5b53 <__init_array_end+0xf9ae17>
 801898f:	6f622f3c 	svcvs	0x00622f3c
 8018993:	0a3e7964 	beq	8fb6f2b <__init_array_end+0xf9c1ef>
 8018997:	74682f3c 	strbtvc	r2, [r8], #-3900	@ 0xfffff0c4
 801899b:	003e6c6d 	eorseq	r6, lr, sp, ror #24

0801899f <index_html>:
 801899f:	4f44213c 	svcmi	0x0044213c
 80189a3:	50595443 	subspl	r5, r9, r3, asr #8
 80189a7:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 80189ab:	0a3e6c6d 	beq	8fb3b67 <__init_array_end+0xf98e2b>
 80189af:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 80189b3:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 80189b7:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80189bb:	6c3c0a3e 			@ <UNDEFINED> instruction: 0x6c3c0a3e
 80189bf:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 80189c3:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	@ 0xfffffe38
 80189c7:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
 80189cb:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 80189cf:	22746565 	rsbscs	r6, r4, #423624704	@ 0x19400000
 80189d3:	65726820 	ldrbvs	r6, [r2, #-2080]!	@ 0xfffff7e0
 80189d7:	73223d66 			@ <UNDEFINED> instruction: 0x73223d66
 80189db:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 80189df:	73632e73 	cmnvc	r3, #1840	@ 0x730
 80189e3:	2f202273 	svccs	0x00202273
 80189e7:	743c0a3e 	ldrtvc	r0, [ip], #-2622	@ 0xfffff5c2
 80189eb:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 80189ef:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 80189f7 <index_html+0x58>
 80189f3:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 80189f7:	2f3c0a3e 	svccs	0x003c0a3e
 80189fb:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80189ff:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8018a03:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018a07:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 8018a0b:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8018a0f:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 8018a13:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8018a17:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 8018a1b:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 8018a1f:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8017de9 <s_Output+0x55>
 8018a23:	2f3c3e6c 	svccs	0x003c3e6c
 8018a27:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018a2b:	0a3e7265 	beq	8fb53c7 <__init_array_end+0xf9a68b>
 8018a2f:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 8018a33:	656c6573 	strbvs	r6, [ip, #-1395]!	@ 0xfffffa8d
 8018a37:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8018a3b:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018a3f:	72694464 	rsbvc	r4, r9, #100, 8	@ 0x64000000
 8018a43:	6f746365 	svcvs	0x00746365
 8018a47:	20227972 	eorcs	r7, r2, r2, ror r9
 8018a4b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018a4f:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
 8018a53:	6567223d 	strbvs	r2, [r7, #-573]!	@ 0xfffffdc3
 8018a57:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018a5b:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8018a5f:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8018a63:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 8018a67:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	@ 0xffffff5c
 8018a6b:	6c65732f 	stclvs	3, cr7, [r5], #-188	@ 0xffffff44
 8018a6f:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8018a73:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8018a77:	61743c0a 	cmnvs	r4, sl, lsl #24
 8018a7b:	20656c62 	rsbcs	r6, r5, r2, ror #24
 8018a7f:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 8018a83:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8018a87:	62202274 	eorvs	r2, r0, #116, 4	@ 0x40000007
 8018a8b:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8018a8f:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 8018a93:	2f3c3e27 	svccs	0x003c3e27
 8018a97:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 8018a9b:	3c0a3e65 	stccc	14, cr3, [sl], {101}	@ 0x65
 8018a9f:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 8018aa7 <index_html+0x108>
 8018aa3:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 8018aa7:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 8018aab:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018aaf:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 8018ab3:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018ab7:	2f3c3e22 	svccs	0x003c3e22
 8018abb:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 8018abf:	6f6f662f 	svcvs	0x006f662f
 8018ac3:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 8018ac7:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 8018acb:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8018acf:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8018ad3:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8018ad7:	6c223d64 	stcvs	13, cr3, [r2], #-400	@ 0xfffffe70
 8018adb:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8018adf:	74754265 	ldrbtvc	r4, [r5], #-613	@ 0xfffffd9b
 8018ae3:	226e6f74 	rsbcs	r6, lr, #116, 30	@ 0x1d0
 8018ae7:	616c6320 	cmnvs	ip, r0, lsr #6
 8018aeb:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 8018aef:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8018af3:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8018af7:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
 8018afb:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 8018aff:	6c223d6b 	stcvs	13, cr3, [r2], #-428	@ 0xfffffe54
 8018b03:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8018b07:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 8018b0b:	636f4c3e 	cmnvs	pc, #15872	@ 0x3e00
 8018b0f:	20657461 	rsbcs	r7, r5, r1, ror #8
 8018b13:	3c66664f 	stclcc	6, cr6, [r6], #-316	@ 0xfffffec4
 8018b17:	7475622f 	ldrbtvc	r6, [r5], #-559	@ 0xfffffdd1
 8018b1b:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
 8018b1f:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 8018b23:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8018b27:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 8018b2b:	6b63696c 	blvs	98f30e3 <__init_array_end+0x18d83a7>
 8018b2f:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 8018b33:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8018b3b <index_html+0x19c>
 8018b37:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 8018b3b:	6f626552 	svcvs	0x00626552
 8018b3f:	2f3c746f 	svccs	0x003c746f
 8018b43:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8018b47:	0a3e6e6f 	beq	8fb450b <__init_array_end+0xf997cf>
 8018b4b:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018b4f:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8018b53:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018b57:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 8018b5b:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 8018b5f:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 8018b63:	6a2e6369 	bvs	8bb190f <__init_array_end+0xb96bd3>
 8018b67:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018b6b:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018b6f:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8018b73:	616a2f74 	smcvs	41716	@ 0xa2f4
 8018b77:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018b7b:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018b7f:	2f3c3e22 	svccs	0x003c3e22
 8018b83:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018b87:	0a3e7470 	beq	8fb5d4f <__init_array_end+0xf9b013>
 8018b8b:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018b8f:	20747069 	rsbscs	r7, r4, r9, rrx
 8018b93:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8018b97:	646e6922 	strbtvs	r6, [lr], #-2338	@ 0xfffff6de
 8018b9b:	6a2e7865 	bvs	8bb6d37 <__init_array_end+0xb9bffb>
 8018b9f:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018ba3:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018ba7:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8018bab:	616a2f74 	smcvs	41716	@ 0xa2f4
 8018baf:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018bb3:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018bb7:	2f3c3e22 	svccs	0x003c3e22
 8018bbb:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018bbf:	0a3e7470 	beq	8fb5d87 <__init_array_end+0xf9b04b>
 8018bc3:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018bc7:	20747069 	rsbscs	r7, r4, r9, rrx
 8018bcb:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8018bcf:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
 8018bd3:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 8018bd7:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 8018bdb:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8018bdf:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8018be3:	2f747865 	svccs	0x00747865
 8018be7:	6176616a 	cmnvs	r6, sl, ror #2
 8018beb:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018bef:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 8018bf3:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8018bf7:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018bfb:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 8018bff:	70697263 	rsbvc	r7, r9, r3, ror #4
 8018c03:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 8018c07:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8018c0b:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 8018c0f:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018c13:	643b2928 	ldrtvs	r2, [fp], #-2344	@ 0xfffff6d8
 8018c17:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 8018c1b:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018c1f:	3c3b2928 			@ <UNDEFINED> instruction: 0x3c3b2928
 8018c23:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8018c27:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8018c2b:	622f3c0a 	eorvs	r3, pc, #2560	@ 0xa00
 8018c2f:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018c33:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8018c37:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018c3b:	 	cmnvc	r1, #10

08018c3d <time_js>:
 8018c3d:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018c41:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8018c45:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018c49:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 8018c4d:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8018c51:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8018c55:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 8018c59:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 8018c5d:	20617461 	rsbcs	r7, r1, r1, ror #8
 8018c61:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 8018c65:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018c69:	4a746567 	bmi	9d3220d <__init_array_end+0x1d174d1>
 8018c6d:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 8018c71:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 8018c75:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 8018c79:	0a292765 	beq	8a62a15 <__init_array_end+0xa47cd9>
 8018c7d:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018c81:	6f6e2074 	svcvs	0x006e2074
 8018c85:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 8018c89:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8018c8d:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 8018c91:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8018c95:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8018c99:	2077656e 	rsbscs	r6, r7, lr, ror #10
 8018c9d:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 8018ca1:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018ca5:	61642e61 	cmnvs	r4, r1, ror #28
 8018ca9:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
 8018cad:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 8018cb1:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8018cb5:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8018cb9:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8018cbd:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8018cc1:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8018cc5:	6f6e2728 	svcvs	0x006e2728
 8018cc9:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
 8018ccd:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 8018cd1:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
 8018cd5:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
 8018cd9:	746e6574 	strbtvc	r6, [lr], #-1396	@ 0xfffffa8c
 8018cdd:	60203d20 	eorvs	r3, r0, r0, lsr #26
 8018ce1:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 8018ce5:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 8018ce9:	24203a65 	strtcs	r3, [r0], #-2661	@ 0xfffff59b
 8018ced:	646f6e7b 	strbtvs	r6, [pc], #-3707	@ 8018cf5 <time_js+0xb8>
 8018cf1:	0a607d65 	beq	983828d <__init_array_end+0x181d551>
 8018cf5:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 8018cf9:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8018cfd:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018d01:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018d05:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
 8018d09:	74695763 	strbtvc	r5, [r9], #-1891	@ 0xfffff89d
 8018d0d:	636f4c68 	cmnvs	pc, #104, 24	@ 0x6800
 8018d11:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
 8018d15:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 8018d19:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8018d1d:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8018d21:	646f6e20 	strbtvs	r6, [pc], #-3616	@ 8018d29 <time_js+0xec>
 8018d25:	203d2065 	eorscs	r2, sp, r5, rrx
 8018d29:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 8018d2d:	61447461 	cmpvs	r4, r1, ror #8
 8018d31:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
 8018d35:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
 8018d39:	44207765 	strtmi	r7, [r0], #-1893	@ 0xfffff89b
 8018d3d:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 8018d41:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 8018d45:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8018d49:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8018d4d:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8018d51:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8018d55:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8018d59:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 8018d5d:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 8018d61:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8018d65:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 8018d69:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 8018d6d:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8018d71:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 8018d75:	6f4e6020 	svcvs	0x004e6020
 8018d79:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 8018d7d:	3a656d69 	bcc	9974329 <__init_array_end+0x19595ed>
 8018d81:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 8018d85:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 8018d89:	6f630a60 	svcvs	0x00630a60
 8018d8d:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8018d91:	61746164 	cmnvs	r4, r4, ror #2
 8018d95:	7b203d20 	blvc	882821d <__init_array_end+0x80d4e1>
 8018d99:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8018d9d:	6e203a65 	vnmulvs.f32	s6, s0, s11
 8018da1:	2065646f 	rsbcs	r6, r5, pc, ror #8
 8018da5:	77610a7d 			@ <UNDEFINED> instruction: 0x77610a7d
 8018da9:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018dad:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 8018db1:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018db5:	720a2961 	andvc	r2, sl, #1589248	@ 0x184000
 8018db9:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8018dbd:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8018dc1:	 	strvs	r7, [r0], -sl, lsl #26

08018dc4 <default_js>:
 8018dc4:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018dc8:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018dcc:	73657220 	cmnvc	r5, #32, 4
 8018dd0:	73287465 			@ <UNDEFINED> instruction: 0x73287465
 8018dd4:	20296c65 	eorcs	r6, r9, r5, ror #24
 8018dd8:	61760a7b 	cmnvs	r6, fp, ror sl
 8018ddc:	20642072 	rsbcs	r2, r4, r2, ror r0
 8018de0:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	@ 0xffffff0c
 8018de4:	61760a3b 	cmnvs	r6, fp, lsr sl
 8018de8:	756f2072 	strbvc	r2, [pc, #-114]!	@ 8018d7e <time_js+0x141>
 8018dec:	203d2074 	eorscs	r2, sp, r4, ror r0
 8018df0:	0a3b7d7b 	beq	8ef83e4 <__init_array_end+0xedd6a8>
 8018df4:	5b74756f 	blpl	9d363b8 <__init_array_end+0x1d1b67c>
 8018df8:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 8018dfc:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 8018e00:	61760a3b 	cmnvs	r6, fp, lsr sl
 8018e04:	61702072 	cmnvs	r0, r2, ror r0
 8018e08:	616f6c79 	smcvs	63177	@ 0xf6c9
 8018e0c:	203d2064 	eorscs	r2, sp, r4, rrx
 8018e10:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8018e14:	7274732e 	rsbsvc	r7, r4, #-1207959552	@ 0xb8000000
 8018e18:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018e1c:	6f287966 	svcvs	0x00287966
 8018e20:	3b297475 	blcc	8a75ffc <__init_array_end+0xa5b2c0>
 8018e24:	7465660a 	strbtvc	r6, [r5], #-1546	@ 0xfffff9f6
 8018e28:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8018e2c:	6f736a2f 	svcvs	0x00736a2f
 8018e30:	202c276e 	eorcs	r2, ip, lr, ror #14
 8018e34:	656d0a7b 	strbvs	r0, [sp, #-2683]!	@ 0xfffff585
 8018e38:	646f6874 	strbtvs	r6, [pc], #-2164	@ 8018e40 <default_js+0x7c>
 8018e3c:	5027203a 	eorpl	r2, r7, sl, lsr r0
 8018e40:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
 8018e44:	65680a2c 	strbvs	r0, [r8, #-2604]!	@ 0xfffff5d4
 8018e48:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8018e4c:	7b203a73 	blvc	8827820 <__init_array_end+0x80cae4>
 8018e50:	6f43270a 	svcvs	0x0043270a
 8018e54:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8018e58:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8018e5c:	3a276570 	bcc	89f2424 <__init_array_end+0x9d76e8>
 8018e60:	70612720 	rsbvc	r2, r1, r0, lsr #14
 8018e64:	63696c70 	cmnvs	r9, #112, 24	@ 0x7000
 8018e68:	6f697461 	svcvs	0x00697461
 8018e6c:	736a2f6e 	cmnvc	sl, #440	@ 0x1b8
 8018e70:	0a276e6f 	beq	89f4834 <__init_array_end+0x9d9af8>
 8018e74:	620a2c7d 	andvs	r2, sl, #32000	@ 0x7d00
 8018e78:	3a79646f 	bcc	9e7203c <__init_array_end+0x1e57300>
 8018e7c:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
 8018e80:	64616f6c 	strbtvs	r6, [r1], #-3948	@ 0xfffff094
 8018e84:	20297d0a 	eorcs	r7, r9, sl, lsl #26
 8018e88:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 8018e8c:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 8018e90:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8018e94:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	@ 0xfffffe34
 8018e98:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
 8018e9c:	72282066 	eorvc	r2, r8, #102	@ 0x66
 8018ea0:	6f707365 	svcvs	0x00707365
 8018ea4:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
 8018ea8:	20296b6f 	eorcs	r6, r9, pc, ror #22
 8018eac:	6567207b 	strbvs	r2, [r7, #-123]!	@ 0xffffff85
 8018eb0:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018eb4:	65732874 	ldrbvs	r2, [r3, #-2164]!	@ 0xfffff78c
 8018eb8:	203b296c 	eorscs	r2, fp, ip, ror #18
 8018ebc:	3b297d7d 	blcc	8a784b8 <__init_array_end+0xa5d77c>
 8018ec0:	 	strvs	r7, [r0], -sl, lsl #26

08018ec3 <date_js>:
 8018ec3:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018ec7:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018ecb:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8018ecf:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 8018ed3:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8018ed7:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8018edb:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8018edf:	0a7b2029 	beq	9ee0f8b <__init_array_end+0x1ec624f>
 8018ee3:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018ee7:	65792074 	ldrbvs	r2, [r9, #-116]!	@ 0xffffff8c
 8018eeb:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	@ 0xfffffe7c
 8018eef:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8018ef3:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8018ef7:	6c754674 	ldclvs	6, cr4, [r5], #-464	@ 0xfffffe30
 8018efb:	6165596c 	cmnvs	r5, ip, ror #18
 8018eff:	3b292872 	blcc	8a630cf <__init_array_end+0xa48393>
 8018f03:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8018f07:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	@ 0xfffffe34
 8018f0b:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	@ 0xfffffe44
 8018f0f:	30272820 	eorcc	r2, r7, r0, lsr #16
 8018f13:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018f17:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018f1b:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8018f1f:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
 8018f23:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
 8018f27:	31202b20 			@ <UNDEFINED> instruction: 0x31202b20
 8018f2b:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 8018f2f:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8018f33:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8018f37:	6f630a3b 	svcvs	0x00630a3b
 8018f3b:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8018f3f:	20796164 	rsbscs	r6, r9, r4, ror #2
 8018f43:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8018f47:	2b202730 	blcs	8822c0f <__init_array_end+0x807ed3>
 8018f4b:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8018f4f:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8018f53:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 8018f57:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
 8018f5b:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8018f5f:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 8018f63:	0a3b2932 	beq	8ee3433 <__init_array_end+0xec86f7>
 8018f67:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018f6b:	6f682074 	svcvs	0x00682074
 8018f6f:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	@ 0xfffffe2c
 8018f73:	30272820 	eorcc	r2, r7, r0, lsr #16
 8018f77:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018f7b:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8018f7f:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 8018f83:	72756f48 	rsbsvc	r6, r5, #72, 30	@ 0x120
 8018f87:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
 8018f8b:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8018f8f:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 8018f93:	0a3b2932 	beq	8ee3463 <__init_array_end+0xec8727>
 8018f97:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018f9b:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
 8018f9f:	203d206e 	eorscs	r2, sp, lr, rrx
 8018fa3:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
 8018fa7:	64202b20 	strtvs	r2, [r0], #-2848	@ 0xfffff4e0
 8018fab:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8018faf:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	@ 0xfffffe64
 8018fb3:	74756e69 	ldrbtvc	r6, [r5], #-3689	@ 0xfffff197
 8018fb7:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 8018fbb:	6c732e29 	ldclvs	14, cr2, [r3], #-164	@ 0xffffff5c
 8018fbf:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 8018fc3:	3b29322d 	blcc	8a6587f <__init_array_end+0xa4ab43>
 8018fc7:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8018fcb:	73207473 			@ <UNDEFINED> instruction: 0x73207473
 8018fcf:	3d206365 	stccc	3, cr6, [r0, #-404]!	@ 0xfffffe6c
 8018fd3:	30272820 	eorcc	r2, r7, r0, lsr #16
 8018fd7:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018fdb:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8018fdf:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 8018fe3:	6f636553 	svcvs	0x00636553
 8018fe7:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8018feb:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 8018fef:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8018ff3:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8018ff7:	6f630a3b 	svcvs	0x00630a3b
 8018ffb:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8018fff:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 8019003:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	@ 0xfffffe6c
 8019007:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801900b:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801900f:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	@ 0xfffffe30
 8019013:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
 8019017:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
 801901b:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801901f:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 8019023:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8019027:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801902b:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801902f:	2072756f 	rsbscs	r7, r2, pc, ror #10
 8019033:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8019037:	2b202730 	blcs	8822cff <__init_array_end+0x807fc3>
 801903b:	74614d20 	strbtvc	r4, [r1], #-3360	@ 0xfffff2e0
 801903f:	6c662e68 	stclvs	14, cr2, [r6], #-416	@ 0xfffffe60
 8019043:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019047:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 801904b:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801904f:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 8019053:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8019057:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
 801905b:	2e292930 			@ <UNDEFINED> instruction: 0x2e292930
 801905f:	63696c73 	cmnvs	r9, #29440	@ 0x7300
 8019063:	322d2865 	eorcc	r2, sp, #6619136	@ 0x650000
 8019067:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 801906b:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801906f:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 8019073:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	@ 0xfffffe34
 8019077:	3d206e69 	stccc	14, cr6, [r0, #-420]!	@ 0xfffffe5c
 801907b:	30272820 	eorcc	r2, r7, r0, lsr #16
 801907f:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8019083:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 8019087:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801908b:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801908f:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8019093:	36202520 	strtcc	r2, [r0], -r0, lsr #10
 8019097:	732e2930 			@ <UNDEFINED> instruction: 0x732e2930
 801909b:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801909f:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 80190a3:	6f630a3b 	svcvs	0x00630a3b
 80190a7:	2074736e 	rsbscs	r7, r4, lr, ror #6
 80190ab:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
 80190af:	6f203d20 	svcvs	0x00203d20
 80190b3:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 80190b7:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	@ 0xfffffe30
 80190bb:	3f203020 	svccc	0x00203020
 80190bf:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
 80190c3:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
 80190c7:	0a3b272d 	beq	8ee2d83 <__init_array_end+0xec8047>
 80190cb:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 80190cf:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 80190d3:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80190d7:	2072756f 	rsbscs	r7, r2, pc, ror #10
 80190db:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 80190df:	26262029 	strtcs	r2, [r6], -r9, lsr #32
 80190e3:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
 80190e7:	74657366 	strbtvc	r7, [r5], #-870	@ 0xfffffc9a
 80190eb:	206e694d 	rsbcs	r6, lr, sp, asr #18
 80190ef:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 80190f3:	7b202929 	blvc	882359f <__init_array_end+0x808863>
 80190f7:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 80190fb:	206e7275 	rsbcs	r7, lr, r5, ror r2
 80190ff:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 8019103:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 8019107:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 801910b:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801910f:	61647b24 	cmnvs	r4, r4, lsr #22
 8019113:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 8019117:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 80188a4 <time_html+0x15d>
 801911b:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801911f:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 8019123:	7b243a7d 	blvc	8927b1f <__init_array_end+0x90cde3>
 8019127:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801912b:	203b605a 	eorscs	r6, fp, sl, asr r0
 801912f:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
 8019133:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8019137:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801913b:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 801913f:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 8019143:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 8019147:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801914b:	61647b24 	cmnvs	r4, r4, lsr #22
 801914f:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 8019153:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 80188e0 <time_html+0x199>
 8019157:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801915b:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 801915f:	7b243a7d 	blvc	8927b5b <__init_array_end+0x90ce1f>
 8019163:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 8019167:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
 801916b:	247d6e67 	ldrbtcs	r6, [sp], #-3687	@ 0xfffff199
 801916f:	66666f7b 	uqsub16vs	r6, r6, fp
 8019173:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8019177:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	@ 0xfffffe44
 801917b:	6f7b243a 	svcvs	0x007b243a
 801917f:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 8019183:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
 8019187:	203b607d 	eorscs	r6, fp, sp, ror r0
 801918b:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	@ 0xffffff80
	...

08019190 <index_js>:
 8019190:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8019194:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8019198:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801919c:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 80191a0:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 80191a4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80191a8:	7b202928 	blvc	8823650 <__init_array_end+0x808914>
 80191ac:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 80191b0:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 80191b4:	61776120 	cmnvs	r7, r0, lsr #2
 80191b8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80191bc:	534a7465 	movtpl	r7, #42085	@ 0xa465
 80191c0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80191c4:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 80191c8:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 80191cc:	0a292779 	beq	8a62fb8 <__init_array_end+0xa4827c>
 80191d0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80191d4:	203d2068 	eorscs	r2, sp, r8, rrx
 80191d8:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	@ 0x22
 80191dc:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80191e0:	4f203d20 	svcmi	0x00203d20
 80191e4:	63656a62 	cmnvs	r5, #401408	@ 0x62000
 80191e8:	656b2e74 	strbvs	r2, [fp, #-3700]!	@ 0xfffff18c
 80191ec:	64287379 	strtvs	r7, [r8], #-889	@ 0xfffffc87
 80191f0:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
 80191f4:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 80191f8:	660a295d 			@ <UNDEFINED> instruction: 0x660a295d
 80191fc:	726f662e 	rsbvc	r6, pc, #48234496	@ 0x2e00000
 8019200:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
 8019204:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
 8019208:	6f697463 	svcvs	0x00697463
 801920c:	656b286e 	strbvs	r2, [fp, #-2158]!	@ 0xfffff792
 8019210:	7b202979 	blvc	88237fc <__init_array_end+0x808ac0>
 8019214:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 8019218:	3d207620 	stccc	6, cr7, [r0, #-128]!	@ 0xffffff80
 801921c:	225b6420 	subscs	r6, fp, #32, 8	@ 0x20000000
 8019220:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 8019224:	5b5d2273 	blpl	9761bf8 <__init_array_end+0x1746ebc>
 8019228:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	@ 0xfffffe54
 801922c:	2b20680a 	blcs	883325c <__init_array_end+0x818520>
 8019230:	3c22203d 	stccc	0, cr2, [r2], #-244	@ 0xffffff0c
 8019234:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8019238:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
 801923c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 8019240:	6b2b223d 	blvs	8ae1b3c <__init_array_end+0xac6e00>
 8019244:	222b7965 	eorcs	r7, fp, #1654784	@ 0x194000
 8019248:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801924c:	2f3c222b 	svccs	0x003c222b
 8019250:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8019254:	223e6e6f 	eorscs	r6, lr, #1776	@ 0x6f0
 8019258:	3b297d0a 	blcc	8a78688 <__init_array_end+0xa5d94c>
 801925c:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 8019260:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8019264:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8019268:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801926c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8019270:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8019274:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 8019278:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 801927c:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 8019280:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
 8019284:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8019288:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801928c:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019290:	65670a68 	strbvs	r0, [r7, #-2664]!	@ 0xfffff598
 8019294:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8019298:	5b662874 	blpl	99a3470 <__init_array_end+0x1988734>
 801929c:	0a295d30 	beq	8a70764 <__init_array_end+0xa55a28>
 80192a0:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 80192a4:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80192a8:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 80192ac:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80192b0:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 80192b4:	7478745f 	ldrbtvc	r7, [r8], #-1119	@ 0xfffffba1
 80192b8:	6c657328 	stclvs	3, cr7, [r5], #-160	@ 0xffffff60
 80192bc:	0a7b2029 	beq	9ee1368 <__init_array_end+0x1ec662c>
 80192c0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80192c4:	20747874 	rsbscs	r7, r4, r4, ror r8
 80192c8:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 80192cc:	20746961 	rsbscs	r6, r4, r1, ror #18
 80192d0:	4a746567 	bmi	9d32874 <__init_array_end+0x1d17b38>
 80192d4:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 80192d8:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80192dc:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 80192e0:	3d206820 	stccc	8, cr6, [r0, #-128]!	@ 0xffffff80
 80192e4:	0a222220 	beq	88a1b6c <__init_array_end+0x886e30>
 80192e8:	656a624f 	strbvs	r6, [sl, #-591]!	@ 0xfffffdb1
 80192ec:	6b2e7463 	blvs	8bb6480 <__init_array_end+0xb9b744>
 80192f0:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
 80192f4:	5b747874 	blpl	9d374cc <__init_array_end+0x1d1c790>
 80192f8:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 80192fc:	6f662e29 	svcvs	0x00662e29
 8019300:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 8019304:	75662868 	strbvc	r2, [r6, #-2152]!	@ 0xfffff798
 8019308:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801930c:	6b286e6f 	blvs	8a34cd0 <__init_array_end+0xa19f94>
 8019310:	20297965 	eorcs	r7, r9, r5, ror #18
 8019314:	61760a7b 	cmnvs	r6, fp, ror sl
 8019318:	20762072 	rsbscs	r2, r6, r2, ror r0
 801931c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8019320:	65735b74 	ldrbvs	r5, [r3, #-2932]!	@ 0xfffff48c
 8019324:	6b5b5d6c 	blvs	96f08dc <__init_array_end+0x16d5ba0>
 8019328:	0a5d7965 	beq	97778c4 <__init_array_end+0x175cb88>
 801932c:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 8019330:	743c2220 	ldrtvc	r2, [ip], #-544	@ 0xfffffde0
 8019334:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 8019338:	2b223e64 	blcs	88a8cd0 <__init_array_end+0x88df94>
 801933c:	2b79656b 	blcs	9e728f0 <__init_array_end+0x1e57bb4>
 8019340:	742f3c27 	strtvc	r3, [pc], #-3111	@ 8019348 <index_js+0x1b8>
 8019344:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 8019348:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
 801934c:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 8019350:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8019354:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8019358:	22747865 	rsbscs	r7, r4, #6619136	@ 0x650000
 801935c:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 8019360:	223d6575 	eorscs	r6, sp, #490733568	@ 0x1d400000
 8019364:	2b762b27 	blcs	9da4008 <__init_array_end+0x1d892cc>
 8019368:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
 801936c:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
 8019370:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8019374:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
 8019378:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801937c:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 8019384 <index_js+0x1f4>
 8019380:	0a273e72 	beq	89e8d50 <__init_array_end+0x9ce014>
 8019384:	0a3b297d 	beq	8ee3980 <__init_array_end+0xec8c44>
 8019388:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 801938c:	743c2720 	ldrtvc	r2, [ip], #-1824	@ 0xfffff8e0
 8019390:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 8019394:	6f632064 	svcvs	0x00632064
 8019398:	6170736c 	cmnvs	r0, ip, ror #6
 801939c:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 80193a0:	623c3e22 	eorsvs	r3, ip, #544	@ 0x220
 80193a4:	6f747475 	svcvs	0x00747475
 80193a8:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
 80193ac:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 80193b0:	73223d6b 			@ <UNDEFINED> instruction: 0x73223d6b
 80193b4:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
 80193b8:	2b27275c 	blcs	89e3130 <__init_array_end+0x9c83f4>
 80193bc:	2b6c6573 	blcs	9b32990 <__init_array_end+0x1b17c54>
 80193c0:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
 80193c4:	61533e22 	cmpvs	r3, r2, lsr #28
 80193c8:	2f3c6576 	svccs	0x003c6576
 80193cc:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 80193d0:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
 80193d4:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
 80193d8:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
 80193dc:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 80193e0:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 80193e4:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 80193e8:	62223d73 	eorvs	r3, r2, #7360	@ 0x1cc0
 80193ec:	20226e74 	eorcs	r6, r2, r4, ror lr
 80193f0:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 80193f4:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 80193f8:	73657222 	cmnvc	r5, #536870914	@ 0x20000002
 80193fc:	5c287465 	cfstrspl	mvf7, [r8], #-404	@ 0xfffffe6c
 8019400:	732b2727 			@ <UNDEFINED> instruction: 0x732b2727
 8019404:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
 8019408:	2229275c 	eorcs	r2, r9, #92, 14	@ 0x1700000
 801940c:	6665443e 			@ <UNDEFINED> instruction: 0x6665443e
 8019410:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 8019414:	622f3c73 	eorvs	r3, pc, #29440	@ 0x7300
 8019418:	6f747475 	svcvs	0x00747475
 801941c:	2f3c3e6e 	svccs	0x003c3e6e
 8019420:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 8019424:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 8019428:	640a3b27 	strvs	r3, [sl], #-2855	@ 0xfffff4d9
 801942c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8019430:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019434:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019438:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801943c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019440:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 8019444:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8019448:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801944c:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8019450:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 8019454:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019458:	0a7d0a68 	beq	9f5be00 <__init_array_end+0x1f410c4>
 801945c:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8019460:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019464:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
 8019468:	65732865 	ldrbvs	r2, [r3, #-2149]!	@ 0xfffff79b
 801946c:	7b20296c 	blvc	8823a24 <__init_array_end+0x808ce8>
 8019470:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 8019474:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 8019478:	0a7d7b20 	beq	9f78100 <__init_array_end+0x1f5d3c4>
 801947c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019480:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8019484:	3d207374 	stccc	3, cr7, [r0, #-464]!	@ 0xfffffe30
 8019488:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 801948c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8019490:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8019494:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8019498:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801949c:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 80194a0:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 80194a4:	22747854 	rsbscs	r7, r4, #84, 16	@ 0x540000
 80194a8:	65672e29 	strbvs	r2, [r7, #-3625]!	@ 0xfffff1d7
 80194ac:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 80194b0:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 80194b4:	54794273 	ldrbtpl	r4, [r9], #-627	@ 0xfffffd8d
 80194b8:	614e6761 	cmpvs	lr, r1, ror #14
 80194bc:	2228656d 	eorcs	r6, r8, #457179136	@ 0x1b400000
 80194c0:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 80194c4:	0a292274 	beq	8a61e9c <__init_array_end+0xa47160>
 80194c8:	20726f66 	rsbscs	r6, r2, r6, ror #30
 80194cc:	72617628 	rsbvc	r7, r1, #40, 12	@ 0x2800000
 80194d0:	3d206920 			@ <UNDEFINED> instruction: 0x3d206920
 80194d4:	203b3020 	eorscs	r3, fp, r0, lsr #32
 80194d8:	203c2069 	eorscs	r2, ip, r9, rrx
 80194dc:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 80194e0:	6c2e7374 	stcvs	3, cr7, [lr], #-464	@ 0xfffffe30
 80194e4:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 80194e8:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
 80194ec:	20292b2b 	eorcs	r2, r9, fp, lsr #22
 80194f0:	61760a7b 	cmnvs	r6, fp, ror sl
 80194f4:	206b2072 	rsbcs	r2, fp, r2, ror r0
 80194f8:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
 80194fc:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 8019500:	2e5d695b 			@ <UNDEFINED> instruction: 0x2e5d695b
 8019504:	760a6469 	strvc	r6, [sl], -r9, ror #8
 8019508:	76207261 	strtvc	r7, [r0], -r1, ror #4
 801950c:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
 8019510:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 8019514:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	@ Deprecated
 8019518:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 801951c:	640a6575 	strvs	r6, [sl], #-1397	@ 0xfffffa8b
 8019520:	205d6b5b 	subscs	r6, sp, fp, asr fp
 8019524:	0a76203d 	beq	9da1620 <__init_array_end+0x1d868e4>
 8019528:	61760a7d 	cmnvs	r6, sp, ror sl
 801952c:	756f2072 	strbvc	r2, [pc, #-114]!	@ 80194c2 <index_js+0x332>
 8019530:	203d2074 	eorscs	r2, sp, r4, ror r0
 8019534:	6f0a7d7b 	svcvs	0x000a7d7b
 8019538:	735b7475 	cmpvc	fp, #1962934272	@ 0x75000000
 801953c:	205d6c65 	subscs	r6, sp, r5, ror #24
 8019540:	0a64203d 	beq	992163c <__init_array_end+0x1906900>
 8019544:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019548:	6c796170 	ldfvse	f6, [r9], #-448	@ 0xfffffe40
 801954c:	2064616f 	rsbcs	r6, r4, pc, ror #2
 8019550:	534a203d 	movtpl	r2, #41021	@ 0xa03d
 8019554:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 8019558:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 801955c:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 8019560:	74756f28 	ldrbtvc	r6, [r5], #-3880	@ 0xfffff0d8
 8019564:	65660a29 	strbvs	r0, [r6, #-2601]!	@ 0xfffff5d7
 8019568:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
 801956c:	736a2f27 	cmnvc	sl, #39, 30	@ 0x9c
 8019570:	2c276e6f 	stccs	14, cr6, [r7], #-444	@ 0xfffffe44
 8019574:	6d0a7b20 	vstrvs	d7, [sl, #-128]	@ 0xffffff80
 8019578:	6f687465 	svcvs	0x00687465
 801957c:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
 8019580:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 8019584:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 8019588:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 801958c:	203a7372 	eorscs	r7, sl, r2, ror r3
 8019590:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 8019594:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8019598:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 801959c:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 80195a0:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 80195a4:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80195a8:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80195ac:	6a2f6e6f 	bvs	8bf4f70 <__init_array_end+0xbda234>
 80195b0:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 80195b4:	0a2c7d0a 	beq	8b389e4 <__init_array_end+0xb1dca8>
 80195b8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80195bc:	6170203a 	cmnvs	r0, sl, lsr r0
 80195c0:	616f6c79 	smcvs	63177	@ 0xf6c9
 80195c4:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
 80195c8:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
 80195cc:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 80195d0:	6f707365 	svcvs	0x00707365
 80195d4:	2065736e 	rsbcs	r7, r5, lr, ror #6
 80195d8:	7b203e3d 	blvc	8828ed4 <__init_array_end+0x80e198>
 80195dc:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 80195e0:	70736572 	rsbsvc	r6, r3, r2, ror r5
 80195e4:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 80195e8:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 80195ec:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
 80195f0:	745f7465 	ldrbvc	r7, [pc], #-1125	@ 80195f8 <index_js+0x468>
 80195f4:	73287478 			@ <UNDEFINED> instruction: 0x73287478
 80195f8:	3b296c65 	blcc	8a74794 <__init_array_end+0xa59a58>
 80195fc:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
 8019600:	0a7d0a3b 	beq	9f5bef4 <__init_array_end+0x1f411b8>
	...

08019605 <styles_css>:
 8019605:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019609:	620a7b20 	andvs	r7, sl, #32, 22	@ 0x8000
 801960d:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
 8019611:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
 8019615:	6f632d64 	svcvs	0x00632d64
 8019619:	3a726f6c 	bcc	9cb53d1 <__init_array_end+0x1c9a695>
 801961d:	62677220 	rsbvs	r7, r7, #32, 4
 8019621:	2c303228 	lfmcs	f3, 4, [r0], #-160	@ 0xffffff60
 8019625:	322c3032 	eorcc	r3, ip, #50	@ 0x32
 8019629:	0a3b2930 	beq	8ee3af1 <__init_array_end+0xec8db5>
 801962d:	6f6c6f63 	svcvs	0x006c6f63
 8019631:	72203a72 	eorvc	r3, r0, #466944	@ 0x72000
 8019635:	32286267 	eorcc	r6, r8, #1879048198	@ 0x70000006
 8019639:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801963d:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	@ 0xffffff38
 8019641:	35353220 	ldrcc	r3, [r5, #-544]!	@ 0xfffffde0
 8019645:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 8019649:	206c750a 	rsbcs	r7, ip, sl, lsl #10
 801964d:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 8019651:	616c7073 	smcvs	50947	@ 0xc703
 8019655:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 8019659:	3b78656c 	blcc	9e32c11 <__init_array_end+0x1e17ed5>
 801965d:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
 8019661:	0a7b2069 	beq	9ee180d <__init_array_end+0x1ec6ad1>
 8019665:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 8019669:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
 801966d:	203a656c 	eorscs	r6, sl, ip, ror #10
 8019671:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
 8019675:	616d0a3b 	cmnvs	sp, fp, lsr sl
 8019679:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801967d:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8019681:	70352078 	eorsvc	r2, r5, r8, ror r0
 8019685:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 8019689:	6165680a 	cmnvs	r5, sl, lsl #16
 801968d:	20726564 	rsbscs	r6, r2, r4, ror #10
 8019691:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 8019695:	616c7073 	smcvs	50947	@ 0xc703
 8019699:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 801969d:	3b78656c 	blcc	9e32c55 <__init_array_end+0x1e17f19>
 80196a1:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 80196a5:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	@ 0xfffffe70
 80196a9:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80196ad:	203a7375 	eorscs	r7, sl, r5, ror r3
 80196b1:	3b787034 	blcc	9e35789 <__init_array_end+0x1e1aa4d>
 80196b5:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 80196b9:	3a726564 	bcc	9cb2c51 <__init_array_end+0x1c97f15>
 80196bd:	6c6f7320 	stclvs	3, cr7, [pc], #-128	@ 8019644 <styles_css+0x3f>
 80196c1:	67206469 	strvs	r6, [r0, -r9, ror #8]!
 80196c5:	20796572 	rsbscs	r6, r9, r2, ror r5
 80196c9:	3b787031 	blcc	9e35795 <__init_array_end+0x1e1aa59>
 80196cd:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 80196d1:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 80196d5:	0a7b2072 	beq	9ee18a5 <__init_array_end+0x1ec6b69>
 80196d9:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80196dd:	3a79616c 	bcc	9e71c95 <__init_array_end+0x1e56f59>
 80196e1:	656c6620 	strbvs	r6, [ip, #-1568]!	@ 0xfffff9e0
 80196e5:	6a0a3b78 	bvs	82a84cd <__init_array_end+0x28d791>
 80196e9:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80196ed:	632d7966 			@ <UNDEFINED> instruction: 0x632d7966
 80196f1:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80196f5:	203a746e 	eorscs	r7, sl, lr, ror #8
 80196f9:	746e6563 	strbtvc	r6, [lr], #-1379	@ 0xfffffa9d
 80196fd:	0a3b7265 	beq	8ef6099 <__init_array_end+0xedb35d>
 8019701:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 8019705:	722d7265 	eorvc	r7, sp, #1342177286	@ 0x50000006
 8019709:	75696461 	strbvc	r6, [r9, #-1121]!	@ 0xfffffb9f
 801970d:	34203a73 	strtcc	r3, [r0], #-2675	@ 0xfffff58d
 8019711:	0a3b7870 	beq	8ef78d9 <__init_array_end+0xedcb9d>
 8019715:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 8019719:	203a7265 	eorscs	r7, sl, r5, ror #4
 801971d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019721:	72672064 	rsbvc	r2, r7, #100	@ 0x64
 8019725:	31207965 			@ <UNDEFINED> instruction: 0x31207965
 8019729:	0a3b7870 	beq	8ef78f1 <__init_array_end+0xedcbb5>
 801972d:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 8019731:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8019735:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8019739:	6f737275 	svcvs	0x00737275
 801973d:	70203a72 	eorvc	r3, r0, r2, ror sl
 8019741:	746e696f 	strbtvc	r6, [lr], #-2415	@ 0xfffff691
 8019745:	0a3b7265 	beq	8ef60e1 <__init_array_end+0xedb3a5>
 8019749:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 801974d:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8019751:	7463613a 	strbtvc	r6, [r3], #-314	@ 0xfffffec6
 8019755:	20657669 	rsbcs	r7, r5, r9, ror #12
 8019759:	61620a7b 	smcvs	8363	@ 0x20ab
 801975d:	72676b63 	rsbvc	r6, r7, #101376	@ 0x18c00
 8019761:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 8019765:	6c6f632d 	stclvs	3, cr6, [pc], #-180	@ 80196b8 <styles_css+0xb3>
 8019769:	203a726f 	eorscs	r7, sl, pc, ror #4
 801976d:	30303023 	eorscc	r3, r0, r3, lsr #32
 8019771:	6f630a3b 	svcvs	0x00630a3b
 8019775:	3a726f6c 	bcc	9cb552d <__init_array_end+0x1c9a7f1>
 8019779:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
 801977d:	7d0a3b66 	vstrvc	d3, [sl, #-408]	@ 0xfffffe68
 8019781:	74622e0a 	strbtvc	r2, [r2], #-3594	@ 0xfffff1f6
 8019785:	0a7b206e 	beq	9ee1945 <__init_array_end+0x1ec6c09>
 8019789:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
 801978d:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	@ 0xfffffe5c
 8019791:	3a746665 	bcc	9d3312d <__init_array_end+0x1d183f1>
 8019795:	70303520 	eorsvc	r3, r0, r0, lsr #10
 8019799:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801979d:	 	cmnvc	r1, #10

0801979f <static_js>:
 801979f:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80197a3:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 80197a7:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80197ab:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80197af:	534a7465 	movtpl	r7, #42085	@ 0xa465
 80197b3:	6a284e4f 	bvs	8a2d0f7 <__init_array_end+0xa123bb>
 80197b7:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80197bb:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 80197bf:	7b207972 	blvc	8837d8f <__init_array_end+0x81d053>
 80197c3:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 80197c7:	72207473 	eorvc	r7, r0, #1929379840	@ 0x73000000
 80197cb:	61203d20 			@ <UNDEFINED> instruction: 0x61203d20
 80197cf:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 80197d3:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 80197d7:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 80197db:	6f736a2f 	svcvs	0x00736a2f
 80197df:	2b272f6e 	blcs	89e559f <__init_array_end+0x9ca863>
 80197e3:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80197e7:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
 80197eb:	72212820 	eorvc	r2, r1, #32, 16	@ 0x200000
 80197ef:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 80197f3:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 80197f7:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
 80197fb:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
 80197ff:	72724520 	rsbsvc	r4, r2, #32, 10	@ 0x8000000
 8019803:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
 8019807:	6f727245 	svcvs	0x00727245
 801980b:	0a292772 	beq	8a635db <__init_array_end+0xa4889f>
 801980f:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	@ 0xfffff583
 8019813:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8019817:	6a2e7220 	bvs	8bb609f <__init_array_end+0xb9b363>
 801981b:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801981f:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
 8019823:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 8019827:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 801982b:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 801982f:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	@ 0xffffff5c
 8019833:	610a7d0a 	tstvs	sl, sl, lsl #26
 8019837:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801983b:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 801983f:	6f697463 	svcvs	0x00697463
 8019843:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
 8019847:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801984b:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801984f:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8019853:	3d206c20 	stccc	12, cr6, [r0, #-128]!	@ 0xffffff80
 8019857:	61776120 	cmnvs	r7, r0, lsr #2
 801985b:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801985f:	534a7465 	movtpl	r7, #42085	@ 0xa465
 8019863:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019867:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801986b:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 801986f:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8019873:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019877:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801987b:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801987f:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019883:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 8019887:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801988b:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801988f:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 8019893:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 8019897:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 801989b:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	@ 0xffffff80
 801989f:	2b223e69 	blcs	88a924b <__init_array_end+0x88e50f>
 80198a3:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 80198a7:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80198ab:	2b656d61 	blcs	9974e37 <__init_array_end+0x195a0fb>
 80198af:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801982c <static_js+0x8d>
 80198b3:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 80198b7:	2b223e69 	blcs	88a9263 <__init_array_end+0x88e527>
 80198bb:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 80198bf:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80198c3:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
 80198c7:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 80198cb:	2f3c222b 	svccs	0x003c222b
 80198cf:	3c3e696c 			@ <UNDEFINED> instruction: 0x3c3e696c
 80198d3:	223e696c 	eorscs	r6, lr, #108, 18	@ 0x1b0000
 80198d7:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	@ 0xffffff54
 80198db:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 80198df:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 80198e3:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 80198e7:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80198eb:	222b6570 	eorcs	r6, fp, #112, 10	@ 0x1c000000
 80198ef:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80198f3:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	@ 0xffffff08
 80198f7:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80198fb:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80198ff:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8019903:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8019907:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801990b:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801990f:	0a7b2029 	beq	9ee19bb <__init_array_end+0x1ec6c7f>
 8019913:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8019917:	20762074 	rsbscs	r2, r6, r4, ror r0
 801991b:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801991f:	20746961 	rsbscs	r6, r4, r1, ror #18
 8019923:	4a746567 	bmi	9d32ec7 <__init_array_end+0x1d1818b>
 8019927:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801992b:	72657627 	rsbvc	r7, r5, #40894464	@ 0x2700000
 801992f:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8019933:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 8019937:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801993b:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801993f:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019943:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019947:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801994b:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801994f:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 8019953:	6f697372 	svcvs	0x00697372
 8019957:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
 801995b:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801995f:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 8019963:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019967:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 801996b:	2b22563e 	blcs	88af26b <__init_array_end+0x89452f>
 801996f:	65762e76 	ldrbvs	r2, [r6, #-3702]!	@ 0xfffff18a
 8019973:	6f697372 	svcvs	0x00697372
 8019977:	3c222b6e 			@ <UNDEFINED> instruction: 0x3c222b6e
 801997b:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 801997f:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8019983:	2e762b22 	vaddcs.f64	d18, d6, d18
 8019987:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 801998b:	61642e64 	cmnvs	r4, r4, ror #28
 801998f:	222b6574 	eorcs	r6, fp, #116, 10	@ 0x1d000000
 8019993:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8019997:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801999b:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801999f:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
 80199a3:	742e646c 	strtvc	r6, [lr], #-1132	@ 0xfffffb94
 80199a7:	2b656d69 	blcs	9974f53 <__init_array_end+0x195a217>
 80199ab:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 8019928 <static_js+0x189>
 80199af:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 80199b3:	2b223e69 	blcs	88a935f <__init_array_end+0x88e623>
 80199b7:	6f622e76 	svcvs	0x00622e76
 80199bb:	2b647261 	blcs	9936347 <__init_array_end+0x191b60b>
 80199bf:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801993c <static_js+0x19d>
 80199c3:	0a223e69 	beq	88a936f <__init_array_end+0x88e633>
 80199c7:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 80199cb:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80199cf:	70206e6f 	eorvc	r6, r0, pc, ror #28
 80199d3:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 80199d7:	7b202973 	blvc	8823fab <__init_array_end+0x80926f>
 80199db:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 80199df:	206e7275 	rsbcs	r7, lr, r5, ror r2
 80199e3:	63746566 	cmnvs	r4, #427819008	@ 0x19800000
 80199e7:	2f272868 	svccs	0x00272868
 80199eb:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80199ef:	7463612f 	strbtvc	r6, [r3], #-303	@ 0xfffffed1
 80199f3:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80199f7:	0a7b202c 	beq	9ee1aaf <__init_array_end+0x1ec6d73>
 80199fb:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 80199ff:	203a646f 	eorscs	r6, sl, pc, ror #8
 8019a03:	534f5027 	movtpl	r5, #61479	@ 0xf027
 8019a07:	0a2c2754 	beq	8b2375f <__init_array_end+0xb08a23>
 8019a0b:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8019a0f:	3a737265 	bcc	9cf63ab <__init_array_end+0x1cdb66f>
 8019a13:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
 8019a17:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8019a1b:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8019a1f:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8019a23:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
 8019a27:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8019a2b:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8019a2f:	2f6e6f69 	svccs	0x006e6f69
 8019a33:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8019a37:	2c7d0a27 			@ <UNDEFINED> instruction: 0x2c7d0a27
 8019a3b:	646f620a 	strbtvs	r6, [pc], #-522	@ 8019a43 <static_js+0x2a4>
 8019a3f:	4a203a79 	bmi	882842b <__init_array_end+0x80d6ef>
 8019a43:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
 8019a47:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 8019a4b:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
 8019a4f:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
 8019a53:	0a297d0a 	beq	8a78e83 <__init_array_end+0xa5e147>
 8019a57:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 8019a5b:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019a5f:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 8019a63:	74656c65 	strbtvc	r6, [r5], #-3173	@ 0xfffff39b
 8019a67:	20297328 	eorcs	r7, r9, r8, lsr #6
 8019a6b:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 8019a6f:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8019a73:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 8019a77:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8019a7b:	6f736a2f 	svcvs	0x00736a2f
 8019a7f:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 8019a83:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019a87:	7b202c27 	blvc	8824b2b <__init_array_end+0x809def>
 8019a8b:	74656d0a 	strbtvc	r6, [r5], #-3338	@ 0xfffff2f6
 8019a8f:	3a646f68 	bcc	9935837 <__init_array_end+0x191aafb>
 8019a93:	45442720 	strbmi	r2, [r4, #-1824]	@ 0xfffff8e0
 8019a97:	4554454c 	ldrbmi	r4, [r4, #-1356]	@ 0xfffffab4
 8019a9b:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 8019a9f:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 8019aa3:	203a7372 	eorscs	r7, sl, r2, ror r3
 8019aa7:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 8019aab:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8019aaf:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 8019ab3:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 8019ab7:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 8019abb:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8019abf:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8019ac3:	6a2f6e6f 	bvs	8bf5487 <__init_array_end+0xbda74b>
 8019ac7:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 8019acb:	0a2c7d0a 	beq	8b38efb <__init_array_end+0xb1e1bf>
 8019acf:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019ad3:	534a203a 	movtpl	r2, #41018	@ 0xa03a
 8019ad7:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 8019adb:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 8019adf:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 8019ae3:	0a297328 	beq	8a7678b <__init_array_end+0xa5ba4f>
 8019ae7:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	@ 0xffffff06	@ <UNPREDICTABLE>
 8019aeb:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
 8019aef:	6f697463 	svcvs	0x00697463
 8019af3:	6572206e 	ldrbvs	r2, [r2, #-110]!	@ 0xffffff92
 8019af7:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8019aff <static_js+0x360>
 8019afb:	7b202928 	blvc	8823fa3 <__init_array_end+0x809267>
 8019aff:	736f700a 	cmnvc	pc, #10
 8019b03:	207b2874 	rsbscs	r2, fp, r4, ror r8
 8019b07:	6f626572 	svcvs	0x00626572
 8019b0b:	203a746f 	eorscs	r7, sl, pc, ror #8
 8019b0f:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 8019b13:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 8019b17:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8019b1b:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8019b1f:	61636f6c 	cmnvs	r3, ip, ror #30
 8019b23:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 8019b27:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
 8019b2b:	62207261 	eorvs	r7, r0, #268435462	@ 0x10000006
 8019b2f:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 8019b33:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8019b37:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019b3b:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019b3f:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019b43:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019b47:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 8019b4b:	61636f6c 	cmnvs	r3, ip, ror #30
 8019b4f:	75426574 	strbvc	r6, [r2, #-1396]	@ 0xfffffa8c
 8019b53:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8019b57:	0a3b2927 	beq	8ee3ffb <__init_array_end+0xec92bf>
 8019b5b:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 8019b5f:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 8019b63:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 8019b67:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8019b6b:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 8019b6f:	736e6961 	cmnvc	lr, #1589248	@ 0x184000
 8019b73:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
 8019b77:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019b7b:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8019b7f:	0a7b2029 	beq	9ee1c2b <__init_array_end+0x1ec6eef>
 8019b83:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 8019b87:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 8019b8b:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8019b8f:	6f6d6572 	svcvs	0x006d6572
 8019b93:	27286576 			@ <UNDEFINED> instruction: 0x27286576
 8019b97:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8019b9b:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019b9f:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019ba3:	616c632e 	cmnvs	ip, lr, lsr #6
 8019ba7:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 8019bab:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 8019baf:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 8019bb3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019bb7:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8019bbb:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
 8019bbf:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 8019bc3:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 8019bc7:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
 8019bcb:	61636f4c 	cmnvs	r3, ip, asr #30
 8019bcf:	4f206574 	svcmi	0x00206574
 8019bd3:	700a276e 	andvc	r2, sl, lr, ror #14
 8019bd7:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8019bdb:	6469207b 	strbtvs	r2, [r9], #-123	@ 0xffffff85
 8019bdf:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8019be3:	203a7966 	eorscs	r7, sl, r6, ror #18
 8019be7:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 8019beb:	65207d0a 	strvs	r7, [r0, #-3338]!	@ 0xfffff2f6
 8019bef:	2065736c 	rsbcs	r7, r5, ip, ror #6
 8019bf3:	2e620a7b 			@ <UNDEFINED> instruction: 0x2e620a7b
 8019bf7:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 8019bfb:	73694c73 	cmnvc	r9, #29440	@ 0x7300
 8019bff:	65722e74 	ldrbvs	r2, [r2, #-3700]!	@ 0xfffff18c
 8019c03:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
 8019c07:	63612728 	cmnvs	r1, #40, 14	@ 0xa00000
 8019c0b:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019c0f:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019c13:	616c632e 	cmnvs	ip, lr, lsr #6
 8019c17:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 8019c1b:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 8019c1f:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 8019c23:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8019c27:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019c2b:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019c2f:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 8019c33:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 8019c37:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 8019c3b:	6f4c2720 	svcvs	0x004c2720
 8019c3f:	65746163 	ldrbvs	r6, [r4, #-355]!	@ 0xfffffe9d
 8019c43:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 8019c47:	6f700a27 	svcvs	0x00700a27
 8019c4b:	7b287473 	blvc	8a36e1f <__init_array_end+0xa1c0e3>
 8019c4f:	65646920 	strbvs	r6, [r4, #-2336]!	@ 0xfffff6e0
 8019c53:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
 8019c57:	30203a79 	eorcc	r3, r0, r9, ror sl
 8019c5b:	0a297d20 	beq	8a790e3 <__init_array_end+0xa5e3a7>
 8019c5f:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

08019c63 <dmx_js>:
 8019c63:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8019c67:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8019c6b:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019c6f:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 8019c73:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8019c77:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8019c7b:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 8019c7f:	7b207972 	blvc	883824f <__init_array_end+0x81d513>
 8019c83:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 8019c87:	613d6420 	teqvs	sp, r0, lsr #8
 8019c8b:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 8019c8f:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 8019c93:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8019c97:	6d642728 	stclvs	7, cr2, [r4, #-160]!	@ 0xffffff60
 8019c9b:	6f702f78 	svcvs	0x00702f78
 8019c9f:	74737472 	ldrbtvc	r7, [r3], #-1138	@ 0xfffffb8e
 8019ca3:	73757461 	cmnvc	r5, #1627389952	@ 0x61000000
 8019ca7:	6c0a2927 			@ <UNDEFINED> instruction: 0x6c0a2927
 8019cab:	68207465 	stmdavs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
 8019caf:	3d737264 	lfmcc	f7, 2, [r3, #-400]!	@ 0xfffffe70
 8019cb3:	72743c27 	rsbsvc	r3, r4, #9984	@ 0x2700
 8019cb7:	6c0a273e 	stcvs	7, cr2, [sl], {62}	@ 0x3e
 8019cbb:	74207465 	strtvc	r7, [r0], #-1125	@ 0xfffffb9b
 8019cbf:	273d6464 	ldrcs	r6, [sp, -r4, ror #8]!
 8019cc3:	3e72743c 	mrccc	4, 3, r7, cr2, cr12, {1}
 8019cc7:	2e640a27 	vmulcs.f32	s1, s8, s15
 8019ccb:	45726f66 	ldrbmi	r6, [r2, #-3942]!	@ 0xfffff09a
 8019ccf:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8019cd3:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 8019cd7:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 8019cdb:	64680a7b 	strbtvs	r0, [r8], #-2683	@ 0xfffff585
 8019cdf:	3d2b7372 	stccc	3, cr7, [fp, #-456]!	@ 0xfffffe38
 8019ce3:	68743c60 	ldmdavs	r4!, {r5, r6, sl, fp, ip, sp}^
 8019ce7:	697b243e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sl, sp}^
 8019ceb:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 8019cef:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 8019cf3:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 8019cfb <dmx_js+0x98>
 8019cf7:	0a603e68 	beq	982969f <__init_array_end+0x180e963>
 8019cfb:	2b646474 	blcs	9932ed3 <__init_array_end+0x1918197>
 8019cff:	743c603d 	ldrtvc	r6, [ip], #-61	@ 0xffffffc3
 8019d03:	7b243e64 	blvc	892969b <__init_array_end+0x90e95f>
 8019d07:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 8019d0b:	7269642e 	rsbvc	r6, r9, #771751936	@ 0x2e000000
 8019d0f:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8019d13:	3c7d6e6f 	ldclcc	14, cr6, [sp], #-444	@ 0xfffffe44
 8019d17:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 8019d1b:	297d0a60 	ldmdbcs	sp!, {r5, r6, r9, fp}^
 8019d1f:	6f640a3b 	svcvs	0x00640a3b
 8019d23:	656d7563 	strbvs	r7, [sp, #-1379]!	@ 0xfffffa9d
 8019d27:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8019d2b:	6c457465 	cfstrdvs	mvd7, [r5], {101}	@ 0x65
 8019d2f:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8019d33:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8019d37:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8019d3b:	61745364 	cmnvs	r4, r4, ror #6
 8019d3f:	29227374 	stmdbcs	r2!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
 8019d43:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 8019d47:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 8019d4b:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8019d4f:	2b737264 	blcs	9cf66e7 <__init_array_end+0x1cdb9ab>
 8019d53:	742f3c27 	strtvc	r3, [pc], #-3111	@ 8019d5b <dmx_js+0xf8>
 8019d57:	2b273e72 	blcs	89e9727 <__init_array_end+0x9ce9eb>
 8019d5b:	2b646474 	blcs	9932f33 <__init_array_end+0x19181f7>
 8019d5f:	742f3c27 	strtvc	r3, [pc], #-3111	@ 8019d67 <dmx_js+0x104>
 8019d63:	0a273e72 	beq	89e9733 <__init_array_end+0x9ce9f7>
 8019d67:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8019d6b:	3d207274 	sfmcc	f7, 4, [r0, #-464]!	@ 0xfffffe30
 8019d6f:	61776120 	cmnvs	r7, r0, lsr #2
 8019d73:	50207469 	eorpl	r7, r0, r9, ror #8
 8019d77:	696d6f72 	stmdbvs	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019d7b:	612e6573 			@ <UNDEFINED> instruction: 0x612e6573
 8019d7f:	0a286c6c 	beq	8a34f37 <__init_array_end+0xa1a1fb>
 8019d83:	616d2e64 	cmnvs	sp, r4, ror #28
 8019d87:	74692870 	strbtvc	r2, [r9], #-2160	@ 0xfffff790
 8019d8b:	3d206d65 	stccc	13, cr6, [r0, #-404]!	@ 0xfffffe6c
 8019d8f:	6567203e 	strbvs	r2, [r7, #-62]!	@ 0xffffffc2
 8019d93:	4f534a74 	svcmi	0x00534a74
 8019d97:	6427284e 	strtvs	r2, [r7], #-2126	@ 0xfffff7b2
 8019d9b:	732f786d 			@ <UNDEFINED> instruction: 0x732f786d
 8019d9f:	75746174 	ldrbvc	r6, [r4, #-372]!	@ 0xfffffe8c
 8019da3:	20273f73 	eorcs	r3, r7, r3, ror pc
 8019da7:	7469202b 	strbtvc	r2, [r9], #-43	@ 0xffffffd5
 8019dab:	702e6d65 	eorvc	r6, lr, r5, ror #26
 8019daf:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8019db3:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 8019db7:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 8019dbb:	3d207073 	stccc	0, cr7, [r0, #-460]!	@ 0xfffffe34
 8019dbf:	7b28203e 	blvc	8a21ebf <__init_array_end+0xa07183>
 8019dc3:	726f700a 	rsbvc	r7, pc, #10
 8019dc7:	69203a74 	stmdbvs	r0!, {r2, r4, r5, r6, r9, fp, ip, sp}
 8019dcb:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 8019dcf:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 8019dd3:	3a640a2c 	bcc	991c68b <__init_array_end+0x190194f>
 8019dd7:	73207b20 			@ <UNDEFINED> instruction: 0x73207b20
 8019ddb:	3a746e65 	bcc	9d35777 <__init_array_end+0x1d1aa3b>
 8019ddf:	73657220 	cmnvc	r5, #32, 4
 8019de3:	6d642e70 	stclvs	14, cr2, [r4, #-448]!	@ 0xfffffe40
 8019de7:	65732e78 	ldrbvs	r2, [r3, #-3704]!	@ 0xfffff188
 8019deb:	202c746e 	eorcs	r7, ip, lr, ror #8
 8019def:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 8019df3:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 8019df7:	6572203a 	ldrbvs	r2, [r2, #-58]!	@ 0xffffffc6
 8019dfb:	642e7073 	strtvs	r7, [lr], #-115	@ 0xffffff8d
 8019dff:	722e786d 	eorvc	r7, lr, #7143424	@ 0x6d0000
 8019e03:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8019e07:	20646576 	rsbcs	r6, r4, r6, ror r5
 8019e0b:	720a2c7d 	andvc	r2, sl, #32000	@ 0x7d00
 8019e0f:	0a7b203a 	beq	9ee1eff <__init_array_end+0x1ec71c3>
 8019e13:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 8019e17:	207b203a 	rsbscs	r2, fp, sl, lsr r0
 8019e1b:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 8019e1f:	72203a73 	eorvc	r3, r0, #471040	@ 0x73000
 8019e23:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 8019e27:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 8019e2b:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 8019e2f:	616c632e 	cmnvs	ip, lr, lsr #6
 8019e33:	202c7373 	eorcs	r7, ip, r3, ror r3
 8019e37:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 8019e3b:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 8019e3f:	72203a79 	eorvc	r3, r0, #495616	@ 0x79000
 8019e43:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 8019e47:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 8019e4b:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 8019e4f:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 8019e53:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 8019e57:	7d207972 			@ <UNDEFINED> instruction: 0x7d207972
 8019e5b:	65720a2c 	ldrbvs	r0, [r2, #-2604]!	@ 0xfffff5d4
 8019e5f:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 8019e63:	203a6465 	eorscs	r6, sl, r5, ror #8
 8019e67:	6f67207b 	svcvs	0x0067207b
 8019e6b:	203a646f 	eorscs	r6, sl, pc, ror #8
 8019e6f:	70736572 	rsbsvc	r6, r3, r2, ror r5
 8019e73:	6d64722e 	sfmvs	f7, 2, [r4, #-184]!	@ 0xffffff48
 8019e77:	6365722e 	cmnvs	r5, #-536870910	@ 0xe0000002
 8019e7b:	65766965 	ldrbvs	r6, [r6, #-2405]!	@ 0xfffff69b
 8019e7f:	6f672e64 	svcvs	0x00672e64
 8019e83:	202c646f 	eorcs	r6, ip, pc, ror #8
 8019e87:	3a646162 	bcc	9932417 <__init_array_end+0x19176db>
 8019e8b:	73657220 	cmnvc	r5, #32, 4
 8019e8f:	64722e70 	ldrbtvs	r2, [r2], #-3696	@ 0xfffff190
 8019e93:	65722e6d 	ldrbvs	r2, [r2, #-3693]!	@ 0xfffff193
 8019e97:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 8019e9b:	622e6465 	eorvs	r6, lr, #1694498816	@ 0x65000000
 8019e9f:	202c6461 	eorcs	r6, ip, r1, ror #8
 8019ea3:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 8019ea7:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 8019eab:	72203a79 	eorvc	r3, r0, #495616	@ 0x79000
 8019eaf:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 8019eb3:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 8019eb7:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 8019ebb:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 8019ebf:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 8019ec3:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 8019ec7:	7d0a7972 	vstrvc.16	s14, [sl, #-228]	@ 0xffffff1c	@ <UNPREDICTABLE>
 8019ecb:	29297d7d 	stmdbcs	r9!, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr}
 8019ecf:	0a3b2929 	beq	8ee437b <__init_array_end+0xec963f>
 8019ed3:	732e7274 			@ <UNDEFINED> instruction: 0x732e7274
 8019ed7:	2874726f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8019edb:	202c6128 	eorcs	r6, ip, r8, lsr #2
 8019edf:	3d202962 			@ <UNDEFINED> instruction: 0x3d202962
 8019ee3:	0a7b203e 	beq	9ee1fe3 <__init_array_end+0x1ec72a7>
 8019ee7:	75746572 	ldrbvc	r6, [r4, #-1394]!	@ 0xfffffa8e
 8019eeb:	64206e72 	strtvs	r6, [r0], #-3698	@ 0xfffff18e
 8019eef:	6e69662e 	cdpvs	6, 6, cr6, cr9, cr14, {1}
 8019ef3:	646e4964 	strbtvs	r4, [lr], #-2404	@ 0xfffff69c
 8019ef7:	69287865 	stmdbvs	r8!, {r0, r2, r5, r6, fp, ip, sp, lr}
 8019efb:	206d6574 	rsbcs	r6, sp, r4, ror r5
 8019eff:	69203e3d 	stmdbvs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 8019f03:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 8019f07:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 8019f0b:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 8019f0f:	702e6120 	eorvc	r6, lr, r0, lsr #2
 8019f13:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8019f17:	64202d20 	strtvs	r2, [r0], #-3360	@ 0xfffff2e0
 8019f1b:	6e69662e 	cdpvs	6, 6, cr6, cr9, cr14, {1}
 8019f1f:	646e4964 	strbtvs	r4, [lr], #-2404	@ 0xfffff69c
 8019f23:	69287865 	stmdbvs	r8!, {r0, r2, r5, r6, fp, ip, sp, lr}
 8019f27:	206d6574 	rsbcs	r6, sp, r4, ror r5
 8019f2b:	69203e3d 	stmdbvs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 8019f2f:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 8019f33:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 8019f37:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 8019f3b:	702e6220 	eorvc	r6, lr, r0, lsr #4
 8019f3f:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8019f43:	3b297d0a 	blcc	8a79373 <__init_array_end+0xa5e637>
 8019f47:	7264680a 	rsbvc	r6, r4, #655360	@ 0xa0000
 8019f4b:	3c273d73 	stccc	13, cr3, [r7], #-460	@ 0xfffffe34
 8019f4f:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	@ 0xfffffe30
 8019f53:	72206874 	eorvc	r6, r0, #116, 16	@ 0x740000
 8019f57:	7073776f 	rsbsvc	r7, r3, pc, ror #14
 8019f5b:	223d6e61 	eorscs	r6, sp, #1552	@ 0x610
 8019f5f:	503e2233 	eorspl	r2, lr, r3, lsr r2
 8019f63:	3c74726f 	lfmcc	f7, 2, [r4], #-444	@ 0xfffffe44
 8019f67:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 8019f6b:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 8019f6f:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 8019f73:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 8019f77:	3e223222 	cdpcc	2, 2, cr3, cr2, cr2, {1}
 8019f7b:	3c584d44 	mrrccc	13, 4, r4, r8, cr4
 8019f7f:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 8019f83:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 8019f87:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 8019f8b:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 8019f8f:	3e223522 	cfsh64cc	mvdx3, mvdx2, #18
 8019f93:	3c4d4452 	cfstrdcc	mvd4, [sp], {82}	@ 0x52
 8019f97:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 8019f9b:	72742f3c 	rsbsvc	r2, r4, #60, 30	@ 0xf0
 8019f9f:	72743c3e 	rsbsvc	r3, r4, #15872	@ 0x3e00
 8019fa3:	68743c3e 	ldmdavs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8019fa7:	776f7220 	strbvc	r7, [pc, -r0, lsr #4]!
 8019fab:	6e617073 	mcrvs	0, 3, r7, cr1, cr3, {3}
 8019faf:	2232223d 	eorscs	r2, r2, #-805306365	@ 0xd0000003
 8019fb3:	6e65533e 	mcrvs	3, 3, r5, cr5, cr14, {1}
 8019fb7:	742f3c74 	strtvc	r3, [pc], #-3188	@ 8019fbf <dmx_js+0x35c>
 8019fbb:	743c3e68 	ldrtvc	r3, [ip], #-3688	@ 0xfffff198
 8019fbf:	6f722068 	svcvs	0x00722068
 8019fc3:	61707377 	cmnvs	r0, r7, ror r3
 8019fc7:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 8019fcb:	65523e22 	ldrbvs	r3, [r2, #-3618]	@ 0xfffff1de
 8019fcf:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 8019fd3:	2f3c6465 	svccs	0x003c6465
 8019fd7:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 8019fdb:	63206874 			@ <UNDEFINED> instruction: 0x63206874
 8019fdf:	70736c6f 	rsbsvc	r6, r3, pc, ror #24
 8019fe3:	223d6e61 	eorscs	r6, sp, #1552	@ 0x610
 8019fe7:	533e2232 	teqpl	lr, #536870915	@ 0x20000003
 8019feb:	3c746e65 	ldclcc	14, cr6, [r4], #-404	@ 0xfffffe6c
 8019fef:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 8019ff3:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 8019ff7:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 8019ffb:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 8019fff:	3e223322 	cdpcc	3, 2, cr3, cr2, cr2, {1}
 801a003:	65636552 	strbvs	r6, [r3, #-1362]!	@ 0xfffffaae
 801a007:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801a00b:	68742f3c 	ldmdavs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801a00f:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801a017 <dmx_js+0x3b4>
 801a013:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801a017:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801a01b:	6c433e68 	mcrrvs	14, 6, r3, r3, cr8
 801a01f:	3c737361 	ldclcc	3, cr7, [r3], #-388	@ 0xfffffe7c
 801a023:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801a027:	3e68743c 	mcrcc	4, 3, r7, cr8, cr12, {1}
 801a02b:	63736944 	cmnvs	r3, #68, 18	@ 0x110000
 801a02f:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 801a033:	742f3c79 	strtvc	r3, [pc], #-3193	@ 801a03b <dmx_js+0x3d8>
 801a037:	743c3e68 	ldrtvc	r3, [ip], #-3688	@ 0xfffff198
 801a03b:	6f473e68 	svcvs	0x00473e68
 801a03f:	2f3c646f 	svccs	0x003c646f
 801a043:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801a047:	423e6874 	eorsmi	r6, lr, #116, 16	@ 0x740000
 801a04b:	2f3c6461 	svccs	0x003c6461
 801a04f:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801a053:	443e6874 	ldrtmi	r6, [lr], #-2164	@ 0xfffff78c
 801a057:	6f637369 	svcvs	0x00637369
 801a05b:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 801a05f:	68742f3c 	ldmdavs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801a063:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801a06b <dmx_js+0x408>
 801a067:	0a273e72 	beq	89e9a37 <__init_array_end+0x9cecfb>
 801a06b:	3d646474 	cfstrdcc	mvd6, [r4, #-464]!	@ 0xfffffe30
 801a06f:	740a2727 	strvc	r2, [sl], #-1831	@ 0xfffff8d9
 801a073:	6f662e72 	svcvs	0x00662e72
 801a077:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 801a07b:	20702868 	rsbscs	r2, r0, r8, ror #16
 801a07f:	7b203e3d 	blvc	882997b <__init_array_end+0x80ec3f>
 801a083:	6464740a 	strbtvs	r7, [r4], #-1034	@ 0xfffffbf6
 801a087:	3c603d2b 	stclcc	13, cr3, [r0], #-172	@ 0xffffff54
 801a08b:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	@ 0xfffffe30
 801a08f:	243e6474 	ldrtcs	r6, [lr], #-1140	@ 0xfffffb8c
 801a093:	702e707b 	eorvc	r7, lr, fp, ror r0
 801a097:	7d74726f 	lfmvc	f7, 2, [r4, #-444]!	@ 0xfffffe44
 801a09b:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801a09f:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801a0a3:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801a0a7:	732e642e 			@ <UNDEFINED> instruction: 0x732e642e
 801a0ab:	7d746e65 	ldclvc	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801a0af:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801a0b3:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801a0b7:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801a0bb:	722e642e 	eorvc	r6, lr, #771751936	@ 0x2e000000
 801a0bf:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801a0c3:	7d646576 	cfstr64vc	mvdx6, [r4, #-472]!	@ 0xfffffe28
 801a0c7:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801a0cb:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801a0cf:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801a0d3:	732e722e 			@ <UNDEFINED> instruction: 0x732e722e
 801a0d7:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801a0db:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801a0df:	2f3c7d73 	svccs	0x003c7d73
 801a0e3:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 801a0e7:	243e6474 	ldrtcs	r6, [lr], #-1140	@ 0xfffffb8c
 801a0eb:	722e707b 	eorvc	r7, lr, #123	@ 0x7b
 801a0ef:	6e65732e 	cdpvs	3, 6, cr7, cr5, cr14, {1}
 801a0f3:	69642e74 	stmdbvs	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801a0f7:	766f6373 			@ <UNDEFINED> instruction: 0x766f6373
 801a0fb:	7d797265 	lfmvc	f7, 2, [r9, #-404]!	@ 0xfffffe6c
 801a0ff:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801a103:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801a107:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801a10b:	722e722e 	eorvc	r7, lr, #-536870910	@ 0xe0000002
 801a10f:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801a113:	2e646576 	mcrcs	5, 3, r6, cr4, cr6, {3}
 801a117:	646f6f67 	strbtvs	r6, [pc], #-3943	@ 801a11f <dmx_js+0x4bc>
 801a11b:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801a123 <dmx_js+0x4c0>
 801a11f:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801a123:	7b243e64 	blvc	8929abb <__init_array_end+0x90ed7f>
 801a127:	2e722e70 	mrccs	14, 3, r2, cr2, cr0, {3}
 801a12b:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801a12f:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801a133:	6461622e 	strbtvs	r6, [r1], #-558	@ 0xfffffdd2
 801a137:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801a13f <dmx_js+0x4dc>
 801a13b:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801a13f:	7b243e64 	blvc	8929ad7 <__init_array_end+0x90ed9b>
 801a143:	2e722e70 	mrccs	14, 3, r2, cr2, cr0, {3}
 801a147:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801a14b:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801a14f:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 801a153:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801a157:	3c7d7972 			@ <UNDEFINED> instruction: 0x3c7d7972
 801a15b:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 801a15f:	72742f3c 	rsbsvc	r2, r4, #60, 30	@ 0xf0
 801a163:	0a3b603e 	beq	8ef2263 <__init_array_end+0xed7527>
 801a167:	0a3b297d 	beq	8ee4763 <__init_array_end+0xec9a27>
 801a16b:	75636f64 	strbvc	r6, [r3, #-3940]!	@ 0xfffff09c
 801a16f:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801a173:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801a177:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	@ 0xfffffeec
 801a17b:	42746e65 	rsbsmi	r6, r4, #1616	@ 0x650
 801a17f:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
 801a183:	50646922 	rsbpl	r6, r4, r2, lsr #18
 801a187:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
 801a18b:	692e2922 	stmdbvs	lr!, {r1, r5, r8, fp, sp}
 801a18f:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801a193:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801a197:	7264683d 	rsbvc	r6, r4, #3997696	@ 0x3d0000
 801a19b:	64742b73 	ldrbtvs	r2, [r4], #-2931	@ 0xfffff48d
 801a19f:	207d0a64 	rsbscs	r0, sp, r4, ror #20
 801a1a3:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 801a1a7:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 801a1ab:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 801a1af:	0a7d7b29 	beq	9f78e5b <__init_array_end+0x1f5e11f>
 801a1b3:	 	cmnmi	r3, sp, ror r0

0801a1b5 <E131MsgConst::STARTED>:
 801a1b5:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801a1b9:	2e314520 	cfabs64cs	mvdx4, mvdx1
 801a1bd:	73203133 			@ <UNDEFINED> instruction: 0x73203133
 801a1c1:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
 801a1c5:	 	movwpl	r6, #1125	@ 0x465

0801a1c8 <E131MsgConst::START>:
 801a1c8:	72617453 	rsbvc	r7, r1, #1392508928	@ 0x53000000
 801a1cc:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 801a1d0:	43417320 	movtmi	r7, #4896	@ 0x1320
 801a1d4:	3145204e 	cmpcc	r5, lr, asr #32
 801a1d8:	0031332e 	eorseq	r3, r1, lr, lsr #6

0801a1dc <E131ParamsConst::PRIORITY>:
 801a1dc:	6f697270 	svcvs	0x00697270
 801a1e0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801a1e4:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a1e8:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801a1ec:	72700000 	rsbsvc	r0, r0, #0
 801a1f0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801a1f4:	705f7974 	subsvc	r7, pc, r4, ror r9	@ <UNPREDICTABLE>
 801a1f8:	5f74726f 	svcpl	0x0074726f
 801a1fc:	00000062 	andeq	r0, r0, r2, rrx
	...

0801a224 <E131ParamsConst::FILE_NAME>:
 801a224:	31333165 	teqcc	r3, r5, ror #2
 801a228:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
	...

0801a22d <E117Const::ACN_PACKET_IDENTIFIER>:
 801a22d:	2d435341 	stclcs	3, cr5, [r3, #-260]	@ 0xfffffefc
 801a231:	312e3145 			@ <UNDEFINED> instruction: 0x312e3145
 801a235:	00000037 	andeq	r0, r0, r7, lsr r0

0801a239 <E131Const::VERSION>:
 801a239:	 	andeq	r1, r0, r1, lsl #22

0801a23c <vtable for RDMDeviceResponder>:
	...
 801a244:	080097dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 801a248:	080098e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, fp, ip, pc}
 801a24c:	0800cfb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, lr, pc}
 801a250:	0800cfb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, lr, pc}

0801a254 <RDMHandler::PID_DEFINITIONS>:
 801a254:	00000060 	andeq	r0, r0, r0, rrx
 801a258:	0800d4d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, ip, lr, pc}
	...
 801a268:	01010000 	mrseq	r0, (UNDEF: 1)
 801a26c:	00000080 	andeq	r0, r0, r0, lsl #1
 801a270:	0800d60d 	stmdaeq	r0, {r0, r2, r3, r9, sl, ip, lr, pc}
	...
 801a280:	01010100 	mrseq	r0, (UNDEF: 17)
 801a284:	00000081 	andeq	r0, r0, r1, lsl #1
 801a288:	0800d679 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, ip, lr, pc}
	...
 801a298:	01010100 	mrseq	r0, (UNDEF: 17)
 801a29c:	00000082 	andeq	r0, r0, r2, lsl #1
 801a2a0:	0800d629 	stmdaeq	r0, {r0, r3, r5, r9, sl, ip, lr, pc}
 801a2a4:	00000000 	andeq	r0, r0, r0
 801a2a8:	0800d7a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, ip, lr, pc}
 801a2ac:	00000000 	andeq	r0, r0, r0
 801a2b0:	01010100 	mrseq	r0, (UNDEF: 17)
 801a2b4:	00000090 	muleq	r0, r0, r0
 801a2b8:	0800d54d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, ip, lr, pc}
 801a2bc:	00000000 	andeq	r0, r0, r0
 801a2c0:	0800d775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, ip, lr, pc}
 801a2c4:	00000000 	andeq	r0, r0, r0
 801a2c8:	01010100 	mrseq	r0, (UNDEF: 17)
 801a2cc:	00001000 	andeq	r1, r0, r0
 801a2d0:	0800d665 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, ip, lr, pc}
 801a2d4:	00000000 	andeq	r0, r0, r0
 801a2d8:	0800d6f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, ip, lr, pc}
 801a2dc:	00000000 	andeq	r0, r0, r0
 801a2e0:	01010000 	mrseq	r0, (UNDEF: 1)
 801a2e4:	00001001 	andeq	r1, r0, r1
	...
 801a2f0:	0800d6b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, ip, lr, pc}
 801a2f4:	00000000 	andeq	r0, r0, r0
 801a2f8:	01010100 	mrseq	r0, (UNDEF: 17)
 801a2fc:	00000700 	andeq	r0, r0, r0, lsl #14
 801a300:	0800dc85 	stmdaeq	r0, {r0, r2, r7, sl, fp, ip, lr, pc}
	...
 801a310:	01000000 	mrseq	r0, (UNDEF: 0)
 801a314:	00000701 	andeq	r0, r0, r1, lsl #14
 801a318:	0800dca1 	stmdaeq	r0, {r0, r5, r7, sl, fp, ip, lr, pc}
	...
 801a328:	01000004 	tsteq	r0, r4
 801a32c:	00000702 	andeq	r0, r0, r2, lsl #14
 801a330:	0800dcf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, fp, ip, lr, pc}
	...
 801a340:	01000004 	tsteq	r0, r4
 801a344:	00000703 	andeq	r0, r0, r3, lsl #14
 801a348:	0800dd25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, ip, lr, pc}
 801a34c:	00000000 	andeq	r0, r0, r0
 801a350:	0800dd55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, ip, lr, pc}
 801a354:	00000000 	andeq	r0, r0, r0
 801a358:	01000004 	tsteq	r0, r4
 801a35c:	00000704 	andeq	r0, r0, r4, lsl #14
 801a360:	0800ddd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, lr, pc}
 801a364:	00000000 	andeq	r0, r0, r0
 801a368:	0800de11 	stmdaeq	r0, {r0, r4, r9, sl, fp, ip, lr, pc}
 801a36c:	00000000 	andeq	r0, r0, r0
 801a370:	01000004 	tsteq	r0, r4
 801a374:	00000705 	andeq	r0, r0, r5, lsl #14
 801a378:	0800de89 	stmdaeq	r0, {r0, r3, r7, r9, sl, fp, ip, lr, pc}
	...
 801a388:	01000004 	tsteq	r0, r4
 801a38c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 801a398:	0800de59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, ip, lr, pc}
 801a39c:	00000000 	andeq	r0, r0, r0
 801a3a0:	01000004 	tsteq	r0, r4
 801a3a4:	00000706 	andeq	r0, r0, r6, lsl #14
 801a3a8:	0800ded9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, ip, lr, pc}
 801a3ac:	00000000 	andeq	r0, r0, r0
 801a3b0:	0800df21 	stmdaeq	r0, {r0, r5, r8, r9, sl, fp, ip, lr, pc}
 801a3b4:	00000000 	andeq	r0, r0, r0
 801a3b8:	01000004 	tsteq	r0, r4
 801a3bc:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 801a3c8:	0800df71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, fp, ip, lr, pc}
 801a3cc:	00000000 	andeq	r0, r0, r0
 801a3d0:	01000004 	tsteq	r0, r4
 801a3d4:	0000070b 	andeq	r0, r0, fp, lsl #14
 801a3d8:	0800dd89 	stmdaeq	r0, {r0, r3, r7, r8, sl, fp, ip, lr, pc}
	...
 801a3e8:	01000001 	tsteq	r0, r1
 801a3ec:	0000070a 	andeq	r0, r0, sl, lsl #14
 801a3f0:	0800df99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, ip, lr, pc}
 801a3f4:	00000000 	andeq	r0, r0, r0
 801a3f8:	0800dfd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 801a3fc:	00000000 	andeq	r0, r0, r0
 801a400:	01000004 	tsteq	r0, r4
 801a404:	0000070c 	andeq	r0, r0, ip, lsl #14
 801a408:	0800e015 	stmdaeq	r0, {r0, r2, r4, sp, lr, pc}
 801a40c:	00000000 	andeq	r0, r0, r0
 801a410:	0800e041 	stmdaeq	r0, {r0, r6, sp, lr, pc}
 801a414:	00000000 	andeq	r0, r0, r0
 801a418:	01000000 	mrseq	r0, (UNDEF: 0)
 801a41c:	0000070d 	andeq	r0, r0, sp, lsl #14
 801a420:	0800e075 	stmdaeq	r0, {r0, r2, r4, r5, r6, sp, lr, pc}
 801a424:	00000000 	andeq	r0, r0, r0
 801a428:	0800e0a1 	stmdaeq	r0, {r0, r5, r7, sp, lr, pc}
 801a42c:	00000000 	andeq	r0, r0, r0
 801a430:	01000000 	mrseq	r0, (UNDEF: 0)

0801a434 <UID_ALL>:
 801a434:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 801a438:	 	svcvs	0x0043ffff

0801a43a <RDMNetConst::MSG_CONFIG>:
 801a43a:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801a43e:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 801a442:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801a446:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801a44a:	 	andpl	r7, r0, r5, ror #8

0801a44d <RDMConst::MANUFACTURER_ID>:
 801a44d:	 	strbtvc	r0, [r8], #-80	@ 0xffffffb0

0801a44f <RDMConst::MANUFACTURER_NAME>:
 801a44f:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801a453:	772f2f3a 			@ <UNDEFINED> instruction: 0x772f2f3a
 801a457:	6f2e7777 	svcvs	0x002e7777
 801a45b:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 801a45f:	2d697065 	stclcs	0, cr7, [r9, #-404]!	@ 0xfffffe6c
 801a463:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801a467:	0067726f 	rsbeq	r7, r7, pc, ror #4

0801a46b <DEVICE_LABEL>:
 801a46b:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 801a46f:	30373446 	eorscc	r3, r7, r6, asr #8
 801a473:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 801a477:	52204c41 	eorpl	r4, r0, #16640	@ 0x4100
 801a47b:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 801a47f:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801a483:	 	ldclvs	0, cr0, [r3], #-404	@ 0xfffffe6c

0801a485 <DmxParamsConst::SLOTS_COUNT>:
 801a485:	746f6c73 	strbtvc	r6, [pc], #-3187	@ 801a48d <DmxParamsConst::SLOTS_COUNT+0x8>
 801a489:	6f635f73 	svcvs	0x00635f73
 801a48d:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a491 <DmxParamsConst::REFRESH_RATE>:
 801a491:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 801a495:	5f687365 	svcpl	0x00687365
 801a499:	65746172 	ldrbvs	r6, [r4, #-370]!	@ 0xfffffe8e
	...

0801a49e <DmxParamsConst::MAB_TIME>:
 801a49e:	5f62616d 	svcpl	0x0062616d
 801a4a2:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
	...

0801a4a7 <DmxParamsConst::BREAK_TIME>:
 801a4a7:	61657262 	cmnvs	r5, r2, ror #4
 801a4ab:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a4af:	 	andvc	r6, r0, sp, ror #10

0801a4b2 <DmxParamsConst::FILE_NAME>:
 801a4b2:	61726170 	cmnvs	r2, r0, ror r1
 801a4b6:	742e736d 	strtvc	r7, [lr], #-877	@ 0xfffffc93
 801a4ba:	00007478 	andeq	r7, r0, r8, ror r4
	...

0801a4c0 <s_DirGpio>:
 801a4c0:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a4c4:	00000001 	andeq	r0, r0, r1
 801a4c8:	40020c00 	andmi	r0, r2, r0, lsl #24
 801a4cc:	00000002 	andeq	r0, r0, r2

0801a4d0 <NetworkConst::MSG_NETWORK_STARTED>:
 801a4d0:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801a4d4:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801a4d8:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a4dc:	00646574 	rsbeq	r6, r4, r4, ror r5

0801a4e0 <NetworkConst::MSG_NETWORK_INIT>:
 801a4e0:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801a4e4:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801a4e8:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
	...

0801a4ee <mdns::DOMAIN_DNSSD>:
 801a4ee:	65735f09 	ldrbvs	r5, [r3, #-3849]!	@ 0xfffff0f7
 801a4f2:	63697672 	cmnvs	r9, #119537664	@ 0x7200000
 801a4f6:	5f077365 	svcpl	0x00077365
 801a4fa:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	@ 0xfffffe70
 801a4fe:	5f046473 	svcpl	0x00046473
 801a502:	05706475 	ldrbeq	r6, [r0, #-1141]!	@ 0xfffffb8b
 801a506:	61636f6c 	cmnvs	r3, ip, ror #30
 801a50a:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801a5ee:	 	ssatge	r0, #25, lr

0801a5f0 <mdns::s_Services>:
 801a5f0:	0801a6b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, sp, pc}
 801a5f4:	00000008 	andeq	r0, r0, r8
 801a5f8:	00000000 	andeq	r0, r0, r0
 801a5fc:	00002905 	andeq	r2, r0, r5, lsl #18
 801a600:	0801a6b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, pc}
 801a604:	00000006 	andeq	r0, r0, r6
 801a608:	00000000 	andeq	r0, r0, r0
 801a60c:	00000045 	andeq	r0, r0, r5, asr #32
 801a610:	0801a6ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, sp, pc}
 801a614:	00000006 	andeq	r0, r0, r6
 801a618:	00000001 	andeq	r0, r0, r1
 801a61c:	00000050 	andeq	r0, r0, r0, asr r0
 801a620:	0801a69f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, sp, pc}
 801a624:	0000000d 	andeq	r0, r0, sp
 801a628:	00000000 	andeq	r0, r0, r0
 801a62c:	000015c1 	andeq	r1, r0, r1, asr #11
 801a630:	0801a69a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, sp, pc}
 801a634:	00000005 	andeq	r0, r0, r5
 801a638:	00000000 	andeq	r0, r0, r0
 801a63c:	0000007b 	andeq	r0, r0, fp, ror r0
 801a640:	0801a68e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, sp, pc}
 801a644:	0000000c 	andeq	r0, r0, ip
 801a648:	00000000 	andeq	r0, r0, r0
 801a64c:	0000138c 	andeq	r1, r0, ip, lsl #7
 801a650:	0801a689 	stmdaeq	r1, {r0, r3, r7, r9, sl, sp, pc}
 801a654:	00000005 	andeq	r0, r0, r5
	...
 801a660:	0801a684 	stmdaeq	r1, {r2, r7, r9, sl, sp, pc}
 801a664:	00000005 	andeq	r0, r0, r5
 801a668:	00000000 	andeq	r0, r0, r0
 801a66c:	00000fd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 801a670:	0801a680 	stmdaeq	r1, {r7, r9, sl, sp, pc}
 801a674:	00000004 	andeq	r0, r0, r4
 801a678:	00000000 	andeq	r0, r0, r0
 801a67c:	000013d6 	ldrdeq	r1, [r0], -r6

0801a680 <mdns::DOMAIN_PP>:
 801a680:	70705f03 	rsbsvc	r5, r0, r3, lsl #30

0801a684 <mdns::DOMAIN_DDP>:
 801a684:	64645f04 	strbtvs	r5, [r4], #-3844	@ 0xfffff0fc
 801a688:	 	svcvs	0x005f0470

0801a689 <mdns::DOMAIN_OSC>:
 801a689:	736f5f04 	cmnvc	pc, #4, 30
 801a68d:	 	cmpvs	pc, r3, ror #22

0801a68e <mdns::DOMAIN_MIDI>:
 801a68e:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
 801a692:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	@ 0xfffffe40
 801a696:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

0801a69a <mdns::DOMAIN_NTP>:
 801a69a:	746e5f04 	strbtvc	r5, [lr], #-3844	@ 0xfffff0fc
 801a69e:	 	subsvc	r0, pc, #112, 24	@ 0x7000

0801a69f <mdns::DOMAIN_RDMNET_LLRP>:
 801a69f:	64725f0c 	ldrbtvs	r5, [r2], #-3852	@ 0xfffff0f4
 801a6a3:	74656e6d 	strbtvc	r6, [r5], #-3693	@ 0xfffff193
 801a6a7:	726c6c2d 	rsbvc	r6, ip, #11520	@ 0x2d00
 801a6ab:	 	ldmdavs	pc, {r4, r5, r6, r8, sl}^	@ <UNPREDICTABLE>

0801a6ac <mdns::DOMAIN_HTTP>:
 801a6ac:	74685f05 	strbtvc	r5, [r8], #-3845	@ 0xfffff0fb
 801a6b0:	 	svcpl	0x00057074

0801a6b2 <mdns::DOMAIN_TFTP>:
 801a6b2:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
 801a6b6:	 	svcpl	0x00077074

0801a6b8 <mdns::DOMAIN_CONFIG>:
 801a6b8:	6f635f07 	svcvs	0x00635f07
 801a6bc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

0801a6c0 <mdns::DOMAIN_TCP>:
 801a6c0:	63745f04 	cmnvs	r4, #4, 30
 801a6c4:	 	ldrbvc	r0, [pc, #-1136]	@ 801a25c <RDMHandler::PID_DEFINITIONS+0x8>

0801a6c5 <mdns::DOMAIN_UDP>:
 801a6c5:	64755f04 	ldrbtvs	r5, [r5], #-3844	@ 0xfffff0fc
 801a6c9:	 	svcvs	0x006c0570

0801a6ca <mdns::DOMAIN_LOCAL>:
 801a6ca:	636f6c05 	cmnvs	pc, #1280	@ 0x500
 801a6ce:	 	cdpvs	12, 0, cr6, cr0, cr1, {3}

0801a6d1 <NetworkParamsConst::NTP_SERVER>:
 801a6d1:	5f70746e 	svcpl	0x0070746e
 801a6d5:	76726573 			@ <UNDEFINED> instruction: 0x76726573
 801a6d9:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

0801a6dc <NetworkParamsConst::HOSTNAME>:
 801a6dc:	74736f68 	ldrbtvc	r6, [r3], #-3944	@ 0xfffff098
 801a6e0:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801a6e5 <NetworkParamsConst::DEFAULT_GATEWAY>:
 801a6e5:	61666564 	cmnvs	r6, r4, ror #10
 801a6e9:	5f746c75 	svcpl	0x00746c75
 801a6ed:	65746167 	ldrbvs	r6, [r4, #-359]!	@ 0xfffffe99
 801a6f1:	00796177 	rsbseq	r6, r9, r7, ror r1

0801a6f5 <NetworkParamsConst::NET_MASK>:
 801a6f5:	5f74656e 	svcpl	0x0074656e
 801a6f9:	6b73616d 	blvs	9cf2cb5 <__init_array_end+0x1cd7f79>
	...

0801a6fe <NetworkParamsConst::IP_ADDRESS>:
 801a6fe:	615f7069 	cmpvs	pc, r9, rrx
 801a702:	65726464 	ldrbvs	r6, [r2, #-1124]!	@ 0xfffffb9c
 801a706:	 	strvs	r7, [r0], #-883	@ 0xfffffc8d

0801a709 <NetworkParamsConst::DHCP_RETRY_TIME>:
 801a709:	70636864 	rsbvc	r6, r3, r4, ror #16
 801a70d:	7465725f 	strbtvc	r7, [r5], #-607	@ 0xfffffda1
 801a711:	745f7972 	ldrbvc	r7, [pc], #-2418	@ 801a719 <NetworkParamsConst::USE_DHCP>
 801a715:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801a719 <NetworkParamsConst::USE_DHCP>:
 801a719:	5f657375 	svcpl	0x00657375
 801a71d:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801a722 <NetworkParamsConst::FILE_NAME>:
 801a722:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801a726:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801a72a:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801a730 <pArray>:
 801a730:	0801a7ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, sp, pc}
 801a734:	0801a7a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, sp, pc}
 801a738:	0801a6fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp, pc}
 801a73c:	0801a79b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, sp, pc}
 801a740:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a744:	0801a78e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, sp, pc}
 801a748:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a74c:	0801a6dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, sp, pc}
 801a750:	0801a9ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, fp, sp, pc}
 801a754:	0801a9ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, fp, sp, pc}
 801a758:	0801a9da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, fp, sp, pc}
 801a75c:	0801a9ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, fp, sp, pc}
 801a760:	0801a6f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, sp, pc}
 801a764:	0801a8a0 	stmdaeq	r1, {r5, r7, fp, sp, pc}
 801a768:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a76c:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a770:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a774:	08017361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, sp, lr}
 801a778:	0801a6e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, sp, pc}
 801a77c:	0801a780 	stmdaeq	r1, {r7, r8, r9, sl, sp, pc}

0801a780 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801a780:	5f786d64 	svcpl	0x00786d64
 801a784:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801a788:	6f697463 	svcvs	0x00697463
 801a78c:	 	cmnvs	r1, #110	@ 0x6e

0801a78e <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801a78e:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a792:	705f6576 	subsvc	r6, pc, r6, ror r5	@ <UNPREDICTABLE>
 801a796:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
	...

0801a79b <DisplayUdfParamsConst::VERSION>:
 801a79b:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801a79f:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801a7a3 <DisplayUdfParamsConst::BOARD_NAME>:
 801a7a3:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 801a7a7:	616e5f64 	cmnvs	lr, r4, ror #30
 801a7ab:	 	strvc	r6, [r0], #-1389	@ 0xfffffa93

0801a7ae <DisplayUdfParamsConst::TITLE>:
 801a7ae:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801a7b2:	 	stclvs	0, cr0, [r6], #-404	@ 0xfffffe6c

0801a7b4 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801a7b4:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801a7b8:	7265765f 	rsbvc	r7, r5, #99614720	@ 0x5f00000
 801a7bc:	61636974 	smcvs	13972	@ 0x3694
 801a7c0:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801a7c4 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801a7c4:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
 801a7c8:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a7cc:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 801a267 <RDMHandler::PID_DEFINITIONS+0x13>
 801a7d0:	 	mcrvs	0, 3, r0, cr9, cr4, {3}

0801a7d2 <DisplayUdfParamsConst::INTENSITY>:
 801a7d2:	65746e69 	ldrbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801a7d6:	7469736e 	strbtvc	r7, [r9], #-878	@ 0xfffffc92
 801a7da:	 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^

0801a7dc <DisplayUdfParamsConst::FILE_NAME>:
 801a7dc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a7e0:	2e79616c 	rpwcsez	f6, f1, #4.0
 801a7e4:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a7e8 <s_aStorSize>:
 801a7e8:	00000060 	andeq	r0, r0, r0, rrx
 801a7ec:	00000020 	andeq	r0, r0, r0, lsr #32
 801a7f0:	00000040 	andeq	r0, r0, r0, asr #32
 801a7f4:	00000040 	andeq	r0, r0, r0, asr #32
 801a7f8:	00000020 	andeq	r0, r0, r0, lsr #32
 801a7fc:	00000020 	andeq	r0, r0, r0, lsr #32
 801a800:	000001e0 	andeq	r0, r0, r0, ror #3
 801a804:	00000040 	andeq	r0, r0, r0, asr #32
 801a808:	00000020 	andeq	r0, r0, r0, lsr #32
 801a80c:	00000060 	andeq	r0, r0, r0, rrx
 801a810:	00000030 	andeq	r0, r0, r0, lsr r0
 801a814:	00000020 	andeq	r0, r0, r0, lsr #32
 801a818:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
 801a81c:	00000030 	andeq	r0, r0, r0, lsr r0
 801a820:	00000040 	andeq	r0, r0, r0, asr #32
 801a824:	00000020 	andeq	r0, r0, r0, lsr #32
 801a828:	00000060 	andeq	r0, r0, r0, rrx
 801a82c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a830:	00000400 	andeq	r0, r0, r0, lsl #8
 801a834:	00000020 	andeq	r0, r0, r0, lsr #32
 801a838:	00000020 	andeq	r0, r0, r0, lsr #32
 801a83c:	00000040 	andeq	r0, r0, r0, asr #32
 801a840:	00000060 	andeq	r0, r0, r0, rrx
 801a844:	00000020 	andeq	r0, r0, r0, lsr #32
 801a848:	00000020 	andeq	r0, r0, r0, lsr #32
 801a84c:	00000140 	andeq	r0, r0, r0, asr #2
 801a850:	00000020 	andeq	r0, r0, r0, lsr #32

0801a854 <s_aSignature>:
 801a854:	01567641 	cmpeq	r6, r1, asr #12

0801a858 <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
 801a858:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
 801a85c:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
 801a860:	2d051e05 	stccs	14, cr1, [r5, #-20]	@ 0xffffffec
 801a864:	2d081e06 	stccs	14, cr1, [r8, #-24]	@ 0xffffffe8
 801a868:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
 801a86c:	 	ldrbtvc	r2, [r5], #-3340	@ 0xfffff2f4

0801a86e <EnvParamsConst::UTC_OFFSET>:
 801a86e:	5f637475 	svcpl	0x00637475
 801a872:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801a876:	 	strvs	r7, [r0, #-1125]	@ 0xfffffb9b

0801a879 <EnvParamsConst::FILE_NAME>:
 801a879:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 801a87d:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a881 <LightSetParamsConst::FAILSAFE>:
 801a881:	6c696166 	stfvse	f6, [r9], #-408	@ 0xfffffe68
 801a885:	65666173 	strbvs	r6, [r6, #-371]!	@ 0xfffffe8d
	...

0801a88a <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 801a88a:	61736964 	cmnvs	r3, r4, ror #18
 801a88e:	5f656c62 	svcpl	0x00656c62
 801a892:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a896:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a89a:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 801a335 <RDMHandler::PID_DEFINITIONS+0xe1>
 801a89e:	 	stclvs	0, cr0, [r4, #-464]!	@ 0xfffffe30

0801a8a0 <LightSetParamsConst::DMX_START_ADDRESS>:
 801a8a0:	5f786d64 	svcpl	0x00786d64
 801a8a4:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a8a8:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 801a8ac:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 801a8b0:	 	smcvs	49155	@ 0xc003

0801a8b2 <LightSetParamsConst::NODE_LABEL>:
 801a8b2:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 801a8b6:	6f705f6c 	svcvs	0x00705f6c
 801a8ba:	615f7472 	cmpvs	pc, r2, ror r4	@ <UNPREDICTABLE>
 801a8be:	616c0000 	cmnvs	ip, r0
 801a8c2:	5f6c6562 	svcpl	0x006c6562
 801a8c6:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801a8ca:	0000625f 	andeq	r6, r0, pc, asr r2
 801a8ce:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 801a8d2:	6f705f6c 	svcvs	0x00705f6c
 801a8d6:	635f7472 	cmpvs	pc, #1912602624	@ 0x72000000
 801a8da:	616c0000 	cmnvs	ip, r0
 801a8de:	5f6c6562 	svcpl	0x006c6562
 801a8e2:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801a8e6:	0000645f 	andeq	r6, r0, pc, asr r4

0801a8ea <LightSetParamsConst::OUTPUT_STYLE>:
 801a8ea:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801a8ee:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801a8f2:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801a8f6:	0000615f 	andeq	r6, r0, pc, asr r1
 801a8fa:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801a8fe:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801a902:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801a906:	0000625f 	andeq	r6, r0, pc, asr r2
 801a90a:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801a90e:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801a912:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801a916:	0000635f 	andeq	r6, r0, pc, asr r3
 801a91a:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801a91e:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801a922:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801a926:	0000645f 	andeq	r6, r0, pc, asr r4

0801a92a <LightSetParamsConst::DIRECTION>:
 801a92a:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801a92e:	6f697463 	svcvs	0x00697463
 801a932:	6f705f6e 	svcvs	0x00705f6e
 801a936:	615f7472 	cmpvs	pc, r2, ror r4	@ <UNPREDICTABLE>
 801a93a:	69640000 	stmdbvs	r4!, {}^	@ <UNPREDICTABLE>
 801a93e:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801a942:	5f6e6f69 	svcpl	0x006e6f69
 801a946:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801a94a:	0000625f 	andeq	r6, r0, pc, asr r2
 801a94e:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801a952:	6f697463 	svcvs	0x00697463
 801a956:	6f705f6e 	svcvs	0x00705f6e
 801a95a:	635f7472 	cmpvs	pc, #1912602624	@ 0x72000000
 801a95e:	69640000 	stmdbvs	r4!, {}^	@ <UNPREDICTABLE>
 801a962:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801a966:	5f6e6f69 	svcpl	0x006e6f69
 801a96a:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801a96e:	0000645f 	andeq	r6, r0, pc, asr r4

0801a972 <LightSetParamsConst::MERGE_MODE_PORT>:
 801a972:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a976:	6f6d5f65 	svcvs	0x006d5f65
 801a97a:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a97e:	5f74726f 	svcpl	0x0074726f
 801a982:	656d0061 	strbvs	r0, [sp, #-97]!	@ 0xffffff9f
 801a986:	5f656772 	svcpl	0x00656772
 801a98a:	65646f6d 	strbvs	r6, [r4, #-3949]!	@ 0xfffff093
 801a98e:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a992:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a996:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a99a:	6f6d5f65 	svcvs	0x006d5f65
 801a99e:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a9a2:	5f74726f 	svcpl	0x0074726f
 801a9a6:	656d0063 	strbvs	r0, [sp, #-99]!	@ 0xffffff9d
 801a9aa:	5f656772 	svcpl	0x00656772
 801a9ae:	65646f6d 	strbvs	r6, [r4, #-3949]!	@ 0xfffff093
 801a9b2:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a9b6:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801a9ba <LightSetParamsConst::UNIVERSE_PORT>:
 801a9ba:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a9be:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a9c2:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a9c6:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801a9ca:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a9ce:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a9d2:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a9d6:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a9da:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a9de:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a9e2:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a9e6:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801a9ea:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a9ee:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a9f2:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a9f6:	00645f74 	rsbeq	r5, r4, r4, ror pc
	...

0801a9fc <vtable for Ssd1306>:
	...
 801aa04:	08013ac9 	stmdaeq	r1, {r0, r3, r6, r7, r9, fp, ip, sp}
 801aa08:	08013af5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, fp, ip, sp}
 801aa0c:	08013e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, sp}
 801aa10:	08013dc1 	stmdaeq	r1, {r0, r6, r7, r8, sl, fp, ip, sp}
 801aa14:	08013c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp}
 801aa18:	08013b19 	stmdaeq	r1, {r0, r3, r4, r8, r9, fp, ip, sp}
 801aa1c:	08013b45 	stmdaeq	r1, {r0, r2, r6, r8, r9, fp, ip, sp}
 801aa20:	08013c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, ip, sp}
 801aa24:	08013c25 	stmdaeq	r1, {r0, r2, r5, sl, fp, ip, sp}
 801aa28:	08013acb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, fp, ip, sp}
 801aa2c:	08013cd1 	stmdaeq	r1, {r0, r4, r6, r7, sl, fp, ip, sp}
 801aa30:	08013cdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, fp, ip, sp}
 801aa34:	08013cf5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, fp, ip, sp}
 801aa38:	08013acd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, fp, ip, sp}

0801aa3c <oled_128x32_init>:
 801aa3c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801aa40:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801aa44:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801aa48:	02dac8a1 	sbcseq	ip, sl, #10551296	@ 0xa10000
 801aa4c:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801aa50:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801aa54 <oled_128x64_init>:
 801aa54:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801aa58:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801aa5c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801aa60:	12dac8a1 	sbcsne	ip, sl, #10551296	@ 0xa10000
 801aa64:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801aa68:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801aa6c <_OledFont8x6>:
 801aa6c:	00000040 	andeq	r0, r0, r0, asr #32
 801aa70:	40000000 	andmi	r0, r0, r0
 801aa74:	005f0000 	subseq	r0, pc, r0
 801aa78:	00400000 	subeq	r0, r0, r0
 801aa7c:	00070007 	andeq	r0, r7, r7
 801aa80:	7f144000 	svcvc	0x00144000
 801aa84:	00147f14 	andseq	r7, r4, r4, lsl pc
 801aa88:	7f2a2440 	svcvc	0x002a2440
 801aa8c:	4000122a 	andmi	r1, r0, sl, lsr #4
 801aa90:	64081323 	strvs	r1, [r8], #-803	@ 0xfffffcdd
 801aa94:	36400062 	strbcc	r0, [r0], -r2, rrx
 801aa98:	50205649 	eorpl	r5, r0, r9, asr #12
 801aa9c:	08004000 	stmdaeq	r0, {lr}
 801aaa0:	00000307 	andeq	r0, r0, r7, lsl #6
 801aaa4:	221c0040 	andscs	r0, ip, #64	@ 0x40
 801aaa8:	40000041 	andmi	r0, r0, r1, asr #32
 801aaac:	1c224100 	stfnes	f4, [r2], #-0
 801aab0:	2a400000 	bcs	901aab8 <__init_array_end+0xfffd7c>
 801aab4:	2a1c7f1c 	bcs	873a72c <__init_array_end+0x71f9f0>
 801aab8:	08084000 	stmdaeq	r8, {lr}
 801aabc:	0008083e 	andeq	r0, r8, lr, lsr r8
 801aac0:	70800040 	addvc	r0, r0, r0, asr #32
 801aac4:	40000030 	andmi	r0, r0, r0, lsr r0
 801aac8:	08080808 	stmdaeq	r8, {r3, fp}
 801aacc:	00400008 	subeq	r0, r0, r8
 801aad0:	00606000 	rsbeq	r6, r0, r0
 801aad4:	10204000 	eorne	r4, r0, r0
 801aad8:	00020408 	andeq	r0, r2, r8, lsl #8
 801aadc:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801aae0:	40003e45 	andmi	r3, r0, r5, asr #28
 801aae4:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801aae8:	72400000 	subvc	r0, r0, #0
 801aaec:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801aaf0:	41214000 			@ <UNDEFINED> instruction: 0x41214000
 801aaf4:	00334d49 	eorseq	r4, r3, r9, asr #26
 801aaf8:	12141840 	andsne	r1, r4, #64, 16	@ 0x400000
 801aafc:	4000107f 	andmi	r1, r0, pc, ror r0
 801ab00:	45454527 	strbmi	r4, [r5, #-1319]	@ 0xfffffad9
 801ab04:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801ab08:	3149494a 	cmpcc	r9, sl, asr #18
 801ab0c:	21414000 	mrscs	r4, (UNDEF: 65)
 801ab10:	00070911 	andeq	r0, r7, r1, lsl r9
 801ab14:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801ab18:	40003649 	andmi	r3, r0, r9, asr #12
 801ab1c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801ab20:	0040001e 	subeq	r0, r0, lr, lsl r0
 801ab24:	00001400 	andeq	r1, r0, r0, lsl #8
 801ab28:	40004000 	andmi	r4, r0, r0
 801ab2c:	00000034 	andeq	r0, r0, r4, lsr r0
 801ab30:	14080040 	strne	r0, [r8], #-64	@ 0xffffffc0
 801ab34:	40004122 	andmi	r4, r0, r2, lsr #2
 801ab38:	14141414 	ldrne	r1, [r4], #-1044	@ 0xfffffbec
 801ab3c:	00400014 	subeq	r0, r0, r4, lsl r0
 801ab40:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801ab44:	01024000 	mrseq	r4, (UNDEF: 2)
 801ab48:	00060959 	andeq	r0, r6, r9, asr r9
 801ab4c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	@ 0xffffff00
 801ab50:	40004e59 	andmi	r4, r0, r9, asr lr
 801ab54:	1211127c 	andsne	r1, r1, #124, 4	@ 0xc0000007
 801ab58:	7f40007c 	svcvc	0x0040007c
 801ab5c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801ab60:	413e4000 	teqmi	lr, r0
 801ab64:	00224141 	eoreq	r4, r2, r1, asr #2
 801ab68:	41417f40 	cmpmi	r1, r0, asr #30
 801ab6c:	40003e41 	andmi	r3, r0, r1, asr #28
 801ab70:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801ab74:	7f400041 	svcvc	0x00400041
 801ab78:	01090909 	tsteq	r9, r9, lsl #18
 801ab7c:	413e4000 	teqmi	lr, r0
 801ab80:	00735141 	rsbseq	r5, r3, r1, asr #2
 801ab84:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801ab88:	40007f08 	andmi	r7, r0, r8, lsl #30
 801ab8c:	417f4100 	cmnmi	pc, r0, lsl #2
 801ab90:	20400000 	subcs	r0, r0, r0
 801ab94:	013f4140 	teqeq	pc, r0, asr #2
 801ab98:	087f4000 	ldmdaeq	pc!, {lr}^	@ <UNPREDICTABLE>
 801ab9c:	00412214 	subeq	r2, r1, r4, lsl r2
 801aba0:	40407f40 	submi	r7, r0, r0, asr #30
 801aba4:	40004040 	andmi	r4, r0, r0, asr #32
 801aba8:	021c027f 	andseq	r0, ip, #-268435449	@ 0xf0000007
 801abac:	7f40007f 	svcvc	0x0040007f
 801abb0:	7f100804 	svcvc	0x00100804
 801abb4:	413e4000 	teqmi	lr, r0
 801abb8:	003e4141 	eorseq	r4, lr, r1, asr #2
 801abbc:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801abc0:	40000609 	andmi	r0, r0, r9, lsl #12
 801abc4:	2151413e 	cmpcs	r1, lr, lsr r1
 801abc8:	7f40005e 	svcvc	0x0040005e
 801abcc:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801abd0:	49264000 	stmdbmi	r6!, {lr}
 801abd4:	00324949 	eorseq	r4, r2, r9, asr #18
 801abd8:	7f010340 	svcvc	0x00010340
 801abdc:	40000301 	andmi	r0, r0, r1, lsl #6
 801abe0:	4040403f 	submi	r4, r0, pc, lsr r0
 801abe4:	1f40003f 	svcne	0x0040003f
 801abe8:	1f204020 	svcne	0x00204020
 801abec:	403f4000 	eorsmi	r4, pc, r0
 801abf0:	003f4038 	eorseq	r4, pc, r8, lsr r0	@ <UNPREDICTABLE>
 801abf4:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801abf8:	40006314 	andmi	r6, r0, r4, lsl r3
 801abfc:	04780403 	ldrbteq	r0, [r8], #-1027	@ 0xfffffbfd
 801ac00:	61400003 	cmpvs	r0, r3
 801ac04:	434d4959 	movtmi	r4, #55641	@ 0xd959
 801ac08:	7f004000 	svcvc	0x00004000
 801ac0c:	00414141 	subeq	r4, r1, r1, asr #2
 801ac10:	08040240 	stmdaeq	r4, {r6, r9}
 801ac14:	40002010 	andmi	r2, r0, r0, lsl r0
 801ac18:	41414100 	mrsmi	r4, (UNDEF: 81)
 801ac1c:	0440007f 	strbeq	r0, [r0], #-127	@ 0xffffff81
 801ac20:	04020102 	streq	r0, [r2], #-258	@ 0xfffffefe
 801ac24:	40404000 	submi	r4, r0, r0
 801ac28:	00404040 	subeq	r4, r0, r0, asr #32
 801ac2c:	07030040 	streq	r0, [r3, -r0, asr #32]
 801ac30:	40000008 	andmi	r0, r0, r8
 801ac34:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801ac38:	7f400040 	svcvc	0x00400040
 801ac3c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801ac40:	44384000 	ldrtmi	r4, [r8], #-0
 801ac44:	00284444 	eoreq	r4, r8, r4, asr #8
 801ac48:	44443840 	strbmi	r3, [r4], #-2112	@ 0xfffff7c0
 801ac4c:	40007f28 	andmi	r7, r0, r8, lsr #30
 801ac50:	54545438 	ldrbpl	r5, [r4], #-1080	@ 0xfffffbc8
 801ac54:	00400018 	subeq	r0, r0, r8, lsl r0
 801ac58:	02097e08 	andeq	r7, r9, #8, 28	@ 0x80
 801ac5c:	a4184000 	ldrge	r4, [r8], #-0
 801ac60:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801ac64:	04087f40 	streq	r7, [r8], #-3904	@ 0xfffff0c0
 801ac68:	40007804 	andmi	r7, r0, r4, lsl #16
 801ac6c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801ac70:	20400000 	subcs	r0, r0, r0
 801ac74:	003d4040 	eorseq	r4, sp, r0, asr #32
 801ac78:	107f4000 	rsbsne	r4, pc, r0
 801ac7c:	00004428 	andeq	r4, r0, r8, lsr #8
 801ac80:	7f410040 	svcvc	0x00410040
 801ac84:	40000040 	andmi	r0, r0, r0, asr #32
 801ac88:	0478047c 	ldrbteq	r0, [r8], #-1148	@ 0xfffffb84
 801ac8c:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801ac90:	78040408 	stmdavc	r4, {r3, sl}
 801ac94:	44384000 	ldrtmi	r4, [r8], #-0
 801ac98:	00384444 	eorseq	r4, r8, r4, asr #8
 801ac9c:	2418fc40 	ldrcs	pc, [r8], #-3136	@ 0xfffff3c0
 801aca0:	40001824 	andmi	r1, r0, r4, lsr #16
 801aca4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801aca8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801acac:	08040408 	stmdaeq	r4, {r3, sl}
 801acb0:	54484000 	strbpl	r4, [r8], #-0
 801acb4:	00245454 	eoreq	r5, r4, r4, asr r4
 801acb8:	3f040440 	svccc	0x00040440
 801acbc:	40002444 	andmi	r2, r0, r4, asr #8
 801acc0:	2040403c 	subcs	r4, r0, ip, lsr r0
 801acc4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801acc8:	1c204020 	stcne	0, cr4, [r0], #-128	@ 0xffffff80
 801accc:	403c4000 	eorsmi	r4, ip, r0
 801acd0:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801acd4:	10284440 	eorne	r4, r8, r0, asr #8
 801acd8:	40004428 	andmi	r4, r0, r8, lsr #8
 801acdc:	9090904c 	addsls	r9, r0, ip, asr #32
 801ace0:	4440007c 	strbmi	r0, [r0], #-124	@ 0xffffff84
 801ace4:	444c5464 	strbmi	r5, [ip], #-1124	@ 0xfffffb9c
 801ace8:	08004000 	stmdaeq	r0, {lr}
 801acec:	00004136 	andeq	r4, r0, r6, lsr r1
 801acf0:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801acf4:	40000000 	andmi	r0, r0, r0
 801acf8:	08364100 	ldmdaeq	r6!, {r8, lr}
 801acfc:	02400000 	subeq	r0, r0, #0
 801ad00:	02040201 	andeq	r0, r4, #268435456	@ 0x10000000
 801ad04:	263c4000 	ldrtcs	r4, [ip], -r0
 801ad08:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801ad0c <days_of_month>:
 801ad0c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad10:	0000001c 	andeq	r0, r0, ip, lsl r0
 801ad14:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad18:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ad1c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad20:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ad24:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad28:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad2c:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ad30:	0000001f 	andeq	r0, r0, pc, lsl r0
 801ad34:	0000001e 	andeq	r0, r0, lr, lsl r0
 801ad38:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .tcmsram:

10008000 <net::s_dhcp_message>:
	...

10008224 <net::s_id>:
10008224:	00000000 	andeq	r0, r0, r0

10008228 <net::s_groups>:
	...

10008348 <net::s_multicast_mac>:
	...

10008350 <net::s_leave>:
	...

10008380 <net::s_report>:
	...

100083b0 <net::s_tcp>:
	...

1000899c <net::s_id>:
1000899c:	00000000 	andeq	r0, r0, r0

100089a0 <net::s_Port>:
	...

100096a8 <net::s_multicast_mac>:
	...

100096b0 <net::s_id>:
100096b0:	00000000 	andeq	r0, r0, r0

100096b4 <net::s_send_packet>:
	...

10009ca0 <net::s_data>:
	...

1000cb00 <net::s_Port>:
	...

1000cb10 <net::s_ArpRecords>:
	...

Disassembly of section .data:

20000000 <SystemCoreClock>:
20000000:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}

20000004 <lfsr>:
20000004:	0000ace1 	andeq	sl, r0, r1, ror #25

20000008 <s_block_bucket>:
20000008:	00000010 	andeq	r0, r0, r0, lsl r0
2000000c:	00000000 	andeq	r0, r0, r0
20000010:	00000020 	andeq	r0, r0, r0, lsr #32
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000040 	andeq	r0, r0, r0, asr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000060 	andeq	r0, r0, r0, rrx
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000080 	andeq	r0, r0, r0, lsl #1
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000100 	andeq	r0, r0, r0, lsl #2
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000140 	andeq	r0, r0, r0, asr #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000180 	andeq	r0, r0, r0, lsl #3
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000200 	andeq	r0, r0, r0, lsl #4
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000300 	andeq	r0, r0, r0, lsl #6
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000400 	andeq	r0, r0, r0, lsl #8
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000070 <next_block>:
20000070:	1000cc90 	mulne	r0, r0, ip

Disassembly of section .sram1:

2001c000 <s_TxBuffer>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
