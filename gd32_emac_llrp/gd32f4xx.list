
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10008000 	andne	r8, r0, r0
 8008004:	08009015 	stmdaeq	r0, {r0, r2, r4, ip, pc}
 8008008:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800800c:	0800906b 	stmdaeq	r0, {r0, r1, r3, r5, r6, ip, pc}
 8008010:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008014:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008018:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
	...
 800802c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008030:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800803c:	0801257d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, sp}
 8008040:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008044:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008048:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800804c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008050:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008054:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008058:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800805c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008060:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008064:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008068:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800806c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008070:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008074:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008078:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800807c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008080:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008084:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008088:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800808c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008090:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008094:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008098:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800809c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ac:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080bc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080cc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080dc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ec:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080fc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008100:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008104:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008108:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800810c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008110:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008114:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008118:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800811c:	08012451 	stmdaeq	r1, {r0, r4, r6, sl, sp}
 8008120:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008124:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008128:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800812c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008130:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008134:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008138:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800813c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008140:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008144:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008148:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800814c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008150:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008154:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008158:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800815c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008160:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008164:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008168:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800816c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008170:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008174:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008178:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008184:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008188:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800818c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008190:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008194:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008198:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}

Disassembly of section .text:

080081ac <net::igmp_init()>:
 80081ac:	b538      	push	{r3, r4, r5, lr}
 80081ae:	f005 fa93 	bl	800d6d8 <net::igmp_set_ip()>
 80081b2:	492c      	ldr	r1, [pc, #176]	@ (8008264 <net::igmp_init()+0xb8>)
 80081b4:	4b2c      	ldr	r3, [pc, #176]	@ (8008268 <net::igmp_init()+0xbc>)
 80081b6:	4a2d      	ldr	r2, [pc, #180]	@ (800826c <net::igmp_init()+0xc0>)
 80081b8:	2401      	movs	r4, #1
 80081ba:	205e      	movs	r0, #94	@ 0x5e
 80081bc:	800c      	strh	r4, [r1, #0]
 80081be:	7088      	strb	r0, [r1, #2]
 80081c0:	2106      	movs	r1, #6
 80081c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80081c6:	f803 0b01 	strb.w	r0, [r3], #1
 80081ca:	3901      	subs	r1, #1
 80081cc:	d1f9      	bne.n	80081c2 <net::igmp_init()+0x16>
 80081ce:	4a28      	ldr	r2, [pc, #160]	@ (8008270 <net::igmp_init()+0xc4>)
 80081d0:	4828      	ldr	r0, [pc, #160]	@ (8008274 <net::igmp_init()+0xc8>)
 80081d2:	60d0      	str	r0, [r2, #12]
 80081d4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80081d8:	4b27      	ldr	r3, [pc, #156]	@ (8008278 <net::igmp_init()+0xcc>)
 80081da:	8210      	strh	r0, [r2, #16]
 80081dc:	f240 4094 	movw	r0, #1172	@ 0x494
 80081e0:	8450      	strh	r0, [r2, #34]	@ 0x22
 80081e2:	4c26      	ldr	r4, [pc, #152]	@ (800827c <net::igmp_init()+0xd0>)
 80081e4:	4826      	ldr	r0, [pc, #152]	@ (8008280 <net::igmp_init()+0xd4>)
 80081e6:	8491      	strh	r1, [r2, #36]	@ 0x24
 80081e8:	2516      	movs	r5, #22
 80081ea:	6154      	str	r4, [r2, #20]
 80081ec:	84d5      	strh	r5, [r2, #38]	@ 0x26
 80081ee:	6018      	str	r0, [r3, #0]
 80081f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80081f4:	2006      	movs	r0, #6
 80081f6:	491d      	ldr	r1, [pc, #116]	@ (800826c <net::igmp_init()+0xc0>)
 80081f8:	809a      	strh	r2, [r3, #4]
 80081fa:	181a      	adds	r2, r3, r0
 80081fc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008200:	f802 5b01 	strb.w	r5, [r2], #1
 8008204:	3801      	subs	r0, #1
 8008206:	d1f9      	bne.n	80081fc <net::igmp_init()+0x50>
 8008208:	4a1e      	ldr	r2, [pc, #120]	@ (8008284 <net::igmp_init()+0xd8>)
 800820a:	615c      	str	r4, [r3, #20]
 800820c:	6811      	ldr	r1, [r2, #0]
 800820e:	4c1e      	ldr	r4, [pc, #120]	@ (8008288 <net::igmp_init()+0xdc>)
 8008210:	f8d1 20b0 	ldr.w	r2, [r1, #176]	@ 0xb0
 8008214:	8498      	strh	r0, [r3, #36]	@ 0x24
 8008216:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800821a:	4d16      	ldr	r5, [pc, #88]	@ (8008274 <net::igmp_init()+0xc8>)
 800821c:	f8c3 401e 	str.w	r4, [r3, #30]
 8008220:	8218      	strh	r0, [r3, #16]
 8008222:	2417      	movs	r4, #23
 8008224:	f240 4094 	movw	r0, #1172	@ 0x494
 8008228:	2a07      	cmp	r2, #7
 800822a:	84dc      	strh	r4, [r3, #38]	@ 0x26
 800822c:	60dd      	str	r5, [r3, #12]
 800822e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8008230:	d904      	bls.n	800823c <net::igmp_init()+0x90>
 8008232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008236:	4815      	ldr	r0, [pc, #84]	@ (800828c <net::igmp_init()+0xe0>)
 8008238:	f008 be44 	b.w	8010ec4 <console_error>
 800823c:	4b14      	ldr	r3, [pc, #80]	@ (8008290 <net::igmp_init()+0xe4>)
 800823e:	f8d1 40b4 	ldr.w	r4, [r1, #180]	@ 0xb4
 8008242:	6818      	ldr	r0, [r3, #0]
 8008244:	1c55      	adds	r5, r2, #1
 8008246:	1c63      	adds	r3, r4, #1
 8008248:	f8c1 30b4 	str.w	r3, [r1, #180]	@ 0xb4
 800824c:	f8c1 50b0 	str.w	r5, [r1, #176]	@ 0xb0
 8008250:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8008254:	3064      	adds	r0, #100	@ 0x64
 8008256:	2164      	movs	r1, #100	@ 0x64
 8008258:	e9c3 010c 	strd	r0, r1, [r3, #48]	@ 0x30
 800825c:	4a0d      	ldr	r2, [pc, #52]	@ (8008294 <net::igmp_init()+0xe8>)
 800825e:	e9c3 420e 	strd	r4, r2, [r3, #56]	@ 0x38
 8008262:	bd38      	pop	{r3, r4, r5, pc}
 8008264:	10008348 	andne	r8, r0, r8, asr #6
 8008268:	10008386 	andne	r8, r0, r6, lsl #7
 800826c:	200009e0 	andcs	r0, r0, r0, ror #19
 8008270:	10008380 	andne	r8, r0, r0, lsl #7
 8008274:	00460008 	subeq	r0, r6, r8
 8008278:	10008350 	andne	r8, r0, r0, asr r3
 800827c:	02010040 	andeq	r0, r1, #64	@ 0x40
 8008280:	005e0001 	subseq	r0, lr, r1
 8008284:	20000b7c 	andcs	r0, r0, ip, ror fp
 8008288:	020000e0 	andeq	r0, r0, #224	@ 0xe0
 800828c:	08014ea8 	stmdaeq	r1, {r3, r5, r7, r9, sl, fp, lr}
 8008290:	20004830 	andcs	r4, r0, r0, lsr r8
 8008294:	0800d685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip, lr, pc}

08008298 <net::igmp_shutdown()>:
 8008298:	b538      	push	{r3, r4, r5, lr}
 800829a:	4d05      	ldr	r5, [pc, #20]	@ (80082b0 <net::igmp_shutdown()+0x18>)
 800829c:	2400      	movs	r4, #0
 800829e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 80082a2:	b108      	cbz	r0, 80082a8 <net::igmp_shutdown()+0x10>
 80082a4:	f005 fa46 	bl	800d734 <net::igmp_leave(unsigned long)>
 80082a8:	3401      	adds	r4, #1
 80082aa:	2c24      	cmp	r4, #36	@ 0x24
 80082ac:	d1f7      	bne.n	800829e <net::igmp_shutdown()+0x6>
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	10008228 	andne	r8, r0, r8, lsr #4

080082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
 80082b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b8:	4d19      	ldr	r5, [pc, #100]	@ (8008320 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x6c>)
 80082ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082be:	7e2c      	ldrb	r4, [r5, #24]
 80082c0:	461f      	mov	r7, r3
 80082c2:	7deb      	ldrb	r3, [r5, #23]
 80082c4:	0424      	lsls	r4, r4, #16
 80082c6:	eb04 2403 	add.w	r4, r4, r3, lsl #8
 80082ca:	7e6b      	ldrb	r3, [r5, #25]
 80082cc:	3402      	adds	r4, #2
 80082ce:	eb04 6403 	add.w	r4, r4, r3, lsl #24
 80082d2:	4682      	mov	sl, r0
 80082d4:	460e      	mov	r6, r1
 80082d6:	4690      	mov	r8, r2
 80082d8:	612c      	str	r4, [r5, #16]
 80082da:	f000 f8b5 	bl	8008448 <net::arp_init()>
 80082de:	f000 f951 	bl	8008584 <net::ip_init()>
 80082e2:	f1ba 0f01 	cmp.w	sl, #1
 80082e6:	7eab      	ldrb	r3, [r5, #26]
 80082e8:	d115      	bne.n	8008316 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x62>
 80082ea:	f043 0301 	orr.w	r3, r3, #1
 80082ee:	76ab      	strb	r3, [r5, #26]
 80082f0:	f899 3000 	ldrb.w	r3, [r9]
 80082f4:	b11b      	cbz	r3, 80082fe <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x4a>
 80082f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082fa:	f004 bfdf 	b.w	800d2bc <net::dhcp_start()>
 80082fe:	b12e      	cbz	r6, 800830c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x58>
 8008300:	4640      	mov	r0, r8
 8008302:	f005 fb51 	bl	800d9a8 <net::netif_set_netmask(net::ip_addr)>
 8008306:	4638      	mov	r0, r7
 8008308:	f005 fb62 	bl	800d9d0 <net::netif_set_gw(net::ip_addr)>
 800830c:	4630      	mov	r0, r6
 800830e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008312:	f005 ba8f 	b.w	800d834 <net::net_set_primary_ip(net::ip_addr)>
 8008316:	f023 0301 	bic.w	r3, r3, #1
 800831a:	76ab      	strb	r3, [r5, #26]
 800831c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008320:	200009cc 	andcs	r0, r0, ip, asr #19

08008324 <net::tcp_init()>:
 8008324:	4a07      	ldr	r2, [pc, #28]	@ (8008344 <net::tcp_init()+0x20>)
 8008326:	4908      	ldr	r1, [pc, #32]	@ (8008348 <net::tcp_init()+0x24>)
 8008328:	2306      	movs	r3, #6
 800832a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800832e:	f802 0b01 	strb.w	r0, [r2], #1
 8008332:	3b01      	subs	r3, #1
 8008334:	d1f9      	bne.n	800832a <net::tcp_init()+0x6>
 8008336:	4b05      	ldr	r3, [pc, #20]	@ (800834c <net::tcp_init()+0x28>)
 8008338:	4905      	ldr	r1, [pc, #20]	@ (8008350 <net::tcp_init()+0x2c>)
 800833a:	4a06      	ldr	r2, [pc, #24]	@ (8008354 <net::tcp_init()+0x30>)
 800833c:	60d9      	str	r1, [r3, #12]
 800833e:	615a      	str	r2, [r3, #20]
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	100083b6 			@ <UNDEFINED> instruction: 0x100083b6
 8008348:	200009e0 	andcs	r0, r0, r0, ror #19
 800834c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8008350:	00450008 	subeq	r0, r5, r8
 8008354:	06400040 	strbeq	r0, [r0], -r0, asr #32

08008358 <net::udp_init()>:
 8008358:	490b      	ldr	r1, [pc, #44]	@ (8008388 <net::udp_init()+0x30>)
 800835a:	4b0c      	ldr	r3, [pc, #48]	@ (800838c <net::udp_init()+0x34>)
 800835c:	4a0c      	ldr	r2, [pc, #48]	@ (8008390 <net::udp_init()+0x38>)
 800835e:	b510      	push	{r4, lr}
 8008360:	205e      	movs	r0, #94	@ 0x5e
 8008362:	2401      	movs	r4, #1
 8008364:	800c      	strh	r4, [r1, #0]
 8008366:	7088      	strb	r0, [r1, #2]
 8008368:	2106      	movs	r1, #6
 800836a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800836e:	f803 0b01 	strb.w	r0, [r3], #1
 8008372:	3901      	subs	r1, #1
 8008374:	d1f9      	bne.n	800836a <net::udp_init()+0x12>
 8008376:	4807      	ldr	r0, [pc, #28]	@ (8008394 <net::udp_init()+0x3c>)
 8008378:	4a07      	ldr	r2, [pc, #28]	@ (8008398 <net::udp_init()+0x40>)
 800837a:	4b08      	ldr	r3, [pc, #32]	@ (800839c <net::udp_init()+0x44>)
 800837c:	60c2      	str	r2, [r0, #12]
 800837e:	6143      	str	r3, [r0, #20]
 8008380:	f005 fdea 	bl	800df58 <net::udp_set_ip()>
 8008384:	8501      	strh	r1, [r0, #40]	@ 0x28
 8008386:	bd10      	pop	{r4, pc}
 8008388:	100096a8 	andne	r9, r0, r8, lsr #13
 800838c:	100096ba 			@ <UNDEFINED> instruction: 0x100096ba
 8008390:	200009e0 	andcs	r0, r0, r0, ror #19
 8008394:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8008398:	00450008 	subeq	r0, r5, r8
 800839c:	11400040 	cmpne	r0, r0, asr #32

080083a0 <emac_config()>:
 80083a0:	b508      	push	{r3, lr}
 80083a2:	480f      	ldr	r0, [pc, #60]	@ (80083e0 <emac_config()+0x40>)
 80083a4:	f00b fab9 	bl	801391a <puts>
 80083a8:	f006 fa84 	bl	800e8b4 <enet_gpio_config()>
 80083ac:	f640 4019 	movw	r0, #3097	@ 0xc19
 80083b0:	f009 fc52 	bl	8011c58 <rcu_periph_clock_enable>
 80083b4:	f640 401a 	movw	r0, #3098	@ 0xc1a
 80083b8:	f009 fc4e 	bl	8011c58 <rcu_periph_clock_enable>
 80083bc:	f640 401b 	movw	r0, #3099	@ 0xc1b
 80083c0:	f009 fc4a 	bl	8011c58 <rcu_periph_clock_enable>
 80083c4:	f009 fb7e 	bl	8011ac4 <enet_deinit>
 80083c8:	f009 f91c 	bl	8011604 <enet_software_reset>
 80083cc:	2001      	movs	r0, #1
 80083ce:	f006 fa07 	bl	800e7e0 <net::phy_config(unsigned long)>
 80083d2:	b920      	cbnz	r0, 80083de <emac_config()+0x3e>
 80083d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083d8:	4802      	ldr	r0, [pc, #8]	@ (80083e4 <emac_config()+0x44>)
 80083da:	f008 bd73 	b.w	8010ec4 <console_error>
 80083de:	bd08      	pop	{r3, pc}
 80083e0:	08014544 	stmdaeq	r1, {r2, r6, r8, sl, lr}
 80083e4:	0801454c 	stmdaeq	r1, {r2, r3, r6, r8, sl, lr}

080083e8 <emac_start(unsigned char*, net::Link&)>:
 80083e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80083ea:	466c      	mov	r4, sp
 80083ec:	4605      	mov	r5, r0
 80083ee:	460e      	mov	r6, r1
 80083f0:	2001      	movs	r0, #1
 80083f2:	4621      	mov	r1, r4
 80083f4:	f005 fee2 	bl	800e1bc <net::phy_start(unsigned long, net::PhyStatus&)>
 80083f8:	9b00      	ldr	r3, [sp, #0]
 80083fa:	6033      	str	r3, [r6, #0]
 80083fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8008400:	f006 f99a 	bl	800e738 <emac_adjust_link(net::PhyStatus)>
 8008404:	4628      	mov	r0, r5
 8008406:	f00a f811 	bl	801242c <mac_address_get(unsigned char*)>
 800840a:	4629      	mov	r1, r5
 800840c:	2000      	movs	r0, #0
 800840e:	f009 f957 	bl	80116c0 <enet_mac_address_set>
 8008412:	f44f 00e0 	mov.w	r0, #7340032	@ 0x700000
 8008416:	f009 f909 	bl	801162c <enet_descriptors_chain_init>
 800841a:	f44f 2060 	mov.w	r0, #917504	@ 0xe0000
 800841e:	f009 f905 	bl	801162c <enet_descriptors_chain_init>
 8008422:	4d08      	ldr	r5, [pc, #32]	@ (8008444 <emac_start(unsigned char*, net::Link&)+0x5c>)
 8008424:	2400      	movs	r4, #0
 8008426:	4628      	mov	r0, r5
 8008428:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 800842c:	3401      	adds	r4, #1
 800842e:	f009 f941 	bl	80116b4 <enet_transmit_checksum_config>
 8008432:	2c05      	cmp	r4, #5
 8008434:	f105 0510 	add.w	r5, r5, #16
 8008438:	d1f5      	bne.n	8008426 <emac_start(unsigned char*, net::Link&)+0x3e>
 800843a:	f009 fafd 	bl	8011a38 <enet_enable>
 800843e:	b004      	add	sp, #16
 8008440:	bd70      	pop	{r4, r5, r6, pc}
 8008442:	bf00      	nop
 8008444:	20004788 	andcs	r4, r0, r8, lsl #15

08008448 <net::arp_init()>:
 8008448:	b410      	push	{r4}
 800844a:	4b3e      	ldr	r3, [pc, #248]	@ (8008544 <net::arp_init()+0xfc>)
 800844c:	b083      	sub	sp, #12
 800844e:	2210      	movs	r2, #16
 8008450:	2000      	movs	r0, #0
 8008452:	f103 0118 	add.w	r1, r3, #24
 8008456:	f803 0b01 	strb.w	r0, [r3], #1
 800845a:	428b      	cmp	r3, r1
 800845c:	d1fb      	bne.n	8008456 <net::arp_init()+0xe>
 800845e:	3a01      	subs	r2, #1
 8008460:	d1f7      	bne.n	8008452 <net::arp_init()+0xa>
 8008462:	4a39      	ldr	r2, [pc, #228]	@ (8008548 <net::arp_init()+0x100>)
 8008464:	4939      	ldr	r1, [pc, #228]	@ (800854c <net::arp_init()+0x104>)
 8008466:	2306      	movs	r3, #6
 8008468:	f811 0b01 	ldrb.w	r0, [r1], #1
 800846c:	f802 0b01 	strb.w	r0, [r2], #1
 8008470:	3b01      	subs	r3, #1
 8008472:	d1f9      	bne.n	8008468 <net::arp_init()+0x20>
 8008474:	4936      	ldr	r1, [pc, #216]	@ (8008550 <net::arp_init()+0x108>)
 8008476:	2206      	movs	r2, #6
 8008478:	460b      	mov	r3, r1
 800847a:	20ff      	movs	r0, #255	@ 0xff
 800847c:	3a01      	subs	r2, #1
 800847e:	f801 0b01 	strb.w	r0, [r1], #1
 8008482:	d1fb      	bne.n	800847c <net::arp_init()+0x34>
 8008484:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8008488:	4c32      	ldr	r4, [pc, #200]	@ (8008554 <net::arp_init()+0x10c>)
 800848a:	4933      	ldr	r1, [pc, #204]	@ (8008558 <net::arp_init()+0x110>)
 800848c:	8298      	strh	r0, [r3, #20]
 800848e:	4a33      	ldr	r2, [pc, #204]	@ (800855c <net::arp_init()+0x114>)
 8008490:	482e      	ldr	r0, [pc, #184]	@ (800854c <net::arp_init()+0x104>)
 8008492:	e9c3 4103 	strd	r4, r1, [r3, #12]
 8008496:	2306      	movs	r3, #6
 8008498:	f810 4b01 	ldrb.w	r4, [r0], #1
 800849c:	f802 4b01 	strb.w	r4, [r2], #1
 80084a0:	3b01      	subs	r3, #1
 80084a2:	d1f9      	bne.n	8008498 <net::arp_init()+0x50>
 80084a4:	4b2e      	ldr	r3, [pc, #184]	@ (8008560 <net::arp_init()+0x118>)
 80084a6:	4a2f      	ldr	r2, [pc, #188]	@ (8008564 <net::arp_init()+0x11c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	9301      	str	r3, [sp, #4]
 80084ac:	a801      	add	r0, sp, #4
 80084ae:	2304      	movs	r3, #4
 80084b0:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084b4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80084b8:	3b01      	subs	r3, #1
 80084ba:	d1f9      	bne.n	80084b0 <net::arp_init()+0x68>
 80084bc:	482a      	ldr	r0, [pc, #168]	@ (8008568 <net::arp_init()+0x120>)
 80084be:	2206      	movs	r2, #6
 80084c0:	3a01      	subs	r2, #1
 80084c2:	f800 3b01 	strb.w	r3, [r0], #1
 80084c6:	d1fb      	bne.n	80084c0 <net::arp_init()+0x78>
 80084c8:	4a28      	ldr	r2, [pc, #160]	@ (800856c <net::arp_init()+0x124>)
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <net::arp_init()+0x104>)
 80084cc:	2306      	movs	r3, #6
 80084ce:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084d2:	f802 4b01 	strb.w	r4, [r2], #1
 80084d6:	3b01      	subs	r3, #1
 80084d8:	d1f9      	bne.n	80084ce <net::arp_init()+0x86>
 80084da:	4b25      	ldr	r3, [pc, #148]	@ (8008570 <net::arp_init()+0x128>)
 80084dc:	481d      	ldr	r0, [pc, #116]	@ (8008554 <net::arp_init()+0x10c>)
 80084de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80084e2:	e9c3 0103 	strd	r0, r1, [r3, #12]
 80084e6:	4919      	ldr	r1, [pc, #100]	@ (800854c <net::arp_init()+0x104>)
 80084e8:	829a      	strh	r2, [r3, #20]
 80084ea:	2206      	movs	r2, #6
 80084ec:	3316      	adds	r3, #22
 80084ee:	f811 0b01 	ldrb.w	r0, [r1], #1
 80084f2:	f803 0b01 	strb.w	r0, [r3], #1
 80084f6:	3a01      	subs	r2, #1
 80084f8:	d1f9      	bne.n	80084ee <net::arp_init()+0xa6>
 80084fa:	4b1e      	ldr	r3, [pc, #120]	@ (8008574 <net::arp_init()+0x12c>)
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	f8d2 30b0 	ldr.w	r3, [r2, #176]	@ 0xb0
 8008502:	2b07      	cmp	r3, #7
 8008504:	d905      	bls.n	8008512 <net::arp_init()+0xca>
 8008506:	481c      	ldr	r0, [pc, #112]	@ (8008578 <net::arp_init()+0x130>)
 8008508:	b003      	add	sp, #12
 800850a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800850e:	f008 bcd9 	b.w	8010ec4 <console_error>
 8008512:	f8d2 00b4 	ldr.w	r0, [r2, #180]	@ 0xb4
 8008516:	4919      	ldr	r1, [pc, #100]	@ (800857c <net::arp_init()+0x134>)
 8008518:	1c44      	adds	r4, r0, #1
 800851a:	f8c2 40b4 	str.w	r4, [r2, #180]	@ 0xb4
 800851e:	6809      	ldr	r1, [r1, #0]
 8008520:	1c5c      	adds	r4, r3, #1
 8008522:	f8c2 40b0 	str.w	r4, [r2, #176]	@ 0xb0
 8008526:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800852a:	4a15      	ldr	r2, [pc, #84]	@ (8008580 <net::arp_init()+0x138>)
 800852c:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8008530:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
 8008534:	e9c3 140c 	strd	r1, r4, [r3, #48]	@ 0x30
 8008538:	e9c3 020e 	strd	r0, r2, [r3, #56]	@ 0x38
 800853c:	b003      	add	sp, #12
 800853e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	1000cb10 	andne	ip, r0, r0, lsl fp
 8008548:	20000a3e 	andcs	r0, r0, lr, lsr sl
 800854c:	200009e0 	andcs	r0, r0, r0, ror #19
 8008550:	20000a38 	andcs	r0, r0, r8, lsr sl
 8008554:	01000608 	tsteq	r0, r8, lsl #12
 8008558:	04060008 	streq	r0, [r6], #-8
 800855c:	20000a4e 	andcs	r0, r0, lr, asr #20
 8008560:	200009cc 	andcs	r0, r0, ip, asr #19
 8008564:	20000a53 	andcs	r0, r0, r3, asr sl
 8008568:	20000a58 	andcs	r0, r0, r8, asr sl
 800856c:	20000a02 	andcs	r0, r0, r2, lsl #20
 8008570:	200009fc 	strdcs	r0, [r0], -ip
 8008574:	20000b7c 	andcs	r0, r0, ip, ror fp
 8008578:	08014ea8 	stmdaeq	r1, {r3, r5, r7, r9, sl, fp, lr}
 800857c:	20004830 	andcs	r4, r0, r0, lsr r8
 8008580:	0800ee89 	stmdaeq	r0, {r0, r3, r7, r9, sl, fp, sp, lr, pc}

08008584 <net::ip_init()>:
 8008584:	b508      	push	{r3, lr}
 8008586:	f7ff fee7 	bl	8008358 <net::udp_init()>
 800858a:	f7ff fe0f 	bl	80081ac <net::igmp_init()>
 800858e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008592:	f7ff bec7 	b.w	8008324 <net::tcp_init()>
	...

08008598 <console_init()>:
 8008598:	b508      	push	{r3, lr}
 800859a:	f00a f9bd 	bl	8012918 <uart0_init>
 800859e:	4804      	ldr	r0, [pc, #16]	@ (80085b0 <console_init()+0x18>)
 80085a0:	f00a f9e4 	bl	801296c <uart0_puts>
 80085a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085a8:	4802      	ldr	r0, [pc, #8]	@ (80085b4 <console_init()+0x1c>)
 80085aa:	f00a b9df 	b.w	801296c <uart0_puts>
 80085ae:	bf00      	nop
 80085b0:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}
 80085b4:	08014759 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, lr}

080085b8 <net::igmp_handle(t_igmp*)>:
 80085b8:	7b83      	ldrb	r3, [r0, #14]
 80085ba:	2b45      	cmp	r3, #69	@ 0x45
 80085bc:	d000      	beq.n	80085c0 <net::igmp_handle(t_igmp*)+0x8>
 80085be:	4770      	bx	lr
 80085c0:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 80085c4:	2b11      	cmp	r3, #17
 80085c6:	d1fa      	bne.n	80085be <net::igmp_handle(t_igmp*)+0x6>
 80085c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085cc:	b082      	sub	sp, #8
 80085ce:	4b23      	ldr	r3, [pc, #140]	@ (800865c <net::igmp_handle(t_igmp*)+0xa4>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f100 081d 	add.w	r8, r0, #29
 80085d6:	466a      	mov	r2, sp
 80085d8:	f100 0421 	add.w	r4, r0, #33	@ 0x21
 80085dc:	4643      	mov	r3, r8
 80085de:	e001      	b.n	80085e4 <net::igmp_handle(t_igmp*)+0x2c>
 80085e0:	42a3      	cmp	r3, r4
 80085e2:	d038      	beq.n	8008656 <net::igmp_handle(t_igmp*)+0x9e>
 80085e4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 80085e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085ec:	428d      	cmp	r5, r1
 80085ee:	d0f7      	beq.n	80085e0 <net::igmp_handle(t_igmp*)+0x28>
 80085f0:	1a6d      	subs	r5, r5, r1
 80085f2:	4b1b      	ldr	r3, [pc, #108]	@ (8008660 <net::igmp_handle(t_igmp*)+0xa8>)
 80085f4:	2701      	movs	r7, #1
 80085f6:	f503 7690 	add.w	r6, r3, #288	@ 0x120
 80085fa:	e00a      	b.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 80085fc:	f803 7c02 	strb.w	r7, [r3, #-2]
 8008600:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 8008604:	0852      	lsrs	r2, r2, #1
 8008606:	3201      	adds	r2, #1
 8008608:	f823 2c04 	strh.w	r2, [r3, #-4]
 800860c:	3308      	adds	r3, #8
 800860e:	42b3      	cmp	r3, r6
 8008610:	d012      	beq.n	8008638 <net::igmp_handle(t_igmp*)+0x80>
 8008612:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8008616:	2a00      	cmp	r2, #0
 8008618:	d0f8      	beq.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 800861a:	9201      	str	r2, [sp, #4]
 800861c:	b97d      	cbnz	r5, 800863e <net::igmp_handle(t_igmp*)+0x86>
 800861e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8008622:	2a01      	cmp	r2, #1
 8008624:	d1ea      	bne.n	80085fc <net::igmp_handle(t_igmp*)+0x44>
 8008626:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 800862a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800862e:	428a      	cmp	r2, r1
 8008630:	dbe8      	blt.n	8008604 <net::igmp_handle(t_igmp*)+0x4c>
 8008632:	3308      	adds	r3, #8
 8008634:	42b3      	cmp	r3, r6
 8008636:	d1ec      	bne.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 8008638:	b002      	add	sp, #8
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800863e:	a901      	add	r1, sp, #4
 8008640:	4642      	mov	r2, r8
 8008642:	e001      	b.n	8008648 <net::igmp_handle(t_igmp*)+0x90>
 8008644:	42a2      	cmp	r2, r4
 8008646:	d0ea      	beq.n	800861e <net::igmp_handle(t_igmp*)+0x66>
 8008648:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800864c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008650:	45e6      	cmp	lr, ip
 8008652:	d0f7      	beq.n	8008644 <net::igmp_handle(t_igmp*)+0x8c>
 8008654:	e7da      	b.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 8008656:	2500      	movs	r5, #0
 8008658:	e7cb      	b.n	80085f2 <net::igmp_handle(t_igmp*)+0x3a>
 800865a:	bf00      	nop
 800865c:	010000e0 	smlatteq	r0, r0, r0, r0
 8008660:	10008230 	andne	r8, r0, r0, lsr r2

08008664 <net::net_handle()>:
 8008664:	b500      	push	{lr}
 8008666:	b083      	sub	sp, #12
 8008668:	a801      	add	r0, sp, #4
 800866a:	f006 f9fd 	bl	800ea68 <emac_eth_recv(unsigned char**)>
 800866e:	2800      	cmp	r0, #0
 8008670:	dc02      	bgt.n	8008678 <net::net_handle()+0x14>
 8008672:	b003      	add	sp, #12
 8008674:	f85d fb04 	ldr.w	pc, [sp], #4
 8008678:	9801      	ldr	r0, [sp, #4]
 800867a:	8983      	ldrh	r3, [r0, #12]
 800867c:	2b08      	cmp	r3, #8
 800867e:	d007      	beq.n	8008690 <net::net_handle()+0x2c>
 8008680:	f5b3 6fc1 	cmp.w	r3, #1544	@ 0x608
 8008684:	d007      	beq.n	8008696 <net::net_handle()+0x32>
 8008686:	f006 fa01 	bl	800ea8c <emac_free_pkt()>
 800868a:	b003      	add	sp, #12
 800868c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008690:	f000 fc06 	bl	8008ea0 <net::ip_handle(t_ip4*)>
 8008694:	e7f7      	b.n	8008686 <net::net_handle()+0x22>
 8008696:	f000 fb79 	bl	8008d8c <net::arp_handle(t_arp*)>
 800869a:	e7f4      	b.n	8008686 <net::net_handle()+0x22>

0800869c <net::tcp_run()>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	4c11      	ldr	r4, [pc, #68]	@ (80086e4 <net::tcp_run()+0x48>)
 80086a0:	b085      	sub	sp, #20
 80086a2:	2711      	movs	r7, #17
 80086a4:	f504 75f0 	add.w	r5, r4, #480	@ 0x1e0
 80086a8:	2609      	movs	r6, #9
 80086aa:	e002      	b.n	80086b2 <net::tcp_run()+0x16>
 80086ac:	3450      	adds	r4, #80	@ 0x50
 80086ae:	42ac      	cmp	r4, r5
 80086b0:	d015      	beq.n	80086de <net::tcp_run()+0x42>
 80086b2:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 80086b6:	2b07      	cmp	r3, #7
 80086b8:	d1f8      	bne.n	80086ac <net::tcp_run()+0x10>
 80086ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086bc:	69a2      	ldr	r2, [r4, #24]
 80086be:	f88d 700c 	strb.w	r7, [sp, #12]
 80086c2:	4620      	mov	r0, r4
 80086c4:	a901      	add	r1, sp, #4
 80086c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086ca:	f005 fa43 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 80086ce:	69a3      	ldr	r3, [r4, #24]
 80086d0:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
 80086d4:	3301      	adds	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	3450      	adds	r4, #80	@ 0x50
 80086da:	42ac      	cmp	r4, r5
 80086dc:	d1e9      	bne.n	80086b2 <net::tcp_run()+0x16>
 80086de:	b005      	add	sp, #20
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e2:	bf00      	nop
 80086e4:	100089a0 	andne	r8, r0, r0, lsr #19

080086e8 <net::tcp_handle(t_tcp*)>:
 80086e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ec:	4605      	mov	r5, r0
 80086ee:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80086f0:	8ca9      	ldrh	r1, [r5, #36]	@ 0x24
 80086f2:	4fb3      	ldr	r7, [pc, #716]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 80086f4:	f8b5 9010 	ldrh.w	r9, [r5, #16]
 80086f8:	ba49      	rev16	r1, r1
 80086fa:	ba40      	rev16	r0, r0
 80086fc:	8468      	strh	r0, [r5, #34]	@ 0x22
 80086fe:	84a9      	strh	r1, [r5, #36]	@ 0x24
 8008700:	f8b7 2d04 	ldrh.w	r2, [r7, #3332]	@ 0xd04
 8008704:	b28b      	uxth	r3, r1
 8008706:	429a      	cmp	r2, r3
 8008708:	b099      	sub	sp, #100	@ 0x64
 800870a:	d029      	beq.n	8008760 <net::tcp_handle(t_tcp*)+0x78>
 800870c:	f895 602e 	ldrb.w	r6, [r5, #46]	@ 0x2e
 8008710:	ab04      	add	r3, sp, #16
 8008712:	2400      	movs	r4, #0
 8008714:	f843 4b04 	str.w	r4, [r3], #4
 8008718:	aa18      	add	r2, sp, #96	@ 0x60
 800871a:	4293      	cmp	r3, r2
 800871c:	d1fa      	bne.n	8008714 <net::tcp_handle(t_tcp*)+0x2c>
 800871e:	f8d5 301a 	ldr.w	r3, [r5, #26]
 8008722:	f8d5 201e 	ldr.w	r2, [r5, #30]
 8008726:	f8ad 1018 	strh.w	r1, [sp, #24]
 800872a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800872e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008732:	1dab      	adds	r3, r5, #6
 8008734:	f105 040c 	add.w	r4, r5, #12
 8008738:	a907      	add	r1, sp, #28
 800873a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800873e:	f801 0b01 	strb.w	r0, [r1], #1
 8008742:	42a3      	cmp	r3, r4
 8008744:	d1f9      	bne.n	800873a <net::tcp_handle(t_tcp*)+0x52>
 8008746:	4628      	mov	r0, r5
 8008748:	f005 f9e4 	bl	800db14 <net::_bswap32(t_tcp*)>
 800874c:	0932      	lsrs	r2, r6, #4
 800874e:	0092      	lsls	r2, r2, #2
 8008750:	a904      	add	r1, sp, #16
 8008752:	f005 faeb 	bl	800dd2c <net::scan_options(t_tcp*, net::tcb*, long)>
 8008756:	f005 fab5 	bl	800dcc4 <net::send_reset(t_tcp*, net::tcb const*)>
 800875a:	b019      	add	sp, #100	@ 0x64
 800875c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008760:	f107 0a04 	add.w	sl, r7, #4
 8008764:	fa1f fe80 	uxth.w	lr, r0
 8008768:	4653      	mov	r3, sl
 800876a:	2400      	movs	r4, #0
 800876c:	e005      	b.n	800877a <net::tcp_handle(t_tcp*)+0x92>
 800876e:	3401      	adds	r4, #1
 8008770:	2c06      	cmp	r4, #6
 8008772:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 8008776:	f000 8088 	beq.w	800888a <net::tcp_handle(t_tcp*)+0x1a2>
 800877a:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800877e:	2a01      	cmp	r2, #1
 8008780:	d0f5      	beq.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008782:	88da      	ldrh	r2, [r3, #6]
 8008784:	4572      	cmp	r2, lr
 8008786:	d1f2      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008788:	1e5a      	subs	r2, r3, #1
 800878a:	f105 0119 	add.w	r1, r5, #25
 800878e:	f103 0c03 	add.w	ip, r3, #3
 8008792:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8008796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800879a:	4286      	cmp	r6, r0
 800879c:	d1e7      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 800879e:	4562      	cmp	r2, ip
 80087a0:	d1f7      	bne.n	8008792 <net::tcp_handle(t_tcp*)+0xaa>
 80087a2:	f895 802e 	ldrb.w	r8, [r5, #46]	@ 0x2e
 80087a6:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80087aa:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80087ae:	4628      	mov	r0, r5
 80087b0:	9300      	str	r3, [sp, #0]
 80087b2:	f005 f9af 	bl	800db14 <net::_bswap32(t_tcp*)>
 80087b6:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80087b8:	9a00      	ldr	r2, [sp, #0]
 80087ba:	ba5b      	rev16	r3, r3
 80087bc:	862b      	strh	r3, [r5, #48]	@ 0x30
 80087be:	b29b      	uxth	r3, r3
 80087c0:	9303      	str	r3, [sp, #12]
 80087c2:	8eab      	ldrh	r3, [r5, #52]	@ 0x34
 80087c4:	ba5b      	rev16	r3, r3
 80087c6:	86ab      	strh	r3, [r5, #52]	@ 0x34
 80087c8:	f105 032a 	add.w	r3, r5, #42	@ 0x2a
 80087cc:	079b      	lsls	r3, r3, #30
 80087ce:	bf0c      	ite	eq
 80087d0:	f8d5 302a 	ldreq.w	r3, [r5, #42]	@ 0x2a
 80087d4:	f8d5 302a 	ldrne.w	r3, [r5, #42]	@ 0x2a
 80087d8:	9301      	str	r3, [sp, #4]
 80087da:	f105 0326 	add.w	r3, r5, #38	@ 0x26
 80087de:	079e      	lsls	r6, r3, #30
 80087e0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 80087e4:	eb07 1603 	add.w	r6, r7, r3, lsl #4
 80087e8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80087ec:	4631      	mov	r1, r6
 80087ee:	ea4f 0384 	mov.w	r3, r4, lsl #2
 80087f2:	bf0c      	ite	eq
 80087f4:	f8d5 b026 	ldreq.w	fp, [r5, #38]	@ 0x26
 80087f8:	f8d5 b026 	ldrne.w	fp, [r5, #38]	@ 0x26
 80087fc:	9302      	str	r3, [sp, #8]
 80087fe:	f005 fa95 	bl	800dd2c <net::scan_options(t_tcp*, net::tcb*, long)>
 8008802:	f896 204c 	ldrb.w	r2, [r6, #76]	@ 0x4c
 8008806:	2a01      	cmp	r2, #1
 8008808:	d04c      	beq.n	80088a4 <net::tcp_handle(t_tcp*)+0x1bc>
 800880a:	1ed3      	subs	r3, r2, #3
 800880c:	2b07      	cmp	r3, #7
 800880e:	d8a4      	bhi.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008810:	9b00      	ldr	r3, [sp, #0]
 8008812:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 8008816:	33ec      	adds	r3, #236	@ 0xec
 8008818:	fa99 f999 	rev16.w	r9, r9
 800881c:	fa13 f989 	uxtah	r9, r3, r9
 8008820:	f8b6 3044 	ldrh.w	r3, [r6, #68]	@ 0x44
 8008824:	fa1f f989 	uxth.w	r9, r9
 8008828:	2b00      	cmp	r3, #0
 800882a:	d077      	beq.n	800891c <net::tcp_handle(t_tcp*)+0x234>
 800882c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 800882e:	eba1 000b 	sub.w	r0, r1, fp
 8008832:	f1b9 0f00 	cmp.w	r9, #0
 8008836:	f040 8085 	bne.w	8008944 <net::tcp_handle(t_tcp*)+0x25c>
 800883a:	2800      	cmp	r0, #0
 800883c:	f340 80b8 	ble.w	80089b0 <net::tcp_handle(t_tcp*)+0x2c8>
 8008840:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 8008844:	f013 0f04 	tst.w	r3, #4
 8008848:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800884c:	4423      	add	r3, r4
 800884e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008852:	d06a      	beq.n	800892a <net::tcp_handle(t_tcp*)+0x242>
 8008854:	891d      	ldrh	r5, [r3, #8]
 8008856:	2200      	movs	r2, #0
 8008858:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 800885c:	f846 2b04 	str.w	r2, [r6], #4
 8008860:	42b3      	cmp	r3, r6
 8008862:	d1fb      	bne.n	800885c <net::tcp_handle(t_tcp*)+0x174>
 8008864:	9b02      	ldr	r3, [sp, #8]
 8008866:	4a57      	ldr	r2, [pc, #348]	@ (80089c4 <net::tcp_handle(t_tcp*)+0x2dc>)
 8008868:	4423      	add	r3, r4
 800886a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800886e:	6812      	ldr	r2, [r2, #0]
 8008870:	811d      	strh	r5, [r3, #8]
 8008872:	f640 3018 	movw	r0, #2840	@ 0xb18
 8008876:	2101      	movs	r1, #1
 8008878:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800887c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800887e:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 8008882:	629a      	str	r2, [r3, #40]	@ 0x28
 8008884:	f883 104c 	strb.w	r1, [r3, #76]	@ 0x4c
 8008888:	e767      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800888a:	4b4d      	ldr	r3, [pc, #308]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 800888c:	2400      	movs	r4, #0
 800888e:	e002      	b.n	8008896 <net::tcp_handle(t_tcp*)+0x1ae>
 8008890:	3401      	adds	r4, #1
 8008892:	2c06      	cmp	r4, #6
 8008894:	d085      	beq.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 8008896:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
 800889a:	2a01      	cmp	r2, #1
 800889c:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 80088a0:	d1f6      	bne.n	8008890 <net::tcp_handle(t_tcp*)+0x1a8>
 80088a2:	e77e      	b.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 80088a4:	f8d5 201e 	ldr.w	r2, [r5, #30]
 80088a8:	f847 2008 	str.w	r2, [r7, r8]
 80088ac:	8c69      	ldrh	r1, [r5, #34]	@ 0x22
 80088ae:	8171      	strh	r1, [r6, #10]
 80088b0:	f8d5 101a 	ldr.w	r1, [r5, #26]
 80088b4:	f84a 1008 	str.w	r1, [sl, r8]
 80088b8:	f108 020c 	add.w	r2, r8, #12
 80088bc:	443a      	add	r2, r7
 80088be:	1dab      	adds	r3, r5, #6
 80088c0:	f105 000c 	add.w	r0, r5, #12
 80088c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 80088c8:	f802 1b01 	strb.w	r1, [r2], #1
 80088cc:	4283      	cmp	r3, r0
 80088ce:	d1f9      	bne.n	80088c4 <net::tcp_handle(t_tcp*)+0x1dc>
 80088d0:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 80088d4:	0758      	lsls	r0, r3, #29
 80088d6:	f53f af40 	bmi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088da:	06d9      	lsls	r1, r3, #27
 80088dc:	f100 8135 	bmi.w	8008b4a <net::tcp_handle(t_tcp*)+0x462>
 80088e0:	079a      	lsls	r2, r3, #30
 80088e2:	f57f af3a 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088e6:	9b02      	ldr	r3, [sp, #8]
 80088e8:	4423      	add	r3, r4
 80088ea:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 80088ee:	2212      	movs	r2, #18
 80088f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088f2:	9104      	str	r1, [sp, #16]
 80088f4:	f10b 0301 	add.w	r3, fp, #1
 80088f8:	4630      	mov	r0, r6
 80088fa:	a904      	add	r1, sp, #16
 80088fc:	6423      	str	r3, [r4, #64]	@ 0x40
 80088fe:	9305      	str	r3, [sp, #20]
 8008900:	f88d 2018 	strb.w	r2, [sp, #24]
 8008904:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
 8008908:	f005 f924 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800890c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800890e:	6163      	str	r3, [r4, #20]
 8008910:	2203      	movs	r2, #3
 8008912:	3301      	adds	r3, #1
 8008914:	61a3      	str	r3, [r4, #24]
 8008916:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
 800891a:	e71e      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d18e      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008922:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8008924:	455b      	cmp	r3, fp
 8008926:	d18b      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008928:	e01f      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 800892a:	6999      	ldr	r1, [r3, #24]
 800892c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800892e:	9305      	str	r3, [sp, #20]
 8008930:	2210      	movs	r2, #16
 8008932:	9104      	str	r1, [sp, #16]
 8008934:	4630      	mov	r0, r6
 8008936:	eb0d 0102 	add.w	r1, sp, r2
 800893a:	f88d 2018 	strb.w	r2, [sp, #24]
 800893e:	f005 f909 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008942:	e70a      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008944:	2800      	cmp	r0, #0
 8008946:	440b      	add	r3, r1
 8008948:	dd0b      	ble.n	8008962 <net::tcp_handle(t_tcp*)+0x27a>
 800894a:	f10b 30ff 	add.w	r0, fp, #4294967295	@ 0xffffffff
 800894e:	4448      	add	r0, r9
 8008950:	1a09      	subs	r1, r1, r0
 8008952:	2900      	cmp	r1, #0
 8008954:	f73f af74 	bgt.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008958:	1ac0      	subs	r0, r0, r3
 800895a:	2800      	cmp	r0, #0
 800895c:	f6bf af70 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008960:	e003      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 8008962:	ebab 0003 	sub.w	r0, fp, r3
 8008966:	2800      	cmp	r0, #0
 8008968:	daef      	bge.n	800894a <net::tcp_handle(t_tcp*)+0x262>
 800896a:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800896e:	f011 0004 	ands.w	r0, r1, #4
 8008972:	f040 80f1 	bne.w	8008b58 <net::tcp_handle(t_tcp*)+0x470>
 8008976:	078b      	lsls	r3, r1, #30
 8008978:	d508      	bpl.n	800898c <net::tcp_handle(t_tcp*)+0x2a4>
 800897a:	2a03      	cmp	r2, #3
 800897c:	f000 811f 	beq.w	8008bbe <net::tcp_handle(t_tcp*)+0x4d6>
 8008980:	4631      	mov	r1, r6
 8008982:	4628      	mov	r0, r5
 8008984:	f005 f99e 	bl	800dcc4 <net::send_reset(t_tcp*, net::tcb const*)>
 8008988:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800898c:	06c8      	lsls	r0, r1, #27
 800898e:	f57f aee4 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008992:	00a3      	lsls	r3, r4, #2
 8008994:	4423      	add	r3, r4
 8008996:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800899a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800899e:	1eda      	subs	r2, r3, #3
 80089a0:	2a07      	cmp	r2, #7
 80089a2:	d87f      	bhi.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 80089a4:	e8df f002 	tbb	[pc, r2]
 80089a8:	10101066 	andsne	r1, r0, r6, rrx
 80089ac:	b8a71010 	stmialt	r7!, {r4, ip}
 80089b0:	440b      	add	r3, r1
 80089b2:	ebab 0303 	sub.w	r3, fp, r3
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	f6bf af42 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 80089bc:	e7d5      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 80089be:	bf00      	nop
 80089c0:	100089a0 	andne	r8, r0, r0, lsr #19
 80089c4:	20004830 	andcs	r4, r0, r0, lsr r8
 80089c8:	00a2      	lsls	r2, r4, #2
 80089ca:	1911      	adds	r1, r2, r4
 80089cc:	eb07 1101 	add.w	r1, r7, r1, lsl #4
 80089d0:	e9d1 c205 	ldrd	ip, r2, [r1, #20]
 80089d4:	9801      	ldr	r0, [sp, #4]
 80089d6:	ebbc 0e00 	subs.w	lr, ip, r0
 80089da:	f100 80fc 	bmi.w	8008bd6 <net::tcp_handle(t_tcp*)+0x4ee>
 80089de:	9801      	ldr	r0, [sp, #4]
 80089e0:	eba0 0c0c 	sub.w	ip, r0, ip
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	f340 810d 	ble.w	8008c06 <net::tcp_handle(t_tcp*)+0x51e>
 80089ec:	9901      	ldr	r1, [sp, #4]
 80089ee:	1a89      	subs	r1, r1, r2
 80089f0:	2900      	cmp	r1, #0
 80089f2:	f300 80fa 	bgt.w	8008bea <net::tcp_handle(t_tcp*)+0x502>
 80089f6:	3b04      	subs	r3, #4
 80089f8:	2b02      	cmp	r3, #2
 80089fa:	d856      	bhi.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 80089fc:	f1b9 0f00 	cmp.w	r9, #0
 8008a00:	d053      	beq.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 8008a02:	00a3      	lsls	r3, r4, #2
 8008a04:	4423      	add	r3, r4
 8008a06:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008a0c:	455a      	cmp	r2, fp
 8008a0e:	f040 816c 	bne.w	8008cea <net::tcp_handle(t_tcp*)+0x602>
 8008a12:	f8b7 01e0 	ldrh.w	r0, [r7, #480]	@ 0x1e0
 8008a16:	9900      	ldr	r1, [sp, #0]
 8008a18:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008a1c:	fb00 f303 	mul.w	r3, r0, r3
 8008a20:	18fa      	adds	r2, r7, r3
 8008a22:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8008a26:	f8a2 4772 	strh.w	r4, [r2, #1906]	@ 0x772
 8008a2a:	19da      	adds	r2, r3, r7
 8008a2c:	f105 0322 	add.w	r3, r5, #34	@ 0x22
 8008a30:	4419      	add	r1, r3
 8008a32:	079b      	lsls	r3, r3, #30
 8008a34:	4688      	mov	r8, r1
 8008a36:	f040 8122 	bne.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a3a:	f1b9 0f03 	cmp.w	r9, #3
 8008a3e:	f240 811e 	bls.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a42:	f1a9 0304 	sub.w	r3, r9, #4
 8008a46:	089b      	lsrs	r3, r3, #2
 8008a48:	1c59      	adds	r1, r3, #1
 8008a4a:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 8008a4e:	4694      	mov	ip, r2
 8008a50:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8008a54:	f858 eb04 	ldr.w	lr, [r8], #4
 8008a58:	f84c eb04 	str.w	lr, [ip], #4
 8008a5c:	4588      	cmp	r8, r1
 8008a5e:	d1f9      	bne.n	8008a54 <net::tcp_handle(t_tcp*)+0x36c>
 8008a60:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 8008a64:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8008a68:	2b04      	cmp	r3, #4
 8008a6a:	f000 8112 	beq.w	8008c92 <net::tcp_handle(t_tcp*)+0x5aa>
 8008a6e:	4452      	add	r2, sl
 8008a70:	3b05      	subs	r3, #5
 8008a72:	e106      	b.n	8008c82 <net::tcp_handle(t_tcp*)+0x59a>
 8008a74:	00a3      	lsls	r3, r4, #2
 8008a76:	4423      	add	r3, r4
 8008a78:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a7c:	9801      	ldr	r0, [sp, #4]
 8008a7e:	695a      	ldr	r2, [r3, #20]
 8008a80:	1a11      	subs	r1, r2, r0
 8008a82:	2900      	cmp	r1, #0
 8008a84:	699a      	ldr	r2, [r3, #24]
 8008a86:	f340 80eb 	ble.w	8008c60 <net::tcp_handle(t_tcp*)+0x578>
 8008a8a:	4631      	mov	r1, r6
 8008a8c:	4628      	mov	r0, r5
 8008a8e:	f005 f919 	bl	800dcc4 <net::send_reset(t_tcp*, net::tcb const*)>
 8008a92:	00a3      	lsls	r3, r4, #2
 8008a94:	4423      	add	r3, r4
 8008a96:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a9a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8008a9e:	1f1a      	subs	r2, r3, #4
 8008aa0:	2a02      	cmp	r2, #2
 8008aa2:	d9ab      	bls.n	80089fc <net::tcp_handle(t_tcp*)+0x314>
 8008aa4:	2b02      	cmp	r3, #2
 8008aa6:	f67f ae58 	bls.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aaa:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 8008aae:	07ca      	lsls	r2, r1, #31
 8008ab0:	f57f ae53 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	4423      	add	r3, r4
 8008ab8:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 8008abc:	4630      	mov	r0, r6
 8008abe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ac0:	69a2      	ldr	r2, [r4, #24]
 8008ac2:	9204      	str	r2, [sp, #16]
 8008ac4:	2210      	movs	r2, #16
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	eb0d 0102 	add.w	r1, sp, r2
 8008acc:	6423      	str	r3, [r4, #64]	@ 0x40
 8008ace:	9305      	str	r3, [sp, #20]
 8008ad0:	f88d 2018 	strb.w	r2, [sp, #24]
 8008ad4:	f005 f83e 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008ad8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 8008adc:	2b05      	cmp	r3, #5
 8008ade:	f000 80b9 	beq.w	8008c54 <net::tcp_handle(t_tcp*)+0x56c>
 8008ae2:	f200 80b2 	bhi.w	8008c4a <net::tcp_handle(t_tcp*)+0x562>
 8008ae6:	3b03      	subs	r3, #3
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	f63f ae36 	bhi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aee:	2307      	movs	r3, #7
 8008af0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 8008af4:	e631      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008af6:	00a3      	lsls	r3, r4, #2
 8008af8:	4423      	add	r3, r4
 8008afa:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008afe:	9801      	ldr	r0, [sp, #4]
 8008b00:	699a      	ldr	r2, [r3, #24]
 8008b02:	4282      	cmp	r2, r0
 8008b04:	d1d3      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b06:	891d      	ldrh	r5, [r3, #8]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b0e:	f846 2b04 	str.w	r2, [r6], #4
 8008b12:	42b3      	cmp	r3, r6
 8008b14:	d1fb      	bne.n	8008b0e <net::tcp_handle(t_tcp*)+0x426>
 8008b16:	e6a5      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008b18:	00a3      	lsls	r3, r4, #2
 8008b1a:	eb03 0a04 	add.w	sl, r3, r4
 8008b1e:	eb07 1a0a 	add.w	sl, r7, sl, lsl #4
 8008b22:	9a01      	ldr	r2, [sp, #4]
 8008b24:	f8da 3018 	ldr.w	r3, [sl, #24]
 8008b28:	4293      	cmp	r3, r2
 8008b2a:	d1c0      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b2c:	f8da 3040 	ldr.w	r3, [sl, #64]	@ 0x40
 8008b30:	9305      	str	r3, [sp, #20]
 8008b32:	2310      	movs	r3, #16
 8008b34:	eb0d 0103 	add.w	r1, sp, r3
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f88d 3018 	strb.w	r3, [sp, #24]
 8008b3e:	9204      	str	r2, [sp, #16]
 8008b40:	f005 f808 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008b44:	f89a 304c 	ldrb.w	r3, [sl, #76]	@ 0x4c
 8008b48:	e7a9      	b.n	8008a9e <net::tcp_handle(t_tcp*)+0x3b6>
 8008b4a:	4631      	mov	r1, r6
 8008b4c:	4628      	mov	r0, r5
 8008b4e:	b019      	add	sp, #100	@ 0x64
 8008b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b54:	f005 b8b6 	b.w	800dcc4 <net::send_reset(t_tcp*, net::tcb const*)>
 8008b58:	00a3      	lsls	r3, r4, #2
 8008b5a:	4423      	add	r3, r4
 8008b5c:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b60:	2a07      	cmp	r2, #7
 8008b62:	8919      	ldrh	r1, [r3, #8]
 8008b64:	d81b      	bhi.n	8008b9e <net::tcp_handle(t_tcp*)+0x4b6>
 8008b66:	2a03      	cmp	r2, #3
 8008b68:	d021      	beq.n	8008bae <net::tcp_handle(t_tcp*)+0x4c6>
 8008b6a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b6e:	2200      	movs	r2, #0
 8008b70:	f846 2b04 	str.w	r2, [r6], #4
 8008b74:	42b3      	cmp	r3, r6
 8008b76:	d1fb      	bne.n	8008b70 <net::tcp_handle(t_tcp*)+0x488>
 8008b78:	9b02      	ldr	r3, [sp, #8]
 8008b7a:	4a62      	ldr	r2, [pc, #392]	@ (8008d04 <net::tcp_handle(t_tcp*)+0x61c>)
 8008b7c:	4423      	add	r3, r4
 8008b7e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b82:	6812      	ldr	r2, [r2, #0]
 8008b84:	8119      	strh	r1, [r3, #8]
 8008b86:	f640 3418 	movw	r4, #2840	@ 0xb18
 8008b8a:	2001      	movs	r0, #1
 8008b8c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008b90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008b92:	f8a3 4044 	strh.w	r4, [r3, #68]	@ 0x44
 8008b96:	629a      	str	r2, [r3, #40]	@ 0x28
 8008b98:	f883 004c 	strb.w	r0, [r3, #76]	@ 0x4c
 8008b9c:	e5dd      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008b9e:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f846 2b04 	str.w	r2, [r6], #4
 8008ba8:	429e      	cmp	r6, r3
 8008baa:	d1fb      	bne.n	8008ba4 <net::tcp_handle(t_tcp*)+0x4bc>
 8008bac:	e7e4      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bae:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	f846 2b04 	str.w	r2, [r6], #4
 8008bb8:	42b3      	cmp	r3, r6
 8008bba:	d1fb      	bne.n	8008bb4 <net::tcp_handle(t_tcp*)+0x4cc>
 8008bbc:	e7dc      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bbe:	00a3      	lsls	r3, r4, #2
 8008bc0:	4423      	add	r3, r4
 8008bc2:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bc6:	891d      	ldrh	r5, [r3, #8]
 8008bc8:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bcc:	f846 0b04 	str.w	r0, [r6], #4
 8008bd0:	429e      	cmp	r6, r3
 8008bd2:	d1fb      	bne.n	8008bcc <net::tcp_handle(t_tcp*)+0x4e4>
 8008bd4:	e646      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008bd6:	1a80      	subs	r0, r0, r2
 8008bd8:	2800      	cmp	r0, #0
 8008bda:	f340 8090 	ble.w	8008cfe <net::tcp_handle(t_tcp*)+0x616>
 8008bde:	9801      	ldr	r0, [sp, #4]
 8008be0:	eba0 010c 	sub.w	r1, r0, ip
 8008be4:	2900      	cmp	r1, #0
 8008be6:	f77f af06 	ble.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008bea:	00a3      	lsls	r3, r4, #2
 8008bec:	4423      	add	r3, r4
 8008bee:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bf2:	2410      	movs	r4, #16
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008bf6:	f88d 4018 	strb.w	r4, [sp, #24]
 8008bfa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008bfe:	eb0d 0104 	add.w	r1, sp, r4
 8008c02:	4630      	mov	r0, r6
 8008c04:	e69b      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008c06:	f1be 0f00 	cmp.w	lr, #0
 8008c0a:	f47f aef4 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c0e:	9801      	ldr	r0, [sp, #4]
 8008c10:	1a82      	subs	r2, r0, r2
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	f73f aeef 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c18:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8008c1a:	eba2 000b 	sub.w	r0, r2, fp
 8008c1e:	2800      	cmp	r0, #0
 8008c20:	db08      	blt.n	8008c34 <net::tcp_handle(t_tcp*)+0x54c>
 8008c22:	455a      	cmp	r2, fp
 8008c24:	f47f aee7 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c28:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 8008c2a:	9901      	ldr	r1, [sp, #4]
 8008c2c:	1a52      	subs	r2, r2, r1
 8008c2e:	2a00      	cmp	r2, #0
 8008c30:	f73f aee1 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c34:	00a2      	lsls	r2, r4, #2
 8008c36:	4422      	add	r2, r4
 8008c38:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008c3c:	9903      	ldr	r1, [sp, #12]
 8008c3e:	61d1      	str	r1, [r2, #28]
 8008c40:	9901      	ldr	r1, [sp, #4]
 8008c42:	f8c2 b024 	str.w	fp, [r2, #36]	@ 0x24
 8008c46:	6291      	str	r1, [r2, #40]	@ 0x28
 8008c48:	e6d5      	b.n	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c4a:	2b06      	cmp	r3, #6
 8008c4c:	f47f ad85 	bne.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c50:	230a      	movs	r3, #10
 8008c52:	e74d      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c54:	69a3      	ldr	r3, [r4, #24]
 8008c56:	9a01      	ldr	r2, [sp, #4]
 8008c58:	4293      	cmp	r3, r2
 8008c5a:	d0f9      	beq.n	8008c50 <net::tcp_handle(t_tcp*)+0x568>
 8008c5c:	2308      	movs	r3, #8
 8008c5e:	e747      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c60:	1a82      	subs	r2, r0, r2
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	f73f af11 	bgt.w	8008a8a <net::tcp_handle(t_tcp*)+0x3a2>
 8008c68:	9903      	ldr	r1, [sp, #12]
 8008c6a:	61d9      	str	r1, [r3, #28]
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	9901      	ldr	r1, [sp, #4]
 8008c70:	f8c3 b024 	str.w	fp, [r3, #36]	@ 0x24
 8008c74:	6299      	str	r1, [r3, #40]	@ 0x28
 8008c76:	6159      	str	r1, [r3, #20]
 8008c78:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008c7c:	e56d      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c7e:	f109 33ff 	add.w	r3, r9, #4294967295	@ 0xffffffff
 8008c82:	3301      	adds	r3, #1
 8008c84:	4443      	add	r3, r8
 8008c86:	f818 1b01 	ldrb.w	r1, [r8], #1
 8008c8a:	f802 1b01 	strb.w	r1, [r2], #1
 8008c8e:	4543      	cmp	r3, r8
 8008c90:	d1f9      	bne.n	8008c86 <net::tcp_handle(t_tcp*)+0x59e>
 8008c92:	9b02      	ldr	r3, [sp, #8]
 8008c94:	eb03 0804 	add.w	r8, r3, r4
 8008c98:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008c9c:	eb07 1808 	add.w	r8, r7, r8, lsl #4
 8008ca0:	fb03 7300 	mla	r3, r3, r0, r7
 8008ca4:	4630      	mov	r0, r6
 8008ca6:	f8a3 9770 	strh.w	r9, [r3, #1904]	@ 0x770
 8008caa:	f8d8 3040 	ldr.w	r3, [r8, #64]	@ 0x40
 8008cae:	444b      	add	r3, r9
 8008cb0:	f8c8 3040 	str.w	r3, [r8, #64]	@ 0x40
 8008cb4:	9305      	str	r3, [sp, #20]
 8008cb6:	f8b8 3044 	ldrh.w	r3, [r8, #68]	@ 0x44
 8008cba:	f2a3 538c 	subw	r3, r3, #1420	@ 0x58c
 8008cbe:	f8a8 3044 	strh.w	r3, [r8, #68]	@ 0x44
 8008cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8008cc6:	9304      	str	r3, [sp, #16]
 8008cc8:	2310      	movs	r3, #16
 8008cca:	eb0d 0103 	add.w	r1, sp, r3
 8008cce:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cd2:	f004 ff3f 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008cd6:	f8b7 21e0 	ldrh.w	r2, [r7, #480]	@ 0x1e0
 8008cda:	f898 304c 	ldrb.w	r3, [r8, #76]	@ 0x4c
 8008cde:	3201      	adds	r2, #1
 8008ce0:	f002 0201 	and.w	r2, r2, #1
 8008ce4:	f8a7 21e0 	strh.w	r2, [r7, #480]	@ 0x1e0
 8008ce8:	e6dc      	b.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 8008cea:	699c      	ldr	r4, [r3, #24]
 8008cec:	2310      	movs	r3, #16
 8008cee:	e9cd 4204 	strd	r4, r2, [sp, #16]
 8008cf2:	eb0d 0103 	add.w	r1, sp, r3
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cfc:	e61f      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008cfe:	9a01      	ldr	r2, [sp, #4]
 8008d00:	614a      	str	r2, [r1, #20]
 8008d02:	e789      	b.n	8008c18 <net::tcp_handle(t_tcp*)+0x530>
 8008d04:	20004830 	andcs	r4, r0, r0, lsr r8

08008d08 <net::udp_handle(t_udp*)>:
 8008d08:	f8b0 c024 	ldrh.w	ip, [r0, #36]	@ 0x24
 8008d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8008d84 <net::udp_handle(t_udp*)+0x7c>)
 8008d0e:	fa9c fc9c 	rev16.w	ip, ip
 8008d12:	2300      	movs	r3, #0
 8008d14:	fa1f fc8c 	uxth.w	ip, ip
 8008d18:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8008d1c:	4561      	cmp	r1, ip
 8008d1e:	d003      	beq.n	8008d28 <net::udp_handle(t_udp*)+0x20>
 8008d20:	3301      	adds	r3, #1
 8008d22:	2b08      	cmp	r3, #8
 8008d24:	d1f8      	bne.n	8008d18 <net::udp_handle(t_udp*)+0x10>
 8008d26:	4770      	bx	lr
 8008d28:	8cc1      	ldrh	r1, [r0, #38]	@ 0x26
 8008d2a:	b530      	push	{r4, r5, lr}
 8008d2c:	ba4c      	rev16	r4, r1
 8008d2e:	3c08      	subs	r4, #8
 8008d30:	b2a4      	uxth	r4, r4
 8008d32:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d36:	fa1f fc81 	uxth.w	ip, r1
 8008d3a:	f5b4 6fb8 	cmp.w	r4, #1472	@ 0x5c0
 8008d3e:	4d12      	ldr	r5, [pc, #72]	@ (8008d88 <net::udp_handle(t_udp*)+0x80>)
 8008d40:	fb03 f202 	mul.w	r2, r3, r2
 8008d44:	f102 020a 	add.w	r2, r2, #10
 8008d48:	bf28      	it	cs
 8008d4a:	f44f 64b8 	movcs.w	r4, #1472	@ 0x5c0
 8008d4e:	f5bc 6f00 	cmp.w	ip, #2048	@ 0x800
 8008d52:	442a      	add	r2, r5
 8008d54:	f100 012a 	add.w	r1, r0, #42	@ 0x2a
 8008d58:	d007      	beq.n	8008d6a <net::udp_handle(t_udp*)+0x62>
 8008d5a:	eb02 0e04 	add.w	lr, r2, r4
 8008d5e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008d62:	f802 cb01 	strb.w	ip, [r2], #1
 8008d66:	4572      	cmp	r2, lr
 8008d68:	d1f9      	bne.n	8008d5e <net::udp_handle(t_udp*)+0x56>
 8008d6a:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d6e:	fb02 f303 	mul.w	r3, r2, r3
 8008d72:	f8d0 101a 	ldr.w	r1, [r0, #26]
 8008d76:	50e9      	str	r1, [r5, r3]
 8008d78:	18ea      	adds	r2, r5, r3
 8008d7a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
 8008d7c:	6054      	str	r4, [r2, #4]
 8008d7e:	ba5b      	rev16	r3, r3
 8008d80:	8113      	strh	r3, [r2, #8]
 8008d82:	bd30      	pop	{r4, r5, pc}
 8008d84:	1000cafe 	strdne	ip, [r0], -lr
 8008d88:	10009ca0 	andne	r9, r0, r0, lsr #25

08008d8c <net::arp_handle(t_arp*)>:
 8008d8c:	89c3      	ldrh	r3, [r0, #14]
 8008d8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008d92:	d17e      	bne.n	8008e92 <net::arp_handle(t_arp*)+0x106>
 8008d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d98:	8a03      	ldrh	r3, [r0, #16]
 8008d9a:	2b08      	cmp	r3, #8
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	d172      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da0:	7c83      	ldrb	r3, [r0, #18]
 8008da2:	2b06      	cmp	r3, #6
 8008da4:	d16f      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da6:	7cc3      	ldrb	r3, [r0, #19]
 8008da8:	2b04      	cmp	r3, #4
 8008daa:	d16c      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008dac:	f005 ffb4 	bl	800ed18 <net::acd_arp_reply(t_arp*)>
 8008db0:	4a38      	ldr	r2, [pc, #224]	@ (8008e94 <net::arp_handle(t_arp*)+0x108>)
 8008db2:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 8008db6:	6817      	ldr	r7, [r2, #0]
 8008db8:	429f      	cmp	r7, r3
 8008dba:	d066      	beq.n	8008e8a <net::arp_handle(t_arp*)+0xfe>
 8008dbc:	6912      	ldr	r2, [r2, #16]
 8008dbe:	429a      	cmp	r2, r3
 8008dc0:	bf0d      	iteet	eq
 8008dc2:	f04f 0801 	moveq.w	r8, #1
 8008dc6:	f04f 0800 	movne.w	r8, #0
 8008dca:	2101      	movne	r1, #1
 8008dcc:	2100      	moveq	r1, #0
 8008dce:	69e6      	ldr	r6, [r4, #28]
 8008dd0:	4630      	mov	r0, r6
 8008dd2:	f006 f827 	bl	800ee24 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8008dd6:	f104 091c 	add.w	r9, r4, #28
 8008dda:	f104 0a16 	add.w	sl, r4, #22
 8008dde:	4605      	mov	r5, r0
 8008de0:	b350      	cbz	r0, 8008e38 <net::arp_handle(t_arp*)+0xac>
 8008de2:	2302      	movs	r3, #2
 8008de4:	6143      	str	r3, [r0, #20]
 8008de6:	f100 020c 	add.w	r2, r0, #12
 8008dea:	2300      	movs	r3, #0
 8008dec:	8243      	strh	r3, [r0, #18]
 8008dee:	4611      	mov	r1, r2
 8008df0:	4653      	mov	r3, sl
 8008df2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008df6:	f801 0b01 	strb.w	r0, [r1], #1
 8008dfa:	4599      	cmp	r9, r3
 8008dfc:	d1f9      	bne.n	8008df2 <net::arp_handle(t_arp*)+0x66>
 8008dfe:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008e02:	f1bc 0f00 	cmp.w	ip, #0
 8008e06:	d017      	beq.n	8008e38 <net::arp_handle(t_arp*)+0xac>
 8008e08:	4663      	mov	r3, ip
 8008e0a:	f105 0012 	add.w	r0, r5, #18
 8008e0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e12:	f803 1b01 	strb.w	r1, [r3], #1
 8008e16:	4282      	cmp	r2, r0
 8008e18:	d1f9      	bne.n	8008e0e <net::arp_handle(t_arp*)+0x82>
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8008e20:	f88c 3018 	strb.w	r3, [ip, #24]
 8008e24:	f88c 3019 	strb.w	r3, [ip, #25]
 8008e28:	f005 fe50 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 8008e2c:	6868      	ldr	r0, [r5, #4]
 8008e2e:	b108      	cbz	r0, 8008e34 <net::arp_handle(t_arp*)+0xa8>
 8008e30:	f00a ff5a 	bl	8013ce8 <operator delete[](void*)>
 8008e34:	2300      	movs	r3, #0
 8008e36:	606b      	str	r3, [r5, #4]
 8008e38:	8aa3      	ldrh	r3, [r4, #20]
 8008e3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e3e:	d122      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e40:	f1b8 0f00 	cmp.w	r8, #0
 8008e44:	d01f      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e46:	42b7      	cmp	r7, r6
 8008e48:	d01d      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e4a:	4d13      	ldr	r5, [pc, #76]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e4c:	1da3      	adds	r3, r4, #6
 8008e4e:	f104 000c 	add.w	r0, r4, #12
 8008e52:	462a      	mov	r2, r5
 8008e54:	f813 1b01 	ldrb.w	r1, [r3], #1
 8008e58:	f802 1b01 	strb.w	r1, [r2], #1
 8008e5c:	4283      	cmp	r3, r0
 8008e5e:	d1f9      	bne.n	8008e54 <net::arp_handle(t_arp*)+0xc8>
 8008e60:	f8d4 6026 	ldr.w	r6, [r4, #38]	@ 0x26
 8008e64:	4b0d      	ldr	r3, [pc, #52]	@ (8008e9c <net::arp_handle(t_arp*)+0x110>)
 8008e66:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008e6a:	f803 2b01 	strb.w	r2, [r3], #1
 8008e6e:	45d1      	cmp	r9, sl
 8008e70:	d1f9      	bne.n	8008e66 <net::arp_handle(t_arp*)+0xda>
 8008e72:	69e3      	ldr	r3, [r4, #28]
 8008e74:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8008e78:	61ee      	str	r6, [r5, #28]
 8008e7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e7e:	4806      	ldr	r0, [pc, #24]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e80:	213c      	movs	r1, #60	@ 0x3c
 8008e82:	f005 be23 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 8008e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	f04f 0801 	mov.w	r8, #1
 8008e90:	e79d      	b.n	8008dce <net::arp_handle(t_arp*)+0x42>
 8008e92:	4770      	bx	lr
 8008e94:	200009cc 	andcs	r0, r0, ip, asr #19
 8008e98:	200009fc 	strdcs	r0, [r0], -ip
 8008e9c:	20000a1c 	andcs	r0, r0, ip, lsl sl

08008ea0 <net::ip_handle(t_ip4*)>:
 8008ea0:	7b81      	ldrb	r1, [r0, #14]
 8008ea2:	7dc2      	ldrb	r2, [r0, #23]
 8008ea4:	2945      	cmp	r1, #69	@ 0x45
 8008ea6:	d121      	bne.n	8008eec <net::ip_handle(t_ip4*)+0x4c>
 8008ea8:	3a01      	subs	r2, #1
 8008eaa:	b508      	push	{r3, lr}
 8008eac:	2a10      	cmp	r2, #16
 8008eae:	d80a      	bhi.n	8008ec6 <net::ip_handle(t_ip4*)+0x26>
 8008eb0:	e8df f002 	tbb	[pc, r2]
 8008eb4:	0909120e 	stmdbeq	r9, {r1, r2, r3, r9, ip}
 8008eb8:	09091609 	stmdbeq	r9, {r0, r3, r9, sl, ip}
 8008ebc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec4:	bd08000a 	stclt	0, cr0, [r8, #-40]	@ 0xffffffd8
 8008ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ecc:	f7ff bf1c 	b.w	8008d08 <net::udp_handle(t_udp*)>
 8008ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ed4:	f000 b80e 	b.w	8008ef4 <net::icmp_handle(t_icmp*)>
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008edc:	f7ff bb6c 	b.w	80085b8 <net::igmp_handle(t_igmp*)>
 8008ee0:	f7ff fc02 	bl	80086e8 <net::tcp_handle(t_tcp*)>
 8008ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ee8:	f7ff bbd8 	b.w	800869c <net::tcp_run()>
 8008eec:	2a02      	cmp	r2, #2
 8008eee:	d0f5      	beq.n	8008edc <net::ip_handle(t_ip4*)+0x3c>
 8008ef0:	4770      	bx	lr
 8008ef2:	bf00      	nop

08008ef4 <net::icmp_handle(t_icmp*)>:
 8008ef4:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 8008ef8:	2b08      	cmp	r3, #8
 8008efa:	d000      	beq.n	8008efe <net::icmp_handle(t_icmp*)+0xa>
 8008efc:	4770      	bx	lr
 8008efe:	f890 3023 	ldrb.w	r3, [r0, #35]	@ 0x23
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1fa      	bne.n	8008efc <net::icmp_handle(t_icmp*)+0x8>
 8008f06:	f100 0c06 	add.w	ip, r0, #6
 8008f0a:	4603      	mov	r3, r0
 8008f0c:	4662      	mov	r2, ip
 8008f0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	459c      	cmp	ip, r3
 8008f18:	d1f9      	bne.n	8008f0e <net::icmp_handle(t_icmp*)+0x1a>
 8008f1a:	4a14      	ldr	r2, [pc, #80]	@ (8008f6c <net::icmp_handle(t_icmp*)+0x78>)
 8008f1c:	f100 0c0c 	add.w	ip, r0, #12
 8008f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f24:	f803 1b01 	strb.w	r1, [r3], #1
 8008f28:	4563      	cmp	r3, ip
 8008f2a:	d1f9      	bne.n	8008f20 <net::icmp_handle(t_icmp*)+0x2c>
 8008f2c:	8a43      	ldrh	r3, [r0, #18]
 8008f2e:	4a10      	ldr	r2, [pc, #64]	@ (8008f70 <net::icmp_handle(t_icmp*)+0x7c>)
 8008f30:	f8d0 101e 	ldr.w	r1, [r0, #30]
 8008f34:	f8d0 c01a 	ldr.w	ip, [r0, #26]
 8008f38:	f8c0 c01e 	str.w	ip, [r0, #30]
 8008f3c:	43db      	mvns	r3, r3
 8008f3e:	8243      	strh	r3, [r0, #18]
 8008f40:	6913      	ldr	r3, [r2, #16]
 8008f42:	428b      	cmp	r3, r1
 8008f44:	8a01      	ldrh	r1, [r0, #16]
 8008f46:	bf18      	it	ne
 8008f48:	6813      	ldrne	r3, [r2, #0]
 8008f4a:	f8c0 301a 	str.w	r3, [r0, #26]
 8008f4e:	ba49      	rev16	r1, r1
 8008f50:	2300      	movs	r3, #0
 8008f52:	b289      	uxth	r1, r1
 8008f54:	7603      	strb	r3, [r0, #24]
 8008f56:	7643      	strb	r3, [r0, #25]
 8008f58:	f880 3022 	strb.w	r3, [r0, #34]	@ 0x22
 8008f5c:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8008f60:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8008f64:	310e      	adds	r1, #14
 8008f66:	f005 bdb1 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 8008f6a:	bf00      	nop
 8008f6c:	200009e0 	andcs	r0, r0, r0, ror #19
 8008f70:	200009cc 	andcs	r0, r0, ip, asr #19

08008f74 <__aeabi_d2f>:
 8008f74:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008f78:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8008f7c:	bf24      	itt	cs
 8008f7e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8008f82:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8008f86:	d90d      	bls.n	8008fa4 <__aeabi_d2f+0x30>
 8008f88:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8008f8c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008f90:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008f94:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8008f98:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008f9c:	bf08      	it	eq
 8008f9e:	f020 0001 	biceq.w	r0, r0, #1
 8008fa2:	4770      	bx	lr
 8008fa4:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8008fa8:	d121      	bne.n	8008fee <__aeabi_d2f+0x7a>
 8008faa:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8008fae:	bfbc      	itt	lt
 8008fb0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8008fb4:	4770      	bxlt	lr
 8008fb6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8008fba:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008fbe:	f1c2 0218 	rsb	r2, r2, #24
 8008fc2:	f1c2 0c20 	rsb	ip, r2, #32
 8008fc6:	fa10 f30c 	lsls.w	r3, r0, ip
 8008fca:	fa20 f002 	lsr.w	r0, r0, r2
 8008fce:	bf18      	it	ne
 8008fd0:	f040 0001 	orrne.w	r0, r0, #1
 8008fd4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008fd8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008fdc:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008fe0:	ea40 000c 	orr.w	r0, r0, ip
 8008fe4:	fa23 f302 	lsr.w	r3, r3, r2
 8008fe8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008fec:	e7cc      	b.n	8008f88 <__aeabi_d2f+0x14>
 8008fee:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008ff2:	d107      	bne.n	8009004 <__aeabi_d2f+0x90>
 8008ff4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008ff8:	bf1e      	ittt	ne
 8008ffa:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8008ffe:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8009002:	4770      	bxne	lr
 8009004:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8009008:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800900c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8009010:	4770      	bx	lr
 8009012:	bf00      	nop

08009014 <Reset_Handler>:
 8009014:	490f      	ldr	r1, [pc, #60]	@ (8009054 <ZeroBSSLoop+0x1e>)
 8009016:	4a10      	ldr	r2, [pc, #64]	@ (8009058 <ZeroBSSLoop+0x22>)
 8009018:	4b10      	ldr	r3, [pc, #64]	@ (800905c <ZeroBSSLoop+0x26>)
 800901a:	1a5b      	subs	r3, r3, r1
 800901c:	d005      	beq.n	800902a <ZeroBSS>

0800901e <CopyDataLoop>:
 800901e:	f812 4b01 	ldrb.w	r4, [r2], #1
 8009022:	f801 4b01 	strb.w	r4, [r1], #1
 8009026:	3b01      	subs	r3, #1
 8009028:	dcf9      	bgt.n	800901e <CopyDataLoop>

0800902a <ZeroBSS>:
 800902a:	4a0d      	ldr	r2, [pc, #52]	@ (8009060 <ZeroBSSLoop+0x2a>)
 800902c:	4b0d      	ldr	r3, [pc, #52]	@ (8009064 <ZeroBSSLoop+0x2e>)
 800902e:	eba3 0302 	sub.w	r3, r3, r2
 8009032:	f04f 0400 	mov.w	r4, #0

08009036 <ZeroBSSLoop>:
 8009036:	f842 4b04 	str.w	r4, [r2], #4
 800903a:	3b04      	subs	r3, #4
 800903c:	dcfb      	bgt.n	8009036 <ZeroBSSLoop>
 800903e:	f008 f9c5 	bl	80113cc <stack_debug_init>
 8009042:	f008 fa27 	bl	8011494 <SystemInit>
 8009046:	f00a f8eb 	bl	8013220 <__libc_init_array>
 800904a:	f000 fa35 	bl	80094b8 <main>
 800904e:	4770      	bx	lr
 8009050:	bf00      	nop
 8009052:	00000000 	andeq	r0, r0, r0
 8009056:	767c2000 	ldrbtvc	r2, [ip], -r0
 800905a:	00740801 	rsbseq	r0, r4, r1, lsl #16
 800905e:	00742000 	rsbseq	r2, r4, r0
 8009062:	48742000 	ldmdami	r4!, {sp}^
 8009066:	 	ldrb	r2, [lr, r0]!

08009068 <ADC_IRQHandler>:
 8009068:	e7fe      	b.n	8009068 <ADC_IRQHandler>

0800906a <HardFault_Handler>:
 800906a:	f01e 0f04 	tst.w	lr, #4
 800906e:	bf0c      	ite	eq
 8009070:	f3ef 8008 	mrseq	r0, MSP
 8009074:	f3ef 8009 	mrsne	r0, PSP
 8009078:	4671      	mov	r1, lr
 800907a:	f000 b801 	b.w	8009080 <hardfault_handler>
 800907e:	4770      	bx	lr

08009080 <hardfault_handler>:
 8009080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009084:	4d2f      	ldr	r5, [pc, #188]	@ (8009144 <hardfault_handler+0xc4>)
 8009086:	b087      	sub	sp, #28
 8009088:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 800908a:	9301      	str	r3, [sp, #4]
 800908c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800908e:	9302      	str	r3, [sp, #8]
 8009090:	e9d0 9303 	ldrd	r9, r3, [r0, #12]
 8009094:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 8009096:	9303      	str	r3, [sp, #12]
 8009098:	e9d0 ba01 	ldrd	fp, sl, [r0, #4]
 800909c:	69c3      	ldr	r3, [r0, #28]
 800909e:	9304      	str	r3, [sp, #16]
 80090a0:	e9d0 7605 	ldrd	r7, r6, [r0, #20]
 80090a4:	4688      	mov	r8, r1
 80090a6:	6801      	ldr	r1, [r0, #0]
 80090a8:	4827      	ldr	r0, [pc, #156]	@ (8009148 <hardfault_handler+0xc8>)
 80090aa:	9105      	str	r1, [sp, #20]
 80090ac:	f00a fbe0 	bl	8013870 <printf>
 80090b0:	4826      	ldr	r0, [pc, #152]	@ (800914c <hardfault_handler+0xcc>)
 80090b2:	f00a fbdd 	bl	8013870 <printf>
 80090b6:	9905      	ldr	r1, [sp, #20]
 80090b8:	4825      	ldr	r0, [pc, #148]	@ (8009150 <hardfault_handler+0xd0>)
 80090ba:	f00a fbd9 	bl	8013870 <printf>
 80090be:	4659      	mov	r1, fp
 80090c0:	4824      	ldr	r0, [pc, #144]	@ (8009154 <hardfault_handler+0xd4>)
 80090c2:	f00a fbd5 	bl	8013870 <printf>
 80090c6:	4651      	mov	r1, sl
 80090c8:	4823      	ldr	r0, [pc, #140]	@ (8009158 <hardfault_handler+0xd8>)
 80090ca:	f00a fbd1 	bl	8013870 <printf>
 80090ce:	4649      	mov	r1, r9
 80090d0:	4822      	ldr	r0, [pc, #136]	@ (800915c <hardfault_handler+0xdc>)
 80090d2:	f00a fbcd 	bl	8013870 <printf>
 80090d6:	9903      	ldr	r1, [sp, #12]
 80090d8:	4821      	ldr	r0, [pc, #132]	@ (8009160 <hardfault_handler+0xe0>)
 80090da:	f00a fbc9 	bl	8013870 <printf>
 80090de:	4639      	mov	r1, r7
 80090e0:	4820      	ldr	r0, [pc, #128]	@ (8009164 <hardfault_handler+0xe4>)
 80090e2:	f00a fbc5 	bl	8013870 <printf>
 80090e6:	4631      	mov	r1, r6
 80090e8:	481f      	ldr	r0, [pc, #124]	@ (8009168 <hardfault_handler+0xe8>)
 80090ea:	f00a fbc1 	bl	8013870 <printf>
 80090ee:	9904      	ldr	r1, [sp, #16]
 80090f0:	481e      	ldr	r0, [pc, #120]	@ (800916c <hardfault_handler+0xec>)
 80090f2:	f00a fbbd 	bl	8013870 <printf>
 80090f6:	481e      	ldr	r0, [pc, #120]	@ (8009170 <hardfault_handler+0xf0>)
 80090f8:	f00a fbba 	bl	8013870 <printf>
 80090fc:	4621      	mov	r1, r4
 80090fe:	481d      	ldr	r0, [pc, #116]	@ (8009174 <hardfault_handler+0xf4>)
 8009100:	f00a fbb6 	bl	8013870 <printf>
 8009104:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 8009106:	481c      	ldr	r0, [pc, #112]	@ (8009178 <hardfault_handler+0xf8>)
 8009108:	f00a fbb2 	bl	8013870 <printf>
 800910c:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 800910e:	481b      	ldr	r0, [pc, #108]	@ (800917c <hardfault_handler+0xfc>)
 8009110:	f00a fbae 	bl	8013870 <printf>
 8009114:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 8009116:	481a      	ldr	r0, [pc, #104]	@ (8009180 <hardfault_handler+0x100>)
 8009118:	f00a fbaa 	bl	8013870 <printf>
 800911c:	0622      	lsls	r2, r4, #24
 800911e:	d503      	bpl.n	8009128 <hardfault_handler+0xa8>
 8009120:	9902      	ldr	r1, [sp, #8]
 8009122:	4818      	ldr	r0, [pc, #96]	@ (8009184 <hardfault_handler+0x104>)
 8009124:	f00a fba4 	bl	8013870 <printf>
 8009128:	0423      	lsls	r3, r4, #16
 800912a:	d503      	bpl.n	8009134 <hardfault_handler+0xb4>
 800912c:	9901      	ldr	r1, [sp, #4]
 800912e:	4816      	ldr	r0, [pc, #88]	@ (8009188 <hardfault_handler+0x108>)
 8009130:	f00a fb9e 	bl	8013870 <printf>
 8009134:	4815      	ldr	r0, [pc, #84]	@ (800918c <hardfault_handler+0x10c>)
 8009136:	f00a fb9b 	bl	8013870 <printf>
 800913a:	4815      	ldr	r0, [pc, #84]	@ (8009190 <hardfault_handler+0x110>)
 800913c:	4641      	mov	r1, r8
 800913e:	f00a fb97 	bl	8013870 <printf>
 8009142:	e7fe      	b.n	8009142 <hardfault_handler+0xc2>
 8009144:	e000ed00 	and	lr, r0, r0, lsl #26
 8009148:	08013dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, ip, sp}
 800914c:	08013ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp}
 8009150:	08013ded 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, sp}
 8009154:	08013df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8009158:	08013e03 	stmdaeq	r1, {r0, r1, r9, sl, fp, ip, sp}
 800915c:	08013e0e 	stmdaeq	r1, {r1, r2, r3, r9, sl, fp, ip, sp}
 8009160:	08013e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, ip, sp}
 8009164:	08013e24 	stmdaeq	r1, {r2, r5, r9, sl, fp, ip, sp}
 8009168:	08013e2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 800916c:	08013e3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, fp, ip, sp}
 8009170:	08013e45 	stmdaeq	r1, {r0, r2, r6, r9, sl, fp, ip, sp}
 8009174:	08013e51 	stmdaeq	r1, {r0, r4, r6, r9, sl, fp, ip, sp}
 8009178:	08013e5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, sl, fp, ip, sp}
 800917c:	08013e69 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, fp, ip, sp}
 8009180:	08013e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, ip, sp}
 8009184:	08013e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip, sp}
 8009188:	08013e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, ip, sp}
 800918c:	08013e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, sp}
 8009190:	08013ea2 	stmdaeq	r1, {r1, r5, r7, r9, sl, fp, ip, sp}

08009194 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8009194:	b430      	push	{r4, r5}
 8009196:	b160      	cbz	r0, 80091b2 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8009198:	6845      	ldr	r5, [r0, #4]
 800919a:	2300      	movs	r3, #0
 800919c:	5cd4      	ldrb	r4, [r2, r3]
 800919e:	b11c      	cbz	r4, 80091a8 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 80091a0:	1c5c      	adds	r4, r3, #1
 80091a2:	429d      	cmp	r5, r3
 80091a4:	4623      	mov	r3, r4
 80091a6:	d8f9      	bhi.n	800919c <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 80091a8:	6804      	ldr	r4, [r0, #0]
 80091aa:	69e4      	ldr	r4, [r4, #28]
 80091ac:	46a4      	mov	ip, r4
 80091ae:	bc30      	pop	{r4, r5}
 80091b0:	4760      	bx	ip
 80091b2:	bc30      	pop	{r4, r5}
 80091b4:	4770      	bx	lr

080091b6 <memcpy.isra.0>:
 80091b6:	440a      	add	r2, r1
 80091b8:	4291      	cmp	r1, r2
 80091ba:	d100      	bne.n	80091be <memcpy.isra.0+0x8>
 80091bc:	4770      	bx	lr
 80091be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80091c2:	f800 3b01 	strb.w	r3, [r0], #1
 80091c6:	e7f7      	b.n	80091b8 <memcpy.isra.0+0x2>

080091c8 <net::dhcp_run()>:
 80091c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80091ca:	4b0c      	ldr	r3, [pc, #48]	@ (80091fc <net::dhcp_run()+0x34>)
 80091cc:	6a1c      	ldr	r4, [r3, #32]
 80091ce:	b19c      	cbz	r4, 80091f8 <net::dhcp_run()+0x30>
 80091d0:	a902      	add	r1, sp, #8
 80091d2:	6820      	ldr	r0, [r4, #0]
 80091d4:	f10d 0306 	add.w	r3, sp, #6
 80091d8:	aa03      	add	r2, sp, #12
 80091da:	f004 ff01 	bl	800dfe0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 80091de:	4601      	mov	r1, r0
 80091e0:	b150      	cbz	r0, 80091f8 <net::dhcp_run()+0x30>
 80091e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80091e6:	2b43      	cmp	r3, #67	@ 0x43
 80091e8:	d106      	bne.n	80091f8 <net::dhcp_run()+0x30>
 80091ea:	9802      	ldr	r0, [sp, #8]
 80091ec:	6863      	ldr	r3, [r4, #4]
 80091ee:	6842      	ldr	r2, [r0, #4]
 80091f0:	429a      	cmp	r2, r3
 80091f2:	d101      	bne.n	80091f8 <net::dhcp_run()+0x30>
 80091f4:	f004 f95c 	bl	800d4b0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
 80091f8:	b004      	add	sp, #16
 80091fa:	bd10      	pop	{r4, pc}
 80091fc:	200009cc 	andcs	r0, r0, ip, asr #19

08009200 <Display::Printf(unsigned long, char const*, ...)>:
 8009200:	b40c      	push	{r2, r3}
 8009202:	b570      	push	{r4, r5, r6, lr}
 8009204:	6984      	ldr	r4, [r0, #24]
 8009206:	b08a      	sub	sp, #40	@ 0x28
 8009208:	4605      	mov	r5, r0
 800920a:	460e      	mov	r6, r1
 800920c:	b174      	cbz	r4, 800922c <Display::Printf(unsigned long, char const*, ...)+0x2c>
 800920e:	ab0f      	add	r3, sp, #60	@ 0x3c
 8009210:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009212:	9301      	str	r3, [sp, #4]
 8009214:	2120      	movs	r1, #32
 8009216:	a802      	add	r0, sp, #8
 8009218:	f00a fb6a 	bl	80138f0 <vsnprintf>
 800921c:	4604      	mov	r4, r0
 800921e:	69a8      	ldr	r0, [r5, #24]
 8009220:	6803      	ldr	r3, [r0, #0]
 8009222:	aa02      	add	r2, sp, #8
 8009224:	69dd      	ldr	r5, [r3, #28]
 8009226:	4631      	mov	r1, r6
 8009228:	4623      	mov	r3, r4
 800922a:	47a8      	blx	r5
 800922c:	4620      	mov	r0, r4
 800922e:	b00a      	add	sp, #40	@ 0x28
 8009230:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009234:	b002      	add	sp, #8
 8009236:	4770      	bx	lr

08009238 <Display::TextStatus(char const*, unsigned long)>:
 8009238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800923c:	4604      	mov	r4, r0
 800923e:	6980      	ldr	r0, [r0, #24]
 8009240:	460e      	mov	r6, r1
 8009242:	4615      	mov	r5, r2
 8009244:	b1c8      	cbz	r0, 800927a <Display::TextStatus(char const*, unsigned long)+0x42>
 8009246:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800924a:	6803      	ldr	r3, [r0, #0]
 800924c:	f108 39ff 	add.w	r9, r8, #4294967295	@ 0xffffffff
 8009250:	6a1b      	ldr	r3, [r3, #32]
 8009252:	464a      	mov	r2, r9
 8009254:	2100      	movs	r1, #0
 8009256:	4798      	blx	r3
 8009258:	f04f 0a00 	mov.w	sl, #0
 800925c:	3f01      	subs	r7, #1
 800925e:	45ba      	cmp	sl, r7
 8009260:	69a0      	ldr	r0, [r4, #24]
 8009262:	d312      	bcc.n	800928a <Display::TextStatus(char const*, unsigned long)+0x52>
 8009264:	b120      	cbz	r0, 8009270 <Display::TextStatus(char const*, unsigned long)+0x38>
 8009266:	6803      	ldr	r3, [r0, #0]
 8009268:	464a      	mov	r2, r9
 800926a:	6a1b      	ldr	r3, [r3, #32]
 800926c:	2100      	movs	r1, #0
 800926e:	4798      	blx	r3
 8009270:	69a0      	ldr	r0, [r4, #24]
 8009272:	4632      	mov	r2, r6
 8009274:	4641      	mov	r1, r8
 8009276:	f7ff ff8d 	bl	8009194 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 800927a:	1c6b      	adds	r3, r5, #1
 800927c:	d00d      	beq.n	800929a <Display::TextStatus(char const*, unsigned long)+0x62>
 800927e:	4631      	mov	r1, r6
 8009280:	4628      	mov	r0, r5
 8009282:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009286:	f007 be51 	b.w	8010f2c <console_status>
 800928a:	b118      	cbz	r0, 8009294 <Display::TextStatus(char const*, unsigned long)+0x5c>
 800928c:	6803      	ldr	r3, [r0, #0]
 800928e:	2120      	movs	r1, #32
 8009290:	695b      	ldr	r3, [r3, #20]
 8009292:	4798      	blx	r3
 8009294:	f10a 0a01 	add.w	sl, sl, #1
 8009298:	e7e1      	b.n	800925e <Display::TextStatus(char const*, unsigned long)+0x26>
 800929a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080092a0 <Display::SetSleep(bool)>:
 80092a0:	b538      	push	{r3, r4, r5, lr}
 80092a2:	4604      	mov	r4, r0
 80092a4:	6980      	ldr	r0, [r0, #24]
 80092a6:	460d      	mov	r5, r1
 80092a8:	b138      	cbz	r0, 80092ba <Display::SetSleep(bool)+0x1a>
 80092aa:	6803      	ldr	r3, [r0, #0]
 80092ac:	7561      	strb	r1, [r4, #21]
 80092ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80092b0:	4798      	blx	r3
 80092b2:	b915      	cbnz	r5, 80092ba <Display::SetSleep(bool)+0x1a>
 80092b4:	4b01      	ldr	r3, [pc, #4]	@ (80092bc <Display::SetSleep(bool)+0x1c>)
 80092b6:	681b      	ldr	r3, [r3, #0]
 80092b8:	6063      	str	r3, [r4, #4]
 80092ba:	bd38      	pop	{r3, r4, r5, pc}
 80092bc:	20004830 	andcs	r4, r0, r0, lsr r8

080092c0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 80092c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092c4:	790c      	ldrb	r4, [r1, #4]
 80092c6:	f890 3052 	ldrb.w	r3, [r0, #82]	@ 0x52
 80092ca:	6809      	ldr	r1, [r1, #0]
 80092cc:	2c20      	cmp	r4, #32
 80092ce:	b086      	sub	sp, #24
 80092d0:	4605      	mov	r5, r0
 80092d2:	bf28      	it	cs
 80092d4:	2420      	movcs	r4, #32
 80092d6:	b313      	cbz	r3, 800931e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x5e>
 80092d8:	f100 0820 	add.w	r8, r0, #32
 80092dc:	4622      	mov	r2, r4
 80092de:	4640      	mov	r0, r8
 80092e0:	f7ff ff69 	bl	80091b6 <memcpy.isra.0>
 80092e4:	2700      	movs	r7, #0
 80092e6:	f885 4050 	strb.w	r4, [r5, #80]	@ 0x50
 80092ea:	2501      	movs	r5, #1
 80092ec:	e9cd 5701 	strd	r5, r7, [sp, #4]
 80092f0:	4e0e      	ldr	r6, [pc, #56]	@ (800932c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6c>)
 80092f2:	9400      	str	r4, [sp, #0]
 80092f4:	6830      	ldr	r0, [r6, #0]
 80092f6:	f88d 4017 	strb.w	r4, [sp, #23]
 80092fa:	4643      	mov	r3, r8
 80092fc:	2204      	movs	r2, #4
 80092fe:	2109      	movs	r1, #9
 8009300:	f006 fab0 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009304:	e9cd 5701 	strd	r5, r7, [sp, #4]
 8009308:	9500      	str	r5, [sp, #0]
 800930a:	6830      	ldr	r0, [r6, #0]
 800930c:	f10d 0317 	add.w	r3, sp, #23
 8009310:	2224      	movs	r2, #36	@ 0x24
 8009312:	2109      	movs	r1, #9
 8009314:	f006 faa6 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009318:	b006      	add	sp, #24
 800931a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800931e:	4622      	mov	r2, r4
 8009320:	f7ff ff49 	bl	80091b6 <memcpy.isra.0>
 8009324:	f885 4051 	strb.w	r4, [r5, #81]	@ 0x51
 8009328:	e7f6      	b.n	8009318 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x58>
 800932a:	bf00      	nop
 800932c:	20000a78 	andcs	r0, r0, r8, ror sl

08009330 <RDMDeviceResponder::~RDMDeviceResponder()>:
 8009330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009332:	4b17      	ldr	r3, [pc, #92]	@ (8009390 <RDMDeviceResponder::~RDMDeviceResponder()+0x60>)
 8009334:	6003      	str	r3, [r0, #0]
 8009336:	2500      	movs	r5, #0
 8009338:	4604      	mov	r4, r0
 800933a:	462e      	mov	r6, r5
 800933c:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 8009340:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8009342:	429d      	cmp	r5, r3
 8009344:	d30e      	bcc.n	8009364 <RDMDeviceResponder::~RDMDeviceResponder()+0x34>
 8009346:	b108      	cbz	r0, 800934c <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>
 8009348:	f00a fcce 	bl	8013ce8 <operator delete[](void*)>
 800934c:	2500      	movs	r5, #0
 800934e:	462e      	mov	r6, r5
 8009350:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009354:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009356:	429d      	cmp	r5, r3
 8009358:	d30f      	bcc.n	800937a <RDMDeviceResponder::~RDMDeviceResponder()+0x4a>
 800935a:	b108      	cbz	r0, 8009360 <RDMDeviceResponder::~RDMDeviceResponder()+0x30>
 800935c:	f00a fcc4 	bl	8013ce8 <operator delete[](void*)>
 8009360:	4620      	mov	r0, r4
 8009362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009364:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8009368:	00af      	lsls	r7, r5, #2
 800936a:	b110      	cbz	r0, 8009372 <RDMDeviceResponder::~RDMDeviceResponder()+0x42>
 800936c:	6803      	ldr	r3, [r0, #0]
 800936e:	685b      	ldr	r3, [r3, #4]
 8009370:	4798      	blx	r3
 8009372:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8009374:	3501      	adds	r5, #1
 8009376:	51de      	str	r6, [r3, r7]
 8009378:	e7e0      	b.n	800933c <RDMDeviceResponder::~RDMDeviceResponder()+0xc>
 800937a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800937e:	b128      	cbz	r0, 800938c <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>
 8009380:	6803      	ldr	r3, [r0, #0]
 8009382:	685b      	ldr	r3, [r3, #4]
 8009384:	4798      	blx	r3
 8009386:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8009388:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800938c:	3501      	adds	r5, #1
 800938e:	e7df      	b.n	8009350 <RDMDeviceResponder::~RDMDeviceResponder()+0x20>
 8009390:	08016cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, sp, lr}

08009394 <RDMNetDevice::~RDMNetDevice()>:
 8009394:	b510      	push	{r4, lr}
 8009396:	4b07      	ldr	r3, [pc, #28]	@ (80093b4 <RDMNetDevice::~RDMNetDevice()+0x20>)
 8009398:	6003      	str	r3, [r0, #0]
 800939a:	4604      	mov	r4, r0
 800939c:	4806      	ldr	r0, [pc, #24]	@ (80093b8 <RDMNetDevice::~RDMNetDevice()+0x24>)
 800939e:	f004 f9c9 	bl	800d734 <net::igmp_leave(unsigned long)>
 80093a2:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 80093a6:	f004 fdf7 	bl	800df98 <net::udp_end(unsigned short)>
 80093aa:	4620      	mov	r0, r4
 80093ac:	f7ff ffc0 	bl	8009330 <RDMDeviceResponder::~RDMDeviceResponder()>
 80093b0:	4620      	mov	r0, r4
 80093b2:	bd10      	pop	{r4, pc}
 80093b4:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}
 80093b8:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>

080093bc <RDMNetDevice::~RDMNetDevice()>:
 80093bc:	b510      	push	{r4, lr}
 80093be:	4604      	mov	r4, r0
 80093c0:	f7ff ffe8 	bl	8009394 <RDMNetDevice::~RDMNetDevice()>
 80093c4:	4620      	mov	r0, r4
 80093c6:	21ac      	movs	r1, #172	@ 0xac
 80093c8:	f00a fc90 	bl	8013cec <operator delete(void*, unsigned int)>
 80093cc:	4620      	mov	r0, r4
 80093ce:	bd10      	pop	{r4, pc}

080093d0 <RDMDeviceResponder::~RDMDeviceResponder()>:
 80093d0:	b510      	push	{r4, lr}
 80093d2:	4604      	mov	r4, r0
 80093d4:	f7ff ffac 	bl	8009330 <RDMDeviceResponder::~RDMDeviceResponder()>
 80093d8:	4620      	mov	r0, r4
 80093da:	21a0      	movs	r1, #160	@ 0xa0
 80093dc:	f00a fc86 	bl	8013cec <operator delete(void*, unsigned int)>
 80093e0:	4620      	mov	r0, r4
 80093e2:	bd10      	pop	{r4, pc}

080093e4 <RDMNetDevice::Print()>:
 80093e4:	b510      	push	{r4, lr}
 80093e6:	b090      	sub	sp, #64	@ 0x40
 80093e8:	2300      	movs	r3, #0
 80093ea:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
 80093ee:	4b18      	ldr	r3, [pc, #96]	@ (8009450 <RDMNetDevice::Print()+0x6c>)
 80093f0:	6819      	ldr	r1, [r3, #0]
 80093f2:	2210      	movs	r2, #16
 80093f4:	4411      	add	r1, r2
 80093f6:	4604      	mov	r4, r0
 80093f8:	a802      	add	r0, sp, #8
 80093fa:	f7ff fedc 	bl	80091b6 <memcpy.isra.0>
 80093fe:	a906      	add	r1, sp, #24
 8009400:	a802      	add	r0, sp, #8
 8009402:	f00a fb0f 	bl	8013a24 <uuid_unparse>
 8009406:	4813      	ldr	r0, [pc, #76]	@ (8009454 <RDMNetDevice::Print()+0x70>)
 8009408:	f00a fa32 	bl	8013870 <printf>
 800940c:	a906      	add	r1, sp, #24
 800940e:	4812      	ldr	r0, [pc, #72]	@ (8009458 <RDMNetDevice::Print()+0x74>)
 8009410:	f00a fa2e 	bl	8013870 <printf>
 8009414:	4811      	ldr	r0, [pc, #68]	@ (800945c <RDMNetDevice::Print()+0x78>)
 8009416:	f00a fa2b 	bl	8013870 <printf>
 800941a:	f241 51c1 	movw	r1, #5569	@ 0x15c1
 800941e:	4810      	ldr	r0, [pc, #64]	@ (8009460 <RDMNetDevice::Print()+0x7c>)
 8009420:	f00a fa26 	bl	8013870 <printf>
 8009424:	2385      	movs	r3, #133	@ 0x85
 8009426:	9300      	str	r3, [sp, #0]
 8009428:	22ff      	movs	r2, #255	@ 0xff
 800942a:	23fa      	movs	r3, #250	@ 0xfa
 800942c:	21ef      	movs	r1, #239	@ 0xef
 800942e:	480d      	ldr	r0, [pc, #52]	@ (8009464 <RDMNetDevice::Print()+0x80>)
 8009430:	f00a fa1e 	bl	8013870 <printf>
 8009434:	2386      	movs	r3, #134	@ 0x86
 8009436:	9300      	str	r3, [sp, #0]
 8009438:	22ff      	movs	r2, #255	@ 0xff
 800943a:	23fa      	movs	r3, #250	@ 0xfa
 800943c:	21ef      	movs	r1, #239	@ 0xef
 800943e:	480a      	ldr	r0, [pc, #40]	@ (8009468 <RDMNetDevice::Print()+0x84>)
 8009440:	f00a fa16 	bl	8013870 <printf>
 8009444:	4620      	mov	r0, r4
 8009446:	f001 fd73 	bl	800af30 <RDMDeviceResponder::Print()>
 800944a:	b010      	add	sp, #64	@ 0x40
 800944c:	bd10      	pop	{r4, pc}
 800944e:	bf00      	nop
 8009450:	20000b7c 	andcs	r0, r0, ip, ror fp
 8009454:	08013eb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, fp, ip, sp}
 8009458:	08013ebe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, fp, ip, sp}
 800945c:	08013ec9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sl, fp, ip, sp}
 8009460:	08013ed6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, sl, fp, ip, sp}
 8009464:	08013ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, ip, sp}
 8009468:	08013f13 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, fp, ip, sp}

0800946c <rdm::device::responder::factorydefaults()>:
 800946c:	b510      	push	{r4, lr}
 800946e:	4b0d      	ldr	r3, [pc, #52]	@ (80094a4 <rdm::device::responder::factorydefaults()+0x38>)
 8009470:	4c0d      	ldr	r4, [pc, #52]	@ (80094a8 <rdm::device::responder::factorydefaults()+0x3c>)
 8009472:	6818      	ldr	r0, [r3, #0]
 8009474:	b086      	sub	sp, #24
 8009476:	2100      	movs	r1, #0
 8009478:	f000 fb70 	bl	8009b5c <RemoteConfig::SetDisable(bool)>
 800947c:	6820      	ldr	r0, [r4, #0]
 800947e:	2109      	movs	r1, #9
 8009480:	f006 f9de 	bl	800f840 <ConfigStore::ResetSetList(configstore::Store)>
 8009484:	2301      	movs	r3, #1
 8009486:	2100      	movs	r1, #0
 8009488:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800948c:	9300      	str	r3, [sp, #0]
 800948e:	f88d 3017 	strb.w	r3, [sp, #23]
 8009492:	6820      	ldr	r0, [r4, #0]
 8009494:	f10d 0317 	add.w	r3, sp, #23
 8009498:	2214      	movs	r2, #20
 800949a:	f006 f9e3 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800949e:	b006      	add	sp, #24
 80094a0:	bd10      	pop	{r4, pc}
 80094a2:	bf00      	nop
 80094a4:	2000009c 	mulcs	r0, ip, r0
 80094a8:	20000a78 	andcs	r0, r0, r8, ror sl

080094ac <Hardware::RebootHandler()>:
 80094ac:	4b01      	ldr	r3, [pc, #4]	@ (80094b4 <Hardware::RebootHandler()+0x8>)
 80094ae:	6818      	ldr	r0, [r3, #0]
 80094b0:	f007 bdfc 	b.w	80110ac <HwClock::SysToHc()>
 80094b4:	20000b94 	mulcs	r0, r4, fp

080094b8 <main>:
 80094b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80094bc:	f5ad 7d54 	sub.w	sp, sp, #848	@ 0x350
 80094c0:	a878      	add	r0, sp, #480	@ 0x1e0
 80094c2:	f007 fa91 	bl	80109e8 <Hardware::Hardware()>
 80094c6:	a837      	add	r0, sp, #220	@ 0xdc
 80094c8:	f005 fe24 	bl	800f114 <DisplayUdf::DisplayUdf()>
 80094cc:	a806      	add	r0, sp, #24
 80094ce:	f006 f93b 	bl	800f748 <ConfigStore::ConfigStore()>
 80094d2:	499e      	ldr	r1, [pc, #632]	@ (800974c <main+0x294>)
 80094d4:	2203      	movs	r2, #3
 80094d6:	a837      	add	r0, sp, #220	@ 0xdc
 80094d8:	f7ff feae 	bl	8009238 <Display::TextStatus(char const*, unsigned long)>
 80094dc:	a8a6      	add	r0, sp, #664	@ 0x298
 80094de:	f003 fac7 	bl	800ca70 <Network::Network()>
 80094e2:	a807      	add	r0, sp, #28
 80094e4:	f003 f876 	bl	800c5d4 <MDNS::MDNS()>
 80094e8:	4999      	ldr	r1, [pc, #612]	@ (8009750 <main+0x298>)
 80094ea:	2202      	movs	r2, #2
 80094ec:	a837      	add	r0, sp, #220	@ 0xdc
 80094ee:	f7ff fea3 	bl	8009238 <Display::TextStatus(char const*, unsigned long)>
 80094f2:	4b98      	ldr	r3, [pc, #608]	@ (8009754 <main+0x29c>)
 80094f4:	4a98      	ldr	r2, [pc, #608]	@ (8009758 <main+0x2a0>)
 80094f6:	4999      	ldr	r1, [pc, #612]	@ (800975c <main+0x2a4>)
 80094f8:	a808      	add	r0, sp, #32
 80094fa:	f007 f841 	bl	8010580 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80094fe:	4898      	ldr	r0, [pc, #608]	@ (8009760 <main+0x2a8>)
 8009500:	f00a fa0b 	bl	801391a <puts>
 8009504:	4997      	ldr	r1, [pc, #604]	@ (8009764 <main+0x2ac>)
 8009506:	4898      	ldr	r0, [pc, #608]	@ (8009768 <main+0x2b0>)
 8009508:	f00a f9b2 	bl	8013870 <printf>
 800950c:	2400      	movs	r4, #0
 800950e:	202c      	movs	r0, #44	@ 0x2c
 8009510:	944b      	str	r4, [sp, #300]	@ 0x12c
 8009512:	f00a fbed 	bl	8013cf0 <operator new(unsigned int)>
 8009516:	4a95      	ldr	r2, [pc, #596]	@ (800976c <main+0x2b4>)
 8009518:	6044      	str	r4, [r0, #4]
 800951a:	4603      	mov	r3, r0
 800951c:	6284      	str	r4, [r0, #40]	@ 0x28
 800951e:	f100 0528 	add.w	r5, r0, #40	@ 0x28
 8009522:	f823 4b08 	strh.w	r4, [r3], #8
 8009526:	4614      	mov	r4, r2
 8009528:	f812 1b01 	ldrb.w	r1, [r2], #1
 800952c:	b109      	cbz	r1, 8009532 <main+0x7a>
 800952e:	42ab      	cmp	r3, r5
 8009530:	d124      	bne.n	800957c <main+0xc4>
 8009532:	2301      	movs	r3, #1
 8009534:	461a      	mov	r2, r3
 8009536:	904c      	str	r0, [sp, #304]	@ 0x130
 8009538:	a94c      	add	r1, sp, #304	@ 0x130
 800953a:	a84d      	add	r0, sp, #308	@ 0x134
 800953c:	f001 fbf2 	bl	800ad24 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>
 8009540:	2100      	movs	r1, #0
 8009542:	a875      	add	r0, sp, #468	@ 0x1d4
 8009544:	f001 fdf2 	bl	800b12c <RDMHandler::RDMHandler(bool)>
 8009548:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 800954c:	f004 fd0e 	bl	800df6c <net::udp_begin(unsigned short)>
 8009550:	4b87      	ldr	r3, [pc, #540]	@ (8009770 <main+0x2b8>)
 8009552:	6018      	str	r0, [r3, #0]
 8009554:	4887      	ldr	r0, [pc, #540]	@ (8009774 <main+0x2bc>)
 8009556:	f004 f8cf 	bl	800d6f8 <net::igmp_join(unsigned long)>
 800955a:	9a4b      	ldr	r2, [sp, #300]	@ 0x12c
 800955c:	4b86      	ldr	r3, [pc, #536]	@ (8009778 <main+0x2c0>)
 800955e:	934d      	str	r3, [sp, #308]	@ 0x134
 8009560:	b192      	cbz	r2, 8009588 <main+0xd0>
 8009562:	4611      	mov	r1, r2
 8009564:	460b      	mov	r3, r1
 8009566:	3101      	adds	r1, #1
 8009568:	7818      	ldrb	r0, [r3, #0]
 800956a:	2800      	cmp	r0, #0
 800956c:	d1fa      	bne.n	8009564 <main+0xac>
 800956e:	1a9b      	subs	r3, r3, r2
 8009570:	b2db      	uxtb	r3, r3
 8009572:	2b20      	cmp	r3, #32
 8009574:	922d      	str	r2, [sp, #180]	@ 0xb4
 8009576:	bf28      	it	cs
 8009578:	2320      	movcs	r3, #32
 800957a:	e007      	b.n	800958c <main+0xd4>
 800957c:	f803 1b01 	strb.w	r1, [r3], #1
 8009580:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8009582:	3101      	adds	r1, #1
 8009584:	6281      	str	r1, [r0, #40]	@ 0x28
 8009586:	e7cf      	b.n	8009528 <main+0x70>
 8009588:	942d      	str	r4, [sp, #180]	@ 0xb4
 800958a:	2310      	movs	r3, #16
 800958c:	a92d      	add	r1, sp, #180	@ 0xb4
 800958e:	a84e      	add	r0, sp, #312	@ 0x138
 8009590:	f88d 30b8 	strb.w	r3, [sp, #184]	@ 0xb8
 8009594:	f7ff fe94 	bl	80092c0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8009598:	a84d      	add	r0, sp, #308	@ 0x134
 800959a:	f001 fc1d 	bl	800add8 <RDMDeviceResponder::Init()>
 800959e:	a84d      	add	r0, sp, #308	@ 0x134
 80095a0:	f7ff ff20 	bl	80093e4 <RDMNetDevice::Print()>
 80095a4:	2105      	movs	r1, #5
 80095a6:	2300      	movs	r3, #0
 80095a8:	2206      	movs	r2, #6
 80095aa:	a82d      	add	r0, sp, #180	@ 0xb4
 80095ac:	f000 fa82 	bl	8009ab4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
 80095b0:	a80a      	add	r0, sp, #40	@ 0x28
 80095b2:	f000 fcf7 	bl	8009fa4 <RemoteConfigParams::RemoteConfigParams()>
 80095b6:	a80a      	add	r0, sp, #40	@ 0x28
 80095b8:	f000 fcfc 	bl	8009fb4 <RemoteConfigParams::Load()>
 80095bc:	a92d      	add	r1, sp, #180	@ 0xb4
 80095be:	a80a      	add	r0, sp, #40	@ 0x28
 80095c0:	f000 fe06 	bl	800a1d0 <RemoteConfigParams::Set(RemoteConfig*)>
 80095c4:	a806      	add	r0, sp, #24
 80095c6:	f006 f9a3 	bl	800f910 <ConfigStore::Flash()>
 80095ca:	2800      	cmp	r0, #0
 80095cc:	d1fa      	bne.n	80095c4 <main+0x10c>
 80095ce:	a807      	add	r0, sp, #28
 80095d0:	f003 f984 	bl	800c8dc <MDNS::Print()>
 80095d4:	4969      	ldr	r1, [pc, #420]	@ (800977c <main+0x2c4>)
 80095d6:	a837      	add	r0, sp, #220	@ 0xdc
 80095d8:	f005 fdae 	bl	800f138 <DisplayUdf::SetTitle(char const*, ...)>
 80095dc:	2207      	movs	r2, #7
 80095de:	2102      	movs	r1, #2
 80095e0:	a837      	add	r0, sp, #220	@ 0xdc
 80095e2:	f005 fdbc 	bl	800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 80095e6:	2202      	movs	r2, #2
 80095e8:	2103      	movs	r1, #3
 80095ea:	a837      	add	r0, sp, #220	@ 0xdc
 80095ec:	f005 fdb7 	bl	800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 80095f0:	2212      	movs	r2, #18
 80095f2:	2104      	movs	r1, #4
 80095f4:	a837      	add	r0, sp, #220	@ 0xdc
 80095f6:	f005 fdb2 	bl	800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 80095fa:	2203      	movs	r2, #3
 80095fc:	2105      	movs	r1, #5
 80095fe:	a837      	add	r0, sp, #220	@ 0xdc
 8009600:	f005 fdad 	bl	800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009604:	a812      	add	r0, sp, #72	@ 0x48
 8009606:	f005 fe73 	bl	800f2f0 <DisplayUdfParams::DisplayUdfParams()>
 800960a:	a812      	add	r0, sp, #72	@ 0x48
 800960c:	f005 fe7e 	bl	800f30c <DisplayUdfParams::Load()>
 8009610:	a937      	add	r1, sp, #220	@ 0xdc
 8009612:	a812      	add	r0, sp, #72	@ 0x48
 8009614:	f005 ffa2 	bl	800f55c <DisplayUdfParams::Set(DisplayUdf*)>
 8009618:	a837      	add	r0, sp, #220	@ 0xdc
 800961a:	f005 fdbb 	bl	800f194 <DisplayUdf::Show()>
 800961e:	4a58      	ldr	r2, [pc, #352]	@ (8009780 <main+0x2c8>)
 8009620:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8009622:	2106      	movs	r1, #6
 8009624:	f7ff fdb6 	bl	8009194 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8009628:	2202      	movs	r2, #2
 800962a:	4956      	ldr	r1, [pc, #344]	@ (8009784 <main+0x2cc>)
 800962c:	a837      	add	r0, sp, #220	@ 0xdc
 800962e:	f7ff fe03 	bl	8009238 <Display::TextStatus(char const*, unsigned long)>
 8009632:	2102      	movs	r1, #2
 8009634:	a878      	add	r0, sp, #480	@ 0x1e0
 8009636:	f007 f88a 	bl	801074e <Hardware::SetMode(hardware::ledblink::Mode)>
 800963a:	2102      	movs	r1, #2
 800963c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8009640:	f008 fa5e 	bl	8011b00 <fwdgt_config>
 8009644:	2801      	cmp	r0, #1
 8009646:	bf0c      	ite	eq
 8009648:	2301      	moveq	r3, #1
 800964a:	2300      	movne	r3, #0
 800964c:	f88d 3200 	strb.w	r3, [sp, #512]	@ 0x200
 8009650:	d101      	bne.n	8009656 <main+0x19e>
 8009652:	f008 fa45 	bl	8011ae0 <fwdgt_enable>
 8009656:	2000      	movs	r0, #0
 8009658:	f00a fb14 	bl	8013c84 <time>
 800965c:	4e4a      	ldr	r6, [pc, #296]	@ (8009788 <main+0x2d0>)
 800965e:	4f4b      	ldr	r7, [pc, #300]	@ (800978c <main+0x2d4>)
 8009660:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 80097a8 <main+0x2f0>
 8009664:	4605      	mov	r5, r0
 8009666:	f008 fa43 	bl	8011af0 <fwdgt_counter_reload>
 800966a:	f7fe fffb 	bl	8008664 <net::net_handle()>
 800966e:	f004 fd91 	bl	800e194 <net::link_status_read()>
 8009672:	9aa6      	ldr	r2, [sp, #664]	@ 0x298
 8009674:	4290      	cmp	r0, r2
 8009676:	d002      	beq.n	800967e <main+0x1c6>
 8009678:	90a6      	str	r0, [sp, #664]	@ 0x298
 800967a:	f004 fd57 	bl	800e12c <net::link_handle_change(net::Link)>
 800967e:	f7ff fda3 	bl	80091c8 <net::dhcp_run()>
 8009682:	4643      	mov	r3, r8
 8009684:	4a42      	ldr	r2, [pc, #264]	@ (8009790 <main+0x2d8>)
 8009686:	4940      	ldr	r1, [pc, #256]	@ (8009788 <main+0x2d0>)
 8009688:	6838      	ldr	r0, [r7, #0]
 800968a:	f004 fca9 	bl	800dfe0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 800968e:	4b41      	ldr	r3, [pc, #260]	@ (8009794 <main+0x2dc>)
 8009690:	280b      	cmp	r0, #11
 8009692:	6018      	str	r0, [r3, #0]
 8009694:	d90a      	bls.n	80096ac <main+0x1f4>
 8009696:	6833      	ldr	r3, [r6, #0]
 8009698:	789a      	ldrb	r2, [r3, #2]
 800969a:	f012 0f78 	tst.w	r2, #120	@ 0x78
 800969e:	d105      	bne.n	80096ac <main+0x1f4>
 80096a0:	8899      	ldrh	r1, [r3, #4]
 80096a2:	ba49      	rev16	r1, r1
 80096a4:	b289      	uxth	r1, r1
 80096a6:	a807      	add	r0, sp, #28
 80096a8:	f003 f84a 	bl	800c740 <MDNS::HandleQuestions(unsigned long)>
 80096ac:	4c3a      	ldr	r4, [pc, #232]	@ (8009798 <main+0x2e0>)
 80096ae:	4830      	ldr	r0, [pc, #192]	@ (8009770 <main+0x2b8>)
 80096b0:	4a3a      	ldr	r2, [pc, #232]	@ (800979c <main+0x2e4>)
 80096b2:	6800      	ldr	r0, [r0, #0]
 80096b4:	f10d 0322 	add.w	r3, sp, #34	@ 0x22
 80096b8:	4621      	mov	r1, r4
 80096ba:	f004 fc91 	bl	800dfe0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 80096be:	2841      	cmp	r0, #65	@ 0x41
 80096c0:	d908      	bls.n	80096d4 <main+0x21c>
 80096c2:	6823      	ldr	r3, [r4, #0]
 80096c4:	f8d3 302a 	ldr.w	r3, [r3, #42]	@ 0x2a
 80096c8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80096cc:	d035      	beq.n	800973a <main+0x282>
 80096ce:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80096d2:	d036      	beq.n	8009742 <main+0x28a>
 80096d4:	f89d 30c0 	ldrb.w	r3, [sp, #192]	@ 0xc0
 80096d8:	b9d3      	cbnz	r3, 8009710 <main+0x258>
 80096da:	9c36      	ldr	r4, [sp, #216]	@ 0xd8
 80096dc:	aa24      	add	r2, sp, #144	@ 0x90
 80096de:	f104 011c 	add.w	r1, r4, #28
 80096e2:	69a0      	ldr	r0, [r4, #24]
 80096e4:	f004 fbb0 	bl	800de48 <net::tcp_read(long, unsigned char const**, unsigned long&)>
 80096e8:	4601      	mov	r1, r0
 80096ea:	b128      	cbz	r0, 80096f8 <main+0x240>
 80096ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80096ee:	69e2      	ldr	r2, [r4, #28]
 80096f0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80096f4:	f001 f9d2 	bl	800aa9c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
 80096f8:	4929      	ldr	r1, [pc, #164]	@ (80097a0 <main+0x2e8>)
 80096fa:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80096fc:	ab24      	add	r3, sp, #144	@ 0x90
 80096fe:	aa33      	add	r2, sp, #204	@ 0xcc
 8009700:	f004 fc6e 	bl	800dfe0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009704:	2803      	cmp	r0, #3
 8009706:	9034      	str	r0, [sp, #208]	@ 0xd0
 8009708:	d902      	bls.n	8009710 <main+0x258>
 800970a:	a82d      	add	r0, sp, #180	@ 0xb4
 800970c:	f000 fb56 	bl	8009dbc <RemoteConfig::HandleRequest()>
 8009710:	a806      	add	r0, sp, #24
 8009712:	f006 f8fd 	bl	800f910 <ConfigStore::Flash()>
 8009716:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 8009718:	4c22      	ldr	r4, [pc, #136]	@ (80097a4 <main+0x2ec>)
 800971a:	2a00      	cmp	r2, #0
 800971c:	d04c      	beq.n	80097b8 <main+0x300>
 800971e:	f89d 30f1 	ldrb.w	r3, [sp, #241]	@ 0xf1
 8009722:	2b00      	cmp	r3, #0
 8009724:	d142      	bne.n	80097ac <main+0x2f4>
 8009726:	6823      	ldr	r3, [r4, #0]
 8009728:	9938      	ldr	r1, [sp, #224]	@ 0xe0
 800972a:	1a5b      	subs	r3, r3, r1
 800972c:	429a      	cmp	r2, r3
 800972e:	d243      	bcs.n	80097b8 <main+0x300>
 8009730:	2101      	movs	r1, #1
 8009732:	a837      	add	r0, sp, #220	@ 0xdc
 8009734:	f7ff fdb4 	bl	80092a0 <Display::SetSleep(bool)>
 8009738:	e03e      	b.n	80097b8 <main+0x300>
 800973a:	a875      	add	r0, sp, #468	@ 0x1d4
 800973c:	f002 f83c 	bl	800b7b8 <LLRPDevice::HandleRequestMessage()>
 8009740:	e7c8      	b.n	80096d4 <main+0x21c>
 8009742:	a875      	add	r0, sp, #468	@ 0x1d4
 8009744:	f002 f8d0 	bl	800b8e8 <LLRPDevice::HandleRdmCommand()>
 8009748:	e7c4      	b.n	80096d4 <main+0x21c>
 800974a:	bf00      	nop
 800974c:	08016f36 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, fp, sp, lr}
 8009750:	08016f26 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, fp, sp, lr}
 8009754:	08013f36 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp}
 8009758:	08013f3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp}
 800975c:	0801492c 	stmdaeq	r1, {r2, r3, r5, r8, fp, lr}
 8009760:	20000b24 	andcs	r0, r0, r4, lsr #22
 8009764:	08013f4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, fp, ip, sp}
 8009768:	08013f63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, fp, ip, sp}
 800976c:	08014930 	stmdaeq	r1, {r4, r5, r8, fp, lr}
 8009770:	20000760 	andcs	r0, r0, r0, ror #14
 8009774:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 8009778:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}
 800977c:	08013f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, ip, sp}
 8009780:	08013f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, ip, sp}
 8009784:	08013f8e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, fp, ip, sp}
 8009788:	2000076c 	andcs	r0, r0, ip, ror #14
 800978c:	2000077c 	andcs	r0, r0, ip, ror r7
 8009790:	20000778 	andcs	r0, r0, r8, ror r7
 8009794:	20000770 	andcs	r0, r0, r0, ror r7
 8009798:	20000758 	andcs	r0, r0, r8, asr r7
 800979c:	2000075c 	andcs	r0, r0, ip, asr r7
 80097a0:	20000074 	andcs	r0, r0, r4, ror r0
 80097a4:	20004830 	andcs	r4, r0, r0, lsr r8
 80097a8:	20000774 	andcs	r0, r0, r4, ror r7
 80097ac:	4b28      	ldr	r3, [pc, #160]	@ (8009850 <main+0x398>)
 80097ae:	f8d3 1810 	ldr.w	r1, [r3, #2064]	@ 0x810
 80097b2:	f411 5100 	ands.w	r1, r1, #8192	@ 0x2000
 80097b6:	d0bc      	beq.n	8009732 <main+0x27a>
 80097b8:	f8d4 a000 	ldr.w	sl, [r4]
 80097bc:	f04f 0900 	mov.w	r9, #0
 80097c0:	ac78      	add	r4, sp, #480	@ 0x1e0
 80097c2:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 80097c4:	4599      	cmp	r9, r3
 80097c6:	d336      	bcc.n	8009836 <main+0x37e>
 80097c8:	f007 fe54 	bl	8011474 <stack_debug_run()>
 80097cc:	2000      	movs	r0, #0
 80097ce:	f00a fa59 	bl	8013c84 <time>
 80097d2:	42a8      	cmp	r0, r5
 80097d4:	4604      	mov	r4, r0
 80097d6:	9009      	str	r0, [sp, #36]	@ 0x24
 80097d8:	d02b      	beq.n	8009832 <main+0x37a>
 80097da:	a809      	add	r0, sp, #36	@ 0x24
 80097dc:	f00a f992 	bl	8013b04 <localtime>
 80097e0:	2224      	movs	r2, #36	@ 0x24
 80097e2:	4601      	mov	r1, r0
 80097e4:	a81b      	add	r0, sp, #108	@ 0x6c
 80097e6:	f7ff fce6 	bl	80091b6 <memcpy.isra.0>
 80097ea:	4b1a      	ldr	r3, [pc, #104]	@ (8009854 <main+0x39c>)
 80097ec:	a924      	add	r1, sp, #144	@ 0x90
 80097ee:	6818      	ldr	r0, [r3, #0]
 80097f0:	f007 fab2 	bl	8010d58 <HwClock::RtcGet(tm*)>
 80097f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80097f6:	9304      	str	r3, [sp, #16]
 80097f8:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 80097fc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80097fe:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
 8009802:	9303      	str	r3, [sp, #12]
 8009804:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8009806:	4a14      	ldr	r2, [pc, #80]	@ (8009858 <main+0x3a0>)
 8009808:	f8cd 9000 	str.w	r9, [sp]
 800980c:	e9cd a301 	strd	sl, r3, [sp, #4]
 8009810:	2107      	movs	r1, #7
 8009812:	462b      	mov	r3, r5
 8009814:	a837      	add	r0, sp, #220	@ 0xdc
 8009816:	f7ff fcf3 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800981a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800981c:	9302      	str	r3, [sp, #8]
 800981e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8009820:	9301      	str	r3, [sp, #4]
 8009822:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8009824:	9300      	str	r3, [sp, #0]
 8009826:	480d      	ldr	r0, [pc, #52]	@ (800985c <main+0x3a4>)
 8009828:	4653      	mov	r3, sl
 800982a:	464a      	mov	r2, r9
 800982c:	4629      	mov	r1, r5
 800982e:	f00a f81f 	bl	8013870 <printf>
 8009832:	4625      	mov	r5, r4
 8009834:	e717      	b.n	8009666 <main+0x1ae>
 8009836:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009838:	459a      	cmp	sl, r3
 800983a:	d304      	bcc.n	8009846 <main+0x38e>
 800983c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800983e:	4798      	blx	r3
 8009840:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8009842:	4453      	add	r3, sl
 8009844:	6323      	str	r3, [r4, #48]	@ 0x30
 8009846:	f109 0901 	add.w	r9, r9, #1
 800984a:	3410      	adds	r4, #16
 800984c:	e7b9      	b.n	80097c2 <main+0x30a>
 800984e:	bf00      	nop
 8009850:	40020000 	andmi	r0, r2, r0
 8009854:	20000b94 	mulcs	r0, r4, fp
 8009858:	08013f9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp}
 800985c:	08013fbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp}

08009860 <RDMSoftwareVersion::GetVersion()>:
 8009860:	4800      	ldr	r0, [pc, #0]	@ (8009864 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009862:	4770      	bx	lr
 8009864:	08014941 	stmdaeq	r1, {r0, r6, r8, fp, lr}

08009868 <RDMSoftwareVersion::GetVersionLength()>:
 8009868:	2003      	movs	r0, #3
 800986a:	4770      	bx	lr

0800986c <RDMSoftwareVersion::GetVersionId()>:
 800986c:	4800      	ldr	r0, [pc, #0]	@ (8009870 <RDMSoftwareVersion::GetVersionId()+0x4>)
 800986e:	4770      	bx	lr
 8009870:	66eb16a6 	strbtvs	r1, [fp], r6, lsr #13

08009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
 8009874:	b430      	push	{r4, r5}
 8009876:	4d05      	ldr	r5, [pc, #20]	@ (800988c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x18>)
 8009878:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800987c:	682d      	ldr	r5, [r5, #0]
 800987e:	b11d      	cbz	r5, 8009888 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x14>
 8009880:	9402      	str	r4, [sp, #8]
 8009882:	bc30      	pop	{r4, r5}
 8009884:	f004 bbca 	b.w	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8009888:	bc30      	pop	{r4, r5}
 800988a:	4770      	bx	lr
 800988c:	200009cc 	andcs	r0, r0, ip, asr #19

08009890 <RemoteConfig::HandleDisplayGet()>:
 8009890:	4b0d      	ldr	r3, [pc, #52]	@ (80098c8 <RemoteConfig::HandleDisplayGet()+0x38>)
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009896:	7d59      	ldrb	r1, [r3, #21]
 8009898:	4d0c      	ldr	r5, [pc, #48]	@ (80098cc <RemoteConfig::HandleDisplayGet()+0x3c>)
 800989a:	4a0d      	ldr	r2, [pc, #52]	@ (80098d0 <RemoteConfig::HandleDisplayGet()+0x40>)
 800989c:	4b0d      	ldr	r3, [pc, #52]	@ (80098d4 <RemoteConfig::HandleDisplayGet()+0x44>)
 800989e:	4604      	mov	r4, r0
 80098a0:	2900      	cmp	r1, #0
 80098a2:	bf08      	it	eq
 80098a4:	4613      	moveq	r3, r2
 80098a6:	6828      	ldr	r0, [r5, #0]
 80098a8:	4a0b      	ldr	r2, [pc, #44]	@ (80098d8 <RemoteConfig::HandleDisplayGet()+0x48>)
 80098aa:	f240 518b 	movw	r1, #1419	@ 0x58b
 80098ae:	f00a f807 	bl	80138c0 <snprintf>
 80098b2:	f642 1305 	movw	r3, #10501	@ 0x2905
 80098b6:	9300      	str	r3, [sp, #0]
 80098b8:	4602      	mov	r2, r0
 80098ba:	69a3      	ldr	r3, [r4, #24]
 80098bc:	6829      	ldr	r1, [r5, #0]
 80098be:	6960      	ldr	r0, [r4, #20]
 80098c0:	f7ff ffd8 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 80098c4:	b003      	add	sp, #12
 80098c6:	bd30      	pop	{r4, r5, pc}
 80098c8:	20000a90 	mulcs	r0, r0, sl
 80098cc:	20000074 	andcs	r0, r0, r4, ror r0
 80098d0:	08013fda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp}
 80098d4:	08014101 	stmdaeq	r1, {r0, r8, lr}
 80098d8:	08013fdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp}

080098dc <RemoteConfig::HandleUptime()>:
 80098dc:	7bc3      	ldrb	r3, [r0, #15]
 80098de:	b1ab      	cbz	r3, 800990c <RemoteConfig::HandleUptime()+0x30>
 80098e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80098e2:	4b0b      	ldr	r3, [pc, #44]	@ (8009910 <RemoteConfig::HandleUptime()+0x34>)
 80098e4:	4d0b      	ldr	r5, [pc, #44]	@ (8009914 <RemoteConfig::HandleUptime()+0x38>)
 80098e6:	685b      	ldr	r3, [r3, #4]
 80098e8:	4a0b      	ldr	r2, [pc, #44]	@ (8009918 <RemoteConfig::HandleUptime()+0x3c>)
 80098ea:	4604      	mov	r4, r0
 80098ec:	f240 518b 	movw	r1, #1419	@ 0x58b
 80098f0:	6828      	ldr	r0, [r5, #0]
 80098f2:	f009 ffe5 	bl	80138c0 <snprintf>
 80098f6:	f642 1305 	movw	r3, #10501	@ 0x2905
 80098fa:	9300      	str	r3, [sp, #0]
 80098fc:	4602      	mov	r2, r0
 80098fe:	69a3      	ldr	r3, [r4, #24]
 8009900:	6829      	ldr	r1, [r5, #0]
 8009902:	6960      	ldr	r0, [r4, #20]
 8009904:	f7ff ffb6 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009908:	b003      	add	sp, #12
 800990a:	bd30      	pop	{r4, r5, pc}
 800990c:	4770      	bx	lr
 800990e:	bf00      	nop
 8009910:	20004828 	andcs	r4, r0, r8, lsr #16
 8009914:	20000074 	andcs	r0, r0, r4, ror r0
 8009918:	08013fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp}

0800991c <RemoteConfig::HandleVersion()>:
 800991c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800991e:	4d0a      	ldr	r5, [pc, #40]	@ (8009948 <RemoteConfig::HandleVersion()+0x2c>)
 8009920:	4b0a      	ldr	r3, [pc, #40]	@ (800994c <RemoteConfig::HandleVersion()+0x30>)
 8009922:	4a0b      	ldr	r2, [pc, #44]	@ (8009950 <RemoteConfig::HandleVersion()+0x34>)
 8009924:	4604      	mov	r4, r0
 8009926:	f240 518b 	movw	r1, #1419	@ 0x58b
 800992a:	6828      	ldr	r0, [r5, #0]
 800992c:	f009 ffc8 	bl	80138c0 <snprintf>
 8009930:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009934:	9300      	str	r3, [sp, #0]
 8009936:	4602      	mov	r2, r0
 8009938:	69a3      	ldr	r3, [r4, #24]
 800993a:	6829      	ldr	r1, [r5, #0]
 800993c:	6960      	ldr	r0, [r4, #20]
 800993e:	f7ff ff99 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009942:	b003      	add	sp, #12
 8009944:	bd30      	pop	{r4, r5, pc}
 8009946:	bf00      	nop
 8009948:	20000074 	andcs	r0, r0, r4, ror r0
 800994c:	20000b24 	andcs	r0, r0, r4, lsr #22
 8009950:	08013ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp}

08009954 <RemoteConfig::HandleTftpGet()>:
 8009954:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009956:	4604      	mov	r4, r0
 8009958:	4d0d      	ldr	r5, [pc, #52]	@ (8009990 <RemoteConfig::HandleTftpGet()+0x3c>)
 800995a:	f000 fd0f 	bl	800a37c <RemoteConfig::PlatformHandleTftpGet()>
 800995e:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009962:	4a0c      	ldr	r2, [pc, #48]	@ (8009994 <RemoteConfig::HandleTftpGet()+0x40>)
 8009964:	4b0c      	ldr	r3, [pc, #48]	@ (8009998 <RemoteConfig::HandleTftpGet()+0x44>)
 8009966:	6828      	ldr	r0, [r5, #0]
 8009968:	2900      	cmp	r1, #0
 800996a:	bf18      	it	ne
 800996c:	4613      	movne	r3, r2
 800996e:	4a0b      	ldr	r2, [pc, #44]	@ (800999c <RemoteConfig::HandleTftpGet()+0x48>)
 8009970:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009974:	f009 ffa4 	bl	80138c0 <snprintf>
 8009978:	f642 1305 	movw	r3, #10501	@ 0x2905
 800997c:	9300      	str	r3, [sp, #0]
 800997e:	4602      	mov	r2, r0
 8009980:	69a3      	ldr	r3, [r4, #24]
 8009982:	6829      	ldr	r1, [r5, #0]
 8009984:	6960      	ldr	r0, [r4, #20]
 8009986:	f7ff ff75 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800998a:	b003      	add	sp, #12
 800998c:	bd30      	pop	{r4, r5, pc}
 800998e:	bf00      	nop
 8009990:	20000074 	andcs	r0, r0, r4, ror r0
 8009994:	08013fda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp}
 8009998:	08014101 	stmdaeq	r1, {r0, r8, lr}
 800999c:	08014001 	stmdaeq	r1, {r0, lr}

080099a0 <RemoteConfig::HandleList()>:
 80099a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099a4:	6801      	ldr	r1, [r0, #0]
 80099a6:	4a23      	ldr	r2, [pc, #140]	@ (8009a34 <RemoteConfig::HandleList()+0x94>)
 80099a8:	4b23      	ldr	r3, [pc, #140]	@ (8009a38 <RemoteConfig::HandleList()+0x98>)
 80099aa:	4604      	mov	r4, r0
 80099ac:	2012      	movs	r0, #18
 80099ae:	fb00 2201 	mla	r2, r0, r1, r2
 80099b2:	6860      	ldr	r0, [r4, #4]
 80099b4:	4921      	ldr	r1, [pc, #132]	@ (8009a3c <RemoteConfig::HandleList()+0x9c>)
 80099b6:	681d      	ldr	r5, [r3, #0]
 80099b8:	4b21      	ldr	r3, [pc, #132]	@ (8009a40 <RemoteConfig::HandleList()+0xa0>)
 80099ba:	f04f 0e0c 	mov.w	lr, #12
 80099be:	fb0e 1100 	mla	r1, lr, r0, r1
 80099c2:	4820      	ldr	r0, [pc, #128]	@ (8009a44 <RemoteConfig::HandleList()+0xa4>)
 80099c4:	681e      	ldr	r6, [r3, #0]
 80099c6:	f890 8009 	ldrb.w	r8, [r0, #9]
 80099ca:	f8d4 e008 	ldr.w	lr, [r4, #8]
 80099ce:	b2f3      	uxtb	r3, r6
 80099d0:	f3c6 2707 	ubfx	r7, r6, #8, #8
 80099d4:	f3c6 4c07 	ubfx	ip, r6, #16, #8
 80099d8:	b088      	sub	sp, #32
 80099da:	3507      	adds	r5, #7
 80099dc:	0e36      	lsrs	r6, r6, #24
 80099de:	f1b8 0f00 	cmp.w	r8, #0
 80099e2:	d019      	beq.n	8009a18 <RemoteConfig::HandleList()+0x78>
 80099e4:	3009      	adds	r0, #9
 80099e6:	e9cd 2103 	strd	r2, r1, [sp, #12]
 80099ea:	e9cd e005 	strd	lr, r0, [sp, #20]
 80099ee:	e9cd c601 	strd	ip, r6, [sp, #4]
 80099f2:	4a15      	ldr	r2, [pc, #84]	@ (8009a48 <RemoteConfig::HandleList()+0xa8>)
 80099f4:	9700      	str	r7, [sp, #0]
 80099f6:	f240 5184 	movw	r1, #1412	@ 0x584
 80099fa:	4628      	mov	r0, r5
 80099fc:	f009 ff60 	bl	80138c0 <snprintf>
 8009a00:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009a04:	9300      	str	r3, [sp, #0]
 8009a06:	4602      	mov	r2, r0
 8009a08:	69a3      	ldr	r3, [r4, #24]
 8009a0a:	6960      	ldr	r0, [r4, #20]
 8009a0c:	4629      	mov	r1, r5
 8009a0e:	f7ff ff31 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009a12:	b008      	add	sp, #32
 8009a14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a18:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8009a1c:	e9cd 6202 	strd	r6, r2, [sp, #8]
 8009a20:	e9cd 7c00 	strd	r7, ip, [sp]
 8009a24:	4a09      	ldr	r2, [pc, #36]	@ (8009a4c <RemoteConfig::HandleList()+0xac>)
 8009a26:	f240 5184 	movw	r1, #1412	@ 0x584
 8009a2a:	4628      	mov	r0, r5
 8009a2c:	f009 ff48 	bl	80138c0 <snprintf>
 8009a30:	e7e6      	b.n	8009a00 <RemoteConfig::HandleList()+0x60>
 8009a32:	bf00      	nop
 8009a34:	080149e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, fp, lr}
 8009a38:	20000074 	andcs	r0, r0, r4, ror r0
 8009a3c:	08014945 	stmdaeq	r1, {r0, r2, r6, r8, fp, lr}
 8009a40:	200009cc 	andcs	r0, r0, ip, asr #19
 8009a44:	20000078 	andcs	r0, r0, r8, ror r0
 8009a48:	0801400a 	stmdaeq	r1, {r1, r3, lr}
 8009a4c:	08014023 	stmdaeq	r1, {r0, r1, r5, lr}

08009a50 <RemoteConfig::HandleDisplaySet()>:
 8009a50:	b508      	push	{r3, lr}
 8009a52:	69c3      	ldr	r3, [r0, #28]
 8009a54:	2b09      	cmp	r3, #9
 8009a56:	d10a      	bne.n	8009a6e <RemoteConfig::HandleDisplaySet()+0x1e>
 8009a58:	4b05      	ldr	r3, [pc, #20]	@ (8009a70 <RemoteConfig::HandleDisplaySet()+0x20>)
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	7a59      	ldrb	r1, [r3, #9]
 8009a5e:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 8009a62:	4259      	negs	r1, r3
 8009a64:	4159      	adcs	r1, r3
 8009a66:	4b03      	ldr	r3, [pc, #12]	@ (8009a74 <RemoteConfig::HandleDisplaySet()+0x24>)
 8009a68:	6818      	ldr	r0, [r3, #0]
 8009a6a:	f7ff fc19 	bl	80092a0 <Display::SetSleep(bool)>
 8009a6e:	bd08      	pop	{r3, pc}
 8009a70:	20000074 	andcs	r0, r0, r4, ror r0
 8009a74:	20000a90 	mulcs	r0, r0, sl

08009a78 <RemoteConfig::HandleTftpSet()>:
 8009a78:	69c3      	ldr	r3, [r0, #28]
 8009a7a:	2b06      	cmp	r3, #6
 8009a7c:	d115      	bne.n	8009aaa <RemoteConfig::HandleTftpSet()+0x32>
 8009a7e:	b510      	push	{r4, lr}
 8009a80:	4b0a      	ldr	r3, [pc, #40]	@ (8009aac <RemoteConfig::HandleTftpSet()+0x34>)
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	799b      	ldrb	r3, [r3, #6]
 8009a86:	2b30      	cmp	r3, #48	@ 0x30
 8009a88:	bf14      	ite	ne
 8009a8a:	2301      	movne	r3, #1
 8009a8c:	2300      	moveq	r3, #0
 8009a8e:	4604      	mov	r4, r0
 8009a90:	f880 3020 	strb.w	r3, [r0, #32]
 8009a94:	d004      	beq.n	8009aa0 <RemoteConfig::HandleTftpSet()+0x28>
 8009a96:	4b06      	ldr	r3, [pc, #24]	@ (8009ab0 <RemoteConfig::HandleTftpSet()+0x38>)
 8009a98:	2100      	movs	r1, #0
 8009a9a:	6818      	ldr	r0, [r3, #0]
 8009a9c:	f7ff fc00 	bl	80092a0 <Display::SetSleep(bool)>
 8009aa0:	4620      	mov	r0, r4
 8009aa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009aa6:	f000 bc45 	b.w	800a334 <RemoteConfig::PlatformHandleTftpSet()>
 8009aaa:	4770      	bx	lr
 8009aac:	20000074 	andcs	r0, r0, r4, ror r0
 8009ab0:	20000a90 	mulcs	r0, r0, sl

08009ab4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
 8009ab4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ab6:	2500      	movs	r5, #0
 8009ab8:	4604      	mov	r4, r0
 8009aba:	e9c0 1200 	strd	r1, r2, [r0]
 8009abe:	6083      	str	r3, [r0, #8]
 8009ac0:	60c5      	str	r5, [r0, #12]
 8009ac2:	8205      	strh	r5, [r0, #16]
 8009ac4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8009ac8:	e9c4 0505 	strd	r0, r5, [r4, #20]
 8009acc:	4f13      	ldr	r7, [pc, #76]	@ (8009b1c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x68>)
 8009ace:	4814      	ldr	r0, [pc, #80]	@ (8009b20 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x6c>)
 8009ad0:	4e14      	ldr	r6, [pc, #80]	@ (8009b24 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x70>)
 8009ad2:	6004      	str	r4, [r0, #0]
 8009ad4:	6978      	ldr	r0, [r7, #20]
 8009ad6:	6030      	str	r0, [r6, #0]
 8009ad8:	8b38      	ldrh	r0, [r7, #24]
 8009ada:	61e5      	str	r5, [r4, #28]
 8009adc:	f884 5020 	strb.w	r5, [r4, #32]
 8009ae0:	6265      	str	r5, [r4, #36]	@ 0x24
 8009ae2:	80b0      	strh	r0, [r6, #4]
 8009ae4:	f642 1005 	movw	r0, #10501	@ 0x2905
 8009ae8:	71b1      	strb	r1, [r6, #6]
 8009aea:	71f2      	strb	r2, [r6, #7]
 8009aec:	7233      	strb	r3, [r6, #8]
 8009aee:	7275      	strb	r5, [r6, #9]
 8009af0:	f004 fa3c 	bl	800df6c <net::udp_begin(unsigned short)>
 8009af4:	6160      	str	r0, [r4, #20]
 8009af6:	480c      	ldr	r0, [pc, #48]	@ (8009b28 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x74>)
 8009af8:	9500      	str	r5, [sp, #0]
 8009afa:	462b      	mov	r3, r5
 8009afc:	462a      	mov	r2, r5
 8009afe:	4629      	mov	r1, r5
 8009b00:	6800      	ldr	r0, [r0, #0]
 8009b02:	f002 fdbd 	bl	800c680 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 8009b06:	2020      	movs	r0, #32
 8009b08:	f00a f8f2 	bl	8013cf0 <operator new(unsigned int)>
 8009b0c:	4605      	mov	r5, r0
 8009b0e:	f000 fc43 	bl	800a398 <HttpDaemon::HttpDaemon()>
 8009b12:	4620      	mov	r0, r4
 8009b14:	6265      	str	r5, [r4, #36]	@ 0x24
 8009b16:	b003      	add	sp, #12
 8009b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b1a:	bf00      	nop
 8009b1c:	200009cc 	andcs	r0, r0, ip, asr #19
 8009b20:	2000009c 	mulcs	r0, ip, r0
 8009b24:	20000078 	andcs	r0, r0, r8, ror r0
 8009b28:	20000768 	andcs	r0, r0, r8, ror #14

08009b2c <RemoteConfig::GetStringNode() const>:
 8009b2c:	4b03      	ldr	r3, [pc, #12]	@ (8009b3c <RemoteConfig::GetStringNode() const+0x10>)
 8009b2e:	7998      	ldrb	r0, [r3, #6]
 8009b30:	4b03      	ldr	r3, [pc, #12]	@ (8009b40 <RemoteConfig::GetStringNode() const+0x14>)
 8009b32:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 8009b36:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8009b3a:	4770      	bx	lr
 8009b3c:	20000078 	andcs	r0, r0, r8, ror r0
 8009b40:	080149e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, fp, lr}

08009b44 <RemoteConfig::GetStringOutput() const>:
 8009b44:	4b03      	ldr	r3, [pc, #12]	@ (8009b54 <RemoteConfig::GetStringOutput() const+0x10>)
 8009b46:	79d8      	ldrb	r0, [r3, #7]
 8009b48:	4b03      	ldr	r3, [pc, #12]	@ (8009b58 <RemoteConfig::GetStringOutput() const+0x14>)
 8009b4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8009b4e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8009b52:	4770      	bx	lr
 8009b54:	20000078 	andcs	r0, r0, r8, ror r0
 8009b58:	08014945 	stmdaeq	r1, {r0, r2, r6, r8, fp, lr}

08009b5c <RemoteConfig::SetDisable(bool)>:
 8009b5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009b5e:	7b06      	ldrb	r6, [r0, #12]
 8009b60:	4605      	mov	r5, r0
 8009b62:	b181      	cbz	r1, 8009b86 <RemoteConfig::SetDisable(bool)+0x2a>
 8009b64:	b96e      	cbnz	r6, 8009b82 <RemoteConfig::SetDisable(bool)+0x26>
 8009b66:	f642 1005 	movw	r0, #10501	@ 0x2905
 8009b6a:	f004 fa15 	bl	800df98 <net::udp_end(unsigned short)>
 8009b6e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8009b72:	616b      	str	r3, [r5, #20]
 8009b74:	4b0d      	ldr	r3, [pc, #52]	@ (8009bac <RemoteConfig::SetDisable(bool)+0x50>)
 8009b76:	4631      	mov	r1, r6
 8009b78:	6818      	ldr	r0, [r3, #0]
 8009b7a:	f002 fd65 	bl	800c648 <MDNS::ServiceRecordDelete(mdns::Services)>
 8009b7e:	2301      	movs	r3, #1
 8009b80:	732b      	strb	r3, [r5, #12]
 8009b82:	b002      	add	sp, #8
 8009b84:	bd70      	pop	{r4, r5, r6, pc}
 8009b86:	2e00      	cmp	r6, #0
 8009b88:	d0fb      	beq.n	8009b82 <RemoteConfig::SetDisable(bool)+0x26>
 8009b8a:	f642 1005 	movw	r0, #10501	@ 0x2905
 8009b8e:	460c      	mov	r4, r1
 8009b90:	f004 f9ec 	bl	800df6c <net::udp_begin(unsigned short)>
 8009b94:	6168      	str	r0, [r5, #20]
 8009b96:	4805      	ldr	r0, [pc, #20]	@ (8009bac <RemoteConfig::SetDisable(bool)+0x50>)
 8009b98:	9400      	str	r4, [sp, #0]
 8009b9a:	6800      	ldr	r0, [r0, #0]
 8009b9c:	4623      	mov	r3, r4
 8009b9e:	4622      	mov	r2, r4
 8009ba0:	4621      	mov	r1, r4
 8009ba2:	f002 fd6d 	bl	800c680 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 8009ba6:	732c      	strb	r4, [r5, #12]
 8009ba8:	e7eb      	b.n	8009b82 <RemoteConfig::SetDisable(bool)+0x26>
 8009baa:	bf00      	nop
 8009bac:	20000768 	andcs	r0, r0, r8, ror #14

08009bb0 <RemoteConfig::SetDisplayName(char const*)>:
 8009bb0:	b508      	push	{r3, lr}
 8009bb2:	4809      	ldr	r0, [pc, #36]	@ (8009bd8 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009bb4:	3901      	subs	r1, #1
 8009bb6:	2217      	movs	r2, #23
 8009bb8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009bbc:	b11b      	cbz	r3, 8009bc6 <RemoteConfig::SetDisplayName(char const*)+0x16>
 8009bbe:	3a01      	subs	r2, #1
 8009bc0:	f800 3b01 	strb.w	r3, [r0], #1
 8009bc4:	d1f8      	bne.n	8009bb8 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009bc6:	2100      	movs	r1, #0
 8009bc8:	f009 fb6e 	bl	80132a8 <memset>
 8009bcc:	4b03      	ldr	r3, [pc, #12]	@ (8009bdc <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009bce:	2200      	movs	r2, #0
 8009bd0:	f883 2020 	strb.w	r2, [r3, #32]
 8009bd4:	bd08      	pop	{r3, pc}
 8009bd6:	bf00      	nop
 8009bd8:	20000081 	andcs	r0, r0, r1, lsl #1
 8009bdc:	20000078 	andcs	r0, r0, r8, ror r0

08009be0 <RemoteConfig::HandleGet(void*, unsigned long)>:
 8009be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009be2:	4f29      	ldr	r7, [pc, #164]	@ (8009c88 <RemoteConfig::HandleGet(void*, unsigned long)+0xa8>)
 8009be4:	b085      	sub	sp, #20
 8009be6:	4604      	mov	r4, r0
 8009be8:	4616      	mov	r6, r2
 8009bea:	460d      	mov	r5, r1
 8009bec:	b9a9      	cbnz	r1, 8009c1a <RemoteConfig::HandleGet(void*, unsigned long)+0x3a>
 8009bee:	6839      	ldr	r1, [r7, #0]
 8009bf0:	f44f 63b1 	mov.w	r3, #1416	@ 0x588
 8009bf4:	aa03      	add	r2, sp, #12
 8009bf6:	3105      	adds	r1, #5
 8009bf8:	9303      	str	r3, [sp, #12]
 8009bfa:	f000 fb6f 	bl	800a2dc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 8009bfe:	1e03      	subs	r3, r0, #0
 8009c00:	da1b      	bge.n	8009c3a <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 8009c02:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009c06:	9300      	str	r3, [sp, #0]
 8009c08:	69a3      	ldr	r3, [r4, #24]
 8009c0a:	4920      	ldr	r1, [pc, #128]	@ (8009c8c <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 8009c0c:	6960      	ldr	r0, [r4, #20]
 8009c0e:	220b      	movs	r2, #11
 8009c10:	f7ff fe30 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009c14:	200c      	movs	r0, #12
 8009c16:	b005      	add	sp, #20
 8009c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c1a:	9203      	str	r2, [sp, #12]
 8009c1c:	aa03      	add	r2, sp, #12
 8009c1e:	6039      	str	r1, [r7, #0]
 8009c20:	f000 fb5c 	bl	800a2dc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 8009c24:	1e03      	subs	r3, r0, #0
 8009c26:	da08      	bge.n	8009c3a <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 8009c28:	2e0b      	cmp	r6, #11
 8009c2a:	4632      	mov	r2, r6
 8009c2c:	4917      	ldr	r1, [pc, #92]	@ (8009c8c <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 8009c2e:	bf28      	it	cs
 8009c30:	220b      	movcs	r2, #11
 8009c32:	4628      	mov	r0, r5
 8009c34:	f009 fb16 	bl	8013264 <memcpy>
 8009c38:	e7ec      	b.n	8009c14 <RemoteConfig::HandleGet(void*, unsigned long)+0x34>
 8009c3a:	4915      	ldr	r1, [pc, #84]	@ (8009c90 <RemoteConfig::HandleGet(void*, unsigned long)+0xb0>)
 8009c3c:	2218      	movs	r2, #24
 8009c3e:	4353      	muls	r3, r2
 8009c40:	18ca      	adds	r2, r1, r3
 8009c42:	58cb      	ldr	r3, [r1, r3]
 8009c44:	6852      	ldr	r2, [r2, #4]
 8009c46:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009c4a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009c4e:	07d2      	lsls	r2, r2, #31
 8009c50:	bf48      	it	mi
 8009c52:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009c56:	a903      	add	r1, sp, #12
 8009c58:	bf48      	it	mi
 8009c5a:	58d3      	ldrmi	r3, [r2, r3]
 8009c5c:	4798      	blx	r3
 8009c5e:	b955      	cbnz	r5, 8009c76 <RemoteConfig::HandleGet(void*, unsigned long)+0x96>
 8009c60:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009c64:	9300      	str	r3, [sp, #0]
 8009c66:	69a3      	ldr	r3, [r4, #24]
 8009c68:	9a03      	ldr	r2, [sp, #12]
 8009c6a:	6839      	ldr	r1, [r7, #0]
 8009c6c:	6960      	ldr	r0, [r4, #20]
 8009c6e:	f7ff fe01 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009c72:	9803      	ldr	r0, [sp, #12]
 8009c74:	e7cf      	b.n	8009c16 <RemoteConfig::HandleGet(void*, unsigned long)+0x36>
 8009c76:	9a03      	ldr	r2, [sp, #12]
 8009c78:	6839      	ldr	r1, [r7, #0]
 8009c7a:	42b2      	cmp	r2, r6
 8009c7c:	bf28      	it	cs
 8009c7e:	4632      	movcs	r2, r6
 8009c80:	4628      	mov	r0, r5
 8009c82:	f009 fafa 	bl	801327a <memmove>
 8009c86:	e7f4      	b.n	8009c72 <RemoteConfig::HandleGet(void*, unsigned long)+0x92>
 8009c88:	20000074 	andcs	r0, r0, r4, ror r0
 8009c8c:	08014039 	stmdaeq	r1, {r0, r3, r4, r5, lr}
 8009c90:	08014b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, lr}

08009c94 <RemoteConfig::HandleGetNoParams()>:
 8009c94:	2200      	movs	r2, #0
 8009c96:	4611      	mov	r1, r2
 8009c98:	f7ff bfa2 	b.w	8009be0 <RemoteConfig::HandleGet(void*, unsigned long)>

08009c9c <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
 8009c9c:	b510      	push	{r4, lr}
 8009c9e:	b08a      	sub	sp, #40	@ 0x28
 8009ca0:	a802      	add	r0, sp, #8
 8009ca2:	460c      	mov	r4, r1
 8009ca4:	f000 f97e 	bl	8009fa4 <RemoteConfigParams::RemoteConfigParams()>
 8009ca8:	4a05      	ldr	r2, [pc, #20]	@ (8009cc0 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)+0x24>)
 8009caa:	9400      	str	r4, [sp, #0]
 8009cac:	6812      	ldr	r2, [r2, #0]
 8009cae:	f240 538c 	movw	r3, #1420	@ 0x58c
 8009cb2:	2100      	movs	r1, #0
 8009cb4:	a802      	add	r0, sp, #8
 8009cb6:	f000 f9ed 	bl	800a094 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
 8009cba:	b00a      	add	sp, #40	@ 0x28
 8009cbc:	bd10      	pop	{r4, pc}
 8009cbe:	bf00      	nop
 8009cc0:	20000074 	andcs	r0, r0, r4, ror r0

08009cc4 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
 8009cc4:	b513      	push	{r0, r1, r4, lr}
 8009cc6:	a801      	add	r0, sp, #4
 8009cc8:	460c      	mov	r4, r1
 8009cca:	f005 fe97 	bl	800f9fc <EnvParams::EnvParams()>
 8009cce:	4905      	ldr	r1, [pc, #20]	@ (8009ce4 <RemoteConfig::HandleGetEnvTxt(unsigned long&)+0x20>)
 8009cd0:	4623      	mov	r3, r4
 8009cd2:	6809      	ldr	r1, [r1, #0]
 8009cd4:	f240 528c 	movw	r2, #1420	@ 0x58c
 8009cd8:	a801      	add	r0, sp, #4
 8009cda:	f005 feed 	bl	800fab8 <EnvParams::Builder(char*, unsigned long, unsigned long&)>
 8009cde:	b002      	add	sp, #8
 8009ce0:	bd10      	pop	{r4, pc}
 8009ce2:	bf00      	nop
 8009ce4:	20000074 	andcs	r0, r0, r4, ror r0

08009ce8 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
 8009ce8:	b510      	push	{r4, lr}
 8009cea:	b09a      	sub	sp, #104	@ 0x68
 8009cec:	a802      	add	r0, sp, #8
 8009cee:	460c      	mov	r4, r1
 8009cf0:	f004 fb16 	bl	800e320 <NetworkParams::NetworkParams()>
 8009cf4:	4a05      	ldr	r2, [pc, #20]	@ (8009d0c <RemoteConfig::HandleGetNetworkTxt(unsigned long&)+0x24>)
 8009cf6:	9400      	str	r4, [sp, #0]
 8009cf8:	6812      	ldr	r2, [r2, #0]
 8009cfa:	f240 538c 	movw	r3, #1420	@ 0x58c
 8009cfe:	2100      	movs	r1, #0
 8009d00:	a802      	add	r0, sp, #8
 8009d02:	f004 fbf9 	bl	800e4f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
 8009d06:	b01a      	add	sp, #104	@ 0x68
 8009d08:	bd10      	pop	{r4, pc}
 8009d0a:	bf00      	nop
 8009d0c:	20000074 	andcs	r0, r0, r4, ror r0

08009d10 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)>:
 8009d10:	b510      	push	{r4, lr}
 8009d12:	b08c      	sub	sp, #48	@ 0x30
 8009d14:	a803      	add	r0, sp, #12
 8009d16:	460c      	mov	r4, r1
 8009d18:	f005 faea 	bl	800f2f0 <DisplayUdfParams::DisplayUdfParams()>
 8009d1c:	4a05      	ldr	r2, [pc, #20]	@ (8009d34 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)+0x24>)
 8009d1e:	9400      	str	r4, [sp, #0]
 8009d20:	6812      	ldr	r2, [r2, #0]
 8009d22:	f240 538c 	movw	r3, #1420	@ 0x58c
 8009d26:	2100      	movs	r1, #0
 8009d28:	a803      	add	r0, sp, #12
 8009d2a:	f005 fb83 	bl	800f434 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>
 8009d2e:	b00c      	add	sp, #48	@ 0x30
 8009d30:	bd10      	pop	{r4, pc}
 8009d32:	bf00      	nop
 8009d34:	20000074 	andcs	r0, r0, r4, ror r0

08009d38 <RemoteConfig::HandleSet(void*, unsigned long)>:
 8009d38:	b530      	push	{r4, r5, lr}
 8009d3a:	b085      	sub	sp, #20
 8009d3c:	4604      	mov	r4, r0
 8009d3e:	9201      	str	r2, [sp, #4]
 8009d40:	b9d1      	cbnz	r1, 8009d78 <RemoteConfig::HandleSet(void*, unsigned long)+0x40>
 8009d42:	f240 538b 	movw	r3, #1419	@ 0x58b
 8009d46:	9303      	str	r3, [sp, #12]
 8009d48:	4b19      	ldr	r3, [pc, #100]	@ (8009db0 <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 8009d4a:	6819      	ldr	r1, [r3, #0]
 8009d4c:	aa03      	add	r2, sp, #12
 8009d4e:	3101      	adds	r1, #1
 8009d50:	f000 fac4 	bl	800a2dc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 8009d54:	2800      	cmp	r0, #0
 8009d56:	db0d      	blt.n	8009d74 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 8009d58:	4b16      	ldr	r3, [pc, #88]	@ (8009db4 <RemoteConfig::HandleSet(void*, unsigned long)+0x7c>)
 8009d5a:	2218      	movs	r2, #24
 8009d5c:	fb02 3300 	mla	r3, r2, r0, r3
 8009d60:	68da      	ldr	r2, [r3, #12]
 8009d62:	689b      	ldr	r3, [r3, #8]
 8009d64:	1051      	asrs	r1, r2, #1
 8009d66:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d6a:	07d2      	lsls	r2, r2, #31
 8009d6c:	bf44      	itt	mi
 8009d6e:	5862      	ldrmi	r2, [r4, r1]
 8009d70:	58d3      	ldrmi	r3, [r2, r3]
 8009d72:	4798      	blx	r3
 8009d74:	b005      	add	sp, #20
 8009d76:	bd30      	pop	{r4, r5, pc}
 8009d78:	f240 538c 	movw	r3, #1420	@ 0x58c
 8009d7c:	429a      	cmp	r2, r3
 8009d7e:	d8f9      	bhi.n	8009d74 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 8009d80:	4b0d      	ldr	r3, [pc, #52]	@ (8009db8 <RemoteConfig::HandleSet(void*, unsigned long)+0x80>)
 8009d82:	781b      	ldrb	r3, [r3, #0]
 8009d84:	460d      	mov	r5, r1
 8009d86:	07d9      	lsls	r1, r3, #31
 8009d88:	d50b      	bpl.n	8009da2 <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 8009d8a:	782b      	ldrb	r3, [r5, #0]
 8009d8c:	2b7b      	cmp	r3, #123	@ 0x7b
 8009d8e:	d108      	bne.n	8009da2 <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 8009d90:	1e51      	subs	r1, r2, #1
 8009d92:	b289      	uxth	r1, r1
 8009d94:	2200      	movs	r2, #0
 8009d96:	4628      	mov	r0, r5
 8009d98:	f005 fee2 	bl	800fb60 <properties::convert_json_file(char*, unsigned long, bool)>
 8009d9c:	1e02      	subs	r2, r0, #0
 8009d9e:	dde9      	ble.n	8009d74 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 8009da0:	b292      	uxth	r2, r2
 8009da2:	4b03      	ldr	r3, [pc, #12]	@ (8009db0 <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 8009da4:	61e2      	str	r2, [r4, #28]
 8009da6:	601d      	str	r5, [r3, #0]
 8009da8:	aa01      	add	r2, sp, #4
 8009daa:	1c69      	adds	r1, r5, #1
 8009dac:	4620      	mov	r0, r4
 8009dae:	e7cf      	b.n	8009d50 <RemoteConfig::HandleSet(void*, unsigned long)+0x18>
 8009db0:	20000074 	andcs	r0, r0, r4, ror r0
 8009db4:	08014b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, lr}
 8009db8:	20000a8d 	andcs	r0, r0, sp, lsl #21

08009dbc <RemoteConfig::HandleRequest()>:
 8009dbc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009dc0:	69c2      	ldr	r2, [r0, #28]
 8009dc2:	4b3f      	ldr	r3, [pc, #252]	@ (8009ec0 <RemoteConfig::HandleRequest()+0x104>)
 8009dc4:	3a01      	subs	r2, #1
 8009dc6:	681b      	ldr	r3, [r3, #0]
 8009dc8:	5c99      	ldrb	r1, [r3, r2]
 8009dca:	290a      	cmp	r1, #10
 8009dcc:	bf08      	it	eq
 8009dce:	61c2      	streq	r2, [r0, #28]
 8009dd0:	7819      	ldrb	r1, [r3, #0]
 8009dd2:	293f      	cmp	r1, #63	@ 0x3f
 8009dd4:	d13c      	bne.n	8009e50 <RemoteConfig::HandleRequest()+0x94>
 8009dd6:	69c4      	ldr	r4, [r0, #28]
 8009dd8:	493a      	ldr	r1, [pc, #232]	@ (8009ec4 <RemoteConfig::HandleRequest()+0x108>)
 8009dda:	3c01      	subs	r4, #1
 8009ddc:	61c4      	str	r4, [r0, #28]
 8009dde:	2200      	movs	r2, #0
 8009de0:	468c      	mov	ip, r1
 8009de2:	7b8e      	ldrb	r6, [r1, #14]
 8009de4:	898d      	ldrh	r5, [r1, #12]
 8009de6:	b18e      	cbz	r6, 8009e0c <RemoteConfig::HandleRequest()+0x50>
 8009de8:	42ac      	cmp	r4, r5
 8009dea:	d811      	bhi.n	8009e10 <RemoteConfig::HandleRequest()+0x54>
 8009dec:	3201      	adds	r2, #1
 8009dee:	2a08      	cmp	r2, #8
 8009df0:	f101 0110 	add.w	r1, r1, #16
 8009df4:	d1f5      	bne.n	8009de2 <RemoteConfig::HandleRequest()+0x26>
 8009df6:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009dfa:	9300      	str	r3, [sp, #0]
 8009dfc:	6983      	ldr	r3, [r0, #24]
 8009dfe:	4932      	ldr	r1, [pc, #200]	@ (8009ec8 <RemoteConfig::HandleRequest()+0x10c>)
 8009e00:	6940      	ldr	r0, [r0, #20]
 8009e02:	f7ff fd37 	bl	8009874 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009e06:	b002      	add	sp, #8
 8009e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e0c:	42ac      	cmp	r4, r5
 8009e0e:	d1ed      	bne.n	8009dec <RemoteConfig::HandleRequest()+0x30>
 8009e10:	688e      	ldr	r6, [r1, #8]
 8009e12:	461f      	mov	r7, r3
 8009e14:	3e01      	subs	r6, #1
 8009e16:	441d      	add	r5, r3
 8009e18:	42af      	cmp	r7, r5
 8009e1a:	d10f      	bne.n	8009e3c <RemoteConfig::HandleRequest()+0x80>
 8009e1c:	0113      	lsls	r3, r2, #4
 8009e1e:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 8009e22:	f85c 3003 	ldr.w	r3, [ip, r3]
 8009e26:	6852      	ldr	r2, [r2, #4]
 8009e28:	1054      	asrs	r4, r2, #1
 8009e2a:	eb00 0162 	add.w	r1, r0, r2, asr #1
 8009e2e:	07d2      	lsls	r2, r2, #31
 8009e30:	d40b      	bmi.n	8009e4a <RemoteConfig::HandleRequest()+0x8e>
 8009e32:	4608      	mov	r0, r1
 8009e34:	b002      	add	sp, #8
 8009e36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009e3a:	4718      	bx	r3
 8009e3c:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 8009e40:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009e44:	45f0      	cmp	r8, lr
 8009e46:	d0e7      	beq.n	8009e18 <RemoteConfig::HandleRequest()+0x5c>
 8009e48:	e7d0      	b.n	8009dec <RemoteConfig::HandleRequest()+0x30>
 8009e4a:	5902      	ldr	r2, [r0, r4]
 8009e4c:	58d3      	ldr	r3, [r2, r3]
 8009e4e:	e7f0      	b.n	8009e32 <RemoteConfig::HandleRequest()+0x76>
 8009e50:	7b42      	ldrb	r2, [r0, #13]
 8009e52:	2a00      	cmp	r2, #0
 8009e54:	d1d7      	bne.n	8009e06 <RemoteConfig::HandleRequest()+0x4a>
 8009e56:	2923      	cmp	r1, #35	@ 0x23
 8009e58:	d105      	bne.n	8009e66 <RemoteConfig::HandleRequest()+0xaa>
 8009e5a:	4611      	mov	r1, r2
 8009e5c:	b002      	add	sp, #8
 8009e5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009e62:	f7ff bf69 	b.w	8009d38 <RemoteConfig::HandleSet(void*, unsigned long)>
 8009e66:	2921      	cmp	r1, #33	@ 0x21
 8009e68:	d1cd      	bne.n	8009e06 <RemoteConfig::HandleRequest()+0x4a>
 8009e6a:	69c2      	ldr	r2, [r0, #28]
 8009e6c:	3a01      	subs	r2, #1
 8009e6e:	2a05      	cmp	r2, #5
 8009e70:	61c2      	str	r2, [r0, #28]
 8009e72:	d91e      	bls.n	8009eb2 <RemoteConfig::HandleRequest()+0xf6>
 8009e74:	4d15      	ldr	r5, [pc, #84]	@ (8009ecc <RemoteConfig::HandleRequest()+0x110>)
 8009e76:	4619      	mov	r1, r3
 8009e78:	1d5e      	adds	r6, r3, #5
 8009e7a:	461c      	mov	r4, r3
 8009e7c:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 8009e80:	f815 7b01 	ldrb.w	r7, [r5], #1
 8009e84:	45bc      	cmp	ip, r7
 8009e86:	d112      	bne.n	8009eae <RemoteConfig::HandleRequest()+0xf2>
 8009e88:	42b4      	cmp	r4, r6
 8009e8a:	d1f7      	bne.n	8009e7c <RemoteConfig::HandleRequest()+0xc0>
 8009e8c:	2300      	movs	r3, #0
 8009e8e:	4a10      	ldr	r2, [pc, #64]	@ (8009ed0 <RemoteConfig::HandleRequest()+0x114>)
 8009e90:	011b      	lsls	r3, r3, #4
 8009e92:	58d3      	ldr	r3, [r2, r3]
 8009e94:	e7ce      	b.n	8009e34 <RemoteConfig::HandleRequest()+0x78>
 8009e96:	4a0f      	ldr	r2, [pc, #60]	@ (8009ed4 <RemoteConfig::HandleRequest()+0x118>)
 8009e98:	3308      	adds	r3, #8
 8009e9a:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8009e9e:	f812 4b01 	ldrb.w	r4, [r2], #1
 8009ea2:	42a5      	cmp	r5, r4
 8009ea4:	d105      	bne.n	8009eb2 <RemoteConfig::HandleRequest()+0xf6>
 8009ea6:	4299      	cmp	r1, r3
 8009ea8:	d1f7      	bne.n	8009e9a <RemoteConfig::HandleRequest()+0xde>
 8009eaa:	2301      	movs	r3, #1
 8009eac:	e7ef      	b.n	8009e8e <RemoteConfig::HandleRequest()+0xd2>
 8009eae:	2a08      	cmp	r2, #8
 8009eb0:	d8f1      	bhi.n	8009e96 <RemoteConfig::HandleRequest()+0xda>
 8009eb2:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009eb6:	9300      	str	r3, [sp, #0]
 8009eb8:	6983      	ldr	r3, [r0, #24]
 8009eba:	4907      	ldr	r1, [pc, #28]	@ (8009ed8 <RemoteConfig::HandleRequest()+0x11c>)
 8009ebc:	2208      	movs	r2, #8
 8009ebe:	e79f      	b.n	8009e00 <RemoteConfig::HandleRequest()+0x44>
 8009ec0:	20000074 	andcs	r0, r0, r4, ror r0
 8009ec4:	08014aec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, fp, lr}
 8009ec8:	08014045 	stmdaeq	r1, {r0, r2, r6, lr}
 8009ecc:	0801404e 	stmdaeq	r1, {r1, r2, r3, r6, lr}
 8009ed0:	08014acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, lr}
 8009ed4:	08014054 	stmdaeq	r1, {r2, r4, r6, lr}
 8009ed8:	0801405d 	stmdaeq	r1, {r0, r2, r3, r4, r6, lr}

08009edc <RemoteConfig::HandleSetRconfigTxt()>:
 8009edc:	b510      	push	{r4, lr}
 8009ede:	b088      	sub	sp, #32
 8009ee0:	4604      	mov	r4, r0
 8009ee2:	4668      	mov	r0, sp
 8009ee4:	f000 f85e 	bl	8009fa4 <RemoteConfigParams::RemoteConfigParams()>
 8009ee8:	4b05      	ldr	r3, [pc, #20]	@ (8009f00 <RemoteConfig::HandleSetRconfigTxt()+0x24>)
 8009eea:	69e2      	ldr	r2, [r4, #28]
 8009eec:	6819      	ldr	r1, [r3, #0]
 8009eee:	4668      	mov	r0, sp
 8009ef0:	f000 f86a 	bl	8009fc8 <RemoteConfigParams::Load(char const*, unsigned long)>
 8009ef4:	4621      	mov	r1, r4
 8009ef6:	4668      	mov	r0, sp
 8009ef8:	f000 f96a 	bl	800a1d0 <RemoteConfigParams::Set(RemoteConfig*)>
 8009efc:	b008      	add	sp, #32
 8009efe:	bd10      	pop	{r4, pc}
 8009f00:	20000074 	andcs	r0, r0, r4, ror r0

08009f04 <RemoteConfig::HandleSetEnvTxt()>:
 8009f04:	b513      	push	{r0, r1, r4, lr}
 8009f06:	4604      	mov	r4, r0
 8009f08:	a801      	add	r0, sp, #4
 8009f0a:	f005 fd77 	bl	800f9fc <EnvParams::EnvParams()>
 8009f0e:	4b04      	ldr	r3, [pc, #16]	@ (8009f20 <RemoteConfig::HandleSetEnvTxt()+0x1c>)
 8009f10:	69e2      	ldr	r2, [r4, #28]
 8009f12:	6819      	ldr	r1, [r3, #0]
 8009f14:	a801      	add	r0, sp, #4
 8009f16:	f005 fd73 	bl	800fa00 <EnvParams::LoadAndSet(char const*, unsigned long)>
 8009f1a:	b002      	add	sp, #8
 8009f1c:	bd10      	pop	{r4, pc}
 8009f1e:	bf00      	nop
 8009f20:	20000074 	andcs	r0, r0, r4, ror r0

08009f24 <RemoteConfig::HandleSetNetworkTxt()>:
 8009f24:	b510      	push	{r4, lr}
 8009f26:	b098      	sub	sp, #96	@ 0x60
 8009f28:	4604      	mov	r4, r0
 8009f2a:	4668      	mov	r0, sp
 8009f2c:	f004 f9f8 	bl	800e320 <NetworkParams::NetworkParams()>
 8009f30:	4b03      	ldr	r3, [pc, #12]	@ (8009f40 <RemoteConfig::HandleSetNetworkTxt()+0x1c>)
 8009f32:	69e2      	ldr	r2, [r4, #28]
 8009f34:	6819      	ldr	r1, [r3, #0]
 8009f36:	4668      	mov	r0, sp
 8009f38:	f004 fa06 	bl	800e348 <NetworkParams::Load(char const*, unsigned long)>
 8009f3c:	b018      	add	sp, #96	@ 0x60
 8009f3e:	bd10      	pop	{r4, pc}
 8009f40:	20000074 	andcs	r0, r0, r4, ror r0

08009f44 <RemoteConfig::HandleSetDisplayTxt()>:
 8009f44:	b510      	push	{r4, lr}
 8009f46:	b08a      	sub	sp, #40	@ 0x28
 8009f48:	4604      	mov	r4, r0
 8009f4a:	a801      	add	r0, sp, #4
 8009f4c:	f005 f9d0 	bl	800f2f0 <DisplayUdfParams::DisplayUdfParams()>
 8009f50:	4b03      	ldr	r3, [pc, #12]	@ (8009f60 <RemoteConfig::HandleSetDisplayTxt()+0x1c>)
 8009f52:	69e2      	ldr	r2, [r4, #28]
 8009f54:	6819      	ldr	r1, [r3, #0]
 8009f56:	a801      	add	r0, sp, #4
 8009f58:	f005 f9e2 	bl	800f320 <DisplayUdfParams::Load(char const*, unsigned long)>
 8009f5c:	b00a      	add	sp, #40	@ 0x28
 8009f5e:	bd10      	pop	{r4, pc}
 8009f60:	20000074 	andcs	r0, r0, r4, ror r0

08009f64 <RemoteConfig::HandleFactory()>:
 8009f64:	b538      	push	{r3, r4, r5, lr}
 8009f66:	4b05      	ldr	r3, [pc, #20]	@ (8009f7c <RemoteConfig::HandleFactory()+0x18>)
 8009f68:	681d      	ldr	r5, [r3, #0]
 8009f6a:	2400      	movs	r4, #0
 8009f6c:	4621      	mov	r1, r4
 8009f6e:	4628      	mov	r0, r5
 8009f70:	3401      	adds	r4, #1
 8009f72:	f005 fc65 	bl	800f840 <ConfigStore::ResetSetList(configstore::Store)>
 8009f76:	2c1b      	cmp	r4, #27
 8009f78:	d1f8      	bne.n	8009f6c <RemoteConfig::HandleFactory()+0x8>
 8009f7a:	bd38      	pop	{r3, r4, r5, pc}
 8009f7c:	20000a78 	andcs	r0, r0, r8, ror sl

08009f80 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
 8009f80:	b507      	push	{r0, r1, r2, lr}
 8009f82:	2300      	movs	r3, #0
 8009f84:	2101      	movs	r1, #1
 8009f86:	e9cd 3100 	strd	r3, r1, [sp]
 8009f8a:	4602      	mov	r2, r0
 8009f8c:	4804      	ldr	r0, [pc, #16]	@ (8009fa0 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x20>)
 8009f8e:	2320      	movs	r3, #32
 8009f90:	6800      	ldr	r0, [r0, #0]
 8009f92:	210a      	movs	r1, #10
 8009f94:	f005 fc8c 	bl	800f8b0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8009f98:	b003      	add	sp, #12
 8009f9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009f9e:	bf00      	nop
 8009fa0:	20000a78 	andcs	r0, r0, r8, ror sl

08009fa4 <RemoteConfigParams::RemoteConfigParams()>:
 8009fa4:	b510      	push	{r4, lr}
 8009fa6:	2220      	movs	r2, #32
 8009fa8:	4604      	mov	r4, r0
 8009faa:	2100      	movs	r1, #0
 8009fac:	f009 f97c 	bl	80132a8 <memset>
 8009fb0:	4620      	mov	r0, r4
 8009fb2:	bd10      	pop	{r4, pc}

08009fb4 <RemoteConfigParams::Load()>:
 8009fb4:	b508      	push	{r3, lr}
 8009fb6:	2200      	movs	r2, #0
 8009fb8:	7002      	strb	r2, [r0, #0]
 8009fba:	7042      	strb	r2, [r0, #1]
 8009fbc:	7082      	strb	r2, [r0, #2]
 8009fbe:	70c2      	strb	r2, [r0, #3]
 8009fc0:	f7ff ffde 	bl	8009f80 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 8009fc4:	bd08      	pop	{r3, pc}
	...

08009fc8 <RemoteConfigParams::Load(char const*, unsigned long)>:
 8009fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009fca:	2500      	movs	r5, #0
 8009fcc:	b087      	sub	sp, #28
 8009fce:	4604      	mov	r4, r0
 8009fd0:	460e      	mov	r6, r1
 8009fd2:	4617      	mov	r7, r2
 8009fd4:	7005      	strb	r5, [r0, #0]
 8009fd6:	7045      	strb	r5, [r0, #1]
 8009fd8:	7085      	strb	r5, [r0, #2]
 8009fda:	70c5      	strb	r5, [r0, #3]
 8009fdc:	4602      	mov	r2, r0
 8009fde:	490c      	ldr	r1, [pc, #48]	@ (800a010 <RemoteConfigParams::Load(char const*, unsigned long)+0x48>)
 8009fe0:	a804      	add	r0, sp, #16
 8009fe2:	f005 ff3f 	bl	800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009fe6:	463a      	mov	r2, r7
 8009fe8:	4631      	mov	r1, r6
 8009fea:	a804      	add	r0, sp, #16
 8009fec:	f005 ff3e 	bl	800fe6c <ReadConfigFile::Read(char const*, unsigned int)>
 8009ff0:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8009ff4:	2320      	movs	r3, #32
 8009ff6:	4807      	ldr	r0, [pc, #28]	@ (800a014 <RemoteConfigParams::Load(char const*, unsigned long)+0x4c>)
 8009ff8:	9300      	str	r3, [sp, #0]
 8009ffa:	462a      	mov	r2, r5
 8009ffc:	4623      	mov	r3, r4
 8009ffe:	210a      	movs	r1, #10
 800a000:	6800      	ldr	r0, [r0, #0]
 800a002:	f005 fc2f 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a006:	a804      	add	r0, sp, #16
 800a008:	f005 ff2f 	bl	800fe6a <ReadConfigFile::~ReadConfigFile()>
 800a00c:	b007      	add	sp, #28
 800a00e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a010:	0800a091 	stmdaeq	r0, {r0, r4, r7, sp, pc}
 800a014:	20000a78 	andcs	r0, r0, r8, ror sl

0800a018 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
 800a018:	6803      	ldr	r3, [r0, #0]
 800a01a:	b111      	cbz	r1, 800a022 <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0xa>
 800a01c:	4313      	orrs	r3, r2
 800a01e:	6003      	str	r3, [r0, #0]
 800a020:	4770      	bx	lr
 800a022:	ea23 0302 	bic.w	r3, r3, r2
 800a026:	e7fa      	b.n	800a01e <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0x6>

0800a028 <RemoteConfigParams::callbackFunction(char const*)>:
 800a028:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a02c:	4f16      	ldr	r7, [pc, #88]	@ (800a088 <RemoteConfigParams::callbackFunction(char const*)+0x60>)
 800a02e:	4604      	mov	r4, r0
 800a030:	460e      	mov	r6, r1
 800a032:	2506      	movs	r5, #6
 800a034:	3d01      	subs	r5, #1
 800a036:	d113      	bne.n	800a060 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a038:	2317      	movs	r3, #23
 800a03a:	9301      	str	r3, [sp, #4]
 800a03c:	4913      	ldr	r1, [pc, #76]	@ (800a08c <RemoteConfigParams::callbackFunction(char const*)+0x64>)
 800a03e:	ab01      	add	r3, sp, #4
 800a040:	f104 0208 	add.w	r2, r4, #8
 800a044:	4630      	mov	r0, r6
 800a046:	f005 ff47 	bl	800fed8 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800a04a:	b930      	cbnz	r0, 800a05a <RemoteConfigParams::callbackFunction(char const*)+0x32>
 800a04c:	9b01      	ldr	r3, [sp, #4]
 800a04e:	4423      	add	r3, r4
 800a050:	721d      	strb	r5, [r3, #8]
 800a052:	6823      	ldr	r3, [r4, #0]
 800a054:	f043 0310 	orr.w	r3, r3, #16
 800a058:	6023      	str	r3, [r4, #0]
 800a05a:	b002      	add	sp, #8
 800a05c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a060:	6839      	ldr	r1, [r7, #0]
 800a062:	f8d7 8004 	ldr.w	r8, [r7, #4]
 800a066:	aa01      	add	r2, sp, #4
 800a068:	4630      	mov	r0, r6
 800a06a:	f005 ff8e 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a06e:	b108      	cbz	r0, 800a074 <RemoteConfigParams::callbackFunction(char const*)+0x4c>
 800a070:	3708      	adds	r7, #8
 800a072:	e7df      	b.n	800a034 <RemoteConfigParams::callbackFunction(char const*)+0xc>
 800a074:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a078:	4642      	mov	r2, r8
 800a07a:	4620      	mov	r0, r4
 800a07c:	b002      	add	sp, #8
 800a07e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a082:	f7ff bfc9 	b.w	800a018 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
 800a086:	bf00      	nop
 800a088:	08014b6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, fp, lr}
 800a08c:	08014f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, lr}

0800a090 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a090:	f7ff bfca 	b.w	800a028 <RemoteConfigParams::callbackFunction(char const*)>

0800a094 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
 800a094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a098:	4605      	mov	r5, r0
 800a09a:	b087      	sub	sp, #28
 800a09c:	4614      	mov	r4, r2
 800a09e:	461e      	mov	r6, r3
 800a0a0:	b361      	cbz	r1, 800a0fc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800a0a2:	2220      	movs	r2, #32
 800a0a4:	f009 f8e9 	bl	801327a <memmove>
 800a0a8:	4940      	ldr	r1, [pc, #256]	@ (800a1ac <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800a0aa:	4f41      	ldr	r7, [pc, #260]	@ (800a1b0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800a0ac:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800a1c8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800a0b0:	f8df a118 	ldr.w	sl, [pc, #280]	@ 800a1cc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800a0b4:	4633      	mov	r3, r6
 800a0b6:	4622      	mov	r2, r4
 800a0b8:	a803      	add	r0, sp, #12
 800a0ba:	f005 fdfd 	bl	800fcb8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800a0be:	f04f 0806 	mov.w	r8, #6
 800a0c2:	f04f 0901 	mov.w	r9, #1
 800a0c6:	f1b8 0801 	subs.w	r8, r8, #1
 800a0ca:	f8d5 c000 	ldr.w	ip, [r5]
 800a0ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a0d2:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a0d6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800a0da:	d112      	bne.n	800a102 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800a0dc:	42a2      	cmp	r2, r4
 800a0de:	d246      	bcs.n	800a16e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xda>
 800a0e0:	9803      	ldr	r0, [sp, #12]
 800a0e2:	f01c 0f10 	tst.w	ip, #16
 800a0e6:	f105 0508 	add.w	r5, r5, #8
 800a0ea:	4410      	add	r0, r2
 800a0ec:	eba4 0402 	sub.w	r4, r4, r2
 800a0f0:	d12f      	bne.n	800a152 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800a0f2:	bb7e      	cbnz	r6, 800a154 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
 800a0f4:	4b2f      	ldr	r3, [pc, #188]	@ (800a1b4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a0f6:	4a30      	ldr	r2, [pc, #192]	@ (800a1b8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800a0f8:	9500      	str	r5, [sp, #0]
 800a0fa:	e02e      	b.n	800a15a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a0fc:	f7ff ff40 	bl	8009f80 <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a100:	e7d2      	b.n	800a0a8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800a102:	42a2      	cmp	r2, r4
 800a104:	e9d7 3100 	ldrd	r3, r1, [r7]
 800a108:	d21d      	bcs.n	800a146 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb2>
 800a10a:	9803      	ldr	r0, [sp, #12]
 800a10c:	ea01 0e0c 	and.w	lr, r1, ip
 800a110:	ea31 0c0c 	bics.w	ip, r1, ip
 800a114:	4410      	add	r0, r2
 800a116:	eba4 0402 	sub.w	r4, r4, r2
 800a11a:	d003      	beq.n	800a124 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x90>
 800a11c:	b91e      	cbnz	r6, 800a126 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800a11e:	4a27      	ldr	r2, [pc, #156]	@ (800a1bc <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x128>)
 800a120:	9600      	str	r6, [sp, #0]
 800a122:	e006      	b.n	800a132 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a124:	b18e      	cbz	r6, 800a14a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb6>
 800a126:	eba1 020e 	sub.w	r2, r1, lr
 800a12a:	4251      	negs	r1, r2
 800a12c:	4151      	adcs	r1, r2
 800a12e:	9100      	str	r1, [sp, #0]
 800a130:	465a      	mov	r2, fp
 800a132:	4621      	mov	r1, r4
 800a134:	f009 fbc4 	bl	80138c0 <snprintf>
 800a138:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a13c:	4284      	cmp	r4, r0
 800a13e:	bfa4      	itt	ge
 800a140:	181b      	addge	r3, r3, r0
 800a142:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a146:	3708      	adds	r7, #8
 800a148:	e7bd      	b.n	800a0c6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x32>
 800a14a:	f8cd 9000 	str.w	r9, [sp]
 800a14e:	4652      	mov	r2, sl
 800a150:	e7ef      	b.n	800a132 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a152:	b336      	cbz	r6, 800a1a2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x10e>
 800a154:	4b17      	ldr	r3, [pc, #92]	@ (800a1b4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a156:	4a1a      	ldr	r2, [pc, #104]	@ (800a1c0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>)
 800a158:	9500      	str	r5, [sp, #0]
 800a15a:	4621      	mov	r1, r4
 800a15c:	f009 fbb0 	bl	80138c0 <snprintf>
 800a160:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a164:	4284      	cmp	r4, r0
 800a166:	bfa4      	itt	ge
 800a168:	181b      	addge	r3, r3, r0
 800a16a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a16e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a172:	b17b      	cbz	r3, 800a194 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x100>
 800a174:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a178:	9b03      	ldr	r3, [sp, #12]
 800a17a:	4413      	add	r3, r2
 800a17c:	227d      	movs	r2, #125	@ 0x7d
 800a17e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a182:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a186:	9903      	ldr	r1, [sp, #12]
 800a188:	54ca      	strb	r2, [r1, r3]
 800a18a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a18e:	3301      	adds	r3, #1
 800a190:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a194:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a198:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a19a:	601a      	str	r2, [r3, #0]
 800a19c:	b007      	add	sp, #28
 800a19e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1a2:	4b04      	ldr	r3, [pc, #16]	@ (800a1b4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a1a4:	4a07      	ldr	r2, [pc, #28]	@ (800a1c4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x130>)
 800a1a6:	9500      	str	r5, [sp, #0]
 800a1a8:	e7d7      	b.n	800a15a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a1aa:	bf00      	nop
 800a1ac:	08014fe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1b0:	08014b6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, fp, lr}
 800a1b4:	08014f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, lr}
 800a1b8:	080140b1 	stmdaeq	r1, {r0, r4, r5, r7, lr}
 800a1bc:	0801409e 	stmdaeq	r1, {r1, r2, r3, r4, r7, lr}
 800a1c0:	080140a6 	stmdaeq	r1, {r1, r2, r5, r7, lr}
 800a1c4:	080140b2 	stmdaeq	r1, {r1, r4, r5, r7, lr}
 800a1c8:	08014095 	stmdaeq	r1, {r0, r2, r4, r7, lr}
 800a1cc:	0801409f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, lr}

0800a1d0 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a1d0:	b538      	push	{r3, r4, r5, lr}
 800a1d2:	460c      	mov	r4, r1
 800a1d4:	6801      	ldr	r1, [r0, #0]
 800a1d6:	4605      	mov	r5, r0
 800a1d8:	f001 0101 	and.w	r1, r1, #1
 800a1dc:	4620      	mov	r0, r4
 800a1de:	f7ff fcbd 	bl	8009b5c <RemoteConfig::SetDisable(bool)>
 800a1e2:	682b      	ldr	r3, [r5, #0]
 800a1e4:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a1e8:	7362      	strb	r2, [r4, #13]
 800a1ea:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a1ee:	73a2      	strb	r2, [r4, #14]
 800a1f0:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a1f4:	73e2      	strb	r2, [r4, #15]
 800a1f6:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a1fa:	06db      	lsls	r3, r3, #27
 800a1fc:	7422      	strb	r2, [r4, #16]
 800a1fe:	d506      	bpl.n	800a20e <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a200:	f105 0108 	add.w	r1, r5, #8
 800a204:	4620      	mov	r0, r4
 800a206:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a20a:	f7ff bcd1 	b.w	8009bb0 <RemoteConfig::SetDisplayName(char const*)>
 800a20e:	bd38      	pop	{r3, r4, r5, pc}

0800a210 <Display::TextStatus(char const*)>:
 800a210:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a214:	4604      	mov	r4, r0
 800a216:	6980      	ldr	r0, [r0, #24]
 800a218:	460d      	mov	r5, r1
 800a21a:	b368      	cbz	r0, 800a278 <Display::TextStatus(char const*)+0x68>
 800a21c:	e9d0 8701 	ldrd	r8, r7, [r0, #4]
 800a220:	6803      	ldr	r3, [r0, #0]
 800a222:	f107 39ff 	add.w	r9, r7, #4294967295	@ 0xffffffff
 800a226:	6a1b      	ldr	r3, [r3, #32]
 800a228:	464a      	mov	r2, r9
 800a22a:	2100      	movs	r1, #0
 800a22c:	4798      	blx	r3
 800a22e:	2600      	movs	r6, #0
 800a230:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800a234:	45b0      	cmp	r8, r6
 800a236:	69a0      	ldr	r0, [r4, #24]
 800a238:	d817      	bhi.n	800a26a <Display::TextStatus(char const*)+0x5a>
 800a23a:	b120      	cbz	r0, 800a246 <Display::TextStatus(char const*)+0x36>
 800a23c:	6803      	ldr	r3, [r0, #0]
 800a23e:	464a      	mov	r2, r9
 800a240:	6a1b      	ldr	r3, [r3, #32]
 800a242:	2100      	movs	r1, #0
 800a244:	4798      	blx	r3
 800a246:	69a0      	ldr	r0, [r4, #24]
 800a248:	b1b0      	cbz	r0, 800a278 <Display::TextStatus(char const*)+0x68>
 800a24a:	6841      	ldr	r1, [r0, #4]
 800a24c:	2300      	movs	r3, #0
 800a24e:	5cea      	ldrb	r2, [r5, r3]
 800a250:	b11a      	cbz	r2, 800a25a <Display::TextStatus(char const*)+0x4a>
 800a252:	1c5a      	adds	r2, r3, #1
 800a254:	4299      	cmp	r1, r3
 800a256:	4613      	mov	r3, r2
 800a258:	d8f9      	bhi.n	800a24e <Display::TextStatus(char const*)+0x3e>
 800a25a:	6802      	ldr	r2, [r0, #0]
 800a25c:	69d4      	ldr	r4, [r2, #28]
 800a25e:	4639      	mov	r1, r7
 800a260:	462a      	mov	r2, r5
 800a262:	46a4      	mov	ip, r4
 800a264:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a268:	4760      	bx	ip
 800a26a:	b118      	cbz	r0, 800a274 <Display::TextStatus(char const*)+0x64>
 800a26c:	6803      	ldr	r3, [r0, #0]
 800a26e:	2120      	movs	r1, #32
 800a270:	695b      	ldr	r3, [r3, #20]
 800a272:	4798      	blx	r3
 800a274:	3601      	adds	r6, #1
 800a276:	e7dd      	b.n	800a234 <Display::TextStatus(char const*)+0x24>
 800a278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a27c <RemoteConfig::HandleReboot()>:
 800a27c:	b538      	push	{r3, r4, r5, lr}
 800a27e:	7b83      	ldrb	r3, [r0, #14]
 800a280:	b30b      	cbz	r3, 800a2c6 <RemoteConfig::HandleReboot()+0x4a>
 800a282:	4c11      	ldr	r4, [pc, #68]	@ (800a2c8 <RemoteConfig::HandleReboot()+0x4c>)
 800a284:	6825      	ldr	r5, [r4, #0]
 800a286:	2301      	movs	r3, #1
 800a288:	7443      	strb	r3, [r0, #17]
 800a28a:	69a8      	ldr	r0, [r5, #24]
 800a28c:	b138      	cbz	r0, 800a29e <RemoteConfig::HandleReboot()+0x22>
 800a28e:	6803      	ldr	r3, [r0, #0]
 800a290:	2100      	movs	r1, #0
 800a292:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a294:	7569      	strb	r1, [r5, #21]
 800a296:	4798      	blx	r3
 800a298:	4b0c      	ldr	r3, [pc, #48]	@ (800a2cc <RemoteConfig::HandleReboot()+0x50>)
 800a29a:	681b      	ldr	r3, [r3, #0]
 800a29c:	606b      	str	r3, [r5, #4]
 800a29e:	4d0c      	ldr	r5, [pc, #48]	@ (800a2d0 <RemoteConfig::HandleReboot()+0x54>)
 800a2a0:	6828      	ldr	r0, [r5, #0]
 800a2a2:	f005 fb35 	bl	800f910 <ConfigStore::Flash()>
 800a2a6:	2800      	cmp	r0, #0
 800a2a8:	d1fa      	bne.n	800a2a0 <RemoteConfig::HandleReboot()+0x24>
 800a2aa:	6823      	ldr	r3, [r4, #0]
 800a2ac:	6998      	ldr	r0, [r3, #24]
 800a2ae:	b110      	cbz	r0, 800a2b6 <RemoteConfig::HandleReboot()+0x3a>
 800a2b0:	6803      	ldr	r3, [r0, #0]
 800a2b2:	68db      	ldr	r3, [r3, #12]
 800a2b4:	4798      	blx	r3
 800a2b6:	6820      	ldr	r0, [r4, #0]
 800a2b8:	4906      	ldr	r1, [pc, #24]	@ (800a2d4 <RemoteConfig::HandleReboot()+0x58>)
 800a2ba:	f7ff ffa9 	bl	800a210 <Display::TextStatus(char const*)>
 800a2be:	4b06      	ldr	r3, [pc, #24]	@ (800a2d8 <RemoteConfig::HandleReboot()+0x5c>)
 800a2c0:	6818      	ldr	r0, [r3, #0]
 800a2c2:	f006 fc79 	bl	8010bb8 <Hardware::Reboot()>
 800a2c6:	bd38      	pop	{r3, r4, r5, pc}
 800a2c8:	20000a90 	mulcs	r0, r0, sl
 800a2cc:	20004830 	andcs	r4, r0, r0, lsr r8
 800a2d0:	20000a78 	andcs	r0, r0, r8, ror sl
 800a2d4:	080140b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, lr}
 800a2d8:	20000b7c 	andcs	r0, r0, ip, ror fp

0800a2dc <RemoteConfig::GetIndex(void const*, unsigned long&)>:
 800a2dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a2e0:	f8d2 c000 	ldr.w	ip, [r2]
 800a2e4:	4e12      	ldr	r6, [pc, #72]	@ (800a330 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x54>)
 800a2e6:	2000      	movs	r0, #0
 800a2e8:	f10d 0e04 	add.w	lr, sp, #4
 800a2ec:	7d33      	ldrb	r3, [r6, #20]
 800a2ee:	9301      	str	r3, [sp, #4]
 800a2f0:	4563      	cmp	r3, ip
 800a2f2:	bf2c      	ite	cs
 800a2f4:	4614      	movcs	r4, r2
 800a2f6:	4674      	movcc	r4, lr
 800a2f8:	6935      	ldr	r5, [r6, #16]
 800a2fa:	6827      	ldr	r7, [r4, #0]
 800a2fc:	3d01      	subs	r5, #1
 800a2fe:	440f      	add	r7, r1
 800a300:	460c      	mov	r4, r1
 800a302:	42bc      	cmp	r4, r7
 800a304:	d101      	bne.n	800a30a <RemoteConfig::GetIndex(void const*, unsigned long&)+0x2e>
 800a306:	6013      	str	r3, [r2, #0]
 800a308:	e00c      	b.n	800a324 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x48>
 800a30a:	f894 9000 	ldrb.w	r9, [r4]
 800a30e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800a312:	45c1      	cmp	r9, r8
 800a314:	d009      	beq.n	800a32a <RemoteConfig::GetIndex(void const*, unsigned long&)+0x4e>
 800a316:	3001      	adds	r0, #1
 800a318:	2804      	cmp	r0, #4
 800a31a:	f106 0618 	add.w	r6, r6, #24
 800a31e:	d1e5      	bne.n	800a2ec <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
 800a320:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a324:	b003      	add	sp, #12
 800a326:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a32a:	3401      	adds	r4, #1
 800a32c:	e7e9      	b.n	800a302 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x26>
 800a32e:	bf00      	nop
 800a330:	08014b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, lr}

0800a334 <RemoteConfig::PlatformHandleTftpSet()>:
 800a334:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a338:	b510      	push	{r4, lr}
 800a33a:	4c0d      	ldr	r4, [pc, #52]	@ (800a370 <RemoteConfig::PlatformHandleTftpSet()+0x3c>)
 800a33c:	b171      	cbz	r1, 800a35c <RemoteConfig::PlatformHandleTftpSet()+0x28>
 800a33e:	f24a 51a5 	movw	r1, #42405	@ 0xa5a5
 800a342:	2001      	movs	r0, #1
 800a344:	f008 f854 	bl	80123f0 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800a348:	490a      	ldr	r1, [pc, #40]	@ (800a374 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800a34a:	6820      	ldr	r0, [r4, #0]
 800a34c:	f7ff ff60 	bl	800a210 <Display::TextStatus(char const*)>
 800a350:	4908      	ldr	r1, [pc, #32]	@ (800a374 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800a352:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a356:	2002      	movs	r0, #2
 800a358:	f006 bde8 	b.w	8010f2c <console_status>
 800a35c:	2001      	movs	r0, #1
 800a35e:	f008 f847 	bl	80123f0 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800a362:	4905      	ldr	r1, [pc, #20]	@ (800a378 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800a364:	6820      	ldr	r0, [r4, #0]
 800a366:	f7ff ff53 	bl	800a210 <Display::TextStatus(char const*)>
 800a36a:	4903      	ldr	r1, [pc, #12]	@ (800a378 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800a36c:	e7f1      	b.n	800a352 <RemoteConfig::PlatformHandleTftpSet()+0x1e>
 800a36e:	bf00      	nop
 800a370:	20000a90 	mulcs	r0, r0, sl
 800a374:	080140f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, lr}
 800a378:	080140fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, lr}

0800a37c <RemoteConfig::PlatformHandleTftpGet()>:
 800a37c:	b510      	push	{r4, lr}
 800a37e:	4604      	mov	r4, r0
 800a380:	2001      	movs	r0, #1
 800a382:	f008 f843 	bl	801240c <bkp_data_read(bkp_data_register_enum)>
 800a386:	f24a 53a5 	movw	r3, #42405	@ 0xa5a5
 800a38a:	1ac3      	subs	r3, r0, r3
 800a38c:	4258      	negs	r0, r3
 800a38e:	4158      	adcs	r0, r3
 800a390:	f884 0020 	strb.w	r0, [r4, #32]
 800a394:	bd10      	pop	{r4, pc}
	...

0800a398 <HttpDaemon::HttpDaemon()>:
 800a398:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a39a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a39e:	2500      	movs	r5, #0
 800a3a0:	e9c0 3506 	strd	r3, r5, [r0, #24]
 800a3a4:	4606      	mov	r6, r0
 800a3a6:	2050      	movs	r0, #80	@ 0x50
 800a3a8:	f003 fd1c 	bl	800dde4 <net::tcp_begin(unsigned short)>
 800a3ac:	462c      	mov	r4, r5
 800a3ae:	61b0      	str	r0, [r6, #24]
 800a3b0:	f44f 7702 	mov.w	r7, #520	@ 0x208
 800a3b4:	2038      	movs	r0, #56	@ 0x38
 800a3b6:	f009 fc9b 	bl	8013cf0 <operator new(unsigned int)>
 800a3ba:	69b3      	ldr	r3, [r6, #24]
 800a3bc:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 800a3c0:	e9c0 5300 	strd	r5, r3, [r0]
 800a3c4:	3501      	adds	r5, #1
 800a3c6:	2203      	movs	r2, #3
 800a3c8:	2305      	movs	r3, #5
 800a3ca:	2d06      	cmp	r5, #6
 800a3cc:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800a3d0:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800a3d4:	e9c0 4406 	strd	r4, r4, [r0, #24]
 800a3d8:	e9c0 4408 	strd	r4, r4, [r0, #32]
 800a3dc:	e9c0 230b 	strd	r2, r3, [r0, #44]	@ 0x2c
 800a3e0:	6287      	str	r7, [r0, #40]	@ 0x28
 800a3e2:	f880 4034 	strb.w	r4, [r0, #52]	@ 0x34
 800a3e6:	d1e5      	bne.n	800a3b4 <HttpDaemon::HttpDaemon()+0x1c>
 800a3e8:	4805      	ldr	r0, [pc, #20]	@ (800a400 <HttpDaemon::HttpDaemon()+0x68>)
 800a3ea:	9400      	str	r4, [sp, #0]
 800a3ec:	2300      	movs	r3, #0
 800a3ee:	2202      	movs	r2, #2
 800a3f0:	4619      	mov	r1, r3
 800a3f2:	6800      	ldr	r0, [r0, #0]
 800a3f4:	f002 f944 	bl	800c680 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a3f8:	4630      	mov	r0, r6
 800a3fa:	b003      	add	sp, #12
 800a3fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3fe:	bf00      	nop
 800a400:	20000768 	andcs	r0, r0, r8, ror #14

0800a404 <DisplaySet::SetSleep(bool)>:
 800a404:	4770      	bx	lr
 800a406:	bf00      	nop

0800a408 <HttpDeamonHandleRequest::ParseMethod(char*)>:
 800a408:	460b      	mov	r3, r1
 800a40a:	b510      	push	{r4, lr}
 800a40c:	4929      	ldr	r1, [pc, #164]	@ (800a4b4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800a40e:	4604      	mov	r4, r0
 800a410:	4618      	mov	r0, r3
 800a412:	f009 fa9b 	bl	801394c <strtok>
 800a416:	2800      	cmp	r0, #0
 800a418:	d039      	beq.n	800a48e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800a41a:	7803      	ldrb	r3, [r0, #0]
 800a41c:	2b47      	cmp	r3, #71	@ 0x47
 800a41e:	d139      	bne.n	800a494 <HttpDeamonHandleRequest::ParseMethod(char*)+0x8c>
 800a420:	4a25      	ldr	r2, [pc, #148]	@ (800a4b8 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb0>)
 800a422:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800a426:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a42a:	428b      	cmp	r3, r1
 800a42c:	d12f      	bne.n	800a48e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800a42e:	2b00      	cmp	r3, #0
 800a430:	d1f7      	bne.n	800a422 <HttpDeamonHandleRequest::ParseMethod(char*)+0x1a>
 800a432:	4920      	ldr	r1, [pc, #128]	@ (800a4b4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800a434:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800a436:	2000      	movs	r0, #0
 800a438:	f009 fa88 	bl	801394c <strtok>
 800a43c:	b320      	cbz	r0, 800a488 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800a43e:	61a0      	str	r0, [r4, #24]
 800a440:	491e      	ldr	r1, [pc, #120]	@ (800a4bc <HttpDeamonHandleRequest::ParseMethod(char*)+0xb4>)
 800a442:	2000      	movs	r0, #0
 800a444:	f009 fa82 	bl	801394c <strtok>
 800a448:	4603      	mov	r3, r0
 800a44a:	b1e8      	cbz	r0, 800a488 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800a44c:	7802      	ldrb	r2, [r0, #0]
 800a44e:	2a48      	cmp	r2, #72	@ 0x48
 800a450:	d11a      	bne.n	800a488 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800a452:	4a1b      	ldr	r2, [pc, #108]	@ (800a4c0 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb8>)
 800a454:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a458:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a45c:	4288      	cmp	r0, r1
 800a45e:	d113      	bne.n	800a488 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800a460:	2800      	cmp	r0, #0
 800a462:	d1f7      	bne.n	800a454 <HttpDeamonHandleRequest::ParseMethod(char*)+0x4c>
 800a464:	4917      	ldr	r1, [pc, #92]	@ (800a4c4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xbc>)
 800a466:	f009 fa71 	bl	801394c <strtok>
 800a46a:	b168      	cbz	r0, 800a488 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800a46c:	7803      	ldrb	r3, [r0, #0]
 800a46e:	2b31      	cmp	r3, #49	@ 0x31
 800a470:	d11d      	bne.n	800a4ae <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800a472:	4a15      	ldr	r2, [pc, #84]	@ (800a4c8 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc0>)
 800a474:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800a478:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a47c:	428b      	cmp	r3, r1
 800a47e:	d116      	bne.n	800a4ae <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800a480:	2b00      	cmp	r3, #0
 800a482:	d1f7      	bne.n	800a474 <HttpDeamonHandleRequest::ParseMethod(char*)+0x6c>
 800a484:	20c8      	movs	r0, #200	@ 0xc8
 800a486:	bd10      	pop	{r4, pc}
 800a488:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800a48c:	bd10      	pop	{r4, pc}
 800a48e:	f240 10f5 	movw	r0, #501	@ 0x1f5
 800a492:	bd10      	pop	{r4, pc}
 800a494:	2b50      	cmp	r3, #80	@ 0x50
 800a496:	d1fa      	bne.n	800a48e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800a498:	4a0c      	ldr	r2, [pc, #48]	@ (800a4cc <HttpDeamonHandleRequest::ParseMethod(char*)+0xc4>)
 800a49a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800a49e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a4a2:	428b      	cmp	r3, r1
 800a4a4:	d1f3      	bne.n	800a48e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800a4a6:	2b00      	cmp	r3, #0
 800a4a8:	d1f7      	bne.n	800a49a <HttpDeamonHandleRequest::ParseMethod(char*)+0x92>
 800a4aa:	2301      	movs	r3, #1
 800a4ac:	e7c1      	b.n	800a432 <HttpDeamonHandleRequest::ParseMethod(char*)+0x2a>
 800a4ae:	f240 10f9 	movw	r0, #505	@ 0x1f9
 800a4b2:	bd10      	pop	{r4, pc}
 800a4b4:	08014bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, lr}
 800a4b8:	08014bf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, fp, lr}
 800a4bc:	08014c04 	stmdaeq	r1, {r2, sl, fp, lr}
 800a4c0:	08014c08 	stmdaeq	r1, {r3, sl, fp, lr}
 800a4c4:	08014c10 	stmdaeq	r1, {r4, sl, fp, lr}
 800a4c8:	08014c14 	stmdaeq	r1, {r2, r4, sl, fp, lr}
 800a4cc:	08014bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, lr}

0800a4d0 <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
 800a4d0:	b538      	push	{r3, r4, r5, lr}
 800a4d2:	460b      	mov	r3, r1
 800a4d4:	4605      	mov	r5, r0
 800a4d6:	493f      	ldr	r1, [pc, #252]	@ (800a5d4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>)
 800a4d8:	4618      	mov	r0, r3
 800a4da:	f009 fa37 	bl	801394c <strtok>
 800a4de:	b370      	cbz	r0, 800a53e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800a4e0:	1e41      	subs	r1, r0, #1
 800a4e2:	4c3d      	ldr	r4, [pc, #244]	@ (800a5d8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x108>)
 800a4e4:	468c      	mov	ip, r1
 800a4e6:	e000      	b.n	800a4ea <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a>
 800a4e8:	b360      	cbz	r0, 800a544 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x74>
 800a4ea:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 800a4ee:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800a4f2:	2b19      	cmp	r3, #25
 800a4f4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a4f8:	f1a3 0e41 	sub.w	lr, r3, #65	@ 0x41
 800a4fc:	4602      	mov	r2, r0
 800a4fe:	bf98      	it	ls
 800a500:	f100 0220 	addls.w	r2, r0, #32
 800a504:	f1be 0f19 	cmp.w	lr, #25
 800a508:	bf98      	it	ls
 800a50a:	3320      	addls	r3, #32
 800a50c:	4293      	cmp	r3, r2
 800a50e:	d0eb      	beq.n	800a4e8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18>
 800a510:	4832      	ldr	r0, [pc, #200]	@ (800a5dc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>)
 800a512:	e000      	b.n	800a516 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x46>
 800a514:	b34c      	cbz	r4, 800a56a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x9a>
 800a516:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a51a:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
 800a51e:	2b19      	cmp	r3, #25
 800a520:	f810 3b01 	ldrb.w	r3, [r0], #1
 800a524:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800a528:	4622      	mov	r2, r4
 800a52a:	bf98      	it	ls
 800a52c:	f104 0220 	addls.w	r2, r4, #32
 800a530:	f1bc 0f19 	cmp.w	ip, #25
 800a534:	bf98      	it	ls
 800a536:	3320      	addls	r3, #32
 800a538:	4293      	cmp	r3, r2
 800a53a:	d0eb      	beq.n	800a514 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x44>
 800a53c:	e03a      	b.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a53e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800a542:	bd38      	pop	{r3, r4, r5, pc}
 800a544:	4926      	ldr	r1, [pc, #152]	@ (800a5e0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x110>)
 800a546:	f009 fa01 	bl	801394c <strtok>
 800a54a:	2800      	cmp	r0, #0
 800a54c:	d0f7      	beq.n	800a53e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800a54e:	4a25      	ldr	r2, [pc, #148]	@ (800a5e4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x114>)
 800a550:	1e43      	subs	r3, r0, #1
 800a552:	f100 0c0b 	add.w	ip, r0, #11
 800a556:	e001      	b.n	800a55c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
 800a558:	459c      	cmp	ip, r3
 800a55a:	d019      	beq.n	800a590 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xc0>
 800a55c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a560:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a564:	428c      	cmp	r4, r1
 800a566:	d0f7      	beq.n	800a558 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x88>
 800a568:	e024      	b.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a56a:	491f      	ldr	r1, [pc, #124]	@ (800a5e8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x118>)
 800a56c:	4620      	mov	r0, r4
 800a56e:	f009 f9ed 	bl	801394c <strtok>
 800a572:	2800      	cmp	r0, #0
 800a574:	d0e3      	beq.n	800a53e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800a576:	7803      	ldrb	r3, [r0, #0]
 800a578:	b1db      	cbz	r3, 800a5b2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe2>
 800a57a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 800a57e:	2a09      	cmp	r2, #9
 800a580:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800a584:	d8db      	bhi.n	800a53e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800a586:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800a58a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800a58e:	e7f3      	b.n	800a578 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xa8>
 800a590:	7b02      	ldrb	r2, [r0, #12]
 800a592:	2a6a      	cmp	r2, #106	@ 0x6a
 800a594:	f100 030c 	add.w	r3, r0, #12
 800a598:	d10e      	bne.n	800a5b8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
 800a59a:	4914      	ldr	r1, [pc, #80]	@ (800a5ec <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x11c>)
 800a59c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a5a0:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800a5a4:	4282      	cmp	r2, r0
 800a5a6:	d105      	bne.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a5a8:	2a00      	cmp	r2, #0
 800a5aa:	d1f7      	bne.n	800a59c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xcc>
 800a5ac:	2303      	movs	r3, #3
 800a5ae:	632b      	str	r3, [r5, #48]	@ 0x30
 800a5b0:	e000      	b.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a5b2:	612c      	str	r4, [r5, #16]
 800a5b4:	20c8      	movs	r0, #200	@ 0xc8
 800a5b6:	bd38      	pop	{r3, r4, r5, pc}
 800a5b8:	2a6f      	cmp	r2, #111	@ 0x6f
 800a5ba:	d1fb      	bne.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a5bc:	490c      	ldr	r1, [pc, #48]	@ (800a5f0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x120>)
 800a5be:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a5c2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800a5c6:	4282      	cmp	r2, r0
 800a5c8:	d1f4      	bne.n	800a5b4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800a5ca:	2a00      	cmp	r2, #0
 800a5cc:	d1f7      	bne.n	800a5be <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xee>
 800a5ce:	2304      	movs	r3, #4
 800a5d0:	e7ed      	b.n	800a5ae <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xde>
 800a5d2:	bf00      	nop
 800a5d4:	08014c18 	stmdaeq	r1, {r3, r4, sl, fp, lr}
 800a5d8:	08014c1c 	stmdaeq	r1, {r2, r3, r4, sl, fp, lr}
 800a5dc:	08014c2c 	stmdaeq	r1, {r2, r3, r5, sl, fp, lr}
 800a5e0:	08014c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, lr}
 800a5e4:	08014c3c 	stmdaeq	r1, {r2, r3, r4, r5, sl, fp, lr}
 800a5e8:	08014bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, lr}
 800a5ec:	08014c4c 	stmdaeq	r1, {r2, r3, r6, sl, fp, lr}
 800a5f0:	08014c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, lr}

0800a5f4 <HttpDeamonHandleRequest::ParseRequest()>:
 800a5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a5f6:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800a5f8:	4605      	mov	r5, r0
 800a5fa:	6940      	ldr	r0, [r0, #20]
 800a5fc:	2400      	movs	r4, #0
 800a5fe:	2205      	movs	r2, #5
 800a600:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800a604:	632a      	str	r2, [r5, #48]	@ 0x30
 800a606:	b300      	cbz	r0, 800a64a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800a608:	4619      	mov	r1, r3
 800a60a:	46a4      	mov	ip, r4
 800a60c:	4626      	mov	r6, r4
 800a60e:	e002      	b.n	800a616 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800a610:	3401      	adds	r4, #1
 800a612:	42a0      	cmp	r0, r4
 800a614:	d919      	bls.n	800a64a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800a616:	5d1a      	ldrb	r2, [r3, r4]
 800a618:	2a0a      	cmp	r2, #10
 800a61a:	d1f9      	bne.n	800a610 <HttpDeamonHandleRequest::ParseRequest()+0x1c>
 800a61c:	4423      	add	r3, r4
 800a61e:	f10c 0701 	add.w	r7, ip, #1
 800a622:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a626:	f1bc 0f00 	cmp.w	ip, #0
 800a62a:	d010      	beq.n	800a64e <HttpDeamonHandleRequest::ParseRequest()+0x5a>
 800a62c:	780b      	ldrb	r3, [r1, #0]
 800a62e:	b193      	cbz	r3, 800a656 <HttpDeamonHandleRequest::ParseRequest()+0x62>
 800a630:	4628      	mov	r0, r5
 800a632:	f7ff ff4d 	bl	800a4d0 <HttpDeamonHandleRequest::ParseHeaderField(char*)>
 800a636:	28c8      	cmp	r0, #200	@ 0xc8
 800a638:	d108      	bne.n	800a64c <HttpDeamonHandleRequest::ParseRequest()+0x58>
 800a63a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800a63c:	6968      	ldr	r0, [r5, #20]
 800a63e:	3401      	adds	r4, #1
 800a640:	1919      	adds	r1, r3, r4
 800a642:	3401      	adds	r4, #1
 800a644:	42a0      	cmp	r0, r4
 800a646:	46bc      	mov	ip, r7
 800a648:	d8e5      	bhi.n	800a616 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800a64a:	20c8      	movs	r0, #200	@ 0xc8
 800a64c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a64e:	4628      	mov	r0, r5
 800a650:	f7ff feda 	bl	800a408 <HttpDeamonHandleRequest::ParseMethod(char*)>
 800a654:	e7ef      	b.n	800a636 <HttpDeamonHandleRequest::ParseRequest()+0x42>
 800a656:	696a      	ldr	r2, [r5, #20]
 800a658:	3a01      	subs	r2, #1
 800a65a:	1b12      	subs	r2, r2, r4
 800a65c:	b292      	uxth	r2, r2
 800a65e:	60ea      	str	r2, [r5, #12]
 800a660:	2a00      	cmp	r2, #0
 800a662:	d0f2      	beq.n	800a64a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800a664:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800a666:	3401      	adds	r4, #1
 800a668:	4421      	add	r1, r4
 800a66a:	61e9      	str	r1, [r5, #28]
 800a66c:	548b      	strb	r3, [r1, r2]
 800a66e:	e7ec      	b.n	800a64a <HttpDeamonHandleRequest::ParseRequest()+0x56>

0800a670 <HttpDeamonHandleRequest::HandleGetTxt()>:
 800a670:	b570      	push	{r4, r5, r6, lr}
 800a672:	4605      	mov	r5, r0
 800a674:	6980      	ldr	r0, [r0, #24]
 800a676:	7983      	ldrb	r3, [r0, #6]
 800a678:	2b00      	cmp	r3, #0
 800a67a:	d039      	beq.n	800a6f0 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800a67c:	1d84      	adds	r4, r0, #6
 800a67e:	4623      	mov	r3, r4
 800a680:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a684:	2a00      	cmp	r2, #0
 800a686:	d1fb      	bne.n	800a680 <HttpDeamonHandleRequest::HandleGetTxt()+0x10>
 800a688:	1b1a      	subs	r2, r3, r4
 800a68a:	2a04      	cmp	r2, #4
 800a68c:	d930      	bls.n	800a6f0 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800a68e:	1f13      	subs	r3, r2, #4
 800a690:	18e1      	adds	r1, r4, r3
 800a692:	5ce3      	ldrb	r3, [r4, r3]
 800a694:	2b2e      	cmp	r3, #46	@ 0x2e
 800a696:	d12b      	bne.n	800a6f0 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800a698:	4c18      	ldr	r4, [pc, #96]	@ (800a6fc <HttpDeamonHandleRequest::HandleGetTxt()+0x8c>)
 800a69a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a69e:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800a6a2:	4563      	cmp	r3, ip
 800a6a4:	d124      	bne.n	800a6f0 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800a6a6:	2b00      	cmp	r3, #0
 800a6a8:	d1f7      	bne.n	800a69a <HttpDeamonHandleRequest::HandleGetTxt()+0x2a>
 800a6aa:	4c15      	ldr	r4, [pc, #84]	@ (800a700 <HttpDeamonHandleRequest::HandleGetTxt()+0x90>)
 800a6ac:	7821      	ldrb	r1, [r4, #0]
 800a6ae:	f041 0601 	orr.w	r6, r1, #1
 800a6b2:	1d43      	adds	r3, r0, #5
 800a6b4:	7026      	strb	r6, [r4, #0]
 800a6b6:	4813      	ldr	r0, [pc, #76]	@ (800a704 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800a6b8:	f001 0601 	and.w	r6, r1, #1
 800a6bc:	e003      	b.n	800a6c6 <HttpDeamonHandleRequest::HandleGetTxt()+0x56>
 800a6be:	3a01      	subs	r2, #1
 800a6c0:	f800 1b01 	strb.w	r1, [r0], #1
 800a6c4:	d005      	beq.n	800a6d2 <HttpDeamonHandleRequest::HandleGetTxt()+0x62>
 800a6c6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a6ca:	2900      	cmp	r1, #0
 800a6cc:	d1f7      	bne.n	800a6be <HttpDeamonHandleRequest::HandleGetTxt()+0x4e>
 800a6ce:	f008 fdeb 	bl	80132a8 <memset>
 800a6d2:	4b0d      	ldr	r3, [pc, #52]	@ (800a708 <HttpDeamonHandleRequest::HandleGetTxt()+0x98>)
 800a6d4:	490b      	ldr	r1, [pc, #44]	@ (800a704 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800a6d6:	6818      	ldr	r0, [r3, #0]
 800a6d8:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800a6dc:	f7ff fa80 	bl	8009be0 <RemoteConfig::HandleGet(void*, unsigned long)>
 800a6e0:	7823      	ldrb	r3, [r4, #0]
 800a6e2:	60a8      	str	r0, [r5, #8]
 800a6e4:	b93e      	cbnz	r6, 800a6f6 <HttpDeamonHandleRequest::HandleGetTxt()+0x86>
 800a6e6:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800a6ea:	7023      	strb	r3, [r4, #0]
 800a6ec:	20c8      	movs	r0, #200	@ 0xc8
 800a6ee:	bd70      	pop	{r4, r5, r6, pc}
 800a6f0:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800a6f4:	bd70      	pop	{r4, r5, r6, pc}
 800a6f6:	f043 0301 	orr.w	r3, r3, #1
 800a6fa:	e7f6      	b.n	800a6ea <HttpDeamonHandleRequest::HandleGetTxt()+0x7a>
 800a6fc:	08014c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, lr}
 800a700:	20000a8d 	andcs	r0, r0, sp, lsl #21
 800a704:	200000a0 	andcs	r0, r0, r0, lsr #1
 800a708:	2000009c 	mulcs	r0, ip, r0

0800a70c <HttpDeamonHandleRequest::HandleGet()>:
 800a70c:	b510      	push	{r4, lr}
 800a70e:	4604      	mov	r4, r0
 800a710:	b082      	sub	sp, #8
 800a712:	6980      	ldr	r0, [r0, #24]
 800a714:	4b5b      	ldr	r3, [pc, #364]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a716:	6223      	str	r3, [r4, #32]
 800a718:	2100      	movs	r1, #0
 800a71a:	4a5b      	ldr	r2, [pc, #364]	@ (800a888 <HttpDeamonHandleRequest::HandleGet()+0x17c>)
 800a71c:	9101      	str	r1, [sp, #4]
 800a71e:	1e43      	subs	r3, r0, #1
 800a720:	f100 0e05 	add.w	lr, r0, #5
 800a724:	e001      	b.n	800a72a <HttpDeamonHandleRequest::HandleGet()+0x1e>
 800a726:	459e      	cmp	lr, r3
 800a728:	d01f      	beq.n	800a76a <HttpDeamonHandleRequest::HandleGet()+0x5e>
 800a72a:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800a72e:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a732:	458c      	cmp	ip, r1
 800a734:	d0f7      	beq.n	800a726 <HttpDeamonHandleRequest::HandleGet()+0x1a>
 800a736:	7803      	ldrb	r3, [r0, #0]
 800a738:	2b2f      	cmp	r3, #47	@ 0x2f
 800a73a:	d173      	bne.n	800a824 <HttpDeamonHandleRequest::HandleGet()+0x118>
 800a73c:	4a53      	ldr	r2, [pc, #332]	@ (800a88c <HttpDeamonHandleRequest::HandleGet()+0x180>)
 800a73e:	4601      	mov	r1, r0
 800a740:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a744:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800a748:	4563      	cmp	r3, ip
 800a74a:	d13c      	bne.n	800a7c6 <HttpDeamonHandleRequest::HandleGet()+0xba>
 800a74c:	2b00      	cmp	r3, #0
 800a74e:	d1f7      	bne.n	800a740 <HttpDeamonHandleRequest::HandleGet()+0x34>
 800a750:	484f      	ldr	r0, [pc, #316]	@ (800a890 <HttpDeamonHandleRequest::HandleGet()+0x184>)
 800a752:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800a756:	a901      	add	r1, sp, #4
 800a758:	f000 fac2 	bl	800ace0 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
 800a75c:	9b01      	ldr	r3, [sp, #4]
 800a75e:	6220      	str	r0, [r4, #32]
 800a760:	b36b      	cbz	r3, 800a7be <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800a762:	60a3      	str	r3, [r4, #8]
 800a764:	20c8      	movs	r0, #200	@ 0xc8
 800a766:	b002      	add	sp, #8
 800a768:	bd10      	pop	{r4, pc}
 800a76a:	2303      	movs	r3, #3
 800a76c:	6323      	str	r3, [r4, #48]	@ 0x30
 800a76e:	7982      	ldrb	r2, [r0, #6]
 800a770:	1dc1      	adds	r1, r0, #7
 800a772:	2a00      	cmp	r2, #0
 800a774:	d052      	beq.n	800a81c <HttpDeamonHandleRequest::HandleGet()+0x110>
 800a776:	f241 5305 	movw	r3, #5381	@ 0x1505
 800a77a:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800a77e:	fa12 f383 	uxtah	r3, r2, r3
 800a782:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a786:	b29b      	uxth	r3, r3
 800a788:	2a00      	cmp	r2, #0
 800a78a:	d1f6      	bne.n	800a77a <HttpDeamonHandleRequest::HandleGet()+0x6e>
 800a78c:	f244 729b 	movw	r2, #18331	@ 0x479b
 800a790:	4293      	cmp	r3, r2
 800a792:	d04c      	beq.n	800a82e <HttpDeamonHandleRequest::HandleGet()+0x122>
 800a794:	d82f      	bhi.n	800a7f6 <HttpDeamonHandleRequest::HandleGet()+0xea>
 800a796:	f241 6261 	movw	r2, #5729	@ 0x1661
 800a79a:	4293      	cmp	r3, r2
 800a79c:	d055      	beq.n	800a84a <HttpDeamonHandleRequest::HandleGet()+0x13e>
 800a79e:	f242 4272 	movw	r2, #9330	@ 0x2472
 800a7a2:	4293      	cmp	r3, r2
 800a7a4:	d04a      	beq.n	800a83c <HttpDeamonHandleRequest::HandleGet()+0x130>
 800a7a6:	f241 12fa 	movw	r2, #4602	@ 0x11fa
 800a7aa:	4293      	cmp	r3, r2
 800a7ac:	d136      	bne.n	800a81c <HttpDeamonHandleRequest::HandleGet()+0x110>
 800a7ae:	4835      	ldr	r0, [pc, #212]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a7b0:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a7b4:	f000 fa8e 	bl	800acd4 <remoteconfig::json_get_directory(char*, unsigned long)>
 800a7b8:	4603      	mov	r3, r0
 800a7ba:	2b00      	cmp	r3, #0
 800a7bc:	d1d1      	bne.n	800a762 <HttpDeamonHandleRequest::HandleGet()+0x56>
 800a7be:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800a7c2:	b002      	add	sp, #8
 800a7c4:	bd10      	pop	{r4, pc}
 800a7c6:	4a33      	ldr	r2, [pc, #204]	@ (800a894 <HttpDeamonHandleRequest::HandleGet()+0x188>)
 800a7c8:	4601      	mov	r1, r0
 800a7ca:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a7ce:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800a7d2:	4563      	cmp	r3, ip
 800a7d4:	d103      	bne.n	800a7de <HttpDeamonHandleRequest::HandleGet()+0xd2>
 800a7d6:	2b00      	cmp	r3, #0
 800a7d8:	d1f7      	bne.n	800a7ca <HttpDeamonHandleRequest::HandleGet()+0xbe>
 800a7da:	482f      	ldr	r0, [pc, #188]	@ (800a898 <HttpDeamonHandleRequest::HandleGet()+0x18c>)
 800a7dc:	e7b9      	b.n	800a752 <HttpDeamonHandleRequest::HandleGet()+0x46>
 800a7de:	4a2f      	ldr	r2, [pc, #188]	@ (800a89c <HttpDeamonHandleRequest::HandleGet()+0x190>)
 800a7e0:	4601      	mov	r1, r0
 800a7e2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a7e6:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800a7ea:	4563      	cmp	r3, ip
 800a7ec:	d11a      	bne.n	800a824 <HttpDeamonHandleRequest::HandleGet()+0x118>
 800a7ee:	2b00      	cmp	r3, #0
 800a7f0:	d1f7      	bne.n	800a7e2 <HttpDeamonHandleRequest::HandleGet()+0xd6>
 800a7f2:	482b      	ldr	r0, [pc, #172]	@ (800a8a0 <HttpDeamonHandleRequest::HandleGet()+0x194>)
 800a7f4:	e7ad      	b.n	800a752 <HttpDeamonHandleRequest::HandleGet()+0x46>
 800a7f6:	f248 127b 	movw	r2, #33147	@ 0x817b
 800a7fa:	4293      	cmp	r3, r2
 800a7fc:	d037      	beq.n	800a86e <HttpDeamonHandleRequest::HandleGet()+0x162>
 800a7fe:	f24b 72d9 	movw	r2, #47065	@ 0xb7d9
 800a802:	4293      	cmp	r3, r2
 800a804:	d028      	beq.n	800a858 <HttpDeamonHandleRequest::HandleGet()+0x14c>
 800a806:	f646 424b 	movw	r2, #27723	@ 0x6c4b
 800a80a:	4293      	cmp	r3, r2
 800a80c:	d106      	bne.n	800a81c <HttpDeamonHandleRequest::HandleGet()+0x110>
 800a80e:	481d      	ldr	r0, [pc, #116]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a810:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a814:	f000 fa2c 	bl	800ac70 <remoteconfig::json_get_version(char*, unsigned long)>
 800a818:	4603      	mov	r3, r0
 800a81a:	e7ce      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a81c:	4620      	mov	r0, r4
 800a81e:	f7ff ff27 	bl	800a670 <HttpDeamonHandleRequest::HandleGetTxt()>
 800a822:	e7a0      	b.n	800a766 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800a824:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800a828:	a901      	add	r1, sp, #4
 800a82a:	3001      	adds	r0, #1
 800a82c:	e794      	b.n	800a758 <HttpDeamonHandleRequest::HandleGet()+0x4c>
 800a82e:	4815      	ldr	r0, [pc, #84]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a830:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a834:	f000 fa42 	bl	800acbc <remoteconfig::json_get_display(char*, unsigned long)>
 800a838:	4603      	mov	r3, r0
 800a83a:	e7be      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a83c:	4811      	ldr	r0, [pc, #68]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a83e:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a842:	f005 ffc5 	bl	80107d0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
 800a846:	4603      	mov	r3, r0
 800a848:	e7b7      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a84a:	480e      	ldr	r0, [pc, #56]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a84c:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a850:	f000 f9dc 	bl	800ac0c <remoteconfig::json_get_list(char*, unsigned long)>
 800a854:	4603      	mov	r3, r0
 800a856:	e7b0      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a858:	4b12      	ldr	r3, [pc, #72]	@ (800a8a4 <HttpDeamonHandleRequest::HandleGet()+0x198>)
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	7bdb      	ldrb	r3, [r3, #15]
 800a85e:	b16b      	cbz	r3, 800a87c <HttpDeamonHandleRequest::HandleGet()+0x170>
 800a860:	4808      	ldr	r0, [pc, #32]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a862:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a866:	f000 fa1f 	bl	800aca8 <remoteconfig::json_get_uptime(char*, unsigned long)>
 800a86a:	4603      	mov	r3, r0
 800a86c:	e7a5      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a86e:	4805      	ldr	r0, [pc, #20]	@ (800a884 <HttpDeamonHandleRequest::HandleGet()+0x178>)
 800a870:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800a874:	f006 fcb8 	bl	80111e8 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)>
 800a878:	4603      	mov	r3, r0
 800a87a:	e79e      	b.n	800a7ba <HttpDeamonHandleRequest::HandleGet()+0xae>
 800a87c:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800a880:	e771      	b.n	800a766 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800a882:	bf00      	nop
 800a884:	200000a0 	andcs	r0, r0, r0, lsr #1
 800a888:	08014c70 	stmdaeq	r1, {r4, r5, r6, sl, fp, lr}
 800a88c:	08014c04 	stmdaeq	r1, {r2, sl, fp, lr}
 800a890:	08014c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, lr}
 800a894:	08014c84 	stmdaeq	r1, {r2, r7, sl, fp, lr}
 800a898:	08014c8c 	stmdaeq	r1, {r2, r3, r7, sl, fp, lr}
 800a89c:	08014c98 	stmdaeq	r1, {r3, r4, r7, sl, fp, lr}
 800a8a0:	08014ca0 	stmdaeq	r1, {r5, r7, sl, fp, lr}
 800a8a4:	2000009c 	mulcs	r0, ip, r0

0800a8a8 <HttpDeamonHandleRequest::HandlePost(bool)>:
 800a8a8:	b570      	push	{r4, r5, r6, lr}
 800a8aa:	4604      	mov	r4, r0
 800a8ac:	b082      	sub	sp, #8
 800a8ae:	b331      	cbz	r1, 800a8fe <HttpDeamonHandleRequest::HandlePost(bool)+0x56>
 800a8b0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800a8b2:	8aa1      	ldrh	r1, [r4, #20]
 800a8b4:	61e0      	str	r0, [r4, #28]
 800a8b6:	60e1      	str	r1, [r4, #12]
 800a8b8:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
 800a8bc:	2b00      	cmp	r3, #0
 800a8be:	d13c      	bne.n	800a93a <HttpDeamonHandleRequest::HandlePost(bool)+0x92>
 800a8c0:	4d67      	ldr	r5, [pc, #412]	@ (800aa60 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b8>)
 800a8c2:	4b68      	ldr	r3, [pc, #416]	@ (800aa64 <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800a8c4:	782e      	ldrb	r6, [r5, #0]
 800a8c6:	460a      	mov	r2, r1
 800a8c8:	4601      	mov	r1, r0
 800a8ca:	6818      	ldr	r0, [r3, #0]
 800a8cc:	f046 0301 	orr.w	r3, r6, #1
 800a8d0:	702b      	strb	r3, [r5, #0]
 800a8d2:	f7ff fa31 	bl	8009d38 <RemoteConfig::HandleSet(void*, unsigned long)>
 800a8d6:	782b      	ldrb	r3, [r5, #0]
 800a8d8:	07f2      	lsls	r2, r6, #31
 800a8da:	bf4c      	ite	mi
 800a8dc:	f043 0301 	orrmi.w	r3, r3, #1
 800a8e0:	f023 0301 	bicpl.w	r3, r3, #1
 800a8e4:	702b      	strb	r3, [r5, #0]
 800a8e6:	2300      	movs	r3, #0
 800a8e8:	4a5f      	ldr	r2, [pc, #380]	@ (800aa68 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800a8ea:	4860      	ldr	r0, [pc, #384]	@ (800aa6c <HttpDeamonHandleRequest::HandlePost(bool)+0x1c4>)
 800a8ec:	6323      	str	r3, [r4, #48]	@ 0x30
 800a8ee:	f240 519f 	movw	r1, #1439	@ 0x59f
 800a8f2:	f008 ffe5 	bl	80138c0 <snprintf>
 800a8f6:	60a0      	str	r0, [r4, #8]
 800a8f8:	20c8      	movs	r0, #200	@ 0xc8
 800a8fa:	b002      	add	sp, #8
 800a8fc:	bd70      	pop	{r4, r5, r6, pc}
 800a8fe:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800a900:	2b03      	cmp	r3, #3
 800a902:	d134      	bne.n	800a96e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800a904:	6985      	ldr	r5, [r0, #24]
 800a906:	782b      	ldrb	r3, [r5, #0]
 800a908:	2b2f      	cmp	r3, #47	@ 0x2f
 800a90a:	f040 809a 	bne.w	800aa42 <HttpDeamonHandleRequest::HandlePost(bool)+0x19a>
 800a90e:	4a58      	ldr	r2, [pc, #352]	@ (800aa70 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>)
 800a910:	4629      	mov	r1, r5
 800a912:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a916:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a91a:	4283      	cmp	r3, r0
 800a91c:	d12b      	bne.n	800a976 <HttpDeamonHandleRequest::HandlePost(bool)+0xce>
 800a91e:	2b00      	cmp	r3, #0
 800a920:	d1f7      	bne.n	800a912 <HttpDeamonHandleRequest::HandlePost(bool)+0x6a>
 800a922:	2301      	movs	r3, #1
 800a924:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800a928:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800a92c:	429a      	cmp	r2, r3
 800a92e:	d3e3      	bcc.n	800a8f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800a930:	68e1      	ldr	r1, [r4, #12]
 800a932:	2900      	cmp	r1, #0
 800a934:	d0e0      	beq.n	800a8f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800a936:	69e0      	ldr	r0, [r4, #28]
 800a938:	e7be      	b.n	800a8b8 <HttpDeamonHandleRequest::HandlePost(bool)+0x10>
 800a93a:	2201      	movs	r2, #1
 800a93c:	f005 f910 	bl	800fb60 <properties::convert_json_file(char*, unsigned long, bool)>
 800a940:	1e05      	subs	r5, r0, #0
 800a942:	dd14      	ble.n	800a96e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800a944:	69e3      	ldr	r3, [r4, #28]
 800a946:	494b      	ldr	r1, [pc, #300]	@ (800aa74 <HttpDeamonHandleRequest::HandlePost(bool)+0x1cc>)
 800a948:	442b      	add	r3, r5
 800a94a:	2200      	movs	r2, #0
 800a94c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a950:	69e0      	ldr	r0, [r4, #28]
 800a952:	f10d 0207 	add.w	r2, sp, #7
 800a956:	f005 fb18 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a95a:	bb20      	cbnz	r0, 800a9a6 <HttpDeamonHandleRequest::HandlePost(bool)+0xfe>
 800a95c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a960:	2b00      	cmp	r3, #0
 800a962:	d0c0      	beq.n	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800a964:	4b3f      	ldr	r3, [pc, #252]	@ (800aa64 <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800a966:	6818      	ldr	r0, [r3, #0]
 800a968:	7b83      	ldrb	r3, [r0, #14]
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d176      	bne.n	800aa5c <HttpDeamonHandleRequest::HandlePost(bool)+0x1b4>
 800a96e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800a972:	b002      	add	sp, #8
 800a974:	bd70      	pop	{r4, r5, r6, pc}
 800a976:	1a1b      	subs	r3, r3, r0
 800a978:	2b00      	cmp	r3, #0
 800a97a:	bf0c      	ite	eq
 800a97c:	2301      	moveq	r3, #1
 800a97e:	2300      	movne	r3, #0
 800a980:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800a984:	d0d0      	beq.n	800a928 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800a986:	782b      	ldrb	r3, [r5, #0]
 800a988:	2b2f      	cmp	r3, #47	@ 0x2f
 800a98a:	d109      	bne.n	800a9a0 <HttpDeamonHandleRequest::HandlePost(bool)+0xf8>
 800a98c:	4a3a      	ldr	r2, [pc, #232]	@ (800aa78 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d0>)
 800a98e:	e001      	b.n	800a994 <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
 800a990:	2b00      	cmp	r3, #0
 800a992:	d0c9      	beq.n	800a928 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800a994:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800a998:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a99c:	428b      	cmp	r3, r1
 800a99e:	d0f7      	beq.n	800a990 <HttpDeamonHandleRequest::HandlePost(bool)+0xe8>
 800a9a0:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800a9a4:	e7a9      	b.n	800a8fa <HttpDeamonHandleRequest::HandlePost(bool)+0x52>
 800a9a6:	4935      	ldr	r1, [pc, #212]	@ (800aa7c <HttpDeamonHandleRequest::HandlePost(bool)+0x1d4>)
 800a9a8:	69e0      	ldr	r0, [r4, #28]
 800a9aa:	f10d 0207 	add.w	r2, sp, #7
 800a9ae:	f005 faec 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a9b2:	b180      	cbz	r0, 800a9d6 <HttpDeamonHandleRequest::HandlePost(bool)+0x12e>
 800a9b4:	4932      	ldr	r1, [pc, #200]	@ (800aa80 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d8>)
 800a9b6:	69e0      	ldr	r0, [r4, #28]
 800a9b8:	f10d 0207 	add.w	r2, sp, #7
 800a9bc:	f005 fae5 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a9c0:	bb18      	cbnz	r0, 800aa0a <HttpDeamonHandleRequest::HandlePost(bool)+0x162>
 800a9c2:	4a30      	ldr	r2, [pc, #192]	@ (800aa84 <HttpDeamonHandleRequest::HandlePost(bool)+0x1dc>)
 800a9c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a9c8:	6810      	ldr	r0, [r2, #0]
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d03c      	beq.n	800aa48 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a0>
 800a9ce:	2104      	movs	r1, #4
 800a9d0:	f005 febd 	bl	801074e <Hardware::SetMode(hardware::ledblink::Mode)>
 800a9d4:	e787      	b.n	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800a9d6:	4b2c      	ldr	r3, [pc, #176]	@ (800aa88 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e0>)
 800a9d8:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a9dc:	681d      	ldr	r5, [r3, #0]
 800a9de:	69a8      	ldr	r0, [r5, #24]
 800a9e0:	fab6 f186 	clz	r1, r6
 800a9e4:	0949      	lsrs	r1, r1, #5
 800a9e6:	2800      	cmp	r0, #0
 800a9e8:	f43f af7d 	beq.w	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800a9ec:	6803      	ldr	r3, [r0, #0]
 800a9ee:	4a27      	ldr	r2, [pc, #156]	@ (800aa8c <HttpDeamonHandleRequest::HandlePost(bool)+0x1e4>)
 800a9f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a9f2:	7569      	strb	r1, [r5, #21]
 800a9f4:	4293      	cmp	r3, r2
 800a9f6:	d106      	bne.n	800aa06 <HttpDeamonHandleRequest::HandlePost(bool)+0x15e>
 800a9f8:	2e00      	cmp	r6, #0
 800a9fa:	f43f af74 	beq.w	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800a9fe:	4b24      	ldr	r3, [pc, #144]	@ (800aa90 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e8>)
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	606b      	str	r3, [r5, #4]
 800aa04:	e76f      	b.n	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800aa06:	4798      	blx	r3
 800aa08:	e7f6      	b.n	800a9f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x150>
 800aa0a:	69e0      	ldr	r0, [r4, #28]
 800aa0c:	4921      	ldr	r1, [pc, #132]	@ (800aa94 <HttpDeamonHandleRequest::HandlePost(bool)+0x1ec>)
 800aa0e:	1e42      	subs	r2, r0, #1
 800aa10:	f100 0e04 	add.w	lr, r0, #4
 800aa14:	4613      	mov	r3, r2
 800aa16:	e001      	b.n	800aa1c <HttpDeamonHandleRequest::HandlePost(bool)+0x174>
 800aa18:	4573      	cmp	r3, lr
 800aa1a:	d017      	beq.n	800aa4c <HttpDeamonHandleRequest::HandlePost(bool)+0x1a4>
 800aa1c:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800aa20:	f811 6b01 	ldrb.w	r6, [r1], #1
 800aa24:	45b4      	cmp	ip, r6
 800aa26:	d0f7      	beq.n	800aa18 <HttpDeamonHandleRequest::HandlePost(bool)+0x170>
 800aa28:	4b1b      	ldr	r3, [pc, #108]	@ (800aa98 <HttpDeamonHandleRequest::HandlePost(bool)+0x1f0>)
 800aa2a:	f100 0c03 	add.w	ip, r0, #3
 800aa2e:	e001      	b.n	800aa34 <HttpDeamonHandleRequest::HandlePost(bool)+0x18c>
 800aa30:	4594      	cmp	ip, r2
 800aa32:	d00f      	beq.n	800aa54 <HttpDeamonHandleRequest::HandlePost(bool)+0x1ac>
 800aa34:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800aa38:	f813 1b01 	ldrb.w	r1, [r3], #1
 800aa3c:	428e      	cmp	r6, r1
 800aa3e:	d0f7      	beq.n	800aa30 <HttpDeamonHandleRequest::HandlePost(bool)+0x188>
 800aa40:	e795      	b.n	800a96e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800aa42:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800aa46:	e79e      	b.n	800a986 <HttpDeamonHandleRequest::HandlePost(bool)+0xde>
 800aa48:	2102      	movs	r1, #2
 800aa4a:	e7c1      	b.n	800a9d0 <HttpDeamonHandleRequest::HandlePost(bool)+0x128>
 800aa4c:	4629      	mov	r1, r5
 800aa4e:	f005 ff29 	bl	80108a4 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
 800aa52:	e748      	b.n	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800aa54:	4629      	mov	r1, r5
 800aa56:	f006 fc15 	bl	8011284 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)>
 800aa5a:	e744      	b.n	800a8e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800aa5c:	f7ff fc0e 	bl	800a27c <RemoteConfig::HandleReboot()>
 800aa60:	20000a8d 	andcs	r0, r0, sp, lsl #21
 800aa64:	2000009c 	mulcs	r0, ip, r0
 800aa68:	08014cf0 	stmdaeq	r1, {r4, r5, r6, r7, sl, fp, lr}
 800aa6c:	200000a0 	andcs	r0, r0, r0, lsr #1
 800aa70:	08014cac 	stmdaeq	r1, {r2, r3, r5, r7, sl, fp, lr}
 800aa74:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800aa78:	08014cbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, fp, lr}
 800aa7c:	08014ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, lr}
 800aa80:	08014cd4 	stmdaeq	r1, {r2, r4, r6, r7, sl, fp, lr}
 800aa84:	20000b7c 	andcs	r0, r0, ip, ror fp
 800aa88:	20000a90 	mulcs	r0, r0, sl
 800aa8c:	0800a405 	stmdaeq	r0, {r0, r2, sl, sp, pc}
 800aa90:	20004830 	andcs	r4, r0, r0, lsr r8
 800aa94:	08014ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, lr}
 800aa98:	08014ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, lr}

0800aa9c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
 800aa9c:	b570      	push	{r4, r5, r6, lr}
 800aa9e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aaa0:	6141      	str	r1, [r0, #20]
 800aaa2:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800aaa6:	b084      	sub	sp, #16
 800aaa8:	4604      	mov	r4, r0
 800aaaa:	6242      	str	r2, [r0, #36]	@ 0x24
 800aaac:	d05f      	beq.n	800ab6e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xd2>
 800aaae:	2bc8      	cmp	r3, #200	@ 0xc8
 800aab0:	d055      	beq.n	800ab5e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc2>
 800aab2:	f5b3 7fcf 	cmp.w	r3, #414	@ 0x19e
 800aab6:	dc10      	bgt.n	800aada <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x3e>
 800aab8:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800aabc:	db1c      	blt.n	800aaf8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800aabe:	f5a3 72c8 	sub.w	r2, r3, #400	@ 0x190
 800aac2:	2a0e      	cmp	r2, #14
 800aac4:	d818      	bhi.n	800aaf8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800aac6:	e8df f002 	tbb	[pc, r2]
 800aaca:	17171772 			@ <UNDEFINED> instruction: 0x17171772
 800aace:	17171770 			@ <UNDEFINED> instruction: 0x17171770
 800aad2:	17171717 			@ <UNDEFINED> instruction: 0x17171717
 800aad6:	00606217 	rsbeq	r6, r0, r7, lsl r2
 800aada:	f240 12f5 	movw	r2, #501	@ 0x1f5
 800aade:	4293      	cmp	r3, r2
 800aae0:	d057      	beq.n	800ab92 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xf6>
 800aae2:	f240 12f9 	movw	r2, #505	@ 0x1f9
 800aae6:	4293      	cmp	r3, r2
 800aae8:	d04d      	beq.n	800ab86 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xea>
 800aaea:	4e3a      	ldr	r6, [pc, #232]	@ (800abd4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800aaec:	4a3a      	ldr	r2, [pc, #232]	@ (800abd8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x13c>)
 800aaee:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800aaf2:	bf08      	it	eq
 800aaf4:	4616      	moveq	r6, r2
 800aaf6:	e000      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800aaf8:	4e36      	ldr	r6, [pc, #216]	@ (800abd4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800aafa:	4838      	ldr	r0, [pc, #224]	@ (800abdc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>)
 800aafc:	6220      	str	r0, [r4, #32]
 800aafe:	2200      	movs	r2, #0
 800ab00:	6322      	str	r2, [r4, #48]	@ 0x30
 800ab02:	f240 519f 	movw	r1, #1439	@ 0x59f
 800ab06:	e9cd 6600 	strd	r6, r6, [sp]
 800ab0a:	4a35      	ldr	r2, [pc, #212]	@ (800abe0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x144>)
 800ab0c:	f008 fed8 	bl	80138c0 <snprintf>
 800ab10:	e9d4 5309 	ldrd	r5, r3, [r4, #36]	@ 0x24
 800ab14:	60a0      	str	r0, [r4, #8]
 800ab16:	4933      	ldr	r1, [pc, #204]	@ (800abe4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>)
 800ab18:	9003      	str	r0, [sp, #12]
 800ab1a:	9600      	str	r6, [sp, #0]
 800ab1c:	6809      	ldr	r1, [r1, #0]
 800ab1e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800ab20:	4a31      	ldr	r2, [pc, #196]	@ (800abe8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x14c>)
 800ab22:	3116      	adds	r1, #22
 800ab24:	9101      	str	r1, [sp, #4]
 800ab26:	4931      	ldr	r1, [pc, #196]	@ (800abec <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x150>)
 800ab28:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800ab2c:	9102      	str	r1, [sp, #8]
 800ab2e:	4628      	mov	r0, r5
 800ab30:	f240 519f 	movw	r1, #1439	@ 0x59f
 800ab34:	f008 fec4 	bl	80138c0 <snprintf>
 800ab38:	6823      	ldr	r3, [r4, #0]
 800ab3a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ab3c:	4602      	mov	r2, r0
 800ab3e:	6860      	ldr	r0, [r4, #4]
 800ab40:	f003 f9ba 	bl	800deb8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800ab44:	6823      	ldr	r3, [r4, #0]
 800ab46:	68a2      	ldr	r2, [r4, #8]
 800ab48:	6a21      	ldr	r1, [r4, #32]
 800ab4a:	6860      	ldr	r0, [r4, #4]
 800ab4c:	f003 f9b4 	bl	800deb8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800ab50:	f44f 7202 	mov.w	r2, #520	@ 0x208
 800ab54:	2303      	movs	r3, #3
 800ab56:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 800ab5a:	b004      	add	sp, #16
 800ab5c:	bd70      	pop	{r4, r5, r6, pc}
 800ab5e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800ab60:	2901      	cmp	r1, #1
 800ab62:	4615      	mov	r5, r2
 800ab64:	d017      	beq.n	800ab96 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfa>
 800ab66:	68a0      	ldr	r0, [r4, #8]
 800ab68:	4e21      	ldr	r6, [pc, #132]	@ (800abf0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800ab6a:	23c8      	movs	r3, #200	@ 0xc8
 800ab6c:	e7d3      	b.n	800ab16 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800ab6e:	f7ff fd41 	bl	800a5f4 <HttpDeamonHandleRequest::ParseRequest()>
 800ab72:	28c8      	cmp	r0, #200	@ 0xc8
 800ab74:	4603      	mov	r3, r0
 800ab76:	62a0      	str	r0, [r4, #40]	@ 0x28
 800ab78:	d19b      	bne.n	800aab2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800ab7a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ab7c:	b1cb      	cbz	r3, 800abb2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x116>
 800ab7e:	2b01      	cmp	r3, #1
 800ab80:	d01b      	beq.n	800abba <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x11e>
 800ab82:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800ab84:	e7ef      	b.n	800ab66 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xca>
 800ab86:	4e1b      	ldr	r6, [pc, #108]	@ (800abf4 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x158>)
 800ab88:	e7b7      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800ab8a:	4e1b      	ldr	r6, [pc, #108]	@ (800abf8 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x15c>)
 800ab8c:	e7b5      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800ab8e:	4e1b      	ldr	r6, [pc, #108]	@ (800abfc <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x160>)
 800ab90:	e7b3      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800ab92:	4e1b      	ldr	r6, [pc, #108]	@ (800ac00 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x164>)
 800ab94:	e7b1      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800ab96:	f7ff fe87 	bl	800a8a8 <HttpDeamonHandleRequest::HandlePost(bool)>
 800ab9a:	28c8      	cmp	r0, #200	@ 0xc8
 800ab9c:	4603      	mov	r3, r0
 800ab9e:	62a0      	str	r0, [r4, #40]	@ 0x28
 800aba0:	d187      	bne.n	800aab2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800aba2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800aba4:	68a0      	ldr	r0, [r4, #8]
 800aba6:	4e12      	ldr	r6, [pc, #72]	@ (800abf0 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800aba8:	e7b5      	b.n	800ab16 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800abaa:	4e16      	ldr	r6, [pc, #88]	@ (800ac04 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x168>)
 800abac:	e7a5      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800abae:	4e16      	ldr	r6, [pc, #88]	@ (800ac08 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16c>)
 800abb0:	e7a3      	b.n	800aafa <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800abb2:	4620      	mov	r0, r4
 800abb4:	f7ff fdaa 	bl	800a70c <HttpDeamonHandleRequest::HandleGet()>
 800abb8:	e7ef      	b.n	800ab9a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfe>
 800abba:	2100      	movs	r1, #0
 800abbc:	4620      	mov	r0, r4
 800abbe:	f7ff fe73 	bl	800a8a8 <HttpDeamonHandleRequest::HandlePost(bool)>
 800abc2:	28c8      	cmp	r0, #200	@ 0xc8
 800abc4:	4603      	mov	r3, r0
 800abc6:	62a0      	str	r0, [r4, #40]	@ 0x28
 800abc8:	f47f af73 	bne.w	800aab2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800abcc:	68e3      	ldr	r3, [r4, #12]
 800abce:	2b00      	cmp	r3, #0
 800abd0:	d1d7      	bne.n	800ab82 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xe6>
 800abd2:	e7c2      	b.n	800ab5a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xbe>
 800abd4:	08014d58 	stmdaeq	r1, {r3, r4, r6, r8, sl, fp, lr}
 800abd8:	08014d9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, fp, lr}
 800abdc:	200000a0 	andcs	r0, r0, r0, lsr #1
 800abe0:	08014df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, lr}
 800abe4:	200009ac 	andcs	r0, r0, ip, lsr #19
 800abe8:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}
 800abec:	08014ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, lr}
 800abf0:	08014df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, lr}
 800abf4:	08014dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, lr}
 800abf8:	08014d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, lr}
 800abfc:	08014d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, lr}
 800ac00:	08014db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, lr}
 800ac04:	08014de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, lr}
 800ac08:	08014d4c 	stmdaeq	r1, {r2, r3, r6, r8, sl, fp, lr}

0800ac0c <remoteconfig::json_get_list(char*, unsigned long)>:
 800ac0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac10:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800ac6c <remoteconfig::json_get_list(char*, unsigned long)+0x60>
 800ac14:	4b12      	ldr	r3, [pc, #72]	@ (800ac60 <remoteconfig::json_get_list(char*, unsigned long)+0x54>)
 800ac16:	b088      	sub	sp, #32
 800ac18:	4605      	mov	r5, r0
 800ac1a:	f8d8 0000 	ldr.w	r0, [r8]
 800ac1e:	681c      	ldr	r4, [r3, #0]
 800ac20:	460e      	mov	r6, r1
 800ac22:	f7fe ff83 	bl	8009b2c <RemoteConfig::GetStringNode() const>
 800ac26:	4607      	mov	r7, r0
 800ac28:	f8d8 0000 	ldr.w	r0, [r8]
 800ac2c:	f7fe ff8a 	bl	8009b44 <RemoteConfig::GetStringOutput() const>
 800ac30:	4b0c      	ldr	r3, [pc, #48]	@ (800ac64 <remoteconfig::json_get_list(char*, unsigned long)+0x58>)
 800ac32:	7a1a      	ldrb	r2, [r3, #8]
 800ac34:	9704      	str	r7, [sp, #16]
 800ac36:	3309      	adds	r3, #9
 800ac38:	9303      	str	r3, [sp, #12]
 800ac3a:	0e23      	lsrs	r3, r4, #24
 800ac3c:	9302      	str	r3, [sp, #8]
 800ac3e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ac42:	9301      	str	r3, [sp, #4]
 800ac44:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800ac48:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800ac4c:	9300      	str	r3, [sp, #0]
 800ac4e:	4a06      	ldr	r2, [pc, #24]	@ (800ac68 <remoteconfig::json_get_list(char*, unsigned long)+0x5c>)
 800ac50:	b2e3      	uxtb	r3, r4
 800ac52:	4631      	mov	r1, r6
 800ac54:	4628      	mov	r0, r5
 800ac56:	f008 fe33 	bl	80138c0 <snprintf>
 800ac5a:	b008      	add	sp, #32
 800ac5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac60:	200009cc 	andcs	r0, r0, ip, asr #19
 800ac64:	20000078 	andcs	r0, r0, r8, ror r0
 800ac68:	08014105 	stmdaeq	r1, {r0, r2, r8, lr}
 800ac6c:	2000009c 	mulcs	r0, ip, r0

0800ac70 <remoteconfig::json_get_version(char*, unsigned long)>:
 800ac70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ac72:	4b0a      	ldr	r3, [pc, #40]	@ (800ac9c <remoteconfig::json_get_version(char*, unsigned long)+0x2c>)
 800ac74:	9305      	str	r3, [sp, #20]
 800ac76:	2208      	movs	r2, #8
 800ac78:	9204      	str	r2, [sp, #16]
 800ac7a:	f1a3 020b 	sub.w	r2, r3, #11
 800ac7e:	9203      	str	r2, [sp, #12]
 800ac80:	220b      	movs	r2, #11
 800ac82:	9202      	str	r2, [sp, #8]
 800ac84:	3b0e      	subs	r3, #14
 800ac86:	4a06      	ldr	r2, [pc, #24]	@ (800aca0 <remoteconfig::json_get_version(char*, unsigned long)+0x30>)
 800ac88:	9201      	str	r2, [sp, #4]
 800ac8a:	9300      	str	r3, [sp, #0]
 800ac8c:	4a05      	ldr	r2, [pc, #20]	@ (800aca4 <remoteconfig::json_get_version(char*, unsigned long)+0x34>)
 800ac8e:	2303      	movs	r3, #3
 800ac90:	f008 fe16 	bl	80138c0 <snprintf>
 800ac94:	b007      	add	sp, #28
 800ac96:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac9a:	bf00      	nop
 800ac9c:	20000b72 	andcs	r0, r0, r2, ror fp
 800aca0:	080141aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, lr}
 800aca4:	08014164 	stmdaeq	r1, {r2, r5, r6, r8, lr}

0800aca8 <remoteconfig::json_get_uptime(char*, unsigned long)>:
 800aca8:	4b02      	ldr	r3, [pc, #8]	@ (800acb4 <remoteconfig::json_get_uptime(char*, unsigned long)+0xc>)
 800acaa:	4a03      	ldr	r2, [pc, #12]	@ (800acb8 <remoteconfig::json_get_uptime(char*, unsigned long)+0x10>)
 800acac:	685b      	ldr	r3, [r3, #4]
 800acae:	f008 be07 	b.w	80138c0 <snprintf>
 800acb2:	bf00      	nop
 800acb4:	20004828 	andcs	r4, r0, r8, lsr #16
 800acb8:	080141b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, lr}

0800acbc <remoteconfig::json_get_display(char*, unsigned long)>:
 800acbc:	4b03      	ldr	r3, [pc, #12]	@ (800accc <remoteconfig::json_get_display(char*, unsigned long)+0x10>)
 800acbe:	4a04      	ldr	r2, [pc, #16]	@ (800acd0 <remoteconfig::json_get_display(char*, unsigned long)+0x14>)
 800acc0:	681b      	ldr	r3, [r3, #0]
 800acc2:	7d5b      	ldrb	r3, [r3, #21]
 800acc4:	f083 0301 	eor.w	r3, r3, #1
 800acc8:	f008 bdfa 	b.w	80138c0 <snprintf>
 800accc:	20000a90 	mulcs	r0, r0, sl
 800acd0:	080141c8 	stmdaeq	r1, {r3, r6, r7, r8, lr}

0800acd4 <remoteconfig::json_get_directory(char*, unsigned long)>:
 800acd4:	4a01      	ldr	r2, [pc, #4]	@ (800acdc <remoteconfig::json_get_directory(char*, unsigned long)+0x8>)
 800acd6:	f008 bdf3 	b.w	80138c0 <snprintf>
 800acda:	bf00      	nop
 800acdc:	080141d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, lr}

0800ace0 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
 800ace0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ace2:	4c0e      	ldr	r4, [pc, #56]	@ (800ad1c <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x3c>)
 800ace4:	230b      	movs	r3, #11
 800ace6:	3b01      	subs	r3, #1
 800ace8:	d104      	bne.n	800acf4 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x14>
 800acea:	600b      	str	r3, [r1, #0]
 800acec:	2105      	movs	r1, #5
 800acee:	6011      	str	r1, [r2, #0]
 800acf0:	4618      	mov	r0, r3
 800acf2:	e011      	b.n	800ad18 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x38>
 800acf4:	6825      	ldr	r5, [r4, #0]
 800acf6:	1e47      	subs	r7, r0, #1
 800acf8:	3d01      	subs	r5, #1
 800acfa:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800acfe:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800ad02:	4566      	cmp	r6, ip
 800ad04:	d001      	beq.n	800ad0a <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x2a>
 800ad06:	3410      	adds	r4, #16
 800ad08:	e7ed      	b.n	800ace6 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x6>
 800ad0a:	2e00      	cmp	r6, #0
 800ad0c:	d1f5      	bne.n	800acfa <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1a>
 800ad0e:	68a3      	ldr	r3, [r4, #8]
 800ad10:	600b      	str	r3, [r1, #0]
 800ad12:	6860      	ldr	r0, [r4, #4]
 800ad14:	68e3      	ldr	r3, [r4, #12]
 800ad16:	6013      	str	r3, [r2, #0]
 800ad18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad1a:	bf00      	nop
 800ad1c:	08014ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

0800ad20 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800ad20:	4770      	bx	lr

0800ad22 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800ad22:	4770      	bx	lr

0800ad24 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>:
 800ad24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad26:	4604      	mov	r4, r0
 800ad28:	3004      	adds	r0, #4
 800ad2a:	460f      	mov	r7, r1
 800ad2c:	4616      	mov	r6, r2
 800ad2e:	461d      	mov	r5, r3
 800ad30:	f001 f846 	bl	800bdc0 <RDMDevice::RDMDevice()>
 800ad34:	4620      	mov	r0, r4
 800ad36:	4b24      	ldr	r3, [pc, #144]	@ (800adc8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa4>)
 800ad38:	f840 3b57 	str.w	r3, [r0], #87
 800ad3c:	f000 fd2a 	bl	800b794 <RDMIdentify::RDMIdentify()>
 800ad40:	4a22      	ldr	r2, [pc, #136]	@ (800adcc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa8>)
 800ad42:	66a7      	str	r7, [r4, #104]	@ 0x68
 800ad44:	f104 0158 	add.w	r1, r4, #88	@ 0x58
 800ad48:	6011      	str	r1, [r2, #0]
 800ad4a:	4a21      	ldr	r2, [pc, #132]	@ (800add0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xac>)
 800ad4c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 800ad50:	6011      	str	r1, [r2, #0]
 800ad52:	4a20      	ldr	r2, [pc, #128]	@ (800add4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xb0>)
 800ad54:	6014      	str	r4, [r2, #0]
 800ad56:	2265      	movs	r2, #101	@ 0x65
 800ad58:	f884 2097 	strb.w	r2, [r4, #151]	@ 0x97
 800ad5c:	f44f 72b7 	mov.w	r2, #366	@ 0x16e
 800ad60:	2300      	movs	r3, #0
 800ad62:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 800ad66:	2201      	movs	r2, #1
 800ad68:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
 800ad6c:	65a3      	str	r3, [r4, #88]	@ 0x58
 800ad6e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800ad72:	6623      	str	r3, [r4, #96]	@ 0x60
 800ad74:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 800ad78:	f104 0271 	add.w	r2, r4, #113	@ 0x71
 800ad7c:	f104 0184 	add.w	r1, r4, #132	@ 0x84
 800ad80:	f802 3b01 	strb.w	r3, [r2], #1
 800ad84:	428a      	cmp	r2, r1
 800ad86:	d1fb      	bne.n	800ad80 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x5c>
 800ad88:	f104 0397 	add.w	r3, r4, #151	@ 0x97
 800ad8c:	2200      	movs	r2, #0
 800ad8e:	f801 2b01 	strb.w	r2, [r1], #1
 800ad92:	428b      	cmp	r3, r1
 800ad94:	d1fb      	bne.n	800ad8e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x6a>
 800ad96:	f884 607e 	strb.w	r6, [r4, #126]	@ 0x7e
 800ad9a:	f884 507d 	strb.w	r5, [r4, #125]	@ 0x7d
 800ad9e:	f7fe fd5f 	bl	8009860 <RDMSoftwareVersion::GetVersion()>
 800ada2:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800ada4:	f7fe fd60 	bl	8009868 <RDMSoftwareVersion::GetVersionLength()>
 800ada8:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 800adac:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800adae:	f884 0070 	strb.w	r0, [r4, #112]	@ 0x70
 800adb2:	3b01      	subs	r3, #1
 800adb4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800adb8:	685b      	ldr	r3, [r3, #4]
 800adba:	b91b      	cbnz	r3, 800adc4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa0>
 800adbc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800adc0:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
 800adc4:	4620      	mov	r0, r4
 800adc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800adc8:	08016cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, sp, lr}
 800adcc:	2000064c 	andcs	r0, r0, ip, asr #12
 800add0:	20000650 	andcs	r0, r0, r0, asr r6
 800add4:	20000640 	andcs	r0, r0, r0, asr #12

0800add8 <RDMDeviceResponder::Init()>:
 800add8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800adda:	2301      	movs	r3, #1
 800addc:	4604      	mov	r4, r0
 800adde:	f880 3056 	strb.w	r3, [r0, #86]	@ 0x56
 800ade2:	f894 2055 	ldrb.w	r2, [r4, #85]	@ 0x55
 800ade6:	2a20      	cmp	r2, #32
 800ade8:	bf28      	it	cs
 800adea:	2220      	movcs	r2, #32
 800adec:	b087      	sub	sp, #28
 800adee:	3004      	adds	r0, #4
 800adf0:	f104 0324 	add.w	r3, r4, #36	@ 0x24
 800adf4:	4611      	mov	r1, r2
 800adf6:	3901      	subs	r1, #1
 800adf8:	d275      	bcs.n	800aee6 <RDMDeviceResponder::Init()+0x10e>
 800adfa:	2501      	movs	r5, #1
 800adfc:	2700      	movs	r7, #0
 800adfe:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800ae02:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800ae06:	4e49      	ldr	r6, [pc, #292]	@ (800af2c <RDMDeviceResponder::Init()+0x154>)
 800ae08:	9200      	str	r2, [sp, #0]
 800ae0a:	6830      	ldr	r0, [r6, #0]
 800ae0c:	f88d 2017 	strb.w	r2, [sp, #23]
 800ae10:	2109      	movs	r1, #9
 800ae12:	2204      	movs	r2, #4
 800ae14:	f004 fd26 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800ae18:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800ae1c:	9500      	str	r5, [sp, #0]
 800ae1e:	6830      	ldr	r0, [r6, #0]
 800ae20:	f10d 0317 	add.w	r3, sp, #23
 800ae24:	2224      	movs	r2, #36	@ 0x24
 800ae26:	2109      	movs	r1, #9
 800ae28:	f004 fd1c 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800ae2c:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800ae30:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800ae34:	f894 0054 	ldrb.w	r0, [r4, #84]	@ 0x54
 800ae38:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800ae3c:	1b2d      	subs	r5, r5, r4
 800ae3e:	18a9      	adds	r1, r5, r2
 800ae40:	4288      	cmp	r0, r1
 800ae42:	d854      	bhi.n	800aeee <RDMDeviceResponder::Init()+0x116>
 800ae44:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800ae48:	f7fe fd10 	bl	800986c <RDMSoftwareVersion::GetVersionId()>
 800ae4c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800ae50:	f884 3076 	strb.w	r3, [r4, #118]	@ 0x76
 800ae54:	2201      	movs	r2, #1
 800ae56:	f884 2071 	strb.w	r2, [r4, #113]	@ 0x71
 800ae5a:	2200      	movs	r2, #0
 800ae5c:	f8a4 2072 	strh.w	r2, [r4, #114]	@ 0x72
 800ae60:	f884 2074 	strb.w	r2, [r4, #116]	@ 0x74
 800ae64:	0a1a      	lsrs	r2, r3, #8
 800ae66:	0e03      	lsrs	r3, r0, #24
 800ae68:	f884 3077 	strb.w	r3, [r4, #119]	@ 0x77
 800ae6c:	0c03      	lsrs	r3, r0, #16
 800ae6e:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
 800ae72:	0a03      	lsrs	r3, r0, #8
 800ae74:	f884 3079 	strb.w	r3, [r4, #121]	@ 0x79
 800ae78:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800ae7c:	f884 2075 	strb.w	r2, [r4, #117]	@ 0x75
 800ae80:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800ae84:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800ae86:	f884 007a 	strb.w	r0, [r4, #122]	@ 0x7a
 800ae8a:	3b01      	subs	r3, #1
 800ae8c:	f8b4 6064 	ldrh.w	r6, [r4, #100]	@ 0x64
 800ae90:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ae94:	685d      	ldr	r5, [r3, #4]
 800ae96:	bb7d      	cbnz	r5, 800aef8 <RDMDeviceResponder::Init()+0x120>
 800ae98:	f8b4 009c 	ldrh.w	r0, [r4, #156]	@ 0x9c
 800ae9c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800aea0:	0a03      	lsrs	r3, r0, #8
 800aea2:	f884 507c 	strb.w	r5, [r4, #124]	@ 0x7c
 800aea6:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800aeaa:	0a33      	lsrs	r3, r6, #8
 800aeac:	b2c0      	uxtb	r0, r0
 800aeae:	f884 3081 	strb.w	r3, [r4, #129]	@ 0x81
 800aeb2:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800aeb6:	f884 3083 	strb.w	r3, [r4, #131]	@ 0x83
 800aeba:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800aebe:	f884 6082 	strb.w	r6, [r4, #130]	@ 0x82
 800aec2:	f104 0371 	add.w	r3, r4, #113	@ 0x71
 800aec6:	f104 0284 	add.w	r2, r4, #132	@ 0x84
 800aeca:	f813 1b01 	ldrb.w	r1, [r3], #1
 800aece:	7499      	strb	r1, [r3, #18]
 800aed0:	429a      	cmp	r2, r3
 800aed2:	d1fa      	bne.n	800aeca <RDMDeviceResponder::Init()+0xf2>
 800aed4:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800aed8:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800aedc:	4413      	add	r3, r2
 800aede:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800aee2:	b007      	add	sp, #28
 800aee4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aee6:	f810 5b01 	ldrb.w	r5, [r0], #1
 800aeea:	77c5      	strb	r5, [r0, #31]
 800aeec:	e783      	b.n	800adf6 <RDMDeviceResponder::Init()+0x1e>
 800aeee:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800aef2:	440b      	add	r3, r1
 800aef4:	b29b      	uxth	r3, r3
 800aef6:	e7a2      	b.n	800ae3e <RDMDeviceResponder::Init()+0x66>
 800aef8:	682b      	ldr	r3, [r5, #0]
 800aefa:	4628      	mov	r0, r5
 800aefc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800aefe:	4798      	blx	r3
 800af00:	0a00      	lsrs	r0, r0, #8
 800af02:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800af06:	682b      	ldr	r3, [r5, #0]
 800af08:	4628      	mov	r0, r5
 800af0a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800af0c:	4798      	blx	r3
 800af0e:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800af12:	682b      	ldr	r3, [r5, #0]
 800af14:	4628      	mov	r0, r5
 800af16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800af18:	4798      	blx	r3
 800af1a:	0a00      	lsrs	r0, r0, #8
 800af1c:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800af20:	682b      	ldr	r3, [r5, #0]
 800af22:	4628      	mov	r0, r5
 800af24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800af26:	4798      	blx	r3
 800af28:	e7bf      	b.n	800aeaa <RDMDeviceResponder::Init()+0xd2>
 800af2a:	bf00      	nop
 800af2c:	20000a78 	andcs	r0, r0, r8, ror sl

0800af30 <RDMDeviceResponder::Print()>:
 800af30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af32:	4604      	mov	r4, r0
 800af34:	3004      	adds	r0, #4
 800af36:	f000 ff93 	bl	800be60 <RDMDevice::Print()>
 800af3a:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800af3e:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800af40:	481b      	ldr	r0, [pc, #108]	@ (800afb0 <RDMDeviceResponder::Print()+0x80>)
 800af42:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800af46:	3b01      	subs	r3, #1
 800af48:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 800af4c:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 800af4e:	f008 fce4 	bl	801391a <puts>
 800af52:	f894 2072 	ldrb.w	r2, [r4, #114]	@ 0x72
 800af56:	f894 1071 	ldrb.w	r1, [r4, #113]	@ 0x71
 800af5a:	4816      	ldr	r0, [pc, #88]	@ (800afb4 <RDMDeviceResponder::Print()+0x84>)
 800af5c:	f008 fc88 	bl	8013870 <printf>
 800af60:	f8b4 107f 	ldrh.w	r1, [r4, #127]	@ 0x7f
 800af64:	4814      	ldr	r0, [pc, #80]	@ (800afb8 <RDMDeviceResponder::Print()+0x88>)
 800af66:	ba49      	rev16	r1, r1
 800af68:	b289      	uxth	r1, r1
 800af6a:	f008 fc81 	bl	8013870 <printf>
 800af6e:	f8b4 107b 	ldrh.w	r1, [r4, #123]	@ 0x7b
 800af72:	4812      	ldr	r0, [pc, #72]	@ (800afbc <RDMDeviceResponder::Print()+0x8c>)
 800af74:	ba49      	rev16	r1, r1
 800af76:	b289      	uxth	r1, r1
 800af78:	3508      	adds	r5, #8
 800af7a:	f008 fc79 	bl	8013870 <printf>
 800af7e:	9500      	str	r5, [sp, #0]
 800af80:	f894 207e 	ldrb.w	r2, [r4, #126]	@ 0x7e
 800af84:	f894 107d 	ldrb.w	r1, [r4, #125]	@ 0x7d
 800af88:	480d      	ldr	r0, [pc, #52]	@ (800afc0 <RDMDeviceResponder::Print()+0x90>)
 800af8a:	b2f3      	uxtb	r3, r6
 800af8c:	f008 fc70 	bl	8013870 <printf>
 800af90:	f8b4 1081 	ldrh.w	r1, [r4, #129]	@ 0x81
 800af94:	480b      	ldr	r0, [pc, #44]	@ (800afc4 <RDMDeviceResponder::Print()+0x94>)
 800af96:	ba49      	rev16	r1, r1
 800af98:	b289      	uxth	r1, r1
 800af9a:	f008 fc69 	bl	8013870 <printf>
 800af9e:	f894 1083 	ldrb.w	r1, [r4, #131]	@ 0x83
 800afa2:	4809      	ldr	r0, [pc, #36]	@ (800afc8 <RDMDeviceResponder::Print()+0x98>)
 800afa4:	b002      	add	sp, #8
 800afa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800afaa:	f008 bc61 	b.w	8013870 <printf>
 800afae:	bf00      	nop
 800afb0:	080142b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, lr}
 800afb4:	080142ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, lr}
 800afb8:	080142e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, lr}
 800afbc:	080142ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, lr}
 800afc0:	08014317 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, lr}
 800afc4:	08014335 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, lr}
 800afc8:	0801434d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, lr}

0800afcc <memcpy.isra.0>:
 800afcc:	440a      	add	r2, r1
 800afce:	4291      	cmp	r1, r2
 800afd0:	d100      	bne.n	800afd4 <memcpy.isra.0+0x8>
 800afd2:	4770      	bx	lr
 800afd4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800afd8:	f800 3b01 	strb.w	r3, [r0], #1
 800afdc:	e7f7      	b.n	800afce <memcpy.isra.0+0x2>

0800afde <memcmp>:
 800afde:	b510      	push	{r4, lr}
 800afe0:	3901      	subs	r1, #1
 800afe2:	4402      	add	r2, r0
 800afe4:	4290      	cmp	r0, r2
 800afe6:	d101      	bne.n	800afec <memcmp+0xe>
 800afe8:	2000      	movs	r0, #0
 800afea:	e005      	b.n	800aff8 <memcmp+0x1a>
 800afec:	7803      	ldrb	r3, [r0, #0]
 800afee:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800aff2:	42a3      	cmp	r3, r4
 800aff4:	d001      	beq.n	800affa <memcmp+0x1c>
 800aff6:	1b18      	subs	r0, r3, r4
 800aff8:	bd10      	pop	{r4, pc}
 800affa:	3001      	adds	r0, #1
 800affc:	e7f2      	b.n	800afe4 <memcmp+0x6>

0800affe <RDMDeviceResponder::SetFactoryDefaults()>:
 800affe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b000:	4604      	mov	r4, r0
 800b002:	4669      	mov	r1, sp
 800b004:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800b008:	f88d 3004 	strb.w	r3, [sp, #4]
 800b00c:	3004      	adds	r0, #4
 800b00e:	9000      	str	r0, [sp, #0]
 800b010:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800b014:	f7fe f954 	bl	80092c0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b018:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800b01c:	f894 1054 	ldrb.w	r1, [r4, #84]	@ 0x54
 800b020:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800b024:	1b2d      	subs	r5, r5, r4
 800b026:	18a8      	adds	r0, r5, r2
 800b028:	4288      	cmp	r0, r1
 800b02a:	d361      	bcc.n	800b0f0 <RDMDeviceResponder::SetFactoryDefaults()+0xf2>
 800b02c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800b030:	2301      	movs	r3, #1
 800b032:	f884 307d 	strb.w	r3, [r4, #125]	@ 0x7d
 800b036:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800b038:	681b      	ldr	r3, [r3, #0]
 800b03a:	685d      	ldr	r5, [r3, #4]
 800b03c:	b1f5      	cbz	r5, 800b07c <RDMDeviceResponder::SetFactoryDefaults()+0x7e>
 800b03e:	682b      	ldr	r3, [r5, #0]
 800b040:	4628      	mov	r0, r5
 800b042:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b044:	4798      	blx	r3
 800b046:	0a00      	lsrs	r0, r0, #8
 800b048:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800b04c:	682b      	ldr	r3, [r5, #0]
 800b04e:	4628      	mov	r0, r5
 800b050:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b052:	4798      	blx	r3
 800b054:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800b058:	682b      	ldr	r3, [r5, #0]
 800b05a:	4628      	mov	r0, r5
 800b05c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b05e:	4798      	blx	r3
 800b060:	0a00      	lsrs	r0, r0, #8
 800b062:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800b066:	682b      	ldr	r3, [r5, #0]
 800b068:	4628      	mov	r0, r5
 800b06a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b06c:	4798      	blx	r3
 800b06e:	6823      	ldr	r3, [r4, #0]
 800b070:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800b074:	689b      	ldr	r3, [r3, #8]
 800b076:	4629      	mov	r1, r5
 800b078:	4620      	mov	r0, r4
 800b07a:	4798      	blx	r3
 800b07c:	f8b4 509c 	ldrh.w	r5, [r4, #156]	@ 0x9c
 800b080:	1e6b      	subs	r3, r5, #1
 800b082:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b086:	d217      	bcs.n	800b0b8 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b088:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800b08c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800b08e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800b092:	3b01      	subs	r3, #1
 800b094:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b098:	6858      	ldr	r0, [r3, #4]
 800b09a:	b168      	cbz	r0, 800b0b8 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b09c:	6803      	ldr	r3, [r0, #0]
 800b09e:	4629      	mov	r1, r5
 800b0a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b0a2:	4798      	blx	r3
 800b0a4:	b120      	cbz	r0, 800b0b0 <RDMDeviceResponder::SetFactoryDefaults()+0xb2>
 800b0a6:	0a2b      	lsrs	r3, r5, #8
 800b0a8:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800b0ac:	f884 5080 	strb.w	r5, [r4, #128]	@ 0x80
 800b0b0:	6823      	ldr	r3, [r4, #0]
 800b0b2:	4620      	mov	r0, r4
 800b0b4:	68db      	ldr	r3, [r3, #12]
 800b0b6:	4798      	blx	r3
 800b0b8:	f104 0171 	add.w	r1, r4, #113	@ 0x71
 800b0bc:	2213      	movs	r2, #19
 800b0be:	f104 0084 	add.w	r0, r4, #132	@ 0x84
 800b0c2:	f7ff ff83 	bl	800afcc <memcpy.isra.0>
 800b0c6:	2601      	movs	r6, #1
 800b0c8:	2100      	movs	r1, #0
 800b0ca:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 800b0ce:	4299      	cmp	r1, r3
 800b0d0:	d313      	bcc.n	800b0fa <RDMDeviceResponder::SetFactoryDefaults()+0xfc>
 800b0d2:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800b0d6:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800b0da:	4413      	add	r3, r2
 800b0dc:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800b0e0:	2301      	movs	r3, #1
 800b0e2:	f884 3099 	strb.w	r3, [r4, #153]	@ 0x99
 800b0e6:	b002      	add	sp, #8
 800b0e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0ec:	f7fe b9be 	b.w	800946c <rdm::device::responder::factorydefaults()>
 800b0f0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b0f4:	4403      	add	r3, r0
 800b0f6:	b29b      	uxth	r3, r3
 800b0f8:	e795      	b.n	800b026 <RDMDeviceResponder::SetFactoryDefaults()+0x28>
 800b0fa:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800b0fc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b100:	b193      	cbz	r3, 800b128 <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800b102:	7a1a      	ldrb	r2, [r3, #8]
 800b104:	b982      	cbnz	r2, 800b128 <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800b106:	f103 0015 	add.w	r0, r3, #21
 800b10a:	f890 5023 	ldrb.w	r5, [r0, #35]	@ 0x23
 800b10e:	b125      	cbz	r5, 800b11a <RDMDeviceResponder::SetFactoryDefaults()+0x11c>
 800b110:	3201      	adds	r2, #1
 800b112:	2a20      	cmp	r2, #32
 800b114:	f800 5f01 	strb.w	r5, [r0, #1]!
 800b118:	d1f7      	bne.n	800b10a <RDMDeviceResponder::SetFactoryDefaults()+0x10c>
 800b11a:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800b11e:	899a      	ldrh	r2, [r3, #12]
 800b120:	825a      	strh	r2, [r3, #18]
 800b122:	7b9a      	ldrb	r2, [r3, #14]
 800b124:	751a      	strb	r2, [r3, #20]
 800b126:	721e      	strb	r6, [r3, #8]
 800b128:	3101      	adds	r1, #1
 800b12a:	e7ce      	b.n	800b0ca <RDMDeviceResponder::SetFactoryDefaults()+0xcc>

0800b12c <RDMHandler::RDMHandler(bool)>:
 800b12c:	2200      	movs	r2, #0
 800b12e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b132:	7001      	strb	r1, [r0, #0]
 800b134:	7042      	strb	r2, [r0, #1]
 800b136:	4770      	bx	lr

0800b138 <RDMHandler::HandleString(char const*, unsigned long)>:
 800b138:	6883      	ldr	r3, [r0, #8]
 800b13a:	f803 2f17 	strb.w	r2, [r3, #23]!
 800b13e:	440a      	add	r2, r1
 800b140:	4291      	cmp	r1, r2
 800b142:	d100      	bne.n	800b146 <RDMHandler::HandleString(char const*, unsigned long)+0xe>
 800b144:	4770      	bx	lr
 800b146:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b14a:	f803 0f01 	strb.w	r0, [r3, #1]!
 800b14e:	e7f7      	b.n	800b140 <RDMHandler::HandleString(char const*, unsigned long)+0x8>

0800b150 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800b150:	b570      	push	{r4, r5, r6, lr}
 800b152:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800b156:	25cc      	movs	r5, #204	@ 0xcc
 800b158:	701d      	strb	r5, [r3, #0]
 800b15a:	7825      	ldrb	r5, [r4, #0]
 800b15c:	705d      	strb	r5, [r3, #1]
 800b15e:	7ba5      	ldrb	r5, [r4, #14]
 800b160:	73dd      	strb	r5, [r3, #15]
 800b162:	2500      	movs	r5, #0
 800b164:	745d      	strb	r5, [r3, #17]
 800b166:	7c65      	ldrb	r5, [r4, #17]
 800b168:	749d      	strb	r5, [r3, #18]
 800b16a:	7ca5      	ldrb	r5, [r4, #18]
 800b16c:	74dd      	strb	r5, [r3, #19]
 800b16e:	7ce5      	ldrb	r5, [r4, #19]
 800b170:	3501      	adds	r5, #1
 800b172:	751d      	strb	r5, [r3, #20]
 800b174:	7d25      	ldrb	r5, [r4, #20]
 800b176:	755d      	strb	r5, [r3, #21]
 800b178:	7d65      	ldrb	r5, [r4, #21]
 800b17a:	759d      	strb	r5, [r3, #22]
 800b17c:	b119      	cbz	r1, 800b186 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800b17e:	1e4d      	subs	r5, r1, #1
 800b180:	2d01      	cmp	r5, #1
 800b182:	d91f      	bls.n	800b1c4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x74>
 800b184:	bd70      	pop	{r4, r5, r6, pc}
 800b186:	7dda      	ldrb	r2, [r3, #23]
 800b188:	7419      	strb	r1, [r3, #16]
 800b18a:	3218      	adds	r2, #24
 800b18c:	709a      	strb	r2, [r3, #2]
 800b18e:	4a14      	ldr	r2, [pc, #80]	@ (800b1e0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x90>)
 800b190:	6812      	ldr	r2, [r2, #0]
 800b192:	1de1      	adds	r1, r4, #7
 800b194:	1c9d      	adds	r5, r3, #2
 800b196:	3249      	adds	r2, #73	@ 0x49
 800b198:	340d      	adds	r4, #13
 800b19a:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800b19e:	f805 6f01 	strb.w	r6, [r5, #1]!
 800b1a2:	42a1      	cmp	r1, r4
 800b1a4:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800b1a8:	71ae      	strb	r6, [r5, #6]
 800b1aa:	d1f6      	bne.n	800b19a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800b1ac:	2200      	movs	r2, #0
 800b1ae:	6884      	ldr	r4, [r0, #8]
 800b1b0:	7899      	ldrb	r1, [r3, #2]
 800b1b2:	4613      	mov	r3, r2
 800b1b4:	4291      	cmp	r1, r2
 800b1b6:	d80e      	bhi.n	800b1d6 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x86>
 800b1b8:	0a1d      	lsrs	r5, r3, #8
 800b1ba:	54a5      	strb	r5, [r4, r2]
 800b1bc:	6882      	ldr	r2, [r0, #8]
 800b1be:	440a      	add	r2, r1
 800b1c0:	7053      	strb	r3, [r2, #1]
 800b1c2:	e7df      	b.n	800b184 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800b1c4:	7419      	strb	r1, [r3, #16]
 800b1c6:	2102      	movs	r1, #2
 800b1c8:	251a      	movs	r5, #26
 800b1ca:	75d9      	strb	r1, [r3, #23]
 800b1cc:	0a11      	lsrs	r1, r2, #8
 800b1ce:	709d      	strb	r5, [r3, #2]
 800b1d0:	7619      	strb	r1, [r3, #24]
 800b1d2:	765a      	strb	r2, [r3, #25]
 800b1d4:	e7db      	b.n	800b18e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800b1d6:	5ca5      	ldrb	r5, [r4, r2]
 800b1d8:	442b      	add	r3, r5
 800b1da:	b29b      	uxth	r3, r3
 800b1dc:	3201      	adds	r2, #1
 800b1de:	e7e9      	b.n	800b1b4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800b1e0:	20000640 	andcs	r0, r0, r0, asr #12

0800b1e4 <RDMHandler::RespondMessageAck()>:
 800b1e4:	2200      	movs	r2, #0
 800b1e6:	4611      	mov	r1, r2
 800b1e8:	f7ff bfb2 	b.w	800b150 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800b1ec <RDMHandler::GetDeviceInfo(unsigned short)>:
 800b1ec:	4b1c      	ldr	r3, [pc, #112]	@ (800b260 <RDMHandler::GetDeviceInfo(unsigned short)+0x74>)
 800b1ee:	b510      	push	{r4, lr}
 800b1f0:	681b      	ldr	r3, [r3, #0]
 800b1f2:	4604      	mov	r4, r0
 800b1f4:	b351      	cbz	r1, 800b24c <RDMHandler::GetDeviceInfo(unsigned short)+0x60>
 800b1f6:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800b1fa:	3901      	subs	r1, #1
 800b1fc:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800b1fe:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800b202:	8a11      	ldrh	r1, [r2, #16]
 800b204:	0a09      	lsrs	r1, r1, #8
 800b206:	f883 108e 	strb.w	r1, [r3, #142]	@ 0x8e
 800b20a:	8a11      	ldrh	r1, [r2, #16]
 800b20c:	f883 108f 	strb.w	r1, [r3, #143]	@ 0x8f
 800b210:	7d11      	ldrb	r1, [r2, #20]
 800b212:	f883 1090 	strb.w	r1, [r3, #144]	@ 0x90
 800b216:	7d51      	ldrb	r1, [r2, #21]
 800b218:	f883 1091 	strb.w	r1, [r3, #145]	@ 0x91
 800b21c:	8a51      	ldrh	r1, [r2, #18]
 800b21e:	0a09      	lsrs	r1, r1, #8
 800b220:	f883 1092 	strb.w	r1, [r3, #146]	@ 0x92
 800b224:	8a51      	ldrh	r1, [r2, #18]
 800b226:	f883 1093 	strb.w	r1, [r3, #147]	@ 0x93
 800b22a:	f892 2037 	ldrb.w	r2, [r2, #55]	@ 0x37
 800b22e:	f883 2096 	strb.w	r2, [r3, #150]	@ 0x96
 800b232:	f103 0184 	add.w	r1, r3, #132	@ 0x84
 800b236:	68a0      	ldr	r0, [r4, #8]
 800b238:	2213      	movs	r2, #19
 800b23a:	75c2      	strb	r2, [r0, #23]
 800b23c:	3018      	adds	r0, #24
 800b23e:	f7ff fec5 	bl	800afcc <memcpy.isra.0>
 800b242:	4620      	mov	r0, r4
 800b244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b248:	f7ff bfcc 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b24c:	f8b3 2044 	ldrh.w	r2, [r3, #68]	@ 0x44
 800b250:	f883 2076 	strb.w	r2, [r3, #118]	@ 0x76
 800b254:	0a11      	lsrs	r1, r2, #8
 800b256:	f883 1075 	strb.w	r1, [r3, #117]	@ 0x75
 800b25a:	f103 0171 	add.w	r1, r3, #113	@ 0x71
 800b25e:	e7ea      	b.n	800b236 <RDMHandler::GetDeviceInfo(unsigned short)+0x4a>
 800b260:	20000640 	andcs	r0, r0, r0, asr #12

0800b264 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800b264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b268:	6887      	ldr	r7, [r0, #8]
 800b26a:	2301      	movs	r3, #1
 800b26c:	75fb      	strb	r3, [r7, #23]
 800b26e:	4b2c      	ldr	r3, [pc, #176]	@ (800b320 <RDMHandler::GetFactoryDefaults(unsigned short)+0xbc>)
 800b270:	681b      	ldr	r3, [r3, #0]
 800b272:	f893 1099 	ldrb.w	r1, [r3, #153]	@ 0x99
 800b276:	b309      	cbz	r1, 800b2bc <RDMHandler::GetFactoryDefaults(unsigned short)+0x58>
 800b278:	f06f 0e22 	mvn.w	lr, #34	@ 0x22
 800b27c:	f8b3 5048 	ldrh.w	r5, [r3, #72]	@ 0x48
 800b280:	f893 2055 	ldrb.w	r2, [r3, #85]	@ 0x55
 800b284:	f893 c054 	ldrb.w	ip, [r3, #84]	@ 0x54
 800b288:	f103 0423 	add.w	r4, r3, #35	@ 0x23
 800b28c:	ebae 0e03 	sub.w	lr, lr, r3
 800b290:	eb0e 0604 	add.w	r6, lr, r4
 800b294:	45b4      	cmp	ip, r6
 800b296:	d813      	bhi.n	800b2c0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x5c>
 800b298:	4295      	cmp	r5, r2
 800b29a:	d130      	bne.n	800b2fe <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800b29c:	f893 2080 	ldrb.w	r2, [r3, #128]	@ 0x80
 800b2a0:	f893 507d 	ldrb.w	r5, [r3, #125]	@ 0x7d
 800b2a4:	f8b3 409a 	ldrh.w	r4, [r3, #154]	@ 0x9a
 800b2a8:	442a      	add	r2, r5
 800b2aa:	4294      	cmp	r4, r2
 800b2ac:	d127      	bne.n	800b2fe <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800b2ae:	f8b3 c064 	ldrh.w	ip, [r3, #100]	@ 0x64
 800b2b2:	2500      	movs	r5, #0
 800b2b4:	f06f 0e14 	mvn.w	lr, #20
 800b2b8:	4565      	cmp	r5, ip
 800b2ba:	d306      	bcc.n	800b2ca <RDMHandler::GetFactoryDefaults(unsigned short)+0x66>
 800b2bc:	460b      	mov	r3, r1
 800b2be:	e022      	b.n	800b306 <RDMHandler::GetFactoryDefaults(unsigned short)+0xa2>
 800b2c0:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 800b2c4:	4432      	add	r2, r6
 800b2c6:	b292      	uxth	r2, r2
 800b2c8:	e7e2      	b.n	800b290 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800b2ca:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800b2cc:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800b2d0:	b31a      	cbz	r2, 800b31a <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800b2d2:	7a14      	ldrb	r4, [r2, #8]
 800b2d4:	b19c      	cbz	r4, 800b2fe <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800b2d6:	7d16      	ldrb	r6, [r2, #20]
 800b2d8:	8a54      	ldrh	r4, [r2, #18]
 800b2da:	f8b2 800a 	ldrh.w	r8, [r2, #10]
 800b2de:	f892 9036 	ldrb.w	r9, [r2, #54]	@ 0x36
 800b2e2:	4434      	add	r4, r6
 800b2e4:	b2a4      	uxth	r4, r4
 800b2e6:	f102 0615 	add.w	r6, r2, #21
 800b2ea:	ebae 0a02 	sub.w	sl, lr, r2
 800b2ee:	eb0a 0b06 	add.w	fp, sl, r6
 800b2f2:	45cb      	cmp	fp, r9
 800b2f4:	d30c      	bcc.n	800b310 <RDMHandler::GetFactoryDefaults(unsigned short)+0xac>
 800b2f6:	45a0      	cmp	r8, r4
 800b2f8:	d00f      	beq.n	800b31a <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800b2fa:	2100      	movs	r1, #0
 800b2fc:	7211      	strb	r1, [r2, #8]
 800b2fe:	2200      	movs	r2, #0
 800b300:	f883 2099 	strb.w	r2, [r3, #153]	@ 0x99
 800b304:	4613      	mov	r3, r2
 800b306:	763b      	strb	r3, [r7, #24]
 800b308:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b30c:	f7ff bf6a 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b310:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 800b314:	445c      	add	r4, fp
 800b316:	b2a4      	uxth	r4, r4
 800b318:	e7e9      	b.n	800b2ee <RDMHandler::GetFactoryDefaults(unsigned short)+0x8a>
 800b31a:	3501      	adds	r5, #1
 800b31c:	e7cc      	b.n	800b2b8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800b31e:	bf00      	nop
 800b320:	20000640 	andcs	r0, r0, r0, asr #12

0800b324 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800b324:	b510      	push	{r4, lr}
 800b326:	4905      	ldr	r1, [pc, #20]	@ (800b33c <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800b328:	4604      	mov	r4, r0
 800b32a:	220e      	movs	r2, #14
 800b32c:	f7ff ff04 	bl	800b138 <RDMHandler::HandleString(char const*, unsigned long)>
 800b330:	4620      	mov	r0, r4
 800b332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b336:	f7ff bf55 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b33a:	bf00      	nop
 800b33c:	080141aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, lr}

0800b340 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800b340:	4b0d      	ldr	r3, [pc, #52]	@ (800b378 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800b342:	b510      	push	{r4, lr}
 800b344:	681b      	ldr	r3, [r3, #0]
 800b346:	4604      	mov	r4, r0
 800b348:	b189      	cbz	r1, 800b36e <RDMHandler::GetDeviceLabel(unsigned short)+0x2e>
 800b34a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800b34e:	3901      	subs	r1, #1
 800b350:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b352:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b356:	f893 2036 	ldrb.w	r2, [r3, #54]	@ 0x36
 800b35a:	f103 0116 	add.w	r1, r3, #22
 800b35e:	4620      	mov	r0, r4
 800b360:	f7ff feea 	bl	800b138 <RDMHandler::HandleString(char const*, unsigned long)>
 800b364:	4620      	mov	r0, r4
 800b366:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b36a:	f7ff bf3b 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b36e:	f893 2054 	ldrb.w	r2, [r3, #84]	@ 0x54
 800b372:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 800b376:	e7f2      	b.n	800b35e <RDMHandler::GetDeviceLabel(unsigned short)+0x1e>
 800b378:	20000640 	andcs	r0, r0, r0, asr #12

0800b37c <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800b37c:	6883      	ldr	r3, [r0, #8]
 800b37e:	2201      	movs	r2, #1
 800b380:	75da      	strb	r2, [r3, #23]
 800b382:	4a02      	ldr	r2, [pc, #8]	@ (800b38c <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800b384:	7812      	ldrb	r2, [r2, #0]
 800b386:	761a      	strb	r2, [r3, #24]
 800b388:	f7ff bf2c 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b38c:	20000649 	andcs	r0, r0, r9, asr #12

0800b390 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800b390:	4b0a      	ldr	r3, [pc, #40]	@ (800b3bc <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800b392:	b510      	push	{r4, lr}
 800b394:	4619      	mov	r1, r3
 800b396:	4604      	mov	r4, r0
 800b398:	461a      	mov	r2, r3
 800b39a:	3301      	adds	r3, #1
 800b39c:	7810      	ldrb	r0, [r2, #0]
 800b39e:	2800      	cmp	r0, #0
 800b3a0:	d1fa      	bne.n	800b398 <RDMHandler::GetManufacturerLabel(unsigned short)+0x8>
 800b3a2:	1a52      	subs	r2, r2, r1
 800b3a4:	2a20      	cmp	r2, #32
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	4904      	ldr	r1, [pc, #16]	@ (800b3bc <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800b3aa:	bf28      	it	cs
 800b3ac:	2220      	movcs	r2, #32
 800b3ae:	f7ff fec3 	bl	800b138 <RDMHandler::HandleString(char const*, unsigned long)>
 800b3b2:	4620      	mov	r0, r4
 800b3b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b3b8:	f7ff bf14 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b3bc:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}

0800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>:
 800b3c0:	460a      	mov	r2, r1
 800b3c2:	2102      	movs	r1, #2
 800b3c4:	f7ff bec4 	b.w	800b150 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800b3c8 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800b3c8:	b510      	push	{r4, lr}
 800b3ca:	6843      	ldr	r3, [r0, #4]
 800b3cc:	7d9a      	ldrb	r2, [r3, #22]
 800b3ce:	2a01      	cmp	r2, #1
 800b3d0:	4604      	mov	r4, r0
 800b3d2:	d004      	beq.n	800b3de <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800b3d4:	2101      	movs	r1, #1
 800b3d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b3da:	f7ff bff1 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800b3de:	7ddb      	ldrb	r3, [r3, #23]
 800b3e0:	2b01      	cmp	r3, #1
 800b3e2:	d003      	beq.n	800b3ec <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800b3e4:	2bff      	cmp	r3, #255	@ 0xff
 800b3e6:	d001      	beq.n	800b3ec <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800b3e8:	2106      	movs	r1, #6
 800b3ea:	e7f4      	b.n	800b3d6 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800b3ec:	68a2      	ldr	r2, [r4, #8]
 800b3ee:	2100      	movs	r1, #0
 800b3f0:	2bff      	cmp	r3, #255	@ 0xff
 800b3f2:	75d1      	strb	r1, [r2, #23]
 800b3f4:	d102      	bne.n	800b3fc <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800b3f6:	2104      	movs	r1, #4
 800b3f8:	4620      	mov	r0, r4
 800b3fa:	e7ec      	b.n	800b3d6 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800b3fc:	4b03      	ldr	r3, [pc, #12]	@ (800b40c <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800b3fe:	6818      	ldr	r0, [r3, #0]
 800b400:	f005 fbda 	bl	8010bb8 <Hardware::Reboot()>
 800b404:	2800      	cmp	r0, #0
 800b406:	d0f6      	beq.n	800b3f6 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800b408:	bd10      	pop	{r4, pc}
 800b40a:	bf00      	nop
 800b40c:	20000b7c 	andcs	r0, r0, ip, ror fp

0800b410 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800b410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b412:	6843      	ldr	r3, [r0, #4]
 800b414:	7d9a      	ldrb	r2, [r3, #22]
 800b416:	2a01      	cmp	r2, #1
 800b418:	4604      	mov	r4, r0
 800b41a:	460d      	mov	r5, r1
 800b41c:	d004      	beq.n	800b428 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800b41e:	2101      	movs	r1, #1
 800b420:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800b424:	f7ff bfcc 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800b428:	7ddb      	ldrb	r3, [r3, #23]
 800b42a:	2b01      	cmp	r3, #1
 800b42c:	d901      	bls.n	800b432 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800b42e:	2106      	movs	r1, #6
 800b430:	e7f6      	b.n	800b420 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800b432:	4912      	ldr	r1, [pc, #72]	@ (800b47c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800b434:	4f12      	ldr	r7, [pc, #72]	@ (800b480 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800b436:	680e      	ldr	r6, [r1, #0]
 800b438:	4912      	ldr	r1, [pc, #72]	@ (800b484 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800b43a:	6808      	ldr	r0, [r1, #0]
 800b43c:	4912      	ldr	r1, [pc, #72]	@ (800b488 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800b43e:	b98b      	cbnz	r3, 800b464 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x54>
 800b440:	700b      	strb	r3, [r1, #0]
 800b442:	461a      	mov	r2, r3
 800b444:	2102      	movs	r1, #2
 800b446:	f005 f9a5 	bl	8010794 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800b44a:	7839      	ldrb	r1, [r7, #0]
 800b44c:	b111      	cbz	r1, 800b454 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800b44e:	4630      	mov	r0, r6
 800b450:	f000 f9a7 	bl	800b7a2 <RDMIdentify::Off(rdm::identify::Mode)>
 800b454:	b98d      	cbnz	r5, 800b47a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6a>
 800b456:	68a3      	ldr	r3, [r4, #8]
 800b458:	75dd      	strb	r5, [r3, #23]
 800b45a:	4620      	mov	r0, r4
 800b45c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800b460:	f7ff bec0 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b464:	700a      	strb	r2, [r1, #0]
 800b466:	2104      	movs	r1, #4
 800b468:	f005 f994 	bl	8010794 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800b46c:	7839      	ldrb	r1, [r7, #0]
 800b46e:	2900      	cmp	r1, #0
 800b470:	d0f0      	beq.n	800b454 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800b472:	4630      	mov	r0, r6
 800b474:	f000 f994 	bl	800b7a0 <RDMIdentify::On(rdm::identify::Mode)>
 800b478:	e7ec      	b.n	800b454 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800b47a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b47c:	20000644 	andcs	r0, r0, r4, asr #12
 800b480:	20000648 	andcs	r0, r0, r8, asr #12
 800b484:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b488:	20000649 	andcs	r0, r0, r9, asr #12

0800b48c <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800b48c:	b538      	push	{r3, r4, r5, lr}
 800b48e:	6843      	ldr	r3, [r0, #4]
 800b490:	7d9b      	ldrb	r3, [r3, #22]
 800b492:	4604      	mov	r4, r0
 800b494:	460d      	mov	r5, r1
 800b496:	b123      	cbz	r3, 800b4a2 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800b498:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b49c:	2101      	movs	r1, #1
 800b49e:	f7ff bf8f 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800b4a2:	4b06      	ldr	r3, [pc, #24]	@ (800b4bc <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800b4a4:	6818      	ldr	r0, [r3, #0]
 800b4a6:	f7ff fdaa 	bl	800affe <RDMDeviceResponder::SetFactoryDefaults()>
 800b4aa:	b935      	cbnz	r5, 800b4ba <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800b4ac:	68a3      	ldr	r3, [r4, #8]
 800b4ae:	75dd      	strb	r5, [r3, #23]
 800b4b0:	4620      	mov	r0, r4
 800b4b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b4b6:	f7ff be95 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b4ba:	bd38      	pop	{r3, r4, r5, pc}
 800b4bc:	20000640 	andcs	r0, r0, r0, asr #12

0800b4c0 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800b4c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b4c2:	6843      	ldr	r3, [r0, #4]
 800b4c4:	460d      	mov	r5, r1
 800b4c6:	7d99      	ldrb	r1, [r3, #22]
 800b4c8:	2920      	cmp	r1, #32
 800b4ca:	4604      	mov	r4, r0
 800b4cc:	d905      	bls.n	800b4da <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1a>
 800b4ce:	2101      	movs	r1, #1
 800b4d0:	b003      	add	sp, #12
 800b4d2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b4d6:	f7ff bf73 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800b4da:	4817      	ldr	r0, [pc, #92]	@ (800b538 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x78>)
 800b4dc:	6800      	ldr	r0, [r0, #0]
 800b4de:	b302      	cbz	r2, 800b522 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x62>
 800b4e0:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800b4e4:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800b4e6:	3a01      	subs	r2, #1
 800b4e8:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800b4ec:	b1b9      	cbz	r1, 800b51e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x5e>
 800b4ee:	3316      	adds	r3, #22
 800b4f0:	f100 0615 	add.w	r6, r0, #21
 800b4f4:	2200      	movs	r2, #0
 800b4f6:	3201      	adds	r2, #1
 800b4f8:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800b4fc:	f806 7f01 	strb.w	r7, [r6, #1]!
 800b500:	2a20      	cmp	r2, #32
 800b502:	d001      	beq.n	800b508 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800b504:	4291      	cmp	r1, r2
 800b506:	d8f6      	bhi.n	800b4f6 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x36>
 800b508:	f880 2036 	strb.w	r2, [r0, #54]	@ 0x36
 800b50c:	b995      	cbnz	r5, 800b534 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x74>
 800b50e:	68a3      	ldr	r3, [r4, #8]
 800b510:	4620      	mov	r0, r4
 800b512:	75dd      	strb	r5, [r3, #23]
 800b514:	b003      	add	sp, #12
 800b516:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b51a:	f7ff be63 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b51e:	460a      	mov	r2, r1
 800b520:	e7f2      	b.n	800b508 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800b522:	3317      	adds	r3, #23
 800b524:	f88d 1004 	strb.w	r1, [sp, #4]
 800b528:	3004      	adds	r0, #4
 800b52a:	4669      	mov	r1, sp
 800b52c:	9300      	str	r3, [sp, #0]
 800b52e:	f7fd fec7 	bl	80092c0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b532:	e7eb      	b.n	800b50c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4c>
 800b534:	b003      	add	sp, #12
 800b536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b538:	20000640 	andcs	r0, r0, r0, asr #12

0800b53c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800b53c:	b4f0      	push	{r4, r5, r6, r7}
 800b53e:	4615      	mov	r5, r2
 800b540:	f005 04ef 	and.w	r4, r5, #239	@ 0xef
 800b544:	2c20      	cmp	r4, #32
 800b546:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800b54a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b54e:	d003      	beq.n	800b558 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800b550:	2105      	movs	r1, #5
 800b552:	bcf0      	pop	{r4, r5, r6, r7}
 800b554:	f7ff bf34 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800b558:	4c28      	ldr	r4, [pc, #160]	@ (800b5fc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>)
 800b55a:	6824      	ldr	r4, [r4, #0]
 800b55c:	88a4      	ldrh	r4, [r4, #4]
 800b55e:	4294      	cmp	r4, r2
 800b560:	d205      	bcs.n	800b56e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800b562:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800b566:	42a2      	cmp	r2, r4
 800b568:	d001      	beq.n	800b56e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800b56a:	2109      	movs	r1, #9
 800b56c:	e7f1      	b.n	800b552 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800b56e:	4c24      	ldr	r4, [pc, #144]	@ (800b600 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc4>)
 800b570:	4f24      	ldr	r7, [pc, #144]	@ (800b604 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc8>)
 800b572:	f8b4 c000 	ldrh.w	ip, [r4]
 800b576:	459c      	cmp	ip, r3
 800b578:	d108      	bne.n	800b58c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x50>
 800b57a:	f890 c000 	ldrb.w	ip, [r0]
 800b57e:	7da7      	ldrb	r7, [r4, #22]
 800b580:	7de3      	ldrb	r3, [r4, #23]
 800b582:	f1bc 0f00 	cmp.w	ip, #0
 800b586:	d106      	bne.n	800b596 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5a>
 800b588:	b93b      	cbnz	r3, 800b59a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800b58a:	e002      	b.n	800b592 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800b58c:	3418      	adds	r4, #24
 800b58e:	42bc      	cmp	r4, r7
 800b590:	d1ef      	bne.n	800b572 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800b592:	2100      	movs	r1, #0
 800b594:	e7dd      	b.n	800b552 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800b596:	2f00      	cmp	r7, #0
 800b598:	d0fb      	beq.n	800b592 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800b59a:	2d20      	cmp	r5, #32
 800b59c:	d11b      	bne.n	800b5d6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x9a>
 800b59e:	bb59      	cbnz	r1, 800b5f8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xbc>
 800b5a0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b5a4:	429a      	cmp	r2, r3
 800b5a6:	d0e0      	beq.n	800b56a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2e>
 800b5a8:	6863      	ldr	r3, [r4, #4]
 800b5aa:	b913      	cbnz	r3, 800b5b2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x76>
 800b5ac:	68a1      	ldr	r1, [r4, #8]
 800b5ae:	07cd      	lsls	r5, r1, #31
 800b5b0:	d5ce      	bpl.n	800b550 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800b5b2:	7d21      	ldrb	r1, [r4, #20]
 800b5b4:	42b1      	cmp	r1, r6
 800b5b6:	d001      	beq.n	800b5bc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x80>
 800b5b8:	2101      	movs	r1, #1
 800b5ba:	e7ca      	b.n	800b552 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800b5bc:	68a1      	ldr	r1, [r4, #8]
 800b5be:	104d      	asrs	r5, r1, #1
 800b5c0:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800b5c4:	07c9      	lsls	r1, r1, #31
 800b5c6:	bf48      	it	mi
 800b5c8:	5941      	ldrmi	r1, [r0, r5]
 800b5ca:	4620      	mov	r0, r4
 800b5cc:	bf48      	it	mi
 800b5ce:	58cb      	ldrmi	r3, [r1, r3]
 800b5d0:	bcf0      	pop	{r4, r5, r6, r7}
 800b5d2:	4611      	mov	r1, r2
 800b5d4:	4718      	bx	r3
 800b5d6:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800b5da:	f003 0401 	and.w	r4, r3, #1
 800b5de:	b90d      	cbnz	r5, 800b5e4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xa8>
 800b5e0:	2c00      	cmp	r4, #0
 800b5e2:	d0b5      	beq.n	800b550 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800b5e4:	105e      	asrs	r6, r3, #1
 800b5e6:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800b5ea:	b10c      	cbz	r4, 800b5f0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb4>
 800b5ec:	5980      	ldr	r0, [r0, r6]
 800b5ee:	5945      	ldr	r5, [r0, r5]
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	462b      	mov	r3, r5
 800b5f4:	bcf0      	pop	{r4, r5, r6, r7}
 800b5f6:	4718      	bx	r3
 800b5f8:	bcf0      	pop	{r4, r5, r6, r7}
 800b5fa:	4770      	bx	lr
 800b5fc:	20000650 	andcs	r0, r0, r0, asr r6
 800b600:	08016d08 	stmdaeq	r1, {r3, r8, sl, fp, sp, lr}
 800b604:	08016ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, sp, lr}

0800b608 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800b608:	23ff      	movs	r3, #255	@ 0xff
 800b60a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b60e:	7013      	strb	r3, [r2, #0]
 800b610:	7bcb      	ldrb	r3, [r1, #15]
 800b612:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800b616:	4607      	mov	r7, r0
 800b618:	468a      	mov	sl, r1
 800b61a:	4614      	mov	r4, r2
 800b61c:	2b00      	cmp	r3, #0
 800b61e:	d079      	beq.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b620:	7c0b      	ldrb	r3, [r1, #16]
 800b622:	2b00      	cmp	r3, #0
 800b624:	d176      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b626:	4b58      	ldr	r3, [pc, #352]	@ (800b788 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800b628:	1c8e      	adds	r6, r1, #2
 800b62a:	2206      	movs	r2, #6
 800b62c:	4957      	ldr	r1, [pc, #348]	@ (800b78c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800b62e:	f8d3 8000 	ldr.w	r8, [r3]
 800b632:	4630      	mov	r0, r6
 800b634:	f7ff fcd3 	bl	800afde <memcmp>
 800b638:	f108 094a 	add.w	r9, r8, #74	@ 0x4a
 800b63c:	4605      	mov	r5, r0
 800b63e:	2800      	cmp	r0, #0
 800b640:	d06b      	beq.n	800b71a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800b642:	4630      	mov	r0, r6
 800b644:	2202      	movs	r2, #2
 800b646:	4649      	mov	r1, r9
 800b648:	f7ff fcc9 	bl	800afde <memcmp>
 800b64c:	4606      	mov	r6, r0
 800b64e:	2800      	cmp	r0, #0
 800b650:	d160      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b652:	f10a 0b04 	add.w	fp, sl, #4
 800b656:	494d      	ldr	r1, [pc, #308]	@ (800b78c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800b658:	2204      	movs	r2, #4
 800b65a:	4658      	mov	r0, fp
 800b65c:	f7ff fcbf 	bl	800afde <memcmp>
 800b660:	4605      	mov	r5, r0
 800b662:	2800      	cmp	r0, #0
 800b664:	d059      	beq.n	800b71a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800b666:	f108 014c 	add.w	r1, r8, #76	@ 0x4c
 800b66a:	2204      	movs	r2, #4
 800b66c:	4658      	mov	r0, fp
 800b66e:	f7ff fcb6 	bl	800afde <memcmp>
 800b672:	fab0 f580 	clz	r5, r0
 800b676:	096d      	lsrs	r5, r5, #5
 800b678:	4631      	mov	r1, r6
 800b67a:	f89a 2013 	ldrb.w	r2, [sl, #19]
 800b67e:	f8ba 3014 	ldrh.w	r3, [sl, #20]
 800b682:	b90d      	cbnz	r5, 800b688 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x80>
 800b684:	2900      	cmp	r1, #0
 800b686:	d045      	beq.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b688:	2a10      	cmp	r2, #16
 800b68a:	d16f      	bne.n	800b76c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x164>
 800b68c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b690:	d145      	bne.n	800b71e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x116>
 800b692:	787b      	ldrb	r3, [r7, #1]
 800b694:	2b00      	cmp	r3, #0
 800b696:	d13d      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b698:	2206      	movs	r2, #6
 800b69a:	4649      	mov	r1, r9
 800b69c:	f10a 0017 	add.w	r0, sl, #23
 800b6a0:	f7ff fc9d 	bl	800afde <memcmp>
 800b6a4:	2800      	cmp	r0, #0
 800b6a6:	dc35      	bgt.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b6a8:	2206      	movs	r2, #6
 800b6aa:	f10a 011d 	add.w	r1, sl, #29
 800b6ae:	4648      	mov	r0, r9
 800b6b0:	f7ff fc95 	bl	800afde <memcmp>
 800b6b4:	2800      	cmp	r0, #0
 800b6b6:	dc2d      	bgt.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b6b8:	23fe      	movs	r3, #254	@ 0xfe
 800b6ba:	7023      	strb	r3, [r4, #0]
 800b6bc:	7063      	strb	r3, [r4, #1]
 800b6be:	70a3      	strb	r3, [r4, #2]
 800b6c0:	70e3      	strb	r3, [r4, #3]
 800b6c2:	7123      	strb	r3, [r4, #4]
 800b6c4:	7163      	strb	r3, [r4, #5]
 800b6c6:	71a3      	strb	r3, [r4, #6]
 800b6c8:	23aa      	movs	r3, #170	@ 0xaa
 800b6ca:	71e3      	strb	r3, [r4, #7]
 800b6cc:	f108 0249 	add.w	r2, r8, #73	@ 0x49
 800b6d0:	4621      	mov	r1, r4
 800b6d2:	f108 084f 	add.w	r8, r8, #79	@ 0x4f
 800b6d6:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 800b6da:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b6de:	f060 0055 	orn	r0, r0, #85	@ 0x55
 800b6e2:	7208      	strb	r0, [r1, #8]
 800b6e4:	7810      	ldrb	r0, [r2, #0]
 800b6e6:	f040 0055 	orr.w	r0, r0, #85	@ 0x55
 800b6ea:	7248      	strb	r0, [r1, #9]
 800b6ec:	7810      	ldrb	r0, [r2, #0]
 800b6ee:	4542      	cmp	r2, r8
 800b6f0:	4403      	add	r3, r0
 800b6f2:	b29b      	uxth	r3, r3
 800b6f4:	f101 0102 	add.w	r1, r1, #2
 800b6f8:	d1ef      	bne.n	800b6da <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xd2>
 800b6fa:	0a1a      	lsrs	r2, r3, #8
 800b6fc:	f062 0155 	orn	r1, r2, #85	@ 0x55
 800b700:	f042 0255 	orr.w	r2, r2, #85	@ 0x55
 800b704:	7562      	strb	r2, [r4, #21]
 800b706:	f063 0255 	orn	r2, r3, #85	@ 0x55
 800b70a:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 800b70e:	7521      	strb	r1, [r4, #20]
 800b710:	75a2      	strb	r2, [r4, #22]
 800b712:	75e3      	strb	r3, [r4, #23]
 800b714:	b003      	add	sp, #12
 800b716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b71a:	2101      	movs	r1, #1
 800b71c:	e7ad      	b.n	800b67a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800b71e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b722:	d11a      	bne.n	800b75a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x152>
 800b724:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800b728:	2b00      	cmp	r3, #0
 800b72a:	d1f3      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b72c:	707b      	strb	r3, [r7, #1]
 800b72e:	2900      	cmp	r1, #0
 800b730:	d1f0      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b732:	2d00      	cmp	r5, #0
 800b734:	d0ee      	beq.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b736:	2302      	movs	r3, #2
 800b738:	75e3      	strb	r3, [r4, #23]
 800b73a:	4b15      	ldr	r3, [pc, #84]	@ (800b790 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x188>)
 800b73c:	7661      	strb	r1, [r4, #25]
 800b73e:	681b      	ldr	r3, [r3, #0]
 800b740:	7621      	strb	r1, [r4, #24]
 800b742:	889b      	ldrh	r3, [r3, #4]
 800b744:	3b00      	subs	r3, #0
 800b746:	bf18      	it	ne
 800b748:	2301      	movne	r3, #1
 800b74a:	005b      	lsls	r3, r3, #1
 800b74c:	4638      	mov	r0, r7
 800b74e:	7663      	strb	r3, [r4, #25]
 800b750:	b003      	add	sp, #12
 800b752:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b756:	f7ff bd45 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800b75a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b75e:	d1d9      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b760:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800b764:	2b00      	cmp	r3, #0
 800b766:	d1d5      	bne.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b768:	2301      	movs	r3, #1
 800b76a:	e7df      	b.n	800b72c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x124>
 800b76c:	f8ba 0011 	ldrh.w	r0, [sl, #17]
 800b770:	ba40      	rev16	r0, r0
 800b772:	b280      	uxth	r0, r0
 800b774:	9001      	str	r0, [sp, #4]
 800b776:	f89a 0016 	ldrb.w	r0, [sl, #22]
 800b77a:	9000      	str	r0, [sp, #0]
 800b77c:	ba5b      	rev16	r3, r3
 800b77e:	b29b      	uxth	r3, r3
 800b780:	4638      	mov	r0, r7
 800b782:	f7ff fedb 	bl	800b53c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800b786:	e7c5      	b.n	800b714 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800b788:	20000640 	andcs	r0, r0, r0, asr #12
 800b78c:	08016ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, sp, lr}
 800b790:	20000650 	andcs	r0, r0, r0, asr r6

0800b794 <RDMIdentify::RDMIdentify()>:
 800b794:	4b01      	ldr	r3, [pc, #4]	@ (800b79c <RDMIdentify::RDMIdentify()+0x8>)
 800b796:	6018      	str	r0, [r3, #0]
 800b798:	4770      	bx	lr
 800b79a:	bf00      	nop
 800b79c:	20000644 	andcs	r0, r0, r4, asr #12

0800b7a0 <RDMIdentify::On(rdm::identify::Mode)>:
 800b7a0:	4770      	bx	lr

0800b7a2 <RDMIdentify::Off(rdm::identify::Mode)>:
 800b7a2:	4770      	bx	lr

0800b7a4 <memcpy.isra.0>:
 800b7a4:	440a      	add	r2, r1
 800b7a6:	4291      	cmp	r1, r2
 800b7a8:	d100      	bne.n	800b7ac <memcpy.isra.0+0x8>
 800b7aa:	4770      	bx	lr
 800b7ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b7b0:	f800 3b01 	strb.w	r3, [r0], #1
 800b7b4:	e7f7      	b.n	800b7a6 <memcpy.isra.0+0x2>
	...

0800b7b8 <LLRPDevice::HandleRequestMessage()>:
 800b7b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7bc:	4e44      	ldr	r6, [pc, #272]	@ (800b8d0 <LLRPDevice::HandleRequestMessage()+0x118>)
 800b7be:	4f45      	ldr	r7, [pc, #276]	@ (800b8d4 <LLRPDevice::HandleRequestMessage()+0x11c>)
 800b7c0:	6835      	ldr	r5, [r6, #0]
 800b7c2:	6839      	ldr	r1, [r7, #0]
 800b7c4:	f895 4042 	ldrb.w	r4, [r5, #66]	@ 0x42
 800b7c8:	f8b5 3043 	ldrh.w	r3, [r5, #67]	@ 0x43
 800b7cc:	0424      	lsls	r4, r4, #16
 800b7ce:	ba5b      	rev16	r3, r3
 800b7d0:	b089      	sub	sp, #36	@ 0x24
 800b7d2:	b29b      	uxth	r3, r3
 800b7d4:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
 800b7d8:	431c      	orrs	r4, r3
 800b7da:	2206      	movs	r2, #6
 800b7dc:	314a      	adds	r1, #74	@ 0x4a
 800b7de:	a802      	add	r0, sp, #8
 800b7e0:	f7ff ffe0 	bl	800b7a4 <memcpy.isra.0>
 800b7e4:	2c12      	cmp	r4, #18
 800b7e6:	d909      	bls.n	800b7fc <LLRPDevice::HandleRequestMessage()+0x44>
 800b7e8:	f105 0954 	add.w	r9, r5, #84	@ 0x54
 800b7ec:	f04f 0800 	mov.w	r8, #0
 800b7f0:	3c12      	subs	r4, #18
 800b7f2:	2306      	movs	r3, #6
 800b7f4:	fbb4 f4f3 	udiv	r4, r4, r3
 800b7f8:	45a0      	cmp	r8, r4
 800b7fa:	d15c      	bne.n	800b8b6 <LLRPDevice::HandleRequestMessage()+0xfe>
 800b7fc:	2206      	movs	r2, #6
 800b7fe:	a902      	add	r1, sp, #8
 800b800:	f105 0046 	add.w	r0, r5, #70	@ 0x46
 800b804:	f7ff fbeb 	bl	800afde <memcmp>
 800b808:	2800      	cmp	r0, #0
 800b80a:	dc51      	bgt.n	800b8b0 <LLRPDevice::HandleRequestMessage()+0xf8>
 800b80c:	2206      	movs	r2, #6
 800b80e:	f105 014c 	add.w	r1, r5, #76	@ 0x4c
 800b812:	a802      	add	r0, sp, #8
 800b814:	f7ff fbe3 	bl	800afde <memcmp>
 800b818:	2800      	cmp	r0, #0
 800b81a:	dc49      	bgt.n	800b8b0 <LLRPDevice::HandleRequestMessage()+0xf8>
 800b81c:	6834      	ldr	r4, [r6, #0]
 800b81e:	2210      	movs	r2, #16
 800b820:	f104 0517 	add.w	r5, r4, #23
 800b824:	4629      	mov	r1, r5
 800b826:	eb0d 0002 	add.w	r0, sp, r2
 800b82a:	f7ff ffbb 	bl	800b7a4 <memcpy.isra.0>
 800b82e:	2343      	movs	r3, #67	@ 0x43
 800b830:	74a3      	strb	r3, [r4, #18]
 800b832:	4b29      	ldr	r3, [pc, #164]	@ (800b8d8 <LLRPDevice::HandleRequestMessage()+0x120>)
 800b834:	6819      	ldr	r1, [r3, #0]
 800b836:	2210      	movs	r2, #16
 800b838:	4411      	add	r1, r2
 800b83a:	4628      	mov	r0, r5
 800b83c:	f7ff ffb2 	bl	800b7a4 <memcpy.isra.0>
 800b840:	232c      	movs	r3, #44	@ 0x2c
 800b842:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800b846:	2300      	movs	r3, #0
 800b848:	2210      	movs	r2, #16
 800b84a:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800b84e:	f884 302b 	strb.w	r3, [r4, #43]	@ 0x2b
 800b852:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800b856:	2302      	movs	r3, #2
 800b858:	eb0d 0102 	add.w	r1, sp, r2
 800b85c:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800b860:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800b864:	f7ff ff9e 	bl	800b7a4 <memcpy.isra.0>
 800b868:	6839      	ldr	r1, [r7, #0]
 800b86a:	4d1c      	ldr	r5, [pc, #112]	@ (800b8dc <LLRPDevice::HandleRequestMessage()+0x124>)
 800b86c:	2311      	movs	r3, #17
 800b86e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800b872:	2301      	movs	r3, #1
 800b874:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800b878:	2206      	movs	r2, #6
 800b87a:	314a      	adds	r1, #74	@ 0x4a
 800b87c:	f104 0046 	add.w	r0, r4, #70	@ 0x46
 800b880:	f7ff ff90 	bl	800b7a4 <memcpy.isra.0>
 800b884:	f104 004c 	add.w	r0, r4, #76	@ 0x4c
 800b888:	2206      	movs	r2, #6
 800b88a:	4629      	mov	r1, r5
 800b88c:	f7ff ff8a 	bl	800b7a4 <memcpy.isra.0>
 800b890:	23ff      	movs	r3, #255	@ 0xff
 800b892:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 800b896:	4b12      	ldr	r3, [pc, #72]	@ (800b8e0 <LLRPDevice::HandleRequestMessage()+0x128>)
 800b898:	6818      	ldr	r0, [r3, #0]
 800b89a:	f855 3c14 	ldr.w	r3, [r5, #-20]
 800b89e:	b13b      	cbz	r3, 800b8b0 <LLRPDevice::HandleRequestMessage()+0xf8>
 800b8a0:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800b8a4:	9300      	str	r3, [sp, #0]
 800b8a6:	2253      	movs	r2, #83	@ 0x53
 800b8a8:	4b0e      	ldr	r3, [pc, #56]	@ (800b8e4 <LLRPDevice::HandleRequestMessage()+0x12c>)
 800b8aa:	4621      	mov	r1, r4
 800b8ac:	f002 fbb6 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b8b0:	b009      	add	sp, #36	@ 0x24
 800b8b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8b6:	2206      	movs	r2, #6
 800b8b8:	a902      	add	r1, sp, #8
 800b8ba:	4648      	mov	r0, r9
 800b8bc:	f7ff fb8f 	bl	800afde <memcmp>
 800b8c0:	2800      	cmp	r0, #0
 800b8c2:	d0f5      	beq.n	800b8b0 <LLRPDevice::HandleRequestMessage()+0xf8>
 800b8c4:	f109 0906 	add.w	r9, r9, #6
 800b8c8:	f108 0801 	add.w	r8, r8, #1
 800b8cc:	e794      	b.n	800b7f8 <LLRPDevice::HandleRequestMessage()+0x40>
 800b8ce:	bf00      	nop
 800b8d0:	20000758 	andcs	r0, r0, r8, asr r7
 800b8d4:	20000640 	andcs	r0, r0, r0, asr #12
 800b8d8:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b8dc:	200009e0 	andcs	r0, r0, r0, ror #19
 800b8e0:	20000760 	andcs	r0, r0, r0, ror #14
 800b8e4:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800b8e8 <LLRPDevice::HandleRdmCommand()>:
 800b8e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b8ec:	4b21      	ldr	r3, [pc, #132]	@ (800b974 <LLRPDevice::HandleRdmCommand()+0x8c>)
 800b8ee:	4f22      	ldr	r7, [pc, #136]	@ (800b978 <LLRPDevice::HandleRdmCommand()+0x90>)
 800b8f0:	681c      	ldr	r4, [r3, #0]
 800b8f2:	f104 0946 	add.w	r9, r4, #70	@ 0x46
 800b8f6:	b087      	sub	sp, #28
 800b8f8:	463a      	mov	r2, r7
 800b8fa:	4649      	mov	r1, r9
 800b8fc:	f7ff fe84 	bl	800b608 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800b900:	783b      	ldrb	r3, [r7, #0]
 800b902:	2bcc      	cmp	r3, #204	@ 0xcc
 800b904:	d133      	bne.n	800b96e <LLRPDevice::HandleRdmCommand()+0x86>
 800b906:	f104 0817 	add.w	r8, r4, #23
 800b90a:	2210      	movs	r2, #16
 800b90c:	4641      	mov	r1, r8
 800b90e:	a802      	add	r0, sp, #8
 800b910:	f7ff ff48 	bl	800b7a4 <memcpy.isra.0>
 800b914:	78be      	ldrb	r6, [r7, #2]
 800b916:	4b19      	ldr	r3, [pc, #100]	@ (800b97c <LLRPDevice::HandleRdmCommand()+0x94>)
 800b918:	f106 0537 	add.w	r5, r6, #55	@ 0x37
 800b91c:	6819      	ldr	r1, [r3, #0]
 800b91e:	2210      	movs	r2, #16
 800b920:	b2ed      	uxtb	r5, r5
 800b922:	4411      	add	r1, r2
 800b924:	4640      	mov	r0, r8
 800b926:	74a5      	strb	r5, [r4, #18]
 800b928:	f7ff ff3c 	bl	800b7a4 <memcpy.isra.0>
 800b92c:	f106 0320 	add.w	r3, r6, #32
 800b930:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800b934:	2210      	movs	r2, #16
 800b936:	a902      	add	r1, sp, #8
 800b938:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800b93c:	f7ff ff32 	bl	800b7a4 <memcpy.isra.0>
 800b940:	1d73      	adds	r3, r6, #5
 800b942:	1c72      	adds	r2, r6, #1
 800b944:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800b948:	b2d2      	uxtb	r2, r2
 800b94a:	4648      	mov	r0, r9
 800b94c:	1c79      	adds	r1, r7, #1
 800b94e:	f7ff ff29 	bl	800b7a4 <memcpy.isra.0>
 800b952:	4b0b      	ldr	r3, [pc, #44]	@ (800b980 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b954:	6818      	ldr	r0, [r3, #0]
 800b956:	4b0b      	ldr	r3, [pc, #44]	@ (800b984 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	f105 0210 	add.w	r2, r5, #16
 800b95e:	b133      	cbz	r3, 800b96e <LLRPDevice::HandleRdmCommand()+0x86>
 800b960:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800b964:	9300      	str	r3, [sp, #0]
 800b966:	4621      	mov	r1, r4
 800b968:	4b07      	ldr	r3, [pc, #28]	@ (800b988 <LLRPDevice::HandleRdmCommand()+0xa0>)
 800b96a:	f002 fb57 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b96e:	b007      	add	sp, #28
 800b970:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b974:	20000758 	andcs	r0, r0, r8, asr r7
 800b978:	20000654 	andcs	r0, r0, r4, asr r6
 800b97c:	20000b7c 	andcs	r0, r0, ip, ror fp
 800b980:	20000760 	andcs	r0, r0, r0, ror #14
 800b984:	200009cc 	andcs	r0, r0, ip, asr #19
 800b988:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800b98c <memcpy.isra.0>:
 800b98c:	440a      	add	r2, r1
 800b98e:	4291      	cmp	r1, r2
 800b990:	d100      	bne.n	800b994 <memcpy.isra.0+0x8>
 800b992:	4770      	bx	lr
 800b994:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b998:	f800 3b01 	strb.w	r3, [r0], #1
 800b99c:	e7f7      	b.n	800b98e <memcpy.isra.0+0x2>

0800b99e <RDMHandler::GetInterfaceList(unsigned short)>:
 800b99e:	6883      	ldr	r3, [r0, #8]
 800b9a0:	2200      	movs	r2, #0
 800b9a2:	761a      	strb	r2, [r3, #24]
 800b9a4:	765a      	strb	r2, [r3, #25]
 800b9a6:	769a      	strb	r2, [r3, #26]
 800b9a8:	2101      	movs	r1, #1
 800b9aa:	771a      	strb	r2, [r3, #28]
 800b9ac:	2206      	movs	r2, #6
 800b9ae:	76d9      	strb	r1, [r3, #27]
 800b9b0:	775a      	strb	r2, [r3, #29]
 800b9b2:	75da      	strb	r2, [r3, #23]
 800b9b4:	f7ff bc16 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>

0800b9b8 <RDMHandler::GetInterfaceName(unsigned short)>:
 800b9b8:	b538      	push	{r3, r4, r5, lr}
 800b9ba:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800b9be:	2204      	movs	r2, #4
 800b9c0:	4604      	mov	r4, r0
 800b9c2:	3117      	adds	r1, #23
 800b9c4:	f105 0018 	add.w	r0, r5, #24
 800b9c8:	f7ff ffe0 	bl	800b98c <memcpy.isra.0>
 800b9cc:	4a0d      	ldr	r2, [pc, #52]	@ (800ba04 <RDMHandler::GetInterfaceName(unsigned short)+0x4c>)
 800b9ce:	6813      	ldr	r3, [r2, #0]
 800b9d0:	f105 001c 	add.w	r0, r5, #28
 800b9d4:	3306      	adds	r3, #6
 800b9d6:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b9da:	f800 1b01 	strb.w	r1, [r0], #1
 800b9de:	2900      	cmp	r1, #0
 800b9e0:	d1f9      	bne.n	800b9d6 <RDMHandler::GetInterfaceName(unsigned short)+0x1e>
 800b9e2:	6812      	ldr	r2, [r2, #0]
 800b9e4:	3206      	adds	r2, #6
 800b9e6:	4611      	mov	r1, r2
 800b9e8:	460b      	mov	r3, r1
 800b9ea:	3101      	adds	r1, #1
 800b9ec:	7818      	ldrb	r0, [r3, #0]
 800b9ee:	2800      	cmp	r0, #0
 800b9f0:	d1fa      	bne.n	800b9e8 <RDMHandler::GetInterfaceName(unsigned short)+0x30>
 800b9f2:	1a9b      	subs	r3, r3, r2
 800b9f4:	3304      	adds	r3, #4
 800b9f6:	75eb      	strb	r3, [r5, #23]
 800b9f8:	4620      	mov	r0, r4
 800b9fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b9fe:	f7ff bbf1 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800ba02:	bf00      	nop
 800ba04:	200009ac 	andcs	r0, r0, ip, lsr #19

0800ba08 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800ba08:	b538      	push	{r3, r4, r5, lr}
 800ba0a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ba0e:	4604      	mov	r4, r0
 800ba10:	2204      	movs	r2, #4
 800ba12:	f105 0018 	add.w	r0, r5, #24
 800ba16:	3117      	adds	r1, #23
 800ba18:	f7ff ffb8 	bl	800b98c <memcpy.isra.0>
 800ba1c:	f105 001c 	add.w	r0, r5, #28
 800ba20:	4905      	ldr	r1, [pc, #20]	@ (800ba38 <RDMHandler::GetHardwareAddress(unsigned short)+0x30>)
 800ba22:	2206      	movs	r2, #6
 800ba24:	f7ff ffb2 	bl	800b98c <memcpy.isra.0>
 800ba28:	230a      	movs	r3, #10
 800ba2a:	75eb      	strb	r3, [r5, #23]
 800ba2c:	4620      	mov	r0, r4
 800ba2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ba32:	f7ff bbd7 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800ba36:	bf00      	nop
 800ba38:	200009e0 	andcs	r0, r0, r0, ror #19

0800ba3c <RDMHandler::GetDHCPMode(unsigned short)>:
 800ba3c:	b538      	push	{r3, r4, r5, lr}
 800ba3e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ba42:	4604      	mov	r4, r0
 800ba44:	2204      	movs	r2, #4
 800ba46:	f105 0018 	add.w	r0, r5, #24
 800ba4a:	3117      	adds	r1, #23
 800ba4c:	f7ff ff9e 	bl	800b98c <memcpy.isra.0>
 800ba50:	4b05      	ldr	r3, [pc, #20]	@ (800ba68 <RDMHandler::GetDHCPMode(unsigned short)+0x2c>)
 800ba52:	7e9b      	ldrb	r3, [r3, #26]
 800ba54:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ba58:	772b      	strb	r3, [r5, #28]
 800ba5a:	2305      	movs	r3, #5
 800ba5c:	75eb      	strb	r3, [r5, #23]
 800ba5e:	4620      	mov	r0, r4
 800ba60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ba64:	f7ff bbbe 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800ba68:	200009cc 	andcs	r0, r0, ip, asr #19

0800ba6c <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800ba6c:	4b0b      	ldr	r3, [pc, #44]	@ (800ba9c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x30>)
 800ba6e:	6842      	ldr	r2, [r0, #4]
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	7919      	ldrb	r1, [r3, #4]
 800ba74:	b911      	cbnz	r1, 800ba7c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800ba76:	210b      	movs	r1, #11
 800ba78:	f7ff bca2 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800ba7c:	7ed2      	ldrb	r2, [r2, #27]
 800ba7e:	2a01      	cmp	r2, #1
 800ba80:	d809      	bhi.n	800ba96 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800ba82:	f883 20b4 	strb.w	r2, [r3, #180]	@ 0xb4
 800ba86:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800ba8a:	f042 0208 	orr.w	r2, r2, #8
 800ba8e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800ba92:	f7ff bba7 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800ba96:	2106      	movs	r1, #6
 800ba98:	e7ee      	b.n	800ba78 <RDMHandler::SetDHCPMode(bool, unsigned short)+0xc>
 800ba9a:	bf00      	nop
 800ba9c:	200009ac 	andcs	r0, r0, ip, lsr #19

0800baa0 <RDMHandler::GetNameServers(unsigned short)>:
 800baa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800baa2:	6843      	ldr	r3, [r0, #4]
 800baa4:	7ddb      	ldrb	r3, [r3, #23]
 800baa6:	2b02      	cmp	r3, #2
 800baa8:	4604      	mov	r4, r0
 800baaa:	d905      	bls.n	800bab8 <RDMHandler::GetNameServers(unsigned short)+0x18>
 800baac:	2106      	movs	r1, #6
 800baae:	b003      	add	sp, #12
 800bab0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bab4:	f7ff bc84 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bab8:	4a0b      	ldr	r2, [pc, #44]	@ (800bae8 <RDMHandler::GetNameServers(unsigned short)+0x48>)
 800baba:	6885      	ldr	r5, [r0, #8]
 800babc:	6812      	ldr	r2, [r2, #0]
 800babe:	f103 0126 	add.w	r1, r3, #38	@ 0x26
 800bac2:	f105 0019 	add.w	r0, r5, #25
 800bac6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800baca:	9201      	str	r2, [sp, #4]
 800bacc:	2204      	movs	r2, #4
 800bace:	762b      	strb	r3, [r5, #24]
 800bad0:	eb0d 0102 	add.w	r1, sp, r2
 800bad4:	f7ff ff5a 	bl	800b98c <memcpy.isra.0>
 800bad8:	2305      	movs	r3, #5
 800bada:	4620      	mov	r0, r4
 800badc:	75eb      	strb	r3, [r5, #23]
 800bade:	b003      	add	sp, #12
 800bae0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bae4:	f7ff bb7e 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bae8:	200009ac 	andcs	r0, r0, ip, lsr #19

0800baec <RDMHandler::GetZeroconf(unsigned short)>:
 800baec:	b538      	push	{r3, r4, r5, lr}
 800baee:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800baf2:	4604      	mov	r4, r0
 800baf4:	2204      	movs	r2, #4
 800baf6:	3117      	adds	r1, #23
 800baf8:	f105 0018 	add.w	r0, r5, #24
 800bafc:	f7ff ff46 	bl	800b98c <memcpy.isra.0>
 800bb00:	4b07      	ldr	r3, [pc, #28]	@ (800bb20 <RDMHandler::GetZeroconf(unsigned short)+0x34>)
 800bb02:	681b      	ldr	r3, [r3, #0]
 800bb04:	795b      	ldrb	r3, [r3, #5]
 800bb06:	b11b      	cbz	r3, 800bb10 <RDMHandler::GetZeroconf(unsigned short)+0x24>
 800bb08:	4b06      	ldr	r3, [pc, #24]	@ (800bb24 <RDMHandler::GetZeroconf(unsigned short)+0x38>)
 800bb0a:	7e9b      	ldrb	r3, [r3, #26]
 800bb0c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800bb10:	772b      	strb	r3, [r5, #28]
 800bb12:	2305      	movs	r3, #5
 800bb14:	75eb      	strb	r3, [r5, #23]
 800bb16:	4620      	mov	r0, r4
 800bb18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bb1c:	f7ff bb62 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bb20:	200009ac 	andcs	r0, r0, ip, lsr #19
 800bb24:	200009cc 	andcs	r0, r0, ip, asr #19

0800bb28 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800bb28:	4b10      	ldr	r3, [pc, #64]	@ (800bb6c <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800bb2a:	6842      	ldr	r2, [r0, #4]
 800bb2c:	681b      	ldr	r3, [r3, #0]
 800bb2e:	7959      	ldrb	r1, [r3, #5]
 800bb30:	b510      	push	{r4, lr}
 800bb32:	4604      	mov	r4, r0
 800bb34:	b921      	cbnz	r1, 800bb40 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800bb36:	210b      	movs	r1, #11
 800bb38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb3c:	f7ff bc40 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb40:	7ed2      	ldrb	r2, [r2, #27]
 800bb42:	2a01      	cmp	r2, #1
 800bb44:	d109      	bne.n	800bb5a <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800bb46:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800bb4a:	f042 0210 	orr.w	r2, r2, #16
 800bb4e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800bb52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb56:	f7ff bb45 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bb5a:	b92a      	cbnz	r2, 800bb68 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800bb5c:	4618      	mov	r0, r3
 800bb5e:	4611      	mov	r1, r2
 800bb60:	f001 f8d6 	bl	800cd10 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800bb64:	4620      	mov	r0, r4
 800bb66:	e7f4      	b.n	800bb52 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800bb68:	2106      	movs	r1, #6
 800bb6a:	e7e5      	b.n	800bb38 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800bb6c:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bb70 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800bb70:	b510      	push	{r4, lr}
 800bb72:	4b09      	ldr	r3, [pc, #36]	@ (800bb98 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800bb74:	7e9b      	ldrb	r3, [r3, #26]
 800bb76:	079b      	lsls	r3, r3, #30
 800bb78:	4604      	mov	r4, r0
 800bb7a:	d404      	bmi.n	800bb86 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800bb7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb80:	210b      	movs	r1, #11
 800bb82:	f7ff bc1d 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb86:	4b05      	ldr	r3, [pc, #20]	@ (800bb9c <RDMHandler::RenewDhcp(bool, unsigned short)+0x2c>)
 800bb88:	6818      	ldr	r0, [r3, #0]
 800bb8a:	f001 f8ba 	bl	800cd02 <Network::EnableDhcp()>
 800bb8e:	4620      	mov	r0, r4
 800bb90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb94:	f7ff bb26 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bb98:	200009cc 	andcs	r0, r0, ip, asr #19
 800bb9c:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bba0 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800bba0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bba2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bba6:	4e11      	ldr	r6, [pc, #68]	@ (800bbec <RDMHandler::GetAddressNetmask(unsigned short)+0x4c>)
 800bba8:	4604      	mov	r4, r0
 800bbaa:	6833      	ldr	r3, [r6, #0]
 800bbac:	9301      	str	r3, [sp, #4]
 800bbae:	f105 0018 	add.w	r0, r5, #24
 800bbb2:	2204      	movs	r2, #4
 800bbb4:	3117      	adds	r1, #23
 800bbb6:	f7ff fee9 	bl	800b98c <memcpy.isra.0>
 800bbba:	2204      	movs	r2, #4
 800bbbc:	eb0d 0102 	add.w	r1, sp, r2
 800bbc0:	f105 001c 	add.w	r0, r5, #28
 800bbc4:	f7ff fee2 	bl	800b98c <memcpy.isra.0>
 800bbc8:	6870      	ldr	r0, [r6, #4]
 800bbca:	f008 f8e1 	bl	8013d90 <__popcountsi2>
 800bbce:	7eb3      	ldrb	r3, [r6, #26]
 800bbd0:	f885 0020 	strb.w	r0, [r5, #32]
 800bbd4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800bbd8:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800bbdc:	4620      	mov	r0, r4
 800bbde:	230a      	movs	r3, #10
 800bbe0:	75eb      	strb	r3, [r5, #23]
 800bbe2:	b002      	add	sp, #8
 800bbe4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbe8:	f7ff bafc 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bbec:	200009cc 	andcs	r0, r0, ip, asr #19

0800bbf0 <RDMHandler::GetStaticAddress(unsigned short)>:
 800bbf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbf2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bbf6:	4e0f      	ldr	r6, [pc, #60]	@ (800bc34 <RDMHandler::GetStaticAddress(unsigned short)+0x44>)
 800bbf8:	4604      	mov	r4, r0
 800bbfa:	6833      	ldr	r3, [r6, #0]
 800bbfc:	9301      	str	r3, [sp, #4]
 800bbfe:	f105 0018 	add.w	r0, r5, #24
 800bc02:	2204      	movs	r2, #4
 800bc04:	3117      	adds	r1, #23
 800bc06:	f7ff fec1 	bl	800b98c <memcpy.isra.0>
 800bc0a:	2204      	movs	r2, #4
 800bc0c:	eb0d 0102 	add.w	r1, sp, r2
 800bc10:	f105 001c 	add.w	r0, r5, #28
 800bc14:	f7ff feba 	bl	800b98c <memcpy.isra.0>
 800bc18:	6870      	ldr	r0, [r6, #4]
 800bc1a:	f008 f8b9 	bl	8013d90 <__popcountsi2>
 800bc1e:	2309      	movs	r3, #9
 800bc20:	f885 0020 	strb.w	r0, [r5, #32]
 800bc24:	4620      	mov	r0, r4
 800bc26:	75eb      	strb	r3, [r5, #23]
 800bc28:	b002      	add	sp, #8
 800bc2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc2e:	f7ff bad9 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bc32:	bf00      	nop
 800bc34:	200009cc 	andcs	r0, r0, ip, asr #19

0800bc38 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800bc38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc3a:	6845      	ldr	r5, [r0, #4]
 800bc3c:	7dab      	ldrb	r3, [r5, #22]
 800bc3e:	2b09      	cmp	r3, #9
 800bc40:	4604      	mov	r4, r0
 800bc42:	d005      	beq.n	800bc50 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800bc44:	2101      	movs	r1, #1
 800bc46:	b003      	add	sp, #12
 800bc48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bc4c:	f7ff bbb8 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc50:	2204      	movs	r2, #4
 800bc52:	eb0d 0002 	add.w	r0, sp, r2
 800bc56:	f105 011b 	add.w	r1, r5, #27
 800bc5a:	f7ff fe97 	bl	800b98c <memcpy.isra.0>
 800bc5e:	4b09      	ldr	r3, [pc, #36]	@ (800bc84 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x4c>)
 800bc60:	7fea      	ldrb	r2, [r5, #31]
 800bc62:	6818      	ldr	r0, [r3, #0]
 800bc64:	9901      	ldr	r1, [sp, #4]
 800bc66:	b12a      	cbz	r2, 800bc74 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3c>
 800bc68:	f1c2 0220 	rsb	r2, r2, #32
 800bc6c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800bc70:	4093      	lsls	r3, r2
 800bc72:	ba1a      	rev	r2, r3
 800bc74:	f001 f84c 	bl	800cd10 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800bc78:	4620      	mov	r0, r4
 800bc7a:	b003      	add	sp, #12
 800bc7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bc80:	f7ff bab0 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bc84:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bc88 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800bc88:	4b08      	ldr	r3, [pc, #32]	@ (800bcac <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800bc8a:	b510      	push	{r4, lr}
 800bc8c:	4604      	mov	r4, r0
 800bc8e:	6818      	ldr	r0, [r3, #0]
 800bc90:	f001 f860 	bl	800cd54 <Network::ApplyQueuedConfig()>
 800bc94:	b120      	cbz	r0, 800bca0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800bc96:	4620      	mov	r0, r4
 800bc98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc9c:	f7ff baa2 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bca0:	4620      	mov	r0, r4
 800bca2:	2101      	movs	r1, #1
 800bca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bca8:	f7ff bb8a 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bcac:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bcb0 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800bcb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcb2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bcb6:	4b0c      	ldr	r3, [pc, #48]	@ (800bce8 <RDMHandler::GetDefaultRoute(unsigned short)+0x38>)
 800bcb8:	4604      	mov	r4, r0
 800bcba:	689b      	ldr	r3, [r3, #8]
 800bcbc:	9301      	str	r3, [sp, #4]
 800bcbe:	f105 0018 	add.w	r0, r5, #24
 800bcc2:	2204      	movs	r2, #4
 800bcc4:	3117      	adds	r1, #23
 800bcc6:	f7ff fe61 	bl	800b98c <memcpy.isra.0>
 800bcca:	2204      	movs	r2, #4
 800bccc:	f105 001c 	add.w	r0, r5, #28
 800bcd0:	eb0d 0102 	add.w	r1, sp, r2
 800bcd4:	f7ff fe5a 	bl	800b98c <memcpy.isra.0>
 800bcd8:	2308      	movs	r3, #8
 800bcda:	4620      	mov	r0, r4
 800bcdc:	75eb      	strb	r3, [r5, #23]
 800bcde:	b003      	add	sp, #12
 800bce0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bce4:	f7ff ba7e 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bce8:	200009cc 	andcs	r0, r0, ip, asr #19

0800bcec <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800bcec:	b513      	push	{r0, r1, r4, lr}
 800bcee:	6841      	ldr	r1, [r0, #4]
 800bcf0:	7d8b      	ldrb	r3, [r1, #22]
 800bcf2:	2b08      	cmp	r3, #8
 800bcf4:	4604      	mov	r4, r0
 800bcf6:	d005      	beq.n	800bd04 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x18>
 800bcf8:	2101      	movs	r1, #1
 800bcfa:	b002      	add	sp, #8
 800bcfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd00:	f7ff bb5e 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bd04:	2204      	movs	r2, #4
 800bd06:	eb0d 0002 	add.w	r0, sp, r2
 800bd0a:	311b      	adds	r1, #27
 800bd0c:	f7ff fe3e 	bl	800b98c <memcpy.isra.0>
 800bd10:	4b05      	ldr	r3, [pc, #20]	@ (800bd28 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x3c>)
 800bd12:	9901      	ldr	r1, [sp, #4]
 800bd14:	6818      	ldr	r0, [r3, #0]
 800bd16:	f001 f80f 	bl	800cd38 <Network::SetQueuedDefaultRoute(unsigned long)>
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	b002      	add	sp, #8
 800bd1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd22:	f7ff ba5f 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bd26:	bf00      	nop
 800bd28:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bd2c <RDMHandler::GetHostName(unsigned short)>:
 800bd2c:	4b09      	ldr	r3, [pc, #36]	@ (800bd54 <RDMHandler::GetHostName(unsigned short)+0x28>)
 800bd2e:	6819      	ldr	r1, [r3, #0]
 800bd30:	3116      	adds	r1, #22
 800bd32:	b510      	push	{r4, lr}
 800bd34:	460b      	mov	r3, r1
 800bd36:	4604      	mov	r4, r0
 800bd38:	461a      	mov	r2, r3
 800bd3a:	3301      	adds	r3, #1
 800bd3c:	7810      	ldrb	r0, [r2, #0]
 800bd3e:	2800      	cmp	r0, #0
 800bd40:	d1fa      	bne.n	800bd38 <RDMHandler::GetHostName(unsigned short)+0xc>
 800bd42:	4620      	mov	r0, r4
 800bd44:	1a52      	subs	r2, r2, r1
 800bd46:	f7ff f9f7 	bl	800b138 <RDMHandler::HandleString(char const*, unsigned long)>
 800bd4a:	4620      	mov	r0, r4
 800bd4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd50:	f7ff ba48 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bd54:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bd58 <RDMHandler::SetHostName(bool, unsigned short)>:
 800bd58:	b510      	push	{r4, lr}
 800bd5a:	6841      	ldr	r1, [r0, #4]
 800bd5c:	7d8b      	ldrb	r3, [r1, #22]
 800bd5e:	2b3f      	cmp	r3, #63	@ 0x3f
 800bd60:	4604      	mov	r4, r0
 800bd62:	d904      	bls.n	800bd6e <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800bd64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd68:	2102      	movs	r1, #2
 800bd6a:	f7ff bb29 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bd6e:	440b      	add	r3, r1
 800bd70:	2200      	movs	r2, #0
 800bd72:	75da      	strb	r2, [r3, #23]
 800bd74:	4b04      	ldr	r3, [pc, #16]	@ (800bd88 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800bd76:	3117      	adds	r1, #23
 800bd78:	6818      	ldr	r0, [r3, #0]
 800bd7a:	f000 ff91 	bl	800cca0 <Network::SetHostName(char const*)>
 800bd7e:	4620      	mov	r0, r4
 800bd80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd84:	f7ff ba2e 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bd88:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bd8c <RDMHandler::GetDomainName(unsigned short)>:
 800bd8c:	4b09      	ldr	r3, [pc, #36]	@ (800bdb4 <RDMHandler::GetDomainName(unsigned short)+0x28>)
 800bd8e:	6819      	ldr	r1, [r3, #0]
 800bd90:	3156      	adds	r1, #86	@ 0x56
 800bd92:	b510      	push	{r4, lr}
 800bd94:	460b      	mov	r3, r1
 800bd96:	4604      	mov	r4, r0
 800bd98:	461a      	mov	r2, r3
 800bd9a:	3301      	adds	r3, #1
 800bd9c:	7810      	ldrb	r0, [r2, #0]
 800bd9e:	2800      	cmp	r0, #0
 800bda0:	d1fa      	bne.n	800bd98 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800bda2:	4620      	mov	r0, r4
 800bda4:	1a52      	subs	r2, r2, r1
 800bda6:	f7ff f9c7 	bl	800b138 <RDMHandler::HandleString(char const*, unsigned long)>
 800bdaa:	4620      	mov	r0, r4
 800bdac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdb0:	f7ff ba18 	b.w	800b1e4 <RDMHandler::RespondMessageAck()>
 800bdb4:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bdb8 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800bdb8:	210b      	movs	r1, #11
 800bdba:	f7ff bb01 	b.w	800b3c0 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800bdc0 <RDMDevice::RDMDevice()>:
 800bdc0:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800bdc4:	b513      	push	{r0, r1, r4, lr}
 800bdc6:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800bdca:	f8a0 3042 	strh.w	r3, [r0, #66]	@ 0x42
 800bdce:	2300      	movs	r3, #0
 800bdd0:	f8a0 3044 	strh.w	r3, [r0, #68]	@ 0x44
 800bdd4:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 800bdd8:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
 800bddc:	4b1c      	ldr	r3, [pc, #112]	@ (800be50 <RDMDevice::RDMDevice()+0x90>)
 800bdde:	491d      	ldr	r1, [pc, #116]	@ (800be54 <RDMDevice::RDMDevice()+0x94>)
 800bde0:	6018      	str	r0, [r3, #0]
 800bde2:	4b1d      	ldr	r3, [pc, #116]	@ (800be58 <RDMDevice::RDMDevice()+0x98>)
 800bde4:	781a      	ldrb	r2, [r3, #0]
 800bde6:	f880 2046 	strb.w	r2, [r0, #70]	@ 0x46
 800bdea:	785b      	ldrb	r3, [r3, #1]
 800bdec:	f880 3047 	strb.w	r3, [r0, #71]	@ 0x47
 800bdf0:	466a      	mov	r2, sp
 800bdf2:	2306      	movs	r3, #6
 800bdf4:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bdf8:	f802 4b01 	strb.w	r4, [r2], #1
 800bdfc:	3b01      	subs	r3, #1
 800bdfe:	d1f9      	bne.n	800bdf4 <RDMDevice::RDMDevice()+0x34>
 800be00:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800be04:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800be08:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800be0c:	f89d 4005 	ldrb.w	r4, [sp, #5]
 800be10:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
 800be14:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
 800be18:	f880 204e 	strb.w	r2, [r0, #78]	@ 0x4e
 800be1c:	f880 304f 	strb.w	r3, [r0, #79]	@ 0x4f
 800be20:	4a0e      	ldr	r2, [pc, #56]	@ (800be5c <RDMDevice::RDMDevice()+0x9c>)
 800be22:	f880 104a 	strb.w	r1, [r0, #74]	@ 0x4a
 800be26:	2319      	movs	r3, #25
 800be28:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
 800be2c:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 800be30:	f880 404b 	strb.w	r4, [r0, #75]	@ 0x4b
 800be34:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
 800be38:	4603      	mov	r3, r0
 800be3a:	f100 0119 	add.w	r1, r0, #25
 800be3e:	f812 4b01 	ldrb.w	r4, [r2], #1
 800be42:	f803 4b01 	strb.w	r4, [r3], #1
 800be46:	4299      	cmp	r1, r3
 800be48:	d1f9      	bne.n	800be3e <RDMDevice::RDMDevice()+0x7e>
 800be4a:	b002      	add	sp, #8
 800be4c:	bd10      	pop	{r4, pc}
 800be4e:	bf00      	nop
 800be50:	20000764 	andcs	r0, r0, r4, ror #14
 800be54:	200009e0 	andcs	r0, r0, r0, ror #19
 800be58:	08016eee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, fp, sp, lr}
 800be5c:	08016f0c 	stmdaeq	r1, {r2, r3, r8, r9, sl, fp, sp, lr}

0800be60 <RDMDevice::Print()>:
 800be60:	b513      	push	{r0, r1, r4, lr}
 800be62:	4604      	mov	r4, r0
 800be64:	481f      	ldr	r0, [pc, #124]	@ (800bee4 <RDMDevice::Print()+0x84>)
 800be66:	f007 fd58 	bl	801391a <puts>
 800be6a:	4b1f      	ldr	r3, [pc, #124]	@ (800bee8 <RDMDevice::Print()+0x88>)
 800be6c:	461a      	mov	r2, r3
 800be6e:	4619      	mov	r1, r3
 800be70:	3301      	adds	r3, #1
 800be72:	7808      	ldrb	r0, [r1, #0]
 800be74:	2800      	cmp	r0, #0
 800be76:	d1fa      	bne.n	800be6e <RDMDevice::Print()+0xe>
 800be78:	1a89      	subs	r1, r1, r2
 800be7a:	2920      	cmp	r1, #32
 800be7c:	bf28      	it	cs
 800be7e:	2120      	movcs	r1, #32
 800be80:	4a19      	ldr	r2, [pc, #100]	@ (800bee8 <RDMDevice::Print()+0x88>)
 800be82:	481a      	ldr	r0, [pc, #104]	@ (800beec <RDMDevice::Print()+0x8c>)
 800be84:	f007 fcf4 	bl	8013870 <printf>
 800be88:	f894 2047 	ldrb.w	r2, [r4, #71]	@ 0x47
 800be8c:	f894 1046 	ldrb.w	r1, [r4, #70]	@ 0x46
 800be90:	4817      	ldr	r0, [pc, #92]	@ (800bef0 <RDMDevice::Print()+0x90>)
 800be92:	f007 fced 	bl	8013870 <printf>
 800be96:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 800be9a:	9300      	str	r3, [sp, #0]
 800be9c:	f894 304d 	ldrb.w	r3, [r4, #77]	@ 0x4d
 800bea0:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
 800bea4:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 800bea8:	4812      	ldr	r0, [pc, #72]	@ (800bef4 <RDMDevice::Print()+0x94>)
 800beaa:	f007 fce1 	bl	8013870 <printf>
 800beae:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 800beb2:	4811      	ldr	r0, [pc, #68]	@ (800bef8 <RDMDevice::Print()+0x98>)
 800beb4:	f104 0220 	add.w	r2, r4, #32
 800beb8:	f007 fcda 	bl	8013870 <printf>
 800bebc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800bec0:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
 800bec4:	480d      	ldr	r0, [pc, #52]	@ (800befc <RDMDevice::Print()+0x9c>)
 800bec6:	0a09      	lsrs	r1, r1, #8
 800bec8:	f007 fcd2 	bl	8013870 <printf>
 800becc:	f8b4 1042 	ldrh.w	r1, [r4, #66]	@ 0x42
 800bed0:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 800bed4:	480a      	ldr	r0, [pc, #40]	@ (800bf00 <RDMDevice::Print()+0xa0>)
 800bed6:	0a09      	lsrs	r1, r1, #8
 800bed8:	b002      	add	sp, #8
 800beda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bede:	f007 bcc7 	b.w	8013870 <printf>
 800bee2:	bf00      	nop
 800bee4:	08014365 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, lr}
 800bee8:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}
 800beec:	0801437e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, lr}
 800bef0:	08014399 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, lr}
 800bef4:	080143b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, lr}
 800bef8:	080143df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, lr}
 800befc:	080143fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, lr}
 800bf00:	08014419 	stmdaeq	r1, {r0, r3, r4, sl, lr}

0800bf04 <memcpy.isra.0>:
 800bf04:	440a      	add	r2, r1
 800bf06:	4291      	cmp	r1, r2
 800bf08:	d100      	bne.n	800bf0c <memcpy.isra.0+0x8>
 800bf0a:	4770      	bx	lr
 800bf0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bf10:	f800 3b01 	strb.w	r3, [r0], #1
 800bf14:	e7f7      	b.n	800bf06 <memcpy.isra.0+0x2>

0800bf16 <strlen>:
 800bf16:	4603      	mov	r3, r0
 800bf18:	461a      	mov	r2, r3
 800bf1a:	3301      	adds	r3, #1
 800bf1c:	7811      	ldrb	r1, [r2, #0]
 800bf1e:	2900      	cmp	r1, #0
 800bf20:	d1fa      	bne.n	800bf18 <strlen+0x2>
 800bf22:	1a10      	subs	r0, r2, r0
 800bf24:	4770      	bx	lr
	...

0800bf28 <mdns::Domain::AddDotLocal()>:
 800bf28:	b510      	push	{r4, lr}
 800bf2a:	4604      	mov	r4, r0
 800bf2c:	f8b0 0100 	ldrh.w	r0, [r0, #256]	@ 0x100
 800bf30:	4905      	ldr	r1, [pc, #20]	@ (800bf48 <mdns::Domain::AddDotLocal()+0x20>)
 800bf32:	2207      	movs	r2, #7
 800bf34:	4420      	add	r0, r4
 800bf36:	f7ff ffe5 	bl	800bf04 <memcpy.isra.0>
 800bf3a:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800bf3e:	3307      	adds	r3, #7
 800bf40:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800bf44:	bd10      	pop	{r4, pc}
 800bf46:	bf00      	nop
 800bf48:	08017122 	stmdaeq	r1, {r1, r5, r8, ip, sp, lr}

0800bf4c <create_host_domain(mdns::Domain&)>:
 800bf4c:	2300      	movs	r3, #0
 800bf4e:	b570      	push	{r4, r5, r6, lr}
 800bf50:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800bf54:	4b0c      	ldr	r3, [pc, #48]	@ (800bf88 <create_host_domain(mdns::Domain&)+0x3c>)
 800bf56:	681e      	ldr	r6, [r3, #0]
 800bf58:	3616      	adds	r6, #22
 800bf5a:	4604      	mov	r4, r0
 800bf5c:	4630      	mov	r0, r6
 800bf5e:	f7ff ffda 	bl	800bf16 <strlen>
 800bf62:	2301      	movs	r3, #1
 800bf64:	7020      	strb	r0, [r4, #0]
 800bf66:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800bf6a:	4602      	mov	r2, r0
 800bf6c:	4605      	mov	r5, r0
 800bf6e:	4631      	mov	r1, r6
 800bf70:	18e0      	adds	r0, r4, r3
 800bf72:	f7ff ffc7 	bl	800bf04 <memcpy.isra.0>
 800bf76:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800bf7a:	441d      	add	r5, r3
 800bf7c:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800bf80:	4620      	mov	r0, r4
 800bf82:	f7ff ffd1 	bl	800bf28 <mdns::Domain::AddDotLocal()>
 800bf86:	bd70      	pop	{r4, r5, r6, pc}
 800bf88:	200009ac 	andcs	r0, r0, ip, lsr #19

0800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
 800bf8c:	2300      	movs	r3, #0
 800bf8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf92:	4604      	mov	r4, r0
 800bf94:	460e      	mov	r6, r1
 800bf96:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800bf9a:	b1aa      	cbz	r2, 800bfc8 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x3c>
 800bf9c:	680f      	ldr	r7, [r1, #0]
 800bf9e:	f100 0801 	add.w	r8, r0, #1
 800bfa2:	b3b7      	cbz	r7, 800c012 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x86>
 800bfa4:	4638      	mov	r0, r7
 800bfa6:	f7ff ffb6 	bl	800bf16 <strlen>
 800bfaa:	2301      	movs	r3, #1
 800bfac:	4605      	mov	r5, r0
 800bfae:	7020      	strb	r0, [r4, #0]
 800bfb0:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800bfb4:	4602      	mov	r2, r0
 800bfb6:	4639      	mov	r1, r7
 800bfb8:	4640      	mov	r0, r8
 800bfba:	f7ff ffa3 	bl	800bf04 <memcpy.isra.0>
 800bfbe:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800bfc2:	441d      	add	r5, r3
 800bfc4:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800bfc8:	4b15      	ldr	r3, [pc, #84]	@ (800c020 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x94>)
 800bfca:	68f6      	ldr	r6, [r6, #12]
 800bfcc:	f8b4 0100 	ldrh.w	r0, [r4, #256]	@ 0x100
 800bfd0:	0131      	lsls	r1, r6, #4
 800bfd2:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 800bfd6:	5859      	ldr	r1, [r3, r1]
 800bfd8:	88b5      	ldrh	r5, [r6, #4]
 800bfda:	4420      	add	r0, r4
 800bfdc:	462a      	mov	r2, r5
 800bfde:	f7ff ff91 	bl	800bf04 <memcpy.isra.0>
 800bfe2:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800bfe6:	18e8      	adds	r0, r5, r3
 800bfe8:	68b3      	ldr	r3, [r6, #8]
 800bfea:	b280      	uxth	r0, r0
 800bfec:	f8a4 0100 	strh.w	r0, [r4, #256]	@ 0x100
 800bff0:	2205      	movs	r2, #5
 800bff2:	4420      	add	r0, r4
 800bff4:	b98b      	cbnz	r3, 800c01a <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x8e>
 800bff6:	490b      	ldr	r1, [pc, #44]	@ (800c024 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x98>)
 800bff8:	f7ff ff84 	bl	800bf04 <memcpy.isra.0>
 800bffc:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800c000:	3305      	adds	r3, #5
 800c002:	b29b      	uxth	r3, r3
 800c004:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800c008:	4620      	mov	r0, r4
 800c00a:	f7ff ff8d 	bl	800bf28 <mdns::Domain::AddDotLocal()>
 800c00e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c012:	4b05      	ldr	r3, [pc, #20]	@ (800c028 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x9c>)
 800c014:	681f      	ldr	r7, [r3, #0]
 800c016:	3716      	adds	r7, #22
 800c018:	e7c4      	b.n	800bfa4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x18>
 800c01a:	4904      	ldr	r1, [pc, #16]	@ (800c02c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xa0>)
 800c01c:	e7ec      	b.n	800bff8 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x6c>
 800c01e:	bf00      	nop
 800c020:	08017048 	stmdaeq	r1, {r3, r6, ip, sp, lr}
 800c024:	0801711d 	stmdaeq	r1, {r0, r2, r3, r4, r8, ip, sp, lr}
 800c028:	200009ac 	andcs	r0, r0, ip, lsr #19
 800c02c:	08017118 	stmdaeq	r1, {r3, r4, r8, ip, sp, lr}

0800c030 <mdns::Domain::Print(bool)>:
 800c030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c034:	4605      	mov	r5, r0
 800c036:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 800c074 <mdns::Domain::Print(bool)+0x44>
 800c03a:	2020      	movs	r0, #32
 800c03c:	460e      	mov	r6, r1
 800c03e:	f007 fc67 	bl	8013910 <putchar>
 800c042:	462a      	mov	r2, r5
 800c044:	7817      	ldrb	r7, [r2, #0]
 800c046:	b92f      	cbnz	r7, 800c054 <mdns::Domain::Print(bool)+0x24>
 800c048:	b18e      	cbz	r6, 800c06e <mdns::Domain::Print(bool)+0x3e>
 800c04a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c04e:	200a      	movs	r0, #10
 800c050:	f007 bc5e 	b.w	8013910 <putchar>
 800c054:	f8b5 3100 	ldrh.w	r3, [r5, #256]	@ 0x100
 800c058:	442b      	add	r3, r5
 800c05a:	429a      	cmp	r2, r3
 800c05c:	d2f4      	bcs.n	800c048 <mdns::Domain::Print(bool)+0x18>
 800c05e:	1c54      	adds	r4, r2, #1
 800c060:	4622      	mov	r2, r4
 800c062:	4639      	mov	r1, r7
 800c064:	4640      	mov	r0, r8
 800c066:	f007 fc03 	bl	8013870 <printf>
 800c06a:	19e2      	adds	r2, r4, r7
 800c06c:	e7ea      	b.n	800c044 <mdns::Domain::Print(bool)+0x14>
 800c06e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c072:	bf00      	nop
 800c074:	08014438 	stmdaeq	r1, {r3, r4, r5, sl, lr}

0800c078 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
 800c078:	f8b0 2100 	ldrh.w	r2, [r0, #256]	@ 0x100
 800c07c:	f8b1 3100 	ldrh.w	r3, [r1, #256]	@ 0x100
 800c080:	4293      	cmp	r3, r2
 800c082:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c086:	d127      	bne.n	800c0d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800c088:	18c2      	adds	r2, r0, r3
 800c08a:	7803      	ldrb	r3, [r0, #0]
 800c08c:	b11b      	cbz	r3, 800c096 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800c08e:	780c      	ldrb	r4, [r1, #0]
 800c090:	b10c      	cbz	r4, 800c096 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800c092:	4290      	cmp	r0, r2
 800c094:	d301      	bcc.n	800c09a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x22>
 800c096:	2001      	movs	r0, #1
 800c098:	e01f      	b.n	800c0da <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x62>
 800c09a:	42a3      	cmp	r3, r4
 800c09c:	d11c      	bne.n	800c0d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800c09e:	4684      	mov	ip, r0
 800c0a0:	460f      	mov	r7, r1
 800c0a2:	461e      	mov	r6, r3
 800c0a4:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 800c0a8:	f1a4 0541 	sub.w	r5, r4, #65	@ 0x41
 800c0ac:	2d19      	cmp	r5, #25
 800c0ae:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800c0b2:	f1a5 0841 	sub.w	r8, r5, #65	@ 0x41
 800c0b6:	46a6      	mov	lr, r4
 800c0b8:	bf98      	it	ls
 800c0ba:	f104 0e20 	addls.w	lr, r4, #32
 800c0be:	f1b8 0f19 	cmp.w	r8, #25
 800c0c2:	bf98      	it	ls
 800c0c4:	3520      	addls	r5, #32
 800c0c6:	4575      	cmp	r5, lr
 800c0c8:	d106      	bne.n	800c0d8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800c0ca:	b10c      	cbz	r4, 800c0d0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x58>
 800c0cc:	3e01      	subs	r6, #1
 800c0ce:	d1e9      	bne.n	800c0a4 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x2c>
 800c0d0:	3301      	adds	r3, #1
 800c0d2:	4418      	add	r0, r3
 800c0d4:	4419      	add	r1, r3
 800c0d6:	e7d8      	b.n	800c08a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x12>
 800c0d8:	2000      	movs	r0, #0
 800c0da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0de <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
 800c0de:	f892 c000 	ldrb.w	ip, [r2]
 800c0e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c0e6:	ea6f 050c 	mvn.w	r5, ip
 800c0ea:	4606      	mov	r6, r0
 800c0ec:	440d      	add	r5, r1
 800c0ee:	42b5      	cmp	r5, r6
 800c0f0:	4628      	mov	r0, r5
 800c0f2:	d201      	bcs.n	800c0f8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x1a>
 800c0f4:	2000      	movs	r0, #0
 800c0f6:	e040      	b.n	800c17a <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x9c>
 800c0f8:	7803      	ldrb	r3, [r0, #0]
 800c0fa:	4563      	cmp	r3, ip
 800c0fc:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 800c100:	d1f5      	bne.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c102:	78ac      	ldrb	r4, [r5, #2]
 800c104:	7853      	ldrb	r3, [r2, #1]
 800c106:	429c      	cmp	r4, r3
 800c108:	d1f1      	bne.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c10a:	4604      	mov	r4, r0
 800c10c:	4617      	mov	r7, r2
 800c10e:	e018      	b.n	800c142 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800c110:	4573      	cmp	r3, lr
 800c112:	db27      	blt.n	800c164 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x86>
 800c114:	e7eb      	b.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c116:	2b3f      	cmp	r3, #63	@ 0x3f
 800c118:	d913      	bls.n	800c142 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800c11a:	2bbf      	cmp	r3, #191	@ 0xbf
 800c11c:	d9e7      	bls.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c11e:	f104 0e01 	add.w	lr, r4, #1
 800c122:	4571      	cmp	r1, lr
 800c124:	d9e3      	bls.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c126:	f894 e001 	ldrb.w	lr, [r4, #1]
 800c12a:	021b      	lsls	r3, r3, #8
 800c12c:	f403 537c 	and.w	r3, r3, #16128	@ 0x3f00
 800c130:	4473      	add	r3, lr
 800c132:	eb06 0e03 	add.w	lr, r6, r3
 800c136:	4574      	cmp	r4, lr
 800c138:	d3d9      	bcc.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c13a:	5cf3      	ldrb	r3, [r6, r3]
 800c13c:	2b3f      	cmp	r3, #63	@ 0x3f
 800c13e:	d8d6      	bhi.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c140:	4674      	mov	r4, lr
 800c142:	783b      	ldrb	r3, [r7, #0]
 800c144:	eb04 0e03 	add.w	lr, r4, r3
 800c148:	4571      	cmp	r1, lr
 800c14a:	d9d0      	bls.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c14c:	f04f 0e00 	mov.w	lr, #0
 800c150:	f814 900e 	ldrb.w	r9, [r4, lr]
 800c154:	f817 800e 	ldrb.w	r8, [r7, lr]
 800c158:	45c1      	cmp	r9, r8
 800c15a:	d1d9      	bne.n	800c110 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x32>
 800c15c:	f10e 0e01 	add.w	lr, lr, #1
 800c160:	4573      	cmp	r3, lr
 800c162:	daf5      	bge.n	800c150 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x72>
 800c164:	3301      	adds	r3, #1
 800c166:	441f      	add	r7, r3
 800c168:	441c      	add	r4, r3
 800c16a:	f897 e000 	ldrb.w	lr, [r7]
 800c16e:	7823      	ldrb	r3, [r4, #0]
 800c170:	f1be 0f00 	cmp.w	lr, #0
 800c174:	d1cf      	bne.n	800c116 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x38>
 800c176:	2b00      	cmp	r3, #0
 800c178:	d1b9      	bne.n	800c0ee <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800c17a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
 800c180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c182:	460a      	mov	r2, r1
 800c184:	4606      	mov	r6, r0
 800c186:	4605      	mov	r5, r0
 800c188:	7814      	ldrb	r4, [r2, #0]
 800c18a:	b91c      	cbnz	r4, 800c194 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x14>
 800c18c:	4628      	mov	r0, r5
 800c18e:	f800 4b01 	strb.w	r4, [r0], #1
 800c192:	e00e      	b.n	800c1b2 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x32>
 800c194:	4810      	ldr	r0, [pc, #64]	@ (800c1d8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800c196:	4631      	mov	r1, r6
 800c198:	f7ff ffa1 	bl	800c0de <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
 800c19c:	b150      	cbz	r0, 800c1b4 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x34>
 800c19e:	4b0e      	ldr	r3, [pc, #56]	@ (800c1d8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800c1a0:	1ac3      	subs	r3, r0, r3
 800c1a2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800c1a6:	4628      	mov	r0, r5
 800c1a8:	f062 023f 	orn	r2, r2, #63	@ 0x3f
 800c1ac:	f800 2b02 	strb.w	r2, [r0], #2
 800c1b0:	706b      	strb	r3, [r5, #1]
 800c1b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c1b4:	462b      	mov	r3, r5
 800c1b6:	3201      	adds	r2, #1
 800c1b8:	f803 4b01 	strb.w	r4, [r3], #1
 800c1bc:	4617      	mov	r7, r2
 800c1be:	4618      	mov	r0, r3
 800c1c0:	f817 1b01 	ldrb.w	r1, [r7], #1
 800c1c4:	f800 1b01 	strb.w	r1, [r0], #1
 800c1c8:	1b41      	subs	r1, r0, r5
 800c1ca:	3901      	subs	r1, #1
 800c1cc:	42a1      	cmp	r1, r4
 800c1ce:	d3f7      	bcc.n	800c1c0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x40>
 800c1d0:	4422      	add	r2, r4
 800c1d2:	191d      	adds	r5, r3, r4
 800c1d4:	e7d8      	b.n	800c188 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x8>
 800c1d6:	bf00      	nop
 800c1d8:	20000781 	andcs	r0, r0, r1, lsl #15

0800c1dc <add_answer_a(unsigned char*, unsigned long)>:
 800c1dc:	b530      	push	{r4, r5, lr}
 800c1de:	b0c3      	sub	sp, #268	@ 0x10c
 800c1e0:	4605      	mov	r5, r0
 800c1e2:	a801      	add	r0, sp, #4
 800c1e4:	460c      	mov	r4, r1
 800c1e6:	f7ff feb1 	bl	800bf4c <create_host_domain(mdns::Domain&)>
 800c1ea:	a901      	add	r1, sp, #4
 800c1ec:	4628      	mov	r0, r5
 800c1ee:	f7ff ffc7 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c1f2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800c1f6:	8003      	strh	r3, [r0, #0]
 800c1f8:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800c1fc:	8043      	strh	r3, [r0, #2]
 800c1fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c202:	8103      	strh	r3, [r0, #8]
 800c204:	4b04      	ldr	r3, [pc, #16]	@ (800c218 <add_answer_a(unsigned char*, unsigned long)+0x3c>)
 800c206:	ba24      	rev	r4, r4
 800c208:	681b      	ldr	r3, [r3, #0]
 800c20a:	6044      	str	r4, [r0, #4]
 800c20c:	f8c0 300a 	str.w	r3, [r0, #10]
 800c210:	300e      	adds	r0, #14
 800c212:	1b40      	subs	r0, r0, r5
 800c214:	b043      	add	sp, #268	@ 0x10c
 800c216:	bd30      	pop	{r4, r5, pc}
 800c218:	200009cc 	andcs	r0, r0, ip, asr #19

0800c21c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
 800c21c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c21e:	4e11      	ldr	r6, [pc, #68]	@ (800c264 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x48>)
 800c220:	b0c3      	sub	sp, #268	@ 0x10c
 800c222:	4607      	mov	r7, r0
 800c224:	460d      	mov	r5, r1
 800c226:	4630      	mov	r0, r6
 800c228:	490f      	ldr	r1, [pc, #60]	@ (800c268 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x4c>)
 800c22a:	f7ff ffa9 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c22e:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800c232:	8003      	strh	r3, [r0, #0]
 800c234:	ba2d      	rev	r5, r5
 800c236:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800c23a:	8043      	strh	r3, [r0, #2]
 800c23c:	4604      	mov	r4, r0
 800c23e:	6045      	str	r5, [r0, #4]
 800c240:	2200      	movs	r2, #0
 800c242:	f100 050a 	add.w	r5, r0, #10
 800c246:	4639      	mov	r1, r7
 800c248:	a801      	add	r0, sp, #4
 800c24a:	f7ff fe9f 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c24e:	a901      	add	r1, sp, #4
 800c250:	4628      	mov	r0, r5
 800c252:	f7ff ff95 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c256:	1b45      	subs	r5, r0, r5
 800c258:	ba6d      	rev16	r5, r5
 800c25a:	1b80      	subs	r0, r0, r6
 800c25c:	8125      	strh	r5, [r4, #8]
 800c25e:	b043      	add	sp, #268	@ 0x10c
 800c260:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c262:	bf00      	nop
 800c264:	2000078d 	andcs	r0, r0, sp, lsl #15
 800c268:	08016f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, sp, lr}

0800c26c <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800c26c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c26e:	b0c3      	sub	sp, #268	@ 0x10c
 800c270:	460e      	mov	r6, r1
 800c272:	4607      	mov	r7, r0
 800c274:	4601      	mov	r1, r0
 800c276:	4615      	mov	r5, r2
 800c278:	a801      	add	r0, sp, #4
 800c27a:	2201      	movs	r2, #1
 800c27c:	f7ff fe86 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c280:	a901      	add	r1, sp, #4
 800c282:	4630      	mov	r0, r6
 800c284:	f7ff ff7c 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c288:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 800c28c:	8003      	strh	r3, [r0, #0]
 800c28e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800c292:	8043      	strh	r3, [r0, #2]
 800c294:	2300      	movs	r3, #0
 800c296:	f8c0 300a 	str.w	r3, [r0, #10]
 800c29a:	ba2d      	rev	r5, r5
 800c29c:	897b      	ldrh	r3, [r7, #10]
 800c29e:	81c3      	strh	r3, [r0, #14]
 800c2a0:	4604      	mov	r4, r0
 800c2a2:	6045      	str	r5, [r0, #4]
 800c2a4:	f100 0510 	add.w	r5, r0, #16
 800c2a8:	a801      	add	r0, sp, #4
 800c2aa:	f7ff fe4f 	bl	800bf4c <create_host_domain(mdns::Domain&)>
 800c2ae:	a901      	add	r1, sp, #4
 800c2b0:	4628      	mov	r0, r5
 800c2b2:	f7ff ff65 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c2b6:	1d83      	adds	r3, r0, #6
 800c2b8:	1b5b      	subs	r3, r3, r5
 800c2ba:	ba5b      	rev16	r3, r3
 800c2bc:	1b80      	subs	r0, r0, r6
 800c2be:	8123      	strh	r3, [r4, #8]
 800c2c0:	b043      	add	sp, #268	@ 0x10c
 800c2c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c2c4 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800c2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2c6:	b0c3      	sub	sp, #268	@ 0x10c
 800c2c8:	460e      	mov	r6, r1
 800c2ca:	4607      	mov	r7, r0
 800c2cc:	4601      	mov	r1, r0
 800c2ce:	4615      	mov	r5, r2
 800c2d0:	a801      	add	r0, sp, #4
 800c2d2:	2200      	movs	r2, #0
 800c2d4:	f7ff fe5a 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c2d8:	a901      	add	r1, sp, #4
 800c2da:	4630      	mov	r0, r6
 800c2dc:	f7ff ff50 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c2e0:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800c2e4:	8003      	strh	r3, [r0, #0]
 800c2e6:	ba2d      	rev	r5, r5
 800c2e8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800c2ec:	8043      	strh	r3, [r0, #2]
 800c2ee:	4604      	mov	r4, r0
 800c2f0:	6045      	str	r5, [r0, #4]
 800c2f2:	2201      	movs	r2, #1
 800c2f4:	f100 050a 	add.w	r5, r0, #10
 800c2f8:	4639      	mov	r1, r7
 800c2fa:	a801      	add	r0, sp, #4
 800c2fc:	f7ff fe46 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c300:	a901      	add	r1, sp, #4
 800c302:	4628      	mov	r0, r5
 800c304:	f7ff ff3c 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c308:	1b45      	subs	r5, r0, r5
 800c30a:	ba6d      	rev16	r5, r5
 800c30c:	1b80      	subs	r0, r0, r6
 800c30e:	8125      	strh	r5, [r4, #8]
 800c310:	b043      	add	sp, #268	@ 0x10c
 800c312:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c314 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800c314:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c316:	b0c3      	sub	sp, #268	@ 0x10c
 800c318:	4604      	mov	r4, r0
 800c31a:	460e      	mov	r6, r1
 800c31c:	4615      	mov	r5, r2
 800c31e:	4601      	mov	r1, r0
 800c320:	2201      	movs	r2, #1
 800c322:	a801      	add	r0, sp, #4
 800c324:	f7ff fe32 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c328:	a901      	add	r1, sp, #4
 800c32a:	4630      	mov	r0, r6
 800c32c:	f7ff ff28 	bl	800c180 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800c330:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800c334:	8002      	strh	r2, [r0, #0]
 800c336:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 800c33a:	8042      	strh	r2, [r0, #2]
 800c33c:	6862      	ldr	r2, [r4, #4]
 800c33e:	ba2d      	rev	r5, r5
 800c340:	6045      	str	r5, [r0, #4]
 800c342:	f100 050b 	add.w	r5, r0, #11
 800c346:	b932      	cbnz	r2, 800c356 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x42>
 800c348:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800c34c:	8101      	strh	r1, [r0, #8]
 800c34e:	7282      	strb	r2, [r0, #10]
 800c350:	1ba8      	subs	r0, r5, r6
 800c352:	b043      	add	sp, #268	@ 0x10c
 800c354:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c356:	8927      	ldrh	r7, [r4, #8]
 800c358:	7287      	strb	r7, [r0, #10]
 800c35a:	1c7a      	adds	r2, r7, #1
 800c35c:	ba52      	rev16	r2, r2
 800c35e:	8102      	strh	r2, [r0, #8]
 800c360:	8922      	ldrh	r2, [r4, #8]
 800c362:	6861      	ldr	r1, [r4, #4]
 800c364:	4628      	mov	r0, r5
 800c366:	f7ff fdcd 	bl	800bf04 <memcpy.isra.0>
 800c36a:	443d      	add	r5, r7
 800c36c:	e7f0      	b.n	800c350 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x3c>

0800c36e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
 800c36e:	4281      	cmp	r1, r0
 800c370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c374:	4606      	mov	r6, r0
 800c376:	d310      	bcc.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c378:	4291      	cmp	r1, r2
 800c37a:	d20e      	bcs.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c37c:	2500      	movs	r5, #0
 800c37e:	f503 7c80 	add.w	ip, r3, #256	@ 0x100
 800c382:	701d      	strb	r5, [r3, #0]
 800c384:	4608      	mov	r0, r1
 800c386:	4607      	mov	r7, r0
 800c388:	f810 4b01 	ldrb.w	r4, [r0], #1
 800c38c:	b38c      	cbz	r4, 800c3f2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
 800c38e:	f004 01c0 	and.w	r1, r4, #192	@ 0xc0
 800c392:	2980      	cmp	r1, #128	@ 0x80
 800c394:	d001      	beq.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c396:	d803      	bhi.n	800c3a0 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x32>
 800c398:	b199      	cbz	r1, 800c3c2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x54>
 800c39a:	2000      	movs	r0, #0
 800c39c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3a0:	29c0      	cmp	r1, #192	@ 0xc0
 800c3a2:	d1f0      	bne.n	800c386 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x18>
 800c3a4:	7800      	ldrb	r0, [r0, #0]
 800c3a6:	0224      	lsls	r4, r4, #8
 800c3a8:	f404 547c 	and.w	r4, r4, #16128	@ 0x3f00
 800c3ac:	4320      	orrs	r0, r4
 800c3ae:	b905      	cbnz	r5, 800c3b2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x44>
 800c3b0:	1cbd      	adds	r5, r7, #2
 800c3b2:	1831      	adds	r1, r6, r0
 800c3b4:	d2f1      	bcs.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c3b6:	428a      	cmp	r2, r1
 800c3b8:	d9ef      	bls.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c3ba:	5c30      	ldrb	r0, [r6, r0]
 800c3bc:	283f      	cmp	r0, #63	@ 0x3f
 800c3be:	d9e1      	bls.n	800c384 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 800c3c0:	e7eb      	b.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c3c2:	1901      	adds	r1, r0, r4
 800c3c4:	4291      	cmp	r1, r2
 800c3c6:	d2e8      	bcs.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c3c8:	1c67      	adds	r7, r4, #1
 800c3ca:	441f      	add	r7, r3
 800c3cc:	4567      	cmp	r7, ip
 800c3ce:	d2e4      	bcs.n	800c39a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800c3d0:	469e      	mov	lr, r3
 800c3d2:	f80e 4b01 	strb.w	r4, [lr], #1
 800c3d6:	f810 8b01 	ldrb.w	r8, [r0], #1
 800c3da:	f80e 8b01 	strb.w	r8, [lr], #1
 800c3de:	ebae 0803 	sub.w	r8, lr, r3
 800c3e2:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800c3e6:	4544      	cmp	r4, r8
 800c3e8:	dcf5      	bgt.n	800c3d6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x68>
 800c3ea:	2300      	movs	r3, #0
 800c3ec:	703b      	strb	r3, [r7, #0]
 800c3ee:	463b      	mov	r3, r7
 800c3f0:	e7c8      	b.n	800c384 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 800c3f2:	2d00      	cmp	r5, #0
 800c3f4:	bf18      	it	ne
 800c3f6:	4628      	movne	r0, r5
 800c3f8:	e7d0      	b.n	800c39c <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2e>
	...

0800c3fc <MDNS::SendTo(unsigned long)>:
 800c3fc:	4b0d      	ldr	r3, [pc, #52]	@ (800c434 <MDNS::SendTo(unsigned long)+0x38>)
 800c3fe:	b513      	push	{r0, r1, r4, lr}
 800c400:	6818      	ldr	r0, [r3, #0]
 800c402:	4b0d      	ldr	r3, [pc, #52]	@ (800c438 <MDNS::SendTo(unsigned long)+0x3c>)
 800c404:	460a      	mov	r2, r1
 800c406:	6819      	ldr	r1, [r3, #0]
 800c408:	4b0c      	ldr	r3, [pc, #48]	@ (800c43c <MDNS::SendTo(unsigned long)+0x40>)
 800c40a:	781b      	ldrb	r3, [r3, #0]
 800c40c:	b94b      	cbnz	r3, 800c422 <MDNS::SendTo(unsigned long)+0x26>
 800c40e:	b131      	cbz	r1, 800c41e <MDNS::SendTo(unsigned long)+0x22>
 800c410:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 800c414:	9300      	str	r3, [sp, #0]
 800c416:	4b0a      	ldr	r3, [pc, #40]	@ (800c440 <MDNS::SendTo(unsigned long)+0x44>)
 800c418:	490a      	ldr	r1, [pc, #40]	@ (800c444 <MDNS::SendTo(unsigned long)+0x48>)
 800c41a:	f001 fdff 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800c41e:	b002      	add	sp, #8
 800c420:	bd10      	pop	{r4, pc}
 800c422:	4b09      	ldr	r3, [pc, #36]	@ (800c448 <MDNS::SendTo(unsigned long)+0x4c>)
 800c424:	4c09      	ldr	r4, [pc, #36]	@ (800c44c <MDNS::SendTo(unsigned long)+0x50>)
 800c426:	681b      	ldr	r3, [r3, #0]
 800c428:	8824      	ldrh	r4, [r4, #0]
 800c42a:	2900      	cmp	r1, #0
 800c42c:	d0f7      	beq.n	800c41e <MDNS::SendTo(unsigned long)+0x22>
 800c42e:	9400      	str	r4, [sp, #0]
 800c430:	e7f2      	b.n	800c418 <MDNS::SendTo(unsigned long)+0x1c>
 800c432:	bf00      	nop
 800c434:	2000077c 	andcs	r0, r0, ip, ror r7
 800c438:	200009cc 	andcs	r0, r0, ip, asr #19
 800c43c:	20000780 	andcs	r0, r0, r0, lsl #15
 800c440:	fb0000e0 	blx	800c7ca <MDNS::HandleQuestions(unsigned long)+0x8a>
 800c444:	20000781 	andcs	r0, r0, r1, lsl #15
 800c448:	20000778 	andcs	r0, r0, r8, ror r7
 800c44c:	20000774 	andcs	r0, r0, r4, ror r7

0800c450 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>:
 800c450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c452:	4b11      	ldr	r3, [pc, #68]	@ (800c498 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x48>)
 800c454:	4c11      	ldr	r4, [pc, #68]	@ (800c49c <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x4c>)
 800c456:	681d      	ldr	r5, [r3, #0]
 800c458:	f015 0501 	ands.w	r5, r5, #1
 800c45c:	460f      	mov	r7, r1
 800c45e:	4606      	mov	r6, r0
 800c460:	4611      	mov	r1, r2
 800c462:	d003      	beq.n	800c46c <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x1c>
 800c464:	4620      	mov	r0, r4
 800c466:	f7ff feb9 	bl	800c1dc <add_answer_a(unsigned char*, unsigned long)>
 800c46a:	4404      	add	r4, r0
 800c46c:	4b0c      	ldr	r3, [pc, #48]	@ (800c4a0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x50>)
 800c46e:	2284      	movs	r2, #132	@ 0x84
 800c470:	709a      	strb	r2, [r3, #2]
 800c472:	2200      	movs	r2, #0
 800c474:	ba6d      	rev16	r5, r5
 800c476:	1ae4      	subs	r4, r4, r3
 800c478:	70da      	strb	r2, [r3, #3]
 800c47a:	801f      	strh	r7, [r3, #0]
 800c47c:	711a      	strb	r2, [r3, #4]
 800c47e:	715a      	strb	r2, [r3, #5]
 800c480:	80dd      	strh	r5, [r3, #6]
 800c482:	721a      	strb	r2, [r3, #8]
 800c484:	725a      	strb	r2, [r3, #9]
 800c486:	729a      	strb	r2, [r3, #10]
 800c488:	72da      	strb	r2, [r3, #11]
 800c48a:	b2a1      	uxth	r1, r4
 800c48c:	4630      	mov	r0, r6
 800c48e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c492:	f7ff bfb3 	b.w	800c3fc <MDNS::SendTo(unsigned long)>
 800c496:	bf00      	nop
 800c498:	20000988 	andcs	r0, r0, r8, lsl #19
 800c49c:	2000078d 	andcs	r0, r0, sp, lsl #15
 800c4a0:	20000781 	andcs	r0, r0, r1, lsl #15

0800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
 800c4a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c4a8:	461e      	mov	r6, r3
 800c4aa:	4b25      	ldr	r3, [pc, #148]	@ (800c540 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x9c>)
 800c4ac:	4c25      	ldr	r4, [pc, #148]	@ (800c544 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa0>)
 800c4ae:	f8d3 9000 	ldr.w	r9, [r3]
 800c4b2:	f019 0510 	ands.w	r5, r9, #16
 800c4b6:	4607      	mov	r7, r0
 800c4b8:	4688      	mov	r8, r1
 800c4ba:	4692      	mov	sl, r2
 800c4bc:	d005      	beq.n	800c4ca <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x26>
 800c4be:	4631      	mov	r1, r6
 800c4c0:	4640      	mov	r0, r8
 800c4c2:	f7ff feab 	bl	800c21c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
 800c4c6:	2501      	movs	r5, #1
 800c4c8:	4404      	add	r4, r0
 800c4ca:	f019 0f20 	tst.w	r9, #32
 800c4ce:	d006      	beq.n	800c4de <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x3a>
 800c4d0:	4621      	mov	r1, r4
 800c4d2:	4632      	mov	r2, r6
 800c4d4:	4640      	mov	r0, r8
 800c4d6:	f7ff fef5 	bl	800c2c4 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800c4da:	3501      	adds	r5, #1
 800c4dc:	4404      	add	r4, r0
 800c4de:	f019 0f40 	tst.w	r9, #64	@ 0x40
 800c4e2:	d006      	beq.n	800c4f2 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x4e>
 800c4e4:	4621      	mov	r1, r4
 800c4e6:	4632      	mov	r2, r6
 800c4e8:	4640      	mov	r0, r8
 800c4ea:	f7ff febf 	bl	800c26c <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800c4ee:	3501      	adds	r5, #1
 800c4f0:	4404      	add	r4, r0
 800c4f2:	f019 0f80 	tst.w	r9, #128	@ 0x80
 800c4f6:	d006      	beq.n	800c506 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x62>
 800c4f8:	4621      	mov	r1, r4
 800c4fa:	4632      	mov	r2, r6
 800c4fc:	4640      	mov	r0, r8
 800c4fe:	f7ff ff09 	bl	800c314 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 800c502:	3501      	adds	r5, #1
 800c504:	4404      	add	r4, r0
 800c506:	4631      	mov	r1, r6
 800c508:	4620      	mov	r0, r4
 800c50a:	f7ff fe67 	bl	800c1dc <add_answer_a(unsigned char*, unsigned long)>
 800c50e:	4b0e      	ldr	r3, [pc, #56]	@ (800c548 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa4>)
 800c510:	2284      	movs	r2, #132	@ 0x84
 800c512:	2101      	movs	r1, #1
 800c514:	709a      	strb	r2, [r3, #2]
 800c516:	7259      	strb	r1, [r3, #9]
 800c518:	2200      	movs	r2, #0
 800c51a:	1821      	adds	r1, r4, r0
 800c51c:	ba6d      	rev16	r5, r5
 800c51e:	70da      	strb	r2, [r3, #3]
 800c520:	1ac9      	subs	r1, r1, r3
 800c522:	f8a3 a000 	strh.w	sl, [r3]
 800c526:	80dd      	strh	r5, [r3, #6]
 800c528:	4638      	mov	r0, r7
 800c52a:	b289      	uxth	r1, r1
 800c52c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c530:	711a      	strb	r2, [r3, #4]
 800c532:	715a      	strb	r2, [r3, #5]
 800c534:	721a      	strb	r2, [r3, #8]
 800c536:	729a      	strb	r2, [r3, #10]
 800c538:	72da      	strb	r2, [r3, #11]
 800c53a:	f7ff bf5f 	b.w	800c3fc <MDNS::SendTo(unsigned long)>
 800c53e:	bf00      	nop
 800c540:	20000984 	andcs	r0, r0, r4, lsl #19
 800c544:	2000078d 	andcs	r0, r0, sp, lsl #15
 800c548:	20000781 	andcs	r0, r0, r1, lsl #15

0800c54c <MDNS::SendAnnouncement(unsigned long)>:
 800c54c:	4b14      	ldr	r3, [pc, #80]	@ (800c5a0 <MDNS::SendAnnouncement(unsigned long)+0x54>)
 800c54e:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 800c552:	b570      	push	{r4, r5, r6, lr}
 800c554:	801a      	strh	r2, [r3, #0]
 800c556:	4b13      	ldr	r3, [pc, #76]	@ (800c5a4 <MDNS::SendAnnouncement(unsigned long)+0x58>)
 800c558:	4e13      	ldr	r6, [pc, #76]	@ (800c5a8 <MDNS::SendAnnouncement(unsigned long)+0x5c>)
 800c55a:	2201      	movs	r2, #1
 800c55c:	601a      	str	r2, [r3, #0]
 800c55e:	460c      	mov	r4, r1
 800c560:	460a      	mov	r2, r1
 800c562:	2100      	movs	r1, #0
 800c564:	4605      	mov	r5, r0
 800c566:	f7ff ff73 	bl	800c450 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 800c56a:	68f3      	ldr	r3, [r6, #12]
 800c56c:	2b08      	cmp	r3, #8
 800c56e:	dc08      	bgt.n	800c582 <MDNS::SendAnnouncement(unsigned long)+0x36>
 800c570:	4b0e      	ldr	r3, [pc, #56]	@ (800c5ac <MDNS::SendAnnouncement(unsigned long)+0x60>)
 800c572:	22f0      	movs	r2, #240	@ 0xf0
 800c574:	601a      	str	r2, [r3, #0]
 800c576:	4631      	mov	r1, r6
 800c578:	4623      	mov	r3, r4
 800c57a:	2200      	movs	r2, #0
 800c57c:	4628      	mov	r0, r5
 800c57e:	f7ff ff91 	bl	800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800c582:	69f3      	ldr	r3, [r6, #28]
 800c584:	2b08      	cmp	r3, #8
 800c586:	dc0a      	bgt.n	800c59e <MDNS::SendAnnouncement(unsigned long)+0x52>
 800c588:	4b08      	ldr	r3, [pc, #32]	@ (800c5ac <MDNS::SendAnnouncement(unsigned long)+0x60>)
 800c58a:	4909      	ldr	r1, [pc, #36]	@ (800c5b0 <MDNS::SendAnnouncement(unsigned long)+0x64>)
 800c58c:	22f0      	movs	r2, #240	@ 0xf0
 800c58e:	601a      	str	r2, [r3, #0]
 800c590:	4628      	mov	r0, r5
 800c592:	4623      	mov	r3, r4
 800c594:	2200      	movs	r2, #0
 800c596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c59a:	f7ff bf83 	b.w	800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800c59e:	bd70      	pop	{r4, r5, r6, pc}
 800c5a0:	20000774 	andcs	r0, r0, r4, ror r7
 800c5a4:	20000988 	andcs	r0, r0, r8, lsl #19
 800c5a8:	2000098c 	andcs	r0, r0, ip, lsl #19
 800c5ac:	20000984 	andcs	r0, r0, r4, lsl #19
 800c5b0:	2000099c 	mulcs	r0, ip, r9

0800c5b4 <network::mdns_announcement()>:
 800c5b4:	4b02      	ldr	r3, [pc, #8]	@ (800c5c0 <network::mdns_announcement()+0xc>)
 800c5b6:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800c5ba:	6818      	ldr	r0, [r3, #0]
 800c5bc:	f7ff bfc6 	b.w	800c54c <MDNS::SendAnnouncement(unsigned long)>
 800c5c0:	20000768 	andcs	r0, r0, r8, ror #14

0800c5c4 <network::mdns_shutdown()>:
 800c5c4:	4b02      	ldr	r3, [pc, #8]	@ (800c5d0 <network::mdns_shutdown()+0xc>)
 800c5c6:	2100      	movs	r1, #0
 800c5c8:	6818      	ldr	r0, [r3, #0]
 800c5ca:	f7ff bfbf 	b.w	800c54c <MDNS::SendAnnouncement(unsigned long)>
 800c5ce:	bf00      	nop
 800c5d0:	20000768 	andcs	r0, r0, r8, ror #14

0800c5d4 <MDNS::MDNS()>:
 800c5d4:	b538      	push	{r3, r4, r5, lr}
 800c5d6:	4b16      	ldr	r3, [pc, #88]	@ (800c630 <MDNS::MDNS()+0x5c>)
 800c5d8:	4d16      	ldr	r5, [pc, #88]	@ (800c634 <MDNS::MDNS()+0x60>)
 800c5da:	6018      	str	r0, [r3, #0]
 800c5dc:	4b16      	ldr	r3, [pc, #88]	@ (800c638 <MDNS::MDNS()+0x64>)
 800c5de:	2209      	movs	r2, #9
 800c5e0:	4604      	mov	r4, r0
 800c5e2:	f241 40e9 	movw	r0, #5353	@ 0x14e9
 800c5e6:	60da      	str	r2, [r3, #12]
 800c5e8:	61da      	str	r2, [r3, #28]
 800c5ea:	f001 fcbf 	bl	800df6c <net::udp_begin(unsigned short)>
 800c5ee:	4b13      	ldr	r3, [pc, #76]	@ (800c63c <MDNS::MDNS()+0x68>)
 800c5f0:	6018      	str	r0, [r3, #0]
 800c5f2:	4813      	ldr	r0, [pc, #76]	@ (800c640 <MDNS::MDNS()+0x6c>)
 800c5f4:	f001 f880 	bl	800d6f8 <net::igmp_join(unsigned long)>
 800c5f8:	4b12      	ldr	r3, [pc, #72]	@ (800c644 <MDNS::MDNS()+0x70>)
 800c5fa:	6819      	ldr	r1, [r3, #0]
 800c5fc:	233f      	movs	r3, #63	@ 0x3f
 800c5fe:	f101 0256 	add.w	r2, r1, #86	@ 0x56
 800c602:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 800c606:	b118      	cbz	r0, 800c610 <MDNS::MDNS()+0x3c>
 800c608:	3b01      	subs	r3, #1
 800c60a:	f802 0b01 	strb.w	r0, [r2], #1
 800c60e:	d1f8      	bne.n	800c602 <MDNS::MDNS()+0x2e>
 800c610:	4413      	add	r3, r2
 800c612:	2000      	movs	r0, #0
 800c614:	429a      	cmp	r2, r3
 800c616:	d108      	bne.n	800c62a <MDNS::MDNS()+0x56>
 800c618:	f881 0095 	strb.w	r0, [r1, #149]	@ 0x95
 800c61c:	4620      	mov	r0, r4
 800c61e:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 800c622:	f7ff ff93 	bl	800c54c <MDNS::SendAnnouncement(unsigned long)>
 800c626:	4620      	mov	r0, r4
 800c628:	bd38      	pop	{r3, r4, r5, pc}
 800c62a:	f802 0b01 	strb.w	r0, [r2], #1
 800c62e:	e7f1      	b.n	800c614 <MDNS::MDNS()+0x40>
 800c630:	20000768 	andcs	r0, r0, r8, ror #14
 800c634:	08017122 	stmdaeq	r1, {r1, r5, r8, ip, sp, lr}
 800c638:	2000098c 	andcs	r0, r0, ip, lsl #19
 800c63c:	2000077c 	andcs	r0, r0, ip, ror r7
 800c640:	fb0000e0 	blx	800c9ca <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x3a>
 800c644:	200009ac 	andcs	r0, r0, ip, lsr #19

0800c648 <MDNS::ServiceRecordDelete(mdns::Services)>:
 800c648:	b510      	push	{r4, lr}
 800c64a:	4c0c      	ldr	r4, [pc, #48]	@ (800c67c <MDNS::ServiceRecordDelete(mdns::Services)+0x34>)
 800c64c:	68e3      	ldr	r3, [r4, #12]
 800c64e:	4299      	cmp	r1, r3
 800c650:	d003      	beq.n	800c65a <MDNS::ServiceRecordDelete(mdns::Services)+0x12>
 800c652:	69e3      	ldr	r3, [r4, #28]
 800c654:	4299      	cmp	r1, r3
 800c656:	d10f      	bne.n	800c678 <MDNS::ServiceRecordDelete(mdns::Services)+0x30>
 800c658:	3410      	adds	r4, #16
 800c65a:	2300      	movs	r3, #0
 800c65c:	461a      	mov	r2, r3
 800c65e:	4621      	mov	r1, r4
 800c660:	f7ff ff20 	bl	800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800c664:	6820      	ldr	r0, [r4, #0]
 800c666:	b108      	cbz	r0, 800c66c <MDNS::ServiceRecordDelete(mdns::Services)+0x24>
 800c668:	f007 fb3e 	bl	8013ce8 <operator delete[](void*)>
 800c66c:	6860      	ldr	r0, [r4, #4]
 800c66e:	b108      	cbz	r0, 800c674 <MDNS::ServiceRecordDelete(mdns::Services)+0x2c>
 800c670:	f007 fb3a 	bl	8013ce8 <operator delete[](void*)>
 800c674:	2001      	movs	r0, #1
 800c676:	bd10      	pop	{r4, pc}
 800c678:	2000      	movs	r0, #0
 800c67a:	e7fc      	b.n	800c676 <MDNS::ServiceRecordDelete(mdns::Services)+0x2e>
 800c67c:	2000098c 	andcs	r0, r0, ip, lsl #19

0800c680 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>:
 800c680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c684:	4d2a      	ldr	r5, [pc, #168]	@ (800c730 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb0>)
 800c686:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 800c68a:	461f      	mov	r7, r3
 800c68c:	68eb      	ldr	r3, [r5, #12]
 800c68e:	2b09      	cmp	r3, #9
 800c690:	4680      	mov	r8, r0
 800c692:	4689      	mov	r9, r1
 800c694:	4692      	mov	sl, r2
 800c696:	d003      	beq.n	800c6a0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x20>
 800c698:	69eb      	ldr	r3, [r5, #28]
 800c69a:	2b09      	cmp	r3, #9
 800c69c:	d145      	bne.n	800c72a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xaa>
 800c69e:	3510      	adds	r5, #16
 800c6a0:	f1b9 0f00 	cmp.w	r9, #0
 800c6a4:	d012      	beq.n	800c6cc <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x4c>
 800c6a6:	4648      	mov	r0, r9
 800c6a8:	f7ff fc35 	bl	800bf16 <strlen>
 800c6ac:	283f      	cmp	r0, #63	@ 0x3f
 800c6ae:	4604      	mov	r4, r0
 800c6b0:	d839      	bhi.n	800c726 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa6>
 800c6b2:	2800      	cmp	r0, #0
 800c6b4:	d035      	beq.n	800c722 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 800c6b6:	1c60      	adds	r0, r4, #1
 800c6b8:	f007 fb1c 	bl	8013cf4 <operator new[](unsigned int)>
 800c6bc:	4622      	mov	r2, r4
 800c6be:	6028      	str	r0, [r5, #0]
 800c6c0:	4649      	mov	r1, r9
 800c6c2:	f7ff fc1f 	bl	800bf04 <memcpy.isra.0>
 800c6c6:	682b      	ldr	r3, [r5, #0]
 800c6c8:	2200      	movs	r2, #0
 800c6ca:	551a      	strb	r2, [r3, r4]
 800c6cc:	f8c5 a00c 	str.w	sl, [r5, #12]
 800c6d0:	b91e      	cbnz	r6, 800c6da <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x5a>
 800c6d2:	4b18      	ldr	r3, [pc, #96]	@ (800c734 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb4>)
 800c6d4:	eb03 130a 	add.w	r3, r3, sl, lsl #4
 800c6d8:	899e      	ldrh	r6, [r3, #12]
 800c6da:	ba76      	rev16	r6, r6
 800c6dc:	b2b6      	uxth	r6, r6
 800c6de:	816e      	strh	r6, [r5, #10]
 800c6e0:	b187      	cbz	r7, 800c704 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x84>
 800c6e2:	4638      	mov	r0, r7
 800c6e4:	f7ff fc17 	bl	800bf16 <strlen>
 800c6e8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800c6ec:	bf28      	it	cs
 800c6ee:	f44f 7080 	movcs.w	r0, #256	@ 0x100
 800c6f2:	4604      	mov	r4, r0
 800c6f4:	f007 fafe 	bl	8013cf4 <operator new[](unsigned int)>
 800c6f8:	4622      	mov	r2, r4
 800c6fa:	6068      	str	r0, [r5, #4]
 800c6fc:	4639      	mov	r1, r7
 800c6fe:	f7ff fc01 	bl	800bf04 <memcpy.isra.0>
 800c702:	812c      	strh	r4, [r5, #8]
 800c704:	4b0c      	ldr	r3, [pc, #48]	@ (800c738 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb8>)
 800c706:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 800c70a:	801a      	strh	r2, [r3, #0]
 800c70c:	4b0b      	ldr	r3, [pc, #44]	@ (800c73c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xbc>)
 800c70e:	22f0      	movs	r2, #240	@ 0xf0
 800c710:	601a      	str	r2, [r3, #0]
 800c712:	4640      	mov	r0, r8
 800c714:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 800c718:	2200      	movs	r2, #0
 800c71a:	4629      	mov	r1, r5
 800c71c:	f7ff fec2 	bl	800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800c720:	2001      	movs	r0, #1
 800c722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c726:	243f      	movs	r4, #63	@ 0x3f
 800c728:	e7c5      	b.n	800c6b6 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x36>
 800c72a:	2000      	movs	r0, #0
 800c72c:	e7f9      	b.n	800c722 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 800c72e:	bf00      	nop
 800c730:	2000098c 	andcs	r0, r0, ip, lsl #19
 800c734:	08017048 	stmdaeq	r1, {r3, r6, ip, sp, lr}
 800c738:	20000774 	andcs	r0, r0, r4, ror r7
 800c73c:	20000984 	andcs	r0, r0, r4, lsl #19

0800c740 <MDNS::HandleQuestions(unsigned long)>:
 800c740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c744:	4b5c      	ldr	r3, [pc, #368]	@ (800c8b8 <MDNS::HandleQuestions(unsigned long)+0x178>)
 800c746:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 800c8d8 <MDNS::HandleQuestions(unsigned long)+0x198>
 800c74a:	881a      	ldrh	r2, [r3, #0]
 800c74c:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 800c750:	429a      	cmp	r2, r3
 800c752:	f04f 0500 	mov.w	r5, #0
 800c756:	4b59      	ldr	r3, [pc, #356]	@ (800c8bc <MDNS::HandleQuestions(unsigned long)+0x17c>)
 800c758:	f8c9 5000 	str.w	r5, [r9]
 800c75c:	f5ad 7d47 	sub.w	sp, sp, #796	@ 0x31c
 800c760:	bf14      	ite	ne
 800c762:	2201      	movne	r2, #1
 800c764:	462a      	moveq	r2, r5
 800c766:	9001      	str	r0, [sp, #4]
 800c768:	4688      	mov	r8, r1
 800c76a:	701a      	strb	r2, [r3, #0]
 800c76c:	d004      	beq.n	800c778 <MDNS::HandleQuestions(unsigned long)+0x38>
 800c76e:	2901      	cmp	r1, #1
 800c770:	bf02      	ittt	eq
 800c772:	4b53      	ldreq	r3, [pc, #332]	@ (800c8c0 <MDNS::HandleQuestions(unsigned long)+0x180>)
 800c774:	681b      	ldreq	r3, [r3, #0]
 800c776:	881d      	ldrheq	r5, [r3, #0]
 800c778:	4c52      	ldr	r4, [pc, #328]	@ (800c8c4 <MDNS::HandleQuestions(unsigned long)+0x184>)
 800c77a:	f04f 0b00 	mov.w	fp, #0
 800c77e:	f04f 0a0c 	mov.w	sl, #12
 800c782:	45c3      	cmp	fp, r8
 800c784:	d10e      	bne.n	800c7a4 <MDNS::HandleQuestions(unsigned long)+0x64>
 800c786:	f8d9 3000 	ldr.w	r3, [r9]
 800c78a:	2b00      	cmp	r3, #0
 800c78c:	f000 808f 	beq.w	800c8ae <MDNS::HandleQuestions(unsigned long)+0x16e>
 800c790:	9801      	ldr	r0, [sp, #4]
 800c792:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 800c796:	4629      	mov	r1, r5
 800c798:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 800c79c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7a0:	f7ff be56 	b.w	800c450 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 800c7a4:	4b48      	ldr	r3, [pc, #288]	@ (800c8c8 <MDNS::HandleQuestions(unsigned long)+0x188>)
 800c7a6:	4e46      	ldr	r6, [pc, #280]	@ (800c8c0 <MDNS::HandleQuestions(unsigned long)+0x180>)
 800c7a8:	681a      	ldr	r2, [r3, #0]
 800c7aa:	6830      	ldr	r0, [r6, #0]
 800c7ac:	ab03      	add	r3, sp, #12
 800c7ae:	4402      	add	r2, r0
 800c7b0:	eb00 010a 	add.w	r1, r0, sl
 800c7b4:	f7ff fddb 	bl	800c36e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
 800c7b8:	2800      	cmp	r0, #0
 800c7ba:	d078      	beq.n	800c8ae <MDNS::HandleQuestions(unsigned long)+0x16e>
 800c7bc:	6833      	ldr	r3, [r6, #0]
 800c7be:	eb03 020a 	add.w	r2, r3, sl
 800c7c2:	1a80      	subs	r0, r0, r2
 800c7c4:	f8ad 010c 	strh.w	r0, [sp, #268]	@ 0x10c
 800c7c8:	fa1a f080 	uxtah	r0, sl, r0
 800c7cc:	181a      	adds	r2, r3, r0
 800c7ce:	f100 0a04 	add.w	sl, r0, #4
 800c7d2:	8852      	ldrh	r2, [r2, #2]
 800c7d4:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 800c7d8:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 800c7dc:	d002      	beq.n	800c7e4 <MDNS::HandleQuestions(unsigned long)+0xa4>
 800c7de:	f10b 0b01 	add.w	fp, fp, #1
 800c7e2:	e7ce      	b.n	800c782 <MDNS::HandleQuestions(unsigned long)+0x42>
 800c7e4:	5a1e      	ldrh	r6, [r3, r0]
 800c7e6:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 800c7ea:	d002      	beq.n	800c7f2 <MDNS::HandleQuestions(unsigned long)+0xb2>
 800c7ec:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 800c7f0:	d10d      	bne.n	800c80e <MDNS::HandleQuestions(unsigned long)+0xce>
 800c7f2:	a844      	add	r0, sp, #272	@ 0x110
 800c7f4:	f7ff fbaa 	bl	800bf4c <create_host_domain(mdns::Domain&)>
 800c7f8:	a903      	add	r1, sp, #12
 800c7fa:	a844      	add	r0, sp, #272	@ 0x110
 800c7fc:	f7ff fc3c 	bl	800c078 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 800c800:	b128      	cbz	r0, 800c80e <MDNS::HandleQuestions(unsigned long)+0xce>
 800c802:	f8d9 3000 	ldr.w	r3, [r9]
 800c806:	f043 0301 	orr.w	r3, r3, #1
 800c80a:	f8c9 3000 	str.w	r3, [r9]
 800c80e:	4f2f      	ldr	r7, [pc, #188]	@ (800c8cc <MDNS::HandleQuestions(unsigned long)+0x18c>)
 800c810:	68fb      	ldr	r3, [r7, #12]
 800c812:	2b08      	cmp	r3, #8
 800c814:	dc46      	bgt.n	800c8a4 <MDNS::HandleQuestions(unsigned long)+0x164>
 800c816:	2300      	movs	r3, #0
 800c818:	f5b6 6f40 	cmp.w	r6, #3072	@ 0xc00
 800c81c:	6023      	str	r3, [r4, #0]
 800c81e:	d002      	beq.n	800c826 <MDNS::HandleQuestions(unsigned long)+0xe6>
 800c820:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 800c824:	d115      	bne.n	800c852 <MDNS::HandleQuestions(unsigned long)+0x112>
 800c826:	482a      	ldr	r0, [pc, #168]	@ (800c8d0 <MDNS::HandleQuestions(unsigned long)+0x190>)
 800c828:	a903      	add	r1, sp, #12
 800c82a:	f7ff fc25 	bl	800c078 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 800c82e:	b108      	cbz	r0, 800c834 <MDNS::HandleQuestions(unsigned long)+0xf4>
 800c830:	2310      	movs	r3, #16
 800c832:	6023      	str	r3, [r4, #0]
 800c834:	2200      	movs	r2, #0
 800c836:	4639      	mov	r1, r7
 800c838:	a885      	add	r0, sp, #532	@ 0x214
 800c83a:	f7ff fba7 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c83e:	a903      	add	r1, sp, #12
 800c840:	a885      	add	r0, sp, #532	@ 0x214
 800c842:	f7ff fc19 	bl	800c078 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	b118      	cbz	r0, 800c852 <MDNS::HandleQuestions(unsigned long)+0x112>
 800c84a:	f043 0320 	orr.w	r3, r3, #32
 800c84e:	b2db      	uxtb	r3, r3
 800c850:	6023      	str	r3, [r4, #0]
 800c852:	4639      	mov	r1, r7
 800c854:	a885      	add	r0, sp, #532	@ 0x214
 800c856:	2201      	movs	r2, #1
 800c858:	f7ff fb98 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c85c:	a903      	add	r1, sp, #12
 800c85e:	a885      	add	r0, sp, #532	@ 0x214
 800c860:	f7ff fc0a 	bl	800c078 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 800c864:	b1d8      	cbz	r0, 800c89e <MDNS::HandleQuestions(unsigned long)+0x15e>
 800c866:	f5b6 5f04 	cmp.w	r6, #8448	@ 0x2100
 800c86a:	d002      	beq.n	800c872 <MDNS::HandleQuestions(unsigned long)+0x132>
 800c86c:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 800c870:	d112      	bne.n	800c898 <MDNS::HandleQuestions(unsigned long)+0x158>
 800c872:	7823      	ldrb	r3, [r4, #0]
 800c874:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 800c878:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c87c:	6023      	str	r3, [r4, #0]
 800c87e:	d103      	bne.n	800c888 <MDNS::HandleQuestions(unsigned long)+0x148>
 800c880:	7823      	ldrb	r3, [r4, #0]
 800c882:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c886:	6023      	str	r3, [r4, #0]
 800c888:	9801      	ldr	r0, [sp, #4]
 800c88a:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 800c88e:	462a      	mov	r2, r5
 800c890:	4639      	mov	r1, r7
 800c892:	f7ff fe07 	bl	800c4a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 800c896:	e005      	b.n	800c8a4 <MDNS::HandleQuestions(unsigned long)+0x164>
 800c898:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
 800c89c:	d0f0      	beq.n	800c880 <MDNS::HandleQuestions(unsigned long)+0x140>
 800c89e:	6823      	ldr	r3, [r4, #0]
 800c8a0:	2b00      	cmp	r3, #0
 800c8a2:	d1f1      	bne.n	800c888 <MDNS::HandleQuestions(unsigned long)+0x148>
 800c8a4:	4b0b      	ldr	r3, [pc, #44]	@ (800c8d4 <MDNS::HandleQuestions(unsigned long)+0x194>)
 800c8a6:	3710      	adds	r7, #16
 800c8a8:	429f      	cmp	r7, r3
 800c8aa:	d1b1      	bne.n	800c810 <MDNS::HandleQuestions(unsigned long)+0xd0>
 800c8ac:	e797      	b.n	800c7de <MDNS::HandleQuestions(unsigned long)+0x9e>
 800c8ae:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 800c8b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8b6:	bf00      	nop
 800c8b8:	20000774 	andcs	r0, r0, r4, ror r7
 800c8bc:	20000780 	andcs	r0, r0, r0, lsl #15
 800c8c0:	2000076c 	andcs	r0, r0, ip, ror #14
 800c8c4:	20000984 	andcs	r0, r0, r4, lsl #19
 800c8c8:	20000770 	andcs	r0, r0, r0, ror r7
 800c8cc:	2000098c 	andcs	r0, r0, ip, lsl #19
 800c8d0:	08016f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, sp, lr}
 800c8d4:	200009ac 	andcs	r0, r0, ip, lsr #19
 800c8d8:	20000988 	andcs	r0, r0, r8, lsl #19

0800c8dc <MDNS::Print()>:
 800c8dc:	b530      	push	{r4, r5, lr}
 800c8de:	4815      	ldr	r0, [pc, #84]	@ (800c934 <MDNS::Print()+0x58>)
 800c8e0:	4c15      	ldr	r4, [pc, #84]	@ (800c938 <MDNS::Print()+0x5c>)
 800c8e2:	b0c3      	sub	sp, #268	@ 0x10c
 800c8e4:	f006 ffc4 	bl	8013870 <printf>
 800c8e8:	a801      	add	r0, sp, #4
 800c8ea:	f7ff fb2f 	bl	800bf4c <create_host_domain(mdns::Domain&)>
 800c8ee:	2101      	movs	r1, #1
 800c8f0:	a801      	add	r0, sp, #4
 800c8f2:	f7ff fb9d 	bl	800c030 <mdns::Domain::Print(bool)>
 800c8f6:	2503      	movs	r5, #3
 800c8f8:	3d01      	subs	r5, #1
 800c8fa:	d101      	bne.n	800c900 <MDNS::Print()+0x24>
 800c8fc:	b043      	add	sp, #268	@ 0x10c
 800c8fe:	bd30      	pop	{r4, r5, pc}
 800c900:	68e3      	ldr	r3, [r4, #12]
 800c902:	2b08      	cmp	r3, #8
 800c904:	dc14      	bgt.n	800c930 <MDNS::Print()+0x54>
 800c906:	2200      	movs	r2, #0
 800c908:	4621      	mov	r1, r4
 800c90a:	a801      	add	r0, sp, #4
 800c90c:	f7ff fb3e 	bl	800bf8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800c910:	2100      	movs	r1, #0
 800c912:	a801      	add	r0, sp, #4
 800c914:	f7ff fb8c 	bl	800c030 <mdns::Domain::Print(bool)>
 800c918:	8961      	ldrh	r1, [r4, #10]
 800c91a:	4a08      	ldr	r2, [pc, #32]	@ (800c93c <MDNS::Print()+0x60>)
 800c91c:	6863      	ldr	r3, [r4, #4]
 800c91e:	4808      	ldr	r0, [pc, #32]	@ (800c940 <MDNS::Print()+0x64>)
 800c920:	ba49      	rev16	r1, r1
 800c922:	2b00      	cmp	r3, #0
 800c924:	bf08      	it	eq
 800c926:	4613      	moveq	r3, r2
 800c928:	b289      	uxth	r1, r1
 800c92a:	8922      	ldrh	r2, [r4, #8]
 800c92c:	f006 ffa0 	bl	8013870 <printf>
 800c930:	3410      	adds	r4, #16
 800c932:	e7e1      	b.n	800c8f8 <MDNS::Print()+0x1c>
 800c934:	0801443e 	stmdaeq	r1, {r1, r2, r3, r4, r5, sl, lr}
 800c938:	2000098c 	andcs	r0, r0, ip, lsl #19
 800c93c:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 800c940:	08014444 	stmdaeq	r1, {r2, r6, sl, lr}

0800c944 <strncpy.isra.0>:
 800c944:	3901      	subs	r1, #1
 800c946:	b112      	cbz	r2, 800c94e <strncpy.isra.0+0xa>
 800c948:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800c94c:	b913      	cbnz	r3, 800c954 <strncpy.isra.0+0x10>
 800c94e:	4402      	add	r2, r0
 800c950:	2300      	movs	r3, #0
 800c952:	e005      	b.n	800c960 <strncpy.isra.0+0x1c>
 800c954:	f800 3b01 	strb.w	r3, [r0], #1
 800c958:	3a01      	subs	r2, #1
 800c95a:	e7f4      	b.n	800c946 <strncpy.isra.0+0x2>
 800c95c:	f800 3b01 	strb.w	r3, [r0], #1
 800c960:	4290      	cmp	r0, r2
 800c962:	d1fb      	bne.n	800c95c <strncpy.isra.0+0x18>
 800c964:	4770      	bx	lr
	...

0800c968 <NetworkStore::SaveDhcp(bool)>:
 800c968:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c96a:	2301      	movs	r3, #1
 800c96c:	2100      	movs	r1, #0
 800c96e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c972:	f88d 0017 	strb.w	r0, [sp, #23]
 800c976:	4805      	ldr	r0, [pc, #20]	@ (800c98c <NetworkStore::SaveDhcp(bool)+0x24>)
 800c978:	9300      	str	r3, [sp, #0]
 800c97a:	6800      	ldr	r0, [r0, #0]
 800c97c:	f10d 0317 	add.w	r3, sp, #23
 800c980:	2214      	movs	r2, #20
 800c982:	f002 ff6f 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800c986:	b007      	add	sp, #28
 800c988:	f85d fb04 	ldr.w	pc, [sp], #4
 800c98c:	20000a78 	andcs	r0, r0, r8, ror sl

0800c990 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 800c990:	b530      	push	{r4, r5, lr}
 800c992:	4605      	mov	r5, r0
 800c994:	06e8      	lsls	r0, r5, #27
 800c996:	b087      	sub	sp, #28
 800c998:	460c      	mov	r4, r1
 800c99a:	d51a      	bpl.n	800c9d2 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x42>
 800c99c:	f002 fe68 	bl	800f670 <net::display_ip()>
 800c9a0:	f7ff fe08 	bl	800c5b4 <network::mdns_announcement()>
 800c9a4:	4b2e      	ldr	r3, [pc, #184]	@ (800ca60 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 800c9a6:	6821      	ldr	r1, [r4, #0]
 800c9a8:	681b      	ldr	r3, [r3, #0]
 800c9aa:	482e      	ldr	r0, [pc, #184]	@ (800ca64 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd4>)
 800c9ac:	0e1a      	lsrs	r2, r3, #24
 800c9ae:	9204      	str	r2, [sp, #16]
 800c9b0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800c9b4:	9203      	str	r2, [sp, #12]
 800c9b6:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800c9ba:	b2db      	uxtb	r3, r3
 800c9bc:	9301      	str	r3, [sp, #4]
 800c9be:	0e0b      	lsrs	r3, r1, #24
 800c9c0:	9202      	str	r2, [sp, #8]
 800c9c2:	9300      	str	r3, [sp, #0]
 800c9c4:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c9c8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c9cc:	b2c9      	uxtb	r1, r1
 800c9ce:	f006 ff4f 	bl	8013870 <printf>
 800c9d2:	0669      	lsls	r1, r5, #25
 800c9d4:	d518      	bpl.n	800ca08 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x78>
 800c9d6:	f002 fe53 	bl	800f680 <net::display_netmask()>
 800c9da:	4b21      	ldr	r3, [pc, #132]	@ (800ca60 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 800c9dc:	6861      	ldr	r1, [r4, #4]
 800c9de:	685b      	ldr	r3, [r3, #4]
 800c9e0:	4821      	ldr	r0, [pc, #132]	@ (800ca68 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd8>)
 800c9e2:	0e1a      	lsrs	r2, r3, #24
 800c9e4:	9204      	str	r2, [sp, #16]
 800c9e6:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800c9ea:	9203      	str	r2, [sp, #12]
 800c9ec:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800c9f0:	b2db      	uxtb	r3, r3
 800c9f2:	9301      	str	r3, [sp, #4]
 800c9f4:	0e0b      	lsrs	r3, r1, #24
 800c9f6:	9202      	str	r2, [sp, #8]
 800c9f8:	9300      	str	r3, [sp, #0]
 800c9fa:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c9fe:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800ca02:	b2c9      	uxtb	r1, r1
 800ca04:	f006 ff34 	bl	8013870 <printf>
 800ca08:	06aa      	lsls	r2, r5, #26
 800ca0a:	d518      	bpl.n	800ca3e <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xae>
 800ca0c:	f002 fe5a 	bl	800f6c4 <net::display_gateway()>
 800ca10:	4b13      	ldr	r3, [pc, #76]	@ (800ca60 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 800ca12:	68a1      	ldr	r1, [r4, #8]
 800ca14:	689b      	ldr	r3, [r3, #8]
 800ca16:	4815      	ldr	r0, [pc, #84]	@ (800ca6c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xdc>)
 800ca18:	0e1a      	lsrs	r2, r3, #24
 800ca1a:	9204      	str	r2, [sp, #16]
 800ca1c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800ca20:	9203      	str	r2, [sp, #12]
 800ca22:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800ca26:	b2db      	uxtb	r3, r3
 800ca28:	9301      	str	r3, [sp, #4]
 800ca2a:	0e0b      	lsrs	r3, r1, #24
 800ca2c:	9202      	str	r2, [sp, #8]
 800ca2e:	9300      	str	r3, [sp, #0]
 800ca30:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800ca34:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800ca38:	b2c9      	uxtb	r1, r1
 800ca3a:	f006 ff19 	bl	8013870 <printf>
 800ca3e:	076b      	lsls	r3, r5, #29
 800ca40:	d50c      	bpl.n	800ca5c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 800ca42:	7823      	ldrb	r3, [r4, #0]
 800ca44:	b953      	cbnz	r3, 800ca5c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 800ca46:	f7ff fdbd 	bl	800c5c4 <network::mdns_shutdown()>
 800ca4a:	f001 f9c9 	bl	800dde0 <net::tcp_shutdown()>
 800ca4e:	f7fb fc23 	bl	8008298 <net::igmp_shutdown()>
 800ca52:	b007      	add	sp, #28
 800ca54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca58:	f000 bc7c 	b.w	800d354 <net::dhcp_release_and_stop()>
 800ca5c:	b007      	add	sp, #28
 800ca5e:	bd30      	pop	{r4, r5, pc}
 800ca60:	200009cc 	andcs	r0, r0, ip, asr #19
 800ca64:	0801444e 	stmdaeq	r1, {r1, r2, r3, r6, sl, lr}
 800ca68:	0801446e 	stmdaeq	r1, {r1, r2, r3, r5, r6, sl, lr}
 800ca6c:	08014493 	stmdaeq	r1, {r0, r1, r4, r7, sl, lr}

0800ca70 <Network::Network()>:
 800ca70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca72:	2300      	movs	r3, #0
 800ca74:	f240 1201 	movw	r2, #257	@ 0x101
 800ca78:	6003      	str	r3, [r0, #0]
 800ca7a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 800ca7e:	4b54      	ldr	r3, [pc, #336]	@ (800cbd0 <Network::Network()+0x160>)
 800ca80:	8082      	strh	r2, [r0, #4]
 800ca82:	4a54      	ldr	r2, [pc, #336]	@ (800cbd4 <Network::Network()+0x164>)
 800ca84:	6018      	str	r0, [r3, #0]
 800ca86:	b09f      	sub	sp, #124	@ 0x7c
 800ca88:	4604      	mov	r4, r0
 800ca8a:	1d83      	adds	r3, r0, #6
 800ca8c:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ca90:	f803 6b01 	strb.w	r6, [r3], #1
 800ca94:	2e00      	cmp	r6, #0
 800ca96:	d1f9      	bne.n	800ca8c <Network::Network()+0x1c>
 800ca98:	f884 6056 	strb.w	r6, [r4, #86]	@ 0x56
 800ca9c:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 800caa0:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
 800caa4:	f803 6b01 	strb.w	r6, [r3], #1
 800caa8:	4293      	cmp	r3, r2
 800caaa:	d1fb      	bne.n	800caa4 <Network::Network()+0x34>
 800caac:	4d4a      	ldr	r5, [pc, #296]	@ (800cbd8 <Network::Network()+0x168>)
 800caae:	f002 fd9f 	bl	800f5f0 <net::display_emac_config()>
 800cab2:	f7fb fc75 	bl	80083a0 <emac_config()>
 800cab6:	f002 fdad 	bl	800f614 <net::display_emac_start()>
 800caba:	4848      	ldr	r0, [pc, #288]	@ (800cbdc <Network::Network()+0x16c>)
 800cabc:	4621      	mov	r1, r4
 800cabe:	f7fb fc93 	bl	80083e8 <emac_start(unsigned char*, net::Link&)>
 800cac2:	7e6b      	ldrb	r3, [r5, #25]
 800cac4:	9302      	str	r3, [sp, #8]
 800cac6:	7e2b      	ldrb	r3, [r5, #24]
 800cac8:	9301      	str	r3, [sp, #4]
 800caca:	7deb      	ldrb	r3, [r5, #23]
 800cacc:	9300      	str	r3, [sp, #0]
 800cace:	7dab      	ldrb	r3, [r5, #22]
 800cad0:	7d6a      	ldrb	r2, [r5, #21]
 800cad2:	7d29      	ldrb	r1, [r5, #20]
 800cad4:	4842      	ldr	r0, [pc, #264]	@ (800cbe0 <Network::Network()+0x170>)
 800cad6:	f006 fecb 	bl	8013870 <printf>
 800cada:	f001 fe2c 	bl	800e736 <net::phy_customized_timing()>
 800cade:	f001 fe29 	bl	800e734 <net::phy_customized_led()>
 800cae2:	f000 ff2f 	bl	800d944 <net::netif_init()>
 800cae6:	483f      	ldr	r0, [pc, #252]	@ (800cbe4 <Network::Network()+0x174>)
 800cae8:	f000 ffcc 	bl	800da84 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
 800caec:	a806      	add	r0, sp, #24
 800caee:	f001 fc17 	bl	800e320 <NetworkParams::NetworkParams()>
 800caf2:	a806      	add	r0, sp, #24
 800caf4:	f001 fc1e 	bl	800e334 <NetworkParams::Load()>
 800caf8:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
 800cafc:	2b00      	cmp	r3, #0
 800cafe:	d15d      	bne.n	800cbbc <Network::Network()+0x14c>
 800cb00:	4a39      	ldr	r2, [pc, #228]	@ (800cbe8 <Network::Network()+0x178>)
 800cb02:	f104 0315 	add.w	r3, r4, #21
 800cb06:	f104 0120 	add.w	r1, r4, #32
 800cb0a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800cb0e:	f803 0f01 	strb.w	r0, [r3, #1]!
 800cb12:	428b      	cmp	r3, r1
 800cb14:	d1f9      	bne.n	800cb0a <Network::Network()+0x9a>
 800cb16:	7deb      	ldrb	r3, [r5, #23]
 800cb18:	091a      	lsrs	r2, r3, #4
 800cb1a:	2b9f      	cmp	r3, #159	@ 0x9f
 800cb1c:	f003 030f 	and.w	r3, r3, #15
 800cb20:	bf94      	ite	ls
 800cb22:	3230      	addls	r2, #48	@ 0x30
 800cb24:	3237      	addhi	r2, #55	@ 0x37
 800cb26:	2b09      	cmp	r3, #9
 800cb28:	bf94      	ite	ls
 800cb2a:	3330      	addls	r3, #48	@ 0x30
 800cb2c:	3337      	addhi	r3, #55	@ 0x37
 800cb2e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800cb32:	7e2b      	ldrb	r3, [r5, #24]
 800cb34:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 800cb38:	2b9f      	cmp	r3, #159	@ 0x9f
 800cb3a:	ea4f 1213 	mov.w	r2, r3, lsr #4
 800cb3e:	f003 030f 	and.w	r3, r3, #15
 800cb42:	bf94      	ite	ls
 800cb44:	3230      	addls	r2, #48	@ 0x30
 800cb46:	3237      	addhi	r2, #55	@ 0x37
 800cb48:	2b09      	cmp	r3, #9
 800cb4a:	bf94      	ite	ls
 800cb4c:	3330      	addls	r3, #48	@ 0x30
 800cb4e:	3337      	addhi	r3, #55	@ 0x37
 800cb50:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800cb54:	7e6b      	ldrb	r3, [r5, #25]
 800cb56:	f884 2023 	strb.w	r2, [r4, #35]	@ 0x23
 800cb5a:	2b9f      	cmp	r3, #159	@ 0x9f
 800cb5c:	ea4f 1213 	mov.w	r2, r3, lsr #4
 800cb60:	f003 030f 	and.w	r3, r3, #15
 800cb64:	bf94      	ite	ls
 800cb66:	3230      	addls	r2, #48	@ 0x30
 800cb68:	3237      	addhi	r2, #55	@ 0x37
 800cb6a:	2b09      	cmp	r3, #9
 800cb6c:	bf94      	ite	ls
 800cb6e:	3330      	addls	r3, #48	@ 0x30
 800cb70:	3337      	addhi	r3, #55	@ 0x37
 800cb72:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 800cb76:	2300      	movs	r3, #0
 800cb78:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 800cb7c:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 800cb80:	6820      	ldr	r0, [r4, #0]
 800cb82:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800cb84:	f104 0316 	add.w	r3, r4, #22
 800cb88:	61eb      	str	r3, [r5, #28]
 800cb8a:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 800cb8e:	f88d 3017 	strb.w	r3, [sp, #23]
 800cb92:	1e43      	subs	r3, r0, #1
 800cb94:	4258      	negs	r0, r3
 800cb96:	4158      	adcs	r0, r3
 800cb98:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 800cb9c:	f002 fd4c 	bl	800f638 <net::display_emac_status(bool)>
 800cba0:	f10d 0317 	add.w	r3, sp, #23
 800cba4:	9300      	str	r3, [sp, #0]
 800cba6:	6820      	ldr	r0, [r4, #0]
 800cba8:	463b      	mov	r3, r7
 800cbaa:	4632      	mov	r2, r6
 800cbac:	4629      	mov	r1, r5
 800cbae:	f7fb fb81 	bl	80082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
 800cbb2:	f001 faef 	bl	800e194 <net::link_status_read()>
 800cbb6:	4620      	mov	r0, r4
 800cbb8:	b01f      	add	sp, #124	@ 0x7c
 800cbba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbbc:	223f      	movs	r2, #63	@ 0x3f
 800cbbe:	f10d 012d 	add.w	r1, sp, #45	@ 0x2d
 800cbc2:	f104 0016 	add.w	r0, r4, #22
 800cbc6:	f7ff febd 	bl	800c944 <strncpy.isra.0>
 800cbca:	f884 6055 	strb.w	r6, [r4, #85]	@ 0x55
 800cbce:	e7d7      	b.n	800cb80 <Network::Network()+0x110>
 800cbd0:	200009ac 	andcs	r0, r0, ip, lsr #19
 800cbd4:	080144b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, lr}
 800cbd8:	200009cc 	andcs	r0, r0, ip, asr #19
 800cbdc:	200009e0 	andcs	r0, r0, r0, ror #19
 800cbe0:	080144b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, lr}
 800cbe4:	0800c991 	stmdaeq	r0, {r0, r4, r7, r8, fp, lr, pc}
 800cbe8:	080144d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, lr}

0800cbec <Network::SetIp(unsigned long)>:
 800cbec:	b510      	push	{r4, lr}
 800cbee:	4b0d      	ldr	r3, [pc, #52]	@ (800cc24 <Network::SetIp(unsigned long)+0x38>)
 800cbf0:	681b      	ldr	r3, [r3, #0]
 800cbf2:	428b      	cmp	r3, r1
 800cbf4:	b086      	sub	sp, #24
 800cbf6:	460c      	mov	r4, r1
 800cbf8:	d012      	beq.n	800cc20 <Network::SetIp(unsigned long)+0x34>
 800cbfa:	4608      	mov	r0, r1
 800cbfc:	f000 fe1a 	bl	800d834 <net::net_set_primary_ip(net::ip_addr)>
 800cc00:	9405      	str	r4, [sp, #20]
 800cc02:	2302      	movs	r3, #2
 800cc04:	2400      	movs	r4, #0
 800cc06:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cc0a:	2204      	movs	r2, #4
 800cc0c:	4806      	ldr	r0, [pc, #24]	@ (800cc28 <Network::SetIp(unsigned long)+0x3c>)
 800cc0e:	9200      	str	r2, [sp, #0]
 800cc10:	6800      	ldr	r0, [r0, #0]
 800cc12:	ab05      	add	r3, sp, #20
 800cc14:	4621      	mov	r1, r4
 800cc16:	f002 fe25 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cc1a:	4620      	mov	r0, r4
 800cc1c:	f7ff fea4 	bl	800c968 <NetworkStore::SaveDhcp(bool)>
 800cc20:	b006      	add	sp, #24
 800cc22:	bd10      	pop	{r4, pc}
 800cc24:	200009cc 	andcs	r0, r0, ip, asr #19
 800cc28:	20000a78 	andcs	r0, r0, r8, ror sl

0800cc2c <Network::SetNetmask(unsigned long)>:
 800cc2c:	b510      	push	{r4, lr}
 800cc2e:	4b0b      	ldr	r3, [pc, #44]	@ (800cc5c <Network::SetNetmask(unsigned long)+0x30>)
 800cc30:	685b      	ldr	r3, [r3, #4]
 800cc32:	428b      	cmp	r3, r1
 800cc34:	b086      	sub	sp, #24
 800cc36:	460c      	mov	r4, r1
 800cc38:	d00e      	beq.n	800cc58 <Network::SetNetmask(unsigned long)+0x2c>
 800cc3a:	4608      	mov	r0, r1
 800cc3c:	f000 feb4 	bl	800d9a8 <net::netif_set_netmask(net::ip_addr)>
 800cc40:	2304      	movs	r3, #4
 800cc42:	2100      	movs	r1, #0
 800cc44:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cc48:	4805      	ldr	r0, [pc, #20]	@ (800cc60 <Network::SetNetmask(unsigned long)+0x34>)
 800cc4a:	9300      	str	r3, [sp, #0]
 800cc4c:	6800      	ldr	r0, [r0, #0]
 800cc4e:	9405      	str	r4, [sp, #20]
 800cc50:	ab05      	add	r3, sp, #20
 800cc52:	2208      	movs	r2, #8
 800cc54:	f002 fe06 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cc58:	b006      	add	sp, #24
 800cc5a:	bd10      	pop	{r4, pc}
 800cc5c:	200009cc 	andcs	r0, r0, ip, asr #19
 800cc60:	20000a78 	andcs	r0, r0, r8, ror sl

0800cc64 <Network::SetGatewayIp(unsigned long)>:
 800cc64:	b510      	push	{r4, lr}
 800cc66:	4b0c      	ldr	r3, [pc, #48]	@ (800cc98 <Network::SetGatewayIp(unsigned long)+0x34>)
 800cc68:	689b      	ldr	r3, [r3, #8]
 800cc6a:	428b      	cmp	r3, r1
 800cc6c:	b086      	sub	sp, #24
 800cc6e:	460c      	mov	r4, r1
 800cc70:	d00f      	beq.n	800cc92 <Network::SetGatewayIp(unsigned long)+0x2e>
 800cc72:	4608      	mov	r0, r1
 800cc74:	f000 feac 	bl	800d9d0 <net::netif_set_gw(net::ip_addr)>
 800cc78:	2308      	movs	r3, #8
 800cc7a:	2100      	movs	r1, #0
 800cc7c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cc80:	4806      	ldr	r0, [pc, #24]	@ (800cc9c <Network::SetGatewayIp(unsigned long)+0x38>)
 800cc82:	9405      	str	r4, [sp, #20]
 800cc84:	2304      	movs	r3, #4
 800cc86:	9300      	str	r3, [sp, #0]
 800cc88:	6800      	ldr	r0, [r0, #0]
 800cc8a:	ab05      	add	r3, sp, #20
 800cc8c:	220c      	movs	r2, #12
 800cc8e:	f002 fde9 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cc92:	b006      	add	sp, #24
 800cc94:	bd10      	pop	{r4, pc}
 800cc96:	bf00      	nop
 800cc98:	200009cc 	andcs	r0, r0, ip, asr #19
 800cc9c:	20000a78 	andcs	r0, r0, r8, ror sl

0800cca0 <Network::SetHostName(char const*)>:
 800cca0:	b530      	push	{r4, r5, lr}
 800cca2:	f100 0416 	add.w	r4, r0, #22
 800cca6:	4605      	mov	r5, r0
 800cca8:	b085      	sub	sp, #20
 800ccaa:	223f      	movs	r2, #63	@ 0x3f
 800ccac:	4620      	mov	r0, r4
 800ccae:	f7ff fe49 	bl	800c944 <strncpy.isra.0>
 800ccb2:	2300      	movs	r3, #0
 800ccb4:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800ccb8:	4623      	mov	r3, r4
 800ccba:	461a      	mov	r2, r3
 800ccbc:	3301      	adds	r3, #1
 800ccbe:	7811      	ldrb	r1, [r2, #0]
 800ccc0:	2900      	cmp	r1, #0
 800ccc2:	d1fa      	bne.n	800ccba <Network::SetHostName(char const*)+0x1a>
 800ccc4:	1b12      	subs	r2, r2, r4
 800ccc6:	2a40      	cmp	r2, #64	@ 0x40
 800ccc8:	bf28      	it	cs
 800ccca:	2240      	movcs	r2, #64	@ 0x40
 800cccc:	2320      	movs	r3, #32
 800ccce:	4808      	ldr	r0, [pc, #32]	@ (800ccf0 <Network::SetHostName(char const*)+0x50>)
 800ccd0:	9102      	str	r1, [sp, #8]
 800ccd2:	9301      	str	r3, [sp, #4]
 800ccd4:	9200      	str	r2, [sp, #0]
 800ccd6:	6800      	ldr	r0, [r0, #0]
 800ccd8:	4623      	mov	r3, r4
 800ccda:	2215      	movs	r2, #21
 800ccdc:	f002 fdc2 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cce0:	f7ff fc68 	bl	800c5b4 <network::mdns_announcement()>
 800cce4:	b005      	add	sp, #20
 800cce6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ccea:	f002 bd0b 	b.w	800f704 <net::display_hostname()>
 800ccee:	bf00      	nop
 800ccf0:	20000a78 	andcs	r0, r0, r8, ror sl

0800ccf4 <Network::SetZeroconf()>:
 800ccf4:	b508      	push	{r3, lr}
 800ccf6:	f000 f869 	bl	800cdcc <net::autoip_start()>
 800ccfa:	2000      	movs	r0, #0
 800ccfc:	f7ff fe34 	bl	800c968 <NetworkStore::SaveDhcp(bool)>
 800cd00:	bd08      	pop	{r3, pc}

0800cd02 <Network::EnableDhcp()>:
 800cd02:	b508      	push	{r3, lr}
 800cd04:	f000 fada 	bl	800d2bc <net::dhcp_start()>
 800cd08:	2001      	movs	r0, #1
 800cd0a:	f7ff fe2d 	bl	800c968 <NetworkStore::SaveDhcp(bool)>
 800cd0e:	bd08      	pop	{r3, pc}

0800cd10 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>:
 800cd10:	b909      	cbnz	r1, 800cd16 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x6>
 800cd12:	4b08      	ldr	r3, [pc, #32]	@ (800cd34 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 800cd14:	6819      	ldr	r1, [r3, #0]
 800cd16:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
 800cd1a:	b90a      	cbnz	r2, 800cd20 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x10>
 800cd1c:	4b05      	ldr	r3, [pc, #20]	@ (800cd34 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 800cd1e:	685a      	ldr	r2, [r3, #4]
 800cd20:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800cd24:	f8c0 20ac 	str.w	r2, [r0, #172]	@ 0xac
 800cd28:	f043 0303 	orr.w	r3, r3, #3
 800cd2c:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 800cd30:	4770      	bx	lr
 800cd32:	bf00      	nop
 800cd34:	200009cc 	andcs	r0, r0, ip, asr #19

0800cd38 <Network::SetQueuedDefaultRoute(unsigned long)>:
 800cd38:	b909      	cbnz	r1, 800cd3e <Network::SetQueuedDefaultRoute(unsigned long)+0x6>
 800cd3a:	4b05      	ldr	r3, [pc, #20]	@ (800cd50 <Network::SetQueuedDefaultRoute(unsigned long)+0x18>)
 800cd3c:	6899      	ldr	r1, [r3, #8]
 800cd3e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800cd42:	f8c0 10b0 	str.w	r1, [r0, #176]	@ 0xb0
 800cd46:	f043 0304 	orr.w	r3, r3, #4
 800cd4a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 800cd4e:	4770      	bx	lr
 800cd50:	200009cc 	andcs	r0, r0, ip, asr #19

0800cd54 <Network::ApplyQueuedConfig()>:
 800cd54:	b538      	push	{r3, r4, r5, lr}
 800cd56:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800cd5a:	4604      	mov	r4, r0
 800cd5c:	b3a3      	cbz	r3, 800cdc8 <Network::ApplyQueuedConfig()+0x74>
 800cd5e:	07d9      	lsls	r1, r3, #31
 800cd60:	d40f      	bmi.n	800cd82 <Network::ApplyQueuedConfig()+0x2e>
 800cd62:	f013 0f06 	tst.w	r3, #6
 800cd66:	d110      	bne.n	800cd8a <Network::ApplyQueuedConfig()+0x36>
 800cd68:	f013 0508 	ands.w	r5, r3, #8
 800cd6c:	d024      	beq.n	800cdb8 <Network::ApplyQueuedConfig()+0x64>
 800cd6e:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
 800cd72:	2b01      	cmp	r3, #1
 800cd74:	d101      	bne.n	800cd7a <Network::ApplyQueuedConfig()+0x26>
 800cd76:	f7ff ffc4 	bl	800cd02 <Network::EnableDhcp()>
 800cd7a:	2302      	movs	r3, #2
 800cd7c:	f884 30b4 	strb.w	r3, [r4, #180]	@ 0xb4
 800cd80:	e015      	b.n	800cdae <Network::ApplyQueuedConfig()+0x5a>
 800cd82:	f8d0 10a8 	ldr.w	r1, [r0, #168]	@ 0xa8
 800cd86:	f7ff ff31 	bl	800cbec <Network::SetIp(unsigned long)>
 800cd8a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800cd8e:	079a      	lsls	r2, r3, #30
 800cd90:	d504      	bpl.n	800cd9c <Network::ApplyQueuedConfig()+0x48>
 800cd92:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
 800cd96:	4620      	mov	r0, r4
 800cd98:	f7ff ff48 	bl	800cc2c <Network::SetNetmask(unsigned long)>
 800cd9c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800cda0:	075b      	lsls	r3, r3, #29
 800cda2:	d504      	bpl.n	800cdae <Network::ApplyQueuedConfig()+0x5a>
 800cda4:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
 800cda8:	4620      	mov	r0, r4
 800cdaa:	f7ff ff5b 	bl	800cc64 <Network::SetGatewayIp(unsigned long)>
 800cdae:	2300      	movs	r3, #0
 800cdb0:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 800cdb4:	2001      	movs	r0, #1
 800cdb6:	bd38      	pop	{r3, r4, r5, pc}
 800cdb8:	f013 0310 	ands.w	r3, r3, #16
 800cdbc:	d004      	beq.n	800cdc8 <Network::ApplyQueuedConfig()+0x74>
 800cdbe:	f7ff ff99 	bl	800ccf4 <Network::SetZeroconf()>
 800cdc2:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 800cdc6:	e7f5      	b.n	800cdb4 <Network::ApplyQueuedConfig()+0x60>
 800cdc8:	4618      	mov	r0, r3
 800cdca:	e7f4      	b.n	800cdb6 <Network::ApplyQueuedConfig()+0x62>

0800cdcc <net::autoip_start()>:
 800cdcc:	b570      	push	{r4, r5, r6, lr}
 800cdce:	4e21      	ldr	r6, [pc, #132]	@ (800ce54 <net::autoip_start()+0x88>)
 800cdd0:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 800cdd2:	b95c      	cbnz	r4, 800cdec <net::autoip_start()+0x20>
 800cdd4:	201c      	movs	r0, #28
 800cdd6:	f006 ff8b 	bl	8013cf0 <operator new(unsigned int)>
 800cdda:	2100      	movs	r1, #0
 800cddc:	4604      	mov	r4, r0
 800cdde:	f100 021c 	add.w	r2, r0, #28
 800cde2:	4603      	mov	r3, r0
 800cde4:	f803 1b01 	strb.w	r1, [r3], #1
 800cde8:	4293      	cmp	r3, r2
 800cdea:	d1fb      	bne.n	800cde4 <net::autoip_start()+0x18>
 800cdec:	6863      	ldr	r3, [r4, #4]
 800cdee:	bb7b      	cbnz	r3, 800ce50 <net::autoip_start()+0x84>
 800cdf0:	f104 050c 	add.w	r5, r4, #12
 800cdf4:	4918      	ldr	r1, [pc, #96]	@ (800ce58 <net::autoip_start()+0x8c>)
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	f001 ffe4 	bl	800edc4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 800cdfc:	8822      	ldrh	r2, [r4, #0]
 800cdfe:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 800ce02:	429a      	cmp	r2, r3
 800ce04:	d01c      	beq.n	800ce40 <net::autoip_start()+0x74>
 800ce06:	f8b6 3017 	ldrh.w	r3, [r6, #23]
 800ce0a:	4a14      	ldr	r2, [pc, #80]	@ (800ce5c <net::autoip_start()+0x90>)
 800ce0c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800ce10:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 800ce12:	7a1b      	ldrb	r3, [r3, #8]
 800ce14:	ba12      	rev	r2, r2
 800ce16:	4413      	add	r3, r2
 800ce18:	b29b      	uxth	r3, r3
 800ce1a:	4a11      	ldr	r2, [pc, #68]	@ (800ce60 <net::autoip_start()+0x94>)
 800ce1c:	f043 4329 	orr.w	r3, r3, #2835349504	@ 0xa9000000
 800ce20:	f443 037e 	orr.w	r3, r3, #16646144	@ 0xfe0000
 800ce24:	4293      	cmp	r3, r2
 800ce26:	4a0f      	ldr	r2, [pc, #60]	@ (800ce64 <net::autoip_start()+0x98>)
 800ce28:	bf98      	it	ls
 800ce2a:	f503 437e 	addls.w	r3, r3, #65024	@ 0xfe00
 800ce2e:	4293      	cmp	r3, r2
 800ce30:	6023      	str	r3, [r4, #0]
 800ce32:	bf84      	itt	hi
 800ce34:	f5a3 437e 	subhi.w	r3, r3, #65024	@ 0xfe00
 800ce38:	6023      	strhi	r3, [r4, #0]
 800ce3a:	6823      	ldr	r3, [r4, #0]
 800ce3c:	ba1b      	rev	r3, r3
 800ce3e:	6023      	str	r3, [r4, #0]
 800ce40:	2301      	movs	r3, #1
 800ce42:	6821      	ldr	r1, [r4, #0]
 800ce44:	6063      	str	r3, [r4, #4]
 800ce46:	4628      	mov	r0, r5
 800ce48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce4c:	f001 be84 	b.w	800eb58 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 800ce50:	bd70      	pop	{r4, r5, r6, pc}
 800ce52:	bf00      	nop
 800ce54:	200009cc 	andcs	r0, r0, ip, asr #19
 800ce58:	0800ce8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, lr, pc}
 800ce5c:	0001fea9 	andeq	pc, r1, r9, lsr #29
 800ce60:	a9fe00ff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7}^
 800ce64:	a9fefeff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}^

0800ce68 <net::autoip_stop()>:
 800ce68:	4b07      	ldr	r3, [pc, #28]	@ (800ce88 <net::autoip_stop()+0x20>)
 800ce6a:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 800ce6c:	b151      	cbz	r1, 800ce84 <net::autoip_stop()+0x1c>
 800ce6e:	2200      	movs	r2, #0
 800ce70:	604a      	str	r2, [r1, #4]
 800ce72:	8819      	ldrh	r1, [r3, #0]
 800ce74:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 800ce78:	4299      	cmp	r1, r3
 800ce7a:	d103      	bne.n	800ce84 <net::autoip_stop()+0x1c>
 800ce7c:	4611      	mov	r1, r2
 800ce7e:	4610      	mov	r0, r2
 800ce80:	f000 bdba 	b.w	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800ce84:	4770      	bx	lr
 800ce86:	bf00      	nop
 800ce88:	200009cc 	andcs	r0, r0, ip, asr #19

0800ce8c <net::autoip_conflict_callback(net::acd::Callback)>:
 800ce8c:	b510      	push	{r4, lr}
 800ce8e:	4c11      	ldr	r4, [pc, #68]	@ (800ced4 <net::autoip_conflict_callback(net::acd::Callback)+0x48>)
 800ce90:	2801      	cmp	r0, #1
 800ce92:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800ce94:	4602      	mov	r2, r0
 800ce96:	d00e      	beq.n	800ceb6 <net::autoip_conflict_callback(net::acd::Callback)+0x2a>
 800ce98:	2802      	cmp	r0, #2
 800ce9a:	d013      	beq.n	800cec4 <net::autoip_conflict_callback(net::acd::Callback)+0x38>
 800ce9c:	b950      	cbnz	r0, 800ceb4 <net::autoip_conflict_callback(net::acd::Callback)+0x28>
 800ce9e:	2102      	movs	r1, #2
 800cea0:	6059      	str	r1, [r3, #4]
 800cea2:	6818      	ldr	r0, [r3, #0]
 800cea4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800cea8:	f000 fda6 	bl	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800ceac:	7ea3      	ldrb	r3, [r4, #26]
 800ceae:	f043 0304 	orr.w	r3, r3, #4
 800ceb2:	76a3      	strb	r3, [r4, #26]
 800ceb4:	bd10      	pop	{r4, pc}
 800ceb6:	7a1a      	ldrb	r2, [r3, #8]
 800ceb8:	3201      	adds	r2, #1
 800ceba:	721a      	strb	r2, [r3, #8]
 800cebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cec0:	f7ff bf84 	b.w	800cdcc <net::autoip_start()>
 800cec4:	2200      	movs	r2, #0
 800cec6:	601a      	str	r2, [r3, #0]
 800cec8:	f7ff ffce 	bl	800ce68 <net::autoip_stop()>
 800cecc:	7ea3      	ldrb	r3, [r4, #26]
 800cece:	f023 0304 	bic.w	r3, r3, #4
 800ced2:	e7ee      	b.n	800ceb2 <net::autoip_conflict_callback(net::acd::Callback)+0x26>
 800ced4:	200009cc 	andcs	r0, r0, ip, asr #19

0800ced8 <net::dhcp_bind()>:
 800ced8:	4833      	ldr	r0, [pc, #204]	@ (800cfa8 <net::dhcp_bind()+0xd0>)
 800ceda:	6a03      	ldr	r3, [r0, #32]
 800cedc:	2200      	movs	r2, #0
 800cede:	b410      	push	{r4}
 800cee0:	82da      	strh	r2, [r3, #22]
 800cee2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800cee4:	1c51      	adds	r1, r2, #1
 800cee6:	d009      	beq.n	800cefc <net::dhcp_bind()+0x24>
 800cee8:	321e      	adds	r2, #30
 800ceea:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 800ceee:	d23f      	bcs.n	800cf70 <net::dhcp_bind()+0x98>
 800cef0:	2a3b      	cmp	r2, #59	@ 0x3b
 800cef2:	d940      	bls.n	800cf76 <net::dhcp_bind()+0x9e>
 800cef4:	213c      	movs	r1, #60	@ 0x3c
 800cef6:	fbb2 f2f1 	udiv	r2, r2, r1
 800cefa:	831a      	strh	r2, [r3, #24]
 800cefc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800cefe:	1c54      	adds	r4, r2, #1
 800cf00:	d00b      	beq.n	800cf1a <net::dhcp_bind()+0x42>
 800cf02:	321e      	adds	r2, #30
 800cf04:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 800cf08:	d237      	bcs.n	800cf7a <net::dhcp_bind()+0xa2>
 800cf0a:	2a3b      	cmp	r2, #59	@ 0x3b
 800cf0c:	d938      	bls.n	800cf80 <net::dhcp_bind()+0xa8>
 800cf0e:	213c      	movs	r1, #60	@ 0x3c
 800cf10:	fbb2 f2f1 	udiv	r2, r2, r1
 800cf14:	b292      	uxth	r2, r2
 800cf16:	81da      	strh	r2, [r3, #14]
 800cf18:	825a      	strh	r2, [r3, #18]
 800cf1a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800cf1c:	1c51      	adds	r1, r2, #1
 800cf1e:	d00b      	beq.n	800cf38 <net::dhcp_bind()+0x60>
 800cf20:	321e      	adds	r2, #30
 800cf22:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 800cf26:	d22d      	bcs.n	800cf84 <net::dhcp_bind()+0xac>
 800cf28:	2a3b      	cmp	r2, #59	@ 0x3b
 800cf2a:	d92e      	bls.n	800cf8a <net::dhcp_bind()+0xb2>
 800cf2c:	213c      	movs	r1, #60	@ 0x3c
 800cf2e:	fbb2 f2f1 	udiv	r2, r2, r1
 800cf32:	b292      	uxth	r2, r2
 800cf34:	821a      	strh	r2, [r3, #16]
 800cf36:	829a      	strh	r2, [r3, #20]
 800cf38:	8a1a      	ldrh	r2, [r3, #16]
 800cf3a:	89d9      	ldrh	r1, [r3, #14]
 800cf3c:	4291      	cmp	r1, r2
 800cf3e:	d302      	bcc.n	800cf46 <net::dhcp_bind()+0x6e>
 800cf40:	b10a      	cbz	r2, 800cf46 <net::dhcp_bind()+0x6e>
 800cf42:	2200      	movs	r2, #0
 800cf44:	81da      	strh	r2, [r3, #14]
 800cf46:	7a9a      	ldrb	r2, [r3, #10]
 800cf48:	07d4      	lsls	r4, r2, #31
 800cf4a:	d520      	bpl.n	800cf8e <net::dhcp_bind()+0xb6>
 800cf4c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800cf4e:	7a1c      	ldrb	r4, [r3, #8]
 800cf50:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800cf52:	2c0a      	cmp	r4, #10
 800cf54:	bf1f      	itttt	ne
 800cf56:	240a      	movne	r4, #10
 800cf58:	811c      	strhne	r4, [r3, #8]
 800cf5a:	2400      	movne	r4, #0
 800cf5c:	819c      	strhne	r4, [r3, #12]
 800cf5e:	7e84      	ldrb	r4, [r0, #26]
 800cf60:	f044 0402 	orr.w	r4, r4, #2
 800cf64:	7684      	strb	r4, [r0, #26]
 800cf66:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cf6a:	6a18      	ldr	r0, [r3, #32]
 800cf6c:	f000 bd44 	b.w	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800cf70:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cf74:	e7c1      	b.n	800cefa <net::dhcp_bind()+0x22>
 800cf76:	2201      	movs	r2, #1
 800cf78:	e7bf      	b.n	800cefa <net::dhcp_bind()+0x22>
 800cf7a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cf7e:	e7c9      	b.n	800cf14 <net::dhcp_bind()+0x3c>
 800cf80:	2201      	movs	r2, #1
 800cf82:	e7c7      	b.n	800cf14 <net::dhcp_bind()+0x3c>
 800cf84:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cf88:	e7d3      	b.n	800cf32 <net::dhcp_bind()+0x5a>
 800cf8a:	2201      	movs	r2, #1
 800cf8c:	e7d1      	b.n	800cf32 <net::dhcp_bind()+0x5a>
 800cf8e:	6a1a      	ldr	r2, [r3, #32]
 800cf90:	0611      	lsls	r1, r2, #24
 800cf92:	d507      	bpl.n	800cfa4 <net::dhcp_bind()+0xcc>
 800cf94:	b2d2      	uxtb	r2, r2
 800cf96:	2abf      	cmp	r2, #191	@ 0xbf
 800cf98:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800cf9c:	bf88      	it	hi
 800cf9e:	f06f 417f 	mvnhi.w	r1, #4278190080	@ 0xff000000
 800cfa2:	e7d4      	b.n	800cf4e <net::dhcp_bind()+0x76>
 800cfa4:	21ff      	movs	r1, #255	@ 0xff
 800cfa6:	e7d2      	b.n	800cf4e <net::dhcp_bind()+0x76>
 800cfa8:	200009cc 	andcs	r0, r0, ip, asr #19

0800cfac <net::message_init()>:
 800cfac:	b508      	push	{r3, lr}
 800cfae:	4b0c      	ldr	r3, [pc, #48]	@ (800cfe0 <net::message_init()+0x34>)
 800cfb0:	f44f 7209 	mov.w	r2, #548	@ 0x224
 800cfb4:	2100      	movs	r1, #0
 800cfb6:	4618      	mov	r0, r3
 800cfb8:	f006 f976 	bl	80132a8 <memset>
 800cfbc:	f240 1201 	movw	r2, #257	@ 0x101
 800cfc0:	8002      	strh	r2, [r0, #0]
 800cfc2:	2206      	movs	r2, #6
 800cfc4:	7082      	strb	r2, [r0, #2]
 800cfc6:	4a07      	ldr	r2, [pc, #28]	@ (800cfe4 <net::message_init()+0x38>)
 800cfc8:	6951      	ldr	r1, [r2, #20]
 800cfca:	8b12      	ldrh	r2, [r2, #24]
 800cfcc:	8402      	strh	r2, [r0, #32]
 800cfce:	4a06      	ldr	r2, [pc, #24]	@ (800cfe8 <net::message_init()+0x3c>)
 800cfd0:	f8c0 20ec 	str.w	r2, [r0, #236]	@ 0xec
 800cfd4:	f240 1235 	movw	r2, #309	@ 0x135
 800cfd8:	f8a0 20f0 	strh.w	r2, [r0, #240]	@ 0xf0
 800cfdc:	61c1      	str	r1, [r0, #28]
 800cfde:	bd08      	pop	{r3, pc}
 800cfe0:	10008000 	andne	r8, r0, r0
 800cfe4:	200009cc 	andcs	r0, r0, ip, asr #19
 800cfe8:	63538263 	cmpvs	r3, #805306374	@ 0x30000006

0800cfec <net::dhcp_discover()>:
 800cfec:	4a27      	ldr	r2, [pc, #156]	@ (800d08c <net::dhcp_discover()+0xa0>)
 800cfee:	b513      	push	{r0, r1, r4, lr}
 800cff0:	6a14      	ldr	r4, [r2, #32]
 800cff2:	7a21      	ldrb	r1, [r4, #8]
 800cff4:	2906      	cmp	r1, #6
 800cff6:	bf1c      	itt	ne
 800cff8:	2106      	movne	r1, #6
 800cffa:	8121      	strhne	r1, [r4, #8]
 800cffc:	f04f 0300 	mov.w	r3, #0
 800d000:	6a10      	ldr	r0, [r2, #32]
 800d002:	6223      	str	r3, [r4, #32]
 800d004:	bf18      	it	ne
 800d006:	81a3      	strhne	r3, [r4, #12]
 800d008:	7a43      	ldrb	r3, [r0, #9]
 800d00a:	b923      	cbnz	r3, 800d016 <net::dhcp_discover()+0x2a>
 800d00c:	6843      	ldr	r3, [r0, #4]
 800d00e:	ba1b      	rev	r3, r3
 800d010:	3301      	adds	r3, #1
 800d012:	ba1b      	rev	r3, r3
 800d014:	6043      	str	r3, [r0, #4]
 800d016:	491e      	ldr	r1, [pc, #120]	@ (800d090 <net::dhcp_discover()+0xa4>)
 800d018:	6843      	ldr	r3, [r0, #4]
 800d01a:	604b      	str	r3, [r1, #4]
 800d01c:	f643 5301 	movw	r3, #15617	@ 0x3d01
 800d020:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 800d024:	f240 1307 	movw	r3, #263	@ 0x107
 800d028:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 800d02c:	8a93      	ldrh	r3, [r2, #20]
 800d02e:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 800d032:	8ad3      	ldrh	r3, [r2, #22]
 800d034:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 800d038:	8b13      	ldrh	r3, [r2, #24]
 800d03a:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 800d03e:	4a15      	ldr	r2, [pc, #84]	@ (800d094 <net::dhcp_discover()+0xa8>)
 800d040:	4b15      	ldr	r3, [pc, #84]	@ (800d098 <net::dhcp_discover()+0xac>)
 800d042:	e9c1 233f 	strd	r2, r3, [r1, #252]	@ 0xfc
 800d046:	23ff      	movs	r3, #255	@ 0xff
 800d048:	f881 3104 	strb.w	r3, [r1, #260]	@ 0x104
 800d04c:	2343      	movs	r3, #67	@ 0x43
 800d04e:	9300      	str	r3, [sp, #0]
 800d050:	6800      	ldr	r0, [r0, #0]
 800d052:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800d056:	f240 1205 	movw	r2, #261	@ 0x105
 800d05a:	f000 ffdf 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800d05e:	7a63      	ldrb	r3, [r4, #9]
 800d060:	2bff      	cmp	r3, #255	@ 0xff
 800d062:	bf1c      	itt	ne
 800d064:	3301      	addne	r3, #1
 800d066:	7263      	strbne	r3, [r4, #9]
 800d068:	7a62      	ldrb	r2, [r4, #9]
 800d06a:	2a05      	cmp	r2, #5
 800d06c:	bf9a      	itte	ls
 800d06e:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 800d072:	4093      	lslls	r3, r2
 800d074:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 800d078:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800d07c:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 800d080:	fbb3 f3f2 	udiv	r3, r3, r2
 800d084:	81a3      	strh	r3, [r4, #12]
 800d086:	b002      	add	sp, #8
 800d088:	bd10      	pop	{r4, pc}
 800d08a:	bf00      	nop
 800d08c:	200009cc 	andcs	r0, r0, ip, asr #19
 800d090:	10008000 	andne	r8, r0, r0
 800d094:	03010637 	movweq	r0, #5687	@ 0x1637
 800d098:	3b3a330f 	blcc	8e99cdc <_sidata+0xe82660>

0800d09c <net::memcpy_ip(unsigned char*, unsigned long)>:
 800d09c:	6001      	str	r1, [r0, #0]
 800d09e:	4770      	bx	lr

0800d0a0 <net::send_request()>:
 800d0a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0a2:	4c31      	ldr	r4, [pc, #196]	@ (800d168 <net::send_request()+0xc8>)
 800d0a4:	4d31      	ldr	r5, [pc, #196]	@ (800d16c <net::send_request()+0xcc>)
 800d0a6:	f643 5303 	movw	r3, #15619	@ 0x3d03
 800d0aa:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 800d0ae:	f240 1307 	movw	r3, #263	@ 0x107
 800d0b2:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 800d0b6:	8aab      	ldrh	r3, [r5, #20]
 800d0b8:	f8a4 30f6 	strh.w	r3, [r4, #246]	@ 0xf6
 800d0bc:	8aeb      	ldrh	r3, [r5, #22]
 800d0be:	f8a4 30f8 	strh.w	r3, [r4, #248]	@ 0xf8
 800d0c2:	8b2b      	ldrh	r3, [r5, #24]
 800d0c4:	6a2e      	ldr	r6, [r5, #32]
 800d0c6:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
 800d0ca:	f240 4332 	movw	r3, #1074	@ 0x432
 800d0ce:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
 800d0d2:	6a31      	ldr	r1, [r6, #32]
 800d0d4:	f104 00fe 	add.w	r0, r4, #254	@ 0xfe
 800d0d8:	f7ff ffe0 	bl	800d09c <net::memcpy_ip(unsigned char*, unsigned long)>
 800d0dc:	f240 4336 	movw	r3, #1078	@ 0x436
 800d0e0:	f8a4 3102 	strh.w	r3, [r4, #258]	@ 0x102
 800d0e4:	69f1      	ldr	r1, [r6, #28]
 800d0e6:	f504 7082 	add.w	r0, r4, #260	@ 0x104
 800d0ea:	f7ff ffd7 	bl	800d09c <net::memcpy_ip(unsigned char*, unsigned long)>
 800d0ee:	230c      	movs	r3, #12
 800d0f0:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
 800d0f4:	69eb      	ldr	r3, [r5, #28]
 800d0f6:	221e      	movs	r2, #30
 800d0f8:	3b01      	subs	r3, #1
 800d0fa:	f204 1509 	addw	r5, r4, #265	@ 0x109
 800d0fe:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800d102:	1c51      	adds	r1, r2, #1
 800d104:	bb58      	cbnz	r0, 800d15e <net::send_request()+0xbe>
 800d106:	f1a2 031e 	sub.w	r3, r2, #30
 800d10a:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 800d10e:	18a3      	adds	r3, r4, r2
 800d110:	440c      	add	r4, r1
 800d112:	2037      	movs	r0, #55	@ 0x37
 800d114:	2106      	movs	r1, #6
 800d116:	f883 00ec 	strb.w	r0, [r3, #236]	@ 0xec
 800d11a:	f884 10ec 	strb.w	r1, [r4, #236]	@ 0xec
 800d11e:	f883 10f0 	strb.w	r1, [r3, #240]	@ 0xf0
 800d122:	210f      	movs	r1, #15
 800d124:	f883 10f1 	strb.w	r1, [r3, #241]	@ 0xf1
 800d128:	213a      	movs	r1, #58	@ 0x3a
 800d12a:	f883 10f2 	strb.w	r1, [r3, #242]	@ 0xf2
 800d12e:	2001      	movs	r0, #1
 800d130:	213b      	movs	r1, #59	@ 0x3b
 800d132:	f883 00ee 	strb.w	r0, [r3, #238]	@ 0xee
 800d136:	f883 10f3 	strb.w	r1, [r3, #243]	@ 0xf3
 800d13a:	2003      	movs	r0, #3
 800d13c:	21ff      	movs	r1, #255	@ 0xff
 800d13e:	f883 10f4 	strb.w	r1, [r3, #244]	@ 0xf4
 800d142:	f883 00ef 	strb.w	r0, [r3, #239]	@ 0xef
 800d146:	2343      	movs	r3, #67	@ 0x43
 800d148:	9300      	str	r3, [sp, #0]
 800d14a:	32f5      	adds	r2, #245	@ 0xf5
 800d14c:	4906      	ldr	r1, [pc, #24]	@ (800d168 <net::send_request()+0xc8>)
 800d14e:	6830      	ldr	r0, [r6, #0]
 800d150:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800d154:	b292      	uxth	r2, r2
 800d156:	f000 ff61 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800d15a:	b002      	add	sp, #8
 800d15c:	bd70      	pop	{r4, r5, r6, pc}
 800d15e:	f805 0f01 	strb.w	r0, [r5, #1]!
 800d162:	460a      	mov	r2, r1
 800d164:	e7cb      	b.n	800d0fe <net::send_request()+0x5e>
 800d166:	bf00      	nop
 800d168:	10008000 	andne	r8, r0, r0
 800d16c:	200009cc 	andcs	r0, r0, ip, asr #19

0800d170 <net::dhcp_select()>:
 800d170:	4b11      	ldr	r3, [pc, #68]	@ (800d1b8 <net::dhcp_select()+0x48>)
 800d172:	b510      	push	{r4, lr}
 800d174:	6a1c      	ldr	r4, [r3, #32]
 800d176:	7a23      	ldrb	r3, [r4, #8]
 800d178:	2b01      	cmp	r3, #1
 800d17a:	bf1f      	itttt	ne
 800d17c:	2301      	movne	r3, #1
 800d17e:	8123      	strhne	r3, [r4, #8]
 800d180:	2300      	movne	r3, #0
 800d182:	81a3      	strhne	r3, [r4, #12]
 800d184:	f7ff ff8c 	bl	800d0a0 <net::send_request()>
 800d188:	7a63      	ldrb	r3, [r4, #9]
 800d18a:	2bff      	cmp	r3, #255	@ 0xff
 800d18c:	bf1c      	itt	ne
 800d18e:	3301      	addne	r3, #1
 800d190:	7263      	strbne	r3, [r4, #9]
 800d192:	7a62      	ldrb	r2, [r4, #9]
 800d194:	2a05      	cmp	r2, #5
 800d196:	bf9d      	ittte	ls
 800d198:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 800d19c:	4093      	lslls	r3, r2
 800d19e:	b29b      	uxthls	r3, r3
 800d1a0:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 800d1a4:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 800d1a8:	b29b      	uxth	r3, r3
 800d1aa:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800d1ae:	fbb3 f3f2 	udiv	r3, r3, r2
 800d1b2:	81a3      	strh	r3, [r4, #12]
 800d1b4:	bd10      	pop	{r4, pc}
 800d1b6:	bf00      	nop
 800d1b8:	200009cc 	andcs	r0, r0, ip, asr #19

0800d1bc <net::dhcp_reboot()>:
 800d1bc:	4b12      	ldr	r3, [pc, #72]	@ (800d208 <net::dhcp_reboot()+0x4c>)
 800d1be:	b510      	push	{r4, lr}
 800d1c0:	6a1c      	ldr	r4, [r3, #32]
 800d1c2:	7a23      	ldrb	r3, [r4, #8]
 800d1c4:	2b03      	cmp	r3, #3
 800d1c6:	bf1f      	itttt	ne
 800d1c8:	2303      	movne	r3, #3
 800d1ca:	8123      	strhne	r3, [r4, #8]
 800d1cc:	2300      	movne	r3, #0
 800d1ce:	81a3      	strhne	r3, [r4, #12]
 800d1d0:	f7ff ff66 	bl	800d0a0 <net::send_request()>
 800d1d4:	7a63      	ldrb	r3, [r4, #9]
 800d1d6:	2bff      	cmp	r3, #255	@ 0xff
 800d1d8:	bf1c      	itt	ne
 800d1da:	3301      	addne	r3, #1
 800d1dc:	7263      	strbne	r3, [r4, #9]
 800d1de:	7a63      	ldrb	r3, [r4, #9]
 800d1e0:	2b09      	cmp	r3, #9
 800d1e2:	bf9f      	itttt	ls
 800d1e4:	ebc3 1243 	rsbls	r2, r3, r3, lsl #5
 800d1e8:	eb03 0382 	addls.w	r3, r3, r2, lsl #2
 800d1ec:	00db      	lslls	r3, r3, #3
 800d1ee:	b29b      	uxthls	r3, r3
 800d1f0:	bf88      	it	hi
 800d1f2:	f242 7310 	movwhi	r3, #10000	@ 0x2710
 800d1f6:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 800d1fa:	b29b      	uxth	r3, r3
 800d1fc:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800d200:	fbb3 f3f2 	udiv	r3, r3, r2
 800d204:	81a3      	strh	r3, [r4, #12]
 800d206:	bd10      	pop	{r4, pc}
 800d208:	200009cc 	andcs	r0, r0, ip, asr #19

0800d20c <net::memcpy_ip(unsigned char const*)>:
 800d20c:	6800      	ldr	r0, [r0, #0]
 800d20e:	4770      	bx	lr

0800d210 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
 800d210:	4b0e      	ldr	r3, [pc, #56]	@ (800d24c <net::dhcp_handle_ack(net::dhcp::Message const*)+0x3c>)
 800d212:	b510      	push	{r4, lr}
 800d214:	6a1c      	ldr	r4, [r3, #32]
 800d216:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d218:	b913      	cbnz	r3, 800d220 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x10>
 800d21a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d21c:	085b      	lsrs	r3, r3, #1
 800d21e:	6323      	str	r3, [r4, #48]	@ 0x30
 800d220:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800d222:	b923      	cbnz	r3, 800d22e <net::dhcp_handle_ack(net::dhcp::Message const*)+0x1e>
 800d224:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d226:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800d22a:	08db      	lsrs	r3, r3, #3
 800d22c:	6363      	str	r3, [r4, #52]	@ 0x34
 800d22e:	3010      	adds	r0, #16
 800d230:	f7ff ffec 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d234:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800d236:	7aa3      	ldrb	r3, [r4, #10]
 800d238:	6220      	str	r0, [r4, #32]
 800d23a:	b11a      	cbz	r2, 800d244 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x34>
 800d23c:	f043 0301 	orr.w	r3, r3, #1
 800d240:	72a3      	strb	r3, [r4, #10]
 800d242:	bd10      	pop	{r4, pc}
 800d244:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800d248:	e7fa      	b.n	800d240 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x30>
 800d24a:	bf00      	nop
 800d24c:	200009cc 	andcs	r0, r0, ip, asr #19

0800d250 <net::dhcp_inform()>:
 800d250:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d252:	2044      	movs	r0, #68	@ 0x44
 800d254:	f000 fe8a 	bl	800df6c <net::udp_begin(unsigned short)>
 800d258:	4c16      	ldr	r4, [pc, #88]	@ (800d2b4 <net::dhcp_inform()+0x64>)
 800d25a:	4d17      	ldr	r5, [pc, #92]	@ (800d2b8 <net::dhcp_inform()+0x68>)
 800d25c:	4606      	mov	r6, r0
 800d25e:	f7ff fea5 	bl	800cfac <net::message_init()>
 800d262:	6829      	ldr	r1, [r5, #0]
 800d264:	4620      	mov	r0, r4
 800d266:	f7ff ff19 	bl	800d09c <net::memcpy_ip(unsigned char*, unsigned long)>
 800d26a:	f1a4 010c 	sub.w	r1, r4, #12
 800d26e:	f643 5308 	movw	r3, #15624	@ 0x3d08
 800d272:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 800d276:	f240 1307 	movw	r3, #263	@ 0x107
 800d27a:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 800d27e:	8aab      	ldrh	r3, [r5, #20]
 800d280:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 800d284:	8aeb      	ldrh	r3, [r5, #22]
 800d286:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 800d28a:	8b2b      	ldrh	r3, [r5, #24]
 800d28c:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 800d290:	23ff      	movs	r3, #255	@ 0xff
 800d292:	f881 30fc 	strb.w	r3, [r1, #252]	@ 0xfc
 800d296:	2343      	movs	r3, #67	@ 0x43
 800d298:	9300      	str	r3, [sp, #0]
 800d29a:	4630      	mov	r0, r6
 800d29c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800d2a0:	22fd      	movs	r2, #253	@ 0xfd
 800d2a2:	f000 febb 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800d2a6:	2044      	movs	r0, #68	@ 0x44
 800d2a8:	b002      	add	sp, #8
 800d2aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2ae:	f000 be73 	b.w	800df98 <net::udp_end(unsigned short)>
 800d2b2:	bf00      	nop
 800d2b4:	1000800c 	andne	r8, r0, ip
 800d2b8:	200009cc 	andcs	r0, r0, ip, asr #19

0800d2bc <net::dhcp_start()>:
 800d2bc:	b570      	push	{r4, r5, r6, lr}
 800d2be:	4d20      	ldr	r5, [pc, #128]	@ (800d340 <net::dhcp_start()+0x84>)
 800d2c0:	6a2c      	ldr	r4, [r5, #32]
 800d2c2:	b96c      	cbnz	r4, 800d2e0 <net::dhcp_start()+0x24>
 800d2c4:	2048      	movs	r0, #72	@ 0x48
 800d2c6:	f006 fd13 	bl	8013cf0 <operator new(unsigned int)>
 800d2ca:	4b1e      	ldr	r3, [pc, #120]	@ (800d344 <net::dhcp_start()+0x88>)
 800d2cc:	6228      	str	r0, [r5, #32]
 800d2ce:	681b      	ldr	r3, [r3, #0]
 800d2d0:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 800d2d4:	2907      	cmp	r1, #7
 800d2d6:	4604      	mov	r4, r0
 800d2d8:	d919      	bls.n	800d30e <net::dhcp_start()+0x52>
 800d2da:	481b      	ldr	r0, [pc, #108]	@ (800d348 <net::dhcp_start()+0x8c>)
 800d2dc:	f003 fdf2 	bl	8010ec4 <console_error>
 800d2e0:	2248      	movs	r2, #72	@ 0x48
 800d2e2:	2100      	movs	r1, #0
 800d2e4:	4620      	mov	r0, r4
 800d2e6:	f005 ffdf 	bl	80132a8 <memset>
 800d2ea:	2044      	movs	r0, #68	@ 0x44
 800d2ec:	f000 fe3e 	bl	800df6c <net::udp_begin(unsigned short)>
 800d2f0:	6020      	str	r0, [r4, #0]
 800d2f2:	f7ff fe5b 	bl	800cfac <net::message_init()>
 800d2f6:	7ead      	ldrb	r5, [r5, #26]
 800d2f8:	f015 0501 	ands.w	r5, r5, #1
 800d2fc:	d11d      	bne.n	800d33a <net::dhcp_start()+0x7e>
 800d2fe:	7a23      	ldrb	r3, [r4, #8]
 800d300:	2b02      	cmp	r3, #2
 800d302:	d002      	beq.n	800d30a <net::dhcp_start()+0x4e>
 800d304:	2302      	movs	r3, #2
 800d306:	8123      	strh	r3, [r4, #8]
 800d308:	81a5      	strh	r5, [r4, #12]
 800d30a:	4628      	mov	r0, r5
 800d30c:	bd70      	pop	{r4, r5, r6, pc}
 800d30e:	f8d3 00b4 	ldr.w	r0, [r3, #180]	@ 0xb4
 800d312:	4a0e      	ldr	r2, [pc, #56]	@ (800d34c <net::dhcp_start()+0x90>)
 800d314:	1c46      	adds	r6, r0, #1
 800d316:	f8c3 60b4 	str.w	r6, [r3, #180]	@ 0xb4
 800d31a:	6812      	ldr	r2, [r2, #0]
 800d31c:	1c4e      	adds	r6, r1, #1
 800d31e:	f8c3 60b0 	str.w	r6, [r3, #176]	@ 0xb0
 800d322:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800d326:	f502 72fa 	add.w	r2, r2, #500	@ 0x1f4
 800d32a:	631a      	str	r2, [r3, #48]	@ 0x30
 800d32c:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800d330:	e9c3 200d 	strd	r2, r0, [r3, #52]	@ 0x34
 800d334:	4a06      	ldr	r2, [pc, #24]	@ (800d350 <net::dhcp_start()+0x94>)
 800d336:	63da      	str	r2, [r3, #60]	@ 0x3c
 800d338:	e7d2      	b.n	800d2e0 <net::dhcp_start()+0x24>
 800d33a:	f7ff fe57 	bl	800cfec <net::dhcp_discover()>
 800d33e:	e7e4      	b.n	800d30a <net::dhcp_start()+0x4e>
 800d340:	200009cc 	andcs	r0, r0, ip, asr #19
 800d344:	20000b7c 	andcs	r0, r0, ip, ror fp
 800d348:	080144e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, lr}
 800d34c:	20004830 	andcs	r4, r0, r0, lsr r8
 800d350:	0800d3f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, ip, lr, pc}

0800d354 <net::dhcp_release_and_stop()>:
 800d354:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d358:	4d25      	ldr	r5, [pc, #148]	@ (800d3f0 <net::dhcp_release_and_stop()+0x9c>)
 800d35a:	6a2c      	ldr	r4, [r5, #32]
 800d35c:	2c00      	cmp	r4, #0
 800d35e:	d044      	beq.n	800d3ea <net::dhcp_release_and_stop()+0x96>
 800d360:	7a23      	ldrb	r3, [r4, #8]
 800d362:	2b00      	cmp	r3, #0
 800d364:	d041      	beq.n	800d3ea <net::dhcp_release_and_stop()+0x96>
 800d366:	2600      	movs	r6, #0
 800d368:	69e7      	ldr	r7, [r4, #28]
 800d36a:	61e6      	str	r6, [r4, #28]
 800d36c:	2218      	movs	r2, #24
 800d36e:	4631      	mov	r1, r6
 800d370:	f104 0020 	add.w	r0, r4, #32
 800d374:	f005 ff98 	bl	80132a8 <memset>
 800d378:	6a2b      	ldr	r3, [r5, #32]
 800d37a:	8266      	strh	r6, [r4, #18]
 800d37c:	6166      	str	r6, [r4, #20]
 800d37e:	8326      	strh	r6, [r4, #24]
 800d380:	b363      	cbz	r3, 800d3dc <net::dhcp_release_and_stop()+0x88>
 800d382:	7a1b      	ldrb	r3, [r3, #8]
 800d384:	2b0a      	cmp	r3, #10
 800d386:	d002      	beq.n	800d38e <net::dhcp_release_and_stop()+0x3a>
 800d388:	3b04      	subs	r3, #4
 800d38a:	2b01      	cmp	r3, #1
 800d38c:	d826      	bhi.n	800d3dc <net::dhcp_release_and_stop()+0x88>
 800d38e:	2600      	movs	r6, #0
 800d390:	8126      	strh	r6, [r4, #8]
 800d392:	81a6      	strh	r6, [r4, #12]
 800d394:	4c17      	ldr	r4, [pc, #92]	@ (800d3f4 <net::dhcp_release_and_stop()+0xa0>)
 800d396:	f8d5 8020 	ldr.w	r8, [r5, #32]
 800d39a:	f243 6307 	movw	r3, #13831	@ 0x3607
 800d39e:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 800d3a2:	2304      	movs	r3, #4
 800d3a4:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 800d3a8:	f8d8 101c 	ldr.w	r1, [r8, #28]
 800d3ac:	f104 00f5 	add.w	r0, r4, #245	@ 0xf5
 800d3b0:	f7ff fe74 	bl	800d09c <net::memcpy_ip(unsigned char*, unsigned long)>
 800d3b4:	23ff      	movs	r3, #255	@ 0xff
 800d3b6:	f884 30f9 	strb.w	r3, [r4, #249]	@ 0xf9
 800d3ba:	2343      	movs	r3, #67	@ 0x43
 800d3bc:	9300      	str	r3, [sp, #0]
 800d3be:	22fa      	movs	r2, #250	@ 0xfa
 800d3c0:	4621      	mov	r1, r4
 800d3c2:	f8d8 0000 	ldr.w	r0, [r8]
 800d3c6:	463b      	mov	r3, r7
 800d3c8:	f000 fe28 	bl	800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800d3cc:	2044      	movs	r0, #68	@ 0x44
 800d3ce:	f000 fde3 	bl	800df98 <net::udp_end(unsigned short)>
 800d3d2:	4632      	mov	r2, r6
 800d3d4:	4631      	mov	r1, r6
 800d3d6:	4630      	mov	r0, r6
 800d3d8:	f000 fb0e 	bl	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800d3dc:	6a28      	ldr	r0, [r5, #32]
 800d3de:	b110      	cbz	r0, 800d3e6 <net::dhcp_release_and_stop()+0x92>
 800d3e0:	2148      	movs	r1, #72	@ 0x48
 800d3e2:	f006 fc83 	bl	8013cec <operator delete(void*, unsigned int)>
 800d3e6:	2300      	movs	r3, #0
 800d3e8:	622b      	str	r3, [r5, #32]
 800d3ea:	b002      	add	sp, #8
 800d3ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d3f0:	200009cc 	andcs	r0, r0, ip, asr #19
 800d3f4:	10008000 	andne	r8, r0, r0

0800d3f8 <net::dhcp_fine_tmr()>:
 800d3f8:	b508      	push	{r3, lr}
 800d3fa:	4b21      	ldr	r3, [pc, #132]	@ (800d480 <net::dhcp_fine_tmr()+0x88>)
 800d3fc:	6a1b      	ldr	r3, [r3, #32]
 800d3fe:	b123      	cbz	r3, 800d40a <net::dhcp_fine_tmr()+0x12>
 800d400:	899a      	ldrh	r2, [r3, #12]
 800d402:	2a01      	cmp	r2, #1
 800d404:	d902      	bls.n	800d40c <net::dhcp_fine_tmr()+0x14>
 800d406:	3a01      	subs	r2, #1
 800d408:	819a      	strh	r2, [r3, #12]
 800d40a:	bd08      	pop	{r3, pc}
 800d40c:	d1fd      	bne.n	800d40a <net::dhcp_fine_tmr()+0x12>
 800d40e:	2200      	movs	r2, #0
 800d410:	819a      	strh	r2, [r3, #12]
 800d412:	7a1a      	ldrb	r2, [r3, #8]
 800d414:	3a01      	subs	r2, #1
 800d416:	2a0b      	cmp	r2, #11
 800d418:	d8f7      	bhi.n	800d40a <net::dhcp_fine_tmr()+0x12>
 800d41a:	a101      	add	r1, pc, #4	@ (adr r1, 800d420 <net::dhcp_fine_tmr()+0x28>)
 800d41c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800d420:	0800d451 	stmdaeq	r0, {r0, r4, r6, sl, ip, lr, pc}
 800d424:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d428:	0800d46b 	stmdaeq	r0, {r0, r1, r3, r5, r6, sl, ip, lr, pc}
 800d42c:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d430:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d434:	0800d479 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, ip, lr, pc}
 800d438:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d43c:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d440:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d444:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d448:	0800d40b 	stmdaeq	r0, {r0, r1, r3, sl, ip, lr, pc}
 800d44c:	0800d479 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, ip, lr, pc}
 800d450:	7a5b      	ldrb	r3, [r3, #9]
 800d452:	2b05      	cmp	r3, #5
 800d454:	d803      	bhi.n	800d45e <net::dhcp_fine_tmr()+0x66>
 800d456:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d45a:	f7ff be89 	b.w	800d170 <net::dhcp_select()>
 800d45e:	f7ff ff79 	bl	800d354 <net::dhcp_release_and_stop()>
 800d462:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d466:	f7ff bf29 	b.w	800d2bc <net::dhcp_start()>
 800d46a:	7a5b      	ldrb	r3, [r3, #9]
 800d46c:	2b01      	cmp	r3, #1
 800d46e:	d803      	bhi.n	800d478 <net::dhcp_fine_tmr()+0x80>
 800d470:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d474:	f7ff bea2 	b.w	800d1bc <net::dhcp_reboot()>
 800d478:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d47c:	f7ff bdb6 	b.w	800cfec <net::dhcp_discover()>
 800d480:	200009cc 	andcs	r0, r0, ip, asr #19

0800d484 <net::dhcp_network_changed_link_up()>:
 800d484:	4b09      	ldr	r3, [pc, #36]	@ (800d4ac <net::dhcp_network_changed_link_up()+0x28>)
 800d486:	6a1b      	ldr	r3, [r3, #32]
 800d488:	b17b      	cbz	r3, 800d4aa <net::dhcp_network_changed_link_up()+0x26>
 800d48a:	7a1a      	ldrb	r2, [r3, #8]
 800d48c:	2a05      	cmp	r2, #5
 800d48e:	d806      	bhi.n	800d49e <net::dhcp_network_changed_link_up()+0x1a>
 800d490:	2a02      	cmp	r2, #2
 800d492:	d806      	bhi.n	800d4a2 <net::dhcp_network_changed_link_up()+0x1e>
 800d494:	b14a      	cbz	r2, 800d4aa <net::dhcp_network_changed_link_up()+0x26>
 800d496:	2200      	movs	r2, #0
 800d498:	725a      	strb	r2, [r3, #9]
 800d49a:	f7ff bda7 	b.w	800cfec <net::dhcp_discover()>
 800d49e:	2a0a      	cmp	r2, #10
 800d4a0:	d1f9      	bne.n	800d496 <net::dhcp_network_changed_link_up()+0x12>
 800d4a2:	2200      	movs	r2, #0
 800d4a4:	725a      	strb	r2, [r3, #9]
 800d4a6:	f7ff be89 	b.w	800d1bc <net::dhcp_reboot()>
 800d4aa:	4770      	bx	lr
 800d4ac:	200009cc 	andcs	r0, r0, ip, asr #19

0800d4b0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
 800d4b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d4b4:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 800d608 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x158>
 800d4b8:	f8d8 5020 	ldr.w	r5, [r8, #32]
 800d4bc:	4606      	mov	r6, r0
 800d4be:	4689      	mov	r9, r1
 800d4c0:	2218      	movs	r2, #24
 800d4c2:	2100      	movs	r1, #0
 800d4c4:	f105 0020 	add.w	r0, r5, #32
 800d4c8:	2700      	movs	r7, #0
 800d4ca:	f106 04f0 	add.w	r4, r6, #240	@ 0xf0
 800d4ce:	f005 feeb 	bl	80132a8 <memset>
 800d4d2:	44a1      	add	r9, r4
 800d4d4:	61ef      	str	r7, [r5, #28]
 800d4d6:	454c      	cmp	r4, r9
 800d4d8:	d318      	bcc.n	800d50c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x5c>
 800d4da:	2f02      	cmp	r7, #2
 800d4dc:	d167      	bne.n	800d5ae <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xfe>
 800d4de:	3610      	adds	r6, #16
 800d4e0:	4630      	mov	r0, r6
 800d4e2:	f7ff fe93 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d4e6:	7a2b      	ldrb	r3, [r5, #8]
 800d4e8:	6228      	str	r0, [r5, #32]
 800d4ea:	2b06      	cmp	r3, #6
 800d4ec:	d170      	bne.n	800d5d0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 800d4ee:	f8d8 4020 	ldr.w	r4, [r8, #32]
 800d4f2:	69e3      	ldr	r3, [r4, #28]
 800d4f4:	2b00      	cmp	r3, #0
 800d4f6:	d06b      	beq.n	800d5d0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 800d4f8:	2300      	movs	r3, #0
 800d4fa:	81a3      	strh	r3, [r4, #12]
 800d4fc:	4630      	mov	r0, r6
 800d4fe:	f7ff fe85 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d502:	6220      	str	r0, [r4, #32]
 800d504:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d508:	f7ff be32 	b.w	800d170 <net::dhcp_select()>
 800d50c:	7823      	ldrb	r3, [r4, #0]
 800d50e:	2b3b      	cmp	r3, #59	@ 0x3b
 800d510:	d822      	bhi.n	800d558 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xa8>
 800d512:	2b32      	cmp	r3, #50	@ 0x32
 800d514:	d808      	bhi.n	800d528 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x78>
 800d516:	2b01      	cmp	r3, #1
 800d518:	d027      	beq.n	800d56a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xba>
 800d51a:	2b03      	cmp	r3, #3
 800d51c:	d02b      	beq.n	800d576 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc6>
 800d51e:	b1fb      	cbz	r3, 800d560 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb0>
 800d520:	7863      	ldrb	r3, [r4, #1]
 800d522:	3302      	adds	r3, #2
 800d524:	441c      	add	r4, r3
 800d526:	e7d6      	b.n	800d4d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 800d528:	3b33      	subs	r3, #51	@ 0x33
 800d52a:	2b08      	cmp	r3, #8
 800d52c:	d8f8      	bhi.n	800d520 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 800d52e:	a201      	add	r2, pc, #4	@ (adr r2, 800d534 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x84>)
 800d530:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d534:	0800d58b 	stmdaeq	r0, {r0, r1, r3, r7, r8, sl, ip, lr, pc}
 800d538:	0800d521 	stmdaeq	r0, {r0, r5, r8, sl, ip, lr, pc}
 800d53c:	0800d565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, ip, lr, pc}
 800d540:	0800d581 	stmdaeq	r0, {r0, r7, r8, sl, ip, lr, pc}
 800d544:	0800d521 	stmdaeq	r0, {r0, r5, r8, sl, ip, lr, pc}
 800d548:	0800d521 	stmdaeq	r0, {r0, r5, r8, sl, ip, lr, pc}
 800d54c:	0800d521 	stmdaeq	r0, {r0, r5, r8, sl, ip, lr, pc}
 800d550:	0800d597 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, sl, ip, lr, pc}
 800d554:	0800d5a3 	stmdaeq	r0, {r0, r1, r5, r7, r8, sl, ip, lr, pc}
 800d558:	2bff      	cmp	r3, #255	@ 0xff
 800d55a:	d1e1      	bne.n	800d520 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 800d55c:	464c      	mov	r4, r9
 800d55e:	e7ba      	b.n	800d4d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 800d560:	3401      	adds	r4, #1
 800d562:	e7b8      	b.n	800d4d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 800d564:	78a7      	ldrb	r7, [r4, #2]
 800d566:	3403      	adds	r4, #3
 800d568:	e7b5      	b.n	800d4d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 800d56a:	1ca0      	adds	r0, r4, #2
 800d56c:	f7ff fe4e 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d570:	6268      	str	r0, [r5, #36]	@ 0x24
 800d572:	3406      	adds	r4, #6
 800d574:	e7af      	b.n	800d4d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 800d576:	1ca0      	adds	r0, r4, #2
 800d578:	f7ff fe48 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d57c:	62a8      	str	r0, [r5, #40]	@ 0x28
 800d57e:	e7f8      	b.n	800d572 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 800d580:	1ca0      	adds	r0, r4, #2
 800d582:	f7ff fe43 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d586:	61e8      	str	r0, [r5, #28]
 800d588:	e7f3      	b.n	800d572 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 800d58a:	1ca0      	adds	r0, r4, #2
 800d58c:	f7ff fe3e 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d590:	ba00      	rev	r0, r0
 800d592:	62e8      	str	r0, [r5, #44]	@ 0x2c
 800d594:	e7ed      	b.n	800d572 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 800d596:	1ca0      	adds	r0, r4, #2
 800d598:	f7ff fe38 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d59c:	ba00      	rev	r0, r0
 800d59e:	6328      	str	r0, [r5, #48]	@ 0x30
 800d5a0:	e7e7      	b.n	800d572 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 800d5a2:	1ca0      	adds	r0, r4, #2
 800d5a4:	f7ff fe32 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800d5a8:	ba00      	rev	r0, r0
 800d5aa:	6368      	str	r0, [r5, #52]	@ 0x34
 800d5ac:	e7e1      	b.n	800d572 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 800d5ae:	2f05      	cmp	r7, #5
 800d5b0:	d110      	bne.n	800d5d4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x124>
 800d5b2:	7a2b      	ldrb	r3, [r5, #8]
 800d5b4:	f003 02fd 	and.w	r2, r3, #253	@ 0xfd
 800d5b8:	2a01      	cmp	r2, #1
 800d5ba:	d106      	bne.n	800d5ca <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x11a>
 800d5bc:	4630      	mov	r0, r6
 800d5be:	f7ff fe27 	bl	800d210 <net::dhcp_handle_ack(net::dhcp::Message const*)>
 800d5c2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d5c6:	f7ff bc87 	b.w	800ced8 <net::dhcp_bind()>
 800d5ca:	3b04      	subs	r3, #4
 800d5cc:	2b01      	cmp	r3, #1
 800d5ce:	d9f5      	bls.n	800d5bc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x10c>
 800d5d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d5d4:	2f06      	cmp	r7, #6
 800d5d6:	d1fb      	bne.n	800d5d0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 800d5d8:	7a2b      	ldrb	r3, [r5, #8]
 800d5da:	1eda      	subs	r2, r3, #3
 800d5dc:	2a02      	cmp	r2, #2
 800d5de:	d901      	bls.n	800d5e4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x134>
 800d5e0:	2b01      	cmp	r3, #1
 800d5e2:	d1f5      	bne.n	800d5d0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 800d5e4:	f8d8 3020 	ldr.w	r3, [r8, #32]
 800d5e8:	7a1a      	ldrb	r2, [r3, #8]
 800d5ea:	2a0c      	cmp	r2, #12
 800d5ec:	bf1f      	itttt	ne
 800d5ee:	220c      	movne	r2, #12
 800d5f0:	811a      	strhne	r2, [r3, #8]
 800d5f2:	2200      	movne	r2, #0
 800d5f4:	819a      	strhne	r2, [r3, #12]
 800d5f6:	2200      	movs	r2, #0
 800d5f8:	4611      	mov	r1, r2
 800d5fa:	4610      	mov	r0, r2
 800d5fc:	f000 f9fc 	bl	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800d600:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d604:	f7ff bcf2 	b.w	800cfec <net::dhcp_discover()>
 800d608:	200009cc 	andcs	r0, r0, ip, asr #19

0800d60c <net::igmp_send_report(unsigned long)>:
 800d60c:	4a19      	ldr	r2, [pc, #100]	@ (800d674 <net::igmp_send_report(unsigned long)+0x68>)
 800d60e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d610:	f3c0 2106 	ubfx	r1, r0, #8, #7
 800d614:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800d618:	4c17      	ldr	r4, [pc, #92]	@ (800d678 <net::igmp_send_report(unsigned long)+0x6c>)
 800d61a:	70d1      	strb	r1, [r2, #3]
 800d61c:	7113      	strb	r3, [r2, #4]
 800d61e:	f3c0 6107 	ubfx	r1, r0, #24, #8
 800d622:	4613      	mov	r3, r2
 800d624:	7151      	strb	r1, [r2, #5]
 800d626:	4605      	mov	r5, r0
 800d628:	4622      	mov	r2, r4
 800d62a:	f103 0c06 	add.w	ip, r3, #6
 800d62e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d632:	f802 1b01 	strb.w	r1, [r2], #1
 800d636:	4563      	cmp	r3, ip
 800d638:	d1f9      	bne.n	800d62e <net::igmp_send_report(unsigned long)+0x22>
 800d63a:	4e10      	ldr	r6, [pc, #64]	@ (800d67c <net::igmp_send_report(unsigned long)+0x70>)
 800d63c:	4810      	ldr	r0, [pc, #64]	@ (800d680 <net::igmp_send_report(unsigned long)+0x74>)
 800d63e:	8833      	ldrh	r3, [r6, #0]
 800d640:	8263      	strh	r3, [r4, #18]
 800d642:	2700      	movs	r7, #0
 800d644:	2118      	movs	r1, #24
 800d646:	f8c4 501e 	str.w	r5, [r4, #30]
 800d64a:	8327      	strh	r7, [r4, #24]
 800d64c:	f000 f90e 	bl	800d86c <net::net_chksum(void const*, unsigned long)>
 800d650:	2120      	movs	r1, #32
 800d652:	8320      	strh	r0, [r4, #24]
 800d654:	480a      	ldr	r0, [pc, #40]	@ (800d680 <net::igmp_send_report(unsigned long)+0x74>)
 800d656:	f8c4 502a 	str.w	r5, [r4, #42]	@ 0x2a
 800d65a:	8527      	strh	r7, [r4, #40]	@ 0x28
 800d65c:	f000 f906 	bl	800d86c <net::net_chksum(void const*, unsigned long)>
 800d660:	212e      	movs	r1, #46	@ 0x2e
 800d662:	4603      	mov	r3, r0
 800d664:	4804      	ldr	r0, [pc, #16]	@ (800d678 <net::igmp_send_report(unsigned long)+0x6c>)
 800d666:	8523      	strh	r3, [r4, #40]	@ 0x28
 800d668:	f001 fa30 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 800d66c:	8833      	ldrh	r3, [r6, #0]
 800d66e:	3301      	adds	r3, #1
 800d670:	8033      	strh	r3, [r6, #0]
 800d672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d674:	10008348 	andne	r8, r0, r8, asr #6
 800d678:	10008380 	andne	r8, r0, r0, lsl #7
 800d67c:	10008224 	andne	r8, r0, r4, lsr #4
 800d680:	1000838e 	andne	r8, r0, lr, lsl #7

0800d684 <net::igmp_timer()>:
 800d684:	b570      	push	{r4, r5, r6, lr}
 800d686:	4c12      	ldr	r4, [pc, #72]	@ (800d6d0 <net::igmp_timer()+0x4c>)
 800d688:	4e12      	ldr	r6, [pc, #72]	@ (800d6d4 <net::igmp_timer()+0x50>)
 800d68a:	f504 7590 	add.w	r5, r4, #288	@ 0x120
 800d68e:	e002      	b.n	800d696 <net::igmp_timer()+0x12>
 800d690:	3408      	adds	r4, #8
 800d692:	42ac      	cmp	r4, r5
 800d694:	d01a      	beq.n	800d6cc <net::igmp_timer()+0x48>
 800d696:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 800d69a:	1e53      	subs	r3, r2, #1
 800d69c:	b29b      	uxth	r3, r3
 800d69e:	2a00      	cmp	r2, #0
 800d6a0:	d0f6      	beq.n	800d690 <net::igmp_timer()+0xc>
 800d6a2:	f824 3c04 	strh.w	r3, [r4, #-4]
 800d6a6:	2b00      	cmp	r3, #0
 800d6a8:	d1f2      	bne.n	800d690 <net::igmp_timer()+0xc>
 800d6aa:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 800d6ae:	2b01      	cmp	r3, #1
 800d6b0:	d1ee      	bne.n	800d690 <net::igmp_timer()+0xc>
 800d6b2:	f854 0c08 	ldr.w	r0, [r4, #-8]
 800d6b6:	42b0      	cmp	r0, r6
 800d6b8:	f04f 0302 	mov.w	r3, #2
 800d6bc:	d0e8      	beq.n	800d690 <net::igmp_timer()+0xc>
 800d6be:	f804 3c02 	strb.w	r3, [r4, #-2]
 800d6c2:	3408      	adds	r4, #8
 800d6c4:	f7ff ffa2 	bl	800d60c <net::igmp_send_report(unsigned long)>
 800d6c8:	42ac      	cmp	r4, r5
 800d6ca:	d1e4      	bne.n	800d696 <net::igmp_timer()+0x12>
 800d6cc:	bd70      	pop	{r4, r5, r6, pc}
 800d6ce:	bf00      	nop
 800d6d0:	10008230 	andne	r8, r0, r0, lsr r2
 800d6d4:	010000e0 	smlatteq	r0, r0, r0, r0

0800d6d8 <net::igmp_set_ip()>:
 800d6d8:	4b04      	ldr	r3, [pc, #16]	@ (800d6ec <net::igmp_set_ip()+0x14>)
 800d6da:	4905      	ldr	r1, [pc, #20]	@ (800d6f0 <net::igmp_set_ip()+0x18>)
 800d6dc:	4a05      	ldr	r2, [pc, #20]	@ (800d6f4 <net::igmp_set_ip()+0x1c>)
 800d6de:	681b      	ldr	r3, [r3, #0]
 800d6e0:	f8c1 301a 	str.w	r3, [r1, #26]
 800d6e4:	f8c2 301a 	str.w	r3, [r2, #26]
 800d6e8:	4770      	bx	lr
 800d6ea:	bf00      	nop
 800d6ec:	200009cc 	andcs	r0, r0, ip, asr #19
 800d6f0:	10008380 	andne	r8, r0, r0, lsl #7
 800d6f4:	10008350 	andne	r8, r0, r0, asr r3

0800d6f8 <net::igmp_join(unsigned long)>:
 800d6f8:	f000 03e0 	and.w	r3, r0, #224	@ 0xe0
 800d6fc:	2be0      	cmp	r3, #224	@ 0xe0
 800d6fe:	d10c      	bne.n	800d71a <net::igmp_join(unsigned long)+0x22>
 800d700:	490b      	ldr	r1, [pc, #44]	@ (800d730 <net::igmp_join(unsigned long)+0x38>)
 800d702:	2300      	movs	r3, #0
 800d704:	e003      	b.n	800d70e <net::igmp_join(unsigned long)+0x16>
 800d706:	b14a      	cbz	r2, 800d71c <net::igmp_join(unsigned long)+0x24>
 800d708:	3301      	adds	r3, #1
 800d70a:	2b24      	cmp	r3, #36	@ 0x24
 800d70c:	d005      	beq.n	800d71a <net::igmp_join(unsigned long)+0x22>
 800d70e:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 800d712:	4282      	cmp	r2, r0
 800d714:	eb01 0cc3 	add.w	ip, r1, r3, lsl #3
 800d718:	d1f5      	bne.n	800d706 <net::igmp_join(unsigned long)+0xe>
 800d71a:	4770      	bx	lr
 800d71c:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
 800d720:	2201      	movs	r2, #1
 800d722:	2302      	movs	r3, #2
 800d724:	f88c 2006 	strb.w	r2, [ip, #6]
 800d728:	f8ac 3004 	strh.w	r3, [ip, #4]
 800d72c:	f7ff bf6e 	b.w	800d60c <net::igmp_send_report(unsigned long)>
 800d730:	10008228 	andne	r8, r0, r8, lsr #4

0800d734 <net::igmp_leave(unsigned long)>:
 800d734:	b570      	push	{r4, r5, r6, lr}
 800d736:	4c0f      	ldr	r4, [pc, #60]	@ (800d774 <net::igmp_leave(unsigned long)+0x40>)
 800d738:	4602      	mov	r2, r0
 800d73a:	f504 7190 	add.w	r1, r4, #288	@ 0x120
 800d73e:	e002      	b.n	800d746 <net::igmp_leave(unsigned long)+0x12>
 800d740:	3408      	adds	r4, #8
 800d742:	428c      	cmp	r4, r1
 800d744:	d014      	beq.n	800d770 <net::igmp_leave(unsigned long)+0x3c>
 800d746:	6823      	ldr	r3, [r4, #0]
 800d748:	4293      	cmp	r3, r2
 800d74a:	d1f9      	bne.n	800d740 <net::igmp_leave(unsigned long)+0xc>
 800d74c:	4e0a      	ldr	r6, [pc, #40]	@ (800d778 <net::igmp_leave(unsigned long)+0x44>)
 800d74e:	480b      	ldr	r0, [pc, #44]	@ (800d77c <net::igmp_leave(unsigned long)+0x48>)
 800d750:	8833      	ldrh	r3, [r6, #0]
 800d752:	8243      	strh	r3, [r0, #18]
 800d754:	2500      	movs	r5, #0
 800d756:	212e      	movs	r1, #46	@ 0x2e
 800d758:	f8c0 202a 	str.w	r2, [r0, #42]	@ 0x2a
 800d75c:	8305      	strh	r5, [r0, #24]
 800d75e:	8505      	strh	r5, [r0, #40]	@ 0x28
 800d760:	f001 f9b4 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 800d764:	8833      	ldrh	r3, [r6, #0]
 800d766:	6025      	str	r5, [r4, #0]
 800d768:	3301      	adds	r3, #1
 800d76a:	8033      	strh	r3, [r6, #0]
 800d76c:	71a5      	strb	r5, [r4, #6]
 800d76e:	80a5      	strh	r5, [r4, #4]
 800d770:	bd70      	pop	{r4, r5, r6, pc}
 800d772:	bf00      	nop
 800d774:	10008228 	andne	r8, r0, r8, lsr #4
 800d778:	10008224 	andne	r8, r0, r4, lsr #4
 800d77c:	10008350 	andne	r8, r0, r0, asr r3

0800d780 <net::igmp_report_groups()>:
 800d780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d782:	4c14      	ldr	r4, [pc, #80]	@ (800d7d4 <net::igmp_report_groups()+0x54>)
 800d784:	4d14      	ldr	r5, [pc, #80]	@ (800d7d8 <net::igmp_report_groups()+0x58>)
 800d786:	f504 7790 	add.w	r7, r4, #288	@ 0x120
 800d78a:	2601      	movs	r6, #1
 800d78c:	e002      	b.n	800d794 <net::igmp_report_groups()+0x14>
 800d78e:	3408      	adds	r4, #8
 800d790:	42bc      	cmp	r4, r7
 800d792:	d01e      	beq.n	800d7d2 <net::igmp_report_groups()+0x52>
 800d794:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 800d798:	2b02      	cmp	r3, #2
 800d79a:	d007      	beq.n	800d7ac <net::igmp_report_groups()+0x2c>
 800d79c:	2b01      	cmp	r3, #1
 800d79e:	d1f6      	bne.n	800d78e <net::igmp_report_groups()+0xe>
 800d7a0:	f834 3c04 	ldrh.w	r3, [r4, #-4]
 800d7a4:	3b01      	subs	r3, #1
 800d7a6:	b29b      	uxth	r3, r3
 800d7a8:	2b04      	cmp	r3, #4
 800d7aa:	d9f0      	bls.n	800d78e <net::igmp_report_groups()+0xe>
 800d7ac:	f006 f8be 	bl	801392c <random>
 800d7b0:	fba5 3200 	umull	r3, r2, r5, r0
 800d7b4:	f022 0303 	bic.w	r3, r2, #3
 800d7b8:	eb03 0392 	add.w	r3, r3, r2, lsr #2
 800d7bc:	1ac0      	subs	r0, r0, r3
 800d7be:	2801      	cmp	r0, #1
 800d7c0:	bf38      	it	cc
 800d7c2:	2001      	movcc	r0, #1
 800d7c4:	f824 0c04 	strh.w	r0, [r4, #-4]
 800d7c8:	f804 6c02 	strb.w	r6, [r4, #-2]
 800d7cc:	3408      	adds	r4, #8
 800d7ce:	42bc      	cmp	r4, r7
 800d7d0:	d1e0      	bne.n	800d794 <net::igmp_report_groups()+0x14>
 800d7d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d7d4:	10008230 	andne	r8, r0, r0, lsr r2
 800d7d8:	cccccccd 	stclgt	12, cr12, [ip], {205}	@ 0xcd

0800d7dc <net::primary_ip_conflict_callback(net::acd::Callback)>:
 800d7dc:	b140      	cbz	r0, 800d7f0 <net::primary_ip_conflict_callback(net::acd::Callback)+0x14>
 800d7de:	2802      	cmp	r0, #2
 800d7e0:	d000      	beq.n	800d7e4 <net::primary_ip_conflict_callback(net::acd::Callback)+0x8>
 800d7e2:	4770      	bx	lr
 800d7e4:	4a10      	ldr	r2, [pc, #64]	@ (800d828 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 800d7e6:	7e93      	ldrb	r3, [r2, #26]
 800d7e8:	f023 0308 	bic.w	r3, r3, #8
 800d7ec:	7693      	strb	r3, [r2, #26]
 800d7ee:	4770      	bx	lr
 800d7f0:	4b0e      	ldr	r3, [pc, #56]	@ (800d82c <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>)
 800d7f2:	b510      	push	{r4, lr}
 800d7f4:	4c0c      	ldr	r4, [pc, #48]	@ (800d828 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 800d7f6:	6818      	ldr	r0, [r3, #0]
 800d7f8:	6923      	ldr	r3, [r4, #16]
 800d7fa:	4298      	cmp	r0, r3
 800d7fc:	d008      	beq.n	800d810 <net::primary_ip_conflict_callback(net::acd::Callback)+0x34>
 800d7fe:	f000 f8c1 	bl	800d984 <net::netif_set_ipaddr(net::ip_addr)>
 800d802:	f7ff fd25 	bl	800d250 <net::dhcp_inform()>
 800d806:	7ea3      	ldrb	r3, [r4, #26]
 800d808:	f043 0308 	orr.w	r3, r3, #8
 800d80c:	76a3      	strb	r3, [r4, #26]
 800d80e:	bd10      	pop	{r4, pc}
 800d810:	4602      	mov	r2, r0
 800d812:	21ff      	movs	r1, #255	@ 0xff
 800d814:	f000 f8f0 	bl	800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 800d818:	f7ff fd1a 	bl	800d250 <net::dhcp_inform()>
 800d81c:	7ea3      	ldrb	r3, [r4, #26]
 800d81e:	f043 0308 	orr.w	r3, r3, #8
 800d822:	76a3      	strb	r3, [r4, #26]
 800d824:	bd10      	pop	{r4, pc}
 800d826:	bf00      	nop
 800d828:	200009cc 	andcs	r0, r0, ip, asr #19
 800d82c:	200009b8 			@ <UNDEFINED> instruction: 0x200009b8

0800d830 <net::net_shutdown()>:
 800d830:	f000 b950 	b.w	800dad4 <net::netif_set_link_down()>

0800d834 <net::net_set_primary_ip(net::ip_addr)>:
 800d834:	b510      	push	{r4, lr}
 800d836:	4604      	mov	r4, r0
 800d838:	f7ff fd8c 	bl	800d354 <net::dhcp_release_and_stop()>
 800d83c:	4908      	ldr	r1, [pc, #32]	@ (800d860 <net::net_set_primary_ip(net::ip_addr)+0x2c>)
 800d83e:	4809      	ldr	r0, [pc, #36]	@ (800d864 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 800d840:	f001 fac0 	bl	800edc4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 800d844:	b934      	cbnz	r4, 800d854 <net::net_set_primary_ip(net::ip_addr)+0x20>
 800d846:	4b08      	ldr	r3, [pc, #32]	@ (800d868 <net::net_set_primary_ip(net::ip_addr)+0x34>)
 800d848:	4806      	ldr	r0, [pc, #24]	@ (800d864 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 800d84a:	6919      	ldr	r1, [r3, #16]
 800d84c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d850:	f001 b982 	b.w	800eb58 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 800d854:	4621      	mov	r1, r4
 800d856:	4803      	ldr	r0, [pc, #12]	@ (800d864 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 800d858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d85c:	f001 b97c 	b.w	800eb58 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 800d860:	0800d7dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, lr, pc}
 800d864:	200009b8 			@ <UNDEFINED> instruction: 0x200009b8
 800d868:	200009cc 	andcs	r0, r0, ip, asr #19

0800d86c <net::net_chksum(void const*, unsigned long)>:
 800d86c:	2901      	cmp	r1, #1
 800d86e:	d91f      	bls.n	800d8b0 <net::net_chksum(void const*, unsigned long)+0x44>
 800d870:	f1a1 0c02 	sub.w	ip, r1, #2
 800d874:	f02c 0c01 	bic.w	ip, ip, #1
 800d878:	f10c 0c02 	add.w	ip, ip, #2
 800d87c:	4484      	add	ip, r0
 800d87e:	2300      	movs	r3, #0
 800d880:	f830 2b02 	ldrh.w	r2, [r0], #2
 800d884:	4560      	cmp	r0, ip
 800d886:	4413      	add	r3, r2
 800d888:	d1fa      	bne.n	800d880 <net::net_chksum(void const*, unsigned long)+0x14>
 800d88a:	07ca      	lsls	r2, r1, #31
 800d88c:	d40a      	bmi.n	800d8a4 <net::net_chksum(void const*, unsigned long)+0x38>
 800d88e:	0c1a      	lsrs	r2, r3, #16
 800d890:	d005      	beq.n	800d89e <net::net_chksum(void const*, unsigned long)+0x32>
 800d892:	fa12 f383 	uxtah	r3, r2, r3
 800d896:	0c1a      	lsrs	r2, r3, #16
 800d898:	bf1c      	itt	ne
 800d89a:	b29b      	uxthne	r3, r3
 800d89c:	3301      	addne	r3, #1
 800d89e:	43db      	mvns	r3, r3
 800d8a0:	b298      	uxth	r0, r3
 800d8a2:	4770      	bx	lr
 800d8a4:	7802      	ldrb	r2, [r0, #0]
 800d8a6:	0212      	lsls	r2, r2, #8
 800d8a8:	ba52      	rev16	r2, r2
 800d8aa:	fa13 f382 	uxtah	r3, r3, r2
 800d8ae:	e7ee      	b.n	800d88e <net::net_chksum(void const*, unsigned long)+0x22>
 800d8b0:	b121      	cbz	r1, 800d8bc <net::net_chksum(void const*, unsigned long)+0x50>
 800d8b2:	7803      	ldrb	r3, [r0, #0]
 800d8b4:	021b      	lsls	r3, r3, #8
 800d8b6:	ba5b      	rev16	r3, r3
 800d8b8:	b29b      	uxth	r3, r3
 800d8ba:	e7f0      	b.n	800d89e <net::net_chksum(void const*, unsigned long)+0x32>
 800d8bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800d8c0:	4770      	bx	lr
 800d8c2:	bf00      	nop

0800d8c4 <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 800d8c4:	4770      	bx	lr
	...

0800d8c8 <net::netif_do_update_globals()>:
 800d8c8:	4908      	ldr	r1, [pc, #32]	@ (800d8ec <net::netif_do_update_globals()+0x24>)
 800d8ca:	e9d1 3200 	ldrd	r3, r2, [r1]
 800d8ce:	b410      	push	{r4}
 800d8d0:	ea63 0402 	orn	r4, r3, r2
 800d8d4:	43d0      	mvns	r0, r2
 800d8d6:	60cc      	str	r4, [r1, #12]
 800d8d8:	4013      	ands	r3, r2
 800d8da:	4905      	ldr	r1, [pc, #20]	@ (800d8f0 <net::netif_do_update_globals()+0x28>)
 800d8dc:	4a05      	ldr	r2, [pc, #20]	@ (800d8f4 <net::netif_do_update_globals()+0x2c>)
 800d8de:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d8e2:	6008      	str	r0, [r1, #0]
 800d8e4:	6013      	str	r3, [r2, #0]
 800d8e6:	f001 bbc3 	b.w	800f070 <net::ip_set_ip()>
 800d8ea:	bf00      	nop
 800d8ec:	200009cc 	andcs	r0, r0, ip, asr #19
 800d8f0:	200009b4 			@ <UNDEFINED> instruction: 0x200009b4
 800d8f4:	200009b0 			@ <UNDEFINED> instruction: 0x200009b0

0800d8f8 <net::netif_issue_reports()>:
 800d8f8:	4b04      	ldr	r3, [pc, #16]	@ (800d90c <net::netif_issue_reports()+0x14>)
 800d8fa:	7e9a      	ldrb	r2, [r3, #26]
 800d8fc:	07d2      	lsls	r2, r2, #31
 800d8fe:	d503      	bpl.n	800d908 <net::netif_issue_reports()+0x10>
 800d900:	681b      	ldr	r3, [r3, #0]
 800d902:	b10b      	cbz	r3, 800d908 <net::netif_issue_reports()+0x10>
 800d904:	f7ff bf3c 	b.w	800d780 <net::igmp_report_groups()>
 800d908:	4770      	bx	lr
 800d90a:	bf00      	nop
 800d90c:	200009cc 	andcs	r0, r0, ip, asr #19

0800d910 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
 800d910:	b570      	push	{r4, r5, r6, lr}
 800d912:	4e0b      	ldr	r6, [pc, #44]	@ (800d940 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x30>)
 800d914:	6833      	ldr	r3, [r6, #0]
 800d916:	4283      	cmp	r3, r0
 800d918:	4604      	mov	r4, r0
 800d91a:	460d      	mov	r5, r1
 800d91c:	d00d      	beq.n	800d93a <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x2a>
 800d91e:	600b      	str	r3, [r1, #0]
 800d920:	f001 fba6 	bl	800f070 <net::ip_set_ip()>
 800d924:	6828      	ldr	r0, [r5, #0]
 800d926:	4621      	mov	r1, r4
 800d928:	f001 fa52 	bl	800edd0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
 800d92c:	6034      	str	r4, [r6, #0]
 800d92e:	f7ff ffcb 	bl	800d8c8 <net::netif_do_update_globals()>
 800d932:	f7ff ffe1 	bl	800d8f8 <net::netif_issue_reports()>
 800d936:	2001      	movs	r0, #1
 800d938:	bd70      	pop	{r4, r5, r6, pc}
 800d93a:	2000      	movs	r0, #0
 800d93c:	e7fc      	b.n	800d938 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x28>
 800d93e:	bf00      	nop
 800d940:	200009cc 	andcs	r0, r0, ip, asr #19

0800d944 <net::netif_init()>:
 800d944:	4b0c      	ldr	r3, [pc, #48]	@ (800d978 <net::netif_init()+0x34>)
 800d946:	7e1a      	ldrb	r2, [r3, #24]
 800d948:	7dd8      	ldrb	r0, [r3, #23]
 800d94a:	0412      	lsls	r2, r2, #16
 800d94c:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 800d950:	7e58      	ldrb	r0, [r3, #25]
 800d952:	3202      	adds	r2, #2
 800d954:	2100      	movs	r1, #0
 800d956:	eb02 6200 	add.w	r2, r2, r0, lsl #24
 800d95a:	e9c3 1100 	strd	r1, r1, [r3]
 800d95e:	611a      	str	r2, [r3, #16]
 800d960:	e9c3 1102 	strd	r1, r1, [r3, #8]
 800d964:	e9c3 1108 	strd	r1, r1, [r3, #32]
 800d968:	7699      	strb	r1, [r3, #26]
 800d96a:	6299      	str	r1, [r3, #40]	@ 0x28
 800d96c:	4b03      	ldr	r3, [pc, #12]	@ (800d97c <net::netif_init()+0x38>)
 800d96e:	4a04      	ldr	r2, [pc, #16]	@ (800d980 <net::netif_init()+0x3c>)
 800d970:	601a      	str	r2, [r3, #0]
 800d972:	f7fa bd69 	b.w	8008448 <net::arp_init()>
 800d976:	bf00      	nop
 800d978:	200009cc 	andcs	r0, r0, ip, asr #19
 800d97c:	200009c8 	andcs	r0, r0, r8, asr #19
 800d980:	0800d8c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, ip, lr, pc}

0800d984 <net::netif_set_ipaddr(net::ip_addr)>:
 800d984:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d986:	4669      	mov	r1, sp
 800d988:	f7ff ffc2 	bl	800d910 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 800d98c:	b130      	cbz	r0, 800d99c <net::netif_set_ipaddr(net::ip_addr)+0x18>
 800d98e:	9b00      	ldr	r3, [sp, #0]
 800d990:	9301      	str	r3, [sp, #4]
 800d992:	4b04      	ldr	r3, [pc, #16]	@ (800d9a4 <net::netif_set_ipaddr(net::ip_addr)+0x20>)
 800d994:	a901      	add	r1, sp, #4
 800d996:	681b      	ldr	r3, [r3, #0]
 800d998:	2010      	movs	r0, #16
 800d99a:	4798      	blx	r3
 800d99c:	b005      	add	sp, #20
 800d99e:	f85d fb04 	ldr.w	pc, [sp], #4
 800d9a2:	bf00      	nop
 800d9a4:	200009c8 	andcs	r0, r0, r8, asr #19

0800d9a8 <net::netif_set_netmask(net::ip_addr)>:
 800d9a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d9aa:	4b07      	ldr	r3, [pc, #28]	@ (800d9c8 <net::netif_set_netmask(net::ip_addr)+0x20>)
 800d9ac:	685c      	ldr	r4, [r3, #4]
 800d9ae:	42a0      	cmp	r0, r4
 800d9b0:	d008      	beq.n	800d9c4 <net::netif_set_netmask(net::ip_addr)+0x1c>
 800d9b2:	6058      	str	r0, [r3, #4]
 800d9b4:	f7ff ff88 	bl	800d8c8 <net::netif_do_update_globals()>
 800d9b8:	4b04      	ldr	r3, [pc, #16]	@ (800d9cc <net::netif_set_netmask(net::ip_addr)+0x24>)
 800d9ba:	9402      	str	r4, [sp, #8]
 800d9bc:	681b      	ldr	r3, [r3, #0]
 800d9be:	a901      	add	r1, sp, #4
 800d9c0:	2040      	movs	r0, #64	@ 0x40
 800d9c2:	4798      	blx	r3
 800d9c4:	b004      	add	sp, #16
 800d9c6:	bd10      	pop	{r4, pc}
 800d9c8:	200009cc 	andcs	r0, r0, ip, asr #19
 800d9cc:	200009c8 	andcs	r0, r0, r8, asr #19

0800d9d0 <net::netif_set_gw(net::ip_addr)>:
 800d9d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d9d2:	4a07      	ldr	r2, [pc, #28]	@ (800d9f0 <net::netif_set_gw(net::ip_addr)+0x20>)
 800d9d4:	6893      	ldr	r3, [r2, #8]
 800d9d6:	4298      	cmp	r0, r3
 800d9d8:	d006      	beq.n	800d9e8 <net::netif_set_gw(net::ip_addr)+0x18>
 800d9da:	9303      	str	r3, [sp, #12]
 800d9dc:	4b05      	ldr	r3, [pc, #20]	@ (800d9f4 <net::netif_set_gw(net::ip_addr)+0x24>)
 800d9de:	6090      	str	r0, [r2, #8]
 800d9e0:	681b      	ldr	r3, [r3, #0]
 800d9e2:	a901      	add	r1, sp, #4
 800d9e4:	2020      	movs	r0, #32
 800d9e6:	4798      	blx	r3
 800d9e8:	b005      	add	sp, #20
 800d9ea:	f85d fb04 	ldr.w	pc, [sp], #4
 800d9ee:	bf00      	nop
 800d9f0:	200009cc 	andcs	r0, r0, ip, asr #19
 800d9f4:	200009c8 	andcs	r0, r0, r8, asr #19

0800d9f8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
 800d9f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d9fc:	4688      	mov	r8, r1
 800d9fe:	b085      	sub	sp, #20
 800da00:	4617      	mov	r7, r2
 800da02:	4605      	mov	r5, r0
 800da04:	b348      	cbz	r0, 800da5a <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x62>
 800da06:	2400      	movs	r4, #0
 800da08:	4e1c      	ldr	r6, [pc, #112]	@ (800da7c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>)
 800da0a:	f8d6 9004 	ldr.w	r9, [r6, #4]
 800da0e:	45c8      	cmp	r8, r9
 800da10:	d007      	beq.n	800da22 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x2a>
 800da12:	f8c6 8004 	str.w	r8, [r6, #4]
 800da16:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
 800da1a:	f7ff ff55 	bl	800d8c8 <net::netif_do_update_globals()>
 800da1e:	f8cd 9008 	str.w	r9, [sp, #8]
 800da22:	68b3      	ldr	r3, [r6, #8]
 800da24:	429f      	cmp	r7, r3
 800da26:	bf1e      	ittt	ne
 800da28:	60b7      	strne	r7, [r6, #8]
 800da2a:	f044 0420 	orrne.w	r4, r4, #32
 800da2e:	9303      	strne	r3, [sp, #12]
 800da30:	b30d      	cbz	r5, 800da76 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x7e>
 800da32:	4669      	mov	r1, sp
 800da34:	4628      	mov	r0, r5
 800da36:	f7ff ff6b 	bl	800d910 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 800da3a:	b1b8      	cbz	r0, 800da6c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x74>
 800da3c:	9b00      	ldr	r3, [sp, #0]
 800da3e:	9301      	str	r3, [sp, #4]
 800da40:	f044 0410 	orr.w	r4, r4, #16
 800da44:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 800da48:	b995      	cbnz	r5, 800da70 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x78>
 800da4a:	4b0d      	ldr	r3, [pc, #52]	@ (800da80 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x88>)
 800da4c:	a901      	add	r1, sp, #4
 800da4e:	681b      	ldr	r3, [r3, #0]
 800da50:	4620      	mov	r0, r4
 800da52:	4798      	blx	r3
 800da54:	b005      	add	sp, #20
 800da56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da5a:	4669      	mov	r1, sp
 800da5c:	f7ff ff58 	bl	800d910 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 800da60:	2800      	cmp	r0, #0
 800da62:	d0d0      	beq.n	800da06 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe>
 800da64:	9b00      	ldr	r3, [sp, #0]
 800da66:	9301      	str	r3, [sp, #4]
 800da68:	2410      	movs	r4, #16
 800da6a:	e7cd      	b.n	800da08 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x10>
 800da6c:	2c00      	cmp	r4, #0
 800da6e:	d1e9      	bne.n	800da44 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 800da70:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 800da74:	e7e9      	b.n	800da4a <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x52>
 800da76:	2c00      	cmp	r4, #0
 800da78:	d1e4      	bne.n	800da44 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 800da7a:	e7eb      	b.n	800da54 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
 800da7c:	200009cc 	andcs	r0, r0, ip, asr #19
 800da80:	200009c8 	andcs	r0, r0, r8, asr #19

0800da84 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
 800da84:	4b01      	ldr	r3, [pc, #4]	@ (800da8c <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0x8>)
 800da86:	6018      	str	r0, [r3, #0]
 800da88:	4770      	bx	lr
 800da8a:	bf00      	nop
 800da8c:	200009c8 	andcs	r0, r0, r8, asr #19

0800da90 <net::netif_set_link_up()>:
 800da90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800da92:	4c0e      	ldr	r4, [pc, #56]	@ (800dacc <net::netif_set_link_up()+0x3c>)
 800da94:	7ea3      	ldrb	r3, [r4, #26]
 800da96:	07da      	lsls	r2, r3, #31
 800da98:	d416      	bmi.n	800dac8 <net::netif_set_link_up()+0x38>
 800da9a:	f043 0301 	orr.w	r3, r3, #1
 800da9e:	76a3      	strb	r3, [r4, #26]
 800daa0:	f7ff fcf0 	bl	800d484 <net::dhcp_network_changed_link_up()>
 800daa4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800daa6:	b128      	cbz	r0, 800dab4 <net::netif_set_link_up()+0x24>
 800daa8:	6843      	ldr	r3, [r0, #4]
 800daaa:	b11b      	cbz	r3, 800dab4 <net::netif_set_link_up()+0x24>
 800daac:	f850 1b0c 	ldr.w	r1, [r0], #12
 800dab0:	f001 f852 	bl	800eb58 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 800dab4:	f7ff ff20 	bl	800d8f8 <net::netif_issue_reports()>
 800dab8:	2301      	movs	r3, #1
 800daba:	f88d 3004 	strb.w	r3, [sp, #4]
 800dabe:	4b04      	ldr	r3, [pc, #16]	@ (800dad0 <net::netif_set_link_up()+0x40>)
 800dac0:	a901      	add	r1, sp, #4
 800dac2:	681b      	ldr	r3, [r3, #0]
 800dac4:	2004      	movs	r0, #4
 800dac6:	4798      	blx	r3
 800dac8:	b004      	add	sp, #16
 800daca:	bd10      	pop	{r4, pc}
 800dacc:	200009cc 	andcs	r0, r0, ip, asr #19
 800dad0:	200009c8 	andcs	r0, r0, r8, asr #19

0800dad4 <net::netif_set_link_down()>:
 800dad4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dad6:	4a0d      	ldr	r2, [pc, #52]	@ (800db0c <net::netif_set_link_down()+0x38>)
 800dad8:	7e93      	ldrb	r3, [r2, #26]
 800dada:	07d9      	lsls	r1, r3, #31
 800dadc:	d512      	bpl.n	800db04 <net::netif_set_link_down()+0x30>
 800dade:	f023 0301 	bic.w	r3, r3, #1
 800dae2:	7693      	strb	r3, [r2, #26]
 800dae4:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800dae6:	b11b      	cbz	r3, 800daf0 <net::netif_set_link_down()+0x1c>
 800dae8:	685b      	ldr	r3, [r3, #4]
 800daea:	b10b      	cbz	r3, 800daf0 <net::netif_set_link_down()+0x1c>
 800daec:	f7ff f9bc 	bl	800ce68 <net::autoip_stop()>
 800daf0:	f001 f90c 	bl	800ed0c <net::acd_network_changed_link_down()>
 800daf4:	2300      	movs	r3, #0
 800daf6:	f88d 3004 	strb.w	r3, [sp, #4]
 800dafa:	4b05      	ldr	r3, [pc, #20]	@ (800db10 <net::netif_set_link_down()+0x3c>)
 800dafc:	a901      	add	r1, sp, #4
 800dafe:	681b      	ldr	r3, [r3, #0]
 800db00:	2004      	movs	r0, #4
 800db02:	4798      	blx	r3
 800db04:	b005      	add	sp, #20
 800db06:	f85d fb04 	ldr.w	pc, [sp], #4
 800db0a:	bf00      	nop
 800db0c:	200009cc 	andcs	r0, r0, ip, asr #19
 800db10:	200009c8 	andcs	r0, r0, r8, asr #19

0800db14 <net::_bswap32(t_tcp*)>:
 800db14:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
 800db18:	079a      	lsls	r2, r3, #30
 800db1a:	bf0b      	itete	eq
 800db1c:	f8d0 302a 	ldreq.w	r3, [r0, #42]	@ 0x2a
 800db20:	f8d0 302a 	ldrne.w	r3, [r0, #42]	@ 0x2a
 800db24:	ba1b      	reveq	r3, r3
 800db26:	ba1b      	revne	r3, r3
 800db28:	bf0c      	ite	eq
 800db2a:	f8c0 302a 	streq.w	r3, [r0, #42]	@ 0x2a
 800db2e:	f8c0 302a 	strne.w	r3, [r0, #42]	@ 0x2a
 800db32:	f100 0326 	add.w	r3, r0, #38	@ 0x26
 800db36:	079b      	lsls	r3, r3, #30
 800db38:	bf0b      	itete	eq
 800db3a:	f8d0 3026 	ldreq.w	r3, [r0, #38]	@ 0x26
 800db3e:	f8d0 3026 	ldrne.w	r3, [r0, #38]	@ 0x26
 800db42:	ba1b      	reveq	r3, r3
 800db44:	ba1b      	revne	r3, r3
 800db46:	bf0c      	ite	eq
 800db48:	f8c0 3026 	streq.w	r3, [r0, #38]	@ 0x26
 800db4c:	f8c0 3026 	strne.w	r3, [r0, #38]	@ 0x26
 800db50:	4770      	bx	lr
 800db52:	bf00      	nop

0800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>:
 800db54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db58:	7a0b      	ldrb	r3, [r1, #8]
 800db5a:	8f86      	ldrh	r6, [r0, #60]	@ 0x3c
 800db5c:	4c52      	ldr	r4, [pc, #328]	@ (800dca8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 800db5e:	f003 0302 	and.w	r3, r3, #2
 800db62:	2b00      	cmp	r3, #0
 800db64:	bf14      	ite	ne
 800db66:	2324      	movne	r3, #36	@ 0x24
 800db68:	2320      	moveq	r3, #32
 800db6a:	441e      	add	r6, r3
 800db6c:	b084      	sub	sp, #16
 800db6e:	4605      	mov	r5, r0
 800db70:	bf14      	ite	ne
 800db72:	f04f 0e90 	movne.w	lr, #144	@ 0x90
 800db76:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 800db7a:	f100 030c 	add.w	r3, r0, #12
 800db7e:	f100 0c12 	add.w	ip, r0, #18
 800db82:	4622      	mov	r2, r4
 800db84:	f813 0b01 	ldrb.w	r0, [r3], #1
 800db88:	f802 0b01 	strb.w	r0, [r2], #1
 800db8c:	459c      	cmp	ip, r3
 800db8e:	d1f9      	bne.n	800db84 <net::send_package(net::tcb const*, net::SendInfo const&)+0x30>
 800db90:	b2b7      	uxth	r7, r6
 800db92:	4a46      	ldr	r2, [pc, #280]	@ (800dcac <net::send_package(net::tcb const*, net::SendInfo const&)+0x158>)
 800db94:	f107 0314 	add.w	r3, r7, #20
 800db98:	ba5b      	rev16	r3, r3
 800db9a:	8223      	strh	r3, [r4, #16]
 800db9c:	8813      	ldrh	r3, [r2, #0]
 800db9e:	8263      	strh	r3, [r4, #18]
 800dba0:	3301      	adds	r3, #1
 800dba2:	8013      	strh	r3, [r2, #0]
 800dba4:	682b      	ldr	r3, [r5, #0]
 800dba6:	f8c4 301a 	str.w	r3, [r4, #26]
 800dbaa:	686b      	ldr	r3, [r5, #4]
 800dbac:	f8c4 301e 	str.w	r3, [r4, #30]
 800dbb0:	2300      	movs	r3, #0
 800dbb2:	8323      	strh	r3, [r4, #24]
 800dbb4:	892a      	ldrh	r2, [r5, #8]
 800dbb6:	8462      	strh	r2, [r4, #34]	@ 0x22
 800dbb8:	680a      	ldr	r2, [r1, #0]
 800dbba:	8968      	ldrh	r0, [r5, #10]
 800dbbc:	f8c4 2026 	str.w	r2, [r4, #38]	@ 0x26
 800dbc0:	684a      	ldr	r2, [r1, #4]
 800dbc2:	84a0      	strh	r0, [r4, #36]	@ 0x24
 800dbc4:	f884 e02e 	strb.w	lr, [r4, #46]	@ 0x2e
 800dbc8:	f8c4 202a 	str.w	r2, [r4, #42]	@ 0x2a
 800dbcc:	7a0a      	ldrb	r2, [r1, #8]
 800dbce:	f884 202f 	strb.w	r2, [r4, #47]	@ 0x2f
 800dbd2:	f8b5 2044 	ldrh.w	r2, [r5, #68]	@ 0x44
 800dbd6:	8622      	strh	r2, [r4, #48]	@ 0x30
 800dbd8:	8c2a      	ldrh	r2, [r5, #32]
 800dbda:	86a2      	strh	r2, [r4, #52]	@ 0x34
 800dbdc:	8663      	strh	r3, [r4, #50]	@ 0x32
 800dbde:	7a0b      	ldrb	r3, [r1, #8]
 800dbe0:	079b      	lsls	r3, r3, #30
 800dbe2:	bf41      	itttt	mi
 800dbe4:	f240 4302 	movwmi	r3, #1026	@ 0x402
 800dbe8:	86e3      	strhmi	r3, [r4, #54]	@ 0x36
 800dbea:	f648 4305 	movwmi	r3, #35845	@ 0x8c05
 800dbee:	8723      	strhmi	r3, [r4, #56]	@ 0x38
 800dbf0:	4b2f      	ldr	r3, [pc, #188]	@ (800dcb0 <net::send_package(net::tcb const*, net::SendInfo const&)+0x15c>)
 800dbf2:	bf48      	it	mi
 800dbf4:	4a2f      	ldrmi	r2, [pc, #188]	@ (800dcb4 <net::send_package(net::tcb const*, net::SendInfo const&)+0x160>)
 800dbf6:	681b      	ldr	r3, [r3, #0]
 800dbf8:	bf58      	it	pl
 800dbfa:	4a2f      	ldrpl	r2, [pc, #188]	@ (800dcb8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x164>)
 800dbfc:	ba1b      	rev	r3, r3
 800dbfe:	6053      	str	r3, [r2, #4]
 800dc00:	4b2e      	ldr	r3, [pc, #184]	@ (800dcbc <net::send_package(net::tcb const*, net::SendInfo const&)+0x168>)
 800dc02:	6013      	str	r3, [r2, #0]
 800dc04:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800dc06:	6093      	str	r3, [r2, #8]
 800dc08:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 800dc0a:	b18b      	cbz	r3, 800dc30 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 800dc0c:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 800dc0e:	b179      	cbz	r1, 800dc30 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 800dc10:	781b      	ldrb	r3, [r3, #0]
 800dc12:	7313      	strb	r3, [r2, #12]
 800dc14:	8fab      	ldrh	r3, [r5, #60]	@ 0x3c
 800dc16:	2b01      	cmp	r3, #1
 800dc18:	f102 020d 	add.w	r2, r2, #13
 800dc1c:	d908      	bls.n	800dc30 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 800dc1e:	2301      	movs	r3, #1
 800dc20:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 800dc22:	5cc9      	ldrb	r1, [r1, r3]
 800dc24:	f802 1b01 	strb.w	r1, [r2], #1
 800dc28:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 800dc2a:	3301      	adds	r3, #1
 800dc2c:	4299      	cmp	r1, r3
 800dc2e:	dcf7      	bgt.n	800dc20 <net::send_package(net::tcb const*, net::SendInfo const&)+0xcc>
 800dc30:	8c63      	ldrh	r3, [r4, #34]	@ 0x22
 800dc32:	481d      	ldr	r0, [pc, #116]	@ (800dca8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 800dc34:	ba5b      	rev16	r3, r3
 800dc36:	8463      	strh	r3, [r4, #34]	@ 0x22
 800dc38:	8ca3      	ldrh	r3, [r4, #36]	@ 0x24
 800dc3a:	ba5b      	rev16	r3, r3
 800dc3c:	84a3      	strh	r3, [r4, #36]	@ 0x24
 800dc3e:	f7ff ff69 	bl	800db14 <net::_bswap32(t_tcp*)>
 800dc42:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800dc44:	ba5b      	rev16	r3, r3
 800dc46:	8623      	strh	r3, [r4, #48]	@ 0x30
 800dc48:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800dc4a:	f100 0816 	add.w	r8, r0, #22
 800dc4e:	ba5b      	rev16	r3, r3
 800dc50:	86a3      	strh	r3, [r4, #52]	@ 0x34
 800dc52:	4642      	mov	r2, r8
 800dc54:	ab01      	add	r3, sp, #4
 800dc56:	f852 1b04 	ldr.w	r1, [r2], #4
 800dc5a:	f843 1b04 	str.w	r1, [r3], #4
 800dc5e:	a904      	add	r1, sp, #16
 800dc60:	428b      	cmp	r3, r1
 800dc62:	d1f8      	bne.n	800dc56 <net::send_package(net::tcb const*, net::SendInfo const&)+0x102>
 800dc64:	682b      	ldr	r3, [r5, #0]
 800dc66:	f8c4 3016 	str.w	r3, [r4, #22]
 800dc6a:	686b      	ldr	r3, [r5, #4]
 800dc6c:	f8c4 301a 	str.w	r3, [r4, #26]
 800dc70:	b2b1      	uxth	r1, r6
 800dc72:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 800dc76:	4812      	ldr	r0, [pc, #72]	@ (800dcc0 <net::send_package(net::tcb const*, net::SendInfo const&)+0x16c>)
 800dc78:	83e3      	strh	r3, [r4, #30]
 800dc7a:	ba7f      	rev16	r7, r7
 800dc7c:	310c      	adds	r1, #12
 800dc7e:	8427      	strh	r7, [r4, #32]
 800dc80:	f7ff fdf4 	bl	800d86c <net::net_chksum(void const*, unsigned long)>
 800dc84:	ab01      	add	r3, sp, #4
 800dc86:	4605      	mov	r5, r0
 800dc88:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc8c:	f848 2b04 	str.w	r2, [r8], #4
 800dc90:	aa04      	add	r2, sp, #16
 800dc92:	4293      	cmp	r3, r2
 800dc94:	d1f8      	bne.n	800dc88 <net::send_package(net::tcb const*, net::SendInfo const&)+0x134>
 800dc96:	4804      	ldr	r0, [pc, #16]	@ (800dca8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 800dc98:	8665      	strh	r5, [r4, #50]	@ 0x32
 800dc9a:	f106 0122 	add.w	r1, r6, #34	@ 0x22
 800dc9e:	b004      	add	sp, #16
 800dca0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dca4:	f000 bf12 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800dca8:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 800dcac:	1000899c 	mulne	r0, ip, r9
 800dcb0:	20004830 	andcs	r4, r0, r0, lsr r8
 800dcb4:	100083ea 	andne	r8, r0, sl, ror #7
 800dcb8:	100083e6 	andne	r8, r0, r6, ror #7
 800dcbc:	0a080101 	beq	820e0c8 <_sidata+0x1f6a4c>
 800dcc0:	100083c6 	andne	r8, r0, r6, asr #7

0800dcc4 <net::send_reset(t_tcp*, net::tcb const*)>:
 800dcc4:	f890 202f 	ldrb.w	r2, [r0, #47]	@ 0x2f
 800dcc8:	0753      	lsls	r3, r2, #29
 800dcca:	d42d      	bmi.n	800dd28 <net::send_reset(t_tcp*, net::tcb const*)+0x64>
 800dccc:	b500      	push	{lr}
 800dcce:	b085      	sub	sp, #20
 800dcd0:	4603      	mov	r3, r0
 800dcd2:	4608      	mov	r0, r1
 800dcd4:	2104      	movs	r1, #4
 800dcd6:	f88d 100c 	strb.w	r1, [sp, #12]
 800dcda:	f012 0110 	ands.w	r1, r2, #16
 800dcde:	d119      	bne.n	800dd14 <net::send_reset(t_tcp*, net::tcb const*)+0x50>
 800dce0:	f04f 0c14 	mov.w	ip, #20
 800dce4:	9101      	str	r1, [sp, #4]
 800dce6:	f88d c00c 	strb.w	ip, [sp, #12]
 800dcea:	f3c2 0140 	ubfx	r1, r2, #1, #1
 800dcee:	07d2      	lsls	r2, r2, #31
 800dcf0:	f103 0226 	add.w	r2, r3, #38	@ 0x26
 800dcf4:	bf48      	it	mi
 800dcf6:	3101      	addmi	r1, #1
 800dcf8:	0792      	lsls	r2, r2, #30
 800dcfa:	bf0c      	ite	eq
 800dcfc:	f8d3 3026 	ldreq.w	r3, [r3, #38]	@ 0x26
 800dd00:	f8d3 3026 	ldrne.w	r3, [r3, #38]	@ 0x26
 800dd04:	440b      	add	r3, r1
 800dd06:	a901      	add	r1, sp, #4
 800dd08:	9302      	str	r3, [sp, #8]
 800dd0a:	f7ff ff23 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800dd0e:	b005      	add	sp, #20
 800dd10:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd14:	f103 012a 	add.w	r1, r3, #42	@ 0x2a
 800dd18:	0789      	lsls	r1, r1, #30
 800dd1a:	bf0c      	ite	eq
 800dd1c:	f8d3 102a 	ldreq.w	r1, [r3, #42]	@ 0x2a
 800dd20:	f8d3 102a 	ldrne.w	r1, [r3, #42]	@ 0x2a
 800dd24:	9101      	str	r1, [sp, #4]
 800dd26:	e7e0      	b.n	800dcea <net::send_reset(t_tcp*, net::tcb const*)+0x26>
 800dd28:	4770      	bx	lr
 800dd2a:	bf00      	nop

0800dd2c <net::scan_options(t_tcp*, net::tcb*, long)>:
 800dd2c:	f100 0322 	add.w	r3, r0, #34	@ 0x22
 800dd30:	441a      	add	r2, r3
 800dd32:	f100 0c3c 	add.w	ip, r0, #60	@ 0x3c
 800dd36:	4562      	cmp	r2, ip
 800dd38:	d349      	bcc.n	800ddce <net::scan_options(t_tcp*, net::tcb*, long)+0xa2>
 800dd3a:	b530      	push	{r4, r5, lr}
 800dd3c:	f100 0336 	add.w	r3, r0, #54	@ 0x36
 800dd40:	f893 c000 	ldrb.w	ip, [r3]
 800dd44:	f1bc 0f08 	cmp.w	ip, #8
 800dd48:	d820      	bhi.n	800dd8c <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 800dd4a:	e8df f00c 	tbb	[pc, ip]
 800dd4e:	1f052726 	svcne	0x00052726
 800dd52:	1f1f1f1f 	svcne	0x001f1f1f
 800dd56:	f8930029 			@ <UNDEFINED> instruction: 0xf8930029
 800dd5a:	c001      	stmia	r0!, {r0}
 800dd5c:	f1bc 0f04 	cmp.w	ip, #4
 800dd60:	d116      	bne.n	800dd90 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 800dd62:	f103 0e04 	add.w	lr, r3, #4
 800dd66:	4572      	cmp	r2, lr
 800dd68:	d312      	bcc.n	800dd90 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 800dd6a:	f8b3 c002 	ldrh.w	ip, [r3, #2]
 800dd6e:	fa9c fc9c 	rev16.w	ip, ip
 800dd72:	fa1f fc8c 	uxth.w	ip, ip
 800dd76:	f10c 0c14 	add.w	ip, ip, #20
 800dd7a:	f240 5e8c 	movw	lr, #1420	@ 0x58c
 800dd7e:	45f4      	cmp	ip, lr
 800dd80:	bfa8      	it	ge
 800dd82:	46f4      	movge	ip, lr
 800dd84:	f1ac 0c14 	sub.w	ip, ip, #20
 800dd88:	f8a1 c034 	strh.w	ip, [r1, #52]	@ 0x34
 800dd8c:	f893 c001 	ldrb.w	ip, [r3, #1]
 800dd90:	4463      	add	r3, ip
 800dd92:	f103 0c06 	add.w	ip, r3, #6
 800dd96:	4562      	cmp	r2, ip
 800dd98:	d2d2      	bcs.n	800dd40 <net::scan_options(t_tcp*, net::tcb*, long)+0x14>
 800dd9a:	bd30      	pop	{r4, r5, pc}
 800dd9c:	3301      	adds	r3, #1
 800dd9e:	e7f8      	b.n	800dd92 <net::scan_options(t_tcp*, net::tcb*, long)+0x66>
 800dda0:	f893 c001 	ldrb.w	ip, [r3, #1]
 800dda4:	f1bc 0f0a 	cmp.w	ip, #10
 800dda8:	d1f2      	bne.n	800dd90 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 800ddaa:	f103 0e0a 	add.w	lr, r3, #10
 800ddae:	4572      	cmp	r2, lr
 800ddb0:	d3ee      	bcc.n	800dd90 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 800ddb2:	1c9c      	adds	r4, r3, #2
 800ddb4:	f890 e02f 	ldrb.w	lr, [r0, #47]	@ 0x2f
 800ddb8:	07a4      	lsls	r4, r4, #30
 800ddba:	bf0c      	ite	eq
 800ddbc:	f8d3 4002 	ldreq.w	r4, [r3, #2]
 800ddc0:	f8d3 4002 	ldrne.w	r4, [r3, #2]
 800ddc4:	f01e 0f02 	tst.w	lr, #2
 800ddc8:	d002      	beq.n	800ddd0 <net::scan_options(t_tcp*, net::tcb*, long)+0xa4>
 800ddca:	630c      	str	r4, [r1, #48]	@ 0x30
 800ddcc:	e7de      	b.n	800dd8c <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 800ddce:	4770      	bx	lr
 800ddd0:	6b0d      	ldr	r5, [r1, #48]	@ 0x30
 800ddd2:	fa95 fe85 	rev.w	lr, r5
 800ddd6:	ba25      	rev	r5, r4
 800ddd8:	4575      	cmp	r5, lr
 800ddda:	d9d9      	bls.n	800dd90 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 800dddc:	e7f5      	b.n	800ddca <net::scan_options(t_tcp*, net::tcb*, long)+0x9e>
 800ddde:	bf00      	nop

0800dde0 <net::tcp_shutdown()>:
 800dde0:	4770      	bx	lr
 800dde2:	bf00      	nop

0800dde4 <net::tcp_begin(unsigned short)>:
 800dde4:	4b16      	ldr	r3, [pc, #88]	@ (800de40 <net::tcp_begin(unsigned short)+0x5c>)
 800dde6:	f8b3 1d04 	ldrh.w	r1, [r3, #3332]	@ 0xd04
 800ddea:	4281      	cmp	r1, r0
 800ddec:	d025      	beq.n	800de3a <net::tcp_begin(unsigned short)+0x56>
 800ddee:	bb09      	cbnz	r1, 800de34 <net::tcp_begin(unsigned short)+0x50>
 800ddf0:	b530      	push	{r4, r5, lr}
 800ddf2:	4d14      	ldr	r5, [pc, #80]	@ (800de44 <net::tcp_begin(unsigned short)+0x60>)
 800ddf4:	f8a3 0d04 	strh.w	r0, [r3, #3332]	@ 0xd04
 800ddf8:	f103 0250 	add.w	r2, r3, #80	@ 0x50
 800ddfc:	f503 7c0c 	add.w	ip, r3, #560	@ 0x230
 800de00:	f640 3418 	movw	r4, #2840	@ 0xb18
 800de04:	f04f 0e01 	mov.w	lr, #1
 800de08:	f1a2 0350 	sub.w	r3, r2, #80	@ 0x50
 800de0c:	f843 1b04 	str.w	r1, [r3], #4
 800de10:	4293      	cmp	r3, r2
 800de12:	d1fb      	bne.n	800de0c <net::tcp_begin(unsigned short)+0x28>
 800de14:	682b      	ldr	r3, [r5, #0]
 800de16:	f822 0c48 	strh.w	r0, [r2, #-72]
 800de1a:	f822 4c0c 	strh.w	r4, [r2, #-12]
 800de1e:	f802 ec04 	strb.w	lr, [r2, #-4]
 800de22:	e942 330f 	strd	r3, r3, [r2, #-60]	@ 0x3c
 800de26:	e942 330a 	strd	r3, r3, [r2, #-40]	@ 0x28
 800de2a:	3250      	adds	r2, #80	@ 0x50
 800de2c:	4562      	cmp	r2, ip
 800de2e:	d1eb      	bne.n	800de08 <net::tcp_begin(unsigned short)+0x24>
 800de30:	2000      	movs	r0, #0
 800de32:	bd30      	pop	{r4, r5, pc}
 800de34:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800de38:	4770      	bx	lr
 800de3a:	2000      	movs	r0, #0
 800de3c:	4770      	bx	lr
 800de3e:	bf00      	nop
 800de40:	100089a0 	andne	r8, r0, r0, lsr #19
 800de44:	20004830 	andcs	r4, r0, r0, lsr r8

0800de48 <net::tcp_read(long, unsigned char const**, unsigned long&)>:
 800de48:	b570      	push	{r4, r5, r6, lr}
 800de4a:	4b1a      	ldr	r3, [pc, #104]	@ (800deb4 <net::tcp_read(long, unsigned char const**, unsigned long&)+0x6c>)
 800de4c:	f640 5408 	movw	r4, #3336	@ 0xd08
 800de50:	fb04 f000 	mul.w	r0, r4, r0
 800de54:	eb03 0c00 	add.w	ip, r3, r0
 800de58:	f8bc e1e2 	ldrh.w	lr, [ip, #482]	@ 0x1e2
 800de5c:	f8bc 41e0 	ldrh.w	r4, [ip, #480]	@ 0x1e0
 800de60:	4574      	cmp	r4, lr
 800de62:	bf08      	it	eq
 800de64:	2000      	moveq	r0, #0
 800de66:	d100      	bne.n	800de6a <net::tcp_read(long, unsigned char const**, unsigned long&)+0x22>
 800de68:	bd70      	pop	{r4, r5, r6, pc}
 800de6a:	f44f 64b2 	mov.w	r4, #1424	@ 0x590
 800de6e:	fb04 fe0e 	mul.w	lr, r4, lr
 800de72:	eb0e 0500 	add.w	r5, lr, r0
 800de76:	441d      	add	r5, r3
 800de78:	f500 76f2 	add.w	r6, r0, #484	@ 0x1e4
 800de7c:	f8b5 4772 	ldrh.w	r4, [r5, #1906]	@ 0x772
 800de80:	6014      	str	r4, [r2, #0]
 800de82:	4476      	add	r6, lr
 800de84:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800de88:	441e      	add	r6, r3
 800de8a:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 800de8e:	600e      	str	r6, [r1, #0]
 800de90:	4403      	add	r3, r0
 800de92:	f8bc 21e2 	ldrh.w	r2, [ip, #482]	@ 0x1e2
 800de96:	f8b3 1044 	ldrh.w	r1, [r3, #68]	@ 0x44
 800de9a:	f8b5 0770 	ldrh.w	r0, [r5, #1904]	@ 0x770
 800de9e:	3201      	adds	r2, #1
 800dea0:	f201 518c 	addw	r1, r1, #1420	@ 0x58c
 800dea4:	f002 0201 	and.w	r2, r2, #1
 800dea8:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 800deac:	f8ac 21e2 	strh.w	r2, [ip, #482]	@ 0x1e2
 800deb0:	bd70      	pop	{r4, r5, r6, pc}
 800deb2:	bf00      	nop
 800deb4:	100089a0 	andne	r8, r0, r0, lsr #19

0800deb8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
 800deb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800debc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dec0:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 800df54 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x9c>
 800dec4:	f640 5408 	movw	r4, #3336	@ 0xd08
 800dec8:	011b      	lsls	r3, r3, #4
 800deca:	fb04 3700 	mla	r7, r4, r0, r3
 800dece:	b085      	sub	sp, #20
 800ded0:	eb08 0907 	add.w	r9, r8, r7
 800ded4:	2a00      	cmp	r2, #0
 800ded6:	d038      	beq.n	800df4a <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 800ded8:	f107 0b10 	add.w	fp, r7, #16
 800dedc:	468a      	mov	sl, r1
 800dede:	4616      	mov	r6, r2
 800dee0:	44c3      	add	fp, r8
 800dee2:	e01e      	b.n	800df22 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 800dee4:	f8c5 a038 	str.w	sl, [r5, #56]	@ 0x38
 800dee8:	87ac      	strh	r4, [r5, #60]	@ 0x3c
 800deea:	f8db 3008 	ldr.w	r3, [fp, #8]
 800deee:	f8db 2030 	ldr.w	r2, [fp, #48]	@ 0x30
 800def2:	4566      	cmp	r6, ip
 800def4:	bf8c      	ite	hi
 800def6:	f04f 0c10 	movhi.w	ip, #16
 800defa:	f04f 0c18 	movls.w	ip, #24
 800defe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800df02:	f88d c00c 	strb.w	ip, [sp, #12]
 800df06:	f7ff fe25 	bl	800db54 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800df0a:	e9d5 2306 	ldrd	r2, r3, [r5, #24]
 800df0e:	2100      	movs	r1, #0
 800df10:	4422      	add	r2, r4
 800df12:	1b1b      	subs	r3, r3, r4
 800df14:	1b36      	subs	r6, r6, r4
 800df16:	e9c5 2306 	strd	r2, r3, [r5, #24]
 800df1a:	63a9      	str	r1, [r5, #56]	@ 0x38
 800df1c:	87a9      	strh	r1, [r5, #60]	@ 0x3c
 800df1e:	44a2      	add	sl, r4
 800df20:	d013      	beq.n	800df4a <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 800df22:	eb08 0507 	add.w	r5, r8, r7
 800df26:	f240 548c 	movw	r4, #1420	@ 0x58c
 800df2a:	42b4      	cmp	r4, r6
 800df2c:	69eb      	ldr	r3, [r5, #28]
 800df2e:	bf28      	it	cs
 800df30:	4634      	movcs	r4, r6
 800df32:	429c      	cmp	r4, r3
 800df34:	f240 5c8b 	movw	ip, #1419	@ 0x58b
 800df38:	a901      	add	r1, sp, #4
 800df3a:	4648      	mov	r0, r9
 800df3c:	d9d2      	bls.n	800dee4 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x2c>
 800df3e:	4804      	ldr	r0, [pc, #16]	@ (800df50 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x98>)
 800df40:	f002 ffc0 	bl	8010ec4 <console_error>
 800df44:	1b36      	subs	r6, r6, r4
 800df46:	44a2      	add	sl, r4
 800df48:	d1eb      	bne.n	800df22 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 800df4a:	b005      	add	sp, #20
 800df4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df50:	08014ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, lr}
 800df54:	100089a0 	andne	r8, r0, r0, lsr #19

0800df58 <net::udp_set_ip()>:
 800df58:	4a02      	ldr	r2, [pc, #8]	@ (800df64 <net::udp_set_ip()+0xc>)
 800df5a:	4b03      	ldr	r3, [pc, #12]	@ (800df68 <net::udp_set_ip()+0x10>)
 800df5c:	6812      	ldr	r2, [r2, #0]
 800df5e:	f8c3 201a 	str.w	r2, [r3, #26]
 800df62:	4770      	bx	lr
 800df64:	200009cc 	andcs	r0, r0, ip, asr #19
 800df68:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4

0800df6c <net::udp_begin(unsigned short)>:
 800df6c:	4a08      	ldr	r2, [pc, #32]	@ (800df90 <net::udp_begin(unsigned short)+0x24>)
 800df6e:	4601      	mov	r1, r0
 800df70:	2000      	movs	r0, #0
 800df72:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800df76:	428b      	cmp	r3, r1
 800df78:	d005      	beq.n	800df86 <net::udp_begin(unsigned short)+0x1a>
 800df7a:	b12b      	cbz	r3, 800df88 <net::udp_begin(unsigned short)+0x1c>
 800df7c:	3001      	adds	r0, #1
 800df7e:	2808      	cmp	r0, #8
 800df80:	d1f7      	bne.n	800df72 <net::udp_begin(unsigned short)+0x6>
 800df82:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800df86:	4770      	bx	lr
 800df88:	4b02      	ldr	r3, [pc, #8]	@ (800df94 <net::udp_begin(unsigned short)+0x28>)
 800df8a:	f823 1010 	strh.w	r1, [r3, r0, lsl #1]
 800df8e:	4770      	bx	lr
 800df90:	1000cafe 	strdne	ip, [r0], -lr
 800df94:	1000cb00 	andne	ip, r0, r0, lsl #22

0800df98 <net::udp_end(unsigned short)>:
 800df98:	4a0d      	ldr	r2, [pc, #52]	@ (800dfd0 <net::udp_end(unsigned short)+0x38>)
 800df9a:	b508      	push	{r3, lr}
 800df9c:	2300      	movs	r3, #0
 800df9e:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 800dfa2:	4281      	cmp	r1, r0
 800dfa4:	d008      	beq.n	800dfb8 <net::udp_end(unsigned short)+0x20>
 800dfa6:	3301      	adds	r3, #1
 800dfa8:	2b08      	cmp	r3, #8
 800dfaa:	d1f8      	bne.n	800df9e <net::udp_end(unsigned short)+0x6>
 800dfac:	4809      	ldr	r0, [pc, #36]	@ (800dfd4 <net::udp_end(unsigned short)+0x3c>)
 800dfae:	f002 ff89 	bl	8010ec4 <console_error>
 800dfb2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800dfb6:	bd08      	pop	{r3, pc}
 800dfb8:	4a07      	ldr	r2, [pc, #28]	@ (800dfd8 <net::udp_end(unsigned short)+0x40>)
 800dfba:	4908      	ldr	r1, [pc, #32]	@ (800dfdc <net::udp_end(unsigned short)+0x44>)
 800dfbc:	f240 50cc 	movw	r0, #1484	@ 0x5cc
 800dfc0:	fb00 2203 	mla	r2, r0, r3, r2
 800dfc4:	2000      	movs	r0, #0
 800dfc6:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
 800dfca:	6050      	str	r0, [r2, #4]
 800dfcc:	bd08      	pop	{r3, pc}
 800dfce:	bf00      	nop
 800dfd0:	1000cafe 	strdne	ip, [r0], -lr
 800dfd4:	08014eec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, fp, lr}
 800dfd8:	10009ca0 	andne	r9, r0, r0, lsr #25
 800dfdc:	1000cb00 	andne	ip, r0, r0, lsl #22

0800dfe0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>:
 800dfe0:	b510      	push	{r4, lr}
 800dfe2:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 800dfe6:	4c0c      	ldr	r4, [pc, #48]	@ (800e018 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x38>)
 800dfe8:	fb0c fc00 	mul.w	ip, ip, r0
 800dfec:	eb04 0e0c 	add.w	lr, r4, ip
 800dff0:	f8de 0004 	ldr.w	r0, [lr, #4]
 800dff4:	b900      	cbnz	r0, 800dff8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x18>
 800dff6:	bd10      	pop	{r4, pc}
 800dff8:	f10c 000a 	add.w	r0, ip, #10
 800dffc:	4420      	add	r0, r4
 800dffe:	6008      	str	r0, [r1, #0]
 800e000:	f854 100c 	ldr.w	r1, [r4, ip]
 800e004:	6011      	str	r1, [r2, #0]
 800e006:	f8be 2008 	ldrh.w	r2, [lr, #8]
 800e00a:	801a      	strh	r2, [r3, #0]
 800e00c:	2300      	movs	r3, #0
 800e00e:	f8de 0004 	ldr.w	r0, [lr, #4]
 800e012:	f8ce 3004 	str.w	r3, [lr, #4]
 800e016:	bd10      	pop	{r4, pc}
 800e018:	10009ca0 	andne	r9, r0, r0, lsr #25

0800e01c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
 800e01c:	b570      	push	{r4, r5, r6, lr}
 800e01e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800e022:	4e3d      	ldr	r6, [pc, #244]	@ (800e118 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>)
 800e024:	fa94 fe94 	rev16.w	lr, r4
 800e028:	4c3c      	ldr	r4, [pc, #240]	@ (800e11c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>)
 800e02a:	f8b6 c000 	ldrh.w	ip, [r6]
 800e02e:	f834 5010 	ldrh.w	r5, [r4, r0, lsl #1]
 800e032:	4c3b      	ldr	r4, [pc, #236]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e034:	b290      	uxth	r0, r2
 800e036:	f8a4 c012 	strh.w	ip, [r4, #18]
 800e03a:	f10c 0c01 	add.w	ip, ip, #1
 800e03e:	f8a6 c000 	strh.w	ip, [r6]
 800e042:	f100 0c1c 	add.w	ip, r0, #28
 800e046:	3008      	adds	r0, #8
 800e048:	ba40      	rev16	r0, r0
 800e04a:	ba6d      	rev16	r5, r5
 800e04c:	fa9c fc9c 	rev16.w	ip, ip
 800e050:	84e0      	strh	r0, [r4, #38]	@ 0x26
 800e052:	f5b2 6fb8 	cmp.w	r2, #1472	@ 0x5c0
 800e056:	f04f 0000 	mov.w	r0, #0
 800e05a:	8465      	strh	r5, [r4, #34]	@ 0x22
 800e05c:	f8a4 e024 	strh.w	lr, [r4, #36]	@ 0x24
 800e060:	4615      	mov	r5, r2
 800e062:	f8a4 c010 	strh.w	ip, [r4, #16]
 800e066:	bf28      	it	cs
 800e068:	f44f 65b8 	movcs.w	r5, #1472	@ 0x5c0
 800e06c:	8320      	strh	r0, [r4, #24]
 800e06e:	b14a      	cbz	r2, 800e084 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
 800e070:	eb01 0e05 	add.w	lr, r1, r5
 800e074:	f104 002a 	add.w	r0, r4, #42	@ 0x2a
 800e078:	f811 cb01 	ldrb.w	ip, [r1], #1
 800e07c:	f800 cb01 	strb.w	ip, [r0], #1
 800e080:	4571      	cmp	r1, lr
 800e082:	d1f9      	bne.n	800e078 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5c>
 800e084:	1c5a      	adds	r2, r3, #1
 800e086:	f105 012a 	add.w	r1, r5, #42	@ 0x2a
 800e08a:	d02e      	beq.n	800e0ea <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce>
 800e08c:	4a25      	ldr	r2, [pc, #148]	@ (800e124 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x108>)
 800e08e:	6812      	ldr	r2, [r2, #0]
 800e090:	439a      	bics	r2, r3
 800e092:	d01c      	beq.n	800e0ce <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb2>
 800e094:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 800e098:	2ae0      	cmp	r2, #224	@ 0xe0
 800e09a:	d136      	bne.n	800e10a <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee>
 800e09c:	4822      	ldr	r0, [pc, #136]	@ (800e128 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x10c>)
 800e09e:	f3c3 2206 	ubfx	r2, r3, #8, #7
 800e0a2:	70c2      	strb	r2, [r0, #3]
 800e0a4:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800e0a8:	7102      	strb	r2, [r0, #4]
 800e0aa:	f3c3 6207 	ubfx	r2, r3, #24, #8
 800e0ae:	7142      	strb	r2, [r0, #5]
 800e0b0:	4a1b      	ldr	r2, [pc, #108]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e0b2:	1d85      	adds	r5, r0, #6
 800e0b4:	f810 cb01 	ldrb.w	ip, [r0], #1
 800e0b8:	f802 cb01 	strb.w	ip, [r2], #1
 800e0bc:	42a8      	cmp	r0, r5
 800e0be:	d1f9      	bne.n	800e0b4 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
 800e0c0:	f8c4 301e 	str.w	r3, [r4, #30]
 800e0c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0c8:	4815      	ldr	r0, [pc, #84]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e0ca:	f000 bcff 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800e0ce:	4a14      	ldr	r2, [pc, #80]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e0d0:	25ff      	movs	r5, #255	@ 0xff
 800e0d2:	1d90      	adds	r0, r2, #6
 800e0d4:	f802 5b01 	strb.w	r5, [r2], #1
 800e0d8:	4282      	cmp	r2, r0
 800e0da:	d1fb      	bne.n	800e0d4 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
 800e0dc:	f8c4 301e 	str.w	r3, [r4, #30]
 800e0e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0e4:	480e      	ldr	r0, [pc, #56]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e0e6:	f000 bcf1 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800e0ea:	4b0d      	ldr	r3, [pc, #52]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e0ec:	22ff      	movs	r2, #255	@ 0xff
 800e0ee:	1d98      	adds	r0, r3, #6
 800e0f0:	f803 2b01 	strb.w	r2, [r3], #1
 800e0f4:	4283      	cmp	r3, r0
 800e0f6:	d1fb      	bne.n	800e0f0 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
 800e0f8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800e0fc:	f8c4 301e 	str.w	r3, [r4, #30]
 800e100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e104:	4806      	ldr	r0, [pc, #24]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e106:	f000 bce1 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800e10a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e10e:	4804      	ldr	r0, [pc, #16]	@ (800e120 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 800e110:	461a      	mov	r2, r3
 800e112:	f000 bf11 	b.w	800ef38 <net::arp_send(t_udp*, unsigned long, unsigned long)>
 800e116:	bf00      	nop
 800e118:	100096b0 			@ <UNDEFINED> instruction: 0x100096b0
 800e11c:	1000cb00 	andne	ip, r0, r0, lsl #22
 800e120:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 800e124:	200009b4 			@ <UNDEFINED> instruction: 0x200009b4
 800e128:	100096a8 	andne	r9, r0, r8, lsr #13

0800e12c <net::link_handle_change(net::Link)>:
 800e12c:	2801      	cmp	r0, #1
 800e12e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e130:	d129      	bne.n	800e186 <net::link_handle_change(net::Link)+0x5a>
 800e132:	4d17      	ldr	r5, [pc, #92]	@ (800e190 <net::link_handle_change(net::Link)+0x64>)
 800e134:	682b      	ldr	r3, [r5, #0]
 800e136:	f893 6020 	ldrb.w	r6, [r3, #32]
 800e13a:	b13e      	cbz	r6, 800e14c <net::link_handle_change(net::Link)+0x20>
 800e13c:	2200      	movs	r2, #0
 800e13e:	f883 2020 	strb.w	r2, [r3, #32]
 800e142:	2104      	movs	r1, #4
 800e144:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800e148:	f003 fcda 	bl	8011b00 <fwdgt_config>
 800e14c:	466c      	mov	r4, sp
 800e14e:	4621      	mov	r1, r4
 800e150:	2001      	movs	r0, #1
 800e152:	f000 f833 	bl	800e1bc <net::phy_start(unsigned long, net::PhyStatus&)>
 800e156:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800e15a:	f000 faed 	bl	800e738 <emac_adjust_link(net::PhyStatus)>
 800e15e:	b176      	cbz	r6, 800e17e <net::link_handle_change(net::Link)+0x52>
 800e160:	2102      	movs	r1, #2
 800e162:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800e166:	682c      	ldr	r4, [r5, #0]
 800e168:	f003 fcca 	bl	8011b00 <fwdgt_config>
 800e16c:	2801      	cmp	r0, #1
 800e16e:	bf0c      	ite	eq
 800e170:	2301      	moveq	r3, #1
 800e172:	2300      	movne	r3, #0
 800e174:	f884 3020 	strb.w	r3, [r4, #32]
 800e178:	d101      	bne.n	800e17e <net::link_handle_change(net::Link)+0x52>
 800e17a:	f003 fcb1 	bl	8011ae0 <fwdgt_enable>
 800e17e:	f7ff fc87 	bl	800da90 <net::netif_set_link_up()>
 800e182:	b004      	add	sp, #16
 800e184:	bd70      	pop	{r4, r5, r6, pc}
 800e186:	b004      	add	sp, #16
 800e188:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e18c:	f7ff bca2 	b.w	800dad4 <net::netif_set_link_down()>
 800e190:	20000b7c 	andcs	r0, r0, ip, ror fp

0800e194 <net::link_status_read()>:
 800e194:	2001      	movs	r0, #1
 800e196:	f000 b800 	b.w	800e19a <net::phy_get_link(unsigned long)>

0800e19a <net::phy_get_link(unsigned long)>:
 800e19a:	b507      	push	{r0, r1, r2, lr}
 800e19c:	2300      	movs	r3, #0
 800e19e:	f10d 0206 	add.w	r2, sp, #6
 800e1a2:	2101      	movs	r1, #1
 800e1a4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e1a8:	f000 fafe 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e1ac:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e1b0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800e1b4:	b003      	add	sp, #12
 800e1b6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e1bc <net::phy_start(unsigned long, net::PhyStatus&)>:
 800e1bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e1c0:	460d      	mov	r5, r1
 800e1c2:	f10d 0206 	add.w	r2, sp, #6
 800e1c6:	2104      	movs	r1, #4
 800e1c8:	4604      	mov	r4, r0
 800e1ca:	f000 faed 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e1ce:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800e1d2:	f240 1241 	movw	r2, #321	@ 0x141
 800e1d6:	f401 637e 	and.w	r3, r1, #4064	@ 0xfe0
 800e1da:	4313      	orrs	r3, r2
 800e1dc:	f411 616a 	ands.w	r1, r1, #3744	@ 0xea0
 800e1e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e1e4:	d10a      	bne.n	800e1fc <net::phy_start(unsigned long, net::PhyStatus&)+0x40>
 800e1e6:	f10d 0206 	add.w	r2, sp, #6
 800e1ea:	4620      	mov	r0, r4
 800e1ec:	f000 fadc 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e1f0:	b9f8      	cbnz	r0, 800e232 <net::phy_start(unsigned long, net::PhyStatus&)+0x76>
 800e1f2:	2600      	movs	r6, #0
 800e1f4:	4630      	mov	r0, r6
 800e1f6:	b003      	add	sp, #12
 800e1f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e1fc:	2104      	movs	r1, #4
 800e1fe:	4620      	mov	r0, r4
 800e200:	f000 fadd 	bl	800e7be <net::phy_write(unsigned long, unsigned long, unsigned short)>
 800e204:	2800      	cmp	r0, #0
 800e206:	d0f4      	beq.n	800e1f2 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 800e208:	f10d 0206 	add.w	r2, sp, #6
 800e20c:	2100      	movs	r1, #0
 800e20e:	4620      	mov	r0, r4
 800e210:	f000 faca 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e214:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e218:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e21c:	f442 5290 	orr.w	r2, r2, #4608	@ 0x1200
 800e220:	b292      	uxth	r2, r2
 800e222:	2100      	movs	r1, #0
 800e224:	4620      	mov	r0, r4
 800e226:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e22a:	f000 fac8 	bl	800e7be <net::phy_write(unsigned long, unsigned long, unsigned short)>
 800e22e:	b938      	cbnz	r0, 800e240 <net::phy_start(unsigned long, net::PhyStatus&)+0x84>
 800e230:	e7df      	b.n	800e1f2 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 800e232:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e236:	f403 53a0 	and.w	r3, r3, #5120	@ 0x1400
 800e23a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800e23e:	d1e3      	bne.n	800e208 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
 800e240:	f10d 0206 	add.w	r2, sp, #6
 800e244:	2101      	movs	r1, #1
 800e246:	4620      	mov	r0, r4
 800e248:	f000 faae 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e24c:	4606      	mov	r6, r0
 800e24e:	2800      	cmp	r0, #0
 800e250:	d0cf      	beq.n	800e1f2 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 800e252:	682a      	ldr	r2, [r5, #0]
 800e254:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e258:	b90a      	cbnz	r2, 800e25e <net::phy_start(unsigned long, net::PhyStatus&)+0xa2>
 800e25a:	0759      	lsls	r1, r3, #29
 800e25c:	d40f      	bmi.n	800e27e <net::phy_start(unsigned long, net::PhyStatus&)+0xc2>
 800e25e:	069a      	lsls	r2, r3, #26
 800e260:	d43b      	bmi.n	800e2da <net::phy_start(unsigned long, net::PhyStatus&)+0x11e>
 800e262:	4f25      	ldr	r7, [pc, #148]	@ (800e2f8 <net::phy_start(unsigned long, net::PhyStatus&)+0x13c>)
 800e264:	4825      	ldr	r0, [pc, #148]	@ (800e2fc <net::phy_start(unsigned long, net::PhyStatus&)+0x140>)
 800e266:	f005 fb58 	bl	801391a <puts>
 800e26a:	f8d7 8000 	ldr.w	r8, [r7]
 800e26e:	f241 3988 	movw	r9, #5000	@ 0x1388
 800e272:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e276:	069b      	lsls	r3, r3, #26
 800e278:	d523      	bpl.n	800e2c2 <net::phy_start(unsigned long, net::PhyStatus&)+0x106>
 800e27a:	2301      	movs	r3, #1
 800e27c:	602b      	str	r3, [r5, #0]
 800e27e:	2300      	movs	r3, #0
 800e280:	e9c5 3301 	strd	r3, r3, [r5, #4]
 800e284:	aa01      	add	r2, sp, #4
 800e286:	2104      	movs	r1, #4
 800e288:	4620      	mov	r0, r4
 800e28a:	f000 fa8d 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e28e:	f10d 0206 	add.w	r2, sp, #6
 800e292:	2105      	movs	r1, #5
 800e294:	4620      	mov	r0, r4
 800e296:	f000 fa87 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e29a:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e29e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e2a2:	4013      	ands	r3, r2
 800e2a4:	f413 7fc0 	tst.w	r3, #384	@ 0x180
 800e2a8:	d022      	beq.n	800e2f0 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
 800e2aa:	2201      	movs	r2, #1
 800e2ac:	60aa      	str	r2, [r5, #8]
 800e2ae:	f413 7f80 	tst.w	r3, #256	@ 0x100
 800e2b2:	d001      	beq.n	800e2b8 <net::phy_start(unsigned long, net::PhyStatus&)+0xfc>
 800e2b4:	2301      	movs	r3, #1
 800e2b6:	606b      	str	r3, [r5, #4]
 800e2b8:	4620      	mov	r0, r4
 800e2ba:	f7ff ff6e 	bl	800e19a <net::phy_get_link(unsigned long)>
 800e2be:	6028      	str	r0, [r5, #0]
 800e2c0:	e798      	b.n	800e1f4 <net::phy_start(unsigned long, net::PhyStatus&)+0x38>
 800e2c2:	683b      	ldr	r3, [r7, #0]
 800e2c4:	eba3 0308 	sub.w	r3, r3, r8
 800e2c8:	454b      	cmp	r3, r9
 800e2ca:	d892      	bhi.n	800e1f2 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 800e2cc:	f10d 0206 	add.w	r2, sp, #6
 800e2d0:	2101      	movs	r1, #1
 800e2d2:	4620      	mov	r0, r4
 800e2d4:	f000 fa68 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e2d8:	e7cb      	b.n	800e272 <net::phy_start(unsigned long, net::PhyStatus&)+0xb6>
 800e2da:	f10d 0206 	add.w	r2, sp, #6
 800e2de:	2101      	movs	r1, #1
 800e2e0:	4620      	mov	r0, r4
 800e2e2:	f000 fa61 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e2e6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e2ea:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800e2ee:	e7c5      	b.n	800e27c <net::phy_start(unsigned long, net::PhyStatus&)+0xc0>
 800e2f0:	f013 0f40 	tst.w	r3, #64	@ 0x40
 800e2f4:	e7dd      	b.n	800e2b2 <net::phy_start(unsigned long, net::PhyStatus&)+0xf6>
 800e2f6:	bf00      	nop
 800e2f8:	20004830 	andcs	r4, r0, r0, lsr r8
 800e2fc:	080144f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, lr}

0800e300 <NetworkParamsStore::Copy(networkparams::Params*)>:
 800e300:	b507      	push	{r0, r1, r2, lr}
 800e302:	2301      	movs	r3, #1
 800e304:	2100      	movs	r1, #0
 800e306:	e9cd 1300 	strd	r1, r3, [sp]
 800e30a:	4602      	mov	r2, r0
 800e30c:	4803      	ldr	r0, [pc, #12]	@ (800e31c <NetworkParamsStore::Copy(networkparams::Params*)+0x1c>)
 800e30e:	235e      	movs	r3, #94	@ 0x5e
 800e310:	6800      	ldr	r0, [r0, #0]
 800e312:	f001 facd 	bl	800f8b0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800e316:	b003      	add	sp, #12
 800e318:	f85d fb04 	ldr.w	pc, [sp], #4
 800e31c:	20000a78 	andcs	r0, r0, r8, ror sl

0800e320 <NetworkParams::NetworkParams()>:
 800e320:	b510      	push	{r4, lr}
 800e322:	225e      	movs	r2, #94	@ 0x5e
 800e324:	4604      	mov	r4, r0
 800e326:	2100      	movs	r1, #0
 800e328:	f004 ffbe 	bl	80132a8 <memset>
 800e32c:	2301      	movs	r3, #1
 800e32e:	7523      	strb	r3, [r4, #20]
 800e330:	4620      	mov	r0, r4
 800e332:	bd10      	pop	{r4, pc}

0800e334 <NetworkParams::Load()>:
 800e334:	b508      	push	{r3, lr}
 800e336:	2200      	movs	r2, #0
 800e338:	7002      	strb	r2, [r0, #0]
 800e33a:	7042      	strb	r2, [r0, #1]
 800e33c:	7082      	strb	r2, [r0, #2]
 800e33e:	70c2      	strb	r2, [r0, #3]
 800e340:	f7ff ffde 	bl	800e300 <NetworkParamsStore::Copy(networkparams::Params*)>
 800e344:	bd08      	pop	{r3, pc}
	...

0800e348 <NetworkParams::Load(char const*, unsigned long)>:
 800e348:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e34a:	2500      	movs	r5, #0
 800e34c:	b087      	sub	sp, #28
 800e34e:	4604      	mov	r4, r0
 800e350:	460e      	mov	r6, r1
 800e352:	4617      	mov	r7, r2
 800e354:	7005      	strb	r5, [r0, #0]
 800e356:	7045      	strb	r5, [r0, #1]
 800e358:	7085      	strb	r5, [r0, #2]
 800e35a:	70c5      	strb	r5, [r0, #3]
 800e35c:	4602      	mov	r2, r0
 800e35e:	490c      	ldr	r1, [pc, #48]	@ (800e390 <NetworkParams::Load(char const*, unsigned long)+0x48>)
 800e360:	a804      	add	r0, sp, #16
 800e362:	f001 fd7f 	bl	800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e366:	463a      	mov	r2, r7
 800e368:	4631      	mov	r1, r6
 800e36a:	a804      	add	r0, sp, #16
 800e36c:	f001 fd7e 	bl	800fe6c <ReadConfigFile::Read(char const*, unsigned int)>
 800e370:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800e374:	235e      	movs	r3, #94	@ 0x5e
 800e376:	4807      	ldr	r0, [pc, #28]	@ (800e394 <NetworkParams::Load(char const*, unsigned long)+0x4c>)
 800e378:	9300      	str	r3, [sp, #0]
 800e37a:	462a      	mov	r2, r5
 800e37c:	4623      	mov	r3, r4
 800e37e:	4629      	mov	r1, r5
 800e380:	6800      	ldr	r0, [r0, #0]
 800e382:	f001 fa6f 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800e386:	a804      	add	r0, sp, #16
 800e388:	f001 fd6f 	bl	800fe6a <ReadConfigFile::~ReadConfigFile()>
 800e38c:	b007      	add	sp, #28
 800e38e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e390:	0800e4f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, sp, lr, pc}
 800e394:	20000a78 	andcs	r0, r0, r8, ror sl

0800e398 <NetworkParams::callbackFunction(char const*)>:
 800e398:	b530      	push	{r4, r5, lr}
 800e39a:	460d      	mov	r5, r1
 800e39c:	b085      	sub	sp, #20
 800e39e:	4604      	mov	r4, r0
 800e3a0:	494d      	ldr	r1, [pc, #308]	@ (800e4d8 <NetworkParams::callbackFunction(char const*)+0x140>)
 800e3a2:	f10d 0207 	add.w	r2, sp, #7
 800e3a6:	4628      	mov	r0, r5
 800e3a8:	f001 fdef 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e3ac:	b978      	cbnz	r0, 800e3ce <NetworkParams::callbackFunction(char const*)+0x36>
 800e3ae:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e3b2:	6823      	ldr	r3, [r4, #0]
 800e3b4:	b142      	cbz	r2, 800e3c8 <NetworkParams::callbackFunction(char const*)+0x30>
 800e3b6:	f023 0301 	bic.w	r3, r3, #1
 800e3ba:	3a00      	subs	r2, #0
 800e3bc:	bf18      	it	ne
 800e3be:	2201      	movne	r2, #1
 800e3c0:	6023      	str	r3, [r4, #0]
 800e3c2:	7522      	strb	r2, [r4, #20]
 800e3c4:	b005      	add	sp, #20
 800e3c6:	bd30      	pop	{r4, r5, pc}
 800e3c8:	f043 0301 	orr.w	r3, r3, #1
 800e3cc:	e7f5      	b.n	800e3ba <NetworkParams::callbackFunction(char const*)+0x22>
 800e3ce:	4943      	ldr	r1, [pc, #268]	@ (800e4dc <NetworkParams::callbackFunction(char const*)+0x144>)
 800e3d0:	f10d 0207 	add.w	r2, sp, #7
 800e3d4:	4628      	mov	r0, r5
 800e3d6:	f001 fdd8 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e3da:	b980      	cbnz	r0, 800e3fe <NetworkParams::callbackFunction(char const*)+0x66>
 800e3dc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800e3e0:	6823      	ldr	r3, [r4, #0]
 800e3e2:	1e51      	subs	r1, r2, #1
 800e3e4:	2904      	cmp	r1, #4
 800e3e6:	bf97      	itett	ls
 800e3e8:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 800e3ec:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 800e3f0:	6023      	strls	r3, [r4, #0]
 800e3f2:	f884 205d 	strbls.w	r2, [r4, #93]	@ 0x5d
 800e3f6:	bf84      	itt	hi
 800e3f8:	6023      	strhi	r3, [r4, #0]
 800e3fa:	f884 005d 	strbhi.w	r0, [r4, #93]	@ 0x5d
 800e3fe:	4938      	ldr	r1, [pc, #224]	@ (800e4e0 <NetworkParams::callbackFunction(char const*)+0x148>)
 800e400:	aa02      	add	r2, sp, #8
 800e402:	4628      	mov	r0, r5
 800e404:	f001 fd81 	bl	800ff0a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 800e408:	b9d8      	cbnz	r0, 800e442 <NetworkParams::callbackFunction(char const*)+0xaa>
 800e40a:	9a02      	ldr	r2, [sp, #8]
 800e40c:	6823      	ldr	r3, [r4, #0]
 800e40e:	b2d1      	uxtb	r1, r2
 800e410:	29ac      	cmp	r1, #172	@ 0xac
 800e412:	f3c2 2007 	ubfx	r0, r2, #8, #8
 800e416:	d007      	beq.n	800e428 <NetworkParams::callbackFunction(char const*)+0x90>
 800e418:	29c0      	cmp	r1, #192	@ 0xc0
 800e41a:	d00c      	beq.n	800e436 <NetworkParams::callbackFunction(char const*)+0x9e>
 800e41c:	290a      	cmp	r1, #10
 800e41e:	d006      	beq.n	800e42e <NetworkParams::callbackFunction(char const*)+0x96>
 800e420:	2902      	cmp	r1, #2
 800e422:	d004      	beq.n	800e42e <NetworkParams::callbackFunction(char const*)+0x96>
 800e424:	b11a      	cbz	r2, 800e42e <NetworkParams::callbackFunction(char const*)+0x96>
 800e426:	e008      	b.n	800e43a <NetworkParams::callbackFunction(char const*)+0xa2>
 800e428:	3810      	subs	r0, #16
 800e42a:	280f      	cmp	r0, #15
 800e42c:	d805      	bhi.n	800e43a <NetworkParams::callbackFunction(char const*)+0xa2>
 800e42e:	6062      	str	r2, [r4, #4]
 800e430:	f043 0302 	orr.w	r3, r3, #2
 800e434:	e003      	b.n	800e43e <NetworkParams::callbackFunction(char const*)+0xa6>
 800e436:	28a8      	cmp	r0, #168	@ 0xa8
 800e438:	d0f9      	beq.n	800e42e <NetworkParams::callbackFunction(char const*)+0x96>
 800e43a:	f023 0302 	bic.w	r3, r3, #2
 800e43e:	6023      	str	r3, [r4, #0]
 800e440:	e7c0      	b.n	800e3c4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800e442:	4928      	ldr	r1, [pc, #160]	@ (800e4e4 <NetworkParams::callbackFunction(char const*)+0x14c>)
 800e444:	aa02      	add	r2, sp, #8
 800e446:	4628      	mov	r0, r5
 800e448:	f001 fd5f 	bl	800ff0a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 800e44c:	b970      	cbnz	r0, 800e46c <NetworkParams::callbackFunction(char const*)+0xd4>
 800e44e:	9a02      	ldr	r2, [sp, #8]
 800e450:	6823      	ldr	r3, [r4, #0]
 800e452:	b142      	cbz	r2, 800e466 <NetworkParams::callbackFunction(char const*)+0xce>
 800e454:	ba11      	rev	r1, r2
 800e456:	43c8      	mvns	r0, r1
 800e458:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 800e45c:	d103      	bne.n	800e466 <NetworkParams::callbackFunction(char const*)+0xce>
 800e45e:	60a2      	str	r2, [r4, #8]
 800e460:	f043 0304 	orr.w	r3, r3, #4
 800e464:	e7eb      	b.n	800e43e <NetworkParams::callbackFunction(char const*)+0xa6>
 800e466:	f023 0304 	bic.w	r3, r3, #4
 800e46a:	e7e8      	b.n	800e43e <NetworkParams::callbackFunction(char const*)+0xa6>
 800e46c:	491e      	ldr	r1, [pc, #120]	@ (800e4e8 <NetworkParams::callbackFunction(char const*)+0x150>)
 800e46e:	aa02      	add	r2, sp, #8
 800e470:	4628      	mov	r0, r5
 800e472:	f001 fd4a 	bl	800ff0a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 800e476:	b950      	cbnz	r0, 800e48e <NetworkParams::callbackFunction(char const*)+0xf6>
 800e478:	9a02      	ldr	r2, [sp, #8]
 800e47a:	6823      	ldr	r3, [r4, #0]
 800e47c:	b122      	cbz	r2, 800e488 <NetworkParams::callbackFunction(char const*)+0xf0>
 800e47e:	f043 0308 	orr.w	r3, r3, #8
 800e482:	6023      	str	r3, [r4, #0]
 800e484:	60e2      	str	r2, [r4, #12]
 800e486:	e79d      	b.n	800e3c4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800e488:	f023 0308 	bic.w	r3, r3, #8
 800e48c:	e7d7      	b.n	800e43e <NetworkParams::callbackFunction(char const*)+0xa6>
 800e48e:	233f      	movs	r3, #63	@ 0x3f
 800e490:	9303      	str	r3, [sp, #12]
 800e492:	4916      	ldr	r1, [pc, #88]	@ (800e4ec <NetworkParams::callbackFunction(char const*)+0x154>)
 800e494:	ab03      	add	r3, sp, #12
 800e496:	f104 0215 	add.w	r2, r4, #21
 800e49a:	4628      	mov	r0, r5
 800e49c:	f001 fd1c 	bl	800fed8 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800e4a0:	b930      	cbnz	r0, 800e4b0 <NetworkParams::callbackFunction(char const*)+0x118>
 800e4a2:	9b03      	ldr	r3, [sp, #12]
 800e4a4:	4423      	add	r3, r4
 800e4a6:	7558      	strb	r0, [r3, #21]
 800e4a8:	6823      	ldr	r3, [r4, #0]
 800e4aa:	f043 0320 	orr.w	r3, r3, #32
 800e4ae:	e7c6      	b.n	800e43e <NetworkParams::callbackFunction(char const*)+0xa6>
 800e4b0:	490f      	ldr	r1, [pc, #60]	@ (800e4f0 <NetworkParams::callbackFunction(char const*)+0x158>)
 800e4b2:	aa02      	add	r2, sp, #8
 800e4b4:	4628      	mov	r0, r5
 800e4b6:	f001 fd28 	bl	800ff0a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 800e4ba:	2800      	cmp	r0, #0
 800e4bc:	d182      	bne.n	800e3c4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800e4be:	9a02      	ldr	r2, [sp, #8]
 800e4c0:	6823      	ldr	r3, [r4, #0]
 800e4c2:	b12a      	cbz	r2, 800e4d0 <NetworkParams::callbackFunction(char const*)+0x138>
 800e4c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800e4c8:	6023      	str	r3, [r4, #0]
 800e4ca:	f8c4 2055 	str.w	r2, [r4, #85]	@ 0x55
 800e4ce:	e779      	b.n	800e3c4 <NetworkParams::callbackFunction(char const*)+0x2c>
 800e4d0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800e4d4:	e7f8      	b.n	800e4c8 <NetworkParams::callbackFunction(char const*)+0x130>
 800e4d6:	bf00      	nop
 800e4d8:	08017171 	stmdaeq	r1, {r0, r4, r5, r6, r8, ip, sp, lr}
 800e4dc:	08017161 	stmdaeq	r1, {r0, r5, r6, r8, ip, sp, lr}
 800e4e0:	08017156 	stmdaeq	r1, {r1, r2, r4, r6, r8, ip, sp, lr}
 800e4e4:	0801714d 	stmdaeq	r1, {r0, r2, r3, r6, r8, ip, sp, lr}
 800e4e8:	0801713d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, ip, sp, lr}
 800e4ec:	08017134 	stmdaeq	r1, {r2, r4, r5, r8, ip, sp, lr}
 800e4f0:	08017129 	stmdaeq	r1, {r0, r3, r5, r8, ip, sp, lr}

0800e4f4 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800e4f4:	f7ff bf50 	b.w	800e398 <NetworkParams::callbackFunction(char const*)>

0800e4f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
 800e4f8:	b570      	push	{r4, r5, r6, lr}
 800e4fa:	4604      	mov	r4, r0
 800e4fc:	b086      	sub	sp, #24
 800e4fe:	4615      	mov	r5, r2
 800e500:	461e      	mov	r6, r3
 800e502:	2900      	cmp	r1, #0
 800e504:	d046      	beq.n	800e594 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 800e506:	225e      	movs	r2, #94	@ 0x5e
 800e508:	f004 feb7 	bl	801327a <memmove>
 800e50c:	462a      	mov	r2, r5
 800e50e:	4d76      	ldr	r5, [pc, #472]	@ (800e6e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>)
 800e510:	4976      	ldr	r1, [pc, #472]	@ (800e6ec <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f4>)
 800e512:	4633      	mov	r3, r6
 800e514:	a803      	add	r0, sp, #12
 800e516:	f001 fbcf 	bl	800fcb8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800e51a:	692a      	ldr	r2, [r5, #16]
 800e51c:	4974      	ldr	r1, [pc, #464]	@ (800e6f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>)
 800e51e:	2300      	movs	r3, #0
 800e520:	a803      	add	r0, sp, #12
 800e522:	f001 fc0b 	bl	800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800e526:	6823      	ldr	r3, [r4, #0]
 800e528:	0799      	lsls	r1, r3, #30
 800e52a:	bf5c      	itt	pl
 800e52c:	682a      	ldrpl	r2, [r5, #0]
 800e52e:	6062      	strpl	r2, [r4, #4]
 800e530:	075a      	lsls	r2, r3, #29
 800e532:	bf5c      	itt	pl
 800e534:	686a      	ldrpl	r2, [r5, #4]
 800e536:	60a2      	strpl	r2, [r4, #8]
 800e538:	071e      	lsls	r6, r3, #28
 800e53a:	bf5c      	itt	pl
 800e53c:	68aa      	ldrpl	r2, [r5, #8]
 800e53e:	60e2      	strpl	r2, [r4, #12]
 800e540:	0698      	lsls	r0, r3, #26
 800e542:	d412      	bmi.n	800e56a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x72>
 800e544:	4b6b      	ldr	r3, [pc, #428]	@ (800e6f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1fc>)
 800e546:	681b      	ldr	r3, [r3, #0]
 800e548:	f104 0015 	add.w	r0, r4, #21
 800e54c:	3315      	adds	r3, #21
 800e54e:	223f      	movs	r2, #63	@ 0x3f
 800e550:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e554:	b119      	cbz	r1, 800e55e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x66>
 800e556:	3a01      	subs	r2, #1
 800e558:	f800 1b01 	strb.w	r1, [r0], #1
 800e55c:	d1f8      	bne.n	800e550 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x58>
 800e55e:	2100      	movs	r1, #0
 800e560:	f004 fea2 	bl	80132a8 <memset>
 800e564:	2300      	movs	r3, #0
 800e566:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800e56a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e56e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e572:	7d23      	ldrb	r3, [r4, #20]
 800e574:	6821      	ldr	r1, [r4, #0]
 800e576:	42aa      	cmp	r2, r5
 800e578:	d21d      	bcs.n	800e5b6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800e57a:	9803      	ldr	r0, [sp, #12]
 800e57c:	07c9      	lsls	r1, r1, #31
 800e57e:	4410      	add	r0, r2
 800e580:	eba5 0502 	sub.w	r5, r5, r2
 800e584:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e588:	d407      	bmi.n	800e59a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 800e58a:	b93a      	cbnz	r2, 800e59c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
 800e58c:	9300      	str	r3, [sp, #0]
 800e58e:	4a5a      	ldr	r2, [pc, #360]	@ (800e6f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 800e590:	4b5a      	ldr	r3, [pc, #360]	@ (800e6fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 800e592:	e006      	b.n	800e5a2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 800e594:	f7ff feb4 	bl	800e300 <NetworkParamsStore::Copy(networkparams::Params*)>
 800e598:	e7b8      	b.n	800e50c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800e59a:	b312      	cbz	r2, 800e5e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 800e59c:	9300      	str	r3, [sp, #0]
 800e59e:	4a58      	ldr	r2, [pc, #352]	@ (800e700 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 800e5a0:	4b56      	ldr	r3, [pc, #344]	@ (800e6fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 800e5a2:	4629      	mov	r1, r5
 800e5a4:	f005 f98c 	bl	80138c0 <snprintf>
 800e5a8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e5ac:	4285      	cmp	r5, r0
 800e5ae:	bfa4      	itt	ge
 800e5b0:	181b      	addge	r3, r3, r0
 800e5b2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e5b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e5ba:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e5be:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 800e5c2:	6821      	ldr	r1, [r4, #0]
 800e5c4:	42aa      	cmp	r2, r5
 800e5c6:	d21f      	bcs.n	800e608 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
 800e5c8:	9803      	ldr	r0, [sp, #12]
 800e5ca:	05ce      	lsls	r6, r1, #23
 800e5cc:	4410      	add	r0, r2
 800e5ce:	eba5 0502 	sub.w	r5, r5, r2
 800e5d2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e5d6:	d408      	bmi.n	800e5ea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf2>
 800e5d8:	b94a      	cbnz	r2, 800e5ee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf6>
 800e5da:	9300      	str	r3, [sp, #0]
 800e5dc:	4a46      	ldr	r2, [pc, #280]	@ (800e6f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 800e5de:	4b49      	ldr	r3, [pc, #292]	@ (800e704 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 800e5e0:	e008      	b.n	800e5f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 800e5e2:	9300      	str	r3, [sp, #0]
 800e5e4:	4a48      	ldr	r2, [pc, #288]	@ (800e708 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 800e5e6:	4b45      	ldr	r3, [pc, #276]	@ (800e6fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 800e5e8:	e7db      	b.n	800e5a2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 800e5ea:	2a00      	cmp	r2, #0
 800e5ec:	d03e      	beq.n	800e66c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x174>
 800e5ee:	9300      	str	r3, [sp, #0]
 800e5f0:	4a43      	ldr	r2, [pc, #268]	@ (800e700 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 800e5f2:	4b44      	ldr	r3, [pc, #272]	@ (800e704 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 800e5f4:	4629      	mov	r1, r5
 800e5f6:	f005 f963 	bl	80138c0 <snprintf>
 800e5fa:	4285      	cmp	r5, r0
 800e5fc:	bfa2      	ittt	ge
 800e5fe:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e602:	18c0      	addge	r0, r0, r3
 800e604:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e608:	4940      	ldr	r1, [pc, #256]	@ (800e70c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 800e60a:	a803      	add	r0, sp, #12
 800e60c:	f001 fc10 	bl	800fe30 <PropertiesBuilder::AddComment(char const*)>
 800e610:	6823      	ldr	r3, [r4, #0]
 800e612:	6862      	ldr	r2, [r4, #4]
 800e614:	493e      	ldr	r1, [pc, #248]	@ (800e710 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 800e616:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800e61a:	a803      	add	r0, sp, #12
 800e61c:	f001 fb8e 	bl	800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800e620:	6823      	ldr	r3, [r4, #0]
 800e622:	68a2      	ldr	r2, [r4, #8]
 800e624:	493b      	ldr	r1, [pc, #236]	@ (800e714 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 800e626:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800e62a:	a803      	add	r0, sp, #12
 800e62c:	f001 fb86 	bl	800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800e630:	6823      	ldr	r3, [r4, #0]
 800e632:	68e2      	ldr	r2, [r4, #12]
 800e634:	4938      	ldr	r1, [pc, #224]	@ (800e718 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 800e636:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800e63a:	a803      	add	r0, sp, #12
 800e63c:	f001 fb7e 	bl	800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800e640:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e644:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e648:	6821      	ldr	r1, [r4, #0]
 800e64a:	42aa      	cmp	r2, r5
 800e64c:	d221      	bcs.n	800e692 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x19a>
 800e64e:	9803      	ldr	r0, [sp, #12]
 800e650:	0689      	lsls	r1, r1, #26
 800e652:	4410      	add	r0, r2
 800e654:	eba5 0502 	sub.w	r5, r5, r2
 800e658:	f104 0315 	add.w	r3, r4, #21
 800e65c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e660:	d408      	bmi.n	800e674 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
 800e662:	b94a      	cbnz	r2, 800e678 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x180>
 800e664:	9300      	str	r3, [sp, #0]
 800e666:	4a2d      	ldr	r2, [pc, #180]	@ (800e71c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 800e668:	4b2d      	ldr	r3, [pc, #180]	@ (800e720 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 800e66a:	e008      	b.n	800e67e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 800e66c:	9300      	str	r3, [sp, #0]
 800e66e:	4a26      	ldr	r2, [pc, #152]	@ (800e708 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 800e670:	4b24      	ldr	r3, [pc, #144]	@ (800e704 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 800e672:	e7bf      	b.n	800e5f4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 800e674:	2a00      	cmp	r2, #0
 800e676:	d032      	beq.n	800e6de <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1e6>
 800e678:	9300      	str	r3, [sp, #0]
 800e67a:	4a2a      	ldr	r2, [pc, #168]	@ (800e724 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 800e67c:	4b28      	ldr	r3, [pc, #160]	@ (800e720 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 800e67e:	4629      	mov	r1, r5
 800e680:	f005 f91e 	bl	80138c0 <snprintf>
 800e684:	4285      	cmp	r5, r0
 800e686:	bfa2      	ittt	ge
 800e688:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e68c:	18c0      	addge	r0, r0, r3
 800e68e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e692:	4925      	ldr	r1, [pc, #148]	@ (800e728 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 800e694:	a803      	add	r0, sp, #12
 800e696:	f001 fbcb 	bl	800fe30 <PropertiesBuilder::AddComment(char const*)>
 800e69a:	6823      	ldr	r3, [r4, #0]
 800e69c:	f8d4 2055 	ldr.w	r2, [r4, #85]	@ 0x55
 800e6a0:	4922      	ldr	r1, [pc, #136]	@ (800e72c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800e6a2:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800e6a6:	a803      	add	r0, sp, #12
 800e6a8:	f001 fb48 	bl	800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800e6ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e6b0:	b17b      	cbz	r3, 800e6d2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1da>
 800e6b2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e6b6:	9b03      	ldr	r3, [sp, #12]
 800e6b8:	4413      	add	r3, r2
 800e6ba:	227d      	movs	r2, #125	@ 0x7d
 800e6bc:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e6c0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6c4:	9903      	ldr	r1, [sp, #12]
 800e6c6:	54ca      	strb	r2, [r1, r3]
 800e6c8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6cc:	3301      	adds	r3, #1
 800e6ce:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e6d2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e6d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e6d8:	601a      	str	r2, [r3, #0]
 800e6da:	b006      	add	sp, #24
 800e6dc:	bd70      	pop	{r4, r5, r6, pc}
 800e6de:	9300      	str	r3, [sp, #0]
 800e6e0:	4a13      	ldr	r2, [pc, #76]	@ (800e730 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 800e6e2:	4b0f      	ldr	r3, [pc, #60]	@ (800e720 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 800e6e4:	e7cb      	b.n	800e67e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 800e6e6:	bf00      	nop
 800e6e8:	200009cc 	andcs	r0, r0, ip, asr #19
 800e6ec:	0801717a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp, lr}
 800e6f0:	08014522 	stmdaeq	r1, {r1, r5, r8, sl, lr}
 800e6f4:	200009ac 	andcs	r0, r0, ip, lsr #19
 800e6f8:	0801409e 	stmdaeq	r1, {r1, r2, r3, r4, r7, lr}
 800e6fc:	08017171 	stmdaeq	r1, {r0, r4, r5, r6, r8, ip, sp, lr}
 800e700:	08014095 	stmdaeq	r1, {r0, r2, r4, r7, lr}
 800e704:	08017161 	stmdaeq	r1, {r0, r5, r6, r8, ip, sp, lr}
 800e708:	0801409f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, lr}
 800e70c:	0801452f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, lr}
 800e710:	08017156 	stmdaeq	r1, {r1, r2, r4, r6, r8, ip, sp, lr}
 800e714:	0801714d 	stmdaeq	r1, {r0, r2, r3, r6, r8, ip, sp, lr}
 800e718:	0801713d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, ip, sp, lr}
 800e71c:	080140b1 	stmdaeq	r1, {r0, r4, r5, r7, lr}
 800e720:	08017134 	stmdaeq	r1, {r2, r4, r5, r8, ip, sp, lr}
 800e724:	080140a6 	stmdaeq	r1, {r1, r2, r5, r7, lr}
 800e728:	08014539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, lr}
 800e72c:	08017129 	stmdaeq	r1, {r0, r3, r5, r8, ip, sp, lr}
 800e730:	080140b2 	stmdaeq	r1, {r1, r4, r5, r7, lr}

0800e734 <net::phy_customized_led()>:
 800e734:	4770      	bx	lr

0800e736 <net::phy_customized_timing()>:
 800e736:	4770      	bx	lr

0800e738 <emac_adjust_link(net::PhyStatus)>:
 800e738:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e73a:	ac04      	add	r4, sp, #16
 800e73c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 800e740:	460c      	mov	r4, r1
 800e742:	4b14      	ldr	r3, [pc, #80]	@ (800e794 <emac_adjust_link(net::PhyStatus)+0x5c>)
 800e744:	4914      	ldr	r1, [pc, #80]	@ (800e798 <emac_adjust_link(net::PhyStatus)+0x60>)
 800e746:	2a00      	cmp	r2, #0
 800e748:	4615      	mov	r5, r2
 800e74a:	4606      	mov	r6, r0
 800e74c:	bf14      	ite	ne
 800e74e:	2264      	movne	r2, #100	@ 0x64
 800e750:	220a      	moveq	r2, #10
 800e752:	4812      	ldr	r0, [pc, #72]	@ (800e79c <emac_adjust_link(net::PhyStatus)+0x64>)
 800e754:	2c00      	cmp	r4, #0
 800e756:	bf18      	it	ne
 800e758:	460b      	movne	r3, r1
 800e75a:	4911      	ldr	r1, [pc, #68]	@ (800e7a0 <emac_adjust_link(net::PhyStatus)+0x68>)
 800e75c:	2e01      	cmp	r6, #1
 800e75e:	bf08      	it	eq
 800e760:	4601      	moveq	r1, r0
 800e762:	4810      	ldr	r0, [pc, #64]	@ (800e7a4 <emac_adjust_link(net::PhyStatus)+0x6c>)
 800e764:	f005 f884 	bl	8013870 <printf>
 800e768:	2d01      	cmp	r5, #1
 800e76a:	d10d      	bne.n	800e788 <emac_adjust_link(net::PhyStatus)+0x50>
 800e76c:	2c01      	cmp	r4, #1
 800e76e:	bf14      	ite	ne
 800e770:	f44f 4080 	movne.w	r0, #16384	@ 0x4000
 800e774:	f44f 4090 	moveq.w	r0, #18432	@ 0x4800
 800e778:	2210      	movs	r2, #16
 800e77a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800e77e:	b004      	add	sp, #16
 800e780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e784:	f002 bfde 	b.w	8011744 <enet_init>
 800e788:	1e63      	subs	r3, r4, #1
 800e78a:	4258      	negs	r0, r3
 800e78c:	4158      	adcs	r0, r3
 800e78e:	02c0      	lsls	r0, r0, #11
 800e790:	e7f2      	b.n	800e778 <emac_adjust_link(net::PhyStatus)+0x40>
 800e792:	bf00      	nop
 800e794:	08014571 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, lr}
 800e798:	08014576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, lr}
 800e79c:	08014569 	stmdaeq	r1, {r0, r3, r5, r6, r8, sl, lr}
 800e7a0:	0801456c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, lr}
 800e7a4:	0801457b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, lr}

0800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
 800e7a8:	b508      	push	{r3, lr}
 800e7aa:	4613      	mov	r3, r2
 800e7ac:	b28a      	uxth	r2, r1
 800e7ae:	b281      	uxth	r1, r0
 800e7b0:	2000      	movs	r0, #0
 800e7b2:	f002 ff9d 	bl	80116f0 <enet_phy_write_read>
 800e7b6:	1e43      	subs	r3, r0, #1
 800e7b8:	4258      	negs	r0, r3
 800e7ba:	4158      	adcs	r0, r3
 800e7bc:	bd08      	pop	{r3, pc}

0800e7be <net::phy_write(unsigned long, unsigned long, unsigned short)>:
 800e7be:	b507      	push	{r0, r1, r2, lr}
 800e7c0:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e7c4:	f10d 0306 	add.w	r3, sp, #6
 800e7c8:	b28a      	uxth	r2, r1
 800e7ca:	b281      	uxth	r1, r0
 800e7cc:	2002      	movs	r0, #2
 800e7ce:	f002 ff8f 	bl	80116f0 <enet_phy_write_read>
 800e7d2:	1e43      	subs	r3, r0, #1
 800e7d4:	4258      	negs	r0, r3
 800e7d6:	4158      	adcs	r0, r3
 800e7d8:	b003      	add	sp, #12
 800e7da:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e7e0 <net::phy_config(unsigned long)>:
 800e7e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e7e2:	4e28      	ldr	r6, [pc, #160]	@ (800e884 <net::phy_config(unsigned long)+0xa4>)
 800e7e4:	4605      	mov	r5, r0
 800e7e6:	2001      	movs	r0, #1
 800e7e8:	6934      	ldr	r4, [r6, #16]
 800e7ea:	f003 fa7f 	bl	8011cec <rcu_clock_freq_get>
 800e7ee:	4b26      	ldr	r3, [pc, #152]	@ (800e888 <net::phy_config(unsigned long)+0xa8>)
 800e7f0:	4a26      	ldr	r2, [pc, #152]	@ (800e88c <net::phy_config(unsigned long)+0xac>)
 800e7f2:	4403      	add	r3, r0
 800e7f4:	4293      	cmp	r3, r2
 800e7f6:	f024 041c 	bic.w	r4, r4, #28
 800e7fa:	d216      	bcs.n	800e82a <net::phy_config(unsigned long)+0x4a>
 800e7fc:	f044 0408 	orr.w	r4, r4, #8
 800e800:	6134      	str	r4, [r6, #16]
 800e802:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800e806:	2100      	movs	r1, #0
 800e808:	4628      	mov	r0, r5
 800e80a:	f7ff ffd8 	bl	800e7be <net::phy_write(unsigned long, unsigned long, unsigned short)>
 800e80e:	b330      	cbz	r0, 800e85e <net::phy_config(unsigned long)+0x7e>
 800e810:	4c1f      	ldr	r4, [pc, #124]	@ (800e890 <net::phy_config(unsigned long)+0xb0>)
 800e812:	6826      	ldr	r6, [r4, #0]
 800e814:	6823      	ldr	r3, [r4, #0]
 800e816:	1b9b      	subs	r3, r3, r6
 800e818:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800e81c:	d325      	bcc.n	800e86a <net::phy_config(unsigned long)+0x8a>
 800e81e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e822:	43c0      	mvns	r0, r0
 800e824:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800e828:	e01a      	b.n	800e860 <net::phy_config(unsigned long)+0x80>
 800e82a:	4b1a      	ldr	r3, [pc, #104]	@ (800e894 <net::phy_config(unsigned long)+0xb4>)
 800e82c:	4a1a      	ldr	r2, [pc, #104]	@ (800e898 <net::phy_config(unsigned long)+0xb8>)
 800e82e:	4403      	add	r3, r0
 800e830:	4293      	cmp	r3, r2
 800e832:	d802      	bhi.n	800e83a <net::phy_config(unsigned long)+0x5a>
 800e834:	f044 040c 	orr.w	r4, r4, #12
 800e838:	e7e2      	b.n	800e800 <net::phy_config(unsigned long)+0x20>
 800e83a:	4b18      	ldr	r3, [pc, #96]	@ (800e89c <net::phy_config(unsigned long)+0xbc>)
 800e83c:	4a18      	ldr	r2, [pc, #96]	@ (800e8a0 <net::phy_config(unsigned long)+0xc0>)
 800e83e:	4403      	add	r3, r0
 800e840:	4293      	cmp	r3, r2
 800e842:	d3dd      	bcc.n	800e800 <net::phy_config(unsigned long)+0x20>
 800e844:	4b17      	ldr	r3, [pc, #92]	@ (800e8a4 <net::phy_config(unsigned long)+0xc4>)
 800e846:	4a18      	ldr	r2, [pc, #96]	@ (800e8a8 <net::phy_config(unsigned long)+0xc8>)
 800e848:	4403      	add	r3, r0
 800e84a:	4293      	cmp	r3, r2
 800e84c:	d802      	bhi.n	800e854 <net::phy_config(unsigned long)+0x74>
 800e84e:	f044 0404 	orr.w	r4, r4, #4
 800e852:	e7d5      	b.n	800e800 <net::phy_config(unsigned long)+0x20>
 800e854:	4b15      	ldr	r3, [pc, #84]	@ (800e8ac <net::phy_config(unsigned long)+0xcc>)
 800e856:	4a16      	ldr	r2, [pc, #88]	@ (800e8b0 <net::phy_config(unsigned long)+0xd0>)
 800e858:	4403      	add	r3, r0
 800e85a:	4293      	cmp	r3, r2
 800e85c:	d902      	bls.n	800e864 <net::phy_config(unsigned long)+0x84>
 800e85e:	2000      	movs	r0, #0
 800e860:	b002      	add	sp, #8
 800e862:	bd70      	pop	{r4, r5, r6, pc}
 800e864:	f044 0410 	orr.w	r4, r4, #16
 800e868:	e7ca      	b.n	800e800 <net::phy_config(unsigned long)+0x20>
 800e86a:	f10d 0206 	add.w	r2, sp, #6
 800e86e:	2100      	movs	r1, #0
 800e870:	4628      	mov	r0, r5
 800e872:	f7ff ff99 	bl	800e7a8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 800e876:	2800      	cmp	r0, #0
 800e878:	d0f1      	beq.n	800e85e <net::phy_config(unsigned long)+0x7e>
 800e87a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800e87e:	2b00      	cmp	r3, #0
 800e880:	dbc8      	blt.n	800e814 <net::phy_config(unsigned long)+0x34>
 800e882:	e7ed      	b.n	800e860 <net::phy_config(unsigned long)+0x80>
 800e884:	40028000 	andmi	r8, r2, r0
 800e888:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 800e88c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800e890:	20004830 	andcs	r4, r0, r0, lsr r8
 800e894:	fde9f140 	stc2l	1, cr15, [r9, #256]!	@ 0x100
 800e898:	017d783f 	cmneq	sp, pc, lsr r8
 800e89c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	@ <UNPREDICTABLE>
 800e8a0:	02625a00 	rsbeq	r5, r2, #0, 20
 800e8a4:	fa0a1f00 	blx	82964ac <_sidata+0x27ee30>
 800e8a8:	02faf07f 	rscseq	pc, sl, #127	@ 0x7f
 800e8ac:	f70f2e80 			@ <UNDEFINED> instruction: 0xf70f2e80
 800e8b0:	055d4a80 	ldrbeq	r4, [sp, #-2688]	@ 0xfffff580

0800e8b4 <enet_gpio_config()>:
 800e8b4:	b510      	push	{r4, lr}
 800e8b6:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 800e8ba:	f003 f9cd 	bl	8011c58 <rcu_periph_clock_enable>
 800e8be:	f640 4001 	movw	r0, #3073	@ 0xc01
 800e8c2:	4c68      	ldr	r4, [pc, #416]	@ (800ea64 <enet_gpio_config()+0x1b0>)
 800e8c4:	f003 f9c8 	bl	8011c58 <rcu_periph_clock_enable>
 800e8c8:	f640 4002 	movw	r0, #3074	@ 0xc02
 800e8cc:	f003 f9c4 	bl	8011c58 <rcu_periph_clock_enable>
 800e8d0:	f241 100e 	movw	r0, #4366	@ 0x110e
 800e8d4:	f003 f9c0 	bl	8011c58 <rcu_periph_clock_enable>
 800e8d8:	4620      	mov	r0, r4
 800e8da:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800e8de:	2100      	movs	r1, #0
 800e8e0:	f003 f976 	bl	8011bd0 <gpio_af_set>
 800e8e4:	4620      	mov	r0, r4
 800e8e6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e8ea:	2200      	movs	r2, #0
 800e8ec:	2102      	movs	r1, #2
 800e8ee:	f003 f931 	bl	8011b54 <gpio_mode_set>
 800e8f2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e8f6:	2203      	movs	r2, #3
 800e8f8:	4620      	mov	r0, r4
 800e8fa:	2100      	movs	r1, #0
 800e8fc:	f003 f94c 	bl	8011b98 <gpio_output_options_set>
 800e900:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 800e904:	f44f 00c0 	mov.w	r0, #6291456	@ 0x600000
 800e908:	f003 f9c6 	bl	8011c98 <rcu_ckout0_config>
 800e90c:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 800e910:	f003 fc72 	bl	80121f8 <syscfg_enet_phy_interface_config>
 800e914:	2302      	movs	r3, #2
 800e916:	4619      	mov	r1, r3
 800e918:	4620      	mov	r0, r4
 800e91a:	2200      	movs	r2, #0
 800e91c:	f003 f91a 	bl	8011b54 <gpio_mode_set>
 800e920:	4620      	mov	r0, r4
 800e922:	2302      	movs	r3, #2
 800e924:	2203      	movs	r2, #3
 800e926:	2100      	movs	r1, #0
 800e928:	f003 f936 	bl	8011b98 <gpio_output_options_set>
 800e92c:	4620      	mov	r0, r4
 800e92e:	2304      	movs	r3, #4
 800e930:	2200      	movs	r2, #0
 800e932:	2102      	movs	r1, #2
 800e934:	f003 f90e 	bl	8011b54 <gpio_mode_set>
 800e938:	4620      	mov	r0, r4
 800e93a:	2304      	movs	r3, #4
 800e93c:	2203      	movs	r2, #3
 800e93e:	2100      	movs	r1, #0
 800e940:	f003 f92a 	bl	8011b98 <gpio_output_options_set>
 800e944:	4620      	mov	r0, r4
 800e946:	2380      	movs	r3, #128	@ 0x80
 800e948:	2200      	movs	r2, #0
 800e94a:	2102      	movs	r1, #2
 800e94c:	f003 f902 	bl	8011b54 <gpio_mode_set>
 800e950:	2380      	movs	r3, #128	@ 0x80
 800e952:	4620      	mov	r0, r4
 800e954:	2203      	movs	r2, #3
 800e956:	2100      	movs	r1, #0
 800e958:	f003 f91e 	bl	8011b98 <gpio_output_options_set>
 800e95c:	4620      	mov	r0, r4
 800e95e:	2202      	movs	r2, #2
 800e960:	210b      	movs	r1, #11
 800e962:	f003 f935 	bl	8011bd0 <gpio_af_set>
 800e966:	4620      	mov	r0, r4
 800e968:	2204      	movs	r2, #4
 800e96a:	210b      	movs	r1, #11
 800e96c:	f003 f930 	bl	8011bd0 <gpio_af_set>
 800e970:	4620      	mov	r0, r4
 800e972:	2280      	movs	r2, #128	@ 0x80
 800e974:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800e978:	210b      	movs	r1, #11
 800e97a:	f003 f929 	bl	8011bd0 <gpio_af_set>
 800e97e:	4620      	mov	r0, r4
 800e980:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e984:	2200      	movs	r2, #0
 800e986:	2102      	movs	r1, #2
 800e988:	f003 f8e4 	bl	8011b54 <gpio_mode_set>
 800e98c:	4620      	mov	r0, r4
 800e98e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e992:	2203      	movs	r2, #3
 800e994:	2100      	movs	r1, #0
 800e996:	f003 f8ff 	bl	8011b98 <gpio_output_options_set>
 800e99a:	4620      	mov	r0, r4
 800e99c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800e9a0:	2200      	movs	r2, #0
 800e9a2:	2102      	movs	r1, #2
 800e9a4:	f003 f8d6 	bl	8011b54 <gpio_mode_set>
 800e9a8:	4620      	mov	r0, r4
 800e9aa:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800e9ae:	2203      	movs	r2, #3
 800e9b0:	2100      	movs	r1, #0
 800e9b2:	f003 f8f1 	bl	8011b98 <gpio_output_options_set>
 800e9b6:	4620      	mov	r0, r4
 800e9b8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800e9bc:	2200      	movs	r2, #0
 800e9be:	2102      	movs	r1, #2
 800e9c0:	f003 f8c8 	bl	8011b54 <gpio_mode_set>
 800e9c4:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800e9c8:	4620      	mov	r0, r4
 800e9ca:	2203      	movs	r2, #3
 800e9cc:	2100      	movs	r1, #0
 800e9ce:	f003 f8e3 	bl	8011b98 <gpio_output_options_set>
 800e9d2:	4620      	mov	r0, r4
 800e9d4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800e9d8:	210b      	movs	r1, #11
 800e9da:	f003 f8f9 	bl	8011bd0 <gpio_af_set>
 800e9de:	4620      	mov	r0, r4
 800e9e0:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800e9e4:	210b      	movs	r1, #11
 800e9e6:	f003 f8f3 	bl	8011bd0 <gpio_af_set>
 800e9ea:	4620      	mov	r0, r4
 800e9ec:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800e9f0:	210b      	movs	r1, #11
 800e9f2:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800e9f6:	f003 f8eb 	bl	8011bd0 <gpio_af_set>
 800e9fa:	2302      	movs	r3, #2
 800e9fc:	4619      	mov	r1, r3
 800e9fe:	4620      	mov	r0, r4
 800ea00:	2200      	movs	r2, #0
 800ea02:	f003 f8a7 	bl	8011b54 <gpio_mode_set>
 800ea06:	4620      	mov	r0, r4
 800ea08:	2302      	movs	r3, #2
 800ea0a:	2203      	movs	r2, #3
 800ea0c:	2100      	movs	r1, #0
 800ea0e:	f003 f8c3 	bl	8011b98 <gpio_output_options_set>
 800ea12:	4620      	mov	r0, r4
 800ea14:	2310      	movs	r3, #16
 800ea16:	2200      	movs	r2, #0
 800ea18:	2102      	movs	r1, #2
 800ea1a:	f003 f89b 	bl	8011b54 <gpio_mode_set>
 800ea1e:	4620      	mov	r0, r4
 800ea20:	2310      	movs	r3, #16
 800ea22:	2203      	movs	r2, #3
 800ea24:	2100      	movs	r1, #0
 800ea26:	f003 f8b7 	bl	8011b98 <gpio_output_options_set>
 800ea2a:	4620      	mov	r0, r4
 800ea2c:	2320      	movs	r3, #32
 800ea2e:	2200      	movs	r2, #0
 800ea30:	2102      	movs	r1, #2
 800ea32:	f003 f88f 	bl	8011b54 <gpio_mode_set>
 800ea36:	2320      	movs	r3, #32
 800ea38:	4620      	mov	r0, r4
 800ea3a:	2203      	movs	r2, #3
 800ea3c:	2100      	movs	r1, #0
 800ea3e:	f003 f8ab 	bl	8011b98 <gpio_output_options_set>
 800ea42:	4620      	mov	r0, r4
 800ea44:	2202      	movs	r2, #2
 800ea46:	210b      	movs	r1, #11
 800ea48:	f003 f8c2 	bl	8011bd0 <gpio_af_set>
 800ea4c:	4620      	mov	r0, r4
 800ea4e:	2210      	movs	r2, #16
 800ea50:	210b      	movs	r1, #11
 800ea52:	f003 f8bd 	bl	8011bd0 <gpio_af_set>
 800ea56:	4620      	mov	r0, r4
 800ea58:	2220      	movs	r2, #32
 800ea5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea5e:	210b      	movs	r1, #11
 800ea60:	f003 b8b6 	b.w	8011bd0 <gpio_af_set>
 800ea64:	40020000 	andmi	r0, r2, r0

0800ea68 <emac_eth_recv(unsigned char**)>:
 800ea68:	b538      	push	{r3, r4, r5, lr}
 800ea6a:	4d07      	ldr	r5, [pc, #28]	@ (800ea88 <emac_eth_recv(unsigned char**)+0x20>)
 800ea6c:	4604      	mov	r4, r0
 800ea6e:	2102      	movs	r1, #2
 800ea70:	6828      	ldr	r0, [r5, #0]
 800ea72:	f002 ffe9 	bl	8011a48 <enet_desc_information_get>
 800ea76:	b118      	cbz	r0, 800ea80 <emac_eth_recv(unsigned char**)+0x18>
 800ea78:	682b      	ldr	r3, [r5, #0]
 800ea7a:	689b      	ldr	r3, [r3, #8]
 800ea7c:	6023      	str	r3, [r4, #0]
 800ea7e:	bd38      	pop	{r3, r4, r5, pc}
 800ea80:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800ea84:	bd38      	pop	{r3, r4, r5, pc}
 800ea86:	bf00      	nop
 800ea88:	20000bf8 	strdcs	r0, [r0], -r8

0800ea8c <emac_free_pkt()>:
 800ea8c:	490d      	ldr	r1, [pc, #52]	@ (800eac4 <emac_free_pkt()+0x38>)
 800ea8e:	e001      	b.n	800ea94 <emac_free_pkt()+0x8>
 800ea90:	f3bf 8f5f 	dmb	sy
 800ea94:	680b      	ldr	r3, [r1, #0]
 800ea96:	681a      	ldr	r2, [r3, #0]
 800ea98:	2a00      	cmp	r2, #0
 800ea9a:	dbf9      	blt.n	800ea90 <emac_free_pkt()+0x4>
 800ea9c:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 800eaa0:	4a09      	ldr	r2, [pc, #36]	@ (800eac8 <emac_free_pkt()+0x3c>)
 800eaa2:	6018      	str	r0, [r3, #0]
 800eaa4:	6950      	ldr	r0, [r2, #20]
 800eaa6:	0600      	lsls	r0, r0, #24
 800eaa8:	d509      	bpl.n	800eabe <emac_free_pkt()+0x32>
 800eaaa:	b410      	push	{r4}
 800eaac:	2000      	movs	r0, #0
 800eaae:	2480      	movs	r4, #128	@ 0x80
 800eab0:	6154      	str	r4, [r2, #20]
 800eab2:	6090      	str	r0, [r2, #8]
 800eab4:	68db      	ldr	r3, [r3, #12]
 800eab6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eaba:	600b      	str	r3, [r1, #0]
 800eabc:	4770      	bx	lr
 800eabe:	68db      	ldr	r3, [r3, #12]
 800eac0:	600b      	str	r3, [r1, #0]
 800eac2:	4770      	bx	lr
 800eac4:	20000bf8 	strdcs	r0, [r0], -r8
 800eac8:	40029000 	andmi	r9, r2, r0

0800eacc <emac_eth_send(void*, unsigned long)>:
 800eacc:	b570      	push	{r4, r5, r6, lr}
 800eace:	4c20      	ldr	r4, [pc, #128]	@ (800eb50 <emac_eth_send(void*, unsigned long)+0x84>)
 800ead0:	e001      	b.n	800ead6 <emac_eth_send(void*, unsigned long)+0xa>
 800ead2:	f3bf 8f5f 	dmb	sy
 800ead6:	6823      	ldr	r3, [r4, #0]
 800ead8:	681a      	ldr	r2, [r3, #0]
 800eada:	2a00      	cmp	r2, #0
 800eadc:	dbf9      	blt.n	800ead2 <emac_eth_send(void*, unsigned long)+0x6>
 800eade:	689b      	ldr	r3, [r3, #8]
 800eae0:	ea43 0200 	orr.w	r2, r3, r0
 800eae4:	0792      	lsls	r2, r2, #30
 800eae6:	d01e      	beq.n	800eb26 <emac_eth_send(void*, unsigned long)+0x5a>
 800eae8:	460a      	mov	r2, r1
 800eaea:	eb00 0c02 	add.w	ip, r0, r2
 800eaee:	b12a      	cbz	r2, 800eafc <emac_eth_send(void*, unsigned long)+0x30>
 800eaf0:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eaf4:	f803 2b01 	strb.w	r2, [r3], #1
 800eaf8:	4584      	cmp	ip, r0
 800eafa:	d1f9      	bne.n	800eaf0 <emac_eth_send(void*, unsigned long)+0x24>
 800eafc:	6822      	ldr	r2, [r4, #0]
 800eafe:	4815      	ldr	r0, [pc, #84]	@ (800eb54 <emac_eth_send(void*, unsigned long)+0x88>)
 800eb00:	6813      	ldr	r3, [r2, #0]
 800eb02:	6051      	str	r1, [r2, #4]
 800eb04:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 800eb08:	6013      	str	r3, [r2, #0]
 800eb0a:	6943      	ldr	r3, [r0, #20]
 800eb0c:	6941      	ldr	r1, [r0, #20]
 800eb0e:	f003 0304 	and.w	r3, r3, #4
 800eb12:	f001 0120 	and.w	r1, r1, #32
 800eb16:	430b      	orrs	r3, r1
 800eb18:	d002      	beq.n	800eb20 <emac_eth_send(void*, unsigned long)+0x54>
 800eb1a:	2100      	movs	r1, #0
 800eb1c:	6143      	str	r3, [r0, #20]
 800eb1e:	6041      	str	r1, [r0, #4]
 800eb20:	68d3      	ldr	r3, [r2, #12]
 800eb22:	6023      	str	r3, [r4, #0]
 800eb24:	bd70      	pop	{r4, r5, r6, pc}
 800eb26:	2903      	cmp	r1, #3
 800eb28:	d9de      	bls.n	800eae8 <emac_eth_send(void*, unsigned long)+0x1c>
 800eb2a:	1f0e      	subs	r6, r1, #4
 800eb2c:	f026 0603 	bic.w	r6, r6, #3
 800eb30:	3604      	adds	r6, #4
 800eb32:	eb00 0c06 	add.w	ip, r0, r6
 800eb36:	eba3 0e00 	sub.w	lr, r3, r0
 800eb3a:	eb00 020e 	add.w	r2, r0, lr
 800eb3e:	f850 5b04 	ldr.w	r5, [r0], #4
 800eb42:	6015      	str	r5, [r2, #0]
 800eb44:	4560      	cmp	r0, ip
 800eb46:	d1f8      	bne.n	800eb3a <emac_eth_send(void*, unsigned long)+0x6e>
 800eb48:	4433      	add	r3, r6
 800eb4a:	f001 0203 	and.w	r2, r1, #3
 800eb4e:	e7cc      	b.n	800eaea <emac_eth_send(void*, unsigned long)+0x1e>
 800eb50:	20000bfc 	strdcs	r0, [r0], -ip
 800eb54:	40029000 	andmi	r9, r2, r0

0800eb58 <net::acd_start(net::acd::Acd*, net::ip_addr)>:
 800eb58:	2301      	movs	r3, #1
 800eb5a:	b510      	push	{r4, lr}
 800eb5c:	7103      	strb	r3, [r0, #4]
 800eb5e:	6001      	str	r1, [r0, #0]
 800eb60:	4604      	mov	r4, r0
 800eb62:	f004 fee3 	bl	801392c <random>
 800eb66:	230a      	movs	r3, #10
 800eb68:	fbb0 f2f3 	udiv	r2, r0, r3
 800eb6c:	fb02 0013 	mls	r0, r2, r3, r0
 800eb70:	4b11      	ldr	r3, [pc, #68]	@ (800ebb8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x60>)
 800eb72:	81a0      	strh	r0, [r4, #12]
 800eb74:	681b      	ldr	r3, [r3, #0]
 800eb76:	f8d3 00b0 	ldr.w	r0, [r3, #176]	@ 0xb0
 800eb7a:	2807      	cmp	r0, #7
 800eb7c:	d907      	bls.n	800eb8e <net::acd_start(net::acd::Acd*, net::ip_addr)+0x36>
 800eb7e:	480f      	ldr	r0, [pc, #60]	@ (800ebbc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x64>)
 800eb80:	f002 f9a0 	bl	8010ec4 <console_error>
 800eb84:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800eb88:	4b0d      	ldr	r3, [pc, #52]	@ (800ebc0 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x68>)
 800eb8a:	601a      	str	r2, [r3, #0]
 800eb8c:	bd10      	pop	{r4, pc}
 800eb8e:	4a0d      	ldr	r2, [pc, #52]	@ (800ebc4 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x6c>)
 800eb90:	6811      	ldr	r1, [r2, #0]
 800eb92:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 800eb96:	1c54      	adds	r4, r2, #1
 800eb98:	f8c3 40b4 	str.w	r4, [r3, #180]	@ 0xb4
 800eb9c:	1c44      	adds	r4, r0, #1
 800eb9e:	f8c3 40b0 	str.w	r4, [r3, #176]	@ 0xb0
 800eba2:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 800eba6:	3164      	adds	r1, #100	@ 0x64
 800eba8:	6319      	str	r1, [r3, #48]	@ 0x30
 800ebaa:	2164      	movs	r1, #100	@ 0x64
 800ebac:	e9c3 120d 	strd	r1, r2, [r3, #52]	@ 0x34
 800ebb0:	4905      	ldr	r1, [pc, #20]	@ (800ebc8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x70>)
 800ebb2:	63d9      	str	r1, [r3, #60]	@ 0x3c
 800ebb4:	e7e8      	b.n	800eb88 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x30>
 800ebb6:	bf00      	nop
 800ebb8:	20000b7c 	andcs	r0, r0, ip, ror fp
 800ebbc:	080144e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, lr}
 800ebc0:	200009f8 	strdcs	r0, [r0], -r8
 800ebc4:	20004830 	andcs	r4, r0, r0, lsr r8
 800ebc8:	0800ec25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, lr, pc}

0800ebcc <net::acd_stop(net::acd::Acd*)>:
 800ebcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ebce:	4e13      	ldr	r6, [pc, #76]	@ (800ec1c <net::acd_stop(net::acd::Acd*)+0x50>)
 800ebd0:	6832      	ldr	r2, [r6, #0]
 800ebd2:	2300      	movs	r3, #0
 800ebd4:	429a      	cmp	r2, r3
 800ebd6:	7103      	strb	r3, [r0, #4]
 800ebd8:	db1a      	blt.n	800ec10 <net::acd_stop(net::acd::Acd*)+0x44>
 800ebda:	4911      	ldr	r1, [pc, #68]	@ (800ec20 <net::acd_stop(net::acd::Acd*)+0x54>)
 800ebdc:	680d      	ldr	r5, [r1, #0]
 800ebde:	f8d5 40b0 	ldr.w	r4, [r5, #176]	@ 0xb0
 800ebe2:	f105 0138 	add.w	r1, r5, #56	@ 0x38
 800ebe6:	42a3      	cmp	r3, r4
 800ebe8:	d012      	beq.n	800ec10 <net::acd_stop(net::acd::Acd*)+0x44>
 800ebea:	0118      	lsls	r0, r3, #4
 800ebec:	580f      	ldr	r7, [r1, r0]
 800ebee:	42ba      	cmp	r2, r7
 800ebf0:	d112      	bne.n	800ec18 <net::acd_stop(net::acd::Acd*)+0x4c>
 800ebf2:	3c01      	subs	r4, #1
 800ebf4:	1ae2      	subs	r2, r4, r3
 800ebf6:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800ebfa:	0112      	lsls	r2, r2, #4
 800ebfc:	3030      	adds	r0, #48	@ 0x30
 800ebfe:	42a3      	cmp	r3, r4
 800ec00:	bf88      	it	hi
 800ec02:	2200      	movhi	r2, #0
 800ec04:	4429      	add	r1, r5
 800ec06:	4428      	add	r0, r5
 800ec08:	f004 fb37 	bl	801327a <memmove>
 800ec0c:	f8c5 40b0 	str.w	r4, [r5, #176]	@ 0xb0
 800ec10:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800ec14:	6033      	str	r3, [r6, #0]
 800ec16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec18:	3301      	adds	r3, #1
 800ec1a:	e7e4      	b.n	800ebe6 <net::acd_stop(net::acd::Acd*)+0x1a>
 800ec1c:	200009f8 	strdcs	r0, [r0], -r8
 800ec20:	20000b7c 	andcs	r0, r0, ip, ror fp

0800ec24 <net::acd_timer()>:
 800ec24:	b510      	push	{r4, lr}
 800ec26:	4b2b      	ldr	r3, [pc, #172]	@ (800ecd4 <net::acd_timer()+0xb0>)
 800ec28:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 800ec2a:	79a3      	ldrb	r3, [r4, #6]
 800ec2c:	b10b      	cbz	r3, 800ec32 <net::acd_timer()+0xe>
 800ec2e:	3b01      	subs	r3, #1
 800ec30:	71a3      	strb	r3, [r4, #6]
 800ec32:	89a3      	ldrh	r3, [r4, #12]
 800ec34:	b10b      	cbz	r3, 800ec3a <net::acd_timer()+0x16>
 800ec36:	3b01      	subs	r3, #1
 800ec38:	81a3      	strh	r3, [r4, #12]
 800ec3a:	7923      	ldrb	r3, [r4, #4]
 800ec3c:	2b04      	cmp	r3, #4
 800ec3e:	d805      	bhi.n	800ec4c <net::acd_timer()+0x28>
 800ec40:	2b02      	cmp	r3, #2
 800ec42:	d82b      	bhi.n	800ec9c <net::acd_timer()+0x78>
 800ec44:	3b01      	subs	r3, #1
 800ec46:	2b01      	cmp	r3, #1
 800ec48:	d90b      	bls.n	800ec62 <net::acd_timer()+0x3e>
 800ec4a:	bd10      	pop	{r4, pc}
 800ec4c:	2b07      	cmp	r3, #7
 800ec4e:	d1fc      	bne.n	800ec4a <net::acd_timer()+0x26>
 800ec50:	89a3      	ldrh	r3, [r4, #12]
 800ec52:	2b00      	cmp	r3, #0
 800ec54:	d1f9      	bne.n	800ec4a <net::acd_timer()+0x26>
 800ec56:	4620      	mov	r0, r4
 800ec58:	f7ff ffb8 	bl	800ebcc <net::acd_stop(net::acd::Acd*)>
 800ec5c:	68a3      	ldr	r3, [r4, #8]
 800ec5e:	2001      	movs	r0, #1
 800ec60:	e034      	b.n	800eccc <net::acd_timer()+0xa8>
 800ec62:	89a3      	ldrh	r3, [r4, #12]
 800ec64:	2b00      	cmp	r3, #0
 800ec66:	d1f0      	bne.n	800ec4a <net::acd_timer()+0x26>
 800ec68:	2302      	movs	r3, #2
 800ec6a:	7123      	strb	r3, [r4, #4]
 800ec6c:	6820      	ldr	r0, [r4, #0]
 800ec6e:	f000 f9df 	bl	800f030 <net::arp_acd_probe(net::ip_addr)>
 800ec72:	7963      	ldrb	r3, [r4, #5]
 800ec74:	3301      	adds	r3, #1
 800ec76:	b2db      	uxtb	r3, r3
 800ec78:	2b02      	cmp	r3, #2
 800ec7a:	7163      	strb	r3, [r4, #5]
 800ec7c:	d904      	bls.n	800ec88 <net::acd_timer()+0x64>
 800ec7e:	2303      	movs	r3, #3
 800ec80:	80a3      	strh	r3, [r4, #4]
 800ec82:	2314      	movs	r3, #20
 800ec84:	81a3      	strh	r3, [r4, #12]
 800ec86:	e7e0      	b.n	800ec4a <net::acd_timer()+0x26>
 800ec88:	f004 fe50 	bl	801392c <random>
 800ec8c:	230a      	movs	r3, #10
 800ec8e:	fbb0 f2f3 	udiv	r2, r0, r3
 800ec92:	fb02 0013 	mls	r0, r2, r3, r0
 800ec96:	4418      	add	r0, r3
 800ec98:	81a0      	strh	r0, [r4, #12]
 800ec9a:	e7d6      	b.n	800ec4a <net::acd_timer()+0x26>
 800ec9c:	89a3      	ldrh	r3, [r4, #12]
 800ec9e:	2b00      	cmp	r3, #0
 800eca0:	d1d3      	bne.n	800ec4a <net::acd_timer()+0x26>
 800eca2:	7963      	ldrb	r3, [r4, #5]
 800eca4:	b913      	cbnz	r3, 800ecac <net::acd_timer()+0x88>
 800eca6:	2204      	movs	r2, #4
 800eca8:	7122      	strb	r2, [r4, #4]
 800ecaa:	71e3      	strb	r3, [r4, #7]
 800ecac:	6820      	ldr	r0, [r4, #0]
 800ecae:	f000 f9d3 	bl	800f058 <net::arp_acd_send_announcement(net::ip_addr)>
 800ecb2:	2314      	movs	r3, #20
 800ecb4:	81a3      	strh	r3, [r4, #12]
 800ecb6:	7963      	ldrb	r3, [r4, #5]
 800ecb8:	3301      	adds	r3, #1
 800ecba:	b2db      	uxtb	r3, r3
 800ecbc:	2b01      	cmp	r3, #1
 800ecbe:	7163      	strb	r3, [r4, #5]
 800ecc0:	d9c3      	bls.n	800ec4a <net::acd_timer()+0x26>
 800ecc2:	2305      	movs	r3, #5
 800ecc4:	80a3      	strh	r3, [r4, #4]
 800ecc6:	2000      	movs	r0, #0
 800ecc8:	68a3      	ldr	r3, [r4, #8]
 800ecca:	81a0      	strh	r0, [r4, #12]
 800eccc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecd0:	4718      	bx	r3
 800ecd2:	bf00      	nop
 800ecd4:	200009cc 	andcs	r0, r0, ip, asr #19

0800ecd8 <net::acd_restart(net::acd::Acd*)>:
 800ecd8:	b510      	push	{r4, lr}
 800ecda:	79c3      	ldrb	r3, [r0, #7]
 800ecdc:	4604      	mov	r4, r0
 800ecde:	3301      	adds	r3, #1
 800ece0:	71c3      	strb	r3, [r0, #7]
 800ece2:	6883      	ldr	r3, [r0, #8]
 800ece4:	2002      	movs	r0, #2
 800ece6:	4798      	blx	r3
 800ece8:	79e3      	ldrb	r3, [r4, #7]
 800ecea:	2b09      	cmp	r3, #9
 800ecec:	d905      	bls.n	800ecfa <net::acd_restart(net::acd::Acd*)+0x22>
 800ecee:	2307      	movs	r3, #7
 800ecf0:	7123      	strb	r3, [r4, #4]
 800ecf2:	f44f 7316 	mov.w	r3, #600	@ 0x258
 800ecf6:	81a3      	strh	r3, [r4, #12]
 800ecf8:	bd10      	pop	{r4, pc}
 800ecfa:	4620      	mov	r0, r4
 800ecfc:	f7ff ff66 	bl	800ebcc <net::acd_stop(net::acd::Acd*)>
 800ed00:	68a3      	ldr	r3, [r4, #8]
 800ed02:	2001      	movs	r0, #1
 800ed04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed08:	4718      	bx	r3
	...

0800ed0c <net::acd_network_changed_link_down()>:
 800ed0c:	4b01      	ldr	r3, [pc, #4]	@ (800ed14 <net::acd_network_changed_link_down()+0x8>)
 800ed0e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800ed10:	f7ff bf5c 	b.w	800ebcc <net::acd_stop(net::acd::Acd*)>
 800ed14:	200009cc 	andcs	r0, r0, ip, asr #19

0800ed18 <net::acd_arp_reply(t_arp*)>:
 800ed18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed1c:	4e28      	ldr	r6, [pc, #160]	@ (800edc0 <net::acd_arp_reply(t_arp*)+0xa8>)
 800ed1e:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 800ed20:	792f      	ldrb	r7, [r5, #4]
 800ed22:	2f03      	cmp	r7, #3
 800ed24:	4604      	mov	r4, r0
 800ed26:	d802      	bhi.n	800ed2e <net::acd_arp_reply(t_arp*)+0x16>
 800ed28:	b9bf      	cbnz	r7, 800ed5a <net::acd_arp_reply(t_arp*)+0x42>
 800ed2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed2e:	1f3b      	subs	r3, r7, #4
 800ed30:	2b02      	cmp	r3, #2
 800ed32:	d8fa      	bhi.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed34:	301c      	adds	r0, #28
 800ed36:	f7fe fa69 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800ed3a:	682b      	ldr	r3, [r5, #0]
 800ed3c:	4298      	cmp	r0, r3
 800ed3e:	d1f4      	bne.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed40:	f104 0315 	add.w	r3, r4, #21
 800ed44:	3613      	adds	r6, #19
 800ed46:	341b      	adds	r4, #27
 800ed48:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ed4c:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800ed50:	4291      	cmp	r1, r2
 800ed52:	d121      	bne.n	800ed98 <net::acd_arp_reply(t_arp*)+0x80>
 800ed54:	42a3      	cmp	r3, r4
 800ed56:	d1f7      	bne.n	800ed48 <net::acd_arp_reply(t_arp*)+0x30>
 800ed58:	e7e7      	b.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed5a:	301c      	adds	r0, #28
 800ed5c:	f7fe fa56 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800ed60:	682f      	ldr	r7, [r5, #0]
 800ed62:	42b8      	cmp	r0, r7
 800ed64:	d013      	beq.n	800ed8e <net::acd_arp_reply(t_arp*)+0x76>
 800ed66:	2800      	cmp	r0, #0
 800ed68:	d0df      	beq.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed6a:	f104 0026 	add.w	r0, r4, #38	@ 0x26
 800ed6e:	f7fe fa4d 	bl	800d20c <net::memcpy_ip(unsigned char const*)>
 800ed72:	4287      	cmp	r7, r0
 800ed74:	d1d9      	bne.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed76:	f104 0315 	add.w	r3, r4, #21
 800ed7a:	3613      	adds	r6, #19
 800ed7c:	341b      	adds	r4, #27
 800ed7e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ed82:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800ed86:	4291      	cmp	r1, r2
 800ed88:	d1cf      	bne.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800ed8a:	42a3      	cmp	r3, r4
 800ed8c:	d1f7      	bne.n	800ed7e <net::acd_arp_reply(t_arp*)+0x66>
 800ed8e:	4628      	mov	r0, r5
 800ed90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ed94:	f7ff bfa0 	b.w	800ecd8 <net::acd_restart(net::acd::Acd*)>
 800ed98:	2f06      	cmp	r7, #6
 800ed9a:	d107      	bne.n	800edac <net::acd_arp_reply(t_arp*)+0x94>
 800ed9c:	4628      	mov	r0, r5
 800ed9e:	f7ff ff15 	bl	800ebcc <net::acd_stop(net::acd::Acd*)>
 800eda2:	68ab      	ldr	r3, [r5, #8]
 800eda4:	2002      	movs	r0, #2
 800eda6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800edaa:	4718      	bx	r3
 800edac:	79ab      	ldrb	r3, [r5, #6]
 800edae:	2b00      	cmp	r3, #0
 800edb0:	d1ed      	bne.n	800ed8e <net::acd_arp_reply(t_arp*)+0x76>
 800edb2:	6828      	ldr	r0, [r5, #0]
 800edb4:	f000 f950 	bl	800f058 <net::arp_acd_send_announcement(net::ip_addr)>
 800edb8:	2364      	movs	r3, #100	@ 0x64
 800edba:	71ab      	strb	r3, [r5, #6]
 800edbc:	e7b5      	b.n	800ed2a <net::acd_arp_reply(t_arp*)+0x12>
 800edbe:	bf00      	nop
 800edc0:	200009cc 	andcs	r0, r0, ip, asr #19

0800edc4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
 800edc4:	4b01      	ldr	r3, [pc, #4]	@ (800edcc <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x8>)
 800edc6:	6081      	str	r1, [r0, #8]
 800edc8:	6258      	str	r0, [r3, #36]	@ 0x24
 800edca:	4770      	bx	lr
 800edcc:	200009cc 	andcs	r0, r0, ip, asr #19

0800edd0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
 800edd0:	b320      	cbz	r0, 800ee1c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 800edd2:	b319      	cbz	r1, 800ee1c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 800edd4:	4b12      	ldr	r3, [pc, #72]	@ (800ee20 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x50>)
 800edd6:	b510      	push	{r4, lr}
 800edd8:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 800edda:	6823      	ldr	r3, [r4, #0]
 800eddc:	4283      	cmp	r3, r0
 800edde:	d119      	bne.n	800ee14 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 800ede0:	b29b      	uxth	r3, r3
 800ede2:	f64a 12fe 	movw	r2, #43518	@ 0xa9fe
 800ede6:	4293      	cmp	r3, r2
 800ede8:	d114      	bne.n	800ee14 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 800edea:	b289      	uxth	r1, r1
 800edec:	4299      	cmp	r1, r3
 800edee:	d011      	beq.n	800ee14 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 800edf0:	7923      	ldrb	r3, [r4, #4]
 800edf2:	2b05      	cmp	r3, #5
 800edf4:	d80c      	bhi.n	800ee10 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x40>
 800edf6:	2b03      	cmp	r3, #3
 800edf8:	d80d      	bhi.n	800ee16 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x46>
 800edfa:	3b01      	subs	r3, #1
 800edfc:	2b02      	cmp	r3, #2
 800edfe:	d809      	bhi.n	800ee14 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 800ee00:	4620      	mov	r0, r4
 800ee02:	f7ff fee3 	bl	800ebcc <net::acd_stop(net::acd::Acd*)>
 800ee06:	68a3      	ldr	r3, [r4, #8]
 800ee08:	2002      	movs	r0, #2
 800ee0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee0e:	4718      	bx	r3
 800ee10:	2b07      	cmp	r3, #7
 800ee12:	d0f5      	beq.n	800ee00 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x30>
 800ee14:	bd10      	pop	{r4, pc}
 800ee16:	2306      	movs	r3, #6
 800ee18:	7123      	strb	r3, [r4, #4]
 800ee1a:	e7fb      	b.n	800ee14 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 800ee1c:	4770      	bx	lr
 800ee1e:	bf00      	nop
 800ee20:	200009cc 	andcs	r0, r0, ip, asr #19

0800ee24 <net::arp_find_record(unsigned long, net::arp::Flags)>:
 800ee24:	4b17      	ldr	r3, [pc, #92]	@ (800ee84 <net::arp_find_record(unsigned long, net::arp::Flags)+0x60>)
 800ee26:	b570      	push	{r4, r5, r6, lr}
 800ee28:	f04f 0e00 	mov.w	lr, #0
 800ee2c:	4604      	mov	r4, r0
 800ee2e:	f503 7cc0 	add.w	ip, r3, #384	@ 0x180
 800ee32:	4676      	mov	r6, lr
 800ee34:	4675      	mov	r5, lr
 800ee36:	4670      	mov	r0, lr
 800ee38:	e004      	b.n	800ee44 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 800ee3a:	2a03      	cmp	r2, #3
 800ee3c:	d019      	beq.n	800ee72 <net::arp_find_record(unsigned long, net::arp::Flags)+0x4e>
 800ee3e:	3318      	adds	r3, #24
 800ee40:	4563      	cmp	r3, ip
 800ee42:	d012      	beq.n	800ee6a <net::arp_find_record(unsigned long, net::arp::Flags)+0x46>
 800ee44:	681a      	ldr	r2, [r3, #0]
 800ee46:	42a2      	cmp	r2, r4
 800ee48:	d01a      	beq.n	800ee80 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5c>
 800ee4a:	2901      	cmp	r1, #1
 800ee4c:	d0f7      	beq.n	800ee3e <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 800ee4e:	695a      	ldr	r2, [r3, #20]
 800ee50:	b1aa      	cbz	r2, 800ee7e <net::arp_find_record(unsigned long, net::arp::Flags)+0x5a>
 800ee52:	2a02      	cmp	r2, #2
 800ee54:	d1f1      	bne.n	800ee3a <net::arp_find_record(unsigned long, net::arp::Flags)+0x16>
 800ee56:	8a5a      	ldrh	r2, [r3, #18]
 800ee58:	4572      	cmp	r2, lr
 800ee5a:	bf88      	it	hi
 800ee5c:	461d      	movhi	r5, r3
 800ee5e:	f103 0318 	add.w	r3, r3, #24
 800ee62:	bf88      	it	hi
 800ee64:	4696      	movhi	lr, r2
 800ee66:	4563      	cmp	r3, ip
 800ee68:	d1ec      	bne.n	800ee44 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 800ee6a:	2800      	cmp	r0, #0
 800ee6c:	bf08      	it	eq
 800ee6e:	4628      	moveq	r0, r5
 800ee70:	bd70      	pop	{r4, r5, r6, pc}
 800ee72:	8a5a      	ldrh	r2, [r3, #18]
 800ee74:	42b2      	cmp	r2, r6
 800ee76:	bf84      	itt	hi
 800ee78:	4616      	movhi	r6, r2
 800ee7a:	4618      	movhi	r0, r3
 800ee7c:	e7df      	b.n	800ee3e <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 800ee7e:	601c      	str	r4, [r3, #0]
 800ee80:	4618      	mov	r0, r3
 800ee82:	bd70      	pop	{r4, r5, r6, pc}
 800ee84:	1000cb10 	andne	ip, r0, r0, lsl fp

0800ee88 <net::arp_timer()>:
 800ee88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee8c:	4c28      	ldr	r4, [pc, #160]	@ (800ef30 <net::arp_timer()+0xa8>)
 800ee8e:	2703      	movs	r7, #3
 800ee90:	f504 76c0 	add.w	r6, r4, #384	@ 0x180
 800ee94:	f04f 0800 	mov.w	r8, #0
 800ee98:	e006      	b.n	800eea8 <net::arp_timer()+0x20>
 800ee9a:	2a01      	cmp	r2, #1
 800ee9c:	d101      	bne.n	800eea2 <net::arp_timer()+0x1a>
 800ee9e:	2b02      	cmp	r3, #2
 800eea0:	d839      	bhi.n	800ef16 <net::arp_timer()+0x8e>
 800eea2:	3418      	adds	r4, #24
 800eea4:	42a6      	cmp	r6, r4
 800eea6:	d02c      	beq.n	800ef02 <net::arp_timer()+0x7a>
 800eea8:	f854 2c04 	ldr.w	r2, [r4, #-4]
 800eeac:	2a00      	cmp	r2, #0
 800eeae:	d0f8      	beq.n	800eea2 <net::arp_timer()+0x1a>
 800eeb0:	f834 3c06 	ldrh.w	r3, [r4, #-6]
 800eeb4:	3301      	adds	r3, #1
 800eeb6:	b29b      	uxth	r3, r3
 800eeb8:	2a02      	cmp	r2, #2
 800eeba:	f824 3c06 	strh.w	r3, [r4, #-6]
 800eebe:	d022      	beq.n	800ef06 <net::arp_timer()+0x7e>
 800eec0:	2a03      	cmp	r2, #3
 800eec2:	d1ea      	bne.n	800ee9a <net::arp_timer()+0x12>
 800eec4:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800eec8:	d9eb      	bls.n	800eea2 <net::arp_timer()+0x1a>
 800eeca:	4d1a      	ldr	r5, [pc, #104]	@ (800ef34 <net::arp_timer()+0xac>)
 800eecc:	2301      	movs	r3, #1
 800eece:	f844 3c04 	str.w	r3, [r4, #-4]
 800eed2:	f854 3c18 	ldr.w	r3, [r4, #-24]
 800eed6:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 800eeda:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 800eede:	602b      	str	r3, [r5, #0]
 800eee0:	4628      	mov	r0, r5
 800eee2:	f834 3c08 	ldrh.w	r3, [r4, #-8]
 800eee6:	80ab      	strh	r3, [r5, #4]
 800eee8:	213c      	movs	r1, #60	@ 0x3c
 800eeea:	f7ff fdef 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 800eeee:	4628      	mov	r0, r5
 800eef0:	1dab      	adds	r3, r5, #6
 800eef2:	22ff      	movs	r2, #255	@ 0xff
 800eef4:	f800 2b01 	strb.w	r2, [r0], #1
 800eef8:	4298      	cmp	r0, r3
 800eefa:	d1fb      	bne.n	800eef4 <net::arp_timer()+0x6c>
 800eefc:	3418      	adds	r4, #24
 800eefe:	42a6      	cmp	r6, r4
 800ef00:	d1d2      	bne.n	800eea8 <net::arp_timer()+0x20>
 800ef02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef06:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 800ef0a:	d9ca      	bls.n	800eea2 <net::arp_timer()+0x1a>
 800ef0c:	f844 7c04 	str.w	r7, [r4, #-4]
 800ef10:	f824 8c06 	strh.w	r8, [r4, #-6]
 800ef14:	e7c5      	b.n	800eea2 <net::arp_timer()+0x1a>
 800ef16:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800ef1a:	b108      	cbz	r0, 800ef20 <net::arp_timer()+0x98>
 800ef1c:	f004 fee4 	bl	8013ce8 <operator delete[](void*)>
 800ef20:	f1a4 0318 	sub.w	r3, r4, #24
 800ef24:	2200      	movs	r2, #0
 800ef26:	f843 2b04 	str.w	r2, [r3], #4
 800ef2a:	42a3      	cmp	r3, r4
 800ef2c:	d1fb      	bne.n	800ef26 <net::arp_timer()+0x9e>
 800ef2e:	e7b8      	b.n	800eea2 <net::arp_timer()+0x1a>
 800ef30:	1000cb28 	andne	ip, r0, r8, lsr #22
 800ef34:	20000a38 	andcs	r0, r0, r8, lsr sl

0800ef38 <net::arp_send(t_udp*, unsigned long, unsigned long)>:
 800ef38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ef3a:	4b39      	ldr	r3, [pc, #228]	@ (800f020 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>)
 800ef3c:	681b      	ldr	r3, [r3, #0]
 800ef3e:	4604      	mov	r4, r0
 800ef40:	4393      	bics	r3, r2
 800ef42:	f04f 0000 	mov.w	r0, #0
 800ef46:	4615      	mov	r5, r2
 800ef48:	f8c4 201e 	str.w	r2, [r4, #30]
 800ef4c:	7620      	strb	r0, [r4, #24]
 800ef4e:	7660      	strb	r0, [r4, #25]
 800ef50:	460e      	mov	r6, r1
 800ef52:	d15c      	bne.n	800f00e <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd6>
 800ef54:	4b33      	ldr	r3, [pc, #204]	@ (800f024 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xec>)
 800ef56:	f503 72c0 	add.w	r2, r3, #384	@ 0x180
 800ef5a:	6959      	ldr	r1, [r3, #20]
 800ef5c:	2901      	cmp	r1, #1
 800ef5e:	dd02      	ble.n	800ef66 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2e>
 800ef60:	6819      	ldr	r1, [r3, #0]
 800ef62:	42a9      	cmp	r1, r5
 800ef64:	d031      	beq.n	800efca <net::arp_send(t_udp*, unsigned long, unsigned long)+0x92>
 800ef66:	3318      	adds	r3, #24
 800ef68:	4293      	cmp	r3, r2
 800ef6a:	d1f6      	bne.n	800ef5a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x22>
 800ef6c:	2100      	movs	r1, #0
 800ef6e:	4628      	mov	r0, r5
 800ef70:	f7ff ff58 	bl	800ee24 <net::arp_find_record(unsigned long, net::arp::Flags)>
 800ef74:	6943      	ldr	r3, [r0, #20]
 800ef76:	4607      	mov	r7, r0
 800ef78:	b1d3      	cbz	r3, 800efb0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x78>
 800ef7a:	2b01      	cmp	r3, #1
 800ef7c:	d000      	beq.n	800ef80 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 800ef7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ef80:	6878      	ldr	r0, [r7, #4]
 800ef82:	b108      	cbz	r0, 800ef88 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x50>
 800ef84:	f004 feb0 	bl	8013ce8 <operator delete[](void*)>
 800ef88:	4630      	mov	r0, r6
 800ef8a:	f004 feb3 	bl	8013cf4 <operator new[](unsigned int)>
 800ef8e:	ea44 0200 	orr.w	r2, r4, r0
 800ef92:	0792      	lsls	r2, r2, #30
 800ef94:	4603      	mov	r3, r0
 800ef96:	6078      	str	r0, [r7, #4]
 800ef98:	d027      	beq.n	800efea <net::arp_send(t_udp*, unsigned long, unsigned long)+0xb2>
 800ef9a:	4631      	mov	r1, r6
 800ef9c:	b131      	cbz	r1, 800efac <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
 800ef9e:	4421      	add	r1, r4
 800efa0:	f814 2b01 	ldrb.w	r2, [r4], #1
 800efa4:	f803 2b01 	strb.w	r2, [r3], #1
 800efa8:	428c      	cmp	r4, r1
 800efaa:	d1f9      	bne.n	800efa0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
 800efac:	60be      	str	r6, [r7, #8]
 800efae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800efb0:	8243      	strh	r3, [r0, #18]
 800efb2:	2301      	movs	r3, #1
 800efb4:	481c      	ldr	r0, [pc, #112]	@ (800f028 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf0>)
 800efb6:	617b      	str	r3, [r7, #20]
 800efb8:	213c      	movs	r1, #60	@ 0x3c
 800efba:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 800efbe:	f7ff fd85 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 800efc2:	697b      	ldr	r3, [r7, #20]
 800efc4:	2b01      	cmp	r3, #1
 800efc6:	d1da      	bne.n	800ef7e <net::arp_send(t_udp*, unsigned long, unsigned long)+0x46>
 800efc8:	e7da      	b.n	800ef80 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 800efca:	f103 020c 	add.w	r2, r3, #12
 800efce:	4621      	mov	r1, r4
 800efd0:	3312      	adds	r3, #18
 800efd2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800efd6:	f801 0b01 	strb.w	r0, [r1], #1
 800efda:	429a      	cmp	r2, r3
 800efdc:	d1f9      	bne.n	800efd2 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x9a>
 800efde:	4631      	mov	r1, r6
 800efe0:	4620      	mov	r0, r4
 800efe2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800efe6:	f7ff bd71 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800efea:	2e03      	cmp	r6, #3
 800efec:	d9d5      	bls.n	800ef9a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x62>
 800efee:	1f35      	subs	r5, r6, #4
 800eff0:	f025 0503 	bic.w	r5, r5, #3
 800eff4:	3504      	adds	r5, #4
 800eff6:	1960      	adds	r0, r4, r5
 800eff8:	461a      	mov	r2, r3
 800effa:	f854 1b04 	ldr.w	r1, [r4], #4
 800effe:	f842 1b04 	str.w	r1, [r2], #4
 800f002:	4284      	cmp	r4, r0
 800f004:	d1f9      	bne.n	800effa <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc2>
 800f006:	442b      	add	r3, r5
 800f008:	f006 0103 	and.w	r1, r6, #3
 800f00c:	e7c6      	b.n	800ef9c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x64>
 800f00e:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 800f012:	b292      	uxth	r2, r2
 800f014:	429a      	cmp	r2, r3
 800f016:	bf1c      	itt	ne
 800f018:	4b04      	ldrne	r3, [pc, #16]	@ (800f02c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf4>)
 800f01a:	689d      	ldrne	r5, [r3, #8]
 800f01c:	e79a      	b.n	800ef54 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c>
 800f01e:	bf00      	nop
 800f020:	200009b0 			@ <UNDEFINED> instruction: 0x200009b0
 800f024:	1000cb10 	andne	ip, r0, r0, lsl fp
 800f028:	20000a38 	andcs	r0, r0, r8, lsr sl
 800f02c:	200009cc 	andcs	r0, r0, ip, asr #19

0800f030 <net::arp_acd_probe(net::ip_addr)>:
 800f030:	b510      	push	{r4, lr}
 800f032:	4c07      	ldr	r4, [pc, #28]	@ (800f050 <net::arp_acd_probe(net::ip_addr)+0x20>)
 800f034:	4603      	mov	r3, r0
 800f036:	2200      	movs	r2, #0
 800f038:	213c      	movs	r1, #60	@ 0x3c
 800f03a:	4620      	mov	r0, r4
 800f03c:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800f040:	61e2      	str	r2, [r4, #28]
 800f042:	f7ff fd43 	bl	800eacc <emac_eth_send(void*, unsigned long)>
 800f046:	4b03      	ldr	r3, [pc, #12]	@ (800f054 <net::arp_acd_probe(net::ip_addr)+0x24>)
 800f048:	681b      	ldr	r3, [r3, #0]
 800f04a:	61e3      	str	r3, [r4, #28]
 800f04c:	bd10      	pop	{r4, pc}
 800f04e:	bf00      	nop
 800f050:	20000a38 	andcs	r0, r0, r8, lsr sl
 800f054:	200009cc 	andcs	r0, r0, ip, asr #19

0800f058 <net::arp_acd_send_announcement(net::ip_addr)>:
 800f058:	4a04      	ldr	r2, [pc, #16]	@ (800f06c <net::arp_acd_send_announcement(net::ip_addr)+0x14>)
 800f05a:	4603      	mov	r3, r0
 800f05c:	213c      	movs	r1, #60	@ 0x3c
 800f05e:	4610      	mov	r0, r2
 800f060:	f8c2 3026 	str.w	r3, [r2, #38]	@ 0x26
 800f064:	61d3      	str	r3, [r2, #28]
 800f066:	f7ff bd31 	b.w	800eacc <emac_eth_send(void*, unsigned long)>
 800f06a:	bf00      	nop
 800f06c:	20000a38 	andcs	r0, r0, r8, lsr sl

0800f070 <net::ip_set_ip()>:
 800f070:	b508      	push	{r3, lr}
 800f072:	f7fe ff71 	bl	800df58 <net::udp_set_ip()>
 800f076:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f07a:	f7fe bb2d 	b.w	800d6d8 <net::igmp_set_ip()>
 800f07e:	bf00      	nop

0800f080 <Display::ClearEndOfLine() [clone .isra.0]>:
 800f080:	b108      	cbz	r0, 800f086 <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 800f082:	2301      	movs	r3, #1
 800f084:	7303      	strb	r3, [r0, #12]
 800f086:	4770      	bx	lr

0800f088 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 800f088:	b430      	push	{r4, r5}
 800f08a:	b160      	cbz	r0, 800f0a6 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 800f08c:	6845      	ldr	r5, [r0, #4]
 800f08e:	2300      	movs	r3, #0
 800f090:	5cd4      	ldrb	r4, [r2, r3]
 800f092:	b11c      	cbz	r4, 800f09c <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 800f094:	1c5c      	adds	r4, r3, #1
 800f096:	429d      	cmp	r5, r3
 800f098:	4623      	mov	r3, r4
 800f09a:	d8f9      	bhi.n	800f090 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 800f09c:	6804      	ldr	r4, [r0, #0]
 800f09e:	69e4      	ldr	r4, [r4, #28]
 800f0a0:	46a4      	mov	ip, r4
 800f0a2:	bc30      	pop	{r4, r5}
 800f0a4:	4760      	bx	ip
 800f0a6:	bc30      	pop	{r4, r5}
 800f0a8:	4770      	bx	lr
	...

0800f0ac <DisplayUdf::ShowIpAddress()>:
 800f0ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f0b0:	4e16      	ldr	r6, [pc, #88]	@ (800f10c <DisplayUdf::ShowIpAddress()+0x60>)
 800f0b2:	b086      	sub	sp, #24
 800f0b4:	4605      	mov	r5, r0
 800f0b6:	6980      	ldr	r0, [r0, #24]
 800f0b8:	f7ff ffe2 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f0bc:	6870      	ldr	r0, [r6, #4]
 800f0be:	6834      	ldr	r4, [r6, #0]
 800f0c0:	f895 703e 	ldrb.w	r7, [r5, #62]	@ 0x3e
 800f0c4:	f004 fe64 	bl	8013d90 <__popcountsi2>
 800f0c8:	7eb3      	ldrb	r3, [r6, #26]
 800f0ca:	075a      	lsls	r2, r3, #29
 800f0cc:	fa5f f884 	uxtb.w	r8, r4
 800f0d0:	f3c4 2907 	ubfx	r9, r4, #8, #8
 800f0d4:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 800f0d8:	ea4f 6414 	mov.w	r4, r4, lsr #24
 800f0dc:	d413      	bmi.n	800f106 <DisplayUdf::ShowIpAddress()+0x5a>
 800f0de:	f013 0f02 	tst.w	r3, #2
 800f0e2:	bf0c      	ite	eq
 800f0e4:	2253      	moveq	r2, #83	@ 0x53
 800f0e6:	2244      	movne	r2, #68	@ 0x44
 800f0e8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800f0ec:	e9cd a401 	strd	sl, r4, [sp, #4]
 800f0f0:	4a07      	ldr	r2, [pc, #28]	@ (800f110 <DisplayUdf::ShowIpAddress()+0x64>)
 800f0f2:	f8cd 9000 	str.w	r9, [sp]
 800f0f6:	4643      	mov	r3, r8
 800f0f8:	4639      	mov	r1, r7
 800f0fa:	4628      	mov	r0, r5
 800f0fc:	f7fa f880 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f100:	b006      	add	sp, #24
 800f102:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f106:	225a      	movs	r2, #90	@ 0x5a
 800f108:	e7ee      	b.n	800f0e8 <DisplayUdf::ShowIpAddress()+0x3c>
 800f10a:	bf00      	nop
 800f10c:	200009cc 	andcs	r0, r0, ip, asr #19
 800f110:	0801458c 	stmdaeq	r1, {r2, r3, r7, r8, sl, lr}

0800f114 <DisplayUdf::DisplayUdf()>:
 800f114:	b510      	push	{r4, lr}
 800f116:	4604      	mov	r4, r0
 800f118:	f001 f800 	bl	801011c <Display::Display()>
 800f11c:	4b05      	ldr	r3, [pc, #20]	@ (800f134 <DisplayUdf::DisplayUdf()+0x20>)
 800f11e:	f104 023b 	add.w	r2, r4, #59	@ 0x3b
 800f122:	601c      	str	r4, [r3, #0]
 800f124:	2301      	movs	r3, #1
 800f126:	f802 3f01 	strb.w	r3, [r2, #1]!
 800f12a:	3301      	adds	r3, #1
 800f12c:	2b15      	cmp	r3, #21
 800f12e:	d1fa      	bne.n	800f126 <DisplayUdf::DisplayUdf()+0x12>
 800f130:	4620      	mov	r0, r4
 800f132:	bd10      	pop	{r4, pc}
 800f134:	20000a74 	andcs	r0, r0, r4, ror sl

0800f138 <DisplayUdf::SetTitle(char const*, ...)>:
 800f138:	b40e      	push	{r1, r2, r3}
 800f13a:	b517      	push	{r0, r1, r2, r4, lr}
 800f13c:	ab05      	add	r3, sp, #20
 800f13e:	4604      	mov	r4, r0
 800f140:	f853 2b04 	ldr.w	r2, [r3], #4
 800f144:	9301      	str	r3, [sp, #4]
 800f146:	211f      	movs	r1, #31
 800f148:	301c      	adds	r0, #28
 800f14a:	f004 fbd1 	bl	80138f0 <vsnprintf>
 800f14e:	4404      	add	r4, r0
 800f150:	2300      	movs	r3, #0
 800f152:	7723      	strb	r3, [r4, #28]
 800f154:	b003      	add	sp, #12
 800f156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f15a:	b003      	add	sp, #12
 800f15c:	4770      	bx	lr

0800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>:
 800f15e:	1e4b      	subs	r3, r1, #1
 800f160:	2b05      	cmp	r3, #5
 800f162:	b530      	push	{r4, r5, lr}
 800f164:	d810      	bhi.n	800f188 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2a>
 800f166:	f100 043b 	add.w	r4, r0, #59	@ 0x3b
 800f16a:	2300      	movs	r3, #0
 800f16c:	b2c9      	uxtb	r1, r1
 800f16e:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800f172:	428d      	cmp	r5, r1
 800f174:	d109      	bne.n	800f18a <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2c>
 800f176:	1884      	adds	r4, r0, r2
 800f178:	4403      	add	r3, r0
 800f17a:	f894 403c 	ldrb.w	r4, [r4, #60]	@ 0x3c
 800f17e:	f883 403c 	strb.w	r4, [r3, #60]	@ 0x3c
 800f182:	4410      	add	r0, r2
 800f184:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 800f188:	bd30      	pop	{r4, r5, pc}
 800f18a:	3301      	adds	r3, #1
 800f18c:	2b14      	cmp	r3, #20
 800f18e:	d1ee      	bne.n	800f16e <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x10>
 800f190:	e7f7      	b.n	800f182 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x24>
	...

0800f194 <DisplayUdf::Show()>:
 800f194:	b530      	push	{r4, r5, lr}
 800f196:	f100 033b 	add.w	r3, r0, #59	@ 0x3b
 800f19a:	b085      	sub	sp, #20
 800f19c:	4604      	mov	r4, r0
 800f19e:	f100 024f 	add.w	r2, r0, #79	@ 0x4f
 800f1a2:	21ff      	movs	r1, #255	@ 0xff
 800f1a4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f1a8:	2806      	cmp	r0, #6
 800f1aa:	bf88      	it	hi
 800f1ac:	7019      	strbhi	r1, [r3, #0]
 800f1ae:	4293      	cmp	r3, r2
 800f1b0:	d1f8      	bne.n	800f1a4 <DisplayUdf::Show()+0x10>
 800f1b2:	69a0      	ldr	r0, [r4, #24]
 800f1b4:	4d2a      	ldr	r5, [pc, #168]	@ (800f260 <DisplayUdf::Show()+0xcc>)
 800f1b6:	f7ff ff63 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f1ba:	f104 021c 	add.w	r2, r4, #28
 800f1be:	f894 103c 	ldrb.w	r1, [r4, #60]	@ 0x3c
 800f1c2:	f7ff ff61 	bl	800f088 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 800f1c6:	69a0      	ldr	r0, [r4, #24]
 800f1c8:	4a26      	ldr	r2, [pc, #152]	@ (800f264 <DisplayUdf::Show()+0xd0>)
 800f1ca:	f7ff ff59 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f1ce:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 800f1d2:	f7ff ff59 	bl	800f088 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 800f1d6:	69a0      	ldr	r0, [r4, #24]
 800f1d8:	4a23      	ldr	r2, [pc, #140]	@ (800f268 <DisplayUdf::Show()+0xd4>)
 800f1da:	f7ff ff51 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f1de:	4b23      	ldr	r3, [pc, #140]	@ (800f26c <DisplayUdf::Show()+0xd8>)
 800f1e0:	9300      	str	r3, [sp, #0]
 800f1e2:	f894 103f 	ldrb.w	r1, [r4, #63]	@ 0x3f
 800f1e6:	2303      	movs	r3, #3
 800f1e8:	4620      	mov	r0, r4
 800f1ea:	f7fa f809 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f1ee:	4620      	mov	r0, r4
 800f1f0:	f7ff ff5c 	bl	800f0ac <DisplayUdf::ShowIpAddress()>
 800f1f4:	69a0      	ldr	r0, [r4, #24]
 800f1f6:	f7ff ff43 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f1fa:	68ab      	ldr	r3, [r5, #8]
 800f1fc:	0e1a      	lsrs	r2, r3, #24
 800f1fe:	9202      	str	r2, [sp, #8]
 800f200:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f204:	9201      	str	r2, [sp, #4]
 800f206:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f20a:	9200      	str	r2, [sp, #0]
 800f20c:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 800f210:	4a17      	ldr	r2, [pc, #92]	@ (800f270 <DisplayUdf::Show()+0xdc>)
 800f212:	b2db      	uxtb	r3, r3
 800f214:	4620      	mov	r0, r4
 800f216:	f7f9 fff3 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f21a:	69a0      	ldr	r0, [r4, #24]
 800f21c:	f7ff ff30 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f220:	686b      	ldr	r3, [r5, #4]
 800f222:	0e1a      	lsrs	r2, r3, #24
 800f224:	9202      	str	r2, [sp, #8]
 800f226:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f22a:	9201      	str	r2, [sp, #4]
 800f22c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f230:	9200      	str	r2, [sp, #0]
 800f232:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 800f236:	4a0f      	ldr	r2, [pc, #60]	@ (800f274 <DisplayUdf::Show()+0xe0>)
 800f238:	b2db      	uxtb	r3, r3
 800f23a:	4620      	mov	r0, r4
 800f23c:	f7f9 ffe0 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f240:	4620      	mov	r0, r4
 800f242:	f7ff ff33 	bl	800f0ac <DisplayUdf::ShowIpAddress()>
 800f246:	69a0      	ldr	r0, [r4, #24]
 800f248:	f7ff ff1a 	bl	800f080 <Display::ClearEndOfLine() [clone .isra.0]>
 800f24c:	4b0a      	ldr	r3, [pc, #40]	@ (800f278 <DisplayUdf::Show()+0xe4>)
 800f24e:	f894 1043 	ldrb.w	r1, [r4, #67]	@ 0x43
 800f252:	681a      	ldr	r2, [r3, #0]
 800f254:	3216      	adds	r2, #22
 800f256:	b005      	add	sp, #20
 800f258:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f25c:	f7ff bf14 	b.w	800f088 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 800f260:	200009cc 	andcs	r0, r0, ip, asr #19
 800f264:	080141aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, lr}
 800f268:	0801459e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, sl, lr}
 800f26c:	20000b64 	andcs	r0, r0, r4, ror #22
 800f270:	080145ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, lr}
 800f274:	080145bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, lr}
 800f278:	200009ac 	andcs	r0, r0, ip, lsr #19

0800f27c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 800f27c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f27e:	88c6      	ldrh	r6, [r0, #6]
 800f280:	8885      	ldrh	r5, [r0, #4]
 800f282:	42ae      	cmp	r6, r5
 800f284:	d216      	bcs.n	800f2b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 800f286:	4604      	mov	r4, r0
 800f288:	6800      	ldr	r0, [r0, #0]
 800f28a:	1bad      	subs	r5, r5, r6
 800f28c:	4430      	add	r0, r6
 800f28e:	7a26      	ldrb	r6, [r4, #8]
 800f290:	b923      	cbnz	r3, 800f29c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 800f292:	b926      	cbnz	r6, 800f29e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 800f294:	9200      	str	r2, [sp, #0]
 800f296:	460b      	mov	r3, r1
 800f298:	4a09      	ldr	r2, [pc, #36]	@ (800f2c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 800f29a:	e003      	b.n	800f2a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800f29c:	b166      	cbz	r6, 800f2b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 800f29e:	9200      	str	r2, [sp, #0]
 800f2a0:	4a08      	ldr	r2, [pc, #32]	@ (800f2c4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 800f2a2:	460b      	mov	r3, r1
 800f2a4:	4629      	mov	r1, r5
 800f2a6:	f004 fb0b 	bl	80138c0 <snprintf>
 800f2aa:	4285      	cmp	r5, r0
 800f2ac:	bfa2      	ittt	ge
 800f2ae:	88e3      	ldrhge	r3, [r4, #6]
 800f2b0:	181b      	addge	r3, r3, r0
 800f2b2:	80e3      	strhge	r3, [r4, #6]
 800f2b4:	b002      	add	sp, #8
 800f2b6:	bd70      	pop	{r4, r5, r6, pc}
 800f2b8:	9200      	str	r2, [sp, #0]
 800f2ba:	460b      	mov	r3, r1
 800f2bc:	4a02      	ldr	r2, [pc, #8]	@ (800f2c8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 800f2be:	e7f1      	b.n	800f2a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800f2c0:	0801409e 	stmdaeq	r1, {r1, r2, r3, r4, r7, lr}
 800f2c4:	08014095 	stmdaeq	r1, {r0, r2, r4, r7, lr}
 800f2c8:	0801409f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, lr}

0800f2cc <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>:
 800f2cc:	b507      	push	{r0, r1, r2, lr}
 800f2ce:	2300      	movs	r3, #0
 800f2d0:	2101      	movs	r1, #1
 800f2d2:	e9cd 3100 	strd	r3, r1, [sp]
 800f2d6:	4602      	mov	r2, r0
 800f2d8:	4804      	ldr	r0, [pc, #16]	@ (800f2ec <DisplayUdfParamsStore::Copy(displayudfparams::Params*)+0x20>)
 800f2da:	2322      	movs	r3, #34	@ 0x22
 800f2dc:	6800      	ldr	r0, [r0, #0]
 800f2de:	210d      	movs	r1, #13
 800f2e0:	f000 fae6 	bl	800f8b0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800f2e4:	b003      	add	sp, #12
 800f2e6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f2ea:	bf00      	nop
 800f2ec:	20000a78 	andcs	r0, r0, r8, ror sl

0800f2f0 <DisplayUdfParams::DisplayUdfParams()>:
 800f2f0:	b510      	push	{r4, lr}
 800f2f2:	2220      	movs	r2, #32
 800f2f4:	4604      	mov	r4, r0
 800f2f6:	2100      	movs	r1, #0
 800f2f8:	f003 ffd6 	bl	80132a8 <memset>
 800f2fc:	2305      	movs	r3, #5
 800f2fe:	f884 3020 	strb.w	r3, [r4, #32]
 800f302:	237f      	movs	r3, #127	@ 0x7f
 800f304:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800f308:	4620      	mov	r0, r4
 800f30a:	bd10      	pop	{r4, pc}

0800f30c <DisplayUdfParams::Load()>:
 800f30c:	b508      	push	{r3, lr}
 800f30e:	2200      	movs	r2, #0
 800f310:	7002      	strb	r2, [r0, #0]
 800f312:	7042      	strb	r2, [r0, #1]
 800f314:	7082      	strb	r2, [r0, #2]
 800f316:	70c2      	strb	r2, [r0, #3]
 800f318:	f7ff ffd8 	bl	800f2cc <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 800f31c:	bd08      	pop	{r3, pc}
	...

0800f320 <DisplayUdfParams::Load(char const*, unsigned long)>:
 800f320:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f322:	2500      	movs	r5, #0
 800f324:	b087      	sub	sp, #28
 800f326:	4604      	mov	r4, r0
 800f328:	460e      	mov	r6, r1
 800f32a:	4617      	mov	r7, r2
 800f32c:	7005      	strb	r5, [r0, #0]
 800f32e:	7045      	strb	r5, [r0, #1]
 800f330:	7085      	strb	r5, [r0, #2]
 800f332:	70c5      	strb	r5, [r0, #3]
 800f334:	4602      	mov	r2, r0
 800f336:	490c      	ldr	r1, [pc, #48]	@ (800f368 <DisplayUdfParams::Load(char const*, unsigned long)+0x48>)
 800f338:	a804      	add	r0, sp, #16
 800f33a:	f000 fd93 	bl	800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f33e:	463a      	mov	r2, r7
 800f340:	4631      	mov	r1, r6
 800f342:	a804      	add	r0, sp, #16
 800f344:	f000 fd92 	bl	800fe6c <ReadConfigFile::Read(char const*, unsigned int)>
 800f348:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800f34c:	2322      	movs	r3, #34	@ 0x22
 800f34e:	4807      	ldr	r0, [pc, #28]	@ (800f36c <DisplayUdfParams::Load(char const*, unsigned long)+0x4c>)
 800f350:	9300      	str	r3, [sp, #0]
 800f352:	462a      	mov	r2, r5
 800f354:	4623      	mov	r3, r4
 800f356:	210d      	movs	r1, #13
 800f358:	6800      	ldr	r0, [r0, #0]
 800f35a:	f000 fa83 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800f35e:	a804      	add	r0, sp, #16
 800f360:	f000 fd83 	bl	800fe6a <ReadConfigFile::~ReadConfigFile()>
 800f364:	b007      	add	sp, #28
 800f366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f368:	0800f431 	stmdaeq	r0, {r0, r4, r5, sl, ip, sp, lr, pc}
 800f36c:	20000a78 	andcs	r0, r0, r8, ror sl

0800f370 <DisplayUdfParams::callbackFunction(char const*)>:
 800f370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f372:	460e      	mov	r6, r1
 800f374:	4604      	mov	r4, r0
 800f376:	492a      	ldr	r1, [pc, #168]	@ (800f420 <DisplayUdfParams::callbackFunction(char const*)+0xb0>)
 800f378:	f10d 0207 	add.w	r2, sp, #7
 800f37c:	4630      	mov	r0, r6
 800f37e:	f000 fe04 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f382:	b968      	cbnz	r0, 800f3a0 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800f384:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f388:	6823      	ldr	r3, [r4, #0]
 800f38a:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 800f38e:	2a7f      	cmp	r2, #127	@ 0x7f
 800f390:	bf14      	ite	ne
 800f392:	f043 5300 	orrne.w	r3, r3, #536870912	@ 0x20000000
 800f396:	f023 5300 	biceq.w	r3, r3, #536870912	@ 0x20000000
 800f39a:	6023      	str	r3, [r4, #0]
 800f39c:	b003      	add	sp, #12
 800f39e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3a0:	4920      	ldr	r1, [pc, #128]	@ (800f424 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 800f3a2:	f10d 0207 	add.w	r2, sp, #7
 800f3a6:	4630      	mov	r0, r6
 800f3a8:	f000 fdef 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f3ac:	b958      	cbnz	r0, 800f3c6 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800f3ae:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f3b2:	6823      	ldr	r3, [r4, #0]
 800f3b4:	f884 2020 	strb.w	r2, [r4, #32]
 800f3b8:	2a05      	cmp	r2, #5
 800f3ba:	bf14      	ite	ne
 800f3bc:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 800f3c0:	f023 5380 	biceq.w	r3, r3, #268435456	@ 0x10000000
 800f3c4:	e7e9      	b.n	800f39a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f3c6:	4918      	ldr	r1, [pc, #96]	@ (800f428 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800f3c8:	f10d 0207 	add.w	r2, sp, #7
 800f3cc:	4630      	mov	r0, r6
 800f3ce:	f000 fddc 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f3d2:	b948      	cbnz	r0, 800f3e8 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800f3d4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f3d8:	6823      	ldr	r3, [r4, #0]
 800f3da:	b112      	cbz	r2, 800f3e2 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800f3dc:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800f3e0:	e7db      	b.n	800f39a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f3e2:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800f3e6:	e7d8      	b.n	800f39a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f3e8:	4f10      	ldr	r7, [pc, #64]	@ (800f42c <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800f3ea:	2500      	movs	r5, #0
 800f3ec:	f857 1b04 	ldr.w	r1, [r7], #4
 800f3f0:	f10d 0207 	add.w	r2, sp, #7
 800f3f4:	4630      	mov	r0, r6
 800f3f6:	f000 fdc8 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f3fa:	b968      	cbnz	r0, 800f418 <DisplayUdfParams::callbackFunction(char const*)+0xa8>
 800f3fc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f400:	6823      	ldr	r3, [r4, #0]
 800f402:	2201      	movs	r2, #1
 800f404:	40aa      	lsls	r2, r5
 800f406:	1e4e      	subs	r6, r1, #1
 800f408:	4425      	add	r5, r4
 800f40a:	2e05      	cmp	r6, #5
 800f40c:	bf99      	ittee	ls
 800f40e:	7129      	strbls	r1, [r5, #4]
 800f410:	4313      	orrls	r3, r2
 800f412:	7128      	strbhi	r0, [r5, #4]
 800f414:	4393      	bichi	r3, r2
 800f416:	e7c0      	b.n	800f39a <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f418:	3501      	adds	r5, #1
 800f41a:	2d14      	cmp	r5, #20
 800f41c:	d1e6      	bne.n	800f3ec <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800f41e:	e7bd      	b.n	800f39c <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800f420:	0801722a 	stmdaeq	r1, {r1, r3, r5, r9, ip, sp, lr}
 800f424:	0801721c 	stmdaeq	r1, {r2, r3, r4, r9, ip, sp, lr}
 800f428:	0801720c 	stmdaeq	r1, {r2, r3, r9, ip, sp, lr}
 800f42c:	08017188 	stmdaeq	r1, {r3, r7, r8, ip, sp, lr}

0800f430 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800f430:	f7ff bf9e 	b.w	800f370 <DisplayUdfParams::callbackFunction(char const*)>

0800f434 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>:
 800f434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f438:	4604      	mov	r4, r0
 800f43a:	b086      	sub	sp, #24
 800f43c:	4615      	mov	r5, r2
 800f43e:	461e      	mov	r6, r3
 800f440:	b379      	cbz	r1, 800f4a2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800f442:	2222      	movs	r2, #34	@ 0x22
 800f444:	f003 ff19 	bl	801327a <memmove>
 800f448:	462a      	mov	r2, r5
 800f44a:	493c      	ldr	r1, [pc, #240]	@ (800f53c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x108>)
 800f44c:	4633      	mov	r3, r6
 800f44e:	a803      	add	r0, sp, #12
 800f450:	f000 fc32 	bl	800fcb8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800f454:	6823      	ldr	r3, [r4, #0]
 800f456:	f894 2021 	ldrb.w	r2, [r4, #33]	@ 0x21
 800f45a:	4939      	ldr	r1, [pc, #228]	@ (800f540 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x10c>)
 800f45c:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800f460:	a803      	add	r0, sp, #12
 800f462:	f7ff ff0b 	bl	800f27c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800f466:	6823      	ldr	r3, [r4, #0]
 800f468:	f894 2020 	ldrb.w	r2, [r4, #32]
 800f46c:	4935      	ldr	r1, [pc, #212]	@ (800f544 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x110>)
 800f46e:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800f472:	a803      	add	r0, sp, #12
 800f474:	f7ff ff02 	bl	800f27c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800f478:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f47c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f480:	6823      	ldr	r3, [r4, #0]
 800f482:	42aa      	cmp	r2, r5
 800f484:	d222      	bcs.n	800f4cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x98>
 800f486:	9803      	ldr	r0, [sp, #12]
 800f488:	f013 4380 	ands.w	r3, r3, #1073741824	@ 0x40000000
 800f48c:	4410      	add	r0, r2
 800f48e:	eba5 0502 	sub.w	r5, r5, r2
 800f492:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f496:	d107      	bne.n	800f4a8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x74>
 800f498:	b942      	cbnz	r2, 800f4ac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x78>
 800f49a:	9200      	str	r2, [sp, #0]
 800f49c:	4b2a      	ldr	r3, [pc, #168]	@ (800f548 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 800f49e:	4a2b      	ldr	r2, [pc, #172]	@ (800f54c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800f4a0:	e00a      	b.n	800f4b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 800f4a2:	f7ff ff13 	bl	800f2cc <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 800f4a6:	e7cf      	b.n	800f448 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800f4a8:	2a00      	cmp	r2, #0
 800f4aa:	d042      	beq.n	800f532 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xfe>
 800f4ac:	3b00      	subs	r3, #0
 800f4ae:	bf18      	it	ne
 800f4b0:	2301      	movne	r3, #1
 800f4b2:	9300      	str	r3, [sp, #0]
 800f4b4:	4a26      	ldr	r2, [pc, #152]	@ (800f550 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800f4b6:	4b24      	ldr	r3, [pc, #144]	@ (800f548 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 800f4b8:	4629      	mov	r1, r5
 800f4ba:	f004 fa01 	bl	80138c0 <snprintf>
 800f4be:	4285      	cmp	r5, r0
 800f4c0:	bfa2      	ittt	ge
 800f4c2:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f4c6:	18c0      	addge	r0, r0, r3
 800f4c8:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f4cc:	4e21      	ldr	r6, [pc, #132]	@ (800f554 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800f4ce:	2500      	movs	r5, #0
 800f4d0:	2701      	movs	r7, #1
 800f4d2:	f104 0804 	add.w	r8, r4, #4
 800f4d6:	f856 1b04 	ldr.w	r1, [r6], #4
 800f4da:	780b      	ldrb	r3, [r1, #0]
 800f4dc:	b163      	cbz	r3, 800f4f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 800f4de:	6822      	ldr	r2, [r4, #0]
 800f4e0:	fa07 f305 	lsl.w	r3, r7, r5
 800f4e4:	4393      	bics	r3, r2
 800f4e6:	bf08      	it	eq
 800f4e8:	2301      	moveq	r3, #1
 800f4ea:	f818 2005 	ldrb.w	r2, [r8, r5]
 800f4ee:	bf18      	it	ne
 800f4f0:	2300      	movne	r3, #0
 800f4f2:	a803      	add	r0, sp, #12
 800f4f4:	f7ff fec2 	bl	800f27c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800f4f8:	3501      	adds	r5, #1
 800f4fa:	2d14      	cmp	r5, #20
 800f4fc:	d1eb      	bne.n	800f4d6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 800f4fe:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f502:	b17b      	cbz	r3, 800f524 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
 800f504:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f508:	9b03      	ldr	r3, [sp, #12]
 800f50a:	4413      	add	r3, r2
 800f50c:	227d      	movs	r2, #125	@ 0x7d
 800f50e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f512:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f516:	9903      	ldr	r1, [sp, #12]
 800f518:	54ca      	strb	r2, [r1, r3]
 800f51a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f51e:	3301      	adds	r3, #1
 800f520:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f524:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f528:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f52a:	601a      	str	r2, [r3, #0]
 800f52c:	b006      	add	sp, #24
 800f52e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f532:	2301      	movs	r3, #1
 800f534:	9300      	str	r3, [sp, #0]
 800f536:	4a08      	ldr	r2, [pc, #32]	@ (800f558 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800f538:	4b03      	ldr	r3, [pc, #12]	@ (800f548 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 800f53a:	e7bd      	b.n	800f4b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 800f53c:	08017234 	stmdaeq	r1, {r2, r4, r5, r9, ip, sp, lr}
 800f540:	0801722a 	stmdaeq	r1, {r1, r3, r5, r9, ip, sp, lr}
 800f544:	0801721c 	stmdaeq	r1, {r2, r3, r4, r9, ip, sp, lr}
 800f548:	0801720c 	stmdaeq	r1, {r2, r3, r9, ip, sp, lr}
 800f54c:	0801409e 	stmdaeq	r1, {r1, r2, r3, r4, r7, lr}
 800f550:	08014095 	stmdaeq	r1, {r0, r2, r4, r7, lr}
 800f554:	08017188 	stmdaeq	r1, {r3, r7, r8, ip, sp, lr}
 800f558:	0801409f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, lr}

0800f55c <DisplayUdfParams::Set(DisplayUdf*)>:
 800f55c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f560:	4604      	mov	r4, r0
 800f562:	460d      	mov	r5, r1
 800f564:	6823      	ldr	r3, [r4, #0]
 800f566:	6988      	ldr	r0, [r1, #24]
 800f568:	009a      	lsls	r2, r3, #2
 800f56a:	d506      	bpl.n	800f57a <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 800f56c:	f894 1021 	ldrb.w	r1, [r4, #33]	@ 0x21
 800f570:	7529      	strb	r1, [r5, #20]
 800f572:	b110      	cbz	r0, 800f57a <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 800f574:	6803      	ldr	r3, [r0, #0]
 800f576:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f578:	4798      	blx	r3
 800f57a:	6823      	ldr	r3, [r4, #0]
 800f57c:	69a8      	ldr	r0, [r5, #24]
 800f57e:	00db      	lsls	r3, r3, #3
 800f580:	bf41      	itttt	mi
 800f582:	f894 3020 	ldrbmi.w	r3, [r4, #32]
 800f586:	f64e 2260 	movwmi	r2, #60000	@ 0xea60
 800f58a:	4353      	mulmi	r3, r2
 800f58c:	612b      	strmi	r3, [r5, #16]
 800f58e:	6821      	ldr	r1, [r4, #0]
 800f590:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800f594:	75a9      	strb	r1, [r5, #22]
 800f596:	b110      	cbz	r0, 800f59e <DisplayUdfParams::Set(DisplayUdf*)+0x42>
 800f598:	6803      	ldr	r3, [r0, #0]
 800f59a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f59c:	4798      	blx	r3
 800f59e:	2600      	movs	r6, #0
 800f5a0:	2701      	movs	r7, #1
 800f5a2:	f104 0804 	add.w	r8, r4, #4
 800f5a6:	6822      	ldr	r2, [r4, #0]
 800f5a8:	fa07 f306 	lsl.w	r3, r7, r6
 800f5ac:	4393      	bics	r3, r2
 800f5ae:	d105      	bne.n	800f5bc <DisplayUdfParams::Set(DisplayUdf*)+0x60>
 800f5b0:	f818 1006 	ldrb.w	r1, [r8, r6]
 800f5b4:	4632      	mov	r2, r6
 800f5b6:	4628      	mov	r0, r5
 800f5b8:	f7ff fdd1 	bl	800f15e <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 800f5bc:	3601      	adds	r6, #1
 800f5be:	2e14      	cmp	r6, #20
 800f5c0:	d1f1      	bne.n	800f5a6 <DisplayUdfParams::Set(DisplayUdf*)+0x4a>
 800f5c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>:
 800f5c6:	b108      	cbz	r0, 800f5cc <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 800f5c8:	2301      	movs	r3, #1
 800f5ca:	7303      	strb	r3, [r0, #12]
 800f5cc:	4770      	bx	lr

0800f5ce <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 800f5ce:	b430      	push	{r4, r5}
 800f5d0:	b160      	cbz	r0, 800f5ec <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 800f5d2:	6845      	ldr	r5, [r0, #4]
 800f5d4:	2300      	movs	r3, #0
 800f5d6:	5cd4      	ldrb	r4, [r2, r3]
 800f5d8:	b11c      	cbz	r4, 800f5e2 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 800f5da:	1c5c      	adds	r4, r3, #1
 800f5dc:	429d      	cmp	r5, r3
 800f5de:	4623      	mov	r3, r4
 800f5e0:	d8f9      	bhi.n	800f5d6 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 800f5e2:	6804      	ldr	r4, [r0, #0]
 800f5e4:	69e4      	ldr	r4, [r4, #28]
 800f5e6:	46a4      	mov	ip, r4
 800f5e8:	bc30      	pop	{r4, r5}
 800f5ea:	4760      	bx	ip
 800f5ec:	bc30      	pop	{r4, r5}
 800f5ee:	4770      	bx	lr

0800f5f0 <net::display_emac_config()>:
 800f5f0:	4b06      	ldr	r3, [pc, #24]	@ (800f60c <net::display_emac_config()+0x1c>)
 800f5f2:	4a07      	ldr	r2, [pc, #28]	@ (800f610 <net::display_emac_config()+0x20>)
 800f5f4:	b510      	push	{r4, lr}
 800f5f6:	681c      	ldr	r4, [r3, #0]
 800f5f8:	69a0      	ldr	r0, [r4, #24]
 800f5fa:	f7ff ffe4 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f5fe:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 800f602:	4620      	mov	r0, r4
 800f604:	f7f9 fdfc 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f608:	bd10      	pop	{r4, pc}
 800f60a:	bf00      	nop
 800f60c:	20000a74 	andcs	r0, r0, r4, ror sl
 800f610:	080145cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sl, lr}

0800f614 <net::display_emac_start()>:
 800f614:	4b06      	ldr	r3, [pc, #24]	@ (800f630 <net::display_emac_start()+0x1c>)
 800f616:	4a07      	ldr	r2, [pc, #28]	@ (800f634 <net::display_emac_start()+0x20>)
 800f618:	b510      	push	{r4, lr}
 800f61a:	681c      	ldr	r4, [r3, #0]
 800f61c:	69a0      	ldr	r0, [r4, #24]
 800f61e:	f7ff ffd2 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f622:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 800f626:	4620      	mov	r0, r4
 800f628:	f7f9 fdea 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f62c:	bd10      	pop	{r4, pc}
 800f62e:	bf00      	nop
 800f630:	20000a74 	andcs	r0, r0, r4, ror sl
 800f634:	080145d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, lr}

0800f638 <net::display_emac_status(bool)>:
 800f638:	4b09      	ldr	r3, [pc, #36]	@ (800f660 <net::display_emac_status(bool)+0x28>)
 800f63a:	490a      	ldr	r1, [pc, #40]	@ (800f664 <net::display_emac_status(bool)+0x2c>)
 800f63c:	b510      	push	{r4, lr}
 800f63e:	681c      	ldr	r4, [r3, #0]
 800f640:	4602      	mov	r2, r0
 800f642:	69a0      	ldr	r0, [r4, #24]
 800f644:	f7ff ffbf 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f648:	4b07      	ldr	r3, [pc, #28]	@ (800f668 <net::display_emac_status(bool)+0x30>)
 800f64a:	4620      	mov	r0, r4
 800f64c:	2a00      	cmp	r2, #0
 800f64e:	bf08      	it	eq
 800f650:	460b      	moveq	r3, r1
 800f652:	4a06      	ldr	r2, [pc, #24]	@ (800f66c <net::display_emac_status(bool)+0x34>)
 800f654:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 800f658:	f7f9 fdd2 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f65c:	bd10      	pop	{r4, pc}
 800f65e:	bf00      	nop
 800f660:	20000a74 	andcs	r0, r0, r4, ror sl
 800f664:	080145eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, lr}
 800f668:	080145e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, lr}
 800f66c:	080145f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, lr}

0800f670 <net::display_ip()>:
 800f670:	b508      	push	{r3, lr}
 800f672:	4b02      	ldr	r3, [pc, #8]	@ (800f67c <net::display_ip()+0xc>)
 800f674:	6818      	ldr	r0, [r3, #0]
 800f676:	f7ff fd19 	bl	800f0ac <DisplayUdf::ShowIpAddress()>
 800f67a:	bd08      	pop	{r3, pc}
 800f67c:	20000a74 	andcs	r0, r0, r4, ror sl

0800f680 <net::display_netmask()>:
 800f680:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f682:	4b0d      	ldr	r3, [pc, #52]	@ (800f6b8 <net::display_netmask()+0x38>)
 800f684:	681c      	ldr	r4, [r3, #0]
 800f686:	69a0      	ldr	r0, [r4, #24]
 800f688:	f7ff ff9d 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f68c:	4b0b      	ldr	r3, [pc, #44]	@ (800f6bc <net::display_netmask()+0x3c>)
 800f68e:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 800f692:	685b      	ldr	r3, [r3, #4]
 800f694:	0e1a      	lsrs	r2, r3, #24
 800f696:	9202      	str	r2, [sp, #8]
 800f698:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f69c:	9201      	str	r2, [sp, #4]
 800f69e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f6a2:	9200      	str	r2, [sp, #0]
 800f6a4:	b2db      	uxtb	r3, r3
 800f6a6:	4a06      	ldr	r2, [pc, #24]	@ (800f6c0 <net::display_netmask()+0x40>)
 800f6a8:	4620      	mov	r0, r4
 800f6aa:	f7f9 fda9 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f6ae:	4620      	mov	r0, r4
 800f6b0:	f7ff fcfc 	bl	800f0ac <DisplayUdf::ShowIpAddress()>
 800f6b4:	b004      	add	sp, #16
 800f6b6:	bd10      	pop	{r4, pc}
 800f6b8:	20000a74 	andcs	r0, r0, r4, ror sl
 800f6bc:	200009cc 	andcs	r0, r0, ip, asr #19
 800f6c0:	080145bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, lr}

0800f6c4 <net::display_gateway()>:
 800f6c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f6c6:	4b0c      	ldr	r3, [pc, #48]	@ (800f6f8 <net::display_gateway()+0x34>)
 800f6c8:	681c      	ldr	r4, [r3, #0]
 800f6ca:	69a0      	ldr	r0, [r4, #24]
 800f6cc:	f7ff ff7b 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f6d0:	4b0a      	ldr	r3, [pc, #40]	@ (800f6fc <net::display_gateway()+0x38>)
 800f6d2:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 800f6d6:	689b      	ldr	r3, [r3, #8]
 800f6d8:	0e1a      	lsrs	r2, r3, #24
 800f6da:	9202      	str	r2, [sp, #8]
 800f6dc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f6e0:	9201      	str	r2, [sp, #4]
 800f6e2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f6e6:	9200      	str	r2, [sp, #0]
 800f6e8:	b2db      	uxtb	r3, r3
 800f6ea:	4a05      	ldr	r2, [pc, #20]	@ (800f700 <net::display_gateway()+0x3c>)
 800f6ec:	4620      	mov	r0, r4
 800f6ee:	f7f9 fd87 	bl	8009200 <Display::Printf(unsigned long, char const*, ...)>
 800f6f2:	b004      	add	sp, #16
 800f6f4:	bd10      	pop	{r4, pc}
 800f6f6:	bf00      	nop
 800f6f8:	20000a74 	andcs	r0, r0, r4, ror sl
 800f6fc:	200009cc 	andcs	r0, r0, ip, asr #19
 800f700:	080145ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, lr}

0800f704 <net::display_hostname()>:
 800f704:	b508      	push	{r3, lr}
 800f706:	4b07      	ldr	r3, [pc, #28]	@ (800f724 <net::display_hostname()+0x20>)
 800f708:	6819      	ldr	r1, [r3, #0]
 800f70a:	6988      	ldr	r0, [r1, #24]
 800f70c:	f7ff ff5b 	bl	800f5c6 <Display::ClearEndOfLine() [clone .isra.0]>
 800f710:	4b05      	ldr	r3, [pc, #20]	@ (800f728 <net::display_hostname()+0x24>)
 800f712:	f891 1043 	ldrb.w	r1, [r1, #67]	@ 0x43
 800f716:	681a      	ldr	r2, [r3, #0]
 800f718:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f71c:	3216      	adds	r2, #22
 800f71e:	f7ff bf56 	b.w	800f5ce <Display::Write(unsigned long, char const*) [clone .isra.0]>
 800f722:	bf00      	nop
 800f724:	20000a74 	andcs	r0, r0, r4, ror sl
 800f728:	200009ac 	andcs	r0, r0, ip, lsr #19

0800f72c <ConfigStore::GetStoreOffset(configstore::Store)>:
 800f72c:	b510      	push	{r4, lr}
 800f72e:	4a05      	ldr	r2, [pc, #20]	@ (800f744 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 800f730:	2300      	movs	r3, #0
 800f732:	2020      	movs	r0, #32
 800f734:	428b      	cmp	r3, r1
 800f736:	d100      	bne.n	800f73a <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 800f738:	bd10      	pop	{r4, pc}
 800f73a:	f852 4b04 	ldr.w	r4, [r2], #4
 800f73e:	3301      	adds	r3, #1
 800f740:	4420      	add	r0, r4
 800f742:	e7f7      	b.n	800f734 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 800f744:	08017240 	stmdaeq	r1, {r6, r9, ip, sp, lr}

0800f748 <ConfigStore::ConfigStore()>:
 800f748:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f74c:	b085      	sub	sp, #20
 800f74e:	4605      	mov	r5, r0
 800f750:	f000 f9e4 	bl	800fb1c <StoreDevice::StoreDevice()>
 800f754:	4b30      	ldr	r3, [pc, #192]	@ (800f818 <ConfigStore::ConfigStore()+0xd0>)
 800f756:	4c31      	ldr	r4, [pc, #196]	@ (800f81c <ConfigStore::ConfigStore()+0xd4>)
 800f758:	601d      	str	r5, [r3, #0]
 800f75a:	4b31      	ldr	r3, [pc, #196]	@ (800f820 <ConfigStore::ConfigStore()+0xd8>)
 800f75c:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 800f83c <ConfigStore::ConfigStore()+0xf4>
 800f760:	601c      	str	r4, [r3, #0]
 800f762:	4628      	mov	r0, r5
 800f764:	782b      	ldrb	r3, [r5, #0]
 800f766:	f888 3000 	strb.w	r3, [r8]
 800f76a:	f000 f9e8 	bl	800fb3e <StoreDevice::GetSectorSize() const>
 800f76e:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 800f772:	4606      	mov	r6, r0
 800f774:	fbb7 f9f0 	udiv	r9, r7, r0
 800f778:	4628      	mov	r0, r5
 800f77a:	f000 f9dd 	bl	800fb38 <StoreDevice::GetSize() const>
 800f77e:	4b29      	ldr	r3, [pc, #164]	@ (800f824 <ConfigStore::ConfigStore()+0xdc>)
 800f780:	fb09 0116 	mls	r1, r9, r6, r0
 800f784:	6019      	str	r1, [r3, #0]
 800f786:	f898 3000 	ldrb.w	r3, [r8]
 800f78a:	3c10      	subs	r4, #16
 800f78c:	b133      	cbz	r3, 800f79c <ConfigStore::ConfigStore()+0x54>
 800f78e:	ab03      	add	r3, sp, #12
 800f790:	9300      	str	r3, [sp, #0]
 800f792:	463a      	mov	r2, r7
 800f794:	4623      	mov	r3, r4
 800f796:	4628      	mov	r0, r5
 800f798:	f000 f9d4 	bl	800fb44 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 800f79c:	4822      	ldr	r0, [pc, #136]	@ (800f828 <ConfigStore::ConfigStore()+0xe0>)
 800f79e:	4b23      	ldr	r3, [pc, #140]	@ (800f82c <ConfigStore::ConfigStore()+0xe4>)
 800f7a0:	2104      	movs	r1, #4
 800f7a2:	2201      	movs	r2, #1
 800f7a4:	f810 6b01 	ldrb.w	r6, [r0], #1
 800f7a8:	f813 7b01 	ldrb.w	r7, [r3], #1
 800f7ac:	42be      	cmp	r6, r7
 800f7ae:	bf1c      	itt	ne
 800f7b0:	f803 6c01 	strbne.w	r6, [r3, #-1]
 800f7b4:	2200      	movne	r2, #0
 800f7b6:	3901      	subs	r1, #1
 800f7b8:	d1f4      	bne.n	800f7a4 <ConfigStore::ConfigStore()+0x5c>
 800f7ba:	b952      	cbnz	r2, 800f7d2 <ConfigStore::ConfigStore()+0x8a>
 800f7bc:	4a17      	ldr	r2, [pc, #92]	@ (800f81c <ConfigStore::ConfigStore()+0xd4>)
 800f7be:	f44f 637f 	mov.w	r3, #4080	@ 0xff0
 800f7c2:	4608      	mov	r0, r1
 800f7c4:	3b01      	subs	r3, #1
 800f7c6:	f802 0b01 	strb.w	r0, [r2], #1
 800f7ca:	d1fb      	bne.n	800f7c4 <ConfigStore::ConfigStore()+0x7c>
 800f7cc:	4b18      	ldr	r3, [pc, #96]	@ (800f830 <ConfigStore::ConfigStore()+0xe8>)
 800f7ce:	2201      	movs	r2, #1
 800f7d0:	601a      	str	r2, [r3, #0]
 800f7d2:	4818      	ldr	r0, [pc, #96]	@ (800f834 <ConfigStore::ConfigStore()+0xec>)
 800f7d4:	2200      	movs	r2, #0
 800f7d6:	2320      	movs	r3, #32
 800f7d8:	f850 6b04 	ldr.w	r6, [r0], #4
 800f7dc:	3201      	adds	r2, #1
 800f7de:	2a1b      	cmp	r2, #27
 800f7e0:	4433      	add	r3, r6
 800f7e2:	d1f9      	bne.n	800f7d8 <ConfigStore::ConfigStore()+0x90>
 800f7e4:	4a14      	ldr	r2, [pc, #80]	@ (800f838 <ConfigStore::ConfigStore()+0xf0>)
 800f7e6:	2600      	movs	r6, #0
 800f7e8:	6013      	str	r3, [r2, #0]
 800f7ea:	4628      	mov	r0, r5
 800f7ec:	f7ff ff9e 	bl	800f72c <ConfigStore::GetStoreOffset(configstore::Store)>
 800f7f0:	5823      	ldr	r3, [r4, r0]
 800f7f2:	3101      	adds	r1, #1
 800f7f4:	3301      	adds	r3, #1
 800f7f6:	bf08      	it	eq
 800f7f8:	5026      	streq	r6, [r4, r0]
 800f7fa:	291b      	cmp	r1, #27
 800f7fc:	d1f5      	bne.n	800f7ea <ConfigStore::ConfigStore()+0xa2>
 800f7fe:	6923      	ldr	r3, [r4, #16]
 800f800:	3301      	adds	r3, #1
 800f802:	d104      	bne.n	800f80e <ConfigStore::ConfigStore()+0xc6>
 800f804:	2300      	movs	r3, #0
 800f806:	7423      	strb	r3, [r4, #16]
 800f808:	7463      	strb	r3, [r4, #17]
 800f80a:	74a3      	strb	r3, [r4, #18]
 800f80c:	74e3      	strb	r3, [r4, #19]
 800f80e:	4628      	mov	r0, r5
 800f810:	b005      	add	sp, #20
 800f812:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f816:	bf00      	nop
 800f818:	20000a78 	andcs	r0, r0, r8, ror sl
 800f81c:	40024010 	andmi	r4, r2, r0, lsl r0
 800f820:	20004864 	andcs	r4, r0, r4, ror #16
 800f824:	20000a84 	andcs	r0, r0, r4, lsl #21
 800f828:	080172ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, sp, lr}
 800f82c:	40024000 	andmi	r4, r2, r0
 800f830:	20000a88 	andcs	r0, r0, r8, lsl #21
 800f834:	08017240 	stmdaeq	r1, {r6, r9, ip, sp, lr}
 800f838:	20000a80 	andcs	r0, r0, r0, lsl #21
 800f83c:	20000a8c 	andcs	r0, r0, ip, lsl #21

0800f840 <ConfigStore::ResetSetList(configstore::Store)>:
 800f840:	b508      	push	{r3, lr}
 800f842:	f7ff ff73 	bl	800f72c <ConfigStore::GetStoreOffset(configstore::Store)>
 800f846:	4905      	ldr	r1, [pc, #20]	@ (800f85c <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 800f848:	1842      	adds	r2, r0, r1
 800f84a:	2300      	movs	r3, #0
 800f84c:	540b      	strb	r3, [r1, r0]
 800f84e:	7053      	strb	r3, [r2, #1]
 800f850:	7093      	strb	r3, [r2, #2]
 800f852:	70d3      	strb	r3, [r2, #3]
 800f854:	4b02      	ldr	r3, [pc, #8]	@ (800f860 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 800f856:	2201      	movs	r2, #1
 800f858:	601a      	str	r2, [r3, #0]
 800f85a:	bd08      	pop	{r3, pc}
 800f85c:	40024000 	andmi	r4, r2, r0
 800f860:	20000a88 	andcs	r0, r0, r8, lsl #21

0800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 800f864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f866:	4614      	mov	r4, r2
 800f868:	461d      	mov	r5, r3
 800f86a:	f7ff ff5f 	bl	800f72c <ConfigStore::GetStoreOffset(configstore::Store)>
 800f86e:	490e      	ldr	r1, [pc, #56]	@ (800f8a8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x44>)
 800f870:	1902      	adds	r2, r0, r4
 800f872:	9c06      	ldr	r4, [sp, #24]
 800f874:	440a      	add	r2, r1
 800f876:	1e6b      	subs	r3, r5, #1
 800f878:	4414      	add	r4, r2
 800f87a:	2500      	movs	r5, #0
 800f87c:	42a2      	cmp	r2, r4
 800f87e:	d10a      	bne.n	800f896 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x32>
 800f880:	b145      	cbz	r5, 800f894 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x30>
 800f882:	9b08      	ldr	r3, [sp, #32]
 800f884:	9a07      	ldr	r2, [sp, #28]
 800f886:	4418      	add	r0, r3
 800f888:	580b      	ldr	r3, [r1, r0]
 800f88a:	4313      	orrs	r3, r2
 800f88c:	500b      	str	r3, [r1, r0]
 800f88e:	4b07      	ldr	r3, [pc, #28]	@ (800f8ac <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x48>)
 800f890:	2201      	movs	r2, #1
 800f892:	601a      	str	r2, [r3, #0]
 800f894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f896:	7817      	ldrb	r7, [r2, #0]
 800f898:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800f89c:	42b7      	cmp	r7, r6
 800f89e:	bf1c      	itt	ne
 800f8a0:	7016      	strbne	r6, [r2, #0]
 800f8a2:	2501      	movne	r5, #1
 800f8a4:	3201      	adds	r2, #1
 800f8a6:	e7e9      	b.n	800f87c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x18>
 800f8a8:	40024000 	andmi	r4, r2, r0
 800f8ac:	20000a88 	andcs	r0, r0, r8, lsl #21

0800f8b0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
 800f8b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f8b4:	b085      	sub	sp, #20
 800f8b6:	461e      	mov	r6, r3
 800f8b8:	4615      	mov	r5, r2
 800f8ba:	4607      	mov	r7, r0
 800f8bc:	f7ff ff36 	bl	800f72c <ConfigStore::GetStoreOffset(configstore::Store)>
 800f8c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f8c2:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 800f8c6:	18c4      	adds	r4, r0, r3
 800f8c8:	4b10      	ldr	r3, [pc, #64]	@ (800f90c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>)
 800f8ca:	441c      	add	r4, r3
 800f8cc:	4688      	mov	r8, r1
 800f8ce:	4623      	mov	r3, r4
 800f8d0:	1932      	adds	r2, r6, r4
 800f8d2:	4293      	cmp	r3, r2
 800f8d4:	d10c      	bne.n	800f8f0 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x40>
 800f8d6:	f1b9 0f00 	cmp.w	r9, #0
 800f8da:	d00f      	beq.n	800f8fc <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 800f8dc:	2200      	movs	r2, #0
 800f8de:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f8e2:	9600      	str	r6, [sp, #0]
 800f8e4:	462b      	mov	r3, r5
 800f8e6:	4641      	mov	r1, r8
 800f8e8:	4638      	mov	r0, r7
 800f8ea:	f7ff ffbb 	bl	800f864 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800f8ee:	e005      	b.n	800f8fc <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 800f8f0:	f813 1b01 	ldrb.w	r1, [r3], #1
 800f8f4:	2900      	cmp	r1, #0
 800f8f6:	d0ec      	beq.n	800f8d2 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x22>
 800f8f8:	4294      	cmp	r4, r2
 800f8fa:	d102      	bne.n	800f902 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x52>
 800f8fc:	b005      	add	sp, #20
 800f8fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f902:	f814 3b01 	ldrb.w	r3, [r4], #1
 800f906:	f805 3b01 	strb.w	r3, [r5], #1
 800f90a:	e7f5      	b.n	800f8f8 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
 800f90c:	40024000 	andmi	r4, r2, r0

0800f910 <ConfigStore::Flash()>:
 800f910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f912:	4c24      	ldr	r4, [pc, #144]	@ (800f9a4 <ConfigStore::Flash()+0x94>)
 800f914:	6823      	ldr	r3, [r4, #0]
 800f916:	2b00      	cmp	r3, #0
 800f918:	d041      	beq.n	800f99e <ConfigStore::Flash()+0x8e>
 800f91a:	3b01      	subs	r3, #1
 800f91c:	2b05      	cmp	r3, #5
 800f91e:	d82f      	bhi.n	800f980 <ConfigStore::Flash()+0x70>
 800f920:	e8df f003 	tbb	[pc, r3]
 800f924:	2c140b03 			@ <UNDEFINED> instruction: 0x2c140b03
 800f928:	4b1f2e23 	blmi	87db1bc <_sidata+0x7c3b40>
 800f92c:	681a      	ldr	r2, [r3, #0]
 800f92e:	4b1f      	ldr	r3, [pc, #124]	@ (800f9ac <ConfigStore::Flash()+0x9c>)
 800f930:	601a      	str	r2, [r3, #0]
 800f932:	2302      	movs	r3, #2
 800f934:	6023      	str	r3, [r4, #0]
 800f936:	2001      	movs	r0, #1
 800f938:	e02f      	b.n	800f99a <ConfigStore::Flash()+0x8a>
 800f93a:	4b1b      	ldr	r3, [pc, #108]	@ (800f9a8 <ConfigStore::Flash()+0x98>)
 800f93c:	4a1b      	ldr	r2, [pc, #108]	@ (800f9ac <ConfigStore::Flash()+0x9c>)
 800f93e:	681b      	ldr	r3, [r3, #0]
 800f940:	6812      	ldr	r2, [r2, #0]
 800f942:	1a9b      	subs	r3, r3, r2
 800f944:	2b63      	cmp	r3, #99	@ 0x63
 800f946:	d9f6      	bls.n	800f936 <ConfigStore::Flash()+0x26>
 800f948:	2303      	movs	r3, #3
 800f94a:	e7f3      	b.n	800f934 <ConfigStore::Flash()+0x24>
 800f94c:	4918      	ldr	r1, [pc, #96]	@ (800f9b0 <ConfigStore::Flash()+0xa0>)
 800f94e:	ab03      	add	r3, sp, #12
 800f950:	6809      	ldr	r1, [r1, #0]
 800f952:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800f956:	f000 f8fa 	bl	800fb4e <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 800f95a:	2800      	cmp	r0, #0
 800f95c:	d0eb      	beq.n	800f936 <ConfigStore::Flash()+0x26>
 800f95e:	4b12      	ldr	r3, [pc, #72]	@ (800f9a8 <ConfigStore::Flash()+0x98>)
 800f960:	681a      	ldr	r2, [r3, #0]
 800f962:	4b12      	ldr	r3, [pc, #72]	@ (800f9ac <ConfigStore::Flash()+0x9c>)
 800f964:	601a      	str	r2, [r3, #0]
 800f966:	2305      	movs	r3, #5
 800f968:	e7e4      	b.n	800f934 <ConfigStore::Flash()+0x24>
 800f96a:	4b0f      	ldr	r3, [pc, #60]	@ (800f9a8 <ConfigStore::Flash()+0x98>)
 800f96c:	4a0f      	ldr	r2, [pc, #60]	@ (800f9ac <ConfigStore::Flash()+0x9c>)
 800f96e:	681b      	ldr	r3, [r3, #0]
 800f970:	6812      	ldr	r2, [r2, #0]
 800f972:	1a9b      	subs	r3, r3, r2
 800f974:	2b63      	cmp	r3, #99	@ 0x63
 800f976:	d9de      	bls.n	800f936 <ConfigStore::Flash()+0x26>
 800f978:	2304      	movs	r3, #4
 800f97a:	e7db      	b.n	800f934 <ConfigStore::Flash()+0x24>
 800f97c:	2306      	movs	r3, #6
 800f97e:	e7d9      	b.n	800f934 <ConfigStore::Flash()+0x24>
 800f980:	ab03      	add	r3, sp, #12
 800f982:	4a0c      	ldr	r2, [pc, #48]	@ (800f9b4 <ConfigStore::Flash()+0xa4>)
 800f984:	490a      	ldr	r1, [pc, #40]	@ (800f9b0 <ConfigStore::Flash()+0xa0>)
 800f986:	9300      	str	r3, [sp, #0]
 800f988:	6812      	ldr	r2, [r2, #0]
 800f98a:	4b0b      	ldr	r3, [pc, #44]	@ (800f9b8 <ConfigStore::Flash()+0xa8>)
 800f98c:	6809      	ldr	r1, [r1, #0]
 800f98e:	f000 f8e2 	bl	800fb56 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 800f992:	2800      	cmp	r0, #0
 800f994:	d0cf      	beq.n	800f936 <ConfigStore::Flash()+0x26>
 800f996:	2000      	movs	r0, #0
 800f998:	6020      	str	r0, [r4, #0]
 800f99a:	b004      	add	sp, #16
 800f99c:	bd10      	pop	{r4, pc}
 800f99e:	4618      	mov	r0, r3
 800f9a0:	e7fb      	b.n	800f99a <ConfigStore::Flash()+0x8a>
 800f9a2:	bf00      	nop
 800f9a4:	20000a88 	andcs	r0, r0, r8, lsl #21
 800f9a8:	20004830 	andcs	r4, r0, r0, lsr r8
 800f9ac:	20000a7c 	andcs	r0, r0, ip, ror sl
 800f9b0:	20000a84 	andcs	r0, r0, r4, lsl #21
 800f9b4:	20000a80 	andcs	r0, r0, r0, lsl #21
 800f9b8:	40024000 	andmi	r4, r2, r0

0800f9bc <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
 800f9bc:	b510      	push	{r4, lr}
 800f9be:	4a0d      	ldr	r2, [pc, #52]	@ (800f9f4 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x38>)
 800f9c0:	f44f 6461 	mov.w	r4, #3600	@ 0xe10
 800f9c4:	6913      	ldr	r3, [r2, #16]
 800f9c6:	fb93 f3f4 	sdiv	r3, r3, r4
 800f9ca:	b25b      	sxtb	r3, r3
 800f9cc:	7003      	strb	r3, [r0, #0]
 800f9ce:	2b00      	cmp	r3, #0
 800f9d0:	6912      	ldr	r2, [r2, #16]
 800f9d2:	dd08      	ble.n	800f9e6 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x2a>
 800f9d4:	4808      	ldr	r0, [pc, #32]	@ (800f9f8 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x3c>)
 800f9d6:	fb00 2203 	mla	r2, r0, r3, r2
 800f9da:	233c      	movs	r3, #60	@ 0x3c
 800f9dc:	fbb2 f2f3 	udiv	r2, r2, r3
 800f9e0:	b2d3      	uxtb	r3, r2
 800f9e2:	700b      	strb	r3, [r1, #0]
 800f9e4:	bd10      	pop	{r4, pc}
 800f9e6:	4363      	muls	r3, r4
 800f9e8:	1a9b      	subs	r3, r3, r2
 800f9ea:	223c      	movs	r2, #60	@ 0x3c
 800f9ec:	fbb3 f3f2 	udiv	r3, r3, r2
 800f9f0:	b2db      	uxtb	r3, r3
 800f9f2:	e7f6      	b.n	800f9e2 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x26>
 800f9f4:	40024000 	andmi	r4, r2, r0
 800f9f8:	fffff1f0 			@ <UNDEFINED> instruction: 0xfffff1f0

0800f9fc <EnvParams::EnvParams()>:
 800f9fc:	4770      	bx	lr
	...

0800fa00 <EnvParams::LoadAndSet(char const*, unsigned long)>:
 800fa00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fa02:	460c      	mov	r4, r1
 800fa04:	4615      	mov	r5, r2
 800fa06:	4907      	ldr	r1, [pc, #28]	@ (800fa24 <EnvParams::LoadAndSet(char const*, unsigned long)+0x24>)
 800fa08:	4602      	mov	r2, r0
 800fa0a:	4668      	mov	r0, sp
 800fa0c:	f000 fa2a 	bl	800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800fa10:	462a      	mov	r2, r5
 800fa12:	4621      	mov	r1, r4
 800fa14:	4668      	mov	r0, sp
 800fa16:	f000 fa29 	bl	800fe6c <ReadConfigFile::Read(char const*, unsigned int)>
 800fa1a:	4668      	mov	r0, sp
 800fa1c:	f000 fa25 	bl	800fe6a <ReadConfigFile::~ReadConfigFile()>
 800fa20:	b003      	add	sp, #12
 800fa22:	bd30      	pop	{r4, r5, pc}
 800fa24:	0800fab5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, fp, ip, sp, lr, pc}

0800fa28 <EnvParams::callbackFunction(char const*)>:
 800fa28:	b513      	push	{r0, r1, r4, lr}
 800fa2a:	4608      	mov	r0, r1
 800fa2c:	f10d 0307 	add.w	r3, sp, #7
 800fa30:	491c      	ldr	r1, [pc, #112]	@ (800faa4 <EnvParams::callbackFunction(char const*)+0x7c>)
 800fa32:	f10d 0206 	add.w	r2, sp, #6
 800fa36:	f000 fac3 	bl	800ffc0 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
 800fa3a:	bb70      	cbnz	r0, 800fa9a <EnvParams::callbackFunction(char const*)+0x72>
 800fa3c:	f99d 1006 	ldrsb.w	r1, [sp, #6]
 800fa40:	f101 030c 	add.w	r3, r1, #12
 800fa44:	b2db      	uxtb	r3, r3
 800fa46:	2b1a      	cmp	r3, #26
 800fa48:	d827      	bhi.n	800fa9a <EnvParams::callbackFunction(char const*)+0x72>
 800fa4a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800fa4e:	bb32      	cbnz	r2, 800fa9e <EnvParams::callbackFunction(char const*)+0x76>
 800fa50:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 800fa54:	434b      	muls	r3, r1
 800fa56:	4a14      	ldr	r2, [pc, #80]	@ (800faa8 <EnvParams::callbackFunction(char const*)+0x80>)
 800fa58:	6911      	ldr	r1, [r2, #16]
 800fa5a:	4299      	cmp	r1, r3
 800fa5c:	bf1f      	itttt	ne
 800fa5e:	6113      	strne	r3, [r2, #16]
 800fa60:	4b12      	ldrne	r3, [pc, #72]	@ (800faac <EnvParams::callbackFunction(char const*)+0x84>)
 800fa62:	2201      	movne	r2, #1
 800fa64:	601a      	strne	r2, [r3, #0]
 800fa66:	e018      	b.n	800fa9a <EnvParams::callbackFunction(char const*)+0x72>
 800fa68:	f993 4000 	ldrsb.w	r4, [r3]
 800fa6c:	428c      	cmp	r4, r1
 800fa6e:	d111      	bne.n	800fa94 <EnvParams::callbackFunction(char const*)+0x6c>
 800fa70:	785c      	ldrb	r4, [r3, #1]
 800fa72:	4294      	cmp	r4, r2
 800fa74:	d10e      	bne.n	800fa94 <EnvParams::callbackFunction(char const*)+0x6c>
 800fa76:	2900      	cmp	r1, #0
 800fa78:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 800fa7c:	fb01 f303 	mul.w	r3, r1, r3
 800fa80:	bfcb      	itete	gt
 800fa82:	ebc2 1202 	rsbgt	r2, r2, r2, lsl #4
 800fa86:	f06f 013b 	mvnle.w	r1, #59	@ 0x3b
 800fa8a:	eb03 0382 	addgt.w	r3, r3, r2, lsl #2
 800fa8e:	fb01 3302 	mlale	r3, r1, r2, r3
 800fa92:	e7e0      	b.n	800fa56 <EnvParams::callbackFunction(char const*)+0x2e>
 800fa94:	3302      	adds	r3, #2
 800fa96:	3801      	subs	r0, #1
 800fa98:	d1e6      	bne.n	800fa68 <EnvParams::callbackFunction(char const*)+0x40>
 800fa9a:	b002      	add	sp, #8
 800fa9c:	bd10      	pop	{r4, pc}
 800fa9e:	4b04      	ldr	r3, [pc, #16]	@ (800fab0 <EnvParams::callbackFunction(char const*)+0x88>)
 800faa0:	200c      	movs	r0, #12
 800faa2:	e7f8      	b.n	800fa96 <EnvParams::callbackFunction(char const*)+0x6e>
 800faa4:	080172c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, ip, sp, lr}
 800faa8:	40024000 	andmi	r4, r2, r0
 800faac:	20000a88 	andcs	r0, r0, r8, lsl #21
 800fab0:	080172b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp, lr}

0800fab4 <EnvParams::staticCallbackFunction(void*, char const*)>:
 800fab4:	f7ff bfb8 	b.w	800fa28 <EnvParams::callbackFunction(char const*)>

0800fab8 <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
 800fab8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800faba:	461c      	mov	r4, r3
 800fabc:	a801      	add	r0, sp, #4
 800fabe:	4613      	mov	r3, r2
 800fac0:	460a      	mov	r2, r1
 800fac2:	4914      	ldr	r1, [pc, #80]	@ (800fb14 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x5c>)
 800fac4:	f000 f8f8 	bl	800fcb8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800fac8:	f10d 0103 	add.w	r1, sp, #3
 800facc:	f10d 0002 	add.w	r0, sp, #2
 800fad0:	f7ff ff74 	bl	800f9bc <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
 800fad4:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800fad8:	f99d 2002 	ldrsb.w	r2, [sp, #2]
 800fadc:	490e      	ldr	r1, [pc, #56]	@ (800fb18 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x60>)
 800fade:	a801      	add	r0, sp, #4
 800fae0:	f000 f970 	bl	800fdc4 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
 800fae4:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800fae8:	b17b      	cbz	r3, 800fb0a <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x52>
 800faea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800faee:	9b01      	ldr	r3, [sp, #4]
 800faf0:	4413      	add	r3, r2
 800faf2:	227d      	movs	r2, #125	@ 0x7d
 800faf4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800faf8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800fafc:	9901      	ldr	r1, [sp, #4]
 800fafe:	54ca      	strb	r2, [r1, r3]
 800fb00:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800fb04:	3301      	adds	r3, #1
 800fb06:	f8ad 300a 	strh.w	r3, [sp, #10]
 800fb0a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800fb0e:	6023      	str	r3, [r4, #0]
 800fb10:	b004      	add	sp, #16
 800fb12:	bd10      	pop	{r4, pc}
 800fb14:	080172d1 	stmdaeq	r1, {r0, r4, r6, r7, r9, ip, sp, lr}
 800fb18:	080172c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, ip, sp, lr}

0800fb1c <StoreDevice::StoreDevice()>:
 800fb1c:	b510      	push	{r4, lr}
 800fb1e:	2301      	movs	r3, #1
 800fb20:	4604      	mov	r4, r0
 800fb22:	7003      	strb	r3, [r0, #0]
 800fb24:	2204      	movs	r2, #4
 800fb26:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800fb2a:	4802      	ldr	r0, [pc, #8]	@ (800fb34 <StoreDevice::StoreDevice()+0x18>)
 800fb2c:	f003 fea0 	bl	8013870 <printf>
 800fb30:	4620      	mov	r0, r4
 800fb32:	bd10      	pop	{r4, pc}
 800fb34:	08014601 	stmdaeq	r1, {r0, r9, sl, lr}

0800fb38 <StoreDevice::GetSize() const>:
 800fb38:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800fb3c:	4770      	bx	lr

0800fb3e <StoreDevice::GetSectorSize() const>:
 800fb3e:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800fb42:	4770      	bx	lr

0800fb44 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 800fb44:	9b00      	ldr	r3, [sp, #0]
 800fb46:	2200      	movs	r2, #0
 800fb48:	601a      	str	r2, [r3, #0]
 800fb4a:	2001      	movs	r0, #1
 800fb4c:	4770      	bx	lr

0800fb4e <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 800fb4e:	2200      	movs	r2, #0
 800fb50:	601a      	str	r2, [r3, #0]
 800fb52:	2001      	movs	r0, #1
 800fb54:	4770      	bx	lr

0800fb56 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 800fb56:	9b00      	ldr	r3, [sp, #0]
 800fb58:	2200      	movs	r2, #0
 800fb5a:	601a      	str	r2, [r3, #0]
 800fb5c:	2001      	movs	r0, #1
 800fb5e:	4770      	bx	lr

0800fb60 <properties::convert_json_file(char*, unsigned long, bool)>:
 800fb60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fb64:	7803      	ldrb	r3, [r0, #0]
 800fb66:	2b7b      	cmp	r3, #123	@ 0x7b
 800fb68:	4604      	mov	r4, r0
 800fb6a:	f040 80a2 	bne.w	800fcb2 <properties::convert_json_file(char*, unsigned long, bool)+0x152>
 800fb6e:	b172      	cbz	r2, 800fb8e <properties::convert_json_file(char*, unsigned long, bool)+0x2e>
 800fb70:	2501      	movs	r5, #1
 800fb72:	4603      	mov	r3, r0
 800fb74:	4628      	mov	r0, r5
 800fb76:	f04f 0c3d 	mov.w	ip, #61	@ 0x3d
 800fb7a:	f04f 0e0a 	mov.w	lr, #10
 800fb7e:	428d      	cmp	r5, r1
 800fb80:	d377      	bcc.n	800fc72 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 800fb82:	b102      	cbz	r2, 800fb86 <properties::convert_json_file(char*, unsigned long, bool)+0x26>
 800fb84:	3801      	subs	r0, #1
 800fb86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fb8a:	4635      	mov	r5, r6
 800fb8c:	e7f3      	b.n	800fb76 <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 800fb8e:	4605      	mov	r5, r0
 800fb90:	2323      	movs	r3, #35	@ 0x23
 800fb92:	f805 3b01 	strb.w	r3, [r5], #1
 800fb96:	2601      	movs	r6, #1
 800fb98:	462f      	mov	r7, r5
 800fb9a:	428e      	cmp	r6, r1
 800fb9c:	d317      	bcc.n	800fbce <properties::convert_json_file(char*, unsigned long, bool)+0x6e>
 800fb9e:	1c6b      	adds	r3, r5, #1
 800fba0:	428e      	cmp	r6, r1
 800fba2:	eba3 0004 	sub.w	r0, r3, r4
 800fba6:	d205      	bcs.n	800fbb4 <properties::convert_json_file(char*, unsigned long, bool)+0x54>
 800fba8:	46bc      	mov	ip, r7
 800fbaa:	f81c eb01 	ldrb.w	lr, [ip], #1
 800fbae:	f1be 0f22 	cmp.w	lr, #34	@ 0x22
 800fbb2:	d112      	bne.n	800fbda <properties::convert_json_file(char*, unsigned long, bool)+0x7a>
 800fbb4:	240a      	movs	r4, #10
 800fbb6:	702c      	strb	r4, [r5, #0]
 800fbb8:	463c      	mov	r4, r7
 800fbba:	3701      	adds	r7, #1
 800fbbc:	7825      	ldrb	r5, [r4, #0]
 800fbbe:	2d7b      	cmp	r5, #123	@ 0x7b
 800fbc0:	d0e3      	beq.n	800fb8a <properties::convert_json_file(char*, unsigned long, bool)+0x2a>
 800fbc2:	428e      	cmp	r6, r1
 800fbc4:	f106 0501 	add.w	r5, r6, #1
 800fbc8:	d2d5      	bcs.n	800fb76 <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 800fbca:	462e      	mov	r6, r5
 800fbcc:	e7f4      	b.n	800fbb8 <properties::convert_json_file(char*, unsigned long, bool)+0x58>
 800fbce:	f817 3b01 	ldrb.w	r3, [r7], #1
 800fbd2:	2b22      	cmp	r3, #34	@ 0x22
 800fbd4:	d0e3      	beq.n	800fb9e <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 800fbd6:	3601      	adds	r6, #1
 800fbd8:	e7df      	b.n	800fb9a <properties::convert_json_file(char*, unsigned long, bool)+0x3a>
 800fbda:	f803 ec01 	strb.w	lr, [r3, #-1]
 800fbde:	3601      	adds	r6, #1
 800fbe0:	4667      	mov	r7, ip
 800fbe2:	461d      	mov	r5, r3
 800fbe4:	e7db      	b.n	800fb9e <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 800fbe6:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 800fbea:	d142      	bne.n	800fc72 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 800fbec:	eba0 0904 	sub.w	r9, r0, r4
 800fbf0:	f894 8000 	ldrb.w	r8, [r4]
 800fbf4:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 800fbf8:	eb04 0009 	add.w	r0, r4, r9
 800fbfc:	4626      	mov	r6, r4
 800fbfe:	f105 0701 	add.w	r7, r5, #1
 800fc02:	f104 0401 	add.w	r4, r4, #1
 800fc06:	d13f      	bne.n	800fc88 <properties::convert_json_file(char*, unsigned long, bool)+0x128>
 800fc08:	f803 cb01 	strb.w	ip, [r3], #1
 800fc0c:	3001      	adds	r0, #1
 800fc0e:	462f      	mov	r7, r5
 800fc10:	428f      	cmp	r7, r1
 800fc12:	f896 8000 	ldrb.w	r8, [r6]
 800fc16:	4634      	mov	r4, r6
 800fc18:	f107 0701 	add.w	r7, r7, #1
 800fc1c:	f106 0601 	add.w	r6, r6, #1
 800fc20:	d338      	bcc.n	800fc94 <properties::convert_json_file(char*, unsigned long, bool)+0x134>
 800fc22:	7825      	ldrb	r5, [r4, #0]
 800fc24:	2d20      	cmp	r5, #32
 800fc26:	4626      	mov	r6, r4
 800fc28:	46b8      	mov	r8, r7
 800fc2a:	f104 0401 	add.w	r4, r4, #1
 800fc2e:	f107 0701 	add.w	r7, r7, #1
 800fc32:	d134      	bne.n	800fc9e <properties::convert_json_file(char*, unsigned long, bool)+0x13e>
 800fc34:	4588      	cmp	r8, r1
 800fc36:	d3f4      	bcc.n	800fc22 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 800fc38:	46b8      	mov	r8, r7
 800fc3a:	7834      	ldrb	r4, [r6, #0]
 800fc3c:	2c22      	cmp	r4, #34	@ 0x22
 800fc3e:	d100      	bne.n	800fc42 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 800fc40:	3601      	adds	r6, #1
 800fc42:	4634      	mov	r4, r6
 800fc44:	f108 0501 	add.w	r5, r8, #1
 800fc48:	f814 7b01 	ldrb.w	r7, [r4], #1
 800fc4c:	2f22      	cmp	r7, #34	@ 0x22
 800fc4e:	d02a      	beq.n	800fca6 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 800fc50:	2f2c      	cmp	r7, #44	@ 0x2c
 800fc52:	d028      	beq.n	800fca6 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 800fc54:	2f7d      	cmp	r7, #125	@ 0x7d
 800fc56:	d026      	beq.n	800fca6 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 800fc58:	4588      	cmp	r8, r1
 800fc5a:	d228      	bcs.n	800fcae <properties::convert_json_file(char*, unsigned long, bool)+0x14e>
 800fc5c:	f1a7 0820 	sub.w	r8, r7, #32
 800fc60:	f1b8 0f5a 	cmp.w	r8, #90	@ 0x5a
 800fc64:	d803      	bhi.n	800fc6e <properties::convert_json_file(char*, unsigned long, bool)+0x10e>
 800fc66:	f803 7b01 	strb.w	r7, [r3], #1
 800fc6a:	3001      	adds	r0, #1
 800fc6c:	4626      	mov	r6, r4
 800fc6e:	46a8      	mov	r8, r5
 800fc70:	e7e7      	b.n	800fc42 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 800fc72:	428d      	cmp	r5, r1
 800fc74:	f894 8000 	ldrb.w	r8, [r4]
 800fc78:	4627      	mov	r7, r4
 800fc7a:	f105 0501 	add.w	r5, r5, #1
 800fc7e:	f104 0401 	add.w	r4, r4, #1
 800fc82:	d3b0      	bcc.n	800fbe6 <properties::convert_json_file(char*, unsigned long, bool)+0x86>
 800fc84:	463c      	mov	r4, r7
 800fc86:	e7b1      	b.n	800fbec <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
 800fc88:	428d      	cmp	r5, r1
 800fc8a:	d2c1      	bcs.n	800fc10 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 800fc8c:	f803 8b01 	strb.w	r8, [r3], #1
 800fc90:	463d      	mov	r5, r7
 800fc92:	e7ad      	b.n	800fbf0 <properties::convert_json_file(char*, unsigned long, bool)+0x90>
 800fc94:	f1b8 0f3a 	cmp.w	r8, #58	@ 0x3a
 800fc98:	d1ba      	bne.n	800fc10 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 800fc9a:	4634      	mov	r4, r6
 800fc9c:	e7c1      	b.n	800fc22 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 800fc9e:	2d22      	cmp	r5, #34	@ 0x22
 800fca0:	bf08      	it	eq
 800fca2:	4626      	moveq	r6, r4
 800fca4:	e7c9      	b.n	800fc3a <properties::convert_json_file(char*, unsigned long, bool)+0xda>
 800fca6:	f803 eb01 	strb.w	lr, [r3], #1
 800fcaa:	3001      	adds	r0, #1
 800fcac:	4645      	mov	r5, r8
 800fcae:	3501      	adds	r5, #1
 800fcb0:	e765      	b.n	800fb7e <properties::convert_json_file(char*, unsigned long, bool)+0x1e>
 800fcb2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800fcb6:	e766      	b.n	800fb86 <properties::convert_json_file(char*, unsigned long, bool)+0x26>

0800fcb8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
 800fcb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fcbc:	6002      	str	r2, [r0, #0]
 800fcbe:	4614      	mov	r4, r2
 800fcc0:	2200      	movs	r2, #0
 800fcc2:	80c2      	strh	r2, [r0, #6]
 800fcc4:	4a1c      	ldr	r2, [pc, #112]	@ (800fd38 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x80>)
 800fcc6:	8083      	strh	r3, [r0, #4]
 800fcc8:	7812      	ldrb	r2, [r2, #0]
 800fcca:	f002 0201 	and.w	r2, r2, #1
 800fcce:	4606      	mov	r6, r0
 800fcd0:	7202      	strb	r2, [r0, #8]
 800fcd2:	4608      	mov	r0, r1
 800fcd4:	4605      	mov	r5, r0
 800fcd6:	3001      	adds	r0, #1
 800fcd8:	782f      	ldrb	r7, [r5, #0]
 800fcda:	2f00      	cmp	r7, #0
 800fcdc:	d1fa      	bne.n	800fcd4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x1c>
 800fcde:	1a6d      	subs	r5, r5, r1
 800fce0:	b29b      	uxth	r3, r3
 800fce2:	b1d2      	cbz	r2, 800fd1a <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x62>
 800fce4:	1d2f      	adds	r7, r5, #4
 800fce6:	429f      	cmp	r7, r3
 800fce8:	d814      	bhi.n	800fd14 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 800fcea:	f04f 087b 	mov.w	r8, #123	@ 0x7b
 800fcee:	f04f 0922 	mov.w	r9, #34	@ 0x22
 800fcf2:	462a      	mov	r2, r5
 800fcf4:	f884 8000 	strb.w	r8, [r4]
 800fcf8:	f884 9001 	strb.w	r9, [r4, #1]
 800fcfc:	1ca0      	adds	r0, r4, #2
 800fcfe:	f003 fabc 	bl	801327a <memmove>
 800fd02:	1963      	adds	r3, r4, r5
 800fd04:	223a      	movs	r2, #58	@ 0x3a
 800fd06:	f883 9002 	strb.w	r9, [r3, #2]
 800fd0a:	70da      	strb	r2, [r3, #3]
 800fd0c:	3505      	adds	r5, #5
 800fd0e:	f804 8007 	strb.w	r8, [r4, r7]
 800fd12:	80f5      	strh	r5, [r6, #6]
 800fd14:	4630      	mov	r0, r6
 800fd16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fd1a:	1caf      	adds	r7, r5, #2
 800fd1c:	42bb      	cmp	r3, r7
 800fd1e:	d3f9      	bcc.n	800fd14 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 800fd20:	4620      	mov	r0, r4
 800fd22:	2323      	movs	r3, #35	@ 0x23
 800fd24:	f800 3b01 	strb.w	r3, [r0], #1
 800fd28:	462a      	mov	r2, r5
 800fd2a:	442c      	add	r4, r5
 800fd2c:	f003 faa5 	bl	801327a <memmove>
 800fd30:	230a      	movs	r3, #10
 800fd32:	7063      	strb	r3, [r4, #1]
 800fd34:	80f7      	strh	r7, [r6, #6]
 800fd36:	e7ed      	b.n	800fd14 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 800fd38:	20000a8d 	andcs	r0, r0, sp, lsl #21

0800fd3c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
 800fd3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd3e:	469c      	mov	ip, r3
 800fd40:	8885      	ldrh	r5, [r0, #4]
 800fd42:	88c3      	ldrh	r3, [r0, #6]
 800fd44:	42ab      	cmp	r3, r5
 800fd46:	b085      	sub	sp, #20
 800fd48:	d302      	bcc.n	800fd50 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x14>
 800fd4a:	2000      	movs	r0, #0
 800fd4c:	b005      	add	sp, #20
 800fd4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd50:	4604      	mov	r4, r0
 800fd52:	6800      	ldr	r0, [r0, #0]
 800fd54:	f894 e008 	ldrb.w	lr, [r4, #8]
 800fd58:	4418      	add	r0, r3
 800fd5a:	1aed      	subs	r5, r5, r3
 800fd5c:	b2d6      	uxtb	r6, r2
 800fd5e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800fd62:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800fd66:	0e12      	lsrs	r2, r2, #24
 800fd68:	f1bc 0f00 	cmp.w	ip, #0
 800fd6c:	d109      	bne.n	800fd82 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x46>
 800fd6e:	f1be 0f00 	cmp.w	lr, #0
 800fd72:	d109      	bne.n	800fd88 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x4c>
 800fd74:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fd78:	e9cd 6700 	strd	r6, r7, [sp]
 800fd7c:	4a0e      	ldr	r2, [pc, #56]	@ (800fdb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x7c>)
 800fd7e:	460b      	mov	r3, r1
 800fd80:	e008      	b.n	800fd94 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 800fd82:	f1be 0f00 	cmp.w	lr, #0
 800fd86:	d00f      	beq.n	800fda8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x6c>
 800fd88:	e9cd 6700 	strd	r6, r7, [sp]
 800fd8c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fd90:	4a0a      	ldr	r2, [pc, #40]	@ (800fdbc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x80>)
 800fd92:	460b      	mov	r3, r1
 800fd94:	4629      	mov	r1, r5
 800fd96:	f003 fd93 	bl	80138c0 <snprintf>
 800fd9a:	4285      	cmp	r5, r0
 800fd9c:	dbd5      	blt.n	800fd4a <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xe>
 800fd9e:	88e3      	ldrh	r3, [r4, #6]
 800fda0:	4403      	add	r3, r0
 800fda2:	80e3      	strh	r3, [r4, #6]
 800fda4:	2001      	movs	r0, #1
 800fda6:	e7d1      	b.n	800fd4c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x10>
 800fda8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fdac:	e9cd 6700 	strd	r6, r7, [sp]
 800fdb0:	4a03      	ldr	r2, [pc, #12]	@ (800fdc0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x84>)
 800fdb2:	460b      	mov	r3, r1
 800fdb4:	e7ee      	b.n	800fd94 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 800fdb6:	bf00      	nop
 800fdb8:	08014645 	stmdaeq	r1, {r0, r2, r6, r9, sl, lr}
 800fdbc:	08014631 	stmdaeq	r1, {r0, r4, r5, r9, sl, lr}
 800fdc0:	08014646 	stmdaeq	r1, {r1, r2, r6, r9, sl, lr}

0800fdc4 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
 800fdc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdc6:	88c6      	ldrh	r6, [r0, #6]
 800fdc8:	8885      	ldrh	r5, [r0, #4]
 800fdca:	42ae      	cmp	r6, r5
 800fdcc:	b085      	sub	sp, #20
 800fdce:	d302      	bcc.n	800fdd6 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x12>
 800fdd0:	2000      	movs	r0, #0
 800fdd2:	b005      	add	sp, #20
 800fdd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fdd6:	4604      	mov	r4, r0
 800fdd8:	6800      	ldr	r0, [r0, #0]
 800fdda:	1bad      	subs	r5, r5, r6
 800fddc:	4430      	add	r0, r6
 800fdde:	7a26      	ldrb	r6, [r4, #8]
 800fde0:	b19e      	cbz	r6, 800fe0a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x46>
 800fde2:	4e0f      	ldr	r6, [pc, #60]	@ (800fe20 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 800fde4:	4f0f      	ldr	r7, [pc, #60]	@ (800fe24 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 800fde6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800fdea:	2a00      	cmp	r2, #0
 800fdec:	bfc8      	it	gt
 800fdee:	463e      	movgt	r6, r7
 800fdf0:	4a0d      	ldr	r2, [pc, #52]	@ (800fe28 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x64>)
 800fdf2:	9600      	str	r6, [sp, #0]
 800fdf4:	460b      	mov	r3, r1
 800fdf6:	4629      	mov	r1, r5
 800fdf8:	f003 fd62 	bl	80138c0 <snprintf>
 800fdfc:	4285      	cmp	r5, r0
 800fdfe:	dbe7      	blt.n	800fdd0 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xc>
 800fe00:	88e3      	ldrh	r3, [r4, #6]
 800fe02:	4403      	add	r3, r0
 800fe04:	80e3      	strh	r3, [r4, #6]
 800fe06:	2001      	movs	r0, #1
 800fe08:	e7e3      	b.n	800fdd2 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xe>
 800fe0a:	4e05      	ldr	r6, [pc, #20]	@ (800fe20 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 800fe0c:	4f05      	ldr	r7, [pc, #20]	@ (800fe24 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 800fe0e:	2a00      	cmp	r2, #0
 800fe10:	bfc8      	it	gt
 800fe12:	463e      	movgt	r6, r7
 800fe14:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800fe18:	9600      	str	r6, [sp, #0]
 800fe1a:	4a04      	ldr	r2, [pc, #16]	@ (800fe2c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x68>)
 800fe1c:	460b      	mov	r3, r1
 800fe1e:	e7ea      	b.n	800fdf6 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x32>
 800fe20:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 800fe24:	08014656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, lr}
 800fe28:	08014658 	stmdaeq	r1, {r3, r4, r6, r9, sl, lr}
 800fe2c:	0801466c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, lr}

0800fe30 <PropertiesBuilder::AddComment(char const*)>:
 800fe30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe32:	7a06      	ldrb	r6, [r0, #8]
 800fe34:	b98e      	cbnz	r6, 800fe5a <PropertiesBuilder::AddComment(char const*)+0x2a>
 800fe36:	4604      	mov	r4, r0
 800fe38:	88c0      	ldrh	r0, [r0, #6]
 800fe3a:	88a5      	ldrh	r5, [r4, #4]
 800fe3c:	42a8      	cmp	r0, r5
 800fe3e:	d20d      	bcs.n	800fe5c <PropertiesBuilder::AddComment(char const*)+0x2c>
 800fe40:	6827      	ldr	r7, [r4, #0]
 800fe42:	4a07      	ldr	r2, [pc, #28]	@ (800fe60 <PropertiesBuilder::AddComment(char const*)+0x30>)
 800fe44:	1a2d      	subs	r5, r5, r0
 800fe46:	460b      	mov	r3, r1
 800fe48:	4438      	add	r0, r7
 800fe4a:	4629      	mov	r1, r5
 800fe4c:	f003 fd38 	bl	80138c0 <snprintf>
 800fe50:	4285      	cmp	r5, r0
 800fe52:	db03      	blt.n	800fe5c <PropertiesBuilder::AddComment(char const*)+0x2c>
 800fe54:	88e3      	ldrh	r3, [r4, #6]
 800fe56:	4418      	add	r0, r3
 800fe58:	80e0      	strh	r0, [r4, #6]
 800fe5a:	2601      	movs	r6, #1
 800fe5c:	4630      	mov	r0, r6
 800fe5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe60:	0801467b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, lr}

0800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800fe64:	e9c0 1200 	strd	r1, r2, [r0]
 800fe68:	4770      	bx	lr

0800fe6a <ReadConfigFile::~ReadConfigFile()>:
 800fe6a:	4770      	bx	lr

0800fe6c <ReadConfigFile::Read(char const*, unsigned int)>:
 800fe6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe70:	b0a0      	sub	sp, #128	@ 0x80
 800fe72:	230a      	movs	r3, #10
 800fe74:	4607      	mov	r7, r0
 800fe76:	460d      	mov	r5, r1
 800fe78:	4614      	mov	r4, r2
 800fe7a:	f88d 3000 	strb.w	r3, [sp]
 800fe7e:	f04f 0800 	mov.w	r8, #0
 800fe82:	b334      	cbz	r4, 800fed2 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 800fe84:	466e      	mov	r6, sp
 800fe86:	462a      	mov	r2, r5
 800fe88:	4631      	mov	r1, r6
 800fe8a:	7810      	ldrb	r0, [r2, #0]
 800fe8c:	280d      	cmp	r0, #13
 800fe8e:	4613      	mov	r3, r2
 800fe90:	f102 0201 	add.w	r2, r2, #1
 800fe94:	d009      	beq.n	800feaa <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 800fe96:	280a      	cmp	r0, #10
 800fe98:	d007      	beq.n	800feaa <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 800fe9a:	f806 0b01 	strb.w	r0, [r6], #1
 800fe9e:	1a73      	subs	r3, r6, r1
 800fea0:	2b7f      	cmp	r3, #127	@ 0x7f
 800fea2:	dc16      	bgt.n	800fed2 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 800fea4:	3c01      	subs	r4, #1
 800fea6:	d1f0      	bne.n	800fe8a <ReadConfigFile::Read(char const*, unsigned int)+0x1e>
 800fea8:	4613      	mov	r3, r2
 800feaa:	461d      	mov	r5, r3
 800feac:	b12c      	cbz	r4, 800feba <ReadConfigFile::Read(char const*, unsigned int)+0x4e>
 800feae:	f813 2b01 	ldrb.w	r2, [r3], #1
 800feb2:	2a0d      	cmp	r2, #13
 800feb4:	d00b      	beq.n	800fece <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800feb6:	2a0a      	cmp	r2, #10
 800feb8:	d009      	beq.n	800fece <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800feba:	f89d 3000 	ldrb.w	r3, [sp]
 800febe:	2b2f      	cmp	r3, #47	@ 0x2f
 800fec0:	d9df      	bls.n	800fe82 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 800fec2:	e9d7 3000 	ldrd	r3, r0, [r7]
 800fec6:	f886 8000 	strb.w	r8, [r6]
 800feca:	4798      	blx	r3
 800fecc:	e7d9      	b.n	800fe82 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 800fece:	3c01      	subs	r4, #1
 800fed0:	e7eb      	b.n	800feaa <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 800fed2:	b020      	add	sp, #128	@ 0x80
 800fed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fed8 <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
 800fed8:	b570      	push	{r4, r5, r6, lr}
 800feda:	4615      	mov	r5, r2
 800fedc:	461c      	mov	r4, r3
 800fede:	f000 f8b9 	bl	8010054 <Sscan::checkName(char const*, char const*)>
 800fee2:	b170      	cbz	r0, 800ff02 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2a>
 800fee4:	2100      	movs	r1, #0
 800fee6:	5c43      	ldrb	r3, [r0, r1]
 800fee8:	6826      	ldr	r6, [r4, #0]
 800feea:	b28a      	uxth	r2, r1
 800feec:	b11b      	cbz	r3, 800fef6 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1e>
 800feee:	4296      	cmp	r6, r2
 800fef0:	d804      	bhi.n	800fefc <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x24>
 800fef2:	2b0a      	cmp	r3, #10
 800fef4:	d107      	bne.n	800ff06 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2e>
 800fef6:	6022      	str	r2, [r4, #0]
 800fef8:	2000      	movs	r0, #0
 800fefa:	bd70      	pop	{r4, r5, r6, pc}
 800fefc:	546b      	strb	r3, [r5, r1]
 800fefe:	3101      	adds	r1, #1
 800ff00:	e7f1      	b.n	800fee6 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0xe>
 800ff02:	2001      	movs	r0, #1
 800ff04:	e7f9      	b.n	800fefa <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>
 800ff06:	2002      	movs	r0, #2
 800ff08:	e7f7      	b.n	800fefa <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>

0800ff0a <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
 800ff0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ff0c:	4615      	mov	r5, r2
 800ff0e:	f000 f8a1 	bl	8010054 <Sscan::checkName(char const*, char const*)>
 800ff12:	bb60      	cbnz	r0, 800ff6e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x64>
 800ff14:	2001      	movs	r0, #1
 800ff16:	e028      	b.n	800ff6a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 800ff18:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800ff1c:	2b09      	cmp	r3, #9
 800ff1e:	d823      	bhi.n	800ff68 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 800ff20:	230a      	movs	r3, #10
 800ff22:	fb03 2101 	mla	r1, r3, r1, r2
 800ff26:	3930      	subs	r1, #48	@ 0x30
 800ff28:	4603      	mov	r3, r0
 800ff2a:	4618      	mov	r0, r3
 800ff2c:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ff30:	2a2e      	cmp	r2, #46	@ 0x2e
 800ff32:	d115      	bne.n	800ff60 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x56>
 800ff34:	29ff      	cmp	r1, #255	@ 0xff
 800ff36:	d817      	bhi.n	800ff68 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 800ff38:	3401      	adds	r4, #1
 800ff3a:	2c03      	cmp	r4, #3
 800ff3c:	f806 1b01 	strb.w	r1, [r6], #1
 800ff40:	d117      	bne.n	800ff72 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x68>
 800ff42:	1d1a      	adds	r2, r3, #4
 800ff44:	2400      	movs	r4, #0
 800ff46:	260a      	movs	r6, #10
 800ff48:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ff4c:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 800ff50:	d113      	bne.n	800ff7a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x70>
 800ff52:	2cff      	cmp	r4, #255	@ 0xff
 800ff54:	d808      	bhi.n	800ff68 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 800ff56:	f88d 4007 	strb.w	r4, [sp, #7]
 800ff5a:	9b01      	ldr	r3, [sp, #4]
 800ff5c:	602b      	str	r3, [r5, #0]
 800ff5e:	e004      	b.n	800ff6a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 800ff60:	2a00      	cmp	r2, #0
 800ff62:	d0e7      	beq.n	800ff34 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x2a>
 800ff64:	42b8      	cmp	r0, r7
 800ff66:	d1d7      	bne.n	800ff18 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xe>
 800ff68:	2002      	movs	r0, #2
 800ff6a:	b003      	add	sp, #12
 800ff6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff6e:	ae01      	add	r6, sp, #4
 800ff70:	2400      	movs	r4, #0
 800ff72:	4603      	mov	r3, r0
 800ff74:	1d07      	adds	r7, r0, #4
 800ff76:	2100      	movs	r1, #0
 800ff78:	e7d7      	b.n	800ff2a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x20>
 800ff7a:	4293      	cmp	r3, r2
 800ff7c:	d0f4      	beq.n	800ff68 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 800ff7e:	3930      	subs	r1, #48	@ 0x30
 800ff80:	2909      	cmp	r1, #9
 800ff82:	d8f1      	bhi.n	800ff68 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 800ff84:	fb06 1404 	mla	r4, r6, r4, r1
 800ff88:	e7de      	b.n	800ff48 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x3e>

0800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 800ff8a:	b538      	push	{r3, r4, r5, lr}
 800ff8c:	4615      	mov	r5, r2
 800ff8e:	f000 f861 	bl	8010054 <Sscan::checkName(char const*, char const*)>
 800ff92:	b188      	cbz	r0, 800ffb8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2e>
 800ff94:	4601      	mov	r1, r0
 800ff96:	2400      	movs	r4, #0
 800ff98:	780b      	ldrb	r3, [r1, #0]
 800ff9a:	3b30      	subs	r3, #48	@ 0x30
 800ff9c:	2b09      	cmp	r3, #9
 800ff9e:	d80d      	bhi.n	800ffbc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ffa0:	220a      	movs	r2, #10
 800ffa2:	fb02 3404 	mla	r4, r2, r4, r3
 800ffa6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ffaa:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 800ffae:	d1f3      	bne.n	800ff98 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 800ffb0:	2cff      	cmp	r4, #255	@ 0xff
 800ffb2:	d803      	bhi.n	800ffbc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 800ffb4:	702c      	strb	r4, [r5, #0]
 800ffb6:	bd38      	pop	{r3, r4, r5, pc}
 800ffb8:	2001      	movs	r0, #1
 800ffba:	e7fc      	b.n	800ffb6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>
 800ffbc:	2002      	movs	r0, #2
 800ffbe:	e7fa      	b.n	800ffb6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>

0800ffc0 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
 800ffc0:	b570      	push	{r4, r5, r6, lr}
 800ffc2:	4615      	mov	r5, r2
 800ffc4:	461e      	mov	r6, r3
 800ffc6:	f000 f845 	bl	8010054 <Sscan::checkName(char const*, char const*)>
 800ffca:	2800      	cmp	r0, #0
 800ffcc:	d040      	beq.n	8010050 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x90>
 800ffce:	7803      	ldrb	r3, [r0, #0]
 800ffd0:	2b2d      	cmp	r3, #45	@ 0x2d
 800ffd2:	4601      	mov	r1, r0
 800ffd4:	d107      	bne.n	800ffe6 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x26>
 800ffd6:	3101      	adds	r1, #1
 800ffd8:	2201      	movs	r2, #1
 800ffda:	780b      	ldrb	r3, [r1, #0]
 800ffdc:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 800ffe0:	d106      	bne.n	800fff0 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x30>
 800ffe2:	2002      	movs	r0, #2
 800ffe4:	bd70      	pop	{r4, r5, r6, pc}
 800ffe6:	2b2b      	cmp	r3, #43	@ 0x2b
 800ffe8:	bf08      	it	eq
 800ffea:	3101      	addeq	r1, #1
 800ffec:	2200      	movs	r2, #0
 800ffee:	e7f4      	b.n	800ffda <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x1a>
 800fff0:	2300      	movs	r3, #0
 800fff2:	702b      	strb	r3, [r5, #0]
 800fff4:	780b      	ldrb	r3, [r1, #0]
 800fff6:	f1a3 0030 	sub.w	r0, r3, #48	@ 0x30
 800fffa:	2801      	cmp	r0, #1
 800fffc:	d8f1      	bhi.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 800fffe:	2b31      	cmp	r3, #49	@ 0x31
 8010000:	bf14      	ite	ne
 8010002:	2300      	movne	r3, #0
 8010004:	230a      	moveq	r3, #10
 8010006:	702b      	strb	r3, [r5, #0]
 8010008:	7848      	ldrb	r0, [r1, #1]
 801000a:	3830      	subs	r0, #48	@ 0x30
 801000c:	2809      	cmp	r0, #9
 801000e:	d8e8      	bhi.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8010010:	4403      	add	r3, r0
 8010012:	702b      	strb	r3, [r5, #0]
 8010014:	788b      	ldrb	r3, [r1, #2]
 8010016:	2b3a      	cmp	r3, #58	@ 0x3a
 8010018:	d1e3      	bne.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801001a:	78cc      	ldrb	r4, [r1, #3]
 801001c:	3c30      	subs	r4, #48	@ 0x30
 801001e:	2c09      	cmp	r4, #9
 8010020:	d8df      	bhi.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8010022:	790b      	ldrb	r3, [r1, #4]
 8010024:	3b30      	subs	r3, #48	@ 0x30
 8010026:	2b09      	cmp	r3, #9
 8010028:	d8db      	bhi.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 801002a:	7948      	ldrb	r0, [r1, #5]
 801002c:	f010 00df 	ands.w	r0, r0, #223	@ 0xdf
 8010030:	d1d7      	bne.n	800ffe2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8010032:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8010036:	0064      	lsls	r4, r4, #1
 8010038:	b2e4      	uxtb	r4, r4
 801003a:	7034      	strb	r4, [r6, #0]
 801003c:	790b      	ldrb	r3, [r1, #4]
 801003e:	3b30      	subs	r3, #48	@ 0x30
 8010040:	441c      	add	r4, r3
 8010042:	7034      	strb	r4, [r6, #0]
 8010044:	2a00      	cmp	r2, #0
 8010046:	d0cd      	beq.n	800ffe4 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8010048:	782b      	ldrb	r3, [r5, #0]
 801004a:	425b      	negs	r3, r3
 801004c:	702b      	strb	r3, [r5, #0]
 801004e:	e7c9      	b.n	800ffe4 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8010050:	2001      	movs	r0, #1
 8010052:	e7c7      	b.n	800ffe4 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>

08010054 <Sscan::checkName(char const*, char const*)>:
 8010054:	3901      	subs	r1, #1
 8010056:	4602      	mov	r2, r0
 8010058:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 801005c:	b130      	cbz	r0, 801006c <Sscan::checkName(char const*, char const*)+0x18>
 801005e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8010062:	b10b      	cbz	r3, 8010068 <Sscan::checkName(char const*, char const*)+0x14>
 8010064:	4298      	cmp	r0, r3
 8010066:	d0f7      	beq.n	8010058 <Sscan::checkName(char const*, char const*)+0x4>
 8010068:	2000      	movs	r0, #0
 801006a:	4770      	bx	lr
 801006c:	7813      	ldrb	r3, [r2, #0]
 801006e:	2b3d      	cmp	r3, #61	@ 0x3d
 8010070:	d1fb      	bne.n	801006a <Sscan::checkName(char const*, char const*)+0x16>
 8010072:	7853      	ldrb	r3, [r2, #1]
 8010074:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8010078:	d0f7      	beq.n	801006a <Sscan::checkName(char const*, char const*)+0x16>
 801007a:	1c50      	adds	r0, r2, #1
 801007c:	4770      	bx	lr
	...

08010080 <Display::PrintInfo() [clone .isra.0]>:
 8010080:	b910      	cbnz	r0, 8010088 <Display::PrintInfo() [clone .isra.0]+0x8>
 8010082:	4803      	ldr	r0, [pc, #12]	@ (8010090 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8010084:	f003 bc49 	b.w	801391a <puts>
 8010088:	6803      	ldr	r3, [r0, #0]
 801008a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801008c:	4718      	bx	r3
 801008e:	bf00      	nop
 8010090:	08014683 	stmdaeq	r1, {r0, r1, r7, r9, sl, lr}

08010094 <display::timeout::gpio_init()>:
 8010094:	b510      	push	{r4, lr}
 8010096:	4c0a      	ldr	r4, [pc, #40]	@ (80100c0 <display::timeout::gpio_init()+0x2c>)
 8010098:	f640 4002 	movw	r0, #3074	@ 0xc02
 801009c:	f001 fddc 	bl	8011c58 <rcu_periph_clock_enable>
 80100a0:	4620      	mov	r0, r4
 80100a2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80100a6:	2201      	movs	r2, #1
 80100a8:	2100      	movs	r1, #0
 80100aa:	f001 fd53 	bl	8011b54 <gpio_mode_set>
 80100ae:	4620      	mov	r0, r4
 80100b0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80100b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80100b8:	2201      	movs	r2, #1
 80100ba:	2100      	movs	r1, #0
 80100bc:	f001 bd4a 	b.w	8011b54 <gpio_mode_set>
 80100c0:	40020800 	andmi	r0, r2, r0, lsl #16

080100c4 <Display::Detect(display::Type)>:
 80100c4:	2902      	cmp	r1, #2
 80100c6:	b538      	push	{r3, r4, r5, lr}
 80100c8:	4604      	mov	r4, r0
 80100ca:	d014      	beq.n	80100f6 <Display::Detect(display::Type)+0x32>
 80100cc:	2904      	cmp	r1, #4
 80100ce:	d01b      	beq.n	8010108 <Display::Detect(display::Type)+0x44>
 80100d0:	69a0      	ldr	r0, [r4, #24]
 80100d2:	b168      	cbz	r0, 80100f0 <Display::Detect(display::Type)+0x2c>
 80100d4:	6803      	ldr	r3, [r0, #0]
 80100d6:	689b      	ldr	r3, [r3, #8]
 80100d8:	4798      	blx	r3
 80100da:	4603      	mov	r3, r0
 80100dc:	69a0      	ldr	r0, [r4, #24]
 80100de:	b9ab      	cbnz	r3, 801010c <Display::Detect(display::Type)+0x48>
 80100e0:	b110      	cbz	r0, 80100e8 <Display::Detect(display::Type)+0x24>
 80100e2:	6803      	ldr	r3, [r0, #0]
 80100e4:	685b      	ldr	r3, [r3, #4]
 80100e6:	4798      	blx	r3
 80100e8:	2300      	movs	r3, #0
 80100ea:	61a3      	str	r3, [r4, #24]
 80100ec:	2304      	movs	r3, #4
 80100ee:	6023      	str	r3, [r4, #0]
 80100f0:	2300      	movs	r3, #0
 80100f2:	6123      	str	r3, [r4, #16]
 80100f4:	e010      	b.n	8010118 <Display::Detect(display::Type)+0x54>
 80100f6:	2020      	movs	r0, #32
 80100f8:	f003 fdfa 	bl	8013cf0 <operator new(unsigned int)>
 80100fc:	2100      	movs	r1, #0
 80100fe:	4605      	mov	r5, r0
 8010100:	f000 f8bc 	bl	801027c <Ssd1306::Ssd1306(TOledPanel)>
 8010104:	61a5      	str	r5, [r4, #24]
 8010106:	e7e3      	b.n	80100d0 <Display::Detect(display::Type)+0xc>
 8010108:	6001      	str	r1, [r0, #0]
 801010a:	e7e1      	b.n	80100d0 <Display::Detect(display::Type)+0xc>
 801010c:	6803      	ldr	r3, [r0, #0]
 801010e:	68db      	ldr	r3, [r3, #12]
 8010110:	4798      	blx	r3
 8010112:	69a3      	ldr	r3, [r4, #24]
 8010114:	2b00      	cmp	r3, #0
 8010116:	d0eb      	beq.n	80100f0 <Display::Detect(display::Type)+0x2c>
 8010118:	bd38      	pop	{r3, r4, r5, pc}
	...

0801011c <Display::Display()>:
 801011c:	2304      	movs	r3, #4
 801011e:	b510      	push	{r4, lr}
 8010120:	6003      	str	r3, [r0, #0]
 8010122:	4b0e      	ldr	r3, [pc, #56]	@ (801015c <Display::Display()+0x40>)
 8010124:	4a0e      	ldr	r2, [pc, #56]	@ (8010160 <Display::Display()+0x44>)
 8010126:	681b      	ldr	r3, [r3, #0]
 8010128:	6043      	str	r3, [r0, #4]
 801012a:	2321      	movs	r3, #33	@ 0x21
 801012c:	7203      	strb	r3, [r0, #8]
 801012e:	4b0d      	ldr	r3, [pc, #52]	@ (8010164 <Display::Display()+0x48>)
 8010130:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010134:	237f      	movs	r3, #127	@ 0x7f
 8010136:	8283      	strh	r3, [r0, #20]
 8010138:	2300      	movs	r3, #0
 801013a:	4604      	mov	r4, r0
 801013c:	7583      	strb	r3, [r0, #22]
 801013e:	6183      	str	r3, [r0, #24]
 8010140:	4b09      	ldr	r3, [pc, #36]	@ (8010168 <Display::Display()+0x4c>)
 8010142:	2102      	movs	r1, #2
 8010144:	6018      	str	r0, [r3, #0]
 8010146:	f7ff ffbd 	bl	80100c4 <Display::Detect(display::Type)>
 801014a:	69a3      	ldr	r3, [r4, #24]
 801014c:	b10b      	cbz	r3, 8010152 <Display::Display()+0x36>
 801014e:	f7ff ffa1 	bl	8010094 <display::timeout::gpio_init()>
 8010152:	69a0      	ldr	r0, [r4, #24]
 8010154:	f7ff ff94 	bl	8010080 <Display::PrintInfo() [clone .isra.0]>
 8010158:	4620      	mov	r0, r4
 801015a:	bd10      	pop	{r4, pc}
 801015c:	20004830 	andcs	r4, r0, r0, lsr r8
 8010160:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010164:	000493e0 	andeq	r9, r4, r0, ror #7
 8010168:	20000a90 	mulcs	r0, r0, sl

0801016c <Ssd1306::~Ssd1306()>:
 801016c:	4770      	bx	lr

0801016e <Ssd1306::SetCursor(unsigned long)>:
 801016e:	4770      	bx	lr

08010170 <Ssd1306::PrintInfo()>:
 8010170:	b410      	push	{r4}
 8010172:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8010176:	7e44      	ldrb	r4, [r0, #25]
 8010178:	4904      	ldr	r1, [pc, #16]	@ (801018c <Ssd1306::PrintInfo()+0x1c>)
 801017a:	4805      	ldr	r0, [pc, #20]	@ (8010190 <Ssd1306::PrintInfo()+0x20>)
 801017c:	2c00      	cmp	r4, #0
 801017e:	bf18      	it	ne
 8010180:	4601      	movne	r1, r0
 8010182:	4804      	ldr	r0, [pc, #16]	@ (8010194 <Ssd1306::PrintInfo()+0x24>)
 8010184:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010188:	f003 bb72 	b.w	8013870 <printf>
 801018c:	0801469b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, lr}
 8010190:	08014694 	stmdaeq	r1, {r2, r4, r7, r9, sl, lr}
 8010194:	080146a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, lr}

08010198 <Ssd1306::~Ssd1306()>:
 8010198:	b510      	push	{r4, lr}
 801019a:	2120      	movs	r1, #32
 801019c:	4604      	mov	r4, r0
 801019e:	f003 fda5 	bl	8013cec <operator delete(void*, unsigned int)>
 80101a2:	4620      	mov	r0, r4
 80101a4:	bd10      	pop	{r4, pc}

080101a6 <HAL_I2C::Setup()>:
 80101a6:	b510      	push	{r4, lr}
 80101a8:	4604      	mov	r4, r0
 80101aa:	7800      	ldrb	r0, [r0, #0]
 80101ac:	f002 faa2 	bl	80126f4 <gd32_i2c_set_address>
 80101b0:	6860      	ldr	r0, [r4, #4]
 80101b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101b6:	f002 ba95 	b.w	80126e4 <gd32_i2c_set_baudrate>
	...

080101bc <Ssd1306::PutChar(int)>:
 80101bc:	b510      	push	{r4, lr}
 80101be:	f1a1 0420 	sub.w	r4, r1, #32
 80101c2:	2c5f      	cmp	r4, #95	@ 0x5f
 80101c4:	f100 0010 	add.w	r0, r0, #16
 80101c8:	bf88      	it	hi
 80101ca:	2400      	movhi	r4, #0
 80101cc:	f7ff ffeb 	bl	80101a6 <HAL_I2C::Setup()>
 80101d0:	4804      	ldr	r0, [pc, #16]	@ (80101e4 <Ssd1306::PutChar(int)+0x28>)
 80101d2:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80101d6:	4420      	add	r0, r4
 80101d8:	2107      	movs	r1, #7
 80101da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101de:	f002 ba8f 	b.w	8012700 <gd32_i2c_write>
 80101e2:	bf00      	nop
 80101e4:	0801739c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, ip, sp, lr}

080101e8 <Ssd1306::PutString(char const*)>:
 80101e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80101ea:	4604      	mov	r4, r0
 80101ec:	460e      	mov	r6, r1
 80101ee:	460f      	mov	r7, r1
 80101f0:	463d      	mov	r5, r7
 80101f2:	f817 1b01 	ldrb.w	r1, [r7], #1
 80101f6:	b939      	cbnz	r1, 8010208 <Ssd1306::PutString(char const*)+0x20>
 80101f8:	7b23      	ldrb	r3, [r4, #12]
 80101fa:	b123      	cbz	r3, 8010206 <Ssd1306::PutString(char const*)+0x1e>
 80101fc:	7321      	strb	r1, [r4, #12]
 80101fe:	1bad      	subs	r5, r5, r6
 8010200:	6863      	ldr	r3, [r4, #4]
 8010202:	42ab      	cmp	r3, r5
 8010204:	d804      	bhi.n	8010210 <Ssd1306::PutString(char const*)+0x28>
 8010206:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010208:	4620      	mov	r0, r4
 801020a:	f7ff ffd7 	bl	80101bc <Ssd1306::PutChar(int)>
 801020e:	e7ef      	b.n	80101f0 <Ssd1306::PutString(char const*)+0x8>
 8010210:	2120      	movs	r1, #32
 8010212:	4620      	mov	r0, r4
 8010214:	f7ff ffd2 	bl	80101bc <Ssd1306::PutChar(int)>
 8010218:	3501      	adds	r5, #1
 801021a:	e7f1      	b.n	8010200 <Ssd1306::PutString(char const*)+0x18>

0801021c <Ssd1306::Text(char const*, unsigned long)>:
 801021c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801021e:	6843      	ldr	r3, [r0, #4]
 8010220:	429a      	cmp	r2, r3
 8010222:	bf28      	it	cs
 8010224:	461a      	movcs	r2, r3
 8010226:	4604      	mov	r4, r0
 8010228:	4615      	mov	r5, r2
 801022a:	460e      	mov	r6, r1
 801022c:	188f      	adds	r7, r1, r2
 801022e:	42be      	cmp	r6, r7
 8010230:	d107      	bne.n	8010242 <Ssd1306::Text(char const*, unsigned long)+0x26>
 8010232:	7b23      	ldrb	r3, [r4, #12]
 8010234:	b123      	cbz	r3, 8010240 <Ssd1306::Text(char const*, unsigned long)+0x24>
 8010236:	2300      	movs	r3, #0
 8010238:	7323      	strb	r3, [r4, #12]
 801023a:	6863      	ldr	r3, [r4, #4]
 801023c:	42ab      	cmp	r3, r5
 801023e:	d806      	bhi.n	801024e <Ssd1306::Text(char const*, unsigned long)+0x32>
 8010240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010242:	f816 1b01 	ldrb.w	r1, [r6], #1
 8010246:	4620      	mov	r0, r4
 8010248:	f7ff ffb8 	bl	80101bc <Ssd1306::PutChar(int)>
 801024c:	e7ef      	b.n	801022e <Ssd1306::Text(char const*, unsigned long)+0x12>
 801024e:	2120      	movs	r1, #32
 8010250:	4620      	mov	r0, r4
 8010252:	f7ff ffb3 	bl	80101bc <Ssd1306::PutChar(int)>
 8010256:	3501      	adds	r5, #1
 8010258:	e7ef      	b.n	801023a <Ssd1306::Text(char const*, unsigned long)+0x1e>

0801025a <Ssd1306::InitMembers()>:
 801025a:	2315      	movs	r3, #21
 801025c:	6043      	str	r3, [r0, #4]
 801025e:	7e03      	ldrb	r3, [r0, #24]
 8010260:	b12b      	cbz	r3, 801026e <Ssd1306::InitMembers()+0x14>
 8010262:	3b01      	subs	r3, #1
 8010264:	2b01      	cmp	r3, #1
 8010266:	d807      	bhi.n	8010278 <Ssd1306::InitMembers()+0x1e>
 8010268:	2304      	movs	r3, #4
 801026a:	2204      	movs	r2, #4
 801026c:	e001      	b.n	8010272 <Ssd1306::InitMembers()+0x18>
 801026e:	2308      	movs	r3, #8
 8010270:	461a      	mov	r2, r3
 8010272:	6083      	str	r3, [r0, #8]
 8010274:	61c2      	str	r2, [r0, #28]
 8010276:	4770      	bx	lr
 8010278:	2308      	movs	r3, #8
 801027a:	e7f6      	b.n	801026a <Ssd1306::InitMembers()+0x10>

0801027c <Ssd1306::Ssd1306(TOledPanel)>:
 801027c:	b510      	push	{r4, lr}
 801027e:	4c07      	ldr	r4, [pc, #28]	@ (801029c <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8010280:	6004      	str	r4, [r0, #0]
 8010282:	2200      	movs	r2, #0
 8010284:	243c      	movs	r4, #60	@ 0x3c
 8010286:	7302      	strb	r2, [r0, #12]
 8010288:	7404      	strb	r4, [r0, #16]
 801028a:	7642      	strb	r2, [r0, #25]
 801028c:	4c04      	ldr	r4, [pc, #16]	@ (80102a0 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 801028e:	4a05      	ldr	r2, [pc, #20]	@ (80102a4 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8010290:	6144      	str	r4, [r0, #20]
 8010292:	7601      	strb	r1, [r0, #24]
 8010294:	6010      	str	r0, [r2, #0]
 8010296:	f7ff ffe0 	bl	801025a <Ssd1306::InitMembers()>
 801029a:	bd10      	pop	{r4, pc}
 801029c:	08017334 	stmdaeq	r1, {r2, r4, r5, r8, r9, ip, sp, lr}
 80102a0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80102a4:	20000a94 	mulcs	r0, r4, sl

080102a8 <Ssd1306::SendCommand(unsigned char)>:
 80102a8:	b507      	push	{r0, r1, r2, lr}
 80102aa:	2300      	movs	r3, #0
 80102ac:	3010      	adds	r0, #16
 80102ae:	f88d 3004 	strb.w	r3, [sp, #4]
 80102b2:	f88d 1005 	strb.w	r1, [sp, #5]
 80102b6:	f7ff ff76 	bl	80101a6 <HAL_I2C::Setup()>
 80102ba:	2102      	movs	r1, #2
 80102bc:	a801      	add	r0, sp, #4
 80102be:	f002 fa1f 	bl	8012700 <gd32_i2c_write>
 80102c2:	b003      	add	sp, #12
 80102c4:	f85d fb04 	ldr.w	pc, [sp], #4

080102c8 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 80102c8:	2914      	cmp	r1, #20
 80102ca:	b570      	push	{r4, r5, r6, lr}
 80102cc:	4605      	mov	r5, r0
 80102ce:	4616      	mov	r6, r2
 80102d0:	d81d      	bhi.n	801030e <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 80102d2:	6883      	ldr	r3, [r0, #8]
 80102d4:	4293      	cmp	r3, r2
 80102d6:	d91a      	bls.n	801030e <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 80102d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80102dc:	7e43      	ldrb	r3, [r0, #25]
 80102de:	004c      	lsls	r4, r1, #1
 80102e0:	b2e4      	uxtb	r4, r4
 80102e2:	b10b      	cbz	r3, 80102e8 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 80102e4:	3404      	adds	r4, #4
 80102e6:	b2e4      	uxtb	r4, r4
 80102e8:	f004 010e 	and.w	r1, r4, #14
 80102ec:	4628      	mov	r0, r5
 80102ee:	f7ff ffdb 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80102f2:	0921      	lsrs	r1, r4, #4
 80102f4:	4628      	mov	r0, r5
 80102f6:	f041 0110 	orr.w	r1, r1, #16
 80102fa:	f7ff ffd5 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80102fe:	f066 014f 	orn	r1, r6, #79	@ 0x4f
 8010302:	4628      	mov	r0, r5
 8010304:	b2c9      	uxtb	r1, r1
 8010306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801030a:	f7ff bfcd 	b.w	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801030e:	bd70      	pop	{r4, r5, r6, pc}

08010310 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 8010310:	b570      	push	{r4, r5, r6, lr}
 8010312:	461e      	mov	r6, r3
 8010314:	6883      	ldr	r3, [r0, #8]
 8010316:	428b      	cmp	r3, r1
 8010318:	4604      	mov	r4, r0
 801031a:	4615      	mov	r5, r2
 801031c:	d30b      	bcc.n	8010336 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 801031e:	3901      	subs	r1, #1
 8010320:	b2ca      	uxtb	r2, r1
 8010322:	2100      	movs	r1, #0
 8010324:	f7ff ffd0 	bl	80102c8 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8010328:	4632      	mov	r2, r6
 801032a:	4629      	mov	r1, r5
 801032c:	4620      	mov	r0, r4
 801032e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010332:	f7ff bf73 	b.w	801021c <Ssd1306::Text(char const*, unsigned long)>
 8010336:	bd70      	pop	{r4, r5, r6, pc}

08010338 <Ssd1306::ClearLine(unsigned long)>:
 8010338:	b538      	push	{r3, r4, r5, lr}
 801033a:	6883      	ldr	r3, [r0, #8]
 801033c:	428b      	cmp	r3, r1
 801033e:	4605      	mov	r5, r0
 8010340:	d314      	bcc.n	801036c <Ssd1306::ClearLine(unsigned long)+0x34>
 8010342:	3901      	subs	r1, #1
 8010344:	b2cc      	uxtb	r4, r1
 8010346:	4622      	mov	r2, r4
 8010348:	2100      	movs	r1, #0
 801034a:	f7ff ffbd 	bl	80102c8 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 801034e:	f105 0010 	add.w	r0, r5, #16
 8010352:	f7ff ff28 	bl	80101a6 <HAL_I2C::Setup()>
 8010356:	2181      	movs	r1, #129	@ 0x81
 8010358:	4805      	ldr	r0, [pc, #20]	@ (8010370 <Ssd1306::ClearLine(unsigned long)+0x38>)
 801035a:	f002 f9d1 	bl	8012700 <gd32_i2c_write>
 801035e:	4622      	mov	r2, r4
 8010360:	4628      	mov	r0, r5
 8010362:	2100      	movs	r1, #0
 8010364:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010368:	f7ff bfae 	b.w	80102c8 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 801036c:	bd38      	pop	{r3, r4, r5, pc}
 801036e:	bf00      	nop
 8010370:	20000a98 	mulcs	r0, r8, sl

08010374 <Ssd1306::SetSleep(bool)>:
 8010374:	b111      	cbz	r1, 801037c <Ssd1306::SetSleep(bool)+0x8>
 8010376:	21ae      	movs	r1, #174	@ 0xae
 8010378:	f7ff bf96 	b.w	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801037c:	21af      	movs	r1, #175	@ 0xaf
 801037e:	e7fb      	b.n	8010378 <Ssd1306::SetSleep(bool)+0x4>

08010380 <Ssd1306::SetContrast(unsigned char)>:
 8010380:	b538      	push	{r3, r4, r5, lr}
 8010382:	4604      	mov	r4, r0
 8010384:	460d      	mov	r5, r1
 8010386:	2181      	movs	r1, #129	@ 0x81
 8010388:	f7ff ff8e 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801038c:	4629      	mov	r1, r5
 801038e:	4620      	mov	r0, r4
 8010390:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010394:	f7ff bf88 	b.w	80102a8 <Ssd1306::SendCommand(unsigned char)>

08010398 <Ssd1306::SetFlipVertically(bool)>:
 8010398:	b510      	push	{r4, lr}
 801039a:	4604      	mov	r4, r0
 801039c:	b141      	cbz	r1, 80103b0 <Ssd1306::SetFlipVertically(bool)+0x18>
 801039e:	21a0      	movs	r1, #160	@ 0xa0
 80103a0:	f7ff ff82 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103a4:	21c0      	movs	r1, #192	@ 0xc0
 80103a6:	4620      	mov	r0, r4
 80103a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103ac:	f7ff bf7c 	b.w	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103b0:	21a1      	movs	r1, #161	@ 0xa1
 80103b2:	f7ff ff79 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103b6:	21c8      	movs	r1, #200	@ 0xc8
 80103b8:	e7f5      	b.n	80103a6 <Ssd1306::SetFlipVertically(bool)+0xe>
	...

080103bc <Ssd1306::CheckSH1106()>:
 80103bc:	b530      	push	{r4, r5, lr}
 80103be:	2100      	movs	r1, #0
 80103c0:	b087      	sub	sp, #28
 80103c2:	4604      	mov	r4, r0
 80103c4:	f7ff ff70 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103c8:	2190      	movs	r1, #144	@ 0x90
 80103ca:	4620      	mov	r0, r4
 80103cc:	f7ff ff6c 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103d0:	21b0      	movs	r1, #176	@ 0xb0
 80103d2:	4620      	mov	r0, r4
 80103d4:	f7ff ff68 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103d8:	4b21      	ldr	r3, [pc, #132]	@ (8010460 <Ssd1306::CheckSH1106()+0xa4>)
 80103da:	f104 0510 	add.w	r5, r4, #16
 80103de:	6818      	ldr	r0, [r3, #0]
 80103e0:	9002      	str	r0, [sp, #8]
 80103e2:	791b      	ldrb	r3, [r3, #4]
 80103e4:	f88d 300c 	strb.w	r3, [sp, #12]
 80103e8:	4628      	mov	r0, r5
 80103ea:	f7ff fedc 	bl	80101a6 <HAL_I2C::Setup()>
 80103ee:	2105      	movs	r1, #5
 80103f0:	a802      	add	r0, sp, #8
 80103f2:	f002 f985 	bl	8012700 <gd32_i2c_write>
 80103f6:	2100      	movs	r1, #0
 80103f8:	4620      	mov	r0, r4
 80103fa:	f7ff ff55 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80103fe:	2190      	movs	r1, #144	@ 0x90
 8010400:	4620      	mov	r0, r4
 8010402:	f7ff ff51 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 8010406:	21b0      	movs	r1, #176	@ 0xb0
 8010408:	4620      	mov	r0, r4
 801040a:	f7ff ff4d 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801040e:	2300      	movs	r3, #0
 8010410:	4628      	mov	r0, r5
 8010412:	9304      	str	r3, [sp, #16]
 8010414:	f88d 3014 	strb.w	r3, [sp, #20]
 8010418:	f7ff fec5 	bl	80101a6 <HAL_I2C::Setup()>
 801041c:	2340      	movs	r3, #64	@ 0x40
 801041e:	2101      	movs	r1, #1
 8010420:	a801      	add	r0, sp, #4
 8010422:	f88d 3004 	strb.w	r3, [sp, #4]
 8010426:	f002 f96b 	bl	8012700 <gd32_i2c_write>
 801042a:	4628      	mov	r0, r5
 801042c:	f7ff febb 	bl	80101a6 <HAL_I2C::Setup()>
 8010430:	2105      	movs	r1, #5
 8010432:	a804      	add	r0, sp, #16
 8010434:	f002 f9ca 	bl	80127cc <gd32_i2c_read>
 8010438:	a902      	add	r1, sp, #8
 801043a:	aa04      	add	r2, sp, #16
 801043c:	2003      	movs	r0, #3
 801043e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8010442:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8010446:	42ab      	cmp	r3, r5
 8010448:	d006      	beq.n	8010458 <Ssd1306::CheckSH1106()+0x9c>
 801044a:	1b5b      	subs	r3, r3, r5
 801044c:	fab3 f383 	clz	r3, r3
 8010450:	095b      	lsrs	r3, r3, #5
 8010452:	7663      	strb	r3, [r4, #25]
 8010454:	b007      	add	sp, #28
 8010456:	bd30      	pop	{r4, r5, pc}
 8010458:	3801      	subs	r0, #1
 801045a:	d2f0      	bcs.n	801043e <Ssd1306::CheckSH1106()+0x82>
 801045c:	2300      	movs	r3, #0
 801045e:	e7f5      	b.n	801044c <Ssd1306::CheckSH1106()+0x90>
 8010460:	080146af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, lr}

08010464 <Ssd1306::Cls()>:
 8010464:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010468:	7e46      	ldrb	r6, [r0, #25]
 801046a:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 80104cc <Ssd1306::Cls()+0x68>
 801046e:	00b6      	lsls	r6, r6, #2
 8010470:	b2f7      	uxtb	r7, r6
 8010472:	4604      	mov	r4, r0
 8010474:	2500      	movs	r5, #0
 8010476:	f047 0810 	orr.w	r8, r7, #16
 801047a:	69e3      	ldr	r3, [r4, #28]
 801047c:	42ab      	cmp	r3, r5
 801047e:	4639      	mov	r1, r7
 8010480:	4620      	mov	r0, r4
 8010482:	d80b      	bhi.n	801049c <Ssd1306::Cls()+0x38>
 8010484:	f7ff ff10 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 8010488:	4641      	mov	r1, r8
 801048a:	4620      	mov	r0, r4
 801048c:	f7ff ff0c 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 8010490:	4620      	mov	r0, r4
 8010492:	21b0      	movs	r1, #176	@ 0xb0
 8010494:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010498:	f7ff bf06 	b.w	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801049c:	f7ff ff04 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80104a0:	4641      	mov	r1, r8
 80104a2:	4620      	mov	r0, r4
 80104a4:	f7ff ff00 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80104a8:	f065 014f 	orn	r1, r5, #79	@ 0x4f
 80104ac:	b2c9      	uxtb	r1, r1
 80104ae:	4620      	mov	r0, r4
 80104b0:	f7ff fefa 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 80104b4:	f104 0010 	add.w	r0, r4, #16
 80104b8:	f7ff fe75 	bl	80101a6 <HAL_I2C::Setup()>
 80104bc:	f106 0181 	add.w	r1, r6, #129	@ 0x81
 80104c0:	4648      	mov	r0, r9
 80104c2:	f002 f91d 	bl	8012700 <gd32_i2c_write>
 80104c6:	3501      	adds	r5, #1
 80104c8:	e7d7      	b.n	801047a <Ssd1306::Cls()+0x16>
 80104ca:	bf00      	nop
 80104cc:	20000a98 	mulcs	r0, r8, sl

080104d0 <Ssd1306::Start()>:
 80104d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80104d2:	7c04      	ldrb	r4, [r0, #16]
 80104d4:	6946      	ldr	r6, [r0, #20]
 80104d6:	4605      	mov	r5, r0
 80104d8:	4620      	mov	r0, r4
 80104da:	f002 f90b 	bl	80126f4 <gd32_i2c_set_address>
 80104de:	4630      	mov	r0, r6
 80104e0:	f002 f900 	bl	80126e4 <gd32_i2c_set_baudrate>
 80104e4:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80104e8:	2b07      	cmp	r3, #7
 80104ea:	d902      	bls.n	80104f2 <Ssd1306::Start()+0x22>
 80104ec:	3c50      	subs	r4, #80	@ 0x50
 80104ee:	2c0f      	cmp	r4, #15
 80104f0:	d80f      	bhi.n	8010512 <Ssd1306::Start()+0x42>
 80104f2:	2101      	movs	r1, #1
 80104f4:	f10d 0007 	add.w	r0, sp, #7
 80104f8:	f002 f968 	bl	80127cc <gd32_i2c_read>
 80104fc:	fab0 f480 	clz	r4, r0
 8010500:	0964      	lsrs	r4, r4, #5
 8010502:	b34c      	cbz	r4, 8010558 <Ssd1306::Start()+0x88>
 8010504:	7e2e      	ldrb	r6, [r5, #24]
 8010506:	b14e      	cbz	r6, 801051c <Ssd1306::Start()+0x4c>
 8010508:	3e01      	subs	r6, #1
 801050a:	2e01      	cmp	r6, #1
 801050c:	d927      	bls.n	801055e <Ssd1306::Start()+0x8e>
 801050e:	2400      	movs	r4, #0
 8010510:	e022      	b.n	8010558 <Ssd1306::Start()+0x88>
 8010512:	2100      	movs	r1, #0
 8010514:	4608      	mov	r0, r1
 8010516:	f002 f8f3 	bl	8012700 <gd32_i2c_write>
 801051a:	e7ef      	b.n	80104fc <Ssd1306::Start()+0x2c>
 801051c:	4f15      	ldr	r7, [pc, #84]	@ (8010574 <Ssd1306::Start()+0xa4>)
 801051e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010522:	4628      	mov	r0, r5
 8010524:	3601      	adds	r6, #1
 8010526:	f7ff febf 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801052a:	2e18      	cmp	r6, #24
 801052c:	d1f7      	bne.n	801051e <Ssd1306::Start()+0x4e>
 801052e:	4a12      	ldr	r2, [pc, #72]	@ (8010578 <Ssd1306::Start()+0xa8>)
 8010530:	2300      	movs	r3, #0
 8010532:	4611      	mov	r1, r2
 8010534:	4618      	mov	r0, r3
 8010536:	3301      	adds	r3, #1
 8010538:	2b86      	cmp	r3, #134	@ 0x86
 801053a:	f802 0b01 	strb.w	r0, [r2], #1
 801053e:	d1fa      	bne.n	8010536 <Ssd1306::Start()+0x66>
 8010540:	2340      	movs	r3, #64	@ 0x40
 8010542:	4628      	mov	r0, r5
 8010544:	700b      	strb	r3, [r1, #0]
 8010546:	f7ff ff39 	bl	80103bc <Ssd1306::CheckSH1106()>
 801054a:	4628      	mov	r0, r5
 801054c:	f7ff ff8a 	bl	8010464 <Ssd1306::Cls()>
 8010550:	21af      	movs	r1, #175	@ 0xaf
 8010552:	4628      	mov	r0, r5
 8010554:	f7ff fea8 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 8010558:	4620      	mov	r0, r4
 801055a:	b003      	add	sp, #12
 801055c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801055e:	4f07      	ldr	r7, [pc, #28]	@ (801057c <Ssd1306::Start()+0xac>)
 8010560:	2600      	movs	r6, #0
 8010562:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010566:	4628      	mov	r0, r5
 8010568:	3601      	adds	r6, #1
 801056a:	f7ff fe9d 	bl	80102a8 <Ssd1306::SendCommand(unsigned char)>
 801056e:	2e18      	cmp	r6, #24
 8010570:	d1f7      	bne.n	8010562 <Ssd1306::Start()+0x92>
 8010572:	e7dc      	b.n	801052e <Ssd1306::Start()+0x5e>
 8010574:	08017384 	stmdaeq	r1, {r2, r7, r8, r9, ip, sp, lr}
 8010578:	20000a98 	mulcs	r0, r8, sl
 801057c:	0801736c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, sp, lr}

08010580 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8010580:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010584:	4d15      	ldr	r5, [pc, #84]	@ (80105dc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8010586:	461e      	mov	r6, r3
 8010588:	4b15      	ldr	r3, [pc, #84]	@ (80105e0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801058a:	b086      	sub	sp, #24
 801058c:	6018      	str	r0, [r3, #0]
 801058e:	4604      	mov	r4, r0
 8010590:	4617      	mov	r7, r2
 8010592:	f105 0803 	add.w	r8, r5, #3
 8010596:	2203      	movs	r2, #3
 8010598:	4628      	mov	r0, r5
 801059a:	f002 fe6e 	bl	801327a <memmove>
 801059e:	4639      	mov	r1, r7
 80105a0:	220b      	movs	r2, #11
 80105a2:	4640      	mov	r0, r8
 80105a4:	f002 fe69 	bl	801327a <memmove>
 80105a8:	f105 030e 	add.w	r3, r5, #14
 80105ac:	4631      	mov	r1, r6
 80105ae:	2208      	movs	r2, #8
 80105b0:	4618      	mov	r0, r3
 80105b2:	f002 fe62 	bl	801327a <memmove>
 80105b6:	2308      	movs	r3, #8
 80105b8:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80105bc:	230b      	movs	r3, #11
 80105be:	9302      	str	r3, [sp, #8]
 80105c0:	4b08      	ldr	r3, [pc, #32]	@ (80105e4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80105c2:	9005      	str	r0, [sp, #20]
 80105c4:	e9cd 5300 	strd	r5, r3, [sp]
 80105c8:	4a07      	ldr	r2, [pc, #28]	@ (80105e8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80105ca:	4808      	ldr	r0, [pc, #32]	@ (80105ec <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80105cc:	2303      	movs	r3, #3
 80105ce:	213f      	movs	r1, #63	@ 0x3f
 80105d0:	f003 f976 	bl	80138c0 <snprintf>
 80105d4:	4620      	mov	r0, r4
 80105d6:	b006      	add	sp, #24
 80105d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105dc:	20000b64 	andcs	r0, r0, r4, ror #22
 80105e0:	20000b20 	andcs	r0, r0, r0, lsr #22
 80105e4:	080141aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, lr}
 80105e8:	080146b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, lr}
 80105ec:	20000b24 	andcs	r0, r0, r4, lsr #22

080105f0 <Hardware::ledblink()>:
 80105f0:	4b02      	ldr	r3, [pc, #8]	@ (80105fc <Hardware::ledblink()+0xc>)
 80105f2:	2210      	movs	r2, #16
 80105f4:	f8c3 2c2c 	str.w	r2, [r3, #3116]	@ 0xc2c
 80105f8:	4770      	bx	lr
 80105fa:	bf00      	nop
 80105fc:	40020000 	andmi	r0, r2, r0

08010600 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 8010600:	2900      	cmp	r1, #0
 8010602:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010604:	db10      	blt.n	8010628 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8010606:	f8d0 50b0 	ldr.w	r5, [r0, #176]	@ 0xb0
 801060a:	2300      	movs	r3, #0
 801060c:	f100 0638 	add.w	r6, r0, #56	@ 0x38
 8010610:	42ab      	cmp	r3, r5
 8010612:	d009      	beq.n	8010628 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8010614:	011c      	lsls	r4, r3, #4
 8010616:	5937      	ldr	r7, [r6, r4]
 8010618:	42b9      	cmp	r1, r7
 801061a:	d106      	bne.n	801062a <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 801061c:	4b04      	ldr	r3, [pc, #16]	@ (8010630 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 801061e:	681b      	ldr	r3, [r3, #0]
 8010620:	4420      	add	r0, r4
 8010622:	4413      	add	r3, r2
 8010624:	e9c0 320c 	strd	r3, r2, [r0, #48]	@ 0x30
 8010628:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801062a:	3301      	adds	r3, #1
 801062c:	e7f0      	b.n	8010610 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 801062e:	bf00      	nop
 8010630:	20004830 	andcs	r4, r0, r0, lsr r8

08010634 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>:
 8010634:	680a      	ldr	r2, [r1, #0]
 8010636:	2a00      	cmp	r2, #0
 8010638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801063a:	4606      	mov	r6, r0
 801063c:	468e      	mov	lr, r1
 801063e:	db17      	blt.n	8010670 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 8010640:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
 8010644:	2400      	movs	r4, #0
 8010646:	f100 0138 	add.w	r1, r0, #56	@ 0x38
 801064a:	429c      	cmp	r4, r3
 801064c:	d010      	beq.n	8010670 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 801064e:	0125      	lsls	r5, r4, #4
 8010650:	5948      	ldr	r0, [r1, r5]
 8010652:	4282      	cmp	r2, r0
 8010654:	d116      	bne.n	8010684 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x50>
 8010656:	4435      	add	r5, r6
 8010658:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
 801065c:	4564      	cmp	r4, ip
 801065e:	f105 0510 	add.w	r5, r5, #16
 8010662:	d306      	bcc.n	8010672 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3e>
 8010664:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010668:	f8c6 c0b0 	str.w	ip, [r6, #176]	@ 0xb0
 801066c:	f8ce 3000 	str.w	r3, [lr]
 8010670:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010672:	f105 0330 	add.w	r3, r5, #48	@ 0x30
 8010676:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8010678:	f105 0720 	add.w	r7, r5, #32
 801067c:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8010680:	3401      	adds	r4, #1
 8010682:	e7eb      	b.n	801065c <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x28>
 8010684:	3401      	adds	r4, #1
 8010686:	e7e0      	b.n	801064a <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x16>

08010688 <Hardware::SetFrequency(unsigned long)>:
 8010688:	460a      	mov	r2, r1
 801068a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 801068c:	2900      	cmp	r1, #0
 801068e:	b538      	push	{r3, r4, r5, lr}
 8010690:	4604      	mov	r4, r0
 8010692:	da21      	bge.n	80106d8 <Hardware::SetFrequency(unsigned long)+0x50>
 8010694:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
 8010698:	2b07      	cmp	r3, #7
 801069a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 801069e:	fbb1 f1f2 	udiv	r1, r1, r2
 80106a2:	d906      	bls.n	80106b2 <Hardware::SetFrequency(unsigned long)+0x2a>
 80106a4:	4825      	ldr	r0, [pc, #148]	@ (801073c <Hardware::SetFrequency(unsigned long)+0xb4>)
 80106a6:	f000 fc0d 	bl	8010ec4 <console_error>
 80106aa:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80106ae:	62e2      	str	r2, [r4, #44]	@ 0x2c
 80106b0:	bd38      	pop	{r3, r4, r5, pc}
 80106b2:	4a23      	ldr	r2, [pc, #140]	@ (8010740 <Hardware::SetFrequency(unsigned long)+0xb8>)
 80106b4:	6810      	ldr	r0, [r2, #0]
 80106b6:	f8d4 20b4 	ldr.w	r2, [r4, #180]	@ 0xb4
 80106ba:	1c55      	adds	r5, r2, #1
 80106bc:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
 80106c0:	4408      	add	r0, r1
 80106c2:	1c5d      	adds	r5, r3, #1
 80106c4:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 80106c8:	f8c4 50b0 	str.w	r5, [r4, #176]	@ 0xb0
 80106cc:	e9c3 010c 	strd	r0, r1, [r3, #48]	@ 0x30
 80106d0:	491c      	ldr	r1, [pc, #112]	@ (8010744 <Hardware::SetFrequency(unsigned long)+0xbc>)
 80106d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80106d4:	63d9      	str	r1, [r3, #60]	@ 0x3c
 80106d6:	e7ea      	b.n	80106ae <Hardware::SetFrequency(unsigned long)+0x26>
 80106d8:	2a08      	cmp	r2, #8
 80106da:	d808      	bhi.n	80106ee <Hardware::SetFrequency(unsigned long)+0x66>
 80106dc:	2a08      	cmp	r2, #8
 80106de:	d808      	bhi.n	80106f2 <Hardware::SetFrequency(unsigned long)+0x6a>
 80106e0:	e8df f002 	tbb	[pc, r2]
 80106e4:	1c07150c 	cfstr32ne	mvfx1, [r7], {12}
 80106e8:	07071f07 	streq	r1, [r7, -r7, lsl #30]
 80106ec:	2aff0021 	bcs	7fd0778 <__stack_size+0x7fc8778>
 80106f0:	d01b      	beq.n	801072a <Hardware::SetFrequency(unsigned long)+0xa2>
 80106f2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80106f6:	fbb3 f2f2 	udiv	r2, r3, r2
 80106fa:	e00a      	b.n	8010712 <Hardware::SetFrequency(unsigned long)+0x8a>
 80106fc:	f100 012c 	add.w	r1, r0, #44	@ 0x2c
 8010700:	f7ff ff98 	bl	8010634 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 8010704:	4b10      	ldr	r3, [pc, #64]	@ (8010748 <Hardware::SetFrequency(unsigned long)+0xc0>)
 8010706:	2210      	movs	r2, #16
 8010708:	f8c3 2c28 	str.w	r2, [r3, #3112]	@ 0xc28
 801070c:	e7d0      	b.n	80106b0 <Hardware::SetFrequency(unsigned long)+0x28>
 801070e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8010712:	4620      	mov	r0, r4
 8010714:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010718:	f7ff bf72 	b.w	8010600 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 801071c:	f240 124d 	movw	r2, #333	@ 0x14d
 8010720:	e7f7      	b.n	8010712 <Hardware::SetFrequency(unsigned long)+0x8a>
 8010722:	22c8      	movs	r2, #200	@ 0xc8
 8010724:	e7f5      	b.n	8010712 <Hardware::SetFrequency(unsigned long)+0x8a>
 8010726:	227d      	movs	r2, #125	@ 0x7d
 8010728:	e7f3      	b.n	8010712 <Hardware::SetFrequency(unsigned long)+0x8a>
 801072a:	f100 012c 	add.w	r1, r0, #44	@ 0x2c
 801072e:	f7ff ff81 	bl	8010634 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 8010732:	4b05      	ldr	r3, [pc, #20]	@ (8010748 <Hardware::SetFrequency(unsigned long)+0xc0>)
 8010734:	2210      	movs	r2, #16
 8010736:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 801073a:	e7b9      	b.n	80106b0 <Hardware::SetFrequency(unsigned long)+0x28>
 801073c:	080144e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, lr}
 8010740:	20004830 	andcs	r4, r0, r0, lsr r8
 8010744:	080105f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl}
 8010748:	40020000 	andmi	r0, r2, r0

0801074c <hardware::ledblink::display(unsigned long)>:
 801074c:	4770      	bx	lr

0801074e <Hardware::SetMode(hardware::ledblink::Mode)>:
 801074e:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8010752:	b510      	push	{r4, lr}
 8010754:	4604      	mov	r4, r0
 8010756:	b993      	cbnz	r3, 801077e <Hardware::SetMode(hardware::ledblink::Mode)+0x30>
 8010758:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801075a:	428b      	cmp	r3, r1
 801075c:	d00f      	beq.n	801077e <Hardware::SetMode(hardware::ledblink::Mode)+0x30>
 801075e:	6241      	str	r1, [r0, #36]	@ 0x24
 8010760:	3901      	subs	r1, #1
 8010762:	2904      	cmp	r1, #4
 8010764:	d804      	bhi.n	8010770 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8010766:	e8df f001 	tbb	[pc, r1]
 801076a:	110f0d0b 	tstne	pc, fp, lsl #26
 801076e:	21000013 	tstcs	r0, r3, lsl r0
 8010772:	4620      	mov	r0, r4
 8010774:	f7ff ff88 	bl	8010688 <Hardware::SetFrequency(unsigned long)>
 8010778:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 801077a:	f7ff ffe7 	bl	801074c <hardware::ledblink::display(unsigned long)>
 801077e:	bd10      	pop	{r4, pc}
 8010780:	21ff      	movs	r1, #255	@ 0xff
 8010782:	e7f6      	b.n	8010772 <Hardware::SetMode(hardware::ledblink::Mode)+0x24>
 8010784:	2101      	movs	r1, #1
 8010786:	e7f4      	b.n	8010772 <Hardware::SetMode(hardware::ledblink::Mode)+0x24>
 8010788:	2103      	movs	r1, #3
 801078a:	e7f2      	b.n	8010772 <Hardware::SetMode(hardware::ledblink::Mode)+0x24>
 801078c:	2105      	movs	r1, #5
 801078e:	e7f0      	b.n	8010772 <Hardware::SetMode(hardware::ledblink::Mode)+0x24>
 8010790:	2108      	movs	r1, #8
 8010792:	e7ee      	b.n	8010772 <Hardware::SetMode(hardware::ledblink::Mode)+0x24>

08010794 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
 8010794:	b538      	push	{r3, r4, r5, lr}
 8010796:	4604      	mov	r4, r0
 8010798:	2300      	movs	r3, #0
 801079a:	4615      	mov	r5, r2
 801079c:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80107a0:	f7ff ffd5 	bl	801074e <Hardware::SetMode(hardware::ledblink::Mode)>
 80107a4:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
 80107a8:	bd38      	pop	{r3, r4, r5, pc}

080107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>:
 80107aa:	b530      	push	{r4, r5, lr}
 80107ac:	4603      	mov	r3, r0
 80107ae:	4401      	add	r1, r0
 80107b0:	250a      	movs	r5, #10
 80107b2:	2000      	movs	r0, #0
 80107b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80107b8:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 80107bc:	2c09      	cmp	r4, #9
 80107be:	d805      	bhi.n	80107cc <remoteconfig::timedate::atoi(char const*, unsigned long)+0x22>
 80107c0:	fb05 2000 	mla	r0, r5, r0, r2
 80107c4:	428b      	cmp	r3, r1
 80107c6:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 80107ca:	d1f3      	bne.n	80107b4 <remoteconfig::timedate::atoi(char const*, unsigned long)+0xa>
 80107cc:	bd30      	pop	{r4, r5, pc}
	...

080107d0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
 80107d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107d4:	b08a      	sub	sp, #40	@ 0x28
 80107d6:	4605      	mov	r5, r0
 80107d8:	460e      	mov	r6, r1
 80107da:	a808      	add	r0, sp, #32
 80107dc:	2100      	movs	r1, #0
 80107de:	f003 fa09 	bl	8013bf4 <gettimeofday>
 80107e2:	2800      	cmp	r0, #0
 80107e4:	db52      	blt.n	801088c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xbc>
 80107e6:	a808      	add	r0, sp, #32
 80107e8:	f003 f98c 	bl	8013b04 <localtime>
 80107ec:	4b28      	ldr	r3, [pc, #160]	@ (8010890 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc0>)
 80107ee:	4604      	mov	r4, r0
 80107f0:	6919      	ldr	r1, [r3, #16]
 80107f2:	6827      	ldr	r7, [r4, #0]
 80107f4:	6963      	ldr	r3, [r4, #20]
 80107f6:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 80107fa:	fb91 fcf2 	sdiv	ip, r1, r2
 80107fe:	fa4f f08c 	sxtb.w	r0, ip
 8010802:	2800      	cmp	r0, #0
 8010804:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 8010808:	dd21      	ble.n	801084e <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x7e>
 801080a:	f5a2 52e1 	sub.w	r2, r2, #7200	@ 0x1c20
 801080e:	fb02 1100 	mla	r1, r2, r0, r1
 8010812:	fbb1 f1fe 	udiv	r1, r1, lr
 8010816:	b2ca      	uxtb	r2, r1
 8010818:	e9d4 8e02 	ldrd	r8, lr, [r4, #8]
 801081c:	6921      	ldr	r1, [r4, #16]
 801081e:	6864      	ldr	r4, [r4, #4]
 8010820:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 80108a0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xd0>
 8010824:	9403      	str	r4, [sp, #12]
 8010826:	4c1b      	ldr	r4, [pc, #108]	@ (8010894 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>)
 8010828:	3101      	adds	r1, #1
 801082a:	2800      	cmp	r0, #0
 801082c:	bfd8      	it	le
 801082e:	4664      	movle	r4, ip
 8010830:	e9cd 0206 	strd	r0, r2, [sp, #24]
 8010834:	9100      	str	r1, [sp, #0]
 8010836:	e9cd 7404 	strd	r7, r4, [sp, #16]
 801083a:	e9cd e801 	strd	lr, r8, [sp, #4]
 801083e:	4a16      	ldr	r2, [pc, #88]	@ (8010898 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc8>)
 8010840:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8010844:	4631      	mov	r1, r6
 8010846:	4628      	mov	r0, r5
 8010848:	f003 f83a 	bl	80138c0 <snprintf>
 801084c:	e01b      	b.n	8010886 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 801084e:	4342      	muls	r2, r0
 8010850:	1a52      	subs	r2, r2, r1
 8010852:	fbb2 f2fe 	udiv	r2, r2, lr
 8010856:	b2d2      	uxtb	r2, r2
 8010858:	ea42 0c0c 	orr.w	ip, r2, ip
 801085c:	fa5f f18c 	uxtb.w	r1, ip
 8010860:	2900      	cmp	r1, #0
 8010862:	d1d9      	bne.n	8010818 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x48>
 8010864:	9704      	str	r7, [sp, #16]
 8010866:	6862      	ldr	r2, [r4, #4]
 8010868:	9203      	str	r2, [sp, #12]
 801086a:	68a2      	ldr	r2, [r4, #8]
 801086c:	9202      	str	r2, [sp, #8]
 801086e:	68e2      	ldr	r2, [r4, #12]
 8010870:	9201      	str	r2, [sp, #4]
 8010872:	6922      	ldr	r2, [r4, #16]
 8010874:	3201      	adds	r2, #1
 8010876:	9200      	str	r2, [sp, #0]
 8010878:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 801087c:	4a07      	ldr	r2, [pc, #28]	@ (801089c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xcc>)
 801087e:	4631      	mov	r1, r6
 8010880:	4628      	mov	r0, r5
 8010882:	f003 f81d 	bl	80138c0 <snprintf>
 8010886:	b00a      	add	sp, #40	@ 0x28
 8010888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801088c:	2000      	movs	r0, #0
 801088e:	e7fa      	b.n	8010886 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 8010890:	40024000 	andmi	r4, r2, r0
 8010894:	08014656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, lr}
 8010898:	08014702 	stmdaeq	r1, {r1, r8, r9, sl, lr}
 801089c:	080146d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, lr}
 80108a0:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}

080108a4 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
 80108a4:	b570      	push	{r4, r5, r6, lr}
 80108a6:	291a      	cmp	r1, #26
 80108a8:	b08c      	sub	sp, #48	@ 0x30
 80108aa:	4606      	mov	r6, r0
 80108ac:	460c      	mov	r4, r1
 80108ae:	d001      	beq.n	80108b4 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10>
 80108b0:	291f      	cmp	r1, #31
 80108b2:	d174      	bne.n	801099e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfa>
 80108b4:	2104      	movs	r1, #4
 80108b6:	1d70      	adds	r0, r6, #5
 80108b8:	f7ff ff77 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108bc:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 80108c0:	9008      	str	r0, [sp, #32]
 80108c2:	2102      	movs	r1, #2
 80108c4:	f106 000a 	add.w	r0, r6, #10
 80108c8:	f7ff ff6f 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108cc:	3801      	subs	r0, #1
 80108ce:	9007      	str	r0, [sp, #28]
 80108d0:	2102      	movs	r1, #2
 80108d2:	f106 000d 	add.w	r0, r6, #13
 80108d6:	f7ff ff68 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108da:	2102      	movs	r1, #2
 80108dc:	9006      	str	r0, [sp, #24]
 80108de:	f106 0010 	add.w	r0, r6, #16
 80108e2:	f7ff ff62 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108e6:	2102      	movs	r1, #2
 80108e8:	9005      	str	r0, [sp, #20]
 80108ea:	f106 0013 	add.w	r0, r6, #19
 80108ee:	f7ff ff5c 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108f2:	2102      	movs	r1, #2
 80108f4:	9004      	str	r0, [sp, #16]
 80108f6:	f106 0016 	add.w	r0, r6, #22
 80108fa:	f7ff ff56 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80108fe:	9003      	str	r0, [sp, #12]
 8010900:	a803      	add	r0, sp, #12
 8010902:	f003 f90f 	bl	8013b24 <mktime>
 8010906:	2300      	movs	r3, #0
 8010908:	2c1a      	cmp	r4, #26
 801090a:	4605      	mov	r5, r0
 801090c:	9001      	str	r0, [sp, #4]
 801090e:	9302      	str	r3, [sp, #8]
 8010910:	d041      	beq.n	8010996 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xf2>
 8010912:	7e33      	ldrb	r3, [r6, #24]
 8010914:	2102      	movs	r1, #2
 8010916:	2b2d      	cmp	r3, #45	@ 0x2d
 8010918:	f106 0019 	add.w	r0, r6, #25
 801091c:	bf14      	ite	ne
 801091e:	2401      	movne	r4, #1
 8010920:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
 8010924:	f7ff ff41 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8010928:	4344      	muls	r4, r0
 801092a:	f004 04ff 	and.w	r4, r4, #255	@ 0xff
 801092e:	f104 030c 	add.w	r3, r4, #12
 8010932:	b2db      	uxtb	r3, r3
 8010934:	2b1a      	cmp	r3, #26
 8010936:	d82a      	bhi.n	801098e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 8010938:	2102      	movs	r1, #2
 801093a:	f106 001c 	add.w	r0, r6, #28
 801093e:	f7ff ff34 	bl	80107aa <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8010942:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
 8010946:	b264      	sxtb	r4, r4
 8010948:	d12b      	bne.n	80109a2 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfe>
 801094a:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 801094e:	4363      	muls	r3, r4
 8010950:	4a15      	ldr	r2, [pc, #84]	@ (80109a8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 8010952:	6911      	ldr	r1, [r2, #16]
 8010954:	4299      	cmp	r1, r3
 8010956:	bf1f      	itttt	ne
 8010958:	6113      	strne	r3, [r2, #16]
 801095a:	4b14      	ldrne	r3, [pc, #80]	@ (80109ac <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x108>)
 801095c:	2201      	movne	r2, #1
 801095e:	601a      	strne	r2, [r3, #0]
 8010960:	e015      	b.n	801098e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 8010962:	f993 1000 	ldrsb.w	r1, [r3]
 8010966:	42a1      	cmp	r1, r4
 8010968:	d10e      	bne.n	8010988 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 801096a:	7859      	ldrb	r1, [r3, #1]
 801096c:	4281      	cmp	r1, r0
 801096e:	d10b      	bne.n	8010988 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 8010970:	2c00      	cmp	r4, #0
 8010972:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8010976:	fb04 f303 	mul.w	r3, r4, r3
 801097a:	bfcc      	ite	gt
 801097c:	223c      	movgt	r2, #60	@ 0x3c
 801097e:	f06f 023b 	mvnle.w	r2, #59	@ 0x3b
 8010982:	fb02 3300 	mla	r3, r2, r0, r3
 8010986:	e7e3      	b.n	8010950 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xac>
 8010988:	3302      	adds	r3, #2
 801098a:	3a01      	subs	r2, #1
 801098c:	d1e9      	bne.n	8010962 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xbe>
 801098e:	4b06      	ldr	r3, [pc, #24]	@ (80109a8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 8010990:	691b      	ldr	r3, [r3, #16]
 8010992:	1aed      	subs	r5, r5, r3
 8010994:	9501      	str	r5, [sp, #4]
 8010996:	2100      	movs	r1, #0
 8010998:	a801      	add	r0, sp, #4
 801099a:	f003 f95d 	bl	8013c58 <settimeofday>
 801099e:	b00c      	add	sp, #48	@ 0x30
 80109a0:	bd70      	pop	{r4, r5, r6, pc}
 80109a2:	4b03      	ldr	r3, [pc, #12]	@ (80109b0 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10c>)
 80109a4:	220c      	movs	r2, #12
 80109a6:	e7f0      	b.n	801098a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe6>
 80109a8:	40024000 	andmi	r4, r2, r0
 80109ac:	20000a88 	andcs	r0, r0, r8, lsl #21
 80109b0:	080172b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp, lr}

080109b4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 80109b4:	2900      	cmp	r1, #0
 80109b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109b8:	db10      	blt.n	80109dc <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80109ba:	f8d0 50b0 	ldr.w	r5, [r0, #176]	@ 0xb0
 80109be:	2300      	movs	r3, #0
 80109c0:	f100 0638 	add.w	r6, r0, #56	@ 0x38
 80109c4:	42ab      	cmp	r3, r5
 80109c6:	d009      	beq.n	80109dc <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80109c8:	011c      	lsls	r4, r3, #4
 80109ca:	5937      	ldr	r7, [r6, r4]
 80109cc:	42b9      	cmp	r1, r7
 80109ce:	d106      	bne.n	80109de <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 80109d0:	4b04      	ldr	r3, [pc, #16]	@ (80109e4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 80109d2:	681b      	ldr	r3, [r3, #0]
 80109d4:	4420      	add	r0, r4
 80109d6:	4413      	add	r3, r2
 80109d8:	e9c0 320c 	strd	r3, r2, [r0, #48]	@ 0x30
 80109dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109de:	3301      	adds	r3, #1
 80109e0:	e7f0      	b.n	80109c4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 80109e2:	bf00      	nop
 80109e4:	20004830 	andcs	r4, r0, r0, lsr r8

080109e8 <Hardware::Hardware()>:
 80109e8:	b570      	push	{r4, r5, r6, lr}
 80109ea:	4604      	mov	r4, r0
 80109ec:	b090      	sub	sp, #64	@ 0x40
 80109ee:	f000 fac9 	bl	8010f84 <HwClock::HwClock()>
 80109f2:	2306      	movs	r3, #6
 80109f4:	2500      	movs	r5, #0
 80109f6:	6263      	str	r3, [r4, #36]	@ 0x24
 80109f8:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 80109fc:	4b61      	ldr	r3, [pc, #388]	@ (8010b84 <Hardware::Hardware()+0x19c>)
 80109fe:	f884 5020 	strb.w	r5, [r4, #32]
 8010a02:	e9c4 552c 	strd	r5, r5, [r4, #176]	@ 0xb0
 8010a06:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
 8010a0a:	62e6      	str	r6, [r4, #44]	@ 0x2c
 8010a0c:	601c      	str	r4, [r3, #0]
 8010a0e:	f7f7 fdc3 	bl	8008598 <console_init()>
 8010a12:	f001 fd2f 	bl	8012474 <timer6_config()>
 8010a16:	f001 fd93 	bl	8012540 <systick_config>
 8010a1a:	f001 fd65 	bl	80124e8 <udelay_init()>
 8010a1e:	f104 0010 	add.w	r0, r4, #16
 8010a22:	f003 f8cb 	bl	8013bbc <hal::uuid_init(unsigned char*)>
 8010a26:	f001 fdb1 	bl	801258c <gd32_adc_init()>
 8010a2a:	f001 fe0f 	bl	801264c <gd32_i2c_begin>
 8010a2e:	f241 0004 	movw	r0, #4100	@ 0x1004
 8010a32:	f001 f911 	bl	8011c58 <rcu_periph_clock_enable>
 8010a36:	4854      	ldr	r0, [pc, #336]	@ (8010b88 <Hardware::Hardware()+0x1a0>)
 8010a38:	f001 fbea 	bl	8012210 <timer_deinit>
 8010a3c:	a803      	add	r0, sp, #12
 8010a3e:	f001 fc8d 	bl	801235c <timer_struct_para_init>
 8010a42:	23ef      	movs	r3, #239	@ 0xef
 8010a44:	a903      	add	r1, sp, #12
 8010a46:	4850      	ldr	r0, [pc, #320]	@ (8010b88 <Hardware::Hardware()+0x1a0>)
 8010a48:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010a4c:	9605      	str	r6, [sp, #20]
 8010a4e:	f001 fc8d 	bl	801236c <timer_init>
 8010a52:	484d      	ldr	r0, [pc, #308]	@ (8010b88 <Hardware::Hardware()+0x1a0>)
 8010a54:	f001 fcbe 	bl	80123d4 <timer_enable>
 8010a58:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 8010a5c:	f001 f934 	bl	8011cc8 <rcu_timer_clock_prescaler_config>
 8010a60:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 8010a64:	f001 f8f8 	bl	8011c58 <rcu_periph_clock_enable>
 8010a68:	f241 001c 	movw	r0, #4124	@ 0x101c
 8010a6c:	f001 f8f4 	bl	8011c58 <rcu_periph_clock_enable>
 8010a70:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010a74:	f001 f8dc 	bl	8011c30 <pmu_backup_ldo_config>
 8010a78:	f640 4012 	movw	r0, #3090	@ 0xc12
 8010a7c:	f001 f8ec 	bl	8011c58 <rcu_periph_clock_enable>
 8010a80:	f001 f8e2 	bl	8011c48 <pmu_backup_write_enable>
 8010a84:	4629      	mov	r1, r5
 8010a86:	2001      	movs	r0, #1
 8010a88:	f001 fcb2 	bl	80123f0 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 8010a8c:	4a3f      	ldr	r2, [pc, #252]	@ (8010b8c <Hardware::Hardware()+0x1a4>)
 8010a8e:	4b40      	ldr	r3, [pc, #256]	@ (8010b90 <Hardware::Hardware()+0x1a8>)
 8010a90:	1a9b      	subs	r3, r3, r2
 8010a92:	3b01      	subs	r3, #1
 8010a94:	d251      	bcs.n	8010b3a <Hardware::Hardware()+0x152>
 8010a96:	4a3f      	ldr	r2, [pc, #252]	@ (8010b94 <Hardware::Hardware()+0x1ac>)
 8010a98:	4b3f      	ldr	r3, [pc, #252]	@ (8010b98 <Hardware::Hardware()+0x1b0>)
 8010a9a:	2100      	movs	r1, #0
 8010a9c:	1a9b      	subs	r3, r3, r2
 8010a9e:	3b01      	subs	r3, #1
 8010aa0:	d24e      	bcs.n	8010b40 <Hardware::Hardware()+0x158>
 8010aa2:	4a3e      	ldr	r2, [pc, #248]	@ (8010b9c <Hardware::Hardware()+0x1b4>)
 8010aa4:	4b3e      	ldr	r3, [pc, #248]	@ (8010ba0 <Hardware::Hardware()+0x1b8>)
 8010aa6:	2100      	movs	r1, #0
 8010aa8:	1a9b      	subs	r3, r3, r2
 8010aaa:	3b01      	subs	r3, #1
 8010aac:	d24b      	bcs.n	8010b46 <Hardware::Hardware()+0x15e>
 8010aae:	ab07      	add	r3, sp, #28
 8010ab0:	2524      	movs	r5, #36	@ 0x24
 8010ab2:	4618      	mov	r0, r3
 8010ab4:	2200      	movs	r2, #0
 8010ab6:	3d01      	subs	r5, #1
 8010ab8:	f803 2b01 	strb.w	r2, [r3], #1
 8010abc:	d1fb      	bne.n	8010ab6 <Hardware::Hardware()+0xce>
 8010abe:	2212      	movs	r2, #18
 8010ac0:	2308      	movs	r3, #8
 8010ac2:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 8010ac6:	237c      	movs	r3, #124	@ 0x7c
 8010ac8:	930c      	str	r3, [sp, #48]	@ 0x30
 8010aca:	f003 f82b 	bl	8013b24 <mktime>
 8010ace:	4629      	mov	r1, r5
 8010ad0:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8010ad4:	a801      	add	r0, sp, #4
 8010ad6:	f003 f8bf 	bl	8013c58 <settimeofday>
 8010ada:	4620      	mov	r0, r4
 8010adc:	f000 f904 	bl	8010ce8 <HwClock::RtcProbe()>
 8010ae0:	4620      	mov	r0, r4
 8010ae2:	f000 fa5b 	bl	8010f9c <HwClock::Print()>
 8010ae6:	4620      	mov	r0, r4
 8010ae8:	f000 fa88 	bl	8010ffc <HwClock::HcToSys()>
 8010aec:	f640 4003 	movw	r0, #3075	@ 0xc03
 8010af0:	f001 f8b2 	bl	8011c58 <rcu_periph_clock_enable>
 8010af4:	482b      	ldr	r0, [pc, #172]	@ (8010ba4 <Hardware::Hardware()+0x1bc>)
 8010af6:	2310      	movs	r3, #16
 8010af8:	462a      	mov	r2, r5
 8010afa:	2101      	movs	r1, #1
 8010afc:	f001 f82a 	bl	8011b54 <gpio_mode_set>
 8010b00:	4629      	mov	r1, r5
 8010b02:	4828      	ldr	r0, [pc, #160]	@ (8010ba4 <Hardware::Hardware()+0x1bc>)
 8010b04:	2310      	movs	r3, #16
 8010b06:	2202      	movs	r2, #2
 8010b08:	f001 f846 	bl	8011b98 <gpio_output_options_set>
 8010b0c:	4b26      	ldr	r3, [pc, #152]	@ (8010ba8 <Hardware::Hardware()+0x1c0>)
 8010b0e:	2210      	movs	r2, #16
 8010b10:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 8010b14:	4668      	mov	r0, sp
 8010b16:	f000 fbfd 	bl	8011314 <I2cDetect::I2cDetect()>
 8010b1a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8010b1c:	2900      	cmp	r1, #0
 8010b1e:	da2b      	bge.n	8010b78 <Hardware::Hardware()+0x190>
 8010b20:	f8d4 30b0 	ldr.w	r3, [r4, #176]	@ 0xb0
 8010b24:	2b07      	cmp	r3, #7
 8010b26:	d911      	bls.n	8010b4c <Hardware::Hardware()+0x164>
 8010b28:	4820      	ldr	r0, [pc, #128]	@ (8010bac <Hardware::Hardware()+0x1c4>)
 8010b2a:	f000 f9cb 	bl	8010ec4 <console_error>
 8010b2e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8010b32:	62e2      	str	r2, [r4, #44]	@ 0x2c
 8010b34:	4620      	mov	r0, r4
 8010b36:	b010      	add	sp, #64	@ 0x40
 8010b38:	bd70      	pop	{r4, r5, r6, pc}
 8010b3a:	f802 5b01 	strb.w	r5, [r2], #1
 8010b3e:	e7a8      	b.n	8010a92 <Hardware::Hardware()+0xaa>
 8010b40:	f802 1b01 	strb.w	r1, [r2], #1
 8010b44:	e7ab      	b.n	8010a9e <Hardware::Hardware()+0xb6>
 8010b46:	f802 1b01 	strb.w	r1, [r2], #1
 8010b4a:	e7ae      	b.n	8010aaa <Hardware::Hardware()+0xc2>
 8010b4c:	4a18      	ldr	r2, [pc, #96]	@ (8010bb0 <Hardware::Hardware()+0x1c8>)
 8010b4e:	6811      	ldr	r1, [r2, #0]
 8010b50:	f8d4 20b4 	ldr.w	r2, [r4, #180]	@ 0xb4
 8010b54:	1c50      	adds	r0, r2, #1
 8010b56:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
 8010b5a:	1c58      	adds	r0, r3, #1
 8010b5c:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8010b60:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8010b64:	f8c4 00b0 	str.w	r0, [r4, #176]	@ 0xb0
 8010b68:	6319      	str	r1, [r3, #48]	@ 0x30
 8010b6a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8010b6e:	e9c3 120d 	strd	r1, r2, [r3, #52]	@ 0x34
 8010b72:	4910      	ldr	r1, [pc, #64]	@ (8010bb4 <Hardware::Hardware()+0x1cc>)
 8010b74:	63d9      	str	r1, [r3, #60]	@ 0x3c
 8010b76:	e7dc      	b.n	8010b32 <Hardware::Hardware()+0x14a>
 8010b78:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8010b7c:	4620      	mov	r0, r4
 8010b7e:	f7ff ff19 	bl	80109b4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 8010b82:	e7d7      	b.n	8010b34 <Hardware::Hardware()+0x14c>
 8010b84:	20000b7c 	andcs	r0, r0, ip, ror fp
 8010b88:	40001000 	andmi	r1, r0, r0
 8010b8c:	2001c000 	andcs	ip, r1, r0
 8010b90:	2001c000 	andcs	ip, r1, r0
 8010b94:	10008000 	andne	r8, r0, r0
 8010b98:	1000cc90 	mulne	r0, r0, ip
 8010b9c:	20020000 	andcs	r0, r2, r0
 8010ba0:	20020000 	andcs	r0, r2, r0
 8010ba4:	40020c00 	andmi	r0, r2, r0, lsl #24
 8010ba8:	40020000 	andmi	r0, r2, r0
 8010bac:	080144e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, lr}
 8010bb0:	20004830 	andcs	r4, r0, r0, lsr r8
 8010bb4:	080105f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl}

08010bb8 <Hardware::Reboot()>:
 8010bb8:	b508      	push	{r3, lr}
 8010bba:	4604      	mov	r4, r0
 8010bbc:	4811      	ldr	r0, [pc, #68]	@ (8010c04 <Hardware::Reboot()+0x4c>)
 8010bbe:	f002 feac 	bl	801391a <puts>
 8010bc2:	2500      	movs	r5, #0
 8010bc4:	4620      	mov	r0, r4
 8010bc6:	f000 fa71 	bl	80110ac <HwClock::SysToHc()>
 8010bca:	2104      	movs	r1, #4
 8010bcc:	f884 5020 	strb.w	r5, [r4, #32]
 8010bd0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8010bd4:	f000 ff94 	bl	8011b00 <fwdgt_config>
 8010bd8:	4620      	mov	r0, r4
 8010bda:	f7f8 fc67 	bl	80094ac <Hardware::RebootHandler()>
 8010bde:	f7fc fe27 	bl	800d830 <net::net_shutdown()>
 8010be2:	4629      	mov	r1, r5
 8010be4:	4620      	mov	r0, r4
 8010be6:	f7ff fdb2 	bl	801074e <Hardware::SetMode(hardware::ledblink::Mode)>
 8010bea:	f3bf 8f4f 	dsb	sy
 8010bee:	4906      	ldr	r1, [pc, #24]	@ (8010c08 <Hardware::Reboot()+0x50>)
 8010bf0:	4b06      	ldr	r3, [pc, #24]	@ (8010c0c <Hardware::Reboot()+0x54>)
 8010bf2:	68ca      	ldr	r2, [r1, #12]
 8010bf4:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8010bf8:	4313      	orrs	r3, r2
 8010bfa:	60cb      	str	r3, [r1, #12]
 8010bfc:	f3bf 8f4f 	dsb	sy
 8010c00:	bf00      	nop
 8010c02:	e7fd      	b.n	8010c00 <Hardware::Reboot()+0x48>
 8010c04:	080140b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, lr}
 8010c08:	e000ed00 	and	lr, r0, r0, lsl #26
 8010c0c:	05fa0004 	ldrbeq	r0, [sl, #4]!

08010c10 <rtc_configuration()>:
 8010c10:	b508      	push	{r3, lr}
 8010c12:	f44f 50e0 	mov.w	r0, #7168	@ 0x1c00
 8010c16:	f001 f867 	bl	8011ce8 <rcu_osci_on>
 8010c1a:	f44f 50e0 	mov.w	r0, #7168	@ 0x1c00
 8010c1e:	f001 f8e7 	bl	8011df0 <rcu_osci_stab_wait>
 8010c22:	2801      	cmp	r0, #1
 8010c24:	d001      	beq.n	8010c2a <rtc_configuration()+0x1a>
 8010c26:	2000      	movs	r0, #0
 8010c28:	bd08      	pop	{r3, pc}
 8010c2a:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8010c2e:	f001 f83f 	bl	8011cb0 <rcu_rtc_clock_config>
 8010c32:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 8010c36:	f001 f80f 	bl	8011c58 <rcu_periph_clock_enable>
 8010c3a:	f001 f977 	bl	8011f2c <rtc_register_sync_wait>
 8010c3e:	2801      	cmp	r0, #1
 8010c40:	d1f1      	bne.n	8010c26 <rtc_configuration()+0x16>
 8010c42:	4806      	ldr	r0, [pc, #24]	@ (8010c5c <rtc_configuration()+0x4c>)
 8010c44:	f640 03c4 	movw	r3, #2244	@ 0x8c4
 8010c48:	8003      	strh	r3, [r0, #0]
 8010c4a:	2318      	movs	r3, #24
 8010c4c:	7083      	strb	r3, [r0, #2]
 8010c4e:	f001 f99b 	bl	8011f88 <rtc_init>
 8010c52:	1e43      	subs	r3, r0, #1
 8010c54:	4258      	negs	r0, r3
 8010c56:	4158      	adcs	r0, r3
 8010c58:	e7e6      	b.n	8010c28 <rtc_configuration()+0x18>
 8010c5a:	bf00      	nop
 8010c5c:	20000b80 	andcs	r0, r0, r0, lsl #23

08010c60 <HwClock::RtcSet(tm const*)>:
 8010c60:	694a      	ldr	r2, [r1, #20]
 8010c62:	4820      	ldr	r0, [pc, #128]	@ (8010ce4 <HwClock::RtcSet(tm const*)+0x84>)
 8010c64:	230a      	movs	r3, #10
 8010c66:	b510      	push	{r4, lr}
 8010c68:	fb92 f4f3 	sdiv	r4, r2, r3
 8010c6c:	fb03 2214 	mls	r2, r3, r4, r2
 8010c70:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010c74:	7002      	strb	r2, [r0, #0]
 8010c76:	690a      	ldr	r2, [r1, #16]
 8010c78:	fb92 f4f3 	sdiv	r4, r2, r3
 8010c7c:	fb03 2214 	mls	r2, r3, r4, r2
 8010c80:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010c84:	7042      	strb	r2, [r0, #1]
 8010c86:	68ca      	ldr	r2, [r1, #12]
 8010c88:	fb92 f4f3 	sdiv	r4, r2, r3
 8010c8c:	fb03 2214 	mls	r2, r3, r4, r2
 8010c90:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010c94:	7082      	strb	r2, [r0, #2]
 8010c96:	698a      	ldr	r2, [r1, #24]
 8010c98:	fb92 f4f3 	sdiv	r4, r2, r3
 8010c9c:	fb03 2214 	mls	r2, r3, r4, r2
 8010ca0:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010ca4:	70c2      	strb	r2, [r0, #3]
 8010ca6:	688a      	ldr	r2, [r1, #8]
 8010ca8:	fb92 f4f3 	sdiv	r4, r2, r3
 8010cac:	fb03 2214 	mls	r2, r3, r4, r2
 8010cb0:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010cb4:	7102      	strb	r2, [r0, #4]
 8010cb6:	684a      	ldr	r2, [r1, #4]
 8010cb8:	fb92 f4f3 	sdiv	r4, r2, r3
 8010cbc:	fb03 2214 	mls	r2, r3, r4, r2
 8010cc0:	eb02 1204 	add.w	r2, r2, r4, lsl #4
 8010cc4:	7142      	strb	r2, [r0, #5]
 8010cc6:	680a      	ldr	r2, [r1, #0]
 8010cc8:	fb92 f1f3 	sdiv	r1, r2, r3
 8010ccc:	fb03 2211 	mls	r2, r3, r1, r2
 8010cd0:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010cd4:	7182      	strb	r2, [r0, #6]
 8010cd6:	f001 f957 	bl	8011f88 <rtc_init>
 8010cda:	1e43      	subs	r3, r0, #1
 8010cdc:	4258      	negs	r0, r3
 8010cde:	4158      	adcs	r0, r3
 8010ce0:	bd10      	pop	{r4, pc}
 8010ce2:	bf00      	nop
 8010ce4:	20000b80 	andcs	r0, r0, r0, lsl #23

08010ce8 <HwClock::RtcProbe()>:
 8010ce8:	b570      	push	{r4, r5, r6, lr}
 8010cea:	4b18      	ldr	r3, [pc, #96]	@ (8010d4c <HwClock::RtcProbe()+0x64>)
 8010cec:	4a18      	ldr	r2, [pc, #96]	@ (8010d50 <HwClock::RtcProbe()+0x68>)
 8010cee:	609a      	str	r2, [r3, #8]
 8010cf0:	2500      	movs	r5, #0
 8010cf2:	b08a      	sub	sp, #40	@ 0x28
 8010cf4:	4604      	mov	r4, r0
 8010cf6:	4628      	mov	r0, r5
 8010cf8:	611d      	str	r5, [r3, #16]
 8010cfa:	f001 fb87 	bl	801240c <bkp_data_read(bkp_data_register_enum)>
 8010cfe:	f24a 56a5 	movw	r6, #42405	@ 0xa5a5
 8010d02:	42b0      	cmp	r0, r6
 8010d04:	d01e      	beq.n	8010d44 <HwClock::RtcProbe()+0x5c>
 8010d06:	f7ff ff83 	bl	8010c10 <rtc_configuration()>
 8010d0a:	b910      	cbnz	r0, 8010d12 <HwClock::RtcProbe()+0x2a>
 8010d0c:	72a0      	strb	r0, [r4, #10]
 8010d0e:	b00a      	add	sp, #40	@ 0x28
 8010d10:	bd70      	pop	{r4, r5, r6, pc}
 8010d12:	4631      	mov	r1, r6
 8010d14:	4628      	mov	r0, r5
 8010d16:	f001 fb6b 	bl	80123f0 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 8010d1a:	2308      	movs	r3, #8
 8010d1c:	2212      	movs	r2, #18
 8010d1e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010d22:	a901      	add	r1, sp, #4
 8010d24:	237c      	movs	r3, #124	@ 0x7c
 8010d26:	4620      	mov	r0, r4
 8010d28:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8010d2c:	9501      	str	r5, [sp, #4]
 8010d2e:	9306      	str	r3, [sp, #24]
 8010d30:	f7ff ff96 	bl	8010c60 <HwClock::RtcSet(tm const*)>
 8010d34:	2303      	movs	r3, #3
 8010d36:	7263      	strb	r3, [r4, #9]
 8010d38:	2301      	movs	r3, #1
 8010d3a:	72a3      	strb	r3, [r4, #10]
 8010d3c:	4b05      	ldr	r3, [pc, #20]	@ (8010d54 <HwClock::RtcProbe()+0x6c>)
 8010d3e:	681b      	ldr	r3, [r3, #0]
 8010d40:	6063      	str	r3, [r4, #4]
 8010d42:	e7e4      	b.n	8010d0e <HwClock::RtcProbe()+0x26>
 8010d44:	f001 f8f2 	bl	8011f2c <rtc_register_sync_wait>
 8010d48:	e7f4      	b.n	8010d34 <HwClock::RtcProbe()+0x4c>
 8010d4a:	bf00      	nop
 8010d4c:	20000b80 	andcs	r0, r0, r0, lsl #23
 8010d50:	00ff007f 	rscseq	r0, pc, pc, ror r0	@ <UNPREDICTABLE>
 8010d54:	20004830 	andcs	r4, r0, r0, lsr r8

08010d58 <HwClock::RtcGet(tm*)>:
 8010d58:	4a1a      	ldr	r2, [pc, #104]	@ (8010dc4 <HwClock::RtcGet(tm*)+0x6c>)
 8010d5a:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
 8010d5e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 8010d62:	200a      	movs	r0, #10
 8010d64:	b530      	push	{r4, r5, lr}
 8010d66:	f3c2 5503 	ubfx	r5, r2, #20, #4
 8010d6a:	f3c2 4403 	ubfx	r4, r2, #16, #4
 8010d6e:	fb00 4405 	mla	r4, r0, r5, r4
 8010d72:	614c      	str	r4, [r1, #20]
 8010d74:	f342 3400 	sbfx	r4, r2, #12, #1
 8010d78:	f3c2 2503 	ubfx	r5, r2, #8, #4
 8010d7c:	4004      	ands	r4, r0
 8010d7e:	442c      	add	r4, r5
 8010d80:	610c      	str	r4, [r1, #16]
 8010d82:	f3c2 1501 	ubfx	r5, r2, #4, #2
 8010d86:	f002 040f 	and.w	r4, r2, #15
 8010d8a:	fb00 4405 	mla	r4, r0, r5, r4
 8010d8e:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8010d92:	60cc      	str	r4, [r1, #12]
 8010d94:	618a      	str	r2, [r1, #24]
 8010d96:	f3c3 5401 	ubfx	r4, r3, #20, #2
 8010d9a:	f3c3 4203 	ubfx	r2, r3, #16, #4
 8010d9e:	fb00 2204 	mla	r2, r0, r4, r2
 8010da2:	608a      	str	r2, [r1, #8]
 8010da4:	f3c3 3402 	ubfx	r4, r3, #12, #3
 8010da8:	f3c3 2203 	ubfx	r2, r3, #8, #4
 8010dac:	fb00 2204 	mla	r2, r0, r4, r2
 8010db0:	604a      	str	r2, [r1, #4]
 8010db2:	f3c3 1202 	ubfx	r2, r3, #4, #3
 8010db6:	f003 030f 	and.w	r3, r3, #15
 8010dba:	fb00 3302 	mla	r3, r0, r2, r3
 8010dbe:	600b      	str	r3, [r1, #0]
 8010dc0:	2001      	movs	r0, #1
 8010dc2:	bd30      	pop	{r4, r5, pc}
 8010dc4:	40002000 	andmi	r2, r0, r0

08010dc8 <HwClock::RtcSetAlarm(tm const*)>:
 8010dc8:	b530      	push	{r4, r5, lr}
 8010dca:	460c      	mov	r4, r1
 8010dcc:	b085      	sub	sp, #20
 8010dce:	4605      	mov	r5, r0
 8010dd0:	2001      	movs	r0, #1
 8010dd2:	f001 f99d 	bl	8012110 <rtc_alarm_disable>
 8010dd6:	2300      	movs	r3, #0
 8010dd8:	f04f 3280 	mov.w	r2, #2155905152	@ 0x80808080
 8010ddc:	e9cd 2300 	strd	r2, r3, [sp]
 8010de0:	68e2      	ldr	r2, [r4, #12]
 8010de2:	9303      	str	r3, [sp, #12]
 8010de4:	230a      	movs	r3, #10
 8010de6:	fb92 f1f3 	sdiv	r1, r2, r3
 8010dea:	fb03 2211 	mls	r2, r3, r1, r2
 8010dee:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010df2:	f88d 2008 	strb.w	r2, [sp, #8]
 8010df6:	68a2      	ldr	r2, [r4, #8]
 8010df8:	fb92 f1f3 	sdiv	r1, r2, r3
 8010dfc:	fb03 2211 	mls	r2, r3, r1, r2
 8010e00:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010e04:	f88d 2009 	strb.w	r2, [sp, #9]
 8010e08:	6862      	ldr	r2, [r4, #4]
 8010e0a:	fb92 f1f3 	sdiv	r1, r2, r3
 8010e0e:	fb03 2211 	mls	r2, r3, r1, r2
 8010e12:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010e16:	f88d 200a 	strb.w	r2, [sp, #10]
 8010e1a:	6822      	ldr	r2, [r4, #0]
 8010e1c:	fb92 f1f3 	sdiv	r1, r2, r3
 8010e20:	fb03 2211 	mls	r2, r3, r1, r2
 8010e24:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8010e28:	2001      	movs	r0, #1
 8010e2a:	4669      	mov	r1, sp
 8010e2c:	f88d 200b 	strb.w	r2, [sp, #11]
 8010e30:	f001 f90a 	bl	8012048 <rtc_alarm_config>
 8010e34:	7aeb      	ldrb	r3, [r5, #11]
 8010e36:	b14b      	cbz	r3, 8010e4c <HwClock::RtcSetAlarm(tm const*)+0x84>
 8010e38:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8010e3c:	f001 f9a2 	bl	8012184 <rtc_interrupt_enable>
 8010e40:	2001      	movs	r0, #1
 8010e42:	f001 f94d 	bl	80120e0 <rtc_alarm_enable>
 8010e46:	2001      	movs	r0, #1
 8010e48:	b005      	add	sp, #20
 8010e4a:	bd30      	pop	{r4, r5, pc}
 8010e4c:	2001      	movs	r0, #1
 8010e4e:	f001 f95f 	bl	8012110 <rtc_alarm_disable>
 8010e52:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8010e56:	f001 f9b1 	bl	80121bc <rtc_interrupt_disable>
 8010e5a:	e7f4      	b.n	8010e46 <HwClock::RtcSetAlarm(tm const*)+0x7e>

08010e5c <HwClock::RtcGetAlarm(tm*)>:
 8010e5c:	b530      	push	{r4, r5, lr}
 8010e5e:	b085      	sub	sp, #20
 8010e60:	f7ff ff7a 	bl	8010d58 <HwClock::RtcGet(tm*)>
 8010e64:	460c      	mov	r4, r1
 8010e66:	4605      	mov	r5, r0
 8010e68:	b320      	cbz	r0, 8010eb4 <HwClock::RtcGetAlarm(tm*)+0x58>
 8010e6a:	4669      	mov	r1, sp
 8010e6c:	2001      	movs	r0, #1
 8010e6e:	f001 f917 	bl	80120a0 <rtc_alarm_get>
 8010e72:	f89d 300b 	ldrb.w	r3, [sp, #11]
 8010e76:	0919      	lsrs	r1, r3, #4
 8010e78:	f003 020f 	and.w	r2, r3, #15
 8010e7c:	230a      	movs	r3, #10
 8010e7e:	fb13 2201 	smlabb	r2, r3, r1, r2
 8010e82:	6022      	str	r2, [r4, #0]
 8010e84:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8010e88:	0911      	lsrs	r1, r2, #4
 8010e8a:	f002 020f 	and.w	r2, r2, #15
 8010e8e:	fb13 2201 	smlabb	r2, r3, r1, r2
 8010e92:	6062      	str	r2, [r4, #4]
 8010e94:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8010e98:	0911      	lsrs	r1, r2, #4
 8010e9a:	f002 020f 	and.w	r2, r2, #15
 8010e9e:	fb13 2201 	smlabb	r2, r3, r1, r2
 8010ea2:	60a2      	str	r2, [r4, #8]
 8010ea4:	f89d 2008 	ldrb.w	r2, [sp, #8]
 8010ea8:	0911      	lsrs	r1, r2, #4
 8010eaa:	f002 020f 	and.w	r2, r2, #15
 8010eae:	fb13 2301 	smlabb	r3, r3, r1, r2
 8010eb2:	60e3      	str	r3, [r4, #12]
 8010eb4:	4628      	mov	r0, r5
 8010eb6:	b005      	add	sp, #20
 8010eb8:	bd30      	pop	{r4, r5, pc}

08010eba <console_putc>:
 8010eba:	f001 bd3d 	b.w	8012938 <uart0_putc>

08010ebe <console_puts>:
 8010ebe:	f001 bd55 	b.w	801296c <uart0_puts>
	...

08010ec4 <console_error>:
 8010ec4:	b510      	push	{r4, lr}
 8010ec6:	4604      	mov	r4, r0
 8010ec8:	4805      	ldr	r0, [pc, #20]	@ (8010ee0 <console_error+0x1c>)
 8010eca:	f001 fd4f 	bl	801296c <uart0_puts>
 8010ece:	4620      	mov	r0, r4
 8010ed0:	f001 fd4c 	bl	801296c <uart0_puts>
 8010ed4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ed8:	4802      	ldr	r0, [pc, #8]	@ (8010ee4 <console_error+0x20>)
 8010eda:	f001 bd47 	b.w	801296c <uart0_puts>
 8010ede:	bf00      	nop
 8010ee0:	08014735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, lr}
 8010ee4:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}

08010ee8 <console_set_fg_color>:
 8010ee8:	2807      	cmp	r0, #7
 8010eea:	d810      	bhi.n	8010f0e <console_set_fg_color+0x26>
 8010eec:	e8df f000 	tbb	[pc, r0]
 8010ef0:	0b090704 	bleq	8252b08 <_sidata+0x23b48c>
 8010ef4:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	@ 8010ec0 <console_puts+0x2>
 8010ef8:	4806      	ldr	r0, [pc, #24]	@ (8010f14 <console_set_fg_color+0x2c>)
 8010efa:	f001 bd37 	b.w	801296c <uart0_puts>
 8010efe:	4806      	ldr	r0, [pc, #24]	@ (8010f18 <console_set_fg_color+0x30>)
 8010f00:	e7fb      	b.n	8010efa <console_set_fg_color+0x12>
 8010f02:	4806      	ldr	r0, [pc, #24]	@ (8010f1c <console_set_fg_color+0x34>)
 8010f04:	e7f9      	b.n	8010efa <console_set_fg_color+0x12>
 8010f06:	4806      	ldr	r0, [pc, #24]	@ (8010f20 <console_set_fg_color+0x38>)
 8010f08:	e7f7      	b.n	8010efa <console_set_fg_color+0x12>
 8010f0a:	4806      	ldr	r0, [pc, #24]	@ (8010f24 <console_set_fg_color+0x3c>)
 8010f0c:	e7f5      	b.n	8010efa <console_set_fg_color+0x12>
 8010f0e:	4806      	ldr	r0, [pc, #24]	@ (8010f28 <console_set_fg_color+0x40>)
 8010f10:	e7f3      	b.n	8010efa <console_set_fg_color+0x12>
 8010f12:	bf00      	nop
 8010f14:	08014741 	stmdaeq	r1, {r0, r6, r8, r9, sl, lr}
 8010f18:	08014735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, lr}
 8010f1c:	08014747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, lr}
 8010f20:	0801474d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, lr}
 8010f24:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}
 8010f28:	08014753 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, lr}

08010f2c <console_status>:
 8010f2c:	b510      	push	{r4, lr}
 8010f2e:	b280      	uxth	r0, r0
 8010f30:	460c      	mov	r4, r1
 8010f32:	f7ff ffd9 	bl	8010ee8 <console_set_fg_color>
 8010f36:	4807      	ldr	r0, [pc, #28]	@ (8010f54 <console_status+0x28>)
 8010f38:	f001 fd18 	bl	801296c <uart0_puts>
 8010f3c:	4620      	mov	r0, r4
 8010f3e:	f001 fd15 	bl	801296c <uart0_puts>
 8010f42:	200a      	movs	r0, #10
 8010f44:	f001 fcf8 	bl	8012938 <uart0_putc>
 8010f48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f4c:	4802      	ldr	r0, [pc, #8]	@ (8010f58 <console_status+0x2c>)
 8010f4e:	f001 bd0d 	b.w	801296c <uart0_puts>
 8010f52:	bf00      	nop
 8010f54:	08014759 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, lr}
 8010f58:	0801473b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, lr}

08010f5c <Hardware::WatchdogInit()>:
 8010f5c:	b510      	push	{r4, lr}
 8010f5e:	2102      	movs	r1, #2
 8010f60:	4604      	mov	r4, r0
 8010f62:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8010f66:	f000 fdcb 	bl	8011b00 <fwdgt_config>
 8010f6a:	2801      	cmp	r0, #1
 8010f6c:	bf0c      	ite	eq
 8010f6e:	2301      	moveq	r3, #1
 8010f70:	2300      	movne	r3, #0
 8010f72:	f884 3020 	strb.w	r3, [r4, #32]
 8010f76:	d103      	bne.n	8010f80 <Hardware::WatchdogInit()+0x24>
 8010f78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f7c:	f000 bdb0 	b.w	8011ae0 <fwdgt_enable>
 8010f80:	bd10      	pop	{r4, pc}
	...

08010f84 <HwClock::HwClock()>:
 8010f84:	2200      	movs	r2, #0
 8010f86:	e9c0 2200 	strd	r2, r2, [r0]
 8010f8a:	7302      	strb	r2, [r0, #12]
 8010f8c:	4a02      	ldr	r2, [pc, #8]	@ (8010f98 <HwClock::HwClock()+0x14>)
 8010f8e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8010f92:	6081      	str	r1, [r0, #8]
 8010f94:	6010      	str	r0, [r2, #0]
 8010f96:	4770      	bx	lr
 8010f98:	20000b94 	mulcs	r0, r4, fp

08010f9c <HwClock::Print()>:
 8010f9c:	b510      	push	{r4, lr}
 8010f9e:	7a83      	ldrb	r3, [r0, #10]
 8010fa0:	b08e      	sub	sp, #56	@ 0x38
 8010fa2:	b92b      	cbnz	r3, 8010fb0 <HwClock::Print()+0x14>
 8010fa4:	4811      	ldr	r0, [pc, #68]	@ (8010fec <HwClock::Print()+0x50>)
 8010fa6:	b00e      	add	sp, #56	@ 0x38
 8010fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fac:	f002 bcb5 	b.w	801391a <puts>
 8010fb0:	7a43      	ldrb	r3, [r0, #9]
 8010fb2:	2b03      	cmp	r3, #3
 8010fb4:	bf96      	itet	ls
 8010fb6:	4a0e      	ldrls	r2, [pc, #56]	@ (8010ff0 <HwClock::Print()+0x54>)
 8010fb8:	4c0e      	ldrhi	r4, [pc, #56]	@ (8010ff4 <HwClock::Print()+0x58>)
 8010fba:	f852 4023 	ldrls.w	r4, [r2, r3, lsl #2]
 8010fbe:	a905      	add	r1, sp, #20
 8010fc0:	f7ff feca 	bl	8010d58 <HwClock::RtcGet(tm*)>
 8010fc4:	9b05      	ldr	r3, [sp, #20]
 8010fc6:	9303      	str	r3, [sp, #12]
 8010fc8:	9b06      	ldr	r3, [sp, #24]
 8010fca:	9302      	str	r3, [sp, #8]
 8010fcc:	9b07      	ldr	r3, [sp, #28]
 8010fce:	9301      	str	r3, [sp, #4]
 8010fd0:	9b08      	ldr	r3, [sp, #32]
 8010fd2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010fd4:	9300      	str	r3, [sp, #0]
 8010fd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010fd8:	4807      	ldr	r0, [pc, #28]	@ (8010ff8 <HwClock::Print()+0x5c>)
 8010fda:	3301      	adds	r3, #1
 8010fdc:	f202 726c 	addw	r2, r2, #1900	@ 0x76c
 8010fe0:	4621      	mov	r1, r4
 8010fe2:	f002 fc45 	bl	8013870 <printf>
 8010fe6:	b00e      	add	sp, #56	@ 0x38
 8010fe8:	bd10      	pop	{r4, pc}
 8010fea:	bf00      	nop
 8010fec:	08014779 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, lr}
 8010ff0:	0801763c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, ip, sp, lr}
 8010ff4:	08014771 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, sl, lr}
 8010ff8:	0801478a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, lr}

08010ffc <HwClock::HcToSys()>:
 8010ffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011000:	7a83      	ldrb	r3, [r0, #10]
 8011002:	b099      	sub	sp, #100	@ 0x64
 8011004:	4604      	mov	r4, r0
 8011006:	2b00      	cmp	r3, #0
 8011008:	d044      	beq.n	8011094 <HwClock::HcToSys()+0x98>
 801100a:	4e26      	ldr	r6, [pc, #152]	@ (80110a4 <HwClock::HcToSys()+0xa8>)
 801100c:	6833      	ldr	r3, [r6, #0]
 801100e:	f893 7020 	ldrb.w	r7, [r3, #32]
 8011012:	b13f      	cbz	r7, 8011024 <HwClock::HcToSys()+0x28>
 8011014:	2200      	movs	r2, #0
 8011016:	f883 2020 	strb.w	r2, [r3, #32]
 801101a:	2104      	movs	r1, #4
 801101c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8011020:	f000 fd6e 	bl	8011b00 <fwdgt_config>
 8011024:	a906      	add	r1, sp, #24
 8011026:	4620      	mov	r0, r4
 8011028:	f7ff fe96 	bl	8010d58 <HwClock::RtcGet(tm*)>
 801102c:	2100      	movs	r1, #0
 801102e:	4668      	mov	r0, sp
 8011030:	f002 fde0 	bl	8013bf4 <gettimeofday>
 8011034:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011038:	f04f 093c 	mov.w	r9, #60	@ 0x3c
 801103c:	a806      	add	r0, sp, #24
 801103e:	fb09 3802 	mla	r8, r9, r2, r3
 8011042:	f002 fd6f 	bl	8013b24 <mktime>
 8011046:	4605      	mov	r5, r0
 8011048:	a90f      	add	r1, sp, #60	@ 0x3c
 801104a:	4620      	mov	r0, r4
 801104c:	f7ff fe84 	bl	8010d58 <HwClock::RtcGet(tm*)>
 8011050:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 8011054:	fb09 3302 	mla	r3, r9, r2, r3
 8011058:	4598      	cmp	r8, r3
 801105a:	d0f5      	beq.n	8011048 <HwClock::HcToSys()+0x4c>
 801105c:	2100      	movs	r1, #0
 801105e:	a802      	add	r0, sp, #8
 8011060:	f002 fdc8 	bl	8013bf4 <gettimeofday>
 8011064:	9b00      	ldr	r3, [sp, #0]
 8011066:	9a02      	ldr	r2, [sp, #8]
 8011068:	9901      	ldr	r1, [sp, #4]
 801106a:	9504      	str	r5, [sp, #16]
 801106c:	429a      	cmp	r2, r3
 801106e:	9b03      	ldr	r3, [sp, #12]
 8011070:	d113      	bne.n	801109a <HwClock::HcToSys()+0x9e>
 8011072:	1a5b      	subs	r3, r3, r1
 8011074:	f5c3 2274 	rsb	r2, r3, #999424	@ 0xf4000
 8011078:	f502 7210 	add.w	r2, r2, #576	@ 0x240
 801107c:	2100      	movs	r1, #0
 801107e:	a804      	add	r0, sp, #16
 8011080:	9205      	str	r2, [sp, #20]
 8011082:	f002 fde9 	bl	8013c58 <settimeofday>
 8011086:	4b08      	ldr	r3, [pc, #32]	@ (80110a8 <HwClock::HcToSys()+0xac>)
 8011088:	681b      	ldr	r3, [r3, #0]
 801108a:	6063      	str	r3, [r4, #4]
 801108c:	b117      	cbz	r7, 8011094 <HwClock::HcToSys()+0x98>
 801108e:	6830      	ldr	r0, [r6, #0]
 8011090:	f7ff ff64 	bl	8010f5c <Hardware::WatchdogInit()>
 8011094:	b019      	add	sp, #100	@ 0x64
 8011096:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801109a:	1a5a      	subs	r2, r3, r1
 801109c:	bf48      	it	mi
 801109e:	1aca      	submi	r2, r1, r3
 80110a0:	e7ec      	b.n	801107c <HwClock::HcToSys()+0x80>
 80110a2:	bf00      	nop
 80110a4:	20000b7c 	andcs	r0, r0, ip, ror fp
 80110a8:	20004830 	andcs	r4, r0, r0, lsr r8

080110ac <HwClock::SysToHc()>:
 80110ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80110ae:	7a83      	ldrb	r3, [r0, #10]
 80110b0:	4604      	mov	r4, r0
 80110b2:	b31b      	cbz	r3, 80110fc <HwClock::SysToHc()+0x50>
 80110b4:	4d12      	ldr	r5, [pc, #72]	@ (8011100 <HwClock::SysToHc()+0x54>)
 80110b6:	682b      	ldr	r3, [r5, #0]
 80110b8:	f893 6020 	ldrb.w	r6, [r3, #32]
 80110bc:	b13e      	cbz	r6, 80110ce <HwClock::SysToHc()+0x22>
 80110be:	2200      	movs	r2, #0
 80110c0:	f883 2020 	strb.w	r2, [r3, #32]
 80110c4:	2104      	movs	r1, #4
 80110c6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80110ca:	f000 fd19 	bl	8011b00 <fwdgt_config>
 80110ce:	2100      	movs	r1, #0
 80110d0:	4668      	mov	r0, sp
 80110d2:	f002 fd8f 	bl	8013bf4 <gettimeofday>
 80110d6:	2100      	movs	r1, #0
 80110d8:	a802      	add	r0, sp, #8
 80110da:	f002 fd8b 	bl	8013bf4 <gettimeofday>
 80110de:	9a00      	ldr	r2, [sp, #0]
 80110e0:	9b02      	ldr	r3, [sp, #8]
 80110e2:	429a      	cmp	r2, r3
 80110e4:	daf7      	bge.n	80110d6 <HwClock::SysToHc()+0x2a>
 80110e6:	a802      	add	r0, sp, #8
 80110e8:	f002 fcc8 	bl	8013a7c <gmtime>
 80110ec:	4601      	mov	r1, r0
 80110ee:	4620      	mov	r0, r4
 80110f0:	f7ff fdb6 	bl	8010c60 <HwClock::RtcSet(tm const*)>
 80110f4:	b116      	cbz	r6, 80110fc <HwClock::SysToHc()+0x50>
 80110f6:	6828      	ldr	r0, [r5, #0]
 80110f8:	f7ff ff30 	bl	8010f5c <Hardware::WatchdogInit()>
 80110fc:	b004      	add	sp, #16
 80110fe:	bd70      	pop	{r4, r5, r6, pc}
 8011100:	20000b7c 	andcs	r0, r0, ip, ror fp

08011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>:
 8011104:	b530      	push	{r4, r5, lr}
 8011106:	4603      	mov	r3, r0
 8011108:	4401      	add	r1, r0
 801110a:	250a      	movs	r5, #10
 801110c:	2000      	movs	r0, #0
 801110e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011112:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8011116:	2c09      	cmp	r4, #9
 8011118:	d805      	bhi.n	8011126 <remoteconfig::rtc::atoi(char const*, unsigned long)+0x22>
 801111a:	fb05 2000 	mla	r0, r5, r0, r2
 801111e:	428b      	cmp	r3, r1
 8011120:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 8011124:	d1f3      	bne.n	801110e <remoteconfig::rtc::atoi(char const*, unsigned long)+0xa>
 8011126:	bd30      	pop	{r4, r5, pc}

08011128 <strncmp>:
 8011128:	b510      	push	{r4, lr}
 801112a:	3901      	subs	r1, #1
 801112c:	4402      	add	r2, r0
 801112e:	4290      	cmp	r0, r2
 8011130:	d101      	bne.n	8011136 <strncmp+0xe>
 8011132:	2000      	movs	r0, #0
 8011134:	e005      	b.n	8011142 <strncmp+0x1a>
 8011136:	7803      	ldrb	r3, [r0, #0]
 8011138:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801113c:	42a3      	cmp	r3, r4
 801113e:	d001      	beq.n	8011144 <strncmp+0x1c>
 8011140:	1b18      	subs	r0, r3, r4
 8011142:	bd10      	pop	{r4, pc}
 8011144:	b10b      	cbz	r3, 801114a <strncmp+0x22>
 8011146:	3001      	adds	r0, #1
 8011148:	e7f1      	b.n	801112e <strncmp+0x6>
 801114a:	4618      	mov	r0, r3
 801114c:	e7f9      	b.n	8011142 <strncmp+0x1a>
	...

08011150 <staticCallbackFunction(void*, char const*)>:
 8011150:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011152:	460c      	mov	r4, r1
 8011154:	2314      	movs	r3, #20
 8011156:	9301      	str	r3, [sp, #4]
 8011158:	4a1c      	ldr	r2, [pc, #112]	@ (80111cc <staticCallbackFunction(void*, char const*)+0x7c>)
 801115a:	491d      	ldr	r1, [pc, #116]	@ (80111d0 <staticCallbackFunction(void*, char const*)+0x80>)
 801115c:	ab01      	add	r3, sp, #4
 801115e:	4620      	mov	r0, r4
 8011160:	f7fe feba 	bl	800fed8 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8011164:	b198      	cbz	r0, 801118e <staticCallbackFunction(void*, char const*)+0x3e>
 8011166:	2307      	movs	r3, #7
 8011168:	9301      	str	r3, [sp, #4]
 801116a:	491a      	ldr	r1, [pc, #104]	@ (80111d4 <staticCallbackFunction(void*, char const*)+0x84>)
 801116c:	ab01      	add	r3, sp, #4
 801116e:	aa02      	add	r2, sp, #8
 8011170:	4620      	mov	r0, r4
 8011172:	f7fe feb1 	bl	800fed8 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8011176:	b9c0      	cbnz	r0, 80111aa <staticCallbackFunction(void*, char const*)+0x5a>
 8011178:	9c01      	ldr	r4, [sp, #4]
 801117a:	4917      	ldr	r1, [pc, #92]	@ (80111d8 <staticCallbackFunction(void*, char const*)+0x88>)
 801117c:	4622      	mov	r2, r4
 801117e:	a802      	add	r0, sp, #8
 8011180:	f7ff ffd2 	bl	8011128 <strncmp>
 8011184:	b928      	cbnz	r0, 8011192 <staticCallbackFunction(void*, char const*)+0x42>
 8011186:	4b15      	ldr	r3, [pc, #84]	@ (80111dc <staticCallbackFunction(void*, char const*)+0x8c>)
 8011188:	6818      	ldr	r0, [r3, #0]
 801118a:	f7ff ff37 	bl	8010ffc <HwClock::HcToSys()>
 801118e:	b004      	add	sp, #16
 8011190:	bd10      	pop	{r4, pc}
 8011192:	4913      	ldr	r1, [pc, #76]	@ (80111e0 <staticCallbackFunction(void*, char const*)+0x90>)
 8011194:	4622      	mov	r2, r4
 8011196:	a802      	add	r0, sp, #8
 8011198:	f7ff ffc6 	bl	8011128 <strncmp>
 801119c:	2800      	cmp	r0, #0
 801119e:	d1f6      	bne.n	801118e <staticCallbackFunction(void*, char const*)+0x3e>
 80111a0:	4b0e      	ldr	r3, [pc, #56]	@ (80111dc <staticCallbackFunction(void*, char const*)+0x8c>)
 80111a2:	6818      	ldr	r0, [r3, #0]
 80111a4:	f7ff ff82 	bl	80110ac <HwClock::SysToHc()>
 80111a8:	e7f1      	b.n	801118e <staticCallbackFunction(void*, char const*)+0x3e>
 80111aa:	490e      	ldr	r1, [pc, #56]	@ (80111e4 <staticCallbackFunction(void*, char const*)+0x94>)
 80111ac:	f10d 0203 	add.w	r2, sp, #3
 80111b0:	4620      	mov	r0, r4
 80111b2:	f7fe feea 	bl	800ff8a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80111b6:	2800      	cmp	r0, #0
 80111b8:	d1e9      	bne.n	801118e <staticCallbackFunction(void*, char const*)+0x3e>
 80111ba:	4b08      	ldr	r3, [pc, #32]	@ (80111dc <staticCallbackFunction(void*, char const*)+0x8c>)
 80111bc:	681a      	ldr	r2, [r3, #0]
 80111be:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80111c2:	3b00      	subs	r3, #0
 80111c4:	bf18      	it	ne
 80111c6:	2301      	movne	r3, #1
 80111c8:	72d3      	strb	r3, [r2, #11]
 80111ca:	e7e0      	b.n	801118e <staticCallbackFunction(void*, char const*)+0x3e>
 80111cc:	20000b98 	mulcs	r0, r8, fp
 80111d0:	080147d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, lr}
 80111d4:	080147d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, lr}
 80111d8:	080147de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, sl, lr}
 80111dc:	20000b94 	mulcs	r0, r4, fp
 80111e0:	080147e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, lr}
 80111e4:	080147ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, lr}

080111e8 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)>:
 80111e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111ea:	4f22      	ldr	r7, [pc, #136]	@ (8011274 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x8c>)
 80111ec:	b091      	sub	sp, #68	@ 0x44
 80111ee:	4604      	mov	r4, r0
 80111f0:	460e      	mov	r6, r1
 80111f2:	6838      	ldr	r0, [r7, #0]
 80111f4:	a907      	add	r1, sp, #28
 80111f6:	f7ff fdaf 	bl	8010d58 <HwClock::RtcGet(tm*)>
 80111fa:	b910      	cbnz	r0, 8011202 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x1a>
 80111fc:	2000      	movs	r0, #0
 80111fe:	b011      	add	sp, #68	@ 0x44
 8011200:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011202:	9b07      	ldr	r3, [sp, #28]
 8011204:	9304      	str	r3, [sp, #16]
 8011206:	9b08      	ldr	r3, [sp, #32]
 8011208:	9303      	str	r3, [sp, #12]
 801120a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801120c:	9302      	str	r3, [sp, #8]
 801120e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011210:	9301      	str	r3, [sp, #4]
 8011212:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011214:	4a18      	ldr	r2, [pc, #96]	@ (8011278 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x90>)
 8011216:	3301      	adds	r3, #1
 8011218:	9300      	str	r3, [sp, #0]
 801121a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801121c:	4631      	mov	r1, r6
 801121e:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8011222:	4620      	mov	r0, r4
 8011224:	f002 fb4c 	bl	80138c0 <snprintf>
 8011228:	a907      	add	r1, sp, #28
 801122a:	4605      	mov	r5, r0
 801122c:	6838      	ldr	r0, [r7, #0]
 801122e:	f7ff fe15 	bl	8010e5c <HwClock::RtcGetAlarm(tm*)>
 8011232:	b1e0      	cbz	r0, 801126e <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x86>
 8011234:	9b07      	ldr	r3, [sp, #28]
 8011236:	9304      	str	r3, [sp, #16]
 8011238:	9b08      	ldr	r3, [sp, #32]
 801123a:	9303      	str	r3, [sp, #12]
 801123c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801123e:	9302      	str	r3, [sp, #8]
 8011240:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011242:	9301      	str	r3, [sp, #4]
 8011244:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8011246:	4a0d      	ldr	r2, [pc, #52]	@ (801127c <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x94>)
 8011248:	3301      	adds	r3, #1
 801124a:	9300      	str	r3, [sp, #0]
 801124c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801124e:	4631      	mov	r1, r6
 8011250:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8011254:	1960      	adds	r0, r4, r5
 8011256:	f002 fb33 	bl	80138c0 <snprintf>
 801125a:	683b      	ldr	r3, [r7, #0]
 801125c:	4a08      	ldr	r2, [pc, #32]	@ (8011280 <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x98>)
 801125e:	7adb      	ldrb	r3, [r3, #11]
 8011260:	4405      	add	r5, r0
 8011262:	4631      	mov	r1, r6
 8011264:	1960      	adds	r0, r4, r5
 8011266:	f002 fb2b 	bl	80138c0 <snprintf>
 801126a:	4428      	add	r0, r5
 801126c:	e7c7      	b.n	80111fe <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x16>
 801126e:	237d      	movs	r3, #125	@ 0x7d
 8011270:	5563      	strb	r3, [r4, r5]
 8011272:	e7c3      	b.n	80111fc <remoteconfig::rtc::json_get_rtc(char*, unsigned long)+0x14>
 8011274:	20000b94 	mulcs	r0, r4, fp
 8011278:	080147f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, sl, lr}
 801127c:	0801481b 	stmdaeq	r1, {r0, r1, r3, r4, fp, lr}
 8011280:	08014842 	stmdaeq	r1, {r1, r6, fp, lr}

08011284 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)>:
 8011284:	b570      	push	{r4, r5, r6, lr}
 8011286:	4c20      	ldr	r4, [pc, #128]	@ (8011308 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0x84>)
 8011288:	b08c      	sub	sp, #48	@ 0x30
 801128a:	2200      	movs	r2, #0
 801128c:	4605      	mov	r5, r0
 801128e:	460e      	mov	r6, r1
 8011290:	a801      	add	r0, sp, #4
 8011292:	491e      	ldr	r1, [pc, #120]	@ (801130c <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0x88>)
 8011294:	7022      	strb	r2, [r4, #0]
 8011296:	f7fe fde5 	bl	800fe64 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801129a:	4632      	mov	r2, r6
 801129c:	4629      	mov	r1, r5
 801129e:	a801      	add	r0, sp, #4
 80112a0:	f7fe fde4 	bl	800fe6c <ReadConfigFile::Read(char const*, unsigned int)>
 80112a4:	7823      	ldrb	r3, [r4, #0]
 80112a6:	b34b      	cbz	r3, 80112fc <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0x78>
 80112a8:	2104      	movs	r1, #4
 80112aa:	4620      	mov	r0, r4
 80112ac:	f7ff ff2a 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112b0:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 80112b4:	9008      	str	r0, [sp, #32]
 80112b6:	2102      	movs	r1, #2
 80112b8:	1d60      	adds	r0, r4, #5
 80112ba:	f7ff ff23 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112be:	3801      	subs	r0, #1
 80112c0:	9007      	str	r0, [sp, #28]
 80112c2:	2102      	movs	r1, #2
 80112c4:	f104 0008 	add.w	r0, r4, #8
 80112c8:	f7ff ff1c 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112cc:	2102      	movs	r1, #2
 80112ce:	9006      	str	r0, [sp, #24]
 80112d0:	f104 000b 	add.w	r0, r4, #11
 80112d4:	f7ff ff16 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112d8:	2102      	movs	r1, #2
 80112da:	9005      	str	r0, [sp, #20]
 80112dc:	f104 000e 	add.w	r0, r4, #14
 80112e0:	f7ff ff10 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112e4:	2102      	movs	r1, #2
 80112e6:	9004      	str	r0, [sp, #16]
 80112e8:	f104 0011 	add.w	r0, r4, #17
 80112ec:	f7ff ff0a 	bl	8011104 <remoteconfig::rtc::atoi(char const*, unsigned long)>
 80112f0:	4b07      	ldr	r3, [pc, #28]	@ (8011310 <remoteconfig::rtc::json_set_rtc(char const*, unsigned long)+0x8c>)
 80112f2:	9003      	str	r0, [sp, #12]
 80112f4:	a903      	add	r1, sp, #12
 80112f6:	6818      	ldr	r0, [r3, #0]
 80112f8:	f7ff fd66 	bl	8010dc8 <HwClock::RtcSetAlarm(tm const*)>
 80112fc:	a801      	add	r0, sp, #4
 80112fe:	f7fe fdb4 	bl	800fe6a <ReadConfigFile::~ReadConfigFile()>
 8011302:	b00c      	add	sp, #48	@ 0x30
 8011304:	bd70      	pop	{r4, r5, r6, pc}
 8011306:	bf00      	nop
 8011308:	20000b98 	mulcs	r0, r8, fp
 801130c:	08011151 	stmdaeq	r1, {r0, r4, r6, r8, ip}
 8011310:	20000b94 	mulcs	r0, r4, fp

08011314 <I2cDetect::I2cDetect()>:
 8011314:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011318:	4606      	mov	r6, r0
 801131a:	4825      	ldr	r0, [pc, #148]	@ (80113b0 <I2cDetect::I2cDetect()+0x9c>)
 801131c:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 80113c0 <I2cDetect::I2cDetect()+0xac>
 8011320:	4f24      	ldr	r7, [pc, #144]	@ (80113b4 <I2cDetect::I2cDetect()+0xa0>)
 8011322:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 80113c4 <I2cDetect::I2cDetect()+0xb0>
 8011326:	f001 f9dd 	bl	80126e4 <gd32_i2c_set_baudrate>
 801132a:	4823      	ldr	r0, [pc, #140]	@ (80113b8 <I2cDetect::I2cDetect()+0xa4>)
 801132c:	f002 faf5 	bl	801391a <puts>
 8011330:	2500      	movs	r5, #0
 8011332:	4629      	mov	r1, r5
 8011334:	4648      	mov	r0, r9
 8011336:	f002 fa9b 	bl	8013870 <printf>
 801133a:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 80113c8 <I2cDetect::I2cDetect()+0xb4>
 801133e:	462c      	mov	r4, r5
 8011340:	1ee3      	subs	r3, r4, #3
 8011342:	2b74      	cmp	r3, #116	@ 0x74
 8011344:	d905      	bls.n	8011352 <I2cDetect::I2cDetect()+0x3e>
 8011346:	4650      	mov	r0, sl
 8011348:	f002 fa92 	bl	8013870 <printf>
 801134c:	e019      	b.n	8011382 <I2cDetect::I2cDetect()+0x6e>
 801134e:	4625      	mov	r5, r4
 8011350:	e7ef      	b.n	8011332 <I2cDetect::I2cDetect()+0x1e>
 8011352:	fa5f fb84 	uxtb.w	fp, r4
 8011356:	4658      	mov	r0, fp
 8011358:	f001 f9cc 	bl	80126f4 <gd32_i2c_set_address>
 801135c:	f1ab 0330 	sub.w	r3, fp, #48	@ 0x30
 8011360:	2b07      	cmp	r3, #7
 8011362:	d904      	bls.n	801136e <I2cDetect::I2cDetect()+0x5a>
 8011364:	f1ab 0b50 	sub.w	fp, fp, #80	@ 0x50
 8011368:	f1bb 0f0f 	cmp.w	fp, #15
 801136c:	d819      	bhi.n	80113a2 <I2cDetect::I2cDetect()+0x8e>
 801136e:	2101      	movs	r1, #1
 8011370:	f10d 0007 	add.w	r0, sp, #7
 8011374:	f001 fa2a 	bl	80127cc <gd32_i2c_read>
 8011378:	b9c0      	cbnz	r0, 80113ac <I2cDetect::I2cDetect()+0x98>
 801137a:	4621      	mov	r1, r4
 801137c:	4640      	mov	r0, r8
 801137e:	f002 fa77 	bl	8013870 <printf>
 8011382:	3401      	adds	r4, #1
 8011384:	f105 0310 	add.w	r3, r5, #16
 8011388:	429c      	cmp	r4, r3
 801138a:	d1d9      	bne.n	8011340 <I2cDetect::I2cDetect()+0x2c>
 801138c:	480b      	ldr	r0, [pc, #44]	@ (80113bc <I2cDetect::I2cDetect()+0xa8>)
 801138e:	f002 fac4 	bl	801391a <puts>
 8011392:	2c80      	cmp	r4, #128	@ 0x80
 8011394:	d1db      	bne.n	801134e <I2cDetect::I2cDetect()+0x3a>
 8011396:	f001 f959 	bl	801264c <gd32_i2c_begin>
 801139a:	4630      	mov	r0, r6
 801139c:	b003      	add	sp, #12
 801139e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113a2:	2100      	movs	r1, #0
 80113a4:	4608      	mov	r0, r1
 80113a6:	f001 f9ab 	bl	8012700 <gd32_i2c_write>
 80113aa:	e7e5      	b.n	8011378 <I2cDetect::I2cDetect()+0x64>
 80113ac:	4638      	mov	r0, r7
 80113ae:	e7cb      	b.n	8011348 <I2cDetect::I2cDetect()+0x34>
 80113b0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80113b4:	08014898 	stmdaeq	r1, {r3, r4, r7, fp, lr}
 80113b8:	08014852 	stmdaeq	r1, {r1, r4, r6, fp, lr}
 80113bc:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80113c0:	08014887 	stmdaeq	r1, {r0, r1, r2, r7, fp, lr}
 80113c4:	08014892 	stmdaeq	r1, {r1, r4, r7, fp, lr}
 80113c8:	0801488e 	stmdaeq	r1, {r1, r2, r3, r7, fp, lr}

080113cc <stack_debug_init>:
 80113cc:	4b04      	ldr	r3, [pc, #16]	@ (80113e0 <stack_debug_init+0x14>)
 80113ce:	4a05      	ldr	r2, [pc, #20]	@ (80113e4 <stack_debug_init+0x18>)
 80113d0:	4905      	ldr	r1, [pc, #20]	@ (80113e8 <stack_debug_init+0x1c>)
 80113d2:	4293      	cmp	r3, r2
 80113d4:	d300      	bcc.n	80113d8 <stack_debug_init+0xc>
 80113d6:	4770      	bx	lr
 80113d8:	f843 1b04 	str.w	r1, [r3], #4
 80113dc:	e7f9      	b.n	80113d2 <stack_debug_init+0x6>
 80113de:	bf00      	nop
 80113e0:	10000000 	andne	r0, r0, r0
 80113e4:	10008000 	andne	r8, r0, r0
 80113e8:	abcdabcd 	blge	737c324 <__stack_size+0x7374324>

080113ec <stack_debug_print()>:
 80113ec:	b570      	push	{r4, r5, r6, lr}
 80113ee:	4d18      	ldr	r5, [pc, #96]	@ (8011450 <stack_debug_print()+0x64>)
 80113f0:	4c18      	ldr	r4, [pc, #96]	@ (8011454 <stack_debug_print()+0x68>)
 80113f2:	4a19      	ldr	r2, [pc, #100]	@ (8011458 <stack_debug_print()+0x6c>)
 80113f4:	4629      	mov	r1, r5
 80113f6:	42a5      	cmp	r5, r4
 80113f8:	d202      	bcs.n	8011400 <stack_debug_print()+0x14>
 80113fa:	6828      	ldr	r0, [r5, #0]
 80113fc:	4290      	cmp	r0, r2
 80113fe:	d005      	beq.n	801140c <stack_debug_print()+0x20>
 8011400:	4a16      	ldr	r2, [pc, #88]	@ (801145c <stack_debug_print()+0x70>)
 8011402:	6810      	ldr	r0, [r2, #0]
 8011404:	1b66      	subs	r6, r4, r5
 8011406:	42b0      	cmp	r0, r6
 8011408:	d102      	bne.n	8011410 <stack_debug_print()+0x24>
 801140a:	bd70      	pop	{r4, r5, r6, pc}
 801140c:	3504      	adds	r5, #4
 801140e:	e7f2      	b.n	80113f6 <stack_debug_print()+0xa>
 8011410:	1a64      	subs	r4, r4, r1
 8011412:	1a6d      	subs	r5, r5, r1
 8011414:	2319      	movs	r3, #25
 8011416:	10a4      	asrs	r4, r4, #2
 8011418:	436b      	muls	r3, r5
 801141a:	6016      	str	r6, [r2, #0]
 801141c:	fb93 f3f4 	sdiv	r3, r3, r4
 8011420:	b983      	cbnz	r3, 8011444 <stack_debug_print()+0x58>
 8011422:	480f      	ldr	r0, [pc, #60]	@ (8011460 <stack_debug_print()+0x74>)
 8011424:	f002 fa24 	bl	8013870 <printf>
 8011428:	1e21      	subs	r1, r4, #0
 801142a:	bfb8      	it	lt
 801142c:	31ff      	addlt	r1, #255	@ 0xff
 801142e:	462b      	mov	r3, r5
 8011430:	4632      	mov	r2, r6
 8011432:	480c      	ldr	r0, [pc, #48]	@ (8011464 <stack_debug_print()+0x78>)
 8011434:	1209      	asrs	r1, r1, #8
 8011436:	f002 fa1b 	bl	8013870 <printf>
 801143a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801143e:	480a      	ldr	r0, [pc, #40]	@ (8011468 <stack_debug_print()+0x7c>)
 8011440:	f002 ba16 	b.w	8013870 <printf>
 8011444:	2b01      	cmp	r3, #1
 8011446:	bf0c      	ite	eq
 8011448:	4808      	ldreq	r0, [pc, #32]	@ (801146c <stack_debug_print()+0x80>)
 801144a:	4809      	ldrne	r0, [pc, #36]	@ (8011470 <stack_debug_print()+0x84>)
 801144c:	e7ea      	b.n	8011424 <stack_debug_print()+0x38>
 801144e:	bf00      	nop
 8011450:	10000000 	andne	r0, r0, r0
 8011454:	10008000 	andne	r8, r0, r0
 8011458:	abcdabcd 	blge	737c394 <__stack_size+0x7374394>
 801145c:	20000bb0 			@ <UNDEFINED> instruction: 0x20000bb0
 8011460:	08014735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, lr}
 8011464:	080148a2 	stmdaeq	r1, {r1, r5, r7, fp, lr}
 8011468:	080148c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, fp, lr}
 801146c:	0801474d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, lr}
 8011470:	0801489c 	stmdaeq	r1, {r2, r3, r4, r7, fp, lr}

08011474 <stack_debug_run()>:
 8011474:	b508      	push	{r3, lr}
 8011476:	2000      	movs	r0, #0
 8011478:	f002 fc04 	bl	8013c84 <time>
 801147c:	4b04      	ldr	r3, [pc, #16]	@ (8011490 <stack_debug_run()+0x1c>)
 801147e:	681a      	ldr	r2, [r3, #0]
 8011480:	4282      	cmp	r2, r0
 8011482:	d004      	beq.n	801148e <stack_debug_run()+0x1a>
 8011484:	6018      	str	r0, [r3, #0]
 8011486:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801148a:	f7ff bfaf 	b.w	80113ec <stack_debug_print()>
 801148e:	bd08      	pop	{r3, pc}
 8011490:	20000bac 	andcs	r0, r0, ip, lsr #23

08011494 <SystemInit>:
 8011494:	4a56      	ldr	r2, [pc, #344]	@ (80115f0 <SystemInit+0x15c>)
 8011496:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 801149a:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 801149e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80114a2:	4b54      	ldr	r3, [pc, #336]	@ (80115f4 <SystemInit+0x160>)
 80114a4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80114a8:	f042 0201 	orr.w	r2, r2, #1
 80114ac:	b082      	sub	sp, #8
 80114ae:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 80114b2:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80114b6:	0790      	lsls	r0, r2, #30
 80114b8:	d5fb      	bpl.n	80114b2 <SystemInit+0x1e>
 80114ba:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80114be:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80114c2:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80114c6:	2300      	movs	r3, #0
 80114c8:	9301      	str	r3, [sp, #4]
 80114ca:	9b01      	ldr	r3, [sp, #4]
 80114cc:	2b4f      	cmp	r3, #79	@ 0x4f
 80114ce:	d93d      	bls.n	801154c <SystemInit+0xb8>
 80114d0:	4b48      	ldr	r3, [pc, #288]	@ (80115f4 <SystemInit+0x160>)
 80114d2:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80114d6:	f042 0290 	orr.w	r2, r2, #144	@ 0x90
 80114da:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80114de:	2200      	movs	r2, #0
 80114e0:	9201      	str	r2, [sp, #4]
 80114e2:	9a01      	ldr	r2, [sp, #4]
 80114e4:	2a4f      	cmp	r2, #79	@ 0x4f
 80114e6:	d934      	bls.n	8011552 <SystemInit+0xbe>
 80114e8:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80114ec:	f022 0203 	bic.w	r2, r2, #3
 80114f0:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80114f4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80114f8:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 80114fc:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8011500:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8011504:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011508:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 801150c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8011510:	2200      	movs	r2, #0
 8011512:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8011516:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 801151a:	4937      	ldr	r1, [pc, #220]	@ (80115f8 <SystemInit+0x164>)
 801151c:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8011520:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 8011524:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011528:	f042 0201 	orr.w	r2, r2, #1
 801152c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8011530:	4b30      	ldr	r3, [pc, #192]	@ (80115f4 <SystemInit+0x160>)
 8011532:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 8011536:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 801153a:	0789      	lsls	r1, r1, #30
 801153c:	d401      	bmi.n	8011542 <SystemInit+0xae>
 801153e:	3a01      	subs	r2, #1
 8011540:	d1f9      	bne.n	8011536 <SystemInit+0xa2>
 8011542:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011546:	0792      	lsls	r2, r2, #30
 8011548:	d406      	bmi.n	8011558 <SystemInit+0xc4>
 801154a:	e7fe      	b.n	801154a <SystemInit+0xb6>
 801154c:	9b01      	ldr	r3, [sp, #4]
 801154e:	3301      	adds	r3, #1
 8011550:	e7ba      	b.n	80114c8 <SystemInit+0x34>
 8011552:	9a01      	ldr	r2, [sp, #4]
 8011554:	3201      	adds	r2, #1
 8011556:	e7c3      	b.n	80114e0 <SystemInit+0x4c>
 8011558:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 801155c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8011560:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 8011564:	4a25      	ldr	r2, [pc, #148]	@ (80115fc <SystemInit+0x168>)
 8011566:	6811      	ldr	r1, [r2, #0]
 8011568:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 801156c:	6011      	str	r1, [r2, #0]
 801156e:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8011572:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8011576:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 801157a:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 801157e:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8011582:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8011586:	f441 51a0 	orr.w	r1, r1, #5120	@ 0x1400
 801158a:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 801158e:	491c      	ldr	r1, [pc, #112]	@ (8011600 <SystemInit+0x16c>)
 8011590:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8011594:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 8011598:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 801159c:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
 80115a0:	4914      	ldr	r1, [pc, #80]	@ (80115f4 <SystemInit+0x160>)
 80115a2:	f8d1 3800 	ldr.w	r3, [r1, #2048]	@ 0x800
 80115a6:	019b      	lsls	r3, r3, #6
 80115a8:	d5fb      	bpl.n	80115a2 <SystemInit+0x10e>
 80115aa:	6813      	ldr	r3, [r2, #0]
 80115ac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80115b0:	6013      	str	r3, [r2, #0]
 80115b2:	4b12      	ldr	r3, [pc, #72]	@ (80115fc <SystemInit+0x168>)
 80115b4:	685a      	ldr	r2, [r3, #4]
 80115b6:	03d0      	lsls	r0, r2, #15
 80115b8:	d5fc      	bpl.n	80115b4 <SystemInit+0x120>
 80115ba:	681a      	ldr	r2, [r3, #0]
 80115bc:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80115c0:	601a      	str	r2, [r3, #0]
 80115c2:	685a      	ldr	r2, [r3, #4]
 80115c4:	0391      	lsls	r1, r2, #14
 80115c6:	d5fc      	bpl.n	80115c2 <SystemInit+0x12e>
 80115c8:	4b0a      	ldr	r3, [pc, #40]	@ (80115f4 <SystemInit+0x160>)
 80115ca:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80115ce:	f022 0203 	bic.w	r2, r2, #3
 80115d2:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80115d6:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80115da:	f042 0202 	orr.w	r2, r2, #2
 80115de:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80115e2:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80115e6:	0712      	lsls	r2, r2, #28
 80115e8:	d5fb      	bpl.n	80115e2 <SystemInit+0x14e>
 80115ea:	b002      	add	sp, #8
 80115ec:	4770      	bx	lr
 80115ee:	bf00      	nop
 80115f0:	e000ed00 	and	lr, r0, r0, lsl #26
 80115f4:	40023000 	andmi	r3, r2, r0
 80115f8:	24003010 	strcs	r3, [r0], #-16
 80115fc:	40007000 	andmi	r7, r0, r0
 8011600:	0a007810 	beq	802f648 <_sidata+0x17fcc>

08011604 <enet_software_reset>:
 8011604:	4b07      	ldr	r3, [pc, #28]	@ (8011624 <enet_software_reset+0x20>)
 8011606:	681a      	ldr	r2, [r3, #0]
 8011608:	f042 0201 	orr.w	r2, r2, #1
 801160c:	601a      	str	r2, [r3, #0]
 801160e:	4a06      	ldr	r2, [pc, #24]	@ (8011628 <enet_software_reset+0x24>)
 8011610:	6819      	ldr	r1, [r3, #0]
 8011612:	07c9      	lsls	r1, r1, #31
 8011614:	d501      	bpl.n	801161a <enet_software_reset+0x16>
 8011616:	3a01      	subs	r2, #1
 8011618:	d1fa      	bne.n	8011610 <enet_software_reset+0xc>
 801161a:	6818      	ldr	r0, [r3, #0]
 801161c:	43c0      	mvns	r0, r0
 801161e:	f000 0001 	and.w	r0, r0, #1
 8011622:	4770      	bx	lr
 8011624:	40029000 	andmi	r9, r2, r0
 8011628:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

0801162c <enet_descriptors_chain_init>:
 801162c:	f5b0 0fe0 	cmp.w	r0, #7340032	@ 0x700000
 8011630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011632:	4a17      	ldr	r2, [pc, #92]	@ (8011690 <enet_descriptors_chain_init+0x64>)
 8011634:	d122      	bne.n	801167c <enet_descriptors_chain_init+0x50>
 8011636:	4b17      	ldr	r3, [pc, #92]	@ (8011694 <enet_descriptors_chain_init+0x68>)
 8011638:	6113      	str	r3, [r2, #16]
 801163a:	4a17      	ldr	r2, [pc, #92]	@ (8011698 <enet_descriptors_chain_init+0x6c>)
 801163c:	4817      	ldr	r0, [pc, #92]	@ (801169c <enet_descriptors_chain_init+0x70>)
 801163e:	6013      	str	r3, [r2, #0]
 8011640:	2400      	movs	r4, #0
 8011642:	f44f 1580 	mov.w	r5, #1048576	@ 0x100000
 8011646:	4916      	ldr	r1, [pc, #88]	@ (80116a0 <enet_descriptors_chain_init+0x74>)
 8011648:	2200      	movs	r2, #0
 801164a:	600a      	str	r2, [r1, #0]
 801164c:	4915      	ldr	r1, [pc, #84]	@ (80116a4 <enet_descriptors_chain_init+0x78>)
 801164e:	f240 57f4 	movw	r7, #1524	@ 0x5f4
 8011652:	600a      	str	r2, [r1, #0]
 8011654:	f103 0110 	add.w	r1, r3, #16
 8011658:	fb07 0602 	mla	r6, r7, r2, r0
 801165c:	f841 6c08 	str.w	r6, [r1, #-8]
 8011660:	2a04      	cmp	r2, #4
 8011662:	bf0c      	ite	eq
 8011664:	461e      	moveq	r6, r3
 8011666:	460e      	movne	r6, r1
 8011668:	3201      	adds	r2, #1
 801166a:	2a05      	cmp	r2, #5
 801166c:	e941 5404 	strd	r5, r4, [r1, #-16]
 8011670:	f841 6c04 	str.w	r6, [r1, #-4]
 8011674:	f101 0110 	add.w	r1, r1, #16
 8011678:	d1ee      	bne.n	8011658 <enet_descriptors_chain_init+0x2c>
 801167a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801167c:	4b0a      	ldr	r3, [pc, #40]	@ (80116a8 <enet_descriptors_chain_init+0x7c>)
 801167e:	60d3      	str	r3, [r2, #12]
 8011680:	4a0a      	ldr	r2, [pc, #40]	@ (80116ac <enet_descriptors_chain_init+0x80>)
 8011682:	480b      	ldr	r0, [pc, #44]	@ (80116b0 <enet_descriptors_chain_init+0x84>)
 8011684:	6013      	str	r3, [r2, #0]
 8011686:	f244 54f4 	movw	r4, #17908	@ 0x45f4
 801168a:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
 801168e:	e7da      	b.n	8011646 <enet_descriptors_chain_init+0x1a>
 8011690:	40029000 	andmi	r9, r2, r0
 8011694:	20004788 	andcs	r4, r0, r8, lsl #15
 8011698:	20000bfc 	strdcs	r0, [r0], -ip
 801169c:	20000c00 	andcs	r0, r0, r0, lsl #24
 80116a0:	20000bf0 	strdcs	r0, [r0], -r0	@ <UNPREDICTABLE>
 80116a4:	20000bf4 	strdcs	r0, [r0], -r4
 80116a8:	200047d8 	ldrdcs	r4, [r0], -r8
 80116ac:	20000bf8 	strdcs	r0, [r0], -r8
 80116b0:	200029c4 	andcs	r2, r0, r4, asr #19

080116b4 <enet_transmit_checksum_config>:
 80116b4:	6803      	ldr	r3, [r0, #0]
 80116b6:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 80116ba:	430b      	orrs	r3, r1
 80116bc:	6003      	str	r3, [r0, #0]
 80116be:	4770      	bx	lr

080116c0 <enet_mac_address_set>:
 80116c0:	4b03      	ldr	r3, [pc, #12]	@ (80116d0 <enet_mac_address_set+0x10>)
 80116c2:	888a      	ldrh	r2, [r1, #4]
 80116c4:	50c2      	str	r2, [r0, r3]
 80116c6:	3304      	adds	r3, #4
 80116c8:	680a      	ldr	r2, [r1, #0]
 80116ca:	50c2      	str	r2, [r0, r3]
 80116cc:	4770      	bx	lr
 80116ce:	bf00      	nop
 80116d0:	40028040 	andmi	r8, r2, r0, asr #32

080116d4 <enet_rx_enable>:
 80116d4:	4a05      	ldr	r2, [pc, #20]	@ (80116ec <enet_rx_enable+0x18>)
 80116d6:	6813      	ldr	r3, [r2, #0]
 80116d8:	f043 0304 	orr.w	r3, r3, #4
 80116dc:	6013      	str	r3, [r2, #0]
 80116de:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80116e2:	6993      	ldr	r3, [r2, #24]
 80116e4:	f043 0302 	orr.w	r3, r3, #2
 80116e8:	6193      	str	r3, [r2, #24]
 80116ea:	4770      	bx	lr
 80116ec:	40028000 	andmi	r8, r2, r0

080116f0 <enet_phy_write_read>:
 80116f0:	b530      	push	{r4, r5, lr}
 80116f2:	4d12      	ldr	r5, [pc, #72]	@ (801173c <enet_phy_write_read+0x4c>)
 80116f4:	4604      	mov	r4, r0
 80116f6:	6928      	ldr	r0, [r5, #16]
 80116f8:	0192      	lsls	r2, r2, #6
 80116fa:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 80116fe:	f402 62f8 	and.w	r2, r2, #1984	@ 0x7c0
 8011702:	f020 00c3 	bic.w	r0, r0, #195	@ 0xc3
 8011706:	4302      	orrs	r2, r0
 8011708:	02c9      	lsls	r1, r1, #11
 801170a:	b289      	uxth	r1, r1
 801170c:	4322      	orrs	r2, r4
 801170e:	430a      	orrs	r2, r1
 8011710:	2c02      	cmp	r4, #2
 8011712:	bf04      	itt	eq
 8011714:	8819      	ldrheq	r1, [r3, #0]
 8011716:	6169      	streq	r1, [r5, #20]
 8011718:	f042 0201 	orr.w	r2, r2, #1
 801171c:	612a      	str	r2, [r5, #16]
 801171e:	4907      	ldr	r1, [pc, #28]	@ (801173c <enet_phy_write_read+0x4c>)
 8011720:	4a07      	ldr	r2, [pc, #28]	@ (8011740 <enet_phy_write_read+0x50>)
 8011722:	6908      	ldr	r0, [r1, #16]
 8011724:	07c0      	lsls	r0, r0, #31
 8011726:	d501      	bpl.n	801172c <enet_phy_write_read+0x3c>
 8011728:	3a01      	subs	r2, #1
 801172a:	d1fa      	bne.n	8011722 <enet_phy_write_read+0x32>
 801172c:	690a      	ldr	r2, [r1, #16]
 801172e:	43d2      	mvns	r2, r2
 8011730:	f002 0001 	and.w	r0, r2, #1
 8011734:	b90c      	cbnz	r4, 801173a <enet_phy_write_read+0x4a>
 8011736:	694a      	ldr	r2, [r1, #20]
 8011738:	801a      	strh	r2, [r3, #0]
 801173a:	bd30      	pop	{r4, r5, pc}
 801173c:	40028000 	andmi	r8, r2, r0
 8011740:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08011744 <enet_init>:
 8011744:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011746:	4616      	mov	r6, r2
 8011748:	4a9d      	ldr	r2, [pc, #628]	@ (80119c0 <enet_init+0x27c>)
 801174a:	460d      	mov	r5, r1
 801174c:	6814      	ldr	r4, [r2, #0]
 801174e:	499d      	ldr	r1, [pc, #628]	@ (80119c4 <enet_init+0x280>)
 8011750:	2300      	movs	r3, #0
 8011752:	4021      	ands	r1, r4
 8011754:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011758:	6011      	str	r1, [r2, #0]
 801175a:	6053      	str	r3, [r2, #4]
 801175c:	6093      	str	r3, [r2, #8]
 801175e:	60d3      	str	r3, [r2, #12]
 8011760:	6991      	ldr	r1, [r2, #24]
 8011762:	f021 01be 	bic.w	r1, r1, #190	@ 0xbe
 8011766:	0409      	lsls	r1, r1, #16
 8011768:	0c09      	lsrs	r1, r1, #16
 801176a:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 801176e:	6191      	str	r1, [r2, #24]
 8011770:	4995      	ldr	r1, [pc, #596]	@ (80119c8 <enet_init+0x284>)
 8011772:	61d3      	str	r3, [r2, #28]
 8011774:	698c      	ldr	r4, [r1, #24]
 8011776:	4a95      	ldr	r2, [pc, #596]	@ (80119cc <enet_init+0x288>)
 8011778:	4022      	ands	r2, r4
 801177a:	f042 7208 	orr.w	r2, r2, #35651584	@ 0x2200000
 801177e:	618a      	str	r2, [r1, #24]
 8011780:	680a      	ldr	r2, [r1, #0]
 8011782:	4a93      	ldr	r2, [pc, #588]	@ (80119d0 <enet_init+0x28c>)
 8011784:	600a      	str	r2, [r1, #0]
 8011786:	2801      	cmp	r0, #1
 8011788:	d146      	bne.n	8011818 <enet_init+0xd4>
 801178a:	4f92      	ldr	r7, [pc, #584]	@ (80119d4 <enet_init+0x290>)
 801178c:	461c      	mov	r4, r3
 801178e:	2201      	movs	r2, #1
 8011790:	4611      	mov	r1, r2
 8011792:	f10d 0306 	add.w	r3, sp, #6
 8011796:	2000      	movs	r0, #0
 8011798:	f7ff ffaa 	bl	80116f0 <enet_phy_write_read>
 801179c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80117a0:	f002 0204 	and.w	r2, r2, #4
 80117a4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80117a8:	3401      	adds	r4, #1
 80117aa:	b922      	cbnz	r2, 80117b6 <enet_init+0x72>
 80117ac:	42bc      	cmp	r4, r7
 80117ae:	d1ee      	bne.n	801178e <enet_init+0x4a>
 80117b0:	2000      	movs	r0, #0
 80117b2:	b003      	add	sp, #12
 80117b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117b6:	42bc      	cmp	r4, r7
 80117b8:	d0fa      	beq.n	80117b0 <enet_init+0x6c>
 80117ba:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80117be:	f8ad 2006 	strh.w	r2, [sp, #6]
 80117c2:	2101      	movs	r1, #1
 80117c4:	2200      	movs	r2, #0
 80117c6:	2002      	movs	r0, #2
 80117c8:	f7ff ff92 	bl	80116f0 <enet_phy_write_read>
 80117cc:	2800      	cmp	r0, #0
 80117ce:	d0ef      	beq.n	80117b0 <enet_init+0x6c>
 80117d0:	4f80      	ldr	r7, [pc, #512]	@ (80119d4 <enet_init+0x290>)
 80117d2:	2400      	movs	r4, #0
 80117d4:	2201      	movs	r2, #1
 80117d6:	4611      	mov	r1, r2
 80117d8:	f10d 0306 	add.w	r3, sp, #6
 80117dc:	2000      	movs	r0, #0
 80117de:	f7ff ff87 	bl	80116f0 <enet_phy_write_read>
 80117e2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80117e6:	f002 0220 	and.w	r2, r2, #32
 80117ea:	f8ad 2006 	strh.w	r2, [sp, #6]
 80117ee:	3401      	adds	r4, #1
 80117f0:	b912      	cbnz	r2, 80117f8 <enet_init+0xb4>
 80117f2:	42bc      	cmp	r4, r7
 80117f4:	d1ee      	bne.n	80117d4 <enet_init+0x90>
 80117f6:	e7db      	b.n	80117b0 <enet_init+0x6c>
 80117f8:	42bc      	cmp	r4, r7
 80117fa:	d0d9      	beq.n	80117b0 <enet_init+0x6c>
 80117fc:	2101      	movs	r1, #1
 80117fe:	2210      	movs	r2, #16
 8011800:	2000      	movs	r0, #0
 8011802:	f7ff ff75 	bl	80116f0 <enet_phy_write_read>
 8011806:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801180a:	f3c3 0080 	ubfx	r0, r3, #2, #1
 801180e:	02c0      	lsls	r0, r0, #11
 8011810:	0799      	lsls	r1, r3, #30
 8011812:	bf58      	it	pl
 8011814:	f440 4080 	orrpl.w	r0, r0, #16384	@ 0x4000
 8011818:	4b69      	ldr	r3, [pc, #420]	@ (80119c0 <enet_init+0x27c>)
 801181a:	681a      	ldr	r2, [r3, #0]
 801181c:	f422 42b0 	bic.w	r2, r2, #22528	@ 0x5800
 8011820:	4310      	orrs	r0, r2
 8011822:	056a      	lsls	r2, r5, #21
 8011824:	6018      	str	r0, [r3, #0]
 8011826:	d50b      	bpl.n	8011840 <enet_init+0xfc>
 8011828:	681a      	ldr	r2, [r3, #0]
 801182a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 801182e:	601a      	str	r2, [r3, #0]
 8011830:	4a65      	ldr	r2, [pc, #404]	@ (80119c8 <enet_init+0x284>)
 8011832:	6993      	ldr	r3, [r2, #24]
 8011834:	f005 6580 	and.w	r5, r5, #67108864	@ 0x4000000
 8011838:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 801183c:	431d      	orrs	r5, r3
 801183e:	6195      	str	r5, [r2, #24]
 8011840:	485f      	ldr	r0, [pc, #380]	@ (80119c0 <enet_init+0x27c>)
 8011842:	6843      	ldr	r3, [r0, #4]
 8011844:	431e      	orrs	r6, r3
 8011846:	4b64      	ldr	r3, [pc, #400]	@ (80119d8 <enet_init+0x294>)
 8011848:	6046      	str	r6, [r0, #4]
 801184a:	681a      	ldr	r2, [r3, #0]
 801184c:	07d7      	lsls	r7, r2, #31
 801184e:	d513      	bpl.n	8011878 <enet_init+0x134>
 8011850:	6801      	ldr	r1, [r0, #0]
 8011852:	685a      	ldr	r2, [r3, #4]
 8011854:	4c61      	ldr	r4, [pc, #388]	@ (80119dc <enet_init+0x298>)
 8011856:	f021 7100 	bic.w	r1, r1, #33554432	@ 0x2000000
 801185a:	4014      	ands	r4, r2
 801185c:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8011860:	4321      	orrs	r1, r4
 8011862:	6001      	str	r1, [r0, #0]
 8011864:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8011868:	0892      	lsrs	r2, r2, #2
 801186a:	6981      	ldr	r1, [r0, #24]
 801186c:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
 8011870:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8011874:	430a      	orrs	r2, r1
 8011876:	6182      	str	r2, [r0, #24]
 8011878:	681a      	ldr	r2, [r3, #0]
 801187a:	0796      	lsls	r6, r2, #30
 801187c:	d508      	bpl.n	8011890 <enet_init+0x14c>
 801187e:	4952      	ldr	r1, [pc, #328]	@ (80119c8 <enet_init+0x284>)
 8011880:	6898      	ldr	r0, [r3, #8]
 8011882:	680a      	ldr	r2, [r1, #0]
 8011884:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8011888:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 801188c:	4302      	orrs	r2, r0
 801188e:	600a      	str	r2, [r1, #0]
 8011890:	681a      	ldr	r2, [r3, #0]
 8011892:	0755      	lsls	r5, r2, #29
 8011894:	d508      	bpl.n	80118a8 <enet_init+0x164>
 8011896:	494c      	ldr	r1, [pc, #304]	@ (80119c8 <enet_init+0x284>)
 8011898:	68d8      	ldr	r0, [r3, #12]
 801189a:	680a      	ldr	r2, [r1, #0]
 801189c:	f422 027e 	bic.w	r2, r2, #16646144	@ 0xfe0000
 80118a0:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 80118a4:	4302      	orrs	r2, r0
 80118a6:	600a      	str	r2, [r1, #0]
 80118a8:	681a      	ldr	r2, [r3, #0]
 80118aa:	0714      	lsls	r4, r2, #28
 80118ac:	d508      	bpl.n	80118c0 <enet_init+0x17c>
 80118ae:	4946      	ldr	r1, [pc, #280]	@ (80119c8 <enet_init+0x284>)
 80118b0:	6918      	ldr	r0, [r3, #16]
 80118b2:	680a      	ldr	r2, [r1, #0]
 80118b4:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80118b8:	f022 0202 	bic.w	r2, r2, #2
 80118bc:	4302      	orrs	r2, r0
 80118be:	600a      	str	r2, [r1, #0]
 80118c0:	681a      	ldr	r2, [r3, #0]
 80118c2:	06d0      	lsls	r0, r2, #27
 80118c4:	d506      	bpl.n	80118d4 <enet_init+0x190>
 80118c6:	4940      	ldr	r1, [pc, #256]	@ (80119c8 <enet_init+0x284>)
 80118c8:	4a45      	ldr	r2, [pc, #276]	@ (80119e0 <enet_init+0x29c>)
 80118ca:	6988      	ldr	r0, [r1, #24]
 80118cc:	4002      	ands	r2, r0
 80118ce:	6958      	ldr	r0, [r3, #20]
 80118d0:	4302      	orrs	r2, r0
 80118d2:	618a      	str	r2, [r1, #24]
 80118d4:	681a      	ldr	r2, [r3, #0]
 80118d6:	0691      	lsls	r1, r2, #26
 80118d8:	d511      	bpl.n	80118fe <enet_init+0x1ba>
 80118da:	483b      	ldr	r0, [pc, #236]	@ (80119c8 <enet_init+0x284>)
 80118dc:	699a      	ldr	r2, [r3, #24]
 80118de:	6981      	ldr	r1, [r0, #24]
 80118e0:	4c40      	ldr	r4, [pc, #256]	@ (80119e4 <enet_init+0x2a0>)
 80118e2:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 80118e6:	4014      	ands	r4, r2
 80118e8:	f021 0104 	bic.w	r1, r1, #4
 80118ec:	4321      	orrs	r1, r4
 80118ee:	6181      	str	r1, [r0, #24]
 80118f0:	6801      	ldr	r1, [r0, #0]
 80118f2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80118f6:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 80118fa:	430a      	orrs	r2, r1
 80118fc:	6002      	str	r2, [r0, #0]
 80118fe:	681a      	ldr	r2, [r3, #0]
 8011900:	0652      	lsls	r2, r2, #25
 8011902:	d506      	bpl.n	8011912 <enet_init+0x1ce>
 8011904:	492e      	ldr	r1, [pc, #184]	@ (80119c0 <enet_init+0x27c>)
 8011906:	69d8      	ldr	r0, [r3, #28]
 8011908:	69ca      	ldr	r2, [r1, #28]
 801190a:	f36f 0210 	bfc	r2, #0, #17
 801190e:	4302      	orrs	r2, r0
 8011910:	61ca      	str	r2, [r1, #28]
 8011912:	681a      	ldr	r2, [r3, #0]
 8011914:	0617      	lsls	r7, r2, #24
 8011916:	d517      	bpl.n	8011948 <enet_init+0x204>
 8011918:	4c29      	ldr	r4, [pc, #164]	@ (80119c0 <enet_init+0x27c>)
 801191a:	6a1a      	ldr	r2, [r3, #32]
 801191c:	69a0      	ldr	r0, [r4, #24]
 801191e:	f020 00be 	bic.w	r0, r0, #190	@ 0xbe
 8011922:	f422 417f 	bic.w	r1, r2, #65280	@ 0xff00
 8011926:	0400      	lsls	r0, r0, #16
 8011928:	0c00      	lsrs	r0, r0, #16
 801192a:	f021 0141 	bic.w	r1, r1, #65	@ 0x41
 801192e:	4301      	orrs	r1, r0
 8011930:	4825      	ldr	r0, [pc, #148]	@ (80119c8 <enet_init+0x284>)
 8011932:	61a1      	str	r1, [r4, #24]
 8011934:	f8d0 1080 	ldr.w	r1, [r0, #128]	@ 0x80
 8011938:	0a12      	lsrs	r2, r2, #8
 801193a:	f021 0177 	bic.w	r1, r1, #119	@ 0x77
 801193e:	f002 0277 	and.w	r2, r2, #119	@ 0x77
 8011942:	430a      	orrs	r2, r1
 8011944:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 8011948:	681a      	ldr	r2, [r3, #0]
 801194a:	05d6      	lsls	r6, r2, #23
 801194c:	bf42      	ittt	mi
 801194e:	4a1c      	ldrmi	r2, [pc, #112]	@ (80119c0 <enet_init+0x27c>)
 8011950:	6a59      	ldrmi	r1, [r3, #36]	@ 0x24
 8011952:	6091      	strmi	r1, [r2, #8]
 8011954:	681a      	ldr	r2, [r3, #0]
 8011956:	0595      	lsls	r5, r2, #22
 8011958:	bf42      	ittt	mi
 801195a:	4a19      	ldrmi	r2, [pc, #100]	@ (80119c0 <enet_init+0x27c>)
 801195c:	6a99      	ldrmi	r1, [r3, #40]	@ 0x28
 801195e:	60d1      	strmi	r1, [r2, #12]
 8011960:	681a      	ldr	r2, [r3, #0]
 8011962:	0554      	lsls	r4, r2, #21
 8011964:	d508      	bpl.n	8011978 <enet_init+0x234>
 8011966:	4916      	ldr	r1, [pc, #88]	@ (80119c0 <enet_init+0x27c>)
 8011968:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 801196a:	684a      	ldr	r2, [r1, #4]
 801196c:	f422 62fb 	bic.w	r2, r2, #2008	@ 0x7d8
 8011970:	f022 0206 	bic.w	r2, r2, #6
 8011974:	4302      	orrs	r2, r0
 8011976:	604a      	str	r2, [r1, #4]
 8011978:	681a      	ldr	r2, [r3, #0]
 801197a:	0510      	lsls	r0, r2, #20
 801197c:	d508      	bpl.n	8011990 <enet_init+0x24c>
 801197e:	4910      	ldr	r1, [pc, #64]	@ (80119c0 <enet_init+0x27c>)
 8011980:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8011982:	680a      	ldr	r2, [r1, #0]
 8011984:	f422 3291 	bic.w	r2, r2, #74240	@ 0x12200
 8011988:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 801198c:	4302      	orrs	r2, r0
 801198e:	600a      	str	r2, [r1, #0]
 8011990:	681a      	ldr	r2, [r3, #0]
 8011992:	04d1      	lsls	r1, r2, #19
 8011994:	d506      	bpl.n	80119a4 <enet_init+0x260>
 8011996:	490a      	ldr	r1, [pc, #40]	@ (80119c0 <enet_init+0x27c>)
 8011998:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 801199a:	680a      	ldr	r2, [r1, #0]
 801199c:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 80119a0:	4302      	orrs	r2, r0
 80119a2:	600a      	str	r2, [r1, #0]
 80119a4:	681a      	ldr	r2, [r3, #0]
 80119a6:	0492      	lsls	r2, r2, #18
 80119a8:	d401      	bmi.n	80119ae <enet_init+0x26a>
 80119aa:	2001      	movs	r0, #1
 80119ac:	e701      	b.n	80117b2 <enet_init+0x6e>
 80119ae:	4904      	ldr	r1, [pc, #16]	@ (80119c0 <enet_init+0x27c>)
 80119b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80119b2:	680a      	ldr	r2, [r1, #0]
 80119b4:	f422 2260 	bic.w	r2, r2, #917504	@ 0xe0000
 80119b8:	4313      	orrs	r3, r2
 80119ba:	600b      	str	r3, [r1, #0]
 80119bc:	e7f5      	b.n	80119aa <enet_init+0x266>
 80119be:	bf00      	nop
 80119c0:	40028000 	andmi	r8, r2, r0
 80119c4:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	@ 0xffffffc4
 80119c8:	40029000 	andmi	r9, r2, r0
 80119cc:	f8de3f23 			@ <UNDEFINED> instruction: 0xf8de3f23
 80119d0:	02c16000 	sbceq	r6, r1, #0
 80119d4:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>
 80119d8:	20000bb4 			@ <UNDEFINED> instruction: 0x20000bb4
 80119dc:	02000080 	andeq	r0, r0, #128	@ 0x80
 80119e0:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	@ 0x39c
 80119e4:	01000004 	tsteq	r0, r4

080119e8 <enet_txfifo_flush>:
 80119e8:	4a08      	ldr	r2, [pc, #32]	@ (8011a0c <enet_txfifo_flush+0x24>)
 80119ea:	6993      	ldr	r3, [r2, #24]
 80119ec:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80119f0:	6193      	str	r3, [r2, #24]
 80119f2:	4b07      	ldr	r3, [pc, #28]	@ (8011a10 <enet_txfifo_flush+0x28>)
 80119f4:	6990      	ldr	r0, [r2, #24]
 80119f6:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
 80119fa:	d003      	beq.n	8011a04 <enet_txfifo_flush+0x1c>
 80119fc:	3b01      	subs	r3, #1
 80119fe:	d1f9      	bne.n	80119f4 <enet_txfifo_flush+0xc>
 8011a00:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8011a04:	fab0 f080 	clz	r0, r0
 8011a08:	0940      	lsrs	r0, r0, #5
 8011a0a:	4770      	bx	lr
 8011a0c:	40029000 	andmi	r9, r2, r0
 8011a10:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08011a14 <enet_tx_enable>:
 8011a14:	4a06      	ldr	r2, [pc, #24]	@ (8011a30 <enet_tx_enable+0x1c>)
 8011a16:	b508      	push	{r3, lr}
 8011a18:	6813      	ldr	r3, [r2, #0]
 8011a1a:	f043 0308 	orr.w	r3, r3, #8
 8011a1e:	6013      	str	r3, [r2, #0]
 8011a20:	f7ff ffe2 	bl	80119e8 <enet_txfifo_flush>
 8011a24:	4a03      	ldr	r2, [pc, #12]	@ (8011a34 <enet_tx_enable+0x20>)
 8011a26:	6993      	ldr	r3, [r2, #24]
 8011a28:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8011a2c:	6193      	str	r3, [r2, #24]
 8011a2e:	bd08      	pop	{r3, pc}
 8011a30:	40028000 	andmi	r8, r2, r0
 8011a34:	40029000 	andmi	r9, r2, r0

08011a38 <enet_enable>:
 8011a38:	b508      	push	{r3, lr}
 8011a3a:	f7ff ffeb 	bl	8011a14 <enet_tx_enable>
 8011a3e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a42:	f7ff be47 	b.w	80116d4 <enet_rx_enable>
	...

08011a48 <enet_desc_information_get>:
 8011a48:	2905      	cmp	r1, #5
 8011a4a:	d820      	bhi.n	8011a8e <enet_desc_information_get+0x46>
 8011a4c:	e8df f001 	tbb	[pc, r1]
 8011a50:	0309191b 	movweq	r1, #39195	@ 0x991b
 8011a54:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8011a58:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8011a5c:	4770      	bx	lr
 8011a5e:	88c0      	ldrh	r0, [r0, #6]
 8011a60:	e7fa      	b.n	8011a58 <enet_desc_information_get+0x10>
 8011a62:	6802      	ldr	r2, [r0, #0]
 8011a64:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8011a68:	2b04      	cmp	r3, #4
 8011a6a:	d913      	bls.n	8011a94 <enet_desc_information_get+0x4c>
 8011a6c:	490a      	ldr	r1, [pc, #40]	@ (8011a98 <enet_desc_information_get+0x50>)
 8011a6e:	6809      	ldr	r1, [r1, #0]
 8011a70:	0189      	lsls	r1, r1, #6
 8011a72:	f1a3 0004 	sub.w	r0, r3, #4
 8011a76:	d50e      	bpl.n	8011a96 <enet_desc_information_get+0x4e>
 8011a78:	f012 0f20 	tst.w	r2, #32
 8011a7c:	bf18      	it	ne
 8011a7e:	4618      	movne	r0, r3
 8011a80:	4770      	bx	lr
 8011a82:	6880      	ldr	r0, [r0, #8]
 8011a84:	4770      	bx	lr
 8011a86:	6800      	ldr	r0, [r0, #0]
 8011a88:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8011a8c:	4770      	bx	lr
 8011a8e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011a92:	4770      	bx	lr
 8011a94:	2000      	movs	r0, #0
 8011a96:	4770      	bx	lr
 8011a98:	40028000 	andmi	r8, r2, r0

08011a9c <enet_initpara_reset>:
 8011a9c:	4b08      	ldr	r3, [pc, #32]	@ (8011ac0 <enet_initpara_reset+0x24>)
 8011a9e:	2200      	movs	r2, #0
 8011aa0:	e9c3 2200 	strd	r2, r2, [r3]
 8011aa4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8011aa8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8011aac:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8011ab0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8011ab4:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
 8011ab8:	e9c3 220c 	strd	r2, r2, [r3, #48]	@ 0x30
 8011abc:	639a      	str	r2, [r3, #56]	@ 0x38
 8011abe:	4770      	bx	lr
 8011ac0:	20000bb4 			@ <UNDEFINED> instruction: 0x20000bb4

08011ac4 <enet_deinit>:
 8011ac4:	b508      	push	{r3, lr}
 8011ac6:	f240 4019 	movw	r0, #1049	@ 0x419
 8011aca:	f000 f8e0 	bl	8011c8e <rcu_periph_reset_enable>
 8011ace:	f240 4019 	movw	r0, #1049	@ 0x419
 8011ad2:	f000 f8de 	bl	8011c92 <rcu_periph_reset_disable>
 8011ad6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011ada:	f7ff bfdf 	b.w	8011a9c <enet_initpara_reset>
	...

08011ae0 <fwdgt_enable>:
 8011ae0:	4b02      	ldr	r3, [pc, #8]	@ (8011aec <fwdgt_enable+0xc>)
 8011ae2:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
 8011ae6:	601a      	str	r2, [r3, #0]
 8011ae8:	4770      	bx	lr
 8011aea:	bf00      	nop
 8011aec:	40003000 	andmi	r3, r0, r0

08011af0 <fwdgt_counter_reload>:
 8011af0:	4b02      	ldr	r3, [pc, #8]	@ (8011afc <fwdgt_counter_reload+0xc>)
 8011af2:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
 8011af6:	601a      	str	r2, [r3, #0]
 8011af8:	4770      	bx	lr
 8011afa:	bf00      	nop
 8011afc:	40003000 	andmi	r3, r0, r0

08011b00 <fwdgt_config>:
 8011b00:	4a12      	ldr	r2, [pc, #72]	@ (8011b4c <fwdgt_config+0x4c>)
 8011b02:	b510      	push	{r4, lr}
 8011b04:	f245 5355 	movw	r3, #21845	@ 0x5555
 8011b08:	4c11      	ldr	r4, [pc, #68]	@ (8011b50 <fwdgt_config+0x50>)
 8011b0a:	6013      	str	r3, [r2, #0]
 8011b0c:	68d3      	ldr	r3, [r2, #12]
 8011b0e:	3c01      	subs	r4, #1
 8011b10:	f003 0301 	and.w	r3, r3, #1
 8011b14:	d013      	beq.n	8011b3e <fwdgt_config+0x3e>
 8011b16:	2b00      	cmp	r3, #0
 8011b18:	d1f8      	bne.n	8011b0c <fwdgt_config+0xc>
 8011b1a:	6051      	str	r1, [r2, #4]
 8011b1c:	490c      	ldr	r1, [pc, #48]	@ (8011b50 <fwdgt_config+0x50>)
 8011b1e:	4a0b      	ldr	r2, [pc, #44]	@ (8011b4c <fwdgt_config+0x4c>)
 8011b20:	68d3      	ldr	r3, [r2, #12]
 8011b22:	3901      	subs	r1, #1
 8011b24:	f003 0302 	and.w	r3, r3, #2
 8011b28:	d00d      	beq.n	8011b46 <fwdgt_config+0x46>
 8011b2a:	2b00      	cmp	r3, #0
 8011b2c:	d1f8      	bne.n	8011b20 <fwdgt_config+0x20>
 8011b2e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8011b32:	f64a 23aa 	movw	r3, #43690	@ 0xaaaa
 8011b36:	6090      	str	r0, [r2, #8]
 8011b38:	6013      	str	r3, [r2, #0]
 8011b3a:	2001      	movs	r0, #1
 8011b3c:	e002      	b.n	8011b44 <fwdgt_config+0x44>
 8011b3e:	2b00      	cmp	r3, #0
 8011b40:	d0eb      	beq.n	8011b1a <fwdgt_config+0x1a>
 8011b42:	2000      	movs	r0, #0
 8011b44:	bd10      	pop	{r4, pc}
 8011b46:	2b00      	cmp	r3, #0
 8011b48:	d1fb      	bne.n	8011b42 <fwdgt_config+0x42>
 8011b4a:	e7f0      	b.n	8011b2e <fwdgt_config+0x2e>
 8011b4c:	40003000 	andmi	r3, r0, r0
 8011b50:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

08011b54 <gpio_mode_set>:
 8011b54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b58:	6805      	ldr	r5, [r0, #0]
 8011b5a:	68c4      	ldr	r4, [r0, #12]
 8011b5c:	2600      	movs	r6, #0
 8011b5e:	f04f 0e01 	mov.w	lr, #1
 8011b62:	f04f 0803 	mov.w	r8, #3
 8011b66:	fa0e f706 	lsl.w	r7, lr, r6
 8011b6a:	421f      	tst	r7, r3
 8011b6c:	d00d      	beq.n	8011b8a <gpio_mode_set+0x36>
 8011b6e:	0077      	lsls	r7, r6, #1
 8011b70:	fa08 fc07 	lsl.w	ip, r8, r7
 8011b74:	fa01 f907 	lsl.w	r9, r1, r7
 8011b78:	ea25 050c 	bic.w	r5, r5, ip
 8011b7c:	ea24 040c 	bic.w	r4, r4, ip
 8011b80:	fa02 f707 	lsl.w	r7, r2, r7
 8011b84:	ea49 0505 	orr.w	r5, r9, r5
 8011b88:	433c      	orrs	r4, r7
 8011b8a:	3601      	adds	r6, #1
 8011b8c:	2e10      	cmp	r6, #16
 8011b8e:	d1ea      	bne.n	8011b66 <gpio_mode_set+0x12>
 8011b90:	6005      	str	r5, [r0, #0]
 8011b92:	60c4      	str	r4, [r0, #12]
 8011b94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08011b98 <gpio_output_options_set>:
 8011b98:	2901      	cmp	r1, #1
 8011b9a:	6841      	ldr	r1, [r0, #4]
 8011b9c:	bf0c      	ite	eq
 8011b9e:	4319      	orreq	r1, r3
 8011ba0:	4399      	bicne	r1, r3
 8011ba2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ba4:	6041      	str	r1, [r0, #4]
 8011ba6:	6881      	ldr	r1, [r0, #8]
 8011ba8:	2400      	movs	r4, #0
 8011baa:	2601      	movs	r6, #1
 8011bac:	2703      	movs	r7, #3
 8011bae:	fa06 f504 	lsl.w	r5, r6, r4
 8011bb2:	421d      	tst	r5, r3
 8011bb4:	d007      	beq.n	8011bc6 <gpio_output_options_set+0x2e>
 8011bb6:	0065      	lsls	r5, r4, #1
 8011bb8:	fa07 fc05 	lsl.w	ip, r7, r5
 8011bbc:	ea21 010c 	bic.w	r1, r1, ip
 8011bc0:	fa02 f505 	lsl.w	r5, r2, r5
 8011bc4:	4329      	orrs	r1, r5
 8011bc6:	3401      	adds	r4, #1
 8011bc8:	2c10      	cmp	r4, #16
 8011bca:	d1f0      	bne.n	8011bae <gpio_output_options_set+0x16>
 8011bcc:	6081      	str	r1, [r0, #8]
 8011bce:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011bd0 <gpio_af_set>:
 8011bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bd2:	6a06      	ldr	r6, [r0, #32]
 8011bd4:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 8011bd6:	2300      	movs	r3, #0
 8011bd8:	f04f 0c01 	mov.w	ip, #1
 8011bdc:	f04f 0e0f 	mov.w	lr, #15
 8011be0:	fa0c f403 	lsl.w	r4, ip, r3
 8011be4:	4214      	tst	r4, r2
 8011be6:	d007      	beq.n	8011bf8 <gpio_af_set+0x28>
 8011be8:	009c      	lsls	r4, r3, #2
 8011bea:	fa0e f704 	lsl.w	r7, lr, r4
 8011bee:	ea26 0607 	bic.w	r6, r6, r7
 8011bf2:	fa01 f404 	lsl.w	r4, r1, r4
 8011bf6:	4326      	orrs	r6, r4
 8011bf8:	3301      	adds	r3, #1
 8011bfa:	2b08      	cmp	r3, #8
 8011bfc:	d1f0      	bne.n	8011be0 <gpio_af_set+0x10>
 8011bfe:	2300      	movs	r3, #0
 8011c00:	f04f 0c01 	mov.w	ip, #1
 8011c04:	f04f 0e0f 	mov.w	lr, #15
 8011c08:	f103 0408 	add.w	r4, r3, #8
 8011c0c:	fa0c f404 	lsl.w	r4, ip, r4
 8011c10:	4214      	tst	r4, r2
 8011c12:	d007      	beq.n	8011c24 <gpio_af_set+0x54>
 8011c14:	009c      	lsls	r4, r3, #2
 8011c16:	fa0e f704 	lsl.w	r7, lr, r4
 8011c1a:	ea25 0507 	bic.w	r5, r5, r7
 8011c1e:	fa01 f404 	lsl.w	r4, r1, r4
 8011c22:	4325      	orrs	r5, r4
 8011c24:	3301      	adds	r3, #1
 8011c26:	2b08      	cmp	r3, #8
 8011c28:	d1ee      	bne.n	8011c08 <gpio_af_set+0x38>
 8011c2a:	6206      	str	r6, [r0, #32]
 8011c2c:	6245      	str	r5, [r0, #36]	@ 0x24
 8011c2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c30 <pmu_backup_ldo_config>:
 8011c30:	4b04      	ldr	r3, [pc, #16]	@ (8011c44 <pmu_backup_ldo_config+0x14>)
 8011c32:	685a      	ldr	r2, [r3, #4]
 8011c34:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8011c38:	605a      	str	r2, [r3, #4]
 8011c3a:	685a      	ldr	r2, [r3, #4]
 8011c3c:	4302      	orrs	r2, r0
 8011c3e:	605a      	str	r2, [r3, #4]
 8011c40:	4770      	bx	lr
 8011c42:	bf00      	nop
 8011c44:	40007000 	andmi	r7, r0, r0

08011c48 <pmu_backup_write_enable>:
 8011c48:	4a02      	ldr	r2, [pc, #8]	@ (8011c54 <pmu_backup_write_enable+0xc>)
 8011c4a:	6813      	ldr	r3, [r2, #0]
 8011c4c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011c50:	6013      	str	r3, [r2, #0]
 8011c52:	4770      	bx	lr
 8011c54:	40007000 	andmi	r7, r0, r0

08011c58 <rcu_periph_clock_enable>:
 8011c58:	0983      	lsrs	r3, r0, #6
 8011c5a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8011c5e:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8011c62:	f000 001f 	and.w	r0, r0, #31
 8011c66:	6819      	ldr	r1, [r3, #0]
 8011c68:	2201      	movs	r2, #1
 8011c6a:	4082      	lsls	r2, r0
 8011c6c:	430a      	orrs	r2, r1
 8011c6e:	601a      	str	r2, [r3, #0]
 8011c70:	4770      	bx	lr

08011c72 <rcu_periph_clock_disable>:
 8011c72:	0983      	lsrs	r3, r0, #6
 8011c74:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8011c78:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8011c7c:	f000 001f 	and.w	r0, r0, #31
 8011c80:	681a      	ldr	r2, [r3, #0]
 8011c82:	2101      	movs	r1, #1
 8011c84:	4081      	lsls	r1, r0
 8011c86:	ea22 0201 	bic.w	r2, r2, r1
 8011c8a:	601a      	str	r2, [r3, #0]
 8011c8c:	4770      	bx	lr

08011c8e <rcu_periph_reset_enable>:
 8011c8e:	f7ff bfe3 	b.w	8011c58 <rcu_periph_clock_enable>

08011c92 <rcu_periph_reset_disable>:
 8011c92:	f7ff bfee 	b.w	8011c72 <rcu_periph_clock_disable>
	...

08011c98 <rcu_ckout0_config>:
 8011c98:	4a04      	ldr	r2, [pc, #16]	@ (8011cac <rcu_ckout0_config+0x14>)
 8011c9a:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8011c9e:	f023 63ec 	bic.w	r3, r3, #123731968	@ 0x7600000
 8011ca2:	430b      	orrs	r3, r1
 8011ca4:	4303      	orrs	r3, r0
 8011ca6:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 8011caa:	4770      	bx	lr
 8011cac:	40023000 	andmi	r3, r2, r0

08011cb0 <rcu_rtc_clock_config>:
 8011cb0:	4a04      	ldr	r2, [pc, #16]	@ (8011cc4 <rcu_rtc_clock_config+0x14>)
 8011cb2:	f8d2 3870 	ldr.w	r3, [r2, #2160]	@ 0x870
 8011cb6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011cba:	4303      	orrs	r3, r0
 8011cbc:	f8c2 3870 	str.w	r3, [r2, #2160]	@ 0x870
 8011cc0:	4770      	bx	lr
 8011cc2:	bf00      	nop
 8011cc4:	40023000 	andmi	r3, r2, r0

08011cc8 <rcu_timer_clock_prescaler_config>:
 8011cc8:	f06f 7380 	mvn.w	r3, #16777216	@ 0x1000000
 8011ccc:	4298      	cmp	r0, r3
 8011cce:	4b05      	ldr	r3, [pc, #20]	@ (8011ce4 <rcu_timer_clock_prescaler_config+0x1c>)
 8011cd0:	f8d3 288c 	ldr.w	r2, [r3, #2188]	@ 0x88c
 8011cd4:	bf0c      	ite	eq
 8011cd6:	f022 7280 	biceq.w	r2, r2, #16777216	@ 0x1000000
 8011cda:	4302      	orrne	r2, r0
 8011cdc:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
 8011ce0:	4770      	bx	lr
 8011ce2:	bf00      	nop
 8011ce4:	40023000 	andmi	r3, r2, r0

08011ce8 <rcu_osci_on>:
 8011ce8:	f7ff bfb6 	b.w	8011c58 <rcu_periph_clock_enable>

08011cec <rcu_clock_freq_get>:
 8011cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011cee:	4b35      	ldr	r3, [pc, #212]	@ (8011dc4 <rcu_clock_freq_get+0xd8>)
 8011cf0:	b089      	sub	sp, #36	@ 0x24
 8011cf2:	4604      	mov	r4, r0
 8011cf4:	ad04      	add	r5, sp, #16
 8011cf6:	f103 0610 	add.w	r6, r3, #16
 8011cfa:	461f      	mov	r7, r3
 8011cfc:	6818      	ldr	r0, [r3, #0]
 8011cfe:	6859      	ldr	r1, [r3, #4]
 8011d00:	462a      	mov	r2, r5
 8011d02:	c203      	stmia	r2!, {r0, r1}
 8011d04:	3308      	adds	r3, #8
 8011d06:	42b3      	cmp	r3, r6
 8011d08:	4615      	mov	r5, r2
 8011d0a:	d1f7      	bne.n	8011cfc <rcu_clock_freq_get+0x10>
 8011d0c:	6938      	ldr	r0, [r7, #16]
 8011d0e:	6871      	ldr	r1, [r6, #4]
 8011d10:	4a2d      	ldr	r2, [pc, #180]	@ (8011dc8 <rcu_clock_freq_get+0xdc>)
 8011d12:	466b      	mov	r3, sp
 8011d14:	c303      	stmia	r3!, {r0, r1}
 8011d16:	c303      	stmia	r3!, {r0, r1}
 8011d18:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8011d1c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011d20:	2b01      	cmp	r3, #1
 8011d22:	d03f      	beq.n	8011da4 <rcu_clock_freq_get+0xb8>
 8011d24:	2b02      	cmp	r3, #2
 8011d26:	d13f      	bne.n	8011da8 <rcu_clock_freq_get+0xbc>
 8011d28:	f8d2 0804 	ldr.w	r0, [r2, #2052]	@ 0x804
 8011d2c:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804
 8011d30:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 8011d34:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 8011d38:	4d24      	ldr	r5, [pc, #144]	@ (8011dcc <rcu_clock_freq_get+0xe0>)
 8011d3a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8011d3e:	f412 0f80 	tst.w	r2, #4194304	@ 0x400000
 8011d42:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8011d46:	f103 0301 	add.w	r3, r3, #1
 8011d4a:	4a21      	ldr	r2, [pc, #132]	@ (8011dd0 <rcu_clock_freq_get+0xe4>)
 8011d4c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8011d50:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8011d54:	bf18      	it	ne
 8011d56:	462a      	movne	r2, r5
 8011d58:	fbb2 f2f0 	udiv	r2, r2, r0
 8011d5c:	434a      	muls	r2, r1
 8011d5e:	fbb2 f0f3 	udiv	r0, r2, r3
 8011d62:	4919      	ldr	r1, [pc, #100]	@ (8011dc8 <rcu_clock_freq_get+0xdc>)
 8011d64:	f8d1 3808 	ldr.w	r3, [r1, #2056]	@ 0x808
 8011d68:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 8011d6c:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8011d70:	3220      	adds	r2, #32
 8011d72:	446a      	add	r2, sp
 8011d74:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8011d78:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 8011d7c:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 8011d80:	3320      	adds	r3, #32
 8011d82:	446b      	add	r3, sp
 8011d84:	f3c2 3242 	ubfx	r2, r2, #13, #3
 8011d88:	3220      	adds	r2, #32
 8011d8a:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8011d8e:	446a      	add	r2, sp
 8011d90:	fa20 f303 	lsr.w	r3, r0, r3
 8011d94:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8011d98:	2c03      	cmp	r4, #3
 8011d9a:	d807      	bhi.n	8011dac <rcu_clock_freq_get+0xc0>
 8011d9c:	e8df f004 	tbb	[pc, r4]
 8011da0:	0e0b0907 	vmlaeq.f16	s0, s22, s14	@ <UNPREDICTABLE>
 8011da4:	4809      	ldr	r0, [pc, #36]	@ (8011dcc <rcu_clock_freq_get+0xe0>)
 8011da6:	e7dc      	b.n	8011d62 <rcu_clock_freq_get+0x76>
 8011da8:	4809      	ldr	r0, [pc, #36]	@ (8011dd0 <rcu_clock_freq_get+0xe4>)
 8011daa:	e7da      	b.n	8011d62 <rcu_clock_freq_get+0x76>
 8011dac:	2000      	movs	r0, #0
 8011dae:	b009      	add	sp, #36	@ 0x24
 8011db0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011db2:	4618      	mov	r0, r3
 8011db4:	e7fb      	b.n	8011dae <rcu_clock_freq_get+0xc2>
 8011db6:	fa23 f005 	lsr.w	r0, r3, r5
 8011dba:	e7f8      	b.n	8011dae <rcu_clock_freq_get+0xc2>
 8011dbc:	fa23 f002 	lsr.w	r0, r3, r2
 8011dc0:	e7f5      	b.n	8011dae <rcu_clock_freq_get+0xc2>
 8011dc2:	bf00      	nop
 8011dc4:	08013db8 	stmdaeq	r1, {r3, r4, r5, r7, r8, sl, fp, ip, sp}
 8011dc8:	40023000 	andmi	r3, r2, r0
 8011dcc:	017d7840 	cmneq	sp, r0, asr #16
 8011dd0:	00f42400 	rscseq	r2, r4, r0, lsl #8

08011dd4 <rcu_flag_get>:
 8011dd4:	0983      	lsrs	r3, r0, #6
 8011dd6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8011dda:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8011dde:	f000 001f 	and.w	r0, r0, #31
 8011de2:	681b      	ldr	r3, [r3, #0]
 8011de4:	fa23 f000 	lsr.w	r0, r3, r0
 8011de8:	f000 0001 	and.w	r0, r0, #1
 8011dec:	4770      	bx	lr
	...

08011df0 <rcu_osci_stab_wait>:
 8011df0:	281c      	cmp	r0, #28
 8011df2:	b508      	push	{r3, lr}
 8011df4:	d061      	beq.n	8011eba <rcu_osci_stab_wait+0xca>
 8011df6:	d812      	bhi.n	8011e1e <rcu_osci_stab_wait+0x2e>
 8011df8:	2818      	cmp	r0, #24
 8011dfa:	d055      	beq.n	8011ea8 <rcu_osci_stab_wait+0xb8>
 8011dfc:	d804      	bhi.n	8011e08 <rcu_osci_stab_wait+0x18>
 8011dfe:	b398      	cbz	r0, 8011e68 <rcu_osci_stab_wait+0x78>
 8011e00:	2810      	cmp	r0, #16
 8011e02:	d022      	beq.n	8011e4a <rcu_osci_stab_wait+0x5a>
 8011e04:	2000      	movs	r0, #0
 8011e06:	bd08      	pop	{r3, pc}
 8011e08:	281a      	cmp	r0, #26
 8011e0a:	d1fb      	bne.n	8011e04 <rcu_osci_stab_wait+0x14>
 8011e0c:	4a2f      	ldr	r2, [pc, #188]	@ (8011ecc <rcu_osci_stab_wait+0xdc>)
 8011e0e:	201b      	movs	r0, #27
 8011e10:	f7ff ffe0 	bl	8011dd4 <rcu_flag_get>
 8011e14:	b908      	cbnz	r0, 8011e1a <rcu_osci_stab_wait+0x2a>
 8011e16:	3a01      	subs	r2, #1
 8011e18:	d1f9      	bne.n	8011e0e <rcu_osci_stab_wait+0x1e>
 8011e1a:	201b      	movs	r0, #27
 8011e1c:	e01e      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011e1e:	f5b0 5fe8 	cmp.w	r0, #7424	@ 0x1d00
 8011e22:	d036      	beq.n	8011e92 <rcu_osci_stab_wait+0xa2>
 8011e24:	f243 0310 	movw	r3, #12304	@ 0x3010
 8011e28:	4298      	cmp	r0, r3
 8011e2a:	d027      	beq.n	8011e7c <rcu_osci_stab_wait+0x8c>
 8011e2c:	f5b0 5fe0 	cmp.w	r0, #7168	@ 0x1c00
 8011e30:	d1e8      	bne.n	8011e04 <rcu_osci_stab_wait+0x14>
 8011e32:	f06f 4270 	mvn.w	r2, #4026531840	@ 0xf0000000
 8011e36:	f641 4001 	movw	r0, #7169	@ 0x1c01
 8011e3a:	f7ff ffcb 	bl	8011dd4 <rcu_flag_get>
 8011e3e:	b908      	cbnz	r0, 8011e44 <rcu_osci_stab_wait+0x54>
 8011e40:	3a01      	subs	r2, #1
 8011e42:	d1f8      	bne.n	8011e36 <rcu_osci_stab_wait+0x46>
 8011e44:	f641 4001 	movw	r0, #7169	@ 0x1c01
 8011e48:	e008      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011e4a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8011e4e:	2011      	movs	r0, #17
 8011e50:	f7ff ffc0 	bl	8011dd4 <rcu_flag_get>
 8011e54:	b908      	cbnz	r0, 8011e5a <rcu_osci_stab_wait+0x6a>
 8011e56:	3a01      	subs	r2, #1
 8011e58:	d1f9      	bne.n	8011e4e <rcu_osci_stab_wait+0x5e>
 8011e5a:	2011      	movs	r0, #17
 8011e5c:	f7ff ffba 	bl	8011dd4 <rcu_flag_get>
 8011e60:	3800      	subs	r0, #0
 8011e62:	bf18      	it	ne
 8011e64:	2001      	movne	r0, #1
 8011e66:	e7ce      	b.n	8011e06 <rcu_osci_stab_wait+0x16>
 8011e68:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 8011e6c:	2001      	movs	r0, #1
 8011e6e:	f7ff ffb1 	bl	8011dd4 <rcu_flag_get>
 8011e72:	b908      	cbnz	r0, 8011e78 <rcu_osci_stab_wait+0x88>
 8011e74:	3a01      	subs	r2, #1
 8011e76:	d1f9      	bne.n	8011e6c <rcu_osci_stab_wait+0x7c>
 8011e78:	2001      	movs	r0, #1
 8011e7a:	e7ef      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011e7c:	4a13      	ldr	r2, [pc, #76]	@ (8011ecc <rcu_osci_stab_wait+0xdc>)
 8011e7e:	f243 0011 	movw	r0, #12305	@ 0x3011
 8011e82:	f7ff ffa7 	bl	8011dd4 <rcu_flag_get>
 8011e86:	b908      	cbnz	r0, 8011e8c <rcu_osci_stab_wait+0x9c>
 8011e88:	3a01      	subs	r2, #1
 8011e8a:	d1f8      	bne.n	8011e7e <rcu_osci_stab_wait+0x8e>
 8011e8c:	f243 0011 	movw	r0, #12305	@ 0x3011
 8011e90:	e7e4      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011e92:	4a0e      	ldr	r2, [pc, #56]	@ (8011ecc <rcu_osci_stab_wait+0xdc>)
 8011e94:	f641 5001 	movw	r0, #7425	@ 0x1d01
 8011e98:	f7ff ff9c 	bl	8011dd4 <rcu_flag_get>
 8011e9c:	b908      	cbnz	r0, 8011ea2 <rcu_osci_stab_wait+0xb2>
 8011e9e:	3a01      	subs	r2, #1
 8011ea0:	d1f8      	bne.n	8011e94 <rcu_osci_stab_wait+0xa4>
 8011ea2:	f641 5001 	movw	r0, #7425	@ 0x1d01
 8011ea6:	e7d9      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011ea8:	4a08      	ldr	r2, [pc, #32]	@ (8011ecc <rcu_osci_stab_wait+0xdc>)
 8011eaa:	2019      	movs	r0, #25
 8011eac:	f7ff ff92 	bl	8011dd4 <rcu_flag_get>
 8011eb0:	b908      	cbnz	r0, 8011eb6 <rcu_osci_stab_wait+0xc6>
 8011eb2:	3a01      	subs	r2, #1
 8011eb4:	d1f9      	bne.n	8011eaa <rcu_osci_stab_wait+0xba>
 8011eb6:	2019      	movs	r0, #25
 8011eb8:	e7d0      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011eba:	4a04      	ldr	r2, [pc, #16]	@ (8011ecc <rcu_osci_stab_wait+0xdc>)
 8011ebc:	201d      	movs	r0, #29
 8011ebe:	f7ff ff89 	bl	8011dd4 <rcu_flag_get>
 8011ec2:	b908      	cbnz	r0, 8011ec8 <rcu_osci_stab_wait+0xd8>
 8011ec4:	3a01      	subs	r2, #1
 8011ec6:	d1f9      	bne.n	8011ebc <rcu_osci_stab_wait+0xcc>
 8011ec8:	201d      	movs	r0, #29
 8011eca:	e7c7      	b.n	8011e5c <rcu_osci_stab_wait+0x6c>
 8011ecc:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

08011ed0 <rtc_init_mode_enter>:
 8011ed0:	b082      	sub	sp, #8
 8011ed2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8011ed6:	9301      	str	r3, [sp, #4]
 8011ed8:	4b0e      	ldr	r3, [pc, #56]	@ (8011f14 <rtc_init_mode_enter+0x44>)
 8011eda:	f8d3 280c 	ldr.w	r2, [r3, #2060]	@ 0x80c
 8011ede:	0652      	lsls	r2, r2, #25
 8011ee0:	d415      	bmi.n	8011f0e <rtc_init_mode_enter+0x3e>
 8011ee2:	f8d3 280c 	ldr.w	r2, [r3, #2060]	@ 0x80c
 8011ee6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8011eea:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 8011eee:	f8d3 080c 	ldr.w	r0, [r3, #2060]	@ 0x80c
 8011ef2:	9a01      	ldr	r2, [sp, #4]
 8011ef4:	3a01      	subs	r2, #1
 8011ef6:	f000 0040 	and.w	r0, r0, #64	@ 0x40
 8011efa:	9201      	str	r2, [sp, #4]
 8011efc:	b112      	cbz	r2, 8011f04 <rtc_init_mode_enter+0x34>
 8011efe:	2800      	cmp	r0, #0
 8011f00:	d0f5      	beq.n	8011eee <rtc_init_mode_enter+0x1e>
 8011f02:	2040      	movs	r0, #64	@ 0x40
 8011f04:	3800      	subs	r0, #0
 8011f06:	bf18      	it	ne
 8011f08:	2001      	movne	r0, #1
 8011f0a:	b002      	add	sp, #8
 8011f0c:	4770      	bx	lr
 8011f0e:	2001      	movs	r0, #1
 8011f10:	e7fb      	b.n	8011f0a <rtc_init_mode_enter+0x3a>
 8011f12:	bf00      	nop
 8011f14:	40002000 	andmi	r2, r0, r0

08011f18 <rtc_init_mode_exit>:
 8011f18:	4a03      	ldr	r2, [pc, #12]	@ (8011f28 <rtc_init_mode_exit+0x10>)
 8011f1a:	f8d2 380c 	ldr.w	r3, [r2, #2060]	@ 0x80c
 8011f1e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8011f22:	f8c2 380c 	str.w	r3, [r2, #2060]	@ 0x80c
 8011f26:	4770      	bx	lr
 8011f28:	40002000 	andmi	r2, r0, r0

08011f2c <rtc_register_sync_wait>:
 8011f2c:	b082      	sub	sp, #8
 8011f2e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011f32:	9301      	str	r3, [sp, #4]
 8011f34:	4b13      	ldr	r3, [pc, #76]	@ (8011f84 <rtc_register_sync_wait+0x58>)
 8011f36:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8011f3a:	0692      	lsls	r2, r2, #26
 8011f3c:	d41f      	bmi.n	8011f7e <rtc_register_sync_wait+0x52>
 8011f3e:	22ca      	movs	r2, #202	@ 0xca
 8011f40:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8011f44:	2253      	movs	r2, #83	@ 0x53
 8011f46:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8011f4a:	f8d3 280c 	ldr.w	r2, [r3, #2060]	@ 0x80c
 8011f4e:	f022 0220 	bic.w	r2, r2, #32
 8011f52:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 8011f56:	f8d3 080c 	ldr.w	r0, [r3, #2060]	@ 0x80c
 8011f5a:	9a01      	ldr	r2, [sp, #4]
 8011f5c:	3a01      	subs	r2, #1
 8011f5e:	f000 0020 	and.w	r0, r0, #32
 8011f62:	9201      	str	r2, [sp, #4]
 8011f64:	b112      	cbz	r2, 8011f6c <rtc_register_sync_wait+0x40>
 8011f66:	2800      	cmp	r0, #0
 8011f68:	d0f5      	beq.n	8011f56 <rtc_register_sync_wait+0x2a>
 8011f6a:	2020      	movs	r0, #32
 8011f6c:	3800      	subs	r0, #0
 8011f6e:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 8011f72:	bf18      	it	ne
 8011f74:	2001      	movne	r0, #1
 8011f76:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8011f7a:	b002      	add	sp, #8
 8011f7c:	4770      	bx	lr
 8011f7e:	2001      	movs	r0, #1
 8011f80:	e7fb      	b.n	8011f7a <rtc_register_sync_wait+0x4e>
 8011f82:	bf00      	nop
 8011f84:	40002000 	andmi	r2, r0, r0

08011f88 <rtc_init>:
 8011f88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f8c:	4c2d      	ldr	r4, [pc, #180]	@ (8012044 <rtc_init+0xbc>)
 8011f8e:	68c3      	ldr	r3, [r0, #12]
 8011f90:	9301      	str	r3, [sp, #4]
 8011f92:	22ca      	movs	r2, #202	@ 0xca
 8011f94:	f890 9000 	ldrb.w	r9, [r0]
 8011f98:	f890 8003 	ldrb.w	r8, [r0, #3]
 8011f9c:	7847      	ldrb	r7, [r0, #1]
 8011f9e:	7885      	ldrb	r5, [r0, #2]
 8011fa0:	7906      	ldrb	r6, [r0, #4]
 8011fa2:	f890 a005 	ldrb.w	sl, [r0, #5]
 8011fa6:	f890 b006 	ldrb.w	fp, [r0, #6]
 8011faa:	f8c4 2824 	str.w	r2, [r4, #2084]	@ 0x824
 8011fae:	2253      	movs	r2, #83	@ 0x53
 8011fb0:	f8c4 2824 	str.w	r2, [r4, #2084]	@ 0x824
 8011fb4:	4601      	mov	r1, r0
 8011fb6:	f7ff ff8b 	bl	8011ed0 <rtc_init_mode_enter>
 8011fba:	9b01      	ldr	r3, [sp, #4]
 8011fbc:	b3d0      	cbz	r0, 8012034 <rtc_init+0xac>
 8011fbe:	890a      	ldrh	r2, [r1, #8]
 8011fc0:	8948      	ldrh	r0, [r1, #10]
 8011fc2:	0436      	lsls	r6, r6, #16
 8011fc4:	f00b 0b7f 	and.w	fp, fp, #127	@ 0x7f
 8011fc8:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8011fcc:	ea4f 3848 	mov.w	r8, r8, lsl #13
 8011fd0:	ea4b 0b03 	orr.w	fp, fp, r3
 8011fd4:	0412      	lsls	r2, r2, #16
 8011fd6:	f406 167c 	and.w	r6, r6, #4128768	@ 0x3f0000
 8011fda:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
 8011fde:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
 8011fe2:	fa1f f888 	uxth.w	r8, r8
 8011fe6:	023f      	lsls	r7, r7, #8
 8011fe8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011fec:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8011ff0:	ea46 060b 	orr.w	r6, r6, fp
 8011ff4:	f40a 4afe 	and.w	sl, sl, #32512	@ 0x7f00
 8011ff8:	ea45 0508 	orr.w	r5, r5, r8
 8011ffc:	f407 57f8 	and.w	r7, r7, #7936	@ 0x1f00
 8012000:	4302      	orrs	r2, r0
 8012002:	ea46 060a 	orr.w	r6, r6, sl
 8012006:	433d      	orrs	r5, r7
 8012008:	f8c4 2810 	str.w	r2, [r4, #2064]	@ 0x810
 801200c:	f8c4 6800 	str.w	r6, [r4, #2048]	@ 0x800
 8012010:	f8c4 5804 	str.w	r5, [r4, #2052]	@ 0x804
 8012014:	f8d4 3808 	ldr.w	r3, [r4, #2056]	@ 0x808
 8012018:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 801201c:	f8c4 3808 	str.w	r3, [r4, #2056]	@ 0x808
 8012020:	690a      	ldr	r2, [r1, #16]
 8012022:	f8d4 3808 	ldr.w	r3, [r4, #2056]	@ 0x808
 8012026:	4313      	orrs	r3, r2
 8012028:	f8c4 3808 	str.w	r3, [r4, #2056]	@ 0x808
 801202c:	f7ff ff74 	bl	8011f18 <rtc_init_mode_exit>
 8012030:	f7ff ff7c 	bl	8011f2c <rtc_register_sync_wait>
 8012034:	4b03      	ldr	r3, [pc, #12]	@ (8012044 <rtc_init+0xbc>)
 8012036:	22ff      	movs	r2, #255	@ 0xff
 8012038:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 801203c:	b003      	add	sp, #12
 801203e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012042:	bf00      	nop
 8012044:	40002000 	andmi	r2, r0, r0

08012048 <rtc_alarm_config>:
 8012048:	e9d1 3200 	ldrd	r3, r2, [r1]
 801204c:	4313      	orrs	r3, r2
 801204e:	68ca      	ldr	r2, [r1, #12]
 8012050:	4313      	orrs	r3, r2
 8012052:	7aca      	ldrb	r2, [r1, #11]
 8012054:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8012058:	4313      	orrs	r3, r2
 801205a:	7a0a      	ldrb	r2, [r1, #8]
 801205c:	0612      	lsls	r2, r2, #24
 801205e:	f002 527c 	and.w	r2, r2, #1056964608	@ 0x3f000000
 8012062:	4313      	orrs	r3, r2
 8012064:	7a4a      	ldrb	r2, [r1, #9]
 8012066:	0412      	lsls	r2, r2, #16
 8012068:	f402 127c 	and.w	r2, r2, #4128768	@ 0x3f0000
 801206c:	4313      	orrs	r3, r2
 801206e:	7a8a      	ldrb	r2, [r1, #10]
 8012070:	0212      	lsls	r2, r2, #8
 8012072:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 8012076:	4313      	orrs	r3, r2
 8012078:	4a08      	ldr	r2, [pc, #32]	@ (801209c <rtc_alarm_config+0x54>)
 801207a:	21ca      	movs	r1, #202	@ 0xca
 801207c:	f8c2 1824 	str.w	r1, [r2, #2084]	@ 0x824
 8012080:	2801      	cmp	r0, #1
 8012082:	f04f 0153 	mov.w	r1, #83	@ 0x53
 8012086:	f8c2 1824 	str.w	r1, [r2, #2084]	@ 0x824
 801208a:	bf0c      	ite	eq
 801208c:	f8c2 381c 	streq.w	r3, [r2, #2076]	@ 0x81c
 8012090:	f8c2 3820 	strne.w	r3, [r2, #2080]	@ 0x820
 8012094:	23ff      	movs	r3, #255	@ 0xff
 8012096:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
 801209a:	4770      	bx	lr
 801209c:	40002000 	andmi	r2, r0, r0

080120a0 <rtc_alarm_get>:
 80120a0:	4b0e      	ldr	r3, [pc, #56]	@ (80120dc <rtc_alarm_get+0x3c>)
 80120a2:	2801      	cmp	r0, #1
 80120a4:	bf0c      	ite	eq
 80120a6:	f8d3 381c 	ldreq.w	r3, [r3, #2076]	@ 0x81c
 80120aa:	f8d3 3820 	ldrne.w	r3, [r3, #2080]	@ 0x820
 80120ae:	f003 3280 	and.w	r2, r3, #2155905152	@ 0x80808080
 80120b2:	600a      	str	r2, [r1, #0]
 80120b4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80120b8:	60ca      	str	r2, [r1, #12]
 80120ba:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 80120be:	604a      	str	r2, [r1, #4]
 80120c0:	f3c3 6205 	ubfx	r2, r3, #24, #6
 80120c4:	720a      	strb	r2, [r1, #8]
 80120c6:	f3c3 4205 	ubfx	r2, r3, #16, #6
 80120ca:	724a      	strb	r2, [r1, #9]
 80120cc:	f3c3 2206 	ubfx	r2, r3, #8, #7
 80120d0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80120d4:	728a      	strb	r2, [r1, #10]
 80120d6:	72cb      	strb	r3, [r1, #11]
 80120d8:	4770      	bx	lr
 80120da:	bf00      	nop
 80120dc:	40002000 	andmi	r2, r0, r0

080120e0 <rtc_alarm_enable>:
 80120e0:	4b0a      	ldr	r3, [pc, #40]	@ (801210c <rtc_alarm_enable+0x2c>)
 80120e2:	22ca      	movs	r2, #202	@ 0xca
 80120e4:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80120e8:	2253      	movs	r2, #83	@ 0x53
 80120ea:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80120ee:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80120f2:	2801      	cmp	r0, #1
 80120f4:	bf0c      	ite	eq
 80120f6:	f442 7280 	orreq.w	r2, r2, #256	@ 0x100
 80120fa:	f442 7200 	orrne.w	r2, r2, #512	@ 0x200
 80120fe:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8012102:	22ff      	movs	r2, #255	@ 0xff
 8012104:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8012108:	4770      	bx	lr
 801210a:	bf00      	nop
 801210c:	40002000 	andmi	r2, r0, r0

08012110 <rtc_alarm_disable>:
 8012110:	b082      	sub	sp, #8
 8012112:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012116:	9301      	str	r3, [sp, #4]
 8012118:	4b19      	ldr	r3, [pc, #100]	@ (8012180 <rtc_alarm_disable+0x70>)
 801211a:	22ca      	movs	r2, #202	@ 0xca
 801211c:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8012120:	2253      	movs	r2, #83	@ 0x53
 8012122:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8012126:	2801      	cmp	r0, #1
 8012128:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 801212c:	d117      	bne.n	801215e <rtc_alarm_disable+0x4e>
 801212e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8012132:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8012136:	f8d3 080c 	ldr.w	r0, [r3, #2060]	@ 0x80c
 801213a:	9a01      	ldr	r2, [sp, #4]
 801213c:	3a01      	subs	r2, #1
 801213e:	f000 0001 	and.w	r0, r0, #1
 8012142:	9201      	str	r2, [sp, #4]
 8012144:	b10a      	cbz	r2, 801214a <rtc_alarm_disable+0x3a>
 8012146:	2800      	cmp	r0, #0
 8012148:	d0f5      	beq.n	8012136 <rtc_alarm_disable+0x26>
 801214a:	3800      	subs	r0, #0
 801214c:	4b0c      	ldr	r3, [pc, #48]	@ (8012180 <rtc_alarm_disable+0x70>)
 801214e:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 8012152:	bf18      	it	ne
 8012154:	2001      	movne	r0, #1
 8012156:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 801215a:	b002      	add	sp, #8
 801215c:	4770      	bx	lr
 801215e:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8012162:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8012166:	f8d3 080c 	ldr.w	r0, [r3, #2060]	@ 0x80c
 801216a:	9a01      	ldr	r2, [sp, #4]
 801216c:	3a01      	subs	r2, #1
 801216e:	f000 0002 	and.w	r0, r0, #2
 8012172:	9201      	str	r2, [sp, #4]
 8012174:	2a00      	cmp	r2, #0
 8012176:	d0e8      	beq.n	801214a <rtc_alarm_disable+0x3a>
 8012178:	2800      	cmp	r0, #0
 801217a:	d0f4      	beq.n	8012166 <rtc_alarm_disable+0x56>
 801217c:	2002      	movs	r0, #2
 801217e:	e7e4      	b.n	801214a <rtc_alarm_disable+0x3a>
 8012180:	40002000 	andmi	r2, r0, r0

08012184 <rtc_interrupt_enable>:
 8012184:	4b0c      	ldr	r3, [pc, #48]	@ (80121b8 <rtc_interrupt_enable+0x34>)
 8012186:	22ca      	movs	r2, #202	@ 0xca
 8012188:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 801218c:	2253      	movs	r2, #83	@ 0x53
 801218e:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 8012192:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8012196:	f020 0204 	bic.w	r2, r0, #4
 801219a:	430a      	orrs	r2, r1
 801219c:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80121a0:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80121a4:	f000 0004 	and.w	r0, r0, #4
 80121a8:	4310      	orrs	r0, r2
 80121aa:	22ff      	movs	r2, #255	@ 0xff
 80121ac:	f8c3 0840 	str.w	r0, [r3, #2112]	@ 0x840
 80121b0:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80121b4:	4770      	bx	lr
 80121b6:	bf00      	nop
 80121b8:	40002000 	andmi	r2, r0, r0

080121bc <rtc_interrupt_disable>:
 80121bc:	4b0d      	ldr	r3, [pc, #52]	@ (80121f4 <rtc_interrupt_disable+0x38>)
 80121be:	22ca      	movs	r2, #202	@ 0xca
 80121c0:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80121c4:	2253      	movs	r2, #83	@ 0x53
 80121c6:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80121ca:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 80121ce:	f020 0104 	bic.w	r1, r0, #4
 80121d2:	ea22 0201 	bic.w	r2, r2, r1
 80121d6:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80121da:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80121de:	f000 0004 	and.w	r0, r0, #4
 80121e2:	ea22 0200 	bic.w	r2, r2, r0
 80121e6:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 80121ea:	22ff      	movs	r2, #255	@ 0xff
 80121ec:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
 80121f0:	4770      	bx	lr
 80121f2:	bf00      	nop
 80121f4:	40002000 	andmi	r2, r0, r0

080121f8 <syscfg_enet_phy_interface_config>:
 80121f8:	4a04      	ldr	r2, [pc, #16]	@ (801220c <syscfg_enet_phy_interface_config+0x14>)
 80121fa:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 80121fe:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8012202:	4303      	orrs	r3, r0
 8012204:	f8c2 3804 	str.w	r3, [r2, #2052]	@ 0x804
 8012208:	4770      	bx	lr
 801220a:	bf00      	nop
 801220c:	40013000 	andmi	r3, r1, r0

08012210 <timer_deinit>:
 8012210:	b508      	push	{r3, lr}
 8012212:	4b4e      	ldr	r3, [pc, #312]	@ (801234c <timer_deinit+0x13c>)
 8012214:	4298      	cmp	r0, r3
 8012216:	f000 8092 	beq.w	801233e <timer_deinit+0x12e>
 801221a:	d822      	bhi.n	8012262 <timer_deinit+0x52>
 801221c:	f5a3 5380 	sub.w	r3, r3, #4096	@ 0x1000
 8012220:	4298      	cmp	r0, r3
 8012222:	d062      	beq.n	80122ea <timer_deinit+0xda>
 8012224:	d80b      	bhi.n	801223e <timer_deinit+0x2e>
 8012226:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 801222a:	4298      	cmp	r0, r3
 801222c:	d04f      	beq.n	80122ce <timer_deinit+0xbe>
 801222e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012232:	4298      	cmp	r0, r3
 8012234:	d052      	beq.n	80122dc <timer_deinit+0xcc>
 8012236:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 801223a:	d041      	beq.n	80122c0 <timer_deinit+0xb0>
 801223c:	bd08      	pop	{r3, pc}
 801223e:	4b44      	ldr	r3, [pc, #272]	@ (8012350 <timer_deinit+0x140>)
 8012240:	4298      	cmp	r0, r3
 8012242:	d059      	beq.n	80122f8 <timer_deinit+0xe8>
 8012244:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012248:	4298      	cmp	r0, r3
 801224a:	d071      	beq.n	8012330 <timer_deinit+0x120>
 801224c:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8012250:	4298      	cmp	r0, r3
 8012252:	d1f3      	bne.n	801223c <timer_deinit+0x2c>
 8012254:	f640 0004 	movw	r0, #2052	@ 0x804
 8012258:	f7ff fd19 	bl	8011c8e <rcu_periph_reset_enable>
 801225c:	f640 0004 	movw	r0, #2052	@ 0x804
 8012260:	e02a      	b.n	80122b8 <timer_deinit+0xa8>
 8012262:	4b3c      	ldr	r3, [pc, #240]	@ (8012354 <timer_deinit+0x144>)
 8012264:	4298      	cmp	r0, r3
 8012266:	d055      	beq.n	8012314 <timer_deinit+0x104>
 8012268:	d812      	bhi.n	8012290 <timer_deinit+0x80>
 801226a:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 801226e:	4298      	cmp	r0, r3
 8012270:	d01c      	beq.n	80122ac <timer_deinit+0x9c>
 8012272:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012276:	4298      	cmp	r0, r3
 8012278:	d045      	beq.n	8012306 <timer_deinit+0xf6>
 801227a:	f5a3 4364 	sub.w	r3, r3, #58368	@ 0xe400
 801227e:	4298      	cmp	r0, r3
 8012280:	d1dc      	bne.n	801223c <timer_deinit+0x2c>
 8012282:	f640 0008 	movw	r0, #2056	@ 0x808
 8012286:	f7ff fd02 	bl	8011c8e <rcu_periph_reset_enable>
 801228a:	f640 0008 	movw	r0, #2056	@ 0x808
 801228e:	e013      	b.n	80122b8 <timer_deinit+0xa8>
 8012290:	4b31      	ldr	r3, [pc, #196]	@ (8012358 <timer_deinit+0x148>)
 8012292:	4298      	cmp	r0, r3
 8012294:	d045      	beq.n	8012322 <timer_deinit+0x112>
 8012296:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801229a:	4298      	cmp	r0, r3
 801229c:	d1ce      	bne.n	801223c <timer_deinit+0x2c>
 801229e:	f640 1012 	movw	r0, #2322	@ 0x912
 80122a2:	f7ff fcf4 	bl	8011c8e <rcu_periph_reset_enable>
 80122a6:	f640 1012 	movw	r0, #2322	@ 0x912
 80122aa:	e005      	b.n	80122b8 <timer_deinit+0xa8>
 80122ac:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80122b0:	f7ff fced 	bl	8011c8e <rcu_periph_reset_enable>
 80122b4:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80122b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80122bc:	f7ff bce9 	b.w	8011c92 <rcu_periph_reset_disable>
 80122c0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80122c4:	f7ff fce3 	bl	8011c8e <rcu_periph_reset_enable>
 80122c8:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80122cc:	e7f4      	b.n	80122b8 <timer_deinit+0xa8>
 80122ce:	f640 0001 	movw	r0, #2049	@ 0x801
 80122d2:	f7ff fcdc 	bl	8011c8e <rcu_periph_reset_enable>
 80122d6:	f640 0001 	movw	r0, #2049	@ 0x801
 80122da:	e7ed      	b.n	80122b8 <timer_deinit+0xa8>
 80122dc:	f640 0002 	movw	r0, #2050	@ 0x802
 80122e0:	f7ff fcd5 	bl	8011c8e <rcu_periph_reset_enable>
 80122e4:	f640 0002 	movw	r0, #2050	@ 0x802
 80122e8:	e7e6      	b.n	80122b8 <timer_deinit+0xa8>
 80122ea:	f640 0003 	movw	r0, #2051	@ 0x803
 80122ee:	f7ff fcce 	bl	8011c8e <rcu_periph_reset_enable>
 80122f2:	f640 0003 	movw	r0, #2051	@ 0x803
 80122f6:	e7df      	b.n	80122b8 <timer_deinit+0xa8>
 80122f8:	f640 0005 	movw	r0, #2053	@ 0x805
 80122fc:	f7ff fcc7 	bl	8011c8e <rcu_periph_reset_enable>
 8012300:	f640 0005 	movw	r0, #2053	@ 0x805
 8012304:	e7d8      	b.n	80122b8 <timer_deinit+0xa8>
 8012306:	f640 1001 	movw	r0, #2305	@ 0x901
 801230a:	f7ff fcc0 	bl	8011c8e <rcu_periph_reset_enable>
 801230e:	f640 1001 	movw	r0, #2305	@ 0x901
 8012312:	e7d1      	b.n	80122b8 <timer_deinit+0xa8>
 8012314:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8012318:	f7ff fcb9 	bl	8011c8e <rcu_periph_reset_enable>
 801231c:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8012320:	e7ca      	b.n	80122b8 <timer_deinit+0xa8>
 8012322:	f640 1011 	movw	r0, #2321	@ 0x911
 8012326:	f7ff fcb2 	bl	8011c8e <rcu_periph_reset_enable>
 801232a:	f640 1011 	movw	r0, #2321	@ 0x911
 801232e:	e7c3      	b.n	80122b8 <timer_deinit+0xa8>
 8012330:	f640 0006 	movw	r0, #2054	@ 0x806
 8012334:	f7ff fcab 	bl	8011c8e <rcu_periph_reset_enable>
 8012338:	f640 0006 	movw	r0, #2054	@ 0x806
 801233c:	e7bc      	b.n	80122b8 <timer_deinit+0xa8>
 801233e:	f640 0007 	movw	r0, #2055	@ 0x807
 8012342:	f7ff fca4 	bl	8011c8e <rcu_periph_reset_enable>
 8012346:	f640 0007 	movw	r0, #2055	@ 0x807
 801234a:	e7b5      	b.n	80122b8 <timer_deinit+0xa8>
 801234c:	40001c00 	andmi	r1, r0, r0, lsl #24
 8012350:	40001400 	andmi	r1, r0, r0, lsl #8
 8012354:	40014000 	andmi	r4, r1, r0
 8012358:	40014400 	andmi	r4, r1, r0, lsl #8

0801235c <timer_struct_para_init>:
 801235c:	2300      	movs	r3, #0
 801235e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8012362:	e9c0 3300 	strd	r3, r3, [r0]
 8012366:	6082      	str	r2, [r0, #8]
 8012368:	7303      	strb	r3, [r0, #12]
 801236a:	4770      	bx	lr

0801236c <timer_init>:
 801236c:	880b      	ldrh	r3, [r1, #0]
 801236e:	4a17      	ldr	r2, [pc, #92]	@ (80123cc <timer_init+0x60>)
 8012370:	b510      	push	{r4, lr}
 8012372:	6283      	str	r3, [r0, #40]	@ 0x28
 8012374:	f420 6380 	bic.w	r3, r0, #1024	@ 0x400
 8012378:	4293      	cmp	r3, r2
 801237a:	d004      	beq.n	8012386 <timer_init+0x1a>
 801237c:	f420 6240 	bic.w	r2, r0, #3072	@ 0xc00
 8012380:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8012384:	d10b      	bne.n	801239e <timer_init+0x32>
 8012386:	6802      	ldr	r2, [r0, #0]
 8012388:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 801238c:	6002      	str	r2, [r0, #0]
 801238e:	6804      	ldr	r4, [r0, #0]
 8012390:	884a      	ldrh	r2, [r1, #2]
 8012392:	4322      	orrs	r2, r4
 8012394:	6002      	str	r2, [r0, #0]
 8012396:	6804      	ldr	r4, [r0, #0]
 8012398:	888a      	ldrh	r2, [r1, #4]
 801239a:	4322      	orrs	r2, r4
 801239c:	6002      	str	r2, [r0, #0]
 801239e:	688a      	ldr	r2, [r1, #8]
 80123a0:	62c2      	str	r2, [r0, #44]	@ 0x2c
 80123a2:	4a0b      	ldr	r2, [pc, #44]	@ (80123d0 <timer_init+0x64>)
 80123a4:	4293      	cmp	r3, r2
 80123a6:	d00c      	beq.n	80123c2 <timer_init+0x56>
 80123a8:	6802      	ldr	r2, [r0, #0]
 80123aa:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80123ae:	6002      	str	r2, [r0, #0]
 80123b0:	6804      	ldr	r4, [r0, #0]
 80123b2:	88ca      	ldrh	r2, [r1, #6]
 80123b4:	4322      	orrs	r2, r4
 80123b6:	6002      	str	r2, [r0, #0]
 80123b8:	4a04      	ldr	r2, [pc, #16]	@ (80123cc <timer_init+0x60>)
 80123ba:	4293      	cmp	r3, r2
 80123bc:	bf04      	itt	eq
 80123be:	7b0b      	ldrbeq	r3, [r1, #12]
 80123c0:	6303      	streq	r3, [r0, #48]	@ 0x30
 80123c2:	6943      	ldr	r3, [r0, #20]
 80123c4:	f043 0301 	orr.w	r3, r3, #1
 80123c8:	6143      	str	r3, [r0, #20]
 80123ca:	bd10      	pop	{r4, pc}
 80123cc:	40010000 	andmi	r0, r1, r0
 80123d0:	40001000 	andmi	r1, r0, r0

080123d4 <timer_enable>:
 80123d4:	6803      	ldr	r3, [r0, #0]
 80123d6:	f043 0301 	orr.w	r3, r3, #1
 80123da:	6003      	str	r3, [r0, #0]
 80123dc:	4770      	bx	lr

080123de <timer_counter_value_config>:
 80123de:	6241      	str	r1, [r0, #36]	@ 0x24
 80123e0:	4770      	bx	lr

080123e2 <timer_interrupt_enable>:
 80123e2:	68c3      	ldr	r3, [r0, #12]
 80123e4:	430b      	orrs	r3, r1
 80123e6:	60c3      	str	r3, [r0, #12]
 80123e8:	4770      	bx	lr

080123ea <timer_interrupt_flag_clear>:
 80123ea:	43c9      	mvns	r1, r1
 80123ec:	6101      	str	r1, [r0, #16]
 80123ee:	4770      	bx	lr

080123f0 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 80123f0:	b110      	cbz	r0, 80123f8 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x8>
 80123f2:	2801      	cmp	r0, #1
 80123f4:	d004      	beq.n	8012400 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x10>
 80123f6:	4770      	bx	lr
 80123f8:	4b03      	ldr	r3, [pc, #12]	@ (8012408 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 80123fa:	f8c3 1850 	str.w	r1, [r3, #2128]	@ 0x850
 80123fe:	4770      	bx	lr
 8012400:	4b01      	ldr	r3, [pc, #4]	@ (8012408 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 8012402:	f8c3 1854 	str.w	r1, [r3, #2132]	@ 0x854
 8012406:	4770      	bx	lr
 8012408:	40002000 	andmi	r2, r0, r0

0801240c <bkp_data_read(bkp_data_register_enum)>:
 801240c:	b118      	cbz	r0, 8012416 <bkp_data_read(bkp_data_register_enum)+0xa>
 801240e:	2801      	cmp	r0, #1
 8012410:	d006      	beq.n	8012420 <bkp_data_read(bkp_data_register_enum)+0x14>
 8012412:	2000      	movs	r0, #0
 8012414:	4770      	bx	lr
 8012416:	4b04      	ldr	r3, [pc, #16]	@ (8012428 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8012418:	f8d3 0850 	ldr.w	r0, [r3, #2128]	@ 0x850
 801241c:	b280      	uxth	r0, r0
 801241e:	4770      	bx	lr
 8012420:	4b01      	ldr	r3, [pc, #4]	@ (8012428 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8012422:	f8d3 0854 	ldr.w	r0, [r3, #2132]	@ 0x854
 8012426:	e7f9      	b.n	801241c <bkp_data_read(bkp_data_register_enum)+0x10>
 8012428:	40002000 	andmi	r2, r0, r0

0801242c <mac_address_get(unsigned char*)>:
 801242c:	4a07      	ldr	r2, [pc, #28]	@ (801244c <mac_address_get(unsigned char*)+0x20>)
 801242e:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8012432:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	@ 0xa14
 8012436:	7042      	strb	r2, [r0, #1]
 8012438:	0e1a      	lsrs	r2, r3, #24
 801243a:	7082      	strb	r2, [r0, #2]
 801243c:	0c1a      	lsrs	r2, r3, #16
 801243e:	2102      	movs	r1, #2
 8012440:	70c2      	strb	r2, [r0, #3]
 8012442:	0a1a      	lsrs	r2, r3, #8
 8012444:	7001      	strb	r1, [r0, #0]
 8012446:	7102      	strb	r2, [r0, #4]
 8012448:	7143      	strb	r3, [r0, #5]
 801244a:	4770      	bx	lr
 801244c:	1fff7000 	svcne	0x00ff7000

08012450 <TIMER6_IRQHandler>:
 8012450:	4b06      	ldr	r3, [pc, #24]	@ (801246c <TIMER6_IRQHandler+0x1c>)
 8012452:	f8d3 3410 	ldr.w	r3, [r3, #1040]	@ 0x410
 8012456:	07da      	lsls	r2, r3, #31
 8012458:	bf41      	itttt	mi
 801245a:	4905      	ldrmi	r1, [pc, #20]	@ (8012470 <TIMER6_IRQHandler+0x20>)
 801245c:	684a      	ldrmi	r2, [r1, #4]
 801245e:	3201      	addmi	r2, #1
 8012460:	604a      	strmi	r2, [r1, #4]
 8012462:	4a02      	ldr	r2, [pc, #8]	@ (801246c <TIMER6_IRQHandler+0x1c>)
 8012464:	43db      	mvns	r3, r3
 8012466:	f8c2 3410 	str.w	r3, [r2, #1040]	@ 0x410
 801246a:	4770      	bx	lr
 801246c:	40001000 	andmi	r1, r0, r0
 8012470:	20004828 	andcs	r4, r0, r8, lsr #16

08012474 <timer6_config()>:
 8012474:	b530      	push	{r4, r5, lr}
 8012476:	4b19      	ldr	r3, [pc, #100]	@ (80124dc <timer6_config()+0x68>)
 8012478:	4c19      	ldr	r4, [pc, #100]	@ (80124e0 <timer6_config()+0x6c>)
 801247a:	b085      	sub	sp, #20
 801247c:	2500      	movs	r5, #0
 801247e:	f241 0005 	movw	r0, #4101	@ 0x1005
 8012482:	605d      	str	r5, [r3, #4]
 8012484:	f7ff fbe8 	bl	8011c58 <rcu_periph_clock_enable>
 8012488:	4620      	mov	r0, r4
 801248a:	f7ff fec1 	bl	8012210 <timer_deinit>
 801248e:	4668      	mov	r0, sp
 8012490:	f7ff ff64 	bl	801235c <timer_struct_para_init>
 8012494:	f645 52bf 	movw	r2, #23999	@ 0x5dbf
 8012498:	f242 730f 	movw	r3, #9999	@ 0x270f
 801249c:	4669      	mov	r1, sp
 801249e:	4620      	mov	r0, r4
 80124a0:	f8ad 2000 	strh.w	r2, [sp]
 80124a4:	9302      	str	r3, [sp, #8]
 80124a6:	f7ff ff61 	bl	801236c <timer_init>
 80124aa:	4629      	mov	r1, r5
 80124ac:	4620      	mov	r0, r4
 80124ae:	f7ff ff96 	bl	80123de <timer_counter_value_config>
 80124b2:	4620      	mov	r0, r4
 80124b4:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80124b8:	f7ff ff97 	bl	80123ea <timer_interrupt_flag_clear>
 80124bc:	2101      	movs	r1, #1
 80124be:	4620      	mov	r0, r4
 80124c0:	f7ff ff8f 	bl	80123e2 <timer_interrupt_enable>
 80124c4:	4b07      	ldr	r3, [pc, #28]	@ (80124e4 <timer6_config()+0x70>)
 80124c6:	22f0      	movs	r2, #240	@ 0xf0
 80124c8:	f883 2337 	strb.w	r2, [r3, #823]	@ 0x337
 80124cc:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80124d0:	605a      	str	r2, [r3, #4]
 80124d2:	4620      	mov	r0, r4
 80124d4:	f7ff ff7e 	bl	80123d4 <timer_enable>
 80124d8:	b005      	add	sp, #20
 80124da:	bd30      	pop	{r4, r5, pc}
 80124dc:	20004828 	andcs	r4, r0, r8, lsr #16
 80124e0:	40001400 	andmi	r1, r0, r0, lsl #8
 80124e4:	e000e100 	and	lr, r0, r0, lsl #2

080124e8 <udelay_init()>:
 80124e8:	4a07      	ldr	r2, [pc, #28]	@ (8012508 <udelay_init()+0x20>)
 80124ea:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 80124ee:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80124f2:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
 80124f6:	4b05      	ldr	r3, [pc, #20]	@ (801250c <udelay_init()+0x24>)
 80124f8:	2200      	movs	r2, #0
 80124fa:	605a      	str	r2, [r3, #4]
 80124fc:	681a      	ldr	r2, [r3, #0]
 80124fe:	f042 0201 	orr.w	r2, r2, #1
 8012502:	601a      	str	r2, [r3, #0]
 8012504:	4770      	bx	lr
 8012506:	bf00      	nop
 8012508:	e000ed00 	and	lr, r0, r0, lsl #26
 801250c:	e0001000 	and	r1, r0, r0

08012510 <udelay(unsigned long, unsigned long)>:
 8012510:	23f0      	movs	r3, #240	@ 0xf0
 8012512:	b530      	push	{r4, r5, lr}
 8012514:	4358      	muls	r0, r3
 8012516:	b909      	cbnz	r1, 801251c <udelay(unsigned long, unsigned long)+0xc>
 8012518:	4b08      	ldr	r3, [pc, #32]	@ (801253c <udelay(unsigned long, unsigned long)+0x2c>)
 801251a:	6859      	ldr	r1, [r3, #4]
 801251c:	4c07      	ldr	r4, [pc, #28]	@ (801253c <udelay(unsigned long, unsigned long)+0x2c>)
 801251e:	2300      	movs	r3, #0
 8012520:	6862      	ldr	r2, [r4, #4]
 8012522:	4291      	cmp	r1, r2
 8012524:	d0fc      	beq.n	8012520 <udelay(unsigned long, unsigned long)+0x10>
 8012526:	bf2a      	itet	cs
 8012528:	f102 35ff 	addcs.w	r5, r2, #4294967295	@ 0xffffffff
 801252c:	189b      	addcc	r3, r3, r2
 801252e:	195b      	addcs	r3, r3, r5
 8012530:	1a5b      	subs	r3, r3, r1
 8012532:	4283      	cmp	r3, r0
 8012534:	d300      	bcc.n	8012538 <udelay(unsigned long, unsigned long)+0x28>
 8012536:	bd30      	pop	{r4, r5, pc}
 8012538:	4611      	mov	r1, r2
 801253a:	e7f1      	b.n	8012520 <udelay(unsigned long, unsigned long)+0x10>
 801253c:	e0001000 	and	r1, r0, r0

08012540 <systick_config>:
 8012540:	4b0c      	ldr	r3, [pc, #48]	@ (8012574 <systick_config+0x34>)
 8012542:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8012546:	681b      	ldr	r3, [r3, #0]
 8012548:	fbb3 f3f2 	udiv	r3, r3, r2
 801254c:	3b01      	subs	r3, #1
 801254e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8012552:	d20d      	bcs.n	8012570 <systick_config+0x30>
 8012554:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8012558:	21f0      	movs	r1, #240	@ 0xf0
 801255a:	6153      	str	r3, [r2, #20]
 801255c:	4b06      	ldr	r3, [pc, #24]	@ (8012578 <systick_config+0x38>)
 801255e:	2000      	movs	r0, #0
 8012560:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8012564:	6190      	str	r0, [r2, #24]
 8012566:	2007      	movs	r0, #7
 8012568:	6110      	str	r0, [r2, #16]
 801256a:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 801256e:	4770      	bx	lr
 8012570:	e7fe      	b.n	8012570 <systick_config+0x30>
 8012572:	bf00      	nop
 8012574:	20000000 	andcs	r0, r0, r0
 8012578:	e000ed00 	and	lr, r0, r0, lsl #26

0801257c <SysTick_Handler>:
 801257c:	4a02      	ldr	r2, [pc, #8]	@ (8012588 <SysTick_Handler+0xc>)
 801257e:	6813      	ldr	r3, [r2, #0]
 8012580:	3301      	adds	r3, #1
 8012582:	6013      	str	r3, [r2, #0]
 8012584:	4770      	bx	lr
 8012586:	bf00      	nop
 8012588:	20004830 	andcs	r4, r0, r0, lsr r8

0801258c <gd32_adc_init()>:
 801258c:	b510      	push	{r4, lr}
 801258e:	f241 1008 	movw	r0, #4360	@ 0x1108
 8012592:	4c24      	ldr	r4, [pc, #144]	@ (8012624 <gd32_adc_init()+0x98>)
 8012594:	f7ff fb60 	bl	8011c58 <rcu_periph_clock_enable>
 8012598:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 801259c:	f000 f9f6 	bl	801298c <adc_clock_config>
 80125a0:	4620      	mov	r0, r4
 80125a2:	2203      	movs	r2, #3
 80125a4:	2102      	movs	r1, #2
 80125a6:	f000 fa73 	bl	8012a90 <adc_channel_length_config>
 80125aa:	4620      	mov	r0, r4
 80125ac:	2306      	movs	r3, #6
 80125ae:	2210      	movs	r2, #16
 80125b0:	2100      	movs	r1, #0
 80125b2:	f000 fa8a 	bl	8012aca <adc_inserted_channel_config>
 80125b6:	4620      	mov	r0, r4
 80125b8:	2306      	movs	r3, #6
 80125ba:	2211      	movs	r2, #17
 80125bc:	2101      	movs	r1, #1
 80125be:	f000 fa84 	bl	8012aca <adc_inserted_channel_config>
 80125c2:	2306      	movs	r3, #6
 80125c4:	4620      	mov	r0, r4
 80125c6:	2212      	movs	r2, #18
 80125c8:	2102      	movs	r1, #2
 80125ca:	f000 fa7e 	bl	8012aca <adc_inserted_channel_config>
 80125ce:	2200      	movs	r2, #0
 80125d0:	4620      	mov	r0, r4
 80125d2:	2102      	movs	r1, #2
 80125d4:	f000 faa9 	bl	8012b2a <adc_external_trigger_config>
 80125d8:	4620      	mov	r0, r4
 80125da:	2100      	movs	r1, #0
 80125dc:	f000 fa0e 	bl	80129fc <adc_data_alignment_config>
 80125e0:	2201      	movs	r2, #1
 80125e2:	4620      	mov	r0, r4
 80125e4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80125e8:	f000 f9e0 	bl	80129ac <adc_special_function_config>
 80125ec:	2101      	movs	r1, #1
 80125ee:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 80125f2:	f000 fa25 	bl	8012a40 <adc_channel_16_to_18>
 80125f6:	2101      	movs	r1, #1
 80125f8:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 80125fc:	f000 fa20 	bl	8012a40 <adc_channel_16_to_18>
 8012600:	4620      	mov	r0, r4
 8012602:	f000 fa04 	bl	8012a0e <adc_enable>
 8012606:	2100      	movs	r1, #0
 8012608:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 801260c:	f7ff ff80 	bl	8012510 <udelay(unsigned long, unsigned long)>
 8012610:	4620      	mov	r0, r4
 8012612:	f000 fa04 	bl	8012a1e <adc_calibration_enable>
 8012616:	4620      	mov	r0, r4
 8012618:	2102      	movs	r1, #2
 801261a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801261e:	f000 ba9a 	b.w	8012b56 <adc_software_trigger_enable>
 8012622:	bf00      	nop
 8012624:	40012000 	andmi	r2, r1, r0

08012628 <send_stop() [clone .isra.0]>:
 8012628:	b508      	push	{r3, lr}
 801262a:	4806      	ldr	r0, [pc, #24]	@ (8012644 <send_stop() [clone .isra.0]+0x1c>)
 801262c:	f000 fb22 	bl	8012c74 <i2c_stop_on_bus>
 8012630:	4905      	ldr	r1, [pc, #20]	@ (8012648 <send_stop() [clone .isra.0]+0x20>)
 8012632:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8012636:	f8d1 2400 	ldr.w	r2, [r1, #1024]	@ 0x400
 801263a:	0592      	lsls	r2, r2, #22
 801263c:	d501      	bpl.n	8012642 <send_stop() [clone .isra.0]+0x1a>
 801263e:	3b01      	subs	r3, #1
 8012640:	d1f9      	bne.n	8012636 <send_stop() [clone .isra.0]+0xe>
 8012642:	bd08      	pop	{r3, pc}
 8012644:	40005400 	andmi	r5, r0, r0, lsl #8
 8012648:	40005000 	andmi	r5, r0, r0

0801264c <gd32_i2c_begin>:
 801264c:	b510      	push	{r4, lr}
 801264e:	f241 0015 	movw	r0, #4117	@ 0x1015
 8012652:	4c22      	ldr	r4, [pc, #136]	@ (80126dc <gd32_i2c_begin+0x90>)
 8012654:	f7ff fb00 	bl	8011c58 <rcu_periph_clock_enable>
 8012658:	f640 4001 	movw	r0, #3073	@ 0xc01
 801265c:	f7ff fafc 	bl	8011c58 <rcu_periph_clock_enable>
 8012660:	f640 4001 	movw	r0, #3073	@ 0xc01
 8012664:	f7ff faf8 	bl	8011c58 <rcu_periph_clock_enable>
 8012668:	4620      	mov	r0, r4
 801266a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801266e:	2104      	movs	r1, #4
 8012670:	f7ff faae 	bl	8011bd0 <gpio_af_set>
 8012674:	4620      	mov	r0, r4
 8012676:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801267a:	2201      	movs	r2, #1
 801267c:	2102      	movs	r1, #2
 801267e:	f7ff fa69 	bl	8011b54 <gpio_mode_set>
 8012682:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012686:	4620      	mov	r0, r4
 8012688:	2202      	movs	r2, #2
 801268a:	2101      	movs	r1, #1
 801268c:	f7ff fa84 	bl	8011b98 <gpio_output_options_set>
 8012690:	4620      	mov	r0, r4
 8012692:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8012696:	2104      	movs	r1, #4
 8012698:	f7ff fa9a 	bl	8011bd0 <gpio_af_set>
 801269c:	4620      	mov	r0, r4
 801269e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80126a2:	2201      	movs	r2, #1
 80126a4:	2102      	movs	r1, #2
 80126a6:	f7ff fa55 	bl	8011b54 <gpio_mode_set>
 80126aa:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80126ae:	4620      	mov	r0, r4
 80126b0:	2202      	movs	r2, #2
 80126b2:	f5a4 34d8 	sub.w	r4, r4, #110592	@ 0x1b000
 80126b6:	2101      	movs	r1, #1
 80126b8:	f7ff fa6e 	bl	8011b98 <gpio_output_options_set>
 80126bc:	4908      	ldr	r1, [pc, #32]	@ (80126e0 <gd32_i2c_begin+0x94>)
 80126be:	4620      	mov	r0, r4
 80126c0:	2200      	movs	r2, #0
 80126c2:	f000 fa57 	bl	8012b74 <i2c_clock_config>
 80126c6:	4620      	mov	r0, r4
 80126c8:	f000 faca 	bl	8012c60 <i2c_enable>
 80126cc:	4620      	mov	r0, r4
 80126ce:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80126d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126d6:	f000 baaf 	b.w	8012c38 <i2c_ack_config>
 80126da:	bf00      	nop
 80126dc:	40020400 	andmi	r0, r2, r0, lsl #8
 80126e0:	00061a80 	andeq	r1, r6, r0, lsl #21

080126e4 <gd32_i2c_set_baudrate>:
 80126e4:	4601      	mov	r1, r0
 80126e6:	2200      	movs	r2, #0
 80126e8:	4801      	ldr	r0, [pc, #4]	@ (80126f0 <gd32_i2c_set_baudrate+0xc>)
 80126ea:	f000 ba43 	b.w	8012b74 <i2c_clock_config>
 80126ee:	bf00      	nop
 80126f0:	40005400 	andmi	r5, r0, r0, lsl #8

080126f4 <gd32_i2c_set_address>:
 80126f4:	4b01      	ldr	r3, [pc, #4]	@ (80126fc <gd32_i2c_set_address+0x8>)
 80126f6:	0040      	lsls	r0, r0, #1
 80126f8:	7018      	strb	r0, [r3, #0]
 80126fa:	4770      	bx	lr
 80126fc:	20004834 	andcs	r4, r0, r4, lsr r8

08012700 <gd32_i2c_write>:
 8012700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012702:	4f30      	ldr	r7, [pc, #192]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012704:	4604      	mov	r4, r0
 8012706:	460d      	mov	r5, r1
 8012708:	f640 76ff 	movw	r6, #4095	@ 0xfff
 801270c:	f240 6101 	movw	r1, #1537	@ 0x601
 8012710:	4638      	mov	r0, r7
 8012712:	f000 fab9 	bl	8012c88 <i2c_flag_get>
 8012716:	bb90      	cbnz	r0, 801277e <gd32_i2c_write+0x7e>
 8012718:	482a      	ldr	r0, [pc, #168]	@ (80127c4 <gd32_i2c_write+0xc4>)
 801271a:	4f2a      	ldr	r7, [pc, #168]	@ (80127c4 <gd32_i2c_write+0xc4>)
 801271c:	f000 faa5 	bl	8012c6a <i2c_start_on_bus>
 8012720:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8012724:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8012728:	4638      	mov	r0, r7
 801272a:	f000 faad 	bl	8012c88 <i2c_flag_get>
 801272e:	b370      	cbz	r0, 801278e <gd32_i2c_write+0x8e>
 8012730:	4b25      	ldr	r3, [pc, #148]	@ (80127c8 <gd32_i2c_write+0xc8>)
 8012732:	4824      	ldr	r0, [pc, #144]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012734:	7819      	ldrb	r1, [r3, #0]
 8012736:	4f23      	ldr	r7, [pc, #140]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012738:	f06f 0201 	mvn.w	r2, #1
 801273c:	f000 fa88 	bl	8012c50 <i2c_master_addressing>
 8012740:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8012744:	f240 5101 	movw	r1, #1281	@ 0x501
 8012748:	4638      	mov	r0, r7
 801274a:	f000 fa9d 	bl	8012c88 <i2c_flag_get>
 801274e:	b308      	cbz	r0, 8012794 <gd32_i2c_write+0x94>
 8012750:	481c      	ldr	r0, [pc, #112]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012752:	4f1c      	ldr	r7, [pc, #112]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012754:	f240 5101 	movw	r1, #1281	@ 0x501
 8012758:	f000 fa9e 	bl	8012c98 <i2c_flag_clear>
 801275c:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8012760:	f240 5107 	movw	r1, #1287	@ 0x507
 8012764:	4638      	mov	r0, r7
 8012766:	f000 fa8f 	bl	8012c88 <i2c_flag_get>
 801276a:	2801      	cmp	r0, #1
 801276c:	d115      	bne.n	801279a <gd32_i2c_write+0x9a>
 801276e:	4f15      	ldr	r7, [pc, #84]	@ (80127c4 <gd32_i2c_write+0xc4>)
 8012770:	4425      	add	r5, r4
 8012772:	42ac      	cmp	r4, r5
 8012774:	d114      	bne.n	80127a0 <gd32_i2c_write+0xa0>
 8012776:	f7ff ff57 	bl	8012628 <send_stop() [clone .isra.0]>
 801277a:	2000      	movs	r0, #0
 801277c:	e005      	b.n	801278a <gd32_i2c_write+0x8a>
 801277e:	3e01      	subs	r6, #1
 8012780:	d1c4      	bne.n	801270c <gd32_i2c_write+0xc>
 8012782:	f7ff ff51 	bl	8012628 <send_stop() [clone .isra.0]>
 8012786:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801278a:	4240      	negs	r0, r0
 801278c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801278e:	3e01      	subs	r6, #1
 8012790:	d1c8      	bne.n	8012724 <gd32_i2c_write+0x24>
 8012792:	e7f6      	b.n	8012782 <gd32_i2c_write+0x82>
 8012794:	3e01      	subs	r6, #1
 8012796:	d1d5      	bne.n	8012744 <gd32_i2c_write+0x44>
 8012798:	e7f3      	b.n	8012782 <gd32_i2c_write+0x82>
 801279a:	3e01      	subs	r6, #1
 801279c:	d1e0      	bne.n	8012760 <gd32_i2c_write+0x60>
 801279e:	e7f0      	b.n	8012782 <gd32_i2c_write+0x82>
 80127a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80127a4:	4638      	mov	r0, r7
 80127a6:	f000 fa6a 	bl	8012c7e <i2c_data_transmit>
 80127aa:	f640 76ff 	movw	r6, #4095	@ 0xfff
 80127ae:	f240 5102 	movw	r1, #1282	@ 0x502
 80127b2:	4638      	mov	r0, r7
 80127b4:	f000 fa68 	bl	8012c88 <i2c_flag_get>
 80127b8:	2800      	cmp	r0, #0
 80127ba:	d1da      	bne.n	8012772 <gd32_i2c_write+0x72>
 80127bc:	3e01      	subs	r6, #1
 80127be:	d1f6      	bne.n	80127ae <gd32_i2c_write+0xae>
 80127c0:	e7df      	b.n	8012782 <gd32_i2c_write+0x82>
 80127c2:	bf00      	nop
 80127c4:	40005400 	andmi	r5, r0, r0, lsl #8
 80127c8:	20004834 	andcs	r4, r0, r4, lsr r8

080127cc <gd32_i2c_read>:
 80127cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80127d0:	4f4e      	ldr	r7, [pc, #312]	@ (801290c <gd32_i2c_read+0x140>)
 80127d2:	4680      	mov	r8, r0
 80127d4:	460c      	mov	r4, r1
 80127d6:	f640 75ff 	movw	r5, #4095	@ 0xfff
 80127da:	f240 6101 	movw	r1, #1537	@ 0x601
 80127de:	4638      	mov	r0, r7
 80127e0:	f000 fa52 	bl	8012c88 <i2c_flag_get>
 80127e4:	4606      	mov	r6, r0
 80127e6:	bb10      	cbnz	r0, 801282e <gd32_i2c_read+0x62>
 80127e8:	2c02      	cmp	r4, #2
 80127ea:	d104      	bne.n	80127f6 <gd32_i2c_read+0x2a>
 80127ec:	4847      	ldr	r0, [pc, #284]	@ (801290c <gd32_i2c_read+0x140>)
 80127ee:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80127f2:	f000 fa27 	bl	8012c44 <i2c_ackpos_config>
 80127f6:	4845      	ldr	r0, [pc, #276]	@ (801290c <gd32_i2c_read+0x140>)
 80127f8:	4f44      	ldr	r7, [pc, #272]	@ (801290c <gd32_i2c_read+0x140>)
 80127fa:	f000 fa36 	bl	8012c6a <i2c_start_on_bus>
 80127fe:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8012802:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8012806:	4638      	mov	r0, r7
 8012808:	f000 fa3e 	bl	8012c88 <i2c_flag_get>
 801280c:	b1b8      	cbz	r0, 801283e <gd32_i2c_read+0x72>
 801280e:	4b40      	ldr	r3, [pc, #256]	@ (8012910 <gd32_i2c_read+0x144>)
 8012810:	483e      	ldr	r0, [pc, #248]	@ (801290c <gd32_i2c_read+0x140>)
 8012812:	7819      	ldrb	r1, [r3, #0]
 8012814:	2201      	movs	r2, #1
 8012816:	f000 fa1b 	bl	8012c50 <i2c_master_addressing>
 801281a:	2c02      	cmp	r4, #2
 801281c:	d803      	bhi.n	8012826 <gd32_i2c_read+0x5a>
 801281e:	483b      	ldr	r0, [pc, #236]	@ (801290c <gd32_i2c_read+0x140>)
 8012820:	2100      	movs	r1, #0
 8012822:	f000 fa09 	bl	8012c38 <i2c_ack_config>
 8012826:	4f39      	ldr	r7, [pc, #228]	@ (801290c <gd32_i2c_read+0x140>)
 8012828:	f640 75ff 	movw	r5, #4095	@ 0xfff
 801282c:	e00c      	b.n	8012848 <gd32_i2c_read+0x7c>
 801282e:	3d01      	subs	r5, #1
 8012830:	d1d3      	bne.n	80127da <gd32_i2c_read+0xe>
 8012832:	f7ff fef9 	bl	8012628 <send_stop() [clone .isra.0]>
 8012836:	2604      	movs	r6, #4
 8012838:	4630      	mov	r0, r6
 801283a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801283e:	3d01      	subs	r5, #1
 8012840:	d1df      	bne.n	8012802 <gd32_i2c_read+0x36>
 8012842:	e7f6      	b.n	8012832 <gd32_i2c_read+0x66>
 8012844:	3d01      	subs	r5, #1
 8012846:	d0f4      	beq.n	8012832 <gd32_i2c_read+0x66>
 8012848:	f240 5101 	movw	r1, #1281	@ 0x501
 801284c:	4638      	mov	r0, r7
 801284e:	f000 fa1b 	bl	8012c88 <i2c_flag_get>
 8012852:	2800      	cmp	r0, #0
 8012854:	d0f6      	beq.n	8012844 <gd32_i2c_read+0x78>
 8012856:	482d      	ldr	r0, [pc, #180]	@ (801290c <gd32_i2c_read+0x140>)
 8012858:	f240 5101 	movw	r1, #1281	@ 0x501
 801285c:	f000 fa1c 	bl	8012c98 <i2c_flag_clear>
 8012860:	2c01      	cmp	r4, #1
 8012862:	d102      	bne.n	801286a <gd32_i2c_read+0x9e>
 8012864:	4829      	ldr	r0, [pc, #164]	@ (801290c <gd32_i2c_read+0x140>)
 8012866:	f000 fa05 	bl	8012c74 <i2c_stop_on_bus>
 801286a:	4d28      	ldr	r5, [pc, #160]	@ (801290c <gd32_i2c_read+0x140>)
 801286c:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8012870:	e022      	b.n	80128b8 <gd32_i2c_read+0xec>
 8012872:	2c03      	cmp	r4, #3
 8012874:	d134      	bne.n	80128e0 <gd32_i2c_read+0x114>
 8012876:	f640 79ff 	movw	r9, #4095	@ 0xfff
 801287a:	e002      	b.n	8012882 <gd32_i2c_read+0xb6>
 801287c:	f1b9 0901 	subs.w	r9, r9, #1
 8012880:	d0d7      	beq.n	8012832 <gd32_i2c_read+0x66>
 8012882:	f240 5102 	movw	r1, #1282	@ 0x502
 8012886:	4628      	mov	r0, r5
 8012888:	f000 f9fe 	bl	8012c88 <i2c_flag_get>
 801288c:	2800      	cmp	r0, #0
 801288e:	d0f5      	beq.n	801287c <gd32_i2c_read+0xb0>
 8012890:	2100      	movs	r1, #0
 8012892:	4628      	mov	r0, r5
 8012894:	f000 f9d0 	bl	8012c38 <i2c_ack_config>
 8012898:	f240 5106 	movw	r1, #1286	@ 0x506
 801289c:	4628      	mov	r0, r5
 801289e:	f000 f9f3 	bl	8012c88 <i2c_flag_get>
 80128a2:	b138      	cbz	r0, 80128b4 <gd32_i2c_read+0xe8>
 80128a4:	4628      	mov	r0, r5
 80128a6:	f000 f9ec 	bl	8012c82 <i2c_data_receive>
 80128aa:	f808 0b01 	strb.w	r0, [r8], #1
 80128ae:	3c01      	subs	r4, #1
 80128b0:	f640 77ff 	movw	r7, #4095	@ 0xfff
 80128b4:	3f01      	subs	r7, #1
 80128b6:	d0bc      	beq.n	8012832 <gd32_i2c_read+0x66>
 80128b8:	2c00      	cmp	r4, #0
 80128ba:	d1da      	bne.n	8012872 <gd32_i2c_read+0xa6>
 80128bc:	4a15      	ldr	r2, [pc, #84]	@ (8012914 <gd32_i2c_read+0x148>)
 80128be:	f640 73ff 	movw	r3, #4095	@ 0xfff
 80128c2:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 80128c6:	f414 7400 	ands.w	r4, r4, #512	@ 0x200
 80128ca:	d11c      	bne.n	8012906 <gd32_i2c_read+0x13a>
 80128cc:	480f      	ldr	r0, [pc, #60]	@ (801290c <gd32_i2c_read+0x140>)
 80128ce:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80128d2:	f000 f9b1 	bl	8012c38 <i2c_ack_config>
 80128d6:	480d      	ldr	r0, [pc, #52]	@ (801290c <gd32_i2c_read+0x140>)
 80128d8:	4621      	mov	r1, r4
 80128da:	f000 f9b3 	bl	8012c44 <i2c_ackpos_config>
 80128de:	e7ab      	b.n	8012838 <gd32_i2c_read+0x6c>
 80128e0:	2c02      	cmp	r4, #2
 80128e2:	d1d9      	bne.n	8012898 <gd32_i2c_read+0xcc>
 80128e4:	f640 79ff 	movw	r9, #4095	@ 0xfff
 80128e8:	e002      	b.n	80128f0 <gd32_i2c_read+0x124>
 80128ea:	f1b9 0901 	subs.w	r9, r9, #1
 80128ee:	d0a0      	beq.n	8012832 <gd32_i2c_read+0x66>
 80128f0:	f240 5102 	movw	r1, #1282	@ 0x502
 80128f4:	4628      	mov	r0, r5
 80128f6:	f000 f9c7 	bl	8012c88 <i2c_flag_get>
 80128fa:	2800      	cmp	r0, #0
 80128fc:	d0f5      	beq.n	80128ea <gd32_i2c_read+0x11e>
 80128fe:	4628      	mov	r0, r5
 8012900:	f000 f9b8 	bl	8012c74 <i2c_stop_on_bus>
 8012904:	e7c8      	b.n	8012898 <gd32_i2c_read+0xcc>
 8012906:	3b01      	subs	r3, #1
 8012908:	d1db      	bne.n	80128c2 <gd32_i2c_read+0xf6>
 801290a:	e794      	b.n	8012836 <gd32_i2c_read+0x6a>
 801290c:	40005400 	andmi	r5, r0, r0, lsl #8
 8012910:	20004834 	andcs	r4, r0, r4, lsr r8
 8012914:	40005000 	andmi	r5, r0, r0

08012918 <uart0_init>:
 8012918:	b507      	push	{r0, r1, r2, lr}
 801291a:	2301      	movs	r3, #1
 801291c:	9300      	str	r3, [sp, #0]
 801291e:	4805      	ldr	r0, [pc, #20]	@ (8012934 <uart0_init+0x1c>)
 8012920:	2300      	movs	r3, #0
 8012922:	2208      	movs	r2, #8
 8012924:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8012928:	f000 faae 	bl	8012e88 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 801292c:	b003      	add	sp, #12
 801292e:	f85d fb04 	ldr.w	pc, [sp], #4
 8012932:	bf00      	nop
 8012934:	40011000 	andmi	r1, r1, r0

08012938 <uart0_putc>:
 8012938:	280a      	cmp	r0, #10
 801293a:	b570      	push	{r4, r5, r6, lr}
 801293c:	4d0a      	ldr	r5, [pc, #40]	@ (8012968 <uart0_putc+0x30>)
 801293e:	4604      	mov	r4, r0
 8012940:	d107      	bne.n	8012952 <uart0_putc+0x1a>
 8012942:	2107      	movs	r1, #7
 8012944:	4628      	mov	r0, r5
 8012946:	f000 fa97 	bl	8012e78 <usart_flag_get>
 801294a:	2800      	cmp	r0, #0
 801294c:	d0f9      	beq.n	8012942 <uart0_putc+0xa>
 801294e:	230d      	movs	r3, #13
 8012950:	606b      	str	r3, [r5, #4]
 8012952:	4e05      	ldr	r6, [pc, #20]	@ (8012968 <uart0_putc+0x30>)
 8012954:	2107      	movs	r1, #7
 8012956:	4630      	mov	r0, r6
 8012958:	f000 fa8e 	bl	8012e78 <usart_flag_get>
 801295c:	2800      	cmp	r0, #0
 801295e:	d0f9      	beq.n	8012954 <uart0_putc+0x1c>
 8012960:	b2e4      	uxtb	r4, r4
 8012962:	606c      	str	r4, [r5, #4]
 8012964:	bd70      	pop	{r4, r5, r6, pc}
 8012966:	bf00      	nop
 8012968:	40011000 	andmi	r1, r1, r0

0801296c <uart0_puts>:
 801296c:	b510      	push	{r4, lr}
 801296e:	1e44      	subs	r4, r0, #1
 8012970:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012974:	b903      	cbnz	r3, 8012978 <uart0_puts+0xc>
 8012976:	bd10      	pop	{r4, pc}
 8012978:	2b0a      	cmp	r3, #10
 801297a:	d102      	bne.n	8012982 <uart0_puts+0x16>
 801297c:	200d      	movs	r0, #13
 801297e:	f7ff ffdb 	bl	8012938 <uart0_putc>
 8012982:	7820      	ldrb	r0, [r4, #0]
 8012984:	f7ff ffd8 	bl	8012938 <uart0_putc>
 8012988:	e7f2      	b.n	8012970 <uart0_puts+0x4>
	...

0801298c <adc_clock_config>:
 801298c:	4b06      	ldr	r3, [pc, #24]	@ (80129a8 <adc_clock_config+0x1c>)
 801298e:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8012992:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8012996:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 801299a:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 801299e:	4302      	orrs	r2, r0
 80129a0:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 80129a4:	4770      	bx	lr
 80129a6:	bf00      	nop
 80129a8:	40012000 	andmi	r2, r1, r0

080129ac <adc_special_function_config>:
 80129ac:	b510      	push	{r4, lr}
 80129ae:	f401 7380 	and.w	r3, r1, #256	@ 0x100
 80129b2:	f401 6480 	and.w	r4, r1, #1024	@ 0x400
 80129b6:	f001 0102 	and.w	r1, r1, #2
 80129ba:	b17a      	cbz	r2, 80129dc <adc_special_function_config+0x30>
 80129bc:	b11b      	cbz	r3, 80129c6 <adc_special_function_config+0x1a>
 80129be:	6843      	ldr	r3, [r0, #4]
 80129c0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80129c4:	6043      	str	r3, [r0, #4]
 80129c6:	b11c      	cbz	r4, 80129d0 <adc_special_function_config+0x24>
 80129c8:	6843      	ldr	r3, [r0, #4]
 80129ca:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80129ce:	6043      	str	r3, [r0, #4]
 80129d0:	b119      	cbz	r1, 80129da <adc_special_function_config+0x2e>
 80129d2:	6883      	ldr	r3, [r0, #8]
 80129d4:	f043 0302 	orr.w	r3, r3, #2
 80129d8:	6083      	str	r3, [r0, #8]
 80129da:	bd10      	pop	{r4, pc}
 80129dc:	b11b      	cbz	r3, 80129e6 <adc_special_function_config+0x3a>
 80129de:	6843      	ldr	r3, [r0, #4]
 80129e0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80129e4:	6043      	str	r3, [r0, #4]
 80129e6:	b11c      	cbz	r4, 80129f0 <adc_special_function_config+0x44>
 80129e8:	6843      	ldr	r3, [r0, #4]
 80129ea:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80129ee:	6043      	str	r3, [r0, #4]
 80129f0:	2900      	cmp	r1, #0
 80129f2:	d0f2      	beq.n	80129da <adc_special_function_config+0x2e>
 80129f4:	6883      	ldr	r3, [r0, #8]
 80129f6:	f023 0302 	bic.w	r3, r3, #2
 80129fa:	e7ed      	b.n	80129d8 <adc_special_function_config+0x2c>

080129fc <adc_data_alignment_config>:
 80129fc:	6883      	ldr	r3, [r0, #8]
 80129fe:	b119      	cbz	r1, 8012a08 <adc_data_alignment_config+0xc>
 8012a00:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8012a04:	6083      	str	r3, [r0, #8]
 8012a06:	4770      	bx	lr
 8012a08:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8012a0c:	e7fa      	b.n	8012a04 <adc_data_alignment_config+0x8>

08012a0e <adc_enable>:
 8012a0e:	6883      	ldr	r3, [r0, #8]
 8012a10:	07db      	lsls	r3, r3, #31
 8012a12:	bf5e      	ittt	pl
 8012a14:	6883      	ldrpl	r3, [r0, #8]
 8012a16:	f043 0301 	orrpl.w	r3, r3, #1
 8012a1a:	6083      	strpl	r3, [r0, #8]
 8012a1c:	4770      	bx	lr

08012a1e <adc_calibration_enable>:
 8012a1e:	6883      	ldr	r3, [r0, #8]
 8012a20:	f043 0308 	orr.w	r3, r3, #8
 8012a24:	f100 0208 	add.w	r2, r0, #8
 8012a28:	6083      	str	r3, [r0, #8]
 8012a2a:	6813      	ldr	r3, [r2, #0]
 8012a2c:	0719      	lsls	r1, r3, #28
 8012a2e:	d4fc      	bmi.n	8012a2a <adc_calibration_enable+0xc>
 8012a30:	6883      	ldr	r3, [r0, #8]
 8012a32:	f043 0304 	orr.w	r3, r3, #4
 8012a36:	6083      	str	r3, [r0, #8]
 8012a38:	6813      	ldr	r3, [r2, #0]
 8012a3a:	075b      	lsls	r3, r3, #29
 8012a3c:	d4fc      	bmi.n	8012a38 <adc_calibration_enable+0x1a>
 8012a3e:	4770      	bx	lr

08012a40 <adc_channel_16_to_18>:
 8012a40:	f400 0380 	and.w	r3, r0, #4194304	@ 0x400000
 8012a44:	f400 0000 	and.w	r0, r0, #8388608	@ 0x800000
 8012a48:	b181      	cbz	r1, 8012a6c <adc_channel_16_to_18+0x2c>
 8012a4a:	b133      	cbz	r3, 8012a5a <adc_channel_16_to_18+0x1a>
 8012a4c:	4a0f      	ldr	r2, [pc, #60]	@ (8012a8c <adc_channel_16_to_18+0x4c>)
 8012a4e:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8012a52:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8012a56:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8012a5a:	b130      	cbz	r0, 8012a6a <adc_channel_16_to_18+0x2a>
 8012a5c:	4a0b      	ldr	r2, [pc, #44]	@ (8012a8c <adc_channel_16_to_18+0x4c>)
 8012a5e:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8012a62:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8012a66:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8012a6a:	4770      	bx	lr
 8012a6c:	b133      	cbz	r3, 8012a7c <adc_channel_16_to_18+0x3c>
 8012a6e:	4a07      	ldr	r2, [pc, #28]	@ (8012a8c <adc_channel_16_to_18+0x4c>)
 8012a70:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8012a74:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8012a78:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8012a7c:	2800      	cmp	r0, #0
 8012a7e:	d0f4      	beq.n	8012a6a <adc_channel_16_to_18+0x2a>
 8012a80:	4a02      	ldr	r2, [pc, #8]	@ (8012a8c <adc_channel_16_to_18+0x4c>)
 8012a82:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8012a86:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8012a8a:	e7ec      	b.n	8012a66 <adc_channel_16_to_18+0x26>
 8012a8c:	40012000 	andmi	r2, r1, r0

08012a90 <adc_channel_length_config>:
 8012a90:	2901      	cmp	r1, #1
 8012a92:	d002      	beq.n	8012a9a <adc_channel_length_config+0xa>
 8012a94:	2902      	cmp	r1, #2
 8012a96:	d00c      	beq.n	8012ab2 <adc_channel_length_config+0x22>
 8012a98:	4770      	bx	lr
 8012a9a:	3a01      	subs	r2, #1
 8012a9c:	2a0f      	cmp	r2, #15
 8012a9e:	d813      	bhi.n	8012ac8 <adc_channel_length_config+0x38>
 8012aa0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012aa2:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8012aa6:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8012aa8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012aaa:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8012aae:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8012ab0:	4770      	bx	lr
 8012ab2:	3a01      	subs	r2, #1
 8012ab4:	2a03      	cmp	r2, #3
 8012ab6:	d807      	bhi.n	8012ac8 <adc_channel_length_config+0x38>
 8012ab8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012aba:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8012abe:	6383      	str	r3, [r0, #56]	@ 0x38
 8012ac0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012ac2:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8012ac6:	6383      	str	r3, [r0, #56]	@ 0x38
 8012ac8:	4770      	bx	lr

08012aca <adc_inserted_channel_config>:
 8012aca:	2903      	cmp	r1, #3
 8012acc:	b530      	push	{r4, r5, lr}
 8012ace:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8012ad0:	d80f      	bhi.n	8012af2 <adc_inserted_channel_config+0x28>
 8012ad2:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8012ad6:	1a61      	subs	r1, r4, r1
 8012ad8:	f06f 0404 	mvn.w	r4, #4
 8012adc:	4361      	muls	r1, r4
 8012ade:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8012ae0:	310f      	adds	r1, #15
 8012ae2:	241f      	movs	r4, #31
 8012ae4:	408c      	lsls	r4, r1
 8012ae6:	ea25 0404 	bic.w	r4, r5, r4
 8012aea:	fa02 f101 	lsl.w	r1, r2, r1
 8012aee:	4321      	orrs	r1, r4
 8012af0:	6381      	str	r1, [r0, #56]	@ 0x38
 8012af2:	2a09      	cmp	r2, #9
 8012af4:	d80b      	bhi.n	8012b0e <adc_inserted_channel_config+0x44>
 8012af6:	6901      	ldr	r1, [r0, #16]
 8012af8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012afc:	2407      	movs	r4, #7
 8012afe:	4094      	lsls	r4, r2
 8012b00:	ea21 0104 	bic.w	r1, r1, r4
 8012b04:	fa03 f202 	lsl.w	r2, r3, r2
 8012b08:	430a      	orrs	r2, r1
 8012b0a:	6102      	str	r2, [r0, #16]
 8012b0c:	bd30      	pop	{r4, r5, pc}
 8012b0e:	2a12      	cmp	r2, #18
 8012b10:	d8fc      	bhi.n	8012b0c <adc_inserted_channel_config+0x42>
 8012b12:	3a0a      	subs	r2, #10
 8012b14:	68c1      	ldr	r1, [r0, #12]
 8012b16:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012b1a:	2407      	movs	r4, #7
 8012b1c:	4094      	lsls	r4, r2
 8012b1e:	ea21 0104 	bic.w	r1, r1, r4
 8012b22:	4093      	lsls	r3, r2
 8012b24:	430b      	orrs	r3, r1
 8012b26:	60c3      	str	r3, [r0, #12]
 8012b28:	e7f0      	b.n	8012b0c <adc_inserted_channel_config+0x42>

08012b2a <adc_external_trigger_config>:
 8012b2a:	2901      	cmp	r1, #1
 8012b2c:	d002      	beq.n	8012b34 <adc_external_trigger_config+0xa>
 8012b2e:	2902      	cmp	r1, #2
 8012b30:	d009      	beq.n	8012b46 <adc_external_trigger_config+0x1c>
 8012b32:	4770      	bx	lr
 8012b34:	6883      	ldr	r3, [r0, #8]
 8012b36:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8012b3a:	6083      	str	r3, [r0, #8]
 8012b3c:	6883      	ldr	r3, [r0, #8]
 8012b3e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8012b42:	6083      	str	r3, [r0, #8]
 8012b44:	4770      	bx	lr
 8012b46:	6883      	ldr	r3, [r0, #8]
 8012b48:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8012b4c:	6083      	str	r3, [r0, #8]
 8012b4e:	6883      	ldr	r3, [r0, #8]
 8012b50:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8012b54:	e7f5      	b.n	8012b42 <adc_external_trigger_config+0x18>

08012b56 <adc_software_trigger_enable>:
 8012b56:	2901      	cmp	r1, #1
 8012b58:	d002      	beq.n	8012b60 <adc_software_trigger_enable+0xa>
 8012b5a:	2902      	cmp	r1, #2
 8012b5c:	d005      	beq.n	8012b6a <adc_software_trigger_enable+0x14>
 8012b5e:	4770      	bx	lr
 8012b60:	6883      	ldr	r3, [r0, #8]
 8012b62:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012b66:	6083      	str	r3, [r0, #8]
 8012b68:	4770      	bx	lr
 8012b6a:	6883      	ldr	r3, [r0, #8]
 8012b6c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8012b70:	e7f9      	b.n	8012b66 <adc_software_trigger_enable+0x10>
	...

08012b74 <i2c_clock_config>:
 8012b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b76:	4605      	mov	r5, r0
 8012b78:	2002      	movs	r0, #2
 8012b7a:	460c      	mov	r4, r1
 8012b7c:	4617      	mov	r7, r2
 8012b7e:	f7ff f8b5 	bl	8011cec <rcu_clock_freq_get>
 8012b82:	4a29      	ldr	r2, [pc, #164]	@ (8012c28 <i2c_clock_config+0xb4>)
 8012b84:	686e      	ldr	r6, [r5, #4]
 8012b86:	4603      	mov	r3, r0
 8012b88:	4828      	ldr	r0, [pc, #160]	@ (8012c2c <i2c_clock_config+0xb8>)
 8012b8a:	fbb3 f0f0 	udiv	r0, r3, r0
 8012b8e:	4293      	cmp	r3, r2
 8012b90:	bf34      	ite	cc
 8012b92:	4601      	movcc	r1, r0
 8012b94:	213c      	movcs	r1, #60	@ 0x3c
 8012b96:	4a26      	ldr	r2, [pc, #152]	@ (8012c30 <i2c_clock_config+0xbc>)
 8012b98:	f026 063f 	bic.w	r6, r6, #63	@ 0x3f
 8012b9c:	430e      	orrs	r6, r1
 8012b9e:	4294      	cmp	r4, r2
 8012ba0:	606e      	str	r6, [r5, #4]
 8012ba2:	d816      	bhi.n	8012bd2 <i2c_clock_config+0x5e>
 8012ba4:	3001      	adds	r0, #1
 8012ba6:	283b      	cmp	r0, #59	@ 0x3b
 8012ba8:	d90d      	bls.n	8012bc6 <i2c_clock_config+0x52>
 8012baa:	223c      	movs	r2, #60	@ 0x3c
 8012bac:	622a      	str	r2, [r5, #32]
 8012bae:	0064      	lsls	r4, r4, #1
 8012bb0:	fbb3 f4f4 	udiv	r4, r3, r4
 8012bb4:	2c04      	cmp	r4, #4
 8012bb6:	69ea      	ldr	r2, [r5, #28]
 8012bb8:	bf38      	it	cc
 8012bba:	2404      	movcc	r4, #4
 8012bbc:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8012bc0:	4314      	orrs	r4, r2
 8012bc2:	61ec      	str	r4, [r5, #28]
 8012bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012bc6:	2802      	cmp	r0, #2
 8012bc8:	d801      	bhi.n	8012bce <i2c_clock_config+0x5a>
 8012bca:	2202      	movs	r2, #2
 8012bcc:	e7ee      	b.n	8012bac <i2c_clock_config+0x38>
 8012bce:	6228      	str	r0, [r5, #32]
 8012bd0:	e7ed      	b.n	8012bae <i2c_clock_config+0x3a>
 8012bd2:	4a18      	ldr	r2, [pc, #96]	@ (8012c34 <i2c_clock_config+0xc0>)
 8012bd4:	4294      	cmp	r4, r2
 8012bd6:	d8f5      	bhi.n	8012bc4 <i2c_clock_config+0x50>
 8012bd8:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8012bdc:	4351      	muls	r1, r2
 8012bde:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8012be2:	fbb1 f1f2 	udiv	r1, r1, r2
 8012be6:	3101      	adds	r1, #1
 8012be8:	6229      	str	r1, [r5, #32]
 8012bea:	b9a7      	cbnz	r7, 8012c16 <i2c_clock_config+0xa2>
 8012bec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012bf0:	fbb3 f4f4 	udiv	r4, r3, r4
 8012bf4:	69eb      	ldr	r3, [r5, #28]
 8012bf6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8012bfa:	61eb      	str	r3, [r5, #28]
 8012bfc:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8012c00:	b90b      	cbnz	r3, 8012c06 <i2c_clock_config+0x92>
 8012c02:	f044 0401 	orr.w	r4, r4, #1
 8012c06:	69eb      	ldr	r3, [r5, #28]
 8012c08:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8012c0c:	61eb      	str	r3, [r5, #28]
 8012c0e:	69eb      	ldr	r3, [r5, #28]
 8012c10:	4323      	orrs	r3, r4
 8012c12:	61eb      	str	r3, [r5, #28]
 8012c14:	e7d6      	b.n	8012bc4 <i2c_clock_config+0x50>
 8012c16:	2219      	movs	r2, #25
 8012c18:	4354      	muls	r4, r2
 8012c1a:	fbb3 f4f4 	udiv	r4, r3, r4
 8012c1e:	69eb      	ldr	r3, [r5, #28]
 8012c20:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8012c24:	e7e9      	b.n	8012bfa <i2c_clock_config+0x86>
 8012c26:	bf00      	nop
 8012c28:	03938700 	orrseq	r8, r3, #0, 14
 8012c2c:	000f4240 	andeq	r4, pc, r0, asr #4
 8012c30:	000186a0 	andeq	r8, r1, r0, lsr #13
 8012c34:	00061a80 	andeq	r1, r6, r0, lsl #21

08012c38 <i2c_ack_config>:
 8012c38:	6803      	ldr	r3, [r0, #0]
 8012c3a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8012c3e:	430b      	orrs	r3, r1
 8012c40:	6003      	str	r3, [r0, #0]
 8012c42:	4770      	bx	lr

08012c44 <i2c_ackpos_config>:
 8012c44:	6803      	ldr	r3, [r0, #0]
 8012c46:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8012c4a:	430b      	orrs	r3, r1
 8012c4c:	6003      	str	r3, [r0, #0]
 8012c4e:	4770      	bx	lr

08012c50 <i2c_master_addressing>:
 8012c50:	3202      	adds	r2, #2
 8012c52:	bf0c      	ite	eq
 8012c54:	f021 0101 	biceq.w	r1, r1, #1
 8012c58:	f041 0101 	orrne.w	r1, r1, #1
 8012c5c:	6101      	str	r1, [r0, #16]
 8012c5e:	4770      	bx	lr

08012c60 <i2c_enable>:
 8012c60:	6803      	ldr	r3, [r0, #0]
 8012c62:	f043 0301 	orr.w	r3, r3, #1
 8012c66:	6003      	str	r3, [r0, #0]
 8012c68:	4770      	bx	lr

08012c6a <i2c_start_on_bus>:
 8012c6a:	6803      	ldr	r3, [r0, #0]
 8012c6c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8012c70:	6003      	str	r3, [r0, #0]
 8012c72:	4770      	bx	lr

08012c74 <i2c_stop_on_bus>:
 8012c74:	6803      	ldr	r3, [r0, #0]
 8012c76:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8012c7a:	6003      	str	r3, [r0, #0]
 8012c7c:	4770      	bx	lr

08012c7e <i2c_data_transmit>:
 8012c7e:	6101      	str	r1, [r0, #16]
 8012c80:	4770      	bx	lr

08012c82 <i2c_data_receive>:
 8012c82:	6900      	ldr	r0, [r0, #16]
 8012c84:	b2c0      	uxtb	r0, r0
 8012c86:	4770      	bx	lr

08012c88 <i2c_flag_get>:
 8012c88:	098b      	lsrs	r3, r1, #6
 8012c8a:	f001 011f 	and.w	r1, r1, #31
 8012c8e:	5818      	ldr	r0, [r3, r0]
 8012c90:	40c8      	lsrs	r0, r1
 8012c92:	f000 0001 	and.w	r0, r0, #1
 8012c96:	4770      	bx	lr

08012c98 <i2c_flag_clear>:
 8012c98:	f240 5301 	movw	r3, #1281	@ 0x501
 8012c9c:	4299      	cmp	r1, r3
 8012c9e:	b510      	push	{r4, lr}
 8012ca0:	d102      	bne.n	8012ca8 <i2c_flag_clear+0x10>
 8012ca2:	6943      	ldr	r3, [r0, #20]
 8012ca4:	6983      	ldr	r3, [r0, #24]
 8012ca6:	bd10      	pop	{r4, pc}
 8012ca8:	098c      	lsrs	r4, r1, #6
 8012caa:	2201      	movs	r2, #1
 8012cac:	5823      	ldr	r3, [r4, r0]
 8012cae:	f001 011f 	and.w	r1, r1, #31
 8012cb2:	408a      	lsls	r2, r1
 8012cb4:	ea23 0302 	bic.w	r3, r3, r2
 8012cb8:	5023      	str	r3, [r4, r0]
 8012cba:	e7f4      	b.n	8012ca6 <i2c_flag_clear+0xe>

08012cbc <usart_deinit>:
 8012cbc:	b508      	push	{r3, lr}
 8012cbe:	4b2d      	ldr	r3, [pc, #180]	@ (8012d74 <usart_deinit+0xb8>)
 8012cc0:	4298      	cmp	r0, r3
 8012cc2:	d050      	beq.n	8012d66 <usart_deinit+0xaa>
 8012cc4:	d817      	bhi.n	8012cf6 <usart_deinit+0x3a>
 8012cc6:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8012cca:	4298      	cmp	r0, r3
 8012ccc:	d044      	beq.n	8012d58 <usart_deinit+0x9c>
 8012cce:	d808      	bhi.n	8012ce2 <usart_deinit+0x26>
 8012cd0:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8012cd4:	4298      	cmp	r0, r3
 8012cd6:	d02a      	beq.n	8012d2e <usart_deinit+0x72>
 8012cd8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012cdc:	4298      	cmp	r0, r3
 8012cde:	d02d      	beq.n	8012d3c <usart_deinit+0x80>
 8012ce0:	bd08      	pop	{r3, pc}
 8012ce2:	4b25      	ldr	r3, [pc, #148]	@ (8012d78 <usart_deinit+0xbc>)
 8012ce4:	4298      	cmp	r0, r3
 8012ce6:	d1fb      	bne.n	8012ce0 <usart_deinit+0x24>
 8012ce8:	f640 0014 	movw	r0, #2068	@ 0x814
 8012cec:	f7fe ffcf 	bl	8011c8e <rcu_periph_reset_enable>
 8012cf0:	f640 0014 	movw	r0, #2068	@ 0x814
 8012cf4:	e017      	b.n	8012d26 <usart_deinit+0x6a>
 8012cf6:	4b21      	ldr	r3, [pc, #132]	@ (8012d7c <usart_deinit+0xc0>)
 8012cf8:	4298      	cmp	r0, r3
 8012cfa:	d00e      	beq.n	8012d1a <usart_deinit+0x5e>
 8012cfc:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012d00:	4298      	cmp	r0, r3
 8012d02:	d022      	beq.n	8012d4a <usart_deinit+0x8e>
 8012d04:	f5a3 4318 	sub.w	r3, r3, #38912	@ 0x9800
 8012d08:	4298      	cmp	r0, r3
 8012d0a:	d1e9      	bne.n	8012ce0 <usart_deinit+0x24>
 8012d0c:	f640 001f 	movw	r0, #2079	@ 0x81f
 8012d10:	f7fe ffbd 	bl	8011c8e <rcu_periph_reset_enable>
 8012d14:	f640 001f 	movw	r0, #2079	@ 0x81f
 8012d18:	e005      	b.n	8012d26 <usart_deinit+0x6a>
 8012d1a:	f640 1004 	movw	r0, #2308	@ 0x904
 8012d1e:	f7fe ffb6 	bl	8011c8e <rcu_periph_reset_enable>
 8012d22:	f640 1004 	movw	r0, #2308	@ 0x904
 8012d26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012d2a:	f7fe bfb2 	b.w	8011c92 <rcu_periph_reset_disable>
 8012d2e:	f640 0011 	movw	r0, #2065	@ 0x811
 8012d32:	f7fe ffac 	bl	8011c8e <rcu_periph_reset_enable>
 8012d36:	f640 0011 	movw	r0, #2065	@ 0x811
 8012d3a:	e7f4      	b.n	8012d26 <usart_deinit+0x6a>
 8012d3c:	f640 0012 	movw	r0, #2066	@ 0x812
 8012d40:	f7fe ffa5 	bl	8011c8e <rcu_periph_reset_enable>
 8012d44:	f640 0012 	movw	r0, #2066	@ 0x812
 8012d48:	e7ed      	b.n	8012d26 <usart_deinit+0x6a>
 8012d4a:	f640 1005 	movw	r0, #2309	@ 0x905
 8012d4e:	f7fe ff9e 	bl	8011c8e <rcu_periph_reset_enable>
 8012d52:	f640 1005 	movw	r0, #2309	@ 0x905
 8012d56:	e7e6      	b.n	8012d26 <usart_deinit+0x6a>
 8012d58:	f640 0013 	movw	r0, #2067	@ 0x813
 8012d5c:	f7fe ff97 	bl	8011c8e <rcu_periph_reset_enable>
 8012d60:	f640 0013 	movw	r0, #2067	@ 0x813
 8012d64:	e7df      	b.n	8012d26 <usart_deinit+0x6a>
 8012d66:	f640 001e 	movw	r0, #2078	@ 0x81e
 8012d6a:	f7fe ff90 	bl	8011c8e <rcu_periph_reset_enable>
 8012d6e:	f640 001e 	movw	r0, #2078	@ 0x81e
 8012d72:	e7d8      	b.n	8012d26 <usart_deinit+0x6a>
 8012d74:	40007800 	andmi	r7, r0, r0, lsl #16
 8012d78:	40005000 	andmi	r5, r0, r0
 8012d7c:	40011000 	andmi	r1, r1, r0

08012d80 <usart_baudrate_set>:
 8012d80:	b538      	push	{r3, r4, r5, lr}
 8012d82:	4b1e      	ldr	r3, [pc, #120]	@ (8012dfc <usart_baudrate_set+0x7c>)
 8012d84:	4298      	cmp	r0, r3
 8012d86:	4604      	mov	r4, r0
 8012d88:	460d      	mov	r5, r1
 8012d8a:	d02e      	beq.n	8012dea <usart_baudrate_set+0x6a>
 8012d8c:	d821      	bhi.n	8012dd2 <usart_baudrate_set+0x52>
 8012d8e:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8012d92:	4298      	cmp	r0, r3
 8012d94:	d029      	beq.n	8012dea <usart_baudrate_set+0x6a>
 8012d96:	d81a      	bhi.n	8012dce <usart_baudrate_set+0x4e>
 8012d98:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8012d9c:	4298      	cmp	r0, r3
 8012d9e:	d024      	beq.n	8012dea <usart_baudrate_set+0x6a>
 8012da0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012da4:	429c      	cmp	r4, r3
 8012da6:	d020      	beq.n	8012dea <usart_baudrate_set+0x6a>
 8012da8:	2000      	movs	r0, #0
 8012daa:	68e2      	ldr	r2, [r4, #12]
 8012dac:	0412      	lsls	r2, r2, #16
 8012dae:	ea4f 0355 	mov.w	r3, r5, lsr #1
 8012db2:	d51c      	bpl.n	8012dee <usart_baudrate_set+0x6e>
 8012db4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8012db8:	fbb3 f1f5 	udiv	r1, r3, r5
 8012dbc:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8012dc0:	f021 010f 	bic.w	r1, r1, #15
 8012dc4:	0409      	lsls	r1, r1, #16
 8012dc6:	0c09      	lsrs	r1, r1, #16
 8012dc8:	430b      	orrs	r3, r1
 8012dca:	60a3      	str	r3, [r4, #8]
 8012dcc:	bd38      	pop	{r3, r4, r5, pc}
 8012dce:	4b0c      	ldr	r3, [pc, #48]	@ (8012e00 <usart_baudrate_set+0x80>)
 8012dd0:	e7e8      	b.n	8012da4 <usart_baudrate_set+0x24>
 8012dd2:	4b0c      	ldr	r3, [pc, #48]	@ (8012e04 <usart_baudrate_set+0x84>)
 8012dd4:	f420 6280 	bic.w	r2, r0, #1024	@ 0x400
 8012dd8:	429a      	cmp	r2, r3
 8012dda:	d002      	beq.n	8012de2 <usart_baudrate_set+0x62>
 8012ddc:	f5a3 4314 	sub.w	r3, r3, #37888	@ 0x9400
 8012de0:	e7e0      	b.n	8012da4 <usart_baudrate_set+0x24>
 8012de2:	2003      	movs	r0, #3
 8012de4:	f7fe ff82 	bl	8011cec <rcu_clock_freq_get>
 8012de8:	e7df      	b.n	8012daa <usart_baudrate_set+0x2a>
 8012dea:	2002      	movs	r0, #2
 8012dec:	e7fa      	b.n	8012de4 <usart_baudrate_set+0x64>
 8012dee:	18c1      	adds	r1, r0, r3
 8012df0:	fbb1 f1f5 	udiv	r1, r1, r5
 8012df4:	b289      	uxth	r1, r1
 8012df6:	60a1      	str	r1, [r4, #8]
 8012df8:	e7e8      	b.n	8012dcc <usart_baudrate_set+0x4c>
 8012dfa:	bf00      	nop
 8012dfc:	40007800 	andmi	r7, r0, r0, lsl #16
 8012e00:	40005000 	andmi	r5, r0, r0
 8012e04:	40011000 	andmi	r1, r1, r0

08012e08 <usart_parity_config>:
 8012e08:	68c3      	ldr	r3, [r0, #12]
 8012e0a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8012e0e:	60c3      	str	r3, [r0, #12]
 8012e10:	68c3      	ldr	r3, [r0, #12]
 8012e12:	430b      	orrs	r3, r1
 8012e14:	60c3      	str	r3, [r0, #12]
 8012e16:	4770      	bx	lr

08012e18 <usart_word_length_set>:
 8012e18:	68c3      	ldr	r3, [r0, #12]
 8012e1a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8012e1e:	60c3      	str	r3, [r0, #12]
 8012e20:	68c3      	ldr	r3, [r0, #12]
 8012e22:	430b      	orrs	r3, r1
 8012e24:	60c3      	str	r3, [r0, #12]
 8012e26:	4770      	bx	lr

08012e28 <usart_stop_bit_set>:
 8012e28:	6903      	ldr	r3, [r0, #16]
 8012e2a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8012e2e:	6103      	str	r3, [r0, #16]
 8012e30:	6903      	ldr	r3, [r0, #16]
 8012e32:	430b      	orrs	r3, r1
 8012e34:	6103      	str	r3, [r0, #16]
 8012e36:	4770      	bx	lr

08012e38 <usart_transmit_config>:
 8012e38:	68c3      	ldr	r3, [r0, #12]
 8012e3a:	f023 0308 	bic.w	r3, r3, #8
 8012e3e:	430b      	orrs	r3, r1
 8012e40:	60c3      	str	r3, [r0, #12]
 8012e42:	4770      	bx	lr

08012e44 <usart_receive_config>:
 8012e44:	68c3      	ldr	r3, [r0, #12]
 8012e46:	f023 0304 	bic.w	r3, r3, #4
 8012e4a:	430b      	orrs	r3, r1
 8012e4c:	60c3      	str	r3, [r0, #12]
 8012e4e:	4770      	bx	lr

08012e50 <usart_hardware_flow_rts_config>:
 8012e50:	6943      	ldr	r3, [r0, #20]
 8012e52:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8012e56:	6143      	str	r3, [r0, #20]
 8012e58:	6943      	ldr	r3, [r0, #20]
 8012e5a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012e5e:	4319      	orrs	r1, r3
 8012e60:	6141      	str	r1, [r0, #20]
 8012e62:	4770      	bx	lr

08012e64 <usart_hardware_flow_cts_config>:
 8012e64:	6943      	ldr	r3, [r0, #20]
 8012e66:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8012e6a:	6143      	str	r3, [r0, #20]
 8012e6c:	6943      	ldr	r3, [r0, #20]
 8012e6e:	f401 7100 	and.w	r1, r1, #512	@ 0x200
 8012e72:	4319      	orrs	r1, r3
 8012e74:	6141      	str	r1, [r0, #20]
 8012e76:	4770      	bx	lr

08012e78 <usart_flag_get>:
 8012e78:	098b      	lsrs	r3, r1, #6
 8012e7a:	f001 011f 	and.w	r1, r1, #31
 8012e7e:	5818      	ldr	r0, [r3, r0]
 8012e80:	40c8      	lsrs	r0, r1
 8012e82:	f000 0001 	and.w	r0, r0, #1
 8012e86:	4770      	bx	lr

08012e88 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
 8012e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012e8a:	461e      	mov	r6, r3
 8012e8c:	4bc3      	ldr	r3, [pc, #780]	@ (801319c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x314>)
 8012e8e:	4298      	cmp	r0, r3
 8012e90:	4604      	mov	r4, r0
 8012e92:	460f      	mov	r7, r1
 8012e94:	4615      	mov	r5, r2
 8012e96:	f000 818f 	beq.w	80131b8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x330>
 8012e9a:	d83a      	bhi.n	8012f12 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x8a>
 8012e9c:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8012ea0:	4298      	cmp	r0, r3
 8012ea2:	f000 80f5 	beq.w	8013090 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x208>
 8012ea6:	f200 8122 	bhi.w	80130ee <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x266>
 8012eaa:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8012eae:	4298      	cmp	r0, r3
 8012eb0:	f000 80c8 	beq.w	8013044 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x1bc>
 8012eb4:	f241 0012 	movw	r0, #4114	@ 0x1012
 8012eb8:	f7fe fece 	bl	8011c58 <rcu_periph_clock_enable>
 8012ebc:	f640 4001 	movw	r0, #3073	@ 0xc01
 8012ec0:	f7fe feca 	bl	8011c58 <rcu_periph_clock_enable>
 8012ec4:	48b6      	ldr	r0, [pc, #728]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012ec6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8012eca:	2107      	movs	r1, #7
 8012ecc:	f7fe fe80 	bl	8011bd0 <gpio_af_set>
 8012ed0:	48b3      	ldr	r0, [pc, #716]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012ed2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012ed6:	2201      	movs	r2, #1
 8012ed8:	2102      	movs	r1, #2
 8012eda:	f7fe fe3b 	bl	8011b54 <gpio_mode_set>
 8012ede:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012ee2:	48af      	ldr	r0, [pc, #700]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012ee4:	2202      	movs	r2, #2
 8012ee6:	2100      	movs	r1, #0
 8012ee8:	f7fe fe56 	bl	8011b98 <gpio_output_options_set>
 8012eec:	48ac      	ldr	r0, [pc, #688]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012eee:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8012ef2:	2107      	movs	r1, #7
 8012ef4:	f7fe fe6c 	bl	8011bd0 <gpio_af_set>
 8012ef8:	48a9      	ldr	r0, [pc, #676]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012efa:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012efe:	2201      	movs	r2, #1
 8012f00:	2102      	movs	r1, #2
 8012f02:	f7fe fe27 	bl	8011b54 <gpio_mode_set>
 8012f06:	48a6      	ldr	r0, [pc, #664]	@ (80131a0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8012f08:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012f0c:	2202      	movs	r2, #2
 8012f0e:	2100      	movs	r1, #0
 8012f10:	e05b      	b.n	8012fca <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8012f12:	4ba4      	ldr	r3, [pc, #656]	@ (80131a4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x31c>)
 8012f14:	4298      	cmp	r0, r3
 8012f16:	d02a      	beq.n	8012f6e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0xe6>
 8012f18:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012f1c:	4298      	cmp	r0, r3
 8012f1e:	f000 8116 	beq.w	801314e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x2c6>
 8012f22:	f241 001f 	movw	r0, #4127	@ 0x101f
 8012f26:	f7fe fe97 	bl	8011c58 <rcu_periph_clock_enable>
 8012f2a:	f640 4004 	movw	r0, #3076	@ 0xc04
 8012f2e:	f7fe fe93 	bl	8011c58 <rcu_periph_clock_enable>
 8012f32:	489d      	ldr	r0, [pc, #628]	@ (80131a8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8012f34:	2202      	movs	r2, #2
 8012f36:	2108      	movs	r1, #8
 8012f38:	f7fe fe4a 	bl	8011bd0 <gpio_af_set>
 8012f3c:	2302      	movs	r3, #2
 8012f3e:	4619      	mov	r1, r3
 8012f40:	4899      	ldr	r0, [pc, #612]	@ (80131a8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8012f42:	2201      	movs	r2, #1
 8012f44:	f7fe fe06 	bl	8011b54 <gpio_mode_set>
 8012f48:	2302      	movs	r3, #2
 8012f4a:	461a      	mov	r2, r3
 8012f4c:	4896      	ldr	r0, [pc, #600]	@ (80131a8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8012f4e:	2100      	movs	r1, #0
 8012f50:	f7fe fe22 	bl	8011b98 <gpio_output_options_set>
 8012f54:	4894      	ldr	r0, [pc, #592]	@ (80131a8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8012f56:	2201      	movs	r2, #1
 8012f58:	2108      	movs	r1, #8
 8012f5a:	f7fe fe39 	bl	8011bd0 <gpio_af_set>
 8012f5e:	2301      	movs	r3, #1
 8012f60:	461a      	mov	r2, r3
 8012f62:	4891      	ldr	r0, [pc, #580]	@ (80131a8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8012f64:	2102      	movs	r1, #2
 8012f66:	f7fe fdf5 	bl	8011b54 <gpio_mode_set>
 8012f6a:	2301      	movs	r3, #1
 8012f6c:	e14c      	b.n	8013208 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x380>
 8012f6e:	f241 1004 	movw	r0, #4356	@ 0x1104
 8012f72:	f7fe fe71 	bl	8011c58 <rcu_periph_clock_enable>
 8012f76:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8012f7a:	f7fe fe6d 	bl	8011c58 <rcu_periph_clock_enable>
 8012f7e:	488b      	ldr	r0, [pc, #556]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012f80:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8012f84:	2107      	movs	r1, #7
 8012f86:	f7fe fe23 	bl	8011bd0 <gpio_af_set>
 8012f8a:	4888      	ldr	r0, [pc, #544]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012f8c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8012f90:	2201      	movs	r2, #1
 8012f92:	2102      	movs	r1, #2
 8012f94:	f7fe fdde 	bl	8011b54 <gpio_mode_set>
 8012f98:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8012f9c:	4883      	ldr	r0, [pc, #524]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012f9e:	2202      	movs	r2, #2
 8012fa0:	2100      	movs	r1, #0
 8012fa2:	f7fe fdf9 	bl	8011b98 <gpio_output_options_set>
 8012fa6:	4881      	ldr	r0, [pc, #516]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012fa8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8012fac:	2107      	movs	r1, #7
 8012fae:	f7fe fe0f 	bl	8011bd0 <gpio_af_set>
 8012fb2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012fb6:	487d      	ldr	r0, [pc, #500]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012fb8:	2201      	movs	r2, #1
 8012fba:	2102      	movs	r1, #2
 8012fbc:	f7fe fdca 	bl	8011b54 <gpio_mode_set>
 8012fc0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012fc4:	4879      	ldr	r0, [pc, #484]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8012fc6:	2202      	movs	r2, #2
 8012fc8:	2100      	movs	r1, #0
 8012fca:	f7fe fde5 	bl	8011b98 <gpio_output_options_set>
 8012fce:	4620      	mov	r0, r4
 8012fd0:	f7ff fe74 	bl	8012cbc <usart_deinit>
 8012fd4:	68e3      	ldr	r3, [r4, #12]
 8012fd6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8012fda:	60e3      	str	r3, [r4, #12]
 8012fdc:	4639      	mov	r1, r7
 8012fde:	4620      	mov	r0, r4
 8012fe0:	f7ff fece 	bl	8012d80 <usart_baudrate_set>
 8012fe4:	f1a5 0309 	sub.w	r3, r5, #9
 8012fe8:	4259      	negs	r1, r3
 8012fea:	4159      	adcs	r1, r3
 8012fec:	0309      	lsls	r1, r1, #12
 8012fee:	4620      	mov	r0, r4
 8012ff0:	f7ff ff12 	bl	8012e18 <usart_word_length_set>
 8012ff4:	9906      	ldr	r1, [sp, #24]
 8012ff6:	1e8a      	subs	r2, r1, #2
 8012ff8:	4251      	negs	r1, r2
 8012ffa:	4151      	adcs	r1, r2
 8012ffc:	0349      	lsls	r1, r1, #13
 8012ffe:	4620      	mov	r0, r4
 8013000:	f7ff ff12 	bl	8012e28 <usart_stop_bit_set>
 8013004:	2e01      	cmp	r6, #1
 8013006:	f000 8103 	beq.w	8013210 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x388>
 801300a:	2e02      	cmp	r6, #2
 801300c:	f040 8103 	bne.w	8013216 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x38e>
 8013010:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8013014:	4620      	mov	r0, r4
 8013016:	f7ff fef7 	bl	8012e08 <usart_parity_config>
 801301a:	2100      	movs	r1, #0
 801301c:	4620      	mov	r0, r4
 801301e:	f7ff ff17 	bl	8012e50 <usart_hardware_flow_rts_config>
 8013022:	2100      	movs	r1, #0
 8013024:	4620      	mov	r0, r4
 8013026:	f7ff ff1d 	bl	8012e64 <usart_hardware_flow_cts_config>
 801302a:	2104      	movs	r1, #4
 801302c:	4620      	mov	r0, r4
 801302e:	f7ff ff09 	bl	8012e44 <usart_receive_config>
 8013032:	2108      	movs	r1, #8
 8013034:	4620      	mov	r0, r4
 8013036:	f7ff feff 	bl	8012e38 <usart_transmit_config>
 801303a:	68e3      	ldr	r3, [r4, #12]
 801303c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8013040:	60e3      	str	r3, [r4, #12]
 8013042:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013044:	f241 0011 	movw	r0, #4113	@ 0x1011
 8013048:	f7fe fe06 	bl	8011c58 <rcu_periph_clock_enable>
 801304c:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8013050:	f7fe fe02 	bl	8011c58 <rcu_periph_clock_enable>
 8013054:	4855      	ldr	r0, [pc, #340]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8013056:	2204      	movs	r2, #4
 8013058:	2107      	movs	r1, #7
 801305a:	f7fe fdb9 	bl	8011bd0 <gpio_af_set>
 801305e:	4853      	ldr	r0, [pc, #332]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8013060:	2304      	movs	r3, #4
 8013062:	2201      	movs	r2, #1
 8013064:	2102      	movs	r1, #2
 8013066:	f7fe fd75 	bl	8011b54 <gpio_mode_set>
 801306a:	2304      	movs	r3, #4
 801306c:	484f      	ldr	r0, [pc, #316]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801306e:	2202      	movs	r2, #2
 8013070:	2100      	movs	r1, #0
 8013072:	f7fe fd91 	bl	8011b98 <gpio_output_options_set>
 8013076:	484d      	ldr	r0, [pc, #308]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8013078:	2208      	movs	r2, #8
 801307a:	2107      	movs	r1, #7
 801307c:	f7fe fda8 	bl	8011bd0 <gpio_af_set>
 8013080:	2308      	movs	r3, #8
 8013082:	484a      	ldr	r0, [pc, #296]	@ (80131ac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8013084:	2201      	movs	r2, #1
 8013086:	2102      	movs	r1, #2
 8013088:	f7fe fd64 	bl	8011b54 <gpio_mode_set>
 801308c:	2308      	movs	r3, #8
 801308e:	e799      	b.n	8012fc4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x13c>
 8013090:	f241 0013 	movw	r0, #4115	@ 0x1013
 8013094:	f7fe fde0 	bl	8011c58 <rcu_periph_clock_enable>
 8013098:	f640 4002 	movw	r0, #3074	@ 0xc02
 801309c:	f7fe fddc 	bl	8011c58 <rcu_periph_clock_enable>
 80130a0:	4843      	ldr	r0, [pc, #268]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130a2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80130a6:	2108      	movs	r1, #8
 80130a8:	f7fe fd92 	bl	8011bd0 <gpio_af_set>
 80130ac:	4840      	ldr	r0, [pc, #256]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130ae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80130b2:	2201      	movs	r2, #1
 80130b4:	2102      	movs	r1, #2
 80130b6:	f7fe fd4d 	bl	8011b54 <gpio_mode_set>
 80130ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80130be:	483c      	ldr	r0, [pc, #240]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130c0:	2202      	movs	r2, #2
 80130c2:	2100      	movs	r1, #0
 80130c4:	f7fe fd68 	bl	8011b98 <gpio_output_options_set>
 80130c8:	4839      	ldr	r0, [pc, #228]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130ca:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80130ce:	2108      	movs	r1, #8
 80130d0:	f7fe fd7e 	bl	8011bd0 <gpio_af_set>
 80130d4:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80130d8:	4835      	ldr	r0, [pc, #212]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130da:	2201      	movs	r2, #1
 80130dc:	2102      	movs	r1, #2
 80130de:	f7fe fd39 	bl	8011b54 <gpio_mode_set>
 80130e2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80130e6:	4832      	ldr	r0, [pc, #200]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80130e8:	2202      	movs	r2, #2
 80130ea:	2100      	movs	r1, #0
 80130ec:	e76d      	b.n	8012fca <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 80130ee:	f241 0014 	movw	r0, #4116	@ 0x1014
 80130f2:	f7fe fdb1 	bl	8011c58 <rcu_periph_clock_enable>
 80130f6:	f640 4002 	movw	r0, #3074	@ 0xc02
 80130fa:	f7fe fdad 	bl	8011c58 <rcu_periph_clock_enable>
 80130fe:	f640 4003 	movw	r0, #3075	@ 0xc03
 8013102:	f7fe fda9 	bl	8011c58 <rcu_periph_clock_enable>
 8013106:	482a      	ldr	r0, [pc, #168]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013108:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 801310c:	2108      	movs	r1, #8
 801310e:	f7fe fd5f 	bl	8011bd0 <gpio_af_set>
 8013112:	4827      	ldr	r0, [pc, #156]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013114:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8013118:	2201      	movs	r2, #1
 801311a:	2102      	movs	r1, #2
 801311c:	f7fe fd1a 	bl	8011b54 <gpio_mode_set>
 8013120:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8013124:	4822      	ldr	r0, [pc, #136]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013126:	2202      	movs	r2, #2
 8013128:	2100      	movs	r1, #0
 801312a:	f7fe fd35 	bl	8011b98 <gpio_output_options_set>
 801312e:	4821      	ldr	r0, [pc, #132]	@ (80131b4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8013130:	2204      	movs	r2, #4
 8013132:	2108      	movs	r1, #8
 8013134:	f7fe fd4c 	bl	8011bd0 <gpio_af_set>
 8013138:	481e      	ldr	r0, [pc, #120]	@ (80131b4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 801313a:	2304      	movs	r3, #4
 801313c:	2201      	movs	r2, #1
 801313e:	2102      	movs	r1, #2
 8013140:	f7fe fd08 	bl	8011b54 <gpio_mode_set>
 8013144:	481b      	ldr	r0, [pc, #108]	@ (80131b4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8013146:	2304      	movs	r3, #4
 8013148:	2202      	movs	r2, #2
 801314a:	2100      	movs	r1, #0
 801314c:	e73d      	b.n	8012fca <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801314e:	f241 1005 	movw	r0, #4357	@ 0x1105
 8013152:	f7fe fd81 	bl	8011c58 <rcu_periph_clock_enable>
 8013156:	f640 4002 	movw	r0, #3074	@ 0xc02
 801315a:	f7fe fd7d 	bl	8011c58 <rcu_periph_clock_enable>
 801315e:	4814      	ldr	r0, [pc, #80]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013160:	2240      	movs	r2, #64	@ 0x40
 8013162:	2108      	movs	r1, #8
 8013164:	f7fe fd34 	bl	8011bd0 <gpio_af_set>
 8013168:	4811      	ldr	r0, [pc, #68]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801316a:	2340      	movs	r3, #64	@ 0x40
 801316c:	2201      	movs	r2, #1
 801316e:	2102      	movs	r1, #2
 8013170:	f7fe fcf0 	bl	8011b54 <gpio_mode_set>
 8013174:	2340      	movs	r3, #64	@ 0x40
 8013176:	480e      	ldr	r0, [pc, #56]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013178:	2202      	movs	r2, #2
 801317a:	2100      	movs	r1, #0
 801317c:	f7fe fd0c 	bl	8011b98 <gpio_output_options_set>
 8013180:	480b      	ldr	r0, [pc, #44]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8013182:	2280      	movs	r2, #128	@ 0x80
 8013184:	2108      	movs	r1, #8
 8013186:	f7fe fd23 	bl	8011bd0 <gpio_af_set>
 801318a:	2380      	movs	r3, #128	@ 0x80
 801318c:	4808      	ldr	r0, [pc, #32]	@ (80131b0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801318e:	2201      	movs	r2, #1
 8013190:	2102      	movs	r1, #2
 8013192:	f7fe fcdf 	bl	8011b54 <gpio_mode_set>
 8013196:	2380      	movs	r3, #128	@ 0x80
 8013198:	e7a5      	b.n	80130e6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x25e>
 801319a:	bf00      	nop
 801319c:	40007800 	andmi	r7, r0, r0, lsl #16
 80131a0:	40020400 	andmi	r0, r2, r0, lsl #8
 80131a4:	40011000 	andmi	r1, r1, r0
 80131a8:	40021000 	andmi	r1, r2, r0
 80131ac:	40020000 	andmi	r0, r2, r0
 80131b0:	40020800 	andmi	r0, r2, r0, lsl #16
 80131b4:	40020c00 	andmi	r0, r2, r0, lsl #24
 80131b8:	f241 001e 	movw	r0, #4126	@ 0x101e
 80131bc:	f7fe fd4c 	bl	8011c58 <rcu_periph_clock_enable>
 80131c0:	f640 4004 	movw	r0, #3076	@ 0xc04
 80131c4:	f7fe fd48 	bl	8011c58 <rcu_periph_clock_enable>
 80131c8:	4814      	ldr	r0, [pc, #80]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80131ca:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80131ce:	2108      	movs	r1, #8
 80131d0:	f7fe fcfe 	bl	8011bd0 <gpio_af_set>
 80131d4:	4811      	ldr	r0, [pc, #68]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80131d6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80131da:	2201      	movs	r2, #1
 80131dc:	2102      	movs	r1, #2
 80131de:	f7fe fcb9 	bl	8011b54 <gpio_mode_set>
 80131e2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80131e6:	480d      	ldr	r0, [pc, #52]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80131e8:	2202      	movs	r2, #2
 80131ea:	2100      	movs	r1, #0
 80131ec:	f7fe fcd4 	bl	8011b98 <gpio_output_options_set>
 80131f0:	480a      	ldr	r0, [pc, #40]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80131f2:	2280      	movs	r2, #128	@ 0x80
 80131f4:	2108      	movs	r1, #8
 80131f6:	f7fe fceb 	bl	8011bd0 <gpio_af_set>
 80131fa:	2380      	movs	r3, #128	@ 0x80
 80131fc:	4807      	ldr	r0, [pc, #28]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80131fe:	2201      	movs	r2, #1
 8013200:	2102      	movs	r1, #2
 8013202:	f7fe fca7 	bl	8011b54 <gpio_mode_set>
 8013206:	2380      	movs	r3, #128	@ 0x80
 8013208:	4804      	ldr	r0, [pc, #16]	@ (801321c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801320a:	2202      	movs	r2, #2
 801320c:	2100      	movs	r1, #0
 801320e:	e6dc      	b.n	8012fca <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8013210:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8013214:	e6fe      	b.n	8013014 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8013216:	2100      	movs	r1, #0
 8013218:	e6fc      	b.n	8013014 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 801321a:	bf00      	nop
 801321c:	40021000 	andmi	r1, r2, r0

08013220 <__libc_init_array>:
 8013220:	b570      	push	{r4, r5, r6, lr}
 8013222:	4d0c      	ldr	r5, [pc, #48]	@ (8013254 <__libc_init_array+0x34>)
 8013224:	4c0c      	ldr	r4, [pc, #48]	@ (8013258 <__libc_init_array+0x38>)
 8013226:	1b64      	subs	r4, r4, r5
 8013228:	10a4      	asrs	r4, r4, #2
 801322a:	2600      	movs	r6, #0
 801322c:	42a6      	cmp	r6, r4
 801322e:	d107      	bne.n	8013240 <__libc_init_array+0x20>
 8013230:	4d0a      	ldr	r5, [pc, #40]	@ (801325c <__libc_init_array+0x3c>)
 8013232:	4c0b      	ldr	r4, [pc, #44]	@ (8013260 <__libc_init_array+0x40>)
 8013234:	1b64      	subs	r4, r4, r5
 8013236:	10a4      	asrs	r4, r4, #2
 8013238:	2600      	movs	r6, #0
 801323a:	42a6      	cmp	r6, r4
 801323c:	d105      	bne.n	801324a <__libc_init_array+0x2a>
 801323e:	bd70      	pop	{r4, r5, r6, pc}
 8013240:	f855 3b04 	ldr.w	r3, [r5], #4
 8013244:	4798      	blx	r3
 8013246:	3601      	adds	r6, #1
 8013248:	e7f0      	b.n	801322c <__libc_init_array+0xc>
 801324a:	f855 3b04 	ldr.w	r3, [r5], #4
 801324e:	4798      	blx	r3
 8013250:	3601      	adds	r6, #1
 8013252:	e7f2      	b.n	801323a <__libc_init_array+0x1a>
 8013254:	0801767c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 8013258:	0801767c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 801325c:	0801767c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 8013260:	0801767c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}

08013264 <memcpy>:
 8013264:	b510      	push	{r4, lr}
 8013266:	1e43      	subs	r3, r0, #1
 8013268:	440a      	add	r2, r1
 801326a:	4291      	cmp	r1, r2
 801326c:	d100      	bne.n	8013270 <memcpy+0xc>
 801326e:	bd10      	pop	{r4, pc}
 8013270:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013274:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013278:	e7f7      	b.n	801326a <memcpy+0x6>

0801327a <memmove>:
 801327a:	4288      	cmp	r0, r1
 801327c:	b510      	push	{r4, lr}
 801327e:	eb01 0302 	add.w	r3, r1, r2
 8013282:	d208      	bcs.n	8013296 <memmove+0x1c>
 8013284:	1e42      	subs	r2, r0, #1
 8013286:	4299      	cmp	r1, r3
 8013288:	d100      	bne.n	801328c <memmove+0x12>
 801328a:	bd10      	pop	{r4, pc}
 801328c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013290:	f802 4f01 	strb.w	r4, [r2, #1]!
 8013294:	e7f7      	b.n	8013286 <memmove+0xc>
 8013296:	4402      	add	r2, r0
 8013298:	4601      	mov	r1, r0
 801329a:	428a      	cmp	r2, r1
 801329c:	d0f5      	beq.n	801328a <memmove+0x10>
 801329e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80132a2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80132a6:	e7f8      	b.n	801329a <memmove+0x20>

080132a8 <memset>:
 80132a8:	b570      	push	{r4, r5, r6, lr}
 80132aa:	b1ca      	cbz	r2, 80132e0 <memset+0x38>
 80132ac:	b2c9      	uxtb	r1, r1
 80132ae:	4603      	mov	r3, r0
 80132b0:	075c      	lsls	r4, r3, #29
 80132b2:	d111      	bne.n	80132d8 <memset+0x30>
 80132b4:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
 80132b8:	fba1 5605 	umull	r5, r6, r1, r5
 80132bc:	f022 0407 	bic.w	r4, r2, #7
 80132c0:	442e      	add	r6, r5
 80132c2:	441c      	add	r4, r3
 80132c4:	42a3      	cmp	r3, r4
 80132c6:	d10c      	bne.n	80132e2 <memset+0x3a>
 80132c8:	f002 0207 	and.w	r2, r2, #7
 80132cc:	4422      	add	r2, r4
 80132ce:	4294      	cmp	r4, r2
 80132d0:	d006      	beq.n	80132e0 <memset+0x38>
 80132d2:	f804 1b01 	strb.w	r1, [r4], #1
 80132d6:	e7fa      	b.n	80132ce <memset+0x26>
 80132d8:	3a01      	subs	r2, #1
 80132da:	f803 1b01 	strb.w	r1, [r3], #1
 80132de:	d1e7      	bne.n	80132b0 <memset+0x8>
 80132e0:	bd70      	pop	{r4, r5, r6, pc}
 80132e2:	f843 5b08 	str.w	r5, [r3], #8
 80132e6:	f843 6c04 	str.w	r6, [r3, #-4]
 80132ea:	e7eb      	b.n	80132c4 <memset+0x1c>

080132ec <_itostr>:
 80132ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80132ee:	0fc7      	lsrs	r7, r0, #31
 80132f0:	b091      	sub	sp, #68	@ 0x44
 80132f2:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 80132f6:	d01b      	beq.n	8013330 <_itostr+0x44>
 80132f8:	4240      	negs	r0, r0
 80132fa:	4623      	mov	r3, r4
 80132fc:	250a      	movs	r5, #10
 80132fe:	46ec      	mov	ip, sp
 8013300:	fb90 f6f5 	sdiv	r6, r0, r5
 8013304:	fb05 0016 	mls	r0, r5, r6, r0
 8013308:	3030      	adds	r0, #48	@ 0x30
 801330a:	f803 0901 	strb.w	r0, [r3], #-1
 801330e:	4630      	mov	r0, r6
 8013310:	b10e      	cbz	r6, 8013316 <_itostr+0x2a>
 8013312:	4563      	cmp	r3, ip
 8013314:	d1f4      	bne.n	8013300 <_itostr+0x14>
 8013316:	b132      	cbz	r2, 8013326 <_itostr+0x3a>
 8013318:	4668      	mov	r0, sp
 801331a:	2530      	movs	r5, #48	@ 0x30
 801331c:	1ae6      	subs	r6, r4, r3
 801331e:	4296      	cmp	r6, r2
 8013320:	da01      	bge.n	8013326 <_itostr+0x3a>
 8013322:	4283      	cmp	r3, r0
 8013324:	d816      	bhi.n	8013354 <_itostr+0x68>
 8013326:	b167      	cbz	r7, 8013342 <_itostr+0x56>
 8013328:	222d      	movs	r2, #45	@ 0x2d
 801332a:	f803 2901 	strb.w	r2, [r3], #-1
 801332e:	e008      	b.n	8013342 <_itostr+0x56>
 8013330:	2800      	cmp	r0, #0
 8013332:	d1e2      	bne.n	80132fa <_itostr+0xe>
 8013334:	2330      	movs	r3, #48	@ 0x30
 8013336:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 801333a:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801333e:	2a00      	cmp	r2, #0
 8013340:	d1ea      	bne.n	8013318 <_itostr+0x2c>
 8013342:	3301      	adds	r3, #1
 8013344:	1ae0      	subs	r0, r4, r3
 8013346:	3901      	subs	r1, #1
 8013348:	aa10      	add	r2, sp, #64	@ 0x40
 801334a:	4293      	cmp	r3, r2
 801334c:	d305      	bcc.n	801335a <_itostr+0x6e>
 801334e:	3001      	adds	r0, #1
 8013350:	b011      	add	sp, #68	@ 0x44
 8013352:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013354:	f803 5901 	strb.w	r5, [r3], #-1
 8013358:	e7e0      	b.n	801331c <_itostr+0x30>
 801335a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801335e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8013362:	e7f1      	b.n	8013348 <_itostr+0x5c>

08013364 <_xputch>:
 8013364:	4603      	mov	r3, r0
 8013366:	b410      	push	{r4}
 8013368:	4c09      	ldr	r4, [pc, #36]	@ (8013390 <_xputch+0x2c>)
 801336a:	68da      	ldr	r2, [r3, #12]
 801336c:	4608      	mov	r0, r1
 801336e:	6821      	ldr	r1, [r4, #0]
 8013370:	3201      	adds	r2, #1
 8013372:	60da      	str	r2, [r3, #12]
 8013374:	b141      	cbz	r1, 8013388 <_xputch+0x24>
 8013376:	691b      	ldr	r3, [r3, #16]
 8013378:	429a      	cmp	r2, r3
 801337a:	da02      	bge.n	8013382 <_xputch+0x1e>
 801337c:	1c4b      	adds	r3, r1, #1
 801337e:	6023      	str	r3, [r4, #0]
 8013380:	7008      	strb	r0, [r1, #0]
 8013382:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013386:	4770      	bx	lr
 8013388:	f85d 4b04 	ldr.w	r4, [sp], #4
 801338c:	f7fd bd95 	b.w	8010eba <console_putc>
 8013390:	20004838 	andcs	r4, r0, r8, lsr r8

08013394 <_format_int>:
 8013394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013396:	b091      	sub	sp, #68	@ 0x44
 8013398:	4606      	mov	r6, r0
 801339a:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 801339e:	bb91      	cbnz	r1, 8013406 <_format_int+0x72>
 80133a0:	2330      	movs	r3, #48	@ 0x30
 80133a2:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 80133a6:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 80133aa:	6832      	ldr	r2, [r6, #0]
 80133ac:	07d5      	lsls	r5, r2, #31
 80133ae:	d507      	bpl.n	80133c0 <_format_int+0x2c>
 80133b0:	6870      	ldr	r0, [r6, #4]
 80133b2:	4669      	mov	r1, sp
 80133b4:	2530      	movs	r5, #48	@ 0x30
 80133b6:	1ae7      	subs	r7, r4, r3
 80133b8:	4287      	cmp	r7, r0
 80133ba:	da01      	bge.n	80133c0 <_format_int+0x2c>
 80133bc:	428b      	cmp	r3, r1
 80133be:	d833      	bhi.n	8013428 <_format_int+0x94>
 80133c0:	0690      	lsls	r0, r2, #26
 80133c2:	d507      	bpl.n	80133d4 <_format_int+0x40>
 80133c4:	68b0      	ldr	r0, [r6, #8]
 80133c6:	4669      	mov	r1, sp
 80133c8:	2530      	movs	r5, #48	@ 0x30
 80133ca:	1ae7      	subs	r7, r4, r3
 80133cc:	4287      	cmp	r7, r0
 80133ce:	da01      	bge.n	80133d4 <_format_int+0x40>
 80133d0:	428b      	cmp	r3, r1
 80133d2:	d82c      	bhi.n	801342e <_format_int+0x9a>
 80133d4:	0711      	lsls	r1, r2, #28
 80133d6:	bf44      	itt	mi
 80133d8:	212d      	movmi	r1, #45	@ 0x2d
 80133da:	f803 1901 	strbmi.w	r1, [r3], #-1
 80133de:	0652      	lsls	r2, r2, #25
 80133e0:	d407      	bmi.n	80133f2 <_format_int+0x5e>
 80133e2:	68b1      	ldr	r1, [r6, #8]
 80133e4:	466a      	mov	r2, sp
 80133e6:	2020      	movs	r0, #32
 80133e8:	1ae5      	subs	r5, r4, r3
 80133ea:	428d      	cmp	r5, r1
 80133ec:	da01      	bge.n	80133f2 <_format_int+0x5e>
 80133ee:	4293      	cmp	r3, r2
 80133f0:	d820      	bhi.n	8013434 <_format_int+0xa0>
 80133f2:	1ae5      	subs	r5, r4, r3
 80133f4:	1c5c      	adds	r4, r3, #1
 80133f6:	ab10      	add	r3, sp, #64	@ 0x40
 80133f8:	429c      	cmp	r4, r3
 80133fa:	d31e      	bcc.n	801343a <_format_int+0xa6>
 80133fc:	68b3      	ldr	r3, [r6, #8]
 80133fe:	42ab      	cmp	r3, r5
 8013400:	dc21      	bgt.n	8013446 <_format_int+0xb2>
 8013402:	b011      	add	sp, #68	@ 0x44
 8013404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013406:	4623      	mov	r3, r4
 8013408:	200a      	movs	r0, #10
 801340a:	466f      	mov	r7, sp
 801340c:	fbb1 f5f0 	udiv	r5, r1, r0
 8013410:	fb00 1215 	mls	r2, r0, r5, r1
 8013414:	3230      	adds	r2, #48	@ 0x30
 8013416:	f803 2901 	strb.w	r2, [r3], #-1
 801341a:	460a      	mov	r2, r1
 801341c:	2a09      	cmp	r2, #9
 801341e:	4629      	mov	r1, r5
 8013420:	d9c3      	bls.n	80133aa <_format_int+0x16>
 8013422:	42bb      	cmp	r3, r7
 8013424:	d1f2      	bne.n	801340c <_format_int+0x78>
 8013426:	e7c0      	b.n	80133aa <_format_int+0x16>
 8013428:	f803 5901 	strb.w	r5, [r3], #-1
 801342c:	e7c3      	b.n	80133b6 <_format_int+0x22>
 801342e:	f803 5901 	strb.w	r5, [r3], #-1
 8013432:	e7ca      	b.n	80133ca <_format_int+0x36>
 8013434:	f803 0901 	strb.w	r0, [r3], #-1
 8013438:	e7d6      	b.n	80133e8 <_format_int+0x54>
 801343a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801343e:	4630      	mov	r0, r6
 8013440:	f7ff ff90 	bl	8013364 <_xputch>
 8013444:	e7d7      	b.n	80133f6 <_format_int+0x62>
 8013446:	2120      	movs	r1, #32
 8013448:	4630      	mov	r0, r6
 801344a:	f7ff ff8b 	bl	8013364 <_xputch>
 801344e:	3501      	adds	r5, #1
 8013450:	e7d4      	b.n	80133fc <_format_int+0x68>

08013452 <_format_hex>:
 8013452:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013454:	b091      	sub	sp, #68	@ 0x44
 8013456:	6804      	ldr	r4, [r0, #0]
 8013458:	4606      	mov	r6, r0
 801345a:	f10d 023f 	add.w	r2, sp, #63	@ 0x3f
 801345e:	bb61      	cbnz	r1, 80134ba <_format_hex+0x68>
 8013460:	2330      	movs	r3, #48	@ 0x30
 8013462:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8013466:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801346a:	07e5      	lsls	r5, r4, #31
 801346c:	d507      	bpl.n	801347e <_format_hex+0x2c>
 801346e:	6870      	ldr	r0, [r6, #4]
 8013470:	4669      	mov	r1, sp
 8013472:	2530      	movs	r5, #48	@ 0x30
 8013474:	1ad7      	subs	r7, r2, r3
 8013476:	4287      	cmp	r7, r0
 8013478:	da01      	bge.n	801347e <_format_hex+0x2c>
 801347a:	428b      	cmp	r3, r1
 801347c:	d831      	bhi.n	80134e2 <_format_hex+0x90>
 801347e:	06a0      	lsls	r0, r4, #26
 8013480:	d507      	bpl.n	8013492 <_format_hex+0x40>
 8013482:	68b0      	ldr	r0, [r6, #8]
 8013484:	4669      	mov	r1, sp
 8013486:	2530      	movs	r5, #48	@ 0x30
 8013488:	1ad7      	subs	r7, r2, r3
 801348a:	4287      	cmp	r7, r0
 801348c:	da01      	bge.n	8013492 <_format_hex+0x40>
 801348e:	428b      	cmp	r3, r1
 8013490:	d82a      	bhi.n	80134e8 <_format_hex+0x96>
 8013492:	0661      	lsls	r1, r4, #25
 8013494:	d407      	bmi.n	80134a6 <_format_hex+0x54>
 8013496:	68b0      	ldr	r0, [r6, #8]
 8013498:	4669      	mov	r1, sp
 801349a:	2420      	movs	r4, #32
 801349c:	1ad5      	subs	r5, r2, r3
 801349e:	4285      	cmp	r5, r0
 80134a0:	da01      	bge.n	80134a6 <_format_hex+0x54>
 80134a2:	428b      	cmp	r3, r1
 80134a4:	d823      	bhi.n	80134ee <_format_hex+0x9c>
 80134a6:	1ad5      	subs	r5, r2, r3
 80134a8:	1c5c      	adds	r4, r3, #1
 80134aa:	ab10      	add	r3, sp, #64	@ 0x40
 80134ac:	429c      	cmp	r4, r3
 80134ae:	d321      	bcc.n	80134f4 <_format_hex+0xa2>
 80134b0:	68b3      	ldr	r3, [r6, #8]
 80134b2:	42ab      	cmp	r3, r5
 80134b4:	dc24      	bgt.n	8013500 <_format_hex+0xae>
 80134b6:	b011      	add	sp, #68	@ 0x44
 80134b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80134ba:	f014 0f02 	tst.w	r4, #2
 80134be:	bf0c      	ite	eq
 80134c0:	2757      	moveq	r7, #87	@ 0x57
 80134c2:	2737      	movne	r7, #55	@ 0x37
 80134c4:	4613      	mov	r3, r2
 80134c6:	466d      	mov	r5, sp
 80134c8:	f001 000f 	and.w	r0, r1, #15
 80134cc:	2809      	cmp	r0, #9
 80134ce:	bf94      	ite	ls
 80134d0:	3030      	addls	r0, #48	@ 0x30
 80134d2:	19c0      	addhi	r0, r0, r7
 80134d4:	0909      	lsrs	r1, r1, #4
 80134d6:	f803 0901 	strb.w	r0, [r3], #-1
 80134da:	d0c6      	beq.n	801346a <_format_hex+0x18>
 80134dc:	42ab      	cmp	r3, r5
 80134de:	d1f3      	bne.n	80134c8 <_format_hex+0x76>
 80134e0:	e7c3      	b.n	801346a <_format_hex+0x18>
 80134e2:	f803 5901 	strb.w	r5, [r3], #-1
 80134e6:	e7c5      	b.n	8013474 <_format_hex+0x22>
 80134e8:	f803 5901 	strb.w	r5, [r3], #-1
 80134ec:	e7cc      	b.n	8013488 <_format_hex+0x36>
 80134ee:	f803 4901 	strb.w	r4, [r3], #-1
 80134f2:	e7d3      	b.n	801349c <_format_hex+0x4a>
 80134f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80134f8:	4630      	mov	r0, r6
 80134fa:	f7ff ff33 	bl	8013364 <_xputch>
 80134fe:	e7d4      	b.n	80134aa <_format_hex+0x58>
 8013500:	2120      	movs	r1, #32
 8013502:	4630      	mov	r0, r6
 8013504:	f7ff ff2e 	bl	8013364 <_xputch>
 8013508:	3501      	adds	r5, #1
 801350a:	e7d1      	b.n	80134b0 <_format_hex+0x5e>

0801350c <_vprintf>:
 801350c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013510:	2700      	movs	r7, #0
 8013512:	b096      	sub	sp, #88	@ 0x58
 8013514:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8013518:	460b      	mov	r3, r1
 801351a:	4614      	mov	r4, r2
 801351c:	f04f 080a 	mov.w	r8, #10
 8013520:	7819      	ldrb	r1, [r3, #0]
 8013522:	b919      	cbnz	r1, 801352c <_vprintf+0x20>
 8013524:	9804      	ldr	r0, [sp, #16]
 8013526:	b016      	add	sp, #88	@ 0x58
 8013528:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801352c:	2925      	cmp	r1, #37	@ 0x25
 801352e:	f103 0501 	add.w	r5, r3, #1
 8013532:	d004      	beq.n	801353e <_vprintf+0x32>
 8013534:	a801      	add	r0, sp, #4
 8013536:	f7ff ff15 	bl	8013364 <_xputch>
 801353a:	462b      	mov	r3, r5
 801353c:	e7f0      	b.n	8013520 <_vprintf+0x14>
 801353e:	785a      	ldrb	r2, [r3, #1]
 8013540:	9703      	str	r7, [sp, #12]
 8013542:	2a30      	cmp	r2, #48	@ 0x30
 8013544:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8013548:	d127      	bne.n	801359a <_vprintf+0x8e>
 801354a:	2220      	movs	r2, #32
 801354c:	9201      	str	r2, [sp, #4]
 801354e:	1c9d      	adds	r5, r3, #2
 8013550:	2200      	movs	r2, #0
 8013552:	462e      	mov	r6, r5
 8013554:	4613      	mov	r3, r2
 8013556:	7831      	ldrb	r1, [r6, #0]
 8013558:	f1a1 0030 	sub.w	r0, r1, #48	@ 0x30
 801355c:	2809      	cmp	r0, #9
 801355e:	4635      	mov	r5, r6
 8013560:	f106 0601 	add.w	r6, r6, #1
 8013564:	d91d      	bls.n	80135a2 <_vprintf+0x96>
 8013566:	b12a      	cbz	r2, 8013574 <_vprintf+0x68>
 8013568:	9303      	str	r3, [sp, #12]
 801356a:	b11b      	cbz	r3, 8013574 <_vprintf+0x68>
 801356c:	9b01      	ldr	r3, [sp, #4]
 801356e:	f043 0310 	orr.w	r3, r3, #16
 8013572:	9301      	str	r3, [sp, #4]
 8013574:	292e      	cmp	r1, #46	@ 0x2e
 8013576:	d123      	bne.n	80135c0 <_vprintf+0xb4>
 8013578:	786b      	ldrb	r3, [r5, #1]
 801357a:	2b2a      	cmp	r3, #42	@ 0x2a
 801357c:	d015      	beq.n	80135aa <_vprintf+0x9e>
 801357e:	2100      	movs	r1, #0
 8013580:	1c68      	adds	r0, r5, #1
 8013582:	460a      	mov	r2, r1
 8013584:	260a      	movs	r6, #10
 8013586:	7803      	ldrb	r3, [r0, #0]
 8013588:	3b30      	subs	r3, #48	@ 0x30
 801358a:	2b09      	cmp	r3, #9
 801358c:	4605      	mov	r5, r0
 801358e:	f100 0001 	add.w	r0, r0, #1
 8013592:	d959      	bls.n	8013648 <_vprintf+0x13c>
 8013594:	b181      	cbz	r1, 80135b8 <_vprintf+0xac>
 8013596:	9202      	str	r2, [sp, #8]
 8013598:	e00e      	b.n	80135b8 <_vprintf+0xac>
 801359a:	2a2d      	cmp	r2, #45	@ 0x2d
 801359c:	d1d8      	bne.n	8013550 <_vprintf+0x44>
 801359e:	2240      	movs	r2, #64	@ 0x40
 80135a0:	e7d4      	b.n	801354c <_vprintf+0x40>
 80135a2:	fb08 0303 	mla	r3, r8, r3, r0
 80135a6:	2201      	movs	r2, #1
 80135a8:	e7d5      	b.n	8013556 <_vprintf+0x4a>
 80135aa:	f854 3b04 	ldr.w	r3, [r4], #4
 80135ae:	2b00      	cmp	r3, #0
 80135b0:	bfb8      	it	lt
 80135b2:	425b      	neglt	r3, r3
 80135b4:	3502      	adds	r5, #2
 80135b6:	9302      	str	r3, [sp, #8]
 80135b8:	9b01      	ldr	r3, [sp, #4]
 80135ba:	f043 0301 	orr.w	r3, r3, #1
 80135be:	9301      	str	r3, [sp, #4]
 80135c0:	782b      	ldrb	r3, [r5, #0]
 80135c2:	2b6c      	cmp	r3, #108	@ 0x6c
 80135c4:	bf04      	itt	eq
 80135c6:	3501      	addeq	r5, #1
 80135c8:	9b01      	ldreq	r3, [sp, #4]
 80135ca:	7829      	ldrb	r1, [r5, #0]
 80135cc:	bf04      	itt	eq
 80135ce:	f043 0304 	orreq.w	r3, r3, #4
 80135d2:	9301      	streq	r3, [sp, #4]
 80135d4:	2958      	cmp	r1, #88	@ 0x58
 80135d6:	f000 8143 	beq.w	8013860 <_vprintf+0x354>
 80135da:	f1a1 0363 	sub.w	r3, r1, #99	@ 0x63
 80135de:	b2da      	uxtb	r2, r3
 80135e0:	2a15      	cmp	r2, #21
 80135e2:	d8a7      	bhi.n	8013534 <_vprintf+0x28>
 80135e4:	2b15      	cmp	r3, #21
 80135e6:	d8a5      	bhi.n	8013534 <_vprintf+0x28>
 80135e8:	a201      	add	r2, pc, #4	@ (adr r2, 80135f0 <_vprintf+0xe4>)
 80135ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80135ee:	bf00      	nop
 80135f0:	08013651 	stmdaeq	r1, {r0, r4, r6, r9, sl, ip, sp}
 80135f4:	0801365f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, ip, sp}
 80135f8:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 80135fc:	08013679 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, ip, sp}
 8013600:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013604:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013608:	0801365f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, sl, ip, sp}
 801360c:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013610:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013614:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013618:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 801361c:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013620:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013624:	080137c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, ip, sp}
 8013628:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 801362c:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013630:	080137e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, ip, sp}
 8013634:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013638:	0801385b 	stmdaeq	r1, {r0, r1, r3, r4, r6, fp, ip, sp}
 801363c:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013640:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8013644:	08013869 	stmdaeq	r1, {r0, r3, r5, r6, fp, ip, sp}
 8013648:	fb06 3202 	mla	r2, r6, r2, r3
 801364c:	2101      	movs	r1, #1
 801364e:	e79a      	b.n	8013586 <_vprintf+0x7a>
 8013650:	f854 1b04 	ldr.w	r1, [r4], #4
 8013654:	a801      	add	r0, sp, #4
 8013656:	f7ff fe85 	bl	8013364 <_xputch>
 801365a:	3501      	adds	r5, #1
 801365c:	e76d      	b.n	801353a <_vprintf+0x2e>
 801365e:	f854 1b04 	ldr.w	r1, [r4], #4
 8013662:	9b01      	ldr	r3, [sp, #4]
 8013664:	2900      	cmp	r1, #0
 8013666:	da03      	bge.n	8013670 <_vprintf+0x164>
 8013668:	f043 0308 	orr.w	r3, r3, #8
 801366c:	9301      	str	r3, [sp, #4]
 801366e:	4249      	negs	r1, r1
 8013670:	a801      	add	r0, sp, #4
 8013672:	f7ff fe8f 	bl	8013394 <_format_int>
 8013676:	e7f0      	b.n	801365a <_vprintf+0x14e>
 8013678:	3407      	adds	r4, #7
 801367a:	f024 0407 	bic.w	r4, r4, #7
 801367e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8013682:	f7f5 fc77 	bl	8008f74 <__aeabi_d2f>
 8013686:	9b01      	ldr	r3, [sp, #4]
 8013688:	ee07 0a90 	vmov	s15, r0
 801368c:	07de      	lsls	r6, r3, #31
 801368e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013692:	bf4c      	ite	mi
 8013694:	9e02      	ldrmi	r6, [sp, #8]
 8013696:	2606      	movpl	r6, #6
 8013698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801369c:	bf48      	it	mi
 801369e:	eef1 7a67 	vnegmi.f32	s15, s15
 80136a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80136a6:	bf4a      	itet	mi
 80136a8:	f10d 0a19 	addmi.w	sl, sp, #25
 80136ac:	f10d 0a18 	addpl.w	sl, sp, #24
 80136b0:	232d      	movmi	r3, #45	@ 0x2d
 80136b2:	ee17 0a10 	vmov	r0, s14
 80136b6:	f04f 0200 	mov.w	r2, #0
 80136ba:	4651      	mov	r1, sl
 80136bc:	bf48      	it	mi
 80136be:	f88d 3018 	strbmi.w	r3, [sp, #24]
 80136c2:	f7ff fe13 	bl	80132ec <_itostr>
 80136c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136ca:	232e      	movs	r3, #46	@ 0x2e
 80136cc:	f80a 3000 	strb.w	r3, [sl, r0]
 80136d0:	eb0a 0900 	add.w	r9, sl, r0
 80136d4:	230a      	movs	r3, #10
 80136d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80136da:	1c72      	adds	r2, r6, #1
 80136dc:	f109 0901 	add.w	r9, r9, #1
 80136e0:	4619      	mov	r1, r3
 80136e2:	2e00      	cmp	r6, #0
 80136e4:	dc41      	bgt.n	801376a <_vprintf+0x25e>
 80136e6:	ee07 3a10 	vmov	s14, r3
 80136ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136ee:	4649      	mov	r1, r9
 80136f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80136f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80136f8:	ee17 0a90 	vmov	r0, s15
 80136fc:	f7ff fdf6 	bl	80132ec <_itostr>
 8013700:	4448      	add	r0, r9
 8013702:	f10d 0918 	add.w	r9, sp, #24
 8013706:	eba0 0009 	sub.w	r0, r0, r9
 801370a:	1e46      	subs	r6, r0, #1
 801370c:	eb09 0206 	add.w	r2, r9, r6
 8013710:	f819 3006 	ldrb.w	r3, [r9, r6]
 8013714:	2b34      	cmp	r3, #52	@ 0x34
 8013716:	d911      	bls.n	801373c <_vprintf+0x230>
 8013718:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 801371c:	292e      	cmp	r1, #46	@ 0x2e
 801371e:	f102 33ff 	add.w	r3, r2, #4294967295	@ 0xffffffff
 8013722:	d028      	beq.n	8013776 <_vprintf+0x26a>
 8013724:	469c      	mov	ip, r3
 8013726:	f04f 0e30 	mov.w	lr, #48	@ 0x30
 801372a:	4663      	mov	r3, ip
 801372c:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8013730:	2939      	cmp	r1, #57	@ 0x39
 8013732:	d01d      	beq.n	8013770 <_vprintf+0x264>
 8013734:	292e      	cmp	r1, #46	@ 0x2e
 8013736:	d01e      	beq.n	8013776 <_vprintf+0x26a>
 8013738:	3101      	adds	r1, #1
 801373a:	7019      	strb	r1, [r3, #0]
 801373c:	f106 0358 	add.w	r3, r6, #88	@ 0x58
 8013740:	446b      	add	r3, sp
 8013742:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8013746:	2b2e      	cmp	r3, #46	@ 0x2e
 8013748:	bf08      	it	eq
 801374a:	f106 36ff 	addeq.w	r6, r6, #4294967295	@ 0xffffffff
 801374e:	46b2      	mov	sl, r6
 8013750:	9b03      	ldr	r3, [sp, #12]
 8013752:	4553      	cmp	r3, sl
 8013754:	dc2d      	bgt.n	80137b2 <_vprintf+0x2a6>
 8013756:	2e00      	cmp	r6, #0
 8013758:	f77f af7f 	ble.w	801365a <_vprintf+0x14e>
 801375c:	f819 1b01 	ldrb.w	r1, [r9], #1
 8013760:	a801      	add	r0, sp, #4
 8013762:	f7ff fdff 	bl	8013364 <_xputch>
 8013766:	3e01      	subs	r6, #1
 8013768:	e7f5      	b.n	8013756 <_vprintf+0x24a>
 801376a:	434b      	muls	r3, r1
 801376c:	3e01      	subs	r6, #1
 801376e:	e7b8      	b.n	80136e2 <_vprintf+0x1d6>
 8013770:	f88c e001 	strb.w	lr, [ip, #1]
 8013774:	e7d9      	b.n	801372a <_vprintf+0x21e>
 8013776:	3b01      	subs	r3, #1
 8013778:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 801377c:	7819      	ldrb	r1, [r3, #0]
 801377e:	2939      	cmp	r1, #57	@ 0x39
 8013780:	d10d      	bne.n	801379e <_vprintf+0x292>
 8013782:	454b      	cmp	r3, r9
 8013784:	d208      	bcs.n	8013798 <_vprintf+0x28c>
 8013786:	1c51      	adds	r1, r2, #1
 8013788:	1c9e      	adds	r6, r3, #2
 801378a:	3202      	adds	r2, #2
 801378c:	4296      	cmp	r6, r2
 801378e:	d10b      	bne.n	80137a8 <_vprintf+0x29c>
 8013790:	2231      	movs	r2, #49	@ 0x31
 8013792:	705a      	strb	r2, [r3, #1]
 8013794:	4606      	mov	r6, r0
 8013796:	e7d1      	b.n	801373c <_vprintf+0x230>
 8013798:	f803 c901 	strb.w	ip, [r3], #-1
 801379c:	e7ee      	b.n	801377c <_vprintf+0x270>
 801379e:	454b      	cmp	r3, r9
 80137a0:	d3f1      	bcc.n	8013786 <_vprintf+0x27a>
 80137a2:	292d      	cmp	r1, #45	@ 0x2d
 80137a4:	d1c8      	bne.n	8013738 <_vprintf+0x22c>
 80137a6:	e7ee      	b.n	8013786 <_vprintf+0x27a>
 80137a8:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 80137ac:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80137b0:	e7ec      	b.n	801378c <_vprintf+0x280>
 80137b2:	2120      	movs	r1, #32
 80137b4:	a801      	add	r0, sp, #4
 80137b6:	f7ff fdd5 	bl	8013364 <_xputch>
 80137ba:	f10a 0a01 	add.w	sl, sl, #1
 80137be:	e7c7      	b.n	8013750 <_vprintf+0x244>
 80137c0:	2308      	movs	r3, #8
 80137c2:	f854 6b04 	ldr.w	r6, [r4], #4
 80137c6:	9303      	str	r3, [sp, #12]
 80137c8:	2130      	movs	r1, #48	@ 0x30
 80137ca:	2320      	movs	r3, #32
 80137cc:	a801      	add	r0, sp, #4
 80137ce:	9301      	str	r3, [sp, #4]
 80137d0:	f7ff fdc8 	bl	8013364 <_xputch>
 80137d4:	2178      	movs	r1, #120	@ 0x78
 80137d6:	a801      	add	r0, sp, #4
 80137d8:	f7ff fdc4 	bl	8013364 <_xputch>
 80137dc:	4631      	mov	r1, r6
 80137de:	a801      	add	r0, sp, #4
 80137e0:	f7ff fe37 	bl	8013452 <_format_hex>
 80137e4:	e739      	b.n	801365a <_vprintf+0x14e>
 80137e6:	f854 9b04 	ldr.w	r9, [r4], #4
 80137ea:	2600      	movs	r6, #0
 80137ec:	f819 3006 	ldrb.w	r3, [r9, r6]
 80137f0:	b993      	cbnz	r3, 8013818 <_vprintf+0x30c>
 80137f2:	9b01      	ldr	r3, [sp, #4]
 80137f4:	07d9      	lsls	r1, r3, #31
 80137f6:	d503      	bpl.n	8013800 <_vprintf+0x2f4>
 80137f8:	9b02      	ldr	r3, [sp, #8]
 80137fa:	429e      	cmp	r6, r3
 80137fc:	bfa8      	it	ge
 80137fe:	461e      	movge	r6, r3
 8013800:	9b01      	ldr	r3, [sp, #4]
 8013802:	065a      	lsls	r2, r3, #25
 8013804:	f106 0a01 	add.w	sl, r6, #1
 8013808:	d403      	bmi.n	8013812 <_vprintf+0x306>
 801380a:	9b03      	ldr	r3, [sp, #12]
 801380c:	429e      	cmp	r6, r3
 801380e:	db05      	blt.n	801381c <_vprintf+0x310>
 8013810:	4656      	mov	r6, sl
 8013812:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8013816:	e00d      	b.n	8013834 <_vprintf+0x328>
 8013818:	3601      	adds	r6, #1
 801381a:	e7e7      	b.n	80137ec <_vprintf+0x2e0>
 801381c:	2120      	movs	r1, #32
 801381e:	a801      	add	r0, sp, #4
 8013820:	f7ff fda0 	bl	8013364 <_xputch>
 8013824:	4656      	mov	r6, sl
 8013826:	e7eb      	b.n	8013800 <_vprintf+0x2f4>
 8013828:	a801      	add	r0, sp, #4
 801382a:	f7ff fd9b 	bl	8013364 <_xputch>
 801382e:	9b02      	ldr	r3, [sp, #8]
 8013830:	3b01      	subs	r3, #1
 8013832:	9302      	str	r3, [sp, #8]
 8013834:	9b01      	ldr	r3, [sp, #4]
 8013836:	07db      	lsls	r3, r3, #31
 8013838:	d501      	bpl.n	801383e <_vprintf+0x332>
 801383a:	9b02      	ldr	r3, [sp, #8]
 801383c:	b11b      	cbz	r3, 8013846 <_vprintf+0x33a>
 801383e:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8013842:	2900      	cmp	r1, #0
 8013844:	d1f0      	bne.n	8013828 <_vprintf+0x31c>
 8013846:	9b03      	ldr	r3, [sp, #12]
 8013848:	42b3      	cmp	r3, r6
 801384a:	f77f af06 	ble.w	801365a <_vprintf+0x14e>
 801384e:	2120      	movs	r1, #32
 8013850:	a801      	add	r0, sp, #4
 8013852:	f7ff fd87 	bl	8013364 <_xputch>
 8013856:	3601      	adds	r6, #1
 8013858:	e7f5      	b.n	8013846 <_vprintf+0x33a>
 801385a:	f854 1b04 	ldr.w	r1, [r4], #4
 801385e:	e707      	b.n	8013670 <_vprintf+0x164>
 8013860:	9b01      	ldr	r3, [sp, #4]
 8013862:	f043 0302 	orr.w	r3, r3, #2
 8013866:	9301      	str	r3, [sp, #4]
 8013868:	f854 1b04 	ldr.w	r1, [r4], #4
 801386c:	e7b7      	b.n	80137de <_vprintf+0x2d2>
 801386e:	bf00      	nop

08013870 <printf>:
 8013870:	b40f      	push	{r0, r1, r2, r3}
 8013872:	b507      	push	{r0, r1, r2, lr}
 8013874:	aa04      	add	r2, sp, #16
 8013876:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801387a:	f852 1b04 	ldr.w	r1, [r2], #4
 801387e:	9201      	str	r2, [sp, #4]
 8013880:	f7ff fe44 	bl	801350c <_vprintf>
 8013884:	b003      	add	sp, #12
 8013886:	f85d eb04 	ldr.w	lr, [sp], #4
 801388a:	b004      	add	sp, #16
 801388c:	4770      	bx	lr
	...

08013890 <sprintf>:
 8013890:	b40e      	push	{r1, r2, r3}
 8013892:	b517      	push	{r0, r1, r2, r4, lr}
 8013894:	4c09      	ldr	r4, [pc, #36]	@ (80138bc <sprintf+0x2c>)
 8013896:	aa05      	add	r2, sp, #20
 8013898:	6020      	str	r0, [r4, #0]
 801389a:	f852 1b04 	ldr.w	r1, [r2], #4
 801389e:	9201      	str	r2, [sp, #4]
 80138a0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80138a4:	f7ff fe32 	bl	801350c <_vprintf>
 80138a8:	6822      	ldr	r2, [r4, #0]
 80138aa:	2300      	movs	r3, #0
 80138ac:	7013      	strb	r3, [r2, #0]
 80138ae:	6023      	str	r3, [r4, #0]
 80138b0:	b003      	add	sp, #12
 80138b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80138b6:	b003      	add	sp, #12
 80138b8:	4770      	bx	lr
 80138ba:	bf00      	nop
 80138bc:	20004838 	andcs	r4, r0, r8, lsr r8

080138c0 <snprintf>:
 80138c0:	b40c      	push	{r2, r3}
 80138c2:	b513      	push	{r0, r1, r4, lr}
 80138c4:	4c09      	ldr	r4, [pc, #36]	@ (80138ec <snprintf+0x2c>)
 80138c6:	aa04      	add	r2, sp, #16
 80138c8:	460b      	mov	r3, r1
 80138ca:	6020      	str	r0, [r4, #0]
 80138cc:	f852 1b04 	ldr.w	r1, [r2], #4
 80138d0:	9201      	str	r2, [sp, #4]
 80138d2:	4618      	mov	r0, r3
 80138d4:	f7ff fe1a 	bl	801350c <_vprintf>
 80138d8:	6822      	ldr	r2, [r4, #0]
 80138da:	2300      	movs	r3, #0
 80138dc:	7013      	strb	r3, [r2, #0]
 80138de:	6023      	str	r3, [r4, #0]
 80138e0:	b002      	add	sp, #8
 80138e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80138e6:	b002      	add	sp, #8
 80138e8:	4770      	bx	lr
 80138ea:	bf00      	nop
 80138ec:	20004838 	andcs	r4, r0, r8, lsr r8

080138f0 <vsnprintf>:
 80138f0:	b538      	push	{r3, r4, r5, lr}
 80138f2:	4c06      	ldr	r4, [pc, #24]	@ (801390c <vsnprintf+0x1c>)
 80138f4:	4605      	mov	r5, r0
 80138f6:	4608      	mov	r0, r1
 80138f8:	4611      	mov	r1, r2
 80138fa:	461a      	mov	r2, r3
 80138fc:	6025      	str	r5, [r4, #0]
 80138fe:	f7ff fe05 	bl	801350c <_vprintf>
 8013902:	6822      	ldr	r2, [r4, #0]
 8013904:	2300      	movs	r3, #0
 8013906:	7013      	strb	r3, [r2, #0]
 8013908:	6023      	str	r3, [r4, #0]
 801390a:	bd38      	pop	{r3, r4, r5, pc}
 801390c:	20004838 	andcs	r4, r0, r8, lsr r8

08013910 <putchar>:
 8013910:	b508      	push	{r3, lr}
 8013912:	f7fd fad2 	bl	8010eba <console_putc>
 8013916:	2001      	movs	r0, #1
 8013918:	bd08      	pop	{r3, pc}

0801391a <puts>:
 801391a:	b508      	push	{r3, lr}
 801391c:	f7fd facf 	bl	8010ebe <console_puts>
 8013920:	200a      	movs	r0, #10
 8013922:	f7fd faca 	bl	8010eba <console_putc>
 8013926:	2001      	movs	r0, #1
 8013928:	bd08      	pop	{r3, pc}
	...

0801392c <random>:
 801392c:	4a06      	ldr	r2, [pc, #24]	@ (8013948 <random+0x1c>)
 801392e:	6813      	ldr	r3, [r2, #0]
 8013930:	10d8      	asrs	r0, r3, #3
 8013932:	ea80 00a3 	eor.w	r0, r0, r3, asr #2
 8013936:	4058      	eors	r0, r3
 8013938:	ea80 1063 	eor.w	r0, r0, r3, asr #5
 801393c:	03c0      	lsls	r0, r0, #15
 801393e:	b280      	uxth	r0, r0
 8013940:	ea40 0063 	orr.w	r0, r0, r3, asr #1
 8013944:	6010      	str	r0, [r2, #0]
 8013946:	4770      	bx	lr
 8013948:	20000004 	andcs	r0, r0, r4

0801394c <strtok>:
 801394c:	b570      	push	{r4, r5, r6, lr}
 801394e:	4603      	mov	r3, r0
 8013950:	b910      	cbnz	r0, 8013958 <strtok+0xc>
 8013952:	4b12      	ldr	r3, [pc, #72]	@ (801399c <strtok+0x50>)
 8013954:	681b      	ldr	r3, [r3, #0]
 8013956:	b14b      	cbz	r3, 801396c <strtok+0x20>
 8013958:	4618      	mov	r0, r3
 801395a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801395e:	460d      	mov	r5, r1
 8013960:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013964:	b924      	cbnz	r4, 8013970 <strtok+0x24>
 8013966:	b94a      	cbnz	r2, 801397c <strtok+0x30>
 8013968:	4b0c      	ldr	r3, [pc, #48]	@ (801399c <strtok+0x50>)
 801396a:	601a      	str	r2, [r3, #0]
 801396c:	2000      	movs	r0, #0
 801396e:	bd70      	pop	{r4, r5, r6, pc}
 8013970:	42a2      	cmp	r2, r4
 8013972:	d1f5      	bne.n	8013960 <strtok+0x14>
 8013974:	e7f0      	b.n	8013958 <strtok+0xc>
 8013976:	4613      	mov	r3, r2
 8013978:	e00c      	b.n	8013994 <strtok+0x48>
 801397a:	b91c      	cbnz	r4, 8013984 <strtok+0x38>
 801397c:	461e      	mov	r6, r3
 801397e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013982:	460d      	mov	r5, r1
 8013984:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013988:	42a2      	cmp	r2, r4
 801398a:	d1f6      	bne.n	801397a <strtok+0x2e>
 801398c:	2a00      	cmp	r2, #0
 801398e:	d0f2      	beq.n	8013976 <strtok+0x2a>
 8013990:	2200      	movs	r2, #0
 8013992:	7032      	strb	r2, [r6, #0]
 8013994:	4a01      	ldr	r2, [pc, #4]	@ (801399c <strtok+0x50>)
 8013996:	6013      	str	r3, [r2, #0]
 8013998:	e7e9      	b.n	801396e <strtok+0x22>
 801399a:	bf00      	nop
 801399c:	2000483c 	andcs	r4, r0, ip, lsr r8

080139a0 <uuid_unparse_x>:
 80139a0:	b530      	push	{r4, r5, lr}
 80139a2:	4603      	mov	r3, r0
 80139a4:	4608      	mov	r0, r1
 80139a6:	4611      	mov	r1, r2
 80139a8:	681a      	ldr	r2, [r3, #0]
 80139aa:	891c      	ldrh	r4, [r3, #8]
 80139ac:	b08f      	sub	sp, #60	@ 0x3c
 80139ae:	ba12      	rev	r2, r2
 80139b0:	920a      	str	r2, [sp, #40]	@ 0x28
 80139b2:	889a      	ldrh	r2, [r3, #4]
 80139b4:	ba52      	rev16	r2, r2
 80139b6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80139ba:	88da      	ldrh	r2, [r3, #6]
 80139bc:	ba64      	rev16	r4, r4
 80139be:	ba52      	rev16	r2, r2
 80139c0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80139c4:	f8ad 4030 	strh.w	r4, [sp, #48]	@ 0x30
 80139c8:	f103 020a 	add.w	r2, r3, #10
 80139cc:	f10d 0431 	add.w	r4, sp, #49	@ 0x31
 80139d0:	3310      	adds	r3, #16
 80139d2:	f812 5b01 	ldrb.w	r5, [r2], #1
 80139d6:	f804 5f01 	strb.w	r5, [r4, #1]!
 80139da:	4293      	cmp	r3, r2
 80139dc:	d1f9      	bne.n	80139d2 <uuid_unparse_x+0x32>
 80139de:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
 80139e2:	9208      	str	r2, [sp, #32]
 80139e4:	f89d 2036 	ldrb.w	r2, [sp, #54]	@ 0x36
 80139e8:	9207      	str	r2, [sp, #28]
 80139ea:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
 80139ee:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 80139f2:	9206      	str	r2, [sp, #24]
 80139f4:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
 80139f8:	9205      	str	r2, [sp, #20]
 80139fa:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
 80139fe:	9204      	str	r2, [sp, #16]
 8013a00:	0a1b      	lsrs	r3, r3, #8
 8013a02:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
 8013a06:	9203      	str	r2, [sp, #12]
 8013a08:	9301      	str	r3, [sp, #4]
 8013a0a:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
 8013a0e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8013a12:	9202      	str	r2, [sp, #8]
 8013a14:	9300      	str	r3, [sp, #0]
 8013a16:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013a18:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8013a1c:	f7ff ff38 	bl	8013890 <sprintf>
 8013a20:	b00f      	add	sp, #60	@ 0x3c
 8013a22:	bd30      	pop	{r4, r5, pc}

08013a24 <uuid_unparse>:
 8013a24:	4a01      	ldr	r2, [pc, #4]	@ (8013a2c <uuid_unparse+0x8>)
 8013a26:	f7ff bfbb 	b.w	80139a0 <uuid_unparse_x>
 8013a2a:	bf00      	nop
 8013a2c:	080148ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, fp, lr}

08013a30 <isleapyear(int)>:
 8013a30:	2264      	movs	r2, #100	@ 0x64
 8013a32:	fb90 f3f2 	sdiv	r3, r0, r2
 8013a36:	fb02 0313 	mls	r3, r2, r3, r0
 8013a3a:	b94b      	cbnz	r3, 8013a50 <isleapyear(int)+0x20>
 8013a3c:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8013a40:	fb90 f2f3 	sdiv	r2, r0, r3
 8013a44:	fb03 0012 	mls	r0, r3, r2, r0
 8013a48:	fab0 f080 	clz	r0, r0
 8013a4c:	0940      	lsrs	r0, r0, #5
 8013a4e:	4770      	bx	lr
 8013a50:	f010 0f03 	tst.w	r0, #3
 8013a54:	bf0c      	ite	eq
 8013a56:	2001      	moveq	r0, #1
 8013a58:	2000      	movne	r0, #0
 8013a5a:	4770      	bx	lr

08013a5c <getdaysofmonth(int, int)>:
 8013a5c:	b510      	push	{r4, lr}
 8013a5e:	4604      	mov	r4, r0
 8013a60:	2c01      	cmp	r4, #1
 8013a62:	4608      	mov	r0, r1
 8013a64:	d102      	bne.n	8013a6c <getdaysofmonth(int, int)+0x10>
 8013a66:	f7ff ffe3 	bl	8013a30 <isleapyear(int)>
 8013a6a:	b918      	cbnz	r0, 8013a74 <getdaysofmonth(int, int)+0x18>
 8013a6c:	4b02      	ldr	r3, [pc, #8]	@ (8013a78 <getdaysofmonth(int, int)+0x1c>)
 8013a6e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8013a72:	bd10      	pop	{r4, pc}
 8013a74:	201d      	movs	r0, #29
 8013a76:	e7fc      	b.n	8013a72 <getdaysofmonth(int, int)+0x16>
 8013a78:	0801764c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, sp, lr}

08013a7c <gmtime>:
 8013a7c:	b570      	push	{r4, r5, r6, lr}
 8013a7e:	2800      	cmp	r0, #0
 8013a80:	d03c      	beq.n	8013afc <gmtime+0x80>
 8013a82:	6803      	ldr	r3, [r0, #0]
 8013a84:	4d1e      	ldr	r5, [pc, #120]	@ (8013b00 <gmtime+0x84>)
 8013a86:	213c      	movs	r1, #60	@ 0x3c
 8013a88:	fb93 f2f1 	sdiv	r2, r3, r1
 8013a8c:	fb01 3312 	mls	r3, r1, r2, r3
 8013a90:	602b      	str	r3, [r5, #0]
 8013a92:	fb92 f3f1 	sdiv	r3, r2, r1
 8013a96:	fb01 2213 	mls	r2, r1, r3, r2
 8013a9a:	606a      	str	r2, [r5, #4]
 8013a9c:	2218      	movs	r2, #24
 8013a9e:	fb93 f4f2 	sdiv	r4, r3, r2
 8013aa2:	fb02 3314 	mls	r3, r2, r4, r3
 8013aa6:	60ab      	str	r3, [r5, #8]
 8013aa8:	1d22      	adds	r2, r4, #4
 8013aaa:	2307      	movs	r3, #7
 8013aac:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ab0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8013ab4:	1ad2      	subs	r2, r2, r3
 8013ab6:	61aa      	str	r2, [r5, #24]
 8013ab8:	f240 71b2 	movw	r1, #1970	@ 0x7b2
 8013abc:	f240 166d 	movw	r6, #365	@ 0x16d
 8013ac0:	4608      	mov	r0, r1
 8013ac2:	f7ff ffb5 	bl	8013a30 <isleapyear(int)>
 8013ac6:	2800      	cmp	r0, #0
 8013ac8:	bf0c      	ite	eq
 8013aca:	4633      	moveq	r3, r6
 8013acc:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8013ad0:	429c      	cmp	r4, r3
 8013ad2:	db02      	blt.n	8013ada <gmtime+0x5e>
 8013ad4:	1ae4      	subs	r4, r4, r3
 8013ad6:	3101      	adds	r1, #1
 8013ad8:	e7f2      	b.n	8013ac0 <gmtime+0x44>
 8013ada:	f2a1 736c 	subw	r3, r1, #1900	@ 0x76c
 8013ade:	616b      	str	r3, [r5, #20]
 8013ae0:	61ec      	str	r4, [r5, #28]
 8013ae2:	2600      	movs	r6, #0
 8013ae4:	4630      	mov	r0, r6
 8013ae6:	f7ff ffb9 	bl	8013a5c <getdaysofmonth(int, int)>
 8013aea:	4284      	cmp	r4, r0
 8013aec:	db02      	blt.n	8013af4 <gmtime+0x78>
 8013aee:	1a24      	subs	r4, r4, r0
 8013af0:	3601      	adds	r6, #1
 8013af2:	e7f7      	b.n	8013ae4 <gmtime+0x68>
 8013af4:	3401      	adds	r4, #1
 8013af6:	4802      	ldr	r0, [pc, #8]	@ (8013b00 <gmtime+0x84>)
 8013af8:	612e      	str	r6, [r5, #16]
 8013afa:	60ec      	str	r4, [r5, #12]
 8013afc:	bd70      	pop	{r4, r5, r6, pc}
 8013afe:	bf00      	nop
 8013b00:	20004840 	andcs	r4, r0, r0, asr #16

08013b04 <localtime>:
 8013b04:	b507      	push	{r0, r1, r2, lr}
 8013b06:	b140      	cbz	r0, 8013b1a <localtime+0x16>
 8013b08:	4b05      	ldr	r3, [pc, #20]	@ (8013b20 <localtime+0x1c>)
 8013b0a:	6802      	ldr	r2, [r0, #0]
 8013b0c:	681b      	ldr	r3, [r3, #0]
 8013b0e:	681b      	ldr	r3, [r3, #0]
 8013b10:	a801      	add	r0, sp, #4
 8013b12:	4413      	add	r3, r2
 8013b14:	9301      	str	r3, [sp, #4]
 8013b16:	f7ff ffb1 	bl	8013a7c <gmtime>
 8013b1a:	b003      	add	sp, #12
 8013b1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8013b20:	20004864 	andcs	r4, r0, r4, ror #16

08013b24 <mktime>:
 8013b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b28:	4604      	mov	r4, r0
 8013b2a:	2800      	cmp	r0, #0
 8013b2c:	d043      	beq.n	8013bb6 <mktime+0x92>
 8013b2e:	6941      	ldr	r1, [r0, #20]
 8013b30:	f1a1 0346 	sub.w	r3, r1, #70	@ 0x46
 8013b34:	2b45      	cmp	r3, #69	@ 0x45
 8013b36:	d83e      	bhi.n	8013bb6 <mktime+0x92>
 8013b38:	f240 75b2 	movw	r5, #1970	@ 0x7b2
 8013b3c:	2600      	movs	r6, #0
 8013b3e:	f201 776b 	addw	r7, r1, #1899	@ 0x76b
 8013b42:	f240 186d 	movw	r8, #365	@ 0x16d
 8013b46:	42af      	cmp	r7, r5
 8013b48:	da24      	bge.n	8013b94 <mktime+0x70>
 8013b4a:	6927      	ldr	r7, [r4, #16]
 8013b4c:	2f0b      	cmp	r7, #11
 8013b4e:	d832      	bhi.n	8013bb6 <mktime+0x92>
 8013b50:	2500      	movs	r5, #0
 8013b52:	42af      	cmp	r7, r5
 8013b54:	d129      	bne.n	8013baa <mktime+0x86>
 8013b56:	68e5      	ldr	r5, [r4, #12]
 8013b58:	2d00      	cmp	r5, #0
 8013b5a:	dd2c      	ble.n	8013bb6 <mktime+0x92>
 8013b5c:	4638      	mov	r0, r7
 8013b5e:	f7ff ff7d 	bl	8013a5c <getdaysofmonth(int, int)>
 8013b62:	4285      	cmp	r5, r0
 8013b64:	dc27      	bgt.n	8013bb6 <mktime+0x92>
 8013b66:	3d01      	subs	r5, #1
 8013b68:	2318      	movs	r3, #24
 8013b6a:	4435      	add	r5, r6
 8013b6c:	435d      	muls	r5, r3
 8013b6e:	68a3      	ldr	r3, [r4, #8]
 8013b70:	2b17      	cmp	r3, #23
 8013b72:	d820      	bhi.n	8013bb6 <mktime+0x92>
 8013b74:	442b      	add	r3, r5
 8013b76:	213c      	movs	r1, #60	@ 0x3c
 8013b78:	fb01 f203 	mul.w	r2, r1, r3
 8013b7c:	6863      	ldr	r3, [r4, #4]
 8013b7e:	2b3b      	cmp	r3, #59	@ 0x3b
 8013b80:	d819      	bhi.n	8013bb6 <mktime+0x92>
 8013b82:	6820      	ldr	r0, [r4, #0]
 8013b84:	4413      	add	r3, r2
 8013b86:	283b      	cmp	r0, #59	@ 0x3b
 8013b88:	fb01 f303 	mul.w	r3, r1, r3
 8013b8c:	d813      	bhi.n	8013bb6 <mktime+0x92>
 8013b8e:	4418      	add	r0, r3
 8013b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b94:	4628      	mov	r0, r5
 8013b96:	f7ff ff4b 	bl	8013a30 <isleapyear(int)>
 8013b9a:	2800      	cmp	r0, #0
 8013b9c:	bf0c      	ite	eq
 8013b9e:	4643      	moveq	r3, r8
 8013ba0:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8013ba4:	441e      	add	r6, r3
 8013ba6:	3501      	adds	r5, #1
 8013ba8:	e7cd      	b.n	8013b46 <mktime+0x22>
 8013baa:	4628      	mov	r0, r5
 8013bac:	f7ff ff56 	bl	8013a5c <getdaysofmonth(int, int)>
 8013bb0:	3501      	adds	r5, #1
 8013bb2:	4406      	add	r6, r0
 8013bb4:	e7cd      	b.n	8013b52 <mktime+0x2e>
 8013bb6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8013bba:	e7e9      	b.n	8013b90 <mktime+0x6c>

08013bbc <hal::uuid_init(unsigned char*)>:
 8013bbc:	4a0c      	ldr	r2, [pc, #48]	@ (8013bf0 <hal::uuid_init(unsigned char*)+0x34>)
 8013bbe:	b084      	sub	sp, #16
 8013bc0:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8013bc4:	9300      	str	r3, [sp, #0]
 8013bc6:	f8d2 1a14 	ldr.w	r1, [r2, #2580]	@ 0xa14
 8013bca:	9101      	str	r1, [sp, #4]
 8013bcc:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	@ 0xa18
 8013bd0:	9202      	str	r2, [sp, #8]
 8013bd2:	440b      	add	r3, r1
 8013bd4:	4413      	add	r3, r2
 8013bd6:	9303      	str	r3, [sp, #12]
 8013bd8:	f100 0210 	add.w	r2, r0, #16
 8013bdc:	466b      	mov	r3, sp
 8013bde:	f813 1b01 	ldrb.w	r1, [r3], #1
 8013be2:	f800 1b01 	strb.w	r1, [r0], #1
 8013be6:	4282      	cmp	r2, r0
 8013be8:	d1f9      	bne.n	8013bde <hal::uuid_init(unsigned char*)+0x22>
 8013bea:	b004      	add	sp, #16
 8013bec:	4770      	bx	lr
 8013bee:	bf00      	nop
 8013bf0:	1fff7000 	svcne	0x00ff7000

08013bf4 <gettimeofday>:
 8013bf4:	4b13      	ldr	r3, [pc, #76]	@ (8013c44 <gettimeofday+0x50>)
 8013bf6:	4a14      	ldr	r2, [pc, #80]	@ (8013c48 <gettimeofday+0x54>)
 8013bf8:	6819      	ldr	r1, [r3, #0]
 8013bfa:	6812      	ldr	r2, [r2, #0]
 8013bfc:	b510      	push	{r4, lr}
 8013bfe:	4c13      	ldr	r4, [pc, #76]	@ (8013c4c <gettimeofday+0x58>)
 8013c00:	601a      	str	r2, [r3, #0]
 8013c02:	4b13      	ldr	r3, [pc, #76]	@ (8013c50 <gettimeofday+0x5c>)
 8013c04:	1a51      	subs	r1, r2, r1
 8013c06:	fba3 2301 	umull	r2, r3, r3, r1
 8013c0a:	6822      	ldr	r2, [r4, #0]
 8013c0c:	ea4f 1e93 	mov.w	lr, r3, lsr #6
 8013c10:	eb02 1293 	add.w	r2, r2, r3, lsr #6
 8013c14:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8013c18:	6863      	ldr	r3, [r4, #4]
 8013c1a:	6022      	str	r2, [r4, #0]
 8013c1c:	fb0c 111e 	mls	r1, ip, lr, r1
 8013c20:	fb0c 3301 	mla	r3, ip, r1, r3
 8013c24:	490b      	ldr	r1, [pc, #44]	@ (8013c54 <gettimeofday+0x60>)
 8013c26:	6063      	str	r3, [r4, #4]
 8013c28:	428b      	cmp	r3, r1
 8013c2a:	bfc2      	ittt	gt
 8013c2c:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8013c30:	3201      	addgt	r2, #1
 8013c32:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8013c36:	e9c0 2300 	strd	r2, r3, [r0]
 8013c3a:	bfc8      	it	gt
 8013c3c:	e9c4 2300 	strdgt	r2, r3, [r4]
 8013c40:	2000      	movs	r0, #0
 8013c42:	bd10      	pop	{r4, pc}
 8013c44:	20004870 	andcs	r4, r0, r0, ror r8
 8013c48:	20004830 	andcs	r4, r0, r0, lsr r8
 8013c4c:	20004868 	andcs	r4, r0, r8, ror #16
 8013c50:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 8013c54:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

08013c58 <settimeofday>:
 8013c58:	4a07      	ldr	r2, [pc, #28]	@ (8013c78 <settimeofday+0x20>)
 8013c5a:	4b08      	ldr	r3, [pc, #32]	@ (8013c7c <settimeofday+0x24>)
 8013c5c:	4908      	ldr	r1, [pc, #32]	@ (8013c80 <settimeofday+0x28>)
 8013c5e:	b410      	push	{r4}
 8013c60:	6814      	ldr	r4, [r2, #0]
 8013c62:	6844      	ldr	r4, [r0, #4]
 8013c64:	6812      	ldr	r2, [r2, #0]
 8013c66:	6800      	ldr	r0, [r0, #0]
 8013c68:	605c      	str	r4, [r3, #4]
 8013c6a:	6018      	str	r0, [r3, #0]
 8013c6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013c70:	600a      	str	r2, [r1, #0]
 8013c72:	2000      	movs	r0, #0
 8013c74:	4770      	bx	lr
 8013c76:	bf00      	nop
 8013c78:	20004830 	andcs	r4, r0, r0, lsr r8
 8013c7c:	20004868 	andcs	r4, r0, r8, ror #16
 8013c80:	20004870 	andcs	r4, r0, r0, ror r8

08013c84 <time>:
 8013c84:	4b13      	ldr	r3, [pc, #76]	@ (8013cd4 <time+0x50>)
 8013c86:	4914      	ldr	r1, [pc, #80]	@ (8013cd8 <time+0x54>)
 8013c88:	681a      	ldr	r2, [r3, #0]
 8013c8a:	b430      	push	{r4, r5}
 8013c8c:	680d      	ldr	r5, [r1, #0]
 8013c8e:	601d      	str	r5, [r3, #0]
 8013c90:	4912      	ldr	r1, [pc, #72]	@ (8013cdc <time+0x58>)
 8013c92:	4b13      	ldr	r3, [pc, #76]	@ (8013ce0 <time+0x5c>)
 8013c94:	1aaa      	subs	r2, r5, r2
 8013c96:	fba3 3c02 	umull	r3, ip, r3, r2
 8013c9a:	680b      	ldr	r3, [r1, #0]
 8013c9c:	ea4f 159c 	mov.w	r5, ip, lsr #6
 8013ca0:	4604      	mov	r4, r0
 8013ca2:	eb03 109c 	add.w	r0, r3, ip, lsr #6
 8013ca6:	684b      	ldr	r3, [r1, #4]
 8013ca8:	6008      	str	r0, [r1, #0]
 8013caa:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8013cae:	fb0c 2215 	mls	r2, ip, r5, r2
 8013cb2:	fb0c 3302 	mla	r3, ip, r2, r3
 8013cb6:	4a0b      	ldr	r2, [pc, #44]	@ (8013ce4 <time+0x60>)
 8013cb8:	604b      	str	r3, [r1, #4]
 8013cba:	4293      	cmp	r3, r2
 8013cbc:	bfc1      	itttt	gt
 8013cbe:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8013cc2:	3001      	addgt	r0, #1
 8013cc4:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8013cc8:	e9c1 0300 	strdgt	r0, r3, [r1]
 8013ccc:	b104      	cbz	r4, 8013cd0 <time+0x4c>
 8013cce:	6020      	str	r0, [r4, #0]
 8013cd0:	bc30      	pop	{r4, r5}
 8013cd2:	4770      	bx	lr
 8013cd4:	20004870 	andcs	r4, r0, r0, ror r8
 8013cd8:	20004830 	andcs	r4, r0, r0, lsr r8
 8013cdc:	20004868 	andcs	r4, r0, r8, ror #16
 8013ce0:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 8013ce4:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

08013ce8 <operator delete[](void*)>:
 8013ce8:	f000 b838 	b.w	8013d5c <free>

08013cec <operator delete(void*, unsigned int)>:
 8013cec:	f000 b836 	b.w	8013d5c <free>

08013cf0 <operator new(unsigned int)>:
 8013cf0:	f000 b802 	b.w	8013cf8 <malloc>

08013cf4 <operator new[](unsigned int)>:
 8013cf4:	f000 b800 	b.w	8013cf8 <malloc>

08013cf8 <malloc>:
 8013cf8:	b510      	push	{r4, lr}
 8013cfa:	b180      	cbz	r0, 8013d1e <malloc+0x26>
 8013cfc:	4b12      	ldr	r3, [pc, #72]	@ (8013d48 <malloc+0x50>)
 8013cfe:	681a      	ldr	r2, [r3, #0]
 8013d00:	b97a      	cbnz	r2, 8013d22 <malloc+0x2a>
 8013d02:	4602      	mov	r2, r0
 8013d04:	4911      	ldr	r1, [pc, #68]	@ (8013d4c <malloc+0x54>)
 8013d06:	4c12      	ldr	r4, [pc, #72]	@ (8013d50 <malloc+0x58>)
 8013d08:	6808      	ldr	r0, [r1, #0]
 8013d0a:	f102 031b 	add.w	r3, r2, #27
 8013d0e:	f023 030f 	bic.w	r3, r3, #15
 8013d12:	4403      	add	r3, r0
 8013d14:	42a3      	cmp	r3, r4
 8013d16:	d911      	bls.n	8013d3c <malloc+0x44>
 8013d18:	480e      	ldr	r0, [pc, #56]	@ (8013d54 <malloc+0x5c>)
 8013d1a:	f7fd f8d3 	bl	8010ec4 <console_error>
 8013d1e:	2000      	movs	r0, #0
 8013d20:	bd10      	pop	{r4, pc}
 8013d22:	4282      	cmp	r2, r0
 8013d24:	d201      	bcs.n	8013d2a <malloc+0x32>
 8013d26:	3308      	adds	r3, #8
 8013d28:	e7e9      	b.n	8013cfe <malloc+0x6>
 8013d2a:	6858      	ldr	r0, [r3, #4]
 8013d2c:	2800      	cmp	r0, #0
 8013d2e:	d0e9      	beq.n	8013d04 <malloc+0xc>
 8013d30:	6882      	ldr	r2, [r0, #8]
 8013d32:	605a      	str	r2, [r3, #4]
 8013d34:	2300      	movs	r3, #0
 8013d36:	6083      	str	r3, [r0, #8]
 8013d38:	300c      	adds	r0, #12
 8013d3a:	e7f1      	b.n	8013d20 <malloc+0x28>
 8013d3c:	600b      	str	r3, [r1, #0]
 8013d3e:	4b06      	ldr	r3, [pc, #24]	@ (8013d58 <malloc+0x60>)
 8013d40:	e9c0 3200 	strd	r3, r2, [r0]
 8013d44:	e7f6      	b.n	8013d34 <malloc+0x3c>
 8013d46:	bf00      	nop
 8013d48:	20000008 	andcs	r0, r0, r8
 8013d4c:	20000070 	andcs	r0, r0, r0, ror r0
 8013d50:	1000ec90 	mulne	r0, r0, ip
 8013d54:	080148ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, fp, lr}
 8013d58:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0

08013d5c <free>:
 8013d5c:	b138      	cbz	r0, 8013d6e <free+0x12>
 8013d5e:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 8013d62:	4b09      	ldr	r3, [pc, #36]	@ (8013d88 <free+0x2c>)
 8013d64:	429a      	cmp	r2, r3
 8013d66:	d102      	bne.n	8013d6e <free+0x12>
 8013d68:	4b08      	ldr	r3, [pc, #32]	@ (8013d8c <free+0x30>)
 8013d6a:	681a      	ldr	r2, [r3, #0]
 8013d6c:	b902      	cbnz	r2, 8013d70 <free+0x14>
 8013d6e:	4770      	bx	lr
 8013d70:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8013d74:	4291      	cmp	r1, r2
 8013d76:	d105      	bne.n	8013d84 <free+0x28>
 8013d78:	685a      	ldr	r2, [r3, #4]
 8013d7a:	f840 2c04 	str.w	r2, [r0, #-4]
 8013d7e:	380c      	subs	r0, #12
 8013d80:	6058      	str	r0, [r3, #4]
 8013d82:	4770      	bx	lr
 8013d84:	3308      	adds	r3, #8
 8013d86:	e7f0      	b.n	8013d6a <free+0xe>
 8013d88:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0
 8013d8c:	20000008 	andcs	r0, r0, r8

08013d90 <__popcountsi2>:
 8013d90:	0843      	lsrs	r3, r0, #1
 8013d92:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
 8013d96:	1ac0      	subs	r0, r0, r3
 8013d98:	0883      	lsrs	r3, r0, #2
 8013d9a:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
 8013d9e:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
 8013da2:	4418      	add	r0, r3
 8013da4:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8013da8:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
 8013dac:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8013db0:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8013db4:	0e00      	lsrs	r0, r0, #24
 8013db6:	4770      	bx	lr

Disassembly of section .rodata:

08013db8 <vtable for RDMNetDevice-0xb5c>:
	...
 8013dc0:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8013dc4:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8013dc8:	00000000 	andeq	r0, r0, r0
 8013dcc:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8013dd0:	7261485b 	rsbvc	r4, r1, #5963776	@ 0x5b0000
 8013dd4:	75614664 	strbvc	r4, [r1, #-1636]!	@ 0xfffff99c
 8013dd8:	0a5d746c 	beq	9770f90 <__init_array_end+0x1759914>
 8013ddc:	53202d00 	noppl	{0}	@ <UNPREDICTABLE>
 8013de0:	6b636174 	blvs	98ec3b8 <__init_array_end+0x18d4d3c>
 8013de4:	61726620 	cmnvs	r2, r0, lsr #12
 8013de8:	0a3a656d 	beq	8ead3a4 <__init_array_end+0xe95d28>
 8013dec:	30522000 	subscc	r2, r2, r0
 8013df0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8013df4:	000a7825 	andeq	r7, sl, r5, lsr #16
 8013df8:	20315220 	eorscs	r5, r1, r0, lsr #4
 8013dfc:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8013e00:	20000a78 	andcs	r0, r0, r8, ror sl
 8013e04:	20203252 	eorcs	r3, r0, r2, asr r2
 8013e08:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8013e0c:	5220000a 	eorpl	r0, r0, #10
 8013e10:	3d202033 	stccc	0, cr2, [r0, #-204]!	@ 0xffffff34
 8013e14:	0a782520 	beq	9e1d29c <__init_array_end+0x1e05c20>
 8013e18:	31522000 	cmpcc	r2, r0
 8013e1c:	203d2032 	eorscs	r2, sp, r2, lsr r0
 8013e20:	000a7825 	andeq	r7, sl, r5, lsr #16
 8013e24:	20524c20 	subscs	r4, r2, r0, lsr #24
 8013e28:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8013e2c:	20000a78 	andcs	r0, r0, r8, ror sl
 8013e30:	20204350 	eorcs	r4, r0, r0, asr r3
 8013e34:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8013e38:	5020000a 	eorpl	r0, r0, sl
 8013e3c:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8013e40:	0a782520 	beq	9e1d2c8 <__init_array_end+0x1e05c4c>
 8013e44:	46202d00 	strtmi	r2, [r0], -r0, lsl #26
 8013e48:	462f5253 			@ <UNDEFINED> instruction: 0x462f5253
 8013e4c:	0a3a5241 	beq	8ea8758 <__init_array_end+0xe910dc>
 8013e50:	46432000 	strbmi	r2, [r3], -r0
 8013e54:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8013e58:	0a782520 	beq	9e1d2e0 <__init_array_end+0x1e05c64>
 8013e5c:	46482000 	strbmi	r2, [r8], -r0
 8013e60:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8013e64:	0a782520 	beq	9e1d2ec <__init_array_end+0x1e05c70>
 8013e68:	46442000 	strbmi	r2, [r4], -r0
 8013e6c:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8013e70:	0a782520 	beq	9e1d2f8 <__init_array_end+0x1e05c7c>
 8013e74:	46412000 	strbmi	r2, [r1], -r0
 8013e78:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8013e7c:	0a782520 	beq	9e1d304 <__init_array_end+0x1e05c88>
 8013e80:	4d4d2000 	stclmi	0, cr2, [sp, #-0]
 8013e84:	20524146 	subscs	r4, r2, r6, asr #2
 8013e88:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8013e8c:	4220000a 	eormi	r0, r0, #10
 8013e90:	20524146 	subscs	r4, r2, r6, asr #2
 8013e94:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8013e98:	202d000a 	eorcs	r0, sp, sl
 8013e9c:	6373694d 	cmnvs	r3, #1261568	@ 0x134000
 8013ea0:	4c20000a 	stcmi	0, cr0, [r0], #-40	@ 0xffffffd8
 8013ea4:	58452f52 	stmdapl	r5, {r1, r4, r6, r8, r9, sl, fp, sp}^
 8013ea8:	45525f43 	ldrbmi	r5, [r2, #-3907]	@ 0xfffff0bd
 8013eac:	4e525554 	mrcmi	5, 2, r5, cr2, cr4, {2}
 8013eb0:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8013eb4:	4452000a 	ldrbmi	r0, [r2], #-10
 8013eb8:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 8013ebc:	4320000a 			@ <UNDEFINED> instruction: 0x4320000a
 8013ec0:	3a204449 	bcc	8824fec <__init_array_end+0x80d970>
 8013ec4:	0a732520 	beq	9cdd34c <__init_array_end+0x1cc5cd0>
 8013ec8:	524c4c00 	subpl	r4, ip, #0, 24
 8013ecc:	65442050 	strbvs	r2, [r4, #-80]	@ 0xffffffb0
 8013ed0:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 8013ed4:	5020000a 	eorpl	r0, r0, sl
 8013ed8:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8013edc:	20504455 	subscs	r4, r0, r5, asr r4
 8013ee0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013ee4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013ee8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8013eec:	000a6425 	andeq	r6, sl, r5, lsr #8
 8013ef0:	696f4a20 	stmdbvs	pc!, {r5, r9, fp, lr}^	@ <UNPREDICTABLE>
 8013ef4:	6552206e 	ldrbvs	r2, [r2, #-110]	@ 0xffffff92
 8013ef8:	73657571 	cmnvc	r5, #473956352	@ 0x1c400000
 8013efc:	20202074 	eorcs	r2, r0, r4, ror r0
 8013f00:	20202020 	eorcs	r2, r0, r0, lsr #32
 8013f04:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8013f08:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013f0c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8013f10:	20000a64 	andcs	r0, r0, r4, ror #20
 8013f14:	746c754d 	strbtvc	r7, [ip], #-1357	@ 0xfffffab3
 8013f18:	73616369 	cmnvc	r1, #-1543503871	@ 0xa4000001
 8013f1c:	65522074 	ldrbvs	r2, [r2, #-116]	@ 0xffffff8c
 8013f20:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8013f24:	3a206573 	bcc	882d4f8 <__init_array_end+0x815e7c>
 8013f28:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8013f2c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8013f30:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8013f34:	3032000a 	eorscc	r0, r2, sl
 8013f38:	3a36303a 	bcc	8da0028 <__init_array_end+0xd889ac>
 8013f3c:	53003033 	movwpl	r3, #51	@ 0x33
 8013f40:	31207065 			@ <UNDEFINED> instruction: 0x31207065
 8013f44:	30322038 	eorscc	r2, r2, r8, lsr r0
 8013f48:	52003432 	andpl	r3, r0, #838860800	@ 0x32000000
 8013f4c:	654e4d44 	strbvs	r4, [lr, #-3396]	@ 0xfffff2bc
 8013f50:	4c4c2074 	mcrrmi	0, 7, r2, ip, cr4
 8013f54:	64205052 	strtvs	r5, [r0], #-82	@ 0xffffffae
 8013f58:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8013f5c:	6e6f2065 	cdpvs	0, 6, cr2, cr15, cr5, {3}
 8013f60:	1b00796c 	blne	8032518 <__init_array_end+0x1ae9c>
 8013f64:	6d32335b 	ldcvs	3, cr3, [r2, #-364]!	@ 0xfffffe94
 8013f68:	5b1b7325 	blpl	86f0c04 <__init_array_end+0x6d9588>
 8013f6c:	000a6d30 	andeq	r6, sl, r0, lsr sp
 8013f70:	50524c4c 	subspl	r4, r2, ip, asr #24
 8013f74:	6c6e4f20 	stclvs	15, cr4, [lr], #-128	@ 0xffffff80
 8013f78:	202d2079 	eorcs	r2, sp, r9, ror r0
 8013f7c:	50544654 	subspl	r4, r4, r4, asr r6
 8013f80:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8013f84:	6e652053 	mcrvs	0, 3, r2, cr5, cr3, {2}
 8013f88:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 8013f8c:	65440064 	strbvs	r0, [r4, #-100]	@ 0xffffff9c
 8013f90:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 8013f94:	6e757220 	cdpvs	2, 7, cr7, cr5, cr0, {1}
 8013f98:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
 8013f9c:	322e2500 	eorcc	r2, lr, #0, 10
 8013fa0:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8013fa4:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8013fa8:	2064322e 	rsbcs	r3, r4, lr, lsr #4
 8013fac:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8013fb0:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8013fb4:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8013fb8:	25006432 	strcs	r6, [r0, #-1074]	@ 0xfffffbce
 8013fbc:	3a64322e 	bcc	992087c <__init_array_end+0x1909200>
 8013fc0:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8013fc4:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8013fc8:	2e252064 	cdpcs	0, 2, cr2, cr5, cr4, {3}
 8013fcc:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8013fd0:	3a64322e 	bcc	9920890 <__init_array_end+0x1909214>
 8013fd4:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8013fd8:	6e4f000a 	cdpvs	0, 4, cr0, cr15, cr10, {0}
 8013fdc:	73696400 	cmnvc	r9, #0, 8
 8013fe0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013fe4:	0a73253a 	beq	9cdd4d4 <__init_array_end+0x1cc5e58>
 8013fe8:	74707500 	ldrbtvc	r7, [r0], #-1280	@ 0xfffffb00
 8013fec:	3a656d69 	bcc	996f598 <__init_array_end+0x1957f1c>
 8013ff0:	73752520 	cmnvc	r5, #32, 10	@ 0x8000000
 8013ff4:	6576000a 	ldrbvs	r0, [r6, #-10]!
 8013ff8:	6f697372 	svcvs	0x00697372
 8013ffc:	73253a6e 			@ <UNDEFINED> instruction: 0x73253a6e
 8014000:	74667400 	strbtvc	r7, [r6], #-1024	@ 0xfffffc00
 8014004:	73253a70 			@ <UNDEFINED> instruction: 0x73253a70
 8014008:	6425000a 	strtvs	r0, [r5], #-10
 801400c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014010:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014014:	73252c64 			@ <UNDEFINED> instruction: 0x73252c64
 8014018:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 801401c:	252c7525 	strcs	r7, [ip, #-1317]!	@ 0xfffffadb
 8014020:	25000a73 	strcs	r0, [r0, #-2675]	@ 0xfffff58d
 8014024:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8014028:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801402c:	252c6425 	strcs	r6, [ip, #-1061]!	@ 0xfffffbdb
 8014030:	73252c73 			@ <UNDEFINED> instruction: 0x73252c73
 8014034:	0a75252c 	beq	9d5d4ec <__init_array_end+0x1d45e70>
 8014038:	52524500 	subspl	r4, r2, #0, 10
 801403c:	3f23524f 	svccc	0x0023524f
 8014040:	0a746567 	beq	9d2d5e4 <__init_array_end+0x1d15f68>
 8014044:	52524500 	subspl	r4, r2, #0, 10
 8014048:	3f23524f 	svccc	0x0023524f
 801404c:	6674000a 	ldrbtvs	r0, [r4], -sl
 8014050:	00237074 	eoreq	r7, r3, r4, ror r0
 8014054:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014058:	2379616c 	cmncs	r9, #108, 2
 801405c:	52524500 	subspl	r4, r2, #0, 10
 8014060:	2123524f 			@ <UNDEFINED> instruction: 0x2123524f
 8014064:	6572000a 	ldrbvs	r0, [r2, #-10]!
 8014068:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8014070 <_etext+0x2b8>
 801406c:	6c002323 	stcvs	3, cr2, [r0], {35}	@ 0x23
 8014070:	23747369 	cmncs	r4, #-1543503871	@ 0xa4000001
 8014074:	72657600 	rsbvc	r7, r5, #0, 12
 8014078:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801407c:	70750023 	rsbsvc	r0, r5, r3, lsr #32
 8014080:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8014084:	65670023 	strbvs	r0, [r7, #-35]!	@ 0xffffffdd
 8014088:	66002374 			@ <UNDEFINED> instruction: 0x66002374
 801408c:	6f746361 	svcvs	0x00746361
 8014090:	23237972 			@ <UNDEFINED> instruction: 0x23237972
 8014094:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 8014098:	64253a22 	strtvs	r3, [r5], #-2594	@ 0xfffff5de
 801409c:	2523002c 	strcs	r0, [r3, #-44]!	@ 0xffffffd4
 80140a0:	64253d73 	strtvs	r3, [r5], #-3443	@ 0xfffff28d
 80140a4:	2522000a 	strcs	r0, [r2, #-10]!
 80140a8:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 80140ac:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 80140b0:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 80140b4:	0a73253d 	beq	9cdd5b0 <__init_array_end+0x1cc5f34>
 80140b8:	62655200 	rsbvs	r5, r5, #0, 4
 80140bc:	69746f6f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80140c0:	2e20676e 	cdpcs	7, 2, cr6, cr0, cr14, {3}
 80140c4:	72002e2e 	andvc	r2, r0, #736	@ 0x2e0
 80140c8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80140cc:	742e6769 	strtvc	r6, [lr], #-1897	@ 0xfffff897
 80140d0:	65007478 	strvs	r7, [r0, #-1144]	@ 0xfffffb88
 80140d4:	742e766e 	strtvc	r7, [lr], #-1646	@ 0xfffff992
 80140d8:	6e007478 	mcrvs	4, 0, r7, cr0, cr8, {3}
 80140dc:	6f777465 	svcvs	0x00777465
 80140e0:	742e6b72 	strtvc	r6, [lr], #-2930	@ 0xfffff48e
 80140e4:	64007478 	strvs	r7, [r0], #-1144	@ 0xfffffb88
 80140e8:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80140ec:	742e7961 	strtvc	r7, [lr], #-2401	@ 0xfffff69f
 80140f0:	54007478 	strpl	r7, [r0], #-1144	@ 0xfffffb88
 80140f4:	20505446 	subscs	r5, r0, r6, asr #8
 80140f8:	00206e4f 	eoreq	r6, r0, pc, asr #28
 80140fc:	50544654 	subspl	r4, r4, r4, asr r6
 8014100:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 8014104:	6c227b00 			@ <UNDEFINED> instruction: 0x6c227b00
 8014108:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801410c:	69227b3a 	stmdbvs	r2!, {r1, r3, r4, r5, r8, r9, fp, ip, sp, lr}
 8014110:	223a2270 	eorscs	r2, sl, #112, 4
 8014114:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014118:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801411c:	2264252e 	rsbcs	r2, r4, #192937984	@ 0xb800000
 8014120:	616e222c 	cmnvs	lr, ip, lsr #4
 8014124:	3a22656d 	bcc	88ad6e0 <__init_array_end+0x896064>
 8014128:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801412c:	6f6e222c 	svcvs	0x006e222c
 8014130:	3a226564 	bcc	88ad6c8 <__init_array_end+0x89604c>
 8014134:	7974227b 	ldmdbvc	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 8014138:	3a226570 	bcc	88ad700 <__init_array_end+0x896084>
 801413c:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8014140:	6f70222c 	svcvs	0x0070222c
 8014144:	3a227472 	bcc	88b1314 <__init_array_end+0x899c98>
 8014148:	7974227b 	ldmdbvc	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 801414c:	3a226570 	bcc	88ad714 <__init_array_end+0x896098>
 8014150:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8014154:	6f63222c 	svcvs	0x0063222c
 8014158:	22746e75 	rsbscs	r6, r4, #1872	@ 0x750
 801415c:	7d64253a 	cfstr64vc	mvdx2, [r4, #-232]!	@ 0xffffff18
 8014160:	007d7d7d 	rsbseq	r7, sp, sp, ror sp
 8014164:	6576227b 	ldrbvs	r2, [r6, #-635]!	@ 0xfffffd85
 8014168:	6f697372 	svcvs	0x00697372
 801416c:	223a226e 	eorscs	r2, sl, #-536870906	@ 0xe0000006
 8014170:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8014174:	62222c22 	eorvs	r2, r2, #8704	@ 0x2200
 8014178:	6472616f 	ldrbtvs	r6, [r2], #-367	@ 0xfffffe91
 801417c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8014180:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 8014184:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 8014188:	7b3a2264 	blvc	8e9cb20 <__init_array_end+0xe854a4>
 801418c:	74616422 	strbtvc	r6, [r1], #-1058	@ 0xfffffbde
 8014190:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8014194:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8014198:	74222c22 	strtvc	r2, [r2], #-3106	@ 0xfffff3de
 801419c:	22656d69 	rsbcs	r6, r5, #6720	@ 0x1a40
 80141a0:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80141a4:	7d22732a 	stcvc	3, cr7, [r2, #-168]!	@ 0xffffff58
 80141a8:	4447007d 	strbmi	r0, [r7], #-125	@ 0xffffff83
 80141ac:	34463233 	strbcc	r3, [r6], #-563	@ 0xfffffdcd
 80141b0:	5f5a3037 	svcpl	0x005a3037
 80141b4:	4c415645 	mcrrmi	6, 4, r5, r1, cr5
 80141b8:	75227b00 	strvc	r7, [r2, #-2816]!	@ 0xfffff500
 80141bc:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 80141c0:	253a2265 	ldrcs	r2, [sl, #-613]!	@ 0xfffffd9b
 80141c4:	000a7d75 	andeq	r7, sl, r5, ror sp
 80141c8:	6964227b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 80141cc:	616c7073 	smcvs	50947	@ 0xc703
 80141d0:	253a2279 	ldrcs	r2, [sl, #-633]!	@ 0xfffffd87
 80141d4:	7b007d64 	blvc	803376c <__init_array_end+0x1c0f0>
 80141d8:	6c696622 	stclvs	6, cr6, [r9], #-136	@ 0xffffff78
 80141dc:	3a227365 	bcc	88b0f78 <__init_array_end+0x8998fc>
 80141e0:	6964227b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 80141e4:	616c7073 	smcvs	50947	@ 0xc703
 80141e8:	78742e79 	ldmdavc	r4!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}^
 80141ec:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 80141f0:	70736944 	rsbsvc	r6, r3, r4, asr #18
 80141f4:	2079616c 	rsbscs	r6, r9, ip, ror #2
 80141f8:	22464455 	subcs	r4, r6, #1426063360	@ 0x55000000
 80141fc:	656e222c 	strbvs	r2, [lr, #-556]!	@ 0xfffffdd4
 8014200:	726f7774 	rsbvc	r7, pc, #116, 14	@ 0x1d00000
 8014204:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 8014208:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 801420c:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8014210:	226b726f 	rsbcs	r7, fp, #-268435450	@ 0xf0000006
 8014214:	6e65222c 	cdpvs	2, 6, cr2, cr5, cr12, {1}
 8014218:	78742e76 	ldmdavc	r4!, {r1, r2, r4, r5, r6, r9, sl, fp, sp}^
 801421c:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 8014220:	69766e45 	ldmdbvs	r6!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 8014224:	6d6e6f72 	stclvs	15, cr6, [lr, #-456]!	@ 0xfffffe38
 8014228:	22746e65 	rsbscs	r6, r4, #1616	@ 0x650
 801422c:	6372222c 	cmnvs	r2, #44, 4	@ 0xc0000002
 8014230:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014234:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 8014238:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 801423c:	6f6d6552 	svcvs	0x006d6552
 8014240:	63206574 			@ <UNDEFINED> instruction: 0x63206574
 8014244:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014248:	61727567 	cmnvs	r2, r7, ror #10
 801424c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8014250:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8014254:	2e637472 	mcrcs	4, 3, r7, cr3, cr2, {3}
 8014258:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801425c:	61747300 	cmnvs	r4, r0, lsl #6
 8014260:	2e636974 			@ <UNDEFINED> instruction: 0x2e636974
 8014264:	7300736a 	movwvc	r7, #874	@ 0x36a
 8014268:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801426c:	73632e73 	cmnvc	r3, #1840	@ 0x730
 8014270:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
 8014274:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8014278:	6400736a 	strvs	r7, [r0], #-874	@ 0xfffffc96
 801427c:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8014280:	6400736a 	strvs	r7, [r0], #-874	@ 0xfffffc96
 8014284:	75616665 	strbvc	r6, [r1, #-1637]!	@ 0xfffff99b
 8014288:	6a2e746c 	bvs	8bb1440 <__init_array_end+0xb99dc4>
 801428c:	74720073 	ldrbtvc	r0, [r2], #-115	@ 0xffffff8d
 8014290:	736a2e63 	cmnvc	sl, #1584	@ 0x630
 8014294:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
 8014298:	736a2e65 	cmnvc	sl, #1616	@ 0x650
 801429c:	646e6900 	strbtvs	r6, [lr], #-2304	@ 0xfffff700
 80142a0:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
 80142a4:	006c6d74 	rsbeq	r6, ip, r4, ror sp
 80142a8:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80142ac:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 80142b0:	4452006c 	ldrbmi	r0, [r2], #-108	@ 0xffffff94
 80142b4:	6552204d 	ldrbvs	r2, [r2, #-77]	@ 0xffffffb3
 80142b8:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 80142bc:	20726564 	rsbscs	r6, r2, r4, ror #10
 80142c0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80142c4:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 80142c8:	6f697461 	svcvs	0x00697461
 80142cc:	5020006e 	eorpl	r0, r0, lr, rrx
 80142d0:	6f746f72 	svcvs	0x00746f72
 80142d4:	206c6f63 	rsbcs	r6, ip, r3, ror #30
 80142d8:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 80142dc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80142e0:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80142e4:	20000a64 	andcs	r0, r0, r4, ror #20
 80142e8:	20584d44 	subscs	r4, r8, r4, asr #26
 80142ec:	72646441 	rsbvc	r6, r4, #1090519040	@ 0x41000000
 80142f0:	20737365 	rsbscs	r7, r3, r5, ror #6
 80142f4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80142f8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80142fc:	20000a64 	andcs	r0, r0, r4, ror #20
 8014300:	20584d44 	subscs	r4, r8, r4, asr #26
 8014304:	746f6f46 	strbtvc	r6, [pc], #-3910	@ 801430c <_etext+0x554>
 8014308:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 801430c:	20202074 	eorcs	r2, r0, r4, ror r0
 8014310:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8014314:	20000a64 	andcs	r0, r0, r4, ror #20
 8014318:	73726550 	cmnvc	r2, #80, 10	@ 0x14000000
 801431c:	6c616e6f 	stclvs	14, cr6, [r1], #-444	@ 0xfffffe44
 8014320:	20797469 	rsbscs	r7, r9, r9, ror #8
 8014324:	6f206425 	svcvs	0x00206425
 8014328:	64252066 	strtvs	r2, [r5], #-102	@ 0xffffff9a
 801432c:	2e255b20 	vmulcs.f64	d5, d5, d16
 8014330:	0a5d732a 	beq	9770fe0 <__init_array_end+0x1759964>
 8014334:	75532000 	ldrbvc	r2, [r3, #-0]
 8014338:	65442062 	strbvs	r2, [r4, #-98]	@ 0xffffff9e
 801433c:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 8014340:	20202073 	eorcs	r2, r0, r3, ror r0
 8014344:	3a202020 	bcc	881c3cc <__init_array_end+0x804d50>
 8014348:	0a642520 	beq	991d7d0 <__init_array_end+0x1906154>
 801434c:	65532000 	ldrbvs	r2, [r3, #-0]
 8014350:	726f736e 	rsbvc	r7, pc, #-1207959551	@ 0xb8000001
 8014354:	20202073 	eorcs	r2, r0, r3, ror r0
 8014358:	20202020 	eorcs	r2, r0, r0, lsr #32
 801435c:	3a202020 	bcc	881c3e4 <__init_array_end+0x804d68>
 8014360:	0a642520 	beq	991d7e8 <__init_array_end+0x190616c>
 8014364:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8014368:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 801436c:	20656369 	rsbcs	r6, r5, r9, ror #6
 8014370:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014374:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 8014378:	6f697461 	svcvs	0x00697461
 801437c:	4d20006e 	stcmi	0, cr0, [r0, #-440]!	@ 0xfffffe48
 8014380:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8014384:	75746361 	ldrbvc	r6, [r4, #-865]!	@ 0xfffffc9f
 8014388:	20726572 	rsbscs	r6, r2, r2, ror r5
 801438c:	656d614e 	strbvs	r6, [sp, #-334]!	@ 0xfffffeb2
 8014390:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8014394:	0a732a2e 	beq	9cdec54 <__init_array_end+0x1cc75d8>
 8014398:	614d2000 	mrsvs	r2, (UNDEF: 77)
 801439c:	6166756e 	cmnvs	r6, lr, ror #10
 80143a0:	72757463 	rsbsvc	r7, r5, #1660944384	@ 0x63000000
 80143a4:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 80143a8:	20202044 	eorcs	r2, r0, r4, asr #32
 80143ac:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80143b0:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80143b4:	000a5832 	andeq	r5, sl, r2, lsr r8
 80143b8:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 80143bc:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80143c0:	626d754e 	rsbvs	r7, sp, #327155712	@ 0x13800000
 80143c4:	20207265 	eorcs	r7, r0, r5, ror #4
 80143c8:	3a202020 	bcc	881c450 <__init_array_end+0x804dd4>
 80143cc:	322e2520 	eorcc	r2, lr, #32, 10	@ 0x8000000
 80143d0:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 80143d4:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 80143d8:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 80143dc:	20000a58 	andcs	r0, r0, r8, asr sl
 80143e0:	746f6f52 	strbtvc	r6, [pc], #-3922	@ 80143e8 <_etext+0x630>
 80143e4:	62616c20 	rsbvs	r6, r1, #32, 24	@ 0x2000
 80143e8:	20206c65 	eorcs	r6, r0, r5, ror #24
 80143ec:	20202020 	eorcs	r2, r0, r0, lsr #32
 80143f0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80143f4:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80143f8:	5020000a 	eorpl	r0, r0, sl
 80143fc:	75646f72 	strbvc	r6, [r4, #-3954]!	@ 0xfffff08e
 8014400:	43207463 			@ <UNDEFINED> instruction: 0x43207463
 8014404:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8014408:	2079726f 	rsbscs	r7, r9, pc, ror #4
 801440c:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8014410:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8014414:	0a58322e 	beq	9620cd4 <__init_array_end+0x1609658>
 8014418:	72502000 	subsvc	r2, r0, #0
 801441c:	6375646f 	cmnvs	r5, #1862270976	@ 0x6f000000
 8014420:	65442074 	strbvs	r2, [r4, #-116]	@ 0xffffff8c
 8014424:	6c696174 	stfvse	f6, [r9], #-464	@ 0xfffffe30
 8014428:	20202020 	eorcs	r2, r0, r0, lsr #32
 801442c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8014430:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8014434:	000a5832 	andeq	r5, sl, r2, lsr r8
 8014438:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 801443c:	446d002e 	strbtmi	r0, [sp], #-46	@ 0xffffffd2
 8014440:	000a534e 	andeq	r5, sl, lr, asr #6
 8014444:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8014448:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 801444c:	7069000a 	rsbvc	r0, r9, sl
 8014450:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8014454:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014458:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801445c:	3e2d2064 	cdpcc	0, 2, cr2, cr13, cr4, {3}
 8014460:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8014464:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014468:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801446c:	656e000a 	strbvs	r0, [lr, #-10]!
 8014470:	73616d74 	cmnvc	r1, #116, 26	@ 0x1d00
 8014474:	25203a6b 	strcs	r3, [r0, #-2667]!	@ 0xfffff595
 8014478:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801447c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014480:	2d206425 	cfstrscs	mvf6, [r0, #-148]!	@ 0xffffff6c
 8014484:	6425203e 	strtvs	r2, [r5], #-62	@ 0xffffffc2
 8014488:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801448c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014490:	67000a64 	strvs	r0, [r0, -r4, ror #20]
 8014494:	25203a77 	strcs	r3, [r0, #-2679]!	@ 0xfffff589
 8014498:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801449c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80144a0:	2d206425 	cfstrscs	mvf6, [r0, #-148]!	@ 0xffffff6c
 80144a4:	6425203e 	strtvs	r2, [r5], #-62	@ 0xffffffc2
 80144a8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80144ac:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80144b0:	65000a64 	strvs	r0, [r0, #-2660]	@ 0xfffff59c
 80144b4:	00306874 	eorseq	r6, r0, r4, ror r8
 80144b8:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80144bc:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 80144c0:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 80144c4:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 80144c8:	3a78322e 	bcc	9e20d88 <__init_array_end+0x1e0970c>
 80144cc:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80144d0:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 80144d4:	67000a78 	smlsdxvs	r0, r8, sl, r0
 80144d8:	64616769 	strbtvs	r6, [r1], #-1897	@ 0xfffff897
 80144dc:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 80144e0:	53005f65 	movwpl	r5, #3941	@ 0xf65
 80144e4:	7774666f 	ldrbvc	r6, [r4, -pc, ror #12]!
 80144e8:	54657261 	strbtpl	r7, [r5], #-609	@ 0xfffffd9f
 80144ec:	72656d69 	rsbvc	r6, r5, #6720	@ 0x1a40
 80144f0:	0a646441 	beq	992d5fc <__init_array_end+0x1915f80>
 80144f4:	69615700 	stmdbvs	r1!, {r8, r9, sl, ip, lr}^
 80144f8:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 80144fc:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8014500:	59485020 	stmdbpl	r8, {r5, ip, lr}^
 8014504:	74756120 	ldrbtvc	r6, [r5], #-288	@ 0xfffffee0
 8014508:	656e206f 	strbvs	r2, [lr, #-111]!	@ 0xffffff91
 801450c:	69746f67 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014510:	6f697461 	svcvs	0x00697461
 8014514:	6f74206e 	svcvs	0x0074206e
 8014518:	6d6f6320 	stclvs	3, cr6, [pc, #-128]!	@ 80144a0 <_etext+0x6e8>
 801451c:	74656c70 	strbtvc	r6, [r5], #-3184	@ 0xfffff390
 8014520:	65730065 	ldrbvs	r0, [r3, #-101]!	@ 0xffffff9b
 8014524:	646e6f63 	strbtvs	r6, [lr], #-3939	@ 0xfffff09d
 8014528:	5f797261 	svcpl	0x00797261
 801452c:	53007069 	movwpl	r7, #105	@ 0x69
 8014530:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 8014534:	50492063 	subpl	r2, r9, r3, rrx
 8014538:	50544e00 	subspl	r4, r4, r0, lsl #28
 801453c:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 8014540:	00726576 	rsbseq	r6, r2, r6, ror r5
 8014544:	33385044 	teqcc	r8, #68	@ 0x44
 8014548:	00383438 	eorseq	r3, r8, r8, lsr r4
 801454c:	3a74656e 	bcc	9d2db0c <__init_array_end+0x1d16490>
 8014550:	7968703a 	stmdbvc	r8!, {r1, r3, r4, r5, ip, sp, lr}^
 8014554:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8014558:	28676966 	stmdacs	r7!, {r1, r2, r5, r6, r8, fp, sp, lr}^
 801455c:	5f594850 	svcpl	0x00594850
 8014560:	52444441 	subpl	r4, r4, #1090519040	@ 0x41000000
 8014564:	29535345 	ldmdbcs	r3, {r0, r2, r6, r8, r9, ip, lr}^
 8014568:	00705500 	rsbseq	r5, r0, r0, lsl #10
 801456c:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 8014570:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
 8014574:	55460046 	strbpl	r0, [r6, #-70]	@ 0xffffffba
 8014578:	4c004c4c 	stcmi	12, cr4, [r0], {76}	@ 0x4c
 801457c:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 8014580:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8014584:	202c6425 	eorcs	r6, ip, r5, lsr #8
 8014588:	000a7325 	andeq	r7, sl, r5, lsr #6
 801458c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014590:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8014594:	2f64252e 	svccs	0x0064252e
 8014598:	25206425 	strcs	r6, [r0, #-1061]!	@ 0xfffffbdb
 801459c:	69460063 	stmdbvs	r6, {r0, r1, r5, r6}^
 80145a0:	61776d72 	cmnvs	r7, r2, ror sp
 80145a4:	56206572 			@ <UNDEFINED> instruction: 0x56206572
 80145a8:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80145ac:	203a4700 	eorscs	r4, sl, r0, lsl #14
 80145b0:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80145b4:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80145b8:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80145bc:	25203a4e 	strcs	r3, [r0, #-2638]!	@ 0xfffff5b2
 80145c0:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80145c4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80145c8:	45006425 	strmi	r6, [r0, #-1061]	@ 0xfffffbdb
 80145cc:	72656874 	rsbvc	r6, r5, #116, 16	@ 0x740000
 80145d0:	2074656e 	rsbscs	r6, r4, lr, ror #10
 80145d4:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
 80145d8:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 80145dc:	656e7265 	strbvs	r7, [lr, #-613]!	@ 0xfffffd9b
 80145e0:	74732074 	ldrbtvc	r2, [r3], #-116	@ 0xffffff8c
 80145e4:	00747261 	rsbseq	r7, r4, r1, ror #4
 80145e8:	44005055 	strmi	r5, [r0], #-85	@ 0xffffffab
 80145ec:	004e574f 	subeq	r5, lr, pc, asr #14
 80145f0:	65687445 	strbvs	r7, [r8, #-1093]!	@ 0xfffffbbb
 80145f4:	74656e72 	strbtvc	r6, [r5], #-3698	@ 0xfffff18e
 80145f8:	6e694c20 	cdpvs	12, 6, cr4, cr9, cr0, {1}
 80145fc:	7325206b 			@ <UNDEFINED> instruction: 0x7325206b
 8014600:	6f745300 	svcvs	0x00745300
 8014604:	65446572 	strbvs	r6, [r4, #-1394]	@ 0xfffffa8e
 8014608:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801460c:	5342203a 	movtpl	r2, #8250	@ 0x203a
 8014610:	204d4152 	subcs	r4, sp, r2, asr r1
 8014614:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 8014618:	746f7420 	strbtvc	r7, [pc], #-1056	@ 8014620 <_etext+0x868>
 801461c:	25206c61 	strcs	r6, [r0, #-3169]!	@ 0xfffff39f
 8014620:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8014624:	20736574 	rsbscs	r6, r3, r4, ror r5
 8014628:	2064255b 	rsbcs	r2, r4, fp, asr r5
 801462c:	0a5d426b 	beq	9764fe0 <__init_array_end+0x174d964>
 8014630:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 8014634:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8014638:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801463c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014640:	2c226425 	cfstrscs	mvf6, [r2], #-148	@ 0xffffff6c
 8014644:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 8014648:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 801464c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8014650:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8014654:	002b000a 	eoreq	r0, fp, sl
 8014658:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801465c:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 8014660:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8014664:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8014668:	002c2275 	eoreq	r2, ip, r5, ror r2
 801466c:	253d7325 	ldrcs	r7, [sp, #-805]!	@ 0xfffffcdb
 8014670:	322e2573 	eorcc	r2, lr, #482344960	@ 0x1cc00000
 8014674:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8014678:	23007532 	movwcs	r7, #1330	@ 0x532
 801467c:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8014680:	4e000a23 	vmlami.f32	s0, s0, s7
 8014684:	6964206f 	stmdbvs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
 8014688:	616c7073 	smcvs	50947	@ 0xc703
 801468c:	6f662079 	svcvs	0x00662079
 8014690:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8014694:	31314853 	teqcc	r1, r3, asr r8
 8014698:	53003630 	movwpl	r3, #1584	@ 0x630
 801469c:	33314453 	teqcc	r1, #1392508928	@ 0x53000000
 80146a0:	25003630 	strcs	r3, [r0, #-1584]	@ 0xfffff9d0
 80146a4:	25282073 	strcs	r2, [r8, #-115]!	@ 0xffffff8d
 80146a8:	75252c75 	strvc	r2, [r5, #-3189]!	@ 0xfffff38b
 80146ac:	40000a29 	andmi	r0, r0, r9, lsr #20
 80146b0:	eeaaeeaa 	cdp	14, 10, cr14, cr10, cr10, {5}
 80146b4:	25565b00 	ldrbcs	r5, [r6, #-2816]	@ 0xfffff500
 80146b8:	5d732a2e 	vldmdbpl	r3!, {s5-s50}
 80146bc:	20732520 	rsbscs	r2, r3, r0, lsr #10
 80146c0:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 80146c4:	64656c69 	strbtvs	r6, [r5], #-3177	@ 0xfffff397
 80146c8:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 80146cc:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80146d0:	20746120 	rsbscs	r6, r4, r0, lsr #2
 80146d4:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80146d8:	64227b00 	strtvs	r7, [r2], #-2816	@ 0xfffff500
 80146dc:	22657461 	rsbcs	r7, r5, #1627389952	@ 0x61000000
 80146e0:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 80146e4:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 80146e8:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
 80146ec:	25546432 	ldrbcs	r6, [r4, #-1074]	@ 0xfffffbce
 80146f0:	3a64322e 	bcc	9920fb0 <__init_array_end+0x1909934>
 80146f4:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 80146f8:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 80146fc:	7d225a64 	vstmdbvc	r2!, {s10-s109}
 8014700:	227b000a 	rsbscs	r0, fp, #10
 8014704:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8014708:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801470c:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
 8014710:	252d6432 	strcs	r6, [sp, #-1074]!	@ 0xfffffbce
 8014714:	5464322e 	strbtpl	r3, [r4], #-558	@ 0xfffffdd2
 8014718:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801471c:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8014720:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8014724:	73256432 			@ <UNDEFINED> instruction: 0x73256432
 8014728:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801472c:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8014730:	0a7d2275 	beq	9f5d10c <__init_array_end+0x1f45a90>
 8014734:	335b1b00 	cmpcc	fp, #0, 22
 8014738:	1b006d31 	blne	802fc04 <__init_array_end+0x18588>
 801473c:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	@ 0xfffffe94
 8014740:	335b1b00 	cmpcc	fp, #0, 22
 8014744:	1b006d30 	blne	802fc0c <__init_array_end+0x18590>
 8014748:	6d32335b 	ldcvs	3, cr3, [r2, #-364]!	@ 0xfffffe94
 801474c:	335b1b00 	cmpcc	fp, #0, 22
 8014750:	1b006d33 	blne	802fc24 <__init_array_end+0x185a8>
 8014754:	6d39335b 	ldcvs	3, cr3, [r9, #-364]!	@ 0xfffffe94
 8014758:	345b1b00 	ldrbcc	r1, [fp], #-2816	@ 0xfffff500
 801475c:	1b006d30 	blne	802fc24 <__init_array_end+0x185a8>
 8014760:	6d31345b 	cfldrsvs	mvf3, [r1, #-364]!	@ 0xfffffe94
 8014764:	345b1b00 	ldrbcc	r1, [fp], #-2816	@ 0xfffff500
 8014768:	1b006d37 	blne	802fc4c <__init_array_end+0x185d0>
 801476c:	6d39345b 	cfldrsvs	mvf3, [r9, #-364]!	@ 0xfffffe94
 8014770:	6b6e5500 	blvs	9ba9b78 <__init_array_end+0x1b924fc>
 8014774:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
 8014778:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 801477c:	20435452 	subcs	r5, r3, r2, asr r4
 8014780:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
 8014784:	65746365 	ldrbvs	r6, [r4, #-869]!	@ 0xfffffc9b
 8014788:	73250064 			@ <UNDEFINED> instruction: 0x73250064
 801478c:	342e2520 	strtcc	r2, [lr], #-1312	@ 0xfffffae0
 8014790:	2e252f64 	cdpcs	15, 2, cr2, cr5, cr4, {3}
 8014794:	252f6432 	strcs	r6, [pc, #-1074]!	@ 801436a <_etext+0x5b2>
 8014798:	2064322e 	rsbcs	r3, r4, lr, lsr #4
 801479c:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 80147a0:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 80147a4:	2e253a64 	vnmulcs.f32	s6, s10, s9
 80147a8:	000a6432 	andeq	r6, sl, r2, lsr r4
 80147ac:	3750434d 	ldrbcc	r4, [r0, -sp, asr #6]
 80147b0:	58313439 	ldmdapl	r1!, {r0, r3, r4, r5, sl, ip, sp}
 80147b4:	33534400 	cmpcc	r3, #0, 8
 80147b8:	00313332 	eorseq	r3, r1, r2, lsr r3
 80147bc:	38464350 	stmdacc	r6, {r4, r6, r8, r9, lr}^
 80147c0:	00333635 	eorseq	r3, r3, r5, lsr r6
 80147c4:	5f434f53 	svcpl	0x00434f53
 80147c8:	45544e49 	ldrbmi	r4, [r4, #-3657]	@ 0xfffff1b7
 80147cc:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
 80147d0:	616c6100 	cmnvs	ip, r0, lsl #2
 80147d4:	61006d72 	tstvs	r0, r2, ror sp
 80147d8:	6f697463 	svcvs	0x00697463
 80147dc:	6368006e 	cmnvs	r8, #110	@ 0x6e
 80147e0:	79736f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80147e4:	79730073 	ldmdbvc	r3!, {r0, r1, r4, r5, r6}^
 80147e8:	686f7473 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 80147ec:	6e650063 	cdpvs	0, 6, cr0, cr5, cr3, {3}
 80147f0:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 80147f4:	72227b00 	eorvc	r7, r2, #0, 22
 80147f8:	3a226374 	bcc	88ad5d0 <__init_array_end+0x895f54>
 80147fc:	2d642522 	cfstr64cs	mvdx2, [r4, #-136]!	@ 0xffffff78
 8014800:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8014804:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 8014808:	2e255464 	cdpcs	4, 2, cr5, cr5, cr4, {3}
 801480c:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8014810:	3a64322e 	bcc	99210d0 <__init_array_end+0x1909a54>
 8014814:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8014818:	22002c22 	andcs	r2, r0, #8704	@ 0x2200
 801481c:	72616c61 	rsbvc	r6, r1, #24832	@ 0x6100
 8014820:	223a226d 	eorscs	r2, sl, #-805306362	@ 0xd0000006
 8014824:	252d6425 	strcs	r6, [sp, #-1061]!	@ 0xfffffbdb
 8014828:	2d64322e 	sfmcs	f3, 2, [r4, #-184]!	@ 0xffffff48
 801482c:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8014830:	322e2554 	eorcc	r2, lr, #84, 10	@ 0x15000000
 8014834:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8014838:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 801483c:	2264322e 	rsbcs	r3, r4, #-536870910	@ 0xe0000002
 8014840:	6522002c 	strvs	r0, [r2, #-44]!	@ 0xffffffd4
 8014844:	6c62616e 	stfvse	f6, [r2], #-440	@ 0xfffffe48
 8014848:	3a226465 	bcc	88ad9e4 <__init_array_end+0x896368>
 801484c:	22642522 	rsbcs	r2, r4, #142606336	@ 0x8800000
 8014850:	200a007d 	andcs	r0, sl, sp, ror r0
 8014854:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014858:	31202030 			@ <UNDEFINED> instruction: 0x31202030
 801485c:	20322020 	eorscs	r2, r2, r0, lsr #32
 8014860:	20203320 	eorcs	r3, r0, r0, lsr #6
 8014864:	35202034 	strcc	r2, [r0, #-52]!	@ 0xffffffcc
 8014868:	20362020 	eorscs	r2, r6, r0, lsr #32
 801486c:	20203720 	eorcs	r3, r0, r0, lsr #14
 8014870:	39202038 	stmdbcc	r0!, {r3, r4, r5, sp}
 8014874:	20612020 	rsbcs	r2, r1, r0, lsr #32
 8014878:	20206220 	eorcs	r6, r0, r0, lsr #4
 801487c:	64202063 	strtvs	r2, [r0], #-99	@ 0xffffff9d
 8014880:	20652020 	rsbcs	r2, r5, r0, lsr #32
 8014884:	25006620 	strcs	r6, [r0, #-1568]	@ 0xfffff9e0
 8014888:	3a783230 	bcc	9e21150 <__init_array_end+0x1e09ad4>
 801488c:	20200020 	eorcs	r0, r0, r0, lsr #32
 8014890:	30250020 	eorcc	r0, r5, r0, lsr #32
 8014894:	00207832 	eoreq	r7, r0, r2, lsr r8
 8014898:	00202d2d 	eoreq	r2, r0, sp, lsr #26
 801489c:	34335b1b 	ldrtcc	r5, [r3], #-2843	@ 0xfffff4e5
 80148a0:	7453006d 	ldrbvc	r0, [r3], #-109	@ 0xffffff93
 80148a4:	3a6b6361 	bcc	9aed630 <__init_array_end+0x1ad5fb4>
 80148a8:	7a695320 	bvc	9a69530 <__init_array_end+0x1a51eb4>
 80148ac:	75252065 	strvc	r2, [r5, #-101]!	@ 0xffffff9b
 80148b0:	202c424b 	eorcs	r4, ip, fp, asr #4
 80148b4:	64657355 	strbtvs	r7, [r5], #-853	@ 0xfffffcab
 80148b8:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80148bc:	7246202c 	subvc	r2, r6, #44	@ 0x2c
 80148c0:	203a6565 	eorscs	r6, sl, r5, ror #10
 80148c4:	1b007525 	blne	8031d60 <__init_array_end+0x1a6e4>
 80148c8:	6d39335b 	ldcvs	3, cr3, [r9, #-364]!	@ 0xfffffe94
 80148cc:	3025000a 	eorcc	r0, r5, sl
 80148d0:	252d7838 	strcs	r7, [sp, #-2104]!	@ 0xfffff7c8
 80148d4:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	@ 0xffffff40
 80148d8:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 80148dc:	3230252d 	eorscc	r2, r0, #188743680	@ 0xb400000
 80148e0:	32302578 	eorscc	r2, r0, #120, 10	@ 0x1e000000
 80148e4:	30252d78 	eorcc	r2, r5, r8, ror sp
 80148e8:	30257832 	eorcc	r7, r5, r2, lsr r8
 80148ec:	30257832 	eorcc	r7, r5, r2, lsr r8
 80148f0:	30257832 	eorcc	r7, r5, r2, lsr r8
 80148f4:	30257832 	eorcc	r7, r5, r2, lsr r8
 80148f8:	30257832 	eorcc	r7, r5, r2, lsr r8
 80148fc:	6e007832 	mcrvs	8, 0, r7, cr0, cr2, {1}
 8014900:	20747865 	rsbscs	r7, r4, r5, ror #16
 8014904:	6c62203e 	stclvs	0, cr2, [r2], #-248	@ 0xffffff08
 8014908:	5f6b636f 	svcpl	0x006b636f
 801490c:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 8014910:	00000a74 	andeq	r0, r0, r4, ror sl

08014914 <vtable for RDMNetDevice>:
	...
 801491c:	08009395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, pc}
 8014920:	080093bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, ip, pc}
 8014924:	0800ad21 	stmdaeq	r0, {r0, r5, r8, sl, fp, sp, pc}
 8014928:	0800ad23 	stmdaeq	r0, {r0, r1, r5, r8, sl, fp, sp, pc}

0801492c <SOFTWARE_VERSION>:
 801492c:	00302e31 	eorseq	r2, r0, r1, lsr lr

08014930 <rdmnetllrponly::LABEL>:
 8014930:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8014934:	4c207465 	cfstrsmi	mvf7, [r0], #-404	@ 0xfffffe6c
 8014938:	2050524c 	subscs	r5, r0, ip, asr #4
 801493c:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
	...

08014941 <SOFTWARE_VERSION>:
 8014941:	00302e31 	eorseq	r2, r0, r1, lsr lr

08014945 <s_Output>:
 8014945:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8014951:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801495d:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014961:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8014965:	00000000 	andeq	r0, r0, r0
 8014969:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 801496d:	0000006c 	andeq	r0, r0, ip, rrx
 8014971:	00000000 	andeq	r0, r0, r0
 8014975:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8014979:	65646f43 	strbvs	r6, [r4, #-3907]!	@ 0xfffff0bd
 801497d:	00000000 	andeq	r0, r0, r0
 8014981:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 801498d:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014991:	00006769 	andeq	r6, r0, r9, ror #14
 8014995:	00000000 	andeq	r0, r0, r0
 8014999:	70657453 	rsbvc	r7, r5, r3, asr r4
 801499d:	00726570 	rsbseq	r6, r2, r0, ror r5
 80149a1:	00000000 	andeq	r0, r0, r0
 80149a5:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80149a9:	00007265 	andeq	r7, r0, r5, ror #4
 80149ad:	00000000 	andeq	r0, r0, r0
 80149b1:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 80149b5:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80149b9:	00000000 	andeq	r0, r0, r0
 80149bd:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80149c1:	00006c61 	andeq	r6, r0, r1, ror #24
 80149c5:	00000000 	andeq	r0, r0, r0
 80149c9:	20424752 	subcs	r4, r2, r2, asr r7
 80149cd:	656e6150 	strbvs	r6, [lr, #-336]!	@ 0xfffffeb0
 80149d1:	0000006c 	andeq	r0, r0, ip, rrx
 80149d5:	004d5750 	subeq	r5, sp, r0, asr r7
	...

080149e1 <s_Node>:
 80149e1:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 80149e5:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80149f1:	41730000 	cmnmi	r3, r0
 80149f5:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 80149f9:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014a05:	2043534f 	subcs	r5, r3, pc, asr #6
 8014a09:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 8014a0d:	00007265 	andeq	r7, r0, r5, ror #4
 8014a11:	00000000 	andeq	r0, r0, r0
 8014a15:	544c0000 	strbpl	r0, [ip], #-0
 8014a19:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8014a29:	2043534f 	subcs	r5, r3, pc, asr #6
 8014a2d:	65696c43 	strbvs	r6, [r9, #-3139]!	@ 0xfffff3bd
 8014a31:	0000746e 	andeq	r7, r0, lr, ror #8
 8014a35:	00000000 	andeq	r0, r0, r0
 8014a39:	44520000 	ldrbmi	r0, [r2], #-0
 8014a3d:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 8014a41:	524c4c20 	subpl	r4, ip, #32, 24	@ 0x2000
 8014a45:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8014a49:	0000796c 	andeq	r7, r0, ip, ror #18
 8014a4d:	776f6853 			@ <UNDEFINED> instruction: 0x776f6853
 8014a51:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
	...
 8014a5d:	494d0000 	stmdbmi	sp, {}^	@ <UNPREDICTABLE>
 8014a61:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8014a71:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8014a81:	69500000 	ldmdbvs	r0, {}^	@ <UNPREDICTABLE>
 8014a85:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014a89:	65687375 	strbvs	r7, [r8, #-885]!	@ 0xfffffc8b
 8014a8d:	00000072 	andeq	r0, r0, r2, ror r0
 8014a91:	00000000 	andeq	r0, r0, r0
 8014a95:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
	...
 8014aa5:	6f420000 	svcvs	0x00420000
 8014aa9:	6f6c746f 	svcvs	0x006c746f
 8014aad:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8014ab1:	54465420 	strbpl	r5, [r6], #-1056	@ 0xfffffbe0
 8014ab5:	00000050 	andeq	r0, r0, r0, asr r0
 8014ab9:	204d4452 	subcs	r4, sp, r2, asr r4
 8014abd:	70736552 	rsbsvc	r6, r3, r2, asr r5
 8014ac1:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8014ac5:	00000072 	andeq	r0, r0, r2, ror r0
 8014ac9:	 	stmdbvc	r0, {}	@ <UNPREDICTABLE>

08014acc <RemoteConfig::s_SET>:
 8014acc:	08009a79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, ip, pc}
 8014ad0:	00000000 	andeq	r0, r0, r0
 8014ad4:	0801404e 	stmdaeq	r1, {r1, r2, r3, r6, lr}
 8014ad8:	00010005 	andeq	r0, r1, r5
 8014adc:	08009a51 	stmdaeq	r0, {r0, r4, r6, r9, fp, ip, pc}
 8014ae0:	00000000 	andeq	r0, r0, r0
 8014ae4:	08014054 	stmdaeq	r1, {r2, r4, r6, lr}
 8014ae8:	00010008 	andeq	r0, r1, r8

08014aec <RemoteConfig::s_GET>:
 8014aec:	0800a27d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sp, pc}
 8014af0:	00000000 	andeq	r0, r0, r0
 8014af4:	08014066 	stmdaeq	r1, {r1, r2, r5, r6, lr}
 8014af8:	00000008 	andeq	r0, r0, r8
 8014afc:	080099a1 	stmdaeq	r0, {r0, r5, r7, r8, fp, ip, pc}
 8014b00:	00000000 	andeq	r0, r0, r0
 8014b04:	0801406f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, lr}
 8014b08:	00000005 	andeq	r0, r0, r5
 8014b0c:	0800991d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, ip, pc}
 8014b10:	00000000 	andeq	r0, r0, r0
 8014b14:	08014075 	stmdaeq	r1, {r0, r2, r4, r5, r6, lr}
 8014b18:	00000008 	andeq	r0, r0, r8
 8014b1c:	08009891 	stmdaeq	r0, {r0, r4, r7, fp, ip, pc}
 8014b20:	00000000 	andeq	r0, r0, r0
 8014b24:	08014054 	stmdaeq	r1, {r2, r4, r6, lr}
 8014b28:	00000008 	andeq	r0, r0, r8
 8014b2c:	080098dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, ip, pc}
 8014b30:	00000000 	andeq	r0, r0, r0
 8014b34:	0801407e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, lr}
 8014b38:	00000007 	andeq	r0, r0, r7
 8014b3c:	08009c95 	stmdaeq	r0, {r0, r2, r4, r7, sl, fp, ip, pc}
 8014b40:	00000000 	andeq	r0, r0, r0
 8014b44:	08014086 	stmdaeq	r1, {r1, r2, r7, lr}
 8014b48:	00010004 	andeq	r0, r1, r4
 8014b4c:	08009955 	stmdaeq	r0, {r0, r2, r4, r6, r8, fp, ip, pc}
 8014b50:	00000000 	andeq	r0, r0, r0
 8014b54:	0801404e 	stmdaeq	r1, {r1, r2, r3, r6, lr}
 8014b58:	00000005 	andeq	r0, r0, r5
 8014b5c:	08009f65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, fp, ip, pc}
 8014b60:	00000000 	andeq	r0, r0, r0
 8014b64:	0801408b 	stmdaeq	r1, {r0, r1, r3, r7, lr}
 8014b68:	00000009 	andeq	r0, r0, r9

08014b6c <paramMasks>:
 8014b6c:	08014fda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, sl, fp, lr}
 8014b70:	00000001 	andeq	r0, r0, r1
 8014b74:	08014fcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, fp, lr}
 8014b78:	00000002 	andeq	r0, r0, r2
 8014b7c:	08014fbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, lr}
 8014b80:	00000004 	andeq	r0, r0, r4
 8014b84:	08014fb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp, lr}
 8014b88:	00000008 	andeq	r0, r0, r8
 8014b8c:	08014fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, lr}
 8014b90:	00000020 	andeq	r0, r0, r0, lsr #32

08014b94 <RemoteConfig::s_TXT>:
 8014b94:	08009c9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, fp, ip, pc}
 8014b98:	00000000 	andeq	r0, r0, r0
 8014b9c:	08009edd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, pc}
 8014ba0:	00000000 	andeq	r0, r0, r0
 8014ba4:	080140c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, lr}
 8014ba8:	0000000b 	andeq	r0, r0, fp
 8014bac:	08009cc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, ip, pc}
 8014bb0:	00000000 	andeq	r0, r0, r0
 8014bb4:	08009f05 	stmdaeq	r0, {r0, r2, r8, r9, sl, fp, ip, pc}
 8014bb8:	00000000 	andeq	r0, r0, r0
 8014bbc:	080140d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, lr}
 8014bc0:	00000007 	andeq	r0, r0, r7
 8014bc4:	08009ce9 	stmdaeq	r0, {r0, r3, r5, r6, r7, sl, fp, ip, pc}
 8014bc8:	00000000 	andeq	r0, r0, r0
 8014bcc:	08009f25 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, fp, ip, pc}
 8014bd0:	00000000 	andeq	r0, r0, r0
 8014bd4:	080140db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, lr}
 8014bd8:	0000000b 	andeq	r0, r0, fp
 8014bdc:	08009d11 	stmdaeq	r0, {r0, r4, r8, sl, fp, ip, pc}
 8014be0:	00000000 	andeq	r0, r0, r0
 8014be4:	08009f45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, pc}
 8014be8:	00000000 	andeq	r0, r0, r0
 8014bec:	080140e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, lr}
 8014bf0:	0000000b 	andeq	r0, r0, fp
 8014bf4:	00000020 	andeq	r0, r0, r0, lsr #32
 8014bf8:	00544547 	subseq	r4, r4, r7, asr #10
 8014bfc:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 8014c00:	00000000 	andeq	r0, r0, r0
 8014c04:	0000002f 	andeq	r0, r0, pc, lsr #32
 8014c08:	50545448 	subspl	r5, r4, r8, asr #8
 8014c0c:	00000000 	andeq	r0, r0, r0
 8014c10:	00000a20 	andeq	r0, r0, r0, lsr #20
 8014c14:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8014c18:	0000003a 	andeq	r0, r0, sl, lsr r0
 8014c1c:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8014c20:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8014c24:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8014c28:	00000000 	andeq	r0, r0, r0
 8014c2c:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8014c30:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8014c34:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014c38:	00006874 	andeq	r6, r0, r4, ror r8
 8014c3c:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8014c40:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8014c44:	2f6e6f69 	svccs	0x006e6f69
 8014c48:	00000000 	andeq	r0, r0, r0
 8014c4c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8014c50:	00000000 	andeq	r0, r0, r0
 8014c54:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 8014c58:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 8014c5c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
 8014c60:	00000000 	andeq	r0, r0, r0
 8014c64:	00003b20 	andeq	r3, r0, r0, lsr #22
 8014c68:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 8014c6c:	00000000 	andeq	r0, r0, r0
 8014c70:	6f736a2f 	svcvs	0x00736a2f
 8014c74:	00002f6e 	andeq	r2, r0, lr, ror #30
 8014c78:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 8014c7c:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 8014c80:	00006c6d 	andeq	r6, r0, sp, ror #24
 8014c84:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	@ 0xffffff44
 8014c88:	00000065 	andeq	r0, r0, r5, rrx
 8014c8c:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8014c90:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 8014c94:	0000006c 	andeq	r0, r0, ip, rrx
 8014c98:	6374722f 	cmnvs	r4, #-268435454	@ 0xf0000002
 8014c9c:	00000000 	andeq	r0, r0, r0
 8014ca0:	2e637472 	mcrcs	4, 3, r7, cr3, cr2, {3}
 8014ca4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8014ca8:	00000000 	andeq	r0, r0, r0
 8014cac:	6f736a2f 	svcvs	0x00736a2f
 8014cb0:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 8014cb4:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8014cb8:	00000000 	andeq	r0, r0, r0
 8014cbc:	6f736a2f 	svcvs	0x00736a2f
 8014cc0:	0000006e 	andeq	r0, r0, lr, rrx
 8014cc4:	6f626572 	svcvs	0x00626572
 8014cc8:	0000746f 	andeq	r7, r0, pc, ror #8
 8014ccc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014cd0:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8014cd4:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8014cd8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8014cdc:	00000000 	andeq	r0, r0, r0
 8014ce0:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8014ce4:	0000003d 	andeq	r0, r0, sp, lsr r0
 8014ce8:	3d637472 	cfstrdcc	mvd7, [r3, #-456]!	@ 0xfffffe38
 8014cec:	00000000 	andeq	r0, r0, r0
 8014cf0:	4f44213c 	svcmi	0x0044213c
 8014cf4:	50595443 	subspl	r5, r9, r3, asr #8
 8014cf8:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8014cfc:	0a3e6c6d 	beq	8fafeb8 <__init_array_end+0xf9883c>
 8014d00:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8014d04:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8014d08:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8014d0c:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014d10:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8014d14:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	@ 0xfffffeb4
 8014d18:	2f3c7469 	svccs	0x003c7469
 8014d1c:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 8014d20:	2f3c3e65 	svccs	0x003c3e65
 8014d24:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8014d28:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8014d2c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014d30:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8014d34:	2f3c4b4f 	svccs	0x003c4b4f
 8014d38:	3c3e3168 	ldfccs	f3, [lr], #-416	@ 0xfffffe60
 8014d3c:	646f622f 	strbtvs	r6, [pc], #-559	@ 8014d44 <RemoteConfig::s_TXT+0x1b0>
 8014d40:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 8014d44:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8014d48:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8014d4c:	20646142 	rsbcs	r6, r4, r2, asr #2
 8014d50:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 8014d54:	00747365 	rsbseq	r7, r4, r5, ror #6
 8014d58:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8014d5c:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8014d60:	6f727245 	svcvs	0x00727245
 8014d64:	00000072 	andeq	r0, r0, r2, ror r0
 8014d68:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 8014d6c:	20747365 	rsbscs	r7, r4, r5, ror #6
 8014d70:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 8014d74:	54207974 	strtpl	r7, [r0], #-2420	@ 0xfffff68c
 8014d78:	4c206f6f 	stcmi	15, cr6, [r0], #-444	@ 0xfffffe44
 8014d7c:	65677261 	strbvs	r7, [r7, #-609]!	@ 0xfffffd9f
 8014d80:	00000000 	andeq	r0, r0, r0
 8014d84:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 8014d88:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	@ 0xfffffe6c
 8014d8c:	20495255 	subcs	r5, r9, r5, asr r2
 8014d90:	206f6f54 	rsbcs	r6, pc, r4, asr pc	@ <UNPREDICTABLE>
 8014d94:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8014d98:	00000000 	andeq	r0, r0, r0
 8014d9c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 8014da0:	6c616e72 	stclvs	14, cr6, [r1], #-456	@ 0xfffffe38
 8014da4:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 8014da8:	20726576 	rsbscs	r6, r2, r6, ror r5
 8014dac:	6f727245 	svcvs	0x00727245
 8014db0:	00000072 	andeq	r0, r0, r2, ror r0
 8014db4:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
 8014db8:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
 8014dbc:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 8014dc0:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
 8014dc4:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8014dc8:	00006465 	andeq	r6, r0, r5, ror #8
 8014dcc:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8014dd0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014dd4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014dd8:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8014ddc:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8014de0:	00000064 	andeq	r0, r0, r4, rrx
 8014de4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014de8:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 8014dec:	00000064 	andeq	r0, r0, r4, rrx
 8014df0:	00004b4f 	andeq	r4, r0, pc, asr #22
 8014df4:	4f44213c 	svcmi	0x0044213c
 8014df8:	50595443 	subspl	r5, r9, r3, asr #8
 8014dfc:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8014e00:	0a3e6c6d 	beq	8faffbc <__init_array_end+0xf98940>
 8014e04:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8014e08:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8014e0c:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8014e10:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8014e14:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8014e18:	25207525 	strcs	r7, [r0, #-1317]!	@ 0xfffffadb
 8014e1c:	742f3c73 	strtvc	r3, [pc], #-3187	@ 8014e24 <RemoteConfig::s_TXT+0x290>
 8014e20:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8014e24:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8014e28:	3e646165 	powccsz	f6, f4, f5
 8014e2c:	6f623c0a 	svcvs	0x00623c0a
 8014e30:	3c3e7964 			@ <UNDEFINED> instruction: 0x3c3e7964
 8014e34:	253e3168 	ldrcs	r3, [lr, #-360]!	@ 0xfffffe98
 8014e38:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8014e3c:	2f3c3e31 	svccs	0x003c3e31
 8014e40:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014e44:	2f3c0a3e 	svccs	0x003c0a3e
 8014e48:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8014e4c:	00000a3e 	andeq	r0, r0, lr, lsr sl
 8014e50:	50545448 	subspl	r5, r4, r8, asr #8
 8014e54:	312e312f 			@ <UNDEFINED> instruction: 0x312e312f
 8014e58:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8014e5c:	0a0d7325 	beq	8371af8 <__init_array_end+0x35a47c>
 8014e60:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 8014e64:	203a7265 	eorscs	r7, sl, r5, ror #4
 8014e68:	0a0d7325 	beq	8371b04 <__init_array_end+0x35a488>
 8014e6c:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8014e70:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8014e74:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8014e78:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 8014e7c:	6f430a0d 	svcvs	0x00430a0d
 8014e80:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014e84:	654c2d74 	strbvs	r2, [ip, #-3444]	@ 0xfffff28c
 8014e88:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8014e8c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8014e90:	6f430a0d 	svcvs	0x00430a0d
 8014e94:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 8014e98:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8014e9c:	6c63203a 	stclvs	0, cr2, [r3], #-232	@ 0xffffff18
 8014ea0:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	@ 0xfffffe44
 8014ea4:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8014ea8:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 8014eac:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 8014eb0:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8014eb4:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 8014eb8:	0000000a 	andeq	r0, r0, sl
 8014ebc:	72746552 	rsbsvc	r6, r4, #343932928	@ 0x14800000
 8014ec0:	726f2079 	rsbvc	r2, pc, #121	@ 0x79
 8014ec4:	65757120 	ldrbvs	r7, [r5, #-288]!	@ 0xfffffee0
 8014ec8:	74206575 	strtvc	r6, [r0], #-1397	@ 0xfffffa8b
 8014ecc:	64206568 	strtvs	r6, [r0], #-1384	@ 0xfffffa98
 8014ed0:	20617461 	rsbcs	r7, r1, r1, ror #8
 8014ed4:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8014ed8:	6574616c 	ldrbvs	r6, [r4, #-364]!	@ 0xfffffe94
 8014edc:	72742072 	rsbsvc	r2, r4, #114	@ 0x72
 8014ee0:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	@ 0xfffffe7c
 8014ee4:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8014ee8:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8014eec:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 8014ef0:	000a646e 	andeq	r6, sl, lr, ror #8

08014ef4 <s_contentType>:
 8014ef4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8014ef8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8014efc:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8014f14:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8014f18:	7373632f 	cmnvc	r3, #-1140850688	@ 0xbc000000
	...
 8014f34:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8014f38:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8014f3c:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 8014f40:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8014f54:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8014f58:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8014f5c:	2f6e6f69 	svccs	0x006e6f69
 8014f60:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
 8014f74:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8014f78:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8014f7c:	2f6e6f69 	svccs	0x006e6f69
 8014f80:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 8014f84:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 8014f88:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
	...

08014f94 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8014f94:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014f98:	5f79616c 	svcpl	0x0079616c
 8014f9c:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

08014fa1 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8014fa1:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8014fa5:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8014fa9:	6f746361 	svcvs	0x00746361
 8014fad:	 	strvs	r7, [r0, #-2418]	@ 0xfffff68e

08014fb0 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8014fb0:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8014fb4:	755f656c 	ldrbvc	r6, [pc, #-1388]	@ 8014a50 <s_Node+0x6f>
 8014fb8:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 8014fbc:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08014fbe <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8014fbe:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8014fc2:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 8014fc6:	6f6f6265 	svcvs	0x006f6265
 8014fca:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08014fcc <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8014fcc:	61736964 	cmnvs	r3, r4, ror #18
 8014fd0:	5f656c62 	svcpl	0x00656c62
 8014fd4:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 8014fd8:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

08014fda <RemoteConfigConst::PARAMS_DISABLE>:
 8014fda:	61736964 	cmnvs	r3, r4, ror #18
 8014fde:	00656c62 	rsbeq	r6, r5, r2, ror #24

08014fe2 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8014fe2:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8014fe6:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 8014fea:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

08014ff0 <HttpContent>:
 8014ff0:	08014254 	stmdaeq	r1, {r2, r4, r6, r9, lr}
 8014ff4:	080168f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, sp, lr}
 8014ff8:	000003f5 	strdeq	r0, [r0], -r5
 8014ffc:	00000000 	andeq	r0, r0, r0
 8015000:	0801425d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, lr}
 8015004:	08016434 	stmdaeq	r1, {r2, r4, r5, sl, sp, lr}
 8015008:	000004c3 	andeq	r0, r0, r3, asr #9
 801500c:	00000002 	andeq	r0, r0, r2
 8015010:	08014267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, lr}
 8015014:	0801629a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sp, lr}
 8015018:	00000199 	muleq	r0, r9, r1
 801501c:	00000001 	andeq	r0, r0, r1
 8015020:	08014272 	stmdaeq	r1, {r1, r4, r5, r6, r9, lr}
 8015024:	08015e25 	stmdaeq	r1, {r0, r2, r5, r9, sl, fp, ip, lr}
 8015028:	00000474 	andeq	r0, r0, r4, ror r4
 801502c:	00000002 	andeq	r0, r0, r2
 8015030:	0801427b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, lr}
 8015034:	08015b58 	stmdaeq	r1, {r3, r4, r6, r8, r9, fp, ip, lr}
 8015038:	000002cc 	andeq	r0, r0, ip, asr #5
 801503c:	00000002 	andeq	r0, r0, r2
 8015040:	08014283 	stmdaeq	r1, {r0, r1, r7, r9, lr}
 8015044:	08015a59 	stmdaeq	r1, {r0, r3, r4, r6, r9, fp, ip, lr}
 8015048:	000000fe 	strdeq	r0, [r0], -lr
 801504c:	00000002 	andeq	r0, r0, r2
 8015050:	0801428e 	stmdaeq	r1, {r1, r2, r3, r7, r9, lr}
 8015054:	0801570d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sl, ip, lr}
 8015058:	0000034b 	andeq	r0, r0, fp, asr #6
 801505c:	00000002 	andeq	r0, r0, r2
 8015060:	08014295 	stmdaeq	r1, {r0, r2, r4, r7, r9, lr}
 8015064:	08015586 	stmdaeq	r1, {r1, r2, r7, r8, sl, ip, lr}
 8015068:	00000186 	andeq	r0, r0, r6, lsl #3
 801506c:	00000002 	andeq	r0, r0, r2
 8015070:	0801429d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, lr}
 8015074:	080152e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, lr}
 8015078:	0000029d 	muleq	r0, sp, r2
 801507c:	00000000 	andeq	r0, r0, r0
 8015080:	080142a8 	stmdaeq	r1, {r3, r5, r7, r9, lr}
 8015084:	08015090 	stmdaeq	r1, {r4, r7, ip, lr}
 8015088:	00000257 	andeq	r0, r0, r7, asr r2
 801508c:	00000000 	andeq	r0, r0, r0

08015090 <time_html>:
 8015090:	4f44213c 	svcmi	0x0044213c
 8015094:	50595443 	subspl	r5, r9, r3, asr #8
 8015098:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801509c:	0a3e6c6d 	beq	8fb0258 <__init_array_end+0xf98bdc>
 80150a0:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 80150a4:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 80150a8:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80150ac:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80150b0:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 80150b4:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 80150b8:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 80150bc:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 80150c0:	20227465 	eorcs	r7, r2, r5, ror #8
 80150c4:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 80150c8:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 80150cc:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 80150d0:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 80150d4:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 80150d8:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 80150dc:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
 80150e0:	2065646f 	rsbcs	r6, r5, pc, ror #8
 80150e4:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 80150e8:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80150ec:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 80150f0:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 80150f4:	0a3e6461 	beq	8fae280 <__init_array_end+0xf96c04>
 80150f8:	646f623c 	strbtvs	r6, [pc], #-572	@ 8015100 <time_html+0x70>
 80150fc:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 8015100:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8015104:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 8015108:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801510c:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8015110:	73694c64 	cmnvc	r9, #100, 24	@ 0x6400
 8015114:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 8015118:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 801511c:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 8015120:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8015124:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 8015128:	75623c3e 	strbvc	r3, [r2, #-3134]!	@ 0xfffff3c2
 801512c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8015130:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 8015134:	6b63696c 	blvs	98ef6ec <__init_array_end+0x18d8070>
 8015138:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801513c:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 8015140:	22292868 	eorcs	r2, r9, #104, 16	@ 0x680000
 8015144:	6665523e 			@ <UNDEFINED> instruction: 0x6665523e
 8015148:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 801514c:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 8015150:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8015154:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	@ <UNPREDICTABLE>
 8015158:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 801515c:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8015160:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 8015168 <time_html+0xd8>
 8015164:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 8015168:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
 801516c:	2065646f 	rsbcs	r6, r5, pc, ror #8
 8015170:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8015174:	6c697720 	stclvs	7, cr7, [r9], #-128	@ 0xffffff80
 8015178:	6562206c 	strbvs	r2, [r2, #-108]!	@ 0xffffff94
 801517c:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 8015180:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015184:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 8015188:	3c657265 	sfmcc	f7, 2, [r5], #-404	@ 0xfffffe6c
 801518c:	0a3e702f 	beq	8fb1250 <__init_array_end+0xf99bd4>
 8015190:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 8015194:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8015198:	6f206e6f 	svcvs	0x00206e6f
 801519c:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80151a0:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 80151a4:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 80151a8:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
 80151ac:	61636f4c 	cmnvs	r3, ip, asr #30
 80151b0:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	@ 0xfffffe50
 80151b4:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 80151b8:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
 80151bc:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
 80151c0:	4c206874 	stcmi	8, cr6, [r0], #-464	@ 0xfffffe30
 80151c4:	6c61636f 	stclvs	3, cr6, [r1], #-444	@ 0xfffffe44
 80151c8:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 80151cc:	622f3c65 	eorvs	r3, pc, #25856	@ 0x6500
 80151d0:	6f747475 	svcvs	0x00747475
 80151d4:	2f3c3e6e 	svccs	0x003c3e6e
 80151d8:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 80151dc:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 80151e4 <time_html+0x154>
 80151e0:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 80151e4:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 80151e8:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80151ec:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 80151f0:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 80151f4:	2f3c3e22 	svccs	0x003c3e22
 80151f8:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 80151fc:	6f6f662f 	svcvs	0x006f662f
 8015200:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 8015204:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 8015208:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801520c:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8015210:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 8015214:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 8015218:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801521c:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8015220:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8015224:	2f747865 	svccs	0x00747865
 8015228:	6176616a 	cmnvs	r6, sl, ror #2
 801522c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8015230:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 8015234:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8015238:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801523c:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 8015240:	70697263 	rsbvc	r7, r9, r3, ror #4
 8015244:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 8015248:	64223d63 	strtvs	r3, [r2], #-3427	@ 0xfffff29d
 801524c:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8015250:	2022736a 	eorcs	r7, r2, sl, ror #6
 8015254:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 8015258:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 801525c:	6a2f7478 	bvs	8bf2444 <__init_array_end+0xbdadc8>
 8015260:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 8015264:	70697263 	rsbvc	r7, r9, r3, ror #4
 8015268:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801526c:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8015270:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8015274:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 8015278:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801527c:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8015280:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
 8015284:	6a2e656d 	bvs	8bae840 <__init_array_end+0xb971c4>
 8015288:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801528c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8015290:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8015294:	616a2f74 	smcvs	41716	@ 0xa2f4
 8015298:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801529c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80152a0:	2f3c3e22 	svccs	0x003c3e22
 80152a4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80152a8:	0a3e7470 	beq	8fb2470 <__init_array_end+0xf9adf4>
 80152ac:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 80152b0:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80152b4:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 80152b8:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
 80152bc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80152c0:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80152c4:	6665723b 			@ <UNDEFINED> instruction: 0x6665723b
 80152c8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 80152cc:	2f3c2928 	svccs	0x003c2928
 80152d0:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80152d4:	0a3e7470 	beq	8fb249c <__init_array_end+0xf9ae20>
 80152d8:	6f622f3c 	svcvs	0x00622f3c
 80152dc:	0a3e7964 	beq	8fb3874 <__init_array_end+0xf9c1f8>
 80152e0:	74682f3c 	strbtvc	r2, [r8], #-3900	@ 0xfffff0c4
 80152e4:	003e6c6d 	eorseq	r6, lr, sp, ror #24

080152e8 <index_html>:
 80152e8:	4f44213c 	svcmi	0x0044213c
 80152ec:	50595443 	subspl	r5, r9, r3, asr #8
 80152f0:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 80152f4:	0a3e6c6d 	beq	8fb04b0 <__init_array_end+0xf98e34>
 80152f8:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 80152fc:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8015300:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8015304:	6c3c0a3e 			@ <UNDEFINED> instruction: 0x6c3c0a3e
 8015308:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 801530c:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	@ 0xfffffe38
 8015310:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
 8015314:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 8015318:	22746565 	rsbscs	r6, r4, #423624704	@ 0x19400000
 801531c:	65726820 	ldrbvs	r6, [r2, #-2080]!	@ 0xfffff7e0
 8015320:	73223d66 			@ <UNDEFINED> instruction: 0x73223d66
 8015324:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 8015328:	73632e73 	cmnvc	r3, #1840	@ 0x730
 801532c:	2f202273 	svccs	0x00202273
 8015330:	743c0a3e 	ldrtvc	r0, [ip], #-2622	@ 0xfffff5c2
 8015334:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8015338:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 8015340 <index_html+0x58>
 801533c:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8015340:	2f3c0a3e 	svccs	0x003c0a3e
 8015344:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8015348:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801534c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015350:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 8015354:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8015358:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 801535c:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8015360:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 8015364:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 8015368:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8014732 <_etext+0x97a>
 801536c:	2f3c3e6c 	svccs	0x003c3e6c
 8015370:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8015374:	0a3e7265 	beq	8fb1d10 <__init_array_end+0xf9a694>
 8015378:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801537c:	656c6573 	strbvs	r6, [ip, #-1395]!	@ 0xfffffa8d
 8015380:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8015384:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8015388:	72694464 	rsbvc	r4, r9, #100, 8	@ 0x64000000
 801538c:	6f746365 	svcvs	0x00746365
 8015390:	20227972 	eorcs	r7, r2, r2, ror r9
 8015394:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015398:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
 801539c:	6567223d 	strbvs	r2, [r7, #-573]!	@ 0xfffffdc3
 80153a0:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80153a4:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80153a8:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80153ac:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 80153b0:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	@ 0xffffff5c
 80153b4:	6c65732f 	stclvs	3, cr7, [r5], #-188	@ 0xffffff44
 80153b8:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80153bc:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80153c0:	61743c0a 	cmnvs	r4, sl, lsl #24
 80153c4:	20656c62 	rsbcs	r6, r5, r2, ror #24
 80153c8:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 80153cc:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80153d0:	62202274 	eorvs	r2, r0, #116, 4	@ 0x40000007
 80153d4:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 80153d8:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 80153dc:	2f3c3e27 	svccs	0x003c3e27
 80153e0:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 80153e4:	3c0a3e65 	stccc	14, cr3, [sl], {101}	@ 0x65
 80153e8:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 80153f0 <index_html+0x108>
 80153ec:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 80153f0:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 80153f4:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80153f8:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 80153fc:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8015400:	2f3c3e22 	svccs	0x003c3e22
 8015404:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 8015408:	6f6f662f 	svcvs	0x006f662f
 801540c:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 8015410:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 8015414:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8015418:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801541c:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8015420:	6c223d64 	stcvs	13, cr3, [r2], #-400	@ 0xfffffe70
 8015424:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8015428:	74754265 	ldrbtvc	r4, [r5], #-613	@ 0xfffffd9b
 801542c:	226e6f74 	rsbcs	r6, lr, #116, 30	@ 0x1d0
 8015430:	616c6320 	cmnvs	ip, r0, lsr #6
 8015434:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 8015438:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801543c:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8015440:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
 8015444:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 8015448:	6c223d6b 	stcvs	13, cr3, [r2], #-428	@ 0xfffffe54
 801544c:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8015450:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 8015454:	636f4c3e 	cmnvs	pc, #15872	@ 0x3e00
 8015458:	20657461 	rsbcs	r7, r5, r1, ror #8
 801545c:	3c66664f 	stclcc	6, cr6, [r6], #-316	@ 0xfffffec4
 8015460:	7475622f 	ldrbtvc	r6, [r5], #-559	@ 0xfffffdd1
 8015464:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
 8015468:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 801546c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8015470:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 8015474:	6b63696c 	blvs	98efa2c <__init_array_end+0x18d83b0>
 8015478:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801547c:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8015484 <index_html+0x19c>
 8015480:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 8015484:	6f626552 	svcvs	0x00626552
 8015488:	2f3c746f 	svccs	0x003c746f
 801548c:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8015490:	0a3e6e6f 	beq	8fb0e54 <__init_array_end+0xf997d8>
 8015494:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8015498:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801549c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80154a0:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 80154a4:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 80154a8:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 80154ac:	6a2e6369 	bvs	8bae258 <__init_array_end+0xb96bdc>
 80154b0:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 80154b4:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 80154b8:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 80154bc:	616a2f74 	smcvs	41716	@ 0xa2f4
 80154c0:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 80154c4:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80154c8:	2f3c3e22 	svccs	0x003c3e22
 80154cc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80154d0:	0a3e7470 	beq	8fb2698 <__init_array_end+0xf9b01c>
 80154d4:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 80154d8:	20747069 	rsbscs	r7, r4, r9, rrx
 80154dc:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 80154e0:	646e6922 	strbtvs	r6, [lr], #-2338	@ 0xfffff6de
 80154e4:	6a2e7865 	bvs	8bb3680 <__init_array_end+0xb9c004>
 80154e8:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 80154ec:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 80154f0:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 80154f4:	616a2f74 	smcvs	41716	@ 0xa2f4
 80154f8:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 80154fc:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8015500:	2f3c3e22 	svccs	0x003c3e22
 8015504:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8015508:	0a3e7470 	beq	8fb26d0 <__init_array_end+0xf9b054>
 801550c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8015510:	20747069 	rsbscs	r7, r4, r9, rrx
 8015514:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8015518:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
 801551c:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 8015520:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 8015524:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8015528:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801552c:	2f747865 	svccs	0x00747865
 8015530:	6176616a 	cmnvs	r6, sl, ror #2
 8015534:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8015538:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 801553c:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8015540:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8015544:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 8015548:	70697263 	rsbvc	r7, r9, r3, ror #4
 801554c:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 8015550:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8015554:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 8015558:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801555c:	643b2928 	ldrtvs	r2, [fp], #-2344	@ 0xfffff6d8
 8015560:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 8015564:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015568:	3c3b2928 			@ <UNDEFINED> instruction: 0x3c3b2928
 801556c:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8015570:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8015574:	622f3c0a 	eorvs	r3, pc, #2560	@ 0xa00
 8015578:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801557c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8015580:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015584:	 	cmnvc	r1, #10

08015586 <time_js>:
 8015586:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801558a:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801558e:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015592:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 8015596:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801559a:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801559e:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 80155a2:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 80155a6:	20617461 	rsbcs	r7, r1, r1, ror #8
 80155aa:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 80155ae:	20746961 	rsbscs	r6, r4, r1, ror #18
 80155b2:	4a746567 	bmi	9d2eb56 <__init_array_end+0x1d174da>
 80155b6:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 80155ba:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 80155be:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 80155c2:	0a292765 	beq	8a5f35e <__init_array_end+0xa47ce2>
 80155c6:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 80155ca:	6f6e2074 	svcvs	0x006e2074
 80155ce:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 80155d2:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 80155d6:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 80155da:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 80155de:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 80155e2:	2077656e 	rsbscs	r6, r7, lr, ror #10
 80155e6:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 80155ea:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 80155ee:	61642e61 	cmnvs	r4, r1, ror #28
 80155f2:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
 80155f6:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 80155fa:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80155fe:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8015602:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8015606:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801560a:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801560e:	6f6e2728 	svcvs	0x006e2728
 8015612:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
 8015616:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 801561a:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
 801561e:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
 8015622:	746e6574 	strbtvc	r6, [lr], #-1396	@ 0xfffffa8c
 8015626:	60203d20 	eorvs	r3, r0, r0, lsr #26
 801562a:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 801562e:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 8015632:	24203a65 	strtcs	r3, [r0], #-2661	@ 0xfffff59b
 8015636:	646f6e7b 	strbtvs	r6, [pc], #-3707	@ 801563e <time_js+0xb8>
 801563a:	0a607d65 	beq	9834bd6 <__init_array_end+0x181d55a>
 801563e:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 8015642:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015646:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801564a:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801564e:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
 8015652:	74695763 	strbtvc	r5, [r9], #-1891	@ 0xfffff89d
 8015656:	636f4c68 	cmnvs	pc, #104, 24	@ 0x6800
 801565a:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
 801565e:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 8015662:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8015666:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801566a:	646f6e20 	strbtvs	r6, [pc], #-3616	@ 8015672 <time_js+0xec>
 801566e:	203d2065 	eorscs	r2, sp, r5, rrx
 8015672:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 8015676:	61447461 	cmpvs	r4, r1, ror #8
 801567a:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
 801567e:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
 8015682:	44207765 	strtmi	r7, [r0], #-1893	@ 0xfffff89b
 8015686:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 801568a:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 801568e:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8015692:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8015696:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801569a:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801569e:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80156a2:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 80156a6:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 80156aa:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 80156ae:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 80156b2:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 80156b6:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80156ba:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 80156be:	6f4e6020 	svcvs	0x004e6020
 80156c2:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 80156c6:	3a656d69 	bcc	9970c72 <__init_array_end+0x19595f6>
 80156ca:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 80156ce:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 80156d2:	6f630a60 	svcvs	0x00630a60
 80156d6:	2074736e 	rsbscs	r7, r4, lr, ror #6
 80156da:	61746164 	cmnvs	r4, r4, ror #2
 80156de:	7b203d20 	blvc	8824b66 <__init_array_end+0x80d4ea>
 80156e2:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 80156e6:	6e203a65 	vnmulvs.f32	s6, s0, s11
 80156ea:	2065646f 	rsbcs	r6, r5, pc, ror #8
 80156ee:	77610a7d 			@ <UNDEFINED> instruction: 0x77610a7d
 80156f2:	20746961 	rsbscs	r6, r4, r1, ror #18
 80156f6:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 80156fa:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 80156fe:	720a2961 	andvc	r2, sl, #1589248	@ 0x184000
 8015702:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8015706:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801570a:	 	tstvs	r0, sl, lsl #26

0801570d <rtc_js>:
 801570d:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015711:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8015715:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015719:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 801571d:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8015721:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8015725:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 8015729:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 801572d:	77613d31 			@ <UNDEFINED> instruction: 0x77613d31
 8015731:	20746961 	rsbscs	r6, r4, r1, ror #18
 8015735:	4a746567 	bmi	9d2ecd9 <__init_array_end+0x1d1765d>
 8015739:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801573d:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 8015741:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 8015745:	0a292765 	beq	8a5f4e1 <__init_array_end+0xa47e65>
 8015749:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801574d:	6f6e2074 	svcvs	0x006e2074
 8015751:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 8015755:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8015759:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 801575d:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8015761:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8015765:	2077656e 	rsbscs	r6, r7, lr, ror #10
 8015769:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 801576d:	2e316428 	cdpcs	4, 3, cr6, cr1, cr8, {1}
 8015771:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8015775:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 8015779:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801577d:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8015781:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8015785:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8015789:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801578d:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 8015791:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 8015795:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8015799:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 801579d:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 80157a1:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80157a5:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 80157a9:	6f4e6020 	svcvs	0x004e6020
 80157ad:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 80157b1:	3a656d69 	bcc	9970d5d <__init_array_end+0x19596e1>
 80157b5:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 80157b9:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 80157bd:	656c0a60 	strbvs	r0, [ip, #-2656]!	@ 0xfffff5a0
 80157c1:	32642074 	rsbcc	r2, r4, #116	@ 0x74
 80157c5:	6177613d 	cmnvs	r7, sp, lsr r1
 80157c9:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80157cd:	534a7465 	movtpl	r7, #42085	@ 0xa465
 80157d1:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80157d5:	61637472 	smcvs	14146	@ 0x3742
 80157d9:	6d72616c 	ldfvse	f6, [r2, #-432]!	@ 0xfffffe50
 80157dd:	630a2927 	movwvs	r2, #43303	@ 0xa927
 80157e1:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 80157e5:	63747220 	cmnvs	r4, #32, 4
 80157e9:	66203d20 	strtvs	r3, [r0], -r0, lsr #26
 80157ed:	616d726f 	cmnvs	sp, pc, ror #4
 80157f1:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 80157f5:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 80157f9:	656e2865 	strbvs	r2, [lr, #-2149]!	@ 0xfffff79b
 80157fd:	61442077 	hvcvs	16903	@ 0x4207
 8015801:	64286574 	strtvs	r6, [r8], #-1396	@ 0xfffffa8c
 8015805:	74722e32 	ldrbtvc	r2, [r2], #-3634	@ 0xfffff1ce
 8015809:	0a292963 	beq	8a5fd9d <__init_array_end+0xa48721>
 801580d:	75636f64 	strbvc	r6, [r3, #-3940]!	@ 0xfffff09c
 8015811:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8015815:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 8015819:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	@ 0xfffffeec
 801581d:	42746e65 	rsbsmi	r6, r4, #1616	@ 0x650
 8015821:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
 8015825:	63747227 	cmnvs	r4, #1879048194	@ 0x70000002
 8015829:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801582d:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 8015831:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 8015835:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8015839:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 801583d:	54526020 	ldrbpl	r6, [r2], #-32	@ 0xffffffe0
 8015841:	69542043 	ldmdbvs	r4, {r0, r1, r6, sp}^
 8015845:	203a656d 	eorscs	r6, sl, sp, ror #10
 8015849:	74727b24 	ldrbtvc	r7, [r2], #-2852	@ 0xfffff4dc
 801584d:	0a607d63 	beq	9834de1 <__init_array_end+0x181d765>
 8015851:	75636f64 	strbvc	r6, [r3, #-3940]!	@ 0xfffff09c
 8015855:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8015859:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801585d:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	@ 0xfffffeec
 8015861:	42746e65 	rsbsmi	r6, r4, #1616	@ 0x650
 8015865:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
 8015869:	616c6127 	cmnvs	ip, r7, lsr #2
 801586d:	6e496d72 	mcrvs	13, 2, r6, cr9, cr2, {3}
 8015871:	27747570 			@ <UNDEFINED> instruction: 0x27747570
 8015875:	61762e29 	cmnvs	r6, r9, lsr #28
 8015879:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801587d:	6f66203d 	svcvs	0x0066203d
 8015881:	74616d72 	strbtvc	r6, [r1], #-3442	@ 0xfffff28e
 8015885:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 8015889:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801588d:	77656e28 	strbvc	r6, [r5, -r8, lsr #28]!
 8015891:	74614420 	strbtvc	r4, [r1], #-1056	@ 0xfffffbe0
 8015895:	32642865 	rsbcc	r2, r4, #6619136	@ 0x650000
 8015899:	616c612e 	cmnvs	ip, lr, lsr #2
 801589d:	29296d72 	stmdbcs	r9!, {r1, r4, r5, r6, r8, sl, fp, sp, lr}
 80158a1:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 80158a5:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80158a9:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 80158ad:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 80158b1:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 80158b5:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 80158b9:	68632728 	stmdavs	r3!, {r3, r5, r8, r9, sl, sp}^
 80158bd:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	@ <UNPREDICTABLE>
 80158c1:	632e2927 			@ <UNDEFINED> instruction: 0x632e2927
 80158c5:	6b636568 	blvs	98eee6d <__init_array_end+0x18d77f1>
 80158c9:	3d206465 	cfstrscc	mvf6, [r0, #-404]!	@ 0xfffffe6c
 80158cd:	32642820 	rsbcc	r2, r4, #32, 16	@ 0x200000
 80158d1:	616e652e 	cmnvs	lr, lr, lsr #10
 80158d5:	64656c62 	strbtvs	r6, [r5], #-3170	@ 0xfffff39e
 80158d9:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 80158dd:	22312220 	eorscs	r2, r1, #32, 4
 80158e1:	0a7d0a29 	beq	9f5818d <__init_array_end+0x1f40b11>
 80158e5:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80158e9:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 80158ed:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80158f1:	68206e6f 	stmdavs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80158f5:	536f5463 	cmnpl	pc, #1660944384	@ 0x63000000
 80158f9:	29287379 	stmdbcs	r8!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}
 80158fd:	610a7b20 	tstvs	sl, r0, lsr #22
 8015901:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 8015905:	736f7020 	cmnvc	pc, #32
 8015909:	207b2874 	rsbscs	r2, fp, r4, ror r8
 801590d:	3a637472 	bcc	98f2add <__init_array_end+0x18db461>
 8015911:	2c222220 	sfmcs	f2, 4, [r2], #-128	@ 0xffffff80
 8015915:	74636120 	strbtvc	r6, [r3], #-288	@ 0xfffffee0
 8015919:	3a6e6f69 	bcc	9bb16c5 <__init_array_end+0x1b9a049>
 801591d:	63682220 	cmnvs	r8, #32, 4
 8015921:	79736f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015925:	7d202273 	sfmvc	f2, 4, [r0, #-460]!	@ 0xfffffe34
 8015929:	720a3b29 	andvc	r3, sl, #41984	@ 0xa400
 801592d:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8015931:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8015935:	0a7d0a3b 	beq	9f58229 <__init_array_end+0x1f40bad>
 8015939:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801593d:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8015941:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015945:	73206e6f 			@ <UNDEFINED> instruction: 0x73206e6f
 8015949:	6f547379 	svcvs	0x00547379
 801594d:	29286348 	stmdbcs	r8!, {r3, r6, r8, r9, sp, lr}
 8015951:	610a7b20 	tstvs	sl, r0, lsr #22
 8015955:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 8015959:	736f7020 	cmnvc	pc, #32
 801595d:	207b2874 	rsbscs	r2, fp, r4, ror r8
 8015961:	3a637472 	bcc	98f2b31 <__init_array_end+0x18db4b5>
 8015965:	2c222220 	sfmcs	f2, 4, [r2], #-128	@ 0xffffff80
 8015969:	74636120 	strbtvc	r6, [r3], #-288	@ 0xfffffee0
 801596d:	3a6e6f69 	bcc	9bb1719 <__init_array_end+0x1b9a09d>
 8015971:	79732220 	ldmdbvc	r3!, {r5, r9, sp}^
 8015975:	686f7473 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 8015979:	7d202263 	sfmvc	f2, 4, [r0, #-396]!	@ 0xfffffe74
 801597d:	720a3b29 	andvc	r3, sl, #41984	@ 0xa400
 8015981:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8015985:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8015989:	0a7d0a3b 	beq	9f5827d <__init_array_end+0x1f40c01>
 801598d:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015991:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8015995:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015999:	61206e6f 			@ <UNDEFINED> instruction: 0x61206e6f
 801599d:	6d72616c 	ldfvse	f6, [r2, #-432]!	@ 0xfffffe50
 80159a1:	7b202928 	blvc	881fe49 <__init_array_end+0x8087cd>
 80159a5:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 80159a9:	61207473 			@ <UNDEFINED> instruction: 0x61207473
 80159ad:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 80159b1:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 80159b5:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80159b9:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 80159bd:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 80159c1:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80159c5:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 80159c9:	72616c61 	rsbvc	r6, r1, #24832	@ 0x6100
 80159cd:	706e496d 	rsbvc	r4, lr, sp, ror #18
 80159d1:	29277475 	stmdbcs	r7!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
 80159d5:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 80159d9:	0a3b6575 	beq	8eeefb5 <__init_array_end+0xed7939>
 80159dd:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 80159e1:	20622074 	rsbcs	r2, r2, r4, ror r0
 80159e5:	6f64203d 	svcvs	0x0064203d
 80159e9:	656d7563 	strbvs	r7, [sp, #-1379]!	@ 0xfffffa9d
 80159ed:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80159f1:	6c457465 	cfstrdvs	mvd7, [r5], {101}	@ 0x65
 80159f5:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80159f9:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80159fd:	63272864 			@ <UNDEFINED> instruction: 0x63272864
 8015a01:	6f626b68 	svcvs	0x00626b68
 8015a05:	2e292778 	mcrcs	7, 1, r2, cr9, cr8, {3}
 8015a09:	63656863 	cmnvs	r5, #6488064	@ 0x630000
 8015a0d:	2064656b 	rsbcs	r6, r4, fp, ror #10
 8015a11:	3122203f 			@ <UNDEFINED> instruction: 0x3122203f
 8015a15:	203a2022 	eorscs	r2, sl, r2, lsr #32
 8015a19:	3b223022 	blcc	88a1aa9 <__init_array_end+0x88a42d>
 8015a1d:	6177610a 	cmnvs	r7, sl, lsl #2
 8015a21:	70207469 	eorvc	r7, r0, r9, ror #8
 8015a25:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8015a29:	7472207b 	ldrbtvc	r2, [r2], #-123	@ 0xffffff85
 8015a2d:	22223a63 	eorcs	r3, r2, #405504	@ 0x63000
 8015a31:	6c61202c 	stclvs	0, cr2, [r1], #-176	@ 0xffffff50
 8015a35:	3a6d7261 	bcc	9b723c1 <__init_array_end+0x1b5ad45>
 8015a39:	202c6120 	eorcs	r6, ip, r0, lsr #2
 8015a3d:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8015a41:	203a656c 	eorscs	r6, sl, ip, ror #10
 8015a45:	297d2062 	ldmdbcs	sp!, {r1, r5, r6, sp}^
 8015a49:	65720a3b 	ldrbvs	r0, [r2, #-2619]!	@ 0xfffff5c5
 8015a4d:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 8015a51:	3b292868 	blcc	8a5fbf9 <__init_array_end+0xa4857d>
 8015a55:	000a7d0a 	andeq	r7, sl, sl, lsl #26

08015a59 <default_js>:
 8015a59:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8015a5d:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8015a61:	73657220 	cmnvc	r5, #32, 4
 8015a65:	73287465 			@ <UNDEFINED> instruction: 0x73287465
 8015a69:	20296c65 	eorcs	r6, r9, r5, ror #24
 8015a6d:	61760a7b 	cmnvs	r6, fp, ror sl
 8015a71:	20642072 	rsbcs	r2, r4, r2, ror r0
 8015a75:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	@ 0xffffff0c
 8015a79:	61760a3b 	cmnvs	r6, fp, lsr sl
 8015a7d:	756f2072 	strbvc	r2, [pc, #-114]!	@ 8015a13 <rtc_js+0x306>
 8015a81:	203d2074 	eorscs	r2, sp, r4, ror r0
 8015a85:	0a3b7d7b 	beq	8ef5079 <__init_array_end+0xedd9fd>
 8015a89:	5b74756f 	blpl	9d3304d <__init_array_end+0x1d1b9d1>
 8015a8d:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 8015a91:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 8015a95:	61760a3b 	cmnvs	r6, fp, lsr sl
 8015a99:	61702072 	cmnvs	r0, r2, ror r0
 8015a9d:	616f6c79 	smcvs	63177	@ 0xf6c9
 8015aa1:	203d2064 	eorscs	r2, sp, r4, rrx
 8015aa5:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8015aa9:	7274732e 	rsbsvc	r7, r4, #-1207959552	@ 0xb8000000
 8015aad:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015ab1:	6f287966 	svcvs	0x00287966
 8015ab5:	3b297475 	blcc	8a72c91 <__init_array_end+0xa5b615>
 8015ab9:	7465660a 	strbtvc	r6, [r5], #-1546	@ 0xfffff9f6
 8015abd:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8015ac1:	6f736a2f 	svcvs	0x00736a2f
 8015ac5:	202c276e 	eorcs	r2, ip, lr, ror #14
 8015ac9:	656d0a7b 	strbvs	r0, [sp, #-2683]!	@ 0xfffff585
 8015acd:	646f6874 	strbtvs	r6, [pc], #-2164	@ 8015ad5 <default_js+0x7c>
 8015ad1:	5027203a 	eorpl	r2, r7, sl, lsr r0
 8015ad5:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
 8015ad9:	65680a2c 	strbvs	r0, [r8, #-2604]!	@ 0xfffff5d4
 8015add:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8015ae1:	7b203a73 	blvc	88244b5 <__init_array_end+0x80ce39>
 8015ae5:	6f43270a 	svcvs	0x0043270a
 8015ae9:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015aed:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8015af1:	3a276570 	bcc	89ef0b9 <__init_array_end+0x9d7a3d>
 8015af5:	70612720 	rsbvc	r2, r1, r0, lsr #14
 8015af9:	63696c70 	cmnvs	r9, #112, 24	@ 0x7000
 8015afd:	6f697461 	svcvs	0x00697461
 8015b01:	736a2f6e 	cmnvc	sl, #440	@ 0x1b8
 8015b05:	0a276e6f 	beq	89f14c9 <__init_array_end+0x9d9e4d>
 8015b09:	620a2c7d 	andvs	r2, sl, #32000	@ 0x7d00
 8015b0d:	3a79646f 	bcc	9e6ecd1 <__init_array_end+0x1e57655>
 8015b11:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
 8015b15:	64616f6c 	strbtvs	r6, [r1], #-3948	@ 0xfffff094
 8015b19:	20297d0a 	eorcs	r7, r9, sl, lsl #26
 8015b1d:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 8015b21:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 8015b25:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8015b29:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	@ 0xfffffe34
 8015b2d:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
 8015b31:	72282066 	eorvc	r2, r8, #102	@ 0x66
 8015b35:	6f707365 	svcvs	0x00707365
 8015b39:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
 8015b3d:	20296b6f 	eorcs	r6, r9, pc, ror #22
 8015b41:	6567207b 	strbvs	r2, [r7, #-123]!	@ 0xffffff85
 8015b45:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015b49:	65732874 	ldrbvs	r2, [r3, #-2164]!	@ 0xfffff78c
 8015b4d:	203b296c 	eorscs	r2, fp, ip, ror #18
 8015b51:	3b297d7d 	blcc	8a7514d <__init_array_end+0xa5dad1>
 8015b55:	 	strvs	r7, [r0], -sl, lsl #26

08015b58 <date_js>:
 8015b58:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8015b5c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8015b60:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8015b64:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 8015b68:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8015b6c:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8015b70:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8015b74:	0a7b2029 	beq	9eddc20 <__init_array_end+0x1ec65a4>
 8015b78:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8015b7c:	65792074 	ldrbvs	r2, [r9, #-116]!	@ 0xffffff8c
 8015b80:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	@ 0xfffffe7c
 8015b84:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8015b88:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8015b8c:	6c754674 	ldclvs	6, cr4, [r5], #-464	@ 0xfffffe30
 8015b90:	6165596c 	cmnvs	r5, ip, ror #18
 8015b94:	3b292872 	blcc	8a5fd64 <__init_array_end+0xa486e8>
 8015b98:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8015b9c:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	@ 0xfffffe34
 8015ba0:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	@ 0xfffffe44
 8015ba4:	30272820 	eorcc	r2, r7, r0, lsr #16
 8015ba8:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015bac:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8015bb0:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8015bb4:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
 8015bb8:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
 8015bbc:	31202b20 			@ <UNDEFINED> instruction: 0x31202b20
 8015bc0:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 8015bc4:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8015bc8:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8015bcc:	6f630a3b 	svcvs	0x00630a3b
 8015bd0:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8015bd4:	20796164 	rsbscs	r6, r9, r4, ror #2
 8015bd8:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8015bdc:	2b202730 	blcs	881f8a4 <__init_array_end+0x808228>
 8015be0:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8015be4:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8015be8:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 8015bec:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
 8015bf0:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8015bf4:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 8015bf8:	0a3b2932 	beq	8ee00c8 <__init_array_end+0xec8a4c>
 8015bfc:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8015c00:	6f682074 	svcvs	0x00682074
 8015c04:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	@ 0xfffffe2c
 8015c08:	30272820 	eorcc	r2, r7, r0, lsr #16
 8015c0c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015c10:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8015c14:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 8015c18:	72756f48 	rsbsvc	r6, r5, #72, 30	@ 0x120
 8015c1c:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
 8015c20:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8015c24:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 8015c28:	0a3b2932 	beq	8ee00f8 <__init_array_end+0xec8a7c>
 8015c2c:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8015c30:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
 8015c34:	203d206e 	eorscs	r2, sp, lr, rrx
 8015c38:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
 8015c3c:	64202b20 	strtvs	r2, [r0], #-2848	@ 0xfffff4e0
 8015c40:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8015c44:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	@ 0xfffffe64
 8015c48:	74756e69 	ldrbtvc	r6, [r5], #-3689	@ 0xfffff197
 8015c4c:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 8015c50:	6c732e29 	ldclvs	14, cr2, [r3], #-164	@ 0xffffff5c
 8015c54:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 8015c58:	3b29322d 	blcc	8a62514 <__init_array_end+0xa4ae98>
 8015c5c:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8015c60:	73207473 			@ <UNDEFINED> instruction: 0x73207473
 8015c64:	3d206365 	stccc	3, cr6, [r0, #-404]!	@ 0xfffffe6c
 8015c68:	30272820 	eorcc	r2, r7, r0, lsr #16
 8015c6c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015c70:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8015c74:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 8015c78:	6f636553 	svcvs	0x00636553
 8015c7c:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8015c80:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 8015c84:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8015c88:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8015c8c:	6f630a3b 	svcvs	0x00630a3b
 8015c90:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8015c94:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 8015c98:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	@ 0xfffffe6c
 8015c9c:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8015ca0:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8015ca4:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	@ 0xfffffe30
 8015ca8:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
 8015cac:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
 8015cb0:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015cb4:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 8015cb8:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8015cbc:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 8015cc0:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015cc4:	2072756f 	rsbscs	r7, r2, pc, ror #10
 8015cc8:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8015ccc:	2b202730 	blcs	881f994 <__init_array_end+0x808318>
 8015cd0:	74614d20 	strbtvc	r4, [r1], #-3360	@ 0xfffff2e0
 8015cd4:	6c662e68 	stclvs	14, cr2, [r6], #-416	@ 0xfffffe60
 8015cd8:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015cdc:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 8015ce0:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 8015ce4:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 8015ce8:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015cec:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
 8015cf0:	2e292930 			@ <UNDEFINED> instruction: 0x2e292930
 8015cf4:	63696c73 	cmnvs	r9, #29440	@ 0x7300
 8015cf8:	322d2865 	eorcc	r2, sp, #6619136	@ 0x650000
 8015cfc:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 8015d00:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8015d04:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 8015d08:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	@ 0xfffffe34
 8015d0c:	3d206e69 	stccc	14, cr6, [r0, #-420]!	@ 0xfffffe5c
 8015d10:	30272820 	eorcc	r2, r7, r0, lsr #16
 8015d14:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015d18:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 8015d1c:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 8015d20:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 8015d24:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015d28:	36202520 	strtcc	r2, [r0], -r0, lsr #10
 8015d2c:	732e2930 			@ <UNDEFINED> instruction: 0x732e2930
 8015d30:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8015d34:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8015d38:	6f630a3b 	svcvs	0x00630a3b
 8015d3c:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8015d40:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
 8015d44:	6f203d20 	svcvs	0x00203d20
 8015d48:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 8015d4c:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	@ 0xfffffe30
 8015d50:	3f203020 	svccc	0x00203020
 8015d54:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
 8015d58:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
 8015d5c:	0a3b272d 	beq	8edfa18 <__init_array_end+0xec839c>
 8015d60:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 8015d64:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 8015d68:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015d6c:	2072756f 	rsbscs	r7, r2, pc, ror #10
 8015d70:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 8015d74:	26262029 	strtcs	r2, [r6], -r9, lsr #32
 8015d78:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
 8015d7c:	74657366 	strbtvc	r7, [r5], #-870	@ 0xfffffc9a
 8015d80:	206e694d 	rsbcs	r6, lr, sp, asr #18
 8015d84:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 8015d88:	7b202929 	blvc	8820234 <__init_array_end+0x808bb8>
 8015d8c:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8015d90:	206e7275 	rsbcs	r7, lr, r5, ror r2
 8015d94:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 8015d98:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 8015d9c:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 8015da0:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 8015da4:	61647b24 	cmnvs	r4, r4, lsr #22
 8015da8:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 8015dac:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 8015539 <index_html+0x251>
 8015db0:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 8015db4:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 8015db8:	7b243a7d 	blvc	89247b4 <__init_array_end+0x90d138>
 8015dbc:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 8015dc0:	203b605a 	eorscs	r6, fp, sl, asr r0
 8015dc4:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
 8015dc8:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8015dcc:	206e7275 	rsbcs	r7, lr, r5, ror r2
 8015dd0:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 8015dd4:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 8015dd8:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 8015ddc:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 8015de0:	61647b24 	cmnvs	r4, r4, lsr #22
 8015de4:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 8015de8:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 8015575 <index_html+0x28d>
 8015dec:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 8015df0:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 8015df4:	7b243a7d 	blvc	89247f0 <__init_array_end+0x90d174>
 8015df8:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 8015dfc:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
 8015e00:	247d6e67 	ldrbtcs	r6, [sp], #-3687	@ 0xfffff199
 8015e04:	66666f7b 	uqsub16vs	r6, r6, fp
 8015e08:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015e0c:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	@ 0xfffffe44
 8015e10:	6f7b243a 	svcvs	0x007b243a
 8015e14:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 8015e18:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
 8015e1c:	203b607d 	eorscs	r6, fp, sp, ror r0
 8015e20:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	@ 0xffffff80
	...

08015e25 <index_js>:
 8015e25:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015e29:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8015e2d:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015e31:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 8015e35:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 8015e39:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015e3d:	7b202928 	blvc	88202e5 <__init_array_end+0x808c69>
 8015e41:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 8015e45:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 8015e49:	61776120 	cmnvs	r7, r0, lsr #2
 8015e4d:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015e51:	534a7465 	movtpl	r7, #42085	@ 0xa465
 8015e55:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015e59:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 8015e5d:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 8015e61:	0a292779 	beq	8a5fc4d <__init_array_end+0xa485d1>
 8015e65:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015e69:	203d2068 	eorscs	r2, sp, r8, rrx
 8015e6d:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	@ 0x22
 8015e71:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8015e75:	4f203d20 	svcmi	0x00203d20
 8015e79:	63656a62 	cmnvs	r5, #401408	@ 0x62000
 8015e7d:	656b2e74 	strbvs	r2, [fp, #-3700]!	@ 0xfffff18c
 8015e81:	64287379 	strtvs	r7, [r8], #-889	@ 0xfffffc87
 8015e85:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
 8015e89:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 8015e8d:	660a295d 			@ <UNDEFINED> instruction: 0x660a295d
 8015e91:	726f662e 	rsbvc	r6, pc, #48234496	@ 0x2e00000
 8015e95:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
 8015e99:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
 8015e9d:	6f697463 	svcvs	0x00697463
 8015ea1:	656b286e 	strbvs	r2, [fp, #-2158]!	@ 0xfffff792
 8015ea5:	7b202979 	blvc	8820491 <__init_array_end+0x808e15>
 8015ea9:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 8015ead:	3d207620 	stccc	6, cr7, [r0, #-128]!	@ 0xffffff80
 8015eb1:	225b6420 	subscs	r6, fp, #32, 8	@ 0x20000000
 8015eb5:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 8015eb9:	5b5d2273 	blpl	975e88d <__init_array_end+0x1747211>
 8015ebd:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	@ 0xfffffe54
 8015ec1:	2b20680a 	blcs	882fef1 <__init_array_end+0x818875>
 8015ec5:	3c22203d 	stccc	0, cr2, [r2], #-244	@ 0xffffff0c
 8015ec9:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8015ecd:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
 8015ed1:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 8015ed5:	6b2b223d 	blvs	8ade7d1 <__init_array_end+0xac7155>
 8015ed9:	222b7965 	eorcs	r7, fp, #1654784	@ 0x194000
 8015edd:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 8015ee1:	2f3c222b 	svccs	0x003c222b
 8015ee5:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8015ee9:	223e6e6f 	eorscs	r6, lr, #1776	@ 0x6f0
 8015eed:	3b297d0a 	blcc	8a7531d <__init_array_end+0xa5dca1>
 8015ef1:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 8015ef5:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8015ef9:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8015efd:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8015f01:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8015f05:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8015f09:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 8015f0d:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 8015f11:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 8015f15:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
 8015f19:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8015f1d:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 8015f21:	203d204c 	eorscs	r2, sp, ip, asr #32
 8015f25:	65670a68 	strbvs	r0, [r7, #-2664]!	@ 0xfffff598
 8015f29:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015f2d:	5b662874 	blpl	99a0105 <__init_array_end+0x1988a89>
 8015f31:	0a295d30 	beq	8a6d3f9 <__init_array_end+0xa55d7d>
 8015f35:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 8015f39:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015f3d:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8015f41:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8015f45:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 8015f49:	7478745f 	ldrbtvc	r7, [r8], #-1119	@ 0xfffffba1
 8015f4d:	6c657328 	stclvs	3, cr7, [r5], #-160	@ 0xffffff60
 8015f51:	0a7b2029 	beq	9eddffd <__init_array_end+0x1ec6981>
 8015f55:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015f59:	20747874 	rsbscs	r7, r4, r4, ror r8
 8015f5d:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 8015f61:	20746961 	rsbscs	r6, r4, r1, ror #18
 8015f65:	4a746567 	bmi	9d2f509 <__init_array_end+0x1d17e8d>
 8015f69:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 8015f6d:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8015f71:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 8015f75:	3d206820 	stccc	8, cr6, [r0, #-128]!	@ 0xffffff80
 8015f79:	0a222220 	beq	889e801 <__init_array_end+0x887185>
 8015f7d:	656a624f 	strbvs	r6, [sl, #-591]!	@ 0xfffffdb1
 8015f81:	6b2e7463 	blvs	8bb3115 <__init_array_end+0xb9ba99>
 8015f85:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
 8015f89:	5b747874 	blpl	9d34161 <__init_array_end+0x1d1cae5>
 8015f8d:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 8015f91:	6f662e29 	svcvs	0x00662e29
 8015f95:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 8015f99:	75662868 	strbvc	r2, [r6, #-2152]!	@ 0xfffff798
 8015f9d:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015fa1:	6b286e6f 	blvs	8a31965 <__init_array_end+0xa1a2e9>
 8015fa5:	20297965 	eorcs	r7, r9, r5, ror #18
 8015fa9:	61760a7b 	cmnvs	r6, fp, ror sl
 8015fad:	20762072 	rsbscs	r2, r6, r2, ror r0
 8015fb1:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015fb5:	65735b74 	ldrbvs	r5, [r3, #-2932]!	@ 0xfffff48c
 8015fb9:	6b5b5d6c 	blvs	96ed571 <__init_array_end+0x16d5ef5>
 8015fbd:	0a5d7965 	beq	9774559 <__init_array_end+0x175cedd>
 8015fc1:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 8015fc5:	743c2220 	ldrtvc	r2, [ip], #-544	@ 0xfffffde0
 8015fc9:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 8015fcd:	2b223e64 	blcs	88a5965 <__init_array_end+0x88e2e9>
 8015fd1:	2b79656b 	blcs	9e6f585 <__init_array_end+0x1e57f09>
 8015fd5:	742f3c27 	strtvc	r3, [pc], #-3111	@ 8015fdd <index_js+0x1b8>
 8015fd9:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 8015fdd:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
 8015fe1:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 8015fe5:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8015fe9:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8015fed:	22747865 	rsbscs	r7, r4, #6619136	@ 0x650000
 8015ff1:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 8015ff5:	223d6575 	eorscs	r6, sp, #490733568	@ 0x1d400000
 8015ff9:	2b762b27 	blcs	9da0c9d <__init_array_end+0x1d89621>
 8015ffd:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
 8016001:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
 8016005:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8016009:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
 801600d:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 8016011:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 8016019 <index_js+0x1f4>
 8016015:	0a273e72 	beq	89e59e5 <__init_array_end+0x9ce369>
 8016019:	0a3b297d 	beq	8ee0615 <__init_array_end+0xec8f99>
 801601d:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 8016021:	743c2720 	ldrtvc	r2, [ip], #-1824	@ 0xfffff8e0
 8016025:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 8016029:	6f632064 	svcvs	0x00632064
 801602d:	6170736c 	cmnvs	r0, ip, ror #6
 8016031:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 8016035:	623c3e22 	eorsvs	r3, ip, #544	@ 0x220
 8016039:	6f747475 	svcvs	0x00747475
 801603d:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
 8016041:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 8016045:	73223d6b 			@ <UNDEFINED> instruction: 0x73223d6b
 8016049:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
 801604d:	2b27275c 	blcs	89dfdc5 <__init_array_end+0x9c8749>
 8016051:	2b6c6573 	blcs	9b2f625 <__init_array_end+0x1b17fa9>
 8016055:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
 8016059:	61533e22 	cmpvs	r3, r2, lsr #28
 801605d:	2f3c6576 	svccs	0x003c6576
 8016061:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8016065:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
 8016069:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
 801606d:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
 8016071:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 8016075:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 8016079:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801607d:	62223d73 	eorvs	r3, r2, #7360	@ 0x1cc0
 8016081:	20226e74 	eorcs	r6, r2, r4, ror lr
 8016085:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 8016089:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 801608d:	73657222 	cmnvc	r5, #536870914	@ 0x20000002
 8016091:	5c287465 	cfstrspl	mvf7, [r8], #-404	@ 0xfffffe6c
 8016095:	732b2727 			@ <UNDEFINED> instruction: 0x732b2727
 8016099:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
 801609d:	2229275c 	eorcs	r2, r9, #92, 14	@ 0x1700000
 80160a1:	6665443e 			@ <UNDEFINED> instruction: 0x6665443e
 80160a5:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 80160a9:	622f3c73 	eorvs	r3, pc, #29440	@ 0x7300
 80160ad:	6f747475 	svcvs	0x00747475
 80160b1:	2f3c3e6e 	svccs	0x003c3e6e
 80160b5:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 80160b9:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 80160bd:	640a3b27 	strvs	r3, [sl], #-2855	@ 0xfffff4d9
 80160c1:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 80160c5:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80160c9:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 80160cd:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 80160d1:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80160d5:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 80160d9:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80160dd:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80160e1:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 80160e5:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 80160e9:	203d204c 	eorscs	r2, sp, ip, asr #32
 80160ed:	0a7d0a68 	beq	9f58a95 <__init_array_end+0x1f41419>
 80160f1:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 80160f5:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80160f9:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
 80160fd:	65732865 	ldrbvs	r2, [r3, #-2149]!	@ 0xfffff79b
 8016101:	7b20296c 	blvc	88206b9 <__init_array_end+0x80903d>
 8016105:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 8016109:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801610d:	0a7d7b20 	beq	9f74d95 <__init_array_end+0x1f5d719>
 8016111:	20726176 	rsbscs	r6, r2, r6, ror r1
 8016115:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8016119:	3d207374 	stccc	3, cr7, [r0, #-464]!	@ 0xfffffe30
 801611d:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 8016121:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8016125:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8016129:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801612d:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8016131:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8016135:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 8016139:	22747854 	rsbscs	r7, r4, #84, 16	@ 0x540000
 801613d:	65672e29 	strbvs	r2, [r7, #-3625]!	@ 0xfffff1d7
 8016141:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8016145:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8016149:	54794273 	ldrbtpl	r4, [r9], #-627	@ 0xfffffd8d
 801614d:	614e6761 	cmpvs	lr, r1, ror #14
 8016151:	2228656d 	eorcs	r6, r8, #457179136	@ 0x1b400000
 8016155:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8016159:	0a292274 	beq	8a5eb31 <__init_array_end+0xa474b5>
 801615d:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8016161:	72617628 	rsbvc	r7, r1, #40, 12	@ 0x2800000
 8016165:	3d206920 			@ <UNDEFINED> instruction: 0x3d206920
 8016169:	203b3020 	eorscs	r3, fp, r0, lsr #32
 801616d:	203c2069 	eorscs	r2, ip, r9, rrx
 8016171:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8016175:	6c2e7374 	stcvs	3, cr7, [lr], #-464	@ 0xfffffe30
 8016179:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 801617d:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
 8016181:	20292b2b 	eorcs	r2, r9, fp, lsr #22
 8016185:	61760a7b 	cmnvs	r6, fp, ror sl
 8016189:	206b2072 	rsbcs	r2, fp, r2, ror r0
 801618d:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
 8016191:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 8016195:	2e5d695b 			@ <UNDEFINED> instruction: 0x2e5d695b
 8016199:	760a6469 	strvc	r6, [sl], -r9, ror #8
 801619d:	76207261 	strtvc	r7, [r0], -r1, ror #4
 80161a1:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
 80161a5:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 80161a9:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	@ Deprecated
 80161ad:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 80161b1:	640a6575 	strvs	r6, [sl], #-1397	@ 0xfffffa8b
 80161b5:	205d6b5b 	subscs	r6, sp, fp, asr fp
 80161b9:	0a76203d 	beq	9d9e2b5 <__init_array_end+0x1d86c39>
 80161bd:	61760a7d 	cmnvs	r6, sp, ror sl
 80161c1:	756f2072 	strbvc	r2, [pc, #-114]!	@ 8016157 <index_js+0x332>
 80161c5:	203d2074 	eorscs	r2, sp, r4, ror r0
 80161c9:	6f0a7d7b 	svcvs	0x000a7d7b
 80161cd:	735b7475 	cmpvc	fp, #1962934272	@ 0x75000000
 80161d1:	205d6c65 	subscs	r6, sp, r5, ror #24
 80161d5:	0a64203d 	beq	991e2d1 <__init_array_end+0x1906c55>
 80161d9:	20726176 	rsbscs	r6, r2, r6, ror r1
 80161dd:	6c796170 	ldfvse	f6, [r9], #-448	@ 0xfffffe40
 80161e1:	2064616f 	rsbcs	r6, r4, pc, ror #2
 80161e5:	534a203d 	movtpl	r2, #41021	@ 0xa03d
 80161e9:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 80161ed:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 80161f1:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 80161f5:	74756f28 	ldrbtvc	r6, [r5], #-3880	@ 0xfffff0d8
 80161f9:	65660a29 	strbvs	r0, [r6, #-2601]!	@ 0xfffff5d7
 80161fd:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
 8016201:	736a2f27 	cmnvc	sl, #39, 30	@ 0x9c
 8016205:	2c276e6f 	stccs	14, cr6, [r7], #-444	@ 0xfffffe44
 8016209:	6d0a7b20 	vstrvs	d7, [sl, #-128]	@ 0xffffff80
 801620d:	6f687465 	svcvs	0x00687465
 8016211:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
 8016215:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 8016219:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 801621d:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 8016221:	203a7372 	eorscs	r7, sl, r2, ror r3
 8016225:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 8016229:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801622d:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 8016231:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 8016235:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 8016239:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801623d:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8016241:	6a2f6e6f 	bvs	8bf1c05 <__init_array_end+0xbda589>
 8016245:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 8016249:	0a2c7d0a 	beq	8b35679 <__init_array_end+0xb1dffd>
 801624d:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016251:	6170203a 	cmnvs	r0, sl, lsr r0
 8016255:	616f6c79 	smcvs	63177	@ 0xf6c9
 8016259:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
 801625d:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
 8016261:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 8016265:	6f707365 	svcvs	0x00707365
 8016269:	2065736e 	rsbcs	r7, r5, lr, ror #6
 801626d:	7b203e3d 	blvc	8825b69 <__init_array_end+0x80e4ed>
 8016271:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 8016275:	70736572 	rsbsvc	r6, r3, r2, ror r5
 8016279:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 801627d:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 8016281:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
 8016285:	745f7465 	ldrbvc	r7, [pc], #-1125	@ 801628d <index_js+0x468>
 8016289:	73287478 			@ <UNDEFINED> instruction: 0x73287478
 801628d:	3b296c65 	blcc	8a71429 <__init_array_end+0xa59dad>
 8016291:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
 8016295:	0a7d0a3b 	beq	9f58b89 <__init_array_end+0x1f4150d>
	...

0801629a <styles_css>:
 801629a:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801629e:	620a7b20 	andvs	r7, sl, #32, 22	@ 0x8000
 80162a2:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
 80162a6:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
 80162aa:	6f632d64 	svcvs	0x00632d64
 80162ae:	3a726f6c 	bcc	9cb2066 <__init_array_end+0x1c9a9ea>
 80162b2:	62677220 	rsbvs	r7, r7, #32, 4
 80162b6:	2c303228 	lfmcs	f3, 4, [r0], #-160	@ 0xffffff60
 80162ba:	322c3032 	eorcc	r3, ip, #50	@ 0x32
 80162be:	0a3b2930 	beq	8ee0786 <__init_array_end+0xec910a>
 80162c2:	6f6c6f63 	svcvs	0x006c6f63
 80162c6:	72203a72 	eorvc	r3, r0, #466944	@ 0x72000
 80162ca:	32286267 	eorcc	r6, r8, #1879048198	@ 0x70000006
 80162ce:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80162d2:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	@ 0xffffff38
 80162d6:	35353220 	ldrcc	r3, [r5, #-544]!	@ 0xfffffde0
 80162da:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 80162de:	206c750a 	rsbcs	r7, ip, sl, lsl #10
 80162e2:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 80162e6:	616c7073 	smcvs	50947	@ 0xc703
 80162ea:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 80162ee:	3b78656c 	blcc	9e2f8a6 <__init_array_end+0x1e1822a>
 80162f2:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
 80162f6:	0a7b2069 	beq	9ede4a2 <__init_array_end+0x1ec6e26>
 80162fa:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 80162fe:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
 8016302:	203a656c 	eorscs	r6, sl, ip, ror #10
 8016306:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
 801630a:	616d0a3b 	cmnvs	sp, fp, lsr sl
 801630e:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8016312:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8016316:	70352078 	eorsvc	r2, r5, r8, ror r0
 801631a:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801631e:	6165680a 	cmnvs	r5, sl, lsl #16
 8016322:	20726564 	rsbscs	r6, r2, r4, ror #10
 8016326:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801632a:	616c7073 	smcvs	50947	@ 0xc703
 801632e:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 8016332:	3b78656c 	blcc	9e2f8ea <__init_array_end+0x1e1826e>
 8016336:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801633a:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	@ 0xfffffe70
 801633e:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8016342:	203a7375 	eorscs	r7, sl, r5, ror r3
 8016346:	3b787034 	blcc	9e3241e <__init_array_end+0x1e1ada2>
 801634a:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801634e:	3a726564 	bcc	9caf8e6 <__init_array_end+0x1c9826a>
 8016352:	6c6f7320 	stclvs	3, cr7, [pc], #-128	@ 80162d8 <styles_css+0x3e>
 8016356:	67206469 	strvs	r6, [r0, -r9, ror #8]!
 801635a:	20796572 	rsbscs	r6, r9, r2, ror r5
 801635e:	3b787031 	blcc	9e3242a <__init_array_end+0x1e1adae>
 8016362:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 8016366:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 801636a:	0a7b2072 	beq	9ede53a <__init_array_end+0x1ec6ebe>
 801636e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016372:	3a79616c 	bcc	9e6e92a <__init_array_end+0x1e572ae>
 8016376:	656c6620 	strbvs	r6, [ip, #-1568]!	@ 0xfffff9e0
 801637a:	6a0a3b78 	bvs	82a5162 <__init_array_end+0x28dae6>
 801637e:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8016382:	632d7966 			@ <UNDEFINED> instruction: 0x632d7966
 8016386:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801638a:	203a746e 	eorscs	r7, sl, lr, ror #8
 801638e:	746e6563 	strbtvc	r6, [lr], #-1379	@ 0xfffffa9d
 8016392:	0a3b7265 	beq	8ef2d2e <__init_array_end+0xedb6b2>
 8016396:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801639a:	722d7265 	eorvc	r7, sp, #1342177286	@ 0x50000006
 801639e:	75696461 	strbvc	r6, [r9, #-1121]!	@ 0xfffffb9f
 80163a2:	34203a73 	strtcc	r3, [r0], #-2675	@ 0xfffff58d
 80163a6:	0a3b7870 	beq	8ef456e <__init_array_end+0xedcef2>
 80163aa:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 80163ae:	203a7265 	eorscs	r7, sl, r5, ror #4
 80163b2:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80163b6:	72672064 	rsbvc	r2, r7, #100	@ 0x64
 80163ba:	31207965 			@ <UNDEFINED> instruction: 0x31207965
 80163be:	0a3b7870 	beq	8ef4586 <__init_array_end+0xedcf0a>
 80163c2:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 80163c6:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80163ca:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 80163ce:	6f737275 	svcvs	0x00737275
 80163d2:	70203a72 	eorvc	r3, r0, r2, ror sl
 80163d6:	746e696f 	strbtvc	r6, [lr], #-2415	@ 0xfffff691
 80163da:	0a3b7265 	beq	8ef2d76 <__init_array_end+0xedb6fa>
 80163de:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 80163e2:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80163e6:	7463613a 	strbtvc	r6, [r3], #-314	@ 0xfffffec6
 80163ea:	20657669 	rsbcs	r7, r5, r9, ror #12
 80163ee:	61620a7b 	smcvs	8363	@ 0x20ab
 80163f2:	72676b63 	rsbvc	r6, r7, #101376	@ 0x18c00
 80163f6:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 80163fa:	6c6f632d 	stclvs	3, cr6, [pc], #-180	@ 801634c <styles_css+0xb2>
 80163fe:	203a726f 	eorscs	r7, sl, pc, ror #4
 8016402:	30303023 	eorscc	r3, r0, r3, lsr #32
 8016406:	6f630a3b 	svcvs	0x00630a3b
 801640a:	3a726f6c 	bcc	9cb21c2 <__init_array_end+0x1c9ab46>
 801640e:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
 8016412:	7d0a3b66 	vstrvc	d3, [sl, #-408]	@ 0xfffffe68
 8016416:	74622e0a 	strbtvc	r2, [r2], #-3594	@ 0xfffff1f6
 801641a:	0a7b206e 	beq	9ede5da <__init_array_end+0x1ec6f5e>
 801641e:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
 8016422:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	@ 0xfffffe5c
 8016426:	3a746665 	bcc	9d2fdc2 <__init_array_end+0x1d18746>
 801642a:	70303520 	eorsvc	r3, r0, r0, lsr #10
 801642e:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 8016432:	 	cmnvc	r1, #10

08016434 <static_js>:
 8016434:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016438:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801643c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016440:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8016444:	534a7465 	movtpl	r7, #42085	@ 0xa465
 8016448:	6a284e4f 	bvs	8a29d8c <__init_array_end+0xa12710>
 801644c:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016450:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 8016454:	7b207972 	blvc	8834a24 <__init_array_end+0x81d3a8>
 8016458:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801645c:	72207473 	eorvc	r7, r0, #1929379840	@ 0x73000000
 8016460:	61203d20 			@ <UNDEFINED> instruction: 0x61203d20
 8016464:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 8016468:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801646c:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8016470:	6f736a2f 	svcvs	0x00736a2f
 8016474:	2b272f6e 	blcs	89e2234 <__init_array_end+0x9cabb8>
 8016478:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801647c:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
 8016480:	72212820 	eorvc	r2, r1, #32, 16	@ 0x200000
 8016484:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 8016488:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801648c:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
 8016490:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
 8016494:	72724520 	rsbsvc	r4, r2, #32, 10	@ 0x8000000
 8016498:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
 801649c:	6f727245 	svcvs	0x00727245
 80164a0:	0a292772 	beq	8a60270 <__init_array_end+0xa48bf4>
 80164a4:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	@ 0xfffff583
 80164a8:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 80164ac:	6a2e7220 	bvs	8bb2d34 <__init_array_end+0xb9b6b8>
 80164b0:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80164b4:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
 80164b8:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 80164bc:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 80164c0:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 80164c4:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	@ 0xffffff5c
 80164c8:	610a7d0a 	tstvs	sl, sl, lsl #26
 80164cc:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 80164d0:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 80164d4:	6f697463 	svcvs	0x00697463
 80164d8:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
 80164dc:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 80164e0:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 80164e4:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 80164e8:	3d206c20 	stccc	12, cr6, [r0, #-128]!	@ 0xffffff80
 80164ec:	61776120 	cmnvs	r7, r0, lsr #2
 80164f0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80164f4:	534a7465 	movtpl	r7, #42085	@ 0xa465
 80164f8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80164fc:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 8016500:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 8016504:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8016508:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801650c:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8016510:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8016514:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8016518:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801651c:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8016520:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8016524:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 8016528:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801652c:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 8016530:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	@ 0xffffff80
 8016534:	2b223e69 	blcs	88a5ee0 <__init_array_end+0x88e864>
 8016538:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 801653c:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8016540:	2b656d61 	blcs	9971acc <__init_array_end+0x195a450>
 8016544:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 80164c4 <static_js+0x90>
 8016548:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 801654c:	2b223e69 	blcs	88a5ef8 <__init_array_end+0x88e87c>
 8016550:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 8016554:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8016558:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
 801655c:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 8016560:	2f3c222b 	svccs	0x003c222b
 8016564:	3c3e696c 			@ <UNDEFINED> instruction: 0x3c3e696c
 8016568:	223e696c 	eorscs	r6, lr, #108, 18	@ 0x1b0000
 801656c:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	@ 0xffffff54
 8016570:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8016574:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 8016578:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 801657c:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8016580:	222b6570 	eorcs	r6, fp, #112, 10	@ 0x1c000000
 8016584:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016588:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	@ 0xffffff08
 801658c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8016590:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8016594:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8016598:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801659c:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 80165a0:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80165a4:	0a7b2029 	beq	9ede650 <__init_array_end+0x1ec6fd4>
 80165a8:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 80165ac:	20762074 	rsbscs	r2, r6, r4, ror r0
 80165b0:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 80165b4:	20746961 	rsbscs	r6, r4, r1, ror #18
 80165b8:	4a746567 	bmi	9d2fb5c <__init_array_end+0x1d184e0>
 80165bc:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 80165c0:	72657627 	rsbvc	r7, r5, #40894464	@ 0x2700000
 80165c4:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 80165c8:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 80165cc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 80165d0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80165d4:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 80165d8:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 80165dc:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80165e0:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 80165e4:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 80165e8:	6f697372 	svcvs	0x00697372
 80165ec:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
 80165f0:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 80165f4:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 80165f8:	203d204c 	eorscs	r2, sp, ip, asr #32
 80165fc:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8016600:	2b22563e 	blcs	88abf00 <__init_array_end+0x894884>
 8016604:	65762e76 	ldrbvs	r2, [r6, #-3702]!	@ 0xfffff18a
 8016608:	6f697372 	svcvs	0x00697372
 801660c:	3c222b6e 			@ <UNDEFINED> instruction: 0x3c222b6e
 8016610:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8016614:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8016618:	2e762b22 	vaddcs.f64	d18, d6, d18
 801661c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 8016620:	61642e64 	cmnvs	r4, r4, ror #28
 8016624:	222b6574 	eorcs	r6, fp, #116, 10	@ 0x1d000000
 8016628:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801662c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8016630:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 8016634:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
 8016638:	742e646c 	strtvc	r6, [lr], #-1132	@ 0xfffffb94
 801663c:	2b656d69 	blcs	9971be8 <__init_array_end+0x195a56c>
 8016640:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 80165c0 <static_js+0x18c>
 8016644:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 8016648:	2b223e69 	blcs	88a5ff4 <__init_array_end+0x88e978>
 801664c:	6f622e76 	svcvs	0x00622e76
 8016650:	2b647261 	blcs	9932fdc <__init_array_end+0x191b960>
 8016654:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 80165d4 <static_js+0x1a0>
 8016658:	0a223e69 	beq	88a6004 <__init_array_end+0x88e988>
 801665c:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 8016660:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016664:	70206e6f 	eorvc	r6, r0, pc, ror #28
 8016668:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801666c:	7b202973 	blvc	8820c40 <__init_array_end+0x8095c4>
 8016670:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8016674:	206e7275 	rsbcs	r7, lr, r5, ror r2
 8016678:	63746566 	cmnvs	r4, #427819008	@ 0x19800000
 801667c:	2f272868 	svccs	0x00272868
 8016680:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016684:	7463612f 	strbtvc	r6, [r3], #-303	@ 0xfffffed1
 8016688:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 801668c:	0a7b202c 	beq	9ede744 <__init_array_end+0x1ec70c8>
 8016690:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 8016694:	203a646f 	eorscs	r6, sl, pc, ror #8
 8016698:	534f5027 	movtpl	r5, #61479	@ 0xf027
 801669c:	0a2c2754 	beq	8b203f4 <__init_array_end+0xb08d78>
 80166a0:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 80166a4:	3a737265 	bcc	9cf3040 <__init_array_end+0x1cdb9c4>
 80166a8:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
 80166ac:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80166b0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80166b4:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 80166b8:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
 80166bc:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 80166c0:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80166c4:	2f6e6f69 	svccs	0x006e6f69
 80166c8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80166cc:	2c7d0a27 			@ <UNDEFINED> instruction: 0x2c7d0a27
 80166d0:	646f620a 	strbtvs	r6, [pc], #-522	@ 80166d8 <static_js+0x2a4>
 80166d4:	4a203a79 	bmi	88250c0 <__init_array_end+0x80da44>
 80166d8:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
 80166dc:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 80166e0:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
 80166e4:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
 80166e8:	0a297d0a 	beq	8a75b18 <__init_array_end+0xa5e49c>
 80166ec:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 80166f0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80166f4:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 80166f8:	74656c65 	strbtvc	r6, [r5], #-3173	@ 0xfffff39b
 80166fc:	20297328 	eorcs	r7, r9, r8, lsr #6
 8016700:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 8016704:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8016708:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801670c:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8016710:	6f736a2f 	svcvs	0x00736a2f
 8016714:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 8016718:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801671c:	7b202c27 	blvc	88217c0 <__init_array_end+0x80a144>
 8016720:	74656d0a 	strbtvc	r6, [r5], #-3338	@ 0xfffff2f6
 8016724:	3a646f68 	bcc	99324cc <__init_array_end+0x191ae50>
 8016728:	45442720 	strbmi	r2, [r4, #-1824]	@ 0xfffff8e0
 801672c:	4554454c 	ldrbmi	r4, [r4, #-1356]	@ 0xfffffab4
 8016730:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 8016734:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 8016738:	203a7372 	eorscs	r7, sl, r2, ror r3
 801673c:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 8016740:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8016744:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 8016748:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 801674c:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 8016750:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8016754:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8016758:	6a2f6e6f 	bvs	8bf211c <__init_array_end+0xbdaaa0>
 801675c:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 8016760:	0a2c7d0a 	beq	8b35b90 <__init_array_end+0xb1e514>
 8016764:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016768:	534a203a 	movtpl	r2, #41018	@ 0xa03a
 801676c:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 8016770:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 8016774:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 8016778:	0a297328 	beq	8a73420 <__init_array_end+0xa5bda4>
 801677c:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	@ 0xffffff06	@ <UNPREDICTABLE>
 8016780:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
 8016784:	6f697463 	svcvs	0x00697463
 8016788:	6572206e 	ldrbvs	r2, [r2, #-110]!	@ 0xffffff92
 801678c:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8016794 <static_js+0x360>
 8016790:	7b202928 	blvc	8820c38 <__init_array_end+0x8095bc>
 8016794:	736f700a 	cmnvc	pc, #10
 8016798:	207b2874 	rsbscs	r2, fp, r4, ror r8
 801679c:	6f626572 	svcvs	0x00626572
 80167a0:	203a746f 	eorscs	r7, sl, pc, ror #8
 80167a4:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 80167a8:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 80167ac:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 80167b0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80167b4:	61636f6c 	cmnvs	r3, ip, ror #30
 80167b8:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 80167bc:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
 80167c0:	62207261 	eorvs	r7, r0, #268435462	@ 0x10000006
 80167c4:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 80167c8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 80167cc:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80167d0:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 80167d4:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 80167d8:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80167dc:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 80167e0:	61636f6c 	cmnvs	r3, ip, ror #30
 80167e4:	75426574 	strbvc	r6, [r2, #-1396]	@ 0xfffffa8c
 80167e8:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80167ec:	0a3b2927 	beq	8ee0c90 <__init_array_end+0xec9614>
 80167f0:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 80167f4:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 80167f8:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 80167fc:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8016800:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 8016804:	736e6961 	cmnvc	lr, #1589248	@ 0x184000
 8016808:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
 801680c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8016810:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8016814:	0a7b2029 	beq	9ede8c0 <__init_array_end+0x1ec7244>
 8016818:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 801681c:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 8016820:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8016824:	6f6d6572 	svcvs	0x006d6572
 8016828:	27286576 			@ <UNDEFINED> instruction: 0x27286576
 801682c:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8016830:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8016834:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8016838:	616c632e 	cmnvs	ip, lr, lsr #6
 801683c:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 8016840:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 8016844:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 8016848:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801684c:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8016850:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
 8016854:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 8016858:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801685c:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
 8016860:	61636f4c 	cmnvs	r3, ip, asr #30
 8016864:	4f206574 	svcmi	0x00206574
 8016868:	700a276e 	andvc	r2, sl, lr, ror #14
 801686c:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8016870:	6469207b 	strbtvs	r2, [r9], #-123	@ 0xffffff85
 8016874:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8016878:	203a7966 	eorscs	r7, sl, r6, ror #18
 801687c:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 8016880:	65207d0a 	strvs	r7, [r0, #-3338]!	@ 0xfffff2f6
 8016884:	2065736c 	rsbcs	r7, r5, ip, ror #6
 8016888:	2e620a7b 			@ <UNDEFINED> instruction: 0x2e620a7b
 801688c:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 8016890:	73694c73 	cmnvc	r9, #29440	@ 0x7300
 8016894:	65722e74 	ldrbvs	r2, [r2, #-3700]!	@ 0xfffff18c
 8016898:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
 801689c:	63612728 	cmnvs	r1, #40, 14	@ 0xa00000
 80168a0:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 80168a4:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 80168a8:	616c632e 	cmnvs	ip, lr, lsr #6
 80168ac:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 80168b0:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 80168b4:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 80168b8:	63616e69 	cmnvs	r1, #1680	@ 0x690
 80168bc:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 80168c0:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 80168c4:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 80168c8:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 80168cc:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 80168d0:	6f4c2720 	svcvs	0x004c2720
 80168d4:	65746163 	ldrbvs	r6, [r4, #-355]!	@ 0xfffffe9d
 80168d8:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 80168dc:	6f700a27 	svcvs	0x00700a27
 80168e0:	7b287473 	blvc	8a33ab4 <__init_array_end+0xa1c438>
 80168e4:	65646920 	strbvs	r6, [r4, #-2336]!	@ 0xfffff6e0
 80168e8:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
 80168ec:	30203a79 	eorcc	r3, r0, r9, ror sl
 80168f0:	0a297d20 	beq	8a75d78 <__init_array_end+0xa5e6fc>
 80168f4:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

080168f8 <rtc_html>:
 80168f8:	4f44213c 	svcmi	0x0044213c
 80168fc:	50595443 	subspl	r5, r9, r3, asr #8
 8016900:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8016904:	0a3e6c6d 	beq	8fb1ac0 <__init_array_end+0xf9a444>
 8016908:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801690c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8016910:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8016914:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8016918:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801691c:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 8016920:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 8016924:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 8016928:	20227465 	eorcs	r7, r2, r5, ror #8
 801692c:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 8016930:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 8016934:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 8016938:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801693c:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 8016940:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 8016944:	523e656c 	eorspl	r6, lr, #108, 10	@ 0x1b000000
 8016948:	2d6c6165 	stfcse	f6, [ip, #-404]!	@ 0xfffffe6c
 801694c:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8016950:	6f6c6320 	svcvs	0x006c6320
 8016954:	2f3c6b63 	svccs	0x003c6b63
 8016958:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801695c:	2f3c3e65 	svccs	0x003c3e65
 8016960:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8016964:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8016968:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801696c:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 8016970:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8016974:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 8016978:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801697c:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 8016980:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 8016984:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8015d4e <date_js+0x1f6>
 8016988:	2f3c3e6c 	svccs	0x003c3e6c
 801698c:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8016990:	0a3e7265 	beq	8fb332c <__init_array_end+0xf9bcb0>
 8016994:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 8016998:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801699c:	6f206e6f 	svcvs	0x00206e6f
 80169a0:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80169a4:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 80169a8:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 80169ac:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 80169b0:	523e2229 	eorspl	r2, lr, #-1879048190	@ 0x90000002
 80169b4:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 80169b8:	2f3c6873 	svccs	0x003c6873
 80169bc:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 80169c0:	3c3e6e6f 	ldccc	14, cr6, [lr], #-444	@ 0xfffffe44
 80169c4:	0a3e702f 	beq	8fb2a88 <__init_array_end+0xf9b40c>
 80169c8:	6920703c 	stmdbvs	r0!, {r2, r3, r4, r5, ip, sp, lr}
 80169cc:	6e223d64 	cdpvs	13, 2, cr3, cr2, cr4, {3}
 80169d0:	5465646f 	strbtpl	r6, [r5], #-1135	@ 0xfffffb91
 80169d4:	22656d69 	rsbcs	r6, r5, #6720	@ 0x1a40
 80169d8:	646f4e3e 	strbtvs	r4, [pc], #-3646	@ 80169e0 <rtc_html+0xe8>
 80169dc:	69742065 	ldmdbvs	r4!, {r0, r2, r5, r6, sp}^
 80169e0:	7720656d 	strvc	r6, [r0, -sp, ror #10]!
 80169e4:	206c6c69 	rsbcs	r6, ip, r9, ror #24
 80169e8:	64206562 	strtvs	r6, [r0], #-1378	@ 0xfffffa9e
 80169ec:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80169f0:	64657961 	strbtvs	r7, [r5], #-2401	@ 0xfffff69f
 80169f4:	72656820 	rsbvc	r6, r5, #32, 16	@ 0x200000
 80169f8:	702f3c65 	eorvc	r3, pc, r5, ror #24
 80169fc:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 8016a00:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8016a04:	63747222 	cmnvs	r4, #536870914	@ 0x20000002
 8016a08:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8016a0c:	54523e22 	ldrbpl	r3, [r2], #-3618	@ 0xfffff1de
 8016a10:	69742043 	ldmdbvs	r4!, {r0, r1, r6, sp}^
 8016a14:	7720656d 	strvc	r6, [r0, -sp, ror #10]!
 8016a18:	206c6c69 	rsbcs	r6, ip, r9, ror #24
 8016a1c:	64206562 	strtvs	r6, [r0], #-1378	@ 0xfffffa9e
 8016a20:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 8016a24:	64657961 	strbtvs	r7, [r5], #-2401	@ 0xfffff69f
 8016a28:	72656820 	rsbvc	r6, r5, #32, 16	@ 0x200000
 8016a2c:	702f3c65 	eorvc	r3, pc, r5, ror #24
 8016a30:	643c0a3e 	ldrtvs	r0, [ip], #-2622	@ 0xfffff5c2
 8016a34:	0a3e7669 	beq	8fb43e0 <__init_array_end+0xf9cd64>
 8016a38:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 8016a3c:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 8016a40:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 8016a44:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 8016a48:	54636822 	strbtpl	r6, [r3], #-2082	@ 0xfffff7de
 8016a4c:	7379536f 	cmnvc	r9, #-1140850687	@ 0xbc000001
 8016a50:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 8016a54:	20746553 	rsbscs	r6, r4, r3, asr r5
 8016a58:	20656874 	rsbcs	r6, r5, r4, ror r8
 8016a5c:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 8016a60:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	@ 0xffffff80
 8016a64:	72662065 	rsbvc	r2, r6, #101	@ 0x65
 8016a68:	74206d6f 	strtvc	r6, [r0], #-3439	@ 0xfffff291
 8016a6c:	52206568 	eorpl	r6, r0, #104, 10	@ 0x1a000000
 8016a70:	2f3c4354 	svccs	0x003c4354
 8016a74:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8016a78:	0a3e6e6f 	beq	8fb243c <__init_array_end+0xf9adc0>
 8016a7c:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 8016a80:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 8016a84:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 8016a88:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 8016a8c:	73797322 	cmnvc	r9, #-2013265920	@ 0x88000000
 8016a90:	63486f54 	movtvs	r6, #36692	@ 0x8f54
 8016a94:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 8016a98:	20746553 	rsbscs	r6, r4, r3, asr r5
 8016a9c:	20656874 	rsbcs	r6, r5, r4, ror r8
 8016aa0:	20435452 	subcs	r5, r3, r2, asr r4
 8016aa4:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	@ 8016914 <rtc_html+0x1c>
 8016aa8:	65687420 	strbvs	r7, [r8, #-1056]!	@ 0xfffffbe0
 8016aac:	646f4e20 	strbtvs	r4, [pc], #-3616	@ 8016ab4 <rtc_html+0x1bc>
 8016ab0:	69742065 	ldmdbvs	r4!, {r0, r2, r5, r6, sp}^
 8016ab4:	2f3c656d 	svccs	0x003c656d
 8016ab8:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8016abc:	0a3e6e6f 	beq	8fb2480 <__init_array_end+0xf9ae04>
 8016ac0:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016ac4:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8016ac8:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 8016acc:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 8016ad0:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8016ad4:	726f6622 	rsbvc	r6, pc, #35651584	@ 0x2200000
 8016ad8:	0a3e226d 	beq	8f9f494 <__init_array_end+0xf87e18>
 8016adc:	62616c3c 	rsbvs	r6, r1, #60, 24	@ 0x3c00
 8016ae0:	66206c65 	strtvs	r6, [r0], -r5, ror #24
 8016ae4:	223d726f 	eorscs	r7, sp, #-268435450	@ 0xf0000006
 8016ae8:	72616c61 	rsbvc	r6, r1, #24832	@ 0x6100
 8016aec:	706e496d 	rsbvc	r4, lr, sp, ror #18
 8016af0:	3e227475 	mcrcc	4, 1, r7, cr2, cr5, {3}
 8016af4:	20435452 	subcs	r5, r3, r2, asr r4
 8016af8:	72616c41 	rsbvc	r6, r1, #16640	@ 0x4100
 8016afc:	2f3c3a6d 	svccs	0x003c3a6d
 8016b00:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 8016b04:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8016b08:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8016b0c:	79742074 	ldmdbvc	r4!, {r2, r4, r5, r6, sp}^
 8016b10:	223d6570 	eorscs	r6, sp, #112, 10	@ 0x1c000000
 8016b14:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8016b18:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8016b1c:	636f6c2d 	cmnvs	pc, #11520	@ 0x2d00
 8016b20:	20226c61 	eorcs	r6, r2, r1, ror #24
 8016b24:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 8016b28:	72616c61 	rsbvc	r6, r1, #24832	@ 0x6100
 8016b2c:	706e496d 	rsbvc	r4, lr, sp, ror #18
 8016b30:	20227475 	eorcs	r7, r2, r5, ror r4
 8016b34:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
 8016b38:	6c61223d 	sfmvs	f2, 2, [r1], #-244	@ 0xffffff0c
 8016b3c:	496d7261 	stmdbmi	sp!, {r0, r5, r6, r9, ip, sp, lr}^
 8016b40:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 8016b44:	65722022 	ldrbvs	r2, [r2, #-34]!	@ 0xffffffde
 8016b48:	72697571 	rsbvc	r7, r9, #473956352	@ 0x1c400000
 8016b4c:	0a3e6465 	beq	8fafce8 <__init_array_end+0xf9866c>
 8016b50:	62616c3c 	rsbvs	r6, r1, #60, 24	@ 0x3c00
 8016b54:	66206c65 	strtvs	r6, [r0], -r5, ror #24
 8016b58:	223d726f 	eorscs	r7, sp, #-268435450	@ 0xf0000006
 8016b5c:	626b6863 	rsbvs	r6, fp, #6488064	@ 0x630000
 8016b60:	3e22786f 	cdpcc	8, 2, cr7, cr2, cr15, {3}
 8016b64:	62616e45 	rsbvs	r6, r1, #1104	@ 0x450
 8016b68:	2f3c656c 	svccs	0x003c656c
 8016b6c:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 8016b70:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8016b74:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 8016b78:	79742074 	ldmdbvc	r4!, {r2, r4, r5, r6, sp}^
 8016b7c:	223d6570 	eorscs	r6, sp, #112, 10	@ 0x1c000000
 8016b80:	63656863 	cmnvs	r5, #6488064	@ 0x630000
 8016b84:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	@ <UNPREDICTABLE>
 8016b88:	64692022 	strbtvs	r2, [r9], #-34	@ 0xffffffde
 8016b8c:	6863223d 	stmdavs	r3!, {r0, r2, r3, r4, r5, r9, sp}^
 8016b90:	786f626b 	stmdavc	pc!, {r0, r1, r3, r5, r6, r9, sp, lr}^	@ <UNPREDICTABLE>
 8016b94:	616e2022 	cmnvs	lr, r2, lsr #32
 8016b98:	223d656d 	eorscs	r6, sp, #457179136	@ 0x1b400000
 8016b9c:	62616e45 	rsbvs	r6, r1, #1104	@ 0x450
 8016ba0:	3e22656c 	cfsh64cc	mvdx6, mvdx2, #60
 8016ba4:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 8016ba8:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8016bac:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8016bb0:	62223d65 	eorvs	r3, r2, #6464	@ 0x1940
 8016bb4:	6f747475 	svcvs	0x00747475
 8016bb8:	6f20226e 	svcvs	0x0020226e
 8016bbc:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016bc0:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 8016bc4:	72616c61 	rsbvc	r6, r1, #24832	@ 0x6100
 8016bc8:	2229286d 	eorcs	r2, r9, #7143424	@ 0x6d0000
 8016bcc:	7465533e 	strbtvc	r5, [r5], #-830	@ 0xfffffcc2
 8016bd0:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 8016bd4:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8016bd8:	2f3c0a3e 	svccs	0x003c0a3e
 8016bdc:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 8016be0:	663c0a3e 			@ <UNDEFINED> instruction: 0x663c0a3e
 8016be4:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 8016be8:	753c3e72 	ldrvc	r3, [ip, #-3698]!	@ 0xfffff18e
 8016bec:	6469206c 	strbtvs	r2, [r9], #-108	@ 0xffffff94
 8016bf0:	6469223d 	strbtvs	r2, [r9], #-573	@ 0xfffffdc3
 8016bf4:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8016bf8:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 8016bfc:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8015fc6 <index_js+0x1a1>
 8016c00:	2f3c3e6c 	svccs	0x003c3e6c
 8016c04:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 8016c0c <rtc_html+0x314>
 8016c08:	0a3e7265 	beq	8fb35a4 <__init_array_end+0xf9bf28>
 8016c0c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8016c10:	20747069 	rsbscs	r7, r4, r9, rrx
 8016c14:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8016c18:	61747322 	cmnvs	r4, r2, lsr #6
 8016c1c:	2e636974 			@ <UNDEFINED> instruction: 0x2e636974
 8016c20:	2022736a 	eorcs	r7, r2, sl, ror #6
 8016c24:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 8016c28:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 8016c2c:	6a2f7478 	bvs	8bf3e14 <__init_array_end+0xbdc798>
 8016c30:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 8016c34:	70697263 	rsbvc	r7, r9, r3, ror #4
 8016c38:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 8016c3c:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8016c40:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8016c44:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 8016c48:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8016c4c:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8016c50:	6164223d 	cmnvs	r4, sp, lsr r2
 8016c54:	6a2e6574 	bvs	8bb022c <__init_array_end+0xb98bb0>
 8016c58:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8016c5c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8016c60:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8016c64:	616a2f74 	smcvs	41716	@ 0xa2f4
 8016c68:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8016c6c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8016c70:	2f3c3e22 	svccs	0x003c3e22
 8016c74:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8016c78:	0a3e7470 	beq	8fb3e40 <__init_array_end+0xf9c7c4>
 8016c7c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8016c80:	20747069 	rsbscs	r7, r4, r9, rrx
 8016c84:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8016c88:	63747222 	cmnvs	r4, #536870914	@ 0x20000002
 8016c8c:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 8016c90:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8016c94:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8016c98:	2f747865 	svccs	0x00747865
 8016c9c:	6176616a 	cmnvs	r6, sl, ror #2
 8016ca0:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8016ca4:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 8016ca8:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8016cac:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8016cb0:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 8016cb4:	70697263 	rsbvc	r7, r9, r3, ror #4
 8016cb8:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 8016cbc:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8016cc0:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 8016cc4:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8016cc8:	723b2928 	eorsvc	r2, fp, #40, 18	@ 0xa0000
 8016ccc:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8016cd0:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8016cd4:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8016cd8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8016cdc:	2f3c0a3e 	svccs	0x003c0a3e
 8016ce0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016ce4:	2f3c0a3e 	svccs	0x003c0a3e
 8016ce8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8016cec:	0000003e 	andeq	r0, r0, lr, lsr r0

08016cf0 <vtable for RDMDeviceResponder>:
	...
 8016cf8:	08009331 	stmdaeq	r0, {r0, r4, r5, r8, r9, ip, pc}
 8016cfc:	080093d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, ip, pc}
 8016d00:	0800ad21 	stmdaeq	r0, {r0, r5, r8, sl, fp, sp, pc}
 8016d04:	0800ad23 	stmdaeq	r0, {r0, r1, r5, r8, sl, fp, sp, pc}

08016d08 <RDMHandler::PID_DEFINITIONS>:
 8016d08:	00000060 	andeq	r0, r0, r0, rrx
 8016d0c:	0800b1ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, ip, sp, pc}
	...
 8016d1c:	01010000 	mrseq	r0, (UNDEF: 1)
 8016d20:	00000080 	andeq	r0, r0, r0, lsl #1
 8016d24:	0800b325 	stmdaeq	r0, {r0, r2, r5, r8, r9, ip, sp, pc}
	...
 8016d34:	01010100 	mrseq	r0, (UNDEF: 17)
 8016d38:	00000081 	andeq	r0, r0, r1, lsl #1
 8016d3c:	0800b391 	stmdaeq	r0, {r0, r4, r7, r8, r9, ip, sp, pc}
	...
 8016d4c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016d50:	00000082 	andeq	r0, r0, r2, lsl #1
 8016d54:	0800b341 	stmdaeq	r0, {r0, r6, r8, r9, ip, sp, pc}
 8016d58:	00000000 	andeq	r0, r0, r0
 8016d5c:	0800b4c1 	stmdaeq	r0, {r0, r6, r7, sl, ip, sp, pc}
 8016d60:	00000000 	andeq	r0, r0, r0
 8016d64:	01010100 	mrseq	r0, (UNDEF: 17)
 8016d68:	00000090 	muleq	r0, r0, r0
 8016d6c:	0800b265 	stmdaeq	r0, {r0, r2, r5, r6, r9, ip, sp, pc}
 8016d70:	00000000 	andeq	r0, r0, r0
 8016d74:	0800b48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, sp, pc}
 8016d78:	00000000 	andeq	r0, r0, r0
 8016d7c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016d80:	00001000 	andeq	r1, r0, r0
 8016d84:	0800b37d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, ip, sp, pc}
 8016d88:	00000000 	andeq	r0, r0, r0
 8016d8c:	0800b411 	stmdaeq	r0, {r0, r4, sl, ip, sp, pc}
 8016d90:	00000000 	andeq	r0, r0, r0
 8016d94:	01010000 	mrseq	r0, (UNDEF: 1)
 8016d98:	00001001 	andeq	r1, r0, r1
	...
 8016da4:	0800b3c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, ip, sp, pc}
 8016da8:	00000000 	andeq	r0, r0, r0
 8016dac:	01010100 	mrseq	r0, (UNDEF: 17)
 8016db0:	00000700 	andeq	r0, r0, r0, lsl #14
 8016db4:	0800b99f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, fp, ip, sp, pc}
	...
 8016dc4:	01000000 	mrseq	r0, (UNDEF: 0)
 8016dc8:	00000701 	andeq	r0, r0, r1, lsl #14
 8016dcc:	0800b9b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, ip, sp, pc}
	...
 8016ddc:	01000004 	tsteq	r0, r4
 8016de0:	00000702 	andeq	r0, r0, r2, lsl #14
 8016de4:	0800ba09 	stmdaeq	r0, {r0, r3, r9, fp, ip, sp, pc}
	...
 8016df4:	01000004 	tsteq	r0, r4
 8016df8:	00000703 	andeq	r0, r0, r3, lsl #14
 8016dfc:	0800ba3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, ip, sp, pc}
 8016e00:	00000000 	andeq	r0, r0, r0
 8016e04:	0800ba6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, ip, sp, pc}
 8016e08:	00000000 	andeq	r0, r0, r0
 8016e0c:	01000004 	tsteq	r0, r4
 8016e10:	00000704 	andeq	r0, r0, r4, lsl #14
 8016e14:	0800baed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, fp, ip, sp, pc}
 8016e18:	00000000 	andeq	r0, r0, r0
 8016e1c:	0800bb29 	stmdaeq	r0, {r0, r3, r5, r8, r9, fp, ip, sp, pc}
 8016e20:	00000000 	andeq	r0, r0, r0
 8016e24:	01000004 	tsteq	r0, r4
 8016e28:	00000705 	andeq	r0, r0, r5, lsl #14
 8016e2c:	0800bba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, sp, pc}
	...
 8016e3c:	01000004 	tsteq	r0, r4
 8016e40:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8016e4c:	0800bb71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, fp, ip, sp, pc}
 8016e50:	00000000 	andeq	r0, r0, r0
 8016e54:	01000004 	tsteq	r0, r4
 8016e58:	00000706 	andeq	r0, r0, r6, lsl #14
 8016e5c:	0800bbf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 8016e60:	00000000 	andeq	r0, r0, r0
 8016e64:	0800bc39 	stmdaeq	r0, {r0, r3, r4, r5, sl, fp, ip, sp, pc}
 8016e68:	00000000 	andeq	r0, r0, r0
 8016e6c:	01000004 	tsteq	r0, r4
 8016e70:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8016e7c:	0800bc89 	stmdaeq	r0, {r0, r3, r7, sl, fp, ip, sp, pc}
 8016e80:	00000000 	andeq	r0, r0, r0
 8016e84:	01000004 	tsteq	r0, r4
 8016e88:	0000070b 	andeq	r0, r0, fp, lsl #14
 8016e8c:	0800baa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, ip, sp, pc}
	...
 8016e9c:	01000001 	tsteq	r0, r1
 8016ea0:	0000070a 	andeq	r0, r0, sl, lsl #14
 8016ea4:	0800bcb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, ip, sp, pc}
 8016ea8:	00000000 	andeq	r0, r0, r0
 8016eac:	0800bced 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, fp, ip, sp, pc}
 8016eb0:	00000000 	andeq	r0, r0, r0
 8016eb4:	01000004 	tsteq	r0, r4
 8016eb8:	0000070c 	andeq	r0, r0, ip, lsl #14
 8016ebc:	0800bd2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip, sp, pc}
 8016ec0:	00000000 	andeq	r0, r0, r0
 8016ec4:	0800bd59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, sp, pc}
 8016ec8:	00000000 	andeq	r0, r0, r0
 8016ecc:	01000000 	mrseq	r0, (UNDEF: 0)
 8016ed0:	0000070d 	andeq	r0, r0, sp, lsl #14
 8016ed4:	0800bd8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, sp, pc}
 8016ed8:	00000000 	andeq	r0, r0, r0
 8016edc:	0800bdb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, fp, ip, sp, pc}
 8016ee0:	00000000 	andeq	r0, r0, r0
 8016ee4:	01000000 	mrseq	r0, (UNDEF: 0)

08016ee8 <UID_ALL>:
 8016ee8:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 8016eec:	 	ldrsheq	pc, [r0], #-255	@ 0xffffff01	@ <UNPREDICTABLE>

08016eee <RDMConst::MANUFACTURER_ID>:
 8016eee:	 	strbtvc	r0, [r8], #-80	@ 0xffffffb0

08016ef0 <RDMConst::MANUFACTURER_NAME>:
 8016ef0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8016ef4:	772f2f3a 			@ <UNDEFINED> instruction: 0x772f2f3a
 8016ef8:	6f2e7777 	svcvs	0x002e7777
 8016efc:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 8016f00:	2d697065 	stclcs	0, cr7, [r9, #-404]!	@ 0xfffffe6c
 8016f04:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8016f08:	0067726f 	rsbeq	r7, r7, pc, ror #4

08016f0c <DEVICE_LABEL>:
 8016f0c:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 8016f10:	30373446 	eorscc	r3, r7, r6, asr #8
 8016f14:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 8016f18:	52204c41 	eorpl	r4, r0, #16640	@ 0x4100
 8016f1c:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 8016f20:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8016f24:	 	strbvs	r0, [lr, #-101]	@ 0xffffff9b

08016f26 <NetworkConst::MSG_NETWORK_STARTED>:
 8016f26:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8016f2a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8016f2e:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 8016f32:	00646574 	rsbeq	r6, r4, r4, ror r5

08016f36 <NetworkConst::MSG_NETWORK_INIT>:
 8016f36:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8016f3a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8016f3e:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
	...

08016f44 <mdns::DOMAIN_DNSSD>:
 8016f44:	65735f09 	ldrbvs	r5, [r3, #-3849]!	@ 0xfffff0f7
 8016f48:	63697672 	cmnvs	r9, #119537664	@ 0x7200000
 8016f4c:	5f077365 	svcpl	0x00077365
 8016f50:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	@ 0xfffffe70
 8016f54:	5f046473 	svcpl	0x00046473
 8016f58:	05706475 	ldrbeq	r6, [r0, #-1141]!	@ 0xfffffb8b
 8016f5c:	61636f6c 	cmnvs	r3, ip, ror #30
 8016f60:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8017044:	0000001e 	andeq	r0, r0, lr, lsl r0

08017048 <mdns::s_Services>:
 8017048:	08017110 	stmdaeq	r1, {r4, r8, ip, sp, lr}
 801704c:	00000008 	andeq	r0, r0, r8
 8017050:	00000000 	andeq	r0, r0, r0
 8017054:	00002905 	andeq	r2, r0, r5, lsl #18
 8017058:	0801710a 	stmdaeq	r1, {r1, r3, r8, ip, sp, lr}
 801705c:	00000006 	andeq	r0, r0, r6
 8017060:	00000000 	andeq	r0, r0, r0
 8017064:	00000045 	andeq	r0, r0, r5, asr #32
 8017068:	08017104 	stmdaeq	r1, {r2, r8, ip, sp, lr}
 801706c:	00000006 	andeq	r0, r0, r6
 8017070:	00000001 	andeq	r0, r0, r1
 8017074:	00000050 	andeq	r0, r0, r0, asr r0
 8017078:	080170f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, ip, sp, lr}
 801707c:	0000000d 	andeq	r0, r0, sp
 8017080:	00000000 	andeq	r0, r0, r0
 8017084:	000015c1 	andeq	r1, r0, r1, asr #11
 8017088:	080170f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, ip, sp, lr}
 801708c:	00000005 	andeq	r0, r0, r5
 8017090:	00000000 	andeq	r0, r0, r0
 8017094:	0000007b 	andeq	r0, r0, fp, ror r0
 8017098:	080170e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, ip, sp, lr}
 801709c:	0000000c 	andeq	r0, r0, ip
 80170a0:	00000000 	andeq	r0, r0, r0
 80170a4:	0000138c 	andeq	r1, r0, ip, lsl #7
 80170a8:	080170e1 	stmdaeq	r1, {r0, r5, r6, r7, ip, sp, lr}
 80170ac:	00000005 	andeq	r0, r0, r5
	...
 80170b8:	080170dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, ip, sp, lr}
 80170bc:	00000005 	andeq	r0, r0, r5
 80170c0:	00000000 	andeq	r0, r0, r0
 80170c4:	00000fd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 80170c8:	080170d8 	stmdaeq	r1, {r3, r4, r6, r7, ip, sp, lr}
 80170cc:	00000004 	andeq	r0, r0, r4
 80170d0:	00000000 	andeq	r0, r0, r0
 80170d4:	000013d6 	ldrdeq	r1, [r0], -r6

080170d8 <mdns::DOMAIN_PP>:
 80170d8:	70705f03 	rsbsvc	r5, r0, r3, lsl #30

080170dc <mdns::DOMAIN_DDP>:
 80170dc:	64645f04 	strbtvs	r5, [r4], #-3844	@ 0xfffff0fc
 80170e0:	 	svcvs	0x005f0470

080170e1 <mdns::DOMAIN_OSC>:
 80170e1:	736f5f04 	cmnvc	pc, #4, 30
 80170e5:	 	cmpvs	pc, r3, ror #22

080170e6 <mdns::DOMAIN_MIDI>:
 80170e6:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
 80170ea:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	@ 0xfffffe40
 80170ee:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

080170f2 <mdns::DOMAIN_NTP>:
 80170f2:	746e5f04 	strbtvc	r5, [lr], #-3844	@ 0xfffff0fc
 80170f6:	 	subsvc	r0, pc, #112, 24	@ 0x7000

080170f7 <mdns::DOMAIN_RDMNET_LLRP>:
 80170f7:	64725f0c 	ldrbtvs	r5, [r2], #-3852	@ 0xfffff0f4
 80170fb:	74656e6d 	strbtvc	r6, [r5], #-3693	@ 0xfffff193
 80170ff:	726c6c2d 	rsbvc	r6, ip, #11520	@ 0x2d00
 8017103:	 	ldmdavs	pc, {r4, r5, r6, r8, sl}^	@ <UNPREDICTABLE>

08017104 <mdns::DOMAIN_HTTP>:
 8017104:	74685f05 	strbtvc	r5, [r8], #-3845	@ 0xfffff0fb
 8017108:	 	svcpl	0x00057074

0801710a <mdns::DOMAIN_TFTP>:
 801710a:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
 801710e:	 	svcpl	0x00077074

08017110 <mdns::DOMAIN_CONFIG>:
 8017110:	6f635f07 	svcvs	0x00635f07
 8017114:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

08017118 <mdns::DOMAIN_TCP>:
 8017118:	63745f04 	cmnvs	r4, #4, 30
 801711c:	 	ldrbvc	r0, [pc, #-1136]	@ 8016cb4 <rtc_html+0x3bc>

0801711d <mdns::DOMAIN_UDP>:
 801711d:	64755f04 	ldrbtvs	r5, [r5], #-3844	@ 0xfffff0fc
 8017121:	 	svcvs	0x006c0570

08017122 <mdns::DOMAIN_LOCAL>:
 8017122:	636f6c05 	cmnvs	pc, #1280	@ 0x500
 8017126:	 	cdpvs	12, 0, cr6, cr0, cr1, {3}

08017129 <NetworkParamsConst::NTP_SERVER>:
 8017129:	5f70746e 	svcpl	0x0070746e
 801712d:	76726573 			@ <UNDEFINED> instruction: 0x76726573
 8017131:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

08017134 <NetworkParamsConst::HOSTNAME>:
 8017134:	74736f68 	ldrbtvc	r6, [r3], #-3944	@ 0xfffff098
 8017138:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801713d <NetworkParamsConst::DEFAULT_GATEWAY>:
 801713d:	61666564 	cmnvs	r6, r4, ror #10
 8017141:	5f746c75 	svcpl	0x00746c75
 8017145:	65746167 	ldrbvs	r6, [r4, #-359]!	@ 0xfffffe99
 8017149:	00796177 	rsbseq	r6, r9, r7, ror r1

0801714d <NetworkParamsConst::NET_MASK>:
 801714d:	5f74656e 	svcpl	0x0074656e
 8017151:	6b73616d 	blvs	9cef70d <__init_array_end+0x1cd8091>
	...

08017156 <NetworkParamsConst::IP_ADDRESS>:
 8017156:	615f7069 	cmpvs	pc, r9, rrx
 801715a:	65726464 	ldrbvs	r6, [r2, #-1124]!	@ 0xfffffb9c
 801715e:	 	strvs	r7, [r0], #-883	@ 0xfffffc8d

08017161 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8017161:	70636864 	rsbvc	r6, r3, r4, ror #16
 8017165:	7465725f 	strbtvc	r7, [r5], #-607	@ 0xfffffda1
 8017169:	745f7972 	ldrbvc	r7, [pc], #-2418	@ 8017171 <NetworkParamsConst::USE_DHCP>
 801716d:	00656d69 	rsbeq	r6, r5, r9, ror #26

08017171 <NetworkParamsConst::USE_DHCP>:
 8017171:	5f657375 	svcpl	0x00657375
 8017175:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801717a <NetworkParamsConst::FILE_NAME>:
 801717a:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801717e:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8017182:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

08017188 <pArray>:
 8017188:	08017206 	stmdaeq	r1, {r1, r2, r9, ip, sp, lr}
 801718c:	080171fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}
 8017190:	08017156 	stmdaeq	r1, {r1, r2, r4, r6, r8, ip, sp, lr}
 8017194:	080171f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, ip, sp, lr}
 8017198:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 801719c:	080171e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, ip, sp, lr}
 80171a0:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80171a4:	08017134 	stmdaeq	r1, {r2, r4, r5, r8, ip, sp, lr}
 80171a8:	080172eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, ip, sp, lr}
 80171ac:	080172fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 80171b0:	0801730b 	stmdaeq	r1, {r0, r1, r3, r8, r9, ip, sp, lr}
 80171b4:	0801731b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip, sp, lr}
 80171b8:	0801714d 	stmdaeq	r1, {r0, r2, r3, r6, r8, ip, sp, lr}
 80171bc:	080172d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip, sp, lr}
 80171c0:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80171c4:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80171c8:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80171cc:	08014065 	stmdaeq	r1, {r0, r2, r5, r6, lr}
 80171d0:	0801713d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, ip, sp, lr}
 80171d4:	080171d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, ip, sp, lr}

080171d8 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80171d8:	5f786d64 	svcpl	0x00786d64
 80171dc:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 80171e0:	6f697463 	svcvs	0x00697463
 80171e4:	 	cmnvs	r1, #110	@ 0x6e

080171e6 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80171e6:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80171ea:	705f6576 	subsvc	r6, pc, r6, ror r5	@ <UNPREDICTABLE>
 80171ee:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
	...

080171f3 <DisplayUdfParamsConst::VERSION>:
 80171f3:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 80171f7:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080171fb <DisplayUdfParamsConst::BOARD_NAME>:
 80171fb:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 80171ff:	616e5f64 	cmnvs	lr, r4, ror #30
 8017203:	 	strvc	r6, [r0], #-1389	@ 0xfffffa93

08017206 <DisplayUdfParamsConst::TITLE>:
 8017206:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801720a:	 	stclvs	0, cr0, [r6], #-404	@ 0xfffffe6c

0801720c <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801720c:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8017210:	7265765f 	rsbvc	r7, r5, #99614720	@ 0x5f00000
 8017214:	61636974 	smcvs	13972	@ 0x3694
 8017218:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801721c <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801721c:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
 8017220:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017224:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 8016cbf <rtc_html+0x3c7>
 8017228:	 	mcrvs	0, 3, r0, cr9, cr4, {3}

0801722a <DisplayUdfParamsConst::INTENSITY>:
 801722a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801722e:	7469736e 	strbtvc	r7, [r9], #-878	@ 0xfffffc92
 8017232:	 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^

08017234 <DisplayUdfParamsConst::FILE_NAME>:
 8017234:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017238:	2e79616c 	rpwcsez	f6, f1, #4.0
 801723c:	00747874 	rsbseq	r7, r4, r4, ror r8

08017240 <s_aStorSize>:
 8017240:	00000060 	andeq	r0, r0, r0, rrx
 8017244:	00000020 	andeq	r0, r0, r0, lsr #32
 8017248:	00000040 	andeq	r0, r0, r0, asr #32
 801724c:	00000040 	andeq	r0, r0, r0, asr #32
 8017250:	00000020 	andeq	r0, r0, r0, lsr #32
 8017254:	00000020 	andeq	r0, r0, r0, lsr #32
 8017258:	000001e0 	andeq	r0, r0, r0, ror #3
 801725c:	00000040 	andeq	r0, r0, r0, asr #32
 8017260:	00000020 	andeq	r0, r0, r0, lsr #32
 8017264:	00000060 	andeq	r0, r0, r0, rrx
 8017268:	00000030 	andeq	r0, r0, r0, lsr r0
 801726c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017270:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
 8017274:	00000030 	andeq	r0, r0, r0, lsr r0
 8017278:	00000040 	andeq	r0, r0, r0, asr #32
 801727c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017280:	00000060 	andeq	r0, r0, r0, rrx
 8017284:	00000020 	andeq	r0, r0, r0, lsr #32
 8017288:	00000400 	andeq	r0, r0, r0, lsl #8
 801728c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017290:	00000020 	andeq	r0, r0, r0, lsr #32
 8017294:	00000040 	andeq	r0, r0, r0, asr #32
 8017298:	00000060 	andeq	r0, r0, r0, rrx
 801729c:	00000020 	andeq	r0, r0, r0, lsr #32
 80172a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80172a4:	00000140 	andeq	r0, r0, r0, asr #2
 80172a8:	00000020 	andeq	r0, r0, r0, lsr #32

080172ac <s_aSignature>:
 80172ac:	01567641 	cmpeq	r6, r1, asr #12

080172b0 <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
 80172b0:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
 80172b4:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
 80172b8:	2d051e05 	stccs	14, cr1, [r5, #-20]	@ 0xffffffec
 80172bc:	2d081e06 	stccs	14, cr1, [r8, #-24]	@ 0xffffffe8
 80172c0:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
 80172c4:	 	ldrbtvc	r2, [r5], #-3340	@ 0xfffff2f4

080172c6 <EnvParamsConst::UTC_OFFSET>:
 80172c6:	5f637475 	svcpl	0x00637475
 80172ca:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 80172ce:	 	strvs	r7, [r0, #-1125]	@ 0xfffffb9b

080172d1 <EnvParamsConst::FILE_NAME>:
 80172d1:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 80172d5:	00747874 	rsbseq	r7, r4, r4, ror r8

080172d9 <LightSetParamsConst::DMX_START_ADDRESS>:
 80172d9:	5f786d64 	svcpl	0x00786d64
 80172dd:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 80172e1:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 80172e5:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 80172e9:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

080172eb <LightSetParamsConst::UNIVERSE_PORT>:
 80172eb:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 80172ef:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 80172f3:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 80172f7:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80172fb:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 80172ff:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 8017303:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 8017307:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801730b:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801730f:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 8017313:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 8017317:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801731b:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801731f:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 8017323:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 8017327:	00645f74 	rsbeq	r5, r4, r4, ror pc
	...

0801732c <vtable for Ssd1306>:
	...
 8017334:	0801016d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8}
 8017338:	08010199 	stmdaeq	r1, {r0, r3, r4, r7, r8}
 801733c:	080104d1 	stmdaeq	r1, {r0, r4, r6, r7, sl}
 8017340:	08010465 	stmdaeq	r1, {r0, r2, r5, r6, sl}
 8017344:	08010339 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9}
 8017348:	080101bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8}
 801734c:	080101e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8}
 8017350:	08010311 	stmdaeq	r1, {r0, r4, r8, r9}
 8017354:	080102c9 	stmdaeq	r1, {r0, r3, r6, r7, r9}
 8017358:	0801016f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8}
 801735c:	08010375 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9}
 8017360:	08010381 	stmdaeq	r1, {r0, r7, r8, r9}
 8017364:	08010399 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9}
 8017368:	08010171 	stmdaeq	r1, {r0, r4, r5, r6, r8}

0801736c <oled_128x32_init>:
 801736c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017370:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017374:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017378:	02dac8a1 	sbcseq	ip, sl, #10551296	@ 0xa10000
 801737c:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 8017380:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017384 <oled_128x64_init>:
 8017384:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017388:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801738c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017390:	12dac8a1 	sbcsne	ip, sl, #10551296	@ 0xa10000
 8017394:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 8017398:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801739c <_OledFont8x6>:
 801739c:	00000040 	andeq	r0, r0, r0, asr #32
 80173a0:	40000000 	andmi	r0, r0, r0
 80173a4:	005f0000 	subseq	r0, pc, r0
 80173a8:	00400000 	subeq	r0, r0, r0
 80173ac:	00070007 	andeq	r0, r7, r7
 80173b0:	7f144000 	svcvc	0x00144000
 80173b4:	00147f14 	andseq	r7, r4, r4, lsl pc
 80173b8:	7f2a2440 	svcvc	0x002a2440
 80173bc:	4000122a 	andmi	r1, r0, sl, lsr #4
 80173c0:	64081323 	strvs	r1, [r8], #-803	@ 0xfffffcdd
 80173c4:	36400062 	strbcc	r0, [r0], -r2, rrx
 80173c8:	50205649 	eorpl	r5, r0, r9, asr #12
 80173cc:	08004000 	stmdaeq	r0, {lr}
 80173d0:	00000307 	andeq	r0, r0, r7, lsl #6
 80173d4:	221c0040 	andscs	r0, ip, #64	@ 0x40
 80173d8:	40000041 	andmi	r0, r0, r1, asr #32
 80173dc:	1c224100 	stfnes	f4, [r2], #-0
 80173e0:	2a400000 	bcs	90173e8 <__init_array_end+0xfffd6c>
 80173e4:	2a1c7f1c 	bcs	873705c <__init_array_end+0x71f9e0>
 80173e8:	08084000 	stmdaeq	r8, {lr}
 80173ec:	0008083e 	andeq	r0, r8, lr, lsr r8
 80173f0:	70800040 	addvc	r0, r0, r0, asr #32
 80173f4:	40000030 	andmi	r0, r0, r0, lsr r0
 80173f8:	08080808 	stmdaeq	r8, {r3, fp}
 80173fc:	00400008 	subeq	r0, r0, r8
 8017400:	00606000 	rsbeq	r6, r0, r0
 8017404:	10204000 	eorne	r4, r0, r0
 8017408:	00020408 	andeq	r0, r2, r8, lsl #8
 801740c:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8017410:	40003e45 	andmi	r3, r0, r5, asr #28
 8017414:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8017418:	72400000 	subvc	r0, r0, #0
 801741c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8017420:	41214000 			@ <UNDEFINED> instruction: 0x41214000
 8017424:	00334d49 	eorseq	r4, r3, r9, asr #26
 8017428:	12141840 	andsne	r1, r4, #64, 16	@ 0x400000
 801742c:	4000107f 	andmi	r1, r0, pc, ror r0
 8017430:	45454527 	strbmi	r4, [r5, #-1319]	@ 0xfffffad9
 8017434:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8017438:	3149494a 	cmpcc	r9, sl, asr #18
 801743c:	21414000 	mrscs	r4, (UNDEF: 65)
 8017440:	00070911 	andeq	r0, r7, r1, lsl r9
 8017444:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8017448:	40003649 	andmi	r3, r0, r9, asr #12
 801744c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8017450:	0040001e 	subeq	r0, r0, lr, lsl r0
 8017454:	00001400 	andeq	r1, r0, r0, lsl #8
 8017458:	40004000 	andmi	r4, r0, r0
 801745c:	00000034 	andeq	r0, r0, r4, lsr r0
 8017460:	14080040 	strne	r0, [r8], #-64	@ 0xffffffc0
 8017464:	40004122 	andmi	r4, r0, r2, lsr #2
 8017468:	14141414 	ldrne	r1, [r4], #-1044	@ 0xfffffbec
 801746c:	00400014 	subeq	r0, r0, r4, lsl r0
 8017470:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8017474:	01024000 	mrseq	r4, (UNDEF: 2)
 8017478:	00060959 	andeq	r0, r6, r9, asr r9
 801747c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	@ 0xffffff00
 8017480:	40004e59 	andmi	r4, r0, r9, asr lr
 8017484:	1211127c 	andsne	r1, r1, #124, 4	@ 0xc0000007
 8017488:	7f40007c 	svcvc	0x0040007c
 801748c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8017490:	413e4000 	teqmi	lr, r0
 8017494:	00224141 	eoreq	r4, r2, r1, asr #2
 8017498:	41417f40 	cmpmi	r1, r0, asr #30
 801749c:	40003e41 	andmi	r3, r0, r1, asr #28
 80174a0:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80174a4:	7f400041 	svcvc	0x00400041
 80174a8:	01090909 	tsteq	r9, r9, lsl #18
 80174ac:	413e4000 	teqmi	lr, r0
 80174b0:	00735141 	rsbseq	r5, r3, r1, asr #2
 80174b4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80174b8:	40007f08 	andmi	r7, r0, r8, lsl #30
 80174bc:	417f4100 	cmnmi	pc, r0, lsl #2
 80174c0:	20400000 	subcs	r0, r0, r0
 80174c4:	013f4140 	teqeq	pc, r0, asr #2
 80174c8:	087f4000 	ldmdaeq	pc!, {lr}^	@ <UNPREDICTABLE>
 80174cc:	00412214 	subeq	r2, r1, r4, lsl r2
 80174d0:	40407f40 	submi	r7, r0, r0, asr #30
 80174d4:	40004040 	andmi	r4, r0, r0, asr #32
 80174d8:	021c027f 	andseq	r0, ip, #-268435449	@ 0xf0000007
 80174dc:	7f40007f 	svcvc	0x0040007f
 80174e0:	7f100804 	svcvc	0x00100804
 80174e4:	413e4000 	teqmi	lr, r0
 80174e8:	003e4141 	eorseq	r4, lr, r1, asr #2
 80174ec:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80174f0:	40000609 	andmi	r0, r0, r9, lsl #12
 80174f4:	2151413e 	cmpcs	r1, lr, lsr r1
 80174f8:	7f40005e 	svcvc	0x0040005e
 80174fc:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8017500:	49264000 	stmdbmi	r6!, {lr}
 8017504:	00324949 	eorseq	r4, r2, r9, asr #18
 8017508:	7f010340 	svcvc	0x00010340
 801750c:	40000301 	andmi	r0, r0, r1, lsl #6
 8017510:	4040403f 	submi	r4, r0, pc, lsr r0
 8017514:	1f40003f 	svcne	0x0040003f
 8017518:	1f204020 	svcne	0x00204020
 801751c:	403f4000 	eorsmi	r4, pc, r0
 8017520:	003f4038 	eorseq	r4, pc, r8, lsr r0	@ <UNPREDICTABLE>
 8017524:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017528:	40006314 	andmi	r6, r0, r4, lsl r3
 801752c:	04780403 	ldrbteq	r0, [r8], #-1027	@ 0xfffffbfd
 8017530:	61400003 	cmpvs	r0, r3
 8017534:	434d4959 	movtmi	r4, #55641	@ 0xd959
 8017538:	7f004000 	svcvc	0x00004000
 801753c:	00414141 	subeq	r4, r1, r1, asr #2
 8017540:	08040240 	stmdaeq	r4, {r6, r9}
 8017544:	40002010 	andmi	r2, r0, r0, lsl r0
 8017548:	41414100 	mrsmi	r4, (UNDEF: 81)
 801754c:	0440007f 	strbeq	r0, [r0], #-127	@ 0xffffff81
 8017550:	04020102 	streq	r0, [r2], #-258	@ 0xfffffefe
 8017554:	40404000 	submi	r4, r0, r0
 8017558:	00404040 	subeq	r4, r0, r0, asr #32
 801755c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8017560:	40000008 	andmi	r0, r0, r8
 8017564:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8017568:	7f400040 	svcvc	0x00400040
 801756c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8017570:	44384000 	ldrtmi	r4, [r8], #-0
 8017574:	00284444 	eoreq	r4, r8, r4, asr #8
 8017578:	44443840 	strbmi	r3, [r4], #-2112	@ 0xfffff7c0
 801757c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8017580:	54545438 	ldrbpl	r5, [r4], #-1080	@ 0xfffffbc8
 8017584:	00400018 	subeq	r0, r0, r8, lsl r0
 8017588:	02097e08 	andeq	r7, r9, #8, 28	@ 0x80
 801758c:	a4184000 	ldrge	r4, [r8], #-0
 8017590:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8017594:	04087f40 	streq	r7, [r8], #-3904	@ 0xfffff0c0
 8017598:	40007804 	andmi	r7, r0, r4, lsl #16
 801759c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80175a0:	20400000 	subcs	r0, r0, r0
 80175a4:	003d4040 	eorseq	r4, sp, r0, asr #32
 80175a8:	107f4000 	rsbsne	r4, pc, r0
 80175ac:	00004428 	andeq	r4, r0, r8, lsr #8
 80175b0:	7f410040 	svcvc	0x00410040
 80175b4:	40000040 	andmi	r0, r0, r0, asr #32
 80175b8:	0478047c 	ldrbteq	r0, [r8], #-1148	@ 0xfffffb84
 80175bc:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 80175c0:	78040408 	stmdavc	r4, {r3, sl}
 80175c4:	44384000 	ldrtmi	r4, [r8], #-0
 80175c8:	00384444 	eorseq	r4, r8, r4, asr #8
 80175cc:	2418fc40 	ldrcs	pc, [r8], #-3136	@ 0xfffff3c0
 80175d0:	40001824 	andmi	r1, r0, r4, lsr #16
 80175d4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80175d8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80175dc:	08040408 	stmdaeq	r4, {r3, sl}
 80175e0:	54484000 	strbpl	r4, [r8], #-0
 80175e4:	00245454 	eoreq	r5, r4, r4, asr r4
 80175e8:	3f040440 	svccc	0x00040440
 80175ec:	40002444 	andmi	r2, r0, r4, asr #8
 80175f0:	2040403c 	subcs	r4, r0, ip, lsr r0
 80175f4:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80175f8:	1c204020 	stcne	0, cr4, [r0], #-128	@ 0xffffff80
 80175fc:	403c4000 	eorsmi	r4, ip, r0
 8017600:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017604:	10284440 	eorne	r4, r8, r0, asr #8
 8017608:	40004428 	andmi	r4, r0, r8, lsr #8
 801760c:	9090904c 	addsls	r9, r0, ip, asr #32
 8017610:	4440007c 	strbmi	r0, [r0], #-124	@ 0xffffff84
 8017614:	444c5464 	strbmi	r5, [ip], #-1124	@ 0xfffffb9c
 8017618:	08004000 	stmdaeq	r0, {lr}
 801761c:	00004136 	andeq	r4, r0, r6, lsr r1
 8017620:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017624:	40000000 	andmi	r0, r0, r0
 8017628:	08364100 	ldmdaeq	r6!, {r8, lr}
 801762c:	02400000 	subeq	r0, r0, #0
 8017630:	02040201 	andeq	r0, r4, #268435456	@ 0x10000000
 8017634:	263c4000 	ldrtcs	r4, [ip], -r0
 8017638:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801763c <CSWTCH.7>:
 801763c:	080147ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, lr}
 8017640:	080147b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sl, lr}
 8017644:	080147bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, lr}
 8017648:	080147c4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, lr}

0801764c <days_of_month>:
 801764c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017650:	0000001c 	andeq	r0, r0, ip, lsl r0
 8017654:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017658:	0000001e 	andeq	r0, r0, lr, lsl r0
 801765c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017660:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017664:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017668:	0000001f 	andeq	r0, r0, pc, lsl r0
 801766c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017670:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017674:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017678:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .tcmsram:

10008000 <net::s_dhcp_message>:
	...

10008224 <net::s_id>:
10008224:	00000000 	andeq	r0, r0, r0

10008228 <net::s_groups>:
	...

10008348 <net::s_multicast_mac>:
	...

10008350 <net::s_leave>:
	...

10008380 <net::s_report>:
	...

100083b0 <net::s_tcp>:
	...

1000899c <net::s_id>:
1000899c:	00000000 	andeq	r0, r0, r0

100089a0 <net::s_Port>:
	...

100096a8 <net::s_multicast_mac>:
	...

100096b0 <net::s_id>:
100096b0:	00000000 	andeq	r0, r0, r0

100096b4 <net::s_send_packet>:
	...

10009ca0 <net::s_data>:
	...

1000cb00 <net::s_Port>:
	...

1000cb10 <net::s_ArpRecords>:
	...

Disassembly of section .data:

20000000 <SystemCoreClock>:
20000000:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}

20000004 <lfsr>:
20000004:	0000ace1 	andeq	sl, r0, r1, ror #25

20000008 <s_block_bucket>:
20000008:	00000010 	andeq	r0, r0, r0, lsl r0
2000000c:	00000000 	andeq	r0, r0, r0
20000010:	00000020 	andeq	r0, r0, r0, lsr #32
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000040 	andeq	r0, r0, r0, asr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000060 	andeq	r0, r0, r0, rrx
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000080 	andeq	r0, r0, r0, lsl #1
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000100 	andeq	r0, r0, r0, lsl #2
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000140 	andeq	r0, r0, r0, asr #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000180 	andeq	r0, r0, r0, lsl #3
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000200 	andeq	r0, r0, r0, lsl #4
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000300 	andeq	r0, r0, r0, lsl #6
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000400 	andeq	r0, r0, r0, lsl #8
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000070 <next_block>:
20000070:	1000cc90 	mulne	r0, r0, ip

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
