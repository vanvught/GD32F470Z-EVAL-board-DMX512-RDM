
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10008000 	andne	r8, r0, r0
 8008004:	0800938d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, ip, pc}
 8008008:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800800c:	080093e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, ip, pc}
 8008010:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008014:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008018:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
	...
 800802c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008030:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800803c:	08016951 	stmdaeq	r1, {r0, r4, r6, r8, fp, sp, lr}
 8008040:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008044:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008048:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800804c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008050:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008054:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008058:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800805c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008060:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008064:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008068:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800806c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008070:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008074:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008078:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800807c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008080:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008084:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008088:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800808c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008090:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008094:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008098:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800809c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080a0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080a4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080a8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080ac:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080b0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080b4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080b8:	0800f085 	stmdaeq	r0, {r0, r2, r7, ip, sp, lr, pc}
 80080bc:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080c0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080c4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080c8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080cc:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080d0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080d4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080d8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080dc:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080e0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080e4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080e8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080ec:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080f0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080f4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080f8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80080fc:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008100:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008104:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008108:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800810c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008110:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008114:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008118:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800811c:	08016825 	stmdaeq	r1, {r0, r2, r5, fp, sp, lr}
 8008120:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008124:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008128:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800812c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008130:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008134:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008138:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800813c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008140:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008144:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008148:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800814c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008150:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008154:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008158:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800815c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008160:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008164:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008168:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800816c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008170:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008174:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008178:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008184:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008188:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800818c:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008190:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008194:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 8008198:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80081a4:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}
 80081a8:	080093e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, ip, pc}

Disassembly of section .text:

080081ac <net::igmp_init()>:
 80081ac:	b538      	push	{r3, r4, r5, lr}
 80081ae:	f009 ff7d 	bl	80120ac <net::igmp_set_ip()>
 80081b2:	492c      	ldr	r1, [pc, #176]	@ (8008264 <net::igmp_init()+0xb8>)
 80081b4:	4b2c      	ldr	r3, [pc, #176]	@ (8008268 <net::igmp_init()+0xbc>)
 80081b6:	4a2d      	ldr	r2, [pc, #180]	@ (800826c <net::igmp_init()+0xc0>)
 80081b8:	2401      	movs	r4, #1
 80081ba:	205e      	movs	r0, #94	@ 0x5e
 80081bc:	800c      	strh	r4, [r1, #0]
 80081be:	7088      	strb	r0, [r1, #2]
 80081c0:	2106      	movs	r1, #6
 80081c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80081c6:	f803 0b01 	strb.w	r0, [r3], #1
 80081ca:	3901      	subs	r1, #1
 80081cc:	d1f9      	bne.n	80081c2 <net::igmp_init()+0x16>
 80081ce:	4a28      	ldr	r2, [pc, #160]	@ (8008270 <net::igmp_init()+0xc4>)
 80081d0:	4828      	ldr	r0, [pc, #160]	@ (8008274 <net::igmp_init()+0xc8>)
 80081d2:	60d0      	str	r0, [r2, #12]
 80081d4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80081d8:	4b27      	ldr	r3, [pc, #156]	@ (8008278 <net::igmp_init()+0xcc>)
 80081da:	8210      	strh	r0, [r2, #16]
 80081dc:	f240 4094 	movw	r0, #1172	@ 0x494
 80081e0:	8450      	strh	r0, [r2, #34]	@ 0x22
 80081e2:	4c26      	ldr	r4, [pc, #152]	@ (800827c <net::igmp_init()+0xd0>)
 80081e4:	4826      	ldr	r0, [pc, #152]	@ (8008280 <net::igmp_init()+0xd4>)
 80081e6:	8491      	strh	r1, [r2, #36]	@ 0x24
 80081e8:	2516      	movs	r5, #22
 80081ea:	6154      	str	r4, [r2, #20]
 80081ec:	84d5      	strh	r5, [r2, #38]	@ 0x26
 80081ee:	6018      	str	r0, [r3, #0]
 80081f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80081f4:	2006      	movs	r0, #6
 80081f6:	491d      	ldr	r1, [pc, #116]	@ (800826c <net::igmp_init()+0xc0>)
 80081f8:	809a      	strh	r2, [r3, #4]
 80081fa:	181a      	adds	r2, r3, r0
 80081fc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008200:	f802 5b01 	strb.w	r5, [r2], #1
 8008204:	3801      	subs	r0, #1
 8008206:	d1f9      	bne.n	80081fc <net::igmp_init()+0x50>
 8008208:	4a1e      	ldr	r2, [pc, #120]	@ (8008284 <net::igmp_init()+0xd8>)
 800820a:	615c      	str	r4, [r3, #20]
 800820c:	6811      	ldr	r1, [r2, #0]
 800820e:	4c1e      	ldr	r4, [pc, #120]	@ (8008288 <net::igmp_init()+0xdc>)
 8008210:	f8d1 20a0 	ldr.w	r2, [r1, #160]	@ 0xa0
 8008214:	8498      	strh	r0, [r3, #36]	@ 0x24
 8008216:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800821a:	4d16      	ldr	r5, [pc, #88]	@ (8008274 <net::igmp_init()+0xc8>)
 800821c:	f8c3 401e 	str.w	r4, [r3, #30]
 8008220:	8218      	strh	r0, [r3, #16]
 8008222:	2417      	movs	r4, #23
 8008224:	f240 4094 	movw	r0, #1172	@ 0x494
 8008228:	2a07      	cmp	r2, #7
 800822a:	84dc      	strh	r4, [r3, #38]	@ 0x26
 800822c:	60dd      	str	r5, [r3, #12]
 800822e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8008230:	d904      	bls.n	800823c <net::igmp_init()+0x90>
 8008232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008236:	4815      	ldr	r0, [pc, #84]	@ (800828c <net::igmp_init()+0xe0>)
 8008238:	f00d ba28 	b.w	801568c <console_error>
 800823c:	4b14      	ldr	r3, [pc, #80]	@ (8008290 <net::igmp_init()+0xe4>)
 800823e:	f8d1 40a4 	ldr.w	r4, [r1, #164]	@ 0xa4
 8008242:	6818      	ldr	r0, [r3, #0]
 8008244:	1c55      	adds	r5, r2, #1
 8008246:	1c63      	adds	r3, r4, #1
 8008248:	f8c1 30a4 	str.w	r3, [r1, #164]	@ 0xa4
 800824c:	f8c1 50a0 	str.w	r5, [r1, #160]	@ 0xa0
 8008250:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8008254:	3064      	adds	r0, #100	@ 0x64
 8008256:	2164      	movs	r1, #100	@ 0x64
 8008258:	e9c3 0108 	strd	r0, r1, [r3, #32]
 800825c:	4a0d      	ldr	r2, [pc, #52]	@ (8008294 <net::igmp_init()+0xe8>)
 800825e:	e9c3 420a 	strd	r4, r2, [r3, #40]	@ 0x28
 8008262:	bd38      	pop	{r3, r4, r5, pc}
 8008264:	10008348 	andne	r8, r0, r8, asr #6
 8008268:	10008386 	andne	r8, r0, r6, lsl #7
 800826c:	2000cc24 	andcs	ip, r0, r4, lsr #24
 8008270:	10008380 	andne	r8, r0, r0, lsl #7
 8008274:	00460008 	subeq	r0, r6, r8
 8008278:	10008350 	andne	r8, r0, r0, asr r3
 800827c:	02010040 	andeq	r0, r1, #64	@ 0x40
 8008280:	005e0001 	subseq	r0, lr, r1
 8008284:	2000cdc0 	andcs	ip, r0, r0, asr #27
 8008288:	020000e0 	andeq	r0, r0, #224	@ 0xe0
 800828c:	08019f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, pc}
 8008290:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8008294:	08012059 	stmdaeq	r1, {r0, r3, r4, r6, sp}

08008298 <net::igmp_shutdown()>:
 8008298:	b538      	push	{r3, r4, r5, lr}
 800829a:	4d05      	ldr	r5, [pc, #20]	@ (80082b0 <net::igmp_shutdown()+0x18>)
 800829c:	2400      	movs	r4, #0
 800829e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 80082a2:	b108      	cbz	r0, 80082a8 <net::igmp_shutdown()+0x10>
 80082a4:	f009 ff30 	bl	8012108 <net::igmp_leave(unsigned long)>
 80082a8:	3401      	adds	r4, #1
 80082aa:	2c24      	cmp	r4, #36	@ 0x24
 80082ac:	d1f7      	bne.n	800829e <net::igmp_shutdown()+0x6>
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	10008228 	andne	r8, r0, r8, lsr #4

080082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
 80082b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b8:	4d19      	ldr	r5, [pc, #100]	@ (8008320 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x6c>)
 80082ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082be:	7e2c      	ldrb	r4, [r5, #24]
 80082c0:	461f      	mov	r7, r3
 80082c2:	7deb      	ldrb	r3, [r5, #23]
 80082c4:	0424      	lsls	r4, r4, #16
 80082c6:	eb04 2403 	add.w	r4, r4, r3, lsl #8
 80082ca:	7e6b      	ldrb	r3, [r5, #25]
 80082cc:	3402      	adds	r4, #2
 80082ce:	eb04 6403 	add.w	r4, r4, r3, lsl #24
 80082d2:	4682      	mov	sl, r0
 80082d4:	460e      	mov	r6, r1
 80082d6:	4690      	mov	r8, r2
 80082d8:	612c      	str	r4, [r5, #16]
 80082da:	f000 f8b5 	bl	8008448 <net::arp_init()>
 80082de:	f000 f951 	bl	8008584 <net::ip_init()>
 80082e2:	f1ba 0f01 	cmp.w	sl, #1
 80082e6:	7eab      	ldrb	r3, [r5, #26]
 80082e8:	d115      	bne.n	8008316 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x62>
 80082ea:	f043 0301 	orr.w	r3, r3, #1
 80082ee:	76ab      	strb	r3, [r5, #26]
 80082f0:	f899 3000 	ldrb.w	r3, [r9]
 80082f4:	b11b      	cbz	r3, 80082fe <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x4a>
 80082f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082fa:	f009 bcdf 	b.w	8011cbc <net::dhcp_start()>
 80082fe:	b12e      	cbz	r6, 800830c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x58>
 8008300:	4640      	mov	r0, r8
 8008302:	f00a f83b 	bl	801237c <net::netif_set_netmask(net::ip_addr)>
 8008306:	4638      	mov	r0, r7
 8008308:	f00a f84c 	bl	80123a4 <net::netif_set_gw(net::ip_addr)>
 800830c:	4630      	mov	r0, r6
 800830e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008312:	f009 bf79 	b.w	8012208 <net::net_set_primary_ip(net::ip_addr)>
 8008316:	f023 0301 	bic.w	r3, r3, #1
 800831a:	76ab      	strb	r3, [r5, #26]
 800831c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008320:	2000cc10 	andcs	ip, r0, r0, lsl ip

08008324 <net::tcp_init()>:
 8008324:	4a07      	ldr	r2, [pc, #28]	@ (8008344 <net::tcp_init()+0x20>)
 8008326:	4908      	ldr	r1, [pc, #32]	@ (8008348 <net::tcp_init()+0x24>)
 8008328:	2306      	movs	r3, #6
 800832a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800832e:	f802 0b01 	strb.w	r0, [r2], #1
 8008332:	3b01      	subs	r3, #1
 8008334:	d1f9      	bne.n	800832a <net::tcp_init()+0x6>
 8008336:	4b05      	ldr	r3, [pc, #20]	@ (800834c <net::tcp_init()+0x28>)
 8008338:	4905      	ldr	r1, [pc, #20]	@ (8008350 <net::tcp_init()+0x2c>)
 800833a:	4a06      	ldr	r2, [pc, #24]	@ (8008354 <net::tcp_init()+0x30>)
 800833c:	60d9      	str	r1, [r3, #12]
 800833e:	615a      	str	r2, [r3, #20]
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	100083b6 			@ <UNDEFINED> instruction: 0x100083b6
 8008348:	2000cc24 	andcs	ip, r0, r4, lsr #24
 800834c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8008350:	00450008 	subeq	r0, r5, r8
 8008354:	06400040 	strbeq	r0, [r0], -r0, asr #32

08008358 <net::udp_init()>:
 8008358:	490b      	ldr	r1, [pc, #44]	@ (8008388 <net::udp_init()+0x30>)
 800835a:	4b0c      	ldr	r3, [pc, #48]	@ (800838c <net::udp_init()+0x34>)
 800835c:	4a0c      	ldr	r2, [pc, #48]	@ (8008390 <net::udp_init()+0x38>)
 800835e:	b510      	push	{r4, lr}
 8008360:	205e      	movs	r0, #94	@ 0x5e
 8008362:	2401      	movs	r4, #1
 8008364:	800c      	strh	r4, [r1, #0]
 8008366:	7088      	strb	r0, [r1, #2]
 8008368:	2106      	movs	r1, #6
 800836a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800836e:	f803 0b01 	strb.w	r0, [r3], #1
 8008372:	3901      	subs	r1, #1
 8008374:	d1f9      	bne.n	800836a <net::udp_init()+0x12>
 8008376:	4807      	ldr	r0, [pc, #28]	@ (8008394 <net::udp_init()+0x3c>)
 8008378:	4a07      	ldr	r2, [pc, #28]	@ (8008398 <net::udp_init()+0x40>)
 800837a:	4b08      	ldr	r3, [pc, #32]	@ (800839c <net::udp_init()+0x44>)
 800837c:	60c2      	str	r2, [r0, #12]
 800837e:	6143      	str	r3, [r0, #20]
 8008380:	f00a fab2 	bl	80128e8 <net::udp_set_ip()>
 8008384:	8501      	strh	r1, [r0, #40]	@ 0x28
 8008386:	bd10      	pop	{r4, pc}
 8008388:	100096a8 	andne	r9, r0, r8, lsr #13
 800838c:	100096ba 			@ <UNDEFINED> instruction: 0x100096ba
 8008390:	2000cc24 	andcs	ip, r0, r4, lsr #24
 8008394:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8008398:	00450008 	subeq	r0, r5, r8
 800839c:	11400040 	cmpne	r0, r0, asr #32

080083a0 <emac_config()>:
 80083a0:	b508      	push	{r3, lr}
 80083a2:	480f      	ldr	r0, [pc, #60]	@ (80083e0 <emac_config()+0x40>)
 80083a4:	f00f fccf 	bl	8017d46 <puts>
 80083a8:	f00a fe8e 	bl	80130c8 <enet_gpio_config()>
 80083ac:	f640 4019 	movw	r0, #3097	@ 0xc19
 80083b0:	f00d fef0 	bl	8016194 <rcu_periph_clock_enable>
 80083b4:	f640 401a 	movw	r0, #3098	@ 0xc1a
 80083b8:	f00d feec 	bl	8016194 <rcu_periph_clock_enable>
 80083bc:	f640 401b 	movw	r0, #3099	@ 0xc1b
 80083c0:	f00d fee8 	bl	8016194 <rcu_periph_clock_enable>
 80083c4:	f00d fe1c 	bl	8016000 <enet_deinit>
 80083c8:	f00d fbb6 	bl	8015b38 <enet_software_reset>
 80083cc:	2001      	movs	r0, #1
 80083ce:	f00a fe11 	bl	8012ff4 <net::phy_config(unsigned long)>
 80083d2:	b920      	cbnz	r0, 80083de <emac_config()+0x3e>
 80083d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083d8:	4802      	ldr	r0, [pc, #8]	@ (80083e4 <emac_config()+0x44>)
 80083da:	f00d b957 	b.w	801568c <console_error>
 80083de:	bd08      	pop	{r3, pc}
 80083e0:	08019054 	stmdaeq	r1, {r2, r4, r6, ip, pc}
 80083e4:	0801905c 	stmdaeq	r1, {r2, r3, r4, r6, ip, pc}

080083e8 <emac_start(unsigned char*, net::Link&)>:
 80083e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80083ea:	466c      	mov	r4, sp
 80083ec:	4605      	mov	r5, r0
 80083ee:	460e      	mov	r6, r1
 80083f0:	2001      	movs	r0, #1
 80083f2:	4621      	mov	r1, r4
 80083f4:	f00b fa5e 	bl	80138b4 <net::phy_start(unsigned long, net::PhyStatus&)>
 80083f8:	9b00      	ldr	r3, [sp, #0]
 80083fa:	6033      	str	r3, [r6, #0]
 80083fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8008400:	f00a fda4 	bl	8012f4c <emac_adjust_link(net::PhyStatus)>
 8008404:	4628      	mov	r0, r5
 8008406:	f00e f9fb 	bl	8016800 <mac_address_get(unsigned char*)>
 800840a:	4629      	mov	r1, r5
 800840c:	2000      	movs	r0, #0
 800840e:	f00d fbf5 	bl	8015bfc <enet_mac_address_set>
 8008412:	4c0c      	ldr	r4, [pc, #48]	@ (8008444 <emac_start(unsigned char*, net::Link&)+0x5c>)
 8008414:	f44f 00e0 	mov.w	r0, #7340032	@ 0x700000
 8008418:	f00d fba2 	bl	8015b60 <enet_descriptors_chain_init>
 800841c:	f44f 2060 	mov.w	r0, #917504	@ 0xe0000
 8008420:	f00d fb9e 	bl	8015b60 <enet_descriptors_chain_init>
 8008424:	4620      	mov	r0, r4
 8008426:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 800842a:	f00d fbe1 	bl	8015bf0 <enet_transmit_checksum_config>
 800842e:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 8008432:	f104 0010 	add.w	r0, r4, #16
 8008436:	f00d fbdb 	bl	8015bf0 <enet_transmit_checksum_config>
 800843a:	f00d fd9b 	bl	8015f74 <enet_enable>
 800843e:	b004      	add	sp, #16
 8008440:	bd70      	pop	{r4, r5, r6, pc}
 8008442:	bf00      	nop
 8008444:	2001a468 	andcs	sl, r1, r8, ror #8

08008448 <net::arp_init()>:
 8008448:	b410      	push	{r4}
 800844a:	4b3e      	ldr	r3, [pc, #248]	@ (8008544 <net::arp_init()+0xfc>)
 800844c:	b083      	sub	sp, #12
 800844e:	2210      	movs	r2, #16
 8008450:	2000      	movs	r0, #0
 8008452:	f103 0118 	add.w	r1, r3, #24
 8008456:	f803 0b01 	strb.w	r0, [r3], #1
 800845a:	428b      	cmp	r3, r1
 800845c:	d1fb      	bne.n	8008456 <net::arp_init()+0xe>
 800845e:	3a01      	subs	r2, #1
 8008460:	d1f7      	bne.n	8008452 <net::arp_init()+0xa>
 8008462:	4a39      	ldr	r2, [pc, #228]	@ (8008548 <net::arp_init()+0x100>)
 8008464:	4939      	ldr	r1, [pc, #228]	@ (800854c <net::arp_init()+0x104>)
 8008466:	2306      	movs	r3, #6
 8008468:	f811 0b01 	ldrb.w	r0, [r1], #1
 800846c:	f802 0b01 	strb.w	r0, [r2], #1
 8008470:	3b01      	subs	r3, #1
 8008472:	d1f9      	bne.n	8008468 <net::arp_init()+0x20>
 8008474:	4936      	ldr	r1, [pc, #216]	@ (8008550 <net::arp_init()+0x108>)
 8008476:	2206      	movs	r2, #6
 8008478:	460b      	mov	r3, r1
 800847a:	20ff      	movs	r0, #255	@ 0xff
 800847c:	3a01      	subs	r2, #1
 800847e:	f801 0b01 	strb.w	r0, [r1], #1
 8008482:	d1fb      	bne.n	800847c <net::arp_init()+0x34>
 8008484:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8008488:	4c32      	ldr	r4, [pc, #200]	@ (8008554 <net::arp_init()+0x10c>)
 800848a:	4933      	ldr	r1, [pc, #204]	@ (8008558 <net::arp_init()+0x110>)
 800848c:	8298      	strh	r0, [r3, #20]
 800848e:	4a33      	ldr	r2, [pc, #204]	@ (800855c <net::arp_init()+0x114>)
 8008490:	482e      	ldr	r0, [pc, #184]	@ (800854c <net::arp_init()+0x104>)
 8008492:	e9c3 4103 	strd	r4, r1, [r3, #12]
 8008496:	2306      	movs	r3, #6
 8008498:	f810 4b01 	ldrb.w	r4, [r0], #1
 800849c:	f802 4b01 	strb.w	r4, [r2], #1
 80084a0:	3b01      	subs	r3, #1
 80084a2:	d1f9      	bne.n	8008498 <net::arp_init()+0x50>
 80084a4:	4b2e      	ldr	r3, [pc, #184]	@ (8008560 <net::arp_init()+0x118>)
 80084a6:	4a2f      	ldr	r2, [pc, #188]	@ (8008564 <net::arp_init()+0x11c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	9301      	str	r3, [sp, #4]
 80084ac:	a801      	add	r0, sp, #4
 80084ae:	2304      	movs	r3, #4
 80084b0:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084b4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80084b8:	3b01      	subs	r3, #1
 80084ba:	d1f9      	bne.n	80084b0 <net::arp_init()+0x68>
 80084bc:	482a      	ldr	r0, [pc, #168]	@ (8008568 <net::arp_init()+0x120>)
 80084be:	2206      	movs	r2, #6
 80084c0:	3a01      	subs	r2, #1
 80084c2:	f800 3b01 	strb.w	r3, [r0], #1
 80084c6:	d1fb      	bne.n	80084c0 <net::arp_init()+0x78>
 80084c8:	4a28      	ldr	r2, [pc, #160]	@ (800856c <net::arp_init()+0x124>)
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <net::arp_init()+0x104>)
 80084cc:	2306      	movs	r3, #6
 80084ce:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084d2:	f802 4b01 	strb.w	r4, [r2], #1
 80084d6:	3b01      	subs	r3, #1
 80084d8:	d1f9      	bne.n	80084ce <net::arp_init()+0x86>
 80084da:	4b25      	ldr	r3, [pc, #148]	@ (8008570 <net::arp_init()+0x128>)
 80084dc:	481d      	ldr	r0, [pc, #116]	@ (8008554 <net::arp_init()+0x10c>)
 80084de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80084e2:	e9c3 0103 	strd	r0, r1, [r3, #12]
 80084e6:	4919      	ldr	r1, [pc, #100]	@ (800854c <net::arp_init()+0x104>)
 80084e8:	829a      	strh	r2, [r3, #20]
 80084ea:	2206      	movs	r2, #6
 80084ec:	3316      	adds	r3, #22
 80084ee:	f811 0b01 	ldrb.w	r0, [r1], #1
 80084f2:	f803 0b01 	strb.w	r0, [r3], #1
 80084f6:	3a01      	subs	r2, #1
 80084f8:	d1f9      	bne.n	80084ee <net::arp_init()+0xa6>
 80084fa:	4b1e      	ldr	r3, [pc, #120]	@ (8008574 <net::arp_init()+0x12c>)
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8008502:	2b07      	cmp	r3, #7
 8008504:	d905      	bls.n	8008512 <net::arp_init()+0xca>
 8008506:	481c      	ldr	r0, [pc, #112]	@ (8008578 <net::arp_init()+0x130>)
 8008508:	b003      	add	sp, #12
 800850a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800850e:	f00d b8bd 	b.w	801568c <console_error>
 8008512:	f8d2 00a4 	ldr.w	r0, [r2, #164]	@ 0xa4
 8008516:	4919      	ldr	r1, [pc, #100]	@ (800857c <net::arp_init()+0x134>)
 8008518:	1c44      	adds	r4, r0, #1
 800851a:	f8c2 40a4 	str.w	r4, [r2, #164]	@ 0xa4
 800851e:	6809      	ldr	r1, [r1, #0]
 8008520:	1c5c      	adds	r4, r3, #1
 8008522:	f8c2 40a0 	str.w	r4, [r2, #160]	@ 0xa0
 8008526:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800852a:	4a15      	ldr	r2, [pc, #84]	@ (8008580 <net::arp_init()+0x138>)
 800852c:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8008530:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
 8008534:	e9c3 1408 	strd	r1, r4, [r3, #32]
 8008538:	e9c3 020a 	strd	r0, r2, [r3, #40]	@ 0x28
 800853c:	b003      	add	sp, #12
 800853e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	1000cb10 	andne	ip, r0, r0, lsl fp
 8008548:	2000cc82 	andcs	ip, r0, r2, lsl #25
 800854c:	2000cc24 	andcs	ip, r0, r4, lsr #24
 8008550:	2000cc7c 	andcs	ip, r0, ip, ror ip
 8008554:	01000608 	tsteq	r0, r8, lsl #12
 8008558:	04060008 	streq	r0, [r6], #-8
 800855c:	2000cc92 	mulcs	r0, r2, ip
 8008560:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8008564:	2000cc97 	mulcs	r0, r7, ip
 8008568:	2000cc9c 	mulcs	r0, ip, ip
 800856c:	2000cc46 	andcs	ip, r0, r6, asr #24
 8008570:	2000cc40 	andcs	ip, r0, r0, asr #24
 8008574:	2000cdc0 	andcs	ip, r0, r0, asr #27
 8008578:	08019f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, pc}
 800857c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8008580:	0801369d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, ip, sp}

08008584 <net::ip_init()>:
 8008584:	b508      	push	{r3, lr}
 8008586:	f7ff fee7 	bl	8008358 <net::udp_init()>
 800858a:	f7ff fe0f 	bl	80081ac <net::igmp_init()>
 800858e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008592:	f7ff bec7 	b.w	8008324 <net::tcp_init()>
	...

08008598 <console_init()>:
 8008598:	b508      	push	{r3, lr}
 800859a:	f00e fbd3 	bl	8016d44 <uart0_init>
 800859e:	4804      	ldr	r0, [pc, #16]	@ (80085b0 <console_init()+0x18>)
 80085a0:	f00e fbfa 	bl	8016d98 <uart0_puts>
 80085a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085a8:	4802      	ldr	r0, [pc, #8]	@ (80085b4 <console_init()+0x1c>)
 80085aa:	f00e bbf5 	b.w	8016d98 <uart0_puts>
 80085ae:	bf00      	nop
 80085b0:	08019278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, pc}
 80085b4:	08019296 	stmdaeq	r1, {r1, r2, r4, r7, r9, ip, pc}

080085b8 <net::igmp_handle(t_igmp*)>:
 80085b8:	7b83      	ldrb	r3, [r0, #14]
 80085ba:	2b45      	cmp	r3, #69	@ 0x45
 80085bc:	d000      	beq.n	80085c0 <net::igmp_handle(t_igmp*)+0x8>
 80085be:	4770      	bx	lr
 80085c0:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 80085c4:	2b11      	cmp	r3, #17
 80085c6:	d1fa      	bne.n	80085be <net::igmp_handle(t_igmp*)+0x6>
 80085c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085cc:	b082      	sub	sp, #8
 80085ce:	4b23      	ldr	r3, [pc, #140]	@ (800865c <net::igmp_handle(t_igmp*)+0xa4>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f100 081d 	add.w	r8, r0, #29
 80085d6:	466a      	mov	r2, sp
 80085d8:	f100 0421 	add.w	r4, r0, #33	@ 0x21
 80085dc:	4643      	mov	r3, r8
 80085de:	e001      	b.n	80085e4 <net::igmp_handle(t_igmp*)+0x2c>
 80085e0:	42a3      	cmp	r3, r4
 80085e2:	d038      	beq.n	8008656 <net::igmp_handle(t_igmp*)+0x9e>
 80085e4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 80085e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085ec:	428d      	cmp	r5, r1
 80085ee:	d0f7      	beq.n	80085e0 <net::igmp_handle(t_igmp*)+0x28>
 80085f0:	1a6d      	subs	r5, r5, r1
 80085f2:	4b1b      	ldr	r3, [pc, #108]	@ (8008660 <net::igmp_handle(t_igmp*)+0xa8>)
 80085f4:	2701      	movs	r7, #1
 80085f6:	f503 7690 	add.w	r6, r3, #288	@ 0x120
 80085fa:	e00a      	b.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 80085fc:	f803 7c02 	strb.w	r7, [r3, #-2]
 8008600:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 8008604:	0852      	lsrs	r2, r2, #1
 8008606:	3201      	adds	r2, #1
 8008608:	f823 2c04 	strh.w	r2, [r3, #-4]
 800860c:	3308      	adds	r3, #8
 800860e:	42b3      	cmp	r3, r6
 8008610:	d012      	beq.n	8008638 <net::igmp_handle(t_igmp*)+0x80>
 8008612:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8008616:	2a00      	cmp	r2, #0
 8008618:	d0f8      	beq.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 800861a:	9201      	str	r2, [sp, #4]
 800861c:	b97d      	cbnz	r5, 800863e <net::igmp_handle(t_igmp*)+0x86>
 800861e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8008622:	2a01      	cmp	r2, #1
 8008624:	d1ea      	bne.n	80085fc <net::igmp_handle(t_igmp*)+0x44>
 8008626:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 800862a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800862e:	428a      	cmp	r2, r1
 8008630:	dbe8      	blt.n	8008604 <net::igmp_handle(t_igmp*)+0x4c>
 8008632:	3308      	adds	r3, #8
 8008634:	42b3      	cmp	r3, r6
 8008636:	d1ec      	bne.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 8008638:	b002      	add	sp, #8
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800863e:	a901      	add	r1, sp, #4
 8008640:	4642      	mov	r2, r8
 8008642:	e001      	b.n	8008648 <net::igmp_handle(t_igmp*)+0x90>
 8008644:	42a2      	cmp	r2, r4
 8008646:	d0ea      	beq.n	800861e <net::igmp_handle(t_igmp*)+0x66>
 8008648:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800864c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008650:	45e6      	cmp	lr, ip
 8008652:	d0f7      	beq.n	8008644 <net::igmp_handle(t_igmp*)+0x8c>
 8008654:	e7da      	b.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 8008656:	2500      	movs	r5, #0
 8008658:	e7cb      	b.n	80085f2 <net::igmp_handle(t_igmp*)+0x3a>
 800865a:	bf00      	nop
 800865c:	010000e0 	smlatteq	r0, r0, r0, r0
 8008660:	10008230 	andne	r8, r0, r0, lsr r2

08008664 <net::net_handle()>:
 8008664:	b500      	push	{lr}
 8008666:	b083      	sub	sp, #12
 8008668:	a801      	add	r0, sp, #4
 800866a:	f00a fe07 	bl	801327c <emac_eth_recv(unsigned char**)>
 800866e:	2800      	cmp	r0, #0
 8008670:	dc02      	bgt.n	8008678 <net::net_handle()+0x14>
 8008672:	b003      	add	sp, #12
 8008674:	f85d fb04 	ldr.w	pc, [sp], #4
 8008678:	9801      	ldr	r0, [sp, #4]
 800867a:	8983      	ldrh	r3, [r0, #12]
 800867c:	2b08      	cmp	r3, #8
 800867e:	d007      	beq.n	8008690 <net::net_handle()+0x2c>
 8008680:	f5b3 6fc1 	cmp.w	r3, #1544	@ 0x608
 8008684:	d007      	beq.n	8008696 <net::net_handle()+0x32>
 8008686:	f00a fe0b 	bl	80132a0 <emac_free_pkt()>
 800868a:	b003      	add	sp, #12
 800868c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008690:	f000 fc06 	bl	8008ea0 <net::ip_handle(t_ip4*)>
 8008694:	e7f7      	b.n	8008686 <net::net_handle()+0x22>
 8008696:	f000 fb79 	bl	8008d8c <net::arp_handle(t_arp*)>
 800869a:	e7f4      	b.n	8008686 <net::net_handle()+0x22>

0800869c <net::tcp_run()>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	4c11      	ldr	r4, [pc, #68]	@ (80086e4 <net::tcp_run()+0x48>)
 80086a0:	b085      	sub	sp, #20
 80086a2:	2711      	movs	r7, #17
 80086a4:	f504 75f0 	add.w	r5, r4, #480	@ 0x1e0
 80086a8:	2609      	movs	r6, #9
 80086aa:	e002      	b.n	80086b2 <net::tcp_run()+0x16>
 80086ac:	3450      	adds	r4, #80	@ 0x50
 80086ae:	42ac      	cmp	r4, r5
 80086b0:	d015      	beq.n	80086de <net::tcp_run()+0x42>
 80086b2:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 80086b6:	2b07      	cmp	r3, #7
 80086b8:	d1f8      	bne.n	80086ac <net::tcp_run()+0x10>
 80086ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086bc:	69a2      	ldr	r2, [r4, #24]
 80086be:	f88d 700c 	strb.w	r7, [sp, #12]
 80086c2:	4620      	mov	r0, r4
 80086c4:	a901      	add	r1, sp, #4
 80086c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086ca:	f009 ff0b 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 80086ce:	69a3      	ldr	r3, [r4, #24]
 80086d0:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
 80086d4:	3301      	adds	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	3450      	adds	r4, #80	@ 0x50
 80086da:	42ac      	cmp	r4, r5
 80086dc:	d1e9      	bne.n	80086b2 <net::tcp_run()+0x16>
 80086de:	b005      	add	sp, #20
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e2:	bf00      	nop
 80086e4:	100089a0 	andne	r8, r0, r0, lsr #19

080086e8 <net::tcp_handle(t_tcp*)>:
 80086e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ec:	4605      	mov	r5, r0
 80086ee:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80086f0:	8ca9      	ldrh	r1, [r5, #36]	@ 0x24
 80086f2:	4fb3      	ldr	r7, [pc, #716]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 80086f4:	f8b5 9010 	ldrh.w	r9, [r5, #16]
 80086f8:	ba49      	rev16	r1, r1
 80086fa:	ba40      	rev16	r0, r0
 80086fc:	8468      	strh	r0, [r5, #34]	@ 0x22
 80086fe:	84a9      	strh	r1, [r5, #36]	@ 0x24
 8008700:	f8b7 2d04 	ldrh.w	r2, [r7, #3332]	@ 0xd04
 8008704:	b28b      	uxth	r3, r1
 8008706:	429a      	cmp	r2, r3
 8008708:	b099      	sub	sp, #100	@ 0x64
 800870a:	d029      	beq.n	8008760 <net::tcp_handle(t_tcp*)+0x78>
 800870c:	f895 602e 	ldrb.w	r6, [r5, #46]	@ 0x2e
 8008710:	ab04      	add	r3, sp, #16
 8008712:	2400      	movs	r4, #0
 8008714:	f843 4b04 	str.w	r4, [r3], #4
 8008718:	aa18      	add	r2, sp, #96	@ 0x60
 800871a:	4293      	cmp	r3, r2
 800871c:	d1fa      	bne.n	8008714 <net::tcp_handle(t_tcp*)+0x2c>
 800871e:	f8d5 301a 	ldr.w	r3, [r5, #26]
 8008722:	f8d5 201e 	ldr.w	r2, [r5, #30]
 8008726:	f8ad 1018 	strh.w	r1, [sp, #24]
 800872a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800872e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008732:	1dab      	adds	r3, r5, #6
 8008734:	f105 040c 	add.w	r4, r5, #12
 8008738:	a907      	add	r1, sp, #28
 800873a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800873e:	f801 0b01 	strb.w	r0, [r1], #1
 8008742:	42a3      	cmp	r3, r4
 8008744:	d1f9      	bne.n	800873a <net::tcp_handle(t_tcp*)+0x52>
 8008746:	4628      	mov	r0, r5
 8008748:	f009 feac 	bl	80124a4 <net::_bswap32(t_tcp*)>
 800874c:	0932      	lsrs	r2, r6, #4
 800874e:	0092      	lsls	r2, r2, #2
 8008750:	a904      	add	r1, sp, #16
 8008752:	f009 ffb3 	bl	80126bc <net::scan_options(t_tcp*, net::tcb*, long)>
 8008756:	f009 ff7d 	bl	8012654 <net::send_reset(t_tcp*, net::tcb const*)>
 800875a:	b019      	add	sp, #100	@ 0x64
 800875c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008760:	f107 0a04 	add.w	sl, r7, #4
 8008764:	fa1f fe80 	uxth.w	lr, r0
 8008768:	4653      	mov	r3, sl
 800876a:	2400      	movs	r4, #0
 800876c:	e005      	b.n	800877a <net::tcp_handle(t_tcp*)+0x92>
 800876e:	3401      	adds	r4, #1
 8008770:	2c06      	cmp	r4, #6
 8008772:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 8008776:	f000 8088 	beq.w	800888a <net::tcp_handle(t_tcp*)+0x1a2>
 800877a:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800877e:	2a01      	cmp	r2, #1
 8008780:	d0f5      	beq.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008782:	88da      	ldrh	r2, [r3, #6]
 8008784:	4572      	cmp	r2, lr
 8008786:	d1f2      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008788:	1e5a      	subs	r2, r3, #1
 800878a:	f105 0119 	add.w	r1, r5, #25
 800878e:	f103 0c03 	add.w	ip, r3, #3
 8008792:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8008796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800879a:	4286      	cmp	r6, r0
 800879c:	d1e7      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 800879e:	4562      	cmp	r2, ip
 80087a0:	d1f7      	bne.n	8008792 <net::tcp_handle(t_tcp*)+0xaa>
 80087a2:	f895 802e 	ldrb.w	r8, [r5, #46]	@ 0x2e
 80087a6:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80087aa:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80087ae:	4628      	mov	r0, r5
 80087b0:	9300      	str	r3, [sp, #0]
 80087b2:	f009 fe77 	bl	80124a4 <net::_bswap32(t_tcp*)>
 80087b6:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80087b8:	9a00      	ldr	r2, [sp, #0]
 80087ba:	ba5b      	rev16	r3, r3
 80087bc:	862b      	strh	r3, [r5, #48]	@ 0x30
 80087be:	b29b      	uxth	r3, r3
 80087c0:	9303      	str	r3, [sp, #12]
 80087c2:	8eab      	ldrh	r3, [r5, #52]	@ 0x34
 80087c4:	ba5b      	rev16	r3, r3
 80087c6:	86ab      	strh	r3, [r5, #52]	@ 0x34
 80087c8:	f105 032a 	add.w	r3, r5, #42	@ 0x2a
 80087cc:	079b      	lsls	r3, r3, #30
 80087ce:	bf0c      	ite	eq
 80087d0:	f8d5 302a 	ldreq.w	r3, [r5, #42]	@ 0x2a
 80087d4:	f8d5 302a 	ldrne.w	r3, [r5, #42]	@ 0x2a
 80087d8:	9301      	str	r3, [sp, #4]
 80087da:	f105 0326 	add.w	r3, r5, #38	@ 0x26
 80087de:	079e      	lsls	r6, r3, #30
 80087e0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 80087e4:	eb07 1603 	add.w	r6, r7, r3, lsl #4
 80087e8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80087ec:	4631      	mov	r1, r6
 80087ee:	ea4f 0384 	mov.w	r3, r4, lsl #2
 80087f2:	bf0c      	ite	eq
 80087f4:	f8d5 b026 	ldreq.w	fp, [r5, #38]	@ 0x26
 80087f8:	f8d5 b026 	ldrne.w	fp, [r5, #38]	@ 0x26
 80087fc:	9302      	str	r3, [sp, #8]
 80087fe:	f009 ff5d 	bl	80126bc <net::scan_options(t_tcp*, net::tcb*, long)>
 8008802:	f896 204c 	ldrb.w	r2, [r6, #76]	@ 0x4c
 8008806:	2a01      	cmp	r2, #1
 8008808:	d04c      	beq.n	80088a4 <net::tcp_handle(t_tcp*)+0x1bc>
 800880a:	1ed3      	subs	r3, r2, #3
 800880c:	2b07      	cmp	r3, #7
 800880e:	d8a4      	bhi.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008810:	9b00      	ldr	r3, [sp, #0]
 8008812:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 8008816:	33ec      	adds	r3, #236	@ 0xec
 8008818:	fa99 f999 	rev16.w	r9, r9
 800881c:	fa13 f989 	uxtah	r9, r3, r9
 8008820:	f8b6 3044 	ldrh.w	r3, [r6, #68]	@ 0x44
 8008824:	fa1f f989 	uxth.w	r9, r9
 8008828:	2b00      	cmp	r3, #0
 800882a:	d077      	beq.n	800891c <net::tcp_handle(t_tcp*)+0x234>
 800882c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 800882e:	eba1 000b 	sub.w	r0, r1, fp
 8008832:	f1b9 0f00 	cmp.w	r9, #0
 8008836:	f040 8085 	bne.w	8008944 <net::tcp_handle(t_tcp*)+0x25c>
 800883a:	2800      	cmp	r0, #0
 800883c:	f340 80b8 	ble.w	80089b0 <net::tcp_handle(t_tcp*)+0x2c8>
 8008840:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 8008844:	f013 0f04 	tst.w	r3, #4
 8008848:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800884c:	4423      	add	r3, r4
 800884e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008852:	d06a      	beq.n	800892a <net::tcp_handle(t_tcp*)+0x242>
 8008854:	891d      	ldrh	r5, [r3, #8]
 8008856:	2200      	movs	r2, #0
 8008858:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 800885c:	f846 2b04 	str.w	r2, [r6], #4
 8008860:	42b3      	cmp	r3, r6
 8008862:	d1fb      	bne.n	800885c <net::tcp_handle(t_tcp*)+0x174>
 8008864:	9b02      	ldr	r3, [sp, #8]
 8008866:	4a57      	ldr	r2, [pc, #348]	@ (80089c4 <net::tcp_handle(t_tcp*)+0x2dc>)
 8008868:	4423      	add	r3, r4
 800886a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800886e:	6812      	ldr	r2, [r2, #0]
 8008870:	811d      	strh	r5, [r3, #8]
 8008872:	f640 3018 	movw	r0, #2840	@ 0xb18
 8008876:	2101      	movs	r1, #1
 8008878:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800887c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800887e:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 8008882:	629a      	str	r2, [r3, #40]	@ 0x28
 8008884:	f883 104c 	strb.w	r1, [r3, #76]	@ 0x4c
 8008888:	e767      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800888a:	4b4d      	ldr	r3, [pc, #308]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 800888c:	2400      	movs	r4, #0
 800888e:	e002      	b.n	8008896 <net::tcp_handle(t_tcp*)+0x1ae>
 8008890:	3401      	adds	r4, #1
 8008892:	2c06      	cmp	r4, #6
 8008894:	d085      	beq.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 8008896:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
 800889a:	2a01      	cmp	r2, #1
 800889c:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 80088a0:	d1f6      	bne.n	8008890 <net::tcp_handle(t_tcp*)+0x1a8>
 80088a2:	e77e      	b.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 80088a4:	f8d5 201e 	ldr.w	r2, [r5, #30]
 80088a8:	f847 2008 	str.w	r2, [r7, r8]
 80088ac:	8c69      	ldrh	r1, [r5, #34]	@ 0x22
 80088ae:	8171      	strh	r1, [r6, #10]
 80088b0:	f8d5 101a 	ldr.w	r1, [r5, #26]
 80088b4:	f84a 1008 	str.w	r1, [sl, r8]
 80088b8:	f108 020c 	add.w	r2, r8, #12
 80088bc:	443a      	add	r2, r7
 80088be:	1dab      	adds	r3, r5, #6
 80088c0:	f105 000c 	add.w	r0, r5, #12
 80088c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 80088c8:	f802 1b01 	strb.w	r1, [r2], #1
 80088cc:	4283      	cmp	r3, r0
 80088ce:	d1f9      	bne.n	80088c4 <net::tcp_handle(t_tcp*)+0x1dc>
 80088d0:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 80088d4:	0758      	lsls	r0, r3, #29
 80088d6:	f53f af40 	bmi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088da:	06d9      	lsls	r1, r3, #27
 80088dc:	f100 8135 	bmi.w	8008b4a <net::tcp_handle(t_tcp*)+0x462>
 80088e0:	079a      	lsls	r2, r3, #30
 80088e2:	f57f af3a 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088e6:	9b02      	ldr	r3, [sp, #8]
 80088e8:	4423      	add	r3, r4
 80088ea:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 80088ee:	2212      	movs	r2, #18
 80088f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088f2:	9104      	str	r1, [sp, #16]
 80088f4:	f10b 0301 	add.w	r3, fp, #1
 80088f8:	4630      	mov	r0, r6
 80088fa:	a904      	add	r1, sp, #16
 80088fc:	6423      	str	r3, [r4, #64]	@ 0x40
 80088fe:	9305      	str	r3, [sp, #20]
 8008900:	f88d 2018 	strb.w	r2, [sp, #24]
 8008904:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
 8008908:	f009 fdec 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800890c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800890e:	6163      	str	r3, [r4, #20]
 8008910:	2203      	movs	r2, #3
 8008912:	3301      	adds	r3, #1
 8008914:	61a3      	str	r3, [r4, #24]
 8008916:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
 800891a:	e71e      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d18e      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008922:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8008924:	455b      	cmp	r3, fp
 8008926:	d18b      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008928:	e01f      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 800892a:	6999      	ldr	r1, [r3, #24]
 800892c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800892e:	9305      	str	r3, [sp, #20]
 8008930:	2210      	movs	r2, #16
 8008932:	9104      	str	r1, [sp, #16]
 8008934:	4630      	mov	r0, r6
 8008936:	eb0d 0102 	add.w	r1, sp, r2
 800893a:	f88d 2018 	strb.w	r2, [sp, #24]
 800893e:	f009 fdd1 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008942:	e70a      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008944:	2800      	cmp	r0, #0
 8008946:	440b      	add	r3, r1
 8008948:	dd0b      	ble.n	8008962 <net::tcp_handle(t_tcp*)+0x27a>
 800894a:	f10b 30ff 	add.w	r0, fp, #4294967295	@ 0xffffffff
 800894e:	4448      	add	r0, r9
 8008950:	1a09      	subs	r1, r1, r0
 8008952:	2900      	cmp	r1, #0
 8008954:	f73f af74 	bgt.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008958:	1ac0      	subs	r0, r0, r3
 800895a:	2800      	cmp	r0, #0
 800895c:	f6bf af70 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008960:	e003      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 8008962:	ebab 0003 	sub.w	r0, fp, r3
 8008966:	2800      	cmp	r0, #0
 8008968:	daef      	bge.n	800894a <net::tcp_handle(t_tcp*)+0x262>
 800896a:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800896e:	f011 0004 	ands.w	r0, r1, #4
 8008972:	f040 80f1 	bne.w	8008b58 <net::tcp_handle(t_tcp*)+0x470>
 8008976:	078b      	lsls	r3, r1, #30
 8008978:	d508      	bpl.n	800898c <net::tcp_handle(t_tcp*)+0x2a4>
 800897a:	2a03      	cmp	r2, #3
 800897c:	f000 811f 	beq.w	8008bbe <net::tcp_handle(t_tcp*)+0x4d6>
 8008980:	4631      	mov	r1, r6
 8008982:	4628      	mov	r0, r5
 8008984:	f009 fe66 	bl	8012654 <net::send_reset(t_tcp*, net::tcb const*)>
 8008988:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800898c:	06c8      	lsls	r0, r1, #27
 800898e:	f57f aee4 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008992:	00a3      	lsls	r3, r4, #2
 8008994:	4423      	add	r3, r4
 8008996:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800899a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800899e:	1eda      	subs	r2, r3, #3
 80089a0:	2a07      	cmp	r2, #7
 80089a2:	d87f      	bhi.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 80089a4:	e8df f002 	tbb	[pc, r2]
 80089a8:	10101066 	andsne	r1, r0, r6, rrx
 80089ac:	b8a71010 	stmialt	r7!, {r4, ip}
 80089b0:	440b      	add	r3, r1
 80089b2:	ebab 0303 	sub.w	r3, fp, r3
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	f6bf af42 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 80089bc:	e7d5      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 80089be:	bf00      	nop
 80089c0:	100089a0 	andne	r8, r0, r0, lsr #19
 80089c4:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80089c8:	00a2      	lsls	r2, r4, #2
 80089ca:	1911      	adds	r1, r2, r4
 80089cc:	eb07 1101 	add.w	r1, r7, r1, lsl #4
 80089d0:	e9d1 c205 	ldrd	ip, r2, [r1, #20]
 80089d4:	9801      	ldr	r0, [sp, #4]
 80089d6:	ebbc 0e00 	subs.w	lr, ip, r0
 80089da:	f100 80fc 	bmi.w	8008bd6 <net::tcp_handle(t_tcp*)+0x4ee>
 80089de:	9801      	ldr	r0, [sp, #4]
 80089e0:	eba0 0c0c 	sub.w	ip, r0, ip
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	f340 810d 	ble.w	8008c06 <net::tcp_handle(t_tcp*)+0x51e>
 80089ec:	9901      	ldr	r1, [sp, #4]
 80089ee:	1a89      	subs	r1, r1, r2
 80089f0:	2900      	cmp	r1, #0
 80089f2:	f300 80fa 	bgt.w	8008bea <net::tcp_handle(t_tcp*)+0x502>
 80089f6:	3b04      	subs	r3, #4
 80089f8:	2b02      	cmp	r3, #2
 80089fa:	d856      	bhi.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 80089fc:	f1b9 0f00 	cmp.w	r9, #0
 8008a00:	d053      	beq.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 8008a02:	00a3      	lsls	r3, r4, #2
 8008a04:	4423      	add	r3, r4
 8008a06:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008a0c:	455a      	cmp	r2, fp
 8008a0e:	f040 816c 	bne.w	8008cea <net::tcp_handle(t_tcp*)+0x602>
 8008a12:	f8b7 01e0 	ldrh.w	r0, [r7, #480]	@ 0x1e0
 8008a16:	9900      	ldr	r1, [sp, #0]
 8008a18:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008a1c:	fb00 f303 	mul.w	r3, r0, r3
 8008a20:	18fa      	adds	r2, r7, r3
 8008a22:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8008a26:	f8a2 4772 	strh.w	r4, [r2, #1906]	@ 0x772
 8008a2a:	19da      	adds	r2, r3, r7
 8008a2c:	f105 0322 	add.w	r3, r5, #34	@ 0x22
 8008a30:	4419      	add	r1, r3
 8008a32:	079b      	lsls	r3, r3, #30
 8008a34:	4688      	mov	r8, r1
 8008a36:	f040 8122 	bne.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a3a:	f1b9 0f03 	cmp.w	r9, #3
 8008a3e:	f240 811e 	bls.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a42:	f1a9 0304 	sub.w	r3, r9, #4
 8008a46:	089b      	lsrs	r3, r3, #2
 8008a48:	1c59      	adds	r1, r3, #1
 8008a4a:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 8008a4e:	4694      	mov	ip, r2
 8008a50:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8008a54:	f858 eb04 	ldr.w	lr, [r8], #4
 8008a58:	f84c eb04 	str.w	lr, [ip], #4
 8008a5c:	4588      	cmp	r8, r1
 8008a5e:	d1f9      	bne.n	8008a54 <net::tcp_handle(t_tcp*)+0x36c>
 8008a60:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 8008a64:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8008a68:	2b04      	cmp	r3, #4
 8008a6a:	f000 8112 	beq.w	8008c92 <net::tcp_handle(t_tcp*)+0x5aa>
 8008a6e:	4452      	add	r2, sl
 8008a70:	3b05      	subs	r3, #5
 8008a72:	e106      	b.n	8008c82 <net::tcp_handle(t_tcp*)+0x59a>
 8008a74:	00a3      	lsls	r3, r4, #2
 8008a76:	4423      	add	r3, r4
 8008a78:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a7c:	9801      	ldr	r0, [sp, #4]
 8008a7e:	695a      	ldr	r2, [r3, #20]
 8008a80:	1a11      	subs	r1, r2, r0
 8008a82:	2900      	cmp	r1, #0
 8008a84:	699a      	ldr	r2, [r3, #24]
 8008a86:	f340 80eb 	ble.w	8008c60 <net::tcp_handle(t_tcp*)+0x578>
 8008a8a:	4631      	mov	r1, r6
 8008a8c:	4628      	mov	r0, r5
 8008a8e:	f009 fde1 	bl	8012654 <net::send_reset(t_tcp*, net::tcb const*)>
 8008a92:	00a3      	lsls	r3, r4, #2
 8008a94:	4423      	add	r3, r4
 8008a96:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a9a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8008a9e:	1f1a      	subs	r2, r3, #4
 8008aa0:	2a02      	cmp	r2, #2
 8008aa2:	d9ab      	bls.n	80089fc <net::tcp_handle(t_tcp*)+0x314>
 8008aa4:	2b02      	cmp	r3, #2
 8008aa6:	f67f ae58 	bls.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aaa:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 8008aae:	07ca      	lsls	r2, r1, #31
 8008ab0:	f57f ae53 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	4423      	add	r3, r4
 8008ab8:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 8008abc:	4630      	mov	r0, r6
 8008abe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ac0:	69a2      	ldr	r2, [r4, #24]
 8008ac2:	9204      	str	r2, [sp, #16]
 8008ac4:	2210      	movs	r2, #16
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	eb0d 0102 	add.w	r1, sp, r2
 8008acc:	6423      	str	r3, [r4, #64]	@ 0x40
 8008ace:	9305      	str	r3, [sp, #20]
 8008ad0:	f88d 2018 	strb.w	r2, [sp, #24]
 8008ad4:	f009 fd06 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008ad8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 8008adc:	2b05      	cmp	r3, #5
 8008ade:	f000 80b9 	beq.w	8008c54 <net::tcp_handle(t_tcp*)+0x56c>
 8008ae2:	f200 80b2 	bhi.w	8008c4a <net::tcp_handle(t_tcp*)+0x562>
 8008ae6:	3b03      	subs	r3, #3
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	f63f ae36 	bhi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aee:	2307      	movs	r3, #7
 8008af0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 8008af4:	e631      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008af6:	00a3      	lsls	r3, r4, #2
 8008af8:	4423      	add	r3, r4
 8008afa:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008afe:	9801      	ldr	r0, [sp, #4]
 8008b00:	699a      	ldr	r2, [r3, #24]
 8008b02:	4282      	cmp	r2, r0
 8008b04:	d1d3      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b06:	891d      	ldrh	r5, [r3, #8]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b0e:	f846 2b04 	str.w	r2, [r6], #4
 8008b12:	42b3      	cmp	r3, r6
 8008b14:	d1fb      	bne.n	8008b0e <net::tcp_handle(t_tcp*)+0x426>
 8008b16:	e6a5      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008b18:	00a3      	lsls	r3, r4, #2
 8008b1a:	eb03 0a04 	add.w	sl, r3, r4
 8008b1e:	eb07 1a0a 	add.w	sl, r7, sl, lsl #4
 8008b22:	9a01      	ldr	r2, [sp, #4]
 8008b24:	f8da 3018 	ldr.w	r3, [sl, #24]
 8008b28:	4293      	cmp	r3, r2
 8008b2a:	d1c0      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b2c:	f8da 3040 	ldr.w	r3, [sl, #64]	@ 0x40
 8008b30:	9305      	str	r3, [sp, #20]
 8008b32:	2310      	movs	r3, #16
 8008b34:	eb0d 0103 	add.w	r1, sp, r3
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f88d 3018 	strb.w	r3, [sp, #24]
 8008b3e:	9204      	str	r2, [sp, #16]
 8008b40:	f009 fcd0 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008b44:	f89a 304c 	ldrb.w	r3, [sl, #76]	@ 0x4c
 8008b48:	e7a9      	b.n	8008a9e <net::tcp_handle(t_tcp*)+0x3b6>
 8008b4a:	4631      	mov	r1, r6
 8008b4c:	4628      	mov	r0, r5
 8008b4e:	b019      	add	sp, #100	@ 0x64
 8008b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b54:	f009 bd7e 	b.w	8012654 <net::send_reset(t_tcp*, net::tcb const*)>
 8008b58:	00a3      	lsls	r3, r4, #2
 8008b5a:	4423      	add	r3, r4
 8008b5c:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b60:	2a07      	cmp	r2, #7
 8008b62:	8919      	ldrh	r1, [r3, #8]
 8008b64:	d81b      	bhi.n	8008b9e <net::tcp_handle(t_tcp*)+0x4b6>
 8008b66:	2a03      	cmp	r2, #3
 8008b68:	d021      	beq.n	8008bae <net::tcp_handle(t_tcp*)+0x4c6>
 8008b6a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b6e:	2200      	movs	r2, #0
 8008b70:	f846 2b04 	str.w	r2, [r6], #4
 8008b74:	42b3      	cmp	r3, r6
 8008b76:	d1fb      	bne.n	8008b70 <net::tcp_handle(t_tcp*)+0x488>
 8008b78:	9b02      	ldr	r3, [sp, #8]
 8008b7a:	4a62      	ldr	r2, [pc, #392]	@ (8008d04 <net::tcp_handle(t_tcp*)+0x61c>)
 8008b7c:	4423      	add	r3, r4
 8008b7e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b82:	6812      	ldr	r2, [r2, #0]
 8008b84:	8119      	strh	r1, [r3, #8]
 8008b86:	f640 3418 	movw	r4, #2840	@ 0xb18
 8008b8a:	2001      	movs	r0, #1
 8008b8c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008b90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008b92:	f8a3 4044 	strh.w	r4, [r3, #68]	@ 0x44
 8008b96:	629a      	str	r2, [r3, #40]	@ 0x28
 8008b98:	f883 004c 	strb.w	r0, [r3, #76]	@ 0x4c
 8008b9c:	e5dd      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008b9e:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f846 2b04 	str.w	r2, [r6], #4
 8008ba8:	429e      	cmp	r6, r3
 8008baa:	d1fb      	bne.n	8008ba4 <net::tcp_handle(t_tcp*)+0x4bc>
 8008bac:	e7e4      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bae:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	f846 2b04 	str.w	r2, [r6], #4
 8008bb8:	42b3      	cmp	r3, r6
 8008bba:	d1fb      	bne.n	8008bb4 <net::tcp_handle(t_tcp*)+0x4cc>
 8008bbc:	e7dc      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bbe:	00a3      	lsls	r3, r4, #2
 8008bc0:	4423      	add	r3, r4
 8008bc2:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bc6:	891d      	ldrh	r5, [r3, #8]
 8008bc8:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bcc:	f846 0b04 	str.w	r0, [r6], #4
 8008bd0:	429e      	cmp	r6, r3
 8008bd2:	d1fb      	bne.n	8008bcc <net::tcp_handle(t_tcp*)+0x4e4>
 8008bd4:	e646      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008bd6:	1a80      	subs	r0, r0, r2
 8008bd8:	2800      	cmp	r0, #0
 8008bda:	f340 8090 	ble.w	8008cfe <net::tcp_handle(t_tcp*)+0x616>
 8008bde:	9801      	ldr	r0, [sp, #4]
 8008be0:	eba0 010c 	sub.w	r1, r0, ip
 8008be4:	2900      	cmp	r1, #0
 8008be6:	f77f af06 	ble.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008bea:	00a3      	lsls	r3, r4, #2
 8008bec:	4423      	add	r3, r4
 8008bee:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bf2:	2410      	movs	r4, #16
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008bf6:	f88d 4018 	strb.w	r4, [sp, #24]
 8008bfa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008bfe:	eb0d 0104 	add.w	r1, sp, r4
 8008c02:	4630      	mov	r0, r6
 8008c04:	e69b      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008c06:	f1be 0f00 	cmp.w	lr, #0
 8008c0a:	f47f aef4 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c0e:	9801      	ldr	r0, [sp, #4]
 8008c10:	1a82      	subs	r2, r0, r2
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	f73f aeef 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c18:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8008c1a:	eba2 000b 	sub.w	r0, r2, fp
 8008c1e:	2800      	cmp	r0, #0
 8008c20:	db08      	blt.n	8008c34 <net::tcp_handle(t_tcp*)+0x54c>
 8008c22:	455a      	cmp	r2, fp
 8008c24:	f47f aee7 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c28:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 8008c2a:	9901      	ldr	r1, [sp, #4]
 8008c2c:	1a52      	subs	r2, r2, r1
 8008c2e:	2a00      	cmp	r2, #0
 8008c30:	f73f aee1 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c34:	00a2      	lsls	r2, r4, #2
 8008c36:	4422      	add	r2, r4
 8008c38:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008c3c:	9903      	ldr	r1, [sp, #12]
 8008c3e:	61d1      	str	r1, [r2, #28]
 8008c40:	9901      	ldr	r1, [sp, #4]
 8008c42:	f8c2 b024 	str.w	fp, [r2, #36]	@ 0x24
 8008c46:	6291      	str	r1, [r2, #40]	@ 0x28
 8008c48:	e6d5      	b.n	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c4a:	2b06      	cmp	r3, #6
 8008c4c:	f47f ad85 	bne.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c50:	230a      	movs	r3, #10
 8008c52:	e74d      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c54:	69a3      	ldr	r3, [r4, #24]
 8008c56:	9a01      	ldr	r2, [sp, #4]
 8008c58:	4293      	cmp	r3, r2
 8008c5a:	d0f9      	beq.n	8008c50 <net::tcp_handle(t_tcp*)+0x568>
 8008c5c:	2308      	movs	r3, #8
 8008c5e:	e747      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c60:	1a82      	subs	r2, r0, r2
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	f73f af11 	bgt.w	8008a8a <net::tcp_handle(t_tcp*)+0x3a2>
 8008c68:	9903      	ldr	r1, [sp, #12]
 8008c6a:	61d9      	str	r1, [r3, #28]
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	9901      	ldr	r1, [sp, #4]
 8008c70:	f8c3 b024 	str.w	fp, [r3, #36]	@ 0x24
 8008c74:	6299      	str	r1, [r3, #40]	@ 0x28
 8008c76:	6159      	str	r1, [r3, #20]
 8008c78:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008c7c:	e56d      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c7e:	f109 33ff 	add.w	r3, r9, #4294967295	@ 0xffffffff
 8008c82:	3301      	adds	r3, #1
 8008c84:	4443      	add	r3, r8
 8008c86:	f818 1b01 	ldrb.w	r1, [r8], #1
 8008c8a:	f802 1b01 	strb.w	r1, [r2], #1
 8008c8e:	4543      	cmp	r3, r8
 8008c90:	d1f9      	bne.n	8008c86 <net::tcp_handle(t_tcp*)+0x59e>
 8008c92:	9b02      	ldr	r3, [sp, #8]
 8008c94:	eb03 0804 	add.w	r8, r3, r4
 8008c98:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008c9c:	eb07 1808 	add.w	r8, r7, r8, lsl #4
 8008ca0:	fb03 7300 	mla	r3, r3, r0, r7
 8008ca4:	4630      	mov	r0, r6
 8008ca6:	f8a3 9770 	strh.w	r9, [r3, #1904]	@ 0x770
 8008caa:	f8d8 3040 	ldr.w	r3, [r8, #64]	@ 0x40
 8008cae:	444b      	add	r3, r9
 8008cb0:	f8c8 3040 	str.w	r3, [r8, #64]	@ 0x40
 8008cb4:	9305      	str	r3, [sp, #20]
 8008cb6:	f8b8 3044 	ldrh.w	r3, [r8, #68]	@ 0x44
 8008cba:	f2a3 538c 	subw	r3, r3, #1420	@ 0x58c
 8008cbe:	f8a8 3044 	strh.w	r3, [r8, #68]	@ 0x44
 8008cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8008cc6:	9304      	str	r3, [sp, #16]
 8008cc8:	2310      	movs	r3, #16
 8008cca:	eb0d 0103 	add.w	r1, sp, r3
 8008cce:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cd2:	f009 fc07 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008cd6:	f8b7 21e0 	ldrh.w	r2, [r7, #480]	@ 0x1e0
 8008cda:	f898 304c 	ldrb.w	r3, [r8, #76]	@ 0x4c
 8008cde:	3201      	adds	r2, #1
 8008ce0:	f002 0201 	and.w	r2, r2, #1
 8008ce4:	f8a7 21e0 	strh.w	r2, [r7, #480]	@ 0x1e0
 8008ce8:	e6dc      	b.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 8008cea:	699c      	ldr	r4, [r3, #24]
 8008cec:	2310      	movs	r3, #16
 8008cee:	e9cd 4204 	strd	r4, r2, [sp, #16]
 8008cf2:	eb0d 0103 	add.w	r1, sp, r3
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cfc:	e61f      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008cfe:	9a01      	ldr	r2, [sp, #4]
 8008d00:	614a      	str	r2, [r1, #20]
 8008d02:	e789      	b.n	8008c18 <net::tcp_handle(t_tcp*)+0x530>
 8008d04:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

08008d08 <net::udp_handle(t_udp*)>:
 8008d08:	f8b0 c024 	ldrh.w	ip, [r0, #36]	@ 0x24
 8008d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8008d84 <net::udp_handle(t_udp*)+0x7c>)
 8008d0e:	fa9c fc9c 	rev16.w	ip, ip
 8008d12:	2300      	movs	r3, #0
 8008d14:	fa1f fc8c 	uxth.w	ip, ip
 8008d18:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8008d1c:	4561      	cmp	r1, ip
 8008d1e:	d003      	beq.n	8008d28 <net::udp_handle(t_udp*)+0x20>
 8008d20:	3301      	adds	r3, #1
 8008d22:	2b08      	cmp	r3, #8
 8008d24:	d1f8      	bne.n	8008d18 <net::udp_handle(t_udp*)+0x10>
 8008d26:	4770      	bx	lr
 8008d28:	8cc1      	ldrh	r1, [r0, #38]	@ 0x26
 8008d2a:	b530      	push	{r4, r5, lr}
 8008d2c:	ba4c      	rev16	r4, r1
 8008d2e:	3c08      	subs	r4, #8
 8008d30:	b2a4      	uxth	r4, r4
 8008d32:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d36:	fa1f fc81 	uxth.w	ip, r1
 8008d3a:	f5b4 6fb8 	cmp.w	r4, #1472	@ 0x5c0
 8008d3e:	4d12      	ldr	r5, [pc, #72]	@ (8008d88 <net::udp_handle(t_udp*)+0x80>)
 8008d40:	fb03 f202 	mul.w	r2, r3, r2
 8008d44:	f102 020a 	add.w	r2, r2, #10
 8008d48:	bf28      	it	cs
 8008d4a:	f44f 64b8 	movcs.w	r4, #1472	@ 0x5c0
 8008d4e:	f5bc 6f00 	cmp.w	ip, #2048	@ 0x800
 8008d52:	442a      	add	r2, r5
 8008d54:	f100 012a 	add.w	r1, r0, #42	@ 0x2a
 8008d58:	d007      	beq.n	8008d6a <net::udp_handle(t_udp*)+0x62>
 8008d5a:	eb02 0e04 	add.w	lr, r2, r4
 8008d5e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008d62:	f802 cb01 	strb.w	ip, [r2], #1
 8008d66:	4572      	cmp	r2, lr
 8008d68:	d1f9      	bne.n	8008d5e <net::udp_handle(t_udp*)+0x56>
 8008d6a:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d6e:	fb02 f303 	mul.w	r3, r2, r3
 8008d72:	f8d0 101a 	ldr.w	r1, [r0, #26]
 8008d76:	50e9      	str	r1, [r5, r3]
 8008d78:	18ea      	adds	r2, r5, r3
 8008d7a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
 8008d7c:	6054      	str	r4, [r2, #4]
 8008d7e:	ba5b      	rev16	r3, r3
 8008d80:	8113      	strh	r3, [r2, #8]
 8008d82:	bd30      	pop	{r4, r5, pc}
 8008d84:	1000cafe 	strdne	ip, [r0], -lr
 8008d88:	10009ca0 	andne	r9, r0, r0, lsr #25

08008d8c <net::arp_handle(t_arp*)>:
 8008d8c:	89c3      	ldrh	r3, [r0, #14]
 8008d8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008d92:	d17e      	bne.n	8008e92 <net::arp_handle(t_arp*)+0x106>
 8008d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d98:	8a03      	ldrh	r3, [r0, #16]
 8008d9a:	2b08      	cmp	r3, #8
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	d172      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da0:	7c83      	ldrb	r3, [r0, #18]
 8008da2:	2b06      	cmp	r3, #6
 8008da4:	d16f      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da6:	7cc3      	ldrb	r3, [r0, #19]
 8008da8:	2b04      	cmp	r3, #4
 8008daa:	d16c      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008dac:	f00a fbbe 	bl	801352c <net::acd_arp_reply(t_arp*)>
 8008db0:	4a38      	ldr	r2, [pc, #224]	@ (8008e94 <net::arp_handle(t_arp*)+0x108>)
 8008db2:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 8008db6:	6817      	ldr	r7, [r2, #0]
 8008db8:	429f      	cmp	r7, r3
 8008dba:	d066      	beq.n	8008e8a <net::arp_handle(t_arp*)+0xfe>
 8008dbc:	6912      	ldr	r2, [r2, #16]
 8008dbe:	429a      	cmp	r2, r3
 8008dc0:	bf0d      	iteet	eq
 8008dc2:	f04f 0801 	moveq.w	r8, #1
 8008dc6:	f04f 0800 	movne.w	r8, #0
 8008dca:	2101      	movne	r1, #1
 8008dcc:	2100      	moveq	r1, #0
 8008dce:	69e6      	ldr	r6, [r4, #28]
 8008dd0:	4630      	mov	r0, r6
 8008dd2:	f00a fc31 	bl	8013638 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8008dd6:	f104 091c 	add.w	r9, r4, #28
 8008dda:	f104 0a16 	add.w	sl, r4, #22
 8008dde:	4605      	mov	r5, r0
 8008de0:	b350      	cbz	r0, 8008e38 <net::arp_handle(t_arp*)+0xac>
 8008de2:	2302      	movs	r3, #2
 8008de4:	6143      	str	r3, [r0, #20]
 8008de6:	f100 020c 	add.w	r2, r0, #12
 8008dea:	2300      	movs	r3, #0
 8008dec:	8243      	strh	r3, [r0, #18]
 8008dee:	4611      	mov	r1, r2
 8008df0:	4653      	mov	r3, sl
 8008df2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008df6:	f801 0b01 	strb.w	r0, [r1], #1
 8008dfa:	4599      	cmp	r9, r3
 8008dfc:	d1f9      	bne.n	8008df2 <net::arp_handle(t_arp*)+0x66>
 8008dfe:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008e02:	f1bc 0f00 	cmp.w	ip, #0
 8008e06:	d017      	beq.n	8008e38 <net::arp_handle(t_arp*)+0xac>
 8008e08:	4663      	mov	r3, ip
 8008e0a:	f105 0012 	add.w	r0, r5, #18
 8008e0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e12:	f803 1b01 	strb.w	r1, [r3], #1
 8008e16:	4282      	cmp	r2, r0
 8008e18:	d1f9      	bne.n	8008e0e <net::arp_handle(t_arp*)+0x82>
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8008e20:	f88c 3018 	strb.w	r3, [ip, #24]
 8008e24:	f88c 3019 	strb.w	r3, [ip, #25]
 8008e28:	f00a fa5a 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 8008e2c:	6868      	ldr	r0, [r5, #4]
 8008e2e:	b108      	cbz	r0, 8008e34 <net::arp_handle(t_arp*)+0xa8>
 8008e30:	f00f f986 	bl	8018140 <operator delete[](void*)>
 8008e34:	2300      	movs	r3, #0
 8008e36:	606b      	str	r3, [r5, #4]
 8008e38:	8aa3      	ldrh	r3, [r4, #20]
 8008e3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e3e:	d122      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e40:	f1b8 0f00 	cmp.w	r8, #0
 8008e44:	d01f      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e46:	42b7      	cmp	r7, r6
 8008e48:	d01d      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e4a:	4d13      	ldr	r5, [pc, #76]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e4c:	1da3      	adds	r3, r4, #6
 8008e4e:	f104 000c 	add.w	r0, r4, #12
 8008e52:	462a      	mov	r2, r5
 8008e54:	f813 1b01 	ldrb.w	r1, [r3], #1
 8008e58:	f802 1b01 	strb.w	r1, [r2], #1
 8008e5c:	4283      	cmp	r3, r0
 8008e5e:	d1f9      	bne.n	8008e54 <net::arp_handle(t_arp*)+0xc8>
 8008e60:	f8d4 6026 	ldr.w	r6, [r4, #38]	@ 0x26
 8008e64:	4b0d      	ldr	r3, [pc, #52]	@ (8008e9c <net::arp_handle(t_arp*)+0x110>)
 8008e66:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008e6a:	f803 2b01 	strb.w	r2, [r3], #1
 8008e6e:	45d1      	cmp	r9, sl
 8008e70:	d1f9      	bne.n	8008e66 <net::arp_handle(t_arp*)+0xda>
 8008e72:	69e3      	ldr	r3, [r4, #28]
 8008e74:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8008e78:	61ee      	str	r6, [r5, #28]
 8008e7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e7e:	4806      	ldr	r0, [pc, #24]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e80:	213c      	movs	r1, #60	@ 0x3c
 8008e82:	f00a ba2d 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8008e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	f04f 0801 	mov.w	r8, #1
 8008e90:	e79d      	b.n	8008dce <net::arp_handle(t_arp*)+0x42>
 8008e92:	4770      	bx	lr
 8008e94:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8008e98:	2000cc40 	andcs	ip, r0, r0, asr #24
 8008e9c:	2000cc60 	andcs	ip, r0, r0, ror #24

08008ea0 <net::ip_handle(t_ip4*)>:
 8008ea0:	7b81      	ldrb	r1, [r0, #14]
 8008ea2:	7dc2      	ldrb	r2, [r0, #23]
 8008ea4:	2945      	cmp	r1, #69	@ 0x45
 8008ea6:	d121      	bne.n	8008eec <net::ip_handle(t_ip4*)+0x4c>
 8008ea8:	3a01      	subs	r2, #1
 8008eaa:	b508      	push	{r3, lr}
 8008eac:	2a10      	cmp	r2, #16
 8008eae:	d80a      	bhi.n	8008ec6 <net::ip_handle(t_ip4*)+0x26>
 8008eb0:	e8df f002 	tbb	[pc, r2]
 8008eb4:	0909120e 	stmdbeq	r9, {r1, r2, r3, r9, ip}
 8008eb8:	09091609 	stmdbeq	r9, {r0, r3, r9, sl, ip}
 8008ebc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec4:	bd08000a 	stclt	0, cr0, [r8, #-40]	@ 0xffffffd8
 8008ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ecc:	f7ff bf1c 	b.w	8008d08 <net::udp_handle(t_udp*)>
 8008ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ed4:	f000 b80e 	b.w	8008ef4 <net::icmp_handle(t_icmp*)>
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008edc:	f7ff bb6c 	b.w	80085b8 <net::igmp_handle(t_igmp*)>
 8008ee0:	f7ff fc02 	bl	80086e8 <net::tcp_handle(t_tcp*)>
 8008ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ee8:	f7ff bbd8 	b.w	800869c <net::tcp_run()>
 8008eec:	2a02      	cmp	r2, #2
 8008eee:	d0f5      	beq.n	8008edc <net::ip_handle(t_ip4*)+0x3c>
 8008ef0:	4770      	bx	lr
 8008ef2:	bf00      	nop

08008ef4 <net::icmp_handle(t_icmp*)>:
 8008ef4:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 8008ef8:	2b08      	cmp	r3, #8
 8008efa:	d000      	beq.n	8008efe <net::icmp_handle(t_icmp*)+0xa>
 8008efc:	4770      	bx	lr
 8008efe:	f890 3023 	ldrb.w	r3, [r0, #35]	@ 0x23
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1fa      	bne.n	8008efc <net::icmp_handle(t_icmp*)+0x8>
 8008f06:	f100 0c06 	add.w	ip, r0, #6
 8008f0a:	4603      	mov	r3, r0
 8008f0c:	4662      	mov	r2, ip
 8008f0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	459c      	cmp	ip, r3
 8008f18:	d1f9      	bne.n	8008f0e <net::icmp_handle(t_icmp*)+0x1a>
 8008f1a:	4a14      	ldr	r2, [pc, #80]	@ (8008f6c <net::icmp_handle(t_icmp*)+0x78>)
 8008f1c:	f100 0c0c 	add.w	ip, r0, #12
 8008f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f24:	f803 1b01 	strb.w	r1, [r3], #1
 8008f28:	4563      	cmp	r3, ip
 8008f2a:	d1f9      	bne.n	8008f20 <net::icmp_handle(t_icmp*)+0x2c>
 8008f2c:	8a43      	ldrh	r3, [r0, #18]
 8008f2e:	4a10      	ldr	r2, [pc, #64]	@ (8008f70 <net::icmp_handle(t_icmp*)+0x7c>)
 8008f30:	f8d0 101e 	ldr.w	r1, [r0, #30]
 8008f34:	f8d0 c01a 	ldr.w	ip, [r0, #26]
 8008f38:	f8c0 c01e 	str.w	ip, [r0, #30]
 8008f3c:	43db      	mvns	r3, r3
 8008f3e:	8243      	strh	r3, [r0, #18]
 8008f40:	6913      	ldr	r3, [r2, #16]
 8008f42:	428b      	cmp	r3, r1
 8008f44:	8a01      	ldrh	r1, [r0, #16]
 8008f46:	bf18      	it	ne
 8008f48:	6813      	ldrne	r3, [r2, #0]
 8008f4a:	f8c0 301a 	str.w	r3, [r0, #26]
 8008f4e:	ba49      	rev16	r1, r1
 8008f50:	2300      	movs	r3, #0
 8008f52:	b289      	uxth	r1, r1
 8008f54:	7603      	strb	r3, [r0, #24]
 8008f56:	7643      	strb	r3, [r0, #25]
 8008f58:	f880 3022 	strb.w	r3, [r0, #34]	@ 0x22
 8008f5c:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8008f60:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8008f64:	310e      	adds	r1, #14
 8008f66:	f00a b9bb 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8008f6a:	bf00      	nop
 8008f6c:	2000cc24 	andcs	ip, r0, r4, lsr #24
 8008f70:	2000cc10 	andcs	ip, r0, r0, lsl ip

08008f74 <__aeabi_drsub>:
 8008f74:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8008f78:	e002      	b.n	8008f80 <__adddf3>
 8008f7a:	bf00      	nop

08008f7c <__aeabi_dsub>:
 8008f7c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08008f80 <__adddf3>:
 8008f80:	b530      	push	{r4, r5, lr}
 8008f82:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008f86:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008f8a:	ea94 0f05 	teq	r4, r5
 8008f8e:	bf08      	it	eq
 8008f90:	ea90 0f02 	teqeq	r0, r2
 8008f94:	bf1f      	itttt	ne
 8008f96:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008f9a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008f9e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008fa2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008fa6:	f000 80e2 	beq.w	800916e <__adddf3+0x1ee>
 8008faa:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008fae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008fb2:	bfb8      	it	lt
 8008fb4:	426d      	neglt	r5, r5
 8008fb6:	dd0c      	ble.n	8008fd2 <__adddf3+0x52>
 8008fb8:	442c      	add	r4, r5
 8008fba:	ea80 0202 	eor.w	r2, r0, r2
 8008fbe:	ea81 0303 	eor.w	r3, r1, r3
 8008fc2:	ea82 0000 	eor.w	r0, r2, r0
 8008fc6:	ea83 0101 	eor.w	r1, r3, r1
 8008fca:	ea80 0202 	eor.w	r2, r0, r2
 8008fce:	ea81 0303 	eor.w	r3, r1, r3
 8008fd2:	2d36      	cmp	r5, #54	@ 0x36
 8008fd4:	bf88      	it	hi
 8008fd6:	bd30      	pophi	{r4, r5, pc}
 8008fd8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8008fdc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008fe0:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8008fe4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008fe8:	d002      	beq.n	8008ff0 <__adddf3+0x70>
 8008fea:	4240      	negs	r0, r0
 8008fec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ff0:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8008ff4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008ff8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008ffc:	d002      	beq.n	8009004 <__adddf3+0x84>
 8008ffe:	4252      	negs	r2, r2
 8009000:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009004:	ea94 0f05 	teq	r4, r5
 8009008:	f000 80a7 	beq.w	800915a <__adddf3+0x1da>
 800900c:	f1a4 0401 	sub.w	r4, r4, #1
 8009010:	f1d5 0e20 	rsbs	lr, r5, #32
 8009014:	db0d      	blt.n	8009032 <__adddf3+0xb2>
 8009016:	fa02 fc0e 	lsl.w	ip, r2, lr
 800901a:	fa22 f205 	lsr.w	r2, r2, r5
 800901e:	1880      	adds	r0, r0, r2
 8009020:	f141 0100 	adc.w	r1, r1, #0
 8009024:	fa03 f20e 	lsl.w	r2, r3, lr
 8009028:	1880      	adds	r0, r0, r2
 800902a:	fa43 f305 	asr.w	r3, r3, r5
 800902e:	4159      	adcs	r1, r3
 8009030:	e00e      	b.n	8009050 <__adddf3+0xd0>
 8009032:	f1a5 0520 	sub.w	r5, r5, #32
 8009036:	f10e 0e20 	add.w	lr, lr, #32
 800903a:	2a01      	cmp	r2, #1
 800903c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8009040:	bf28      	it	cs
 8009042:	f04c 0c02 	orrcs.w	ip, ip, #2
 8009046:	fa43 f305 	asr.w	r3, r3, r5
 800904a:	18c0      	adds	r0, r0, r3
 800904c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8009050:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8009054:	d507      	bpl.n	8009066 <__adddf3+0xe6>
 8009056:	f04f 0e00 	mov.w	lr, #0
 800905a:	f1dc 0c00 	rsbs	ip, ip, #0
 800905e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8009062:	eb6e 0101 	sbc.w	r1, lr, r1
 8009066:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800906a:	d31b      	bcc.n	80090a4 <__adddf3+0x124>
 800906c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8009070:	d30c      	bcc.n	800908c <__adddf3+0x10c>
 8009072:	0849      	lsrs	r1, r1, #1
 8009074:	ea5f 0030 	movs.w	r0, r0, rrx
 8009078:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800907c:	f104 0401 	add.w	r4, r4, #1
 8009080:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8009084:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8009088:	f080 809a 	bcs.w	80091c0 <__adddf3+0x240>
 800908c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8009090:	bf08      	it	eq
 8009092:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8009096:	f150 0000 	adcs.w	r0, r0, #0
 800909a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800909e:	ea41 0105 	orr.w	r1, r1, r5
 80090a2:	bd30      	pop	{r4, r5, pc}
 80090a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80090a8:	4140      	adcs	r0, r0
 80090aa:	eb41 0101 	adc.w	r1, r1, r1
 80090ae:	3c01      	subs	r4, #1
 80090b0:	bf28      	it	cs
 80090b2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80090b6:	d2e9      	bcs.n	800908c <__adddf3+0x10c>
 80090b8:	f091 0f00 	teq	r1, #0
 80090bc:	bf04      	itt	eq
 80090be:	4601      	moveq	r1, r0
 80090c0:	2000      	moveq	r0, #0
 80090c2:	fab1 f381 	clz	r3, r1
 80090c6:	bf08      	it	eq
 80090c8:	3320      	addeq	r3, #32
 80090ca:	f1a3 030b 	sub.w	r3, r3, #11
 80090ce:	f1b3 0220 	subs.w	r2, r3, #32
 80090d2:	da0c      	bge.n	80090ee <__adddf3+0x16e>
 80090d4:	320c      	adds	r2, #12
 80090d6:	dd08      	ble.n	80090ea <__adddf3+0x16a>
 80090d8:	f102 0c14 	add.w	ip, r2, #20
 80090dc:	f1c2 020c 	rsb	r2, r2, #12
 80090e0:	fa01 f00c 	lsl.w	r0, r1, ip
 80090e4:	fa21 f102 	lsr.w	r1, r1, r2
 80090e8:	e00c      	b.n	8009104 <__adddf3+0x184>
 80090ea:	f102 0214 	add.w	r2, r2, #20
 80090ee:	bfd8      	it	le
 80090f0:	f1c2 0c20 	rsble	ip, r2, #32
 80090f4:	fa01 f102 	lsl.w	r1, r1, r2
 80090f8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80090fc:	bfdc      	itt	le
 80090fe:	ea41 010c 	orrle.w	r1, r1, ip
 8009102:	4090      	lslle	r0, r2
 8009104:	1ae4      	subs	r4, r4, r3
 8009106:	bfa2      	ittt	ge
 8009108:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800910c:	4329      	orrge	r1, r5
 800910e:	bd30      	popge	{r4, r5, pc}
 8009110:	ea6f 0404 	mvn.w	r4, r4
 8009114:	3c1f      	subs	r4, #31
 8009116:	da1c      	bge.n	8009152 <__adddf3+0x1d2>
 8009118:	340c      	adds	r4, #12
 800911a:	dc0e      	bgt.n	800913a <__adddf3+0x1ba>
 800911c:	f104 0414 	add.w	r4, r4, #20
 8009120:	f1c4 0220 	rsb	r2, r4, #32
 8009124:	fa20 f004 	lsr.w	r0, r0, r4
 8009128:	fa01 f302 	lsl.w	r3, r1, r2
 800912c:	ea40 0003 	orr.w	r0, r0, r3
 8009130:	fa21 f304 	lsr.w	r3, r1, r4
 8009134:	ea45 0103 	orr.w	r1, r5, r3
 8009138:	bd30      	pop	{r4, r5, pc}
 800913a:	f1c4 040c 	rsb	r4, r4, #12
 800913e:	f1c4 0220 	rsb	r2, r4, #32
 8009142:	fa20 f002 	lsr.w	r0, r0, r2
 8009146:	fa01 f304 	lsl.w	r3, r1, r4
 800914a:	ea40 0003 	orr.w	r0, r0, r3
 800914e:	4629      	mov	r1, r5
 8009150:	bd30      	pop	{r4, r5, pc}
 8009152:	fa21 f004 	lsr.w	r0, r1, r4
 8009156:	4629      	mov	r1, r5
 8009158:	bd30      	pop	{r4, r5, pc}
 800915a:	f094 0f00 	teq	r4, #0
 800915e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8009162:	bf06      	itte	eq
 8009164:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8009168:	3401      	addeq	r4, #1
 800916a:	3d01      	subne	r5, #1
 800916c:	e74e      	b.n	800900c <__adddf3+0x8c>
 800916e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8009172:	bf18      	it	ne
 8009174:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8009178:	d029      	beq.n	80091ce <__adddf3+0x24e>
 800917a:	ea94 0f05 	teq	r4, r5
 800917e:	bf08      	it	eq
 8009180:	ea90 0f02 	teqeq	r0, r2
 8009184:	d005      	beq.n	8009192 <__adddf3+0x212>
 8009186:	ea54 0c00 	orrs.w	ip, r4, r0
 800918a:	bf04      	itt	eq
 800918c:	4619      	moveq	r1, r3
 800918e:	4610      	moveq	r0, r2
 8009190:	bd30      	pop	{r4, r5, pc}
 8009192:	ea91 0f03 	teq	r1, r3
 8009196:	bf1e      	ittt	ne
 8009198:	2100      	movne	r1, #0
 800919a:	2000      	movne	r0, #0
 800919c:	bd30      	popne	{r4, r5, pc}
 800919e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80091a2:	d105      	bne.n	80091b0 <__adddf3+0x230>
 80091a4:	0040      	lsls	r0, r0, #1
 80091a6:	4149      	adcs	r1, r1
 80091a8:	bf28      	it	cs
 80091aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80091ae:	bd30      	pop	{r4, r5, pc}
 80091b0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80091b4:	bf3c      	itt	cc
 80091b6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80091ba:	bd30      	popcc	{r4, r5, pc}
 80091bc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80091c0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80091c4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80091c8:	f04f 0000 	mov.w	r0, #0
 80091cc:	bd30      	pop	{r4, r5, pc}
 80091ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80091d2:	bf1a      	itte	ne
 80091d4:	4619      	movne	r1, r3
 80091d6:	4610      	movne	r0, r2
 80091d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80091dc:	bf1c      	itt	ne
 80091de:	460b      	movne	r3, r1
 80091e0:	4602      	movne	r2, r0
 80091e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80091e6:	bf06      	itte	eq
 80091e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80091ec:	ea91 0f03 	teqeq	r1, r3
 80091f0:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80091f4:	bd30      	pop	{r4, r5, pc}
 80091f6:	bf00      	nop

080091f8 <__aeabi_ui2d>:
 80091f8:	f090 0f00 	teq	r0, #0
 80091fc:	bf04      	itt	eq
 80091fe:	2100      	moveq	r1, #0
 8009200:	4770      	bxeq	lr
 8009202:	b530      	push	{r4, r5, lr}
 8009204:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8009208:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800920c:	f04f 0500 	mov.w	r5, #0
 8009210:	f04f 0100 	mov.w	r1, #0
 8009214:	e750      	b.n	80090b8 <__adddf3+0x138>
 8009216:	bf00      	nop

08009218 <__aeabi_i2d>:
 8009218:	f090 0f00 	teq	r0, #0
 800921c:	bf04      	itt	eq
 800921e:	2100      	moveq	r1, #0
 8009220:	4770      	bxeq	lr
 8009222:	b530      	push	{r4, r5, lr}
 8009224:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8009228:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800922c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8009230:	bf48      	it	mi
 8009232:	4240      	negmi	r0, r0
 8009234:	f04f 0100 	mov.w	r1, #0
 8009238:	e73e      	b.n	80090b8 <__adddf3+0x138>
 800923a:	bf00      	nop

0800923c <__aeabi_f2d>:
 800923c:	0042      	lsls	r2, r0, #1
 800923e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8009242:	ea4f 0131 	mov.w	r1, r1, rrx
 8009246:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800924a:	bf1f      	itttt	ne
 800924c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8009250:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8009254:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8009258:	4770      	bxne	lr
 800925a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800925e:	bf08      	it	eq
 8009260:	4770      	bxeq	lr
 8009262:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8009266:	bf04      	itt	eq
 8009268:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 800926c:	4770      	bxeq	lr
 800926e:	b530      	push	{r4, r5, lr}
 8009270:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8009274:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8009278:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800927c:	e71c      	b.n	80090b8 <__adddf3+0x138>
 800927e:	bf00      	nop

08009280 <__aeabi_ul2d>:
 8009280:	ea50 0201 	orrs.w	r2, r0, r1
 8009284:	bf08      	it	eq
 8009286:	4770      	bxeq	lr
 8009288:	b530      	push	{r4, r5, lr}
 800928a:	f04f 0500 	mov.w	r5, #0
 800928e:	e00a      	b.n	80092a6 <__aeabi_l2d+0x16>

08009290 <__aeabi_l2d>:
 8009290:	ea50 0201 	orrs.w	r2, r0, r1
 8009294:	bf08      	it	eq
 8009296:	4770      	bxeq	lr
 8009298:	b530      	push	{r4, r5, lr}
 800929a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800929e:	d502      	bpl.n	80092a6 <__aeabi_l2d+0x16>
 80092a0:	4240      	negs	r0, r0
 80092a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80092a6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80092aa:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80092ae:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80092b2:	f43f aed8 	beq.w	8009066 <__adddf3+0xe6>
 80092b6:	f04f 0203 	mov.w	r2, #3
 80092ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80092be:	bf18      	it	ne
 80092c0:	3203      	addne	r2, #3
 80092c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80092c6:	bf18      	it	ne
 80092c8:	3203      	addne	r2, #3
 80092ca:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80092ce:	f1c2 0320 	rsb	r3, r2, #32
 80092d2:	fa00 fc03 	lsl.w	ip, r0, r3
 80092d6:	fa20 f002 	lsr.w	r0, r0, r2
 80092da:	fa01 fe03 	lsl.w	lr, r1, r3
 80092de:	ea40 000e 	orr.w	r0, r0, lr
 80092e2:	fa21 f102 	lsr.w	r1, r1, r2
 80092e6:	4414      	add	r4, r2
 80092e8:	e6bd      	b.n	8009066 <__adddf3+0xe6>
 80092ea:	bf00      	nop

080092ec <__aeabi_d2f>:
 80092ec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80092f0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 80092f4:	bf24      	itt	cs
 80092f6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 80092fa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 80092fe:	d90d      	bls.n	800931c <__aeabi_d2f+0x30>
 8009300:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8009304:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8009308:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800930c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8009310:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8009314:	bf08      	it	eq
 8009316:	f020 0001 	biceq.w	r0, r0, #1
 800931a:	4770      	bx	lr
 800931c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8009320:	d121      	bne.n	8009366 <__aeabi_d2f+0x7a>
 8009322:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8009326:	bfbc      	itt	lt
 8009328:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 800932c:	4770      	bxlt	lr
 800932e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8009332:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8009336:	f1c2 0218 	rsb	r2, r2, #24
 800933a:	f1c2 0c20 	rsb	ip, r2, #32
 800933e:	fa10 f30c 	lsls.w	r3, r0, ip
 8009342:	fa20 f002 	lsr.w	r0, r0, r2
 8009346:	bf18      	it	ne
 8009348:	f040 0001 	orrne.w	r0, r0, #1
 800934c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009350:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8009354:	fa03 fc0c 	lsl.w	ip, r3, ip
 8009358:	ea40 000c 	orr.w	r0, r0, ip
 800935c:	fa23 f302 	lsr.w	r3, r3, r2
 8009360:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8009364:	e7cc      	b.n	8009300 <__aeabi_d2f+0x14>
 8009366:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800936a:	d107      	bne.n	800937c <__aeabi_d2f+0x90>
 800936c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8009370:	bf1e      	ittt	ne
 8009372:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8009376:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 800937a:	4770      	bxne	lr
 800937c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8009380:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8009384:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8009388:	4770      	bx	lr
 800938a:	bf00      	nop

0800938c <Reset_Handler>:
 800938c:	490f      	ldr	r1, [pc, #60]	@ (80093cc <ZeroBSSLoop+0x1e>)
 800938e:	4a10      	ldr	r2, [pc, #64]	@ (80093d0 <ZeroBSSLoop+0x22>)
 8009390:	4b10      	ldr	r3, [pc, #64]	@ (80093d4 <ZeroBSSLoop+0x26>)
 8009392:	1a5b      	subs	r3, r3, r1
 8009394:	d005      	beq.n	80093a2 <ZeroBSS>

08009396 <CopyDataLoop>:
 8009396:	f812 4b01 	ldrb.w	r4, [r2], #1
 800939a:	f801 4b01 	strb.w	r4, [r1], #1
 800939e:	3b01      	subs	r3, #1
 80093a0:	dcf9      	bgt.n	8009396 <CopyDataLoop>

080093a2 <ZeroBSS>:
 80093a2:	4a0d      	ldr	r2, [pc, #52]	@ (80093d8 <ZeroBSSLoop+0x2a>)
 80093a4:	4b0d      	ldr	r3, [pc, #52]	@ (80093dc <ZeroBSSLoop+0x2e>)
 80093a6:	eba3 0302 	sub.w	r3, r3, r2
 80093aa:	f04f 0400 	mov.w	r4, #0

080093ae <ZeroBSSLoop>:
 80093ae:	f842 4b04 	str.w	r4, [r2], #4
 80093b2:	3b04      	subs	r3, #4
 80093b4:	dcfb      	bgt.n	80093ae <ZeroBSSLoop>
 80093b6:	f00c f9b5 	bl	8015724 <stack_debug_init>
 80093ba:	f00c fa17 	bl	80157ec <SystemInit>
 80093be:	f00e f945 	bl	801764c <__libc_init_array>
 80093c2:	f000 fb43 	bl	8009a4c <main>
 80093c6:	4770      	bx	lr
 80093c8:	bf00      	nop
 80093ca:	00000000 	andeq	r0, r0, r0
 80093ce:	c4e42000 	strbtgt	r2, [r4], #0
 80093d2:	00740801 	rsbseq	r0, r4, r1, lsl #16
 80093d6:	00742000 	rsbseq	r2, r4, r0
 80093da:	a6f42000 	ldrbtge	r2, [r4], r0
 80093de:	 	ldrb	r2, [lr, r1]!

080093e0 <ADC_IRQHandler>:
 80093e0:	e7fe      	b.n	80093e0 <ADC_IRQHandler>

080093e2 <HardFault_Handler>:
 80093e2:	f01e 0f04 	tst.w	lr, #4
 80093e6:	bf0c      	ite	eq
 80093e8:	f3ef 8008 	mrseq	r0, MSP
 80093ec:	f3ef 8009 	mrsne	r0, PSP
 80093f0:	4671      	mov	r1, lr
 80093f2:	f000 b801 	b.w	80093f8 <hardfault_handler>
 80093f6:	4770      	bx	lr

080093f8 <hardfault_handler>:
 80093f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093fc:	4d2f      	ldr	r5, [pc, #188]	@ (80094bc <hardfault_handler+0xc4>)
 80093fe:	b087      	sub	sp, #28
 8009400:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 8009402:	9301      	str	r3, [sp, #4]
 8009404:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8009406:	9302      	str	r3, [sp, #8]
 8009408:	e9d0 9303 	ldrd	r9, r3, [r0, #12]
 800940c:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 800940e:	9303      	str	r3, [sp, #12]
 8009410:	e9d0 ba01 	ldrd	fp, sl, [r0, #4]
 8009414:	69c3      	ldr	r3, [r0, #28]
 8009416:	9304      	str	r3, [sp, #16]
 8009418:	e9d0 7605 	ldrd	r7, r6, [r0, #20]
 800941c:	4688      	mov	r8, r1
 800941e:	6801      	ldr	r1, [r0, #0]
 8009420:	4827      	ldr	r0, [pc, #156]	@ (80094c0 <hardfault_handler+0xc8>)
 8009422:	9105      	str	r1, [sp, #20]
 8009424:	f00e fc3a 	bl	8017c9c <printf>
 8009428:	4826      	ldr	r0, [pc, #152]	@ (80094c4 <hardfault_handler+0xcc>)
 800942a:	f00e fc37 	bl	8017c9c <printf>
 800942e:	9905      	ldr	r1, [sp, #20]
 8009430:	4825      	ldr	r0, [pc, #148]	@ (80094c8 <hardfault_handler+0xd0>)
 8009432:	f00e fc33 	bl	8017c9c <printf>
 8009436:	4659      	mov	r1, fp
 8009438:	4824      	ldr	r0, [pc, #144]	@ (80094cc <hardfault_handler+0xd4>)
 800943a:	f00e fc2f 	bl	8017c9c <printf>
 800943e:	4651      	mov	r1, sl
 8009440:	4823      	ldr	r0, [pc, #140]	@ (80094d0 <hardfault_handler+0xd8>)
 8009442:	f00e fc2b 	bl	8017c9c <printf>
 8009446:	4649      	mov	r1, r9
 8009448:	4822      	ldr	r0, [pc, #136]	@ (80094d4 <hardfault_handler+0xdc>)
 800944a:	f00e fc27 	bl	8017c9c <printf>
 800944e:	9903      	ldr	r1, [sp, #12]
 8009450:	4821      	ldr	r0, [pc, #132]	@ (80094d8 <hardfault_handler+0xe0>)
 8009452:	f00e fc23 	bl	8017c9c <printf>
 8009456:	4639      	mov	r1, r7
 8009458:	4820      	ldr	r0, [pc, #128]	@ (80094dc <hardfault_handler+0xe4>)
 800945a:	f00e fc1f 	bl	8017c9c <printf>
 800945e:	4631      	mov	r1, r6
 8009460:	481f      	ldr	r0, [pc, #124]	@ (80094e0 <hardfault_handler+0xe8>)
 8009462:	f00e fc1b 	bl	8017c9c <printf>
 8009466:	9904      	ldr	r1, [sp, #16]
 8009468:	481e      	ldr	r0, [pc, #120]	@ (80094e4 <hardfault_handler+0xec>)
 800946a:	f00e fc17 	bl	8017c9c <printf>
 800946e:	481e      	ldr	r0, [pc, #120]	@ (80094e8 <hardfault_handler+0xf0>)
 8009470:	f00e fc14 	bl	8017c9c <printf>
 8009474:	4621      	mov	r1, r4
 8009476:	481d      	ldr	r0, [pc, #116]	@ (80094ec <hardfault_handler+0xf4>)
 8009478:	f00e fc10 	bl	8017c9c <printf>
 800947c:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 800947e:	481c      	ldr	r0, [pc, #112]	@ (80094f0 <hardfault_handler+0xf8>)
 8009480:	f00e fc0c 	bl	8017c9c <printf>
 8009484:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 8009486:	481b      	ldr	r0, [pc, #108]	@ (80094f4 <hardfault_handler+0xfc>)
 8009488:	f00e fc08 	bl	8017c9c <printf>
 800948c:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 800948e:	481a      	ldr	r0, [pc, #104]	@ (80094f8 <hardfault_handler+0x100>)
 8009490:	f00e fc04 	bl	8017c9c <printf>
 8009494:	0622      	lsls	r2, r4, #24
 8009496:	d503      	bpl.n	80094a0 <hardfault_handler+0xa8>
 8009498:	9902      	ldr	r1, [sp, #8]
 800949a:	4818      	ldr	r0, [pc, #96]	@ (80094fc <hardfault_handler+0x104>)
 800949c:	f00e fbfe 	bl	8017c9c <printf>
 80094a0:	0423      	lsls	r3, r4, #16
 80094a2:	d503      	bpl.n	80094ac <hardfault_handler+0xb4>
 80094a4:	9901      	ldr	r1, [sp, #4]
 80094a6:	4816      	ldr	r0, [pc, #88]	@ (8009500 <hardfault_handler+0x108>)
 80094a8:	f00e fbf8 	bl	8017c9c <printf>
 80094ac:	4815      	ldr	r0, [pc, #84]	@ (8009504 <hardfault_handler+0x10c>)
 80094ae:	f00e fbf5 	bl	8017c9c <printf>
 80094b2:	4815      	ldr	r0, [pc, #84]	@ (8009508 <hardfault_handler+0x110>)
 80094b4:	4641      	mov	r1, r8
 80094b6:	f00e fbf1 	bl	8017c9c <printf>
 80094ba:	e7fe      	b.n	80094ba <hardfault_handler+0xc2>
 80094bc:	e000ed00 	and	lr, r0, r0, lsl #26
 80094c0:	08018270 	stmdaeq	r1, {r4, r5, r6, r9, pc}
 80094c4:	0801827d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, pc}
 80094c8:	0801828d 	stmdaeq	r1, {r0, r2, r3, r7, r9, pc}
 80094cc:	08018298 	stmdaeq	r1, {r3, r4, r7, r9, pc}
 80094d0:	080182a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, pc}
 80094d4:	080182ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, pc}
 80094d8:	080182b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, pc}
 80094dc:	080182c4 	stmdaeq	r1, {r2, r6, r7, r9, pc}
 80094e0:	080182cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, pc}
 80094e4:	080182da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, pc}
 80094e8:	080182e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, pc}
 80094ec:	080182f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, pc}
 80094f0:	080182fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, pc}
 80094f4:	08018309 	stmdaeq	r1, {r0, r3, r8, r9, pc}
 80094f8:	08018315 	stmdaeq	r1, {r0, r2, r4, r8, r9, pc}
 80094fc:	08018321 	stmdaeq	r1, {r0, r5, r8, r9, pc}
 8009500:	0801832e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, pc}
 8009504:	0801833a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, pc}
 8009508:	08018342 	stmdaeq	r1, {r1, r6, r8, r9, pc}

0800950c <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>:
 800950c:	b110      	cbz	r0, 8009514 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]+0x8>
 800950e:	6803      	ldr	r3, [r0, #0]
 8009510:	6a1b      	ldr	r3, [r3, #32]
 8009512:	4718      	bx	r3
 8009514:	4770      	bx	lr

08009516 <Display::PutChar(int) [clone .isra.0]>:
 8009516:	b110      	cbz	r0, 800951e <Display::PutChar(int) [clone .isra.0]+0x8>
 8009518:	6803      	ldr	r3, [r0, #0]
 800951a:	695b      	ldr	r3, [r3, #20]
 800951c:	4718      	bx	r3
 800951e:	4770      	bx	lr

08009520 <net::dhcp_run()>:
 8009520:	b510      	push	{r4, lr}
 8009522:	4b11      	ldr	r3, [pc, #68]	@ (8009568 <net::dhcp_run()+0x48>)
 8009524:	6a1c      	ldr	r4, [r3, #32]
 8009526:	b086      	sub	sp, #24
 8009528:	b1cc      	cbz	r4, 800955e <net::dhcp_run()+0x3e>
 800952a:	a904      	add	r1, sp, #16
 800952c:	6820      	ldr	r0, [r4, #0]
 800952e:	f10d 030e 	add.w	r3, sp, #14
 8009532:	aa05      	add	r2, sp, #20
 8009534:	f009 fa48 	bl	80129c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009538:	4601      	mov	r1, r0
 800953a:	b180      	cbz	r0, 800955e <net::dhcp_run()+0x3e>
 800953c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009540:	2b43      	cmp	r3, #67	@ 0x43
 8009542:	d10c      	bne.n	800955e <net::dhcp_run()+0x3e>
 8009544:	9804      	ldr	r0, [sp, #16]
 8009546:	6862      	ldr	r2, [r4, #4]
 8009548:	6843      	ldr	r3, [r0, #4]
 800954a:	4293      	cmp	r3, r2
 800954c:	d009      	beq.n	8009562 <net::dhcp_run()+0x42>
 800954e:	e9cd 3200 	strd	r3, r2, [sp]
 8009552:	4906      	ldr	r1, [pc, #24]	@ (800956c <net::dhcp_run()+0x4c>)
 8009554:	4a06      	ldr	r2, [pc, #24]	@ (8009570 <net::dhcp_run()+0x50>)
 8009556:	4807      	ldr	r0, [pc, #28]	@ (8009574 <net::dhcp_run()+0x54>)
 8009558:	2379      	movs	r3, #121	@ 0x79
 800955a:	f00e fb9f 	bl	8017c9c <printf>
 800955e:	b006      	add	sp, #24
 8009560:	bd10      	pop	{r4, pc}
 8009562:	f008 fc8f 	bl	8011e84 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
 8009566:	e7fa      	b.n	800955e <net::dhcp_run()+0x3e>
 8009568:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800956c:	08018378 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, pc}
 8009570:	08018356 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, pc}
 8009574:	08018381 	stmdaeq	r1, {r0, r7, r8, r9, pc}

08009578 <Display::Printf(unsigned long, char const*, ...)>:
 8009578:	b40c      	push	{r2, r3}
 800957a:	b570      	push	{r4, r5, r6, lr}
 800957c:	6984      	ldr	r4, [r0, #24]
 800957e:	b08a      	sub	sp, #40	@ 0x28
 8009580:	4605      	mov	r5, r0
 8009582:	460e      	mov	r6, r1
 8009584:	b174      	cbz	r4, 80095a4 <Display::Printf(unsigned long, char const*, ...)+0x2c>
 8009586:	ab0f      	add	r3, sp, #60	@ 0x3c
 8009588:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800958a:	9301      	str	r3, [sp, #4]
 800958c:	2120      	movs	r1, #32
 800958e:	a802      	add	r0, sp, #8
 8009590:	f00e fbc4 	bl	8017d1c <vsnprintf>
 8009594:	4604      	mov	r4, r0
 8009596:	69a8      	ldr	r0, [r5, #24]
 8009598:	6803      	ldr	r3, [r0, #0]
 800959a:	aa02      	add	r2, sp, #8
 800959c:	69dd      	ldr	r5, [r3, #28]
 800959e:	4631      	mov	r1, r6
 80095a0:	4623      	mov	r3, r4
 80095a2:	47a8      	blx	r5
 80095a4:	4620      	mov	r0, r4
 80095a6:	b00a      	add	sp, #40	@ 0x28
 80095a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80095ac:	b002      	add	sp, #8
 80095ae:	4770      	bx	lr

080095b0 <Display::TextStatus(char const*)>:
 80095b0:	6983      	ldr	r3, [r0, #24]
 80095b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095b6:	4604      	mov	r4, r0
 80095b8:	460d      	mov	r5, r1
 80095ba:	2b00      	cmp	r3, #0
 80095bc:	d038      	beq.n	8009630 <Display::TextStatus(char const*)+0x80>
 80095be:	e9d3 6701 	ldrd	r6, r7, [r3, #4]
 80095c2:	b92e      	cbnz	r6, 80095d0 <Display::TextStatus(char const*)+0x20>
 80095c4:	4b1b      	ldr	r3, [pc, #108]	@ (8009634 <Display::TextStatus(char const*)+0x84>)
 80095c6:	4a1c      	ldr	r2, [pc, #112]	@ (8009638 <Display::TextStatus(char const*)+0x88>)
 80095c8:	481c      	ldr	r0, [pc, #112]	@ (800963c <Display::TextStatus(char const*)+0x8c>)
 80095ca:	21ae      	movs	r1, #174	@ 0xae
 80095cc:	f00e fc46 	bl	8017e5c <__assert_func>
 80095d0:	b92f      	cbnz	r7, 80095de <Display::TextStatus(char const*)+0x2e>
 80095d2:	4b1b      	ldr	r3, [pc, #108]	@ (8009640 <Display::TextStatus(char const*)+0x90>)
 80095d4:	4a18      	ldr	r2, [pc, #96]	@ (8009638 <Display::TextStatus(char const*)+0x88>)
 80095d6:	4819      	ldr	r0, [pc, #100]	@ (800963c <Display::TextStatus(char const*)+0x8c>)
 80095d8:	21af      	movs	r1, #175	@ 0xaf
 80095da:	f00e fc3f 	bl	8017e5c <__assert_func>
 80095de:	f107 39ff 	add.w	r9, r7, #4294967295	@ 0xffffffff
 80095e2:	69a0      	ldr	r0, [r4, #24]
 80095e4:	464a      	mov	r2, r9
 80095e6:	2100      	movs	r1, #0
 80095e8:	f7ff ff90 	bl	800950c <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 80095ec:	f04f 0800 	mov.w	r8, #0
 80095f0:	3e01      	subs	r6, #1
 80095f2:	4546      	cmp	r6, r8
 80095f4:	69a0      	ldr	r0, [r4, #24]
 80095f6:	d815      	bhi.n	8009624 <Display::TextStatus(char const*)+0x74>
 80095f8:	464a      	mov	r2, r9
 80095fa:	2100      	movs	r1, #0
 80095fc:	f7ff ff86 	bl	800950c <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009600:	69a0      	ldr	r0, [r4, #24]
 8009602:	b1a8      	cbz	r0, 8009630 <Display::TextStatus(char const*)+0x80>
 8009604:	6841      	ldr	r1, [r0, #4]
 8009606:	2300      	movs	r3, #0
 8009608:	5cea      	ldrb	r2, [r5, r3]
 800960a:	b11a      	cbz	r2, 8009614 <Display::TextStatus(char const*)+0x64>
 800960c:	1c5a      	adds	r2, r3, #1
 800960e:	4299      	cmp	r1, r3
 8009610:	4613      	mov	r3, r2
 8009612:	d8f9      	bhi.n	8009608 <Display::TextStatus(char const*)+0x58>
 8009614:	6802      	ldr	r2, [r0, #0]
 8009616:	69d4      	ldr	r4, [r2, #28]
 8009618:	4639      	mov	r1, r7
 800961a:	462a      	mov	r2, r5
 800961c:	46a4      	mov	ip, r4
 800961e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009622:	4760      	bx	ip
 8009624:	2120      	movs	r1, #32
 8009626:	f7ff ff76 	bl	8009516 <Display::PutChar(int) [clone .isra.0]>
 800962a:	f108 0801 	add.w	r8, r8, #1
 800962e:	e7e0      	b.n	80095f2 <Display::TextStatus(char const*)+0x42>
 8009630:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009634:	080183b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, pc}
 8009638:	080183c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, pc}
 800963c:	080183d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, pc}
 8009640:	080183f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, pc}

08009644 <Display::TextStatus(char const*, unsigned long)>:
 8009644:	b538      	push	{r3, r4, r5, lr}
 8009646:	4614      	mov	r4, r2
 8009648:	460d      	mov	r5, r1
 800964a:	f7ff ffb1 	bl	80095b0 <Display::TextStatus(char const*)>
 800964e:	1c63      	adds	r3, r4, #1
 8009650:	d005      	beq.n	800965e <Display::TextStatus(char const*, unsigned long)+0x1a>
 8009652:	4629      	mov	r1, r5
 8009654:	4620      	mov	r0, r4
 8009656:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800965a:	f00c b84b 	b.w	80156f4 <console_status>
 800965e:	bd38      	pop	{r3, r4, r5, pc}

08009660 <Display::SetSleep(bool)>:
 8009660:	b538      	push	{r3, r4, r5, lr}
 8009662:	4604      	mov	r4, r0
 8009664:	6980      	ldr	r0, [r0, #24]
 8009666:	460d      	mov	r5, r1
 8009668:	b138      	cbz	r0, 800967a <Display::SetSleep(bool)+0x1a>
 800966a:	6803      	ldr	r3, [r0, #0]
 800966c:	7561      	strb	r1, [r4, #21]
 800966e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009670:	4798      	blx	r3
 8009672:	b915      	cbnz	r5, 800967a <Display::SetSleep(bool)+0x1a>
 8009674:	4b01      	ldr	r3, [pc, #4]	@ (800967c <Display::SetSleep(bool)+0x1c>)
 8009676:	681b      	ldr	r3, [r3, #0]
 8009678:	6063      	str	r3, [r4, #4]
 800967a:	bd38      	pop	{r3, r4, r5, pc}
 800967c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

08009680 <hardware::ledblink::display(unsigned long)>:
 8009680:	b538      	push	{r3, r4, r5, lr}
 8009682:	4d0d      	ldr	r5, [pc, #52]	@ (80096b8 <hardware::ledblink::display(unsigned long)+0x38>)
 8009684:	682a      	ldr	r2, [r5, #0]
 8009686:	4603      	mov	r3, r0
 8009688:	6990      	ldr	r0, [r2, #24]
 800968a:	b1a0      	cbz	r0, 80096b6 <hardware::ledblink::display(unsigned long)+0x36>
 800968c:	2b05      	cmp	r3, #5
 800968e:	bf9c      	itt	ls
 8009690:	4a0a      	ldrls	r2, [pc, #40]	@ (80096bc <hardware::ledblink::display(unsigned long)+0x3c>)
 8009692:	5cd4      	ldrbls	r4, [r2, r3]
 8009694:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8009698:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 800969c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80096a0:	bf88      	it	hi
 80096a2:	2455      	movhi	r4, #85	@ 0x55
 80096a4:	f7ff ff32 	bl	800950c <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 80096a8:	682b      	ldr	r3, [r5, #0]
 80096aa:	4621      	mov	r1, r4
 80096ac:	6998      	ldr	r0, [r3, #24]
 80096ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80096b2:	f7ff bf30 	b.w	8009516 <Display::PutChar(int) [clone .isra.0]>
 80096b6:	bd38      	pop	{r3, r4, r5, pc}
 80096b8:	2000ccd4 	ldrdcs	ip, [r0], -r4
 80096bc:	08019361 	stmdaeq	r1, {r0, r5, r6, r8, r9, ip, pc}

080096c0 <PixelConfiguration::Get()>:
 80096c0:	b510      	push	{r4, lr}
 80096c2:	4c06      	ldr	r4, [pc, #24]	@ (80096dc <PixelConfiguration::Get()+0x1c>)
 80096c4:	6823      	ldr	r3, [r4, #0]
 80096c6:	b933      	cbnz	r3, 80096d6 <PixelConfiguration::Get()+0x16>
 80096c8:	4b05      	ldr	r3, [pc, #20]	@ (80096e0 <PixelConfiguration::Get()+0x20>)
 80096ca:	4a06      	ldr	r2, [pc, #24]	@ (80096e4 <PixelConfiguration::Get()+0x24>)
 80096cc:	4806      	ldr	r0, [pc, #24]	@ (80096e8 <PixelConfiguration::Get()+0x28>)
 80096ce:	f240 110d 	movw	r1, #269	@ 0x10d
 80096d2:	f00e fbc3 	bl	8017e5c <__assert_func>
 80096d6:	6820      	ldr	r0, [r4, #0]
 80096d8:	bd10      	pop	{r4, pc}
 80096da:	bf00      	nop
 80096dc:	20000078 	andcs	r0, r0, r8, ror r0
 80096e0:	08018400 	stmdaeq	r1, {sl, pc}
 80096e4:	08018413 	stmdaeq	r1, {r0, r1, r4, sl, pc}
 80096e8:	08018417 	stmdaeq	r1, {r0, r1, r2, r4, sl, pc}

080096ec <PixelDmxConfiguration::PixelDmxConfiguration()>:
 80096ec:	b538      	push	{r3, r4, r5, lr}
 80096ee:	2203      	movs	r2, #3
 80096f0:	4604      	mov	r4, r0
 80096f2:	e9c4 2202 	strd	r2, r2, [r4, #8]
 80096f6:	4a20      	ldr	r2, [pc, #128]	@ (8009778 <PixelDmxConfiguration::PixelDmxConfiguration()+0x8c>)
 80096f8:	4920      	ldr	r1, [pc, #128]	@ (800977c <PixelDmxConfiguration::PixelDmxConfiguration()+0x90>)
 80096fa:	2506      	movs	r5, #6
 80096fc:	e9c4 5204 	strd	r5, r2, [r4, #16]
 8009700:	2300      	movs	r3, #0
 8009702:	20aa      	movs	r0, #170	@ 0xaa
 8009704:	4d1e      	ldr	r5, [pc, #120]	@ (8009780 <PixelDmxConfiguration::PixelDmxConfiguration()+0x94>)
 8009706:	61a3      	str	r3, [r4, #24]
 8009708:	e9c4 0300 	strd	r0, r3, [r4]
 800970c:	4a1d      	ldr	r2, [pc, #116]	@ (8009784 <PixelDmxConfiguration::PixelDmxConfiguration()+0x98>)
 800970e:	481e      	ldr	r0, [pc, #120]	@ (8009788 <PixelDmxConfiguration::PixelDmxConfiguration()+0x9c>)
 8009710:	2332      	movs	r3, #50	@ 0x32
 8009712:	f00e fac3 	bl	8017c9c <printf>
 8009716:	682b      	ldr	r3, [r5, #0]
 8009718:	b12b      	cbz	r3, 8009726 <PixelDmxConfiguration::PixelDmxConfiguration()+0x3a>
 800971a:	4b1c      	ldr	r3, [pc, #112]	@ (800978c <PixelDmxConfiguration::PixelDmxConfiguration()+0xa0>)
 800971c:	4a19      	ldr	r2, [pc, #100]	@ (8009784 <PixelDmxConfiguration::PixelDmxConfiguration()+0x98>)
 800971e:	4817      	ldr	r0, [pc, #92]	@ (800977c <PixelDmxConfiguration::PixelDmxConfiguration()+0x90>)
 8009720:	2134      	movs	r1, #52	@ 0x34
 8009722:	f00e fb9b 	bl	8017e5c <__assert_func>
 8009726:	4a17      	ldr	r2, [pc, #92]	@ (8009784 <PixelDmxConfiguration::PixelDmxConfiguration()+0x98>)
 8009728:	4914      	ldr	r1, [pc, #80]	@ (800977c <PixelDmxConfiguration::PixelDmxConfiguration()+0x90>)
 800972a:	4819      	ldr	r0, [pc, #100]	@ (8009790 <PixelDmxConfiguration::PixelDmxConfiguration()+0xa4>)
 800972c:	602c      	str	r4, [r5, #0]
 800972e:	2337      	movs	r3, #55	@ 0x37
 8009730:	f00e fab4 	bl	8017c9c <printf>
 8009734:	4d17      	ldr	r5, [pc, #92]	@ (8009794 <PixelDmxConfiguration::PixelDmxConfiguration()+0xa8>)
 8009736:	4814      	ldr	r0, [pc, #80]	@ (8009788 <PixelDmxConfiguration::PixelDmxConfiguration()+0x9c>)
 8009738:	2301      	movs	r3, #1
 800973a:	2200      	movs	r2, #0
 800973c:	21aa      	movs	r1, #170	@ 0xaa
 800973e:	e9c4 1209 	strd	r1, r2, [r4, #36]	@ 0x24
 8009742:	e9c4 320b 	strd	r3, r2, [r4, #44]	@ 0x2c
 8009746:	e9c4 3307 	strd	r3, r3, [r4, #28]
 800974a:	4a13      	ldr	r2, [pc, #76]	@ (8009798 <PixelDmxConfiguration::PixelDmxConfiguration()+0xac>)
 800974c:	4913      	ldr	r1, [pc, #76]	@ (800979c <PixelDmxConfiguration::PixelDmxConfiguration()+0xb0>)
 800974e:	2336      	movs	r3, #54	@ 0x36
 8009750:	f00e faa4 	bl	8017c9c <printf>
 8009754:	682b      	ldr	r3, [r5, #0]
 8009756:	b12b      	cbz	r3, 8009764 <PixelDmxConfiguration::PixelDmxConfiguration()+0x78>
 8009758:	4b0c      	ldr	r3, [pc, #48]	@ (800978c <PixelDmxConfiguration::PixelDmxConfiguration()+0xa0>)
 800975a:	4a0f      	ldr	r2, [pc, #60]	@ (8009798 <PixelDmxConfiguration::PixelDmxConfiguration()+0xac>)
 800975c:	480f      	ldr	r0, [pc, #60]	@ (800979c <PixelDmxConfiguration::PixelDmxConfiguration()+0xb0>)
 800975e:	2138      	movs	r1, #56	@ 0x38
 8009760:	f00e fb7c 	bl	8017e5c <__assert_func>
 8009764:	4a0c      	ldr	r2, [pc, #48]	@ (8009798 <PixelDmxConfiguration::PixelDmxConfiguration()+0xac>)
 8009766:	490d      	ldr	r1, [pc, #52]	@ (800979c <PixelDmxConfiguration::PixelDmxConfiguration()+0xb0>)
 8009768:	4809      	ldr	r0, [pc, #36]	@ (8009790 <PixelDmxConfiguration::PixelDmxConfiguration()+0xa4>)
 800976a:	602c      	str	r4, [r5, #0]
 800976c:	233b      	movs	r3, #59	@ 0x3b
 800976e:	f00e fa95 	bl	8017c9c <printf>
 8009772:	4620      	mov	r0, r4
 8009774:	bd38      	pop	{r3, r4, r5, pc}
 8009776:	bf00      	nop
 8009778:	ff000001 			@ <UNDEFINED> instruction: 0xff000001
 800977c:	08018417 	stmdaeq	r1, {r0, r1, r2, r4, sl, pc}
 8009780:	20000078 	andcs	r0, r0, r8, ror r0
 8009784:	08018442 	stmdaeq	r1, {r1, r6, sl, pc}
 8009788:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 800978c:	08018463 	stmdaeq	r1, {r0, r1, r5, r6, sl, pc}
 8009790:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}
 8009794:	20000074 	andcs	r0, r0, r4, ror r0
 8009798:	08018484 	stmdaeq	r1, {r2, r7, sl, pc}
 800979c:	0801849a 	stmdaeq	r1, {r1, r3, r4, r7, sl, pc}

080097a0 <RDMSubDevices::~RDMSubDevices()>:
 80097a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80097a2:	4a12      	ldr	r2, [pc, #72]	@ (80097ec <RDMSubDevices::~RDMSubDevices()+0x4c>)
 80097a4:	4912      	ldr	r1, [pc, #72]	@ (80097f0 <RDMSubDevices::~RDMSubDevices()+0x50>)
 80097a6:	4604      	mov	r4, r0
 80097a8:	2348      	movs	r3, #72	@ 0x48
 80097aa:	4812      	ldr	r0, [pc, #72]	@ (80097f4 <RDMSubDevices::~RDMSubDevices()+0x54>)
 80097ac:	f00e fa76 	bl	8017c9c <printf>
 80097b0:	2500      	movs	r5, #0
 80097b2:	462e      	mov	r6, r5
 80097b4:	88a3      	ldrh	r3, [r4, #4]
 80097b6:	6820      	ldr	r0, [r4, #0]
 80097b8:	42ab      	cmp	r3, r5
 80097ba:	d80c      	bhi.n	80097d6 <RDMSubDevices::~RDMSubDevices()+0x36>
 80097bc:	b108      	cbz	r0, 80097c2 <RDMSubDevices::~RDMSubDevices()+0x22>
 80097be:	f00e fcbf 	bl	8018140 <operator delete[](void*)>
 80097c2:	2300      	movs	r3, #0
 80097c4:	80a3      	strh	r3, [r4, #4]
 80097c6:	4a09      	ldr	r2, [pc, #36]	@ (80097ec <RDMSubDevices::~RDMSubDevices()+0x4c>)
 80097c8:	4909      	ldr	r1, [pc, #36]	@ (80097f0 <RDMSubDevices::~RDMSubDevices()+0x50>)
 80097ca:	480b      	ldr	r0, [pc, #44]	@ (80097f8 <RDMSubDevices::~RDMSubDevices()+0x58>)
 80097cc:	2351      	movs	r3, #81	@ 0x51
 80097ce:	f00e fa65 	bl	8017c9c <printf>
 80097d2:	4620      	mov	r0, r4
 80097d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80097d6:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80097da:	00af      	lsls	r7, r5, #2
 80097dc:	b110      	cbz	r0, 80097e4 <RDMSubDevices::~RDMSubDevices()+0x44>
 80097de:	6803      	ldr	r3, [r0, #0]
 80097e0:	685b      	ldr	r3, [r3, #4]
 80097e2:	4798      	blx	r3
 80097e4:	6823      	ldr	r3, [r4, #0]
 80097e6:	3501      	adds	r5, #1
 80097e8:	51de      	str	r6, [r3, r7]
 80097ea:	e7e3      	b.n	80097b4 <RDMSubDevices::~RDMSubDevices()+0x14>
 80097ec:	080184cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, pc}
 80097f0:	080184da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sl, pc}
 80097f4:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 80097f8:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}

080097fc <LLRPDevice::LLRPDevice()>:
 80097fc:	b570      	push	{r4, r5, r6, lr}
 80097fe:	2100      	movs	r1, #0
 8009800:	4605      	mov	r5, r0
 8009802:	f002 fbac 	bl	800bf5e <RDMHandler::RDMHandler(bool)>
 8009806:	2335      	movs	r3, #53	@ 0x35
 8009808:	4a13      	ldr	r2, [pc, #76]	@ (8009858 <LLRPDevice::LLRPDevice()+0x5c>)
 800980a:	4914      	ldr	r1, [pc, #80]	@ (800985c <LLRPDevice::LLRPDevice()+0x60>)
 800980c:	4814      	ldr	r0, [pc, #80]	@ (8009860 <LLRPDevice::LLRPDevice()+0x64>)
 800980e:	4e15      	ldr	r6, [pc, #84]	@ (8009864 <LLRPDevice::LLRPDevice()+0x68>)
 8009810:	f00e fa44 	bl	8017c9c <printf>
 8009814:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 8009818:	f009 f870 	bl	80128fc <net::udp_begin(unsigned short)>
 800981c:	1c43      	adds	r3, r0, #1
 800981e:	4604      	mov	r4, r0
 8009820:	d00b      	beq.n	800983a <LLRPDevice::LLRPDevice()+0x3e>
 8009822:	6030      	str	r0, [r6, #0]
 8009824:	4810      	ldr	r0, [pc, #64]	@ (8009868 <LLRPDevice::LLRPDevice()+0x6c>)
 8009826:	f008 fc51 	bl	80120cc <net::igmp_join(unsigned long)>
 800982a:	4a0b      	ldr	r2, [pc, #44]	@ (8009858 <LLRPDevice::LLRPDevice()+0x5c>)
 800982c:	490b      	ldr	r1, [pc, #44]	@ (800985c <LLRPDevice::LLRPDevice()+0x60>)
 800982e:	480f      	ldr	r0, [pc, #60]	@ (800986c <LLRPDevice::LLRPDevice()+0x70>)
 8009830:	233b      	movs	r3, #59	@ 0x3b
 8009832:	f00e fa33 	bl	8017c9c <printf>
 8009836:	4628      	mov	r0, r5
 8009838:	bd70      	pop	{r4, r5, r6, pc}
 800983a:	4b0d      	ldr	r3, [pc, #52]	@ (8009870 <LLRPDevice::LLRPDevice()+0x74>)
 800983c:	4a0d      	ldr	r2, [pc, #52]	@ (8009874 <LLRPDevice::LLRPDevice()+0x78>)
 800983e:	480e      	ldr	r0, [pc, #56]	@ (8009878 <LLRPDevice::LLRPDevice()+0x7c>)
 8009840:	21b9      	movs	r1, #185	@ 0xb9
 8009842:	f00e fb0b 	bl	8017e5c <__assert_func>
 8009846:	4b0d      	ldr	r3, [pc, #52]	@ (800987c <LLRPDevice::LLRPDevice()+0x80>)
 8009848:	4a03      	ldr	r2, [pc, #12]	@ (8009858 <LLRPDevice::LLRPDevice()+0x5c>)
 800984a:	4804      	ldr	r0, [pc, #16]	@ (800985c <LLRPDevice::LLRPDevice()+0x60>)
 800984c:	6034      	str	r4, [r6, #0]
 800984e:	2138      	movs	r1, #56	@ 0x38
 8009850:	f00e fb04 	bl	8017e5c <__assert_func>
 8009854:	e7e6      	b.n	8009824 <LLRPDevice::LLRPDevice()+0x28>
 8009856:	bf00      	nop
 8009858:	080185cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, pc}
 800985c:	080184fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, pc}
 8009860:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 8009864:	2000c88c 	andcs	ip, r0, ip, lsl #17
 8009868:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 800986c:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}
 8009870:	08018522 	stmdaeq	r1, {r1, r5, r8, sl, pc}
 8009874:	0801852f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, pc}
 8009878:	08018535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, pc}
 800987c:	0801855b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, pc}

08009880 <RDMDeviceResponder::~RDMDeviceResponder()>:
 8009880:	4b14      	ldr	r3, [pc, #80]	@ (80098d4 <RDMDeviceResponder::~RDMDeviceResponder()+0x54>)
 8009882:	b570      	push	{r4, r5, r6, lr}
 8009884:	4604      	mov	r4, r0
 8009886:	f840 3b60 	str.w	r3, [r0], #96
 800988a:	f7ff ff89 	bl	80097a0 <RDMSubDevices::~RDMSubDevices()>
 800988e:	4a12      	ldr	r2, [pc, #72]	@ (80098d8 <RDMDeviceResponder::~RDMDeviceResponder()+0x58>)
 8009890:	4912      	ldr	r1, [pc, #72]	@ (80098dc <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>)
 8009892:	4813      	ldr	r0, [pc, #76]	@ (80098e0 <RDMDeviceResponder::~RDMDeviceResponder()+0x60>)
 8009894:	2353      	movs	r3, #83	@ 0x53
 8009896:	f00e fa01 	bl	8017c9c <printf>
 800989a:	2500      	movs	r5, #0
 800989c:	462e      	mov	r6, r5
 800989e:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80098a2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80098a4:	429d      	cmp	r5, r3
 80098a6:	d30a      	bcc.n	80098be <RDMDeviceResponder::~RDMDeviceResponder()+0x3e>
 80098a8:	b108      	cbz	r0, 80098ae <RDMDeviceResponder::~RDMDeviceResponder()+0x2e>
 80098aa:	f00e fc49 	bl	8018140 <operator delete[](void*)>
 80098ae:	4a0a      	ldr	r2, [pc, #40]	@ (80098d8 <RDMDeviceResponder::~RDMDeviceResponder()+0x58>)
 80098b0:	490a      	ldr	r1, [pc, #40]	@ (80098dc <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>)
 80098b2:	480c      	ldr	r0, [pc, #48]	@ (80098e4 <RDMDeviceResponder::~RDMDeviceResponder()+0x64>)
 80098b4:	235c      	movs	r3, #92	@ 0x5c
 80098b6:	f00e f9f1 	bl	8017c9c <printf>
 80098ba:	4620      	mov	r0, r4
 80098bc:	bd70      	pop	{r4, r5, r6, pc}
 80098be:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80098c2:	b128      	cbz	r0, 80098d0 <RDMDeviceResponder::~RDMDeviceResponder()+0x50>
 80098c4:	6803      	ldr	r3, [r0, #0]
 80098c6:	685b      	ldr	r3, [r3, #4]
 80098c8:	4798      	blx	r3
 80098ca:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80098cc:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 80098d0:	3501      	adds	r5, #1
 80098d2:	e7e4      	b.n	800989e <RDMDeviceResponder::~RDMDeviceResponder()+0x1e>
 80098d4:	0801b8b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, ip, sp, pc}
 80098d8:	0801856f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, pc}
 80098dc:	0801857b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, pc}
 80098e0:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 80098e4:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}

080098e8 <RDMNetDevice::~RDMNetDevice()>:
 80098e8:	4b17      	ldr	r3, [pc, #92]	@ (8009948 <RDMNetDevice::~RDMNetDevice()+0x60>)
 80098ea:	4a18      	ldr	r2, [pc, #96]	@ (800994c <RDMNetDevice::~RDMNetDevice()+0x64>)
 80098ec:	4918      	ldr	r1, [pc, #96]	@ (8009950 <RDMNetDevice::~RDMNetDevice()+0x68>)
 80098ee:	b510      	push	{r4, lr}
 80098f0:	6003      	str	r3, [r0, #0]
 80098f2:	4604      	mov	r4, r0
 80098f4:	2337      	movs	r3, #55	@ 0x37
 80098f6:	4817      	ldr	r0, [pc, #92]	@ (8009954 <RDMNetDevice::~RDMNetDevice()+0x6c>)
 80098f8:	f00e f9d0 	bl	8017c9c <printf>
 80098fc:	4a13      	ldr	r2, [pc, #76]	@ (800994c <RDMNetDevice::~RDMNetDevice()+0x64>)
 80098fe:	4914      	ldr	r1, [pc, #80]	@ (8009950 <RDMNetDevice::~RDMNetDevice()+0x68>)
 8009900:	4815      	ldr	r0, [pc, #84]	@ (8009958 <RDMNetDevice::~RDMNetDevice()+0x70>)
 8009902:	2339      	movs	r3, #57	@ 0x39
 8009904:	f00e f9ca 	bl	8017c9c <printf>
 8009908:	4a14      	ldr	r2, [pc, #80]	@ (800995c <RDMNetDevice::~RDMNetDevice()+0x74>)
 800990a:	4915      	ldr	r1, [pc, #84]	@ (8009960 <RDMNetDevice::~RDMNetDevice()+0x78>)
 800990c:	4811      	ldr	r0, [pc, #68]	@ (8009954 <RDMNetDevice::~RDMNetDevice()+0x6c>)
 800990e:	233f      	movs	r3, #63	@ 0x3f
 8009910:	f00e f9c4 	bl	8017c9c <printf>
 8009914:	4813      	ldr	r0, [pc, #76]	@ (8009964 <RDMNetDevice::~RDMNetDevice()+0x7c>)
 8009916:	f008 fbf7 	bl	8012108 <net::igmp_leave(unsigned long)>
 800991a:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 800991e:	f009 f803 	bl	8012928 <net::udp_end(unsigned short)>
 8009922:	b128      	cbz	r0, 8009930 <RDMNetDevice::~RDMNetDevice()+0x48>
 8009924:	4b10      	ldr	r3, [pc, #64]	@ (8009968 <RDMNetDevice::~RDMNetDevice()+0x80>)
 8009926:	4a11      	ldr	r2, [pc, #68]	@ (800996c <RDMNetDevice::~RDMNetDevice()+0x84>)
 8009928:	4811      	ldr	r0, [pc, #68]	@ (8009970 <RDMNetDevice::~RDMNetDevice()+0x88>)
 800992a:	21bf      	movs	r1, #191	@ 0xbf
 800992c:	f00e fa96 	bl	8017e5c <__assert_func>
 8009930:	4a0a      	ldr	r2, [pc, #40]	@ (800995c <RDMNetDevice::~RDMNetDevice()+0x74>)
 8009932:	490b      	ldr	r1, [pc, #44]	@ (8009960 <RDMNetDevice::~RDMNetDevice()+0x78>)
 8009934:	4808      	ldr	r0, [pc, #32]	@ (8009958 <RDMNetDevice::~RDMNetDevice()+0x70>)
 8009936:	2344      	movs	r3, #68	@ 0x44
 8009938:	f00e f9b0 	bl	8017c9c <printf>
 800993c:	4620      	mov	r0, r4
 800993e:	f7ff ff9f 	bl	8009880 <RDMDeviceResponder::~RDMDeviceResponder()>
 8009942:	4620      	mov	r0, r4
 8009944:	bd10      	pop	{r4, pc}
 8009946:	bf00      	nop
 8009948:	08019370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, pc}
 800994c:	0801859b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, pc}
 8009950:	080185a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, pc}
 8009954:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 8009958:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}
 800995c:	080185cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sl, pc}
 8009960:	080184fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, pc}
 8009964:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 8009968:	080185d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl, pc}
 800996c:	080185e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, pc}
 8009970:	08018535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, pc}

08009974 <RDMNetDevice::~RDMNetDevice()>:
 8009974:	b510      	push	{r4, lr}
 8009976:	4604      	mov	r4, r0
 8009978:	f7ff ffb6 	bl	80098e8 <RDMNetDevice::~RDMNetDevice()>
 800997c:	4620      	mov	r0, r4
 800997e:	21ac      	movs	r1, #172	@ 0xac
 8009980:	f00e fbe0 	bl	8018144 <operator delete(void*, unsigned int)>
 8009984:	4620      	mov	r0, r4
 8009986:	bd10      	pop	{r4, pc}

08009988 <RDMDeviceResponder::~RDMDeviceResponder()>:
 8009988:	b510      	push	{r4, lr}
 800998a:	4604      	mov	r4, r0
 800998c:	f7ff ff78 	bl	8009880 <RDMDeviceResponder::~RDMDeviceResponder()>
 8009990:	4620      	mov	r0, r4
 8009992:	21a0      	movs	r1, #160	@ 0xa0
 8009994:	f00e fbd6 	bl	8018144 <operator delete(void*, unsigned int)>
 8009998:	4620      	mov	r0, r4
 800999a:	bd10      	pop	{r4, pc}

0800999c <RDMNetDevice::Print()>:
 800999c:	b530      	push	{r4, r5, lr}
 800999e:	b091      	sub	sp, #68	@ 0x44
 80099a0:	2300      	movs	r3, #0
 80099a2:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
 80099a6:	4b1a      	ldr	r3, [pc, #104]	@ (8009a10 <RDMNetDevice::Print()+0x74>)
 80099a8:	681b      	ldr	r3, [r3, #0]
 80099aa:	aa02      	add	r2, sp, #8
 80099ac:	4604      	mov	r4, r0
 80099ae:	f103 0110 	add.w	r1, r3, #16
 80099b2:	4610      	mov	r0, r2
 80099b4:	f813 5b01 	ldrb.w	r5, [r3], #1
 80099b8:	f802 5b01 	strb.w	r5, [r2], #1
 80099bc:	428b      	cmp	r3, r1
 80099be:	d1f9      	bne.n	80099b4 <RDMNetDevice::Print()+0x18>
 80099c0:	a906      	add	r1, sp, #24
 80099c2:	f00e fa45 	bl	8017e50 <uuid_unparse>
 80099c6:	4813      	ldr	r0, [pc, #76]	@ (8009a14 <RDMNetDevice::Print()+0x78>)
 80099c8:	f00e f968 	bl	8017c9c <printf>
 80099cc:	a906      	add	r1, sp, #24
 80099ce:	4812      	ldr	r0, [pc, #72]	@ (8009a18 <RDMNetDevice::Print()+0x7c>)
 80099d0:	f00e f964 	bl	8017c9c <printf>
 80099d4:	4811      	ldr	r0, [pc, #68]	@ (8009a1c <RDMNetDevice::Print()+0x80>)
 80099d6:	f00e f961 	bl	8017c9c <printf>
 80099da:	f241 51c1 	movw	r1, #5569	@ 0x15c1
 80099de:	4810      	ldr	r0, [pc, #64]	@ (8009a20 <RDMNetDevice::Print()+0x84>)
 80099e0:	f00e f95c 	bl	8017c9c <printf>
 80099e4:	2385      	movs	r3, #133	@ 0x85
 80099e6:	9300      	str	r3, [sp, #0]
 80099e8:	22ff      	movs	r2, #255	@ 0xff
 80099ea:	23fa      	movs	r3, #250	@ 0xfa
 80099ec:	21ef      	movs	r1, #239	@ 0xef
 80099ee:	480d      	ldr	r0, [pc, #52]	@ (8009a24 <RDMNetDevice::Print()+0x88>)
 80099f0:	f00e f954 	bl	8017c9c <printf>
 80099f4:	2386      	movs	r3, #134	@ 0x86
 80099f6:	9300      	str	r3, [sp, #0]
 80099f8:	22ff      	movs	r2, #255	@ 0xff
 80099fa:	23fa      	movs	r3, #250	@ 0xfa
 80099fc:	21ef      	movs	r1, #239	@ 0xef
 80099fe:	480a      	ldr	r0, [pc, #40]	@ (8009a28 <RDMNetDevice::Print()+0x8c>)
 8009a00:	f00e f94c 	bl	8017c9c <printf>
 8009a04:	4620      	mov	r0, r4
 8009a06:	f002 f973 	bl	800bcf0 <RDMDeviceResponder::Print()>
 8009a0a:	b011      	add	sp, #68	@ 0x44
 8009a0c:	bd30      	pop	{r4, r5, pc}
 8009a0e:	bf00      	nop
 8009a10:	2000cdc0 	andcs	ip, r0, r0, asr #27
 8009a14:	080185e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sl, pc}
 8009a18:	080185ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl, pc}
 8009a1c:	080185fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, pc}
 8009a20:	08018607 	stmdaeq	r1, {r0, r1, r2, r9, sl, pc}
 8009a24:	08018621 	stmdaeq	r1, {r0, r5, r9, sl, pc}
 8009a28:	08018644 	stmdaeq	r1, {r2, r6, r9, sl, pc}

08009a2c <Hardware::RebootHandler()>:
 8009a2c:	b508      	push	{r3, lr}
 8009a2e:	4b05      	ldr	r3, [pc, #20]	@ (8009a44 <Hardware::RebootHandler()+0x18>)
 8009a30:	6818      	ldr	r0, [r3, #0]
 8009a32:	f006 fcab 	bl	801038c <WS28xxMulti::Blackout()>
 8009a36:	4b04      	ldr	r3, [pc, #16]	@ (8009a48 <Hardware::RebootHandler()+0x1c>)
 8009a38:	6818      	ldr	r0, [r3, #0]
 8009a3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009a3e:	f001 be19 	b.w	800b674 <DdpDisplay::Stop()>
 8009a42:	bf00      	nop
 8009a44:	2000c9a4 	andcs	ip, r0, r4, lsr #19
 8009a48:	20000648 	andcs	r0, r0, r8, asr #12

08009a4c <main>:
 8009a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a50:	f6ad 1dbc 	subw	sp, sp, #2492	@ 0x9bc
 8009a54:	a877      	add	r0, sp, #476	@ 0x1dc
 8009a56:	f00b fd15 	bl	8015484 <Hardware::Hardware()>
 8009a5a:	a863      	add	r0, sp, #396	@ 0x18c
 8009a5c:	f00a f816 	bl	8013a8c <DisplayUdf::DisplayUdf()>
 8009a60:	a807      	add	r0, sp, #28
 8009a62:	f00a fb2d 	bl	80140c0 <ConfigStore::ConfigStore()>
 8009a66:	49a7      	ldr	r1, [pc, #668]	@ (8009d04 <main+0x2b8>)
 8009a68:	4da7      	ldr	r5, [pc, #668]	@ (8009d08 <main+0x2bc>)
 8009a6a:	2203      	movs	r2, #3
 8009a6c:	a863      	add	r0, sp, #396	@ 0x18c
 8009a6e:	f7ff fde9 	bl	8009644 <Display::TextStatus(char const*, unsigned long)>
 8009a72:	a8cc      	add	r0, sp, #816	@ 0x330
 8009a74:	f007 fcfe 	bl	8011474 <Network::Network()>
 8009a78:	49a4      	ldr	r1, [pc, #656]	@ (8009d0c <main+0x2c0>)
 8009a7a:	2202      	movs	r2, #2
 8009a7c:	a863      	add	r0, sp, #396	@ 0x18c
 8009a7e:	f7ff fde1 	bl	8009644 <Display::TextStatus(char const*, unsigned long)>
 8009a82:	4ba3      	ldr	r3, [pc, #652]	@ (8009d10 <main+0x2c4>)
 8009a84:	4aa3      	ldr	r2, [pc, #652]	@ (8009d14 <main+0x2c8>)
 8009a86:	49a4      	ldr	r1, [pc, #656]	@ (8009d18 <main+0x2cc>)
 8009a88:	a808      	add	r0, sp, #32
 8009a8a:	f00b facb 	bl	8015024 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8009a8e:	48a3      	ldr	r0, [pc, #652]	@ (8009d1c <main+0x2d0>)
 8009a90:	f00e f959 	bl	8017d46 <puts>
 8009a94:	49a2      	ldr	r1, [pc, #648]	@ (8009d20 <main+0x2d4>)
 8009a96:	48a3      	ldr	r0, [pc, #652]	@ (8009d24 <main+0x2d8>)
 8009a98:	f00e f900 	bl	8017c9c <printf>
 8009a9c:	a809      	add	r0, sp, #36	@ 0x24
 8009a9e:	f007 fa9b 	bl	8010fd8 <MDNS::MDNS()>
 8009aa2:	2100      	movs	r1, #0
 8009aa4:	4ba0      	ldr	r3, [pc, #640]	@ (8009d28 <main+0x2dc>)
 8009aa6:	9100      	str	r1, [sp, #0]
 8009aa8:	2207      	movs	r2, #7
 8009aaa:	a809      	add	r0, sp, #36	@ 0x24
 8009aac:	f007 faea 	bl	8011084 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 8009ab0:	a809      	add	r0, sp, #36	@ 0x24
 8009ab2:	f007 fc15 	bl	80112e0 <MDNS::Print()>
 8009ab6:	a853      	add	r0, sp, #332	@ 0x14c
 8009ab8:	f7ff fe18 	bl	80096ec <PixelDmxConfiguration::PixelDmxConfiguration()>
 8009abc:	a834      	add	r0, sp, #208	@ 0xd0
 8009abe:	f003 fa8b 	bl	800cfd8 <PixelDmxParams::PixelDmxParams()>
 8009ac2:	a834      	add	r0, sp, #208	@ 0xd0
 8009ac4:	f003 fe58 	bl	800d778 <PixelDmxParams::Load()>
 8009ac8:	a834      	add	r0, sp, #208	@ 0xd0
 8009aca:	f003 fd6f 	bl	800d5ac <PixelDmxParams::Set()>
 8009ace:	a80d      	add	r0, sp, #52	@ 0x34
 8009ad0:	f004 f87c 	bl	800dbcc <WS28xxDmxMulti::WS28xxDmxMulti()>
 8009ad4:	a8fa      	add	r0, sp, #1000	@ 0x3e8
 8009ad6:	f001 fd71 	bl	800b5bc <DdpDisplay::DdpDisplay()>
 8009ada:	9b5c      	ldr	r3, [sp, #368]	@ 0x170
 8009adc:	9a55      	ldr	r2, [sp, #340]	@ 0x154
 8009ade:	f8dd 9168 	ldr.w	r9, [sp, #360]	@ 0x168
 8009ae2:	93fe      	str	r3, [sp, #1016]	@ 0x3f8
 8009ae4:	2a04      	cmp	r2, #4
 8009ae6:	fb02 f303 	mul.w	r3, r2, r3
 8009aea:	93ff      	str	r3, [sp, #1020]	@ 0x3fc
 8009aec:	bf14      	ite	ne
 8009aee:	f44f 73ff 	movne.w	r3, #510	@ 0x1fe
 8009af2:	f44f 7300 	moveq.w	r3, #512	@ 0x200
 8009af6:	f8cd 3400 	str.w	r3, [sp, #1024]	@ 0x400
 8009afa:	464b      	mov	r3, r9
 8009afc:	2b08      	cmp	r3, #8
 8009afe:	ac0a      	add	r4, sp, #40	@ 0x28
 8009b00:	bf28      	it	cs
 8009b02:	2308      	movcs	r3, #8
 8009b04:	4649      	mov	r1, r9
 8009b06:	4620      	mov	r0, r4
 8009b08:	f8cd 3404 	str.w	r3, [sp, #1028]	@ 0x404
 8009b0c:	f89d 80e0 	ldrb.w	r8, [sp, #224]	@ 0xe0
 8009b10:	f005 f862 	bl	800ebd8 <PixelPatterns::PixelPatterns(unsigned long)>
 8009b14:	682b      	ldr	r3, [r5, #0]
 8009b16:	b12b      	cbz	r3, 8009b24 <main+0xd8>
 8009b18:	4b84      	ldr	r3, [pc, #528]	@ (8009d2c <main+0x2e0>)
 8009b1a:	4a85      	ldr	r2, [pc, #532]	@ (8009d30 <main+0x2e4>)
 8009b1c:	4885      	ldr	r0, [pc, #532]	@ (8009d34 <main+0x2e8>)
 8009b1e:	2125      	movs	r1, #37	@ 0x25
 8009b20:	f00e f99c 	bl	8017e5c <__assert_func>
 8009b24:	f1b8 0f05 	cmp.w	r8, #5
 8009b28:	602c      	str	r4, [r5, #0]
 8009b2a:	dd58      	ble.n	8009bde <main+0x192>
 8009b2c:	ab0d      	add	r3, sp, #52	@ 0x34
 8009b2e:	a8fa      	add	r0, sp, #1000	@ 0x3e8
 8009b30:	f8cd 3408 	str.w	r3, [sp, #1032]	@ 0x408
 8009b34:	f001 ff3c 	bl	800b9b0 <DdpDisplay::Print()>
 8009b38:	497f      	ldr	r1, [pc, #508]	@ (8009d38 <main+0x2ec>)
 8009b3a:	2203      	movs	r2, #3
 8009b3c:	a863      	add	r0, sp, #396	@ 0x18c
 8009b3e:	f7ff fd81 	bl	8009644 <Display::TextStatus(char const*, unsigned long)>
 8009b42:	9856      	ldr	r0, [sp, #344]	@ 0x158
 8009b44:	f004 ff1c 	bl	800e980 <pixel::pixel_get_type(pixel::Type)>
 8009b48:	9b53      	ldr	r3, [sp, #332]	@ 0x14c
 8009b4a:	4a7c      	ldr	r2, [pc, #496]	@ (8009d3c <main+0x2f0>)
 8009b4c:	e9cd 0300 	strd	r0, r3, [sp]
 8009b50:	2120      	movs	r1, #32
 8009b52:	464b      	mov	r3, r9
 8009b54:	a819      	add	r0, sp, #100	@ 0x64
 8009b56:	f00e f8c9 	bl	8017cec <snprintf>
 8009b5a:	4a79      	ldr	r2, [pc, #484]	@ (8009d40 <main+0x2f4>)
 8009b5c:	2120      	movs	r1, #32
 8009b5e:	a822      	add	r0, sp, #136	@ 0x88
 8009b60:	f00e f8c4 	bl	8017cec <snprintf>
 8009b64:	4604      	mov	r4, r0
 8009b66:	202c      	movs	r0, #44	@ 0x2c
 8009b68:	f00e faee 	bl	8018148 <operator new(unsigned int)>
 8009b6c:	4603      	mov	r3, r0
 8009b6e:	2200      	movs	r2, #0
 8009b70:	6042      	str	r2, [r0, #4]
 8009b72:	6282      	str	r2, [r0, #40]	@ 0x28
 8009b74:	f100 0528 	add.w	r5, r0, #40	@ 0x28
 8009b78:	f823 2b08 	strh.w	r2, [r3], #8
 8009b7c:	aa19      	add	r2, sp, #100	@ 0x64
 8009b7e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009b82:	b111      	cbz	r1, 8009b8a <main+0x13e>
 8009b84:	42ab      	cmp	r3, r5
 8009b86:	f040 80b7 	bne.w	8009cf8 <main+0x2ac>
 8009b8a:	2301      	movs	r3, #1
 8009b8c:	461a      	mov	r2, r3
 8009b8e:	a90b      	add	r1, sp, #44	@ 0x2c
 8009b90:	900b      	str	r0, [sp, #44]	@ 0x2c
 8009b92:	a8a1      	add	r0, sp, #644	@ 0x284
 8009b94:	f001 ffa6 	bl	800bae4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>
 8009b98:	a8c9      	add	r0, sp, #804	@ 0x324
 8009b9a:	f7ff fe2f 	bl	80097fc <LLRPDevice::LLRPDevice()>
 8009b9e:	4b69      	ldr	r3, [pc, #420]	@ (8009d44 <main+0x2f8>)
 8009ba0:	4a69      	ldr	r2, [pc, #420]	@ (8009d48 <main+0x2fc>)
 8009ba2:	496a      	ldr	r1, [pc, #424]	@ (8009d4c <main+0x300>)
 8009ba4:	93a1      	str	r3, [sp, #644]	@ 0x284
 8009ba6:	486a      	ldr	r0, [pc, #424]	@ (8009d50 <main+0x304>)
 8009ba8:	2331      	movs	r3, #49	@ 0x31
 8009baa:	f00e f877 	bl	8017c9c <printf>
 8009bae:	4a66      	ldr	r2, [pc, #408]	@ (8009d48 <main+0x2fc>)
 8009bb0:	4966      	ldr	r1, [pc, #408]	@ (8009d4c <main+0x300>)
 8009bb2:	4868      	ldr	r0, [pc, #416]	@ (8009d54 <main+0x308>)
 8009bb4:	2333      	movs	r3, #51	@ 0x33
 8009bb6:	f00e f871 	bl	8017c9c <printf>
 8009bba:	b2e0      	uxtb	r0, r4
 8009bbc:	2820      	cmp	r0, #32
 8009bbe:	f89d 32da 	ldrb.w	r3, [sp, #730]	@ 0x2da
 8009bc2:	bf28      	it	cs
 8009bc4:	2020      	movcs	r0, #32
 8009bc6:	4602      	mov	r2, r0
 8009bc8:	2b00      	cmp	r3, #0
 8009bca:	f040 820c 	bne.w	8009fe6 <main+0x59a>
 8009bce:	ab22      	add	r3, sp, #136	@ 0x88
 8009bd0:	a9a2      	add	r1, sp, #648	@ 0x288
 8009bd2:	3a01      	subs	r2, #1
 8009bd4:	f080 820a 	bcs.w	8009fec <main+0x5a0>
 8009bd8:	f88d 02d9 	strb.w	r0, [sp, #729]	@ 0x2d9
 8009bdc:	e0e1      	b.n	8009da2 <main+0x356>
 8009bde:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8009be2:	f8df a178 	ldr.w	sl, [pc, #376]	@ 8009d5c <main+0x310>
 8009be6:	f8df b178 	ldr.w	fp, [pc, #376]	@ 8009d60 <main+0x314>
 8009bea:	f8c4 8000 	str.w	r8, [r4]
 8009bee:	9305      	str	r3, [sp, #20]
 8009bf0:	2400      	movs	r4, #0
 8009bf2:	9a05      	ldr	r2, [sp, #20]
 8009bf4:	2a04      	cmp	r2, #4
 8009bf6:	d837      	bhi.n	8009c68 <main+0x21c>
 8009bf8:	e8df f002 	tbb	[pc, r2]
 8009bfc:	22190f03 	andscs	r0, r9, #3, 30
 8009c00:	2300002a 	movwcs	r0, #42	@ 0x2a
 8009c04:	2264      	movs	r2, #100	@ 0x64
 8009c06:	4621      	mov	r1, r4
 8009c08:	a80a      	add	r0, sp, #40	@ 0x28
 8009c0a:	f005 f83d 	bl	800ec88 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)>
 8009c0e:	3401      	adds	r4, #1
 8009c10:	2c08      	cmp	r4, #8
 8009c12:	f10a 0a20 	add.w	sl, sl, #32
 8009c16:	d1ec      	bne.n	8009bf2 <main+0x1a6>
 8009c18:	e788      	b.n	8009b2c <main+0xe0>
 8009c1a:	2364      	movs	r3, #100	@ 0x64
 8009c1c:	2200      	movs	r2, #0
 8009c1e:	e9cd 3200 	strd	r3, r2, [sp]
 8009c22:	4621      	mov	r1, r4
 8009c24:	465b      	mov	r3, fp
 8009c26:	a80a      	add	r0, sp, #40	@ 0x28
 8009c28:	f005 f844 	bl	800ecb4 <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009c2c:	e7ef      	b.n	8009c0e <main+0x1c2>
 8009c2e:	2300      	movs	r3, #0
 8009c30:	9300      	str	r3, [sp, #0]
 8009c32:	465a      	mov	r2, fp
 8009c34:	2364      	movs	r3, #100	@ 0x64
 8009c36:	4621      	mov	r1, r4
 8009c38:	a80a      	add	r0, sp, #40	@ 0x28
 8009c3a:	f005 f857 	bl	800ecec <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009c3e:	e7e6      	b.n	8009c0e <main+0x1c2>
 8009c40:	2364      	movs	r3, #100	@ 0x64
 8009c42:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
 8009c46:	4621      	mov	r1, r4
 8009c48:	a80a      	add	r0, sp, #40	@ 0x28
 8009c4a:	f005 f869 	bl	800ed20 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)>
 8009c4e:	e7de      	b.n	8009c0e <main+0x1c2>
 8009c50:	2364      	movs	r3, #100	@ 0x64
 8009c52:	2200      	movs	r2, #0
 8009c54:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009c58:	230a      	movs	r3, #10
 8009c5a:	9300      	str	r3, [sp, #0]
 8009c5c:	4621      	mov	r1, r4
 8009c5e:	465b      	mov	r3, fp
 8009c60:	a80a      	add	r0, sp, #40	@ 0x28
 8009c62:	f005 f88d 	bl	800ed80 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009c66:	e7d2      	b.n	8009c0e <main+0x1c2>
 8009c68:	2600      	movs	r6, #0
 8009c6a:	4f3b      	ldr	r7, [pc, #236]	@ (8009d58 <main+0x30c>)
 8009c6c:	f8ca 601c 	str.w	r6, [sl, #28]
 8009c70:	4635      	mov	r5, r6
 8009c72:	f7ff fd25 	bl	80096c0 <PixelConfiguration::Get()>
 8009c76:	6803      	ldr	r3, [r0, #0]
 8009c78:	429e      	cmp	r6, r3
 8009c7a:	d308      	bcc.n	8009c8e <main+0x242>
 8009c7c:	6838      	ldr	r0, [r7, #0]
 8009c7e:	f005 fc79 	bl	800f574 <WS28xxMulti::IsUpdating()>
 8009c82:	2800      	cmp	r0, #0
 8009c84:	d1fa      	bne.n	8009c7c <main+0x230>
 8009c86:	6838      	ldr	r0, [r7, #0]
 8009c88:	f005 fb82 	bl	800f390 <WS28xxMulti::Update()>
 8009c8c:	e7bf      	b.n	8009c0e <main+0x1c2>
 8009c8e:	f7ff fd17 	bl	80096c0 <PixelConfiguration::Get()>
 8009c92:	68c3      	ldr	r3, [r0, #12]
 8009c94:	2b0d      	cmp	r3, #13
 8009c96:	d826      	bhi.n	8009ce6 <main+0x29a>
 8009c98:	e8df f003 	tbb	[pc, r3]
 8009c9c:	25252507 	strcs	r2, [r5, #-1287]!	@ 0xfffffaf9
 8009ca0:	1b252525 	blne	895313c <_sidata+0x936c58>
 8009ca4:	11252525 			@ <UNDEFINED> instruction: 0x11252525
 8009ca8:	e9cd1111 	stmib	sp, {r0, r4, r8, ip}^
 8009cac:	5500      	strb	r0, [r0, r4]
 8009cae:	2300      	movs	r3, #0
 8009cb0:	6838      	ldr	r0, [r7, #0]
 8009cb2:	4632      	mov	r2, r6
 8009cb4:	4621      	mov	r1, r4
 8009cb6:	f005 fd73 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 8009cba:	3601      	adds	r6, #1
 8009cbc:	e7d9      	b.n	8009c72 <main+0x226>
 8009cbe:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8009cc2:	9500      	str	r5, [sp, #0]
 8009cc4:	6838      	ldr	r0, [r7, #0]
 8009cc6:	23ff      	movs	r3, #255	@ 0xff
 8009cc8:	4632      	mov	r2, r6
 8009cca:	4621      	mov	r1, r4
 8009ccc:	f005 fe8c 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009cd0:	e7f3      	b.n	8009cba <main+0x26e>
 8009cd2:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8009cd6:	9500      	str	r5, [sp, #0]
 8009cd8:	6838      	ldr	r0, [r7, #0]
 8009cda:	2300      	movs	r3, #0
 8009cdc:	4632      	mov	r2, r6
 8009cde:	4621      	mov	r1, r4
 8009ce0:	f006 fd5e 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009ce4:	e7e9      	b.n	8009cba <main+0x26e>
 8009ce6:	e9cd 5500 	strd	r5, r5, [sp]
 8009cea:	2300      	movs	r3, #0
 8009cec:	6838      	ldr	r0, [r7, #0]
 8009cee:	4632      	mov	r2, r6
 8009cf0:	4621      	mov	r1, r4
 8009cf2:	f005 fc47 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 8009cf6:	e7e0      	b.n	8009cba <main+0x26e>
 8009cf8:	f803 1b01 	strb.w	r1, [r3], #1
 8009cfc:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8009cfe:	3101      	adds	r1, #1
 8009d00:	6281      	str	r1, [r0, #40]	@ 0x28
 8009d02:	e73c      	b.n	8009b7e <main+0x132>
 8009d04:	0801bc86 	stmdaeq	r1, {r1, r2, r7, sl, fp, ip, sp, pc}
 8009d08:	2000c9a0 	andcs	ip, r0, r0, lsr #19
 8009d0c:	0801bc76 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, fp, ip, sp, pc}
 8009d10:	08018667 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, pc}
 8009d14:	08018670 	stmdaeq	r1, {r4, r5, r6, r9, sl, pc}
 8009d18:	08019380 	stmdaeq	r1, {r7, r8, r9, ip, pc}
 8009d1c:	2000cd68 	andcs	ip, r0, r8, ror #26
 8009d20:	0801867c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, pc}
 8009d24:	080186a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, pc}
 8009d28:	080186af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r9, sl, pc}
 8009d2c:	08018463 	stmdaeq	r1, {r0, r1, r5, r6, sl, pc}
 8009d30:	080186bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, pc}
 8009d34:	080186cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, sl, pc}
 8009d38:	0801baae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, fp, ip, sp, pc}
 8009d3c:	080186f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, sl, pc}
 8009d40:	0801870b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, pc}
 8009d44:	08019370 	stmdaeq	r1, {r4, r5, r6, r8, r9, ip, pc}
 8009d48:	0801859c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, pc}
 8009d4c:	080185a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, pc}
 8009d50:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 8009d54:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}
 8009d58:	2000c99c 	mulcs	r0, ip, r9
 8009d5c:	2000c898 	mulcs	r0, r8, r8
 8009d60:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009d64:	f813 4b01 	ldrb.w	r4, [r3], #1
 8009d68:	f801 4b01 	strb.w	r4, [r1], #1
 8009d6c:	3a01      	subs	r2, #1
 8009d6e:	d2f9      	bcs.n	8009d64 <main+0x318>
 8009d70:	2401      	movs	r4, #1
 8009d72:	2600      	movs	r6, #0
 8009d74:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8009d78:	4daa      	ldr	r5, [pc, #680]	@ (800a024 <main+0x5d8>)
 8009d7a:	9000      	str	r0, [sp, #0]
 8009d7c:	f88d 02d8 	strb.w	r0, [sp, #728]	@ 0x2d8
 8009d80:	f88d 0120 	strb.w	r0, [sp, #288]	@ 0x120
 8009d84:	abaa      	add	r3, sp, #680	@ 0x2a8
 8009d86:	6828      	ldr	r0, [r5, #0]
 8009d88:	2204      	movs	r2, #4
 8009d8a:	2109      	movs	r1, #9
 8009d8c:	f00a fa26 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009d90:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8009d94:	9400      	str	r4, [sp, #0]
 8009d96:	6828      	ldr	r0, [r5, #0]
 8009d98:	ab48      	add	r3, sp, #288	@ 0x120
 8009d9a:	2224      	movs	r2, #36	@ 0x24
 8009d9c:	2109      	movs	r1, #9
 8009d9e:	f00a fa1d 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009da2:	4ba1      	ldr	r3, [pc, #644]	@ (800a028 <main+0x5dc>)
 8009da4:	93b2      	str	r3, [sp, #712]	@ 0x2c8
 8009da6:	a8a1      	add	r0, sp, #644	@ 0x284
 8009da8:	f001 fef6 	bl	800bb98 <RDMDeviceResponder::Init()>
 8009dac:	a848      	add	r0, sp, #288	@ 0x120
 8009dae:	f001 fe2f 	bl	800ba10 <RDMDeviceParams::RDMDeviceParams()>
 8009db2:	a848      	add	r0, sp, #288	@ 0x120
 8009db4:	f001 fe3f 	bl	800ba36 <RDMDeviceParams::Load()>
 8009db8:	a9a2      	add	r1, sp, #648	@ 0x288
 8009dba:	a848      	add	r0, sp, #288	@ 0x120
 8009dbc:	f001 fe40 	bl	800ba40 <RDMDeviceParams::Set(RDMDevice*)>
 8009dc0:	a8a1      	add	r0, sp, #644	@ 0x284
 8009dc2:	f7ff fdeb 	bl	800999c <RDMNetDevice::Print()>
 8009dc6:	4999      	ldr	r1, [pc, #612]	@ (800a02c <main+0x5e0>)
 8009dc8:	464a      	mov	r2, r9
 8009dca:	a863      	add	r0, sp, #396	@ 0x18c
 8009dcc:	f009 fe70 	bl	8013ab0 <DisplayUdf::SetTitle(char const*, ...)>
 8009dd0:	2203      	movs	r2, #3
 8009dd2:	2102      	movs	r1, #2
 8009dd4:	a863      	add	r0, sp, #396	@ 0x18c
 8009dd6:	f009 fe7e 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009dda:	2207      	movs	r2, #7
 8009ddc:	2103      	movs	r1, #3
 8009dde:	a863      	add	r0, sp, #396	@ 0x18c
 8009de0:	f009 fe79 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009de4:	2202      	movs	r2, #2
 8009de6:	2104      	movs	r1, #4
 8009de8:	a863      	add	r0, sp, #396	@ 0x18c
 8009dea:	f009 fe74 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009dee:	2212      	movs	r2, #18
 8009df0:	2105      	movs	r1, #5
 8009df2:	a863      	add	r0, sp, #396	@ 0x18c
 8009df4:	f009 fe6f 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009df8:	2201      	movs	r2, #1
 8009dfa:	2106      	movs	r1, #6
 8009dfc:	a863      	add	r0, sp, #396	@ 0x18c
 8009dfe:	f009 fe6a 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009e02:	a82b      	add	r0, sp, #172	@ 0xac
 8009e04:	f009 ff30 	bl	8013c68 <DisplayUdfParams::DisplayUdfParams()>
 8009e08:	a82b      	add	r0, sp, #172	@ 0xac
 8009e0a:	f009 ff3b 	bl	8013c84 <DisplayUdfParams::Load()>
 8009e0e:	a963      	add	r1, sp, #396	@ 0x18c
 8009e10:	a82b      	add	r0, sp, #172	@ 0xac
 8009e12:	f00a f85f 	bl	8013ed4 <DisplayUdfParams::Set(DisplayUdf*)>
 8009e16:	a863      	add	r0, sp, #396	@ 0x18c
 8009e18:	f009 fe78 	bl	8013b0c <DisplayUdf::Show()>
 8009e1c:	9856      	ldr	r0, [sp, #344]	@ 0x158
 8009e1e:	f004 fdaf 	bl	800e980 <pixel::pixel_get_type(pixel::Type)>
 8009e22:	4604      	mov	r4, r0
 8009e24:	9857      	ldr	r0, [sp, #348]	@ 0x15c
 8009e26:	9d53      	ldr	r5, [sp, #332]	@ 0x14c
 8009e28:	9e5b      	ldr	r6, [sp, #364]	@ 0x16c
 8009e2a:	f004 fe1b 	bl	800ea64 <pixel::pixel_get_map(pixel::Map)>
 8009e2e:	4a80      	ldr	r2, [pc, #512]	@ (800a030 <main+0x5e4>)
 8009e30:	9500      	str	r5, [sp, #0]
 8009e32:	e9cd 6001 	strd	r6, r0, [sp, #4]
 8009e36:	4623      	mov	r3, r4
 8009e38:	2107      	movs	r1, #7
 8009e3a:	a863      	add	r0, sp, #396	@ 0x18c
 8009e3c:	f7ff fb9c 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8009e40:	f1b8 0f00 	cmp.w	r8, #0
 8009e44:	d010      	beq.n	8009e68 <main+0x41c>
 8009e46:	9869      	ldr	r0, [sp, #420]	@ 0x1a4
 8009e48:	b118      	cbz	r0, 8009e52 <main+0x406>
 8009e4a:	6803      	ldr	r3, [r0, #0]
 8009e4c:	2106      	movs	r1, #6
 8009e4e:	691b      	ldr	r3, [r3, #16]
 8009e50:	4798      	blx	r3
 8009e52:	4640      	mov	r0, r8
 8009e54:	f004 ff0c 	bl	800ec70 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8009e58:	4a76      	ldr	r2, [pc, #472]	@ (800a034 <main+0x5e8>)
 8009e5a:	f8cd 8000 	str.w	r8, [sp]
 8009e5e:	4603      	mov	r3, r0
 8009e60:	2106      	movs	r1, #6
 8009e62:	a863      	add	r0, sp, #396	@ 0x18c
 8009e64:	f7ff fb88 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8009e68:	2108      	movs	r1, #8
 8009e6a:	464b      	mov	r3, r9
 8009e6c:	2203      	movs	r2, #3
 8009e6e:	a83e      	add	r0, sp, #248	@ 0xf8
 8009e70:	f000 fa72 	bl	800a358 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
 8009e74:	a811      	add	r0, sp, #68	@ 0x44
 8009e76:	f000 fd0b 	bl	800a890 <RemoteConfigParams::RemoteConfigParams()>
 8009e7a:	a811      	add	r0, sp, #68	@ 0x44
 8009e7c:	f000 fd10 	bl	800a8a0 <RemoteConfigParams::Load()>
 8009e80:	a93e      	add	r1, sp, #248	@ 0xf8
 8009e82:	a811      	add	r0, sp, #68	@ 0x44
 8009e84:	f000 fe1a 	bl	800aabc <RemoteConfigParams::Set(RemoteConfig*)>
 8009e88:	a807      	add	r0, sp, #28
 8009e8a:	f00a f9fd 	bl	8014288 <ConfigStore::Flash()>
 8009e8e:	2800      	cmp	r0, #0
 8009e90:	d1fa      	bne.n	8009e88 <main+0x43c>
 8009e92:	4969      	ldr	r1, [pc, #420]	@ (800a038 <main+0x5ec>)
 8009e94:	2203      	movs	r2, #3
 8009e96:	a863      	add	r0, sp, #396	@ 0x18c
 8009e98:	f7ff fbd4 	bl	8009644 <Display::TextStatus(char const*, unsigned long)>
 8009e9c:	a8fa      	add	r0, sp, #1000	@ 0x3e8
 8009e9e:	f001 fbb3 	bl	800b608 <DdpDisplay::Start()>
 8009ea2:	4966      	ldr	r1, [pc, #408]	@ (800a03c <main+0x5f0>)
 8009ea4:	2202      	movs	r2, #2
 8009ea6:	a863      	add	r0, sp, #396	@ 0x18c
 8009ea8:	f7ff fbcc 	bl	8009644 <Display::TextStatus(char const*, unsigned long)>
 8009eac:	2102      	movs	r1, #2
 8009eae:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8009eb2:	f00c f8c3 	bl	801603c <fwdgt_config>
 8009eb6:	2801      	cmp	r0, #1
 8009eb8:	bf0c      	ite	eq
 8009eba:	2301      	moveq	r3, #1
 8009ebc:	2300      	movne	r3, #0
 8009ebe:	f88d 31ec 	strb.w	r3, [sp, #492]	@ 0x1ec
 8009ec2:	d101      	bne.n	8009ec8 <main+0x47c>
 8009ec4:	f00c f8aa 	bl	801601c <fwdgt_enable>
 8009ec8:	4e5d      	ldr	r6, [pc, #372]	@ (800a040 <main+0x5f4>)
 8009eca:	4d5e      	ldr	r5, [pc, #376]	@ (800a044 <main+0x5f8>)
 8009ecc:	f00c f8ae 	bl	801602c <fwdgt_counter_reload>
 8009ed0:	f7fe fbc8 	bl	8008664 <net::net_handle()>
 8009ed4:	f7ff fb24 	bl	8009520 <net::dhcp_run()>
 8009ed8:	a8fa      	add	r0, sp, #1000	@ 0x3e8
 8009eda:	f001 fd3d 	bl	800b958 <DdpDisplay::Run()>
 8009ede:	f89d 3104 	ldrb.w	r3, [sp, #260]	@ 0x104
 8009ee2:	bb1b      	cbnz	r3, 8009f2c <main+0x4e0>
 8009ee4:	9c47      	ldr	r4, [sp, #284]	@ 0x11c
 8009ee6:	aa0c      	add	r2, sp, #48	@ 0x30
 8009ee8:	69a0      	ldr	r0, [r4, #24]
 8009eea:	f104 011c 	add.w	r1, r4, #28
 8009eee:	f008 fc73 	bl	80127d8 <net::tcp_read(long, unsigned char const**, unsigned long&)>
 8009ef2:	4607      	mov	r7, r0
 8009ef4:	b170      	cbz	r0, 8009f14 <main+0x4c8>
 8009ef6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009ef8:	4a53      	ldr	r2, [pc, #332]	@ (800a048 <main+0x5fc>)
 8009efa:	4954      	ldr	r1, [pc, #336]	@ (800a04c <main+0x600>)
 8009efc:	9300      	str	r3, [sp, #0]
 8009efe:	4854      	ldr	r0, [pc, #336]	@ (800a050 <main+0x604>)
 8009f00:	2333      	movs	r3, #51	@ 0x33
 8009f02:	f00d fecb 	bl	8017c9c <printf>
 8009f06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009f08:	69e2      	ldr	r2, [r4, #28]
 8009f0a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8009f0e:	4639      	mov	r1, r7
 8009f10:	f001 fa08 	bl	800b324 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
 8009f14:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8009f16:	ab0c      	add	r3, sp, #48	@ 0x30
 8009f18:	aa44      	add	r2, sp, #272	@ 0x110
 8009f1a:	4631      	mov	r1, r6
 8009f1c:	f008 fd54 	bl	80129c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009f20:	2803      	cmp	r0, #3
 8009f22:	9045      	str	r0, [sp, #276]	@ 0x114
 8009f24:	d902      	bls.n	8009f2c <main+0x4e0>
 8009f26:	a83e      	add	r0, sp, #248	@ 0xf8
 8009f28:	f000 fbae 	bl	800a688 <RemoteConfig::HandleRequest()>
 8009f2c:	a807      	add	r0, sp, #28
 8009f2e:	f00a f9ab 	bl	8014288 <ConfigStore::Flash()>
 8009f32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009f34:	4f47      	ldr	r7, [pc, #284]	@ (800a054 <main+0x608>)
 8009f36:	b18b      	cbz	r3, 8009f5c <main+0x510>
 8009f38:	6828      	ldr	r0, [r5, #0]
 8009f3a:	f005 fb1b 	bl	800f574 <WS28xxMulti::IsUpdating()>
 8009f3e:	4604      	mov	r4, r0
 8009f40:	b960      	cbnz	r0, 8009f5c <main+0x510>
 8009f42:	f8d7 a000 	ldr.w	sl, [r7]
 8009f46:	f8df 913c 	ldr.w	r9, [pc, #316]	@ 800a084 <main+0x638>
 8009f4a:	4680      	mov	r8, r0
 8009f4c:	f8d9 3000 	ldr.w	r3, [r9]
 8009f50:	4598      	cmp	r8, r3
 8009f52:	d350      	bcc.n	8009ff6 <main+0x5aa>
 8009f54:	b114      	cbz	r4, 8009f5c <main+0x510>
 8009f56:	6828      	ldr	r0, [r5, #0]
 8009f58:	f005 fa1a 	bl	800f390 <WS28xxMulti::Update()>
 8009f5c:	4c3e      	ldr	r4, [pc, #248]	@ (800a058 <main+0x60c>)
 8009f5e:	483f      	ldr	r0, [pc, #252]	@ (800a05c <main+0x610>)
 8009f60:	4b3f      	ldr	r3, [pc, #252]	@ (800a060 <main+0x614>)
 8009f62:	4a40      	ldr	r2, [pc, #256]	@ (800a064 <main+0x618>)
 8009f64:	6800      	ldr	r0, [r0, #0]
 8009f66:	4621      	mov	r1, r4
 8009f68:	f008 fd2e 	bl	80129c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009f6c:	4b3e      	ldr	r3, [pc, #248]	@ (800a068 <main+0x61c>)
 8009f6e:	280b      	cmp	r0, #11
 8009f70:	6018      	str	r0, [r3, #0]
 8009f72:	d90a      	bls.n	8009f8a <main+0x53e>
 8009f74:	6823      	ldr	r3, [r4, #0]
 8009f76:	789a      	ldrb	r2, [r3, #2]
 8009f78:	f012 0f78 	tst.w	r2, #120	@ 0x78
 8009f7c:	d105      	bne.n	8009f8a <main+0x53e>
 8009f7e:	8899      	ldrh	r1, [r3, #4]
 8009f80:	ba49      	rev16	r1, r1
 8009f82:	b289      	uxth	r1, r1
 8009f84:	a809      	add	r0, sp, #36	@ 0x24
 8009f86:	f007 f8dd 	bl	8011144 <MDNS::HandleQuestions(unsigned long)>
 8009f8a:	4c38      	ldr	r4, [pc, #224]	@ (800a06c <main+0x620>)
 8009f8c:	4838      	ldr	r0, [pc, #224]	@ (800a070 <main+0x624>)
 8009f8e:	4a39      	ldr	r2, [pc, #228]	@ (800a074 <main+0x628>)
 8009f90:	6800      	ldr	r0, [r0, #0]
 8009f92:	f10d 0326 	add.w	r3, sp, #38	@ 0x26
 8009f96:	4621      	mov	r1, r4
 8009f98:	f008 fd16 	bl	80129c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009f9c:	2841      	cmp	r0, #65	@ 0x41
 8009f9e:	d911      	bls.n	8009fc4 <main+0x578>
 8009fa0:	a8c9      	add	r0, sp, #804	@ 0x324
 8009fa2:	f002 fc0b 	bl	800c7bc <LLRPDevice::DumpCommon()>
 8009fa6:	6823      	ldr	r3, [r4, #0]
 8009fa8:	f8d3 302a 	ldr.w	r3, [r3, #42]	@ 0x2a
 8009fac:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009fb0:	d02b      	beq.n	800a00a <main+0x5be>
 8009fb2:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8009fb6:	d031      	beq.n	800a01c <main+0x5d0>
 8009fb8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009fbc:	d102      	bne.n	8009fc4 <main+0x578>
 8009fbe:	a8c9      	add	r0, sp, #804	@ 0x324
 8009fc0:	f002 fb14 	bl	800c5ec <LLRPDevice::HandleRequestMessage()>
 8009fc4:	9a67      	ldr	r2, [sp, #412]	@ 0x19c
 8009fc6:	2a00      	cmp	r2, #0
 8009fc8:	d064      	beq.n	800a094 <main+0x648>
 8009fca:	f89d 31a1 	ldrb.w	r3, [sp, #417]	@ 0x1a1
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d15a      	bne.n	800a088 <main+0x63c>
 8009fd2:	683b      	ldr	r3, [r7, #0]
 8009fd4:	9964      	ldr	r1, [sp, #400]	@ 0x190
 8009fd6:	1a5b      	subs	r3, r3, r1
 8009fd8:	429a      	cmp	r2, r3
 8009fda:	d25b      	bcs.n	800a094 <main+0x648>
 8009fdc:	2101      	movs	r1, #1
 8009fde:	a863      	add	r0, sp, #396	@ 0x18c
 8009fe0:	f7ff fb3e 	bl	8009660 <Display::SetSleep(bool)>
 8009fe4:	e056      	b.n	800a094 <main+0x648>
 8009fe6:	ab22      	add	r3, sp, #136	@ 0x88
 8009fe8:	a9aa      	add	r1, sp, #680	@ 0x2a8
 8009fea:	e6bf      	b.n	8009d6c <main+0x320>
 8009fec:	f813 4b01 	ldrb.w	r4, [r3], #1
 8009ff0:	f801 4b01 	strb.w	r4, [r1], #1
 8009ff4:	e5ed      	b.n	8009bd2 <main+0x186>
 8009ff6:	4641      	mov	r1, r8
 8009ff8:	4652      	mov	r2, sl
 8009ffa:	a80a      	add	r0, sp, #40	@ 0x28
 8009ffc:	f005 f81a 	bl	800f034 <PixelPatterns::PortUpdate(unsigned long, unsigned long)>
 800a000:	4304      	orrs	r4, r0
 800a002:	b2e4      	uxtb	r4, r4
 800a004:	f108 0801 	add.w	r8, r8, #1
 800a008:	e7a0      	b.n	8009f4c <main+0x500>
 800a00a:	4b1b      	ldr	r3, [pc, #108]	@ (800a078 <main+0x62c>)
 800a00c:	9300      	str	r3, [sp, #0]
 800a00e:	4a1b      	ldr	r2, [pc, #108]	@ (800a07c <main+0x630>)
 800a010:	490e      	ldr	r1, [pc, #56]	@ (800a04c <main+0x600>)
 800a012:	481b      	ldr	r0, [pc, #108]	@ (800a080 <main+0x634>)
 800a014:	2360      	movs	r3, #96	@ 0x60
 800a016:	f00d fe41 	bl	8017c9c <printf>
 800a01a:	e7d3      	b.n	8009fc4 <main+0x578>
 800a01c:	a8c9      	add	r0, sp, #804	@ 0x324
 800a01e:	f002 fb7b 	bl	800c718 <LLRPDevice::HandleRdmCommand()>
 800a022:	e7cf      	b.n	8009fc4 <main+0x578>
 800a024:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc
 800a028:	00040100 	andeq	r0, r4, r0, lsl #2
 800a02c:	08018720 	stmdaeq	r1, {r5, r8, r9, sl, pc}
 800a030:	0801872d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, pc}
 800a034:	0801873a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, pc}
 800a038:	08018740 	stmdaeq	r1, {r6, r8, r9, sl, pc}
 800a03c:	08018755 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, pc}
 800a040:	2000007c 	andcs	r0, r0, ip, ror r0
 800a044:	2000c99c 	mulcs	r0, ip, r9
 800a048:	08018769 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, sl, pc}
 800a04c:	08018793 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, pc}
 800a050:	08018797 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, pc}
 800a054:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 800a058:	2000c9b0 			@ <UNDEFINED> instruction: 0x2000c9b0
 800a05c:	2000c9c0 	andcs	ip, r0, r0, asr #19
 800a060:	2000c9b8 			@ <UNDEFINED> instruction: 0x2000c9b8
 800a064:	2000c9bc 			@ <UNDEFINED> instruction: 0x2000c9bc
 800a068:	2000c9b4 			@ <UNDEFINED> instruction: 0x2000c9b4
 800a06c:	2000c884 	andcs	ip, r0, r4, lsl #17
 800a070:	2000c88c 	andcs	ip, r0, ip, lsl #17
 800a074:	2000c888 	andcs	ip, r0, r8, lsl #17
 800a078:	080187d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sl, pc}
 800a07c:	080184fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, pc}
 800a080:	080187bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, pc}
 800a084:	2000c998 	mulcs	r0, r8, r9
 800a088:	4b0d      	ldr	r3, [pc, #52]	@ (800a0c0 <main+0x674>)
 800a08a:	f8d3 1810 	ldr.w	r1, [r3, #2064]	@ 0x810
 800a08e:	f411 5100 	ands.w	r1, r1, #8192	@ 0x2000
 800a092:	d0a4      	beq.n	8009fde <main+0x592>
 800a094:	f8d7 8000 	ldr.w	r8, [r7]
 800a098:	ac77      	add	r4, sp, #476	@ 0x1dc
 800a09a:	2700      	movs	r7, #0
 800a09c:	9b9f      	ldr	r3, [sp, #636]	@ 0x27c
 800a09e:	429f      	cmp	r7, r3
 800a0a0:	d302      	bcc.n	800a0a8 <main+0x65c>
 800a0a2:	f00b fb93 	bl	80157cc <stack_debug_run()>
 800a0a6:	e711      	b.n	8009ecc <main+0x480>
 800a0a8:	6a23      	ldr	r3, [r4, #32]
 800a0aa:	4598      	cmp	r8, r3
 800a0ac:	d304      	bcc.n	800a0b8 <main+0x66c>
 800a0ae:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a0b0:	4798      	blx	r3
 800a0b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800a0b4:	4443      	add	r3, r8
 800a0b6:	6223      	str	r3, [r4, #32]
 800a0b8:	3701      	adds	r7, #1
 800a0ba:	3410      	adds	r4, #16
 800a0bc:	e7ee      	b.n	800a09c <main+0x650>
 800a0be:	bf00      	nop
 800a0c0:	40020000 	andmi	r0, r2, r0

0800a0c4 <rdm::device::responder::factorydefaults()>:
 800a0c4:	b510      	push	{r4, lr}
 800a0c6:	4b0d      	ldr	r3, [pc, #52]	@ (800a0fc <rdm::device::responder::factorydefaults()+0x38>)
 800a0c8:	4c0d      	ldr	r4, [pc, #52]	@ (800a100 <rdm::device::responder::factorydefaults()+0x3c>)
 800a0ca:	6818      	ldr	r0, [r3, #0]
 800a0cc:	b086      	sub	sp, #24
 800a0ce:	2100      	movs	r1, #0
 800a0d0:	f000 f996 	bl	800a400 <RemoteConfig::SetDisable(bool)>
 800a0d4:	6820      	ldr	r0, [r4, #0]
 800a0d6:	2109      	movs	r1, #9
 800a0d8:	f00a f86e 	bl	80141b8 <ConfigStore::ResetSetList(configstore::Store)>
 800a0dc:	2301      	movs	r3, #1
 800a0de:	2100      	movs	r1, #0
 800a0e0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a0e4:	9300      	str	r3, [sp, #0]
 800a0e6:	f88d 3017 	strb.w	r3, [sp, #23]
 800a0ea:	6820      	ldr	r0, [r4, #0]
 800a0ec:	f10d 0317 	add.w	r3, sp, #23
 800a0f0:	2214      	movs	r2, #20
 800a0f2:	f00a f873 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a0f6:	b006      	add	sp, #24
 800a0f8:	bd10      	pop	{r4, pc}
 800a0fa:	bf00      	nop
 800a0fc:	200000a4 	andcs	r0, r0, r4, lsr #1
 800a100:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800a104 <RDMSoftwareVersion::GetVersion()>:
 800a104:	4800      	ldr	r0, [pc, #0]	@ (800a108 <RDMSoftwareVersion::GetVersion()+0x4>)
 800a106:	4770      	bx	lr
 800a108:	08019384 	stmdaeq	r1, {r2, r7, r8, r9, ip, pc}

0800a10c <RDMSoftwareVersion::GetVersionLength()>:
 800a10c:	2003      	movs	r0, #3
 800a10e:	4770      	bx	lr

0800a110 <RDMSoftwareVersion::GetVersionId()>:
 800a110:	4800      	ldr	r0, [pc, #0]	@ (800a114 <RDMSoftwareVersion::GetVersionId()+0x4>)
 800a112:	4770      	bx	lr
 800a114:	66f19810 	usatvs	r9, #17, r0, lsl #16

0800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
 800a118:	b430      	push	{r4, r5}
 800a11a:	4d05      	ldr	r5, [pc, #20]	@ (800a130 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x18>)
 800a11c:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800a120:	682d      	ldr	r5, [r5, #0]
 800a122:	b11d      	cbz	r5, 800a12c <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x14>
 800a124:	9402      	str	r4, [sp, #8]
 800a126:	bc30      	pop	{r4, r5}
 800a128:	f008 bc6c 	b.w	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800a12c:	bc30      	pop	{r4, r5}
 800a12e:	4770      	bx	lr
 800a130:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800a134 <RemoteConfig::HandleDisplayGet()>:
 800a134:	4b0d      	ldr	r3, [pc, #52]	@ (800a16c <RemoteConfig::HandleDisplayGet()+0x38>)
 800a136:	681b      	ldr	r3, [r3, #0]
 800a138:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a13a:	7d59      	ldrb	r1, [r3, #21]
 800a13c:	4d0c      	ldr	r5, [pc, #48]	@ (800a170 <RemoteConfig::HandleDisplayGet()+0x3c>)
 800a13e:	4a0d      	ldr	r2, [pc, #52]	@ (800a174 <RemoteConfig::HandleDisplayGet()+0x40>)
 800a140:	4b0d      	ldr	r3, [pc, #52]	@ (800a178 <RemoteConfig::HandleDisplayGet()+0x44>)
 800a142:	4604      	mov	r4, r0
 800a144:	2900      	cmp	r1, #0
 800a146:	bf08      	it	eq
 800a148:	4613      	moveq	r3, r2
 800a14a:	6828      	ldr	r0, [r5, #0]
 800a14c:	4a0b      	ldr	r2, [pc, #44]	@ (800a17c <RemoteConfig::HandleDisplayGet()+0x48>)
 800a14e:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a152:	f00d fdcb 	bl	8017cec <snprintf>
 800a156:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a15a:	9300      	str	r3, [sp, #0]
 800a15c:	4602      	mov	r2, r0
 800a15e:	69a3      	ldr	r3, [r4, #24]
 800a160:	6829      	ldr	r1, [r5, #0]
 800a162:	6960      	ldr	r0, [r4, #20]
 800a164:	f7ff ffd8 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a168:	b003      	add	sp, #12
 800a16a:	bd30      	pop	{r4, r5, pc}
 800a16c:	2000ccd4 	ldrdcs	ip, [r0], -r4
 800a170:	2000007c 	andcs	r0, r0, ip, ror r0
 800a174:	080187ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, pc}
 800a178:	08018920 	stmdaeq	r1, {r5, r8, fp, pc}
 800a17c:	080187f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a180 <RemoteConfig::HandleUptime()>:
 800a180:	7bc3      	ldrb	r3, [r0, #15]
 800a182:	b1ab      	cbz	r3, 800a1b0 <RemoteConfig::HandleUptime()+0x30>
 800a184:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a186:	4b0b      	ldr	r3, [pc, #44]	@ (800a1b4 <RemoteConfig::HandleUptime()+0x34>)
 800a188:	4d0b      	ldr	r5, [pc, #44]	@ (800a1b8 <RemoteConfig::HandleUptime()+0x38>)
 800a18a:	685b      	ldr	r3, [r3, #4]
 800a18c:	4a0b      	ldr	r2, [pc, #44]	@ (800a1bc <RemoteConfig::HandleUptime()+0x3c>)
 800a18e:	4604      	mov	r4, r0
 800a190:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a194:	6828      	ldr	r0, [r5, #0]
 800a196:	f00d fda9 	bl	8017cec <snprintf>
 800a19a:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a19e:	9300      	str	r3, [sp, #0]
 800a1a0:	4602      	mov	r2, r0
 800a1a2:	69a3      	ldr	r3, [r4, #24]
 800a1a4:	6829      	ldr	r1, [r5, #0]
 800a1a6:	6960      	ldr	r0, [r4, #20]
 800a1a8:	f7ff ffb6 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a1ac:	b003      	add	sp, #12
 800a1ae:	bd30      	pop	{r4, r5, pc}
 800a1b0:	4770      	bx	lr
 800a1b2:	bf00      	nop
 800a1b4:	2001a6a8 	andcs	sl, r1, r8, lsr #13
 800a1b8:	2000007c 	andcs	r0, r0, ip, ror r0
 800a1bc:	080187fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}

0800a1c0 <RemoteConfig::HandleVersion()>:
 800a1c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1c2:	4d0a      	ldr	r5, [pc, #40]	@ (800a1ec <RemoteConfig::HandleVersion()+0x2c>)
 800a1c4:	4b0a      	ldr	r3, [pc, #40]	@ (800a1f0 <RemoteConfig::HandleVersion()+0x30>)
 800a1c6:	4a0b      	ldr	r2, [pc, #44]	@ (800a1f4 <RemoteConfig::HandleVersion()+0x34>)
 800a1c8:	4604      	mov	r4, r0
 800a1ca:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a1ce:	6828      	ldr	r0, [r5, #0]
 800a1d0:	f00d fd8c 	bl	8017cec <snprintf>
 800a1d4:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a1d8:	9300      	str	r3, [sp, #0]
 800a1da:	4602      	mov	r2, r0
 800a1dc:	69a3      	ldr	r3, [r4, #24]
 800a1de:	6829      	ldr	r1, [r5, #0]
 800a1e0:	6960      	ldr	r0, [r4, #20]
 800a1e2:	f7ff ff99 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a1e6:	b003      	add	sp, #12
 800a1e8:	bd30      	pop	{r4, r5, pc}
 800a1ea:	bf00      	nop
 800a1ec:	2000007c 	andcs	r0, r0, ip, ror r0
 800a1f0:	2000cd68 	andcs	ip, r0, r8, ror #26
 800a1f4:	08018809 	stmdaeq	r1, {r0, r3, fp, pc}

0800a1f8 <RemoteConfig::HandleTftpGet()>:
 800a1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1fa:	4604      	mov	r4, r0
 800a1fc:	4d0d      	ldr	r5, [pc, #52]	@ (800a234 <RemoteConfig::HandleTftpGet()+0x3c>)
 800a1fe:	f000 fcfd 	bl	800abfc <RemoteConfig::PlatformHandleTftpGet()>
 800a202:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a206:	4a0c      	ldr	r2, [pc, #48]	@ (800a238 <RemoteConfig::HandleTftpGet()+0x40>)
 800a208:	4b0c      	ldr	r3, [pc, #48]	@ (800a23c <RemoteConfig::HandleTftpGet()+0x44>)
 800a20a:	6828      	ldr	r0, [r5, #0]
 800a20c:	2900      	cmp	r1, #0
 800a20e:	bf18      	it	ne
 800a210:	4613      	movne	r3, r2
 800a212:	4a0b      	ldr	r2, [pc, #44]	@ (800a240 <RemoteConfig::HandleTftpGet()+0x48>)
 800a214:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a218:	f00d fd68 	bl	8017cec <snprintf>
 800a21c:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a220:	9300      	str	r3, [sp, #0]
 800a222:	4602      	mov	r2, r0
 800a224:	69a3      	ldr	r3, [r4, #24]
 800a226:	6829      	ldr	r1, [r5, #0]
 800a228:	6960      	ldr	r0, [r4, #20]
 800a22a:	f7ff ff75 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a22e:	b003      	add	sp, #12
 800a230:	bd30      	pop	{r4, r5, pc}
 800a232:	bf00      	nop
 800a234:	2000007c 	andcs	r0, r0, ip, ror r0
 800a238:	080187ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, pc}
 800a23c:	08018920 	stmdaeq	r1, {r5, r8, fp, pc}
 800a240:	08018814 	stmdaeq	r1, {r2, r4, fp, pc}

0800a244 <RemoteConfig::HandleList()>:
 800a244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a248:	6801      	ldr	r1, [r0, #0]
 800a24a:	4a23      	ldr	r2, [pc, #140]	@ (800a2d8 <RemoteConfig::HandleList()+0x94>)
 800a24c:	4b23      	ldr	r3, [pc, #140]	@ (800a2dc <RemoteConfig::HandleList()+0x98>)
 800a24e:	4604      	mov	r4, r0
 800a250:	2012      	movs	r0, #18
 800a252:	fb00 2201 	mla	r2, r0, r1, r2
 800a256:	6860      	ldr	r0, [r4, #4]
 800a258:	4921      	ldr	r1, [pc, #132]	@ (800a2e0 <RemoteConfig::HandleList()+0x9c>)
 800a25a:	681d      	ldr	r5, [r3, #0]
 800a25c:	4b21      	ldr	r3, [pc, #132]	@ (800a2e4 <RemoteConfig::HandleList()+0xa0>)
 800a25e:	f04f 0e0c 	mov.w	lr, #12
 800a262:	fb0e 1100 	mla	r1, lr, r0, r1
 800a266:	4820      	ldr	r0, [pc, #128]	@ (800a2e8 <RemoteConfig::HandleList()+0xa4>)
 800a268:	681e      	ldr	r6, [r3, #0]
 800a26a:	f890 8009 	ldrb.w	r8, [r0, #9]
 800a26e:	f8d4 e008 	ldr.w	lr, [r4, #8]
 800a272:	b2f3      	uxtb	r3, r6
 800a274:	f3c6 2707 	ubfx	r7, r6, #8, #8
 800a278:	f3c6 4c07 	ubfx	ip, r6, #16, #8
 800a27c:	b088      	sub	sp, #32
 800a27e:	3507      	adds	r5, #7
 800a280:	0e36      	lsrs	r6, r6, #24
 800a282:	f1b8 0f00 	cmp.w	r8, #0
 800a286:	d019      	beq.n	800a2bc <RemoteConfig::HandleList()+0x78>
 800a288:	3009      	adds	r0, #9
 800a28a:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a28e:	e9cd e005 	strd	lr, r0, [sp, #20]
 800a292:	e9cd c601 	strd	ip, r6, [sp, #4]
 800a296:	4a15      	ldr	r2, [pc, #84]	@ (800a2ec <RemoteConfig::HandleList()+0xa8>)
 800a298:	9700      	str	r7, [sp, #0]
 800a29a:	f240 5184 	movw	r1, #1412	@ 0x584
 800a29e:	4628      	mov	r0, r5
 800a2a0:	f00d fd24 	bl	8017cec <snprintf>
 800a2a4:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a2a8:	9300      	str	r3, [sp, #0]
 800a2aa:	4602      	mov	r2, r0
 800a2ac:	69a3      	ldr	r3, [r4, #24]
 800a2ae:	6960      	ldr	r0, [r4, #20]
 800a2b0:	4629      	mov	r1, r5
 800a2b2:	f7ff ff31 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a2b6:	b008      	add	sp, #32
 800a2b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2bc:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 800a2c0:	e9cd 6202 	strd	r6, r2, [sp, #8]
 800a2c4:	e9cd 7c00 	strd	r7, ip, [sp]
 800a2c8:	4a09      	ldr	r2, [pc, #36]	@ (800a2f0 <RemoteConfig::HandleList()+0xac>)
 800a2ca:	f240 5184 	movw	r1, #1412	@ 0x584
 800a2ce:	4628      	mov	r0, r5
 800a2d0:	f00d fd0c 	bl	8017cec <snprintf>
 800a2d4:	e7e6      	b.n	800a2a4 <RemoteConfig::HandleList()+0x60>
 800a2d6:	bf00      	nop
 800a2d8:	08019424 	stmdaeq	r1, {r2, r5, sl, ip, pc}
 800a2dc:	2000007c 	andcs	r0, r0, ip, ror r0
 800a2e0:	08019388 	stmdaeq	r1, {r3, r7, r8, r9, ip, pc}
 800a2e4:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800a2e8:	20000080 	andcs	r0, r0, r0, lsl #1
 800a2ec:	0801881d 	stmdaeq	r1, {r0, r2, r3, r4, fp, pc}
 800a2f0:	08018836 	stmdaeq	r1, {r1, r2, r4, r5, fp, pc}

0800a2f4 <RemoteConfig::HandleDisplaySet()>:
 800a2f4:	b508      	push	{r3, lr}
 800a2f6:	69c3      	ldr	r3, [r0, #28]
 800a2f8:	2b09      	cmp	r3, #9
 800a2fa:	d10a      	bne.n	800a312 <RemoteConfig::HandleDisplaySet()+0x1e>
 800a2fc:	4b05      	ldr	r3, [pc, #20]	@ (800a314 <RemoteConfig::HandleDisplaySet()+0x20>)
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	7a59      	ldrb	r1, [r3, #9]
 800a302:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 800a306:	4259      	negs	r1, r3
 800a308:	4159      	adcs	r1, r3
 800a30a:	4b03      	ldr	r3, [pc, #12]	@ (800a318 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a30c:	6818      	ldr	r0, [r3, #0]
 800a30e:	f7ff f9a7 	bl	8009660 <Display::SetSleep(bool)>
 800a312:	bd08      	pop	{r3, pc}
 800a314:	2000007c 	andcs	r0, r0, ip, ror r0
 800a318:	2000ccd4 	ldrdcs	ip, [r0], -r4

0800a31c <RemoteConfig::HandleTftpSet()>:
 800a31c:	69c3      	ldr	r3, [r0, #28]
 800a31e:	2b06      	cmp	r3, #6
 800a320:	d115      	bne.n	800a34e <RemoteConfig::HandleTftpSet()+0x32>
 800a322:	b510      	push	{r4, lr}
 800a324:	4b0a      	ldr	r3, [pc, #40]	@ (800a350 <RemoteConfig::HandleTftpSet()+0x34>)
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	799b      	ldrb	r3, [r3, #6]
 800a32a:	2b30      	cmp	r3, #48	@ 0x30
 800a32c:	bf14      	ite	ne
 800a32e:	2301      	movne	r3, #1
 800a330:	2300      	moveq	r3, #0
 800a332:	4604      	mov	r4, r0
 800a334:	f880 3020 	strb.w	r3, [r0, #32]
 800a338:	d004      	beq.n	800a344 <RemoteConfig::HandleTftpSet()+0x28>
 800a33a:	4b06      	ldr	r3, [pc, #24]	@ (800a354 <RemoteConfig::HandleTftpSet()+0x38>)
 800a33c:	2100      	movs	r1, #0
 800a33e:	6818      	ldr	r0, [r3, #0]
 800a340:	f7ff f98e 	bl	8009660 <Display::SetSleep(bool)>
 800a344:	4620      	mov	r0, r4
 800a346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a34a:	f000 bc33 	b.w	800abb4 <RemoteConfig::PlatformHandleTftpSet()>
 800a34e:	4770      	bx	lr
 800a350:	2000007c 	andcs	r0, r0, ip, ror r0
 800a354:	2000ccd4 	ldrdcs	ip, [r0], -r4

0800a358 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
 800a358:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a35a:	2500      	movs	r5, #0
 800a35c:	4604      	mov	r4, r0
 800a35e:	e9c0 1200 	strd	r1, r2, [r0]
 800a362:	6083      	str	r3, [r0, #8]
 800a364:	60c5      	str	r5, [r0, #12]
 800a366:	8205      	strh	r5, [r0, #16]
 800a368:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a36c:	e9c4 0505 	strd	r0, r5, [r4, #20]
 800a370:	4f13      	ldr	r7, [pc, #76]	@ (800a3c0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x68>)
 800a372:	4814      	ldr	r0, [pc, #80]	@ (800a3c4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x6c>)
 800a374:	4e14      	ldr	r6, [pc, #80]	@ (800a3c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x70>)
 800a376:	6004      	str	r4, [r0, #0]
 800a378:	6978      	ldr	r0, [r7, #20]
 800a37a:	6030      	str	r0, [r6, #0]
 800a37c:	8b38      	ldrh	r0, [r7, #24]
 800a37e:	61e5      	str	r5, [r4, #28]
 800a380:	f884 5020 	strb.w	r5, [r4, #32]
 800a384:	6265      	str	r5, [r4, #36]	@ 0x24
 800a386:	80b0      	strh	r0, [r6, #4]
 800a388:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a38c:	71b1      	strb	r1, [r6, #6]
 800a38e:	71f2      	strb	r2, [r6, #7]
 800a390:	7233      	strb	r3, [r6, #8]
 800a392:	7275      	strb	r5, [r6, #9]
 800a394:	f008 fab2 	bl	80128fc <net::udp_begin(unsigned short)>
 800a398:	6160      	str	r0, [r4, #20]
 800a39a:	480c      	ldr	r0, [pc, #48]	@ (800a3cc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x74>)
 800a39c:	9500      	str	r5, [sp, #0]
 800a39e:	462b      	mov	r3, r5
 800a3a0:	462a      	mov	r2, r5
 800a3a2:	4629      	mov	r1, r5
 800a3a4:	6800      	ldr	r0, [r0, #0]
 800a3a6:	f006 fe6d 	bl	8011084 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a3aa:	2020      	movs	r0, #32
 800a3ac:	f00d fecc 	bl	8018148 <operator new(unsigned int)>
 800a3b0:	4605      	mov	r5, r0
 800a3b2:	f000 fc31 	bl	800ac18 <HttpDaemon::HttpDaemon()>
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	6265      	str	r5, [r4, #36]	@ 0x24
 800a3ba:	b003      	add	sp, #12
 800a3bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3be:	bf00      	nop
 800a3c0:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800a3c4:	200000a4 	andcs	r0, r0, r4, lsr #1
 800a3c8:	20000080 	andcs	r0, r0, r0, lsl #1
 800a3cc:	2000c9ac 	andcs	ip, r0, ip, lsr #19

0800a3d0 <RemoteConfig::GetStringNode() const>:
 800a3d0:	4b03      	ldr	r3, [pc, #12]	@ (800a3e0 <RemoteConfig::GetStringNode() const+0x10>)
 800a3d2:	7998      	ldrb	r0, [r3, #6]
 800a3d4:	4b03      	ldr	r3, [pc, #12]	@ (800a3e4 <RemoteConfig::GetStringNode() const+0x14>)
 800a3d6:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a3da:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a3de:	4770      	bx	lr
 800a3e0:	20000080 	andcs	r0, r0, r0, lsl #1
 800a3e4:	08019424 	stmdaeq	r1, {r2, r5, sl, ip, pc}

0800a3e8 <RemoteConfig::GetStringOutput() const>:
 800a3e8:	4b03      	ldr	r3, [pc, #12]	@ (800a3f8 <RemoteConfig::GetStringOutput() const+0x10>)
 800a3ea:	79d8      	ldrb	r0, [r3, #7]
 800a3ec:	4b03      	ldr	r3, [pc, #12]	@ (800a3fc <RemoteConfig::GetStringOutput() const+0x14>)
 800a3ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a3f2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a3f6:	4770      	bx	lr
 800a3f8:	20000080 	andcs	r0, r0, r0, lsl #1
 800a3fc:	08019388 	stmdaeq	r1, {r3, r7, r8, r9, ip, pc}

0800a400 <RemoteConfig::SetDisable(bool)>:
 800a400:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a402:	7b06      	ldrb	r6, [r0, #12]
 800a404:	4605      	mov	r5, r0
 800a406:	b181      	cbz	r1, 800a42a <RemoteConfig::SetDisable(bool)+0x2a>
 800a408:	b96e      	cbnz	r6, 800a426 <RemoteConfig::SetDisable(bool)+0x26>
 800a40a:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a40e:	f008 fa8b 	bl	8012928 <net::udp_end(unsigned short)>
 800a412:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a416:	616b      	str	r3, [r5, #20]
 800a418:	4b0d      	ldr	r3, [pc, #52]	@ (800a450 <RemoteConfig::SetDisable(bool)+0x50>)
 800a41a:	4631      	mov	r1, r6
 800a41c:	6818      	ldr	r0, [r3, #0]
 800a41e:	f006 fe15 	bl	801104c <MDNS::ServiceRecordDelete(mdns::Services)>
 800a422:	2301      	movs	r3, #1
 800a424:	732b      	strb	r3, [r5, #12]
 800a426:	b002      	add	sp, #8
 800a428:	bd70      	pop	{r4, r5, r6, pc}
 800a42a:	2e00      	cmp	r6, #0
 800a42c:	d0fb      	beq.n	800a426 <RemoteConfig::SetDisable(bool)+0x26>
 800a42e:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a432:	460c      	mov	r4, r1
 800a434:	f008 fa62 	bl	80128fc <net::udp_begin(unsigned short)>
 800a438:	6168      	str	r0, [r5, #20]
 800a43a:	4805      	ldr	r0, [pc, #20]	@ (800a450 <RemoteConfig::SetDisable(bool)+0x50>)
 800a43c:	9400      	str	r4, [sp, #0]
 800a43e:	6800      	ldr	r0, [r0, #0]
 800a440:	4623      	mov	r3, r4
 800a442:	4622      	mov	r2, r4
 800a444:	4621      	mov	r1, r4
 800a446:	f006 fe1d 	bl	8011084 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a44a:	732c      	strb	r4, [r5, #12]
 800a44c:	e7eb      	b.n	800a426 <RemoteConfig::SetDisable(bool)+0x26>
 800a44e:	bf00      	nop
 800a450:	2000c9ac 	andcs	ip, r0, ip, lsr #19

0800a454 <RemoteConfig::SetDisplayName(char const*)>:
 800a454:	b508      	push	{r3, lr}
 800a456:	4809      	ldr	r0, [pc, #36]	@ (800a47c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a458:	3901      	subs	r1, #1
 800a45a:	2217      	movs	r2, #23
 800a45c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a460:	b11b      	cbz	r3, 800a46a <RemoteConfig::SetDisplayName(char const*)+0x16>
 800a462:	3a01      	subs	r2, #1
 800a464:	f800 3b01 	strb.w	r3, [r0], #1
 800a468:	d1f8      	bne.n	800a45c <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a46a:	2100      	movs	r1, #0
 800a46c:	f00d f932 	bl	80176d4 <memset>
 800a470:	4b03      	ldr	r3, [pc, #12]	@ (800a480 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a472:	2200      	movs	r2, #0
 800a474:	f883 2020 	strb.w	r2, [r3, #32]
 800a478:	bd08      	pop	{r3, pc}
 800a47a:	bf00      	nop
 800a47c:	20000089 	andcs	r0, r0, r9, lsl #1
 800a480:	20000080 	andcs	r0, r0, r0, lsl #1

0800a484 <RemoteConfig::HandleGet(void*, unsigned long)>:
 800a484:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a486:	4f29      	ldr	r7, [pc, #164]	@ (800a52c <RemoteConfig::HandleGet(void*, unsigned long)+0xa8>)
 800a488:	b085      	sub	sp, #20
 800a48a:	4604      	mov	r4, r0
 800a48c:	4616      	mov	r6, r2
 800a48e:	460d      	mov	r5, r1
 800a490:	b9a9      	cbnz	r1, 800a4be <RemoteConfig::HandleGet(void*, unsigned long)+0x3a>
 800a492:	6839      	ldr	r1, [r7, #0]
 800a494:	f44f 63b1 	mov.w	r3, #1416	@ 0x588
 800a498:	aa03      	add	r2, sp, #12
 800a49a:	3105      	adds	r1, #5
 800a49c:	9303      	str	r3, [sp, #12]
 800a49e:	f000 fb5d 	bl	800ab5c <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a4a2:	1e03      	subs	r3, r0, #0
 800a4a4:	da1b      	bge.n	800a4de <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a4a6:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a4aa:	9300      	str	r3, [sp, #0]
 800a4ac:	69a3      	ldr	r3, [r4, #24]
 800a4ae:	4920      	ldr	r1, [pc, #128]	@ (800a530 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a4b0:	6960      	ldr	r0, [r4, #20]
 800a4b2:	220b      	movs	r2, #11
 800a4b4:	f7ff fe30 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a4b8:	200c      	movs	r0, #12
 800a4ba:	b005      	add	sp, #20
 800a4bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a4be:	9203      	str	r2, [sp, #12]
 800a4c0:	aa03      	add	r2, sp, #12
 800a4c2:	6039      	str	r1, [r7, #0]
 800a4c4:	f000 fb4a 	bl	800ab5c <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a4c8:	1e03      	subs	r3, r0, #0
 800a4ca:	da08      	bge.n	800a4de <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a4cc:	2e0b      	cmp	r6, #11
 800a4ce:	4632      	mov	r2, r6
 800a4d0:	4917      	ldr	r1, [pc, #92]	@ (800a530 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a4d2:	bf28      	it	cs
 800a4d4:	220b      	movcs	r2, #11
 800a4d6:	4628      	mov	r0, r5
 800a4d8:	f00d f8da 	bl	8017690 <memcpy>
 800a4dc:	e7ec      	b.n	800a4b8 <RemoteConfig::HandleGet(void*, unsigned long)+0x34>
 800a4de:	4915      	ldr	r1, [pc, #84]	@ (800a534 <RemoteConfig::HandleGet(void*, unsigned long)+0xb0>)
 800a4e0:	2218      	movs	r2, #24
 800a4e2:	4353      	muls	r3, r2
 800a4e4:	18ca      	adds	r2, r1, r3
 800a4e6:	58cb      	ldr	r3, [r1, r3]
 800a4e8:	6852      	ldr	r2, [r2, #4]
 800a4ea:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a4ee:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a4f2:	07d2      	lsls	r2, r2, #31
 800a4f4:	bf48      	it	mi
 800a4f6:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a4fa:	a903      	add	r1, sp, #12
 800a4fc:	bf48      	it	mi
 800a4fe:	58d3      	ldrmi	r3, [r2, r3]
 800a500:	4798      	blx	r3
 800a502:	b955      	cbnz	r5, 800a51a <RemoteConfig::HandleGet(void*, unsigned long)+0x96>
 800a504:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a508:	9300      	str	r3, [sp, #0]
 800a50a:	69a3      	ldr	r3, [r4, #24]
 800a50c:	9a03      	ldr	r2, [sp, #12]
 800a50e:	6839      	ldr	r1, [r7, #0]
 800a510:	6960      	ldr	r0, [r4, #20]
 800a512:	f7ff fe01 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a516:	9803      	ldr	r0, [sp, #12]
 800a518:	e7cf      	b.n	800a4ba <RemoteConfig::HandleGet(void*, unsigned long)+0x36>
 800a51a:	9a03      	ldr	r2, [sp, #12]
 800a51c:	6839      	ldr	r1, [r7, #0]
 800a51e:	42b2      	cmp	r2, r6
 800a520:	bf28      	it	cs
 800a522:	4632      	movcs	r2, r6
 800a524:	4628      	mov	r0, r5
 800a526:	f00d f8be 	bl	80176a6 <memmove>
 800a52a:	e7f4      	b.n	800a516 <RemoteConfig::HandleGet(void*, unsigned long)+0x92>
 800a52c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a530:	0801884c 	stmdaeq	r1, {r2, r3, r6, fp, pc}
 800a534:	080195d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, pc}

0800a538 <RemoteConfig::HandleGetNoParams()>:
 800a538:	2200      	movs	r2, #0
 800a53a:	4611      	mov	r1, r2
 800a53c:	f7ff bfa2 	b.w	800a484 <RemoteConfig::HandleGet(void*, unsigned long)>

0800a540 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
 800a540:	b510      	push	{r4, lr}
 800a542:	b08a      	sub	sp, #40	@ 0x28
 800a544:	a802      	add	r0, sp, #8
 800a546:	460c      	mov	r4, r1
 800a548:	f000 f9a2 	bl	800a890 <RemoteConfigParams::RemoteConfigParams()>
 800a54c:	4a05      	ldr	r2, [pc, #20]	@ (800a564 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)+0x24>)
 800a54e:	9400      	str	r4, [sp, #0]
 800a550:	6812      	ldr	r2, [r2, #0]
 800a552:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a556:	2100      	movs	r1, #0
 800a558:	a802      	add	r0, sp, #8
 800a55a:	f000 fa11 	bl	800a980 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
 800a55e:	b00a      	add	sp, #40	@ 0x28
 800a560:	bd10      	pop	{r4, pc}
 800a562:	bf00      	nop
 800a564:	2000007c 	andcs	r0, r0, ip, ror r0

0800a568 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
 800a568:	b513      	push	{r0, r1, r4, lr}
 800a56a:	a801      	add	r0, sp, #4
 800a56c:	460c      	mov	r4, r1
 800a56e:	f009 ff01 	bl	8014374 <EnvParams::EnvParams()>
 800a572:	4905      	ldr	r1, [pc, #20]	@ (800a588 <RemoteConfig::HandleGetEnvTxt(unsigned long&)+0x20>)
 800a574:	4623      	mov	r3, r4
 800a576:	6809      	ldr	r1, [r1, #0]
 800a578:	f240 528c 	movw	r2, #1420	@ 0x58c
 800a57c:	a801      	add	r0, sp, #4
 800a57e:	f009 ff57 	bl	8014430 <EnvParams::Builder(char*, unsigned long, unsigned long&)>
 800a582:	b002      	add	sp, #8
 800a584:	bd10      	pop	{r4, pc}
 800a586:	bf00      	nop
 800a588:	2000007c 	andcs	r0, r0, ip, ror r0

0800a58c <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
 800a58c:	b510      	push	{r4, lr}
 800a58e:	b09a      	sub	sp, #104	@ 0x68
 800a590:	a802      	add	r0, sp, #8
 800a592:	460c      	mov	r4, r1
 800a594:	f008 face 	bl	8012b34 <NetworkParams::NetworkParams()>
 800a598:	4a05      	ldr	r2, [pc, #20]	@ (800a5b0 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)+0x24>)
 800a59a:	9400      	str	r4, [sp, #0]
 800a59c:	6812      	ldr	r2, [r2, #0]
 800a59e:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a5a2:	2100      	movs	r1, #0
 800a5a4:	a802      	add	r0, sp, #8
 800a5a6:	f008 fbb1 	bl	8012d0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
 800a5aa:	b01a      	add	sp, #104	@ 0x68
 800a5ac:	bd10      	pop	{r4, pc}
 800a5ae:	bf00      	nop
 800a5b0:	2000007c 	andcs	r0, r0, ip, ror r0

0800a5b4 <RemoteConfig::HandleGetDevicesTxt(unsigned long&)>:
 800a5b4:	b510      	push	{r4, lr}
 800a5b6:	b08c      	sub	sp, #48	@ 0x30
 800a5b8:	a802      	add	r0, sp, #8
 800a5ba:	460c      	mov	r4, r1
 800a5bc:	f002 fd0c 	bl	800cfd8 <PixelDmxParams::PixelDmxParams()>
 800a5c0:	4a05      	ldr	r2, [pc, #20]	@ (800a5d8 <RemoteConfig::HandleGetDevicesTxt(unsigned long&)+0x24>)
 800a5c2:	9400      	str	r4, [sp, #0]
 800a5c4:	6812      	ldr	r2, [r2, #0]
 800a5c6:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a5ca:	2100      	movs	r1, #0
 800a5cc:	a802      	add	r0, sp, #8
 800a5ce:	f002 fea3 	bl	800d318 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)>
 800a5d2:	b00c      	add	sp, #48	@ 0x30
 800a5d4:	bd10      	pop	{r4, pc}
 800a5d6:	bf00      	nop
 800a5d8:	2000007c 	andcs	r0, r0, ip, ror r0

0800a5dc <RemoteConfig::HandleGetDisplayTxt(unsigned long&)>:
 800a5dc:	b510      	push	{r4, lr}
 800a5de:	b08c      	sub	sp, #48	@ 0x30
 800a5e0:	a803      	add	r0, sp, #12
 800a5e2:	460c      	mov	r4, r1
 800a5e4:	f009 fb40 	bl	8013c68 <DisplayUdfParams::DisplayUdfParams()>
 800a5e8:	4a05      	ldr	r2, [pc, #20]	@ (800a600 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)+0x24>)
 800a5ea:	9400      	str	r4, [sp, #0]
 800a5ec:	6812      	ldr	r2, [r2, #0]
 800a5ee:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a5f2:	2100      	movs	r1, #0
 800a5f4:	a803      	add	r0, sp, #12
 800a5f6:	f009 fbd9 	bl	8013dac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>
 800a5fa:	b00c      	add	sp, #48	@ 0x30
 800a5fc:	bd10      	pop	{r4, pc}
 800a5fe:	bf00      	nop
 800a600:	2000007c 	andcs	r0, r0, ip, ror r0

0800a604 <RemoteConfig::HandleSet(void*, unsigned long)>:
 800a604:	b530      	push	{r4, r5, lr}
 800a606:	b085      	sub	sp, #20
 800a608:	4604      	mov	r4, r0
 800a60a:	9201      	str	r2, [sp, #4]
 800a60c:	b9d1      	cbnz	r1, 800a644 <RemoteConfig::HandleSet(void*, unsigned long)+0x40>
 800a60e:	f240 538b 	movw	r3, #1419	@ 0x58b
 800a612:	9303      	str	r3, [sp, #12]
 800a614:	4b19      	ldr	r3, [pc, #100]	@ (800a67c <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a616:	6819      	ldr	r1, [r3, #0]
 800a618:	aa03      	add	r2, sp, #12
 800a61a:	3101      	adds	r1, #1
 800a61c:	f000 fa9e 	bl	800ab5c <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a620:	2800      	cmp	r0, #0
 800a622:	db0d      	blt.n	800a640 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a624:	4b16      	ldr	r3, [pc, #88]	@ (800a680 <RemoteConfig::HandleSet(void*, unsigned long)+0x7c>)
 800a626:	2218      	movs	r2, #24
 800a628:	fb02 3300 	mla	r3, r2, r0, r3
 800a62c:	68da      	ldr	r2, [r3, #12]
 800a62e:	689b      	ldr	r3, [r3, #8]
 800a630:	1051      	asrs	r1, r2, #1
 800a632:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a636:	07d2      	lsls	r2, r2, #31
 800a638:	bf44      	itt	mi
 800a63a:	5862      	ldrmi	r2, [r4, r1]
 800a63c:	58d3      	ldrmi	r3, [r2, r3]
 800a63e:	4798      	blx	r3
 800a640:	b005      	add	sp, #20
 800a642:	bd30      	pop	{r4, r5, pc}
 800a644:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a648:	429a      	cmp	r2, r3
 800a64a:	d8f9      	bhi.n	800a640 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a64c:	4b0d      	ldr	r3, [pc, #52]	@ (800a684 <RemoteConfig::HandleSet(void*, unsigned long)+0x80>)
 800a64e:	781b      	ldrb	r3, [r3, #0]
 800a650:	460d      	mov	r5, r1
 800a652:	07d9      	lsls	r1, r3, #31
 800a654:	d50b      	bpl.n	800a66e <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a656:	782b      	ldrb	r3, [r5, #0]
 800a658:	2b7b      	cmp	r3, #123	@ 0x7b
 800a65a:	d108      	bne.n	800a66e <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a65c:	1e51      	subs	r1, r2, #1
 800a65e:	b289      	uxth	r1, r1
 800a660:	2200      	movs	r2, #0
 800a662:	4628      	mov	r0, r5
 800a664:	f009 ff38 	bl	80144d8 <properties::convert_json_file(char*, unsigned long, bool)>
 800a668:	1e02      	subs	r2, r0, #0
 800a66a:	dde9      	ble.n	800a640 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a66c:	b292      	uxth	r2, r2
 800a66e:	4b03      	ldr	r3, [pc, #12]	@ (800a67c <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a670:	61e2      	str	r2, [r4, #28]
 800a672:	601d      	str	r5, [r3, #0]
 800a674:	aa01      	add	r2, sp, #4
 800a676:	1c69      	adds	r1, r5, #1
 800a678:	4620      	mov	r0, r4
 800a67a:	e7cf      	b.n	800a61c <RemoteConfig::HandleSet(void*, unsigned long)+0x18>
 800a67c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a680:	080195d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, pc}
 800a684:	2000ccd1 	ldrdcs	ip, [r0], -r1

0800a688 <RemoteConfig::HandleRequest()>:
 800a688:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a68c:	69c2      	ldr	r2, [r0, #28]
 800a68e:	4b3f      	ldr	r3, [pc, #252]	@ (800a78c <RemoteConfig::HandleRequest()+0x104>)
 800a690:	3a01      	subs	r2, #1
 800a692:	681b      	ldr	r3, [r3, #0]
 800a694:	5c99      	ldrb	r1, [r3, r2]
 800a696:	290a      	cmp	r1, #10
 800a698:	bf08      	it	eq
 800a69a:	61c2      	streq	r2, [r0, #28]
 800a69c:	7819      	ldrb	r1, [r3, #0]
 800a69e:	293f      	cmp	r1, #63	@ 0x3f
 800a6a0:	d13c      	bne.n	800a71c <RemoteConfig::HandleRequest()+0x94>
 800a6a2:	69c4      	ldr	r4, [r0, #28]
 800a6a4:	493a      	ldr	r1, [pc, #232]	@ (800a790 <RemoteConfig::HandleRequest()+0x108>)
 800a6a6:	3c01      	subs	r4, #1
 800a6a8:	61c4      	str	r4, [r0, #28]
 800a6aa:	2200      	movs	r2, #0
 800a6ac:	468c      	mov	ip, r1
 800a6ae:	7b8e      	ldrb	r6, [r1, #14]
 800a6b0:	898d      	ldrh	r5, [r1, #12]
 800a6b2:	b18e      	cbz	r6, 800a6d8 <RemoteConfig::HandleRequest()+0x50>
 800a6b4:	42ac      	cmp	r4, r5
 800a6b6:	d811      	bhi.n	800a6dc <RemoteConfig::HandleRequest()+0x54>
 800a6b8:	3201      	adds	r2, #1
 800a6ba:	2a08      	cmp	r2, #8
 800a6bc:	f101 0110 	add.w	r1, r1, #16
 800a6c0:	d1f5      	bne.n	800a6ae <RemoteConfig::HandleRequest()+0x26>
 800a6c2:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a6c6:	9300      	str	r3, [sp, #0]
 800a6c8:	6983      	ldr	r3, [r0, #24]
 800a6ca:	4932      	ldr	r1, [pc, #200]	@ (800a794 <RemoteConfig::HandleRequest()+0x10c>)
 800a6cc:	6940      	ldr	r0, [r0, #20]
 800a6ce:	f7ff fd23 	bl	800a118 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a6d2:	b002      	add	sp, #8
 800a6d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6d8:	42ac      	cmp	r4, r5
 800a6da:	d1ed      	bne.n	800a6b8 <RemoteConfig::HandleRequest()+0x30>
 800a6dc:	688e      	ldr	r6, [r1, #8]
 800a6de:	461f      	mov	r7, r3
 800a6e0:	3e01      	subs	r6, #1
 800a6e2:	441d      	add	r5, r3
 800a6e4:	42af      	cmp	r7, r5
 800a6e6:	d10f      	bne.n	800a708 <RemoteConfig::HandleRequest()+0x80>
 800a6e8:	0113      	lsls	r3, r2, #4
 800a6ea:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 800a6ee:	f85c 3003 	ldr.w	r3, [ip, r3]
 800a6f2:	6852      	ldr	r2, [r2, #4]
 800a6f4:	1054      	asrs	r4, r2, #1
 800a6f6:	eb00 0162 	add.w	r1, r0, r2, asr #1
 800a6fa:	07d2      	lsls	r2, r2, #31
 800a6fc:	d40b      	bmi.n	800a716 <RemoteConfig::HandleRequest()+0x8e>
 800a6fe:	4608      	mov	r0, r1
 800a700:	b002      	add	sp, #8
 800a702:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a706:	4718      	bx	r3
 800a708:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 800a70c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a710:	45f0      	cmp	r8, lr
 800a712:	d0e7      	beq.n	800a6e4 <RemoteConfig::HandleRequest()+0x5c>
 800a714:	e7d0      	b.n	800a6b8 <RemoteConfig::HandleRequest()+0x30>
 800a716:	5902      	ldr	r2, [r0, r4]
 800a718:	58d3      	ldr	r3, [r2, r3]
 800a71a:	e7f0      	b.n	800a6fe <RemoteConfig::HandleRequest()+0x76>
 800a71c:	7b42      	ldrb	r2, [r0, #13]
 800a71e:	2a00      	cmp	r2, #0
 800a720:	d1d7      	bne.n	800a6d2 <RemoteConfig::HandleRequest()+0x4a>
 800a722:	2923      	cmp	r1, #35	@ 0x23
 800a724:	d105      	bne.n	800a732 <RemoteConfig::HandleRequest()+0xaa>
 800a726:	4611      	mov	r1, r2
 800a728:	b002      	add	sp, #8
 800a72a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a72e:	f7ff bf69 	b.w	800a604 <RemoteConfig::HandleSet(void*, unsigned long)>
 800a732:	2921      	cmp	r1, #33	@ 0x21
 800a734:	d1cd      	bne.n	800a6d2 <RemoteConfig::HandleRequest()+0x4a>
 800a736:	69c2      	ldr	r2, [r0, #28]
 800a738:	3a01      	subs	r2, #1
 800a73a:	2a05      	cmp	r2, #5
 800a73c:	61c2      	str	r2, [r0, #28]
 800a73e:	d91e      	bls.n	800a77e <RemoteConfig::HandleRequest()+0xf6>
 800a740:	4d15      	ldr	r5, [pc, #84]	@ (800a798 <RemoteConfig::HandleRequest()+0x110>)
 800a742:	4619      	mov	r1, r3
 800a744:	1d5e      	adds	r6, r3, #5
 800a746:	461c      	mov	r4, r3
 800a748:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800a74c:	f815 7b01 	ldrb.w	r7, [r5], #1
 800a750:	45bc      	cmp	ip, r7
 800a752:	d112      	bne.n	800a77a <RemoteConfig::HandleRequest()+0xf2>
 800a754:	42b4      	cmp	r4, r6
 800a756:	d1f7      	bne.n	800a748 <RemoteConfig::HandleRequest()+0xc0>
 800a758:	2300      	movs	r3, #0
 800a75a:	4a10      	ldr	r2, [pc, #64]	@ (800a79c <RemoteConfig::HandleRequest()+0x114>)
 800a75c:	011b      	lsls	r3, r3, #4
 800a75e:	58d3      	ldr	r3, [r2, r3]
 800a760:	e7ce      	b.n	800a700 <RemoteConfig::HandleRequest()+0x78>
 800a762:	4a0f      	ldr	r2, [pc, #60]	@ (800a7a0 <RemoteConfig::HandleRequest()+0x118>)
 800a764:	3308      	adds	r3, #8
 800a766:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800a76a:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a76e:	42a5      	cmp	r5, r4
 800a770:	d105      	bne.n	800a77e <RemoteConfig::HandleRequest()+0xf6>
 800a772:	4299      	cmp	r1, r3
 800a774:	d1f7      	bne.n	800a766 <RemoteConfig::HandleRequest()+0xde>
 800a776:	2301      	movs	r3, #1
 800a778:	e7ef      	b.n	800a75a <RemoteConfig::HandleRequest()+0xd2>
 800a77a:	2a08      	cmp	r2, #8
 800a77c:	d8f1      	bhi.n	800a762 <RemoteConfig::HandleRequest()+0xda>
 800a77e:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a782:	9300      	str	r3, [sp, #0]
 800a784:	6983      	ldr	r3, [r0, #24]
 800a786:	4907      	ldr	r1, [pc, #28]	@ (800a7a4 <RemoteConfig::HandleRequest()+0x11c>)
 800a788:	2208      	movs	r2, #8
 800a78a:	e79f      	b.n	800a6cc <RemoteConfig::HandleRequest()+0x44>
 800a78c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a790:	08019530 	stmdaeq	r1, {r4, r5, r8, sl, ip, pc}
 800a794:	08018858 	stmdaeq	r1, {r3, r4, r6, fp, pc}
 800a798:	08018861 	stmdaeq	r1, {r0, r5, r6, fp, pc}
 800a79c:	08019510 	stmdaeq	r1, {r4, r8, sl, ip, pc}
 800a7a0:	08018867 	stmdaeq	r1, {r0, r1, r2, r5, r6, fp, pc}
 800a7a4:	08018870 	stmdaeq	r1, {r4, r5, r6, fp, pc}

0800a7a8 <RemoteConfig::HandleSetRconfigTxt()>:
 800a7a8:	b510      	push	{r4, lr}
 800a7aa:	b088      	sub	sp, #32
 800a7ac:	4604      	mov	r4, r0
 800a7ae:	4668      	mov	r0, sp
 800a7b0:	f000 f86e 	bl	800a890 <RemoteConfigParams::RemoteConfigParams()>
 800a7b4:	4b05      	ldr	r3, [pc, #20]	@ (800a7cc <RemoteConfig::HandleSetRconfigTxt()+0x24>)
 800a7b6:	69e2      	ldr	r2, [r4, #28]
 800a7b8:	6819      	ldr	r1, [r3, #0]
 800a7ba:	4668      	mov	r0, sp
 800a7bc:	f000 f87a 	bl	800a8b4 <RemoteConfigParams::Load(char const*, unsigned long)>
 800a7c0:	4621      	mov	r1, r4
 800a7c2:	4668      	mov	r0, sp
 800a7c4:	f000 f97a 	bl	800aabc <RemoteConfigParams::Set(RemoteConfig*)>
 800a7c8:	b008      	add	sp, #32
 800a7ca:	bd10      	pop	{r4, pc}
 800a7cc:	2000007c 	andcs	r0, r0, ip, ror r0

0800a7d0 <RemoteConfig::HandleSetEnvTxt()>:
 800a7d0:	b513      	push	{r0, r1, r4, lr}
 800a7d2:	4604      	mov	r4, r0
 800a7d4:	a801      	add	r0, sp, #4
 800a7d6:	f009 fdcd 	bl	8014374 <EnvParams::EnvParams()>
 800a7da:	4b04      	ldr	r3, [pc, #16]	@ (800a7ec <RemoteConfig::HandleSetEnvTxt()+0x1c>)
 800a7dc:	69e2      	ldr	r2, [r4, #28]
 800a7de:	6819      	ldr	r1, [r3, #0]
 800a7e0:	a801      	add	r0, sp, #4
 800a7e2:	f009 fdc9 	bl	8014378 <EnvParams::LoadAndSet(char const*, unsigned long)>
 800a7e6:	b002      	add	sp, #8
 800a7e8:	bd10      	pop	{r4, pc}
 800a7ea:	bf00      	nop
 800a7ec:	2000007c 	andcs	r0, r0, ip, ror r0

0800a7f0 <RemoteConfig::HandleSetNetworkTxt()>:
 800a7f0:	b510      	push	{r4, lr}
 800a7f2:	b098      	sub	sp, #96	@ 0x60
 800a7f4:	4604      	mov	r4, r0
 800a7f6:	4668      	mov	r0, sp
 800a7f8:	f008 f99c 	bl	8012b34 <NetworkParams::NetworkParams()>
 800a7fc:	4b03      	ldr	r3, [pc, #12]	@ (800a80c <RemoteConfig::HandleSetNetworkTxt()+0x1c>)
 800a7fe:	69e2      	ldr	r2, [r4, #28]
 800a800:	6819      	ldr	r1, [r3, #0]
 800a802:	4668      	mov	r0, sp
 800a804:	f008 f9aa 	bl	8012b5c <NetworkParams::Load(char const*, unsigned long)>
 800a808:	b018      	add	sp, #96	@ 0x60
 800a80a:	bd10      	pop	{r4, pc}
 800a80c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a810 <RemoteConfig::HandleSetDevicesTxt()>:
 800a810:	b510      	push	{r4, lr}
 800a812:	b08a      	sub	sp, #40	@ 0x28
 800a814:	4604      	mov	r4, r0
 800a816:	4668      	mov	r0, sp
 800a818:	f002 fbde 	bl	800cfd8 <PixelDmxParams::PixelDmxParams()>
 800a81c:	4b03      	ldr	r3, [pc, #12]	@ (800a82c <RemoteConfig::HandleSetDevicesTxt()+0x1c>)
 800a81e:	69e2      	ldr	r2, [r4, #28]
 800a820:	6819      	ldr	r1, [r3, #0]
 800a822:	4668      	mov	r0, sp
 800a824:	f002 ffce 	bl	800d7c4 <PixelDmxParams::Load(char const*, unsigned long)>
 800a828:	b00a      	add	sp, #40	@ 0x28
 800a82a:	bd10      	pop	{r4, pc}
 800a82c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a830 <RemoteConfig::HandleSetDisplayTxt()>:
 800a830:	b510      	push	{r4, lr}
 800a832:	b08a      	sub	sp, #40	@ 0x28
 800a834:	4604      	mov	r4, r0
 800a836:	a801      	add	r0, sp, #4
 800a838:	f009 fa16 	bl	8013c68 <DisplayUdfParams::DisplayUdfParams()>
 800a83c:	4b03      	ldr	r3, [pc, #12]	@ (800a84c <RemoteConfig::HandleSetDisplayTxt()+0x1c>)
 800a83e:	69e2      	ldr	r2, [r4, #28]
 800a840:	6819      	ldr	r1, [r3, #0]
 800a842:	a801      	add	r0, sp, #4
 800a844:	f009 fa28 	bl	8013c98 <DisplayUdfParams::Load(char const*, unsigned long)>
 800a848:	b00a      	add	sp, #40	@ 0x28
 800a84a:	bd10      	pop	{r4, pc}
 800a84c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a850 <RemoteConfig::HandleFactory()>:
 800a850:	b538      	push	{r3, r4, r5, lr}
 800a852:	4b05      	ldr	r3, [pc, #20]	@ (800a868 <RemoteConfig::HandleFactory()+0x18>)
 800a854:	681d      	ldr	r5, [r3, #0]
 800a856:	2400      	movs	r4, #0
 800a858:	4621      	mov	r1, r4
 800a85a:	4628      	mov	r0, r5
 800a85c:	3401      	adds	r4, #1
 800a85e:	f009 fcab 	bl	80141b8 <ConfigStore::ResetSetList(configstore::Store)>
 800a862:	2c1b      	cmp	r4, #27
 800a864:	d1f8      	bne.n	800a858 <RemoteConfig::HandleFactory()+0x8>
 800a866:	bd38      	pop	{r3, r4, r5, pc}
 800a868:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800a86c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
 800a86c:	b507      	push	{r0, r1, r2, lr}
 800a86e:	2300      	movs	r3, #0
 800a870:	2101      	movs	r1, #1
 800a872:	e9cd 3100 	strd	r3, r1, [sp]
 800a876:	4602      	mov	r2, r0
 800a878:	4804      	ldr	r0, [pc, #16]	@ (800a88c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x20>)
 800a87a:	2320      	movs	r3, #32
 800a87c:	6800      	ldr	r0, [r0, #0]
 800a87e:	210a      	movs	r1, #10
 800a880:	f009 fcd2 	bl	8014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800a884:	b003      	add	sp, #12
 800a886:	f85d fb04 	ldr.w	pc, [sp], #4
 800a88a:	bf00      	nop
 800a88c:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800a890 <RemoteConfigParams::RemoteConfigParams()>:
 800a890:	b510      	push	{r4, lr}
 800a892:	2220      	movs	r2, #32
 800a894:	4604      	mov	r4, r0
 800a896:	2100      	movs	r1, #0
 800a898:	f00c ff1c 	bl	80176d4 <memset>
 800a89c:	4620      	mov	r0, r4
 800a89e:	bd10      	pop	{r4, pc}

0800a8a0 <RemoteConfigParams::Load()>:
 800a8a0:	b508      	push	{r3, lr}
 800a8a2:	2200      	movs	r2, #0
 800a8a4:	7002      	strb	r2, [r0, #0]
 800a8a6:	7042      	strb	r2, [r0, #1]
 800a8a8:	7082      	strb	r2, [r0, #2]
 800a8aa:	70c2      	strb	r2, [r0, #3]
 800a8ac:	f7ff ffde 	bl	800a86c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a8b0:	bd08      	pop	{r3, pc}
	...

0800a8b4 <RemoteConfigParams::Load(char const*, unsigned long)>:
 800a8b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8b6:	2500      	movs	r5, #0
 800a8b8:	b087      	sub	sp, #28
 800a8ba:	4604      	mov	r4, r0
 800a8bc:	460e      	mov	r6, r1
 800a8be:	4617      	mov	r7, r2
 800a8c0:	7005      	strb	r5, [r0, #0]
 800a8c2:	7045      	strb	r5, [r0, #1]
 800a8c4:	7085      	strb	r5, [r0, #2]
 800a8c6:	70c5      	strb	r5, [r0, #3]
 800a8c8:	4602      	mov	r2, r0
 800a8ca:	490c      	ldr	r1, [pc, #48]	@ (800a8fc <RemoteConfigParams::Load(char const*, unsigned long)+0x48>)
 800a8cc:	a804      	add	r0, sp, #16
 800a8ce:	f009 ff85 	bl	80147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a8d2:	463a      	mov	r2, r7
 800a8d4:	4631      	mov	r1, r6
 800a8d6:	a804      	add	r0, sp, #16
 800a8d8:	f009 ff84 	bl	80147e4 <ReadConfigFile::Read(char const*, unsigned int)>
 800a8dc:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800a8e0:	2320      	movs	r3, #32
 800a8e2:	4807      	ldr	r0, [pc, #28]	@ (800a900 <RemoteConfigParams::Load(char const*, unsigned long)+0x4c>)
 800a8e4:	9300      	str	r3, [sp, #0]
 800a8e6:	462a      	mov	r2, r5
 800a8e8:	4623      	mov	r3, r4
 800a8ea:	210a      	movs	r1, #10
 800a8ec:	6800      	ldr	r0, [r0, #0]
 800a8ee:	f009 fc75 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a8f2:	a804      	add	r0, sp, #16
 800a8f4:	f009 ff75 	bl	80147e2 <ReadConfigFile::~ReadConfigFile()>
 800a8f8:	b007      	add	sp, #28
 800a8fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8fc:	0800a97d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, sp, pc}
 800a900:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800a904 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
 800a904:	6803      	ldr	r3, [r0, #0]
 800a906:	b111      	cbz	r1, 800a90e <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0xa>
 800a908:	4313      	orrs	r3, r2
 800a90a:	6003      	str	r3, [r0, #0]
 800a90c:	4770      	bx	lr
 800a90e:	ea23 0302 	bic.w	r3, r3, r2
 800a912:	e7fa      	b.n	800a90a <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0x6>

0800a914 <RemoteConfigParams::callbackFunction(char const*)>:
 800a914:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a918:	4f16      	ldr	r7, [pc, #88]	@ (800a974 <RemoteConfigParams::callbackFunction(char const*)+0x60>)
 800a91a:	4604      	mov	r4, r0
 800a91c:	460e      	mov	r6, r1
 800a91e:	2506      	movs	r5, #6
 800a920:	3d01      	subs	r5, #1
 800a922:	d113      	bne.n	800a94c <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a924:	2317      	movs	r3, #23
 800a926:	9301      	str	r3, [sp, #4]
 800a928:	4913      	ldr	r1, [pc, #76]	@ (800a978 <RemoteConfigParams::callbackFunction(char const*)+0x64>)
 800a92a:	ab01      	add	r3, sp, #4
 800a92c:	f104 0208 	add.w	r2, r4, #8
 800a930:	4630      	mov	r0, r6
 800a932:	f009 ff8d 	bl	8014850 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800a936:	b930      	cbnz	r0, 800a946 <RemoteConfigParams::callbackFunction(char const*)+0x32>
 800a938:	9b01      	ldr	r3, [sp, #4]
 800a93a:	4423      	add	r3, r4
 800a93c:	721d      	strb	r5, [r3, #8]
 800a93e:	6823      	ldr	r3, [r4, #0]
 800a940:	f043 0310 	orr.w	r3, r3, #16
 800a944:	6023      	str	r3, [r4, #0]
 800a946:	b002      	add	sp, #8
 800a948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a94c:	6839      	ldr	r1, [r7, #0]
 800a94e:	f8d7 8004 	ldr.w	r8, [r7, #4]
 800a952:	aa01      	add	r2, sp, #4
 800a954:	4630      	mov	r0, r6
 800a956:	f00a f86b 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a95a:	b108      	cbz	r0, 800a960 <RemoteConfigParams::callbackFunction(char const*)+0x4c>
 800a95c:	3708      	adds	r7, #8
 800a95e:	e7df      	b.n	800a920 <RemoteConfigParams::callbackFunction(char const*)+0xc>
 800a960:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a964:	4642      	mov	r2, r8
 800a966:	4620      	mov	r0, r4
 800a968:	b002      	add	sp, #8
 800a96a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a96e:	f7ff bfc9 	b.w	800a904 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
 800a972:	bf00      	nop
 800a974:	080195b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip, pc}
 800a978:	0801a054 	stmdaeq	r1, {r2, r4, r6, sp, pc}

0800a97c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a97c:	f7ff bfca 	b.w	800a914 <RemoteConfigParams::callbackFunction(char const*)>

0800a980 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
 800a980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a984:	4605      	mov	r5, r0
 800a986:	b087      	sub	sp, #28
 800a988:	4614      	mov	r4, r2
 800a98a:	461e      	mov	r6, r3
 800a98c:	b361      	cbz	r1, 800a9e8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800a98e:	2220      	movs	r2, #32
 800a990:	f00c fe89 	bl	80176a6 <memmove>
 800a994:	4940      	ldr	r1, [pc, #256]	@ (800aa98 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800a996:	4f41      	ldr	r7, [pc, #260]	@ (800aa9c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800a998:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800aab4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800a99c:	f8df a118 	ldr.w	sl, [pc, #280]	@ 800aab8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800a9a0:	4633      	mov	r3, r6
 800a9a2:	4622      	mov	r2, r4
 800a9a4:	a803      	add	r0, sp, #12
 800a9a6:	f009 fe43 	bl	8014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800a9aa:	f04f 0806 	mov.w	r8, #6
 800a9ae:	f04f 0901 	mov.w	r9, #1
 800a9b2:	f1b8 0801 	subs.w	r8, r8, #1
 800a9b6:	f8d5 c000 	ldr.w	ip, [r5]
 800a9ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a9be:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a9c2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800a9c6:	d112      	bne.n	800a9ee <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800a9c8:	42a2      	cmp	r2, r4
 800a9ca:	d246      	bcs.n	800aa5a <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xda>
 800a9cc:	9803      	ldr	r0, [sp, #12]
 800a9ce:	f01c 0f10 	tst.w	ip, #16
 800a9d2:	f105 0508 	add.w	r5, r5, #8
 800a9d6:	4410      	add	r0, r2
 800a9d8:	eba4 0402 	sub.w	r4, r4, r2
 800a9dc:	d12f      	bne.n	800aa3e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800a9de:	bb7e      	cbnz	r6, 800aa40 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
 800a9e0:	4b2f      	ldr	r3, [pc, #188]	@ (800aaa0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a9e2:	4a30      	ldr	r2, [pc, #192]	@ (800aaa4 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800a9e4:	9500      	str	r5, [sp, #0]
 800a9e6:	e02e      	b.n	800aa46 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a9e8:	f7ff ff40 	bl	800a86c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a9ec:	e7d2      	b.n	800a994 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800a9ee:	42a2      	cmp	r2, r4
 800a9f0:	e9d7 3100 	ldrd	r3, r1, [r7]
 800a9f4:	d21d      	bcs.n	800aa32 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb2>
 800a9f6:	9803      	ldr	r0, [sp, #12]
 800a9f8:	ea01 0e0c 	and.w	lr, r1, ip
 800a9fc:	ea31 0c0c 	bics.w	ip, r1, ip
 800aa00:	4410      	add	r0, r2
 800aa02:	eba4 0402 	sub.w	r4, r4, r2
 800aa06:	d003      	beq.n	800aa10 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x90>
 800aa08:	b91e      	cbnz	r6, 800aa12 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800aa0a:	4a27      	ldr	r2, [pc, #156]	@ (800aaa8 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x128>)
 800aa0c:	9600      	str	r6, [sp, #0]
 800aa0e:	e006      	b.n	800aa1e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800aa10:	b18e      	cbz	r6, 800aa36 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb6>
 800aa12:	eba1 020e 	sub.w	r2, r1, lr
 800aa16:	4251      	negs	r1, r2
 800aa18:	4151      	adcs	r1, r2
 800aa1a:	9100      	str	r1, [sp, #0]
 800aa1c:	465a      	mov	r2, fp
 800aa1e:	4621      	mov	r1, r4
 800aa20:	f00d f964 	bl	8017cec <snprintf>
 800aa24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aa28:	4284      	cmp	r4, r0
 800aa2a:	bfa4      	itt	ge
 800aa2c:	181b      	addge	r3, r3, r0
 800aa2e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800aa32:	3708      	adds	r7, #8
 800aa34:	e7bd      	b.n	800a9b2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x32>
 800aa36:	f8cd 9000 	str.w	r9, [sp]
 800aa3a:	4652      	mov	r2, sl
 800aa3c:	e7ef      	b.n	800aa1e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800aa3e:	b336      	cbz	r6, 800aa8e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x10e>
 800aa40:	4b17      	ldr	r3, [pc, #92]	@ (800aaa0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800aa42:	4a1a      	ldr	r2, [pc, #104]	@ (800aaac <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>)
 800aa44:	9500      	str	r5, [sp, #0]
 800aa46:	4621      	mov	r1, r4
 800aa48:	f00d f950 	bl	8017cec <snprintf>
 800aa4c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aa50:	4284      	cmp	r4, r0
 800aa52:	bfa4      	itt	ge
 800aa54:	181b      	addge	r3, r3, r0
 800aa56:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800aa5a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800aa5e:	b17b      	cbz	r3, 800aa80 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x100>
 800aa60:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aa64:	9b03      	ldr	r3, [sp, #12]
 800aa66:	4413      	add	r3, r2
 800aa68:	227d      	movs	r2, #125	@ 0x7d
 800aa6a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800aa6e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aa72:	9903      	ldr	r1, [sp, #12]
 800aa74:	54ca      	strb	r2, [r1, r3]
 800aa76:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aa7a:	3301      	adds	r3, #1
 800aa7c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800aa80:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800aa84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800aa86:	601a      	str	r2, [r3, #0]
 800aa88:	b007      	add	sp, #28
 800aa8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa8e:	4b04      	ldr	r3, [pc, #16]	@ (800aaa0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800aa90:	4a07      	ldr	r2, [pc, #28]	@ (800aab0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x130>)
 800aa92:	9500      	str	r5, [sp, #0]
 800aa94:	e7d7      	b.n	800aa46 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800aa96:	bf00      	nop
 800aa98:	0801a0a2 	stmdaeq	r1, {r1, r5, r7, sp, pc}
 800aa9c:	080195b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, ip, pc}
 800aaa0:	0801a054 	stmdaeq	r1, {r2, r4, r6, sp, pc}
 800aaa4:	080188c4 	stmdaeq	r1, {r2, r6, r7, fp, pc}
 800aaa8:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 800aaac:	080188b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, pc}
 800aab0:	080188c5 	stmdaeq	r1, {r0, r2, r6, r7, fp, pc}
 800aab4:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 800aab8:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

0800aabc <RemoteConfigParams::Set(RemoteConfig*)>:
 800aabc:	b538      	push	{r3, r4, r5, lr}
 800aabe:	460c      	mov	r4, r1
 800aac0:	6801      	ldr	r1, [r0, #0]
 800aac2:	4605      	mov	r5, r0
 800aac4:	f001 0101 	and.w	r1, r1, #1
 800aac8:	4620      	mov	r0, r4
 800aaca:	f7ff fc99 	bl	800a400 <RemoteConfig::SetDisable(bool)>
 800aace:	682b      	ldr	r3, [r5, #0]
 800aad0:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800aad4:	7362      	strb	r2, [r4, #13]
 800aad6:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800aada:	73a2      	strb	r2, [r4, #14]
 800aadc:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800aae0:	73e2      	strb	r2, [r4, #15]
 800aae2:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800aae6:	06db      	lsls	r3, r3, #27
 800aae8:	7422      	strb	r2, [r4, #16]
 800aaea:	d506      	bpl.n	800aafa <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800aaec:	f105 0108 	add.w	r1, r5, #8
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800aaf6:	f7ff bcad 	b.w	800a454 <RemoteConfig::SetDisplayName(char const*)>
 800aafa:	bd38      	pop	{r3, r4, r5, pc}

0800aafc <RemoteConfig::HandleReboot()>:
 800aafc:	b538      	push	{r3, r4, r5, lr}
 800aafe:	7b83      	ldrb	r3, [r0, #14]
 800ab00:	b30b      	cbz	r3, 800ab46 <RemoteConfig::HandleReboot()+0x4a>
 800ab02:	4c11      	ldr	r4, [pc, #68]	@ (800ab48 <RemoteConfig::HandleReboot()+0x4c>)
 800ab04:	6825      	ldr	r5, [r4, #0]
 800ab06:	2301      	movs	r3, #1
 800ab08:	7443      	strb	r3, [r0, #17]
 800ab0a:	69a8      	ldr	r0, [r5, #24]
 800ab0c:	b138      	cbz	r0, 800ab1e <RemoteConfig::HandleReboot()+0x22>
 800ab0e:	6803      	ldr	r3, [r0, #0]
 800ab10:	2100      	movs	r1, #0
 800ab12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ab14:	7569      	strb	r1, [r5, #21]
 800ab16:	4798      	blx	r3
 800ab18:	4b0c      	ldr	r3, [pc, #48]	@ (800ab4c <RemoteConfig::HandleReboot()+0x50>)
 800ab1a:	681b      	ldr	r3, [r3, #0]
 800ab1c:	606b      	str	r3, [r5, #4]
 800ab1e:	4d0c      	ldr	r5, [pc, #48]	@ (800ab50 <RemoteConfig::HandleReboot()+0x54>)
 800ab20:	6828      	ldr	r0, [r5, #0]
 800ab22:	f009 fbb1 	bl	8014288 <ConfigStore::Flash()>
 800ab26:	2800      	cmp	r0, #0
 800ab28:	d1fa      	bne.n	800ab20 <RemoteConfig::HandleReboot()+0x24>
 800ab2a:	6823      	ldr	r3, [r4, #0]
 800ab2c:	6998      	ldr	r0, [r3, #24]
 800ab2e:	b110      	cbz	r0, 800ab36 <RemoteConfig::HandleReboot()+0x3a>
 800ab30:	6803      	ldr	r3, [r0, #0]
 800ab32:	68db      	ldr	r3, [r3, #12]
 800ab34:	4798      	blx	r3
 800ab36:	6820      	ldr	r0, [r4, #0]
 800ab38:	4906      	ldr	r1, [pc, #24]	@ (800ab54 <RemoteConfig::HandleReboot()+0x58>)
 800ab3a:	f7fe fd39 	bl	80095b0 <Display::TextStatus(char const*)>
 800ab3e:	4b06      	ldr	r3, [pc, #24]	@ (800ab58 <RemoteConfig::HandleReboot()+0x5c>)
 800ab40:	6818      	ldr	r0, [r3, #0]
 800ab42:	f00a fd77 	bl	8015634 <Hardware::Reboot()>
 800ab46:	bd38      	pop	{r3, r4, r5, pc}
 800ab48:	2000ccd4 	ldrdcs	ip, [r0], -r4
 800ab4c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 800ab50:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc
 800ab54:	080188cc 	stmdaeq	r1, {r2, r3, r6, r7, fp, pc}
 800ab58:	2000cdc0 	andcs	ip, r0, r0, asr #27

0800ab5c <RemoteConfig::GetIndex(void const*, unsigned long&)>:
 800ab5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ab60:	f8d2 c000 	ldr.w	ip, [r2]
 800ab64:	4e12      	ldr	r6, [pc, #72]	@ (800abb0 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x54>)
 800ab66:	2000      	movs	r0, #0
 800ab68:	f10d 0e04 	add.w	lr, sp, #4
 800ab6c:	7d33      	ldrb	r3, [r6, #20]
 800ab6e:	9301      	str	r3, [sp, #4]
 800ab70:	4563      	cmp	r3, ip
 800ab72:	bf2c      	ite	cs
 800ab74:	4614      	movcs	r4, r2
 800ab76:	4674      	movcc	r4, lr
 800ab78:	6935      	ldr	r5, [r6, #16]
 800ab7a:	6827      	ldr	r7, [r4, #0]
 800ab7c:	3d01      	subs	r5, #1
 800ab7e:	440f      	add	r7, r1
 800ab80:	460c      	mov	r4, r1
 800ab82:	42bc      	cmp	r4, r7
 800ab84:	d101      	bne.n	800ab8a <RemoteConfig::GetIndex(void const*, unsigned long&)+0x2e>
 800ab86:	6013      	str	r3, [r2, #0]
 800ab88:	e00c      	b.n	800aba4 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x48>
 800ab8a:	f894 9000 	ldrb.w	r9, [r4]
 800ab8e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800ab92:	45c1      	cmp	r9, r8
 800ab94:	d009      	beq.n	800abaa <RemoteConfig::GetIndex(void const*, unsigned long&)+0x4e>
 800ab96:	3001      	adds	r0, #1
 800ab98:	2805      	cmp	r0, #5
 800ab9a:	f106 0618 	add.w	r6, r6, #24
 800ab9e:	d1e5      	bne.n	800ab6c <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
 800aba0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800aba4:	b003      	add	sp, #12
 800aba6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800abaa:	3401      	adds	r4, #1
 800abac:	e7e9      	b.n	800ab82 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x26>
 800abae:	bf00      	nop
 800abb0:	080195d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, pc}

0800abb4 <RemoteConfig::PlatformHandleTftpSet()>:
 800abb4:	f890 1020 	ldrb.w	r1, [r0, #32]
 800abb8:	b510      	push	{r4, lr}
 800abba:	4c0d      	ldr	r4, [pc, #52]	@ (800abf0 <RemoteConfig::PlatformHandleTftpSet()+0x3c>)
 800abbc:	b171      	cbz	r1, 800abdc <RemoteConfig::PlatformHandleTftpSet()+0x28>
 800abbe:	f24a 51a5 	movw	r1, #42405	@ 0xa5a5
 800abc2:	2001      	movs	r0, #1
 800abc4:	f00b fdfe 	bl	80167c4 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800abc8:	490a      	ldr	r1, [pc, #40]	@ (800abf4 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800abca:	6820      	ldr	r0, [r4, #0]
 800abcc:	f7fe fcf0 	bl	80095b0 <Display::TextStatus(char const*)>
 800abd0:	4908      	ldr	r1, [pc, #32]	@ (800abf4 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800abd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800abd6:	2002      	movs	r0, #2
 800abd8:	f00a bd8c 	b.w	80156f4 <console_status>
 800abdc:	2001      	movs	r0, #1
 800abde:	f00b fdf1 	bl	80167c4 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800abe2:	4905      	ldr	r1, [pc, #20]	@ (800abf8 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800abe4:	6820      	ldr	r0, [r4, #0]
 800abe6:	f7fe fce3 	bl	80095b0 <Display::TextStatus(char const*)>
 800abea:	4903      	ldr	r1, [pc, #12]	@ (800abf8 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800abec:	e7f1      	b.n	800abd2 <RemoteConfig::PlatformHandleTftpSet()+0x1e>
 800abee:	bf00      	nop
 800abf0:	2000ccd4 	ldrdcs	ip, [r0], -r4
 800abf4:	08018912 	stmdaeq	r1, {r1, r4, r8, fp, pc}
 800abf8:	0801891b 	stmdaeq	r1, {r0, r1, r3, r4, r8, fp, pc}

0800abfc <RemoteConfig::PlatformHandleTftpGet()>:
 800abfc:	b510      	push	{r4, lr}
 800abfe:	4604      	mov	r4, r0
 800ac00:	2001      	movs	r0, #1
 800ac02:	f00b fded 	bl	80167e0 <bkp_data_read(bkp_data_register_enum)>
 800ac06:	f24a 53a5 	movw	r3, #42405	@ 0xa5a5
 800ac0a:	1ac3      	subs	r3, r0, r3
 800ac0c:	4258      	negs	r0, r3
 800ac0e:	4158      	adcs	r0, r3
 800ac10:	f884 0020 	strb.w	r0, [r4, #32]
 800ac14:	bd10      	pop	{r4, pc}
	...

0800ac18 <HttpDaemon::HttpDaemon()>:
 800ac18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac1a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800ac1e:	2500      	movs	r5, #0
 800ac20:	e9c0 3506 	strd	r3, r5, [r0, #24]
 800ac24:	4606      	mov	r6, r0
 800ac26:	2050      	movs	r0, #80	@ 0x50
 800ac28:	f007 fda4 	bl	8012774 <net::tcp_begin(unsigned short)>
 800ac2c:	462c      	mov	r4, r5
 800ac2e:	61b0      	str	r0, [r6, #24]
 800ac30:	f44f 7702 	mov.w	r7, #520	@ 0x208
 800ac34:	2038      	movs	r0, #56	@ 0x38
 800ac36:	f00d fa87 	bl	8018148 <operator new(unsigned int)>
 800ac3a:	69b3      	ldr	r3, [r6, #24]
 800ac3c:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 800ac40:	e9c0 5300 	strd	r5, r3, [r0]
 800ac44:	3501      	adds	r5, #1
 800ac46:	2203      	movs	r2, #3
 800ac48:	2305      	movs	r3, #5
 800ac4a:	2d06      	cmp	r5, #6
 800ac4c:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800ac50:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800ac54:	e9c0 4406 	strd	r4, r4, [r0, #24]
 800ac58:	e9c0 4408 	strd	r4, r4, [r0, #32]
 800ac5c:	e9c0 230b 	strd	r2, r3, [r0, #44]	@ 0x2c
 800ac60:	6287      	str	r7, [r0, #40]	@ 0x28
 800ac62:	f880 4034 	strb.w	r4, [r0, #52]	@ 0x34
 800ac66:	d1e5      	bne.n	800ac34 <HttpDaemon::HttpDaemon()+0x1c>
 800ac68:	4805      	ldr	r0, [pc, #20]	@ (800ac80 <HttpDaemon::HttpDaemon()+0x68>)
 800ac6a:	9400      	str	r4, [sp, #0]
 800ac6c:	2300      	movs	r3, #0
 800ac6e:	2202      	movs	r2, #2
 800ac70:	4619      	mov	r1, r3
 800ac72:	6800      	ldr	r0, [r0, #0]
 800ac74:	f006 fa06 	bl	8011084 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800ac78:	4630      	mov	r0, r6
 800ac7a:	b003      	add	sp, #12
 800ac7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac7e:	bf00      	nop
 800ac80:	2000c9ac 	andcs	ip, r0, ip, lsr #19

0800ac84 <DisplaySet::SetSleep(bool)>:
 800ac84:	4770      	bx	lr
 800ac86:	bf00      	nop

0800ac88 <HttpDeamonHandleRequest::ParseMethod(char*)>:
 800ac88:	460b      	mov	r3, r1
 800ac8a:	b510      	push	{r4, lr}
 800ac8c:	4929      	ldr	r1, [pc, #164]	@ (800ad34 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800ac8e:	4604      	mov	r4, r0
 800ac90:	4618      	mov	r0, r3
 800ac92:	f00d f871 	bl	8017d78 <strtok>
 800ac96:	2800      	cmp	r0, #0
 800ac98:	d039      	beq.n	800ad0e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ac9a:	7803      	ldrb	r3, [r0, #0]
 800ac9c:	2b47      	cmp	r3, #71	@ 0x47
 800ac9e:	d139      	bne.n	800ad14 <HttpDeamonHandleRequest::ParseMethod(char*)+0x8c>
 800aca0:	4a25      	ldr	r2, [pc, #148]	@ (800ad38 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb0>)
 800aca2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800aca6:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800acaa:	428b      	cmp	r3, r1
 800acac:	d12f      	bne.n	800ad0e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d1f7      	bne.n	800aca2 <HttpDeamonHandleRequest::ParseMethod(char*)+0x1a>
 800acb2:	4920      	ldr	r1, [pc, #128]	@ (800ad34 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800acb4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800acb6:	2000      	movs	r0, #0
 800acb8:	f00d f85e 	bl	8017d78 <strtok>
 800acbc:	b320      	cbz	r0, 800ad08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800acbe:	61a0      	str	r0, [r4, #24]
 800acc0:	491e      	ldr	r1, [pc, #120]	@ (800ad3c <HttpDeamonHandleRequest::ParseMethod(char*)+0xb4>)
 800acc2:	2000      	movs	r0, #0
 800acc4:	f00d f858 	bl	8017d78 <strtok>
 800acc8:	4603      	mov	r3, r0
 800acca:	b1e8      	cbz	r0, 800ad08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800accc:	7802      	ldrb	r2, [r0, #0]
 800acce:	2a48      	cmp	r2, #72	@ 0x48
 800acd0:	d11a      	bne.n	800ad08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800acd2:	4a1b      	ldr	r2, [pc, #108]	@ (800ad40 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb8>)
 800acd4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800acd8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800acdc:	4288      	cmp	r0, r1
 800acde:	d113      	bne.n	800ad08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ace0:	2800      	cmp	r0, #0
 800ace2:	d1f7      	bne.n	800acd4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x4c>
 800ace4:	4917      	ldr	r1, [pc, #92]	@ (800ad44 <HttpDeamonHandleRequest::ParseMethod(char*)+0xbc>)
 800ace6:	f00d f847 	bl	8017d78 <strtok>
 800acea:	b168      	cbz	r0, 800ad08 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800acec:	7803      	ldrb	r3, [r0, #0]
 800acee:	2b31      	cmp	r3, #49	@ 0x31
 800acf0:	d11d      	bne.n	800ad2e <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800acf2:	4a15      	ldr	r2, [pc, #84]	@ (800ad48 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc0>)
 800acf4:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800acf8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800acfc:	428b      	cmp	r3, r1
 800acfe:	d116      	bne.n	800ad2e <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800ad00:	2b00      	cmp	r3, #0
 800ad02:	d1f7      	bne.n	800acf4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x6c>
 800ad04:	20c8      	movs	r0, #200	@ 0xc8
 800ad06:	bd10      	pop	{r4, pc}
 800ad08:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ad0c:	bd10      	pop	{r4, pc}
 800ad0e:	f240 10f5 	movw	r0, #501	@ 0x1f5
 800ad12:	bd10      	pop	{r4, pc}
 800ad14:	2b50      	cmp	r3, #80	@ 0x50
 800ad16:	d1fa      	bne.n	800ad0e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ad18:	4a0c      	ldr	r2, [pc, #48]	@ (800ad4c <HttpDeamonHandleRequest::ParseMethod(char*)+0xc4>)
 800ad1a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ad1e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ad22:	428b      	cmp	r3, r1
 800ad24:	d1f3      	bne.n	800ad0e <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d1f7      	bne.n	800ad1a <HttpDeamonHandleRequest::ParseMethod(char*)+0x92>
 800ad2a:	2301      	movs	r3, #1
 800ad2c:	e7c1      	b.n	800acb2 <HttpDeamonHandleRequest::ParseMethod(char*)+0x2a>
 800ad2e:	f240 10f9 	movw	r0, #505	@ 0x1f9
 800ad32:	bd10      	pop	{r4, pc}
 800ad34:	08019650 	stmdaeq	r1, {r4, r6, r9, sl, ip, pc}
 800ad38:	08019654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip, pc}
 800ad3c:	08019660 	stmdaeq	r1, {r5, r6, r9, sl, ip, pc}
 800ad40:	08019664 	stmdaeq	r1, {r2, r5, r6, r9, sl, ip, pc}
 800ad44:	0801966c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, ip, pc}
 800ad48:	08019670 	stmdaeq	r1, {r4, r5, r6, r9, sl, ip, pc}
 800ad4c:	08019658 	stmdaeq	r1, {r3, r4, r6, r9, sl, ip, pc}

0800ad50 <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
 800ad50:	b538      	push	{r3, r4, r5, lr}
 800ad52:	460b      	mov	r3, r1
 800ad54:	4605      	mov	r5, r0
 800ad56:	493f      	ldr	r1, [pc, #252]	@ (800ae54 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>)
 800ad58:	4618      	mov	r0, r3
 800ad5a:	f00d f80d 	bl	8017d78 <strtok>
 800ad5e:	b370      	cbz	r0, 800adbe <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ad60:	1e41      	subs	r1, r0, #1
 800ad62:	4c3d      	ldr	r4, [pc, #244]	@ (800ae58 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x108>)
 800ad64:	468c      	mov	ip, r1
 800ad66:	e000      	b.n	800ad6a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a>
 800ad68:	b360      	cbz	r0, 800adc4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x74>
 800ad6a:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 800ad6e:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800ad72:	2b19      	cmp	r3, #25
 800ad74:	f814 3b01 	ldrb.w	r3, [r4], #1
 800ad78:	f1a3 0e41 	sub.w	lr, r3, #65	@ 0x41
 800ad7c:	4602      	mov	r2, r0
 800ad7e:	bf98      	it	ls
 800ad80:	f100 0220 	addls.w	r2, r0, #32
 800ad84:	f1be 0f19 	cmp.w	lr, #25
 800ad88:	bf98      	it	ls
 800ad8a:	3320      	addls	r3, #32
 800ad8c:	4293      	cmp	r3, r2
 800ad8e:	d0eb      	beq.n	800ad68 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18>
 800ad90:	4832      	ldr	r0, [pc, #200]	@ (800ae5c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>)
 800ad92:	e000      	b.n	800ad96 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x46>
 800ad94:	b34c      	cbz	r4, 800adea <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x9a>
 800ad96:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ad9a:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
 800ad9e:	2b19      	cmp	r3, #25
 800ada0:	f810 3b01 	ldrb.w	r3, [r0], #1
 800ada4:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800ada8:	4622      	mov	r2, r4
 800adaa:	bf98      	it	ls
 800adac:	f104 0220 	addls.w	r2, r4, #32
 800adb0:	f1bc 0f19 	cmp.w	ip, #25
 800adb4:	bf98      	it	ls
 800adb6:	3320      	addls	r3, #32
 800adb8:	4293      	cmp	r3, r2
 800adba:	d0eb      	beq.n	800ad94 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x44>
 800adbc:	e03a      	b.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800adbe:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800adc2:	bd38      	pop	{r3, r4, r5, pc}
 800adc4:	4926      	ldr	r1, [pc, #152]	@ (800ae60 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x110>)
 800adc6:	f00c ffd7 	bl	8017d78 <strtok>
 800adca:	2800      	cmp	r0, #0
 800adcc:	d0f7      	beq.n	800adbe <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800adce:	4a25      	ldr	r2, [pc, #148]	@ (800ae64 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x114>)
 800add0:	1e43      	subs	r3, r0, #1
 800add2:	f100 0c0b 	add.w	ip, r0, #11
 800add6:	e001      	b.n	800addc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
 800add8:	459c      	cmp	ip, r3
 800adda:	d019      	beq.n	800ae10 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xc0>
 800addc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ade0:	f812 4b01 	ldrb.w	r4, [r2], #1
 800ade4:	428c      	cmp	r4, r1
 800ade6:	d0f7      	beq.n	800add8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x88>
 800ade8:	e024      	b.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800adea:	491f      	ldr	r1, [pc, #124]	@ (800ae68 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x118>)
 800adec:	4620      	mov	r0, r4
 800adee:	f00c ffc3 	bl	8017d78 <strtok>
 800adf2:	2800      	cmp	r0, #0
 800adf4:	d0e3      	beq.n	800adbe <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800adf6:	7803      	ldrb	r3, [r0, #0]
 800adf8:	b1db      	cbz	r3, 800ae32 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe2>
 800adfa:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 800adfe:	2a09      	cmp	r2, #9
 800ae00:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800ae04:	d8db      	bhi.n	800adbe <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ae06:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ae0a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ae0e:	e7f3      	b.n	800adf8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xa8>
 800ae10:	7b02      	ldrb	r2, [r0, #12]
 800ae12:	2a6a      	cmp	r2, #106	@ 0x6a
 800ae14:	f100 030c 	add.w	r3, r0, #12
 800ae18:	d10e      	bne.n	800ae38 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
 800ae1a:	4914      	ldr	r1, [pc, #80]	@ (800ae6c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x11c>)
 800ae1c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ae20:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ae24:	4282      	cmp	r2, r0
 800ae26:	d105      	bne.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ae28:	2a00      	cmp	r2, #0
 800ae2a:	d1f7      	bne.n	800ae1c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xcc>
 800ae2c:	2303      	movs	r3, #3
 800ae2e:	632b      	str	r3, [r5, #48]	@ 0x30
 800ae30:	e000      	b.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ae32:	612c      	str	r4, [r5, #16]
 800ae34:	20c8      	movs	r0, #200	@ 0xc8
 800ae36:	bd38      	pop	{r3, r4, r5, pc}
 800ae38:	2a6f      	cmp	r2, #111	@ 0x6f
 800ae3a:	d1fb      	bne.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ae3c:	490c      	ldr	r1, [pc, #48]	@ (800ae70 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x120>)
 800ae3e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ae42:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ae46:	4282      	cmp	r2, r0
 800ae48:	d1f4      	bne.n	800ae34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ae4a:	2a00      	cmp	r2, #0
 800ae4c:	d1f7      	bne.n	800ae3e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xee>
 800ae4e:	2304      	movs	r3, #4
 800ae50:	e7ed      	b.n	800ae2e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xde>
 800ae52:	bf00      	nop
 800ae54:	08019674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, ip, pc}
 800ae58:	08019678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, ip, pc}
 800ae5c:	08019688 	stmdaeq	r1, {r3, r7, r9, sl, ip, pc}
 800ae60:	080196c0 	stmdaeq	r1, {r6, r7, r9, sl, ip, pc}
 800ae64:	08019698 	stmdaeq	r1, {r3, r4, r7, r9, sl, ip, pc}
 800ae68:	08019650 	stmdaeq	r1, {r4, r6, r9, sl, ip, pc}
 800ae6c:	080196a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, ip, pc}
 800ae70:	080196b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, ip, pc}

0800ae74 <HttpDeamonHandleRequest::ParseRequest()>:
 800ae74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ae76:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ae78:	4605      	mov	r5, r0
 800ae7a:	6940      	ldr	r0, [r0, #20]
 800ae7c:	2400      	movs	r4, #0
 800ae7e:	2205      	movs	r2, #5
 800ae80:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800ae84:	632a      	str	r2, [r5, #48]	@ 0x30
 800ae86:	b300      	cbz	r0, 800aeca <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ae88:	4619      	mov	r1, r3
 800ae8a:	46a4      	mov	ip, r4
 800ae8c:	4626      	mov	r6, r4
 800ae8e:	e002      	b.n	800ae96 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800ae90:	3401      	adds	r4, #1
 800ae92:	42a0      	cmp	r0, r4
 800ae94:	d919      	bls.n	800aeca <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ae96:	5d1a      	ldrb	r2, [r3, r4]
 800ae98:	2a0a      	cmp	r2, #10
 800ae9a:	d1f9      	bne.n	800ae90 <HttpDeamonHandleRequest::ParseRequest()+0x1c>
 800ae9c:	4423      	add	r3, r4
 800ae9e:	f10c 0701 	add.w	r7, ip, #1
 800aea2:	f803 6c01 	strb.w	r6, [r3, #-1]
 800aea6:	f1bc 0f00 	cmp.w	ip, #0
 800aeaa:	d010      	beq.n	800aece <HttpDeamonHandleRequest::ParseRequest()+0x5a>
 800aeac:	780b      	ldrb	r3, [r1, #0]
 800aeae:	b193      	cbz	r3, 800aed6 <HttpDeamonHandleRequest::ParseRequest()+0x62>
 800aeb0:	4628      	mov	r0, r5
 800aeb2:	f7ff ff4d 	bl	800ad50 <HttpDeamonHandleRequest::ParseHeaderField(char*)>
 800aeb6:	28c8      	cmp	r0, #200	@ 0xc8
 800aeb8:	d108      	bne.n	800aecc <HttpDeamonHandleRequest::ParseRequest()+0x58>
 800aeba:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800aebc:	6968      	ldr	r0, [r5, #20]
 800aebe:	3401      	adds	r4, #1
 800aec0:	1919      	adds	r1, r3, r4
 800aec2:	3401      	adds	r4, #1
 800aec4:	42a0      	cmp	r0, r4
 800aec6:	46bc      	mov	ip, r7
 800aec8:	d8e5      	bhi.n	800ae96 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800aeca:	20c8      	movs	r0, #200	@ 0xc8
 800aecc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aece:	4628      	mov	r0, r5
 800aed0:	f7ff feda 	bl	800ac88 <HttpDeamonHandleRequest::ParseMethod(char*)>
 800aed4:	e7ef      	b.n	800aeb6 <HttpDeamonHandleRequest::ParseRequest()+0x42>
 800aed6:	696a      	ldr	r2, [r5, #20]
 800aed8:	3a01      	subs	r2, #1
 800aeda:	1b12      	subs	r2, r2, r4
 800aedc:	b292      	uxth	r2, r2
 800aede:	60ea      	str	r2, [r5, #12]
 800aee0:	2a00      	cmp	r2, #0
 800aee2:	d0f2      	beq.n	800aeca <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800aee4:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800aee6:	3401      	adds	r4, #1
 800aee8:	4421      	add	r1, r4
 800aeea:	61e9      	str	r1, [r5, #28]
 800aeec:	548b      	strb	r3, [r1, r2]
 800aeee:	e7ec      	b.n	800aeca <HttpDeamonHandleRequest::ParseRequest()+0x56>

0800aef0 <HttpDeamonHandleRequest::HandleGetTxt()>:
 800aef0:	b570      	push	{r4, r5, r6, lr}
 800aef2:	4605      	mov	r5, r0
 800aef4:	6980      	ldr	r0, [r0, #24]
 800aef6:	7983      	ldrb	r3, [r0, #6]
 800aef8:	2b00      	cmp	r3, #0
 800aefa:	d039      	beq.n	800af70 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800aefc:	1d84      	adds	r4, r0, #6
 800aefe:	4623      	mov	r3, r4
 800af00:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800af04:	2a00      	cmp	r2, #0
 800af06:	d1fb      	bne.n	800af00 <HttpDeamonHandleRequest::HandleGetTxt()+0x10>
 800af08:	1b1a      	subs	r2, r3, r4
 800af0a:	2a04      	cmp	r2, #4
 800af0c:	d930      	bls.n	800af70 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800af0e:	1f13      	subs	r3, r2, #4
 800af10:	18e1      	adds	r1, r4, r3
 800af12:	5ce3      	ldrb	r3, [r4, r3]
 800af14:	2b2e      	cmp	r3, #46	@ 0x2e
 800af16:	d12b      	bne.n	800af70 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800af18:	4c18      	ldr	r4, [pc, #96]	@ (800af7c <HttpDeamonHandleRequest::HandleGetTxt()+0x8c>)
 800af1a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800af1e:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800af22:	4563      	cmp	r3, ip
 800af24:	d124      	bne.n	800af70 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800af26:	2b00      	cmp	r3, #0
 800af28:	d1f7      	bne.n	800af1a <HttpDeamonHandleRequest::HandleGetTxt()+0x2a>
 800af2a:	4c15      	ldr	r4, [pc, #84]	@ (800af80 <HttpDeamonHandleRequest::HandleGetTxt()+0x90>)
 800af2c:	7821      	ldrb	r1, [r4, #0]
 800af2e:	f041 0601 	orr.w	r6, r1, #1
 800af32:	1d43      	adds	r3, r0, #5
 800af34:	7026      	strb	r6, [r4, #0]
 800af36:	4813      	ldr	r0, [pc, #76]	@ (800af84 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800af38:	f001 0601 	and.w	r6, r1, #1
 800af3c:	e003      	b.n	800af46 <HttpDeamonHandleRequest::HandleGetTxt()+0x56>
 800af3e:	3a01      	subs	r2, #1
 800af40:	f800 1b01 	strb.w	r1, [r0], #1
 800af44:	d005      	beq.n	800af52 <HttpDeamonHandleRequest::HandleGetTxt()+0x62>
 800af46:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800af4a:	2900      	cmp	r1, #0
 800af4c:	d1f7      	bne.n	800af3e <HttpDeamonHandleRequest::HandleGetTxt()+0x4e>
 800af4e:	f00c fbc1 	bl	80176d4 <memset>
 800af52:	4b0d      	ldr	r3, [pc, #52]	@ (800af88 <HttpDeamonHandleRequest::HandleGetTxt()+0x98>)
 800af54:	490b      	ldr	r1, [pc, #44]	@ (800af84 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800af56:	6818      	ldr	r0, [r3, #0]
 800af58:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800af5c:	f7ff fa92 	bl	800a484 <RemoteConfig::HandleGet(void*, unsigned long)>
 800af60:	7823      	ldrb	r3, [r4, #0]
 800af62:	60a8      	str	r0, [r5, #8]
 800af64:	b93e      	cbnz	r6, 800af76 <HttpDeamonHandleRequest::HandleGetTxt()+0x86>
 800af66:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800af6a:	7023      	strb	r3, [r4, #0]
 800af6c:	20c8      	movs	r0, #200	@ 0xc8
 800af6e:	bd70      	pop	{r4, r5, r6, pc}
 800af70:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800af74:	bd70      	pop	{r4, r5, r6, pc}
 800af76:	f043 0301 	orr.w	r3, r3, #1
 800af7a:	e7f6      	b.n	800af6a <HttpDeamonHandleRequest::HandleGetTxt()+0x7a>
 800af7c:	080196c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, pc}
 800af80:	2000ccd1 	ldrdcs	ip, [r0], -r1
 800af84:	200000a8 	andcs	r0, r0, r8, lsr #1
 800af88:	200000a4 	andcs	r0, r0, r4, lsr #1

0800af8c <HttpDeamonHandleRequest::HandleGet()>:
 800af8c:	b510      	push	{r4, lr}
 800af8e:	4604      	mov	r4, r0
 800af90:	b082      	sub	sp, #8
 800af92:	6980      	ldr	r0, [r0, #24]
 800af94:	4b68      	ldr	r3, [pc, #416]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800af96:	6223      	str	r3, [r4, #32]
 800af98:	2100      	movs	r1, #0
 800af9a:	4a68      	ldr	r2, [pc, #416]	@ (800b13c <HttpDeamonHandleRequest::HandleGet()+0x1b0>)
 800af9c:	9101      	str	r1, [sp, #4]
 800af9e:	1e43      	subs	r3, r0, #1
 800afa0:	f100 0e05 	add.w	lr, r0, #5
 800afa4:	e001      	b.n	800afaa <HttpDeamonHandleRequest::HandleGet()+0x1e>
 800afa6:	459e      	cmp	lr, r3
 800afa8:	d01f      	beq.n	800afea <HttpDeamonHandleRequest::HandleGet()+0x5e>
 800afaa:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800afae:	f812 1b01 	ldrb.w	r1, [r2], #1
 800afb2:	458c      	cmp	ip, r1
 800afb4:	d0f7      	beq.n	800afa6 <HttpDeamonHandleRequest::HandleGet()+0x1a>
 800afb6:	7803      	ldrb	r3, [r0, #0]
 800afb8:	2b2f      	cmp	r3, #47	@ 0x2f
 800afba:	d167      	bne.n	800b08c <HttpDeamonHandleRequest::HandleGet()+0x100>
 800afbc:	4a60      	ldr	r2, [pc, #384]	@ (800b140 <HttpDeamonHandleRequest::HandleGet()+0x1b4>)
 800afbe:	4601      	mov	r1, r0
 800afc0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800afc4:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800afc8:	4563      	cmp	r3, ip
 800afca:	d13c      	bne.n	800b046 <HttpDeamonHandleRequest::HandleGet()+0xba>
 800afcc:	2b00      	cmp	r3, #0
 800afce:	d1f7      	bne.n	800afc0 <HttpDeamonHandleRequest::HandleGet()+0x34>
 800afd0:	485c      	ldr	r0, [pc, #368]	@ (800b144 <HttpDeamonHandleRequest::HandleGet()+0x1b8>)
 800afd2:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800afd6:	a901      	add	r1, sp, #4
 800afd8:	f000 fac6 	bl	800b568 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
 800afdc:	9b01      	ldr	r3, [sp, #4]
 800afde:	6220      	str	r0, [r4, #32]
 800afe0:	b36b      	cbz	r3, 800b03e <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800afe2:	60a3      	str	r3, [r4, #8]
 800afe4:	20c8      	movs	r0, #200	@ 0xc8
 800afe6:	b002      	add	sp, #8
 800afe8:	bd10      	pop	{r4, pc}
 800afea:	2303      	movs	r3, #3
 800afec:	6323      	str	r3, [r4, #48]	@ 0x30
 800afee:	7982      	ldrb	r2, [r0, #6]
 800aff0:	1dc1      	adds	r1, r0, #7
 800aff2:	2a00      	cmp	r2, #0
 800aff4:	d03a      	beq.n	800b06c <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800aff6:	f241 5305 	movw	r3, #5381	@ 0x1505
 800affa:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800affe:	fa12 f383 	uxtah	r3, r2, r3
 800b002:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b006:	b29b      	uxth	r3, r3
 800b008:	2a00      	cmp	r2, #0
 800b00a:	d1f6      	bne.n	800affa <HttpDeamonHandleRequest::HandleGet()+0x6e>
 800b00c:	f244 729b 	movw	r2, #18331	@ 0x479b
 800b010:	4293      	cmp	r3, r2
 800b012:	d05a      	beq.n	800b0ca <HttpDeamonHandleRequest::HandleGet()+0x13e>
 800b014:	d83f      	bhi.n	800b096 <HttpDeamonHandleRequest::HandleGet()+0x10a>
 800b016:	f241 6261 	movw	r2, #5729	@ 0x1661
 800b01a:	4293      	cmp	r3, r2
 800b01c:	d01f      	beq.n	800b05e <HttpDeamonHandleRequest::HandleGet()+0xd2>
 800b01e:	f242 4272 	movw	r2, #9330	@ 0x2472
 800b022:	4293      	cmp	r3, r2
 800b024:	d04a      	beq.n	800b0bc <HttpDeamonHandleRequest::HandleGet()+0x130>
 800b026:	f241 12fa 	movw	r2, #4602	@ 0x11fa
 800b02a:	4293      	cmp	r3, r2
 800b02c:	d11e      	bne.n	800b06c <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800b02e:	4842      	ldr	r0, [pc, #264]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b030:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b034:	f000 fa92 	bl	800b55c <remoteconfig::json_get_directory(char*, unsigned long)>
 800b038:	4603      	mov	r3, r0
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d1d1      	bne.n	800afe2 <HttpDeamonHandleRequest::HandleGet()+0x56>
 800b03e:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800b042:	b002      	add	sp, #8
 800b044:	bd10      	pop	{r4, pc}
 800b046:	4a40      	ldr	r2, [pc, #256]	@ (800b148 <HttpDeamonHandleRequest::HandleGet()+0x1bc>)
 800b048:	4601      	mov	r1, r0
 800b04a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b04e:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800b052:	4563      	cmp	r3, ip
 800b054:	d11a      	bne.n	800b08c <HttpDeamonHandleRequest::HandleGet()+0x100>
 800b056:	2b00      	cmp	r3, #0
 800b058:	d1f7      	bne.n	800b04a <HttpDeamonHandleRequest::HandleGet()+0xbe>
 800b05a:	483c      	ldr	r0, [pc, #240]	@ (800b14c <HttpDeamonHandleRequest::HandleGet()+0x1c0>)
 800b05c:	e7b9      	b.n	800afd2 <HttpDeamonHandleRequest::HandleGet()+0x46>
 800b05e:	4836      	ldr	r0, [pc, #216]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b060:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b064:	f000 fa16 	bl	800b494 <remoteconfig::json_get_list(char*, unsigned long)>
 800b068:	4603      	mov	r3, r0
 800b06a:	e7e6      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b06c:	4b38      	ldr	r3, [pc, #224]	@ (800b150 <HttpDeamonHandleRequest::HandleGet()+0x1c4>)
 800b06e:	f100 0c0b 	add.w	ip, r0, #11
 800b072:	e001      	b.n	800b078 <HttpDeamonHandleRequest::HandleGet()+0xec>
 800b074:	45f4      	cmp	ip, lr
 800b076:	d039      	beq.n	800b0ec <HttpDeamonHandleRequest::HandleGet()+0x160>
 800b078:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 800b07c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b080:	4291      	cmp	r1, r2
 800b082:	d0f7      	beq.n	800b074 <HttpDeamonHandleRequest::HandleGet()+0xe8>
 800b084:	4620      	mov	r0, r4
 800b086:	f7ff ff33 	bl	800aef0 <HttpDeamonHandleRequest::HandleGetTxt()>
 800b08a:	e7ac      	b.n	800afe6 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800b08c:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800b090:	a901      	add	r1, sp, #4
 800b092:	3001      	adds	r0, #1
 800b094:	e7a0      	b.n	800afd8 <HttpDeamonHandleRequest::HandleGet()+0x4c>
 800b096:	f646 424b 	movw	r2, #27723	@ 0x6c4b
 800b09a:	4293      	cmp	r3, r2
 800b09c:	d01c      	beq.n	800b0d8 <HttpDeamonHandleRequest::HandleGet()+0x14c>
 800b09e:	f24b 72d9 	movw	r2, #47065	@ 0xb7d9
 800b0a2:	4293      	cmp	r3, r2
 800b0a4:	d1e2      	bne.n	800b06c <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800b0a6:	4b2b      	ldr	r3, [pc, #172]	@ (800b154 <HttpDeamonHandleRequest::HandleGet()+0x1c8>)
 800b0a8:	681b      	ldr	r3, [r3, #0]
 800b0aa:	7bdb      	ldrb	r3, [r3, #15]
 800b0ac:	b1db      	cbz	r3, 800b0e6 <HttpDeamonHandleRequest::HandleGet()+0x15a>
 800b0ae:	4822      	ldr	r0, [pc, #136]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b0b0:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0b4:	f000 fa3c 	bl	800b530 <remoteconfig::json_get_uptime(char*, unsigned long)>
 800b0b8:	4603      	mov	r3, r0
 800b0ba:	e7be      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b0bc:	481e      	ldr	r0, [pc, #120]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b0be:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0c2:	f00a f8d3 	bl	801526c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
 800b0c6:	4603      	mov	r3, r0
 800b0c8:	e7b7      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b0ca:	481b      	ldr	r0, [pc, #108]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b0cc:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0d0:	f000 fa38 	bl	800b544 <remoteconfig::json_get_display(char*, unsigned long)>
 800b0d4:	4603      	mov	r3, r0
 800b0d6:	e7b0      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b0d8:	4817      	ldr	r0, [pc, #92]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b0da:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0de:	f000 fa0b 	bl	800b4f8 <remoteconfig::json_get_version(char*, unsigned long)>
 800b0e2:	4603      	mov	r3, r0
 800b0e4:	e7a9      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b0e6:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800b0ea:	e77c      	b.n	800afe6 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800b0ec:	7b02      	ldrb	r2, [r0, #12]
 800b0ee:	f241 5305 	movw	r3, #5381	@ 0x1505
 800b0f2:	300d      	adds	r0, #13
 800b0f4:	2a00      	cmp	r2, #0
 800b0f6:	d0a2      	beq.n	800b03e <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800b0f8:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800b0fc:	fa12 f383 	uxtah	r3, r2, r3
 800b100:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b104:	b29b      	uxth	r3, r3
 800b106:	2a00      	cmp	r2, #0
 800b108:	d1f6      	bne.n	800b0f8 <HttpDeamonHandleRequest::HandleGet()+0x16c>
 800b10a:	f645 625a 	movw	r2, #24154	@ 0x5e5a
 800b10e:	4293      	cmp	r3, r2
 800b110:	d00a      	beq.n	800b128 <HttpDeamonHandleRequest::HandleGet()+0x19c>
 800b112:	f648 5249 	movw	r2, #36169	@ 0x8d49
 800b116:	4293      	cmp	r3, r2
 800b118:	d191      	bne.n	800b03e <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800b11a:	4807      	ldr	r0, [pc, #28]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b11c:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b120:	f003 fc0e 	bl	800e940 <remoteconfig::pixel::json_get_status(char*, unsigned long)>
 800b124:	4603      	mov	r3, r0
 800b126:	e788      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b128:	4803      	ldr	r0, [pc, #12]	@ (800b138 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b12a:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b12e:	f003 fca5 	bl	800ea7c <remoteconfig::pixel::json_get_types(char*, unsigned long)>
 800b132:	4603      	mov	r3, r0
 800b134:	e781      	b.n	800b03a <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b136:	bf00      	nop
 800b138:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b13c:	080196cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, pc}
 800b140:	08019660 	stmdaeq	r1, {r5, r6, r9, sl, ip, pc}
 800b144:	080196dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, ip, pc}
 800b148:	080196e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, ip, pc}
 800b14c:	080196f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, ip, pc}
 800b150:	080196d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, ip, pc}
 800b154:	200000a4 	andcs	r0, r0, r4, lsr #1

0800b158 <HttpDeamonHandleRequest::HandlePost(bool)>:
 800b158:	b570      	push	{r4, r5, r6, lr}
 800b15a:	4604      	mov	r4, r0
 800b15c:	b082      	sub	sp, #8
 800b15e:	b331      	cbz	r1, 800b1ae <HttpDeamonHandleRequest::HandlePost(bool)+0x56>
 800b160:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800b162:	8aa1      	ldrh	r1, [r4, #20]
 800b164:	61e0      	str	r0, [r4, #28]
 800b166:	60e1      	str	r1, [r4, #12]
 800b168:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
 800b16c:	2b00      	cmp	r3, #0
 800b16e:	d13c      	bne.n	800b1ea <HttpDeamonHandleRequest::HandlePost(bool)+0x92>
 800b170:	4d5e      	ldr	r5, [pc, #376]	@ (800b2ec <HttpDeamonHandleRequest::HandlePost(bool)+0x194>)
 800b172:	4b5f      	ldr	r3, [pc, #380]	@ (800b2f0 <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800b174:	782e      	ldrb	r6, [r5, #0]
 800b176:	460a      	mov	r2, r1
 800b178:	4601      	mov	r1, r0
 800b17a:	6818      	ldr	r0, [r3, #0]
 800b17c:	f046 0301 	orr.w	r3, r6, #1
 800b180:	702b      	strb	r3, [r5, #0]
 800b182:	f7ff fa3f 	bl	800a604 <RemoteConfig::HandleSet(void*, unsigned long)>
 800b186:	782b      	ldrb	r3, [r5, #0]
 800b188:	07f2      	lsls	r2, r6, #31
 800b18a:	bf4c      	ite	mi
 800b18c:	f043 0301 	orrmi.w	r3, r3, #1
 800b190:	f023 0301 	bicpl.w	r3, r3, #1
 800b194:	702b      	strb	r3, [r5, #0]
 800b196:	2300      	movs	r3, #0
 800b198:	4a56      	ldr	r2, [pc, #344]	@ (800b2f4 <HttpDeamonHandleRequest::HandlePost(bool)+0x19c>)
 800b19a:	4857      	ldr	r0, [pc, #348]	@ (800b2f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a0>)
 800b19c:	6323      	str	r3, [r4, #48]	@ 0x30
 800b19e:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b1a2:	f00c fda3 	bl	8017cec <snprintf>
 800b1a6:	60a0      	str	r0, [r4, #8]
 800b1a8:	20c8      	movs	r0, #200	@ 0xc8
 800b1aa:	b002      	add	sp, #8
 800b1ac:	bd70      	pop	{r4, r5, r6, pc}
 800b1ae:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800b1b0:	2b03      	cmp	r3, #3
 800b1b2:	d134      	bne.n	800b21e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b1b4:	6985      	ldr	r5, [r0, #24]
 800b1b6:	782b      	ldrb	r3, [r5, #0]
 800b1b8:	2b2f      	cmp	r3, #47	@ 0x2f
 800b1ba:	f040 808c 	bne.w	800b2d6 <HttpDeamonHandleRequest::HandlePost(bool)+0x17e>
 800b1be:	4a4f      	ldr	r2, [pc, #316]	@ (800b2fc <HttpDeamonHandleRequest::HandlePost(bool)+0x1a4>)
 800b1c0:	4629      	mov	r1, r5
 800b1c2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b1c6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1ca:	4283      	cmp	r3, r0
 800b1cc:	d12b      	bne.n	800b226 <HttpDeamonHandleRequest::HandlePost(bool)+0xce>
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d1f7      	bne.n	800b1c2 <HttpDeamonHandleRequest::HandlePost(bool)+0x6a>
 800b1d2:	2301      	movs	r3, #1
 800b1d4:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b1d8:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800b1dc:	429a      	cmp	r2, r3
 800b1de:	d3e3      	bcc.n	800b1a8 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b1e0:	68e1      	ldr	r1, [r4, #12]
 800b1e2:	2900      	cmp	r1, #0
 800b1e4:	d0e0      	beq.n	800b1a8 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b1e6:	69e0      	ldr	r0, [r4, #28]
 800b1e8:	e7be      	b.n	800b168 <HttpDeamonHandleRequest::HandlePost(bool)+0x10>
 800b1ea:	2201      	movs	r2, #1
 800b1ec:	f009 f974 	bl	80144d8 <properties::convert_json_file(char*, unsigned long, bool)>
 800b1f0:	1e05      	subs	r5, r0, #0
 800b1f2:	dd14      	ble.n	800b21e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b1f4:	69e3      	ldr	r3, [r4, #28]
 800b1f6:	4942      	ldr	r1, [pc, #264]	@ (800b300 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a8>)
 800b1f8:	442b      	add	r3, r5
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b200:	69e0      	ldr	r0, [r4, #28]
 800b202:	f10d 0207 	add.w	r2, sp, #7
 800b206:	f009 fc13 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b20a:	bb20      	cbnz	r0, 800b256 <HttpDeamonHandleRequest::HandlePost(bool)+0xfe>
 800b20c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b210:	2b00      	cmp	r3, #0
 800b212:	d0c0      	beq.n	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b214:	4b36      	ldr	r3, [pc, #216]	@ (800b2f0 <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800b216:	6818      	ldr	r0, [r3, #0]
 800b218:	7b83      	ldrb	r3, [r0, #14]
 800b21a:	2b00      	cmp	r3, #0
 800b21c:	d164      	bne.n	800b2e8 <HttpDeamonHandleRequest::HandlePost(bool)+0x190>
 800b21e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800b222:	b002      	add	sp, #8
 800b224:	bd70      	pop	{r4, r5, r6, pc}
 800b226:	1a1b      	subs	r3, r3, r0
 800b228:	2b00      	cmp	r3, #0
 800b22a:	bf0c      	ite	eq
 800b22c:	2301      	moveq	r3, #1
 800b22e:	2300      	movne	r3, #0
 800b230:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b234:	d0d0      	beq.n	800b1d8 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b236:	782b      	ldrb	r3, [r5, #0]
 800b238:	2b2f      	cmp	r3, #47	@ 0x2f
 800b23a:	d109      	bne.n	800b250 <HttpDeamonHandleRequest::HandlePost(bool)+0xf8>
 800b23c:	4a31      	ldr	r2, [pc, #196]	@ (800b304 <HttpDeamonHandleRequest::HandlePost(bool)+0x1ac>)
 800b23e:	e001      	b.n	800b244 <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
 800b240:	2b00      	cmp	r3, #0
 800b242:	d0c9      	beq.n	800b1d8 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b244:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800b248:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b24c:	428b      	cmp	r3, r1
 800b24e:	d0f7      	beq.n	800b240 <HttpDeamonHandleRequest::HandlePost(bool)+0xe8>
 800b250:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800b254:	e7a9      	b.n	800b1aa <HttpDeamonHandleRequest::HandlePost(bool)+0x52>
 800b256:	492c      	ldr	r1, [pc, #176]	@ (800b308 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b0>)
 800b258:	69e0      	ldr	r0, [r4, #28]
 800b25a:	f10d 0207 	add.w	r2, sp, #7
 800b25e:	f009 fbe7 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b262:	b178      	cbz	r0, 800b284 <HttpDeamonHandleRequest::HandlePost(bool)+0x12c>
 800b264:	4929      	ldr	r1, [pc, #164]	@ (800b30c <HttpDeamonHandleRequest::HandlePost(bool)+0x1b4>)
 800b266:	69e0      	ldr	r0, [r4, #28]
 800b268:	f10d 0207 	add.w	r2, sp, #7
 800b26c:	f009 fbe0 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b270:	bb10      	cbnz	r0, 800b2b8 <HttpDeamonHandleRequest::HandlePost(bool)+0x160>
 800b272:	4a27      	ldr	r2, [pc, #156]	@ (800b310 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b8>)
 800b274:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b278:	6810      	ldr	r0, [r2, #0]
 800b27a:	b37b      	cbz	r3, 800b2dc <HttpDeamonHandleRequest::HandlePost(bool)+0x184>
 800b27c:	2104      	movs	r1, #4
 800b27e:	f009 ffb7 	bl	80151f0 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b282:	e788      	b.n	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b284:	4b23      	ldr	r3, [pc, #140]	@ (800b314 <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800b286:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b28a:	681d      	ldr	r5, [r3, #0]
 800b28c:	69a8      	ldr	r0, [r5, #24]
 800b28e:	fab6 f186 	clz	r1, r6
 800b292:	0949      	lsrs	r1, r1, #5
 800b294:	2800      	cmp	r0, #0
 800b296:	f43f af7e 	beq.w	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b29a:	6803      	ldr	r3, [r0, #0]
 800b29c:	4a1e      	ldr	r2, [pc, #120]	@ (800b318 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800b29e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2a0:	7569      	strb	r1, [r5, #21]
 800b2a2:	4293      	cmp	r3, r2
 800b2a4:	d106      	bne.n	800b2b4 <HttpDeamonHandleRequest::HandlePost(bool)+0x15c>
 800b2a6:	2e00      	cmp	r6, #0
 800b2a8:	f43f af75 	beq.w	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b2ac:	4b1b      	ldr	r3, [pc, #108]	@ (800b31c <HttpDeamonHandleRequest::HandlePost(bool)+0x1c4>)
 800b2ae:	681b      	ldr	r3, [r3, #0]
 800b2b0:	606b      	str	r3, [r5, #4]
 800b2b2:	e770      	b.n	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b2b4:	4798      	blx	r3
 800b2b6:	e7f6      	b.n	800b2a6 <HttpDeamonHandleRequest::HandlePost(bool)+0x14e>
 800b2b8:	69e0      	ldr	r0, [r4, #28]
 800b2ba:	4a19      	ldr	r2, [pc, #100]	@ (800b320 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>)
 800b2bc:	1e43      	subs	r3, r0, #1
 800b2be:	f100 0c04 	add.w	ip, r0, #4
 800b2c2:	e001      	b.n	800b2c8 <HttpDeamonHandleRequest::HandlePost(bool)+0x170>
 800b2c4:	4563      	cmp	r3, ip
 800b2c6:	d00b      	beq.n	800b2e0 <HttpDeamonHandleRequest::HandlePost(bool)+0x188>
 800b2c8:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b2cc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b2d0:	428e      	cmp	r6, r1
 800b2d2:	d0f7      	beq.n	800b2c4 <HttpDeamonHandleRequest::HandlePost(bool)+0x16c>
 800b2d4:	e7a3      	b.n	800b21e <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b2d6:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800b2da:	e7ac      	b.n	800b236 <HttpDeamonHandleRequest::HandlePost(bool)+0xde>
 800b2dc:	2102      	movs	r1, #2
 800b2de:	e7ce      	b.n	800b27e <HttpDeamonHandleRequest::HandlePost(bool)+0x126>
 800b2e0:	4629      	mov	r1, r5
 800b2e2:	f00a f82d 	bl	8015340 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
 800b2e6:	e756      	b.n	800b196 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b2e8:	f7ff fc08 	bl	800aafc <RemoteConfig::HandleReboot()>
 800b2ec:	2000ccd1 	ldrdcs	ip, [r0], -r1
 800b2f0:	200000a4 	andcs	r0, r0, r4, lsr #1
 800b2f4:	08019738 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, ip, pc}
 800b2f8:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b2fc:	080196fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, ip, pc}
 800b300:	08019714 	stmdaeq	r1, {r2, r4, r8, r9, sl, ip, pc}
 800b304:	0801970c 	stmdaeq	r1, {r2, r3, r8, r9, sl, ip, pc}
 800b308:	0801971c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, ip, pc}
 800b30c:	08019724 	stmdaeq	r1, {r2, r5, r8, r9, sl, ip, pc}
 800b310:	2000cdc0 	andcs	ip, r0, r0, asr #27
 800b314:	2000ccd4 	ldrdcs	ip, [r0], -r4
 800b318:	0800ac85 	stmdaeq	r0, {r0, r2, r7, sl, fp, sp, pc}
 800b31c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 800b320:	08019730 	stmdaeq	r1, {r4, r5, r8, r9, sl, ip, pc}

0800b324 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
 800b324:	b570      	push	{r4, r5, r6, lr}
 800b326:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b328:	6141      	str	r1, [r0, #20]
 800b32a:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800b32e:	b084      	sub	sp, #16
 800b330:	4604      	mov	r4, r0
 800b332:	6242      	str	r2, [r0, #36]	@ 0x24
 800b334:	d05f      	beq.n	800b3f6 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xd2>
 800b336:	2bc8      	cmp	r3, #200	@ 0xc8
 800b338:	d055      	beq.n	800b3e6 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc2>
 800b33a:	f5b3 7fcf 	cmp.w	r3, #414	@ 0x19e
 800b33e:	dc10      	bgt.n	800b362 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x3e>
 800b340:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800b344:	db1c      	blt.n	800b380 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b346:	f5a3 72c8 	sub.w	r2, r3, #400	@ 0x190
 800b34a:	2a0e      	cmp	r2, #14
 800b34c:	d818      	bhi.n	800b380 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b34e:	e8df f002 	tbb	[pc, r2]
 800b352:	17171772 			@ <UNDEFINED> instruction: 0x17171772
 800b356:	17171770 			@ <UNDEFINED> instruction: 0x17171770
 800b35a:	17171717 			@ <UNDEFINED> instruction: 0x17171717
 800b35e:	00606217 	rsbeq	r6, r0, r7, lsl r2
 800b362:	f240 12f5 	movw	r2, #501	@ 0x1f5
 800b366:	4293      	cmp	r3, r2
 800b368:	d057      	beq.n	800b41a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xf6>
 800b36a:	f240 12f9 	movw	r2, #505	@ 0x1f9
 800b36e:	4293      	cmp	r3, r2
 800b370:	d04d      	beq.n	800b40e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xea>
 800b372:	4e3a      	ldr	r6, [pc, #232]	@ (800b45c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b374:	4a3a      	ldr	r2, [pc, #232]	@ (800b460 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x13c>)
 800b376:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b37a:	bf08      	it	eq
 800b37c:	4616      	moveq	r6, r2
 800b37e:	e000      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b380:	4e36      	ldr	r6, [pc, #216]	@ (800b45c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b382:	4838      	ldr	r0, [pc, #224]	@ (800b464 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>)
 800b384:	6220      	str	r0, [r4, #32]
 800b386:	2200      	movs	r2, #0
 800b388:	6322      	str	r2, [r4, #48]	@ 0x30
 800b38a:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b38e:	e9cd 6600 	strd	r6, r6, [sp]
 800b392:	4a35      	ldr	r2, [pc, #212]	@ (800b468 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x144>)
 800b394:	f00c fcaa 	bl	8017cec <snprintf>
 800b398:	e9d4 5309 	ldrd	r5, r3, [r4, #36]	@ 0x24
 800b39c:	60a0      	str	r0, [r4, #8]
 800b39e:	4933      	ldr	r1, [pc, #204]	@ (800b46c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>)
 800b3a0:	9003      	str	r0, [sp, #12]
 800b3a2:	9600      	str	r6, [sp, #0]
 800b3a4:	6809      	ldr	r1, [r1, #0]
 800b3a6:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800b3a8:	4a31      	ldr	r2, [pc, #196]	@ (800b470 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x14c>)
 800b3aa:	3116      	adds	r1, #22
 800b3ac:	9101      	str	r1, [sp, #4]
 800b3ae:	4931      	ldr	r1, [pc, #196]	@ (800b474 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x150>)
 800b3b0:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b3b4:	9102      	str	r1, [sp, #8]
 800b3b6:	4628      	mov	r0, r5
 800b3b8:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b3bc:	f00c fc96 	bl	8017cec <snprintf>
 800b3c0:	6823      	ldr	r3, [r4, #0]
 800b3c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b3c4:	4602      	mov	r2, r0
 800b3c6:	6860      	ldr	r0, [r4, #4]
 800b3c8:	f007 fa3e 	bl	8012848 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b3cc:	6823      	ldr	r3, [r4, #0]
 800b3ce:	68a2      	ldr	r2, [r4, #8]
 800b3d0:	6a21      	ldr	r1, [r4, #32]
 800b3d2:	6860      	ldr	r0, [r4, #4]
 800b3d4:	f007 fa38 	bl	8012848 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b3d8:	f44f 7202 	mov.w	r2, #520	@ 0x208
 800b3dc:	2303      	movs	r3, #3
 800b3de:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 800b3e2:	b004      	add	sp, #16
 800b3e4:	bd70      	pop	{r4, r5, r6, pc}
 800b3e6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b3e8:	2901      	cmp	r1, #1
 800b3ea:	4615      	mov	r5, r2
 800b3ec:	d017      	beq.n	800b41e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfa>
 800b3ee:	68a0      	ldr	r0, [r4, #8]
 800b3f0:	4e21      	ldr	r6, [pc, #132]	@ (800b478 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b3f2:	23c8      	movs	r3, #200	@ 0xc8
 800b3f4:	e7d3      	b.n	800b39e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b3f6:	f7ff fd3d 	bl	800ae74 <HttpDeamonHandleRequest::ParseRequest()>
 800b3fa:	28c8      	cmp	r0, #200	@ 0xc8
 800b3fc:	4603      	mov	r3, r0
 800b3fe:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b400:	d19b      	bne.n	800b33a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b402:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b404:	b1cb      	cbz	r3, 800b43a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x116>
 800b406:	2b01      	cmp	r3, #1
 800b408:	d01b      	beq.n	800b442 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x11e>
 800b40a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b40c:	e7ef      	b.n	800b3ee <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xca>
 800b40e:	4e1b      	ldr	r6, [pc, #108]	@ (800b47c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x158>)
 800b410:	e7b7      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b412:	4e1b      	ldr	r6, [pc, #108]	@ (800b480 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x15c>)
 800b414:	e7b5      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b416:	4e1b      	ldr	r6, [pc, #108]	@ (800b484 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x160>)
 800b418:	e7b3      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b41a:	4e1b      	ldr	r6, [pc, #108]	@ (800b488 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x164>)
 800b41c:	e7b1      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b41e:	f7ff fe9b 	bl	800b158 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b422:	28c8      	cmp	r0, #200	@ 0xc8
 800b424:	4603      	mov	r3, r0
 800b426:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b428:	d187      	bne.n	800b33a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b42a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b42c:	68a0      	ldr	r0, [r4, #8]
 800b42e:	4e12      	ldr	r6, [pc, #72]	@ (800b478 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b430:	e7b5      	b.n	800b39e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b432:	4e16      	ldr	r6, [pc, #88]	@ (800b48c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x168>)
 800b434:	e7a5      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b436:	4e16      	ldr	r6, [pc, #88]	@ (800b490 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16c>)
 800b438:	e7a3      	b.n	800b382 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b43a:	4620      	mov	r0, r4
 800b43c:	f7ff fda6 	bl	800af8c <HttpDeamonHandleRequest::HandleGet()>
 800b440:	e7ef      	b.n	800b422 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfe>
 800b442:	2100      	movs	r1, #0
 800b444:	4620      	mov	r0, r4
 800b446:	f7ff fe87 	bl	800b158 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b44a:	28c8      	cmp	r0, #200	@ 0xc8
 800b44c:	4603      	mov	r3, r0
 800b44e:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b450:	f47f af73 	bne.w	800b33a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b454:	68e3      	ldr	r3, [r4, #12]
 800b456:	2b00      	cmp	r3, #0
 800b458:	d1d7      	bne.n	800b40a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xe6>
 800b45a:	e7c2      	b.n	800b3e2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xbe>
 800b45c:	080197a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, pc}
 800b460:	080197e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, ip, pc}
 800b464:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b468:	0801983c 	stmdaeq	r1, {r2, r3, r4, r5, fp, ip, pc}
 800b46c:	2000cbf0 	strdcs	ip, [r0], -r0
 800b470:	08019898 	stmdaeq	r1, {r3, r4, r7, fp, ip, pc}
 800b474:	08019fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp, ip, pc}
 800b478:	08019838 	stmdaeq	r1, {r3, r4, r5, fp, ip, pc}
 800b47c:	08019814 	stmdaeq	r1, {r2, r4, fp, ip, pc}
 800b480:	080197cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, pc}
 800b484:	080197b0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, ip, pc}
 800b488:	080197fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, pc}
 800b48c:	0801982c 	stmdaeq	r1, {r2, r3, r5, fp, ip, pc}
 800b490:	08019794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, pc}

0800b494 <remoteconfig::json_get_list(char*, unsigned long)>:
 800b494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b498:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800b4f4 <remoteconfig::json_get_list(char*, unsigned long)+0x60>
 800b49c:	4b12      	ldr	r3, [pc, #72]	@ (800b4e8 <remoteconfig::json_get_list(char*, unsigned long)+0x54>)
 800b49e:	b088      	sub	sp, #32
 800b4a0:	4605      	mov	r5, r0
 800b4a2:	f8d8 0000 	ldr.w	r0, [r8]
 800b4a6:	681c      	ldr	r4, [r3, #0]
 800b4a8:	460e      	mov	r6, r1
 800b4aa:	f7fe ff91 	bl	800a3d0 <RemoteConfig::GetStringNode() const>
 800b4ae:	4607      	mov	r7, r0
 800b4b0:	f8d8 0000 	ldr.w	r0, [r8]
 800b4b4:	f7fe ff98 	bl	800a3e8 <RemoteConfig::GetStringOutput() const>
 800b4b8:	4b0c      	ldr	r3, [pc, #48]	@ (800b4ec <remoteconfig::json_get_list(char*, unsigned long)+0x58>)
 800b4ba:	7a1a      	ldrb	r2, [r3, #8]
 800b4bc:	9704      	str	r7, [sp, #16]
 800b4be:	3309      	adds	r3, #9
 800b4c0:	9303      	str	r3, [sp, #12]
 800b4c2:	0e23      	lsrs	r3, r4, #24
 800b4c4:	9302      	str	r3, [sp, #8]
 800b4c6:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b4ca:	9301      	str	r3, [sp, #4]
 800b4cc:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b4d0:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b4d4:	9300      	str	r3, [sp, #0]
 800b4d6:	4a06      	ldr	r2, [pc, #24]	@ (800b4f0 <remoteconfig::json_get_list(char*, unsigned long)+0x5c>)
 800b4d8:	b2e3      	uxtb	r3, r4
 800b4da:	4631      	mov	r1, r6
 800b4dc:	4628      	mov	r0, r5
 800b4de:	f00c fc05 	bl	8017cec <snprintf>
 800b4e2:	b008      	add	sp, #32
 800b4e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4e8:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800b4ec:	20000080 	andcs	r0, r0, r0, lsl #1
 800b4f0:	08018924 	stmdaeq	r1, {r2, r5, r8, fp, pc}
 800b4f4:	200000a4 	andcs	r0, r0, r4, lsr #1

0800b4f8 <remoteconfig::json_get_version(char*, unsigned long)>:
 800b4f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b4fa:	4b0a      	ldr	r3, [pc, #40]	@ (800b524 <remoteconfig::json_get_version(char*, unsigned long)+0x2c>)
 800b4fc:	9305      	str	r3, [sp, #20]
 800b4fe:	2208      	movs	r2, #8
 800b500:	9204      	str	r2, [sp, #16]
 800b502:	f1a3 020b 	sub.w	r2, r3, #11
 800b506:	9203      	str	r2, [sp, #12]
 800b508:	220b      	movs	r2, #11
 800b50a:	9202      	str	r2, [sp, #8]
 800b50c:	3b0e      	subs	r3, #14
 800b50e:	4a06      	ldr	r2, [pc, #24]	@ (800b528 <remoteconfig::json_get_version(char*, unsigned long)+0x30>)
 800b510:	9201      	str	r2, [sp, #4]
 800b512:	9300      	str	r3, [sp, #0]
 800b514:	4a05      	ldr	r2, [pc, #20]	@ (800b52c <remoteconfig::json_get_version(char*, unsigned long)+0x34>)
 800b516:	2303      	movs	r3, #3
 800b518:	f00c fbe8 	bl	8017cec <snprintf>
 800b51c:	b007      	add	sp, #28
 800b51e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b522:	bf00      	nop
 800b524:	2000cdb6 			@ <UNDEFINED> instruction: 0x2000cdb6
 800b528:	080189c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, pc}
 800b52c:	08018983 	stmdaeq	r1, {r0, r1, r7, r8, fp, pc}

0800b530 <remoteconfig::json_get_uptime(char*, unsigned long)>:
 800b530:	4b02      	ldr	r3, [pc, #8]	@ (800b53c <remoteconfig::json_get_uptime(char*, unsigned long)+0xc>)
 800b532:	4a03      	ldr	r2, [pc, #12]	@ (800b540 <remoteconfig::json_get_uptime(char*, unsigned long)+0x10>)
 800b534:	685b      	ldr	r3, [r3, #4]
 800b536:	f00c bbd9 	b.w	8017cec <snprintf>
 800b53a:	bf00      	nop
 800b53c:	2001a6a8 	andcs	sl, r1, r8, lsr #13
 800b540:	080189d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, pc}

0800b544 <remoteconfig::json_get_display(char*, unsigned long)>:
 800b544:	4b03      	ldr	r3, [pc, #12]	@ (800b554 <remoteconfig::json_get_display(char*, unsigned long)+0x10>)
 800b546:	4a04      	ldr	r2, [pc, #16]	@ (800b558 <remoteconfig::json_get_display(char*, unsigned long)+0x14>)
 800b548:	681b      	ldr	r3, [r3, #0]
 800b54a:	7d5b      	ldrb	r3, [r3, #21]
 800b54c:	f083 0301 	eor.w	r3, r3, #1
 800b550:	f00c bbcc 	b.w	8017cec <snprintf>
 800b554:	2000ccd4 	ldrdcs	ip, [r0], -r4
 800b558:	080189e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, fp, pc}

0800b55c <remoteconfig::json_get_directory(char*, unsigned long)>:
 800b55c:	4a01      	ldr	r2, [pc, #4]	@ (800b564 <remoteconfig::json_get_directory(char*, unsigned long)+0x8>)
 800b55e:	f00c bbc5 	b.w	8017cec <snprintf>
 800b562:	bf00      	nop
 800b564:	080189f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, fp, pc}

0800b568 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
 800b568:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b56a:	4c0e      	ldr	r4, [pc, #56]	@ (800b5a4 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x3c>)
 800b56c:	2309      	movs	r3, #9
 800b56e:	3b01      	subs	r3, #1
 800b570:	d104      	bne.n	800b57c <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x14>
 800b572:	600b      	str	r3, [r1, #0]
 800b574:	2105      	movs	r1, #5
 800b576:	6011      	str	r1, [r2, #0]
 800b578:	4618      	mov	r0, r3
 800b57a:	e011      	b.n	800b5a0 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x38>
 800b57c:	6825      	ldr	r5, [r4, #0]
 800b57e:	1e47      	subs	r7, r0, #1
 800b580:	3d01      	subs	r5, #1
 800b582:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b586:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800b58a:	4566      	cmp	r6, ip
 800b58c:	d001      	beq.n	800b592 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x2a>
 800b58e:	3410      	adds	r4, #16
 800b590:	e7ed      	b.n	800b56e <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x6>
 800b592:	2e00      	cmp	r6, #0
 800b594:	d1f5      	bne.n	800b582 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1a>
 800b596:	68a3      	ldr	r3, [r4, #8]
 800b598:	600b      	str	r3, [r1, #0]
 800b59a:	6860      	ldr	r0, [r4, #4]
 800b59c:	68e3      	ldr	r3, [r4, #12]
 800b59e:	6013      	str	r3, [r2, #0]
 800b5a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b5a2:	bf00      	nop
 800b5a4:	0801a0b0 	stmdaeq	r1, {r4, r5, r7, sp, pc}

0800b5a8 <memcpy.isra.0>:
 800b5a8:	440a      	add	r2, r1
 800b5aa:	4291      	cmp	r1, r2
 800b5ac:	d100      	bne.n	800b5b0 <memcpy.isra.0+0x8>
 800b5ae:	4770      	bx	lr
 800b5b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b5b4:	f800 3b01 	strb.w	r3, [r0], #1
 800b5b8:	e7f7      	b.n	800b5aa <memcpy.isra.0+0x2>
	...

0800b5bc <DdpDisplay::DdpDisplay()>:
 800b5bc:	b510      	push	{r4, lr}
 800b5be:	2300      	movs	r3, #0
 800b5c0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800b5c4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800b5c8:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b5cc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800b5d0:	6203      	str	r3, [r0, #32]
 800b5d2:	4b04      	ldr	r3, [pc, #16]	@ (800b5e4 <DdpDisplay::DdpDisplay()+0x28>)
 800b5d4:	4904      	ldr	r1, [pc, #16]	@ (800b5e8 <DdpDisplay::DdpDisplay()+0x2c>)
 800b5d6:	6018      	str	r0, [r3, #0]
 800b5d8:	4604      	mov	r4, r0
 800b5da:	2206      	movs	r2, #6
 800b5dc:	f7ff ffe4 	bl	800b5a8 <memcpy.isra.0>
 800b5e0:	4620      	mov	r0, r4
 800b5e2:	bd10      	pop	{r4, pc}
 800b5e4:	20000648 	andcs	r0, r0, r8, asr #12
 800b5e8:	2000cc24 	andcs	ip, r0, r4, lsr #24

0800b5ec <DdpDisplay::CalculateOffsets()>:
 800b5ec:	b510      	push	{r4, lr}
 800b5ee:	2300      	movs	r3, #0
 800b5f0:	4904      	ldr	r1, [pc, #16]	@ (800b604 <DdpDisplay::CalculateOffsets()+0x18>)
 800b5f2:	461a      	mov	r2, r3
 800b5f4:	6944      	ldr	r4, [r0, #20]
 800b5f6:	3301      	adds	r3, #1
 800b5f8:	4422      	add	r2, r4
 800b5fa:	2b08      	cmp	r3, #8
 800b5fc:	f841 2b04 	str.w	r2, [r1], #4
 800b600:	d1f8      	bne.n	800b5f4 <DdpDisplay::CalculateOffsets()+0x8>
 800b602:	bd10      	pop	{r4, pc}
 800b604:	2000064c 	andcs	r0, r0, ip, asr #12

0800b608 <DdpDisplay::Start()>:
 800b608:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b60a:	4604      	mov	r4, r0
 800b60c:	f44f 607d 	mov.w	r0, #4048	@ 0xfd0
 800b610:	f007 f974 	bl	80128fc <net::udp_begin(unsigned short)>
 800b614:	f104 0524 	add.w	r5, r4, #36	@ 0x24
 800b618:	60a0      	str	r0, [r4, #8]
 800b61a:	f104 032e 	add.w	r3, r4, #46	@ 0x2e
 800b61e:	4628      	mov	r0, r5
 800b620:	2200      	movs	r2, #0
 800b622:	f800 2b01 	strb.w	r2, [r0], #1
 800b626:	4298      	cmp	r0, r3
 800b628:	d1fb      	bne.n	800b622 <DdpDisplay::Start()+0x1a>
 800b62a:	2344      	movs	r3, #68	@ 0x44
 800b62c:	222b      	movs	r2, #43	@ 0x2b
 800b62e:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800b632:	23fb      	movs	r3, #251	@ 0xfb
 800b634:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 800b638:	f884 202d 	strb.w	r2, [r4, #45]	@ 0x2d
 800b63c:	490b      	ldr	r1, [pc, #44]	@ (800b66c <DdpDisplay::Start()+0x64>)
 800b63e:	f7ff ffb3 	bl	800b5a8 <memcpy.isra.0>
 800b642:	4b0b      	ldr	r3, [pc, #44]	@ (800b670 <DdpDisplay::Start()+0x68>)
 800b644:	68a0      	ldr	r0, [r4, #8]
 800b646:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b64a:	ea62 0303 	orn	r3, r2, r3
 800b64e:	b132      	cbz	r2, 800b65e <DdpDisplay::Start()+0x56>
 800b650:	f44f 627d 	mov.w	r2, #4048	@ 0xfd0
 800b654:	9200      	str	r2, [sp, #0]
 800b656:	4629      	mov	r1, r5
 800b658:	2235      	movs	r2, #53	@ 0x35
 800b65a:	f007 f9d3 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b65e:	4620      	mov	r0, r4
 800b660:	b003      	add	sp, #12
 800b662:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b666:	f7ff bfc1 	b.w	800b5ec <DdpDisplay::CalculateOffsets()>
 800b66a:	bf00      	nop
 800b66c:	0801b884 	stmdaeq	r1, {r2, r7, fp, ip, sp, pc}
 800b670:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800b674 <DdpDisplay::Stop()>:
 800b674:	b510      	push	{r4, lr}
 800b676:	4604      	mov	r4, r0
 800b678:	f44f 607d 	mov.w	r0, #4048	@ 0xfd0
 800b67c:	f007 f954 	bl	8012928 <net::udp_end(unsigned short)>
 800b680:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800b684:	60a3      	str	r3, [r4, #8]
 800b686:	bd10      	pop	{r4, pc}

0800b688 <DdpDisplay::HandleQuery()>:
 800b688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b68c:	f890 3027 	ldrb.w	r3, [r0, #39]	@ 0x27
 800b690:	f003 03fb 	and.w	r3, r3, #251	@ 0xfb
 800b694:	2bfb      	cmp	r3, #251	@ 0xfb
 800b696:	b0a1      	sub	sp, #132	@ 0x84
 800b698:	4605      	mov	r5, r0
 800b69a:	d128      	bne.n	800b6ee <DdpDisplay::HandleQuery()+0x66>
 800b69c:	7943      	ldrb	r3, [r0, #5]
 800b69e:	9305      	str	r3, [sp, #20]
 800b6a0:	7903      	ldrb	r3, [r0, #4]
 800b6a2:	9304      	str	r3, [sp, #16]
 800b6a4:	78c3      	ldrb	r3, [r0, #3]
 800b6a6:	9303      	str	r3, [sp, #12]
 800b6a8:	7883      	ldrb	r3, [r0, #2]
 800b6aa:	9302      	str	r3, [sp, #8]
 800b6ac:	7843      	ldrb	r3, [r0, #1]
 800b6ae:	9301      	str	r3, [sp, #4]
 800b6b0:	7803      	ldrb	r3, [r0, #0]
 800b6b2:	4a67      	ldr	r2, [pc, #412]	@ (800b850 <DdpDisplay::HandleQuery()+0x1c8>)
 800b6b4:	9300      	str	r3, [sp, #0]
 800b6b6:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b6ba:	4b66      	ldr	r3, [pc, #408]	@ (800b854 <DdpDisplay::HandleQuery()+0x1cc>)
 800b6bc:	302e      	adds	r0, #46	@ 0x2e
 800b6be:	f00c fb15 	bl	8017cec <snprintf>
 800b6c2:	2345      	movs	r3, #69	@ 0x45
 800b6c4:	f885 3024 	strb.w	r3, [r5, #36]	@ 0x24
 800b6c8:	ba43      	rev16	r3, r0
 800b6ca:	85ab      	strh	r3, [r5, #44]	@ 0x2c
 800b6cc:	4b62      	ldr	r3, [pc, #392]	@ (800b858 <DdpDisplay::HandleQuery()+0x1d0>)
 800b6ce:	e9d3 4300 	ldrd	r4, r3, [r3]
 800b6d2:	4602      	mov	r2, r0
 800b6d4:	b292      	uxth	r2, r2
 800b6d6:	68a8      	ldr	r0, [r5, #8]
 800b6d8:	f105 0124 	add.w	r1, r5, #36	@ 0x24
 800b6dc:	320a      	adds	r2, #10
 800b6de:	ea64 0303 	orn	r3, r4, r3
 800b6e2:	b124      	cbz	r4, 800b6ee <DdpDisplay::HandleQuery()+0x66>
 800b6e4:	f44f 647d 	mov.w	r4, #4048	@ 0xfd0
 800b6e8:	9400      	str	r4, [sp, #0]
 800b6ea:	f007 f98b 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b6ee:	f895 3027 	ldrb.w	r3, [r5, #39]	@ 0x27
 800b6f2:	f003 03fb 	and.w	r3, r3, #251	@ 0xfb
 800b6f6:	2bfa      	cmp	r3, #250	@ 0xfa
 800b6f8:	d173      	bne.n	800b7e2 <DdpDisplay::HandleQuery()+0x15a>
 800b6fa:	4a57      	ldr	r2, [pc, #348]	@ (800b858 <DdpDisplay::HandleQuery()+0x1d0>)
 800b6fc:	69ec      	ldr	r4, [r5, #28]
 800b6fe:	6813      	ldr	r3, [r2, #0]
 800b700:	f3c3 2107 	ubfx	r1, r3, #8, #8
 800b704:	fa5f fa83 	uxtb.w	sl, r3
 800b708:	9117      	str	r1, [sp, #92]	@ 0x5c
 800b70a:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800b70e:	0e1b      	lsrs	r3, r3, #24
 800b710:	9319      	str	r3, [sp, #100]	@ 0x64
 800b712:	6853      	ldr	r3, [r2, #4]
 800b714:	9118      	str	r1, [sp, #96]	@ 0x60
 800b716:	b2d9      	uxtb	r1, r3
 800b718:	911a      	str	r1, [sp, #104]	@ 0x68
 800b71a:	f3c3 2107 	ubfx	r1, r3, #8, #8
 800b71e:	911b      	str	r1, [sp, #108]	@ 0x6c
 800b720:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800b724:	0e1b      	lsrs	r3, r3, #24
 800b726:	931d      	str	r3, [sp, #116]	@ 0x74
 800b728:	6893      	ldr	r3, [r2, #8]
 800b72a:	911c      	str	r1, [sp, #112]	@ 0x70
 800b72c:	b2da      	uxtb	r2, r3
 800b72e:	921e      	str	r2, [sp, #120]	@ 0x78
 800b730:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800b734:	f105 002e 	add.w	r0, r5, #46	@ 0x2e
 800b738:	921f      	str	r2, [sp, #124]	@ 0x7c
 800b73a:	f3c3 4b07 	ubfx	fp, r3, #16, #8
 800b73e:	ea4f 6913 	mov.w	r9, r3, lsr #24
 800b742:	2c00      	cmp	r4, #0
 800b744:	d050      	beq.n	800b7e8 <DdpDisplay::HandleQuery()+0x160>
 800b746:	2c01      	cmp	r4, #1
 800b748:	692a      	ldr	r2, [r5, #16]
 800b74a:	d055      	beq.n	800b7f8 <DdpDisplay::HandleQuery()+0x170>
 800b74c:	2c02      	cmp	r4, #2
 800b74e:	d05a      	beq.n	800b806 <DdpDisplay::HandleQuery()+0x17e>
 800b750:	2c03      	cmp	r4, #3
 800b752:	d05f      	beq.n	800b814 <DdpDisplay::HandleQuery()+0x18c>
 800b754:	2c04      	cmp	r4, #4
 800b756:	d064      	beq.n	800b822 <DdpDisplay::HandleQuery()+0x19a>
 800b758:	2c05      	cmp	r4, #5
 800b75a:	d069      	beq.n	800b830 <DdpDisplay::HandleQuery()+0x1a8>
 800b75c:	2c06      	cmp	r4, #6
 800b75e:	d06e      	beq.n	800b83e <DdpDisplay::HandleQuery()+0x1b6>
 800b760:	2c07      	cmp	r4, #7
 800b762:	4611      	mov	r1, r2
 800b764:	4690      	mov	r8, r2
 800b766:	4696      	mov	lr, r2
 800b768:	4694      	mov	ip, r2
 800b76a:	4617      	mov	r7, r2
 800b76c:	4616      	mov	r6, r2
 800b76e:	d16d      	bne.n	800b84c <DdpDisplay::HandleQuery()+0x1c4>
 800b770:	2400      	movs	r4, #0
 800b772:	2300      	movs	r3, #0
 800b774:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
 800b778:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 800b77a:	9308      	str	r3, [sp, #32]
 800b77c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800b77e:	9307      	str	r3, [sp, #28]
 800b780:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800b782:	9306      	str	r3, [sp, #24]
 800b784:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800b786:	9305      	str	r3, [sp, #20]
 800b788:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800b78a:	9304      	str	r3, [sp, #16]
 800b78c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800b78e:	9303      	str	r3, [sp, #12]
 800b790:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800b792:	9302      	str	r3, [sp, #8]
 800b794:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800b796:	9301      	str	r3, [sp, #4]
 800b798:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800b79a:	9300      	str	r3, [sp, #0]
 800b79c:	e9cd 1411 	strd	r1, r4, [sp, #68]	@ 0x44
 800b7a0:	e9cd 260b 	strd	r2, r6, [sp, #44]	@ 0x2c
 800b7a4:	4653      	mov	r3, sl
 800b7a6:	4a2d      	ldr	r2, [pc, #180]	@ (800b85c <DdpDisplay::HandleQuery()+0x1d4>)
 800b7a8:	4c2b      	ldr	r4, [pc, #172]	@ (800b858 <DdpDisplay::HandleQuery()+0x1d0>)
 800b7aa:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b7ae:	e9cd e80f 	strd	lr, r8, [sp, #60]	@ 0x3c
 800b7b2:	e9cd 7c0d 	strd	r7, ip, [sp, #52]	@ 0x34
 800b7b6:	e9cd b909 	strd	fp, r9, [sp, #36]	@ 0x24
 800b7ba:	f00c fa97 	bl	8017cec <snprintf>
 800b7be:	2345      	movs	r3, #69	@ 0x45
 800b7c0:	6824      	ldr	r4, [r4, #0]
 800b7c2:	f885 3024 	strb.w	r3, [r5, #36]	@ 0x24
 800b7c6:	4602      	mov	r2, r0
 800b7c8:	ba43      	rev16	r3, r0
 800b7ca:	85ab      	strh	r3, [r5, #44]	@ 0x2c
 800b7cc:	68a8      	ldr	r0, [r5, #8]
 800b7ce:	68eb      	ldr	r3, [r5, #12]
 800b7d0:	f105 0124 	add.w	r1, r5, #36	@ 0x24
 800b7d4:	320a      	adds	r2, #10
 800b7d6:	b124      	cbz	r4, 800b7e2 <DdpDisplay::HandleQuery()+0x15a>
 800b7d8:	f44f 647d 	mov.w	r4, #4048	@ 0xfd0
 800b7dc:	9400      	str	r4, [sp, #0]
 800b7de:	f007 f911 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b7e2:	b021      	add	sp, #132	@ 0x84
 800b7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7e8:	4621      	mov	r1, r4
 800b7ea:	46a0      	mov	r8, r4
 800b7ec:	46a6      	mov	lr, r4
 800b7ee:	46a4      	mov	ip, r4
 800b7f0:	4627      	mov	r7, r4
 800b7f2:	4626      	mov	r6, r4
 800b7f4:	4622      	mov	r2, r4
 800b7f6:	e7bc      	b.n	800b772 <DdpDisplay::HandleQuery()+0xea>
 800b7f8:	2100      	movs	r1, #0
 800b7fa:	4688      	mov	r8, r1
 800b7fc:	468e      	mov	lr, r1
 800b7fe:	468c      	mov	ip, r1
 800b800:	460f      	mov	r7, r1
 800b802:	460e      	mov	r6, r1
 800b804:	e7b4      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b806:	2100      	movs	r1, #0
 800b808:	4616      	mov	r6, r2
 800b80a:	4688      	mov	r8, r1
 800b80c:	468e      	mov	lr, r1
 800b80e:	468c      	mov	ip, r1
 800b810:	460f      	mov	r7, r1
 800b812:	e7ad      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b814:	2100      	movs	r1, #0
 800b816:	4617      	mov	r7, r2
 800b818:	4616      	mov	r6, r2
 800b81a:	4688      	mov	r8, r1
 800b81c:	468e      	mov	lr, r1
 800b81e:	468c      	mov	ip, r1
 800b820:	e7a6      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b822:	2100      	movs	r1, #0
 800b824:	4694      	mov	ip, r2
 800b826:	4617      	mov	r7, r2
 800b828:	4616      	mov	r6, r2
 800b82a:	4688      	mov	r8, r1
 800b82c:	468e      	mov	lr, r1
 800b82e:	e79f      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b830:	2100      	movs	r1, #0
 800b832:	4696      	mov	lr, r2
 800b834:	4694      	mov	ip, r2
 800b836:	4617      	mov	r7, r2
 800b838:	4616      	mov	r6, r2
 800b83a:	4688      	mov	r8, r1
 800b83c:	e798      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b83e:	4690      	mov	r8, r2
 800b840:	4696      	mov	lr, r2
 800b842:	4694      	mov	ip, r2
 800b844:	4617      	mov	r7, r2
 800b846:	4616      	mov	r6, r2
 800b848:	2100      	movs	r1, #0
 800b84a:	e791      	b.n	800b770 <DdpDisplay::HandleQuery()+0xe8>
 800b84c:	4614      	mov	r4, r2
 800b84e:	e790      	b.n	800b772 <DdpDisplay::HandleQuery()+0xea>
 800b850:	0801b82c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, pc}
 800b854:	08018adb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r9, fp, pc}
 800b858:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800b85c:	0801b64c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, sp, pc}

0800b860 <DdpDisplay::HandleData()>:
 800b860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b864:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b866:	fa93 f883 	rev.w	r8, r3
 800b86a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800b86c:	b089      	sub	sp, #36	@ 0x24
 800b86e:	ba5b      	rev16	r3, r3
 800b870:	b29b      	uxth	r3, r3
 800b872:	9307      	str	r3, [sp, #28]
 800b874:	2500      	movs	r5, #0
 800b876:	f100 032e 	add.w	r3, r0, #46	@ 0x2e
 800b87a:	4604      	mov	r4, r0
 800b87c:	9303      	str	r3, [sp, #12]
 800b87e:	46aa      	mov	sl, r5
 800b880:	69e3      	ldr	r3, [r4, #28]
 800b882:	42ab      	cmp	r3, r5
 800b884:	d901      	bls.n	800b88a <DdpDisplay::HandleData()+0x2a>
 800b886:	9b07      	ldr	r3, [sp, #28]
 800b888:	b9f3      	cbnz	r3, 800b8c8 <DdpDisplay::HandleData()+0x68>
 800b88a:	f894 3024 	ldrb.w	r3, [r4, #36]	@ 0x24
 800b88e:	07db      	lsls	r3, r3, #31
 800b890:	d517      	bpl.n	800b8c2 <DdpDisplay::HandleData()+0x62>
 800b892:	2500      	movs	r5, #0
 800b894:	4e2d      	ldr	r6, [pc, #180]	@ (800b94c <DdpDisplay::HandleData()+0xec>)
 800b896:	f04f 0901 	mov.w	r9, #1
 800b89a:	462f      	mov	r7, r5
 800b89c:	6a20      	ldr	r0, [r4, #32]
 800b89e:	6803      	ldr	r3, [r0, #0]
 800b8a0:	f8cd 9000 	str.w	r9, [sp]
 800b8a4:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b8a8:	f8d6 3600 	ldr.w	r3, [r6, #1536]	@ 0x600
 800b8ac:	f506 6280 	add.w	r2, r6, #1024	@ 0x400
 800b8b0:	4629      	mov	r1, r5
 800b8b2:	3501      	adds	r5, #1
 800b8b4:	47c0      	blx	r8
 800b8b6:	2d20      	cmp	r5, #32
 800b8b8:	f8c6 7600 	str.w	r7, [r6, #1536]	@ 0x600
 800b8bc:	f206 6604 	addw	r6, r6, #1540	@ 0x604
 800b8c0:	d1ec      	bne.n	800b89c <DdpDisplay::HandleData()+0x3c>
 800b8c2:	b009      	add	sp, #36	@ 0x24
 800b8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8c8:	4b20      	ldr	r3, [pc, #128]	@ (800b94c <DdpDisplay::HandleData()+0xec>)
 800b8ca:	4a21      	ldr	r2, [pc, #132]	@ (800b950 <DdpDisplay::HandleData()+0xf0>)
 800b8cc:	f641 0610 	movw	r6, #6160	@ 0x1810
 800b8d0:	00af      	lsls	r7, r5, #2
 800b8d2:	fb06 3605 	mla	r6, r6, r5, r3
 800b8d6:	1c6b      	adds	r3, r5, #1
 800b8d8:	9302      	str	r3, [sp, #8]
 800b8da:	eb02 0b07 	add.w	fp, r2, r7
 800b8de:	1d3b      	adds	r3, r7, #4
 800b8e0:	f8db 2000 	ldr.w	r2, [fp]
 800b8e4:	4542      	cmp	r2, r8
 800b8e6:	d901      	bls.n	800b8ec <DdpDisplay::HandleData()+0x8c>
 800b8e8:	429f      	cmp	r7, r3
 800b8ea:	d301      	bcc.n	800b8f0 <DdpDisplay::HandleData()+0x90>
 800b8ec:	9d02      	ldr	r5, [sp, #8]
 800b8ee:	e7c7      	b.n	800b880 <DdpDisplay::HandleData()+0x20>
 800b8f0:	69a1      	ldr	r1, [r4, #24]
 800b8f2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800b8f6:	6960      	ldr	r0, [r4, #20]
 800b8f8:	9305      	str	r3, [sp, #20]
 800b8fa:	4589      	cmp	r9, r1
 800b8fc:	bf36      	itet	cc
 800b8fe:	4649      	movcc	r1, r9
 800b900:	f104 0218 	addcs.w	r2, r4, #24
 800b904:	aa07      	addcc	r2, sp, #28
 800b906:	4288      	cmp	r0, r1
 800b908:	bf98      	it	ls
 800b90a:	f104 0214 	addls.w	r2, r4, #20
 800b90e:	9b03      	ldr	r3, [sp, #12]
 800b910:	6815      	ldr	r5, [r2, #0]
 800b912:	eb03 010a 	add.w	r1, r3, sl
 800b916:	4630      	mov	r0, r6
 800b918:	462a      	mov	r2, r5
 800b91a:	9104      	str	r1, [sp, #16]
 800b91c:	f7ff fe44 	bl	800b5a8 <memcpy.isra.0>
 800b920:	f8c6 5600 	str.w	r5, [r6, #1536]	@ 0x600
 800b924:	462a      	mov	r2, r5
 800b926:	f506 6080 	add.w	r0, r6, #1024	@ 0x400
 800b92a:	9904      	ldr	r1, [sp, #16]
 800b92c:	f7ff fe3c 	bl	800b5a8 <memcpy.isra.0>
 800b930:	4b08      	ldr	r3, [pc, #32]	@ (800b954 <DdpDisplay::HandleData()+0xf4>)
 800b932:	eba9 0205 	sub.w	r2, r9, r5
 800b936:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
 800b93a:	44aa      	add	sl, r5
 800b93c:	9b05      	ldr	r3, [sp, #20]
 800b93e:	9207      	str	r2, [sp, #28]
 800b940:	44a8      	add	r8, r5
 800b942:	3701      	adds	r7, #1
 800b944:	f206 6604 	addw	r6, r6, #1540	@ 0x604
 800b948:	e7ca      	b.n	800b8e0 <DdpDisplay::HandleData()+0x80>
 800b94a:	bf00      	nop
 800b94c:	200006ec 	andcs	r0, r0, ip, ror #13
 800b950:	2000064c 	andcs	r0, r0, ip, asr #12
 800b954:	2000066c 	andcs	r0, r0, ip, ror #12

0800b958 <DdpDisplay::Run()>:
 800b958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b95a:	f10d 030e 	add.w	r3, sp, #14
 800b95e:	9300      	str	r3, [sp, #0]
 800b960:	f100 0124 	add.w	r1, r0, #36	@ 0x24
 800b964:	f100 030c 	add.w	r3, r0, #12
 800b968:	4604      	mov	r4, r0
 800b96a:	f240 52aa 	movw	r2, #1450	@ 0x5aa
 800b96e:	6880      	ldr	r0, [r0, #8]
 800b970:	f006 fffe 	bl	8012970 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)>
 800b974:	2809      	cmp	r0, #9
 800b976:	d911      	bls.n	800b99c <DdpDisplay::Run()+0x44>
 800b978:	4b0c      	ldr	r3, [pc, #48]	@ (800b9ac <DdpDisplay::Run()+0x54>)
 800b97a:	68e2      	ldr	r2, [r4, #12]
 800b97c:	681b      	ldr	r3, [r3, #0]
 800b97e:	429a      	cmp	r2, r3
 800b980:	d00c      	beq.n	800b99c <DdpDisplay::Run()+0x44>
 800b982:	f894 3024 	ldrb.w	r3, [r4, #36]	@ 0x24
 800b986:	f003 02c0 	and.w	r2, r3, #192	@ 0xc0
 800b98a:	2a40      	cmp	r2, #64	@ 0x40
 800b98c:	d106      	bne.n	800b99c <DdpDisplay::Run()+0x44>
 800b98e:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
 800b992:	2a01      	cmp	r2, #1
 800b994:	d104      	bne.n	800b9a0 <DdpDisplay::Run()+0x48>
 800b996:	4620      	mov	r0, r4
 800b998:	f7ff ff62 	bl	800b860 <DdpDisplay::HandleData()>
 800b99c:	b004      	add	sp, #16
 800b99e:	bd10      	pop	{r4, pc}
 800b9a0:	079b      	lsls	r3, r3, #30
 800b9a2:	d5fb      	bpl.n	800b99c <DdpDisplay::Run()+0x44>
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	f7ff fe6f 	bl	800b688 <DdpDisplay::HandleQuery()>
 800b9aa:	e7f7      	b.n	800b99c <DdpDisplay::Run()+0x44>
 800b9ac:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800b9b0 <DdpDisplay::Print()>:
 800b9b0:	b510      	push	{r4, lr}
 800b9b2:	4604      	mov	r4, r0
 800b9b4:	4809      	ldr	r0, [pc, #36]	@ (800b9dc <DdpDisplay::Print()+0x2c>)
 800b9b6:	f00c f9c6 	bl	8017d46 <puts>
 800b9ba:	6921      	ldr	r1, [r4, #16]
 800b9bc:	4808      	ldr	r0, [pc, #32]	@ (800b9e0 <DdpDisplay::Print()+0x30>)
 800b9be:	f00c f96d 	bl	8017c9c <printf>
 800b9c2:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800b9c6:	4807      	ldr	r0, [pc, #28]	@ (800b9e4 <DdpDisplay::Print()+0x34>)
 800b9c8:	fbb1 f1f3 	udiv	r1, r1, r3
 800b9cc:	f00c f966 	bl	8017c9c <printf>
 800b9d0:	69e1      	ldr	r1, [r4, #28]
 800b9d2:	4805      	ldr	r0, [pc, #20]	@ (800b9e8 <DdpDisplay::Print()+0x38>)
 800b9d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b9d8:	f00c b960 	b.w	8017c9c <printf>
 800b9dc:	08018749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, pc}
 800b9e0:	08018af0 	stmdaeq	r1, {r4, r5, r6, r7, r9, fp, pc}
 800b9e4:	08018b09 	stmdaeq	r1, {r0, r3, r8, r9, fp, pc}
 800b9e8:	08018b22 	stmdaeq	r1, {r1, r5, r8, r9, fp, pc}

0800b9ec <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>:
 800b9ec:	b507      	push	{r0, r1, r2, lr}
 800b9ee:	2300      	movs	r3, #0
 800b9f0:	2101      	movs	r1, #1
 800b9f2:	e9cd 3100 	strd	r3, r1, [sp]
 800b9f6:	4602      	mov	r2, r0
 800b9f8:	4804      	ldr	r0, [pc, #16]	@ (800ba0c <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)+0x20>)
 800b9fa:	2329      	movs	r3, #41	@ 0x29
 800b9fc:	6800      	ldr	r0, [r0, #0]
 800b9fe:	2109      	movs	r1, #9
 800ba00:	f008 fc12 	bl	8014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800ba04:	b003      	add	sp, #12
 800ba06:	f85d fb04 	ldr.w	pc, [sp], #4
 800ba0a:	bf00      	nop
 800ba0c:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800ba10 <RDMDeviceParams::RDMDeviceParams()>:
 800ba10:	b510      	push	{r4, lr}
 800ba12:	2225      	movs	r2, #37	@ 0x25
 800ba14:	4604      	mov	r4, r0
 800ba16:	2100      	movs	r1, #0
 800ba18:	f00b fe5c 	bl	80176d4 <memset>
 800ba1c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800ba20:	237f      	movs	r3, #127	@ 0x7f
 800ba22:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 800ba26:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 800ba2a:	f884 2027 	strb.w	r2, [r4, #39]	@ 0x27
 800ba2e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800ba32:	4620      	mov	r0, r4
 800ba34:	bd10      	pop	{r4, pc}

0800ba36 <RDMDeviceParams::Load()>:
 800ba36:	b508      	push	{r3, lr}
 800ba38:	f7ff ffd8 	bl	800b9ec <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>
 800ba3c:	bd08      	pop	{r3, pc}
	...

0800ba40 <RDMDeviceParams::Set(RDMDevice*)>:
 800ba40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba44:	6803      	ldr	r3, [r0, #0]
 800ba46:	460c      	mov	r4, r1
 800ba48:	07d9      	lsls	r1, r3, #31
 800ba4a:	b087      	sub	sp, #28
 800ba4c:	4605      	mov	r5, r0
 800ba4e:	d52d      	bpl.n	800baac <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800ba50:	f890 6024 	ldrb.w	r6, [r0, #36]	@ 0x24
 800ba54:	f894 3052 	ldrb.w	r3, [r4, #82]	@ 0x52
 800ba58:	2e20      	cmp	r6, #32
 800ba5a:	f100 0104 	add.w	r1, r0, #4
 800ba5e:	bf28      	it	cs
 800ba60:	2620      	movcs	r6, #32
 800ba62:	b39b      	cbz	r3, 800bacc <RDMDeviceParams::Set(RDMDevice*)+0x8c>
 800ba64:	f104 0320 	add.w	r3, r4, #32
 800ba68:	2701      	movs	r7, #1
 800ba6a:	4632      	mov	r2, r6
 800ba6c:	4618      	mov	r0, r3
 800ba6e:	f04f 0900 	mov.w	r9, #0
 800ba72:	f00b fe18 	bl	80176a6 <memmove>
 800ba76:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800ba7a:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800ba7e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800badc <RDMDeviceParams::Set(RDMDevice*)+0x9c>
 800ba82:	9600      	str	r6, [sp, #0]
 800ba84:	4603      	mov	r3, r0
 800ba86:	2204      	movs	r2, #4
 800ba88:	f8d8 0000 	ldr.w	r0, [r8]
 800ba8c:	f88d 6017 	strb.w	r6, [sp, #23]
 800ba90:	2109      	movs	r1, #9
 800ba92:	f008 fba3 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800ba96:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800ba9a:	9700      	str	r7, [sp, #0]
 800ba9c:	f8d8 0000 	ldr.w	r0, [r8]
 800baa0:	f10d 0317 	add.w	r3, sp, #23
 800baa4:	2224      	movs	r2, #36	@ 0x24
 800baa6:	2109      	movs	r1, #9
 800baa8:	f008 fb98 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800baac:	682b      	ldr	r3, [r5, #0]
 800baae:	079a      	lsls	r2, r3, #30
 800bab0:	bf44      	itt	mi
 800bab2:	f8b5 2025 	ldrhmi.w	r2, [r5, #37]	@ 0x25
 800bab6:	f8a4 2040 	strhmi.w	r2, [r4, #64]	@ 0x40
 800baba:	075b      	lsls	r3, r3, #29
 800babc:	bf44      	itt	mi
 800babe:	f8b5 3027 	ldrhmi.w	r3, [r5, #39]	@ 0x27
 800bac2:	f8a4 3042 	strhmi.w	r3, [r4, #66]	@ 0x42
 800bac6:	b007      	add	sp, #28
 800bac8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bacc:	4632      	mov	r2, r6
 800bace:	4620      	mov	r0, r4
 800bad0:	f00b fde9 	bl	80176a6 <memmove>
 800bad4:	f884 6051 	strb.w	r6, [r4, #81]	@ 0x51
 800bad8:	e7e8      	b.n	800baac <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800bada:	bf00      	nop
 800badc:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800bae0 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800bae0:	4770      	bx	lr

0800bae2 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800bae2:	4770      	bx	lr

0800bae4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>:
 800bae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bae6:	4604      	mov	r4, r0
 800bae8:	3004      	adds	r0, #4
 800baea:	460f      	mov	r7, r1
 800baec:	4616      	mov	r6, r2
 800baee:	461d      	mov	r5, r3
 800baf0:	f001 f880 	bl	800cbf4 <RDMDevice::RDMDevice()>
 800baf4:	4620      	mov	r0, r4
 800baf6:	4b24      	ldr	r3, [pc, #144]	@ (800bb88 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa4>)
 800baf8:	f840 3b57 	str.w	r3, [r0], #87
 800bafc:	f000 fd64 	bl	800c5c8 <RDMIdentify::RDMIdentify()>
 800bb00:	4a22      	ldr	r2, [pc, #136]	@ (800bb8c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa8>)
 800bb02:	66a7      	str	r7, [r4, #104]	@ 0x68
 800bb04:	f104 0158 	add.w	r1, r4, #88	@ 0x58
 800bb08:	6011      	str	r1, [r2, #0]
 800bb0a:	4a21      	ldr	r2, [pc, #132]	@ (800bb90 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xac>)
 800bb0c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 800bb10:	6011      	str	r1, [r2, #0]
 800bb12:	4a20      	ldr	r2, [pc, #128]	@ (800bb94 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xb0>)
 800bb14:	6014      	str	r4, [r2, #0]
 800bb16:	2265      	movs	r2, #101	@ 0x65
 800bb18:	f884 2097 	strb.w	r2, [r4, #151]	@ 0x97
 800bb1c:	f44f 72b7 	mov.w	r2, #366	@ 0x16e
 800bb20:	2300      	movs	r3, #0
 800bb22:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 800bb26:	2201      	movs	r2, #1
 800bb28:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
 800bb2c:	65a3      	str	r3, [r4, #88]	@ 0x58
 800bb2e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800bb32:	6623      	str	r3, [r4, #96]	@ 0x60
 800bb34:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 800bb38:	f104 0271 	add.w	r2, r4, #113	@ 0x71
 800bb3c:	f104 0184 	add.w	r1, r4, #132	@ 0x84
 800bb40:	f802 3b01 	strb.w	r3, [r2], #1
 800bb44:	428a      	cmp	r2, r1
 800bb46:	d1fb      	bne.n	800bb40 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x5c>
 800bb48:	f104 0397 	add.w	r3, r4, #151	@ 0x97
 800bb4c:	2200      	movs	r2, #0
 800bb4e:	f801 2b01 	strb.w	r2, [r1], #1
 800bb52:	428b      	cmp	r3, r1
 800bb54:	d1fb      	bne.n	800bb4e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x6a>
 800bb56:	f884 607e 	strb.w	r6, [r4, #126]	@ 0x7e
 800bb5a:	f884 507d 	strb.w	r5, [r4, #125]	@ 0x7d
 800bb5e:	f7fe fad1 	bl	800a104 <RDMSoftwareVersion::GetVersion()>
 800bb62:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800bb64:	f7fe fad2 	bl	800a10c <RDMSoftwareVersion::GetVersionLength()>
 800bb68:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 800bb6c:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800bb6e:	f884 0070 	strb.w	r0, [r4, #112]	@ 0x70
 800bb72:	3b01      	subs	r3, #1
 800bb74:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bb78:	685b      	ldr	r3, [r3, #4]
 800bb7a:	b91b      	cbnz	r3, 800bb84 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa0>
 800bb7c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bb80:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
 800bb84:	4620      	mov	r0, r4
 800bb86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bb88:	0801b8b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, ip, sp, pc}
 800bb8c:	2000c778 	andcs	ip, r0, r8, ror r7
 800bb90:	2000c77c 	andcs	ip, r0, ip, ror r7
 800bb94:	2000c76c 	andcs	ip, r0, ip, ror #14

0800bb98 <RDMDeviceResponder::Init()>:
 800bb98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb9a:	2301      	movs	r3, #1
 800bb9c:	4604      	mov	r4, r0
 800bb9e:	f880 3056 	strb.w	r3, [r0, #86]	@ 0x56
 800bba2:	f894 2055 	ldrb.w	r2, [r4, #85]	@ 0x55
 800bba6:	2a20      	cmp	r2, #32
 800bba8:	bf28      	it	cs
 800bbaa:	2220      	movcs	r2, #32
 800bbac:	b087      	sub	sp, #28
 800bbae:	3004      	adds	r0, #4
 800bbb0:	f104 0324 	add.w	r3, r4, #36	@ 0x24
 800bbb4:	4611      	mov	r1, r2
 800bbb6:	3901      	subs	r1, #1
 800bbb8:	d275      	bcs.n	800bca6 <RDMDeviceResponder::Init()+0x10e>
 800bbba:	2501      	movs	r5, #1
 800bbbc:	2700      	movs	r7, #0
 800bbbe:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800bbc2:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800bbc6:	4e49      	ldr	r6, [pc, #292]	@ (800bcec <RDMDeviceResponder::Init()+0x154>)
 800bbc8:	9200      	str	r2, [sp, #0]
 800bbca:	6830      	ldr	r0, [r6, #0]
 800bbcc:	f88d 2017 	strb.w	r2, [sp, #23]
 800bbd0:	2109      	movs	r1, #9
 800bbd2:	2204      	movs	r2, #4
 800bbd4:	f008 fb02 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bbd8:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800bbdc:	9500      	str	r5, [sp, #0]
 800bbde:	6830      	ldr	r0, [r6, #0]
 800bbe0:	f10d 0317 	add.w	r3, sp, #23
 800bbe4:	2224      	movs	r2, #36	@ 0x24
 800bbe6:	2109      	movs	r1, #9
 800bbe8:	f008 faf8 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bbec:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800bbf0:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800bbf4:	f894 0054 	ldrb.w	r0, [r4, #84]	@ 0x54
 800bbf8:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800bbfc:	1b2d      	subs	r5, r5, r4
 800bbfe:	18a9      	adds	r1, r5, r2
 800bc00:	4288      	cmp	r0, r1
 800bc02:	d854      	bhi.n	800bcae <RDMDeviceResponder::Init()+0x116>
 800bc04:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800bc08:	f7fe fa82 	bl	800a110 <RDMSoftwareVersion::GetVersionId()>
 800bc0c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800bc10:	f884 3076 	strb.w	r3, [r4, #118]	@ 0x76
 800bc14:	2201      	movs	r2, #1
 800bc16:	f884 2071 	strb.w	r2, [r4, #113]	@ 0x71
 800bc1a:	2200      	movs	r2, #0
 800bc1c:	f8a4 2072 	strh.w	r2, [r4, #114]	@ 0x72
 800bc20:	f884 2074 	strb.w	r2, [r4, #116]	@ 0x74
 800bc24:	0a1a      	lsrs	r2, r3, #8
 800bc26:	0e03      	lsrs	r3, r0, #24
 800bc28:	f884 3077 	strb.w	r3, [r4, #119]	@ 0x77
 800bc2c:	0c03      	lsrs	r3, r0, #16
 800bc2e:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
 800bc32:	0a03      	lsrs	r3, r0, #8
 800bc34:	f884 3079 	strb.w	r3, [r4, #121]	@ 0x79
 800bc38:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800bc3c:	f884 2075 	strb.w	r2, [r4, #117]	@ 0x75
 800bc40:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800bc44:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800bc46:	f884 007a 	strb.w	r0, [r4, #122]	@ 0x7a
 800bc4a:	3b01      	subs	r3, #1
 800bc4c:	f8b4 6064 	ldrh.w	r6, [r4, #100]	@ 0x64
 800bc50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bc54:	685d      	ldr	r5, [r3, #4]
 800bc56:	bb7d      	cbnz	r5, 800bcb8 <RDMDeviceResponder::Init()+0x120>
 800bc58:	f8b4 009c 	ldrh.w	r0, [r4, #156]	@ 0x9c
 800bc5c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bc60:	0a03      	lsrs	r3, r0, #8
 800bc62:	f884 507c 	strb.w	r5, [r4, #124]	@ 0x7c
 800bc66:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800bc6a:	0a33      	lsrs	r3, r6, #8
 800bc6c:	b2c0      	uxtb	r0, r0
 800bc6e:	f884 3081 	strb.w	r3, [r4, #129]	@ 0x81
 800bc72:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800bc76:	f884 3083 	strb.w	r3, [r4, #131]	@ 0x83
 800bc7a:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800bc7e:	f884 6082 	strb.w	r6, [r4, #130]	@ 0x82
 800bc82:	f104 0371 	add.w	r3, r4, #113	@ 0x71
 800bc86:	f104 0284 	add.w	r2, r4, #132	@ 0x84
 800bc8a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bc8e:	7499      	strb	r1, [r3, #18]
 800bc90:	429a      	cmp	r2, r3
 800bc92:	d1fa      	bne.n	800bc8a <RDMDeviceResponder::Init()+0xf2>
 800bc94:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800bc98:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800bc9c:	4413      	add	r3, r2
 800bc9e:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800bca2:	b007      	add	sp, #28
 800bca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bca6:	f810 5b01 	ldrb.w	r5, [r0], #1
 800bcaa:	77c5      	strb	r5, [r0, #31]
 800bcac:	e783      	b.n	800bbb6 <RDMDeviceResponder::Init()+0x1e>
 800bcae:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800bcb2:	440b      	add	r3, r1
 800bcb4:	b29b      	uxth	r3, r3
 800bcb6:	e7a2      	b.n	800bbfe <RDMDeviceResponder::Init()+0x66>
 800bcb8:	682b      	ldr	r3, [r5, #0]
 800bcba:	4628      	mov	r0, r5
 800bcbc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bcbe:	4798      	blx	r3
 800bcc0:	0a00      	lsrs	r0, r0, #8
 800bcc2:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800bcc6:	682b      	ldr	r3, [r5, #0]
 800bcc8:	4628      	mov	r0, r5
 800bcca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bccc:	4798      	blx	r3
 800bcce:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800bcd2:	682b      	ldr	r3, [r5, #0]
 800bcd4:	4628      	mov	r0, r5
 800bcd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bcd8:	4798      	blx	r3
 800bcda:	0a00      	lsrs	r0, r0, #8
 800bcdc:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800bce0:	682b      	ldr	r3, [r5, #0]
 800bce2:	4628      	mov	r0, r5
 800bce4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bce6:	4798      	blx	r3
 800bce8:	e7bf      	b.n	800bc6a <RDMDeviceResponder::Init()+0xd2>
 800bcea:	bf00      	nop
 800bcec:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800bcf0 <RDMDeviceResponder::Print()>:
 800bcf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bcf2:	4604      	mov	r4, r0
 800bcf4:	3004      	adds	r0, #4
 800bcf6:	f000 ffcd 	bl	800cc94 <RDMDevice::Print()>
 800bcfa:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800bcfe:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800bd00:	481b      	ldr	r0, [pc, #108]	@ (800bd70 <RDMDeviceResponder::Print()+0x80>)
 800bd02:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800bd06:	3b01      	subs	r3, #1
 800bd08:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 800bd0c:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 800bd0e:	f00c f81a 	bl	8017d46 <puts>
 800bd12:	f894 2072 	ldrb.w	r2, [r4, #114]	@ 0x72
 800bd16:	f894 1071 	ldrb.w	r1, [r4, #113]	@ 0x71
 800bd1a:	4816      	ldr	r0, [pc, #88]	@ (800bd74 <RDMDeviceResponder::Print()+0x84>)
 800bd1c:	f00b ffbe 	bl	8017c9c <printf>
 800bd20:	f8b4 107f 	ldrh.w	r1, [r4, #127]	@ 0x7f
 800bd24:	4814      	ldr	r0, [pc, #80]	@ (800bd78 <RDMDeviceResponder::Print()+0x88>)
 800bd26:	ba49      	rev16	r1, r1
 800bd28:	b289      	uxth	r1, r1
 800bd2a:	f00b ffb7 	bl	8017c9c <printf>
 800bd2e:	f8b4 107b 	ldrh.w	r1, [r4, #123]	@ 0x7b
 800bd32:	4812      	ldr	r0, [pc, #72]	@ (800bd7c <RDMDeviceResponder::Print()+0x8c>)
 800bd34:	ba49      	rev16	r1, r1
 800bd36:	b289      	uxth	r1, r1
 800bd38:	3508      	adds	r5, #8
 800bd3a:	f00b ffaf 	bl	8017c9c <printf>
 800bd3e:	9500      	str	r5, [sp, #0]
 800bd40:	f894 207e 	ldrb.w	r2, [r4, #126]	@ 0x7e
 800bd44:	f894 107d 	ldrb.w	r1, [r4, #125]	@ 0x7d
 800bd48:	480d      	ldr	r0, [pc, #52]	@ (800bd80 <RDMDeviceResponder::Print()+0x90>)
 800bd4a:	b2f3      	uxtb	r3, r6
 800bd4c:	f00b ffa6 	bl	8017c9c <printf>
 800bd50:	f8b4 1081 	ldrh.w	r1, [r4, #129]	@ 0x81
 800bd54:	480b      	ldr	r0, [pc, #44]	@ (800bd84 <RDMDeviceResponder::Print()+0x94>)
 800bd56:	ba49      	rev16	r1, r1
 800bd58:	b289      	uxth	r1, r1
 800bd5a:	f00b ff9f 	bl	8017c9c <printf>
 800bd5e:	f894 1083 	ldrb.w	r1, [r4, #131]	@ 0x83
 800bd62:	4809      	ldr	r0, [pc, #36]	@ (800bd88 <RDMDeviceResponder::Print()+0x98>)
 800bd64:	b002      	add	sp, #8
 800bd66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd6a:	f00b bf97 	b.w	8017c9c <printf>
 800bd6e:	bf00      	nop
 800bd70:	08018b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, pc}
 800bd74:	08018b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, pc}
 800bd78:	08018b70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, pc}
 800bd7c:	08018b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, pc}
 800bd80:	08018ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, pc}
 800bd84:	08018bbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, fp, pc}
 800bd88:	08018bd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, fp, pc}

0800bd8c <memcpy.isra.0>:
 800bd8c:	440a      	add	r2, r1
 800bd8e:	4291      	cmp	r1, r2
 800bd90:	d100      	bne.n	800bd94 <memcpy.isra.0+0x8>
 800bd92:	4770      	bx	lr
 800bd94:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bd98:	f800 3b01 	strb.w	r3, [r0], #1
 800bd9c:	e7f7      	b.n	800bd8e <memcpy.isra.0+0x2>

0800bd9e <memcmp>:
 800bd9e:	b510      	push	{r4, lr}
 800bda0:	3901      	subs	r1, #1
 800bda2:	4402      	add	r2, r0
 800bda4:	4290      	cmp	r0, r2
 800bda6:	d101      	bne.n	800bdac <memcmp+0xe>
 800bda8:	2000      	movs	r0, #0
 800bdaa:	e005      	b.n	800bdb8 <memcmp+0x1a>
 800bdac:	7803      	ldrb	r3, [r0, #0]
 800bdae:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800bdb2:	42a3      	cmp	r3, r4
 800bdb4:	d001      	beq.n	800bdba <memcmp+0x1c>
 800bdb6:	1b18      	subs	r0, r3, r4
 800bdb8:	bd10      	pop	{r4, pc}
 800bdba:	3001      	adds	r0, #1
 800bdbc:	e7f2      	b.n	800bda4 <memcmp+0x6>
	...

0800bdc0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800bdc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdc4:	790c      	ldrb	r4, [r1, #4]
 800bdc6:	f890 3052 	ldrb.w	r3, [r0, #82]	@ 0x52
 800bdca:	6809      	ldr	r1, [r1, #0]
 800bdcc:	2c20      	cmp	r4, #32
 800bdce:	b086      	sub	sp, #24
 800bdd0:	4605      	mov	r5, r0
 800bdd2:	bf28      	it	cs
 800bdd4:	2420      	movcs	r4, #32
 800bdd6:	b313      	cbz	r3, 800be1e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x5e>
 800bdd8:	f100 0820 	add.w	r8, r0, #32
 800bddc:	4622      	mov	r2, r4
 800bdde:	4640      	mov	r0, r8
 800bde0:	f7ff ffd4 	bl	800bd8c <memcpy.isra.0>
 800bde4:	2700      	movs	r7, #0
 800bde6:	f885 4050 	strb.w	r4, [r5, #80]	@ 0x50
 800bdea:	2501      	movs	r5, #1
 800bdec:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800bdf0:	4e0e      	ldr	r6, [pc, #56]	@ (800be2c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6c>)
 800bdf2:	9400      	str	r4, [sp, #0]
 800bdf4:	6830      	ldr	r0, [r6, #0]
 800bdf6:	f88d 4017 	strb.w	r4, [sp, #23]
 800bdfa:	4643      	mov	r3, r8
 800bdfc:	2204      	movs	r2, #4
 800bdfe:	2109      	movs	r1, #9
 800be00:	f008 f9ec 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800be04:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800be08:	9500      	str	r5, [sp, #0]
 800be0a:	6830      	ldr	r0, [r6, #0]
 800be0c:	f10d 0317 	add.w	r3, sp, #23
 800be10:	2224      	movs	r2, #36	@ 0x24
 800be12:	2109      	movs	r1, #9
 800be14:	f008 f9e2 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800be18:	b006      	add	sp, #24
 800be1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be1e:	4622      	mov	r2, r4
 800be20:	f7ff ffb4 	bl	800bd8c <memcpy.isra.0>
 800be24:	f885 4051 	strb.w	r4, [r5, #81]	@ 0x51
 800be28:	e7f6      	b.n	800be18 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x58>
 800be2a:	bf00      	nop
 800be2c:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800be30 <RDMDeviceResponder::SetFactoryDefaults()>:
 800be30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800be32:	4604      	mov	r4, r0
 800be34:	4669      	mov	r1, sp
 800be36:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800be3a:	f88d 3004 	strb.w	r3, [sp, #4]
 800be3e:	3004      	adds	r0, #4
 800be40:	9000      	str	r0, [sp, #0]
 800be42:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800be46:	f7ff ffbb 	bl	800bdc0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800be4a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800be4e:	f894 1054 	ldrb.w	r1, [r4, #84]	@ 0x54
 800be52:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800be56:	1b2d      	subs	r5, r5, r4
 800be58:	18a8      	adds	r0, r5, r2
 800be5a:	4288      	cmp	r0, r1
 800be5c:	d361      	bcc.n	800bf22 <RDMDeviceResponder::SetFactoryDefaults()+0xf2>
 800be5e:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800be62:	2301      	movs	r3, #1
 800be64:	f884 307d 	strb.w	r3, [r4, #125]	@ 0x7d
 800be68:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800be6a:	681b      	ldr	r3, [r3, #0]
 800be6c:	685d      	ldr	r5, [r3, #4]
 800be6e:	b1f5      	cbz	r5, 800beae <RDMDeviceResponder::SetFactoryDefaults()+0x7e>
 800be70:	682b      	ldr	r3, [r5, #0]
 800be72:	4628      	mov	r0, r5
 800be74:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800be76:	4798      	blx	r3
 800be78:	0a00      	lsrs	r0, r0, #8
 800be7a:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800be7e:	682b      	ldr	r3, [r5, #0]
 800be80:	4628      	mov	r0, r5
 800be82:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800be84:	4798      	blx	r3
 800be86:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800be8a:	682b      	ldr	r3, [r5, #0]
 800be8c:	4628      	mov	r0, r5
 800be8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800be90:	4798      	blx	r3
 800be92:	0a00      	lsrs	r0, r0, #8
 800be94:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800be98:	682b      	ldr	r3, [r5, #0]
 800be9a:	4628      	mov	r0, r5
 800be9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800be9e:	4798      	blx	r3
 800bea0:	6823      	ldr	r3, [r4, #0]
 800bea2:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800bea6:	689b      	ldr	r3, [r3, #8]
 800bea8:	4629      	mov	r1, r5
 800beaa:	4620      	mov	r0, r4
 800beac:	4798      	blx	r3
 800beae:	f8b4 509c 	ldrh.w	r5, [r4, #156]	@ 0x9c
 800beb2:	1e6b      	subs	r3, r5, #1
 800beb4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800beb8:	d217      	bcs.n	800beea <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800beba:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800bebe:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800bec0:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800bec4:	3b01      	subs	r3, #1
 800bec6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800beca:	6858      	ldr	r0, [r3, #4]
 800becc:	b168      	cbz	r0, 800beea <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800bece:	6803      	ldr	r3, [r0, #0]
 800bed0:	4629      	mov	r1, r5
 800bed2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bed4:	4798      	blx	r3
 800bed6:	b120      	cbz	r0, 800bee2 <RDMDeviceResponder::SetFactoryDefaults()+0xb2>
 800bed8:	0a2b      	lsrs	r3, r5, #8
 800beda:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800bede:	f884 5080 	strb.w	r5, [r4, #128]	@ 0x80
 800bee2:	6823      	ldr	r3, [r4, #0]
 800bee4:	4620      	mov	r0, r4
 800bee6:	68db      	ldr	r3, [r3, #12]
 800bee8:	4798      	blx	r3
 800beea:	f104 0171 	add.w	r1, r4, #113	@ 0x71
 800beee:	2213      	movs	r2, #19
 800bef0:	f104 0084 	add.w	r0, r4, #132	@ 0x84
 800bef4:	f7ff ff4a 	bl	800bd8c <memcpy.isra.0>
 800bef8:	2601      	movs	r6, #1
 800befa:	2100      	movs	r1, #0
 800befc:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 800bf00:	4299      	cmp	r1, r3
 800bf02:	d313      	bcc.n	800bf2c <RDMDeviceResponder::SetFactoryDefaults()+0xfc>
 800bf04:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800bf08:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800bf0c:	4413      	add	r3, r2
 800bf0e:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800bf12:	2301      	movs	r3, #1
 800bf14:	f884 3099 	strb.w	r3, [r4, #153]	@ 0x99
 800bf18:	b002      	add	sp, #8
 800bf1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf1e:	f7fe b8d1 	b.w	800a0c4 <rdm::device::responder::factorydefaults()>
 800bf22:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bf26:	4403      	add	r3, r0
 800bf28:	b29b      	uxth	r3, r3
 800bf2a:	e795      	b.n	800be58 <RDMDeviceResponder::SetFactoryDefaults()+0x28>
 800bf2c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800bf2e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bf32:	b193      	cbz	r3, 800bf5a <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800bf34:	7a1a      	ldrb	r2, [r3, #8]
 800bf36:	b982      	cbnz	r2, 800bf5a <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800bf38:	f103 0015 	add.w	r0, r3, #21
 800bf3c:	f890 5023 	ldrb.w	r5, [r0, #35]	@ 0x23
 800bf40:	b125      	cbz	r5, 800bf4c <RDMDeviceResponder::SetFactoryDefaults()+0x11c>
 800bf42:	3201      	adds	r2, #1
 800bf44:	2a20      	cmp	r2, #32
 800bf46:	f800 5f01 	strb.w	r5, [r0, #1]!
 800bf4a:	d1f7      	bne.n	800bf3c <RDMDeviceResponder::SetFactoryDefaults()+0x10c>
 800bf4c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800bf50:	899a      	ldrh	r2, [r3, #12]
 800bf52:	825a      	strh	r2, [r3, #18]
 800bf54:	7b9a      	ldrb	r2, [r3, #14]
 800bf56:	751a      	strb	r2, [r3, #20]
 800bf58:	721e      	strb	r6, [r3, #8]
 800bf5a:	3101      	adds	r1, #1
 800bf5c:	e7ce      	b.n	800befc <RDMDeviceResponder::SetFactoryDefaults()+0xcc>

0800bf5e <RDMHandler::RDMHandler(bool)>:
 800bf5e:	2200      	movs	r2, #0
 800bf60:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800bf64:	7001      	strb	r1, [r0, #0]
 800bf66:	7042      	strb	r2, [r0, #1]
 800bf68:	4770      	bx	lr

0800bf6a <RDMHandler::HandleString(char const*, unsigned long)>:
 800bf6a:	6883      	ldr	r3, [r0, #8]
 800bf6c:	f803 2f17 	strb.w	r2, [r3, #23]!
 800bf70:	440a      	add	r2, r1
 800bf72:	4291      	cmp	r1, r2
 800bf74:	d100      	bne.n	800bf78 <RDMHandler::HandleString(char const*, unsigned long)+0xe>
 800bf76:	4770      	bx	lr
 800bf78:	f811 0b01 	ldrb.w	r0, [r1], #1
 800bf7c:	f803 0f01 	strb.w	r0, [r3, #1]!
 800bf80:	e7f7      	b.n	800bf72 <RDMHandler::HandleString(char const*, unsigned long)+0x8>
	...

0800bf84 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800bf84:	b570      	push	{r4, r5, r6, lr}
 800bf86:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800bf8a:	25cc      	movs	r5, #204	@ 0xcc
 800bf8c:	701d      	strb	r5, [r3, #0]
 800bf8e:	7825      	ldrb	r5, [r4, #0]
 800bf90:	705d      	strb	r5, [r3, #1]
 800bf92:	7ba5      	ldrb	r5, [r4, #14]
 800bf94:	73dd      	strb	r5, [r3, #15]
 800bf96:	2500      	movs	r5, #0
 800bf98:	745d      	strb	r5, [r3, #17]
 800bf9a:	7c65      	ldrb	r5, [r4, #17]
 800bf9c:	749d      	strb	r5, [r3, #18]
 800bf9e:	7ca5      	ldrb	r5, [r4, #18]
 800bfa0:	74dd      	strb	r5, [r3, #19]
 800bfa2:	7ce5      	ldrb	r5, [r4, #19]
 800bfa4:	3501      	adds	r5, #1
 800bfa6:	751d      	strb	r5, [r3, #20]
 800bfa8:	7d25      	ldrb	r5, [r4, #20]
 800bfaa:	755d      	strb	r5, [r3, #21]
 800bfac:	7d65      	ldrb	r5, [r4, #21]
 800bfae:	759d      	strb	r5, [r3, #22]
 800bfb0:	b119      	cbz	r1, 800bfba <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800bfb2:	1e4d      	subs	r5, r1, #1
 800bfb4:	2d01      	cmp	r5, #1
 800bfb6:	d91f      	bls.n	800bff8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x74>
 800bfb8:	bd70      	pop	{r4, r5, r6, pc}
 800bfba:	7dda      	ldrb	r2, [r3, #23]
 800bfbc:	7419      	strb	r1, [r3, #16]
 800bfbe:	3218      	adds	r2, #24
 800bfc0:	709a      	strb	r2, [r3, #2]
 800bfc2:	4a14      	ldr	r2, [pc, #80]	@ (800c014 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x90>)
 800bfc4:	6812      	ldr	r2, [r2, #0]
 800bfc6:	1de1      	adds	r1, r4, #7
 800bfc8:	1c9d      	adds	r5, r3, #2
 800bfca:	3249      	adds	r2, #73	@ 0x49
 800bfcc:	340d      	adds	r4, #13
 800bfce:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800bfd2:	f805 6f01 	strb.w	r6, [r5, #1]!
 800bfd6:	42a1      	cmp	r1, r4
 800bfd8:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800bfdc:	71ae      	strb	r6, [r5, #6]
 800bfde:	d1f6      	bne.n	800bfce <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800bfe0:	2200      	movs	r2, #0
 800bfe2:	6884      	ldr	r4, [r0, #8]
 800bfe4:	7899      	ldrb	r1, [r3, #2]
 800bfe6:	4613      	mov	r3, r2
 800bfe8:	4291      	cmp	r1, r2
 800bfea:	d80e      	bhi.n	800c00a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x86>
 800bfec:	0a1d      	lsrs	r5, r3, #8
 800bfee:	54a5      	strb	r5, [r4, r2]
 800bff0:	6882      	ldr	r2, [r0, #8]
 800bff2:	440a      	add	r2, r1
 800bff4:	7053      	strb	r3, [r2, #1]
 800bff6:	e7df      	b.n	800bfb8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800bff8:	7419      	strb	r1, [r3, #16]
 800bffa:	2102      	movs	r1, #2
 800bffc:	251a      	movs	r5, #26
 800bffe:	75d9      	strb	r1, [r3, #23]
 800c000:	0a11      	lsrs	r1, r2, #8
 800c002:	709d      	strb	r5, [r3, #2]
 800c004:	7619      	strb	r1, [r3, #24]
 800c006:	765a      	strb	r2, [r3, #25]
 800c008:	e7db      	b.n	800bfc2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800c00a:	5ca5      	ldrb	r5, [r4, r2]
 800c00c:	442b      	add	r3, r5
 800c00e:	b29b      	uxth	r3, r3
 800c010:	3201      	adds	r2, #1
 800c012:	e7e9      	b.n	800bfe8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800c014:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c018 <RDMHandler::RespondMessageAck()>:
 800c018:	2200      	movs	r2, #0
 800c01a:	4611      	mov	r1, r2
 800c01c:	f7ff bfb2 	b.w	800bf84 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800c020 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800c020:	4b1c      	ldr	r3, [pc, #112]	@ (800c094 <RDMHandler::GetDeviceInfo(unsigned short)+0x74>)
 800c022:	b510      	push	{r4, lr}
 800c024:	681b      	ldr	r3, [r3, #0]
 800c026:	4604      	mov	r4, r0
 800c028:	b351      	cbz	r1, 800c080 <RDMHandler::GetDeviceInfo(unsigned short)+0x60>
 800c02a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c02e:	3901      	subs	r1, #1
 800c030:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800c032:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800c036:	8a11      	ldrh	r1, [r2, #16]
 800c038:	0a09      	lsrs	r1, r1, #8
 800c03a:	f883 108e 	strb.w	r1, [r3, #142]	@ 0x8e
 800c03e:	8a11      	ldrh	r1, [r2, #16]
 800c040:	f883 108f 	strb.w	r1, [r3, #143]	@ 0x8f
 800c044:	7d11      	ldrb	r1, [r2, #20]
 800c046:	f883 1090 	strb.w	r1, [r3, #144]	@ 0x90
 800c04a:	7d51      	ldrb	r1, [r2, #21]
 800c04c:	f883 1091 	strb.w	r1, [r3, #145]	@ 0x91
 800c050:	8a51      	ldrh	r1, [r2, #18]
 800c052:	0a09      	lsrs	r1, r1, #8
 800c054:	f883 1092 	strb.w	r1, [r3, #146]	@ 0x92
 800c058:	8a51      	ldrh	r1, [r2, #18]
 800c05a:	f883 1093 	strb.w	r1, [r3, #147]	@ 0x93
 800c05e:	f892 2037 	ldrb.w	r2, [r2, #55]	@ 0x37
 800c062:	f883 2096 	strb.w	r2, [r3, #150]	@ 0x96
 800c066:	f103 0184 	add.w	r1, r3, #132	@ 0x84
 800c06a:	68a0      	ldr	r0, [r4, #8]
 800c06c:	2213      	movs	r2, #19
 800c06e:	75c2      	strb	r2, [r0, #23]
 800c070:	3018      	adds	r0, #24
 800c072:	f7ff fe8b 	bl	800bd8c <memcpy.isra.0>
 800c076:	4620      	mov	r0, r4
 800c078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c07c:	f7ff bfcc 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c080:	f8b3 2044 	ldrh.w	r2, [r3, #68]	@ 0x44
 800c084:	f883 2076 	strb.w	r2, [r3, #118]	@ 0x76
 800c088:	0a11      	lsrs	r1, r2, #8
 800c08a:	f883 1075 	strb.w	r1, [r3, #117]	@ 0x75
 800c08e:	f103 0171 	add.w	r1, r3, #113	@ 0x71
 800c092:	e7ea      	b.n	800c06a <RDMHandler::GetDeviceInfo(unsigned short)+0x4a>
 800c094:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c098 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800c098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c09c:	6887      	ldr	r7, [r0, #8]
 800c09e:	2301      	movs	r3, #1
 800c0a0:	75fb      	strb	r3, [r7, #23]
 800c0a2:	4b2c      	ldr	r3, [pc, #176]	@ (800c154 <RDMHandler::GetFactoryDefaults(unsigned short)+0xbc>)
 800c0a4:	681b      	ldr	r3, [r3, #0]
 800c0a6:	f893 1099 	ldrb.w	r1, [r3, #153]	@ 0x99
 800c0aa:	b309      	cbz	r1, 800c0f0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x58>
 800c0ac:	f06f 0e22 	mvn.w	lr, #34	@ 0x22
 800c0b0:	f8b3 5048 	ldrh.w	r5, [r3, #72]	@ 0x48
 800c0b4:	f893 2055 	ldrb.w	r2, [r3, #85]	@ 0x55
 800c0b8:	f893 c054 	ldrb.w	ip, [r3, #84]	@ 0x54
 800c0bc:	f103 0423 	add.w	r4, r3, #35	@ 0x23
 800c0c0:	ebae 0e03 	sub.w	lr, lr, r3
 800c0c4:	eb0e 0604 	add.w	r6, lr, r4
 800c0c8:	45b4      	cmp	ip, r6
 800c0ca:	d813      	bhi.n	800c0f4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x5c>
 800c0cc:	4295      	cmp	r5, r2
 800c0ce:	d130      	bne.n	800c132 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800c0d0:	f893 2080 	ldrb.w	r2, [r3, #128]	@ 0x80
 800c0d4:	f893 507d 	ldrb.w	r5, [r3, #125]	@ 0x7d
 800c0d8:	f8b3 409a 	ldrh.w	r4, [r3, #154]	@ 0x9a
 800c0dc:	442a      	add	r2, r5
 800c0de:	4294      	cmp	r4, r2
 800c0e0:	d127      	bne.n	800c132 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800c0e2:	f8b3 c064 	ldrh.w	ip, [r3, #100]	@ 0x64
 800c0e6:	2500      	movs	r5, #0
 800c0e8:	f06f 0e14 	mvn.w	lr, #20
 800c0ec:	4565      	cmp	r5, ip
 800c0ee:	d306      	bcc.n	800c0fe <RDMHandler::GetFactoryDefaults(unsigned short)+0x66>
 800c0f0:	460b      	mov	r3, r1
 800c0f2:	e022      	b.n	800c13a <RDMHandler::GetFactoryDefaults(unsigned short)+0xa2>
 800c0f4:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 800c0f8:	4432      	add	r2, r6
 800c0fa:	b292      	uxth	r2, r2
 800c0fc:	e7e2      	b.n	800c0c4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800c0fe:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800c100:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800c104:	b31a      	cbz	r2, 800c14e <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800c106:	7a14      	ldrb	r4, [r2, #8]
 800c108:	b19c      	cbz	r4, 800c132 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800c10a:	7d16      	ldrb	r6, [r2, #20]
 800c10c:	8a54      	ldrh	r4, [r2, #18]
 800c10e:	f8b2 800a 	ldrh.w	r8, [r2, #10]
 800c112:	f892 9036 	ldrb.w	r9, [r2, #54]	@ 0x36
 800c116:	4434      	add	r4, r6
 800c118:	b2a4      	uxth	r4, r4
 800c11a:	f102 0615 	add.w	r6, r2, #21
 800c11e:	ebae 0a02 	sub.w	sl, lr, r2
 800c122:	eb0a 0b06 	add.w	fp, sl, r6
 800c126:	45cb      	cmp	fp, r9
 800c128:	d30c      	bcc.n	800c144 <RDMHandler::GetFactoryDefaults(unsigned short)+0xac>
 800c12a:	45a0      	cmp	r8, r4
 800c12c:	d00f      	beq.n	800c14e <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800c12e:	2100      	movs	r1, #0
 800c130:	7211      	strb	r1, [r2, #8]
 800c132:	2200      	movs	r2, #0
 800c134:	f883 2099 	strb.w	r2, [r3, #153]	@ 0x99
 800c138:	4613      	mov	r3, r2
 800c13a:	763b      	strb	r3, [r7, #24]
 800c13c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c140:	f7ff bf6a 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c144:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 800c148:	445c      	add	r4, fp
 800c14a:	b2a4      	uxth	r4, r4
 800c14c:	e7e9      	b.n	800c122 <RDMHandler::GetFactoryDefaults(unsigned short)+0x8a>
 800c14e:	3501      	adds	r5, #1
 800c150:	e7cc      	b.n	800c0ec <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800c152:	bf00      	nop
 800c154:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c158 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800c158:	b510      	push	{r4, lr}
 800c15a:	4905      	ldr	r1, [pc, #20]	@ (800c170 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800c15c:	4604      	mov	r4, r0
 800c15e:	220e      	movs	r2, #14
 800c160:	f7ff ff03 	bl	800bf6a <RDMHandler::HandleString(char const*, unsigned long)>
 800c164:	4620      	mov	r0, r4
 800c166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c16a:	f7ff bf55 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c16e:	bf00      	nop
 800c170:	080189c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, pc}

0800c174 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800c174:	4b0d      	ldr	r3, [pc, #52]	@ (800c1ac <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800c176:	b510      	push	{r4, lr}
 800c178:	681b      	ldr	r3, [r3, #0]
 800c17a:	4604      	mov	r4, r0
 800c17c:	b189      	cbz	r1, 800c1a2 <RDMHandler::GetDeviceLabel(unsigned short)+0x2e>
 800c17e:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c182:	3901      	subs	r1, #1
 800c184:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c186:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c18a:	f893 2036 	ldrb.w	r2, [r3, #54]	@ 0x36
 800c18e:	f103 0116 	add.w	r1, r3, #22
 800c192:	4620      	mov	r0, r4
 800c194:	f7ff fee9 	bl	800bf6a <RDMHandler::HandleString(char const*, unsigned long)>
 800c198:	4620      	mov	r0, r4
 800c19a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c19e:	f7ff bf3b 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c1a2:	f893 2054 	ldrb.w	r2, [r3, #84]	@ 0x54
 800c1a6:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 800c1aa:	e7f2      	b.n	800c192 <RDMHandler::GetDeviceLabel(unsigned short)+0x1e>
 800c1ac:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c1b0 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800c1b0:	6883      	ldr	r3, [r0, #8]
 800c1b2:	2201      	movs	r2, #1
 800c1b4:	75da      	strb	r2, [r3, #23]
 800c1b6:	4a02      	ldr	r2, [pc, #8]	@ (800c1c0 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800c1b8:	7812      	ldrb	r2, [r2, #0]
 800c1ba:	761a      	strb	r2, [r3, #24]
 800c1bc:	f7ff bf2c 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c1c0:	2000c775 	andcs	ip, r0, r5, ror r7

0800c1c4 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800c1c4:	4b0a      	ldr	r3, [pc, #40]	@ (800c1f0 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800c1c6:	b510      	push	{r4, lr}
 800c1c8:	4619      	mov	r1, r3
 800c1ca:	4604      	mov	r4, r0
 800c1cc:	461a      	mov	r2, r3
 800c1ce:	3301      	adds	r3, #1
 800c1d0:	7810      	ldrb	r0, [r2, #0]
 800c1d2:	2800      	cmp	r0, #0
 800c1d4:	d1fa      	bne.n	800c1cc <RDMHandler::GetManufacturerLabel(unsigned short)+0x8>
 800c1d6:	1a52      	subs	r2, r2, r1
 800c1d8:	2a20      	cmp	r2, #32
 800c1da:	4620      	mov	r0, r4
 800c1dc:	4904      	ldr	r1, [pc, #16]	@ (800c1f0 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800c1de:	bf28      	it	cs
 800c1e0:	2220      	movcs	r2, #32
 800c1e2:	f7ff fec2 	bl	800bf6a <RDMHandler::HandleString(char const*, unsigned long)>
 800c1e6:	4620      	mov	r0, r4
 800c1e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1ec:	f7ff bf14 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c1f0:	0801bac3 	stmdaeq	r1, {r0, r1, r6, r7, r9, fp, ip, sp, pc}

0800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>:
 800c1f4:	460a      	mov	r2, r1
 800c1f6:	2102      	movs	r1, #2
 800c1f8:	f7ff bec4 	b.w	800bf84 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800c1fc <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800c1fc:	b510      	push	{r4, lr}
 800c1fe:	6843      	ldr	r3, [r0, #4]
 800c200:	7d9a      	ldrb	r2, [r3, #22]
 800c202:	2a01      	cmp	r2, #1
 800c204:	4604      	mov	r4, r0
 800c206:	d004      	beq.n	800c212 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800c208:	2101      	movs	r1, #1
 800c20a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c20e:	f7ff bff1 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c212:	7ddb      	ldrb	r3, [r3, #23]
 800c214:	2b01      	cmp	r3, #1
 800c216:	d003      	beq.n	800c220 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800c218:	2bff      	cmp	r3, #255	@ 0xff
 800c21a:	d001      	beq.n	800c220 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800c21c:	2106      	movs	r1, #6
 800c21e:	e7f4      	b.n	800c20a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800c220:	68a2      	ldr	r2, [r4, #8]
 800c222:	2100      	movs	r1, #0
 800c224:	2bff      	cmp	r3, #255	@ 0xff
 800c226:	75d1      	strb	r1, [r2, #23]
 800c228:	d102      	bne.n	800c230 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800c22a:	2104      	movs	r1, #4
 800c22c:	4620      	mov	r0, r4
 800c22e:	e7ec      	b.n	800c20a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800c230:	4b03      	ldr	r3, [pc, #12]	@ (800c240 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800c232:	6818      	ldr	r0, [r3, #0]
 800c234:	f009 f9fe 	bl	8015634 <Hardware::Reboot()>
 800c238:	2800      	cmp	r0, #0
 800c23a:	d0f6      	beq.n	800c22a <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800c23c:	bd10      	pop	{r4, pc}
 800c23e:	bf00      	nop
 800c240:	2000cdc0 	andcs	ip, r0, r0, asr #27

0800c244 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800c244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c246:	6843      	ldr	r3, [r0, #4]
 800c248:	7d9a      	ldrb	r2, [r3, #22]
 800c24a:	2a01      	cmp	r2, #1
 800c24c:	4604      	mov	r4, r0
 800c24e:	460d      	mov	r5, r1
 800c250:	d004      	beq.n	800c25c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800c252:	2101      	movs	r1, #1
 800c254:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c258:	f7ff bfcc 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c25c:	7ddb      	ldrb	r3, [r3, #23]
 800c25e:	2b01      	cmp	r3, #1
 800c260:	d901      	bls.n	800c266 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800c262:	2106      	movs	r1, #6
 800c264:	e7f6      	b.n	800c254 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800c266:	4912      	ldr	r1, [pc, #72]	@ (800c2b0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800c268:	4f12      	ldr	r7, [pc, #72]	@ (800c2b4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800c26a:	680e      	ldr	r6, [r1, #0]
 800c26c:	4912      	ldr	r1, [pc, #72]	@ (800c2b8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800c26e:	6808      	ldr	r0, [r1, #0]
 800c270:	4912      	ldr	r1, [pc, #72]	@ (800c2bc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800c272:	b98b      	cbnz	r3, 800c298 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x54>
 800c274:	700b      	strb	r3, [r1, #0]
 800c276:	461a      	mov	r2, r3
 800c278:	2102      	movs	r1, #2
 800c27a:	f008 ffdb 	bl	8015234 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c27e:	7839      	ldrb	r1, [r7, #0]
 800c280:	b111      	cbz	r1, 800c288 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800c282:	4630      	mov	r0, r6
 800c284:	f000 f9a7 	bl	800c5d6 <RDMIdentify::Off(rdm::identify::Mode)>
 800c288:	b98d      	cbnz	r5, 800c2ae <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6a>
 800c28a:	68a3      	ldr	r3, [r4, #8]
 800c28c:	75dd      	strb	r5, [r3, #23]
 800c28e:	4620      	mov	r0, r4
 800c290:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c294:	f7ff bec0 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c298:	700a      	strb	r2, [r1, #0]
 800c29a:	2104      	movs	r1, #4
 800c29c:	f008 ffca 	bl	8015234 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c2a0:	7839      	ldrb	r1, [r7, #0]
 800c2a2:	2900      	cmp	r1, #0
 800c2a4:	d0f0      	beq.n	800c288 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800c2a6:	4630      	mov	r0, r6
 800c2a8:	f000 f994 	bl	800c5d4 <RDMIdentify::On(rdm::identify::Mode)>
 800c2ac:	e7ec      	b.n	800c288 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800c2ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c2b0:	2000c770 	andcs	ip, r0, r0, ror r7
 800c2b4:	2000c774 	andcs	ip, r0, r4, ror r7
 800c2b8:	2000cdc0 	andcs	ip, r0, r0, asr #27
 800c2bc:	2000c775 	andcs	ip, r0, r5, ror r7

0800c2c0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800c2c0:	b538      	push	{r3, r4, r5, lr}
 800c2c2:	6843      	ldr	r3, [r0, #4]
 800c2c4:	7d9b      	ldrb	r3, [r3, #22]
 800c2c6:	4604      	mov	r4, r0
 800c2c8:	460d      	mov	r5, r1
 800c2ca:	b123      	cbz	r3, 800c2d6 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800c2cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2d0:	2101      	movs	r1, #1
 800c2d2:	f7ff bf8f 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c2d6:	4b06      	ldr	r3, [pc, #24]	@ (800c2f0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800c2d8:	6818      	ldr	r0, [r3, #0]
 800c2da:	f7ff fda9 	bl	800be30 <RDMDeviceResponder::SetFactoryDefaults()>
 800c2de:	b935      	cbnz	r5, 800c2ee <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800c2e0:	68a3      	ldr	r3, [r4, #8]
 800c2e2:	75dd      	strb	r5, [r3, #23]
 800c2e4:	4620      	mov	r0, r4
 800c2e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2ea:	f7ff be95 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c2ee:	bd38      	pop	{r3, r4, r5, pc}
 800c2f0:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c2f4 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800c2f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c2f6:	6843      	ldr	r3, [r0, #4]
 800c2f8:	460d      	mov	r5, r1
 800c2fa:	7d99      	ldrb	r1, [r3, #22]
 800c2fc:	2920      	cmp	r1, #32
 800c2fe:	4604      	mov	r4, r0
 800c300:	d905      	bls.n	800c30e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1a>
 800c302:	2101      	movs	r1, #1
 800c304:	b003      	add	sp, #12
 800c306:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c30a:	f7ff bf73 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c30e:	4817      	ldr	r0, [pc, #92]	@ (800c36c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x78>)
 800c310:	6800      	ldr	r0, [r0, #0]
 800c312:	b302      	cbz	r2, 800c356 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x62>
 800c314:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800c318:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800c31a:	3a01      	subs	r2, #1
 800c31c:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800c320:	b1b9      	cbz	r1, 800c352 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x5e>
 800c322:	3316      	adds	r3, #22
 800c324:	f100 0615 	add.w	r6, r0, #21
 800c328:	2200      	movs	r2, #0
 800c32a:	3201      	adds	r2, #1
 800c32c:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800c330:	f806 7f01 	strb.w	r7, [r6, #1]!
 800c334:	2a20      	cmp	r2, #32
 800c336:	d001      	beq.n	800c33c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800c338:	4291      	cmp	r1, r2
 800c33a:	d8f6      	bhi.n	800c32a <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x36>
 800c33c:	f880 2036 	strb.w	r2, [r0, #54]	@ 0x36
 800c340:	b995      	cbnz	r5, 800c368 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x74>
 800c342:	68a3      	ldr	r3, [r4, #8]
 800c344:	4620      	mov	r0, r4
 800c346:	75dd      	strb	r5, [r3, #23]
 800c348:	b003      	add	sp, #12
 800c34a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c34e:	f7ff be63 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c352:	460a      	mov	r2, r1
 800c354:	e7f2      	b.n	800c33c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800c356:	3317      	adds	r3, #23
 800c358:	f88d 1004 	strb.w	r1, [sp, #4]
 800c35c:	3004      	adds	r0, #4
 800c35e:	4669      	mov	r1, sp
 800c360:	9300      	str	r3, [sp, #0]
 800c362:	f7ff fd2d 	bl	800bdc0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c366:	e7eb      	b.n	800c340 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4c>
 800c368:	b003      	add	sp, #12
 800c36a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c36c:	2000c76c 	andcs	ip, r0, ip, ror #14

0800c370 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800c370:	b4f0      	push	{r4, r5, r6, r7}
 800c372:	4615      	mov	r5, r2
 800c374:	f005 04ef 	and.w	r4, r5, #239	@ 0xef
 800c378:	2c20      	cmp	r4, #32
 800c37a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800c37e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c382:	d003      	beq.n	800c38c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800c384:	2105      	movs	r1, #5
 800c386:	bcf0      	pop	{r4, r5, r6, r7}
 800c388:	f7ff bf34 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c38c:	4c28      	ldr	r4, [pc, #160]	@ (800c430 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>)
 800c38e:	6824      	ldr	r4, [r4, #0]
 800c390:	88a4      	ldrh	r4, [r4, #4]
 800c392:	4294      	cmp	r4, r2
 800c394:	d205      	bcs.n	800c3a2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800c396:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800c39a:	42a2      	cmp	r2, r4
 800c39c:	d001      	beq.n	800c3a2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800c39e:	2109      	movs	r1, #9
 800c3a0:	e7f1      	b.n	800c386 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c3a2:	4c24      	ldr	r4, [pc, #144]	@ (800c434 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc4>)
 800c3a4:	4f24      	ldr	r7, [pc, #144]	@ (800c438 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc8>)
 800c3a6:	f8b4 c000 	ldrh.w	ip, [r4]
 800c3aa:	459c      	cmp	ip, r3
 800c3ac:	d108      	bne.n	800c3c0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x50>
 800c3ae:	f890 c000 	ldrb.w	ip, [r0]
 800c3b2:	7da7      	ldrb	r7, [r4, #22]
 800c3b4:	7de3      	ldrb	r3, [r4, #23]
 800c3b6:	f1bc 0f00 	cmp.w	ip, #0
 800c3ba:	d106      	bne.n	800c3ca <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5a>
 800c3bc:	b93b      	cbnz	r3, 800c3ce <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800c3be:	e002      	b.n	800c3c6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800c3c0:	3418      	adds	r4, #24
 800c3c2:	42bc      	cmp	r4, r7
 800c3c4:	d1ef      	bne.n	800c3a6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800c3c6:	2100      	movs	r1, #0
 800c3c8:	e7dd      	b.n	800c386 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c3ca:	2f00      	cmp	r7, #0
 800c3cc:	d0fb      	beq.n	800c3c6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800c3ce:	2d20      	cmp	r5, #32
 800c3d0:	d11b      	bne.n	800c40a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x9a>
 800c3d2:	bb59      	cbnz	r1, 800c42c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xbc>
 800c3d4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c3d8:	429a      	cmp	r2, r3
 800c3da:	d0e0      	beq.n	800c39e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2e>
 800c3dc:	6863      	ldr	r3, [r4, #4]
 800c3de:	b913      	cbnz	r3, 800c3e6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x76>
 800c3e0:	68a1      	ldr	r1, [r4, #8]
 800c3e2:	07cd      	lsls	r5, r1, #31
 800c3e4:	d5ce      	bpl.n	800c384 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800c3e6:	7d21      	ldrb	r1, [r4, #20]
 800c3e8:	42b1      	cmp	r1, r6
 800c3ea:	d001      	beq.n	800c3f0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x80>
 800c3ec:	2101      	movs	r1, #1
 800c3ee:	e7ca      	b.n	800c386 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c3f0:	68a1      	ldr	r1, [r4, #8]
 800c3f2:	104d      	asrs	r5, r1, #1
 800c3f4:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800c3f8:	07c9      	lsls	r1, r1, #31
 800c3fa:	bf48      	it	mi
 800c3fc:	5941      	ldrmi	r1, [r0, r5]
 800c3fe:	4620      	mov	r0, r4
 800c400:	bf48      	it	mi
 800c402:	58cb      	ldrmi	r3, [r1, r3]
 800c404:	bcf0      	pop	{r4, r5, r6, r7}
 800c406:	4611      	mov	r1, r2
 800c408:	4718      	bx	r3
 800c40a:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800c40e:	f003 0401 	and.w	r4, r3, #1
 800c412:	b90d      	cbnz	r5, 800c418 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xa8>
 800c414:	2c00      	cmp	r4, #0
 800c416:	d0b5      	beq.n	800c384 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800c418:	105e      	asrs	r6, r3, #1
 800c41a:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800c41e:	b10c      	cbz	r4, 800c424 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb4>
 800c420:	5980      	ldr	r0, [r0, r6]
 800c422:	5945      	ldr	r5, [r0, r5]
 800c424:	4618      	mov	r0, r3
 800c426:	462b      	mov	r3, r5
 800c428:	bcf0      	pop	{r4, r5, r6, r7}
 800c42a:	4718      	bx	r3
 800c42c:	bcf0      	pop	{r4, r5, r6, r7}
 800c42e:	4770      	bx	lr
 800c430:	2000c77c 	andcs	ip, r0, ip, ror r7
 800c434:	0801b8c8 	stmdaeq	r1, {r3, r6, r7, fp, ip, sp, pc}
 800c438:	0801baa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp, pc}

0800c43c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800c43c:	23ff      	movs	r3, #255	@ 0xff
 800c43e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c442:	7013      	strb	r3, [r2, #0]
 800c444:	7bcb      	ldrb	r3, [r1, #15]
 800c446:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c44a:	4607      	mov	r7, r0
 800c44c:	468a      	mov	sl, r1
 800c44e:	4614      	mov	r4, r2
 800c450:	2b00      	cmp	r3, #0
 800c452:	d079      	beq.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c454:	7c0b      	ldrb	r3, [r1, #16]
 800c456:	2b00      	cmp	r3, #0
 800c458:	d176      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c45a:	4b58      	ldr	r3, [pc, #352]	@ (800c5bc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800c45c:	1c8e      	adds	r6, r1, #2
 800c45e:	2206      	movs	r2, #6
 800c460:	4957      	ldr	r1, [pc, #348]	@ (800c5c0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800c462:	f8d3 8000 	ldr.w	r8, [r3]
 800c466:	4630      	mov	r0, r6
 800c468:	f7ff fc99 	bl	800bd9e <memcmp>
 800c46c:	f108 094a 	add.w	r9, r8, #74	@ 0x4a
 800c470:	4605      	mov	r5, r0
 800c472:	2800      	cmp	r0, #0
 800c474:	d06b      	beq.n	800c54e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800c476:	4630      	mov	r0, r6
 800c478:	2202      	movs	r2, #2
 800c47a:	4649      	mov	r1, r9
 800c47c:	f7ff fc8f 	bl	800bd9e <memcmp>
 800c480:	4606      	mov	r6, r0
 800c482:	2800      	cmp	r0, #0
 800c484:	d160      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c486:	f10a 0b04 	add.w	fp, sl, #4
 800c48a:	494d      	ldr	r1, [pc, #308]	@ (800c5c0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800c48c:	2204      	movs	r2, #4
 800c48e:	4658      	mov	r0, fp
 800c490:	f7ff fc85 	bl	800bd9e <memcmp>
 800c494:	4605      	mov	r5, r0
 800c496:	2800      	cmp	r0, #0
 800c498:	d059      	beq.n	800c54e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800c49a:	f108 014c 	add.w	r1, r8, #76	@ 0x4c
 800c49e:	2204      	movs	r2, #4
 800c4a0:	4658      	mov	r0, fp
 800c4a2:	f7ff fc7c 	bl	800bd9e <memcmp>
 800c4a6:	fab0 f580 	clz	r5, r0
 800c4aa:	096d      	lsrs	r5, r5, #5
 800c4ac:	4631      	mov	r1, r6
 800c4ae:	f89a 2013 	ldrb.w	r2, [sl, #19]
 800c4b2:	f8ba 3014 	ldrh.w	r3, [sl, #20]
 800c4b6:	b90d      	cbnz	r5, 800c4bc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x80>
 800c4b8:	2900      	cmp	r1, #0
 800c4ba:	d045      	beq.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c4bc:	2a10      	cmp	r2, #16
 800c4be:	d16f      	bne.n	800c5a0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x164>
 800c4c0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c4c4:	d145      	bne.n	800c552 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x116>
 800c4c6:	787b      	ldrb	r3, [r7, #1]
 800c4c8:	2b00      	cmp	r3, #0
 800c4ca:	d13d      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c4cc:	2206      	movs	r2, #6
 800c4ce:	4649      	mov	r1, r9
 800c4d0:	f10a 0017 	add.w	r0, sl, #23
 800c4d4:	f7ff fc63 	bl	800bd9e <memcmp>
 800c4d8:	2800      	cmp	r0, #0
 800c4da:	dc35      	bgt.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c4dc:	2206      	movs	r2, #6
 800c4de:	f10a 011d 	add.w	r1, sl, #29
 800c4e2:	4648      	mov	r0, r9
 800c4e4:	f7ff fc5b 	bl	800bd9e <memcmp>
 800c4e8:	2800      	cmp	r0, #0
 800c4ea:	dc2d      	bgt.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c4ec:	23fe      	movs	r3, #254	@ 0xfe
 800c4ee:	7023      	strb	r3, [r4, #0]
 800c4f0:	7063      	strb	r3, [r4, #1]
 800c4f2:	70a3      	strb	r3, [r4, #2]
 800c4f4:	70e3      	strb	r3, [r4, #3]
 800c4f6:	7123      	strb	r3, [r4, #4]
 800c4f8:	7163      	strb	r3, [r4, #5]
 800c4fa:	71a3      	strb	r3, [r4, #6]
 800c4fc:	23aa      	movs	r3, #170	@ 0xaa
 800c4fe:	71e3      	strb	r3, [r4, #7]
 800c500:	f108 0249 	add.w	r2, r8, #73	@ 0x49
 800c504:	4621      	mov	r1, r4
 800c506:	f108 084f 	add.w	r8, r8, #79	@ 0x4f
 800c50a:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 800c50e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c512:	f060 0055 	orn	r0, r0, #85	@ 0x55
 800c516:	7208      	strb	r0, [r1, #8]
 800c518:	7810      	ldrb	r0, [r2, #0]
 800c51a:	f040 0055 	orr.w	r0, r0, #85	@ 0x55
 800c51e:	7248      	strb	r0, [r1, #9]
 800c520:	7810      	ldrb	r0, [r2, #0]
 800c522:	4542      	cmp	r2, r8
 800c524:	4403      	add	r3, r0
 800c526:	b29b      	uxth	r3, r3
 800c528:	f101 0102 	add.w	r1, r1, #2
 800c52c:	d1ef      	bne.n	800c50e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xd2>
 800c52e:	0a1a      	lsrs	r2, r3, #8
 800c530:	f062 0155 	orn	r1, r2, #85	@ 0x55
 800c534:	f042 0255 	orr.w	r2, r2, #85	@ 0x55
 800c538:	7562      	strb	r2, [r4, #21]
 800c53a:	f063 0255 	orn	r2, r3, #85	@ 0x55
 800c53e:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 800c542:	7521      	strb	r1, [r4, #20]
 800c544:	75a2      	strb	r2, [r4, #22]
 800c546:	75e3      	strb	r3, [r4, #23]
 800c548:	b003      	add	sp, #12
 800c54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c54e:	2101      	movs	r1, #1
 800c550:	e7ad      	b.n	800c4ae <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800c552:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800c556:	d11a      	bne.n	800c58e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x152>
 800c558:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800c55c:	2b00      	cmp	r3, #0
 800c55e:	d1f3      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c560:	707b      	strb	r3, [r7, #1]
 800c562:	2900      	cmp	r1, #0
 800c564:	d1f0      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c566:	2d00      	cmp	r5, #0
 800c568:	d0ee      	beq.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c56a:	2302      	movs	r3, #2
 800c56c:	75e3      	strb	r3, [r4, #23]
 800c56e:	4b15      	ldr	r3, [pc, #84]	@ (800c5c4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x188>)
 800c570:	7661      	strb	r1, [r4, #25]
 800c572:	681b      	ldr	r3, [r3, #0]
 800c574:	7621      	strb	r1, [r4, #24]
 800c576:	889b      	ldrh	r3, [r3, #4]
 800c578:	3b00      	subs	r3, #0
 800c57a:	bf18      	it	ne
 800c57c:	2301      	movne	r3, #1
 800c57e:	005b      	lsls	r3, r3, #1
 800c580:	4638      	mov	r0, r7
 800c582:	7663      	strb	r3, [r4, #25]
 800c584:	b003      	add	sp, #12
 800c586:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c58a:	f7ff bd45 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c58e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c592:	d1d9      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c594:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800c598:	2b00      	cmp	r3, #0
 800c59a:	d1d5      	bne.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c59c:	2301      	movs	r3, #1
 800c59e:	e7df      	b.n	800c560 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x124>
 800c5a0:	f8ba 0011 	ldrh.w	r0, [sl, #17]
 800c5a4:	ba40      	rev16	r0, r0
 800c5a6:	b280      	uxth	r0, r0
 800c5a8:	9001      	str	r0, [sp, #4]
 800c5aa:	f89a 0016 	ldrb.w	r0, [sl, #22]
 800c5ae:	9000      	str	r0, [sp, #0]
 800c5b0:	ba5b      	rev16	r3, r3
 800c5b2:	b29b      	uxth	r3, r3
 800c5b4:	4638      	mov	r0, r7
 800c5b6:	f7ff fedb 	bl	800c370 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800c5ba:	e7c5      	b.n	800c548 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c5bc:	2000c76c 	andcs	ip, r0, ip, ror #14
 800c5c0:	0801baa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, sp, pc}
 800c5c4:	2000c77c 	andcs	ip, r0, ip, ror r7

0800c5c8 <RDMIdentify::RDMIdentify()>:
 800c5c8:	4b01      	ldr	r3, [pc, #4]	@ (800c5d0 <RDMIdentify::RDMIdentify()+0x8>)
 800c5ca:	6018      	str	r0, [r3, #0]
 800c5cc:	4770      	bx	lr
 800c5ce:	bf00      	nop
 800c5d0:	2000c770 	andcs	ip, r0, r0, ror r7

0800c5d4 <RDMIdentify::On(rdm::identify::Mode)>:
 800c5d4:	4770      	bx	lr

0800c5d6 <RDMIdentify::Off(rdm::identify::Mode)>:
 800c5d6:	4770      	bx	lr

0800c5d8 <memcpy.isra.0>:
 800c5d8:	440a      	add	r2, r1
 800c5da:	4291      	cmp	r1, r2
 800c5dc:	d100      	bne.n	800c5e0 <memcpy.isra.0+0x8>
 800c5de:	4770      	bx	lr
 800c5e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c5e4:	f800 3b01 	strb.w	r3, [r0], #1
 800c5e8:	e7f7      	b.n	800c5da <memcpy.isra.0+0x2>
	...

0800c5ec <LLRPDevice::HandleRequestMessage()>:
 800c5ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c5f0:	4e43      	ldr	r6, [pc, #268]	@ (800c700 <LLRPDevice::HandleRequestMessage()+0x114>)
 800c5f2:	4f44      	ldr	r7, [pc, #272]	@ (800c704 <LLRPDevice::HandleRequestMessage()+0x118>)
 800c5f4:	6835      	ldr	r5, [r6, #0]
 800c5f6:	6839      	ldr	r1, [r7, #0]
 800c5f8:	f895 4042 	ldrb.w	r4, [r5, #66]	@ 0x42
 800c5fc:	f8b5 3043 	ldrh.w	r3, [r5, #67]	@ 0x43
 800c600:	0424      	lsls	r4, r4, #16
 800c602:	ba5b      	rev16	r3, r3
 800c604:	b089      	sub	sp, #36	@ 0x24
 800c606:	b29b      	uxth	r3, r3
 800c608:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
 800c60c:	431c      	orrs	r4, r3
 800c60e:	2206      	movs	r2, #6
 800c610:	314a      	adds	r1, #74	@ 0x4a
 800c612:	a802      	add	r0, sp, #8
 800c614:	f7ff ffe0 	bl	800c5d8 <memcpy.isra.0>
 800c618:	2c12      	cmp	r4, #18
 800c61a:	d909      	bls.n	800c630 <LLRPDevice::HandleRequestMessage()+0x44>
 800c61c:	f105 0954 	add.w	r9, r5, #84	@ 0x54
 800c620:	f04f 0800 	mov.w	r8, #0
 800c624:	3c12      	subs	r4, #18
 800c626:	2306      	movs	r3, #6
 800c628:	fbb4 f4f3 	udiv	r4, r4, r3
 800c62c:	45a0      	cmp	r8, r4
 800c62e:	d15b      	bne.n	800c6e8 <LLRPDevice::HandleRequestMessage()+0xfc>
 800c630:	2206      	movs	r2, #6
 800c632:	a902      	add	r1, sp, #8
 800c634:	f105 0046 	add.w	r0, r5, #70	@ 0x46
 800c638:	f7ff fbb1 	bl	800bd9e <memcmp>
 800c63c:	2800      	cmp	r0, #0
 800c63e:	dc50      	bgt.n	800c6e2 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c640:	2206      	movs	r2, #6
 800c642:	f105 014c 	add.w	r1, r5, #76	@ 0x4c
 800c646:	a802      	add	r0, sp, #8
 800c648:	f7ff fba9 	bl	800bd9e <memcmp>
 800c64c:	2800      	cmp	r0, #0
 800c64e:	dc48      	bgt.n	800c6e2 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c650:	6834      	ldr	r4, [r6, #0]
 800c652:	2210      	movs	r2, #16
 800c654:	f104 0517 	add.w	r5, r4, #23
 800c658:	4629      	mov	r1, r5
 800c65a:	eb0d 0002 	add.w	r0, sp, r2
 800c65e:	f7ff ffbb 	bl	800c5d8 <memcpy.isra.0>
 800c662:	2343      	movs	r3, #67	@ 0x43
 800c664:	74a3      	strb	r3, [r4, #18]
 800c666:	4b28      	ldr	r3, [pc, #160]	@ (800c708 <LLRPDevice::HandleRequestMessage()+0x11c>)
 800c668:	4628      	mov	r0, r5
 800c66a:	6819      	ldr	r1, [r3, #0]
 800c66c:	4d27      	ldr	r5, [pc, #156]	@ (800c70c <LLRPDevice::HandleRequestMessage()+0x120>)
 800c66e:	2210      	movs	r2, #16
 800c670:	f7ff ffb2 	bl	800c5d8 <memcpy.isra.0>
 800c674:	232c      	movs	r3, #44	@ 0x2c
 800c676:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800c67a:	2300      	movs	r3, #0
 800c67c:	2210      	movs	r2, #16
 800c67e:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800c682:	f884 302b 	strb.w	r3, [r4, #43]	@ 0x2b
 800c686:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800c68a:	2302      	movs	r3, #2
 800c68c:	eb0d 0102 	add.w	r1, sp, r2
 800c690:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800c694:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800c698:	f7ff ff9e 	bl	800c5d8 <memcpy.isra.0>
 800c69c:	6839      	ldr	r1, [r7, #0]
 800c69e:	2311      	movs	r3, #17
 800c6a0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800c6a4:	2301      	movs	r3, #1
 800c6a6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800c6aa:	2206      	movs	r2, #6
 800c6ac:	314a      	adds	r1, #74	@ 0x4a
 800c6ae:	f104 0046 	add.w	r0, r4, #70	@ 0x46
 800c6b2:	f7ff ff91 	bl	800c5d8 <memcpy.isra.0>
 800c6b6:	f104 004c 	add.w	r0, r4, #76	@ 0x4c
 800c6ba:	2206      	movs	r2, #6
 800c6bc:	4629      	mov	r1, r5
 800c6be:	f7ff ff8b 	bl	800c5d8 <memcpy.isra.0>
 800c6c2:	23ff      	movs	r3, #255	@ 0xff
 800c6c4:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 800c6c8:	4b11      	ldr	r3, [pc, #68]	@ (800c710 <LLRPDevice::HandleRequestMessage()+0x124>)
 800c6ca:	6818      	ldr	r0, [r3, #0]
 800c6cc:	f855 3c14 	ldr.w	r3, [r5, #-20]
 800c6d0:	b13b      	cbz	r3, 800c6e2 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c6d2:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800c6d6:	9300      	str	r3, [sp, #0]
 800c6d8:	2253      	movs	r2, #83	@ 0x53
 800c6da:	4b0e      	ldr	r3, [pc, #56]	@ (800c714 <LLRPDevice::HandleRequestMessage()+0x128>)
 800c6dc:	4621      	mov	r1, r4
 800c6de:	f006 f991 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800c6e2:	b009      	add	sp, #36	@ 0x24
 800c6e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c6e8:	2206      	movs	r2, #6
 800c6ea:	a902      	add	r1, sp, #8
 800c6ec:	4648      	mov	r0, r9
 800c6ee:	f7ff fb56 	bl	800bd9e <memcmp>
 800c6f2:	2800      	cmp	r0, #0
 800c6f4:	d0f5      	beq.n	800c6e2 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c6f6:	f109 0906 	add.w	r9, r9, #6
 800c6fa:	f108 0801 	add.w	r8, r8, #1
 800c6fe:	e795      	b.n	800c62c <LLRPDevice::HandleRequestMessage()+0x40>
 800c700:	2000c884 	andcs	ip, r0, r4, lsl #17
 800c704:	2000c76c 	andcs	ip, r0, ip, ror #14
 800c708:	2000cdc0 	andcs	ip, r0, r0, asr #27
 800c70c:	2000cc24 	andcs	ip, r0, r4, lsr #24
 800c710:	2000c88c 	andcs	ip, r0, ip, lsl #17
 800c714:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800c718 <LLRPDevice::HandleRdmCommand()>:
 800c718:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c71c:	4b21      	ldr	r3, [pc, #132]	@ (800c7a4 <LLRPDevice::HandleRdmCommand()+0x8c>)
 800c71e:	4f22      	ldr	r7, [pc, #136]	@ (800c7a8 <LLRPDevice::HandleRdmCommand()+0x90>)
 800c720:	681c      	ldr	r4, [r3, #0]
 800c722:	f104 0946 	add.w	r9, r4, #70	@ 0x46
 800c726:	b087      	sub	sp, #28
 800c728:	463a      	mov	r2, r7
 800c72a:	4649      	mov	r1, r9
 800c72c:	f7ff fe86 	bl	800c43c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800c730:	783b      	ldrb	r3, [r7, #0]
 800c732:	2bcc      	cmp	r3, #204	@ 0xcc
 800c734:	d132      	bne.n	800c79c <LLRPDevice::HandleRdmCommand()+0x84>
 800c736:	f104 0817 	add.w	r8, r4, #23
 800c73a:	2210      	movs	r2, #16
 800c73c:	4641      	mov	r1, r8
 800c73e:	a802      	add	r0, sp, #8
 800c740:	f7ff ff4a 	bl	800c5d8 <memcpy.isra.0>
 800c744:	78be      	ldrb	r6, [r7, #2]
 800c746:	4b19      	ldr	r3, [pc, #100]	@ (800c7ac <LLRPDevice::HandleRdmCommand()+0x94>)
 800c748:	f106 0537 	add.w	r5, r6, #55	@ 0x37
 800c74c:	b2ed      	uxtb	r5, r5
 800c74e:	6819      	ldr	r1, [r3, #0]
 800c750:	74a5      	strb	r5, [r4, #18]
 800c752:	2210      	movs	r2, #16
 800c754:	4640      	mov	r0, r8
 800c756:	f7ff ff3f 	bl	800c5d8 <memcpy.isra.0>
 800c75a:	f106 0320 	add.w	r3, r6, #32
 800c75e:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800c762:	2210      	movs	r2, #16
 800c764:	a902      	add	r1, sp, #8
 800c766:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800c76a:	f7ff ff35 	bl	800c5d8 <memcpy.isra.0>
 800c76e:	1d73      	adds	r3, r6, #5
 800c770:	1c72      	adds	r2, r6, #1
 800c772:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800c776:	b2d2      	uxtb	r2, r2
 800c778:	4648      	mov	r0, r9
 800c77a:	1c79      	adds	r1, r7, #1
 800c77c:	f7ff ff2c 	bl	800c5d8 <memcpy.isra.0>
 800c780:	4b0b      	ldr	r3, [pc, #44]	@ (800c7b0 <LLRPDevice::HandleRdmCommand()+0x98>)
 800c782:	6818      	ldr	r0, [r3, #0]
 800c784:	4b0b      	ldr	r3, [pc, #44]	@ (800c7b4 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800c786:	681b      	ldr	r3, [r3, #0]
 800c788:	f105 0210 	add.w	r2, r5, #16
 800c78c:	b133      	cbz	r3, 800c79c <LLRPDevice::HandleRdmCommand()+0x84>
 800c78e:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800c792:	9300      	str	r3, [sp, #0]
 800c794:	4621      	mov	r1, r4
 800c796:	4b08      	ldr	r3, [pc, #32]	@ (800c7b8 <LLRPDevice::HandleRdmCommand()+0xa0>)
 800c798:	f006 f934 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800c79c:	b007      	add	sp, #28
 800c79e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c7a2:	bf00      	nop
 800c7a4:	2000c884 	andcs	ip, r0, r4, lsl #17
 800c7a8:	2000c780 	andcs	ip, r0, r0, lsl #15
 800c7ac:	2000cdc0 	andcs	ip, r0, r0, asr #27
 800c7b0:	2000c88c 	andcs	ip, r0, ip, lsl #17
 800c7b4:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800c7b8:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800c7bc <LLRPDevice::DumpCommon()>:
 800c7bc:	4770      	bx	lr

0800c7be <memcpy.isra.0>:
 800c7be:	440a      	add	r2, r1
 800c7c0:	4291      	cmp	r1, r2
 800c7c2:	d100      	bne.n	800c7c6 <memcpy.isra.0+0x8>
 800c7c4:	4770      	bx	lr
 800c7c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c7ca:	f800 3b01 	strb.w	r3, [r0], #1
 800c7ce:	e7f7      	b.n	800c7c0 <memcpy.isra.0+0x2>

0800c7d0 <RDMHandler::GetInterfaceList(unsigned short)>:
 800c7d0:	6883      	ldr	r3, [r0, #8]
 800c7d2:	2200      	movs	r2, #0
 800c7d4:	761a      	strb	r2, [r3, #24]
 800c7d6:	765a      	strb	r2, [r3, #25]
 800c7d8:	769a      	strb	r2, [r3, #26]
 800c7da:	2101      	movs	r1, #1
 800c7dc:	771a      	strb	r2, [r3, #28]
 800c7de:	2206      	movs	r2, #6
 800c7e0:	76d9      	strb	r1, [r3, #27]
 800c7e2:	775a      	strb	r2, [r3, #29]
 800c7e4:	75da      	strb	r2, [r3, #23]
 800c7e6:	f7ff bc17 	b.w	800c018 <RDMHandler::RespondMessageAck()>
	...

0800c7ec <RDMHandler::GetInterfaceName(unsigned short)>:
 800c7ec:	b538      	push	{r3, r4, r5, lr}
 800c7ee:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c7f2:	2204      	movs	r2, #4
 800c7f4:	4604      	mov	r4, r0
 800c7f6:	3117      	adds	r1, #23
 800c7f8:	f105 0018 	add.w	r0, r5, #24
 800c7fc:	f7ff ffdf 	bl	800c7be <memcpy.isra.0>
 800c800:	4a0d      	ldr	r2, [pc, #52]	@ (800c838 <RDMHandler::GetInterfaceName(unsigned short)+0x4c>)
 800c802:	6813      	ldr	r3, [r2, #0]
 800c804:	f105 001c 	add.w	r0, r5, #28
 800c808:	3306      	adds	r3, #6
 800c80a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c80e:	f800 1b01 	strb.w	r1, [r0], #1
 800c812:	2900      	cmp	r1, #0
 800c814:	d1f9      	bne.n	800c80a <RDMHandler::GetInterfaceName(unsigned short)+0x1e>
 800c816:	6812      	ldr	r2, [r2, #0]
 800c818:	3206      	adds	r2, #6
 800c81a:	4611      	mov	r1, r2
 800c81c:	460b      	mov	r3, r1
 800c81e:	3101      	adds	r1, #1
 800c820:	7818      	ldrb	r0, [r3, #0]
 800c822:	2800      	cmp	r0, #0
 800c824:	d1fa      	bne.n	800c81c <RDMHandler::GetInterfaceName(unsigned short)+0x30>
 800c826:	1a9b      	subs	r3, r3, r2
 800c828:	3304      	adds	r3, #4
 800c82a:	75eb      	strb	r3, [r5, #23]
 800c82c:	4620      	mov	r0, r4
 800c82e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c832:	f7ff bbf1 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c836:	bf00      	nop
 800c838:	2000cbf0 	strdcs	ip, [r0], -r0

0800c83c <RDMHandler::GetHardwareAddress(unsigned short)>:
 800c83c:	b538      	push	{r3, r4, r5, lr}
 800c83e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c842:	4604      	mov	r4, r0
 800c844:	2204      	movs	r2, #4
 800c846:	f105 0018 	add.w	r0, r5, #24
 800c84a:	3117      	adds	r1, #23
 800c84c:	f7ff ffb7 	bl	800c7be <memcpy.isra.0>
 800c850:	f105 001c 	add.w	r0, r5, #28
 800c854:	4905      	ldr	r1, [pc, #20]	@ (800c86c <RDMHandler::GetHardwareAddress(unsigned short)+0x30>)
 800c856:	2206      	movs	r2, #6
 800c858:	f7ff ffb1 	bl	800c7be <memcpy.isra.0>
 800c85c:	230a      	movs	r3, #10
 800c85e:	75eb      	strb	r3, [r5, #23]
 800c860:	4620      	mov	r0, r4
 800c862:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c866:	f7ff bbd7 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c86a:	bf00      	nop
 800c86c:	2000cc24 	andcs	ip, r0, r4, lsr #24

0800c870 <RDMHandler::GetDHCPMode(unsigned short)>:
 800c870:	b538      	push	{r3, r4, r5, lr}
 800c872:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c876:	4604      	mov	r4, r0
 800c878:	2204      	movs	r2, #4
 800c87a:	f105 0018 	add.w	r0, r5, #24
 800c87e:	3117      	adds	r1, #23
 800c880:	f7ff ff9d 	bl	800c7be <memcpy.isra.0>
 800c884:	4b05      	ldr	r3, [pc, #20]	@ (800c89c <RDMHandler::GetDHCPMode(unsigned short)+0x2c>)
 800c886:	7e9b      	ldrb	r3, [r3, #26]
 800c888:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c88c:	772b      	strb	r3, [r5, #28]
 800c88e:	2305      	movs	r3, #5
 800c890:	75eb      	strb	r3, [r5, #23]
 800c892:	4620      	mov	r0, r4
 800c894:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c898:	f7ff bbbe 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c89c:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800c8a0 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800c8a0:	4b0b      	ldr	r3, [pc, #44]	@ (800c8d0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x30>)
 800c8a2:	6842      	ldr	r2, [r0, #4]
 800c8a4:	681b      	ldr	r3, [r3, #0]
 800c8a6:	7919      	ldrb	r1, [r3, #4]
 800c8a8:	b911      	cbnz	r1, 800c8b0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800c8aa:	210b      	movs	r1, #11
 800c8ac:	f7ff bca2 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c8b0:	7ed2      	ldrb	r2, [r2, #27]
 800c8b2:	2a01      	cmp	r2, #1
 800c8b4:	d809      	bhi.n	800c8ca <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c8b6:	f883 20b4 	strb.w	r2, [r3, #180]	@ 0xb4
 800c8ba:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c8be:	f042 0208 	orr.w	r2, r2, #8
 800c8c2:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800c8c6:	f7ff bba7 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c8ca:	2106      	movs	r1, #6
 800c8cc:	e7ee      	b.n	800c8ac <RDMHandler::SetDHCPMode(bool, unsigned short)+0xc>
 800c8ce:	bf00      	nop
 800c8d0:	2000cbf0 	strdcs	ip, [r0], -r0

0800c8d4 <RDMHandler::GetNameServers(unsigned short)>:
 800c8d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8d6:	6843      	ldr	r3, [r0, #4]
 800c8d8:	7ddb      	ldrb	r3, [r3, #23]
 800c8da:	2b02      	cmp	r3, #2
 800c8dc:	4604      	mov	r4, r0
 800c8de:	d905      	bls.n	800c8ec <RDMHandler::GetNameServers(unsigned short)+0x18>
 800c8e0:	2106      	movs	r1, #6
 800c8e2:	b003      	add	sp, #12
 800c8e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c8e8:	f7ff bc84 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c8ec:	4a0b      	ldr	r2, [pc, #44]	@ (800c91c <RDMHandler::GetNameServers(unsigned short)+0x48>)
 800c8ee:	6885      	ldr	r5, [r0, #8]
 800c8f0:	6812      	ldr	r2, [r2, #0]
 800c8f2:	f103 0126 	add.w	r1, r3, #38	@ 0x26
 800c8f6:	f105 0019 	add.w	r0, r5, #25
 800c8fa:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800c8fe:	9201      	str	r2, [sp, #4]
 800c900:	2204      	movs	r2, #4
 800c902:	762b      	strb	r3, [r5, #24]
 800c904:	eb0d 0102 	add.w	r1, sp, r2
 800c908:	f7ff ff59 	bl	800c7be <memcpy.isra.0>
 800c90c:	2305      	movs	r3, #5
 800c90e:	4620      	mov	r0, r4
 800c910:	75eb      	strb	r3, [r5, #23]
 800c912:	b003      	add	sp, #12
 800c914:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c918:	f7ff bb7e 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c91c:	2000cbf0 	strdcs	ip, [r0], -r0

0800c920 <RDMHandler::GetZeroconf(unsigned short)>:
 800c920:	b538      	push	{r3, r4, r5, lr}
 800c922:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c926:	4604      	mov	r4, r0
 800c928:	2204      	movs	r2, #4
 800c92a:	3117      	adds	r1, #23
 800c92c:	f105 0018 	add.w	r0, r5, #24
 800c930:	f7ff ff45 	bl	800c7be <memcpy.isra.0>
 800c934:	4b07      	ldr	r3, [pc, #28]	@ (800c954 <RDMHandler::GetZeroconf(unsigned short)+0x34>)
 800c936:	681b      	ldr	r3, [r3, #0]
 800c938:	795b      	ldrb	r3, [r3, #5]
 800c93a:	b11b      	cbz	r3, 800c944 <RDMHandler::GetZeroconf(unsigned short)+0x24>
 800c93c:	4b06      	ldr	r3, [pc, #24]	@ (800c958 <RDMHandler::GetZeroconf(unsigned short)+0x38>)
 800c93e:	7e9b      	ldrb	r3, [r3, #26]
 800c940:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800c944:	772b      	strb	r3, [r5, #28]
 800c946:	2305      	movs	r3, #5
 800c948:	75eb      	strb	r3, [r5, #23]
 800c94a:	4620      	mov	r0, r4
 800c94c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c950:	f7ff bb62 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c954:	2000cbf0 	strdcs	ip, [r0], -r0
 800c958:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800c95c <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c95c:	4b10      	ldr	r3, [pc, #64]	@ (800c9a0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c95e:	6842      	ldr	r2, [r0, #4]
 800c960:	681b      	ldr	r3, [r3, #0]
 800c962:	7959      	ldrb	r1, [r3, #5]
 800c964:	b510      	push	{r4, lr}
 800c966:	4604      	mov	r4, r0
 800c968:	b921      	cbnz	r1, 800c974 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c96a:	210b      	movs	r1, #11
 800c96c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c970:	f7ff bc40 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c974:	7ed2      	ldrb	r2, [r2, #27]
 800c976:	2a01      	cmp	r2, #1
 800c978:	d109      	bne.n	800c98e <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c97a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c97e:	f042 0210 	orr.w	r2, r2, #16
 800c982:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800c986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c98a:	f7ff bb45 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c98e:	b92a      	cbnz	r2, 800c99c <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c990:	4618      	mov	r0, r3
 800c992:	4611      	mov	r1, r2
 800c994:	f004 febc 	bl	8011710 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800c998:	4620      	mov	r0, r4
 800c99a:	e7f4      	b.n	800c986 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c99c:	2106      	movs	r1, #6
 800c99e:	e7e5      	b.n	800c96c <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c9a0:	2000cbf0 	strdcs	ip, [r0], -r0

0800c9a4 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c9a4:	b510      	push	{r4, lr}
 800c9a6:	4b09      	ldr	r3, [pc, #36]	@ (800c9cc <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c9a8:	7e9b      	ldrb	r3, [r3, #26]
 800c9aa:	079b      	lsls	r3, r3, #30
 800c9ac:	4604      	mov	r4, r0
 800c9ae:	d404      	bmi.n	800c9ba <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c9b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c9b4:	210b      	movs	r1, #11
 800c9b6:	f7ff bc1d 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c9ba:	4b05      	ldr	r3, [pc, #20]	@ (800c9d0 <RDMHandler::RenewDhcp(bool, unsigned short)+0x2c>)
 800c9bc:	6818      	ldr	r0, [r3, #0]
 800c9be:	f004 fea0 	bl	8011702 <Network::EnableDhcp()>
 800c9c2:	4620      	mov	r0, r4
 800c9c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c9c8:	f7ff bb26 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800c9cc:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800c9d0:	2000cbf0 	strdcs	ip, [r0], -r0

0800c9d4 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c9d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c9d6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c9da:	4e11      	ldr	r6, [pc, #68]	@ (800ca20 <RDMHandler::GetAddressNetmask(unsigned short)+0x4c>)
 800c9dc:	4604      	mov	r4, r0
 800c9de:	6833      	ldr	r3, [r6, #0]
 800c9e0:	9301      	str	r3, [sp, #4]
 800c9e2:	f105 0018 	add.w	r0, r5, #24
 800c9e6:	2204      	movs	r2, #4
 800c9e8:	3117      	adds	r1, #23
 800c9ea:	f7ff fee8 	bl	800c7be <memcpy.isra.0>
 800c9ee:	2204      	movs	r2, #4
 800c9f0:	eb0d 0102 	add.w	r1, sp, r2
 800c9f4:	f105 001c 	add.w	r0, r5, #28
 800c9f8:	f7ff fee1 	bl	800c7be <memcpy.isra.0>
 800c9fc:	6870      	ldr	r0, [r6, #4]
 800c9fe:	f00b fbf3 	bl	80181e8 <__popcountsi2>
 800ca02:	7eb3      	ldrb	r3, [r6, #26]
 800ca04:	f885 0020 	strb.w	r0, [r5, #32]
 800ca08:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ca0c:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800ca10:	4620      	mov	r0, r4
 800ca12:	230a      	movs	r3, #10
 800ca14:	75eb      	strb	r3, [r5, #23]
 800ca16:	b002      	add	sp, #8
 800ca18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca1c:	f7ff bafc 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800ca20:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800ca24 <RDMHandler::GetStaticAddress(unsigned short)>:
 800ca24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ca26:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ca2a:	4e0f      	ldr	r6, [pc, #60]	@ (800ca68 <RDMHandler::GetStaticAddress(unsigned short)+0x44>)
 800ca2c:	4604      	mov	r4, r0
 800ca2e:	6833      	ldr	r3, [r6, #0]
 800ca30:	9301      	str	r3, [sp, #4]
 800ca32:	f105 0018 	add.w	r0, r5, #24
 800ca36:	2204      	movs	r2, #4
 800ca38:	3117      	adds	r1, #23
 800ca3a:	f7ff fec0 	bl	800c7be <memcpy.isra.0>
 800ca3e:	2204      	movs	r2, #4
 800ca40:	eb0d 0102 	add.w	r1, sp, r2
 800ca44:	f105 001c 	add.w	r0, r5, #28
 800ca48:	f7ff feb9 	bl	800c7be <memcpy.isra.0>
 800ca4c:	6870      	ldr	r0, [r6, #4]
 800ca4e:	f00b fbcb 	bl	80181e8 <__popcountsi2>
 800ca52:	2309      	movs	r3, #9
 800ca54:	f885 0020 	strb.w	r0, [r5, #32]
 800ca58:	4620      	mov	r0, r4
 800ca5a:	75eb      	strb	r3, [r5, #23]
 800ca5c:	b002      	add	sp, #8
 800ca5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca62:	f7ff bad9 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800ca66:	bf00      	nop
 800ca68:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800ca6c <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800ca6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ca6e:	6845      	ldr	r5, [r0, #4]
 800ca70:	7dab      	ldrb	r3, [r5, #22]
 800ca72:	2b09      	cmp	r3, #9
 800ca74:	4604      	mov	r4, r0
 800ca76:	d005      	beq.n	800ca84 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800ca78:	2101      	movs	r1, #1
 800ca7a:	b003      	add	sp, #12
 800ca7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca80:	f7ff bbb8 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800ca84:	2204      	movs	r2, #4
 800ca86:	eb0d 0002 	add.w	r0, sp, r2
 800ca8a:	f105 011b 	add.w	r1, r5, #27
 800ca8e:	f7ff fe96 	bl	800c7be <memcpy.isra.0>
 800ca92:	4b09      	ldr	r3, [pc, #36]	@ (800cab8 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x4c>)
 800ca94:	7fea      	ldrb	r2, [r5, #31]
 800ca96:	6818      	ldr	r0, [r3, #0]
 800ca98:	9901      	ldr	r1, [sp, #4]
 800ca9a:	b12a      	cbz	r2, 800caa8 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3c>
 800ca9c:	f1c2 0220 	rsb	r2, r2, #32
 800caa0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800caa4:	4093      	lsls	r3, r2
 800caa6:	ba1a      	rev	r2, r3
 800caa8:	f004 fe32 	bl	8011710 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800caac:	4620      	mov	r0, r4
 800caae:	b003      	add	sp, #12
 800cab0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cab4:	f7ff bab0 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cab8:	2000cbf0 	strdcs	ip, [r0], -r0

0800cabc <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800cabc:	4b08      	ldr	r3, [pc, #32]	@ (800cae0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800cabe:	b510      	push	{r4, lr}
 800cac0:	4604      	mov	r4, r0
 800cac2:	6818      	ldr	r0, [r3, #0]
 800cac4:	f004 fe46 	bl	8011754 <Network::ApplyQueuedConfig()>
 800cac8:	b120      	cbz	r0, 800cad4 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800caca:	4620      	mov	r0, r4
 800cacc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cad0:	f7ff baa2 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cad4:	4620      	mov	r0, r4
 800cad6:	2101      	movs	r1, #1
 800cad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cadc:	f7ff bb8a 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cae0:	2000cbf0 	strdcs	ip, [r0], -r0

0800cae4 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800cae4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cae6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800caea:	4b0c      	ldr	r3, [pc, #48]	@ (800cb1c <RDMHandler::GetDefaultRoute(unsigned short)+0x38>)
 800caec:	4604      	mov	r4, r0
 800caee:	689b      	ldr	r3, [r3, #8]
 800caf0:	9301      	str	r3, [sp, #4]
 800caf2:	f105 0018 	add.w	r0, r5, #24
 800caf6:	2204      	movs	r2, #4
 800caf8:	3117      	adds	r1, #23
 800cafa:	f7ff fe60 	bl	800c7be <memcpy.isra.0>
 800cafe:	2204      	movs	r2, #4
 800cb00:	f105 001c 	add.w	r0, r5, #28
 800cb04:	eb0d 0102 	add.w	r1, sp, r2
 800cb08:	f7ff fe59 	bl	800c7be <memcpy.isra.0>
 800cb0c:	2308      	movs	r3, #8
 800cb0e:	4620      	mov	r0, r4
 800cb10:	75eb      	strb	r3, [r5, #23]
 800cb12:	b003      	add	sp, #12
 800cb14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cb18:	f7ff ba7e 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cb1c:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800cb20 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800cb20:	b513      	push	{r0, r1, r4, lr}
 800cb22:	6841      	ldr	r1, [r0, #4]
 800cb24:	7d8b      	ldrb	r3, [r1, #22]
 800cb26:	2b08      	cmp	r3, #8
 800cb28:	4604      	mov	r4, r0
 800cb2a:	d005      	beq.n	800cb38 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x18>
 800cb2c:	2101      	movs	r1, #1
 800cb2e:	b002      	add	sp, #8
 800cb30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb34:	f7ff bb5e 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cb38:	2204      	movs	r2, #4
 800cb3a:	eb0d 0002 	add.w	r0, sp, r2
 800cb3e:	311b      	adds	r1, #27
 800cb40:	f7ff fe3d 	bl	800c7be <memcpy.isra.0>
 800cb44:	4b05      	ldr	r3, [pc, #20]	@ (800cb5c <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x3c>)
 800cb46:	9901      	ldr	r1, [sp, #4]
 800cb48:	6818      	ldr	r0, [r3, #0]
 800cb4a:	f004 fdf5 	bl	8011738 <Network::SetQueuedDefaultRoute(unsigned long)>
 800cb4e:	4620      	mov	r0, r4
 800cb50:	b002      	add	sp, #8
 800cb52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb56:	f7ff ba5f 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cb5a:	bf00      	nop
 800cb5c:	2000cbf0 	strdcs	ip, [r0], -r0

0800cb60 <RDMHandler::GetHostName(unsigned short)>:
 800cb60:	4b09      	ldr	r3, [pc, #36]	@ (800cb88 <RDMHandler::GetHostName(unsigned short)+0x28>)
 800cb62:	6819      	ldr	r1, [r3, #0]
 800cb64:	3116      	adds	r1, #22
 800cb66:	b510      	push	{r4, lr}
 800cb68:	460b      	mov	r3, r1
 800cb6a:	4604      	mov	r4, r0
 800cb6c:	461a      	mov	r2, r3
 800cb6e:	3301      	adds	r3, #1
 800cb70:	7810      	ldrb	r0, [r2, #0]
 800cb72:	2800      	cmp	r0, #0
 800cb74:	d1fa      	bne.n	800cb6c <RDMHandler::GetHostName(unsigned short)+0xc>
 800cb76:	4620      	mov	r0, r4
 800cb78:	1a52      	subs	r2, r2, r1
 800cb7a:	f7ff f9f6 	bl	800bf6a <RDMHandler::HandleString(char const*, unsigned long)>
 800cb7e:	4620      	mov	r0, r4
 800cb80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb84:	f7ff ba48 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cb88:	2000cbf0 	strdcs	ip, [r0], -r0

0800cb8c <RDMHandler::SetHostName(bool, unsigned short)>:
 800cb8c:	b510      	push	{r4, lr}
 800cb8e:	6841      	ldr	r1, [r0, #4]
 800cb90:	7d8b      	ldrb	r3, [r1, #22]
 800cb92:	2b3f      	cmp	r3, #63	@ 0x3f
 800cb94:	4604      	mov	r4, r0
 800cb96:	d904      	bls.n	800cba2 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800cb98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb9c:	2102      	movs	r1, #2
 800cb9e:	f7ff bb29 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
 800cba2:	440b      	add	r3, r1
 800cba4:	2200      	movs	r2, #0
 800cba6:	75da      	strb	r2, [r3, #23]
 800cba8:	4b04      	ldr	r3, [pc, #16]	@ (800cbbc <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800cbaa:	3117      	adds	r1, #23
 800cbac:	6818      	ldr	r0, [r3, #0]
 800cbae:	f004 fd77 	bl	80116a0 <Network::SetHostName(char const*)>
 800cbb2:	4620      	mov	r0, r4
 800cbb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbb8:	f7ff ba2e 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cbbc:	2000cbf0 	strdcs	ip, [r0], -r0

0800cbc0 <RDMHandler::GetDomainName(unsigned short)>:
 800cbc0:	4b09      	ldr	r3, [pc, #36]	@ (800cbe8 <RDMHandler::GetDomainName(unsigned short)+0x28>)
 800cbc2:	6819      	ldr	r1, [r3, #0]
 800cbc4:	3156      	adds	r1, #86	@ 0x56
 800cbc6:	b510      	push	{r4, lr}
 800cbc8:	460b      	mov	r3, r1
 800cbca:	4604      	mov	r4, r0
 800cbcc:	461a      	mov	r2, r3
 800cbce:	3301      	adds	r3, #1
 800cbd0:	7810      	ldrb	r0, [r2, #0]
 800cbd2:	2800      	cmp	r0, #0
 800cbd4:	d1fa      	bne.n	800cbcc <RDMHandler::GetDomainName(unsigned short)+0xc>
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	1a52      	subs	r2, r2, r1
 800cbda:	f7ff f9c6 	bl	800bf6a <RDMHandler::HandleString(char const*, unsigned long)>
 800cbde:	4620      	mov	r0, r4
 800cbe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbe4:	f7ff ba18 	b.w	800c018 <RDMHandler::RespondMessageAck()>
 800cbe8:	2000cbf0 	strdcs	ip, [r0], -r0

0800cbec <RDMHandler::SetDomainName(bool, unsigned short)>:
 800cbec:	210b      	movs	r1, #11
 800cbee:	f7ff bb01 	b.w	800c1f4 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800cbf4 <RDMDevice::RDMDevice()>:
 800cbf4:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800cbf8:	b513      	push	{r0, r1, r4, lr}
 800cbfa:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800cbfe:	f8a0 3042 	strh.w	r3, [r0, #66]	@ 0x42
 800cc02:	2300      	movs	r3, #0
 800cc04:	f8a0 3044 	strh.w	r3, [r0, #68]	@ 0x44
 800cc08:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 800cc0c:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
 800cc10:	4b1c      	ldr	r3, [pc, #112]	@ (800cc84 <RDMDevice::RDMDevice()+0x90>)
 800cc12:	491d      	ldr	r1, [pc, #116]	@ (800cc88 <RDMDevice::RDMDevice()+0x94>)
 800cc14:	6018      	str	r0, [r3, #0]
 800cc16:	4b1d      	ldr	r3, [pc, #116]	@ (800cc8c <RDMDevice::RDMDevice()+0x98>)
 800cc18:	781a      	ldrb	r2, [r3, #0]
 800cc1a:	f880 2046 	strb.w	r2, [r0, #70]	@ 0x46
 800cc1e:	785b      	ldrb	r3, [r3, #1]
 800cc20:	f880 3047 	strb.w	r3, [r0, #71]	@ 0x47
 800cc24:	466a      	mov	r2, sp
 800cc26:	2306      	movs	r3, #6
 800cc28:	f811 4b01 	ldrb.w	r4, [r1], #1
 800cc2c:	f802 4b01 	strb.w	r4, [r2], #1
 800cc30:	3b01      	subs	r3, #1
 800cc32:	d1f9      	bne.n	800cc28 <RDMDevice::RDMDevice()+0x34>
 800cc34:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800cc38:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800cc3c:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800cc40:	f89d 4005 	ldrb.w	r4, [sp, #5]
 800cc44:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
 800cc48:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
 800cc4c:	f880 204e 	strb.w	r2, [r0, #78]	@ 0x4e
 800cc50:	f880 304f 	strb.w	r3, [r0, #79]	@ 0x4f
 800cc54:	4a0e      	ldr	r2, [pc, #56]	@ (800cc90 <RDMDevice::RDMDevice()+0x9c>)
 800cc56:	f880 104a 	strb.w	r1, [r0, #74]	@ 0x4a
 800cc5a:	2319      	movs	r3, #25
 800cc5c:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
 800cc60:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 800cc64:	f880 404b 	strb.w	r4, [r0, #75]	@ 0x4b
 800cc68:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
 800cc6c:	4603      	mov	r3, r0
 800cc6e:	f100 0119 	add.w	r1, r0, #25
 800cc72:	f812 4b01 	ldrb.w	r4, [r2], #1
 800cc76:	f803 4b01 	strb.w	r4, [r3], #1
 800cc7a:	4299      	cmp	r1, r3
 800cc7c:	d1f9      	bne.n	800cc72 <RDMDevice::RDMDevice()+0x7e>
 800cc7e:	b002      	add	sp, #8
 800cc80:	bd10      	pop	{r4, pc}
 800cc82:	bf00      	nop
 800cc84:	2000c890 	mulcs	r0, r0, r8
 800cc88:	2000cc24 	andcs	ip, r0, r4, lsr #24
 800cc8c:	0801bac1 	stmdaeq	r1, {r0, r6, r7, r9, fp, ip, sp, pc}
 800cc90:	0801badf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, fp, ip, sp, pc}

0800cc94 <RDMDevice::Print()>:
 800cc94:	b513      	push	{r0, r1, r4, lr}
 800cc96:	4604      	mov	r4, r0
 800cc98:	481f      	ldr	r0, [pc, #124]	@ (800cd18 <RDMDevice::Print()+0x84>)
 800cc9a:	f00b f854 	bl	8017d46 <puts>
 800cc9e:	4b1f      	ldr	r3, [pc, #124]	@ (800cd1c <RDMDevice::Print()+0x88>)
 800cca0:	461a      	mov	r2, r3
 800cca2:	4619      	mov	r1, r3
 800cca4:	3301      	adds	r3, #1
 800cca6:	7808      	ldrb	r0, [r1, #0]
 800cca8:	2800      	cmp	r0, #0
 800ccaa:	d1fa      	bne.n	800cca2 <RDMDevice::Print()+0xe>
 800ccac:	1a89      	subs	r1, r1, r2
 800ccae:	2920      	cmp	r1, #32
 800ccb0:	bf28      	it	cs
 800ccb2:	2120      	movcs	r1, #32
 800ccb4:	4a19      	ldr	r2, [pc, #100]	@ (800cd1c <RDMDevice::Print()+0x88>)
 800ccb6:	481a      	ldr	r0, [pc, #104]	@ (800cd20 <RDMDevice::Print()+0x8c>)
 800ccb8:	f00a fff0 	bl	8017c9c <printf>
 800ccbc:	f894 2047 	ldrb.w	r2, [r4, #71]	@ 0x47
 800ccc0:	f894 1046 	ldrb.w	r1, [r4, #70]	@ 0x46
 800ccc4:	4817      	ldr	r0, [pc, #92]	@ (800cd24 <RDMDevice::Print()+0x90>)
 800ccc6:	f00a ffe9 	bl	8017c9c <printf>
 800ccca:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 800ccce:	9300      	str	r3, [sp, #0]
 800ccd0:	f894 304d 	ldrb.w	r3, [r4, #77]	@ 0x4d
 800ccd4:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
 800ccd8:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 800ccdc:	4812      	ldr	r0, [pc, #72]	@ (800cd28 <RDMDevice::Print()+0x94>)
 800ccde:	f00a ffdd 	bl	8017c9c <printf>
 800cce2:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 800cce6:	4811      	ldr	r0, [pc, #68]	@ (800cd2c <RDMDevice::Print()+0x98>)
 800cce8:	f104 0220 	add.w	r2, r4, #32
 800ccec:	f00a ffd6 	bl	8017c9c <printf>
 800ccf0:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800ccf4:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
 800ccf8:	480d      	ldr	r0, [pc, #52]	@ (800cd30 <RDMDevice::Print()+0x9c>)
 800ccfa:	0a09      	lsrs	r1, r1, #8
 800ccfc:	f00a ffce 	bl	8017c9c <printf>
 800cd00:	f8b4 1042 	ldrh.w	r1, [r4, #66]	@ 0x42
 800cd04:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 800cd08:	480a      	ldr	r0, [pc, #40]	@ (800cd34 <RDMDevice::Print()+0xa0>)
 800cd0a:	0a09      	lsrs	r1, r1, #8
 800cd0c:	b002      	add	sp, #8
 800cd0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd12:	f00a bfc3 	b.w	8017c9c <printf>
 800cd16:	bf00      	nop
 800cd18:	08018bee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, fp, pc}
 800cd1c:	0801bac3 	stmdaeq	r1, {r0, r1, r6, r7, r9, fp, ip, sp, pc}
 800cd20:	08018c07 	stmdaeq	r1, {r0, r1, r2, sl, fp, pc}
 800cd24:	08018c22 	stmdaeq	r1, {r1, r5, sl, fp, pc}
 800cd28:	08018c41 	stmdaeq	r1, {r0, r6, sl, fp, pc}
 800cd2c:	08018c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, pc}
 800cd30:	08018c83 	stmdaeq	r1, {r0, r1, r7, sl, fp, pc}
 800cd34:	08018ca2 	stmdaeq	r1, {r1, r5, r7, sl, fp, pc}

0800cd38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 800cd38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd3a:	88c6      	ldrh	r6, [r0, #6]
 800cd3c:	8885      	ldrh	r5, [r0, #4]
 800cd3e:	42ae      	cmp	r6, r5
 800cd40:	d216      	bcs.n	800cd70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 800cd42:	4604      	mov	r4, r0
 800cd44:	6800      	ldr	r0, [r0, #0]
 800cd46:	1bad      	subs	r5, r5, r6
 800cd48:	4430      	add	r0, r6
 800cd4a:	7a26      	ldrb	r6, [r4, #8]
 800cd4c:	b923      	cbnz	r3, 800cd58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 800cd4e:	b926      	cbnz	r6, 800cd5a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 800cd50:	9200      	str	r2, [sp, #0]
 800cd52:	460b      	mov	r3, r1
 800cd54:	4a09      	ldr	r2, [pc, #36]	@ (800cd7c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 800cd56:	e003      	b.n	800cd60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800cd58:	b166      	cbz	r6, 800cd74 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 800cd5a:	9200      	str	r2, [sp, #0]
 800cd5c:	4a08      	ldr	r2, [pc, #32]	@ (800cd80 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 800cd5e:	460b      	mov	r3, r1
 800cd60:	4629      	mov	r1, r5
 800cd62:	f00a ffc3 	bl	8017cec <snprintf>
 800cd66:	4285      	cmp	r5, r0
 800cd68:	bfa2      	ittt	ge
 800cd6a:	88e3      	ldrhge	r3, [r4, #6]
 800cd6c:	181b      	addge	r3, r3, r0
 800cd6e:	80e3      	strhge	r3, [r4, #6]
 800cd70:	b002      	add	sp, #8
 800cd72:	bd70      	pop	{r4, r5, r6, pc}
 800cd74:	9200      	str	r2, [sp, #0]
 800cd76:	460b      	mov	r3, r1
 800cd78:	4a02      	ldr	r2, [pc, #8]	@ (800cd84 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 800cd7a:	e7f1      	b.n	800cd60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800cd7c:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 800cd80:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 800cd84:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

0800cd88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>:
 800cd88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd8a:	88c6      	ldrh	r6, [r0, #6]
 800cd8c:	8885      	ldrh	r5, [r0, #4]
 800cd8e:	42ae      	cmp	r6, r5
 800cd90:	d216      	bcs.n	800cdc0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x38>
 800cd92:	4604      	mov	r4, r0
 800cd94:	6800      	ldr	r0, [r0, #0]
 800cd96:	1bad      	subs	r5, r5, r6
 800cd98:	4430      	add	r0, r6
 800cd9a:	7a26      	ldrb	r6, [r4, #8]
 800cd9c:	b923      	cbnz	r3, 800cda8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x20>
 800cd9e:	b926      	cbnz	r6, 800cdaa <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x22>
 800cda0:	9200      	str	r2, [sp, #0]
 800cda2:	460b      	mov	r3, r1
 800cda4:	4a09      	ldr	r2, [pc, #36]	@ (800cdcc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x44>)
 800cda6:	e003      	b.n	800cdb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800cda8:	b166      	cbz	r6, 800cdc4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x3c>
 800cdaa:	9200      	str	r2, [sp, #0]
 800cdac:	4a08      	ldr	r2, [pc, #32]	@ (800cdd0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x48>)
 800cdae:	460b      	mov	r3, r1
 800cdb0:	4629      	mov	r1, r5
 800cdb2:	f00a ff9b 	bl	8017cec <snprintf>
 800cdb6:	4285      	cmp	r5, r0
 800cdb8:	bfa2      	ittt	ge
 800cdba:	88e3      	ldrhge	r3, [r4, #6]
 800cdbc:	181b      	addge	r3, r3, r0
 800cdbe:	80e3      	strhge	r3, [r4, #6]
 800cdc0:	b002      	add	sp, #8
 800cdc2:	bd70      	pop	{r4, r5, r6, pc}
 800cdc4:	9200      	str	r2, [sp, #0]
 800cdc6:	460b      	mov	r3, r1
 800cdc8:	4a02      	ldr	r2, [pc, #8]	@ (800cdd4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x4c>)
 800cdca:	e7f1      	b.n	800cdb0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800cdcc:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 800cdd0:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 800cdd4:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

0800cdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
 800cdd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cdda:	88c6      	ldrh	r6, [r0, #6]
 800cddc:	8885      	ldrh	r5, [r0, #4]
 800cdde:	42ae      	cmp	r6, r5
 800cde0:	d216      	bcs.n	800ce10 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x38>
 800cde2:	4604      	mov	r4, r0
 800cde4:	6800      	ldr	r0, [r0, #0]
 800cde6:	1bad      	subs	r5, r5, r6
 800cde8:	4430      	add	r0, r6
 800cdea:	7a26      	ldrb	r6, [r4, #8]
 800cdec:	b923      	cbnz	r3, 800cdf8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x20>
 800cdee:	b926      	cbnz	r6, 800cdfa <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x22>
 800cdf0:	9200      	str	r2, [sp, #0]
 800cdf2:	460b      	mov	r3, r1
 800cdf4:	4a09      	ldr	r2, [pc, #36]	@ (800ce1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x44>)
 800cdf6:	e003      	b.n	800ce00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800cdf8:	b166      	cbz	r6, 800ce14 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x3c>
 800cdfa:	9200      	str	r2, [sp, #0]
 800cdfc:	4a08      	ldr	r2, [pc, #32]	@ (800ce20 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>)
 800cdfe:	460b      	mov	r3, r1
 800ce00:	4629      	mov	r1, r5
 800ce02:	f00a ff73 	bl	8017cec <snprintf>
 800ce06:	4285      	cmp	r5, r0
 800ce08:	bfa2      	ittt	ge
 800ce0a:	88e3      	ldrhge	r3, [r4, #6]
 800ce0c:	181b      	addge	r3, r3, r0
 800ce0e:	80e3      	strhge	r3, [r4, #6]
 800ce10:	b002      	add	sp, #8
 800ce12:	bd70      	pop	{r4, r5, r6, pc}
 800ce14:	9200      	str	r2, [sp, #0]
 800ce16:	460b      	mov	r3, r1
 800ce18:	4a02      	ldr	r2, [pc, #8]	@ (800ce24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x4c>)
 800ce1a:	e7f1      	b.n	800ce00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800ce1c:	080188c4 	stmdaeq	r1, {r2, r6, r7, fp, pc}
 800ce20:	080188b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, pc}
 800ce24:	080188c5 	stmdaeq	r1, {r0, r2, r6, r7, fp, pc}

0800ce28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>:
 800ce28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ce2c:	8885      	ldrh	r5, [r0, #4]
 800ce2e:	4698      	mov	r8, r3
 800ce30:	88c3      	ldrh	r3, [r0, #6]
 800ce32:	42ab      	cmp	r3, r5
 800ce34:	4604      	mov	r4, r0
 800ce36:	d229      	bcs.n	800ce8c <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x64>
 800ce38:	6826      	ldr	r6, [r4, #0]
 800ce3a:	f894 a008 	ldrb.w	sl, [r4, #8]
 800ce3e:	4691      	mov	r9, r2
 800ce40:	ee10 0a10 	vmov	r0, s0
 800ce44:	460f      	mov	r7, r1
 800ce46:	441e      	add	r6, r3
 800ce48:	1aed      	subs	r5, r5, r3
 800ce4a:	f7fc f9f7 	bl	800923c <__aeabi_f2d>
 800ce4e:	f1b9 0f00 	cmp.w	r9, #0
 800ce52:	d109      	bne.n	800ce68 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x40>
 800ce54:	f1ba 0f00 	cmp.w	sl, #0
 800ce58:	d109      	bne.n	800ce6e <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x46>
 800ce5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ce5e:	4a10      	ldr	r2, [pc, #64]	@ (800cea0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x78>)
 800ce60:	f8cd 8000 	str.w	r8, [sp]
 800ce64:	463b      	mov	r3, r7
 800ce66:	e008      	b.n	800ce7a <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x52>
 800ce68:	f1ba 0f00 	cmp.w	sl, #0
 800ce6c:	d011      	beq.n	800ce92 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x6a>
 800ce6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ce72:	4a0c      	ldr	r2, [pc, #48]	@ (800cea4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x7c>)
 800ce74:	f8cd 8000 	str.w	r8, [sp]
 800ce78:	463b      	mov	r3, r7
 800ce7a:	4629      	mov	r1, r5
 800ce7c:	4630      	mov	r0, r6
 800ce7e:	f00a ff35 	bl	8017cec <snprintf>
 800ce82:	4285      	cmp	r5, r0
 800ce84:	bfa2      	ittt	ge
 800ce86:	88e3      	ldrhge	r3, [r4, #6]
 800ce88:	181b      	addge	r3, r3, r0
 800ce8a:	80e3      	strhge	r3, [r4, #6]
 800ce8c:	b004      	add	sp, #16
 800ce8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ce92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ce96:	4a04      	ldr	r2, [pc, #16]	@ (800cea8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x80>)
 800ce98:	f8cd 8000 	str.w	r8, [sp]
 800ce9c:	463b      	mov	r3, r7
 800ce9e:	e7ec      	b.n	800ce7a <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x52>
 800cea0:	08018ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, pc}
 800cea4:	08018cc1 	stmdaeq	r1, {r0, r6, r7, sl, fp, pc}
 800cea8:	08018ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, pc}

0800ceac <pixel::pixel_convert_TxH(unsigned char)>:
 800ceac:	28f0      	cmp	r0, #240	@ 0xf0
 800ceae:	d017      	beq.n	800cee0 <pixel::pixel_convert_TxH(unsigned char)+0x34>
 800ceb0:	d80c      	bhi.n	800cecc <pixel::pixel_convert_TxH(unsigned char)+0x20>
 800ceb2:	28c0      	cmp	r0, #192	@ 0xc0
 800ceb4:	d017      	beq.n	800cee6 <pixel::pixel_convert_TxH(unsigned char)+0x3a>
 800ceb6:	28e0      	cmp	r0, #224	@ 0xe0
 800ceb8:	d018      	beq.n	800ceec <pixel::pixel_convert_TxH(unsigned char)+0x40>
 800ceba:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 800cf00 <pixel::pixel_convert_TxH(unsigned char)+0x54>
 800cebe:	2880      	cmp	r0, #128	@ 0x80
 800cec0:	eef4 7a04 	vmov.f32	s15, #68	@ 0x3e200000  0.1562500
 800cec4:	bf08      	it	eq
 800cec6:	eeb0 0a67 	vmoveq.f32	s0, s15
 800ceca:	4770      	bx	lr
 800cecc:	28fc      	cmp	r0, #252	@ 0xfc
 800cece:	d010      	beq.n	800cef2 <pixel::pixel_convert_TxH(unsigned char)+0x46>
 800ced0:	28fe      	cmp	r0, #254	@ 0xfe
 800ced2:	d011      	beq.n	800cef8 <pixel::pixel_convert_TxH(unsigned char)+0x4c>
 800ced4:	ed9f 0a0a 	vldr	s0, [pc, #40]	@ 800cf00 <pixel::pixel_convert_TxH(unsigned char)+0x54>
 800ced8:	28f8      	cmp	r0, #248	@ 0xf8
 800ceda:	eef6 7a09 	vmov.f32	s15, #105	@ 0x3f480000  0.7812500
 800cede:	e7f1      	b.n	800cec4 <pixel::pixel_convert_TxH(unsigned char)+0x18>
 800cee0:	eeb6 0a04 	vmov.f32	s0, #100	@ 0x3f200000  0.625
 800cee4:	4770      	bx	lr
 800cee6:	eeb5 0a04 	vmov.f32	s0, #84	@ 0x3ea00000  0.3125000
 800ceea:	4770      	bx	lr
 800ceec:	eeb5 0a0e 	vmov.f32	s0, #94	@ 0x3ef00000  0.4687500
 800cef0:	4770      	bx	lr
 800cef2:	eeb6 0a0e 	vmov.f32	s0, #110	@ 0x3f700000  0.9375000
 800cef6:	4770      	bx	lr
 800cef8:	ed9f 0a02 	vldr	s0, [pc, #8]	@ 800cf04 <pixel::pixel_convert_TxH(unsigned char)+0x58>
 800cefc:	4770      	bx	lr
 800cefe:	bf00      	nop
 800cf00:	00000000 	andeq	r0, r0, r0
 800cf04:	3f8c0000 	svccc	0x008c0000

0800cf08 <pixel::pixel_convert_TxH(float)>:
 800cf08:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800cf9c <pixel::pixel_convert_TxH(float)+0x94>
 800cf0c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf14:	d433      	bmi.n	800cf7e <pixel::pixel_convert_TxH(float)+0x76>
 800cf16:	eef4 7a0e 	vmov.f32	s15, #78	@ 0x3e700000  0.2343750
 800cf1a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf22:	d42e      	bmi.n	800cf82 <pixel::pixel_convert_TxH(float)+0x7a>
 800cf24:	eef5 7a09 	vmov.f32	s15, #89	@ 0x3ec80000  0.3906250
 800cf28:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf30:	d429      	bmi.n	800cf86 <pixel::pixel_convert_TxH(float)+0x7e>
 800cf32:	eddf 7a1b 	vldr	s15, [pc, #108]	@ 800cfa0 <pixel::pixel_convert_TxH(float)+0x98>
 800cf36:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf3e:	d424      	bmi.n	800cf8a <pixel::pixel_convert_TxH(float)+0x82>
 800cf40:	eddf 7a18 	vldr	s15, [pc, #96]	@ 800cfa4 <pixel::pixel_convert_TxH(float)+0x9c>
 800cf44:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf4c:	d41f      	bmi.n	800cf8e <pixel::pixel_convert_TxH(float)+0x86>
 800cf4e:	eddf 7a16 	vldr	s15, [pc, #88]	@ 800cfa8 <pixel::pixel_convert_TxH(float)+0xa0>
 800cf52:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf5a:	d41a      	bmi.n	800cf92 <pixel::pixel_convert_TxH(float)+0x8a>
 800cf5c:	eddf 7a13 	vldr	s15, [pc, #76]	@ 800cfac <pixel::pixel_convert_TxH(float)+0xa4>
 800cf60:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf68:	d415      	bmi.n	800cf96 <pixel::pixel_convert_TxH(float)+0x8e>
 800cf6a:	eddf 7a11 	vldr	s15, [pc, #68]	@ 800cfb0 <pixel::pixel_convert_TxH(float)+0xa8>
 800cf6e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cf72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf76:	bf4c      	ite	mi
 800cf78:	20fe      	movmi	r0, #254	@ 0xfe
 800cf7a:	2000      	movpl	r0, #0
 800cf7c:	4770      	bx	lr
 800cf7e:	2000      	movs	r0, #0
 800cf80:	4770      	bx	lr
 800cf82:	2080      	movs	r0, #128	@ 0x80
 800cf84:	4770      	bx	lr
 800cf86:	20c0      	movs	r0, #192	@ 0xc0
 800cf88:	4770      	bx	lr
 800cf8a:	20e0      	movs	r0, #224	@ 0xe0
 800cf8c:	4770      	bx	lr
 800cf8e:	20f0      	movs	r0, #240	@ 0xf0
 800cf90:	4770      	bx	lr
 800cf92:	20f8      	movs	r0, #248	@ 0xf8
 800cf94:	4770      	bx	lr
 800cf96:	20fc      	movs	r0, #252	@ 0xfc
 800cf98:	4770      	bx	lr
 800cf9a:	bf00      	nop
 800cf9c:	3da00000 	stccc	0, cr0, [r0]
 800cfa0:	3f0c0000 	svccc	0x000c0000
 800cfa4:	3f340000 	svccc	0x00340000
 800cfa8:	3f5c0000 	svccc	0x005c0000
 800cfac:	3f820000 	svccc	0x00820000
 800cfb0:	3f960000 	svccc	0x00960000

0800cfb4 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>:
 800cfb4:	b507      	push	{r0, r1, r2, lr}
 800cfb6:	2300      	movs	r3, #0
 800cfb8:	2101      	movs	r1, #1
 800cfba:	e9cd 3100 	strd	r3, r1, [sp]
 800cfbe:	4602      	mov	r2, r0
 800cfc0:	4804      	ldr	r0, [pc, #16]	@ (800cfd4 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)+0x20>)
 800cfc2:	2326      	movs	r3, #38	@ 0x26
 800cfc4:	6800      	ldr	r0, [r0, #0]
 800cfc6:	2102      	movs	r1, #2
 800cfc8:	f007 f92e 	bl	8014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800cfcc:	b003      	add	sp, #12
 800cfce:	f85d fb04 	ldr.w	pc, [sp], #4
 800cfd2:	bf00      	nop
 800cfd4:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0800cfd8 <PixelDmxParams::PixelDmxParams()>:
 800cfd8:	2103      	movs	r1, #3
 800cfda:	7101      	strb	r1, [r0, #4]
 800cfdc:	f06f 0155 	mvn.w	r1, #85	@ 0x55
 800cfe0:	7141      	strb	r1, [r0, #5]
 800cfe2:	2101      	movs	r1, #1
 800cfe4:	71c1      	strb	r1, [r0, #7]
 800cfe6:	73c1      	strb	r1, [r0, #15]
 800cfe8:	7441      	strb	r1, [r0, #17]
 800cfea:	7581      	strb	r1, [r0, #22]
 800cfec:	2105      	movs	r1, #5
 800cfee:	b530      	push	{r4, r5, lr}
 800cff0:	7601      	strb	r1, [r0, #24]
 800cff2:	253d      	movs	r5, #61	@ 0x3d
 800cff4:	210d      	movs	r1, #13
 800cff6:	7305      	strb	r5, [r0, #12]
 800cff8:	7701      	strb	r1, [r0, #28]
 800cffa:	25ff      	movs	r5, #255	@ 0xff
 800cffc:	2111      	movs	r1, #17
 800cffe:	2200      	movs	r2, #0
 800d000:	2409      	movs	r4, #9
 800d002:	7385      	strb	r5, [r0, #14]
 800d004:	7781      	strb	r1, [r0, #30]
 800d006:	2506      	movs	r5, #6
 800d008:	2115      	movs	r1, #21
 800d00a:	7002      	strb	r2, [r0, #0]
 800d00c:	7042      	strb	r2, [r0, #1]
 800d00e:	7082      	strb	r2, [r0, #2]
 800d010:	70c2      	strb	r2, [r0, #3]
 800d012:	7182      	strb	r2, [r0, #6]
 800d014:	7202      	strb	r2, [r0, #8]
 800d016:	7282      	strb	r2, [r0, #10]
 800d018:	72c4      	strb	r4, [r0, #11]
 800d01a:	7342      	strb	r2, [r0, #13]
 800d01c:	7482      	strb	r2, [r0, #18]
 800d01e:	74c5      	strb	r5, [r0, #19]
 800d020:	7502      	strb	r2, [r0, #20]
 800d022:	7542      	strb	r2, [r0, #21]
 800d024:	7242      	strb	r2, [r0, #9]
 800d026:	7402      	strb	r2, [r0, #16]
 800d028:	75c2      	strb	r2, [r0, #23]
 800d02a:	7642      	strb	r2, [r0, #25]
 800d02c:	7684      	strb	r4, [r0, #26]
 800d02e:	76c2      	strb	r2, [r0, #27]
 800d030:	7742      	strb	r2, [r0, #29]
 800d032:	77c2      	strb	r2, [r0, #31]
 800d034:	f880 1020 	strb.w	r1, [r0, #32]
 800d038:	2119      	movs	r1, #25
 800d03a:	f880 1022 	strb.w	r1, [r0, #34]	@ 0x22
 800d03e:	211d      	movs	r1, #29
 800d040:	f880 2021 	strb.w	r2, [r0, #33]	@ 0x21
 800d044:	f880 2023 	strb.w	r2, [r0, #35]	@ 0x23
 800d048:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800d04c:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800d050:	bd30      	pop	{r4, r5, pc}
	...

0800d054 <PixelDmxParams::callbackFunction(char const*)>:
 800d054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d058:	4604      	mov	r4, r0
 800d05a:	b088      	sub	sp, #32
 800d05c:	460d      	mov	r5, r1
 800d05e:	b929      	cbnz	r1, 800d06c <PixelDmxParams::callbackFunction(char const*)+0x18>
 800d060:	4b8d      	ldr	r3, [pc, #564]	@ (800d298 <PixelDmxParams::callbackFunction(char const*)+0x244>)
 800d062:	4a8e      	ldr	r2, [pc, #568]	@ (800d29c <PixelDmxParams::callbackFunction(char const*)+0x248>)
 800d064:	488e      	ldr	r0, [pc, #568]	@ (800d2a0 <PixelDmxParams::callbackFunction(char const*)+0x24c>)
 800d066:	217a      	movs	r1, #122	@ 0x7a
 800d068:	f00a fef8 	bl	8017e5c <__assert_func>
 800d06c:	2308      	movs	r3, #8
 800d06e:	9302      	str	r3, [sp, #8]
 800d070:	498c      	ldr	r1, [pc, #560]	@ (800d2a4 <PixelDmxParams::callbackFunction(char const*)+0x250>)
 800d072:	446b      	add	r3, sp
 800d074:	aa04      	add	r2, sp, #16
 800d076:	4628      	mov	r0, r5
 800d078:	f007 fbea 	bl	8014850 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d07c:	b9a0      	cbnz	r0, 800d0a8 <PixelDmxParams::callbackFunction(char const*)+0x54>
 800d07e:	9b02      	ldr	r3, [sp, #8]
 800d080:	3320      	adds	r3, #32
 800d082:	446b      	add	r3, sp
 800d084:	f803 0c10 	strb.w	r0, [r3, #-16]
 800d088:	a804      	add	r0, sp, #16
 800d08a:	f001 fc85 	bl	800e998 <pixel::pixel_get_type(char const*)>
 800d08e:	6823      	ldr	r3, [r4, #0]
 800d090:	280e      	cmp	r0, #14
 800d092:	bf0d      	iteet	eq
 800d094:	2203      	moveq	r2, #3
 800d096:	7120      	strbne	r0, [r4, #4]
 800d098:	f043 0301 	orrne.w	r3, r3, #1
 800d09c:	7122      	strbeq	r2, [r4, #4]
 800d09e:	bf08      	it	eq
 800d0a0:	f023 0301 	biceq.w	r3, r3, #1
 800d0a4:	6023      	str	r3, [r4, #0]
 800d0a6:	e033      	b.n	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d0a8:	497f      	ldr	r1, [pc, #508]	@ (800d2a8 <PixelDmxParams::callbackFunction(char const*)+0x254>)
 800d0aa:	f10d 0202 	add.w	r2, sp, #2
 800d0ae:	4628      	mov	r0, r5
 800d0b0:	f007 fc79 	bl	80149a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d0b4:	b990      	cbnz	r0, 800d0dc <PixelDmxParams::callbackFunction(char const*)+0x88>
 800d0b6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800d0ba:	6823      	ldr	r3, [r4, #0]
 800d0bc:	1e51      	subs	r1, r2, #1
 800d0be:	f5b1 7f2a 	cmp.w	r1, #680	@ 0x2a8
 800d0c2:	bf2d      	iteet	cs
 800d0c4:	f06f 0255 	mvncs.w	r2, #85	@ 0x55
 800d0c8:	f8a4 2005 	strhcc.w	r2, [r4, #5]
 800d0cc:	f043 0302 	orrcc.w	r3, r3, #2
 800d0d0:	7162      	strbcs	r2, [r4, #5]
 800d0d2:	bf24      	itt	cs
 800d0d4:	71a0      	strbcs	r0, [r4, #6]
 800d0d6:	f023 0302 	biccs.w	r3, r3, #2
 800d0da:	e7e3      	b.n	800d0a4 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800d0dc:	2303      	movs	r3, #3
 800d0de:	9302      	str	r3, [sp, #8]
 800d0e0:	4972      	ldr	r1, [pc, #456]	@ (800d2ac <PixelDmxParams::callbackFunction(char const*)+0x258>)
 800d0e2:	ab02      	add	r3, sp, #8
 800d0e4:	aa04      	add	r2, sp, #16
 800d0e6:	4628      	mov	r0, r5
 800d0e8:	f007 fbb2 	bl	8014850 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d0ec:	b998      	cbnz	r0, 800d116 <PixelDmxParams::callbackFunction(char const*)+0xc2>
 800d0ee:	9b02      	ldr	r3, [sp, #8]
 800d0f0:	3320      	adds	r3, #32
 800d0f2:	446b      	add	r3, sp
 800d0f4:	f803 0c10 	strb.w	r0, [r3, #-16]
 800d0f8:	a804      	add	r0, sp, #16
 800d0fa:	f001 fc7d 	bl	800e9f8 <pixel::pixel_get_map(char const*)>
 800d0fe:	6823      	ldr	r3, [r4, #0]
 800d100:	74e0      	strb	r0, [r4, #19]
 800d102:	2806      	cmp	r0, #6
 800d104:	bf14      	ite	ne
 800d106:	f443 7300 	orrne.w	r3, r3, #512	@ 0x200
 800d10a:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 800d10e:	6023      	str	r3, [r4, #0]
 800d110:	b008      	add	sp, #32
 800d112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d116:	4966      	ldr	r1, [pc, #408]	@ (800d2b0 <PixelDmxParams::callbackFunction(char const*)+0x25c>)
 800d118:	aa01      	add	r2, sp, #4
 800d11a:	4628      	mov	r0, r5
 800d11c:	f007 fbb1 	bl	8014882 <Sscan::Float(char const*, char const*, float&)>
 800d120:	b968      	cbnz	r0, 800d13e <PixelDmxParams::callbackFunction(char const*)+0xea>
 800d122:	ed9d 0a01 	vldr	s0, [sp, #4]
 800d126:	f7ff feef 	bl	800cf08 <pixel::pixel_convert_TxH(float)>
 800d12a:	6823      	ldr	r3, [r4, #0]
 800d12c:	b120      	cbz	r0, 800d138 <PixelDmxParams::callbackFunction(char const*)+0xe4>
 800d12e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800d132:	6023      	str	r3, [r4, #0]
 800d134:	7520      	strb	r0, [r4, #20]
 800d136:	e7eb      	b.n	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d138:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800d13c:	e7f9      	b.n	800d132 <PixelDmxParams::callbackFunction(char const*)+0xde>
 800d13e:	495d      	ldr	r1, [pc, #372]	@ (800d2b4 <PixelDmxParams::callbackFunction(char const*)+0x260>)
 800d140:	aa01      	add	r2, sp, #4
 800d142:	4628      	mov	r0, r5
 800d144:	f007 fb9d 	bl	8014882 <Sscan::Float(char const*, char const*, float&)>
 800d148:	b968      	cbnz	r0, 800d166 <PixelDmxParams::callbackFunction(char const*)+0x112>
 800d14a:	ed9d 0a01 	vldr	s0, [sp, #4]
 800d14e:	f7ff fedb 	bl	800cf08 <pixel::pixel_convert_TxH(float)>
 800d152:	6823      	ldr	r3, [r4, #0]
 800d154:	b120      	cbz	r0, 800d160 <PixelDmxParams::callbackFunction(char const*)+0x10c>
 800d156:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800d15a:	6023      	str	r3, [r4, #0]
 800d15c:	7560      	strb	r0, [r4, #21]
 800d15e:	e7d7      	b.n	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d160:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800d164:	e7f9      	b.n	800d15a <PixelDmxParams::callbackFunction(char const*)+0x106>
 800d166:	4954      	ldr	r1, [pc, #336]	@ (800d2b8 <PixelDmxParams::callbackFunction(char const*)+0x264>)
 800d168:	f10d 0202 	add.w	r2, sp, #2
 800d16c:	4628      	mov	r0, r5
 800d16e:	f007 fc1a 	bl	80149a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d172:	b998      	cbnz	r0, 800d19c <PixelDmxParams::callbackFunction(char const*)+0x148>
 800d174:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800d178:	6823      	ldr	r3, [r4, #0]
 800d17a:	1e8a      	subs	r2, r1, #2
 800d17c:	b292      	uxth	r2, r2
 800d17e:	f240 25a6 	movw	r5, #678	@ 0x2a6
 800d182:	42aa      	cmp	r2, r5
 800d184:	bf81      	itttt	hi
 800d186:	2201      	movhi	r2, #1
 800d188:	7462      	strbhi	r2, [r4, #17]
 800d18a:	74a0      	strbhi	r0, [r4, #18]
 800d18c:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 800d190:	bf9c      	itt	ls
 800d192:	f8a4 1011 	strhls.w	r1, [r4, #17]
 800d196:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 800d19a:	e783      	b.n	800d0a4 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800d19c:	4947      	ldr	r1, [pc, #284]	@ (800d2bc <PixelDmxParams::callbackFunction(char const*)+0x268>)
 800d19e:	aa03      	add	r2, sp, #12
 800d1a0:	4628      	mov	r0, r5
 800d1a2:	f007 fc1c 	bl	80149de <Sscan::Uint32(char const*, char const*, unsigned long&)>
 800d1a6:	b960      	cbnz	r0, 800d1c2 <PixelDmxParams::callbackFunction(char const*)+0x16e>
 800d1a8:	9a03      	ldr	r2, [sp, #12]
 800d1aa:	4945      	ldr	r1, [pc, #276]	@ (800d2c0 <PixelDmxParams::callbackFunction(char const*)+0x26c>)
 800d1ac:	6823      	ldr	r3, [r4, #0]
 800d1ae:	f8c4 200a 	str.w	r2, [r4, #10]
 800d1b2:	428a      	cmp	r2, r1
 800d1b4:	bf14      	ite	ne
 800d1b6:	f043 0310 	orrne.w	r3, r3, #16
 800d1ba:	f023 0310 	biceq.w	r3, r3, #16
 800d1be:	6023      	str	r3, [r4, #0]
 800d1c0:	e7a6      	b.n	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d1c2:	4940      	ldr	r1, [pc, #256]	@ (800d2c4 <PixelDmxParams::callbackFunction(char const*)+0x270>)
 800d1c4:	f10d 0201 	add.w	r2, sp, #1
 800d1c8:	4628      	mov	r0, r5
 800d1ca:	f007 fc31 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d1ce:	b988      	cbnz	r0, 800d1f4 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800d1d0:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800d1d4:	6823      	ldr	r3, [r4, #0]
 800d1d6:	1e4a      	subs	r2, r1, #1
 800d1d8:	b2d2      	uxtb	r2, r2
 800d1da:	2afd      	cmp	r2, #253	@ 0xfd
 800d1dc:	bf89      	itett	hi
 800d1de:	f023 0320 	bichi.w	r3, r3, #32
 800d1e2:	f043 0320 	orrls.w	r3, r3, #32
 800d1e6:	6023      	strhi	r3, [r4, #0]
 800d1e8:	23ff      	movhi	r3, #255	@ 0xff
 800d1ea:	bf9a      	itte	ls
 800d1ec:	6023      	strls	r3, [r4, #0]
 800d1ee:	73a1      	strbls	r1, [r4, #14]
 800d1f0:	73a3      	strbhi	r3, [r4, #14]
 800d1f2:	e78d      	b.n	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d1f4:	f8df 80d8 	ldr.w	r8, [pc, #216]	@ 800d2d0 <PixelDmxParams::callbackFunction(char const*)+0x27c>
 800d1f8:	2600      	movs	r6, #0
 800d1fa:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 800d1fe:	f10d 0202 	add.w	r2, sp, #2
 800d202:	4641      	mov	r1, r8
 800d204:	4628      	mov	r0, r5
 800d206:	f007 fbce 	bl	80149a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d20a:	b960      	cbnz	r0, 800d226 <PixelDmxParams::callbackFunction(char const*)+0x1d2>
 800d20c:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800d210:	6823      	ldr	r3, [r4, #0]
 800d212:	fa07 f006 	lsl.w	r0, r7, r6
 800d216:	f106 0208 	add.w	r2, r6, #8
 800d21a:	b1f9      	cbz	r1, 800d25c <PixelDmxParams::callbackFunction(char const*)+0x208>
 800d21c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800d220:	4303      	orrs	r3, r0
 800d222:	80d1      	strh	r1, [r2, #6]
 800d224:	6023      	str	r3, [r4, #0]
 800d226:	3601      	adds	r6, #1
 800d228:	2e08      	cmp	r6, #8
 800d22a:	f108 0814 	add.w	r8, r8, #20
 800d22e:	d1e6      	bne.n	800d1fe <PixelDmxParams::callbackFunction(char const*)+0x1aa>
 800d230:	4925      	ldr	r1, [pc, #148]	@ (800d2c8 <PixelDmxParams::callbackFunction(char const*)+0x274>)
 800d232:	f10d 0201 	add.w	r2, sp, #1
 800d236:	4628      	mov	r0, r5
 800d238:	f007 fbfa 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d23c:	b9b0      	cbnz	r0, 800d26c <PixelDmxParams::callbackFunction(char const*)+0x218>
 800d23e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d242:	6823      	ldr	r3, [r4, #0]
 800d244:	1e91      	subs	r1, r2, #2
 800d246:	2906      	cmp	r1, #6
 800d248:	bf8d      	iteet	hi
 800d24a:	2201      	movhi	r2, #1
 800d24c:	73e2      	strbls	r2, [r4, #15]
 800d24e:	f043 0340 	orrls.w	r3, r3, #64	@ 0x40
 800d252:	73e2      	strbhi	r2, [r4, #15]
 800d254:	bf88      	it	hi
 800d256:	f023 0340 	bichi.w	r3, r3, #64	@ 0x40
 800d25a:	e723      	b.n	800d0a4 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800d25c:	00b1      	lsls	r1, r6, #2
 800d25e:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800d262:	3101      	adds	r1, #1
 800d264:	80d1      	strh	r1, [r2, #6]
 800d266:	ea23 0300 	bic.w	r3, r3, r0
 800d26a:	e7db      	b.n	800d224 <PixelDmxParams::callbackFunction(char const*)+0x1d0>
 800d26c:	4917      	ldr	r1, [pc, #92]	@ (800d2cc <PixelDmxParams::callbackFunction(char const*)+0x278>)
 800d26e:	f10d 0201 	add.w	r2, sp, #1
 800d272:	4628      	mov	r0, r5
 800d274:	f007 fbdc 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d278:	2800      	cmp	r0, #0
 800d27a:	f47f af49 	bne.w	800d110 <PixelDmxParams::callbackFunction(char const*)+0xbc>
 800d27e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d282:	6823      	ldr	r3, [r4, #0]
 800d284:	1e51      	subs	r1, r2, #1
 800d286:	2904      	cmp	r1, #4
 800d288:	bf99      	ittee	ls
 800d28a:	7422      	strbls	r2, [r4, #16]
 800d28c:	f043 0308 	orrls.w	r3, r3, #8
 800d290:	7420      	strbhi	r0, [r4, #16]
 800d292:	f023 0308 	bichi.w	r3, r3, #8
 800d296:	e705      	b.n	800d0a4 <PixelDmxParams::callbackFunction(char const*)+0x50>
 800d298:	08018cd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, fp, pc}
 800d29c:	08018ce7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, fp, pc}
 800d2a0:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d2a4:	0801c09c 	stmdaeq	r1, {r2, r3, r4, r7, lr, pc}
 800d2a8:	0801c072 	stmdaeq	r1, {r1, r4, r5, r6, lr, pc}
 800d2ac:	0801c08c 	stmdaeq	r1, {r2, r3, r7, lr, pc}
 800d2b0:	0801c084 	stmdaeq	r1, {r2, r7, lr, pc}
 800d2b4:	0801c07c 	stmdaeq	r1, {r2, r3, r4, r5, r6, lr, pc}
 800d2b8:	0801c062 	stmdaeq	r1, {r1, r5, r6, lr, pc}
 800d2bc:	0801c053 	stmdaeq	r1, {r0, r1, r4, r6, lr, pc}
 800d2c0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d2c4:	0801c041 	stmdaeq	r1, {r0, r6, lr, pc}
 800d2c8:	0801c036 	stmdaeq	r1, {r1, r2, r4, r5, lr, pc}
 800d2cc:	0801c029 	stmdaeq	r1, {r0, r3, r5, lr, pc}
 800d2d0:	0801c0b1 	stmdaeq	r1, {r0, r4, r5, r7, lr, pc}

0800d2d4 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800d2d4:	b538      	push	{r3, r4, r5, lr}
 800d2d6:	460d      	mov	r5, r1
 800d2d8:	4604      	mov	r4, r0
 800d2da:	b930      	cbnz	r0, 800d2ea <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x16>
 800d2dc:	4b0a      	ldr	r3, [pc, #40]	@ (800d308 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x34>)
 800d2de:	4a0b      	ldr	r2, [pc, #44]	@ (800d30c <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800d2e0:	480b      	ldr	r0, [pc, #44]	@ (800d310 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800d2e2:	f240 11b5 	movw	r1, #437	@ 0x1b5
 800d2e6:	f00a fdb9 	bl	8017e5c <__assert_func>
 800d2ea:	b935      	cbnz	r5, 800d2fa <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x26>
 800d2ec:	4b09      	ldr	r3, [pc, #36]	@ (800d314 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x40>)
 800d2ee:	4a07      	ldr	r2, [pc, #28]	@ (800d30c <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x38>)
 800d2f0:	4807      	ldr	r0, [pc, #28]	@ (800d310 <PixelDmxParams::staticCallbackFunction(void*, char const*)+0x3c>)
 800d2f2:	f44f 71db 	mov.w	r1, #438	@ 0x1b6
 800d2f6:	f00a fdb1 	bl	8017e5c <__assert_func>
 800d2fa:	4629      	mov	r1, r5
 800d2fc:	4620      	mov	r0, r4
 800d2fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d302:	f7ff bea7 	b.w	800d054 <PixelDmxParams::callbackFunction(char const*)>
 800d306:	bf00      	nop
 800d308:	08018d16 	stmdaeq	r1, {r1, r2, r4, r8, sl, fp, pc}
 800d30c:	08018d23 	stmdaeq	r1, {r0, r1, r5, r8, sl, fp, pc}
 800d310:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d314:	08018406 	stmdaeq	r1, {r1, r2, sl, pc}

0800d318 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)>:
 800d318:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d31a:	4604      	mov	r4, r0
 800d31c:	b087      	sub	sp, #28
 800d31e:	460e      	mov	r6, r1
 800d320:	461f      	mov	r7, r3
 800d322:	4615      	mov	r5, r2
 800d324:	b932      	cbnz	r2, 800d334 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x1c>
 800d326:	4b87      	ldr	r3, [pc, #540]	@ (800d544 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 800d328:	4a87      	ldr	r2, [pc, #540]	@ (800d548 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 800d32a:	4888      	ldr	r0, [pc, #544]	@ (800d54c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800d32c:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 800d330:	f00a fd94 	bl	8017e5c <__assert_func>
 800d334:	2e00      	cmp	r6, #0
 800d336:	f000 8092 	beq.w	800d45e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x146>
 800d33a:	2226      	movs	r2, #38	@ 0x26
 800d33c:	4631      	mov	r1, r6
 800d33e:	4620      	mov	r0, r4
 800d340:	f00a f9b1 	bl	80176a6 <memmove>
 800d344:	4982      	ldr	r1, [pc, #520]	@ (800d550 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 800d346:	463b      	mov	r3, r7
 800d348:	462a      	mov	r2, r5
 800d34a:	a803      	add	r0, sp, #12
 800d34c:	f007 f970 	bl	8014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800d350:	7920      	ldrb	r0, [r4, #4]
 800d352:	f001 fb15 	bl	800e980 <pixel::pixel_get_type(pixel::Type)>
 800d356:	6823      	ldr	r3, [r4, #0]
 800d358:	497e      	ldr	r1, [pc, #504]	@ (800d554 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x23c>)
 800d35a:	4602      	mov	r2, r0
 800d35c:	f003 0301 	and.w	r3, r3, #1
 800d360:	a803      	add	r0, sp, #12
 800d362:	f7ff fd39 	bl	800cdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d366:	6823      	ldr	r3, [r4, #0]
 800d368:	f8b4 2005 	ldrh.w	r2, [r4, #5]
 800d36c:	497a      	ldr	r1, [pc, #488]	@ (800d558 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x240>)
 800d36e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d372:	a803      	add	r0, sp, #12
 800d374:	f7ff fd08 	bl	800cd88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d378:	4978      	ldr	r1, [pc, #480]	@ (800d55c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x244>)
 800d37a:	a803      	add	r0, sp, #12
 800d37c:	f007 fa14 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d380:	6823      	ldr	r3, [r4, #0]
 800d382:	059e      	lsls	r6, r3, #22
 800d384:	d407      	bmi.n	800d396 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x7e>
 800d386:	7923      	ldrb	r3, [r4, #4]
 800d388:	3b01      	subs	r3, #1
 800d38a:	2b09      	cmp	r3, #9
 800d38c:	bf96      	itet	ls
 800d38e:	4a74      	ldrls	r2, [pc, #464]	@ (800d560 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x248>)
 800d390:	2302      	movhi	r3, #2
 800d392:	56d3      	ldrsbls	r3, [r2, r3]
 800d394:	74e3      	strb	r3, [r4, #19]
 800d396:	7ce0      	ldrb	r0, [r4, #19]
 800d398:	f001 fb64 	bl	800ea64 <pixel::pixel_get_map(pixel::Map)>
 800d39c:	6823      	ldr	r3, [r4, #0]
 800d39e:	4971      	ldr	r1, [pc, #452]	@ (800d564 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x24c>)
 800d3a0:	4602      	mov	r2, r0
 800d3a2:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800d3a6:	a803      	add	r0, sp, #12
 800d3a8:	f7ff fd16 	bl	800cdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d3ac:	6823      	ldr	r3, [r4, #0]
 800d3ae:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800d3b2:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800d3b6:	d011      	beq.n	800d3dc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 800d3b8:	f7fc f982 	bl	80096c0 <PixelConfiguration::Get()>
 800d3bc:	7923      	ldrb	r3, [r4, #4]
 800d3be:	2b03      	cmp	r3, #3
 800d3c0:	d051      	beq.n	800d466 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x14e>
 800d3c2:	3b08      	subs	r3, #8
 800d3c4:	2b02      	cmp	r3, #2
 800d3c6:	bf8c      	ite	hi
 800d3c8:	23f0      	movhi	r3, #240	@ 0xf0
 800d3ca:	23fc      	movls	r3, #252	@ 0xfc
 800d3cc:	6822      	ldr	r2, [r4, #0]
 800d3ce:	0555      	lsls	r5, r2, #21
 800d3d0:	bf5c      	itt	pl
 800d3d2:	21c0      	movpl	r1, #192	@ 0xc0
 800d3d4:	7521      	strbpl	r1, [r4, #20]
 800d3d6:	0510      	lsls	r0, r2, #20
 800d3d8:	bf58      	it	pl
 800d3da:	7563      	strbpl	r3, [r4, #21]
 800d3dc:	4962      	ldr	r1, [pc, #392]	@ (800d568 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x250>)
 800d3de:	a803      	add	r0, sp, #12
 800d3e0:	f007 f9e2 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d3e4:	7d20      	ldrb	r0, [r4, #20]
 800d3e6:	f7ff fd61 	bl	800ceac <pixel::pixel_convert_TxH(unsigned char)>
 800d3ea:	6822      	ldr	r2, [r4, #0]
 800d3ec:	495f      	ldr	r1, [pc, #380]	@ (800d56c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x254>)
 800d3ee:	2302      	movs	r3, #2
 800d3f0:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800d3f4:	a803      	add	r0, sp, #12
 800d3f6:	f7ff fd17 	bl	800ce28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>
 800d3fa:	7d60      	ldrb	r0, [r4, #21]
 800d3fc:	f7ff fd56 	bl	800ceac <pixel::pixel_convert_TxH(unsigned char)>
 800d400:	6822      	ldr	r2, [r4, #0]
 800d402:	495b      	ldr	r1, [pc, #364]	@ (800d570 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x258>)
 800d404:	2302      	movs	r3, #2
 800d406:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800d40a:	a803      	add	r0, sp, #12
 800d40c:	f7ff fd0c 	bl	800ce28 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>
 800d410:	4958      	ldr	r1, [pc, #352]	@ (800d574 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x25c>)
 800d412:	a803      	add	r0, sp, #12
 800d414:	f007 f9c8 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d418:	6823      	ldr	r3, [r4, #0]
 800d41a:	f8b4 2011 	ldrh.w	r2, [r4, #17]
 800d41e:	4956      	ldr	r1, [pc, #344]	@ (800d578 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x260>)
 800d420:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800d424:	a803      	add	r0, sp, #12
 800d426:	f7ff fcaf 	bl	800cd88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d42a:	4954      	ldr	r1, [pc, #336]	@ (800d57c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x264>)
 800d42c:	a803      	add	r0, sp, #12
 800d42e:	f007 f9bb 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d432:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d436:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d43a:	f8d4 300a 	ldr.w	r3, [r4, #10]
 800d43e:	6821      	ldr	r1, [r4, #0]
 800d440:	42aa      	cmp	r2, r5
 800d442:	d221      	bcs.n	800d488 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x170>
 800d444:	9803      	ldr	r0, [sp, #12]
 800d446:	06c9      	lsls	r1, r1, #27
 800d448:	4410      	add	r0, r2
 800d44a:	eba5 0502 	sub.w	r5, r5, r2
 800d44e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d452:	d40a      	bmi.n	800d46a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x152>
 800d454:	b95a      	cbnz	r2, 800d46e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x156>
 800d456:	9300      	str	r3, [sp, #0]
 800d458:	4a49      	ldr	r2, [pc, #292]	@ (800d580 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x268>)
 800d45a:	4b4a      	ldr	r3, [pc, #296]	@ (800d584 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x26c>)
 800d45c:	e00a      	b.n	800d474 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x15c>
 800d45e:	4620      	mov	r0, r4
 800d460:	f7ff fda8 	bl	800cfb4 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>
 800d464:	e76e      	b.n	800d344 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x2c>
 800d466:	23f8      	movs	r3, #248	@ 0xf8
 800d468:	e7b0      	b.n	800d3cc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0xb4>
 800d46a:	2a00      	cmp	r2, #0
 800d46c:	d066      	beq.n	800d53c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x224>
 800d46e:	9300      	str	r3, [sp, #0]
 800d470:	4a45      	ldr	r2, [pc, #276]	@ (800d588 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x270>)
 800d472:	4b44      	ldr	r3, [pc, #272]	@ (800d584 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x26c>)
 800d474:	4629      	mov	r1, r5
 800d476:	f00a fc39 	bl	8017cec <snprintf>
 800d47a:	4285      	cmp	r5, r0
 800d47c:	bfa2      	ittt	ge
 800d47e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d482:	18c0      	addge	r0, r0, r3
 800d484:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d488:	4940      	ldr	r1, [pc, #256]	@ (800d58c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x274>)
 800d48a:	4e41      	ldr	r6, [pc, #260]	@ (800d590 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x278>)
 800d48c:	a803      	add	r0, sp, #12
 800d48e:	f007 f98b 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d492:	6823      	ldr	r3, [r4, #0]
 800d494:	7ba2      	ldrb	r2, [r4, #14]
 800d496:	493f      	ldr	r1, [pc, #252]	@ (800d594 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x27c>)
 800d498:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800d49c:	a803      	add	r0, sp, #12
 800d49e:	f7ff fc4b 	bl	800cd38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d4a2:	2500      	movs	r5, #0
 800d4a4:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 800d4a8:	6822      	ldr	r2, [r4, #0]
 800d4aa:	fa07 f305 	lsl.w	r3, r7, r5
 800d4ae:	4393      	bics	r3, r2
 800d4b0:	f105 0208 	add.w	r2, r5, #8
 800d4b4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800d4b8:	bf0c      	ite	eq
 800d4ba:	2301      	moveq	r3, #1
 800d4bc:	2300      	movne	r3, #0
 800d4be:	4631      	mov	r1, r6
 800d4c0:	88d2      	ldrh	r2, [r2, #6]
 800d4c2:	a803      	add	r0, sp, #12
 800d4c4:	3501      	adds	r5, #1
 800d4c6:	f7ff fc5f 	bl	800cd88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d4ca:	2d08      	cmp	r5, #8
 800d4cc:	f106 0614 	add.w	r6, r6, #20
 800d4d0:	d1ea      	bne.n	800d4a8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x190>
 800d4d2:	6823      	ldr	r3, [r4, #0]
 800d4d4:	7be2      	ldrb	r2, [r4, #15]
 800d4d6:	4930      	ldr	r1, [pc, #192]	@ (800d598 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x280>)
 800d4d8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800d4dc:	a803      	add	r0, sp, #12
 800d4de:	f7ff fc2b 	bl	800cd38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d4e2:	492e      	ldr	r1, [pc, #184]	@ (800d59c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x284>)
 800d4e4:	a803      	add	r0, sp, #12
 800d4e6:	f007 f95f 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 800d4ea:	6823      	ldr	r3, [r4, #0]
 800d4ec:	7c22      	ldrb	r2, [r4, #16]
 800d4ee:	492c      	ldr	r1, [pc, #176]	@ (800d5a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x288>)
 800d4f0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d4f4:	a803      	add	r0, sp, #12
 800d4f6:	f7ff fc1f 	bl	800cd38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d4fa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d4fe:	b17b      	cbz	r3, 800d520 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x208>
 800d500:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d504:	9b03      	ldr	r3, [sp, #12]
 800d506:	4413      	add	r3, r2
 800d508:	227d      	movs	r2, #125	@ 0x7d
 800d50a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d50e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d512:	9903      	ldr	r1, [sp, #12]
 800d514:	54ca      	strb	r2, [r1, r3]
 800d516:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d51a:	3301      	adds	r3, #1
 800d51c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d520:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d522:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d526:	6013      	str	r3, [r2, #0]
 800d528:	4907      	ldr	r1, [pc, #28]	@ (800d548 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 800d52a:	9300      	str	r3, [sp, #0]
 800d52c:	4a07      	ldr	r2, [pc, #28]	@ (800d54c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800d52e:	481d      	ldr	r0, [pc, #116]	@ (800d5a4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x28c>)
 800d530:	f44f 73bb 	mov.w	r3, #374	@ 0x176
 800d534:	f00a fbb2 	bl	8017c9c <printf>
 800d538:	b007      	add	sp, #28
 800d53a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d53c:	9300      	str	r3, [sp, #0]
 800d53e:	4a1a      	ldr	r2, [pc, #104]	@ (800d5a8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x290>)
 800d540:	4b10      	ldr	r3, [pc, #64]	@ (800d584 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x26c>)
 800d542:	e797      	b.n	800d474 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x15c>
 800d544:	08018d3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, fp, pc}
 800d548:	08018d4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, fp, pc}
 800d54c:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d550:	0801c0a5 	stmdaeq	r1, {r0, r2, r5, r7, lr, pc}
 800d554:	0801c09c 	stmdaeq	r1, {r2, r3, r4, r7, lr, pc}
 800d558:	0801c072 	stmdaeq	r1, {r1, r4, r5, r6, lr, pc}
 800d55c:	08018d55 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, fp, pc}
 800d560:	0801baf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, fp, ip, sp, pc}
 800d564:	0801c08c 	stmdaeq	r1, {r2, r3, r7, lr, pc}
 800d568:	08018d69 	stmdaeq	r1, {r0, r3, r5, r6, r8, sl, fp, pc}
 800d56c:	0801c084 	stmdaeq	r1, {r2, r7, lr, pc}
 800d570:	0801c07c 	stmdaeq	r1, {r2, r3, r4, r5, r6, lr, pc}
 800d574:	08018d7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, fp, pc}
 800d578:	0801c062 	stmdaeq	r1, {r1, r5, r6, lr, pc}
 800d57c:	08018d88 	stmdaeq	r1, {r3, r7, r8, sl, fp, pc}
 800d580:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 800d584:	0801c053 	stmdaeq	r1, {r0, r1, r4, r6, lr, pc}
 800d588:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 800d58c:	08018d9a 	stmdaeq	r1, {r1, r3, r4, r7, r8, sl, fp, pc}
 800d590:	0801c0b1 	stmdaeq	r1, {r0, r4, r5, r7, lr, pc}
 800d594:	0801c041 	stmdaeq	r1, {r0, r6, lr, pc}
 800d598:	0801c036 	stmdaeq	r1, {r1, r2, r4, r5, lr, pc}
 800d59c:	08018da8 	stmdaeq	r1, {r3, r5, r7, r8, sl, fp, pc}
 800d5a0:	0801c029 	stmdaeq	r1, {r0, r3, r5, lr, pc}
 800d5a4:	08018db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, pc}
 800d5a8:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

0800d5ac <PixelDmxParams::Set()>:
 800d5ac:	b538      	push	{r3, r4, r5, lr}
 800d5ae:	4604      	mov	r4, r0
 800d5b0:	f7fc f886 	bl	80096c0 <PixelConfiguration::Get()>
 800d5b4:	6823      	ldr	r3, [r4, #0]
 800d5b6:	07dd      	lsls	r5, r3, #31
 800d5b8:	bf44      	itt	mi
 800d5ba:	7922      	ldrbmi	r2, [r4, #4]
 800d5bc:	60c2      	strmi	r2, [r0, #12]
 800d5be:	0799      	lsls	r1, r3, #30
 800d5c0:	d505      	bpl.n	800d5ce <PixelDmxParams::Set()+0x22>
 800d5c2:	f8b4 2005 	ldrh.w	r2, [r4, #5]
 800d5c6:	2a00      	cmp	r2, #0
 800d5c8:	bf08      	it	eq
 800d5ca:	22aa      	moveq	r2, #170	@ 0xaa
 800d5cc:	6002      	str	r2, [r0, #0]
 800d5ce:	059a      	lsls	r2, r3, #22
 800d5d0:	bf44      	itt	mi
 800d5d2:	7ce2      	ldrbmi	r2, [r4, #19]
 800d5d4:	6102      	strmi	r2, [r0, #16]
 800d5d6:	055d      	lsls	r5, r3, #21
 800d5d8:	bf44      	itt	mi
 800d5da:	7d22      	ldrbmi	r2, [r4, #20]
 800d5dc:	7542      	strbmi	r2, [r0, #21]
 800d5de:	0519      	lsls	r1, r3, #20
 800d5e0:	bf44      	itt	mi
 800d5e2:	7d62      	ldrbmi	r2, [r4, #21]
 800d5e4:	7582      	strbmi	r2, [r0, #22]
 800d5e6:	06da      	lsls	r2, r3, #27
 800d5e8:	bf44      	itt	mi
 800d5ea:	f8d4 200a 	ldrmi.w	r2, [r4, #10]
 800d5ee:	6042      	strmi	r2, [r0, #4]
 800d5f0:	069d      	lsls	r5, r3, #26
 800d5f2:	4d0e      	ldr	r5, [pc, #56]	@ (800d62c <PixelDmxParams::Set()+0x80>)
 800d5f4:	bf44      	itt	mi
 800d5f6:	7ba3      	ldrbmi	r3, [r4, #14]
 800d5f8:	75c3      	strbmi	r3, [r0, #23]
 800d5fa:	682b      	ldr	r3, [r5, #0]
 800d5fc:	b92b      	cbnz	r3, 800d60a <PixelDmxParams::Set()+0x5e>
 800d5fe:	4b0c      	ldr	r3, [pc, #48]	@ (800d630 <PixelDmxParams::Set()+0x84>)
 800d600:	4a0c      	ldr	r2, [pc, #48]	@ (800d634 <PixelDmxParams::Set()+0x88>)
 800d602:	480d      	ldr	r0, [pc, #52]	@ (800d638 <PixelDmxParams::Set()+0x8c>)
 800d604:	21a4      	movs	r1, #164	@ 0xa4
 800d606:	f00a fc29 	bl	8017e5c <__assert_func>
 800d60a:	6822      	ldr	r2, [r4, #0]
 800d60c:	682b      	ldr	r3, [r5, #0]
 800d60e:	0750      	lsls	r0, r2, #29
 800d610:	bf44      	itt	mi
 800d612:	f8b4 1007 	ldrhmi.w	r1, [r4, #7]
 800d616:	62d9      	strmi	r1, [r3, #44]	@ 0x2c
 800d618:	05d1      	lsls	r1, r2, #23
 800d61a:	bf44      	itt	mi
 800d61c:	f8b4 1011 	ldrhmi.w	r1, [r4, #17]
 800d620:	6219      	strmi	r1, [r3, #32]
 800d622:	0652      	lsls	r2, r2, #25
 800d624:	bf44      	itt	mi
 800d626:	7be2      	ldrbmi	r2, [r4, #15]
 800d628:	61da      	strmi	r2, [r3, #28]
 800d62a:	bd38      	pop	{r3, r4, r5, pc}
 800d62c:	20000074 	andcs	r0, r0, r4, ror r0
 800d630:	08018400 	stmdaeq	r1, {sl, pc}
 800d634:	08018413 	stmdaeq	r1, {r0, r1, r4, sl, pc}
 800d638:	08018dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, pc}

0800d63c <PixelDmxParams::Dump()>:
 800d63c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d63e:	4604      	mov	r4, r0
 800d640:	4b38      	ldr	r3, [pc, #224]	@ (800d724 <PixelDmxParams::Dump()+0xe8>)
 800d642:	4a39      	ldr	r2, [pc, #228]	@ (800d728 <PixelDmxParams::Dump()+0xec>)
 800d644:	4939      	ldr	r1, [pc, #228]	@ (800d72c <PixelDmxParams::Dump()+0xf0>)
 800d646:	483a      	ldr	r0, [pc, #232]	@ (800d730 <PixelDmxParams::Dump()+0xf4>)
 800d648:	4e3a      	ldr	r6, [pc, #232]	@ (800d734 <PixelDmxParams::Dump()+0xf8>)
 800d64a:	f00a fb27 	bl	8017c9c <printf>
 800d64e:	7920      	ldrb	r0, [r4, #4]
 800d650:	f001 f996 	bl	800e980 <pixel::pixel_get_type(pixel::Type)>
 800d654:	7923      	ldrb	r3, [r4, #4]
 800d656:	4938      	ldr	r1, [pc, #224]	@ (800d738 <PixelDmxParams::Dump()+0xfc>)
 800d658:	4602      	mov	r2, r0
 800d65a:	4838      	ldr	r0, [pc, #224]	@ (800d73c <PixelDmxParams::Dump()+0x100>)
 800d65c:	f00a fb1e 	bl	8017c9c <printf>
 800d660:	7ce5      	ldrb	r5, [r4, #19]
 800d662:	4628      	mov	r0, r5
 800d664:	f001 f9fe 	bl	800ea64 <pixel::pixel_get_map(pixel::Map)>
 800d668:	462a      	mov	r2, r5
 800d66a:	4603      	mov	r3, r0
 800d66c:	4934      	ldr	r1, [pc, #208]	@ (800d740 <PixelDmxParams::Dump()+0x104>)
 800d66e:	4835      	ldr	r0, [pc, #212]	@ (800d744 <PixelDmxParams::Dump()+0x108>)
 800d670:	f00a fb14 	bl	8017c9c <printf>
 800d674:	7d25      	ldrb	r5, [r4, #20]
 800d676:	4628      	mov	r0, r5
 800d678:	f7ff fc18 	bl	800ceac <pixel::pixel_convert_TxH(unsigned char)>
 800d67c:	ee10 0a10 	vmov	r0, s0
 800d680:	f7fb fddc 	bl	800923c <__aeabi_f2d>
 800d684:	9500      	str	r5, [sp, #0]
 800d686:	4602      	mov	r2, r0
 800d688:	460b      	mov	r3, r1
 800d68a:	482f      	ldr	r0, [pc, #188]	@ (800d748 <PixelDmxParams::Dump()+0x10c>)
 800d68c:	492f      	ldr	r1, [pc, #188]	@ (800d74c <PixelDmxParams::Dump()+0x110>)
 800d68e:	f00a fb05 	bl	8017c9c <printf>
 800d692:	7d65      	ldrb	r5, [r4, #21]
 800d694:	4628      	mov	r0, r5
 800d696:	f7ff fc09 	bl	800ceac <pixel::pixel_convert_TxH(unsigned char)>
 800d69a:	ee10 0a10 	vmov	r0, s0
 800d69e:	f7fb fdcd 	bl	800923c <__aeabi_f2d>
 800d6a2:	9500      	str	r5, [sp, #0]
 800d6a4:	4602      	mov	r2, r0
 800d6a6:	460b      	mov	r3, r1
 800d6a8:	4827      	ldr	r0, [pc, #156]	@ (800d748 <PixelDmxParams::Dump()+0x10c>)
 800d6aa:	4929      	ldr	r1, [pc, #164]	@ (800d750 <PixelDmxParams::Dump()+0x114>)
 800d6ac:	f00a faf6 	bl	8017c9c <printf>
 800d6b0:	f8b4 2005 	ldrh.w	r2, [r4, #5]
 800d6b4:	4927      	ldr	r1, [pc, #156]	@ (800d754 <PixelDmxParams::Dump()+0x118>)
 800d6b6:	4828      	ldr	r0, [pc, #160]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d6b8:	f00a faf0 	bl	8017c9c <printf>
 800d6bc:	2500      	movs	r5, #0
 800d6be:	f105 0308 	add.w	r3, r5, #8
 800d6c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d6c6:	4631      	mov	r1, r6
 800d6c8:	88da      	ldrh	r2, [r3, #6]
 800d6ca:	4823      	ldr	r0, [pc, #140]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d6cc:	3501      	adds	r5, #1
 800d6ce:	f00a fae5 	bl	8017c9c <printf>
 800d6d2:	2d08      	cmp	r5, #8
 800d6d4:	f106 0614 	add.w	r6, r6, #20
 800d6d8:	d1f1      	bne.n	800d6be <PixelDmxParams::Dump()+0x82>
 800d6da:	7be2      	ldrb	r2, [r4, #15]
 800d6dc:	491f      	ldr	r1, [pc, #124]	@ (800d75c <PixelDmxParams::Dump()+0x120>)
 800d6de:	481e      	ldr	r0, [pc, #120]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d6e0:	f00a fadc 	bl	8017c9c <printf>
 800d6e4:	f8b4 2011 	ldrh.w	r2, [r4, #17]
 800d6e8:	491d      	ldr	r1, [pc, #116]	@ (800d760 <PixelDmxParams::Dump()+0x124>)
 800d6ea:	481b      	ldr	r0, [pc, #108]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d6ec:	f00a fad6 	bl	8017c9c <printf>
 800d6f0:	f8d4 200a 	ldr.w	r2, [r4, #10]
 800d6f4:	491b      	ldr	r1, [pc, #108]	@ (800d764 <PixelDmxParams::Dump()+0x128>)
 800d6f6:	481c      	ldr	r0, [pc, #112]	@ (800d768 <PixelDmxParams::Dump()+0x12c>)
 800d6f8:	f00a fad0 	bl	8017c9c <printf>
 800d6fc:	7ba2      	ldrb	r2, [r4, #14]
 800d6fe:	491b      	ldr	r1, [pc, #108]	@ (800d76c <PixelDmxParams::Dump()+0x130>)
 800d700:	4815      	ldr	r0, [pc, #84]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d702:	f00a facb 	bl	8017c9c <printf>
 800d706:	f8b4 2007 	ldrh.w	r2, [r4, #7]
 800d70a:	4919      	ldr	r1, [pc, #100]	@ (800d770 <PixelDmxParams::Dump()+0x134>)
 800d70c:	4812      	ldr	r0, [pc, #72]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d70e:	f00a fac5 	bl	8017c9c <printf>
 800d712:	7c22      	ldrb	r2, [r4, #16]
 800d714:	4917      	ldr	r1, [pc, #92]	@ (800d774 <PixelDmxParams::Dump()+0x138>)
 800d716:	4810      	ldr	r0, [pc, #64]	@ (800d758 <PixelDmxParams::Dump()+0x11c>)
 800d718:	b002      	add	sp, #8
 800d71a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d71e:	f00a babd 	b.w	8017c9c <printf>
 800d722:	bf00      	nop
 800d724:	0801c0a5 	stmdaeq	r1, {r0, r2, r5, r7, lr, pc}
 800d728:	08018df3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, sl, fp, pc}
 800d72c:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d730:	08018df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, pc}
 800d734:	0801c0b1 	stmdaeq	r1, {r0, r4, r5, r7, lr, pc}
 800d738:	0801c09c 	stmdaeq	r1, {r2, r3, r4, r7, lr, pc}
 800d73c:	08018e06 	stmdaeq	r1, {r1, r2, r9, sl, fp, pc}
 800d740:	0801c08c 	stmdaeq	r1, {r2, r3, r7, lr, pc}
 800d744:	08018e13 	stmdaeq	r1, {r0, r1, r4, r9, sl, fp, pc}
 800d748:	08018e20 	stmdaeq	r1, {r5, r9, sl, fp, pc}
 800d74c:	0801c084 	stmdaeq	r1, {r2, r7, lr, pc}
 800d750:	0801c07c 	stmdaeq	r1, {r2, r3, r4, r5, r6, lr, pc}
 800d754:	0801c072 	stmdaeq	r1, {r1, r4, r5, r6, lr, pc}
 800d758:	08018e31 	stmdaeq	r1, {r0, r4, r5, r9, sl, fp, pc}
 800d75c:	0801c036 	stmdaeq	r1, {r1, r2, r4, r5, lr, pc}
 800d760:	0801c062 	stmdaeq	r1, {r1, r5, r6, lr, pc}
 800d764:	0801c053 	stmdaeq	r1, {r0, r1, r4, r6, lr, pc}
 800d768:	08018e39 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, fp, pc}
 800d76c:	0801c041 	stmdaeq	r1, {r0, r6, lr, pc}
 800d770:	0801c151 	stmdaeq	r1, {r0, r4, r6, r8, lr, pc}
 800d774:	0801c029 	stmdaeq	r1, {r0, r3, r5, lr, pc}

0800d778 <PixelDmxParams::Load()>:
 800d778:	b570      	push	{r4, r5, r6, lr}
 800d77a:	4e0e      	ldr	r6, [pc, #56]	@ (800d7b4 <PixelDmxParams::Load()+0x3c>)
 800d77c:	4d0e      	ldr	r5, [pc, #56]	@ (800d7b8 <PixelDmxParams::Load()+0x40>)
 800d77e:	4604      	mov	r4, r0
 800d780:	4632      	mov	r2, r6
 800d782:	4629      	mov	r1, r5
 800d784:	2352      	movs	r3, #82	@ 0x52
 800d786:	480d      	ldr	r0, [pc, #52]	@ (800d7bc <PixelDmxParams::Load()+0x44>)
 800d788:	f00a fa88 	bl	8017c9c <printf>
 800d78c:	2300      	movs	r3, #0
 800d78e:	7023      	strb	r3, [r4, #0]
 800d790:	7063      	strb	r3, [r4, #1]
 800d792:	70a3      	strb	r3, [r4, #2]
 800d794:	70e3      	strb	r3, [r4, #3]
 800d796:	4620      	mov	r0, r4
 800d798:	f7ff fc0c 	bl	800cfb4 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>
 800d79c:	4620      	mov	r0, r4
 800d79e:	f7ff ff4d 	bl	800d63c <PixelDmxParams::Dump()>
 800d7a2:	4632      	mov	r2, r6
 800d7a4:	4629      	mov	r1, r5
 800d7a6:	4806      	ldr	r0, [pc, #24]	@ (800d7c0 <PixelDmxParams::Load()+0x48>)
 800d7a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d7ac:	2362      	movs	r3, #98	@ 0x62
 800d7ae:	f00a ba75 	b.w	8017c9c <printf>
 800d7b2:	bf00      	nop
 800d7b4:	08018e41 	stmdaeq	r1, {r0, r6, r9, sl, fp, pc}
 800d7b8:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d7bc:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 800d7c0:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}

0800d7c4 <PixelDmxParams::Load(char const*, unsigned long)>:
 800d7c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7c6:	2366      	movs	r3, #102	@ 0x66
 800d7c8:	460e      	mov	r6, r1
 800d7ca:	b087      	sub	sp, #28
 800d7cc:	4604      	mov	r4, r0
 800d7ce:	4617      	mov	r7, r2
 800d7d0:	491d      	ldr	r1, [pc, #116]	@ (800d848 <PixelDmxParams::Load(char const*, unsigned long)+0x84>)
 800d7d2:	4a1e      	ldr	r2, [pc, #120]	@ (800d84c <PixelDmxParams::Load(char const*, unsigned long)+0x88>)
 800d7d4:	481e      	ldr	r0, [pc, #120]	@ (800d850 <PixelDmxParams::Load(char const*, unsigned long)+0x8c>)
 800d7d6:	f00a fa61 	bl	8017c9c <printf>
 800d7da:	b92e      	cbnz	r6, 800d7e8 <PixelDmxParams::Load(char const*, unsigned long)+0x24>
 800d7dc:	4b1d      	ldr	r3, [pc, #116]	@ (800d854 <PixelDmxParams::Load(char const*, unsigned long)+0x90>)
 800d7de:	4a1b      	ldr	r2, [pc, #108]	@ (800d84c <PixelDmxParams::Load(char const*, unsigned long)+0x88>)
 800d7e0:	4819      	ldr	r0, [pc, #100]	@ (800d848 <PixelDmxParams::Load(char const*, unsigned long)+0x84>)
 800d7e2:	2168      	movs	r1, #104	@ 0x68
 800d7e4:	f00a fb3a 	bl	8017e5c <__assert_func>
 800d7e8:	b92f      	cbnz	r7, 800d7f6 <PixelDmxParams::Load(char const*, unsigned long)+0x32>
 800d7ea:	4b1b      	ldr	r3, [pc, #108]	@ (800d858 <PixelDmxParams::Load(char const*, unsigned long)+0x94>)
 800d7ec:	4a17      	ldr	r2, [pc, #92]	@ (800d84c <PixelDmxParams::Load(char const*, unsigned long)+0x88>)
 800d7ee:	4816      	ldr	r0, [pc, #88]	@ (800d848 <PixelDmxParams::Load(char const*, unsigned long)+0x84>)
 800d7f0:	2169      	movs	r1, #105	@ 0x69
 800d7f2:	f00a fb33 	bl	8017e5c <__assert_func>
 800d7f6:	2500      	movs	r5, #0
 800d7f8:	4622      	mov	r2, r4
 800d7fa:	4918      	ldr	r1, [pc, #96]	@ (800d85c <PixelDmxParams::Load(char const*, unsigned long)+0x98>)
 800d7fc:	7025      	strb	r5, [r4, #0]
 800d7fe:	7065      	strb	r5, [r4, #1]
 800d800:	70a5      	strb	r5, [r4, #2]
 800d802:	70e5      	strb	r5, [r4, #3]
 800d804:	a804      	add	r0, sp, #16
 800d806:	f006 ffe9 	bl	80147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d80a:	463a      	mov	r2, r7
 800d80c:	4631      	mov	r1, r6
 800d80e:	a804      	add	r0, sp, #16
 800d810:	f006 ffe8 	bl	80147e4 <ReadConfigFile::Read(char const*, unsigned int)>
 800d814:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800d818:	2326      	movs	r3, #38	@ 0x26
 800d81a:	4811      	ldr	r0, [pc, #68]	@ (800d860 <PixelDmxParams::Load(char const*, unsigned long)+0x9c>)
 800d81c:	9300      	str	r3, [sp, #0]
 800d81e:	462a      	mov	r2, r5
 800d820:	4623      	mov	r3, r4
 800d822:	2102      	movs	r1, #2
 800d824:	6800      	ldr	r0, [r0, #0]
 800d826:	f006 fcd9 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d82a:	4620      	mov	r0, r4
 800d82c:	f7ff ff06 	bl	800d63c <PixelDmxParams::Dump()>
 800d830:	4a06      	ldr	r2, [pc, #24]	@ (800d84c <PixelDmxParams::Load(char const*, unsigned long)+0x88>)
 800d832:	4905      	ldr	r1, [pc, #20]	@ (800d848 <PixelDmxParams::Load(char const*, unsigned long)+0x84>)
 800d834:	480b      	ldr	r0, [pc, #44]	@ (800d864 <PixelDmxParams::Load(char const*, unsigned long)+0xa0>)
 800d836:	2376      	movs	r3, #118	@ 0x76
 800d838:	f00a fa30 	bl	8017c9c <printf>
 800d83c:	a804      	add	r0, sp, #16
 800d83e:	f006 ffd0 	bl	80147e2 <ReadConfigFile::~ReadConfigFile()>
 800d842:	b007      	add	sp, #28
 800d844:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d846:	bf00      	nop
 800d848:	08018cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, pc}
 800d84c:	08018e41 	stmdaeq	r1, {r0, r6, r9, sl, fp, pc}
 800d850:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 800d854:	08018d3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, fp, pc}
 800d858:	08018e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, pc}
 800d85c:	0800d2d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, ip, lr, pc}
 800d860:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc
 800d864:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}

0800d868 <LightSet::GetRefreshRate()>:
 800d868:	2000      	movs	r0, #0
 800d86a:	4770      	bx	lr

0800d86c <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800d86c:	2001      	movs	r0, #1
 800d86e:	2300      	movs	r3, #0
 800d870:	7093      	strb	r3, [r2, #2]
 800d872:	8010      	strh	r0, [r2, #0]
 800d874:	4770      	bx	lr
 800d876:	bf00      	nop

0800d878 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800d878:	2000      	movs	r0, #0
 800d87a:	4770      	bx	lr

0800d87c <WS28xxDmxMulti::GetDmxStartAddress()>:
 800d87c:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800d880:	4770      	bx	lr
 800d882:	bf00      	nop

0800d884 <WS28xxDmxMulti::GetDmxFootprint()>:
 800d884:	2000      	movs	r0, #0
 800d886:	4770      	bx	lr

0800d888 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800d888:	b538      	push	{r3, r4, r5, lr}
 800d88a:	6845      	ldr	r5, [r0, #4]
 800d88c:	4b06      	ldr	r3, [pc, #24]	@ (800d8a8 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x20>)
 800d88e:	6003      	str	r3, [r0, #0]
 800d890:	4604      	mov	r4, r0
 800d892:	b135      	cbz	r5, 800d8a2 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1a>
 800d894:	4628      	mov	r0, r5
 800d896:	f001 fc31 	bl	800f0fc <WS28xxMulti::~WS28xxMulti()>
 800d89a:	2104      	movs	r1, #4
 800d89c:	4628      	mov	r0, r5
 800d89e:	f00a fc51 	bl	8018144 <operator delete(void*, unsigned int)>
 800d8a2:	4620      	mov	r0, r4
 800d8a4:	bd38      	pop	{r3, r4, r5, pc}
 800d8a6:	bf00      	nop
 800d8a8:	0801bb34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, sp, pc}

0800d8ac <WS28xxDmxMulti::Sync()>:
 800d8ac:	b510      	push	{r4, lr}
 800d8ae:	4604      	mov	r4, r0
 800d8b0:	6860      	ldr	r0, [r4, #4]
 800d8b2:	f001 fe5f 	bl	800f574 <WS28xxMulti::IsUpdating()>
 800d8b6:	2800      	cmp	r0, #0
 800d8b8:	d1fa      	bne.n	800d8b0 <WS28xxDmxMulti::Sync()+0x4>
 800d8ba:	6860      	ldr	r0, [r4, #4]
 800d8bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d8c0:	f001 bd66 	b.w	800f390 <WS28xxMulti::Update()>

0800d8c4 <WS28xxDmxMulti::FullOn()>:
 800d8c4:	b510      	push	{r4, lr}
 800d8c6:	4604      	mov	r4, r0
 800d8c8:	6860      	ldr	r0, [r4, #4]
 800d8ca:	f001 fe53 	bl	800f574 <WS28xxMulti::IsUpdating()>
 800d8ce:	2800      	cmp	r0, #0
 800d8d0:	d1fa      	bne.n	800d8c8 <WS28xxDmxMulti::FullOn()+0x4>
 800d8d2:	6860      	ldr	r0, [r4, #4]
 800d8d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d8d8:	f002 be5e 	b.w	8010598 <WS28xxMulti::FullOn()>

0800d8dc <WS28xxDmxMulti::Print()>:
 800d8dc:	b530      	push	{r4, r5, lr}
 800d8de:	4d69      	ldr	r5, [pc, #420]	@ (800da84 <WS28xxDmxMulti::Print()+0x1a8>)
 800d8e0:	682c      	ldr	r4, [r5, #0]
 800d8e2:	b083      	sub	sp, #12
 800d8e4:	2c00      	cmp	r4, #0
 800d8e6:	f000 80a2 	beq.w	800da2e <WS28xxDmxMulti::Print()+0x152>
 800d8ea:	4867      	ldr	r0, [pc, #412]	@ (800da88 <WS28xxDmxMulti::Print()+0x1ac>)
 800d8ec:	f00a fa2b 	bl	8017d46 <puts>
 800d8f0:	68e0      	ldr	r0, [r4, #12]
 800d8f2:	f001 f845 	bl	800e980 <pixel::pixel_get_type(pixel::Type)>
 800d8f6:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800d8fa:	4601      	mov	r1, r0
 800d8fc:	4863      	ldr	r0, [pc, #396]	@ (800da8c <WS28xxDmxMulti::Print()+0x1b0>)
 800d8fe:	f00a f9cd 	bl	8017c9c <printf>
 800d902:	4863      	ldr	r0, [pc, #396]	@ (800da90 <WS28xxDmxMulti::Print()+0x1b4>)
 800d904:	6821      	ldr	r1, [r4, #0]
 800d906:	f00a f9c9 	bl	8017c9c <printf>
 800d90a:	7d23      	ldrb	r3, [r4, #20]
 800d90c:	2b00      	cmp	r3, #0
 800d90e:	d12c      	bne.n	800d96a <WS28xxDmxMulti::Print()+0x8e>
 800d910:	68e0      	ldr	r0, [r4, #12]
 800d912:	f1a0 010b 	sub.w	r1, r0, #11
 800d916:	2901      	cmp	r1, #1
 800d918:	d94b      	bls.n	800d9b2 <WS28xxDmxMulti::Print()+0xd6>
 800d91a:	6861      	ldr	r1, [r4, #4]
 800d91c:	485d      	ldr	r0, [pc, #372]	@ (800da94 <WS28xxDmxMulti::Print()+0x1b8>)
 800d91e:	f00a f9bd 	bl	8017c9c <printf>
 800d922:	69a1      	ldr	r1, [r4, #24]
 800d924:	485c      	ldr	r0, [pc, #368]	@ (800da98 <WS28xxDmxMulti::Print()+0x1bc>)
 800d926:	f00a f9b9 	bl	8017c9c <printf>
 800d92a:	485c      	ldr	r0, [pc, #368]	@ (800da9c <WS28xxDmxMulti::Print()+0x1c0>)
 800d92c:	f00a fa0b 	bl	8017d46 <puts>
 800d930:	69e1      	ldr	r1, [r4, #28]
 800d932:	485b      	ldr	r0, [pc, #364]	@ (800daa0 <WS28xxDmxMulti::Print()+0x1c4>)
 800d934:	f00a f9b2 	bl	8017c9c <printf>
 800d938:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800d93c:	4859      	ldr	r0, [pc, #356]	@ (800daa4 <WS28xxDmxMulti::Print()+0x1c8>)
 800d93e:	f00a f9ad 	bl	8017c9c <printf>
 800d942:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800d944:	4858      	ldr	r0, [pc, #352]	@ (800daa8 <WS28xxDmxMulti::Print()+0x1cc>)
 800d946:	f00a f9a9 	bl	8017c9c <printf>
 800d94a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800d94c:	4857      	ldr	r0, [pc, #348]	@ (800daac <WS28xxDmxMulti::Print()+0x1d0>)
 800d94e:	f00a f9a5 	bl	8017c9c <printf>
 800d952:	8fa0      	ldrh	r0, [r4, #60]	@ 0x3c
 800d954:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800d956:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800d958:	8ea1      	ldrh	r1, [r4, #52]	@ 0x34
 800d95a:	9001      	str	r0, [sp, #4]
 800d95c:	8f64      	ldrh	r4, [r4, #58]	@ 0x3a
 800d95e:	9400      	str	r4, [sp, #0]
 800d960:	4853      	ldr	r0, [pc, #332]	@ (800dab0 <WS28xxDmxMulti::Print()+0x1d4>)
 800d962:	f00a f99b 	bl	8017c9c <printf>
 800d966:	b003      	add	sp, #12
 800d968:	bd30      	pop	{r4, r5, pc}
 800d96a:	6920      	ldr	r0, [r4, #16]
 800d96c:	f001 f87a 	bl	800ea64 <pixel::pixel_get_map(pixel::Map)>
 800d970:	6922      	ldr	r2, [r4, #16]
 800d972:	4601      	mov	r1, r0
 800d974:	484f      	ldr	r0, [pc, #316]	@ (800dab4 <WS28xxDmxMulti::Print()+0x1d8>)
 800d976:	f00a f991 	bl	8017c9c <printf>
 800d97a:	7d65      	ldrb	r5, [r4, #21]
 800d97c:	2dff      	cmp	r5, #255	@ 0xff
 800d97e:	d01d      	beq.n	800d9bc <WS28xxDmxMulti::Print()+0xe0>
 800d980:	2ddf      	cmp	r5, #223	@ 0xdf
 800d982:	d944      	bls.n	800da0e <WS28xxDmxMulti::Print()+0x132>
 800d984:	f1a5 0ce0 	sub.w	ip, r5, #224	@ 0xe0
 800d988:	f1bc 0f1e 	cmp.w	ip, #30
 800d98c:	d816      	bhi.n	800d9bc <WS28xxDmxMulti::Print()+0xe0>
 800d98e:	e8df f00c 	tbb	[pc, ip]
 800d992:	1515156b 	ldrne	r1, [r5, #-1387]	@ 0xfffffa95
 800d996:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d99a:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d99e:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d9a2:	15151571 	ldrne	r1, [r5, #-1393]	@ 0xfffffa8f
 800d9a6:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d9aa:	15151556 	ldrne	r1, [r5, #-1366]	@ 0xfffffaaa
 800d9ae:	005c1559 	subseq	r1, ip, r9, asr r5
 800d9b2:	7de1      	ldrb	r1, [r4, #23]
 800d9b4:	4840      	ldr	r0, [pc, #256]	@ (800dab8 <WS28xxDmxMulti::Print()+0x1dc>)
 800d9b6:	f00a f971 	bl	8017c9c <printf>
 800d9ba:	e7ae      	b.n	800d91a <WS28xxDmxMulti::Print()+0x3e>
 800d9bc:	2200      	movs	r2, #0
 800d9be:	2300      	movs	r3, #0
 800d9c0:	483e      	ldr	r0, [pc, #248]	@ (800dabc <WS28xxDmxMulti::Print()+0x1e0>)
 800d9c2:	9500      	str	r5, [sp, #0]
 800d9c4:	f00a f96a 	bl	8017c9c <printf>
 800d9c8:	7da1      	ldrb	r1, [r4, #22]
 800d9ca:	29ff      	cmp	r1, #255	@ 0xff
 800d9cc:	d018      	beq.n	800da00 <WS28xxDmxMulti::Print()+0x124>
 800d9ce:	29df      	cmp	r1, #223	@ 0xdf
 800d9d0:	d925      	bls.n	800da1e <WS28xxDmxMulti::Print()+0x142>
 800d9d2:	f1a1 0ee0 	sub.w	lr, r1, #224	@ 0xe0
 800d9d6:	f1be 0f1e 	cmp.w	lr, #30
 800d9da:	d811      	bhi.n	800da00 <WS28xxDmxMulti::Print()+0x124>
 800d9dc:	e8df f00e 	tbb	[pc, lr]
 800d9e0:	10101041 	andsne	r1, r0, r1, asr #32
 800d9e4:	10101010 	andsne	r1, r0, r0, lsl r0
 800d9e8:	10101010 	andsne	r1, r0, r0, lsl r0
 800d9ec:	10101010 	andsne	r1, r0, r0, lsl r0
 800d9f0:	10101047 	andsne	r1, r0, r7, asr #32
 800d9f4:	10101010 	andsne	r1, r0, r0, lsl r0
 800d9f8:	1010103e 	andsne	r1, r0, lr, lsr r0
 800d9fc:	0038103b 	eorseq	r1, r8, fp, lsr r0
 800da00:	2200      	movs	r2, #0
 800da02:	2300      	movs	r3, #0
 800da04:	9100      	str	r1, [sp, #0]
 800da06:	482e      	ldr	r0, [pc, #184]	@ (800dac0 <WS28xxDmxMulti::Print()+0x1e4>)
 800da08:	f00a f948 	bl	8017c9c <printf>
 800da0c:	e785      	b.n	800d91a <WS28xxDmxMulti::Print()+0x3e>
 800da0e:	2d80      	cmp	r5, #128	@ 0x80
 800da10:	f04f 0200 	mov.w	r2, #0
 800da14:	d033      	beq.n	800da7e <WS28xxDmxMulti::Print()+0x1a2>
 800da16:	2dc0      	cmp	r5, #192	@ 0xc0
 800da18:	d1d1      	bne.n	800d9be <WS28xxDmxMulti::Print()+0xe2>
 800da1a:	4b2a      	ldr	r3, [pc, #168]	@ (800dac4 <WS28xxDmxMulti::Print()+0x1e8>)
 800da1c:	e7d0      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da1e:	2980      	cmp	r1, #128	@ 0x80
 800da20:	f04f 0200 	mov.w	r2, #0
 800da24:	d029      	beq.n	800da7a <WS28xxDmxMulti::Print()+0x19e>
 800da26:	29c0      	cmp	r1, #192	@ 0xc0
 800da28:	d1eb      	bne.n	800da02 <WS28xxDmxMulti::Print()+0x126>
 800da2a:	4b26      	ldr	r3, [pc, #152]	@ (800dac4 <WS28xxDmxMulti::Print()+0x1e8>)
 800da2c:	e7ea      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da2e:	4b26      	ldr	r3, [pc, #152]	@ (800dac8 <WS28xxDmxMulti::Print()+0x1ec>)
 800da30:	4a26      	ldr	r2, [pc, #152]	@ (800dacc <WS28xxDmxMulti::Print()+0x1f0>)
 800da32:	4827      	ldr	r0, [pc, #156]	@ (800dad0 <WS28xxDmxMulti::Print()+0x1f4>)
 800da34:	21a4      	movs	r1, #164	@ 0xa4
 800da36:	f00a fa11 	bl	8017e5c <__assert_func>
 800da3a:	682c      	ldr	r4, [r5, #0]
 800da3c:	e755      	b.n	800d8ea <WS28xxDmxMulti::Print()+0xe>
 800da3e:	4b25      	ldr	r3, [pc, #148]	@ (800dad4 <WS28xxDmxMulti::Print()+0x1f8>)
 800da40:	2200      	movs	r2, #0
 800da42:	e7bd      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da44:	4b24      	ldr	r3, [pc, #144]	@ (800dad8 <WS28xxDmxMulti::Print()+0x1fc>)
 800da46:	2200      	movs	r2, #0
 800da48:	e7ba      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da4a:	4b24      	ldr	r3, [pc, #144]	@ (800dadc <WS28xxDmxMulti::Print()+0x200>)
 800da4c:	2200      	movs	r2, #0
 800da4e:	e7b7      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da50:	4b22      	ldr	r3, [pc, #136]	@ (800dadc <WS28xxDmxMulti::Print()+0x200>)
 800da52:	2200      	movs	r2, #0
 800da54:	e7d6      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da56:	4b20      	ldr	r3, [pc, #128]	@ (800dad8 <WS28xxDmxMulti::Print()+0x1fc>)
 800da58:	2200      	movs	r2, #0
 800da5a:	e7d3      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da5c:	4b1d      	ldr	r3, [pc, #116]	@ (800dad4 <WS28xxDmxMulti::Print()+0x1f8>)
 800da5e:	2200      	movs	r2, #0
 800da60:	e7d0      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da62:	4b1f      	ldr	r3, [pc, #124]	@ (800dae0 <WS28xxDmxMulti::Print()+0x204>)
 800da64:	2200      	movs	r2, #0
 800da66:	e7cd      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da68:	4b1d      	ldr	r3, [pc, #116]	@ (800dae0 <WS28xxDmxMulti::Print()+0x204>)
 800da6a:	2200      	movs	r2, #0
 800da6c:	e7a8      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da6e:	4b1d      	ldr	r3, [pc, #116]	@ (800dae4 <WS28xxDmxMulti::Print()+0x208>)
 800da70:	2200      	movs	r2, #0
 800da72:	e7c7      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da74:	4b1b      	ldr	r3, [pc, #108]	@ (800dae4 <WS28xxDmxMulti::Print()+0x208>)
 800da76:	2200      	movs	r2, #0
 800da78:	e7a2      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da7a:	4b1b      	ldr	r3, [pc, #108]	@ (800dae8 <WS28xxDmxMulti::Print()+0x20c>)
 800da7c:	e7c2      	b.n	800da04 <WS28xxDmxMulti::Print()+0x128>
 800da7e:	4b1a      	ldr	r3, [pc, #104]	@ (800dae8 <WS28xxDmxMulti::Print()+0x20c>)
 800da80:	e79e      	b.n	800d9c0 <WS28xxDmxMulti::Print()+0xe4>
 800da82:	bf00      	nop
 800da84:	20000074 	andcs	r0, r0, r4, ror r0
 800da88:	0801992c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, pc}
 800da8c:	08019940 	stmdaeq	r1, {r6, r8, fp, ip, pc}
 800da90:	08019964 	stmdaeq	r1, {r2, r5, r6, r8, fp, ip, pc}
 800da94:	080199d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, ip, pc}
 800da98:	080199e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, fp, ip, pc}
 800da9c:	080199f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, fp, ip, pc}
 800daa0:	08019a10 	stmdaeq	r1, {r4, r9, fp, ip, pc}
 800daa4:	08019a28 	stmdaeq	r1, {r3, r5, r9, fp, ip, pc}
 800daa8:	08019a4c 	stmdaeq	r1, {r2, r3, r6, r9, fp, ip, pc}
 800daac:	08019a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, ip, pc}
 800dab0:	08019a7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, fp, ip, pc}
 800dab4:	08019974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, ip, pc}
 800dab8:	080199b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, fp, ip, pc}
 800dabc:	08019988 	stmdaeq	r1, {r3, r7, r8, fp, ip, pc}
 800dac0:	080199a0 	stmdaeq	r1, {r5, r7, r8, fp, ip, pc}
 800dac4:	3fd40000 	svccc	0x00d40000
 800dac8:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800dacc:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 800dad0:	08019908 	stmdaeq	r1, {r3, r8, fp, ip, pc}
 800dad4:	3fe90000 	svccc	0x00e90000
 800dad8:	3fee0000 	svccc	0x00ee0000
 800dadc:	3ff18000 	svccc	0x00f18000
 800dae0:	3fde0000 	svccc	0x00de0000
 800dae4:	3fe40000 	svccc	0x00e40000
 800dae8:	3fc40000 	svccc	0x00c40000

0800daec <WS28xxDmxMulti::Start(unsigned long)>:
 800daec:	b530      	push	{r4, r5, lr}
 800daee:	b083      	sub	sp, #12
 800daf0:	460d      	mov	r5, r1
 800daf2:	4604      	mov	r4, r0
 800daf4:	4a0a      	ldr	r2, [pc, #40]	@ (800db20 <WS28xxDmxMulti::Start(unsigned long)+0x34>)
 800daf6:	490b      	ldr	r1, [pc, #44]	@ (800db24 <WS28xxDmxMulti::Start(unsigned long)+0x38>)
 800daf8:	480b      	ldr	r0, [pc, #44]	@ (800db28 <WS28xxDmxMulti::Start(unsigned long)+0x3c>)
 800dafa:	9500      	str	r5, [sp, #0]
 800dafc:	234b      	movs	r3, #75	@ 0x4b
 800dafe:	f00a f8cd 	bl	8017c9c <printf>
 800db02:	68a0      	ldr	r0, [r4, #8]
 800db04:	b128      	cbz	r0, 800db12 <WS28xxDmxMulti::Start(unsigned long)+0x26>
 800db06:	2101      	movs	r1, #1
 800db08:	40a9      	lsls	r1, r5
 800db0a:	4301      	orrs	r1, r0
 800db0c:	60a1      	str	r1, [r4, #8]
 800db0e:	b003      	add	sp, #12
 800db10:	bd30      	pop	{r4, r5, pc}
 800db12:	4b06      	ldr	r3, [pc, #24]	@ (800db2c <WS28xxDmxMulti::Start(unsigned long)+0x40>)
 800db14:	2204      	movs	r2, #4
 800db16:	f8c3 2818 	str.w	r2, [r3, #2072]	@ 0x818
 800db1a:	68a0      	ldr	r0, [r4, #8]
 800db1c:	e7f3      	b.n	800db06 <WS28xxDmxMulti::Start(unsigned long)+0x1a>
 800db1e:	bf00      	nop
 800db20:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 800db24:	08019ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, ip, pc}
 800db28:	08019ab8 	stmdaeq	r1, {r3, r4, r5, r7, r9, fp, ip, pc}
 800db2c:	40020000 	andmi	r0, r2, r0

0800db30 <WS28xxDmxMulti::Blackout(bool)>:
 800db30:	b538      	push	{r3, r4, r5, lr}
 800db32:	4604      	mov	r4, r0
 800db34:	460d      	mov	r5, r1
 800db36:	7301      	strb	r1, [r0, #12]
 800db38:	6860      	ldr	r0, [r4, #4]
 800db3a:	f001 fd1b 	bl	800f574 <WS28xxMulti::IsUpdating()>
 800db3e:	2800      	cmp	r0, #0
 800db40:	d1fa      	bne.n	800db38 <WS28xxDmxMulti::Blackout(bool)+0x8>
 800db42:	6860      	ldr	r0, [r4, #4]
 800db44:	b11d      	cbz	r5, 800db4e <WS28xxDmxMulti::Blackout(bool)+0x1e>
 800db46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db4a:	f002 bc1f 	b.w	801038c <WS28xxMulti::Blackout()>
 800db4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db52:	f001 bc1d 	b.w	800f390 <WS28xxMulti::Update()>
 800db56:	bf00      	nop

0800db58 <WS28xxDmxMulti::Stop(unsigned long)>:
 800db58:	b530      	push	{r4, r5, lr}
 800db5a:	b083      	sub	sp, #12
 800db5c:	460c      	mov	r4, r1
 800db5e:	4605      	mov	r5, r0
 800db60:	4a0b      	ldr	r2, [pc, #44]	@ (800db90 <WS28xxDmxMulti::Stop(unsigned long)+0x38>)
 800db62:	490c      	ldr	r1, [pc, #48]	@ (800db94 <WS28xxDmxMulti::Stop(unsigned long)+0x3c>)
 800db64:	480c      	ldr	r0, [pc, #48]	@ (800db98 <WS28xxDmxMulti::Stop(unsigned long)+0x40>)
 800db66:	9400      	str	r4, [sp, #0]
 800db68:	2357      	movs	r3, #87	@ 0x57
 800db6a:	f00a f897 	bl	8017c9c <printf>
 800db6e:	68ab      	ldr	r3, [r5, #8]
 800db70:	2201      	movs	r2, #1
 800db72:	40a2      	lsls	r2, r4
 800db74:	4213      	tst	r3, r2
 800db76:	bf1c      	itt	ne
 800db78:	4393      	bicne	r3, r2
 800db7a:	60ab      	strne	r3, [r5, #8]
 800db7c:	b10b      	cbz	r3, 800db82 <WS28xxDmxMulti::Stop(unsigned long)+0x2a>
 800db7e:	b003      	add	sp, #12
 800db80:	bd30      	pop	{r4, r5, pc}
 800db82:	4806      	ldr	r0, [pc, #24]	@ (800db9c <WS28xxDmxMulti::Stop(unsigned long)+0x44>)
 800db84:	2104      	movs	r1, #4
 800db86:	f8c0 1828 	str.w	r1, [r0, #2088]	@ 0x828
 800db8a:	b003      	add	sp, #12
 800db8c:	bd30      	pop	{r4, r5, pc}
 800db8e:	bf00      	nop
 800db90:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 800db94:	08019ad0 	stmdaeq	r1, {r4, r6, r7, r9, fp, ip, pc}
 800db98:	08019ab8 	stmdaeq	r1, {r3, r4, r5, r7, r9, fp, ip, pc}
 800db9c:	40020000 	andmi	r0, r2, r0

0800dba0 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800dba0:	b538      	push	{r3, r4, r5, lr}
 800dba2:	6845      	ldr	r5, [r0, #4]
 800dba4:	4b08      	ldr	r3, [pc, #32]	@ (800dbc8 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x28>)
 800dba6:	6003      	str	r3, [r0, #0]
 800dba8:	4604      	mov	r4, r0
 800dbaa:	b135      	cbz	r5, 800dbba <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1a>
 800dbac:	4628      	mov	r0, r5
 800dbae:	f001 faa5 	bl	800f0fc <WS28xxMulti::~WS28xxMulti()>
 800dbb2:	2104      	movs	r1, #4
 800dbb4:	4628      	mov	r0, r5
 800dbb6:	f00a fac5 	bl	8018144 <operator delete(void*, unsigned int)>
 800dbba:	4620      	mov	r0, r4
 800dbbc:	2110      	movs	r1, #16
 800dbbe:	f00a fac1 	bl	8018144 <operator delete(void*, unsigned int)>
 800dbc2:	4620      	mov	r0, r4
 800dbc4:	bd38      	pop	{r3, r4, r5, pc}
 800dbc6:	bf00      	nop
 800dbc8:	0801bb34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, sp, pc}

0800dbcc <WS28xxDmxMulti::WS28xxDmxMulti()>:
 800dbcc:	b570      	push	{r4, r5, r6, lr}
 800dbce:	4605      	mov	r5, r0
 800dbd0:	48b0      	ldr	r0, [pc, #704]	@ (800de94 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2c8>)
 800dbd2:	4eb1      	ldr	r6, [pc, #708]	@ (800de98 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2cc>)
 800dbd4:	4ab1      	ldr	r2, [pc, #708]	@ (800de9c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d0>)
 800dbd6:	49b2      	ldr	r1, [pc, #712]	@ (800dea0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d4>)
 800dbd8:	2300      	movs	r3, #0
 800dbda:	e9c5 0300 	strd	r0, r3, [r5]
 800dbde:	60ab      	str	r3, [r5, #8]
 800dbe0:	732b      	strb	r3, [r5, #12]
 800dbe2:	48b0      	ldr	r0, [pc, #704]	@ (800dea4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d8>)
 800dbe4:	2335      	movs	r3, #53	@ 0x35
 800dbe6:	f00a f859 	bl	8017c9c <printf>
 800dbea:	6834      	ldr	r4, [r6, #0]
 800dbec:	2c00      	cmp	r4, #0
 800dbee:	f000 81a3 	beq.w	800df38 <WS28xxDmxMulti::WS28xxDmxMulti()+0x36c>
 800dbf2:	4aad      	ldr	r2, [pc, #692]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dbf4:	49ad      	ldr	r1, [pc, #692]	@ (800deac <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e0>)
 800dbf6:	48ab      	ldr	r0, [pc, #684]	@ (800dea4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d8>)
 800dbf8:	2367      	movs	r3, #103	@ 0x67
 800dbfa:	f00a f84f 	bl	8017c9c <printf>
 800dbfe:	4aaa      	ldr	r2, [pc, #680]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dc00:	49ab      	ldr	r1, [pc, #684]	@ (800deb0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e4>)
 800dc02:	48a8      	ldr	r0, [pc, #672]	@ (800dea4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d8>)
 800dc04:	2397      	movs	r3, #151	@ 0x97
 800dc06:	f00a f849 	bl	8017c9c <printf>
 800dc0a:	68e2      	ldr	r2, [r4, #12]
 800dc0c:	6823      	ldr	r3, [r4, #0]
 800dc0e:	2a07      	cmp	r2, #7
 800dc10:	f000 80dd 	beq.w	800ddce <WS28xxDmxMulti::WS28xxDmxMulti()+0x202>
 800dc14:	f5b3 7f2a 	cmp.w	r3, #680	@ 0x2a8
 800dc18:	f1a2 000b 	sub.w	r0, r2, #11
 800dc1c:	bf28      	it	cs
 800dc1e:	f44f 732a 	movcs.w	r3, #680	@ 0x2a8
 800dc22:	2103      	movs	r1, #3
 800dc24:	2801      	cmp	r0, #1
 800dc26:	6926      	ldr	r6, [r4, #16]
 800dc28:	6023      	str	r3, [r4, #0]
 800dc2a:	60a1      	str	r1, [r4, #8]
 800dc2c:	f200 816a 	bhi.w	800df04 <WS28xxDmxMulti::WS28xxDmxMulti()+0x338>
 800dc30:	7de2      	ldrb	r2, [r4, #23]
 800dc32:	2a1f      	cmp	r2, #31
 800dc34:	bf8c      	ite	hi
 800dc36:	22ff      	movhi	r2, #255	@ 0xff
 800dc38:	f062 021f 	ornls	r2, r2, #31
 800dc3c:	75e2      	strb	r2, [r4, #23]
 800dc3e:	2200      	movs	r2, #0
 800dc40:	2e06      	cmp	r6, #6
 800dc42:	7522      	strb	r2, [r4, #20]
 800dc44:	f000 80e5 	beq.w	800de12 <WS28xxDmxMulti::WS28xxDmxMulti()+0x246>
 800dc48:	6866      	ldr	r6, [r4, #4]
 800dc4a:	2e00      	cmp	r6, #0
 800dc4c:	f040 80ae 	bne.w	800ddac <WS28xxDmxMulti::WS28xxDmxMulti()+0x1e0>
 800dc50:	4898      	ldr	r0, [pc, #608]	@ (800deb4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e8>)
 800dc52:	6060      	str	r0, [r4, #4]
 800dc54:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800dc58:	005e      	lsls	r6, r3, #1
 800dc5a:	4997      	ldr	r1, [pc, #604]	@ (800deb8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ec>)
 800dc5c:	fbb1 f6f6 	udiv	r6, r1, r6
 800dc60:	4993      	ldr	r1, [pc, #588]	@ (800deb0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e4>)
 800dc62:	4a91      	ldr	r2, [pc, #580]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dc64:	4895      	ldr	r0, [pc, #596]	@ (800debc <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f0>)
 800dc66:	61a6      	str	r6, [r4, #24]
 800dc68:	23f2      	movs	r3, #242	@ 0xf2
 800dc6a:	f00a f817 	bl	8017c9c <printf>
 800dc6e:	7d21      	ldrb	r1, [r4, #20]
 800dc70:	2900      	cmp	r1, #0
 800dc72:	d13e      	bne.n	800dcf2 <WS28xxDmxMulti::WS28xxDmxMulti()+0x126>
 800dc74:	68e2      	ldr	r2, [r4, #12]
 800dc76:	b122      	cbz	r2, 800dc82 <WS28xxDmxMulti::WS28xxDmxMulti()+0xb6>
 800dc78:	f1a2 030b 	sub.w	r3, r2, #11
 800dc7c:	2b01      	cmp	r3, #1
 800dc7e:	bf88      	it	hi
 800dc80:	60e1      	strhi	r1, [r4, #12]
 800dc82:	498b      	ldr	r1, [pc, #556]	@ (800deb0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e4>)
 800dc84:	4a88      	ldr	r2, [pc, #544]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dc86:	4887      	ldr	r0, [pc, #540]	@ (800dea4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d8>)
 800dc88:	2397      	movs	r3, #151	@ 0x97
 800dc8a:	f00a f807 	bl	8017c9c <printf>
 800dc8e:	68e3      	ldr	r3, [r4, #12]
 800dc90:	6821      	ldr	r1, [r4, #0]
 800dc92:	2b07      	cmp	r3, #7
 800dc94:	f000 80da 	beq.w	800de4c <WS28xxDmxMulti::WS28xxDmxMulti()+0x280>
 800dc98:	f5b1 7f2a 	cmp.w	r1, #680	@ 0x2a8
 800dc9c:	f1a3 020b 	sub.w	r2, r3, #11
 800dca0:	bf28      	it	cs
 800dca2:	f44f 712a 	movcs.w	r1, #680	@ 0x2a8
 800dca6:	2003      	movs	r0, #3
 800dca8:	2a01      	cmp	r2, #1
 800dcaa:	6926      	ldr	r6, [r4, #16]
 800dcac:	6021      	str	r1, [r4, #0]
 800dcae:	60a0      	str	r0, [r4, #8]
 800dcb0:	f200 8114 	bhi.w	800dedc <WS28xxDmxMulti::WS28xxDmxMulti()+0x310>
 800dcb4:	7de2      	ldrb	r2, [r4, #23]
 800dcb6:	2a1f      	cmp	r2, #31
 800dcb8:	bf8c      	ite	hi
 800dcba:	22ff      	movhi	r2, #255	@ 0xff
 800dcbc:	f062 021f 	ornls	r2, r2, #31
 800dcc0:	75e2      	strb	r2, [r4, #23]
 800dcc2:	2300      	movs	r3, #0
 800dcc4:	2e06      	cmp	r6, #6
 800dcc6:	7523      	strb	r3, [r4, #20]
 800dcc8:	f000 80e2 	beq.w	800de90 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2c4>
 800dccc:	6866      	ldr	r6, [r4, #4]
 800dcce:	2e00      	cmp	r6, #0
 800dcd0:	f040 80a4 	bne.w	800de1c <WS28xxDmxMulti::WS28xxDmxMulti()+0x250>
 800dcd4:	4e77      	ldr	r6, [pc, #476]	@ (800deb4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e8>)
 800dcd6:	6066      	str	r6, [r4, #4]
 800dcd8:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800dcdc:	0041      	lsls	r1, r0, #1
 800dcde:	4a76      	ldr	r2, [pc, #472]	@ (800deb8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ec>)
 800dce0:	fbb2 f6f1 	udiv	r6, r2, r1
 800dce4:	4a70      	ldr	r2, [pc, #448]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dce6:	4972      	ldr	r1, [pc, #456]	@ (800deb0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e4>)
 800dce8:	4874      	ldr	r0, [pc, #464]	@ (800debc <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f0>)
 800dcea:	61a6      	str	r6, [r4, #24]
 800dcec:	23f2      	movs	r3, #242	@ 0xf2
 800dcee:	f009 ffd5 	bl	8017c9c <printf>
 800dcf2:	68e1      	ldr	r1, [r4, #12]
 800dcf4:	4a72      	ldr	r2, [pc, #456]	@ (800dec0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f4>)
 800dcf6:	6a20      	ldr	r0, [r4, #32]
 800dcf8:	4b72      	ldr	r3, [pc, #456]	@ (800dec4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f8>)
 800dcfa:	6826      	ldr	r6, [r4, #0]
 800dcfc:	2907      	cmp	r1, #7
 800dcfe:	bf16      	itet	ne
 800dd00:	4613      	movne	r3, r2
 800dd02:	f44f 72c0 	moveq.w	r2, #384	@ 0x180
 800dd06:	f44f 72ff 	movne.w	r2, #510	@ 0x1fe
 800dd0a:	f04f 0e00 	mov.w	lr, #0
 800dd0e:	8762      	strh	r2, [r4, #58]	@ 0x3a
 800dd10:	f8c4 3036 	str.w	r3, [r4, #54]	@ 0x36
 800dd14:	f8a4 e034 	strh.w	lr, [r4, #52]	@ 0x34
 800dd18:	bf0c      	ite	eq
 800dd1a:	2281      	moveq	r2, #129	@ 0x81
 800dd1c:	22ab      	movne	r2, #171	@ 0xab
 800dd1e:	2800      	cmp	r0, #0
 800dd20:	d04f      	beq.n	800ddc2 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1f6>
 800dd22:	42b0      	cmp	r0, r6
 800dd24:	d84d      	bhi.n	800ddc2 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1f6>
 800dd26:	fbb6 f3f0 	udiv	r3, r6, r0
 800dd2a:	fbb3 f1f2 	udiv	r1, r3, r2
 800dd2e:	3101      	adds	r1, #1
 800dd30:	fa1f fc81 	uxth.w	ip, r1
 800dd34:	69e0      	ldr	r0, [r4, #28]
 800dd36:	68a2      	ldr	r2, [r4, #8]
 800dd38:	6263      	str	r3, [r4, #36]	@ 0x24
 800dd3a:	2808      	cmp	r0, #8
 800dd3c:	bf28      	it	cs
 800dd3e:	2008      	movcs	r0, #8
 800dd40:	eb0c 0e80 	add.w	lr, ip, r0, lsl #2
 800dd44:	f1ae 0605 	sub.w	r6, lr, #5
 800dd48:	fb02 f303 	mul.w	r3, r2, r3
 800dd4c:	62a1      	str	r1, [r4, #40]	@ 0x28
 800dd4e:	4a56      	ldr	r2, [pc, #344]	@ (800dea8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2dc>)
 800dd50:	4956      	ldr	r1, [pc, #344]	@ (800deac <WS28xxDmxMulti::WS28xxDmxMulti()+0x2e0>)
 800dd52:	6323      	str	r3, [r4, #48]	@ 0x30
 800dd54:	61e0      	str	r0, [r4, #28]
 800dd56:	2392      	movs	r3, #146	@ 0x92
 800dd58:	87a6      	strh	r6, [r4, #60]	@ 0x3c
 800dd5a:	4858      	ldr	r0, [pc, #352]	@ (800debc <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f0>)
 800dd5c:	f009 ff9e 	bl	8017c9c <printf>
 800dd60:	2004      	movs	r0, #4
 800dd62:	f00a f9f1 	bl	8018148 <operator new(unsigned int)>
 800dd66:	4604      	mov	r4, r0
 800dd68:	f002 f8b6 	bl	800fed8 <WS28xxMulti::WS28xxMulti()>
 800dd6c:	4620      	mov	r0, r4
 800dd6e:	606c      	str	r4, [r5, #4]
 800dd70:	f002 fb0c 	bl	801038c <WS28xxMulti::Blackout()>
 800dd74:	f640 4002 	movw	r0, #3074	@ 0xc02
 800dd78:	f008 fa0c 	bl	8016194 <rcu_periph_clock_enable>
 800dd7c:	4852      	ldr	r0, [pc, #328]	@ (800dec8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2fc>)
 800dd7e:	2304      	movs	r3, #4
 800dd80:	2200      	movs	r2, #0
 800dd82:	2101      	movs	r1, #1
 800dd84:	f008 f984 	bl	8016090 <gpio_mode_set>
 800dd88:	484f      	ldr	r0, [pc, #316]	@ (800dec8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2fc>)
 800dd8a:	2304      	movs	r3, #4
 800dd8c:	2202      	movs	r2, #2
 800dd8e:	2100      	movs	r1, #0
 800dd90:	f008 f9a0 	bl	80160d4 <gpio_output_options_set>
 800dd94:	4b4d      	ldr	r3, [pc, #308]	@ (800decc <WS28xxDmxMulti::WS28xxDmxMulti()+0x300>)
 800dd96:	4a41      	ldr	r2, [pc, #260]	@ (800de9c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d0>)
 800dd98:	4941      	ldr	r1, [pc, #260]	@ (800dea0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2d4>)
 800dd9a:	2004      	movs	r0, #4
 800dd9c:	f8c3 0828 	str.w	r0, [r3, #2088]	@ 0x828
 800dda0:	2342      	movs	r3, #66	@ 0x42
 800dda2:	4846      	ldr	r0, [pc, #280]	@ (800debc <WS28xxDmxMulti::WS28xxDmxMulti()+0x2f0>)
 800dda4:	f009 ff7a 	bl	8017c9c <printf>
 800dda8:	4628      	mov	r0, r5
 800ddaa:	bd70      	pop	{r4, r5, r6, pc}
 800ddac:	4848      	ldr	r0, [pc, #288]	@ (800ded0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x304>)
 800ddae:	4286      	cmp	r6, r0
 800ddb0:	d831      	bhi.n	800de16 <WS28xxDmxMulti::WS28xxDmxMulti()+0x24a>
 800ddb2:	4948      	ldr	r1, [pc, #288]	@ (800ded4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x308>)
 800ddb4:	fbb1 f2f6 	udiv	r2, r1, r6
 800ddb8:	fb03 f202 	mul.w	r2, r3, r2
 800ddbc:	eb02 0642 	add.w	r6, r2, r2, lsl #1
 800ddc0:	e74b      	b.n	800dc5a <WS28xxDmxMulti::WS28xxDmxMulti()+0x8e>
 800ddc2:	f04f 0c01 	mov.w	ip, #1
 800ddc6:	6226      	str	r6, [r4, #32]
 800ddc8:	4661      	mov	r1, ip
 800ddca:	4663      	mov	r3, ip
 800ddcc:	e7b2      	b.n	800dd34 <WS28xxDmxMulti::WS28xxDmxMulti()+0x168>
 800ddce:	6920      	ldr	r0, [r4, #16]
 800ddd0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ddd4:	bf28      	it	cs
 800ddd6:	f44f 7300 	movcs.w	r3, #512	@ 0x200
 800ddda:	2104      	movs	r1, #4
 800dddc:	2601      	movs	r6, #1
 800ddde:	2806      	cmp	r0, #6
 800dde0:	6023      	str	r3, [r4, #0]
 800dde2:	60a1      	str	r1, [r4, #8]
 800dde4:	7526      	strb	r6, [r4, #20]
 800dde6:	f000 8100 	beq.w	800dfea <WS28xxDmxMulti::WS28xxDmxMulti()+0x41e>
 800ddea:	7d60      	ldrb	r0, [r4, #21]
 800ddec:	f894 c016 	ldrb.w	ip, [r4, #22]
 800ddf0:	4584      	cmp	ip, r0
 800ddf2:	d81e      	bhi.n	800de32 <WS28xxDmxMulti::WS28xxDmxMulti()+0x266>
 800ddf4:	2600      	movs	r6, #0
 800ddf6:	2a03      	cmp	r2, #3
 800ddf8:	f8a4 6015 	strh.w	r6, [r4, #21]
 800ddfc:	f000 8099 	beq.w	800df32 <WS28xxDmxMulti::WS28xxDmxMulti()+0x366>
 800de00:	3a08      	subs	r2, #8
 800de02:	2a02      	cmp	r2, #2
 800de04:	f200 80c9 	bhi.w	800df9a <WS28xxDmxMulti::WS28xxDmxMulti()+0x3ce>
 800de08:	20fc      	movs	r0, #252	@ 0xfc
 800de0a:	75a0      	strb	r0, [r4, #22]
 800de0c:	26c0      	movs	r6, #192	@ 0xc0
 800de0e:	7566      	strb	r6, [r4, #21]
 800de10:	e011      	b.n	800de36 <WS28xxDmxMulti::WS28xxDmxMulti()+0x26a>
 800de12:	6122      	str	r2, [r4, #16]
 800de14:	e718      	b.n	800dc48 <WS28xxDmxMulti::WS28xxDmxMulti()+0x7c>
 800de16:	6060      	str	r0, [r4, #4]
 800de18:	2600      	movs	r6, #0
 800de1a:	e71e      	b.n	800dc5a <WS28xxDmxMulti::WS28xxDmxMulti()+0x8e>
 800de1c:	482c      	ldr	r0, [pc, #176]	@ (800ded0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x304>)
 800de1e:	4286      	cmp	r6, r0
 800de20:	d86d      	bhi.n	800defe <WS28xxDmxMulti::WS28xxDmxMulti()+0x332>
 800de22:	4a2c      	ldr	r2, [pc, #176]	@ (800ded4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x308>)
 800de24:	fbb2 f3f6 	udiv	r3, r2, r6
 800de28:	fb01 f303 	mul.w	r3, r1, r3
 800de2c:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 800de30:	e755      	b.n	800dcde <WS28xxDmxMulti::WS28xxDmxMulti()+0x112>
 800de32:	2800      	cmp	r0, #0
 800de34:	d0ea      	beq.n	800de0c <WS28xxDmxMulti::WS28xxDmxMulti()+0x240>
 800de36:	fb03 f101 	mul.w	r1, r3, r1
 800de3a:	4a27      	ldr	r2, [pc, #156]	@ (800ded8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x30c>)
 800de3c:	4b1e      	ldr	r3, [pc, #120]	@ (800deb8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ec>)
 800de3e:	6062      	str	r2, [r4, #4]
 800de40:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800de44:	0048      	lsls	r0, r1, #1
 800de46:	fbb3 f6f0 	udiv	r6, r3, r0
 800de4a:	e709      	b.n	800dc60 <WS28xxDmxMulti::WS28xxDmxMulti()+0x94>
 800de4c:	6922      	ldr	r2, [r4, #16]
 800de4e:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 800de52:	bf28      	it	cs
 800de54:	f44f 7100 	movcs.w	r1, #512	@ 0x200
 800de58:	2004      	movs	r0, #4
 800de5a:	2601      	movs	r6, #1
 800de5c:	2a06      	cmp	r2, #6
 800de5e:	6021      	str	r1, [r4, #0]
 800de60:	60a0      	str	r0, [r4, #8]
 800de62:	7526      	strb	r6, [r4, #20]
 800de64:	f000 80c6 	beq.w	800dff4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x428>
 800de68:	7d62      	ldrb	r2, [r4, #21]
 800de6a:	f894 c016 	ldrb.w	ip, [r4, #22]
 800de6e:	4594      	cmp	ip, r2
 800de70:	d876      	bhi.n	800df60 <WS28xxDmxMulti::WS28xxDmxMulti()+0x394>
 800de72:	2600      	movs	r6, #0
 800de74:	2b03      	cmp	r3, #3
 800de76:	f8a4 6015 	strh.w	r6, [r4, #21]
 800de7a:	f000 80a3 	beq.w	800dfc4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x3f8>
 800de7e:	3b08      	subs	r3, #8
 800de80:	2b02      	cmp	r3, #2
 800de82:	f200 80b0 	bhi.w	800dfe6 <WS28xxDmxMulti::WS28xxDmxMulti()+0x41a>
 800de86:	22fc      	movs	r2, #252	@ 0xfc
 800de88:	75a2      	strb	r2, [r4, #22]
 800de8a:	26c0      	movs	r6, #192	@ 0xc0
 800de8c:	7566      	strb	r6, [r4, #21]
 800de8e:	e069      	b.n	800df64 <WS28xxDmxMulti::WS28xxDmxMulti()+0x398>
 800de90:	6123      	str	r3, [r4, #16]
 800de92:	e71b      	b.n	800dccc <WS28xxDmxMulti::WS28xxDmxMulti()+0x100>
 800de94:	0801bb34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, sp, pc}
 800de98:	20000074 	andcs	r0, r0, r4, ror r0
 800de9c:	08019ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, ip, pc}
 800dea0:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 800dea4:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 800dea8:	08019af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, ip, pc}
 800deac:	08019908 	stmdaeq	r1, {r3, r8, fp, ip, pc}
 800deb0:	08019b04 	stmdaeq	r1, {r2, r8, r9, fp, ip, pc}
 800deb4:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800deb8:	000f4240 	andeq	r4, pc, r0, asr #4
 800debc:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 800dec0:	015400aa 	cmpeq	r4, sl, lsr #1
 800dec4:	01000080 	smlabbeq	r0, r0, r0, r0
 800dec8:	40020800 	andmi	r0, r2, r0, lsl #16
 800decc:	40020000 	andmi	r0, r2, r0
 800ded0:	017d7840 	cmneq	sp, r0, asr #16
 800ded4:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 800ded8:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800dedc:	2b00      	cmp	r3, #0
 800dede:	f43f aef1 	beq.w	800dcc4 <WS28xxDmxMulti::WS28xxDmxMulti()+0xf8>
 800dee2:	2b0d      	cmp	r3, #13
 800dee4:	d15c      	bne.n	800dfa0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x3d4>
 800dee6:	2e06      	cmp	r6, #6
 800dee8:	6866      	ldr	r6, [r4, #4]
 800deea:	f04f 0300 	mov.w	r3, #0
 800deee:	7523      	strb	r3, [r4, #20]
 800def0:	bf08      	it	eq
 800def2:	6123      	streq	r3, [r4, #16]
 800def4:	2e00      	cmp	r6, #0
 800def6:	f43f aeed 	beq.w	800dcd4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x108>
 800defa:	4841      	ldr	r0, [pc, #260]	@ (800e000 <WS28xxDmxMulti::WS28xxDmxMulti()+0x434>)
 800defc:	e78f      	b.n	800de1e <WS28xxDmxMulti::WS28xxDmxMulti()+0x252>
 800defe:	6060      	str	r0, [r4, #4]
 800df00:	2100      	movs	r1, #0
 800df02:	e6ec      	b.n	800dcde <WS28xxDmxMulti::WS28xxDmxMulti()+0x112>
 800df04:	2a00      	cmp	r2, #0
 800df06:	f43f ae9b 	beq.w	800dc40 <WS28xxDmxMulti::WS28xxDmxMulti()+0x74>
 800df0a:	2a0d      	cmp	r2, #13
 800df0c:	d01c      	beq.n	800df48 <WS28xxDmxMulti::WS28xxDmxMulti()+0x37c>
 800df0e:	2001      	movs	r0, #1
 800df10:	2a0e      	cmp	r2, #14
 800df12:	7520      	strb	r0, [r4, #20]
 800df14:	d131      	bne.n	800df7a <WS28xxDmxMulti::WS28xxDmxMulti()+0x3ae>
 800df16:	2e06      	cmp	r6, #6
 800df18:	7d60      	ldrb	r0, [r4, #21]
 800df1a:	f894 c016 	ldrb.w	ip, [r4, #22]
 800df1e:	60e1      	str	r1, [r4, #12]
 800df20:	bf04      	itt	eq
 800df22:	2202      	moveq	r2, #2
 800df24:	6122      	streq	r2, [r4, #16]
 800df26:	4584      	cmp	ip, r0
 800df28:	d883      	bhi.n	800de32 <WS28xxDmxMulti::WS28xxDmxMulti()+0x266>
 800df2a:	f04f 0e00 	mov.w	lr, #0
 800df2e:	f8a4 e015 	strh.w	lr, [r4, #21]
 800df32:	20f8      	movs	r0, #248	@ 0xf8
 800df34:	75a0      	strb	r0, [r4, #22]
 800df36:	e769      	b.n	800de0c <WS28xxDmxMulti::WS28xxDmxMulti()+0x240>
 800df38:	4b32      	ldr	r3, [pc, #200]	@ (800e004 <WS28xxDmxMulti::WS28xxDmxMulti()+0x438>)
 800df3a:	4a33      	ldr	r2, [pc, #204]	@ (800e008 <WS28xxDmxMulti::WS28xxDmxMulti()+0x43c>)
 800df3c:	4833      	ldr	r0, [pc, #204]	@ (800e00c <WS28xxDmxMulti::WS28xxDmxMulti()+0x440>)
 800df3e:	21a4      	movs	r1, #164	@ 0xa4
 800df40:	f009 ff8c 	bl	8017e5c <__assert_func>
 800df44:	6834      	ldr	r4, [r6, #0]
 800df46:	e654      	b.n	800dbf2 <WS28xxDmxMulti::WS28xxDmxMulti()+0x26>
 800df48:	2100      	movs	r1, #0
 800df4a:	2e06      	cmp	r6, #6
 800df4c:	7521      	strb	r1, [r4, #20]
 800df4e:	d005      	beq.n	800df5c <WS28xxDmxMulti::WS28xxDmxMulti()+0x390>
 800df50:	6866      	ldr	r6, [r4, #4]
 800df52:	2e00      	cmp	r6, #0
 800df54:	f43f ae7c 	beq.w	800dc50 <WS28xxDmxMulti::WS28xxDmxMulti()+0x84>
 800df58:	4829      	ldr	r0, [pc, #164]	@ (800e000 <WS28xxDmxMulti::WS28xxDmxMulti()+0x434>)
 800df5a:	e728      	b.n	800ddae <WS28xxDmxMulti::WS28xxDmxMulti()+0x1e2>
 800df5c:	6121      	str	r1, [r4, #16]
 800df5e:	e7f7      	b.n	800df50 <WS28xxDmxMulti::WS28xxDmxMulti()+0x384>
 800df60:	2a00      	cmp	r2, #0
 800df62:	d092      	beq.n	800de8a <WS28xxDmxMulti::WS28xxDmxMulti()+0x2be>
 800df64:	fb01 f000 	mul.w	r0, r1, r0
 800df68:	4b29      	ldr	r3, [pc, #164]	@ (800e010 <WS28xxDmxMulti::WS28xxDmxMulti()+0x444>)
 800df6a:	4a2a      	ldr	r2, [pc, #168]	@ (800e014 <WS28xxDmxMulti::WS28xxDmxMulti()+0x448>)
 800df6c:	6063      	str	r3, [r4, #4]
 800df6e:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 800df72:	0048      	lsls	r0, r1, #1
 800df74:	fbb2 f6f0 	udiv	r6, r2, r0
 800df78:	e6b4      	b.n	800dce4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x118>
 800df7a:	2e06      	cmp	r6, #6
 800df7c:	f47f af35 	bne.w	800ddea <WS28xxDmxMulti::WS28xxDmxMulti()+0x21e>
 800df80:	1e50      	subs	r0, r2, #1
 800df82:	2809      	cmp	r0, #9
 800df84:	d931      	bls.n	800dfea <WS28xxDmxMulti::WS28xxDmxMulti()+0x41e>
 800df86:	7d60      	ldrb	r0, [r4, #21]
 800df88:	7da6      	ldrb	r6, [r4, #22]
 800df8a:	2202      	movs	r2, #2
 800df8c:	4286      	cmp	r6, r0
 800df8e:	6122      	str	r2, [r4, #16]
 800df90:	f63f af4f 	bhi.w	800de32 <WS28xxDmxMulti::WS28xxDmxMulti()+0x266>
 800df94:	2000      	movs	r0, #0
 800df96:	f8a4 0015 	strh.w	r0, [r4, #21]
 800df9a:	20f0      	movs	r0, #240	@ 0xf0
 800df9c:	75a0      	strb	r0, [r4, #22]
 800df9e:	e735      	b.n	800de0c <WS28xxDmxMulti::WS28xxDmxMulti()+0x240>
 800dfa0:	2201      	movs	r2, #1
 800dfa2:	2b0e      	cmp	r3, #14
 800dfa4:	7522      	strb	r2, [r4, #20]
 800dfa6:	d10f      	bne.n	800dfc8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x3fc>
 800dfa8:	2e06      	cmp	r6, #6
 800dfaa:	7d62      	ldrb	r2, [r4, #21]
 800dfac:	f894 e016 	ldrb.w	lr, [r4, #22]
 800dfb0:	60e0      	str	r0, [r4, #12]
 800dfb2:	bf04      	itt	eq
 800dfb4:	2302      	moveq	r3, #2
 800dfb6:	6123      	streq	r3, [r4, #16]
 800dfb8:	4596      	cmp	lr, r2
 800dfba:	d8d1      	bhi.n	800df60 <WS28xxDmxMulti::WS28xxDmxMulti()+0x394>
 800dfbc:	2000      	movs	r0, #0
 800dfbe:	f8a4 0015 	strh.w	r0, [r4, #21]
 800dfc2:	2003      	movs	r0, #3
 800dfc4:	22f8      	movs	r2, #248	@ 0xf8
 800dfc6:	e75f      	b.n	800de88 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2bc>
 800dfc8:	2e06      	cmp	r6, #6
 800dfca:	f47f af4d 	bne.w	800de68 <WS28xxDmxMulti::WS28xxDmxMulti()+0x29c>
 800dfce:	1e5a      	subs	r2, r3, #1
 800dfd0:	2a09      	cmp	r2, #9
 800dfd2:	d90f      	bls.n	800dff4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x428>
 800dfd4:	7d62      	ldrb	r2, [r4, #21]
 800dfd6:	7da6      	ldrb	r6, [r4, #22]
 800dfd8:	2302      	movs	r3, #2
 800dfda:	4296      	cmp	r6, r2
 800dfdc:	6123      	str	r3, [r4, #16]
 800dfde:	d8bf      	bhi.n	800df60 <WS28xxDmxMulti::WS28xxDmxMulti()+0x394>
 800dfe0:	2200      	movs	r2, #0
 800dfe2:	f8a4 2015 	strh.w	r2, [r4, #21]
 800dfe6:	22f0      	movs	r2, #240	@ 0xf0
 800dfe8:	e74e      	b.n	800de88 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2bc>
 800dfea:	4e0b      	ldr	r6, [pc, #44]	@ (800e018 <WS28xxDmxMulti::WS28xxDmxMulti()+0x44c>)
 800dfec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 800dff0:	6120      	str	r0, [r4, #16]
 800dff2:	e6fa      	b.n	800ddea <WS28xxDmxMulti::WS28xxDmxMulti()+0x21e>
 800dff4:	4e08      	ldr	r6, [pc, #32]	@ (800e018 <WS28xxDmxMulti::WS28xxDmxMulti()+0x44c>)
 800dff6:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 800dffa:	6122      	str	r2, [r4, #16]
 800dffc:	e734      	b.n	800de68 <WS28xxDmxMulti::WS28xxDmxMulti()+0x29c>
 800dffe:	bf00      	nop
 800e000:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800e004:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800e008:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 800e00c:	08019908 	stmdaeq	r1, {r3, r8, fp, ip, pc}
 800e010:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800e014:	000f4240 	andeq	r4, pc, r0, asr #4
 800e018:	0801bb04 	stmdaeq	r1, {r2, r8, r9, fp, ip, sp, pc}

0800e01c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>:
 800e01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e020:	b0a1      	sub	sp, #132	@ 0x84
 800e022:	4605      	mov	r5, r0
 800e024:	460c      	mov	r4, r1
 800e026:	9305      	str	r3, [sp, #20]
 800e028:	4692      	mov	sl, r2
 800e02a:	2a00      	cmp	r2, #0
 800e02c:	f000 8245 	beq.w	800e4ba <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x49e>
 800e030:	9b05      	ldr	r3, [sp, #20]
 800e032:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e036:	f200 824b 	bhi.w	800e4d0 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x4b4>
 800e03a:	4f98      	ldr	r7, [pc, #608]	@ (800e29c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x280>)
 800e03c:	683e      	ldr	r6, [r7, #0]
 800e03e:	2e00      	cmp	r6, #0
 800e040:	f000 8251 	beq.w	800e4e6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x4ca>
 800e044:	f004 0003 	and.w	r0, r4, #3
 800e048:	eb06 0140 	add.w	r1, r6, r0, lsl #1
 800e04c:	6a72      	ldr	r2, [r6, #36]	@ 0x24
 800e04e:	f8b1 8034 	ldrh.w	r8, [r1, #52]	@ 0x34
 800e052:	68b3      	ldr	r3, [r6, #8]
 800e054:	9f05      	ldr	r7, [sp, #20]
 800e056:	fbb7 f7f3 	udiv	r7, r7, r3
 800e05a:	4447      	add	r7, r8
 800e05c:	4297      	cmp	r7, r2
 800e05e:	68f0      	ldr	r0, [r6, #12]
 800e060:	f8d6 b020 	ldr.w	fp, [r6, #32]
 800e064:	f896 9014 	ldrb.w	r9, [r6, #20]
 800e068:	9006      	str	r0, [sp, #24]
 800e06a:	bf28      	it	cs
 800e06c:	4617      	movcs	r7, r2
 800e06e:	2b03      	cmp	r3, #3
 800e070:	ea4f 0494 	mov.w	r4, r4, lsr #2
 800e074:	f000 8093 	beq.w	800e19e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x182>
 800e078:	2b04      	cmp	r3, #4
 800e07a:	f040 8217 	bne.w	800e4ac <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x490>
 800e07e:	f1b9 0f00 	cmp.w	r9, #0
 800e082:	f000 8238 	beq.w	800e4f6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x4da>
 800e086:	4547      	cmp	r7, r8
 800e088:	f240 8086 	bls.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e08c:	9e05      	ldr	r6, [sp, #20]
 800e08e:	2e00      	cmp	r6, #0
 800e090:	f000 8082 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e094:	eba7 0c08 	sub.w	ip, r7, r8
 800e098:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
 800e09c:	fb0b f808 	mul.w	r8, fp, r8
 800e0a0:	4656      	mov	r6, sl
 800e0a2:	9106      	str	r1, [sp, #24]
 800e0a4:	f04f 0900 	mov.w	r9, #0
 800e0a8:	f1bb 0f00 	cmp.w	fp, #0
 800e0ac:	d068      	beq.n	800e180 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x164>
 800e0ae:	f01b 0303 	ands.w	r3, fp, #3
 800e0b2:	4647      	mov	r7, r8
 800e0b4:	eb0b 0a08 	add.w	sl, fp, r8
 800e0b8:	d02d      	beq.n	800e116 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xfa>
 800e0ba:	2b01      	cmp	r3, #1
 800e0bc:	d01c      	beq.n	800e0f8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xdc>
 800e0be:	2b02      	cmp	r3, #2
 800e0c0:	d00d      	beq.n	800e0de <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xc2>
 800e0c2:	78f2      	ldrb	r2, [r6, #3]
 800e0c4:	9202      	str	r2, [sp, #8]
 800e0c6:	78b7      	ldrb	r7, [r6, #2]
 800e0c8:	9701      	str	r7, [sp, #4]
 800e0ca:	7870      	ldrb	r0, [r6, #1]
 800e0cc:	9000      	str	r0, [sp, #0]
 800e0ce:	7833      	ldrb	r3, [r6, #0]
 800e0d0:	6868      	ldr	r0, [r5, #4]
 800e0d2:	4642      	mov	r2, r8
 800e0d4:	4621      	mov	r1, r4
 800e0d6:	f002 fb63 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e0da:	f108 0701 	add.w	r7, r8, #1
 800e0de:	78f1      	ldrb	r1, [r6, #3]
 800e0e0:	9102      	str	r1, [sp, #8]
 800e0e2:	78b3      	ldrb	r3, [r6, #2]
 800e0e4:	9301      	str	r3, [sp, #4]
 800e0e6:	7872      	ldrb	r2, [r6, #1]
 800e0e8:	9200      	str	r2, [sp, #0]
 800e0ea:	7833      	ldrb	r3, [r6, #0]
 800e0ec:	6868      	ldr	r0, [r5, #4]
 800e0ee:	463a      	mov	r2, r7
 800e0f0:	4621      	mov	r1, r4
 800e0f2:	f002 fb55 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e0f6:	3701      	adds	r7, #1
 800e0f8:	78f0      	ldrb	r0, [r6, #3]
 800e0fa:	9002      	str	r0, [sp, #8]
 800e0fc:	78b1      	ldrb	r1, [r6, #2]
 800e0fe:	9101      	str	r1, [sp, #4]
 800e100:	7873      	ldrb	r3, [r6, #1]
 800e102:	9300      	str	r3, [sp, #0]
 800e104:	463a      	mov	r2, r7
 800e106:	7833      	ldrb	r3, [r6, #0]
 800e108:	6868      	ldr	r0, [r5, #4]
 800e10a:	4621      	mov	r1, r4
 800e10c:	3701      	adds	r7, #1
 800e10e:	f002 fb47 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e112:	4557      	cmp	r7, sl
 800e114:	d034      	beq.n	800e180 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x164>
 800e116:	78f0      	ldrb	r0, [r6, #3]
 800e118:	9002      	str	r0, [sp, #8]
 800e11a:	78b1      	ldrb	r1, [r6, #2]
 800e11c:	9101      	str	r1, [sp, #4]
 800e11e:	7872      	ldrb	r2, [r6, #1]
 800e120:	7833      	ldrb	r3, [r6, #0]
 800e122:	9200      	str	r2, [sp, #0]
 800e124:	6868      	ldr	r0, [r5, #4]
 800e126:	463a      	mov	r2, r7
 800e128:	4621      	mov	r1, r4
 800e12a:	f002 fb39 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e12e:	78f3      	ldrb	r3, [r6, #3]
 800e130:	9302      	str	r3, [sp, #8]
 800e132:	78b0      	ldrb	r0, [r6, #2]
 800e134:	9001      	str	r0, [sp, #4]
 800e136:	7871      	ldrb	r1, [r6, #1]
 800e138:	9100      	str	r1, [sp, #0]
 800e13a:	1c7a      	adds	r2, r7, #1
 800e13c:	7833      	ldrb	r3, [r6, #0]
 800e13e:	6868      	ldr	r0, [r5, #4]
 800e140:	9204      	str	r2, [sp, #16]
 800e142:	4621      	mov	r1, r4
 800e144:	f002 fb2c 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e148:	78f2      	ldrb	r2, [r6, #3]
 800e14a:	9202      	str	r2, [sp, #8]
 800e14c:	78b3      	ldrb	r3, [r6, #2]
 800e14e:	9301      	str	r3, [sp, #4]
 800e150:	7870      	ldrb	r0, [r6, #1]
 800e152:	9a04      	ldr	r2, [sp, #16]
 800e154:	7833      	ldrb	r3, [r6, #0]
 800e156:	9000      	str	r0, [sp, #0]
 800e158:	6868      	ldr	r0, [r5, #4]
 800e15a:	3201      	adds	r2, #1
 800e15c:	4621      	mov	r1, r4
 800e15e:	f002 fb1f 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e162:	78f1      	ldrb	r1, [r6, #3]
 800e164:	9102      	str	r1, [sp, #8]
 800e166:	78b2      	ldrb	r2, [r6, #2]
 800e168:	9201      	str	r2, [sp, #4]
 800e16a:	7870      	ldrb	r0, [r6, #1]
 800e16c:	7833      	ldrb	r3, [r6, #0]
 800e16e:	9000      	str	r0, [sp, #0]
 800e170:	1cfa      	adds	r2, r7, #3
 800e172:	6868      	ldr	r0, [r5, #4]
 800e174:	4621      	mov	r1, r4
 800e176:	3704      	adds	r7, #4
 800e178:	f002 fb12 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e17c:	4557      	cmp	r7, sl
 800e17e:	d1ca      	bne.n	800e116 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xfa>
 800e180:	9f06      	ldr	r7, [sp, #24]
 800e182:	45b9      	cmp	r9, r7
 800e184:	d008      	beq.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e186:	9a05      	ldr	r2, [sp, #20]
 800e188:	f109 0901 	add.w	r9, r9, #1
 800e18c:	ebb2 0f89 	cmp.w	r2, r9, lsl #2
 800e190:	44d8      	add	r8, fp
 800e192:	f106 0604 	add.w	r6, r6, #4
 800e196:	d887      	bhi.n	800e0a8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x8c>
 800e198:	b021      	add	sp, #132	@ 0x84
 800e19a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e19e:	4940      	ldr	r1, [pc, #256]	@ (800e2a0 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x284>)
 800e1a0:	2248      	movs	r2, #72	@ 0x48
 800e1a2:	a80e      	add	r0, sp, #56	@ 0x38
 800e1a4:	f009 fa74 	bl	8017690 <memcpy>
 800e1a8:	6933      	ldr	r3, [r6, #16]
 800e1aa:	9304      	str	r3, [sp, #16]
 800e1ac:	2b05      	cmp	r3, #5
 800e1ae:	f200 825b 	bhi.w	800e668 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x64c>
 800e1b2:	f1b9 0f00 	cmp.w	r9, #0
 800e1b6:	f040 80bf 	bne.w	800e338 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x31c>
 800e1ba:	4547      	cmp	r7, r8
 800e1bc:	d9ec      	bls.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e1be:	9905      	ldr	r1, [sp, #20]
 800e1c0:	2900      	cmp	r1, #0
 800e1c2:	d0e9      	beq.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e1c4:	9a06      	ldr	r2, [sp, #24]
 800e1c6:	2a00      	cmp	r2, #0
 800e1c8:	f000 819c 	beq.w	800e504 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x4e8>
 800e1cc:	eba7 0e08 	sub.w	lr, r7, r8
 800e1d0:	f1a2 000b 	sub.w	r0, r2, #11
 800e1d4:	9f04      	ldr	r7, [sp, #16]
 800e1d6:	fb0b f808 	mul.w	r8, fp, r8
 800e1da:	2801      	cmp	r0, #1
 800e1dc:	eb0e 0c4e 	add.w	ip, lr, lr, lsl #1
 800e1e0:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 800e1e4:	f108 0201 	add.w	r2, r8, #1
 800e1e8:	f240 8260 	bls.w	800e6ac <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x690>
 800e1ec:	f1ac 0603 	sub.w	r6, ip, #3
 800e1f0:	009b      	lsls	r3, r3, #2
 800e1f2:	9208      	str	r2, [sp, #32]
 800e1f4:	960a      	str	r6, [sp, #40]	@ 0x28
 800e1f6:	f8cd 901c 	str.w	r9, [sp, #28]
 800e1fa:	930d      	str	r3, [sp, #52]	@ 0x34
 800e1fc:	f1bb 0f00 	cmp.w	fp, #0
 800e200:	f000 808b 	beq.w	800e31a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2fe>
 800e204:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e206:	9807      	ldr	r0, [sp, #28]
 800e208:	3780      	adds	r7, #128	@ 0x80
 800e20a:	eb0d 0807 	add.w	r8, sp, r7
 800e20e:	e958 2311 	ldrd	r2, r3, [r8, #-68]	@ 0x44
 800e212:	f858 1c48 	ldr.w	r1, [r8, #-72]
 800e216:	18c3      	adds	r3, r0, r3
 800e218:	9309      	str	r3, [sp, #36]	@ 0x24
 800e21a:	1847      	adds	r7, r0, r1
 800e21c:	1886      	adds	r6, r0, r2
 800e21e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e220:	f81a 1007 	ldrb.w	r1, [sl, r7]
 800e224:	f81a 0006 	ldrb.w	r0, [sl, r6]
 800e228:	970b      	str	r7, [sp, #44]	@ 0x2c
 800e22a:	960c      	str	r6, [sp, #48]	@ 0x30
 800e22c:	eb0a 0807 	add.w	r8, sl, r7
 800e230:	eb0a 0706 	add.w	r7, sl, r6
 800e234:	eb0a 0602 	add.w	r6, sl, r2
 800e238:	9a06      	ldr	r2, [sp, #24]
 800e23a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 800e23e:	2a0d      	cmp	r2, #13
 800e240:	f040 82ef 	bne.w	800e822 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x806>
 800e244:	9a08      	ldr	r2, [sp, #32]
 800e246:	f01b 0f01 	tst.w	fp, #1
 800e24a:	4691      	mov	r9, r2
 800e24c:	445a      	add	r2, fp
 800e24e:	9204      	str	r2, [sp, #16]
 800e250:	d148      	bne.n	800e2e4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2c8>
 800e252:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e256:	43d8      	mvns	r0, r3
 800e258:	9300      	str	r3, [sp, #0]
 800e25a:	43c9      	mvns	r1, r1
 800e25c:	0883      	lsrs	r3, r0, #2
 800e25e:	f3c1 1281 	ubfx	r2, r1, #6, #2
 800e262:	f003 0030 	and.w	r0, r3, #48	@ 0x30
 800e266:	0909      	lsrs	r1, r1, #4
 800e268:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800e26c:	f001 030c 	and.w	r3, r1, #12
 800e270:	4310      	orrs	r0, r2
 800e272:	4318      	orrs	r0, r3
 800e274:	f040 03c0 	orr.w	r3, r0, #192	@ 0xc0
 800e278:	464a      	mov	r2, r9
 800e27a:	6868      	ldr	r0, [r5, #4]
 800e27c:	4621      	mov	r1, r4
 800e27e:	f001 fbb3 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e282:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e284:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800e286:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e288:	f81a 1000 	ldrb.w	r1, [sl, r0]
 800e28c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 800e290:	f81a 0002 	ldrb.w	r0, [sl, r2]
 800e294:	f109 0901 	add.w	r9, r9, #1
 800e298:	e024      	b.n	800e2e4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2c8>
 800e29a:	bf00      	nop
 800e29c:	20000074 	andcs	r0, r0, r4, ror r0
 800e2a0:	08018210 	stmdaeq	r1, {r4, r9, pc}
 800e2a4:	7830      	ldrb	r0, [r6, #0]
 800e2a6:	9000      	str	r0, [sp, #0]
 800e2a8:	f898 1000 	ldrb.w	r1, [r8]
 800e2ac:	9102      	str	r1, [sp, #8]
 800e2ae:	43c3      	mvns	r3, r0
 800e2b0:	089a      	lsrs	r2, r3, #2
 800e2b2:	43cb      	mvns	r3, r1
 800e2b4:	f002 0030 	and.w	r0, r2, #48	@ 0x30
 800e2b8:	0919      	lsrs	r1, r3, #4
 800e2ba:	f3c3 1281 	ubfx	r2, r3, #6, #2
 800e2be:	4310      	orrs	r0, r2
 800e2c0:	f001 030c 	and.w	r3, r1, #12
 800e2c4:	4318      	orrs	r0, r3
 800e2c6:	f040 03c0 	orr.w	r3, r0, #192	@ 0xc0
 800e2ca:	7838      	ldrb	r0, [r7, #0]
 800e2cc:	9001      	str	r0, [sp, #4]
 800e2ce:	6868      	ldr	r0, [r5, #4]
 800e2d0:	464a      	mov	r2, r9
 800e2d2:	4621      	mov	r1, r4
 800e2d4:	f001 fb88 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e2d8:	f898 1000 	ldrb.w	r1, [r8]
 800e2dc:	7838      	ldrb	r0, [r7, #0]
 800e2de:	7833      	ldrb	r3, [r6, #0]
 800e2e0:	f109 0901 	add.w	r9, r9, #1
 800e2e4:	43da      	mvns	r2, r3
 800e2e6:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e2ea:	0890      	lsrs	r0, r2, #2
 800e2ec:	43c9      	mvns	r1, r1
 800e2ee:	9300      	str	r3, [sp, #0]
 800e2f0:	f3c1 1281 	ubfx	r2, r1, #6, #2
 800e2f4:	f000 0330 	and.w	r3, r0, #48	@ 0x30
 800e2f8:	0909      	lsrs	r1, r1, #4
 800e2fa:	f001 000c 	and.w	r0, r1, #12
 800e2fe:	4313      	orrs	r3, r2
 800e300:	4303      	orrs	r3, r0
 800e302:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800e306:	464a      	mov	r2, r9
 800e308:	6868      	ldr	r0, [r5, #4]
 800e30a:	4621      	mov	r1, r4
 800e30c:	f001 fb6c 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e310:	9b04      	ldr	r3, [sp, #16]
 800e312:	f109 0901 	add.w	r9, r9, #1
 800e316:	454b      	cmp	r3, r9
 800e318:	d1c4      	bne.n	800e2a4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x288>
 800e31a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e31c:	9e07      	ldr	r6, [sp, #28]
 800e31e:	42b7      	cmp	r7, r6
 800e320:	f43f af3a 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e324:	9a08      	ldr	r2, [sp, #32]
 800e326:	9905      	ldr	r1, [sp, #20]
 800e328:	3603      	adds	r6, #3
 800e32a:	445a      	add	r2, fp
 800e32c:	42b1      	cmp	r1, r6
 800e32e:	9607      	str	r6, [sp, #28]
 800e330:	9208      	str	r2, [sp, #32]
 800e332:	f63f af63 	bhi.w	800e1fc <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x1e0>
 800e336:	e72f      	b.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e338:	4547      	cmp	r7, r8
 800e33a:	f67f af2d 	bls.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e33e:	9e05      	ldr	r6, [sp, #20]
 800e340:	2e00      	cmp	r6, #0
 800e342:	f43f af29 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e346:	eba7 0e08 	sub.w	lr, r7, r8
 800e34a:	9f04      	ldr	r7, [sp, #16]
 800e34c:	eb0e 0c4e 	add.w	ip, lr, lr, lsl #1
 800e350:	eb07 0147 	add.w	r1, r7, r7, lsl #1
 800e354:	fb0b f208 	mul.w	r2, fp, r8
 800e358:	f1ac 0303 	sub.w	r3, ip, #3
 800e35c:	0088      	lsls	r0, r1, #2
 800e35e:	2600      	movs	r6, #0
 800e360:	9208      	str	r2, [sp, #32]
 800e362:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e364:	900c      	str	r0, [sp, #48]	@ 0x30
 800e366:	9604      	str	r6, [sp, #16]
 800e368:	f1bb 0f00 	cmp.w	fp, #0
 800e36c:	f000 808e 	beq.w	800e48c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x470>
 800e370:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 800e372:	9904      	ldr	r1, [sp, #16]
 800e374:	f8dd e020 	ldr.w	lr, [sp, #32]
 800e378:	3780      	adds	r7, #128	@ 0x80
 800e37a:	eb0d 0807 	add.w	r8, sp, r7
 800e37e:	e958 7311 	ldrd	r7, r3, [r8, #-68]	@ 0x44
 800e382:	f858 2c48 	ldr.w	r2, [r8, #-72]
 800e386:	1888      	adds	r0, r1, r2
 800e388:	9006      	str	r0, [sp, #24]
 800e38a:	19ca      	adds	r2, r1, r7
 800e38c:	eb0a 0700 	add.w	r7, sl, r0
 800e390:	4670      	mov	r0, lr
 800e392:	4419      	add	r1, r3
 800e394:	4458      	add	r0, fp
 800e396:	f01b 0303 	ands.w	r3, fp, #3
 800e39a:	4676      	mov	r6, lr
 800e39c:	9209      	str	r2, [sp, #36]	@ 0x24
 800e39e:	910a      	str	r1, [sp, #40]	@ 0x28
 800e3a0:	eb0a 0802 	add.w	r8, sl, r2
 800e3a4:	eb0a 0901 	add.w	r9, sl, r1
 800e3a8:	9007      	str	r0, [sp, #28]
 800e3aa:	d039      	beq.n	800e420 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x404>
 800e3ac:	2b01      	cmp	r3, #1
 800e3ae:	d023      	beq.n	800e3f8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x3dc>
 800e3b0:	2b02      	cmp	r3, #2
 800e3b2:	d010      	beq.n	800e3d6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x3ba>
 800e3b4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e3b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e3b8:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e3bc:	9101      	str	r1, [sp, #4]
 800e3be:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e3c2:	9a06      	ldr	r2, [sp, #24]
 800e3c4:	9300      	str	r3, [sp, #0]
 800e3c6:	f81a 3002 	ldrb.w	r3, [sl, r2]
 800e3ca:	6868      	ldr	r0, [r5, #4]
 800e3cc:	4672      	mov	r2, lr
 800e3ce:	4621      	mov	r1, r4
 800e3d0:	f001 f8d8 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e3d4:	3601      	adds	r6, #1
 800e3d6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e3d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e3da:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800e3de:	9001      	str	r0, [sp, #4]
 800e3e0:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800e3e4:	9906      	ldr	r1, [sp, #24]
 800e3e6:	9200      	str	r2, [sp, #0]
 800e3e8:	f81a 3001 	ldrb.w	r3, [sl, r1]
 800e3ec:	6868      	ldr	r0, [r5, #4]
 800e3ee:	4632      	mov	r2, r6
 800e3f0:	4621      	mov	r1, r4
 800e3f2:	f001 f8c7 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e3f6:	3601      	adds	r6, #1
 800e3f8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800e3fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e3fc:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e400:	9301      	str	r3, [sp, #4]
 800e402:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e406:	9806      	ldr	r0, [sp, #24]
 800e408:	9100      	str	r1, [sp, #0]
 800e40a:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e40e:	6868      	ldr	r0, [r5, #4]
 800e410:	4632      	mov	r2, r6
 800e412:	4621      	mov	r1, r4
 800e414:	f001 f8b6 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e418:	9b07      	ldr	r3, [sp, #28]
 800e41a:	3601      	adds	r6, #1
 800e41c:	42b3      	cmp	r3, r6
 800e41e:	d035      	beq.n	800e48c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x470>
 800e420:	f899 3000 	ldrb.w	r3, [r9]
 800e424:	9301      	str	r3, [sp, #4]
 800e426:	f898 1000 	ldrb.w	r1, [r8]
 800e42a:	9100      	str	r1, [sp, #0]
 800e42c:	4632      	mov	r2, r6
 800e42e:	783b      	ldrb	r3, [r7, #0]
 800e430:	6868      	ldr	r0, [r5, #4]
 800e432:	4621      	mov	r1, r4
 800e434:	f001 f8a6 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e438:	f899 2000 	ldrb.w	r2, [r9]
 800e43c:	9201      	str	r2, [sp, #4]
 800e43e:	f898 0000 	ldrb.w	r0, [r8]
 800e442:	9000      	str	r0, [sp, #0]
 800e444:	1c72      	adds	r2, r6, #1
 800e446:	783b      	ldrb	r3, [r7, #0]
 800e448:	6868      	ldr	r0, [r5, #4]
 800e44a:	9206      	str	r2, [sp, #24]
 800e44c:	4621      	mov	r1, r4
 800e44e:	f001 f899 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e452:	f899 3000 	ldrb.w	r3, [r9]
 800e456:	9301      	str	r3, [sp, #4]
 800e458:	f898 1000 	ldrb.w	r1, [r8]
 800e45c:	9a06      	ldr	r2, [sp, #24]
 800e45e:	9100      	str	r1, [sp, #0]
 800e460:	783b      	ldrb	r3, [r7, #0]
 800e462:	6868      	ldr	r0, [r5, #4]
 800e464:	3201      	adds	r2, #1
 800e466:	4621      	mov	r1, r4
 800e468:	f001 f88c 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e46c:	f899 2000 	ldrb.w	r2, [r9]
 800e470:	9201      	str	r2, [sp, #4]
 800e472:	f898 0000 	ldrb.w	r0, [r8]
 800e476:	9000      	str	r0, [sp, #0]
 800e478:	783b      	ldrb	r3, [r7, #0]
 800e47a:	6868      	ldr	r0, [r5, #4]
 800e47c:	1cf2      	adds	r2, r6, #3
 800e47e:	4621      	mov	r1, r4
 800e480:	f001 f880 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e484:	9b07      	ldr	r3, [sp, #28]
 800e486:	3604      	adds	r6, #4
 800e488:	42b3      	cmp	r3, r6
 800e48a:	d1c9      	bne.n	800e420 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x404>
 800e48c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800e48e:	9e04      	ldr	r6, [sp, #16]
 800e490:	42b7      	cmp	r7, r6
 800e492:	f43f ae81 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e496:	9a08      	ldr	r2, [sp, #32]
 800e498:	9805      	ldr	r0, [sp, #20]
 800e49a:	4631      	mov	r1, r6
 800e49c:	3103      	adds	r1, #3
 800e49e:	445a      	add	r2, fp
 800e4a0:	4288      	cmp	r0, r1
 800e4a2:	9104      	str	r1, [sp, #16]
 800e4a4:	9208      	str	r2, [sp, #32]
 800e4a6:	f63f af5f 	bhi.w	800e368 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x34c>
 800e4aa:	e675      	b.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e4ac:	4b74      	ldr	r3, [pc, #464]	@ (800e680 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x664>)
 800e4ae:	4a75      	ldr	r2, [pc, #468]	@ (800e684 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x668>)
 800e4b0:	4875      	ldr	r0, [pc, #468]	@ (800e688 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x66c>)
 800e4b2:	21c8      	movs	r1, #200	@ 0xc8
 800e4b4:	f009 fcd2 	bl	8017e5c <__assert_func>
 800e4b8:	e5e1      	b.n	800e07e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x62>
 800e4ba:	4b74      	ldr	r3, [pc, #464]	@ (800e68c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x670>)
 800e4bc:	4a71      	ldr	r2, [pc, #452]	@ (800e684 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x668>)
 800e4be:	4872      	ldr	r0, [pc, #456]	@ (800e688 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x66c>)
 800e4c0:	2165      	movs	r1, #101	@ 0x65
 800e4c2:	f009 fccb 	bl	8017e5c <__assert_func>
 800e4c6:	9b05      	ldr	r3, [sp, #20]
 800e4c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e4cc:	f67f adb5 	bls.w	800e03a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x1e>
 800e4d0:	4f6f      	ldr	r7, [pc, #444]	@ (800e690 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x674>)
 800e4d2:	4b70      	ldr	r3, [pc, #448]	@ (800e694 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x678>)
 800e4d4:	4a6b      	ldr	r2, [pc, #428]	@ (800e684 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x668>)
 800e4d6:	486c      	ldr	r0, [pc, #432]	@ (800e688 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x66c>)
 800e4d8:	2166      	movs	r1, #102	@ 0x66
 800e4da:	f009 fcbf 	bl	8017e5c <__assert_func>
 800e4de:	683e      	ldr	r6, [r7, #0]
 800e4e0:	2e00      	cmp	r6, #0
 800e4e2:	f47f adaf 	bne.w	800e044 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x28>
 800e4e6:	4b6c      	ldr	r3, [pc, #432]	@ (800e698 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x67c>)
 800e4e8:	4a6c      	ldr	r2, [pc, #432]	@ (800e69c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x680>)
 800e4ea:	486d      	ldr	r0, [pc, #436]	@ (800e6a0 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x684>)
 800e4ec:	21a4      	movs	r1, #164	@ 0xa4
 800e4ee:	f009 fcb5 	bl	8017e5c <__assert_func>
 800e4f2:	683e      	ldr	r6, [r7, #0]
 800e4f4:	e5a6      	b.n	800e044 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x28>
 800e4f6:	4b6b      	ldr	r3, [pc, #428]	@ (800e6a4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x688>)
 800e4f8:	4a62      	ldr	r2, [pc, #392]	@ (800e684 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x668>)
 800e4fa:	4863      	ldr	r0, [pc, #396]	@ (800e688 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x66c>)
 800e4fc:	21c9      	movs	r1, #201	@ 0xc9
 800e4fe:	f009 fcad 	bl	8017e5c <__assert_func>
 800e502:	e5c0      	b.n	800e086 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x6a>
 800e504:	9e04      	ldr	r6, [sp, #16]
 800e506:	9906      	ldr	r1, [sp, #24]
 800e508:	9104      	str	r1, [sp, #16]
 800e50a:	eba7 0e08 	sub.w	lr, r7, r8
 800e50e:	eb0e 0c4e 	add.w	ip, lr, lr, lsl #1
 800e512:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 800e516:	fb0b f008 	mul.w	r0, fp, r8
 800e51a:	f1ac 0303 	sub.w	r3, ip, #3
 800e51e:	00ba      	lsls	r2, r7, #2
 800e520:	9008      	str	r0, [sp, #32]
 800e522:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e524:	920c      	str	r2, [sp, #48]	@ 0x30
 800e526:	f1bb 0f00 	cmp.w	fp, #0
 800e52a:	f000 808e 	beq.w	800e64a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x62e>
 800e52e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800e530:	9904      	ldr	r1, [sp, #16]
 800e532:	f8dd e020 	ldr.w	lr, [sp, #32]
 800e536:	3680      	adds	r6, #128	@ 0x80
 800e538:	eb0d 0806 	add.w	r8, sp, r6
 800e53c:	e958 2311 	ldrd	r2, r3, [r8, #-68]	@ 0x44
 800e540:	f858 7c48 	ldr.w	r7, [r8, #-72]
 800e544:	19c8      	adds	r0, r1, r7
 800e546:	188a      	adds	r2, r1, r2
 800e548:	9006      	str	r0, [sp, #24]
 800e54a:	4419      	add	r1, r3
 800e54c:	eb0a 0700 	add.w	r7, sl, r0
 800e550:	f01b 0303 	ands.w	r3, fp, #3
 800e554:	eb0b 000e 	add.w	r0, fp, lr
 800e558:	4676      	mov	r6, lr
 800e55a:	9209      	str	r2, [sp, #36]	@ 0x24
 800e55c:	910a      	str	r1, [sp, #40]	@ 0x28
 800e55e:	eb0a 0802 	add.w	r8, sl, r2
 800e562:	eb0a 0901 	add.w	r9, sl, r1
 800e566:	9007      	str	r0, [sp, #28]
 800e568:	d039      	beq.n	800e5de <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x5c2>
 800e56a:	2b01      	cmp	r3, #1
 800e56c:	d023      	beq.n	800e5b6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x59a>
 800e56e:	2b02      	cmp	r3, #2
 800e570:	d010      	beq.n	800e594 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x578>
 800e572:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e574:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e576:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e57a:	9101      	str	r1, [sp, #4]
 800e57c:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e580:	9a06      	ldr	r2, [sp, #24]
 800e582:	9300      	str	r3, [sp, #0]
 800e584:	f81a 3002 	ldrb.w	r3, [sl, r2]
 800e588:	6868      	ldr	r0, [r5, #4]
 800e58a:	4672      	mov	r2, lr
 800e58c:	4621      	mov	r1, r4
 800e58e:	f001 f907 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e592:	3601      	adds	r6, #1
 800e594:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e596:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e598:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800e59c:	9001      	str	r0, [sp, #4]
 800e59e:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800e5a2:	9906      	ldr	r1, [sp, #24]
 800e5a4:	9200      	str	r2, [sp, #0]
 800e5a6:	f81a 3001 	ldrb.w	r3, [sl, r1]
 800e5aa:	6868      	ldr	r0, [r5, #4]
 800e5ac:	4632      	mov	r2, r6
 800e5ae:	4621      	mov	r1, r4
 800e5b0:	f001 f8f6 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e5b4:	3601      	adds	r6, #1
 800e5b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800e5b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e5ba:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e5be:	9301      	str	r3, [sp, #4]
 800e5c0:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e5c4:	9806      	ldr	r0, [sp, #24]
 800e5c6:	9100      	str	r1, [sp, #0]
 800e5c8:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800e5cc:	6868      	ldr	r0, [r5, #4]
 800e5ce:	4632      	mov	r2, r6
 800e5d0:	4621      	mov	r1, r4
 800e5d2:	f001 f8e5 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e5d6:	9b07      	ldr	r3, [sp, #28]
 800e5d8:	3601      	adds	r6, #1
 800e5da:	429e      	cmp	r6, r3
 800e5dc:	d035      	beq.n	800e64a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x62e>
 800e5de:	f899 0000 	ldrb.w	r0, [r9]
 800e5e2:	9001      	str	r0, [sp, #4]
 800e5e4:	f898 3000 	ldrb.w	r3, [r8]
 800e5e8:	9300      	str	r3, [sp, #0]
 800e5ea:	4632      	mov	r2, r6
 800e5ec:	783b      	ldrb	r3, [r7, #0]
 800e5ee:	6868      	ldr	r0, [r5, #4]
 800e5f0:	4621      	mov	r1, r4
 800e5f2:	f001 f8d5 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e5f6:	f899 2000 	ldrb.w	r2, [r9]
 800e5fa:	9201      	str	r2, [sp, #4]
 800e5fc:	f898 1000 	ldrb.w	r1, [r8]
 800e600:	9100      	str	r1, [sp, #0]
 800e602:	1c72      	adds	r2, r6, #1
 800e604:	783b      	ldrb	r3, [r7, #0]
 800e606:	6868      	ldr	r0, [r5, #4]
 800e608:	9206      	str	r2, [sp, #24]
 800e60a:	4621      	mov	r1, r4
 800e60c:	f001 f8c8 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e610:	f899 0000 	ldrb.w	r0, [r9]
 800e614:	9001      	str	r0, [sp, #4]
 800e616:	f898 3000 	ldrb.w	r3, [r8]
 800e61a:	9a06      	ldr	r2, [sp, #24]
 800e61c:	9300      	str	r3, [sp, #0]
 800e61e:	783b      	ldrb	r3, [r7, #0]
 800e620:	6868      	ldr	r0, [r5, #4]
 800e622:	3201      	adds	r2, #1
 800e624:	4621      	mov	r1, r4
 800e626:	f001 f8bb 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e62a:	f899 2000 	ldrb.w	r2, [r9]
 800e62e:	9201      	str	r2, [sp, #4]
 800e630:	f898 1000 	ldrb.w	r1, [r8]
 800e634:	9100      	str	r1, [sp, #0]
 800e636:	783b      	ldrb	r3, [r7, #0]
 800e638:	6868      	ldr	r0, [r5, #4]
 800e63a:	1cf2      	adds	r2, r6, #3
 800e63c:	4621      	mov	r1, r4
 800e63e:	f001 f8af 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e642:	9b07      	ldr	r3, [sp, #28]
 800e644:	3604      	adds	r6, #4
 800e646:	429e      	cmp	r6, r3
 800e648:	d1c9      	bne.n	800e5de <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x5c2>
 800e64a:	9f04      	ldr	r7, [sp, #16]
 800e64c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800e64e:	42b7      	cmp	r7, r6
 800e650:	f43f ada2 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e654:	9a08      	ldr	r2, [sp, #32]
 800e656:	9905      	ldr	r1, [sp, #20]
 800e658:	3703      	adds	r7, #3
 800e65a:	445a      	add	r2, fp
 800e65c:	42b9      	cmp	r1, r7
 800e65e:	9704      	str	r7, [sp, #16]
 800e660:	9208      	str	r2, [sp, #32]
 800e662:	f63f af60 	bhi.w	800e526 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x50a>
 800e666:	e597      	b.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e668:	4b0f      	ldr	r3, [pc, #60]	@ (800e6a8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x68c>)
 800e66a:	4a06      	ldr	r2, [pc, #24]	@ (800e684 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x668>)
 800e66c:	4806      	ldr	r0, [pc, #24]	@ (800e688 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x66c>)
 800e66e:	21b3      	movs	r1, #179	@ 0xb3
 800e670:	f009 fbf4 	bl	8017e5c <__assert_func>
 800e674:	f1b9 0f00 	cmp.w	r9, #0
 800e678:	f47f ae5e 	bne.w	800e338 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x31c>
 800e67c:	e59d      	b.n	800e1ba <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x19e>
 800e67e:	bf00      	nop
 800e680:	08019bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, pc}
 800e684:	08019b54 	stmdaeq	r1, {r2, r4, r6, r8, r9, fp, ip, pc}
 800e688:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}
 800e68c:	08019b40 	stmdaeq	r1, {r6, r8, r9, fp, ip, pc}
 800e690:	20000074 	andcs	r0, r0, r4, ror r0
 800e694:	08019b5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, fp, ip, pc}
 800e698:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800e69c:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 800e6a0:	08019908 	stmdaeq	r1, {r3, r8, fp, ip, pc}
 800e6a4:	08019be4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, fp, ip, pc}
 800e6a8:	08019b84 	stmdaeq	r1, {r2, r7, r8, r9, fp, ip, pc}
 800e6ac:	f1ac 0103 	sub.w	r1, ip, #3
 800e6b0:	0098      	lsls	r0, r3, #2
 800e6b2:	9209      	str	r2, [sp, #36]	@ 0x24
 800e6b4:	910c      	str	r1, [sp, #48]	@ 0x30
 800e6b6:	f8cd 9020 	str.w	r9, [sp, #32]
 800e6ba:	900d      	str	r0, [sp, #52]	@ 0x34
 800e6bc:	f1bb 0f00 	cmp.w	fp, #0
 800e6c0:	f000 80a0 	beq.w	800e804 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x7e8>
 800e6c4:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e6c6:	9908      	ldr	r1, [sp, #32]
 800e6c8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 800e6cc:	3780      	adds	r7, #128	@ 0x80
 800e6ce:	eb0d 0907 	add.w	r9, sp, r7
 800e6d2:	4677      	mov	r7, lr
 800e6d4:	f859 3c48 	ldr.w	r3, [r9, #-72]
 800e6d8:	18c8      	adds	r0, r1, r3
 800e6da:	e959 2311 	ldrd	r2, r3, [r9, #-68]	@ 0x44
 800e6de:	188a      	adds	r2, r1, r2
 800e6e0:	4419      	add	r1, r3
 800e6e2:	eb0a 0301 	add.w	r3, sl, r1
 800e6e6:	920a      	str	r2, [sp, #40]	@ 0x28
 800e6e8:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e6ea:	eb0a 0902 	add.w	r9, sl, r2
 800e6ee:	f01b 0103 	ands.w	r1, fp, #3
 800e6f2:	eb0b 020e 	add.w	r2, fp, lr
 800e6f6:	9006      	str	r0, [sp, #24]
 800e6f8:	eb0a 0800 	add.w	r8, sl, r0
 800e6fc:	9304      	str	r3, [sp, #16]
 800e6fe:	9207      	str	r2, [sp, #28]
 800e700:	d03e      	beq.n	800e780 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x764>
 800e702:	2901      	cmp	r1, #1
 800e704:	d026      	beq.n	800e754 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x738>
 800e706:	2902      	cmp	r1, #2
 800e708:	d011      	beq.n	800e72e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x712>
 800e70a:	f81a 2000 	ldrb.w	r2, [sl, r0]
 800e70e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e710:	7df3      	ldrb	r3, [r6, #23]
 800e712:	9202      	str	r2, [sp, #8]
 800e714:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800e718:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e71a:	9001      	str	r0, [sp, #4]
 800e71c:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e720:	9100      	str	r1, [sp, #0]
 800e722:	6868      	ldr	r0, [r5, #4]
 800e724:	4672      	mov	r2, lr
 800e726:	4621      	mov	r1, r4
 800e728:	f001 f95e 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e72c:	3701      	adds	r7, #1
 800e72e:	9806      	ldr	r0, [sp, #24]
 800e730:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e732:	f81a 2000 	ldrb.w	r2, [sl, r0]
 800e736:	7df3      	ldrb	r3, [r6, #23]
 800e738:	9202      	str	r2, [sp, #8]
 800e73a:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800e73e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e740:	9001      	str	r0, [sp, #4]
 800e742:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e746:	9100      	str	r1, [sp, #0]
 800e748:	463a      	mov	r2, r7
 800e74a:	6868      	ldr	r0, [r5, #4]
 800e74c:	4621      	mov	r1, r4
 800e74e:	f001 f94b 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e752:	3701      	adds	r7, #1
 800e754:	9b06      	ldr	r3, [sp, #24]
 800e756:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800e758:	f81a e003 	ldrb.w	lr, [sl, r3]
 800e75c:	f81a c000 	ldrb.w	ip, [sl, r0]
 800e760:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e762:	7df3      	ldrb	r3, [r6, #23]
 800e764:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800e768:	9100      	str	r1, [sp, #0]
 800e76a:	e9cd ce01 	strd	ip, lr, [sp, #4]
 800e76e:	463a      	mov	r2, r7
 800e770:	6868      	ldr	r0, [r5, #4]
 800e772:	4621      	mov	r1, r4
 800e774:	f001 f938 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e778:	9b07      	ldr	r3, [sp, #28]
 800e77a:	3701      	adds	r7, #1
 800e77c:	42bb      	cmp	r3, r7
 800e77e:	d041      	beq.n	800e804 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x7e8>
 800e780:	f898 0000 	ldrb.w	r0, [r8]
 800e784:	7df3      	ldrb	r3, [r6, #23]
 800e786:	9002      	str	r0, [sp, #8]
 800e788:	f899 2000 	ldrb.w	r2, [r9]
 800e78c:	9904      	ldr	r1, [sp, #16]
 800e78e:	9201      	str	r2, [sp, #4]
 800e790:	7808      	ldrb	r0, [r1, #0]
 800e792:	9000      	str	r0, [sp, #0]
 800e794:	463a      	mov	r2, r7
 800e796:	6868      	ldr	r0, [r5, #4]
 800e798:	4621      	mov	r1, r4
 800e79a:	f001 f925 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e79e:	f898 2000 	ldrb.w	r2, [r8]
 800e7a2:	7df3      	ldrb	r3, [r6, #23]
 800e7a4:	9202      	str	r2, [sp, #8]
 800e7a6:	f899 1000 	ldrb.w	r1, [r9]
 800e7aa:	9804      	ldr	r0, [sp, #16]
 800e7ac:	9101      	str	r1, [sp, #4]
 800e7ae:	7802      	ldrb	r2, [r0, #0]
 800e7b0:	9200      	str	r2, [sp, #0]
 800e7b2:	6868      	ldr	r0, [r5, #4]
 800e7b4:	1c7a      	adds	r2, r7, #1
 800e7b6:	4621      	mov	r1, r4
 800e7b8:	9206      	str	r2, [sp, #24]
 800e7ba:	f001 f915 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e7be:	f898 1000 	ldrb.w	r1, [r8]
 800e7c2:	7df3      	ldrb	r3, [r6, #23]
 800e7c4:	9102      	str	r1, [sp, #8]
 800e7c6:	f899 0000 	ldrb.w	r0, [r9]
 800e7ca:	9904      	ldr	r1, [sp, #16]
 800e7cc:	9001      	str	r0, [sp, #4]
 800e7ce:	7808      	ldrb	r0, [r1, #0]
 800e7d0:	9a06      	ldr	r2, [sp, #24]
 800e7d2:	9000      	str	r0, [sp, #0]
 800e7d4:	6868      	ldr	r0, [r5, #4]
 800e7d6:	3201      	adds	r2, #1
 800e7d8:	4621      	mov	r1, r4
 800e7da:	f001 f905 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e7de:	f898 2000 	ldrb.w	r2, [r8]
 800e7e2:	7df3      	ldrb	r3, [r6, #23]
 800e7e4:	9202      	str	r2, [sp, #8]
 800e7e6:	f899 1000 	ldrb.w	r1, [r9]
 800e7ea:	9804      	ldr	r0, [sp, #16]
 800e7ec:	9101      	str	r1, [sp, #4]
 800e7ee:	7802      	ldrb	r2, [r0, #0]
 800e7f0:	9200      	str	r2, [sp, #0]
 800e7f2:	6868      	ldr	r0, [r5, #4]
 800e7f4:	1cfa      	adds	r2, r7, #3
 800e7f6:	4621      	mov	r1, r4
 800e7f8:	f001 f8f6 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e7fc:	9b07      	ldr	r3, [sp, #28]
 800e7fe:	3704      	adds	r7, #4
 800e800:	42bb      	cmp	r3, r7
 800e802:	d1bd      	bne.n	800e780 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x764>
 800e804:	9f08      	ldr	r7, [sp, #32]
 800e806:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800e808:	4287      	cmp	r7, r0
 800e80a:	f43f acc5 	beq.w	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e80e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e810:	9905      	ldr	r1, [sp, #20]
 800e812:	3703      	adds	r7, #3
 800e814:	445a      	add	r2, fp
 800e816:	42b9      	cmp	r1, r7
 800e818:	9708      	str	r7, [sp, #32]
 800e81a:	9209      	str	r2, [sp, #36]	@ 0x24
 800e81c:	f63f af4e 	bhi.w	800e6bc <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x6a0>
 800e820:	e4ba      	b.n	800e198 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x17c>
 800e822:	4b03      	ldr	r3, [pc, #12]	@ (800e830 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x814>)
 800e824:	4a03      	ldr	r2, [pc, #12]	@ (800e834 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x818>)
 800e826:	4804      	ldr	r0, [pc, #16]	@ (800e838 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x81c>)
 800e828:	21a2      	movs	r1, #162	@ 0xa2
 800e82a:	f009 fb17 	bl	8017e5c <__assert_func>
 800e82e:	bf00      	nop
 800e830:	08019bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, ip, pc}
 800e834:	08019bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, ip, pc}
 800e838:	08019a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, pc}

0800e83c <WS28xxDmxMulti::Sync(unsigned long)>:
 800e83c:	291f      	cmp	r1, #31
 800e83e:	b570      	push	{r4, r5, r6, lr}
 800e840:	460c      	mov	r4, r1
 800e842:	4605      	mov	r5, r0
 800e844:	d810      	bhi.n	800e868 <WS28xxDmxMulti::Sync(unsigned long)+0x2c>
 800e846:	4a0c      	ldr	r2, [pc, #48]	@ (800e878 <WS28xxDmxMulti::Sync(unsigned long)+0x3c>)
 800e848:	f240 6304 	movw	r3, #1540	@ 0x604
 800e84c:	fb04 f303 	mul.w	r3, r4, r3
 800e850:	18d1      	adds	r1, r2, r3
 800e852:	f503 6080 	add.w	r0, r3, #1024	@ 0x400
 800e856:	4402      	add	r2, r0
 800e858:	f8d1 3600 	ldr.w	r3, [r1, #1536]	@ 0x600
 800e85c:	4628      	mov	r0, r5
 800e85e:	4621      	mov	r1, r4
 800e860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e864:	f7ff bbda 	b.w	800e01c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>
 800e868:	4b04      	ldr	r3, [pc, #16]	@ (800e87c <WS28xxDmxMulti::Sync(unsigned long)+0x40>)
 800e86a:	4a05      	ldr	r2, [pc, #20]	@ (800e880 <WS28xxDmxMulti::Sync(unsigned long)+0x44>)
 800e86c:	4805      	ldr	r0, [pc, #20]	@ (800e884 <WS28xxDmxMulti::Sync(unsigned long)+0x48>)
 800e86e:	21b5      	movs	r1, #181	@ 0xb5
 800e870:	f009 faf4 	bl	8017e5c <__assert_func>
 800e874:	e7e7      	b.n	800e846 <WS28xxDmxMulti::Sync(unsigned long)+0xa>
 800e876:	bf00      	nop
 800e878:	200006ec 	andcs	r0, r0, ip, ror #13
 800e87c:	08019bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, ip, pc}
 800e880:	08019c08 	stmdaeq	r1, {r3, sl, fp, ip, pc}
 800e884:	08019c10 	stmdaeq	r1, {r4, sl, fp, ip, pc}

0800e888 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)>:
 800e888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e88c:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e890:	b143      	cbz	r3, 800e8a4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x1c>
 800e892:	4d23      	ldr	r5, [pc, #140]	@ (800e920 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x98>)
 800e894:	682f      	ldr	r7, [r5, #0]
 800e896:	4606      	mov	r6, r0
 800e898:	460c      	mov	r4, r1
 800e89a:	2f00      	cmp	r7, #0
 800e89c:	d038      	beq.n	800e910 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x88>
 800e89e:	8fb8      	ldrh	r0, [r7, #60]	@ 0x3c
 800e8a0:	4284      	cmp	r4, r0
 800e8a2:	d001      	beq.n	800e8a8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x20>
 800e8a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e8a8:	4c1e      	ldr	r4, [pc, #120]	@ (800e924 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x9c>)
 800e8aa:	2500      	movs	r5, #0
 800e8ac:	f242 6818 	movw	r8, #9752	@ 0x2618
 800e8b0:	e00e      	b.n	800e8d0 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x48>
 800e8b2:	f8d4 3200 	ldr.w	r3, [r4, #512]	@ 0x200
 800e8b6:	f814 f008 	pld	[r4, r8]
 800e8ba:	4622      	mov	r2, r4
 800e8bc:	4629      	mov	r1, r5
 800e8be:	4630      	mov	r0, r6
 800e8c0:	f7ff fbac 	bl	800e01c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>
 800e8c4:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800e8c6:	3501      	adds	r5, #1
 800e8c8:	429d      	cmp	r5, r3
 800e8ca:	f204 6404 	addw	r4, r4, #1540	@ 0x604
 800e8ce:	d81a      	bhi.n	800e906 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x7e>
 800e8d0:	2d20      	cmp	r5, #32
 800e8d2:	d1ee      	bne.n	800e8b2 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x2a>
 800e8d4:	4b14      	ldr	r3, [pc, #80]	@ (800e928 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xa0>)
 800e8d6:	4a15      	ldr	r2, [pc, #84]	@ (800e92c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xa4>)
 800e8d8:	4815      	ldr	r0, [pc, #84]	@ (800e930 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xa8>)
 800e8da:	21b5      	movs	r1, #181	@ 0xb5
 800e8dc:	f009 fabe 	bl	8017e5c <__assert_func>
 800e8e0:	f504 5218 	add.w	r2, r4, #9728	@ 0x2600
 800e8e4:	3218      	adds	r2, #24
 800e8e6:	4629      	mov	r1, r5
 800e8e8:	f892 f000 	pld	[r2]
 800e8ec:	f8d4 3200 	ldr.w	r3, [r4, #512]	@ 0x200
 800e8f0:	4622      	mov	r2, r4
 800e8f2:	4630      	mov	r0, r6
 800e8f4:	f7ff fb92 	bl	800e01c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>
 800e8f8:	8fb9      	ldrh	r1, [r7, #60]	@ 0x3c
 800e8fa:	2920      	cmp	r1, #32
 800e8fc:	f04f 0521 	mov.w	r5, #33	@ 0x21
 800e900:	f204 6404 	addw	r4, r4, #1540	@ 0x604
 800e904:	d8d5      	bhi.n	800e8b2 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x2a>
 800e906:	6870      	ldr	r0, [r6, #4]
 800e908:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e90c:	f000 bd40 	b.w	800f390 <WS28xxMulti::Update()>
 800e910:	4b08      	ldr	r3, [pc, #32]	@ (800e934 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xac>)
 800e912:	4a09      	ldr	r2, [pc, #36]	@ (800e938 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xb0>)
 800e914:	4809      	ldr	r0, [pc, #36]	@ (800e93c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0xb4>)
 800e916:	21a4      	movs	r1, #164	@ 0xa4
 800e918:	f009 faa0 	bl	8017e5c <__assert_func>
 800e91c:	682f      	ldr	r7, [r5, #0]
 800e91e:	e7be      	b.n	800e89e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x16>
 800e920:	20000074 	andcs	r0, r0, r4, ror r0
 800e924:	20000aec 	andcs	r0, r0, ip, ror #21
 800e928:	08019bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, ip, pc}
 800e92c:	08019c08 	stmdaeq	r1, {r3, sl, fp, ip, pc}
 800e930:	08019c10 	stmdaeq	r1, {r4, sl, fp, ip, pc}
 800e934:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800e938:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 800e93c:	08019908 	stmdaeq	r1, {r3, r8, fp, ip, pc}

0800e940 <remoteconfig::pixel::json_get_status(char*, unsigned long)>:
 800e940:	b570      	push	{r4, r5, r6, lr}
 800e942:	4e0a      	ldr	r6, [pc, #40]	@ (800e96c <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x2c>)
 800e944:	6833      	ldr	r3, [r6, #0]
 800e946:	4604      	mov	r4, r0
 800e948:	460d      	mov	r5, r1
 800e94a:	b933      	cbnz	r3, 800e95a <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x1a>
 800e94c:	4b08      	ldr	r3, [pc, #32]	@ (800e970 <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x30>)
 800e94e:	4a09      	ldr	r2, [pc, #36]	@ (800e974 <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x34>)
 800e950:	4809      	ldr	r0, [pc, #36]	@ (800e978 <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x38>)
 800e952:	f240 110d 	movw	r1, #269	@ 0x10d
 800e956:	f009 fa81 	bl	8017e5c <__assert_func>
 800e95a:	6833      	ldr	r3, [r6, #0]
 800e95c:	4a07      	ldr	r2, [pc, #28]	@ (800e97c <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x3c>)
 800e95e:	699b      	ldr	r3, [r3, #24]
 800e960:	4629      	mov	r1, r5
 800e962:	4620      	mov	r0, r4
 800e964:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e968:	f009 b9c0 	b.w	8017cec <snprintf>
 800e96c:	20000078 	andcs	r0, r0, r8, ror r0
 800e970:	08018400 	stmdaeq	r1, {sl, pc}
 800e974:	08018413 	stmdaeq	r1, {r0, r1, r4, sl, pc}
 800e978:	08018e53 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, fp, pc}
 800e97c:	08018e72 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, fp, pc}

0800e980 <pixel::pixel_get_type(pixel::Type)>:
 800e980:	280d      	cmp	r0, #13
 800e982:	bfda      	itte	le
 800e984:	4b02      	ldrle	r3, [pc, #8]	@ (800e990 <pixel::pixel_get_type(pixel::Type)+0x10>)
 800e986:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800e98a:	4802      	ldrgt	r0, [pc, #8]	@ (800e994 <pixel::pixel_get_type(pixel::Type)+0x14>)
 800e98c:	4770      	bx	lr
 800e98e:	bf00      	nop
 800e990:	0801bb88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip, sp, pc}
 800e994:	08018e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, pc}

0800e998 <pixel::pixel_get_type(char const*)>:
 800e998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e99a:	4604      	mov	r4, r0
 800e99c:	b928      	cbnz	r0, 800e9aa <pixel::pixel_get_type(char const*)+0x12>
 800e99e:	4b12      	ldr	r3, [pc, #72]	@ (800e9e8 <pixel::pixel_get_type(char const*)+0x50>)
 800e9a0:	4a12      	ldr	r2, [pc, #72]	@ (800e9ec <pixel::pixel_get_type(char const*)+0x54>)
 800e9a2:	4813      	ldr	r0, [pc, #76]	@ (800e9f0 <pixel::pixel_get_type(char const*)+0x58>)
 800e9a4:	213c      	movs	r1, #60	@ 0x3c
 800e9a6:	f009 fa59 	bl	8017e5c <__assert_func>
 800e9aa:	4912      	ldr	r1, [pc, #72]	@ (800e9f4 <pixel::pixel_get_type(char const*)+0x5c>)
 800e9ac:	2000      	movs	r0, #0
 800e9ae:	1e66      	subs	r6, r4, #1
 800e9b0:	1e4d      	subs	r5, r1, #1
 800e9b2:	e000      	b.n	800e9b6 <pixel::pixel_get_type(char const*)+0x1e>
 800e9b4:	b1ba      	cbz	r2, 800e9e6 <pixel::pixel_get_type(char const*)+0x4e>
 800e9b6:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800e9ba:	f1a2 0341 	sub.w	r3, r2, #65	@ 0x41
 800e9be:	2b19      	cmp	r3, #25
 800e9c0:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800e9c4:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800e9c8:	4617      	mov	r7, r2
 800e9ca:	bf98      	it	ls
 800e9cc:	f102 0720 	addls.w	r7, r2, #32
 800e9d0:	f1bc 0f19 	cmp.w	ip, #25
 800e9d4:	bf98      	it	ls
 800e9d6:	3320      	addls	r3, #32
 800e9d8:	42bb      	cmp	r3, r7
 800e9da:	d0eb      	beq.n	800e9b4 <pixel::pixel_get_type(char const*)+0x1c>
 800e9dc:	3001      	adds	r0, #1
 800e9de:	280e      	cmp	r0, #14
 800e9e0:	f101 0108 	add.w	r1, r1, #8
 800e9e4:	d1e3      	bne.n	800e9ae <pixel::pixel_get_type(char const*)+0x16>
 800e9e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9e8:	08018e90 	stmdaeq	r1, {r4, r7, r9, sl, fp, pc}
 800e9ec:	08018ea3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, fp, pc}
 800e9f0:	08018eb2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, fp, pc}
 800e9f4:	0801bb88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip, sp, pc}

0800e9f8 <pixel::pixel_get_map(char const*)>:
 800e9f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9fa:	4604      	mov	r4, r0
 800e9fc:	b928      	cbnz	r0, 800ea0a <pixel::pixel_get_map(char const*)+0x12>
 800e9fe:	4b15      	ldr	r3, [pc, #84]	@ (800ea54 <pixel::pixel_get_map(char const*)+0x5c>)
 800ea00:	4a15      	ldr	r2, [pc, #84]	@ (800ea58 <pixel::pixel_get_map(char const*)+0x60>)
 800ea02:	4816      	ldr	r0, [pc, #88]	@ (800ea5c <pixel::pixel_get_map(char const*)+0x64>)
 800ea04:	214a      	movs	r1, #74	@ 0x4a
 800ea06:	f009 fa29 	bl	8017e5c <__assert_func>
 800ea0a:	4b15      	ldr	r3, [pc, #84]	@ (800ea60 <pixel::pixel_get_map(char const*)+0x68>)
 800ea0c:	2000      	movs	r0, #0
 800ea0e:	1e5d      	subs	r5, r3, #1
 800ea10:	1e66      	subs	r6, r4, #1
 800ea12:	f103 0c02 	add.w	ip, r3, #2
 800ea16:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800ea1a:	f1a2 0141 	sub.w	r1, r2, #65	@ 0x41
 800ea1e:	2919      	cmp	r1, #25
 800ea20:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800ea24:	f1a1 0e41 	sub.w	lr, r1, #65	@ 0x41
 800ea28:	4617      	mov	r7, r2
 800ea2a:	bf98      	it	ls
 800ea2c:	f102 0720 	addls.w	r7, r2, #32
 800ea30:	f1be 0f19 	cmp.w	lr, #25
 800ea34:	bf98      	it	ls
 800ea36:	3120      	addls	r1, #32
 800ea38:	42b9      	cmp	r1, r7
 800ea3a:	d005      	beq.n	800ea48 <pixel::pixel_get_map(char const*)+0x50>
 800ea3c:	3001      	adds	r0, #1
 800ea3e:	2806      	cmp	r0, #6
 800ea40:	f103 0304 	add.w	r3, r3, #4
 800ea44:	d1e3      	bne.n	800ea0e <pixel::pixel_get_map(char const*)+0x16>
 800ea46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ea48:	2a00      	cmp	r2, #0
 800ea4a:	d0fc      	beq.n	800ea46 <pixel::pixel_get_map(char const*)+0x4e>
 800ea4c:	4565      	cmp	r5, ip
 800ea4e:	d1e2      	bne.n	800ea16 <pixel::pixel_get_map(char const*)+0x1e>
 800ea50:	e7f9      	b.n	800ea46 <pixel::pixel_get_map(char const*)+0x4e>
 800ea52:	bf00      	nop
 800ea54:	08018e90 	stmdaeq	r1, {r4, r7, r9, sl, fp, pc}
 800ea58:	08018ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, pc}
 800ea5c:	08018eb2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, fp, pc}
 800ea60:	0801bb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, ip, sp, pc}

0800ea64 <pixel::pixel_get_map(pixel::Map)>:
 800ea64:	2805      	cmp	r0, #5
 800ea66:	bfda      	itte	le
 800ea68:	4b02      	ldrle	r3, [pc, #8]	@ (800ea74 <pixel::pixel_get_map(pixel::Map)+0x10>)
 800ea6a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800ea6e:	4802      	ldrgt	r0, [pc, #8]	@ (800ea78 <pixel::pixel_get_map(pixel::Map)+0x14>)
 800ea70:	4770      	bx	lr
 800ea72:	bf00      	nop
 800ea74:	0801bb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, ip, sp, pc}
 800ea78:	08018ed2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sl, fp, pc}

0800ea7c <remoteconfig::pixel::json_get_types(char*, unsigned long)>:
 800ea7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ea80:	f1a1 0802 	sub.w	r8, r1, #2
 800ea84:	4a15      	ldr	r2, [pc, #84]	@ (800eadc <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x60>)
 800ea86:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 800eaec <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x70>
 800ea8a:	f8df a064 	ldr.w	sl, [pc, #100]	@ 800eaf0 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x74>
 800ea8e:	460d      	mov	r5, r1
 800ea90:	4641      	mov	r1, r8
 800ea92:	4606      	mov	r6, r0
 800ea94:	f009 f92a 	bl	8017cec <snprintf>
 800ea98:	2700      	movs	r7, #0
 800ea9a:	4604      	mov	r4, r0
 800ea9c:	eb07 0309 	add.w	r3, r7, r9
 800eaa0:	3708      	adds	r7, #8
 800eaa2:	2f78      	cmp	r7, #120	@ 0x78
 800eaa4:	eb06 0004 	add.w	r0, r6, r4
 800eaa8:	d111      	bne.n	800eace <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x52>
 800eaaa:	235d      	movs	r3, #93	@ 0x5d
 800eaac:	1c67      	adds	r7, r4, #1
 800eaae:	f800 3c01 	strb.w	r3, [r0, #-1]
 800eab2:	42bd      	cmp	r5, r7
 800eab4:	f04f 037d 	mov.w	r3, #125	@ 0x7d
 800eab8:	5533      	strb	r3, [r6, r4]
 800eaba:	d205      	bcs.n	800eac8 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x4c>
 800eabc:	4b08      	ldr	r3, [pc, #32]	@ (800eae0 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x64>)
 800eabe:	4a09      	ldr	r2, [pc, #36]	@ (800eae4 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x68>)
 800eac0:	4809      	ldr	r0, [pc, #36]	@ (800eae8 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x6c>)
 800eac2:	216e      	movs	r1, #110	@ 0x6e
 800eac4:	f009 f9ca 	bl	8017e5c <__assert_func>
 800eac8:	4638      	mov	r0, r7
 800eaca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eace:	eba8 0104 	sub.w	r1, r8, r4
 800ead2:	4652      	mov	r2, sl
 800ead4:	f009 f90a 	bl	8017cec <snprintf>
 800ead8:	4404      	add	r4, r0
 800eada:	e7df      	b.n	800ea9c <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x20>
 800eadc:	08018edc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, fp, pc}
 800eae0:	08018ee7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, fp, pc}
 800eae4:	08018f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, pc}
 800eae8:	08018eb2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, fp, pc}
 800eaec:	0801bb88 	stmdaeq	r1, {r3, r7, r8, r9, fp, ip, sp, pc}
 800eaf0:	080188be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, pc}

0800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>:
 800eaf4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800eaf8:	4607      	mov	r7, r0
 800eafa:	4688      	mov	r8, r1
 800eafc:	f3c2 4907 	ubfx	r9, r2, #16, #8
 800eb00:	f3c2 2a07 	ubfx	sl, r2, #8, #8
 800eb04:	b2d4      	uxtb	r4, r2
 800eb06:	f7fa fddb 	bl	80096c0 <PixelConfiguration::Get()>
 800eb0a:	68c3      	ldr	r3, [r0, #12]
 800eb0c:	4e29      	ldr	r6, [pc, #164]	@ (800ebb4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xc0>)
 800eb0e:	2b0d      	cmp	r3, #13
 800eb10:	d846      	bhi.n	800eba0 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xac>
 800eb12:	e8df f003 	tbb	[pc, r3]
 800eb16:	45454507 	strbmi	r4, [r5, #-1287]	@ 0xfffffaf9
 800eb1a:	30454545 	subcc	r4, r5, r5, asr #10
 800eb1e:	12454545 	subne	r4, r5, #289406976	@ 0x11400000
 800eb22:	e9cd1d12 	stmib	sp, {r1, r4, r8, sl, fp, ip}^
 800eb26:	a400      	add	r4, pc, #0	@ (adr r4, 800eb28 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x34>)
 800eb28:	464b      	mov	r3, r9
 800eb2a:	6830      	ldr	r0, [r6, #0]
 800eb2c:	4642      	mov	r2, r8
 800eb2e:	4639      	mov	r1, r7
 800eb30:	f000 fe36 	bl	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800eb34:	b004      	add	sp, #16
 800eb36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eb3a:	e9cd a401 	strd	sl, r4, [sp, #4]
 800eb3e:	f8cd 9000 	str.w	r9, [sp]
 800eb42:	23ff      	movs	r3, #255	@ 0xff
 800eb44:	6830      	ldr	r0, [r6, #0]
 800eb46:	4642      	mov	r2, r8
 800eb48:	4639      	mov	r1, r7
 800eb4a:	f000 ff4d 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800eb4e:	e7f1      	b.n	800eb34 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x40>
 800eb50:	ea6f 1519 	mvn.w	r5, r9, lsr #4
 800eb54:	f089 03c0 	eor.w	r3, r9, #192	@ 0xc0
 800eb58:	f005 050c 	and.w	r5, r5, #12
 800eb5c:	ea45 1593 	orr.w	r5, r5, r3, lsr #6
 800eb60:	ea6f 0394 	mvn.w	r3, r4, lsr #2
 800eb64:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800eb68:	432b      	orrs	r3, r5
 800eb6a:	e9cd a901 	strd	sl, r9, [sp, #4]
 800eb6e:	9400      	str	r4, [sp, #0]
 800eb70:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800eb74:	e7e6      	b.n	800eb44 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x50>
 800eb76:	45d1      	cmp	r9, sl
 800eb78:	6830      	ldr	r0, [r6, #0]
 800eb7a:	f04f 0300 	mov.w	r3, #0
 800eb7e:	d109      	bne.n	800eb94 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xa0>
 800eb80:	45a1      	cmp	r9, r4
 800eb82:	d107      	bne.n	800eb94 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xa0>
 800eb84:	e9cd 3901 	strd	r3, r9, [sp, #4]
 800eb88:	9300      	str	r3, [sp, #0]
 800eb8a:	4642      	mov	r2, r8
 800eb8c:	4639      	mov	r1, r7
 800eb8e:	f001 fe07 	bl	80107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800eb92:	e7cf      	b.n	800eb34 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x40>
 800eb94:	e9cd 4301 	strd	r4, r3, [sp, #4]
 800eb98:	f8cd a000 	str.w	sl, [sp]
 800eb9c:	464b      	mov	r3, r9
 800eb9e:	e7f4      	b.n	800eb8a <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x96>
 800eba0:	e9cd a400 	strd	sl, r4, [sp]
 800eba4:	464b      	mov	r3, r9
 800eba6:	6830      	ldr	r0, [r6, #0]
 800eba8:	4642      	mov	r2, r8
 800ebaa:	4639      	mov	r1, r7
 800ebac:	f000 fcea 	bl	800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800ebb0:	e7c0      	b.n	800eb34 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x40>
 800ebb2:	bf00      	nop
 800ebb4:	2000c99c 	mulcs	r0, ip, r9

0800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>:
 800ebb8:	b538      	push	{r3, r4, r5, lr}
 800ebba:	4605      	mov	r5, r0
 800ebbc:	2400      	movs	r4, #0
 800ebbe:	f7fa fd7f 	bl	80096c0 <PixelConfiguration::Get()>
 800ebc2:	6803      	ldr	r3, [r0, #0]
 800ebc4:	429c      	cmp	r4, r3
 800ebc6:	d300      	bcc.n	800ebca <PixelPatterns::Clear(unsigned long) [clone .isra.0]+0x12>
 800ebc8:	bd38      	pop	{r3, r4, r5, pc}
 800ebca:	4621      	mov	r1, r4
 800ebcc:	2200      	movs	r2, #0
 800ebce:	4628      	mov	r0, r5
 800ebd0:	f7ff ff90 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800ebd4:	3401      	adds	r4, #1
 800ebd6:	e7f2      	b.n	800ebbe <PixelPatterns::Clear(unsigned long) [clone .isra.0]+0x6>

0800ebd8 <PixelPatterns::PixelPatterns(unsigned long)>:
 800ebd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ebda:	233a      	movs	r3, #58	@ 0x3a
 800ebdc:	4a19      	ldr	r2, [pc, #100]	@ (800ec44 <PixelPatterns::PixelPatterns(unsigned long)+0x6c>)
 800ebde:	460c      	mov	r4, r1
 800ebe0:	4605      	mov	r5, r0
 800ebe2:	4919      	ldr	r1, [pc, #100]	@ (800ec48 <PixelPatterns::PixelPatterns(unsigned long)+0x70>)
 800ebe4:	4819      	ldr	r0, [pc, #100]	@ (800ec4c <PixelPatterns::PixelPatterns(unsigned long)+0x74>)
 800ebe6:	f009 f859 	bl	8017c9c <printf>
 800ebea:	4a17      	ldr	r2, [pc, #92]	@ (800ec48 <PixelPatterns::PixelPatterns(unsigned long)+0x70>)
 800ebec:	4915      	ldr	r1, [pc, #84]	@ (800ec44 <PixelPatterns::PixelPatterns(unsigned long)+0x6c>)
 800ebee:	4818      	ldr	r0, [pc, #96]	@ (800ec50 <PixelPatterns::PixelPatterns(unsigned long)+0x78>)
 800ebf0:	9400      	str	r4, [sp, #0]
 800ebf2:	233b      	movs	r3, #59	@ 0x3b
 800ebf4:	f009 f852 	bl	8017c9c <printf>
 800ebf8:	4b16      	ldr	r3, [pc, #88]	@ (800ec54 <PixelPatterns::PixelPatterns(unsigned long)+0x7c>)
 800ebfa:	4a17      	ldr	r2, [pc, #92]	@ (800ec58 <PixelPatterns::PixelPatterns(unsigned long)+0x80>)
 800ebfc:	681b      	ldr	r3, [r3, #0]
 800ebfe:	6013      	str	r3, [r2, #0]
 800ec00:	b92b      	cbnz	r3, 800ec0e <PixelPatterns::PixelPatterns(unsigned long)+0x36>
 800ec02:	4b16      	ldr	r3, [pc, #88]	@ (800ec5c <PixelPatterns::PixelPatterns(unsigned long)+0x84>)
 800ec04:	4a0f      	ldr	r2, [pc, #60]	@ (800ec44 <PixelPatterns::PixelPatterns(unsigned long)+0x6c>)
 800ec06:	4810      	ldr	r0, [pc, #64]	@ (800ec48 <PixelPatterns::PixelPatterns(unsigned long)+0x70>)
 800ec08:	2142      	movs	r1, #66	@ 0x42
 800ec0a:	f009 f927 	bl	8017e5c <__assert_func>
 800ec0e:	4b14      	ldr	r3, [pc, #80]	@ (800ec60 <PixelPatterns::PixelPatterns(unsigned long)+0x88>)
 800ec10:	2c08      	cmp	r4, #8
 800ec12:	bf28      	it	cs
 800ec14:	2408      	movcs	r4, #8
 800ec16:	601c      	str	r4, [r3, #0]
 800ec18:	4b12      	ldr	r3, [pc, #72]	@ (800ec64 <PixelPatterns::PixelPatterns(unsigned long)+0x8c>)
 800ec1a:	2200      	movs	r2, #0
 800ec1c:	6818      	ldr	r0, [r3, #0]
 800ec1e:	4b12      	ldr	r3, [pc, #72]	@ (800ec68 <PixelPatterns::PixelPatterns(unsigned long)+0x90>)
 800ec20:	4611      	mov	r1, r2
 800ec22:	3201      	adds	r2, #1
 800ec24:	2a08      	cmp	r2, #8
 800ec26:	61d9      	str	r1, [r3, #28]
 800ec28:	6018      	str	r0, [r3, #0]
 800ec2a:	6199      	str	r1, [r3, #24]
 800ec2c:	f103 0320 	add.w	r3, r3, #32
 800ec30:	d1f7      	bne.n	800ec22 <PixelPatterns::PixelPatterns(unsigned long)+0x4a>
 800ec32:	4a04      	ldr	r2, [pc, #16]	@ (800ec44 <PixelPatterns::PixelPatterns(unsigned long)+0x6c>)
 800ec34:	4904      	ldr	r1, [pc, #16]	@ (800ec48 <PixelPatterns::PixelPatterns(unsigned long)+0x70>)
 800ec36:	480d      	ldr	r0, [pc, #52]	@ (800ec6c <PixelPatterns::PixelPatterns(unsigned long)+0x94>)
 800ec38:	234e      	movs	r3, #78	@ 0x4e
 800ec3a:	f009 f82f 	bl	8017c9c <printf>
 800ec3e:	4628      	mov	r0, r5
 800ec40:	b003      	add	sp, #12
 800ec42:	bd30      	pop	{r4, r5, pc}
 800ec44:	08018f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, pc}
 800ec48:	08018f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, pc}
 800ec4c:	08018455 	stmdaeq	r1, {r0, r2, r4, r6, sl, pc}
 800ec50:	08018f3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, sl, fp, pc}
 800ec54:	2000c9a4 	andcs	ip, r0, r4, lsr #19
 800ec58:	2000c99c 	mulcs	r0, ip, r9
 800ec5c:	08018f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, pc}
 800ec60:	2000c998 	mulcs	r0, r8, r9
 800ec64:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 800ec68:	2000c898 	mulcs	r0, r8, r8
 800ec6c:	08018476 	stmdaeq	r1, {r1, r2, r4, r5, r6, sl, pc}

0800ec70 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800ec70:	2805      	cmp	r0, #5
 800ec72:	bfdd      	ittte	le
 800ec74:	4b02      	ldrle	r3, [pc, #8]	@ (800ec80 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800ec76:	220e      	movle	r2, #14
 800ec78:	fb02 3000 	mlale	r0, r2, r0, r3
 800ec7c:	4801      	ldrgt	r0, [pc, #4]	@ (800ec84 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800ec7e:	4770      	bx	lr
 800ec80:	0801bbf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 800ec84:	08018e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, pc}

0800ec88 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)>:
 800ec88:	b5e0      	push	{r5, r6, r7, lr}
 800ec8a:	4608      	mov	r0, r1
 800ec8c:	460d      	mov	r5, r1
 800ec8e:	4617      	mov	r7, r2
 800ec90:	461e      	mov	r6, r3
 800ec92:	f7ff ff91 	bl	800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800ec96:	4906      	ldr	r1, [pc, #24]	@ (800ecb0 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)+0x28>)
 800ec98:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ec9c:	2301      	movs	r3, #1
 800ec9e:	61cb      	str	r3, [r1, #28]
 800eca0:	22ff      	movs	r2, #255	@ 0xff
 800eca2:	2300      	movs	r3, #0
 800eca4:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800eca8:	604f      	str	r7, [r1, #4]
 800ecaa:	618e      	str	r6, [r1, #24]
 800ecac:	bde0      	pop	{r5, r6, r7, pc}
 800ecae:	bf00      	nop
 800ecb0:	2000c898 	mulcs	r0, r8, r8

0800ecb4 <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800ecb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ecb6:	4c0c      	ldr	r4, [pc, #48]	@ (800ece8 <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x34>)
 800ecb8:	460d      	mov	r5, r1
 800ecba:	eb04 1445 	add.w	r4, r4, r5, lsl #5
 800ecbe:	4608      	mov	r0, r1
 800ecc0:	4617      	mov	r7, r2
 800ecc2:	461e      	mov	r6, r3
 800ecc4:	f7ff ff78 	bl	800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800ecc8:	2302      	movs	r3, #2
 800ecca:	61e3      	str	r3, [r4, #28]
 800eccc:	9b06      	ldr	r3, [sp, #24]
 800ecce:	6063      	str	r3, [r4, #4]
 800ecd0:	f7fa fcf6 	bl	80096c0 <PixelConfiguration::Get()>
 800ecd4:	6803      	ldr	r3, [r0, #0]
 800ecd6:	6123      	str	r3, [r4, #16]
 800ecd8:	2300      	movs	r3, #0
 800ecda:	6163      	str	r3, [r4, #20]
 800ecdc:	9b07      	ldr	r3, [sp, #28]
 800ecde:	61a3      	str	r3, [r4, #24]
 800ece0:	e9c4 7602 	strd	r7, r6, [r4, #8]
 800ece4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ece6:	bf00      	nop
 800ece8:	2000c898 	mulcs	r0, r8, r8

0800ecec <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800ecec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ecee:	4c0b      	ldr	r4, [pc, #44]	@ (800ed1c <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x30>)
 800ecf0:	460d      	mov	r5, r1
 800ecf2:	eb04 1445 	add.w	r4, r4, r5, lsl #5
 800ecf6:	4608      	mov	r0, r1
 800ecf8:	4616      	mov	r6, r2
 800ecfa:	461f      	mov	r7, r3
 800ecfc:	f7ff ff5c 	bl	800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800ed00:	2303      	movs	r3, #3
 800ed02:	61e3      	str	r3, [r4, #28]
 800ed04:	6067      	str	r7, [r4, #4]
 800ed06:	f7fa fcdb 	bl	80096c0 <PixelConfiguration::Get()>
 800ed0a:	6803      	ldr	r3, [r0, #0]
 800ed0c:	6123      	str	r3, [r4, #16]
 800ed0e:	2300      	movs	r3, #0
 800ed10:	6163      	str	r3, [r4, #20]
 800ed12:	9b06      	ldr	r3, [sp, #24]
 800ed14:	60a6      	str	r6, [r4, #8]
 800ed16:	61a3      	str	r3, [r4, #24]
 800ed18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed1a:	bf00      	nop
 800ed1c:	2000c898 	mulcs	r0, r8, r8

0800ed20 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)>:
 800ed20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed22:	4608      	mov	r0, r1
 800ed24:	460d      	mov	r5, r1
 800ed26:	4616      	mov	r6, r2
 800ed28:	461f      	mov	r7, r3
 800ed2a:	f7ff ff45 	bl	800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800ed2e:	f7fa fcc7 	bl	80096c0 <PixelConfiguration::Get()>
 800ed32:	4911      	ldr	r1, [pc, #68]	@ (800ed78 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x58>)
 800ed34:	6800      	ldr	r0, [r0, #0]
 800ed36:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ed3a:	2304      	movs	r3, #4
 800ed3c:	61cb      	str	r3, [r1, #28]
 800ed3e:	608e      	str	r6, [r1, #8]
 800ed40:	1e43      	subs	r3, r0, #1
 800ed42:	4e0e      	ldr	r6, [pc, #56]	@ (800ed7c <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x5c>)
 800ed44:	604f      	str	r7, [r1, #4]
 800ed46:	005b      	lsls	r3, r3, #1
 800ed48:	b29b      	uxth	r3, r3
 800ed4a:	6835      	ldr	r5, [r6, #0]
 800ed4c:	610b      	str	r3, [r1, #16]
 800ed4e:	2300      	movs	r3, #0
 800ed50:	614b      	str	r3, [r1, #20]
 800ed52:	b96d      	cbnz	r5, 800ed70 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x50>
 800ed54:	0084      	lsls	r4, r0, #2
 800ed56:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
 800ed5a:	4298      	cmp	r0, r3
 800ed5c:	bf34      	ite	cc
 800ed5e:	4620      	movcc	r0, r4
 800ed60:	f04f 30ff 	movcs.w	r0, #4294967295	@ 0xffffffff
 800ed64:	f009 f9f2 	bl	801814c <operator new[](unsigned int)>
 800ed68:	6030      	str	r0, [r6, #0]
 800ed6a:	4404      	add	r4, r0
 800ed6c:	42a0      	cmp	r0, r4
 800ed6e:	d100      	bne.n	800ed72 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x52>
 800ed70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed72:	f840 5b04 	str.w	r5, [r0], #4
 800ed76:	e7f9      	b.n	800ed6c <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x4c>
 800ed78:	2000c898 	mulcs	r0, r8, r8
 800ed7c:	2000c894 	mulcs	r0, r4, r8

0800ed80 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800ed80:	b5e0      	push	{r5, r6, r7, lr}
 800ed82:	4608      	mov	r0, r1
 800ed84:	460d      	mov	r5, r1
 800ed86:	461e      	mov	r6, r3
 800ed88:	4617      	mov	r7, r2
 800ed8a:	f7ff ff15 	bl	800ebb8 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800ed8e:	4908      	ldr	r1, [pc, #32]	@ (800edb0 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x30>)
 800ed90:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ed94:	2305      	movs	r3, #5
 800ed96:	61cb      	str	r3, [r1, #28]
 800ed98:	9b05      	ldr	r3, [sp, #20]
 800ed9a:	604b      	str	r3, [r1, #4]
 800ed9c:	9b04      	ldr	r3, [sp, #16]
 800ed9e:	610b      	str	r3, [r1, #16]
 800eda0:	2300      	movs	r3, #0
 800eda2:	614b      	str	r3, [r1, #20]
 800eda4:	9b06      	ldr	r3, [sp, #24]
 800eda6:	618b      	str	r3, [r1, #24]
 800eda8:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800edac:	bde0      	pop	{r5, r6, r7, pc}
 800edae:	bf00      	nop
 800edb0:	2000c898 	mulcs	r0, r8, r8

0800edb4 <PixelPatterns::Wheel(unsigned char)>:
 800edb4:	43cb      	mvns	r3, r1
 800edb6:	b2db      	uxtb	r3, r3
 800edb8:	2b54      	cmp	r3, #84	@ 0x54
 800edba:	d807      	bhi.n	800edcc <PixelPatterns::Wheel(unsigned char)+0x18>
 800edbc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800edc0:	b2db      	uxtb	r3, r3
 800edc2:	0418      	lsls	r0, r3, #16
 800edc4:	f480 007f 	eor.w	r0, r0, #16711680	@ 0xff0000
 800edc8:	4318      	orrs	r0, r3
 800edca:	4770      	bx	lr
 800edcc:	2ba9      	cmp	r3, #169	@ 0xa9
 800edce:	d809      	bhi.n	800ede4 <PixelPatterns::Wheel(unsigned char)+0x30>
 800edd0:	f1c1 01aa 	rsb	r1, r1, #170	@ 0xaa
 800edd4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800edd8:	b2c9      	uxtb	r1, r1
 800edda:	43c8      	mvns	r0, r1
 800eddc:	b2c0      	uxtb	r0, r0
 800edde:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800ede2:	4770      	bx	lr
 800ede4:	f1c1 0155 	rsb	r1, r1, #85	@ 0x55
 800ede8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800edec:	b2c9      	uxtb	r1, r1
 800edee:	0208      	lsls	r0, r1, #8
 800edf0:	f480 407f 	eor.w	r0, r0, #65280	@ 0xff00
 800edf4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800edf8:	4770      	bx	lr
	...

0800edfc <PixelPatterns::Increment(unsigned long)>:
 800edfc:	4a0d      	ldr	r2, [pc, #52]	@ (800ee34 <PixelPatterns::Increment(unsigned long)+0x38>)
 800edfe:	b510      	push	{r4, lr}
 800ee00:	014c      	lsls	r4, r1, #5
 800ee02:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800ee06:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800ee0a:	b938      	cbnz	r0, 800ee1c <PixelPatterns::Increment(unsigned long)+0x20>
 800ee0c:	690c      	ldr	r4, [r1, #16]
 800ee0e:	3301      	adds	r3, #1
 800ee10:	42a3      	cmp	r3, r4
 800ee12:	bf14      	ite	ne
 800ee14:	461a      	movne	r2, r3
 800ee16:	4602      	moveq	r2, r0
 800ee18:	614a      	str	r2, [r1, #20]
 800ee1a:	bd10      	pop	{r4, pc}
 800ee1c:	b92b      	cbnz	r3, 800ee2a <PixelPatterns::Increment(unsigned long)+0x2e>
 800ee1e:	4422      	add	r2, r4
 800ee20:	6913      	ldr	r3, [r2, #16]
 800ee22:	3b01      	subs	r3, #1
 800ee24:	b29b      	uxth	r3, r3
 800ee26:	6153      	str	r3, [r2, #20]
 800ee28:	e7f7      	b.n	800ee1a <PixelPatterns::Increment(unsigned long)+0x1e>
 800ee2a:	3b01      	subs	r3, #1
 800ee2c:	614b      	str	r3, [r1, #20]
 800ee2e:	2b00      	cmp	r3, #0
 800ee30:	d1f3      	bne.n	800ee1a <PixelPatterns::Increment(unsigned long)+0x1e>
 800ee32:	e7f4      	b.n	800ee1e <PixelPatterns::Increment(unsigned long)+0x22>
 800ee34:	2000c898 	mulcs	r0, r8, r8

0800ee38 <PixelPatterns::RainbowCycleUpdate(unsigned long)>:
 800ee38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee3a:	4b12      	ldr	r3, [pc, #72]	@ (800ee84 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x4c>)
 800ee3c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ee40:	4606      	mov	r6, r0
 800ee42:	695f      	ldr	r7, [r3, #20]
 800ee44:	460c      	mov	r4, r1
 800ee46:	2500      	movs	r5, #0
 800ee48:	f7fa fc3a 	bl	80096c0 <PixelConfiguration::Get()>
 800ee4c:	6803      	ldr	r3, [r0, #0]
 800ee4e:	429d      	cmp	r5, r3
 800ee50:	d305      	bcc.n	800ee5e <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x26>
 800ee52:	4621      	mov	r1, r4
 800ee54:	4630      	mov	r0, r6
 800ee56:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ee5a:	f7ff bfcf 	b.w	800edfc <PixelPatterns::Increment(unsigned long)>
 800ee5e:	f7fa fc2f 	bl	80096c0 <PixelConfiguration::Get()>
 800ee62:	0229      	lsls	r1, r5, #8
 800ee64:	6803      	ldr	r3, [r0, #0]
 800ee66:	fbb1 f1f3 	udiv	r1, r1, r3
 800ee6a:	4439      	add	r1, r7
 800ee6c:	b2c9      	uxtb	r1, r1
 800ee6e:	4630      	mov	r0, r6
 800ee70:	f7ff ffa0 	bl	800edb4 <PixelPatterns::Wheel(unsigned char)>
 800ee74:	4629      	mov	r1, r5
 800ee76:	4602      	mov	r2, r0
 800ee78:	4620      	mov	r0, r4
 800ee7a:	f7ff fe3b 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800ee7e:	3501      	adds	r5, #1
 800ee80:	e7e2      	b.n	800ee48 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x10>
 800ee82:	bf00      	nop
 800ee84:	2000c898 	mulcs	r0, r8, r8

0800ee88 <PixelPatterns::TheaterChaseUpdate(unsigned long)>:
 800ee88:	4b13      	ldr	r3, [pc, #76]	@ (800eed8 <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x50>)
 800ee8a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ee8e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee92:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800ee96:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800ee9a:	f8df a040 	ldr.w	sl, [pc, #64]	@ 800eedc <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x54>
 800ee9e:	4606      	mov	r6, r0
 800eea0:	460c      	mov	r4, r1
 800eea2:	2500      	movs	r5, #0
 800eea4:	f7fa fc0c 	bl	80096c0 <PixelConfiguration::Get()>
 800eea8:	6803      	ldr	r3, [r0, #0]
 800eeaa:	429d      	cmp	r5, r3
 800eeac:	d305      	bcc.n	800eeba <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x32>
 800eeae:	4621      	mov	r1, r4
 800eeb0:	4630      	mov	r0, r6
 800eeb2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eeb6:	f7ff bfa1 	b.w	800edfc <PixelPatterns::Increment(unsigned long)>
 800eeba:	eb05 0309 	add.w	r3, r5, r9
 800eebe:	fb0a f303 	mul.w	r3, sl, r3
 800eec2:	f1b3 3f55 	cmp.w	r3, #1431655765	@ 0x55555555
 800eec6:	4629      	mov	r1, r5
 800eec8:	bf94      	ite	ls
 800eeca:	463a      	movls	r2, r7
 800eecc:	4642      	movhi	r2, r8
 800eece:	4620      	mov	r0, r4
 800eed0:	f7ff fe10 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800eed4:	3501      	adds	r5, #1
 800eed6:	e7e5      	b.n	800eea4 <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x1c>
 800eed8:	2000c898 	mulcs	r0, r8, r8
 800eedc:	aaaaaaab 	bge	6ab9990 <__stack_size+0x6ab1990>

0800eee0 <PixelPatterns::ColourWipeUpdate(unsigned long)>:
 800eee0:	b538      	push	{r3, r4, r5, lr}
 800eee2:	4b08      	ldr	r3, [pc, #32]	@ (800ef04 <PixelPatterns::ColourWipeUpdate(unsigned long)+0x24>)
 800eee4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800eee8:	460c      	mov	r4, r1
 800eeea:	4605      	mov	r5, r0
 800eeec:	6959      	ldr	r1, [r3, #20]
 800eeee:	689a      	ldr	r2, [r3, #8]
 800eef0:	4620      	mov	r0, r4
 800eef2:	f7ff fdff 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800eef6:	4621      	mov	r1, r4
 800eef8:	4628      	mov	r0, r5
 800eefa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eefe:	f7ff bf7d 	b.w	800edfc <PixelPatterns::Increment(unsigned long)>
 800ef02:	bf00      	nop
 800ef04:	2000c898 	mulcs	r0, r8, r8

0800ef08 <PixelPatterns::ScannerUpdate(unsigned long)>:
 800ef08:	4b26      	ldr	r3, [pc, #152]	@ (800efa4 <PixelPatterns::ScannerUpdate(unsigned long)+0x9c>)
 800ef0a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef0e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ef12:	e9d3 2b04 	ldrd	r2, fp, [r3, #16]
 800ef16:	689f      	ldr	r7, [r3, #8]
 800ef18:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 800efa8 <PixelPatterns::ScannerUpdate(unsigned long)+0xa0>
 800ef1c:	9001      	str	r0, [sp, #4]
 800ef1e:	460e      	mov	r6, r1
 800ef20:	2400      	movs	r4, #0
 800ef22:	eba2 090b 	sub.w	r9, r2, fp
 800ef26:	f7fa fbcb 	bl	80096c0 <PixelConfiguration::Get()>
 800ef2a:	6803      	ldr	r3, [r0, #0]
 800ef2c:	429c      	cmp	r4, r3
 800ef2e:	d306      	bcc.n	800ef3e <PixelPatterns::ScannerUpdate(unsigned long)+0x36>
 800ef30:	9801      	ldr	r0, [sp, #4]
 800ef32:	4631      	mov	r1, r6
 800ef34:	b003      	add	sp, #12
 800ef36:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef3a:	f7ff bf5f 	b.w	800edfc <PixelPatterns::Increment(unsigned long)>
 800ef3e:	455c      	cmp	r4, fp
 800ef40:	ea4f 0a84 	mov.w	sl, r4, lsl #2
 800ef44:	d10a      	bne.n	800ef5c <PixelPatterns::ScannerUpdate(unsigned long)+0x54>
 800ef46:	463a      	mov	r2, r7
 800ef48:	4621      	mov	r1, r4
 800ef4a:	4630      	mov	r0, r6
 800ef4c:	f7ff fdd2 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800ef50:	f8d8 3000 	ldr.w	r3, [r8]
 800ef54:	f843 7024 	str.w	r7, [r3, r4, lsl #2]
 800ef58:	3401      	adds	r4, #1
 800ef5a:	e7e4      	b.n	800ef26 <PixelPatterns::ScannerUpdate(unsigned long)+0x1e>
 800ef5c:	45a1      	cmp	r9, r4
 800ef5e:	d109      	bne.n	800ef74 <PixelPatterns::ScannerUpdate(unsigned long)+0x6c>
 800ef60:	463a      	mov	r2, r7
 800ef62:	4649      	mov	r1, r9
 800ef64:	4630      	mov	r0, r6
 800ef66:	f7ff fdc5 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800ef6a:	f8d8 2000 	ldr.w	r2, [r8]
 800ef6e:	f842 700a 	str.w	r7, [r2, sl]
 800ef72:	e7f1      	b.n	800ef58 <PixelPatterns::ScannerUpdate(unsigned long)+0x50>
 800ef74:	f8d8 2000 	ldr.w	r2, [r8]
 800ef78:	f852 200a 	ldr.w	r2, [r2, sl]
 800ef7c:	f3c2 2546 	ubfx	r5, r2, #9, #7
 800ef80:	f3c2 4146 	ubfx	r1, r2, #17, #7
 800ef84:	022d      	lsls	r5, r5, #8
 800ef86:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
 800ef8a:	f3c2 0246 	ubfx	r2, r2, #1, #7
 800ef8e:	4315      	orrs	r5, r2
 800ef90:	462a      	mov	r2, r5
 800ef92:	4621      	mov	r1, r4
 800ef94:	4630      	mov	r0, r6
 800ef96:	f7ff fdad 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800ef9a:	f8d8 2000 	ldr.w	r2, [r8]
 800ef9e:	f842 500a 	str.w	r5, [r2, sl]
 800efa2:	e7d9      	b.n	800ef58 <PixelPatterns::ScannerUpdate(unsigned long)+0x50>
 800efa4:	2000c898 	mulcs	r0, r8, r8
 800efa8:	2000c894 	mulcs	r0, r4, r8

0800efac <PixelPatterns::FadeUpdate(unsigned long)>:
 800efac:	4a20      	ldr	r2, [pc, #128]	@ (800f030 <PixelPatterns::FadeUpdate(unsigned long)+0x84>)
 800efae:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800efb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800efb4:	e9d2 7302 	ldrd	r7, r3, [r2, #8]
 800efb8:	460c      	mov	r4, r1
 800efba:	e9d2 1604 	ldrd	r1, r6, [r2, #16]
 800efbe:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800efc2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800efc6:	4372      	muls	r2, r6
 800efc8:	4605      	mov	r5, r0
 800efca:	1b88      	subs	r0, r1, r6
 800efcc:	fb00 220c 	mla	r2, r0, ip, r2
 800efd0:	fbb2 f2f1 	udiv	r2, r2, r1
 800efd4:	0212      	lsls	r2, r2, #8
 800efd6:	fa1f fc82 	uxth.w	ip, r2
 800efda:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800efde:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800efe2:	4372      	muls	r2, r6
 800efe4:	fb00 220e 	mla	r2, r0, lr, r2
 800efe8:	b2db      	uxtb	r3, r3
 800efea:	fbb2 f2f1 	udiv	r2, r2, r1
 800efee:	0412      	lsls	r2, r2, #16
 800eff0:	b2ff      	uxtb	r7, r7
 800eff2:	4373      	muls	r3, r6
 800eff4:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 800eff8:	fb00 3307 	mla	r3, r0, r7, r3
 800effc:	ea4c 0202 	orr.w	r2, ip, r2
 800f000:	fbb3 f3f1 	udiv	r3, r3, r1
 800f004:	b2db      	uxtb	r3, r3
 800f006:	ea42 0603 	orr.w	r6, r2, r3
 800f00a:	2700      	movs	r7, #0
 800f00c:	f7fa fb58 	bl	80096c0 <PixelConfiguration::Get()>
 800f010:	6803      	ldr	r3, [r0, #0]
 800f012:	429f      	cmp	r7, r3
 800f014:	d305      	bcc.n	800f022 <PixelPatterns::FadeUpdate(unsigned long)+0x76>
 800f016:	4621      	mov	r1, r4
 800f018:	4628      	mov	r0, r5
 800f01a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800f01e:	f7ff beed 	b.w	800edfc <PixelPatterns::Increment(unsigned long)>
 800f022:	4639      	mov	r1, r7
 800f024:	4632      	mov	r2, r6
 800f026:	4620      	mov	r0, r4
 800f028:	f7ff fd64 	bl	800eaf4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800f02c:	3701      	adds	r7, #1
 800f02e:	e7ed      	b.n	800f00c <PixelPatterns::FadeUpdate(unsigned long)+0x60>
 800f030:	2000c898 	mulcs	r0, r8, r8

0800f034 <PixelPatterns::PortUpdate(unsigned long, unsigned long)>:
 800f034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f036:	4b12      	ldr	r3, [pc, #72]	@ (800f080 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x4c>)
 800f038:	014e      	lsls	r6, r1, #5
 800f03a:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800f03e:	599c      	ldr	r4, [r3, r6]
 800f040:	686f      	ldr	r7, [r5, #4]
 800f042:	1b14      	subs	r4, r2, r4
 800f044:	42bc      	cmp	r4, r7
 800f046:	d309      	bcc.n	800f05c <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x28>
 800f048:	519a      	str	r2, [r3, r6]
 800f04a:	69eb      	ldr	r3, [r5, #28]
 800f04c:	3b01      	subs	r3, #1
 800f04e:	2b04      	cmp	r3, #4
 800f050:	d804      	bhi.n	800f05c <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x28>
 800f052:	e8df f003 	tbb	[pc, r3]
 800f056:	0f0c0905 	svceq	0x000c0905
 800f05a:	20000012 	andcs	r0, r0, r2, lsl r0
 800f05e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f060:	f7ff feea 	bl	800ee38 <PixelPatterns::RainbowCycleUpdate(unsigned long)>
 800f064:	2001      	movs	r0, #1
 800f066:	e7fa      	b.n	800f05e <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x2a>
 800f068:	f7ff ff0e 	bl	800ee88 <PixelPatterns::TheaterChaseUpdate(unsigned long)>
 800f06c:	e7fa      	b.n	800f064 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800f06e:	f7ff ff37 	bl	800eee0 <PixelPatterns::ColourWipeUpdate(unsigned long)>
 800f072:	e7f7      	b.n	800f064 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800f074:	f7ff ff48 	bl	800ef08 <PixelPatterns::ScannerUpdate(unsigned long)>
 800f078:	e7f4      	b.n	800f064 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800f07a:	f7ff ff97 	bl	800efac <PixelPatterns::FadeUpdate(unsigned long)>
 800f07e:	e7f1      	b.n	800f064 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800f080:	2000c898 	mulcs	r0, r8, r8

0800f084 <TIMER3_IRQHandler>:
 800f084:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800f088:	f8d3 2810 	ldr.w	r2, [r3, #2064]	@ 0x810
 800f08c:	0791      	lsls	r1, r2, #30
 800f08e:	d52b      	bpl.n	800f0e8 <TIMER3_IRQHandler+0x64>
 800f090:	b410      	push	{r4}
 800f092:	f8d3 4400 	ldr.w	r4, [r3, #1024]	@ 0x400
 800f096:	4817      	ldr	r0, [pc, #92]	@ (800f0f4 <TIMER3_IRQHandler+0x70>)
 800f098:	f024 0101 	bic.w	r1, r4, #1
 800f09c:	f8c3 1400 	str.w	r1, [r3, #1024]	@ 0x400
 800f0a0:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800f0a4:	4c14      	ldr	r4, [pc, #80]	@ (800f0f8 <TIMER3_IRQHandler+0x74>)
 800f0a6:	f421 7100 	bic.w	r1, r1, #512	@ 0x200
 800f0aa:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800f0ae:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800f0b2:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 800f0b6:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800f0ba:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800f0be:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 800f0c2:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800f0c6:	f04f 4c80 	mov.w	ip, #1073741824	@ 0x40000000
 800f0ca:	2300      	movs	r3, #0
 800f0cc:	7023      	strb	r3, [r4, #0]
 800f0ce:	f44f 517f 	mov.w	r1, #16320	@ 0x3fc0
 800f0d2:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 800f0d6:	43d2      	mvns	r2, r2
 800f0d8:	f8c0 1828 	str.w	r1, [r0, #2088]	@ 0x828
 800f0dc:	6184      	str	r4, [r0, #24]
 800f0de:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f0e2:	f8cc 2810 	str.w	r2, [ip, #2064]	@ 0x810
 800f0e6:	4770      	bx	lr
 800f0e8:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800f0ec:	43d1      	mvns	r1, r2
 800f0ee:	f8c0 1810 	str.w	r1, [r0, #2064]	@ 0x810
 800f0f2:	4770      	bx	lr
 800f0f4:	40020000 	andmi	r0, r2, r0
 800f0f8:	2000c9a8 	andcs	ip, r0, r8, lsr #19

0800f0fc <WS28xxMulti::~WS28xxMulti()>:
 800f0fc:	b570      	push	{r4, r5, r6, lr}
 800f0fe:	4e0a      	ldr	r6, [pc, #40]	@ (800f128 <WS28xxMulti::~WS28xxMulti()+0x2c>)
 800f100:	4d0a      	ldr	r5, [pc, #40]	@ (800f12c <WS28xxMulti::~WS28xxMulti()+0x30>)
 800f102:	4632      	mov	r2, r6
 800f104:	4604      	mov	r4, r0
 800f106:	4629      	mov	r1, r5
 800f108:	23c6      	movs	r3, #198	@ 0xc6
 800f10a:	4809      	ldr	r0, [pc, #36]	@ (800f130 <WS28xxMulti::~WS28xxMulti()+0x34>)
 800f10c:	f008 fdc6 	bl	8017c9c <printf>
 800f110:	4b08      	ldr	r3, [pc, #32]	@ (800f134 <WS28xxMulti::~WS28xxMulti()+0x38>)
 800f112:	2000      	movs	r0, #0
 800f114:	6018      	str	r0, [r3, #0]
 800f116:	4632      	mov	r2, r6
 800f118:	4629      	mov	r1, r5
 800f11a:	23ca      	movs	r3, #202	@ 0xca
 800f11c:	4806      	ldr	r0, [pc, #24]	@ (800f138 <WS28xxMulti::~WS28xxMulti()+0x3c>)
 800f11e:	f008 fdbd 	bl	8017c9c <printf>
 800f122:	4620      	mov	r0, r4
 800f124:	bd70      	pop	{r4, r5, r6, pc}
 800f126:	bf00      	nop
 800f128:	08019c38 	stmdaeq	r1, {r3, r4, r5, sl, fp, ip, pc}
 800f12c:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800f130:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 800f134:	2000c9a4 	andcs	ip, r0, r4, lsr #19
 800f138:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}

0800f13c <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800f13c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f140:	23ce      	movs	r3, #206	@ 0xce
 800f142:	b093      	sub	sp, #76	@ 0x4c
 800f144:	460d      	mov	r5, r1
 800f146:	4614      	mov	r4, r2
 800f148:	4983      	ldr	r1, [pc, #524]	@ (800f358 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x21c>)
 800f14a:	4a84      	ldr	r2, [pc, #528]	@ (800f35c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x220>)
 800f14c:	4607      	mov	r7, r0
 800f14e:	4884      	ldr	r0, [pc, #528]	@ (800f360 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x224>)
 800f150:	f008 fda4 	bl	8017c9c <printf>
 800f154:	4628      	mov	r0, r5
 800f156:	f009 f847 	bl	80181e8 <__popcountsi2>
 800f15a:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 800f15e:	fb05 f600 	mul.w	r6, r5, r0
 800f162:	4620      	mov	r0, r4
 800f164:	f009 f840 	bl	80181e8 <__popcountsi2>
 800f168:	fb00 f505 	mul.w	r5, r0, r5
 800f16c:	08f6      	lsrs	r6, r6, #3
 800f16e:	f240 182b 	movw	r8, #299	@ 0x12b
 800f172:	08ed      	lsrs	r5, r5, #3
 800f174:	23db      	movs	r3, #219	@ 0xdb
 800f176:	4a78      	ldr	r2, [pc, #480]	@ (800f358 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x21c>)
 800f178:	4978      	ldr	r1, [pc, #480]	@ (800f35c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x220>)
 800f17a:	487a      	ldr	r0, [pc, #488]	@ (800f364 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x228>)
 800f17c:	f8cd 8000 	str.w	r8, [sp]
 800f180:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800f184:	f008 fd8a 	bl	8017c9c <printf>
 800f188:	f241 0001 	movw	r0, #4097	@ 0x1001
 800f18c:	f007 f802 	bl	8016194 <rcu_periph_clock_enable>
 800f190:	4875      	ldr	r0, [pc, #468]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f192:	f007 f8bb 	bl	801630c <timer_deinit>
 800f196:	f04f 0900 	mov.w	r9, #0
 800f19a:	4873      	ldr	r0, [pc, #460]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f19c:	f8cd 801c 	str.w	r8, [sp, #28]
 800f1a0:	a905      	add	r1, sp, #20
 800f1a2:	e9cd 9905 	strd	r9, r9, [sp, #20]
 800f1a6:	f007 f95f 	bl	8016468 <timer_init>
 800f1aa:	486f      	ldr	r0, [pc, #444]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1ac:	2101      	movs	r1, #1
 800f1ae:	f007 faf5 	bl	801679c <timer_master_slave_mode_config>
 800f1b2:	486d      	ldr	r0, [pc, #436]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1b4:	2130      	movs	r1, #48	@ 0x30
 800f1b6:	f007 fae1 	bl	801677c <timer_master_output_trigger_source_select>
 800f1ba:	486b      	ldr	r0, [pc, #428]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1bc:	2210      	movs	r2, #16
 800f1be:	4649      	mov	r1, r9
 800f1c0:	f007 fa7a 	bl	80166b8 <timer_channel_output_mode_config>
 800f1c4:	4868      	ldr	r0, [pc, #416]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1c6:	2210      	movs	r2, #16
 800f1c8:	2102      	movs	r1, #2
 800f1ca:	f007 fa75 	bl	80166b8 <timer_channel_output_mode_config>
 800f1ce:	4866      	ldr	r0, [pc, #408]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1d0:	2210      	movs	r2, #16
 800f1d2:	2103      	movs	r1, #3
 800f1d4:	f007 fa70 	bl	80166b8 <timer_channel_output_mode_config>
 800f1d8:	4863      	ldr	r0, [pc, #396]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1da:	2201      	movs	r2, #1
 800f1dc:	4649      	mov	r1, r9
 800f1de:	f007 fa91 	bl	8016704 <timer_channel_output_pulse_value_config>
 800f1e2:	4861      	ldr	r0, [pc, #388]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1e4:	4632      	mov	r2, r6
 800f1e6:	2102      	movs	r1, #2
 800f1e8:	f007 fa8c 	bl	8016704 <timer_channel_output_pulse_value_config>
 800f1ec:	462a      	mov	r2, r5
 800f1ee:	2103      	movs	r1, #3
 800f1f0:	485d      	ldr	r0, [pc, #372]	@ (800f368 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x22c>)
 800f1f2:	f007 fa87 	bl	8016704 <timer_channel_output_pulse_value_config>
 800f1f6:	f241 0002 	movw	r0, #4098	@ 0x1002
 800f1fa:	f006 ffcb 	bl	8016194 <rcu_periph_clock_enable>
 800f1fe:	485b      	ldr	r0, [pc, #364]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f200:	f007 f884 	bl	801630c <timer_deinit>
 800f204:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800f208:	4858      	ldr	r0, [pc, #352]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f20a:	9307      	str	r3, [sp, #28]
 800f20c:	a905      	add	r1, sp, #20
 800f20e:	e9cd 9905 	strd	r9, r9, [sp, #20]
 800f212:	f007 f929 	bl	8016468 <timer_init>
 800f216:	4855      	ldr	r0, [pc, #340]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f218:	2101      	movs	r1, #1
 800f21a:	f007 fabf 	bl	801679c <timer_master_slave_mode_config>
 800f21e:	4853      	ldr	r0, [pc, #332]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f220:	2107      	movs	r1, #7
 800f222:	f007 fab3 	bl	801678c <timer_slave_mode_select>
 800f226:	4851      	ldr	r0, [pc, #324]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f228:	2120      	movs	r1, #32
 800f22a:	f007 fa9f 	bl	801676c <timer_input_trigger_source_select>
 800f22e:	484f      	ldr	r0, [pc, #316]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f230:	2210      	movs	r2, #16
 800f232:	4649      	mov	r1, r9
 800f234:	f007 fa40 	bl	80166b8 <timer_channel_output_mode_config>
 800f238:	683a      	ldr	r2, [r7, #0]
 800f23a:	f64f 70fe 	movw	r0, #65534	@ 0xfffe
 800f23e:	3201      	adds	r2, #1
 800f240:	4282      	cmp	r2, r0
 800f242:	d87e      	bhi.n	800f342 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x206>
 800f244:	b292      	uxth	r2, r2
 800f246:	4849      	ldr	r0, [pc, #292]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f248:	2100      	movs	r1, #0
 800f24a:	f007 fa5b 	bl	8016704 <timer_channel_output_pulse_value_config>
 800f24e:	4847      	ldr	r0, [pc, #284]	@ (800f36c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x230>)
 800f250:	2102      	movs	r1, #2
 800f252:	f007 faaf 	bl	80167b4 <timer_interrupt_enable>
 800f256:	4946      	ldr	r1, [pc, #280]	@ (800f370 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x234>)
 800f258:	2400      	movs	r4, #0
 800f25a:	f881 431e 	strb.w	r4, [r1, #798]	@ 0x31e
 800f25e:	f04f 4780 	mov.w	r7, #1073741824	@ 0x40000000
 800f262:	600f      	str	r7, [r1, #0]
 800f264:	f640 4015 	movw	r0, #3093	@ 0xc15
 800f268:	f006 ff94 	bl	8016194 <rcu_periph_clock_enable>
 800f26c:	2104      	movs	r1, #4
 800f26e:	4841      	ldr	r0, [pc, #260]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f270:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 800f388 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x24c>
 800f274:	4e40      	ldr	r6, [pc, #256]	@ (800f378 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x23c>)
 800f276:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 800f38c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x250>
 800f27a:	f006 fb6f 	bl	801595c <dma_deinit>
 800f27e:	a809      	add	r0, sp, #36	@ 0x24
 800f280:	f006 fb98 	bl	80159b4 <dma_single_data_para_struct_init>
 800f284:	2501      	movs	r5, #1
 800f286:	2740      	movs	r7, #64	@ 0x40
 800f288:	aa09      	add	r2, sp, #36	@ 0x24
 800f28a:	9609      	str	r6, [sp, #36]	@ 0x24
 800f28c:	4839      	ldr	r0, [pc, #228]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f28e:	970f      	str	r7, [sp, #60]	@ 0x3c
 800f290:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 800f294:	2104      	movs	r1, #4
 800f296:	e9cd 950b 	strd	r9, r5, [sp, #44]	@ 0x2c
 800f29a:	950a      	str	r5, [sp, #40]	@ 0x28
 800f29c:	9411      	str	r4, [sp, #68]	@ 0x44
 800f29e:	960d      	str	r6, [sp, #52]	@ 0x34
 800f2a0:	f006 fb94 	bl	80159cc <dma_single_data_mode_init>
 800f2a4:	4833      	ldr	r0, [pc, #204]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2a6:	2104      	movs	r1, #4
 800f2a8:	f006 fc16 	bl	8015ad8 <dma_circulation_disable>
 800f2ac:	2205      	movs	r2, #5
 800f2ae:	4831      	ldr	r0, [pc, #196]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2b0:	2104      	movs	r1, #4
 800f2b2:	f006 fc19 	bl	8015ae8 <dma_channel_subperipheral_select>
 800f2b6:	2107      	movs	r1, #7
 800f2b8:	482e      	ldr	r0, [pc, #184]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2ba:	f006 fb4f 	bl	801595c <dma_deinit>
 800f2be:	a809      	add	r0, sp, #36	@ 0x24
 800f2c0:	f006 fb78 	bl	80159b4 <dma_single_data_para_struct_init>
 800f2c4:	4b2d      	ldr	r3, [pc, #180]	@ (800f37c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x240>)
 800f2c6:	482b      	ldr	r0, [pc, #172]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2c8:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f2ca:	aa09      	add	r2, sp, #36	@ 0x24
 800f2cc:	2107      	movs	r1, #7
 800f2ce:	970f      	str	r7, [sp, #60]	@ 0x3c
 800f2d0:	940c      	str	r4, [sp, #48]	@ 0x30
 800f2d2:	950a      	str	r5, [sp, #40]	@ 0x28
 800f2d4:	960d      	str	r6, [sp, #52]	@ 0x34
 800f2d6:	9411      	str	r4, [sp, #68]	@ 0x44
 800f2d8:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 800f2dc:	f006 fb76 	bl	80159cc <dma_single_data_mode_init>
 800f2e0:	4824      	ldr	r0, [pc, #144]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2e2:	2107      	movs	r1, #7
 800f2e4:	f006 fbf8 	bl	8015ad8 <dma_circulation_disable>
 800f2e8:	2205      	movs	r2, #5
 800f2ea:	4822      	ldr	r0, [pc, #136]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2ec:	2107      	movs	r1, #7
 800f2ee:	f006 fbfb 	bl	8015ae8 <dma_channel_subperipheral_select>
 800f2f2:	2102      	movs	r1, #2
 800f2f4:	481f      	ldr	r0, [pc, #124]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f2f6:	f006 fb31 	bl	801595c <dma_deinit>
 800f2fa:	a809      	add	r0, sp, #36	@ 0x24
 800f2fc:	f006 fb5a 	bl	80159b4 <dma_single_data_para_struct_init>
 800f300:	aa09      	add	r2, sp, #36	@ 0x24
 800f302:	481c      	ldr	r0, [pc, #112]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f304:	970f      	str	r7, [sp, #60]	@ 0x3c
 800f306:	2102      	movs	r1, #2
 800f308:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 800f30c:	950c      	str	r5, [sp, #48]	@ 0x30
 800f30e:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 800f312:	950a      	str	r5, [sp, #40]	@ 0x28
 800f314:	960d      	str	r6, [sp, #52]	@ 0x34
 800f316:	9411      	str	r4, [sp, #68]	@ 0x44
 800f318:	f006 fb58 	bl	80159cc <dma_single_data_mode_init>
 800f31c:	4815      	ldr	r0, [pc, #84]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f31e:	2102      	movs	r1, #2
 800f320:	f006 fbda 	bl	8015ad8 <dma_circulation_disable>
 800f324:	4813      	ldr	r0, [pc, #76]	@ (800f374 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x238>)
 800f326:	2205      	movs	r2, #5
 800f328:	2102      	movs	r1, #2
 800f32a:	f006 fbdd 	bl	8015ae8 <dma_channel_subperipheral_select>
 800f32e:	4a0b      	ldr	r2, [pc, #44]	@ (800f35c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x220>)
 800f330:	4909      	ldr	r1, [pc, #36]	@ (800f358 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x21c>)
 800f332:	4813      	ldr	r0, [pc, #76]	@ (800f380 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x244>)
 800f334:	f240 137b 	movw	r3, #379	@ 0x17b
 800f338:	f008 fcb0 	bl	8017c9c <printf>
 800f33c:	b013      	add	sp, #76	@ 0x4c
 800f33e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f342:	4a06      	ldr	r2, [pc, #24]	@ (800f35c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x220>)
 800f344:	4b0f      	ldr	r3, [pc, #60]	@ (800f384 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x248>)
 800f346:	4804      	ldr	r0, [pc, #16]	@ (800f358 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x21c>)
 800f348:	f44f 7188 	mov.w	r1, #272	@ 0x110
 800f34c:	f008 fd86 	bl	8017e5c <__assert_func>
 800f350:	683a      	ldr	r2, [r7, #0]
 800f352:	3201      	adds	r2, #1
 800f354:	e776      	b.n	800f244 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x108>
 800f356:	bf00      	nop
 800f358:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800f35c:	08019c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, ip, pc}
 800f360:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 800f364:	08019c70 	stmdaeq	r1, {r4, r5, r6, sl, fp, ip, pc}
 800f368:	40000400 	andmi	r0, r0, r0, lsl #8
 800f36c:	40000800 	andmi	r0, r0, r0, lsl #16
 800f370:	e000e100 	and	lr, r0, r0, lsl #2
 800f374:	40026000 	andmi	r6, r2, r0
 800f378:	40020818 	andmi	r0, r2, r8, lsl r8
 800f37c:	20020000 	andcs	r0, r2, r0
 800f380:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 800f384:	08019cac 	stmdaeq	r1, {r2, r3, r5, r7, sl, fp, ip, pc}
 800f388:	0801bc74 	stmdaeq	r1, {r2, r4, r5, r6, sl, fp, ip, sp, pc}
 800f38c:	40020828 	andmi	r0, r2, r8, lsr #16

0800f390 <WS28xxMulti::Update()>:
 800f390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f392:	4c6b      	ldr	r4, [pc, #428]	@ (800f540 <WS28xxMulti::Update()+0x1b0>)
 800f394:	7823      	ldrb	r3, [r4, #0]
 800f396:	4605      	mov	r5, r0
 800f398:	2b00      	cmp	r3, #0
 800f39a:	f040 80c0 	bne.w	800f51e <WS28xxMulti::Update()+0x18e>
 800f39e:	4a69      	ldr	r2, [pc, #420]	@ (800f544 <WS28xxMulti::Update()+0x1b4>)
 800f3a0:	6828      	ldr	r0, [r5, #0]
 800f3a2:	f8d2 3410 	ldr.w	r3, [r2, #1040]	@ 0x410
 800f3a6:	4f68      	ldr	r7, [pc, #416]	@ (800f548 <WS28xxMulti::Update()+0x1b8>)
 800f3a8:	0841      	lsrs	r1, r0, #1
 800f3aa:	f023 0001 	bic.w	r0, r3, #1
 800f3ae:	f8c2 0410 	str.w	r0, [r2, #1040]	@ 0x410
 800f3b2:	f040 0301 	orr.w	r3, r0, #1
 800f3b6:	f8d2 0408 	ldr.w	r0, [r2, #1032]	@ 0x408
 800f3ba:	f5a7 4600 	sub.w	r6, r7, #32768	@ 0x8000
 800f3be:	f040 003d 	orr.w	r0, r0, #61	@ 0x3d
 800f3c2:	f8c2 0408 	str.w	r0, [r2, #1032]	@ 0x408
 800f3c6:	f8c2 641c 	str.w	r6, [r2, #1052]	@ 0x41c
 800f3ca:	f8c2 7418 	str.w	r7, [r2, #1048]	@ 0x418
 800f3ce:	f8c2 1414 	str.w	r1, [r2, #1044]	@ 0x414
 800f3d2:	f8c2 3410 	str.w	r3, [r2, #1040]	@ 0x410
 800f3d6:	f8d2 7414 	ldr.w	r7, [r2, #1044]	@ 0x414
 800f3da:	2f00      	cmp	r7, #0
 800f3dc:	d1fb      	bne.n	800f3d6 <WS28xxMulti::Update()+0x46>
 800f3de:	495b      	ldr	r1, [pc, #364]	@ (800f54c <WS28xxMulti::Update()+0x1bc>)
 800f3e0:	f04f 4c80 	mov.w	ip, #1073741824	@ 0x40000000
 800f3e4:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800f3e8:	2301      	movs	r3, #1
 800f3ea:	628a      	str	r2, [r1, #40]	@ 0x28
 800f3ec:	7023      	strb	r3, [r4, #0]
 800f3ee:	f8dc 4800 	ldr.w	r4, [ip, #2048]	@ 0x800
 800f3f2:	f024 0001 	bic.w	r0, r4, #1
 800f3f6:	f8cc 0800 	str.w	r0, [ip, #2048]	@ 0x800
 800f3fa:	f8cc 7824 	str.w	r7, [ip, #2084]	@ 0x824
 800f3fe:	f8dc 1400 	ldr.w	r1, [ip, #1024]	@ 0x400
 800f402:	4c53      	ldr	r4, [pc, #332]	@ (800f550 <WS28xxMulti::Update()+0x1c0>)
 800f404:	f021 0201 	bic.w	r2, r1, #1
 800f408:	f8cc 2400 	str.w	r2, [ip, #1024]	@ 0x400
 800f40c:	f8cc 7424 	str.w	r7, [ip, #1060]	@ 0x424
 800f410:	6827      	ldr	r7, [r4, #0]
 800f412:	2f00      	cmp	r7, #0
 800f414:	f000 808b 	beq.w	800f52e <WS28xxMulti::Update()+0x19e>
 800f418:	7d3b      	ldrb	r3, [r7, #20]
 800f41a:	4c4a      	ldr	r4, [pc, #296]	@ (800f544 <WS28xxMulti::Update()+0x1b4>)
 800f41c:	4f4d      	ldr	r7, [pc, #308]	@ (800f554 <WS28xxMulti::Update()+0x1c4>)
 800f41e:	2b00      	cmp	r3, #0
 800f420:	d053      	beq.n	800f4ca <WS28xxMulti::Update()+0x13a>
 800f422:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800f424:	f020 0101 	bic.w	r1, r0, #1
 800f428:	6721      	str	r1, [r4, #112]	@ 0x70
 800f42a:	2220      	movs	r2, #32
 800f42c:	2104      	movs	r1, #4
 800f42e:	4620      	mov	r0, r4
 800f430:	f006 fb7f 	bl	8015b32 <dma_interrupt_flag_clear>
 800f434:	67e7      	str	r7, [r4, #124]	@ 0x7c
 800f436:	882b      	ldrh	r3, [r5, #0]
 800f438:	6763      	str	r3, [r4, #116]	@ 0x74
 800f43a:	6f22      	ldr	r2, [r4, #112]	@ 0x70
 800f43c:	f042 0001 	orr.w	r0, r2, #1
 800f440:	6720      	str	r0, [r4, #112]	@ 0x70
 800f442:	f8d4 10b8 	ldr.w	r1, [r4, #184]	@ 0xb8
 800f446:	f021 0301 	bic.w	r3, r1, #1
 800f44a:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800f44e:	2220      	movs	r2, #32
 800f450:	2107      	movs	r1, #7
 800f452:	4620      	mov	r0, r4
 800f454:	f006 fb6d 	bl	8015b32 <dma_interrupt_flag_clear>
 800f458:	f8c4 60c4 	str.w	r6, [r4, #196]	@ 0xc4
 800f45c:	882e      	ldrh	r6, [r5, #0]
 800f45e:	f8c4 60bc 	str.w	r6, [r4, #188]	@ 0xbc
 800f462:	f8d4 00b8 	ldr.w	r0, [r4, #184]	@ 0xb8
 800f466:	f040 0101 	orr.w	r1, r0, #1
 800f46a:	f8c4 10b8 	str.w	r1, [r4, #184]	@ 0xb8
 800f46e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800f470:	f023 0601 	bic.w	r6, r3, #1
 800f474:	2220      	movs	r2, #32
 800f476:	2102      	movs	r1, #2
 800f478:	4620      	mov	r0, r4
 800f47a:	6426      	str	r6, [r4, #64]	@ 0x40
 800f47c:	f006 fb59 	bl	8015b32 <dma_interrupt_flag_clear>
 800f480:	64e7      	str	r7, [r4, #76]	@ 0x4c
 800f482:	882f      	ldrh	r7, [r5, #0]
 800f484:	6467      	str	r7, [r4, #68]	@ 0x44
 800f486:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 800f488:	4833      	ldr	r0, [pc, #204]	@ (800f558 <WS28xxMulti::Update()+0x1c8>)
 800f48a:	f045 0201 	orr.w	r2, r5, #1
 800f48e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800f492:	6422      	str	r2, [r4, #64]	@ 0x40
 800f494:	f007 f823 	bl	80164de <timer_dma_enable>
 800f498:	482f      	ldr	r0, [pc, #188]	@ (800f558 <WS28xxMulti::Update()+0x1c8>)
 800f49a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800f49e:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 800f4a2:	f007 f81c 	bl	80164de <timer_dma_enable>
 800f4a6:	482c      	ldr	r0, [pc, #176]	@ (800f558 <WS28xxMulti::Update()+0x1c8>)
 800f4a8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800f4ac:	f007 f817 	bl	80164de <timer_dma_enable>
 800f4b0:	f8d4 0800 	ldr.w	r0, [r4, #2048]	@ 0x800
 800f4b4:	f040 0101 	orr.w	r1, r0, #1
 800f4b8:	f8c4 1800 	str.w	r1, [r4, #2048]	@ 0x800
 800f4bc:	f8d4 3400 	ldr.w	r3, [r4, #1024]	@ 0x400
 800f4c0:	f043 0601 	orr.w	r6, r3, #1
 800f4c4:	f8c4 6400 	str.w	r6, [r4, #1024]	@ 0x400
 800f4c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f4ca:	f8d4 00b8 	ldr.w	r0, [r4, #184]	@ 0xb8
 800f4ce:	f020 0101 	bic.w	r1, r0, #1
 800f4d2:	f8c4 10b8 	str.w	r1, [r4, #184]	@ 0xb8
 800f4d6:	2220      	movs	r2, #32
 800f4d8:	2107      	movs	r1, #7
 800f4da:	4620      	mov	r0, r4
 800f4dc:	f006 fb29 	bl	8015b32 <dma_interrupt_flag_clear>
 800f4e0:	f8c4 70c4 	str.w	r7, [r4, #196]	@ 0xc4
 800f4e4:	882b      	ldrh	r3, [r5, #0]
 800f4e6:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
 800f4ea:	f8d4 70b8 	ldr.w	r7, [r4, #184]	@ 0xb8
 800f4ee:	f047 0001 	orr.w	r0, r7, #1
 800f4f2:	f8c4 00b8 	str.w	r0, [r4, #184]	@ 0xb8
 800f4f6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800f4f8:	f021 0301 	bic.w	r3, r1, #1
 800f4fc:	2220      	movs	r2, #32
 800f4fe:	2102      	movs	r1, #2
 800f500:	4620      	mov	r0, r4
 800f502:	6423      	str	r3, [r4, #64]	@ 0x40
 800f504:	f006 fb15 	bl	8015b32 <dma_interrupt_flag_clear>
 800f508:	64e6      	str	r6, [r4, #76]	@ 0x4c
 800f50a:	882d      	ldrh	r5, [r5, #0]
 800f50c:	6465      	str	r5, [r4, #68]	@ 0x44
 800f50e:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 800f510:	4811      	ldr	r0, [pc, #68]	@ (800f558 <WS28xxMulti::Update()+0x1c8>)
 800f512:	f046 0201 	orr.w	r2, r6, #1
 800f516:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800f51a:	6422      	str	r2, [r4, #64]	@ 0x40
 800f51c:	e7bf      	b.n	800f49e <WS28xxMulti::Update()+0x10e>
 800f51e:	4b0f      	ldr	r3, [pc, #60]	@ (800f55c <WS28xxMulti::Update()+0x1cc>)
 800f520:	4a0f      	ldr	r2, [pc, #60]	@ (800f560 <WS28xxMulti::Update()+0x1d0>)
 800f522:	4810      	ldr	r0, [pc, #64]	@ (800f564 <WS28xxMulti::Update()+0x1d4>)
 800f524:	f240 2167 	movw	r1, #615	@ 0x267
 800f528:	f008 fc98 	bl	8017e5c <__assert_func>
 800f52c:	e737      	b.n	800f39e <WS28xxMulti::Update()+0xe>
 800f52e:	4b0e      	ldr	r3, [pc, #56]	@ (800f568 <WS28xxMulti::Update()+0x1d8>)
 800f530:	4a0e      	ldr	r2, [pc, #56]	@ (800f56c <WS28xxMulti::Update()+0x1dc>)
 800f532:	480f      	ldr	r0, [pc, #60]	@ (800f570 <WS28xxMulti::Update()+0x1e0>)
 800f534:	f240 110d 	movw	r1, #269	@ 0x10d
 800f538:	f008 fc90 	bl	8017e5c <__assert_func>
 800f53c:	6827      	ldr	r7, [r4, #0]
 800f53e:	e76b      	b.n	800f418 <WS28xxMulti::Update()+0x88>
 800f540:	2000c9a8 	andcs	ip, r0, r8, lsr #19
 800f544:	40026000 	andmi	r6, r2, r0
 800f548:	20028000 	andcs	r8, r2, r0
 800f54c:	40020000 	andmi	r0, r2, r0
 800f550:	20000078 	andcs	r0, r0, r8, ror r0
 800f554:	0801bc74 	stmdaeq	r1, {r2, r4, r5, r6, sl, fp, ip, sp, pc}
 800f558:	40000400 	andmi	r0, r0, r0, lsl #8
 800f55c:	08019d28 	stmdaeq	r1, {r3, r5, r8, sl, fp, ip, pc}
 800f560:	08019d38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, ip, pc}
 800f564:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800f568:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800f56c:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 800f570:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}

0800f574 <WS28xxMulti::IsUpdating()>:
 800f574:	f3bf 8f5f 	dmb	sy
 800f578:	4b01      	ldr	r3, [pc, #4]	@ (800f580 <WS28xxMulti::IsUpdating()+0xc>)
 800f57a:	7818      	ldrb	r0, [r3, #0]
 800f57c:	4770      	bx	lr
 800f57e:	bf00      	nop
 800f580:	2000c9a8 	andcs	ip, r0, r8, lsr #19

0800f584 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
 800f584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f588:	2907      	cmp	r1, #7
 800f58a:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800f58e:	f89d 401c 	ldrb.w	r4, [sp, #28]
 800f592:	4688      	mov	r8, r1
 800f594:	4617      	mov	r7, r2
 800f596:	461d      	mov	r5, r3
 800f598:	f200 80f1 	bhi.w	800f77e <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x1fa>
 800f59c:	4a7c      	ldr	r2, [pc, #496]	@ (800f790 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x20c>)
 800f59e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 800f5a2:	f108 0106 	add.w	r1, r8, #6
 800f5a6:	eb02 1803 	add.w	r8, r2, r3, lsl #4
 800f5aa:	fa5f fc81 	uxtb.w	ip, r1
 800f5ae:	f108 7788 	add.w	r7, r8, #17825792	@ 0x1100000
 800f5b2:	eb0c 03c7 	add.w	r3, ip, r7, lsl #3
 800f5b6:	00f9      	lsls	r1, r7, #3
 800f5b8:	009a      	lsls	r2, r3, #2
 800f5ba:	062f      	lsls	r7, r5, #24
 800f5bc:	bf4c      	ite	mi
 800f5be:	2000      	movmi	r0, #0
 800f5c0:	2001      	movpl	r0, #1
 800f5c2:	6010      	str	r0, [r2, #0]
 800f5c4:	f101 0080 	add.w	r0, r1, #128	@ 0x80
 800f5c8:	4460      	add	r0, ip
 800f5ca:	0632      	lsls	r2, r6, #24
 800f5cc:	ea4f 0780 	mov.w	r7, r0, lsl #2
 800f5d0:	f501 7380 	add.w	r3, r1, #256	@ 0x100
 800f5d4:	bf4c      	ite	mi
 800f5d6:	2200      	movmi	r2, #0
 800f5d8:	2201      	movpl	r2, #1
 800f5da:	4463      	add	r3, ip
 800f5dc:	0098      	lsls	r0, r3, #2
 800f5de:	603a      	str	r2, [r7, #0]
 800f5e0:	0627      	lsls	r7, r4, #24
 800f5e2:	f101 0710 	add.w	r7, r1, #16
 800f5e6:	bf4c      	ite	mi
 800f5e8:	2200      	movmi	r2, #0
 800f5ea:	2201      	movpl	r2, #1
 800f5ec:	4467      	add	r7, ip
 800f5ee:	6002      	str	r2, [r0, #0]
 800f5f0:	f101 0390 	add.w	r3, r1, #144	@ 0x90
 800f5f4:	0668      	lsls	r0, r5, #25
 800f5f6:	ea4f 0287 	mov.w	r2, r7, lsl #2
 800f5fa:	bf4c      	ite	mi
 800f5fc:	2000      	movmi	r0, #0
 800f5fe:	2001      	movpl	r0, #1
 800f600:	4463      	add	r3, ip
 800f602:	6010      	str	r0, [r2, #0]
 800f604:	0677      	lsls	r7, r6, #25
 800f606:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f60a:	f501 7788 	add.w	r7, r1, #272	@ 0x110
 800f60e:	bf4c      	ite	mi
 800f610:	2000      	movmi	r0, #0
 800f612:	2001      	movpl	r0, #1
 800f614:	4467      	add	r7, ip
 800f616:	6010      	str	r0, [r2, #0]
 800f618:	00bb      	lsls	r3, r7, #2
 800f61a:	0660      	lsls	r0, r4, #25
 800f61c:	f101 0220 	add.w	r2, r1, #32
 800f620:	bf4c      	ite	mi
 800f622:	2000      	movmi	r0, #0
 800f624:	2001      	movpl	r0, #1
 800f626:	4462      	add	r2, ip
 800f628:	6018      	str	r0, [r3, #0]
 800f62a:	06af      	lsls	r7, r5, #26
 800f62c:	ea4f 0382 	mov.w	r3, r2, lsl #2
 800f630:	f101 07a0 	add.w	r7, r1, #160	@ 0xa0
 800f634:	bf4c      	ite	mi
 800f636:	2000      	movmi	r0, #0
 800f638:	2001      	movpl	r0, #1
 800f63a:	4467      	add	r7, ip
 800f63c:	6018      	str	r0, [r3, #0]
 800f63e:	00ba      	lsls	r2, r7, #2
 800f640:	06b0      	lsls	r0, r6, #26
 800f642:	f501 7390 	add.w	r3, r1, #288	@ 0x120
 800f646:	bf4c      	ite	mi
 800f648:	2000      	movmi	r0, #0
 800f64a:	2001      	movpl	r0, #1
 800f64c:	4463      	add	r3, ip
 800f64e:	6010      	str	r0, [r2, #0]
 800f650:	06a7      	lsls	r7, r4, #26
 800f652:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f656:	f101 0730 	add.w	r7, r1, #48	@ 0x30
 800f65a:	bf4c      	ite	mi
 800f65c:	2000      	movmi	r0, #0
 800f65e:	2001      	movpl	r0, #1
 800f660:	4467      	add	r7, ip
 800f662:	6010      	str	r0, [r2, #0]
 800f664:	00bb      	lsls	r3, r7, #2
 800f666:	06e8      	lsls	r0, r5, #27
 800f668:	f101 02b0 	add.w	r2, r1, #176	@ 0xb0
 800f66c:	bf4c      	ite	mi
 800f66e:	2000      	movmi	r0, #0
 800f670:	2001      	movpl	r0, #1
 800f672:	4462      	add	r2, ip
 800f674:	6018      	str	r0, [r3, #0]
 800f676:	06f7      	lsls	r7, r6, #27
 800f678:	ea4f 0382 	mov.w	r3, r2, lsl #2
 800f67c:	f501 7798 	add.w	r7, r1, #304	@ 0x130
 800f680:	bf4c      	ite	mi
 800f682:	2000      	movmi	r0, #0
 800f684:	2001      	movpl	r0, #1
 800f686:	4467      	add	r7, ip
 800f688:	6018      	str	r0, [r3, #0]
 800f68a:	00ba      	lsls	r2, r7, #2
 800f68c:	06e0      	lsls	r0, r4, #27
 800f68e:	f101 0340 	add.w	r3, r1, #64	@ 0x40
 800f692:	bf4c      	ite	mi
 800f694:	2000      	movmi	r0, #0
 800f696:	2001      	movpl	r0, #1
 800f698:	4463      	add	r3, ip
 800f69a:	6010      	str	r0, [r2, #0]
 800f69c:	072f      	lsls	r7, r5, #28
 800f69e:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f6a2:	f101 07c0 	add.w	r7, r1, #192	@ 0xc0
 800f6a6:	bf4c      	ite	mi
 800f6a8:	2000      	movmi	r0, #0
 800f6aa:	2001      	movpl	r0, #1
 800f6ac:	4467      	add	r7, ip
 800f6ae:	6010      	str	r0, [r2, #0]
 800f6b0:	00bb      	lsls	r3, r7, #2
 800f6b2:	0730      	lsls	r0, r6, #28
 800f6b4:	f501 72a0 	add.w	r2, r1, #320	@ 0x140
 800f6b8:	bf4c      	ite	mi
 800f6ba:	2000      	movmi	r0, #0
 800f6bc:	2001      	movpl	r0, #1
 800f6be:	4462      	add	r2, ip
 800f6c0:	6018      	str	r0, [r3, #0]
 800f6c2:	0727      	lsls	r7, r4, #28
 800f6c4:	ea4f 0382 	mov.w	r3, r2, lsl #2
 800f6c8:	f101 0750 	add.w	r7, r1, #80	@ 0x50
 800f6cc:	bf4c      	ite	mi
 800f6ce:	2000      	movmi	r0, #0
 800f6d0:	2001      	movpl	r0, #1
 800f6d2:	4467      	add	r7, ip
 800f6d4:	6018      	str	r0, [r3, #0]
 800f6d6:	00ba      	lsls	r2, r7, #2
 800f6d8:	0768      	lsls	r0, r5, #29
 800f6da:	f101 03d0 	add.w	r3, r1, #208	@ 0xd0
 800f6de:	bf4c      	ite	mi
 800f6e0:	2000      	movmi	r0, #0
 800f6e2:	2001      	movpl	r0, #1
 800f6e4:	4463      	add	r3, ip
 800f6e6:	6010      	str	r0, [r2, #0]
 800f6e8:	0777      	lsls	r7, r6, #29
 800f6ea:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f6ee:	f501 77a8 	add.w	r7, r1, #336	@ 0x150
 800f6f2:	bf4c      	ite	mi
 800f6f4:	2000      	movmi	r0, #0
 800f6f6:	2001      	movpl	r0, #1
 800f6f8:	4467      	add	r7, ip
 800f6fa:	6010      	str	r0, [r2, #0]
 800f6fc:	00bb      	lsls	r3, r7, #2
 800f6fe:	0760      	lsls	r0, r4, #29
 800f700:	f101 0260 	add.w	r2, r1, #96	@ 0x60
 800f704:	bf4c      	ite	mi
 800f706:	2000      	movmi	r0, #0
 800f708:	2001      	movpl	r0, #1
 800f70a:	4462      	add	r2, ip
 800f70c:	6018      	str	r0, [r3, #0]
 800f70e:	07af      	lsls	r7, r5, #30
 800f710:	ea4f 0382 	mov.w	r3, r2, lsl #2
 800f714:	f101 07e0 	add.w	r7, r1, #224	@ 0xe0
 800f718:	bf4c      	ite	mi
 800f71a:	2000      	movmi	r0, #0
 800f71c:	2001      	movpl	r0, #1
 800f71e:	4467      	add	r7, ip
 800f720:	6018      	str	r0, [r3, #0]
 800f722:	00ba      	lsls	r2, r7, #2
 800f724:	07b0      	lsls	r0, r6, #30
 800f726:	f501 73b0 	add.w	r3, r1, #352	@ 0x160
 800f72a:	bf4c      	ite	mi
 800f72c:	2000      	movmi	r0, #0
 800f72e:	2001      	movpl	r0, #1
 800f730:	4463      	add	r3, ip
 800f732:	07a7      	lsls	r7, r4, #30
 800f734:	f101 0770 	add.w	r7, r1, #112	@ 0x70
 800f738:	6010      	str	r0, [r2, #0]
 800f73a:	4467      	add	r7, ip
 800f73c:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f740:	bf4c      	ite	mi
 800f742:	2000      	movmi	r0, #0
 800f744:	2001      	movpl	r0, #1
 800f746:	00bb      	lsls	r3, r7, #2
 800f748:	07ed      	lsls	r5, r5, #31
 800f74a:	f101 05f0 	add.w	r5, r1, #240	@ 0xf0
 800f74e:	f501 71b8 	add.w	r1, r1, #368	@ 0x170
 800f752:	6010      	str	r0, [r2, #0]
 800f754:	4465      	add	r5, ip
 800f756:	bf54      	ite	pl
 800f758:	2001      	movpl	r0, #1
 800f75a:	2000      	movmi	r0, #0
 800f75c:	4461      	add	r1, ip
 800f75e:	07f6      	lsls	r6, r6, #31
 800f760:	6018      	str	r0, [r3, #0]
 800f762:	bf54      	ite	pl
 800f764:	2601      	movpl	r6, #1
 800f766:	2600      	movmi	r6, #0
 800f768:	00aa      	lsls	r2, r5, #2
 800f76a:	07e4      	lsls	r4, r4, #31
 800f76c:	ea4f 0081 	mov.w	r0, r1, lsl #2
 800f770:	bf54      	ite	pl
 800f772:	2401      	movpl	r4, #1
 800f774:	2400      	movmi	r4, #0
 800f776:	6016      	str	r6, [r2, #0]
 800f778:	6004      	str	r4, [r0, #0]
 800f77a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f77e:	4b05      	ldr	r3, [pc, #20]	@ (800f794 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x210>)
 800f780:	4a05      	ldr	r2, [pc, #20]	@ (800f798 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x214>)
 800f782:	4806      	ldr	r0, [pc, #24]	@ (800f79c <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x218>)
 800f784:	f240 3126 	movw	r1, #806	@ 0x326
 800f788:	f008 fb68 	bl	8017e5c <__assert_func>
 800f78c:	e706      	b.n	800f59c <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x18>
 800f78e:	bf00      	nop
 800f790:	20028000 	andcs	r8, r2, r0
 800f794:	08019d40 	stmdaeq	r1, {r6, r8, sl, fp, ip, pc}
 800f798:	08019d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, pc}
 800f79c:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}

0800f7a0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
 800f7a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f7a4:	290f      	cmp	r1, #15
 800f7a6:	f89d 6020 	ldrb.w	r6, [sp, #32]
 800f7aa:	f89d 4024 	ldrb.w	r4, [sp, #36]	@ 0x24
 800f7ae:	4688      	mov	r8, r1
 800f7b0:	4681      	mov	r9, r0
 800f7b2:	4615      	mov	r5, r2
 800f7b4:	461f      	mov	r7, r3
 800f7b6:	f200 80f8 	bhi.w	800f9aa <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x20a>
 800f7ba:	f8d9 3000 	ldr.w	r3, [r9]
 800f7be:	ebb5 0fd3 	cmp.w	r5, r3, lsr #3
 800f7c2:	f080 80ff 	bcs.w	800f9c4 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x224>
 800f7c6:	4a83      	ldr	r2, [pc, #524]	@ (800f9d4 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x234>)
 800f7c8:	eb05 0045 	add.w	r0, r5, r5, lsl #1
 800f7cc:	f108 0106 	add.w	r1, r8, #6
 800f7d0:	eb02 1800 	add.w	r8, r2, r0, lsl #4
 800f7d4:	fa5f fc81 	uxtb.w	ip, r1
 800f7d8:	f108 7588 	add.w	r5, r8, #17825792	@ 0x1100000
 800f7dc:	00e9      	lsls	r1, r5, #3
 800f7de:	eb0c 03c5 	add.w	r3, ip, r5, lsl #3
 800f7e2:	0638      	lsls	r0, r7, #24
 800f7e4:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f7e8:	f101 0580 	add.w	r5, r1, #128	@ 0x80
 800f7ec:	bf54      	ite	pl
 800f7ee:	2000      	movpl	r0, #0
 800f7f0:	2001      	movmi	r0, #1
 800f7f2:	4465      	add	r5, ip
 800f7f4:	6010      	str	r0, [r2, #0]
 800f7f6:	00ab      	lsls	r3, r5, #2
 800f7f8:	f501 7280 	add.w	r2, r1, #256	@ 0x100
 800f7fc:	0635      	lsls	r5, r6, #24
 800f7fe:	bf54      	ite	pl
 800f800:	2000      	movpl	r0, #0
 800f802:	2001      	movmi	r0, #1
 800f804:	4462      	add	r2, ip
 800f806:	6018      	str	r0, [r3, #0]
 800f808:	0095      	lsls	r5, r2, #2
 800f80a:	0620      	lsls	r0, r4, #24
 800f80c:	f101 0310 	add.w	r3, r1, #16
 800f810:	bf54      	ite	pl
 800f812:	2000      	movpl	r0, #0
 800f814:	2001      	movmi	r0, #1
 800f816:	4463      	add	r3, ip
 800f818:	6028      	str	r0, [r5, #0]
 800f81a:	009a      	lsls	r2, r3, #2
 800f81c:	f017 0540 	ands.w	r5, r7, #64	@ 0x40
 800f820:	f101 0090 	add.w	r0, r1, #144	@ 0x90
 800f824:	bf18      	it	ne
 800f826:	2501      	movne	r5, #1
 800f828:	4460      	add	r0, ip
 800f82a:	6015      	str	r5, [r2, #0]
 800f82c:	0083      	lsls	r3, r0, #2
 800f82e:	f016 0240 	ands.w	r2, r6, #64	@ 0x40
 800f832:	f501 7588 	add.w	r5, r1, #272	@ 0x110
 800f836:	bf18      	it	ne
 800f838:	2201      	movne	r2, #1
 800f83a:	4465      	add	r5, ip
 800f83c:	601a      	str	r2, [r3, #0]
 800f83e:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
 800f842:	ea4f 0385 	mov.w	r3, r5, lsl #2
 800f846:	f101 0220 	add.w	r2, r1, #32
 800f84a:	bf18      	it	ne
 800f84c:	2001      	movne	r0, #1
 800f84e:	4462      	add	r2, ip
 800f850:	6018      	str	r0, [r3, #0]
 800f852:	0095      	lsls	r5, r2, #2
 800f854:	f017 0320 	ands.w	r3, r7, #32
 800f858:	f101 00a0 	add.w	r0, r1, #160	@ 0xa0
 800f85c:	bf18      	it	ne
 800f85e:	2301      	movne	r3, #1
 800f860:	4460      	add	r0, ip
 800f862:	602b      	str	r3, [r5, #0]
 800f864:	0082      	lsls	r2, r0, #2
 800f866:	f016 0520 	ands.w	r5, r6, #32
 800f86a:	f501 7390 	add.w	r3, r1, #288	@ 0x120
 800f86e:	bf18      	it	ne
 800f870:	2501      	movne	r5, #1
 800f872:	4463      	add	r3, ip
 800f874:	6015      	str	r5, [r2, #0]
 800f876:	f014 0020 	ands.w	r0, r4, #32
 800f87a:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f87e:	f101 0530 	add.w	r5, r1, #48	@ 0x30
 800f882:	bf18      	it	ne
 800f884:	2001      	movne	r0, #1
 800f886:	4465      	add	r5, ip
 800f888:	6010      	str	r0, [r2, #0]
 800f88a:	00ab      	lsls	r3, r5, #2
 800f88c:	f017 0210 	ands.w	r2, r7, #16
 800f890:	f101 00b0 	add.w	r0, r1, #176	@ 0xb0
 800f894:	bf18      	it	ne
 800f896:	2201      	movne	r2, #1
 800f898:	4460      	add	r0, ip
 800f89a:	601a      	str	r2, [r3, #0]
 800f89c:	0085      	lsls	r5, r0, #2
 800f89e:	f016 0310 	ands.w	r3, r6, #16
 800f8a2:	f501 7298 	add.w	r2, r1, #304	@ 0x130
 800f8a6:	bf18      	it	ne
 800f8a8:	2301      	movne	r3, #1
 800f8aa:	4462      	add	r2, ip
 800f8ac:	602b      	str	r3, [r5, #0]
 800f8ae:	f014 0010 	ands.w	r0, r4, #16
 800f8b2:	ea4f 0582 	mov.w	r5, r2, lsl #2
 800f8b6:	f101 0340 	add.w	r3, r1, #64	@ 0x40
 800f8ba:	bf18      	it	ne
 800f8bc:	2001      	movne	r0, #1
 800f8be:	4463      	add	r3, ip
 800f8c0:	6028      	str	r0, [r5, #0]
 800f8c2:	009a      	lsls	r2, r3, #2
 800f8c4:	f017 0508 	ands.w	r5, r7, #8
 800f8c8:	f101 00c0 	add.w	r0, r1, #192	@ 0xc0
 800f8cc:	bf18      	it	ne
 800f8ce:	2501      	movne	r5, #1
 800f8d0:	4460      	add	r0, ip
 800f8d2:	6015      	str	r5, [r2, #0]
 800f8d4:	0083      	lsls	r3, r0, #2
 800f8d6:	f016 0208 	ands.w	r2, r6, #8
 800f8da:	f501 75a0 	add.w	r5, r1, #320	@ 0x140
 800f8de:	bf18      	it	ne
 800f8e0:	2201      	movne	r2, #1
 800f8e2:	4465      	add	r5, ip
 800f8e4:	601a      	str	r2, [r3, #0]
 800f8e6:	f014 0008 	ands.w	r0, r4, #8
 800f8ea:	ea4f 0385 	mov.w	r3, r5, lsl #2
 800f8ee:	f101 0250 	add.w	r2, r1, #80	@ 0x50
 800f8f2:	bf18      	it	ne
 800f8f4:	2001      	movne	r0, #1
 800f8f6:	4462      	add	r2, ip
 800f8f8:	6018      	str	r0, [r3, #0]
 800f8fa:	0095      	lsls	r5, r2, #2
 800f8fc:	f017 0304 	ands.w	r3, r7, #4
 800f900:	f101 00d0 	add.w	r0, r1, #208	@ 0xd0
 800f904:	bf18      	it	ne
 800f906:	2301      	movne	r3, #1
 800f908:	4460      	add	r0, ip
 800f90a:	602b      	str	r3, [r5, #0]
 800f90c:	0082      	lsls	r2, r0, #2
 800f90e:	f016 0504 	ands.w	r5, r6, #4
 800f912:	f501 73a8 	add.w	r3, r1, #336	@ 0x150
 800f916:	bf18      	it	ne
 800f918:	2501      	movne	r5, #1
 800f91a:	4463      	add	r3, ip
 800f91c:	6015      	str	r5, [r2, #0]
 800f91e:	f014 0004 	ands.w	r0, r4, #4
 800f922:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800f926:	f101 0560 	add.w	r5, r1, #96	@ 0x60
 800f92a:	bf18      	it	ne
 800f92c:	2001      	movne	r0, #1
 800f92e:	4465      	add	r5, ip
 800f930:	6010      	str	r0, [r2, #0]
 800f932:	00ab      	lsls	r3, r5, #2
 800f934:	f017 0202 	ands.w	r2, r7, #2
 800f938:	f101 00e0 	add.w	r0, r1, #224	@ 0xe0
 800f93c:	bf18      	it	ne
 800f93e:	2201      	movne	r2, #1
 800f940:	4460      	add	r0, ip
 800f942:	601a      	str	r2, [r3, #0]
 800f944:	0085      	lsls	r5, r0, #2
 800f946:	f016 0302 	ands.w	r3, r6, #2
 800f94a:	f501 72b0 	add.w	r2, r1, #352	@ 0x160
 800f94e:	bf18      	it	ne
 800f950:	2301      	movne	r3, #1
 800f952:	4462      	add	r2, ip
 800f954:	602b      	str	r3, [r5, #0]
 800f956:	f014 0002 	ands.w	r0, r4, #2
 800f95a:	ea4f 0582 	mov.w	r5, r2, lsl #2
 800f95e:	f101 0370 	add.w	r3, r1, #112	@ 0x70
 800f962:	4463      	add	r3, ip
 800f964:	bf18      	it	ne
 800f966:	2001      	movne	r0, #1
 800f968:	6028      	str	r0, [r5, #0]
 800f96a:	009a      	lsls	r2, r3, #2
 800f96c:	f017 0701 	ands.w	r7, r7, #1
 800f970:	f101 05f0 	add.w	r5, r1, #240	@ 0xf0
 800f974:	4465      	add	r5, ip
 800f976:	bf1c      	itt	ne
 800f978:	2301      	movne	r3, #1
 800f97a:	6013      	strne	r3, [r2, #0]
 800f97c:	ea4f 0085 	mov.w	r0, r5, lsl #2
 800f980:	bf08      	it	eq
 800f982:	6017      	streq	r7, [r2, #0]
 800f984:	f501 71b8 	add.w	r1, r1, #368	@ 0x170
 800f988:	f016 0601 	ands.w	r6, r6, #1
 800f98c:	bf18      	it	ne
 800f98e:	2501      	movne	r5, #1
 800f990:	4461      	add	r1, ip
 800f992:	bf14      	ite	ne
 800f994:	6005      	strne	r5, [r0, #0]
 800f996:	6006      	streq	r6, [r0, #0]
 800f998:	008b      	lsls	r3, r1, #2
 800f99a:	f014 0401 	ands.w	r4, r4, #1
 800f99e:	bf1a      	itte	ne
 800f9a0:	2501      	movne	r5, #1
 800f9a2:	601d      	strne	r5, [r3, #0]
 800f9a4:	601c      	streq	r4, [r3, #0]
 800f9a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f9aa:	4b0b      	ldr	r3, [pc, #44]	@ (800f9d8 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x238>)
 800f9ac:	4a0b      	ldr	r2, [pc, #44]	@ (800f9dc <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x23c>)
 800f9ae:	480c      	ldr	r0, [pc, #48]	@ (800f9e0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x240>)
 800f9b0:	f240 3143 	movw	r1, #835	@ 0x343
 800f9b4:	f008 fa52 	bl	8017e5c <__assert_func>
 800f9b8:	f8d9 3000 	ldr.w	r3, [r9]
 800f9bc:	ebb5 0fd3 	cmp.w	r5, r3, lsr #3
 800f9c0:	f4ff af01 	bcc.w	800f7c6 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x26>
 800f9c4:	4b07      	ldr	r3, [pc, #28]	@ (800f9e4 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x244>)
 800f9c6:	4a05      	ldr	r2, [pc, #20]	@ (800f9dc <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x23c>)
 800f9c8:	4805      	ldr	r0, [pc, #20]	@ (800f9e0 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x240>)
 800f9ca:	f44f 7151 	mov.w	r1, #836	@ 0x344
 800f9ce:	f008 fa45 	bl	8017e5c <__assert_func>
 800f9d2:	e6f8      	b.n	800f7c6 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x26>
 800f9d4:	20020000 	andcs	r0, r2, r0
 800f9d8:	08019d70 	stmdaeq	r1, {r4, r5, r6, r8, sl, fp, ip, pc}
 800f9dc:	08019d80 	stmdaeq	r1, {r7, r8, sl, fp, ip, pc}
 800f9e0:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800f9e4:	08019d90 	stmdaeq	r1, {r4, r7, r8, sl, fp, ip, pc}

0800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800f9e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f9ec:	290f      	cmp	r1, #15
 800f9ee:	f89d 6020 	ldrb.w	r6, [sp, #32]
 800f9f2:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 800f9f6:	f89d 8028 	ldrb.w	r8, [sp, #40]	@ 0x28
 800f9fa:	460c      	mov	r4, r1
 800f9fc:	4682      	mov	sl, r0
 800f9fe:	4691      	mov	r9, r2
 800fa00:	461d      	mov	r5, r3
 800fa02:	f200 808a 	bhi.w	800fb1a <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x132>
 800fa06:	f8da 3000 	ldr.w	r3, [sl]
 800fa0a:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 800fa0e:	f080 8091 	bcs.w	800fb34 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x14c>
 800fa12:	4a4c      	ldr	r2, [pc, #304]	@ (800fb44 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x15c>)
 800fa14:	3406      	adds	r4, #6
 800fa16:	eb02 1189 	add.w	r1, r2, r9, lsl #6
 800fa1a:	b2e0      	uxtb	r0, r4
 800fa1c:	f101 7488 	add.w	r4, r1, #17825792	@ 0x1100000
 800fa20:	3430      	adds	r4, #48	@ 0x30
 800fa22:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 800fa26:	f10c 0080 	add.w	r0, ip, #128	@ 0x80
 800fa2a:	ea4f 0a80 	mov.w	sl, r0, lsl #2
 800fa2e:	ebaa 098c 	sub.w	r9, sl, ip, lsl #2
 800fa32:	4663      	mov	r3, ip
 800fa34:	ea5f 6149 	movs.w	r1, r9, lsl #25
 800fa38:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800fa3c:	f04f 0401 	mov.w	r4, #1
 800fa40:	f04f 0380 	mov.w	r3, #128	@ 0x80
 800fa44:	d53d      	bpl.n	800fac2 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xda>
 800fa46:	f5a2 6cc0 	sub.w	ip, r2, #1536	@ 0x600
 800fa4a:	f015 0180 	ands.w	r1, r5, #128	@ 0x80
 800fa4e:	f5a2 6380 	sub.w	r3, r2, #1024	@ 0x400
 800fa52:	bf0c      	ite	eq
 800fa54:	f8cc 1000 	streq.w	r1, [ip]
 800fa58:	f8cc 4000 	strne.w	r4, [ip]
 800fa5c:	f5a2 7900 	sub.w	r9, r2, #512	@ 0x200
 800fa60:	f016 0080 	ands.w	r0, r6, #128	@ 0x80
 800fa64:	bf0c      	ite	eq
 800fa66:	6018      	streq	r0, [r3, #0]
 800fa68:	601c      	strne	r4, [r3, #0]
 800fa6a:	f017 0180 	ands.w	r1, r7, #128	@ 0x80
 800fa6e:	bf0c      	ite	eq
 800fa70:	f8c9 1000 	streq.w	r1, [r9]
 800fa74:	f8c9 4000 	strne.w	r4, [r9]
 800fa78:	f018 0380 	ands.w	r3, r8, #128	@ 0x80
 800fa7c:	bf0c      	ite	eq
 800fa7e:	6013      	streq	r3, [r2, #0]
 800fa80:	6014      	strne	r4, [r2, #0]
 800fa82:	2340      	movs	r3, #64	@ 0x40
 800fa84:	3240      	adds	r2, #64	@ 0x40
 800fa86:	e01a      	b.n	800fabe <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xd6>
 800fa88:	6014      	str	r4, [r2, #0]
 800fa8a:	f5a9 6c80 	sub.w	ip, r9, #1024	@ 0x400
 800fa8e:	ea11 0006 	ands.w	r0, r1, r6
 800fa92:	f5a9 7300 	sub.w	r3, r9, #512	@ 0x200
 800fa96:	bf0c      	ite	eq
 800fa98:	f8cc 0000 	streq.w	r0, [ip]
 800fa9c:	f8cc 4000 	strne.w	r4, [ip]
 800faa0:	ea11 0207 	ands.w	r2, r1, r7
 800faa4:	bf0c      	ite	eq
 800faa6:	601a      	streq	r2, [r3, #0]
 800faa8:	601c      	strne	r4, [r3, #0]
 800faaa:	ea11 0008 	ands.w	r0, r1, r8
 800faae:	bf0c      	ite	eq
 800fab0:	f8c9 0000 	streq.w	r0, [r9]
 800fab4:	f8c9 4000 	strne.w	r4, [r9]
 800fab8:	f109 0240 	add.w	r2, r9, #64	@ 0x40
 800fabc:	084b      	lsrs	r3, r1, #1
 800fabe:	4552      	cmp	r2, sl
 800fac0:	d029      	beq.n	800fb16 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x12e>
 800fac2:	f5a2 6cc0 	sub.w	ip, r2, #1536	@ 0x600
 800fac6:	ea13 0005 	ands.w	r0, r3, r5
 800faca:	f5a2 6980 	sub.w	r9, r2, #1024	@ 0x400
 800face:	bf0c      	ite	eq
 800fad0:	f8cc 0000 	streq.w	r0, [ip]
 800fad4:	f8cc 4000 	strne.w	r4, [ip]
 800fad8:	ea13 0106 	ands.w	r1, r3, r6
 800fadc:	f5a2 7c00 	sub.w	ip, r2, #512	@ 0x200
 800fae0:	bf0c      	ite	eq
 800fae2:	f8c9 1000 	streq.w	r1, [r9]
 800fae6:	f8c9 4000 	strne.w	r4, [r9]
 800faea:	ea13 0007 	ands.w	r0, r3, r7
 800faee:	bf14      	ite	ne
 800faf0:	f8cc 4000 	strne.w	r4, [ip]
 800faf4:	f8cc 0000 	streq.w	r0, [ip]
 800faf8:	ea13 0108 	ands.w	r1, r3, r8
 800fafc:	bf0c      	ite	eq
 800fafe:	6011      	streq	r1, [r2, #0]
 800fb00:	6014      	strne	r4, [r2, #0]
 800fb02:	0859      	lsrs	r1, r3, #1
 800fb04:	ea15 0353 	ands.w	r3, r5, r3, lsr #1
 800fb08:	f102 0940 	add.w	r9, r2, #64	@ 0x40
 800fb0c:	f5a2 62b8 	sub.w	r2, r2, #1472	@ 0x5c0
 800fb10:	d1ba      	bne.n	800fa88 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa0>
 800fb12:	6013      	str	r3, [r2, #0]
 800fb14:	e7b9      	b.n	800fa8a <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa2>
 800fb16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb1a:	4b0b      	ldr	r3, [pc, #44]	@ (800fb48 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x160>)
 800fb1c:	4a0b      	ldr	r2, [pc, #44]	@ (800fb4c <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x164>)
 800fb1e:	480c      	ldr	r0, [pc, #48]	@ (800fb50 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x168>)
 800fb20:	f240 3161 	movw	r1, #865	@ 0x361
 800fb24:	f008 f99a 	bl	8017e5c <__assert_func>
 800fb28:	f8da 3000 	ldr.w	r3, [sl]
 800fb2c:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 800fb30:	f4ff af6f 	bcc.w	800fa12 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x2a>
 800fb34:	4b07      	ldr	r3, [pc, #28]	@ (800fb54 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x16c>)
 800fb36:	4a05      	ldr	r2, [pc, #20]	@ (800fb4c <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x164>)
 800fb38:	4805      	ldr	r0, [pc, #20]	@ (800fb50 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x168>)
 800fb3a:	f240 3162 	movw	r1, #866	@ 0x362
 800fb3e:	f008 f98d 	bl	8017e5c <__assert_func>
 800fb42:	e766      	b.n	800fa12 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x2a>
 800fb44:	20020000 	andcs	r0, r2, r0
 800fb48:	08019d70 	stmdaeq	r1, {r4, r5, r6, r8, sl, fp, ip, pc}
 800fb4c:	08019db0 	stmdaeq	r1, {r4, r5, r7, r8, sl, fp, ip, pc}
 800fb50:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800fb54:	08019d90 	stmdaeq	r1, {r4, r7, r8, sl, fp, ip, pc}

0800fb58 <WS28xxMulti::Setup(unsigned long)>:
 800fb58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb5c:	4ac3      	ldr	r2, [pc, #780]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fb5e:	4cc4      	ldr	r4, [pc, #784]	@ (800fe70 <WS28xxMulti::Setup(unsigned long)+0x318>)
 800fb60:	b094      	sub	sp, #80	@ 0x50
 800fb62:	460d      	mov	r5, r1
 800fb64:	f240 137f 	movw	r3, #383	@ 0x17f
 800fb68:	49c2      	ldr	r1, [pc, #776]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fb6a:	4607      	mov	r7, r0
 800fb6c:	48c2      	ldr	r0, [pc, #776]	@ (800fe78 <WS28xxMulti::Setup(unsigned long)+0x320>)
 800fb6e:	f008 f895 	bl	8017c9c <printf>
 800fb72:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 800fb76:	f006 fb0d 	bl	8016194 <rcu_periph_clock_enable>
 800fb7a:	48c0      	ldr	r0, [pc, #768]	@ (800fe7c <WS28xxMulti::Setup(unsigned long)+0x324>)
 800fb7c:	2340      	movs	r3, #64	@ 0x40
 800fb7e:	2200      	movs	r2, #0
 800fb80:	2102      	movs	r1, #2
 800fb82:	f006 fa85 	bl	8016090 <gpio_mode_set>
 800fb86:	2340      	movs	r3, #64	@ 0x40
 800fb88:	48bc      	ldr	r0, [pc, #752]	@ (800fe7c <WS28xxMulti::Setup(unsigned long)+0x324>)
 800fb8a:	2202      	movs	r2, #2
 800fb8c:	2100      	movs	r1, #0
 800fb8e:	f006 faa1 	bl	80160d4 <gpio_output_options_set>
 800fb92:	48ba      	ldr	r0, [pc, #744]	@ (800fe7c <WS28xxMulti::Setup(unsigned long)+0x324>)
 800fb94:	2240      	movs	r2, #64	@ 0x40
 800fb96:	2102      	movs	r1, #2
 800fb98:	f006 fab8 	bl	801610c <gpio_af_set>
 800fb9c:	fbb4 f4f5 	udiv	r4, r4, r5
 800fba0:	4ab4      	ldr	r2, [pc, #720]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fba2:	49b2      	ldr	r1, [pc, #712]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fba4:	48b6      	ldr	r0, [pc, #728]	@ (800fe80 <WS28xxMulti::Setup(unsigned long)+0x328>)
 800fba6:	f240 13a1 	movw	r3, #417	@ 0x1a1
 800fbaa:	e9cd 5400 	strd	r5, r4, [sp]
 800fbae:	f008 f875 	bl	8017c9c <printf>
 800fbb2:	2c0c      	cmp	r4, #12
 800fbb4:	f241 0001 	movw	r0, #4097	@ 0x1001
 800fbb8:	bf38      	it	cc
 800fbba:	240c      	movcc	r4, #12
 800fbbc:	f006 faea 	bl	8016194 <rcu_periph_clock_enable>
 800fbc0:	48b0      	ldr	r0, [pc, #704]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fbc2:	f006 fba3 	bl	801630c <timer_deinit>
 800fbc6:	2600      	movs	r6, #0
 800fbc8:	1e63      	subs	r3, r4, #1
 800fbca:	48ae      	ldr	r0, [pc, #696]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fbcc:	9309      	str	r3, [sp, #36]	@ 0x24
 800fbce:	a907      	add	r1, sp, #28
 800fbd0:	e9cd 6607 	strd	r6, r6, [sp, #28]
 800fbd4:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 800fbd8:	f006 fc46 	bl	8016468 <timer_init>
 800fbdc:	f44f 7080 	mov.w	r0, #256	@ 0x100
 800fbe0:	f04f 0a01 	mov.w	sl, #1
 800fbe4:	9006      	str	r0, [sp, #24]
 800fbe6:	4631      	mov	r1, r6
 800fbe8:	48a6      	ldr	r0, [pc, #664]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fbea:	f04f 0902 	mov.w	r9, #2
 800fbee:	aa04      	add	r2, sp, #16
 800fbf0:	e9cd a904 	strd	sl, r9, [sp, #16]
 800fbf4:	f006 fc78 	bl	80164e8 <timer_channel_output_config>
 800fbf8:	fa24 f10a 	lsr.w	r1, r4, sl
 800fbfc:	f64f 78fe 	movw	r8, #65534	@ 0xfffe
 800fc00:	1e4d      	subs	r5, r1, #1
 800fc02:	4545      	cmp	r5, r8
 800fc04:	f200 80f5 	bhi.w	800fdf2 <WS28xxMulti::Setup(unsigned long)+0x29a>
 800fc08:	4631      	mov	r1, r6
 800fc0a:	489e      	ldr	r0, [pc, #632]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc0c:	b2aa      	uxth	r2, r5
 800fc0e:	f006 fd79 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fc12:	4631      	mov	r1, r6
 800fc14:	489b      	ldr	r0, [pc, #620]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc16:	2260      	movs	r2, #96	@ 0x60
 800fc18:	f006 fd4e 	bl	80166b8 <timer_channel_output_mode_config>
 800fc1c:	4632      	mov	r2, r6
 800fc1e:	4631      	mov	r1, r6
 800fc20:	4898      	ldr	r0, [pc, #608]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc22:	f006 fd7d 	bl	8016720 <timer_channel_output_shadow_config>
 800fc26:	4897      	ldr	r0, [pc, #604]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc28:	2210      	movs	r2, #16
 800fc2a:	4649      	mov	r1, r9
 800fc2c:	f006 fd44 	bl	80166b8 <timer_channel_output_mode_config>
 800fc30:	4894      	ldr	r0, [pc, #592]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc32:	2210      	movs	r2, #16
 800fc34:	2103      	movs	r1, #3
 800fc36:	f006 fd3f 	bl	80166b8 <timer_channel_output_mode_config>
 800fc3a:	4892      	ldr	r0, [pc, #584]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc3c:	4652      	mov	r2, sl
 800fc3e:	4649      	mov	r1, r9
 800fc40:	f006 fd60 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fc44:	08a4      	lsrs	r4, r4, #2
 800fc46:	1e66      	subs	r6, r4, #1
 800fc48:	b2b2      	uxth	r2, r6
 800fc4a:	488e      	ldr	r0, [pc, #568]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc4c:	2103      	movs	r1, #3
 800fc4e:	f006 fd59 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fc52:	488c      	ldr	r0, [pc, #560]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc54:	2101      	movs	r1, #1
 800fc56:	f006 fda1 	bl	801679c <timer_master_slave_mode_config>
 800fc5a:	2130      	movs	r1, #48	@ 0x30
 800fc5c:	4889      	ldr	r0, [pc, #548]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fc5e:	f006 fd8d 	bl	801677c <timer_master_output_trigger_source_select>
 800fc62:	f241 0002 	movw	r0, #4098	@ 0x1002
 800fc66:	f006 fa95 	bl	8016194 <rcu_periph_clock_enable>
 800fc6a:	4887      	ldr	r0, [pc, #540]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fc6c:	f006 fb4e 	bl	801630c <timer_deinit>
 800fc70:	f04f 0a00 	mov.w	sl, #0
 800fc74:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800fc78:	4883      	ldr	r0, [pc, #524]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fc7a:	9309      	str	r3, [sp, #36]	@ 0x24
 800fc7c:	a907      	add	r1, sp, #28
 800fc7e:	e9cd aa07 	strd	sl, sl, [sp, #28]
 800fc82:	f006 fbf1 	bl	8016468 <timer_init>
 800fc86:	4880      	ldr	r0, [pc, #512]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fc88:	2101      	movs	r1, #1
 800fc8a:	f006 fd87 	bl	801679c <timer_master_slave_mode_config>
 800fc8e:	487e      	ldr	r0, [pc, #504]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fc90:	2107      	movs	r1, #7
 800fc92:	f006 fd7b 	bl	801678c <timer_slave_mode_select>
 800fc96:	487c      	ldr	r0, [pc, #496]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fc98:	2120      	movs	r1, #32
 800fc9a:	f006 fd67 	bl	801676c <timer_input_trigger_source_select>
 800fc9e:	487a      	ldr	r0, [pc, #488]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fca0:	4651      	mov	r1, sl
 800fca2:	2210      	movs	r2, #16
 800fca4:	f006 fd08 	bl	80166b8 <timer_channel_output_mode_config>
 800fca8:	6839      	ldr	r1, [r7, #0]
 800fcaa:	f64f 70fe 	movw	r0, #65534	@ 0xfffe
 800fcae:	4281      	cmp	r1, r0
 800fcb0:	f200 80d2 	bhi.w	800fe58 <WS28xxMulti::Setup(unsigned long)+0x300>
 800fcb4:	b28a      	uxth	r2, r1
 800fcb6:	4874      	ldr	r0, [pc, #464]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fcb8:	4d74      	ldr	r5, [pc, #464]	@ (800fe8c <WS28xxMulti::Setup(unsigned long)+0x334>)
 800fcba:	2100      	movs	r1, #0
 800fcbc:	f006 fd22 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fcc0:	2400      	movs	r4, #0
 800fcc2:	4871      	ldr	r0, [pc, #452]	@ (800fe88 <WS28xxMulti::Setup(unsigned long)+0x330>)
 800fcc4:	2102      	movs	r1, #2
 800fcc6:	f006 fd75 	bl	80167b4 <timer_interrupt_enable>
 800fcca:	f885 431e 	strb.w	r4, [r5, #798]	@ 0x31e
 800fcce:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800fcd2:	602a      	str	r2, [r5, #0]
 800fcd4:	f640 4015 	movw	r0, #3093	@ 0xc15
 800fcd8:	f006 fa5c 	bl	8016194 <rcu_periph_clock_enable>
 800fcdc:	2107      	movs	r1, #7
 800fcde:	486c      	ldr	r0, [pc, #432]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fce0:	4e6c      	ldr	r6, [pc, #432]	@ (800fe94 <WS28xxMulti::Setup(unsigned long)+0x33c>)
 800fce2:	f005 fe3b 	bl	801595c <dma_deinit>
 800fce6:	a80b      	add	r0, sp, #44	@ 0x2c
 800fce8:	f005 fe64 	bl	80159b4 <dma_single_data_para_struct_init>
 800fcec:	2501      	movs	r5, #1
 800fcee:	4b6a      	ldr	r3, [pc, #424]	@ (800fe98 <WS28xxMulti::Setup(unsigned long)+0x340>)
 800fcf0:	4867      	ldr	r0, [pc, #412]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fcf2:	960d      	str	r6, [sp, #52]	@ 0x34
 800fcf4:	aa0b      	add	r2, sp, #44	@ 0x2c
 800fcf6:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 800fcfa:	f04f 0940 	mov.w	r9, #64	@ 0x40
 800fcfe:	2107      	movs	r1, #7
 800fd00:	930b      	str	r3, [sp, #44]	@ 0x2c
 800fd02:	950e      	str	r5, [sp, #56]	@ 0x38
 800fd04:	950c      	str	r5, [sp, #48]	@ 0x30
 800fd06:	9413      	str	r4, [sp, #76]	@ 0x4c
 800fd08:	960f      	str	r6, [sp, #60]	@ 0x3c
 800fd0a:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
 800fd0e:	f005 fe5d 	bl	80159cc <dma_single_data_mode_init>
 800fd12:	485f      	ldr	r0, [pc, #380]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd14:	2107      	movs	r1, #7
 800fd16:	f005 fedf 	bl	8015ad8 <dma_circulation_disable>
 800fd1a:	2205      	movs	r2, #5
 800fd1c:	485c      	ldr	r0, [pc, #368]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd1e:	2107      	movs	r1, #7
 800fd20:	f005 fee2 	bl	8015ae8 <dma_channel_subperipheral_select>
 800fd24:	2102      	movs	r1, #2
 800fd26:	485a      	ldr	r0, [pc, #360]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd28:	f005 fe18 	bl	801595c <dma_deinit>
 800fd2c:	a80b      	add	r0, sp, #44	@ 0x2c
 800fd2e:	f005 fe41 	bl	80159b4 <dma_single_data_para_struct_init>
 800fd32:	e9cd 460e 	strd	r4, r6, [sp, #56]	@ 0x38
 800fd36:	aa0b      	add	r2, sp, #44	@ 0x2c
 800fd38:	4855      	ldr	r0, [pc, #340]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd3a:	950c      	str	r5, [sp, #48]	@ 0x30
 800fd3c:	2102      	movs	r1, #2
 800fd3e:	9413      	str	r4, [sp, #76]	@ 0x4c
 800fd40:	4d56      	ldr	r5, [pc, #344]	@ (800fe9c <WS28xxMulti::Setup(unsigned long)+0x344>)
 800fd42:	4c57      	ldr	r4, [pc, #348]	@ (800fea0 <WS28xxMulti::Setup(unsigned long)+0x348>)
 800fd44:	4e57      	ldr	r6, [pc, #348]	@ (800fea4 <WS28xxMulti::Setup(unsigned long)+0x34c>)
 800fd46:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
 800fd4a:	940d      	str	r4, [sp, #52]	@ 0x34
 800fd4c:	950b      	str	r5, [sp, #44]	@ 0x2c
 800fd4e:	f005 fe3d 	bl	80159cc <dma_single_data_mode_init>
 800fd52:	484f      	ldr	r0, [pc, #316]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd54:	2102      	movs	r1, #2
 800fd56:	f005 febf 	bl	8015ad8 <dma_circulation_disable>
 800fd5a:	484d      	ldr	r0, [pc, #308]	@ (800fe90 <WS28xxMulti::Setup(unsigned long)+0x338>)
 800fd5c:	2205      	movs	r2, #5
 800fd5e:	2102      	movs	r1, #2
 800fd60:	f005 fec2 	bl	8015ae8 <dma_channel_subperipheral_select>
 800fd64:	6830      	ldr	r0, [r6, #0]
 800fd66:	2800      	cmp	r0, #0
 800fd68:	f000 80a6 	beq.w	800feb8 <WS28xxMulti::Setup(unsigned long)+0x360>
 800fd6c:	68c1      	ldr	r1, [r0, #12]
 800fd6e:	f1a1 020b 	sub.w	r2, r1, #11
 800fd72:	2a02      	cmp	r2, #2
 800fd74:	d81b      	bhi.n	800fdae <WS28xxMulti::Setup(unsigned long)+0x256>
 800fd76:	6803      	ldr	r3, [r0, #0]
 800fd78:	f103 0801 	add.w	r8, r3, #1
 800fd7c:	d021      	beq.n	800fdc2 <WS28xxMulti::Setup(unsigned long)+0x26a>
 800fd7e:	2400      	movs	r4, #0
 800fd80:	4626      	mov	r6, r4
 800fd82:	25ff      	movs	r5, #255	@ 0xff
 800fd84:	2300      	movs	r3, #0
 800fd86:	461a      	mov	r2, r3
 800fd88:	4621      	mov	r1, r4
 800fd8a:	4638      	mov	r0, r7
 800fd8c:	e9cd 6601 	strd	r6, r6, [sp, #4]
 800fd90:	9600      	str	r6, [sp, #0]
 800fd92:	f7ff fe29 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800fd96:	4621      	mov	r1, r4
 800fd98:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800fd9c:	23ff      	movs	r3, #255	@ 0xff
 800fd9e:	9500      	str	r5, [sp, #0]
 800fda0:	4642      	mov	r2, r8
 800fda2:	4638      	mov	r0, r7
 800fda4:	3401      	adds	r4, #1
 800fda6:	f7ff fe1f 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800fdaa:	2c08      	cmp	r4, #8
 800fdac:	d1ea      	bne.n	800fd84 <WS28xxMulti::Setup(unsigned long)+0x22c>
 800fdae:	4a2f      	ldr	r2, [pc, #188]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fdb0:	4930      	ldr	r1, [pc, #192]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fdb2:	483d      	ldr	r0, [pc, #244]	@ (800fea8 <WS28xxMulti::Setup(unsigned long)+0x350>)
 800fdb4:	f240 234e 	movw	r3, #590	@ 0x24e
 800fdb8:	f007 ff70 	bl	8017c9c <printf>
 800fdbc:	b014      	add	sp, #80	@ 0x50
 800fdbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fdc2:	2600      	movs	r6, #0
 800fdc4:	4634      	mov	r4, r6
 800fdc6:	2300      	movs	r3, #0
 800fdc8:	461a      	mov	r2, r3
 800fdca:	4631      	mov	r1, r6
 800fdcc:	4638      	mov	r0, r7
 800fdce:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800fdd2:	9400      	str	r4, [sp, #0]
 800fdd4:	f7ff fe08 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800fdd8:	4631      	mov	r1, r6
 800fdda:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800fdde:	2300      	movs	r3, #0
 800fde0:	9400      	str	r4, [sp, #0]
 800fde2:	4642      	mov	r2, r8
 800fde4:	4638      	mov	r0, r7
 800fde6:	3601      	adds	r6, #1
 800fde8:	f7ff fdfe 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800fdec:	2e08      	cmp	r6, #8
 800fdee:	d1ea      	bne.n	800fdc6 <WS28xxMulti::Setup(unsigned long)+0x26e>
 800fdf0:	e7dd      	b.n	800fdae <WS28xxMulti::Setup(unsigned long)+0x256>
 800fdf2:	4b2e      	ldr	r3, [pc, #184]	@ (800feac <WS28xxMulti::Setup(unsigned long)+0x354>)
 800fdf4:	4a1d      	ldr	r2, [pc, #116]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fdf6:	481f      	ldr	r0, [pc, #124]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fdf8:	f44f 71e1 	mov.w	r1, #450	@ 0x1c2
 800fdfc:	f008 f82e 	bl	8017e5c <__assert_func>
 800fe00:	4631      	mov	r1, r6
 800fe02:	4820      	ldr	r0, [pc, #128]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe04:	b2aa      	uxth	r2, r5
 800fe06:	f006 fc7d 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fe0a:	4631      	mov	r1, r6
 800fe0c:	481d      	ldr	r0, [pc, #116]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe0e:	2260      	movs	r2, #96	@ 0x60
 800fe10:	f006 fc52 	bl	80166b8 <timer_channel_output_mode_config>
 800fe14:	4632      	mov	r2, r6
 800fe16:	4631      	mov	r1, r6
 800fe18:	481a      	ldr	r0, [pc, #104]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe1a:	f006 fc81 	bl	8016720 <timer_channel_output_shadow_config>
 800fe1e:	4819      	ldr	r0, [pc, #100]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe20:	2210      	movs	r2, #16
 800fe22:	4649      	mov	r1, r9
 800fe24:	f006 fc48 	bl	80166b8 <timer_channel_output_mode_config>
 800fe28:	4816      	ldr	r0, [pc, #88]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe2a:	2210      	movs	r2, #16
 800fe2c:	2103      	movs	r1, #3
 800fe2e:	f006 fc43 	bl	80166b8 <timer_channel_output_mode_config>
 800fe32:	4652      	mov	r2, sl
 800fe34:	4813      	ldr	r0, [pc, #76]	@ (800fe84 <WS28xxMulti::Setup(unsigned long)+0x32c>)
 800fe36:	4649      	mov	r1, r9
 800fe38:	f006 fc64 	bl	8016704 <timer_channel_output_pulse_value_config>
 800fe3c:	fa24 f209 	lsr.w	r2, r4, r9
 800fe40:	1e56      	subs	r6, r2, #1
 800fe42:	4546      	cmp	r6, r8
 800fe44:	f67f af00 	bls.w	800fc48 <WS28xxMulti::Setup(unsigned long)+0xf0>
 800fe48:	4b19      	ldr	r3, [pc, #100]	@ (800feb0 <WS28xxMulti::Setup(unsigned long)+0x358>)
 800fe4a:	4a08      	ldr	r2, [pc, #32]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fe4c:	4809      	ldr	r0, [pc, #36]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fe4e:	f44f 71e6 	mov.w	r1, #460	@ 0x1cc
 800fe52:	f008 f803 	bl	8017e5c <__assert_func>
 800fe56:	e6f7      	b.n	800fc48 <WS28xxMulti::Setup(unsigned long)+0xf0>
 800fe58:	f240 11e5 	movw	r1, #485	@ 0x1e5
 800fe5c:	4b15      	ldr	r3, [pc, #84]	@ (800feb4 <WS28xxMulti::Setup(unsigned long)+0x35c>)
 800fe5e:	4a03      	ldr	r2, [pc, #12]	@ (800fe6c <WS28xxMulti::Setup(unsigned long)+0x314>)
 800fe60:	4804      	ldr	r0, [pc, #16]	@ (800fe74 <WS28xxMulti::Setup(unsigned long)+0x31c>)
 800fe62:	f007 fffb 	bl	8017e5c <__assert_func>
 800fe66:	6839      	ldr	r1, [r7, #0]
 800fe68:	e724      	b.n	800fcb4 <WS28xxMulti::Setup(unsigned long)+0x15c>
 800fe6a:	bf00      	nop
 800fe6c:	08019c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, ip, pc}
 800fe70:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}
 800fe74:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 800fe78:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 800fe7c:	40020000 	andmi	r0, r2, r0
 800fe80:	08019dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, ip, pc}
 800fe84:	40000400 	andmi	r0, r0, r0, lsl #8
 800fe88:	40000800 	andmi	r0, r0, r0, lsl #16
 800fe8c:	e000e100 	and	lr, r0, r0, lsl #2
 800fe90:	40026000 	andmi	r6, r2, r0
 800fe94:	0801bc74 	stmdaeq	r1, {r2, r4, r5, r6, sl, fp, ip, sp, pc}
 800fe98:	40020828 	andmi	r0, r2, r8, lsr #16
 800fe9c:	40020818 	andmi	r0, r2, r8, lsl r8
 800fea0:	20020000 	andcs	r0, r2, r0
 800fea4:	20000078 	andcs	r0, r0, r8, ror r0
 800fea8:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 800feac:	08019df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, ip, pc}
 800feb0:	08019e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip, pc}
 800feb4:	08019e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, ip, pc}
 800feb8:	4804      	ldr	r0, [pc, #16]	@ (800fecc <WS28xxMulti::Setup(unsigned long)+0x374>)
 800feba:	4b05      	ldr	r3, [pc, #20]	@ (800fed0 <WS28xxMulti::Setup(unsigned long)+0x378>)
 800febc:	4a05      	ldr	r2, [pc, #20]	@ (800fed4 <WS28xxMulti::Setup(unsigned long)+0x37c>)
 800febe:	f240 110d 	movw	r1, #269	@ 0x10d
 800fec2:	f007 ffcb 	bl	8017e5c <__assert_func>
 800fec6:	6830      	ldr	r0, [r6, #0]
 800fec8:	e750      	b.n	800fd6c <WS28xxMulti::Setup(unsigned long)+0x214>
 800feca:	bf00      	nop
 800fecc:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 800fed0:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 800fed4:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}

0800fed8 <WS28xxMulti::WS28xxMulti()>:
 800fed8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800feda:	4605      	mov	r5, r0
 800fedc:	2300      	movs	r3, #0
 800fede:	4cb0      	ldr	r4, [pc, #704]	@ (80101a0 <WS28xxMulti::WS28xxMulti()+0x2c8>)
 800fee0:	602b      	str	r3, [r5, #0]
 800fee2:	4ab0      	ldr	r2, [pc, #704]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 800fee4:	49b0      	ldr	r1, [pc, #704]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 800fee6:	48b1      	ldr	r0, [pc, #708]	@ (80101ac <WS28xxMulti::WS28xxMulti()+0x2d4>)
 800fee8:	b083      	sub	sp, #12
 800feea:	237c      	movs	r3, #124	@ 0x7c
 800feec:	f007 fed6 	bl	8017c9c <printf>
 800fef0:	6820      	ldr	r0, [r4, #0]
 800fef2:	2800      	cmp	r0, #0
 800fef4:	f040 818c 	bne.w	8010210 <WS28xxMulti::WS28xxMulti()+0x338>
 800fef8:	4fad      	ldr	r7, [pc, #692]	@ (80101b0 <WS28xxMulti::WS28xxMulti()+0x2d8>)
 800fefa:	4aab      	ldr	r2, [pc, #684]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 800fefc:	49a9      	ldr	r1, [pc, #676]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 800fefe:	48ad      	ldr	r0, [pc, #692]	@ (80101b4 <WS28xxMulti::WS28xxMulti()+0x2dc>)
 800ff00:	2608      	movs	r6, #8
 800ff02:	9600      	str	r6, [sp, #0]
 800ff04:	2381      	movs	r3, #129	@ 0x81
 800ff06:	6025      	str	r5, [r4, #0]
 800ff08:	f007 fec8 	bl	8017c9c <printf>
 800ff0c:	683c      	ldr	r4, [r7, #0]
 800ff0e:	2c00      	cmp	r4, #0
 800ff10:	f000 8175 	beq.w	80101fe <WS28xxMulti::WS28xxMulti()+0x326>
 800ff14:	4aa8      	ldr	r2, [pc, #672]	@ (80101b8 <WS28xxMulti::WS28xxMulti()+0x2e0>)
 800ff16:	49a9      	ldr	r1, [pc, #676]	@ (80101bc <WS28xxMulti::WS28xxMulti()+0x2e4>)
 800ff18:	48a4      	ldr	r0, [pc, #656]	@ (80101ac <WS28xxMulti::WS28xxMulti()+0x2d4>)
 800ff1a:	2397      	movs	r3, #151	@ 0x97
 800ff1c:	f007 febe 	bl	8017c9c <printf>
 800ff20:	68e2      	ldr	r2, [r4, #12]
 800ff22:	6823      	ldr	r3, [r4, #0]
 800ff24:	2a07      	cmp	r2, #7
 800ff26:	f000 80a2 	beq.w	801006e <WS28xxMulti::WS28xxMulti()+0x196>
 800ff2a:	f5b3 7f2a 	cmp.w	r3, #680	@ 0x2a8
 800ff2e:	f1a2 000b 	sub.w	r0, r2, #11
 800ff32:	bf28      	it	cs
 800ff34:	f44f 732a 	movcs.w	r3, #680	@ 0x2a8
 800ff38:	2103      	movs	r1, #3
 800ff3a:	2801      	cmp	r0, #1
 800ff3c:	6926      	ldr	r6, [r4, #16]
 800ff3e:	6023      	str	r3, [r4, #0]
 800ff40:	60a1      	str	r1, [r4, #8]
 800ff42:	f200 8112 	bhi.w	801016a <WS28xxMulti::WS28xxMulti()+0x292>
 800ff46:	7de2      	ldrb	r2, [r4, #23]
 800ff48:	2a1f      	cmp	r2, #31
 800ff4a:	bf8c      	ite	hi
 800ff4c:	22ff      	movhi	r2, #255	@ 0xff
 800ff4e:	f062 021f 	ornls	r2, r2, #31
 800ff52:	75e2      	strb	r2, [r4, #23]
 800ff54:	2200      	movs	r2, #0
 800ff56:	2e06      	cmp	r6, #6
 800ff58:	7522      	strb	r2, [r4, #20]
 800ff5a:	f000 80ba 	beq.w	80100d2 <WS28xxMulti::WS28xxMulti()+0x1fa>
 800ff5e:	6866      	ldr	r6, [r4, #4]
 800ff60:	2e00      	cmp	r6, #0
 800ff62:	d174      	bne.n	801004e <WS28xxMulti::WS28xxMulti()+0x176>
 800ff64:	4e96      	ldr	r6, [pc, #600]	@ (80101c0 <WS28xxMulti::WS28xxMulti()+0x2e8>)
 800ff66:	6066      	str	r6, [r4, #4]
 800ff68:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800ff6c:	005a      	lsls	r2, r3, #1
 800ff6e:	4f95      	ldr	r7, [pc, #596]	@ (80101c4 <WS28xxMulti::WS28xxMulti()+0x2ec>)
 800ff70:	fbb7 f0f2 	udiv	r0, r7, r2
 800ff74:	4991      	ldr	r1, [pc, #580]	@ (80101bc <WS28xxMulti::WS28xxMulti()+0x2e4>)
 800ff76:	61a0      	str	r0, [r4, #24]
 800ff78:	4a8f      	ldr	r2, [pc, #572]	@ (80101b8 <WS28xxMulti::WS28xxMulti()+0x2e0>)
 800ff7a:	4893      	ldr	r0, [pc, #588]	@ (80101c8 <WS28xxMulti::WS28xxMulti()+0x2f0>)
 800ff7c:	23f2      	movs	r3, #242	@ 0xf2
 800ff7e:	f007 fe8d 	bl	8017c9c <printf>
 800ff82:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800ff86:	f1a7 010b 	sub.w	r1, r7, #11
 800ff8a:	2902      	cmp	r1, #2
 800ff8c:	f240 8090 	bls.w	80100b0 <WS28xxMulti::WS28xxMulti()+0x1d8>
 800ff90:	6823      	ldr	r3, [r4, #0]
 800ff92:	fb06 f303 	mul.w	r3, r6, r3
 800ff96:	4e8d      	ldr	r6, [pc, #564]	@ (80101cc <WS28xxMulti::WS28xxMulti()+0x2f4>)
 800ff98:	4982      	ldr	r1, [pc, #520]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 800ff9a:	488d      	ldr	r0, [pc, #564]	@ (80101d0 <WS28xxMulti::WS28xxMulti()+0x2f8>)
 800ff9c:	00da      	lsls	r2, r3, #3
 800ff9e:	f5a6 4700 	sub.w	r7, r6, #32768	@ 0x8000
 800ffa2:	602a      	str	r2, [r5, #0]
 800ffa4:	239c      	movs	r3, #156	@ 0x9c
 800ffa6:	4a80      	ldr	r2, [pc, #512]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 800ffa8:	9601      	str	r6, [sp, #4]
 800ffaa:	9700      	str	r7, [sp, #0]
 800ffac:	f007 fe76 	bl	8017c9c <printf>
 800ffb0:	6828      	ldr	r0, [r5, #0]
 800ffb2:	497c      	ldr	r1, [pc, #496]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 800ffb4:	9000      	str	r0, [sp, #0]
 800ffb6:	f500 6380 	add.w	r3, r0, #1024	@ 0x400
 800ffba:	0a9e      	lsrs	r6, r3, #10
 800ffbc:	4a7a      	ldr	r2, [pc, #488]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 800ffbe:	4885      	ldr	r0, [pc, #532]	@ (80101d4 <WS28xxMulti::WS28xxMulti()+0x2fc>)
 800ffc0:	9601      	str	r6, [sp, #4]
 800ffc2:	239d      	movs	r3, #157	@ 0x9d
 800ffc4:	f007 fe6a 	bl	8017c9c <printf>
 800ffc8:	6829      	ldr	r1, [r5, #0]
 800ffca:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800ffce:	f200 810f 	bhi.w	80101f0 <WS28xxMulti::WS28xxMulti()+0x318>
 800ffd2:	f640 4002 	movw	r0, #3074	@ 0xc02
 800ffd6:	f006 f8dd 	bl	8016194 <rcu_periph_clock_enable>
 800ffda:	487f      	ldr	r0, [pc, #508]	@ (80101d8 <WS28xxMulti::WS28xxMulti()+0x300>)
 800ffdc:	4f7f      	ldr	r7, [pc, #508]	@ (80101dc <WS28xxMulti::WS28xxMulti()+0x304>)
 800ffde:	f44f 537f 	mov.w	r3, #16320	@ 0x3fc0
 800ffe2:	2202      	movs	r2, #2
 800ffe4:	2101      	movs	r1, #1
 800ffe6:	f006 f853 	bl	8016090 <gpio_mode_set>
 800ffea:	f44f 537f 	mov.w	r3, #16320	@ 0x3fc0
 800ffee:	2100      	movs	r1, #0
 800fff0:	4879      	ldr	r0, [pc, #484]	@ (80101d8 <WS28xxMulti::WS28xxMulti()+0x300>)
 800fff2:	2202      	movs	r2, #2
 800fff4:	f006 f86e 	bl	80160d4 <gpio_output_options_set>
 800fff8:	f44f 527f 	mov.w	r2, #16320	@ 0x3fc0
 800fffc:	f8c7 2828 	str.w	r2, [r7, #2088]	@ 0x828
 8010000:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8010004:	f006 f8c6 	bl	8016194 <rcu_periph_clock_enable>
 8010008:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 801000c:	2202      	movs	r2, #2
 801000e:	2101      	movs	r1, #1
 8010010:	4638      	mov	r0, r7
 8010012:	f006 f83d 	bl	8016090 <gpio_mode_set>
 8010016:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 801001a:	4638      	mov	r0, r7
 801001c:	2202      	movs	r2, #2
 801001e:	2100      	movs	r1, #0
 8010020:	f006 f858 	bl	80160d4 <gpio_output_options_set>
 8010024:	7d23      	ldrb	r3, [r4, #20]
 8010026:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801002a:	61b8      	str	r0, [r7, #24]
 801002c:	b1d3      	cbz	r3, 8010064 <WS28xxMulti::WS28xxMulti()+0x18c>
 801002e:	7da2      	ldrb	r2, [r4, #22]
 8010030:	7d61      	ldrb	r1, [r4, #21]
 8010032:	4628      	mov	r0, r5
 8010034:	f7ff f882 	bl	800f13c <WS28xxMulti::Setup(unsigned char, unsigned char)>
 8010038:	f006 fce0 	bl	80169fc <dma::memcpy32_init()>
 801003c:	4a59      	ldr	r2, [pc, #356]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 801003e:	495a      	ldr	r1, [pc, #360]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 8010040:	4861      	ldr	r0, [pc, #388]	@ (80101c8 <WS28xxMulti::WS28xxMulti()+0x2f0>)
 8010042:	23c2      	movs	r3, #194	@ 0xc2
 8010044:	f007 fe2a 	bl	8017c9c <printf>
 8010048:	4628      	mov	r0, r5
 801004a:	b003      	add	sp, #12
 801004c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801004e:	4f64      	ldr	r7, [pc, #400]	@ (80101e0 <WS28xxMulti::WS28xxMulti()+0x308>)
 8010050:	42be      	cmp	r6, r7
 8010052:	d840      	bhi.n	80100d6 <WS28xxMulti::WS28xxMulti()+0x1fe>
 8010054:	4863      	ldr	r0, [pc, #396]	@ (80101e4 <WS28xxMulti::WS28xxMulti()+0x30c>)
 8010056:	fbb0 f1f6 	udiv	r1, r0, r6
 801005a:	fb03 f101 	mul.w	r1, r3, r1
 801005e:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8010062:	e784      	b.n	800ff6e <WS28xxMulti::WS28xxMulti()+0x96>
 8010064:	6861      	ldr	r1, [r4, #4]
 8010066:	4628      	mov	r0, r5
 8010068:	f7ff fd76 	bl	800fb58 <WS28xxMulti::Setup(unsigned long)>
 801006c:	e7e4      	b.n	8010038 <WS28xxMulti::WS28xxMulti()+0x160>
 801006e:	6920      	ldr	r0, [r4, #16]
 8010070:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010074:	bf28      	it	cs
 8010076:	f44f 7300 	movcs.w	r3, #512	@ 0x200
 801007a:	2104      	movs	r1, #4
 801007c:	2601      	movs	r6, #1
 801007e:	2806      	cmp	r0, #6
 8010080:	6023      	str	r3, [r4, #0]
 8010082:	60a1      	str	r1, [r4, #8]
 8010084:	7526      	strb	r6, [r4, #20]
 8010086:	f000 8136 	beq.w	80102f6 <WS28xxMulti::WS28xxMulti()+0x41e>
 801008a:	7d67      	ldrb	r7, [r4, #21]
 801008c:	f894 e016 	ldrb.w	lr, [r4, #22]
 8010090:	45be      	cmp	lr, r7
 8010092:	d823      	bhi.n	80100dc <WS28xxMulti::WS28xxMulti()+0x204>
 8010094:	2600      	movs	r6, #0
 8010096:	2a03      	cmp	r2, #3
 8010098:	f8a4 6015 	strh.w	r6, [r4, #21]
 801009c:	d07c      	beq.n	8010198 <WS28xxMulti::WS28xxMulti()+0x2c0>
 801009e:	3a08      	subs	r2, #8
 80100a0:	2a02      	cmp	r2, #2
 80100a2:	f200 811e 	bhi.w	80102e2 <WS28xxMulti::WS28xxMulti()+0x40a>
 80100a6:	20fc      	movs	r0, #252	@ 0xfc
 80100a8:	75a0      	strb	r0, [r4, #22]
 80100aa:	27c0      	movs	r7, #192	@ 0xc0
 80100ac:	7567      	strb	r7, [r4, #21]
 80100ae:	e017      	b.n	80100e0 <WS28xxMulti::WS28xxMulti()+0x208>
 80100b0:	f240 37fe 	movw	r7, #1022	@ 0x3fe
 80100b4:	4a3c      	ldr	r2, [pc, #240]	@ (80101a8 <WS28xxMulti::WS28xxMulti()+0x2d0>)
 80100b6:	493b      	ldr	r1, [pc, #236]	@ (80101a4 <WS28xxMulti::WS28xxMulti()+0x2cc>)
 80100b8:	484b      	ldr	r0, [pc, #300]	@ (80101e8 <WS28xxMulti::WS28xxMulti()+0x310>)
 80100ba:	9700      	str	r7, [sp, #0]
 80100bc:	238b      	movs	r3, #139	@ 0x8b
 80100be:	f007 fded 	bl	8017c9c <printf>
 80100c2:	6820      	ldr	r0, [r4, #0]
 80100c4:	42b8      	cmp	r0, r7
 80100c6:	d816      	bhi.n	80100f6 <WS28xxMulti::WS28xxMulti()+0x21e>
 80100c8:	fb06 f300 	mul.w	r3, r6, r0
 80100cc:	4403      	add	r3, r0
 80100ce:	3308      	adds	r3, #8
 80100d0:	e761      	b.n	800ff96 <WS28xxMulti::WS28xxMulti()+0xbe>
 80100d2:	6122      	str	r2, [r4, #16]
 80100d4:	e743      	b.n	800ff5e <WS28xxMulti::WS28xxMulti()+0x86>
 80100d6:	6067      	str	r7, [r4, #4]
 80100d8:	2200      	movs	r2, #0
 80100da:	e748      	b.n	800ff6e <WS28xxMulti::WS28xxMulti()+0x96>
 80100dc:	2f00      	cmp	r7, #0
 80100de:	d0e4      	beq.n	80100aa <WS28xxMulti::WS28xxMulti()+0x1d2>
 80100e0:	fb03 f101 	mul.w	r1, r3, r1
 80100e4:	4e41      	ldr	r6, [pc, #260]	@ (80101ec <WS28xxMulti::WS28xxMulti()+0x314>)
 80100e6:	4b37      	ldr	r3, [pc, #220]	@ (80101c4 <WS28xxMulti::WS28xxMulti()+0x2ec>)
 80100e8:	6066      	str	r6, [r4, #4]
 80100ea:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80100ee:	004a      	lsls	r2, r1, #1
 80100f0:	fbb3 f0f2 	udiv	r0, r3, r2
 80100f4:	e73e      	b.n	800ff74 <WS28xxMulti::WS28xxMulti()+0x9c>
 80100f6:	4a30      	ldr	r2, [pc, #192]	@ (80101b8 <WS28xxMulti::WS28xxMulti()+0x2e0>)
 80100f8:	4930      	ldr	r1, [pc, #192]	@ (80101bc <WS28xxMulti::WS28xxMulti()+0x2e4>)
 80100fa:	482c      	ldr	r0, [pc, #176]	@ (80101ac <WS28xxMulti::WS28xxMulti()+0x2d4>)
 80100fc:	6027      	str	r7, [r4, #0]
 80100fe:	2397      	movs	r3, #151	@ 0x97
 8010100:	f007 fdcc 	bl	8017c9c <printf>
 8010104:	68e2      	ldr	r2, [r4, #12]
 8010106:	6823      	ldr	r3, [r4, #0]
 8010108:	2a07      	cmp	r2, #7
 801010a:	f000 809f 	beq.w	801024c <WS28xxMulti::WS28xxMulti()+0x374>
 801010e:	f5b3 7f2a 	cmp.w	r3, #680	@ 0x2a8
 8010112:	f1a2 010b 	sub.w	r1, r2, #11
 8010116:	bf28      	it	cs
 8010118:	f44f 732a 	movcs.w	r3, #680	@ 0x2a8
 801011c:	2003      	movs	r0, #3
 801011e:	2901      	cmp	r1, #1
 8010120:	6927      	ldr	r7, [r4, #16]
 8010122:	6023      	str	r3, [r4, #0]
 8010124:	60a0      	str	r0, [r4, #8]
 8010126:	f200 80bc 	bhi.w	80102a2 <WS28xxMulti::WS28xxMulti()+0x3ca>
 801012a:	7de1      	ldrb	r1, [r4, #23]
 801012c:	291f      	cmp	r1, #31
 801012e:	bf8c      	ite	hi
 8010130:	21ff      	movhi	r1, #255	@ 0xff
 8010132:	f061 011f 	ornls	r1, r1, #31
 8010136:	75e1      	strb	r1, [r4, #23]
 8010138:	2200      	movs	r2, #0
 801013a:	2f06      	cmp	r7, #6
 801013c:	7522      	strb	r2, [r4, #20]
 801013e:	f000 80ae 	beq.w	801029e <WS28xxMulti::WS28xxMulti()+0x3c6>
 8010142:	6860      	ldr	r0, [r4, #4]
 8010144:	2800      	cmp	r0, #0
 8010146:	d174      	bne.n	8010232 <WS28xxMulti::WS28xxMulti()+0x35a>
 8010148:	4f1d      	ldr	r7, [pc, #116]	@ (80101c0 <WS28xxMulti::WS28xxMulti()+0x2e8>)
 801014a:	6067      	str	r7, [r4, #4]
 801014c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010150:	0058      	lsls	r0, r3, #1
 8010152:	491c      	ldr	r1, [pc, #112]	@ (80101c4 <WS28xxMulti::WS28xxMulti()+0x2ec>)
 8010154:	fbb1 f1f0 	udiv	r1, r1, r0
 8010158:	61a1      	str	r1, [r4, #24]
 801015a:	4a17      	ldr	r2, [pc, #92]	@ (80101b8 <WS28xxMulti::WS28xxMulti()+0x2e0>)
 801015c:	4917      	ldr	r1, [pc, #92]	@ (80101bc <WS28xxMulti::WS28xxMulti()+0x2e4>)
 801015e:	481a      	ldr	r0, [pc, #104]	@ (80101c8 <WS28xxMulti::WS28xxMulti()+0x2f0>)
 8010160:	23f2      	movs	r3, #242	@ 0xf2
 8010162:	f007 fd9b 	bl	8017c9c <printf>
 8010166:	6820      	ldr	r0, [r4, #0]
 8010168:	e7ae      	b.n	80100c8 <WS28xxMulti::WS28xxMulti()+0x1f0>
 801016a:	2a00      	cmp	r2, #0
 801016c:	f43f aef3 	beq.w	800ff56 <WS28xxMulti::WS28xxMulti()+0x7e>
 8010170:	2a0d      	cmp	r2, #13
 8010172:	d054      	beq.n	801021e <WS28xxMulti::WS28xxMulti()+0x346>
 8010174:	2701      	movs	r7, #1
 8010176:	2a0e      	cmp	r2, #14
 8010178:	7527      	strb	r7, [r4, #20]
 801017a:	f040 80a2 	bne.w	80102c2 <WS28xxMulti::WS28xxMulti()+0x3ea>
 801017e:	2e06      	cmp	r6, #6
 8010180:	7d67      	ldrb	r7, [r4, #21]
 8010182:	f894 c016 	ldrb.w	ip, [r4, #22]
 8010186:	60e1      	str	r1, [r4, #12]
 8010188:	bf04      	itt	eq
 801018a:	2202      	moveq	r2, #2
 801018c:	6122      	streq	r2, [r4, #16]
 801018e:	45bc      	cmp	ip, r7
 8010190:	d8a4      	bhi.n	80100dc <WS28xxMulti::WS28xxMulti()+0x204>
 8010192:	2000      	movs	r0, #0
 8010194:	f8a4 0015 	strh.w	r0, [r4, #21]
 8010198:	20f8      	movs	r0, #248	@ 0xf8
 801019a:	75a0      	strb	r0, [r4, #22]
 801019c:	e785      	b.n	80100aa <WS28xxMulti::WS28xxMulti()+0x1d2>
 801019e:	bf00      	nop
 80101a0:	2000c9a4 	andcs	ip, r0, r4, lsr #19
 80101a4:	08019e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, ip, pc}
 80101a8:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 80101ac:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 80101b0:	20000078 	andcs	r0, r0, r8, ror r0
 80101b4:	08019e70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, ip, pc}
 80101b8:	08019af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, ip, pc}
 80101bc:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 80101c0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80101c4:	000f4240 	andeq	r4, pc, r0, asr #4
 80101c8:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 80101cc:	20028000 	andcs	r8, r2, r0
 80101d0:	08019eb8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, fp, ip, pc}
 80101d4:	08019ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, ip, pc}
 80101d8:	40020800 	andmi	r0, r2, r0, lsl #16
 80101dc:	40020000 	andmi	r0, r2, r0
 80101e0:	017d7840 	cmneq	sp, r0, asr #16
 80101e4:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 80101e8:	08019e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, pc}
 80101ec:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 80101f0:	4b59      	ldr	r3, [pc, #356]	@ (8010358 <WS28xxMulti::WS28xxMulti()+0x480>)
 80101f2:	4a5a      	ldr	r2, [pc, #360]	@ (801035c <WS28xxMulti::WS28xxMulti()+0x484>)
 80101f4:	485a      	ldr	r0, [pc, #360]	@ (8010360 <WS28xxMulti::WS28xxMulti()+0x488>)
 80101f6:	219e      	movs	r1, #158	@ 0x9e
 80101f8:	f007 fe30 	bl	8017e5c <__assert_func>
 80101fc:	e6e9      	b.n	800ffd2 <WS28xxMulti::WS28xxMulti()+0xfa>
 80101fe:	4b59      	ldr	r3, [pc, #356]	@ (8010364 <WS28xxMulti::WS28xxMulti()+0x48c>)
 8010200:	4a59      	ldr	r2, [pc, #356]	@ (8010368 <WS28xxMulti::WS28xxMulti()+0x490>)
 8010202:	485a      	ldr	r0, [pc, #360]	@ (801036c <WS28xxMulti::WS28xxMulti()+0x494>)
 8010204:	f240 110d 	movw	r1, #269	@ 0x10d
 8010208:	f007 fe28 	bl	8017e5c <__assert_func>
 801020c:	683c      	ldr	r4, [r7, #0]
 801020e:	e681      	b.n	800ff14 <WS28xxMulti::WS28xxMulti()+0x3c>
 8010210:	4b57      	ldr	r3, [pc, #348]	@ (8010370 <WS28xxMulti::WS28xxMulti()+0x498>)
 8010212:	4a52      	ldr	r2, [pc, #328]	@ (801035c <WS28xxMulti::WS28xxMulti()+0x484>)
 8010214:	4852      	ldr	r0, [pc, #328]	@ (8010360 <WS28xxMulti::WS28xxMulti()+0x488>)
 8010216:	217e      	movs	r1, #126	@ 0x7e
 8010218:	f007 fe20 	bl	8017e5c <__assert_func>
 801021c:	e66c      	b.n	800fef8 <WS28xxMulti::WS28xxMulti()+0x20>
 801021e:	2100      	movs	r1, #0
 8010220:	2e06      	cmp	r6, #6
 8010222:	7521      	strb	r1, [r4, #20]
 8010224:	d010      	beq.n	8010248 <WS28xxMulti::WS28xxMulti()+0x370>
 8010226:	6866      	ldr	r6, [r4, #4]
 8010228:	2e00      	cmp	r6, #0
 801022a:	f43f ae9b 	beq.w	800ff64 <WS28xxMulti::WS28xxMulti()+0x8c>
 801022e:	4f51      	ldr	r7, [pc, #324]	@ (8010374 <WS28xxMulti::WS28xxMulti()+0x49c>)
 8010230:	e70e      	b.n	8010050 <WS28xxMulti::WS28xxMulti()+0x178>
 8010232:	4f51      	ldr	r7, [pc, #324]	@ (8010378 <WS28xxMulti::WS28xxMulti()+0x4a0>)
 8010234:	42b8      	cmp	r0, r7
 8010236:	d857      	bhi.n	80102e8 <WS28xxMulti::WS28xxMulti()+0x410>
 8010238:	4950      	ldr	r1, [pc, #320]	@ (801037c <WS28xxMulti::WS28xxMulti()+0x4a4>)
 801023a:	fbb1 f2f0 	udiv	r2, r1, r0
 801023e:	fb03 f202 	mul.w	r2, r3, r2
 8010242:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010246:	e784      	b.n	8010152 <WS28xxMulti::WS28xxMulti()+0x27a>
 8010248:	6121      	str	r1, [r4, #16]
 801024a:	e7ec      	b.n	8010226 <WS28xxMulti::WS28xxMulti()+0x34e>
 801024c:	6921      	ldr	r1, [r4, #16]
 801024e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010252:	bf28      	it	cs
 8010254:	f44f 7300 	movcs.w	r3, #512	@ 0x200
 8010258:	2004      	movs	r0, #4
 801025a:	2701      	movs	r7, #1
 801025c:	2906      	cmp	r1, #6
 801025e:	6023      	str	r3, [r4, #0]
 8010260:	60a0      	str	r0, [r4, #8]
 8010262:	7527      	strb	r7, [r4, #20]
 8010264:	d072      	beq.n	801034c <WS28xxMulti::WS28xxMulti()+0x474>
 8010266:	7d61      	ldrb	r1, [r4, #21]
 8010268:	f894 c016 	ldrb.w	ip, [r4, #22]
 801026c:	458c      	cmp	ip, r1
 801026e:	d83f      	bhi.n	80102f0 <WS28xxMulti::WS28xxMulti()+0x418>
 8010270:	2700      	movs	r7, #0
 8010272:	2a03      	cmp	r2, #3
 8010274:	f8a4 7015 	strh.w	r7, [r4, #21]
 8010278:	d055      	beq.n	8010326 <WS28xxMulti::WS28xxMulti()+0x44e>
 801027a:	3a08      	subs	r2, #8
 801027c:	2a02      	cmp	r2, #2
 801027e:	d863      	bhi.n	8010348 <WS28xxMulti::WS28xxMulti()+0x470>
 8010280:	21fc      	movs	r1, #252	@ 0xfc
 8010282:	75a1      	strb	r1, [r4, #22]
 8010284:	27c0      	movs	r7, #192	@ 0xc0
 8010286:	7567      	strb	r7, [r4, #21]
 8010288:	fb00 f303 	mul.w	r3, r0, r3
 801028c:	4f3c      	ldr	r7, [pc, #240]	@ (8010380 <WS28xxMulti::WS28xxMulti()+0x4a8>)
 801028e:	4a3d      	ldr	r2, [pc, #244]	@ (8010384 <WS28xxMulti::WS28xxMulti()+0x4ac>)
 8010290:	6067      	str	r7, [r4, #4]
 8010292:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8010296:	0043      	lsls	r3, r0, #1
 8010298:	fbb2 f1f3 	udiv	r1, r2, r3
 801029c:	e75c      	b.n	8010158 <WS28xxMulti::WS28xxMulti()+0x280>
 801029e:	6122      	str	r2, [r4, #16]
 80102a0:	e74f      	b.n	8010142 <WS28xxMulti::WS28xxMulti()+0x26a>
 80102a2:	2a00      	cmp	r2, #0
 80102a4:	f43f af49 	beq.w	801013a <WS28xxMulti::WS28xxMulti()+0x262>
 80102a8:	2a0d      	cmp	r2, #13
 80102aa:	d129      	bne.n	8010300 <WS28xxMulti::WS28xxMulti()+0x428>
 80102ac:	2200      	movs	r2, #0
 80102ae:	2f06      	cmp	r7, #6
 80102b0:	7522      	strb	r2, [r4, #20]
 80102b2:	d100      	bne.n	80102b6 <WS28xxMulti::WS28xxMulti()+0x3de>
 80102b4:	6122      	str	r2, [r4, #16]
 80102b6:	6860      	ldr	r0, [r4, #4]
 80102b8:	2800      	cmp	r0, #0
 80102ba:	f43f af45 	beq.w	8010148 <WS28xxMulti::WS28xxMulti()+0x270>
 80102be:	4f2d      	ldr	r7, [pc, #180]	@ (8010374 <WS28xxMulti::WS28xxMulti()+0x49c>)
 80102c0:	e7b8      	b.n	8010234 <WS28xxMulti::WS28xxMulti()+0x35c>
 80102c2:	2e06      	cmp	r6, #6
 80102c4:	f47f aee1 	bne.w	801008a <WS28xxMulti::WS28xxMulti()+0x1b2>
 80102c8:	1e50      	subs	r0, r2, #1
 80102ca:	2809      	cmp	r0, #9
 80102cc:	d913      	bls.n	80102f6 <WS28xxMulti::WS28xxMulti()+0x41e>
 80102ce:	7d67      	ldrb	r7, [r4, #21]
 80102d0:	7da6      	ldrb	r6, [r4, #22]
 80102d2:	2202      	movs	r2, #2
 80102d4:	42be      	cmp	r6, r7
 80102d6:	6122      	str	r2, [r4, #16]
 80102d8:	f63f af00 	bhi.w	80100dc <WS28xxMulti::WS28xxMulti()+0x204>
 80102dc:	2700      	movs	r7, #0
 80102de:	f8a4 7015 	strh.w	r7, [r4, #21]
 80102e2:	20f0      	movs	r0, #240	@ 0xf0
 80102e4:	75a0      	strb	r0, [r4, #22]
 80102e6:	e6e0      	b.n	80100aa <WS28xxMulti::WS28xxMulti()+0x1d2>
 80102e8:	6067      	str	r7, [r4, #4]
 80102ea:	2000      	movs	r0, #0
 80102ec:	e731      	b.n	8010152 <WS28xxMulti::WS28xxMulti()+0x27a>
 80102ee:	2003      	movs	r0, #3
 80102f0:	2900      	cmp	r1, #0
 80102f2:	d1c9      	bne.n	8010288 <WS28xxMulti::WS28xxMulti()+0x3b0>
 80102f4:	e7c6      	b.n	8010284 <WS28xxMulti::WS28xxMulti()+0x3ac>
 80102f6:	4f24      	ldr	r7, [pc, #144]	@ (8010388 <WS28xxMulti::WS28xxMulti()+0x4b0>)
 80102f8:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 80102fc:	6120      	str	r0, [r4, #16]
 80102fe:	e6c4      	b.n	801008a <WS28xxMulti::WS28xxMulti()+0x1b2>
 8010300:	2101      	movs	r1, #1
 8010302:	2a0e      	cmp	r2, #14
 8010304:	7521      	strb	r1, [r4, #20]
 8010306:	d110      	bne.n	801032a <WS28xxMulti::WS28xxMulti()+0x452>
 8010308:	2f06      	cmp	r7, #6
 801030a:	7d61      	ldrb	r1, [r4, #21]
 801030c:	f894 c016 	ldrb.w	ip, [r4, #22]
 8010310:	60e0      	str	r0, [r4, #12]
 8010312:	bf04      	itt	eq
 8010314:	2702      	moveq	r7, #2
 8010316:	6127      	streq	r7, [r4, #16]
 8010318:	458c      	cmp	ip, r1
 801031a:	d8e9      	bhi.n	80102f0 <WS28xxMulti::WS28xxMulti()+0x418>
 801031c:	f04f 0e00 	mov.w	lr, #0
 8010320:	f8a4 e015 	strh.w	lr, [r4, #21]
 8010324:	2003      	movs	r0, #3
 8010326:	21f8      	movs	r1, #248	@ 0xf8
 8010328:	e7ab      	b.n	8010282 <WS28xxMulti::WS28xxMulti()+0x3aa>
 801032a:	2f06      	cmp	r7, #6
 801032c:	d19b      	bne.n	8010266 <WS28xxMulti::WS28xxMulti()+0x38e>
 801032e:	1e51      	subs	r1, r2, #1
 8010330:	2909      	cmp	r1, #9
 8010332:	d90b      	bls.n	801034c <WS28xxMulti::WS28xxMulti()+0x474>
 8010334:	7d61      	ldrb	r1, [r4, #21]
 8010336:	7da0      	ldrb	r0, [r4, #22]
 8010338:	2202      	movs	r2, #2
 801033a:	4288      	cmp	r0, r1
 801033c:	6122      	str	r2, [r4, #16]
 801033e:	d8d6      	bhi.n	80102ee <WS28xxMulti::WS28xxMulti()+0x416>
 8010340:	2700      	movs	r7, #0
 8010342:	f8a4 7015 	strh.w	r7, [r4, #21]
 8010346:	2003      	movs	r0, #3
 8010348:	21f0      	movs	r1, #240	@ 0xf0
 801034a:	e79a      	b.n	8010282 <WS28xxMulti::WS28xxMulti()+0x3aa>
 801034c:	4f0e      	ldr	r7, [pc, #56]	@ (8010388 <WS28xxMulti::WS28xxMulti()+0x4b0>)
 801034e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8010352:	6121      	str	r1, [r4, #16]
 8010354:	e787      	b.n	8010266 <WS28xxMulti::WS28xxMulti()+0x38e>
 8010356:	bf00      	nop
 8010358:	08019f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip, pc}
 801035c:	08019e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, ip, pc}
 8010360:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 8010364:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 8010368:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 801036c:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 8010370:	08019e5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, fp, ip, pc}
 8010374:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8010378:	017d7840 	cmneq	sp, r0, asr #16
 801037c:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 8010380:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 8010384:	000f4240 	andeq	r4, pc, r0, asr #4
 8010388:	0801bc4c 	stmdaeq	r1, {r2, r3, r6, sl, fp, ip, sp, pc}

0801038c <WS28xxMulti::Blackout()>:
 801038c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010390:	4a75      	ldr	r2, [pc, #468]	@ (8010568 <WS28xxMulti::Blackout()+0x1dc>)
 8010392:	4976      	ldr	r1, [pc, #472]	@ (801056c <WS28xxMulti::Blackout()+0x1e0>)
 8010394:	f8df 81fc 	ldr.w	r8, [pc, #508]	@ 8010594 <WS28xxMulti::Blackout()+0x208>
 8010398:	b087      	sub	sp, #28
 801039a:	4607      	mov	r7, r0
 801039c:	f44f 732a 	mov.w	r3, #680	@ 0x2a8
 80103a0:	4873      	ldr	r0, [pc, #460]	@ (8010570 <WS28xxMulti::Blackout()+0x1e4>)
 80103a2:	f007 fc7b 	bl	8017c9c <printf>
 80103a6:	f3bf 8f5f 	dmb	sy
 80103aa:	f898 3000 	ldrb.w	r3, [r8]
 80103ae:	2b00      	cmp	r3, #0
 80103b0:	d1f9      	bne.n	80103a6 <WS28xxMulti::Blackout()+0x1a>
 80103b2:	4c70      	ldr	r4, [pc, #448]	@ (8010574 <WS28xxMulti::Blackout()+0x1e8>)
 80103b4:	6820      	ldr	r0, [r4, #0]
 80103b6:	2800      	cmp	r0, #0
 80103b8:	f000 80c5 	beq.w	8010546 <WS28xxMulti::Blackout()+0x1ba>
 80103bc:	7d06      	ldrb	r6, [r0, #20]
 80103be:	b34e      	cbz	r6, 8010414 <WS28xxMulti::Blackout()+0x88>
 80103c0:	4e6d      	ldr	r6, [pc, #436]	@ (8010578 <WS28xxMulti::Blackout()+0x1ec>)
 80103c2:	496e      	ldr	r1, [pc, #440]	@ (801057c <WS28xxMulti::Blackout()+0x1f0>)
 80103c4:	f506 3480 	add.w	r4, r6, #65536	@ 0x10000
 80103c8:	e9c6 1100 	strd	r1, r1, [r6]
 80103cc:	e9c6 1102 	strd	r1, r1, [r6, #8]
 80103d0:	e9c6 1104 	strd	r1, r1, [r6, #16]
 80103d4:	3640      	adds	r6, #64	@ 0x40
 80103d6:	42b4      	cmp	r4, r6
 80103d8:	e946 110a 	strd	r1, r1, [r6, #-40]	@ 0x28
 80103dc:	e946 1108 	strd	r1, r1, [r6, #-32]
 80103e0:	e946 1106 	strd	r1, r1, [r6, #-24]
 80103e4:	e946 1104 	strd	r1, r1, [r6, #-16]
 80103e8:	e946 1102 	strd	r1, r1, [r6, #-8]
 80103ec:	d1ec      	bne.n	80103c8 <WS28xxMulti::Blackout()+0x3c>
 80103ee:	4638      	mov	r0, r7
 80103f0:	f7fe ffce 	bl	800f390 <WS28xxMulti::Update()>
 80103f4:	f3bf 8f5f 	dmb	sy
 80103f8:	f898 7000 	ldrb.w	r7, [r8]
 80103fc:	2f00      	cmp	r7, #0
 80103fe:	d1f9      	bne.n	80103f4 <WS28xxMulti::Blackout()+0x68>
 8010400:	4a59      	ldr	r2, [pc, #356]	@ (8010568 <WS28xxMulti::Blackout()+0x1dc>)
 8010402:	495a      	ldr	r1, [pc, #360]	@ (801056c <WS28xxMulti::Blackout()+0x1e0>)
 8010404:	485e      	ldr	r0, [pc, #376]	@ (8010580 <WS28xxMulti::Blackout()+0x1f4>)
 8010406:	f44f 7337 	mov.w	r3, #732	@ 0x2dc
 801040a:	b007      	add	sp, #28
 801040c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010410:	f007 bc44 	b.w	8017c9c <printf>
 8010414:	68c2      	ldr	r2, [r0, #12]
 8010416:	f1a2 010b 	sub.w	r1, r2, #11
 801041a:	2902      	cmp	r1, #2
 801041c:	9104      	str	r1, [sp, #16]
 801041e:	f200 8085 	bhi.w	801052c <WS28xxMulti::Blackout()+0x1a0>
 8010422:	f8d0 a000 	ldr.w	sl, [r0]
 8010426:	f10a 0501 	add.w	r5, sl, #1
 801042a:	9505      	str	r5, [sp, #20]
 801042c:	4634      	mov	r4, r6
 801042e:	f04f 0bff 	mov.w	fp, #255	@ 0xff
 8010432:	2300      	movs	r3, #0
 8010434:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010438:	9400      	str	r4, [sp, #0]
 801043a:	461a      	mov	r2, r3
 801043c:	4631      	mov	r1, r6
 801043e:	4638      	mov	r0, r7
 8010440:	f7ff fad2 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010444:	f1ba 0f00 	cmp.w	sl, #0
 8010448:	d05f      	beq.n	801050a <WS28xxMulti::Blackout()+0x17e>
 801044a:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
 801044e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010452:	9400      	str	r4, [sp, #0]
 8010454:	f003 0903 	and.w	r9, r3, #3
 8010458:	2201      	movs	r2, #1
 801045a:	23e0      	movs	r3, #224	@ 0xe0
 801045c:	4631      	mov	r1, r6
 801045e:	4638      	mov	r0, r7
 8010460:	2502      	movs	r5, #2
 8010462:	f7ff fac1 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010466:	4555      	cmp	r5, sl
 8010468:	d84f      	bhi.n	801050a <WS28xxMulti::Blackout()+0x17e>
 801046a:	f1b9 0f00 	cmp.w	r9, #0
 801046e:	d025      	beq.n	80104bc <WS28xxMulti::Blackout()+0x130>
 8010470:	f1b9 0f01 	cmp.w	r9, #1
 8010474:	d016      	beq.n	80104a4 <WS28xxMulti::Blackout()+0x118>
 8010476:	f1b9 0f02 	cmp.w	r9, #2
 801047a:	d009      	beq.n	8010490 <WS28xxMulti::Blackout()+0x104>
 801047c:	462a      	mov	r2, r5
 801047e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010482:	9400      	str	r4, [sp, #0]
 8010484:	23e0      	movs	r3, #224	@ 0xe0
 8010486:	4631      	mov	r1, r6
 8010488:	4638      	mov	r0, r7
 801048a:	f7ff faad 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 801048e:	2503      	movs	r5, #3
 8010490:	462a      	mov	r2, r5
 8010492:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010496:	9400      	str	r4, [sp, #0]
 8010498:	23e0      	movs	r3, #224	@ 0xe0
 801049a:	4631      	mov	r1, r6
 801049c:	4638      	mov	r0, r7
 801049e:	f7ff faa3 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80104a2:	3501      	adds	r5, #1
 80104a4:	462a      	mov	r2, r5
 80104a6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80104aa:	9400      	str	r4, [sp, #0]
 80104ac:	23e0      	movs	r3, #224	@ 0xe0
 80104ae:	4631      	mov	r1, r6
 80104b0:	4638      	mov	r0, r7
 80104b2:	3501      	adds	r5, #1
 80104b4:	f7ff fa98 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80104b8:	4555      	cmp	r5, sl
 80104ba:	d826      	bhi.n	801050a <WS28xxMulti::Blackout()+0x17e>
 80104bc:	462a      	mov	r2, r5
 80104be:	23e0      	movs	r3, #224	@ 0xe0
 80104c0:	4631      	mov	r1, r6
 80104c2:	4638      	mov	r0, r7
 80104c4:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80104c8:	9400      	str	r4, [sp, #0]
 80104ca:	f7ff fa8d 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80104ce:	1c6a      	adds	r2, r5, #1
 80104d0:	23e0      	movs	r3, #224	@ 0xe0
 80104d2:	4631      	mov	r1, r6
 80104d4:	4638      	mov	r0, r7
 80104d6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80104da:	9400      	str	r4, [sp, #0]
 80104dc:	f7ff fa84 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80104e0:	1caa      	adds	r2, r5, #2
 80104e2:	23e0      	movs	r3, #224	@ 0xe0
 80104e4:	4631      	mov	r1, r6
 80104e6:	4638      	mov	r0, r7
 80104e8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80104ec:	9400      	str	r4, [sp, #0]
 80104ee:	f7ff fa7b 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80104f2:	1cea      	adds	r2, r5, #3
 80104f4:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80104f8:	23e0      	movs	r3, #224	@ 0xe0
 80104fa:	9400      	str	r4, [sp, #0]
 80104fc:	4631      	mov	r1, r6
 80104fe:	4638      	mov	r0, r7
 8010500:	3504      	adds	r5, #4
 8010502:	f7ff fa71 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010506:	4555      	cmp	r5, sl
 8010508:	d9d8      	bls.n	80104bc <WS28xxMulti::Blackout()+0x130>
 801050a:	9804      	ldr	r0, [sp, #16]
 801050c:	2802      	cmp	r0, #2
 801050e:	d015      	beq.n	801053c <WS28xxMulti::Blackout()+0x1b0>
 8010510:	e9cd bb01 	strd	fp, fp, [sp, #4]
 8010514:	f8cd b000 	str.w	fp, [sp]
 8010518:	23ff      	movs	r3, #255	@ 0xff
 801051a:	4631      	mov	r1, r6
 801051c:	9a05      	ldr	r2, [sp, #20]
 801051e:	4638      	mov	r0, r7
 8010520:	3601      	adds	r6, #1
 8010522:	f7ff fa61 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010526:	2e08      	cmp	r6, #8
 8010528:	d183      	bne.n	8010432 <WS28xxMulti::Blackout()+0xa6>
 801052a:	e760      	b.n	80103ee <WS28xxMulti::Blackout()+0x62>
 801052c:	b9a2      	cbnz	r2, 8010558 <WS28xxMulti::Blackout()+0x1cc>
 801052e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8010532:	2100      	movs	r1, #0
 8010534:	4810      	ldr	r0, [pc, #64]	@ (8010578 <WS28xxMulti::Blackout()+0x1ec>)
 8010536:	f007 f8cd 	bl	80176d4 <memset>
 801053a:	e758      	b.n	80103ee <WS28xxMulti::Blackout()+0x62>
 801053c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010540:	9400      	str	r4, [sp, #0]
 8010542:	2300      	movs	r3, #0
 8010544:	e7e9      	b.n	801051a <WS28xxMulti::Blackout()+0x18e>
 8010546:	480f      	ldr	r0, [pc, #60]	@ (8010584 <WS28xxMulti::Blackout()+0x1f8>)
 8010548:	4b0f      	ldr	r3, [pc, #60]	@ (8010588 <WS28xxMulti::Blackout()+0x1fc>)
 801054a:	4a10      	ldr	r2, [pc, #64]	@ (801058c <WS28xxMulti::Blackout()+0x200>)
 801054c:	f240 110d 	movw	r1, #269	@ 0x10d
 8010550:	f007 fc84 	bl	8017e5c <__assert_func>
 8010554:	6820      	ldr	r0, [r4, #0]
 8010556:	e731      	b.n	80103bc <WS28xxMulti::Blackout()+0x30>
 8010558:	4b0d      	ldr	r3, [pc, #52]	@ (8010590 <WS28xxMulti::Blackout()+0x204>)
 801055a:	4a03      	ldr	r2, [pc, #12]	@ (8010568 <WS28xxMulti::Blackout()+0x1dc>)
 801055c:	4803      	ldr	r0, [pc, #12]	@ (801056c <WS28xxMulti::Blackout()+0x1e0>)
 801055e:	f240 21ca 	movw	r1, #714	@ 0x2ca
 8010562:	f007 fc7b 	bl	8017e5c <__assert_func>
 8010566:	e7e2      	b.n	801052e <WS28xxMulti::Blackout()+0x1a2>
 8010568:	08019f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
 801056c:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 8010570:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 8010574:	20000078 	andcs	r0, r0, r8, ror r0
 8010578:	20020000 	andcs	r0, r2, r0
 801057c:	3fc03fc0 	svccc	0x00c03fc0
 8010580:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 8010584:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 8010588:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 801058c:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 8010590:	08019f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, ip, pc}
 8010594:	2000c9a8 	andcs	ip, r0, r8, lsr #19

08010598 <WS28xxMulti::FullOn()>:
 8010598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801059c:	4a75      	ldr	r2, [pc, #468]	@ (8010774 <WS28xxMulti::FullOn()+0x1dc>)
 801059e:	4976      	ldr	r1, [pc, #472]	@ (8010778 <WS28xxMulti::FullOn()+0x1e0>)
 80105a0:	f8df 81f8 	ldr.w	r8, [pc, #504]	@ 801079c <WS28xxMulti::FullOn()+0x204>
 80105a4:	b087      	sub	sp, #28
 80105a6:	4607      	mov	r7, r0
 80105a8:	f240 23e1 	movw	r3, #737	@ 0x2e1
 80105ac:	4873      	ldr	r0, [pc, #460]	@ (801077c <WS28xxMulti::FullOn()+0x1e4>)
 80105ae:	f007 fb75 	bl	8017c9c <printf>
 80105b2:	f3bf 8f5f 	dmb	sy
 80105b6:	f898 3000 	ldrb.w	r3, [r8]
 80105ba:	2b00      	cmp	r3, #0
 80105bc:	d1f9      	bne.n	80105b2 <WS28xxMulti::FullOn()+0x1a>
 80105be:	4c70      	ldr	r4, [pc, #448]	@ (8010780 <WS28xxMulti::FullOn()+0x1e8>)
 80105c0:	6820      	ldr	r0, [r4, #0]
 80105c2:	2800      	cmp	r0, #0
 80105c4:	f000 80c5 	beq.w	8010752 <WS28xxMulti::FullOn()+0x1ba>
 80105c8:	7d06      	ldrb	r6, [r0, #20]
 80105ca:	b1c6      	cbz	r6, 80105fe <WS28xxMulti::FullOn()+0x66>
 80105cc:	486d      	ldr	r0, [pc, #436]	@ (8010784 <WS28xxMulti::FullOn()+0x1ec>)
 80105ce:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80105d2:	2100      	movs	r1, #0
 80105d4:	f007 f87e 	bl	80176d4 <memset>
 80105d8:	4638      	mov	r0, r7
 80105da:	f7fe fed9 	bl	800f390 <WS28xxMulti::Update()>
 80105de:	f3bf 8f5f 	dmb	sy
 80105e2:	f898 7000 	ldrb.w	r7, [r8]
 80105e6:	2f00      	cmp	r7, #0
 80105e8:	d1f9      	bne.n	80105de <WS28xxMulti::FullOn()+0x46>
 80105ea:	4a62      	ldr	r2, [pc, #392]	@ (8010774 <WS28xxMulti::FullOn()+0x1dc>)
 80105ec:	4962      	ldr	r1, [pc, #392]	@ (8010778 <WS28xxMulti::FullOn()+0x1e0>)
 80105ee:	4866      	ldr	r0, [pc, #408]	@ (8010788 <WS28xxMulti::FullOn()+0x1f0>)
 80105f0:	f240 3315 	movw	r3, #789	@ 0x315
 80105f4:	b007      	add	sp, #28
 80105f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105fa:	f007 bb4f 	b.w	8017c9c <printf>
 80105fe:	68c2      	ldr	r2, [r0, #12]
 8010600:	f1a2 010b 	sub.w	r1, r2, #11
 8010604:	2902      	cmp	r1, #2
 8010606:	9104      	str	r1, [sp, #16]
 8010608:	f200 8084 	bhi.w	8010714 <WS28xxMulti::FullOn()+0x17c>
 801060c:	f8d0 a000 	ldr.w	sl, [r0]
 8010610:	f10a 0001 	add.w	r0, sl, #1
 8010614:	9005      	str	r0, [sp, #20]
 8010616:	46b3      	mov	fp, r6
 8010618:	24ff      	movs	r4, #255	@ 0xff
 801061a:	2300      	movs	r3, #0
 801061c:	e9cd bb01 	strd	fp, fp, [sp, #4]
 8010620:	f8cd b000 	str.w	fp, [sp]
 8010624:	461a      	mov	r2, r3
 8010626:	4631      	mov	r1, r6
 8010628:	4638      	mov	r0, r7
 801062a:	f7ff f9dd 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 801062e:	f1ba 0f00 	cmp.w	sl, #0
 8010632:	d05f      	beq.n	80106f4 <WS28xxMulti::FullOn()+0x15c>
 8010634:	f10a 32ff 	add.w	r2, sl, #4294967295	@ 0xffffffff
 8010638:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801063c:	9400      	str	r4, [sp, #0]
 801063e:	f002 0903 	and.w	r9, r2, #3
 8010642:	23e0      	movs	r3, #224	@ 0xe0
 8010644:	2201      	movs	r2, #1
 8010646:	4631      	mov	r1, r6
 8010648:	4638      	mov	r0, r7
 801064a:	2502      	movs	r5, #2
 801064c:	f7ff f9cc 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010650:	4555      	cmp	r5, sl
 8010652:	d84f      	bhi.n	80106f4 <WS28xxMulti::FullOn()+0x15c>
 8010654:	f1b9 0f00 	cmp.w	r9, #0
 8010658:	d025      	beq.n	80106a6 <WS28xxMulti::FullOn()+0x10e>
 801065a:	f1b9 0f01 	cmp.w	r9, #1
 801065e:	d016      	beq.n	801068e <WS28xxMulti::FullOn()+0xf6>
 8010660:	f1b9 0f02 	cmp.w	r9, #2
 8010664:	d009      	beq.n	801067a <WS28xxMulti::FullOn()+0xe2>
 8010666:	462a      	mov	r2, r5
 8010668:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801066c:	9400      	str	r4, [sp, #0]
 801066e:	23e0      	movs	r3, #224	@ 0xe0
 8010670:	4631      	mov	r1, r6
 8010672:	4638      	mov	r0, r7
 8010674:	f7ff f9b8 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8010678:	2503      	movs	r5, #3
 801067a:	462a      	mov	r2, r5
 801067c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010680:	9400      	str	r4, [sp, #0]
 8010682:	23e0      	movs	r3, #224	@ 0xe0
 8010684:	4631      	mov	r1, r6
 8010686:	4638      	mov	r0, r7
 8010688:	f7ff f9ae 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 801068c:	3501      	adds	r5, #1
 801068e:	462a      	mov	r2, r5
 8010690:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8010694:	9400      	str	r4, [sp, #0]
 8010696:	23e0      	movs	r3, #224	@ 0xe0
 8010698:	4631      	mov	r1, r6
 801069a:	4638      	mov	r0, r7
 801069c:	3501      	adds	r5, #1
 801069e:	f7ff f9a3 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80106a2:	4555      	cmp	r5, sl
 80106a4:	d826      	bhi.n	80106f4 <WS28xxMulti::FullOn()+0x15c>
 80106a6:	462a      	mov	r2, r5
 80106a8:	23e0      	movs	r3, #224	@ 0xe0
 80106aa:	4631      	mov	r1, r6
 80106ac:	4638      	mov	r0, r7
 80106ae:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80106b2:	9400      	str	r4, [sp, #0]
 80106b4:	f7ff f998 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80106b8:	1c6a      	adds	r2, r5, #1
 80106ba:	23e0      	movs	r3, #224	@ 0xe0
 80106bc:	4631      	mov	r1, r6
 80106be:	4638      	mov	r0, r7
 80106c0:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80106c4:	9400      	str	r4, [sp, #0]
 80106c6:	f7ff f98f 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80106ca:	1caa      	adds	r2, r5, #2
 80106cc:	23e0      	movs	r3, #224	@ 0xe0
 80106ce:	4631      	mov	r1, r6
 80106d0:	4638      	mov	r0, r7
 80106d2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80106d6:	9400      	str	r4, [sp, #0]
 80106d8:	f7ff f986 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80106dc:	1cea      	adds	r2, r5, #3
 80106de:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80106e2:	23e0      	movs	r3, #224	@ 0xe0
 80106e4:	9400      	str	r4, [sp, #0]
 80106e6:	4631      	mov	r1, r6
 80106e8:	4638      	mov	r0, r7
 80106ea:	3504      	adds	r5, #4
 80106ec:	f7ff f97c 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 80106f0:	4555      	cmp	r5, sl
 80106f2:	d9d8      	bls.n	80106a6 <WS28xxMulti::FullOn()+0x10e>
 80106f4:	9904      	ldr	r1, [sp, #16]
 80106f6:	2902      	cmp	r1, #2
 80106f8:	d025      	beq.n	8010746 <WS28xxMulti::FullOn()+0x1ae>
 80106fa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80106fe:	9400      	str	r4, [sp, #0]
 8010700:	23ff      	movs	r3, #255	@ 0xff
 8010702:	4631      	mov	r1, r6
 8010704:	9a05      	ldr	r2, [sp, #20]
 8010706:	4638      	mov	r0, r7
 8010708:	3601      	adds	r6, #1
 801070a:	f7ff f96d 	bl	800f9e8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 801070e:	2e08      	cmp	r6, #8
 8010710:	d183      	bne.n	801061a <WS28xxMulti::FullOn()+0x82>
 8010712:	e761      	b.n	80105d8 <WS28xxMulti::FullOn()+0x40>
 8010714:	bb32      	cbnz	r2, 8010764 <WS28xxMulti::FullOn()+0x1cc>
 8010716:	4d1b      	ldr	r5, [pc, #108]	@ (8010784 <WS28xxMulti::FullOn()+0x1ec>)
 8010718:	23ff      	movs	r3, #255	@ 0xff
 801071a:	f505 3480 	add.w	r4, r5, #65536	@ 0x10000
 801071e:	e9c5 3300 	strd	r3, r3, [r5]
 8010722:	e9c5 3302 	strd	r3, r3, [r5, #8]
 8010726:	e9c5 3304 	strd	r3, r3, [r5, #16]
 801072a:	3540      	adds	r5, #64	@ 0x40
 801072c:	42ac      	cmp	r4, r5
 801072e:	e945 330a 	strd	r3, r3, [r5, #-40]	@ 0x28
 8010732:	e945 3308 	strd	r3, r3, [r5, #-32]
 8010736:	e945 3306 	strd	r3, r3, [r5, #-24]
 801073a:	e945 3304 	strd	r3, r3, [r5, #-16]
 801073e:	e945 3302 	strd	r3, r3, [r5, #-8]
 8010742:	d1ec      	bne.n	801071e <WS28xxMulti::FullOn()+0x186>
 8010744:	e748      	b.n	80105d8 <WS28xxMulti::FullOn()+0x40>
 8010746:	e9cd bb01 	strd	fp, fp, [sp, #4]
 801074a:	f8cd b000 	str.w	fp, [sp]
 801074e:	2300      	movs	r3, #0
 8010750:	e7d7      	b.n	8010702 <WS28xxMulti::FullOn()+0x16a>
 8010752:	480e      	ldr	r0, [pc, #56]	@ (801078c <WS28xxMulti::FullOn()+0x1f4>)
 8010754:	4b0e      	ldr	r3, [pc, #56]	@ (8010790 <WS28xxMulti::FullOn()+0x1f8>)
 8010756:	4a0f      	ldr	r2, [pc, #60]	@ (8010794 <WS28xxMulti::FullOn()+0x1fc>)
 8010758:	f240 110d 	movw	r1, #269	@ 0x10d
 801075c:	f007 fb7e 	bl	8017e5c <__assert_func>
 8010760:	6820      	ldr	r0, [r4, #0]
 8010762:	e731      	b.n	80105c8 <WS28xxMulti::FullOn()+0x30>
 8010764:	4b0c      	ldr	r3, [pc, #48]	@ (8010798 <WS28xxMulti::FullOn()+0x200>)
 8010766:	4a03      	ldr	r2, [pc, #12]	@ (8010774 <WS28xxMulti::FullOn()+0x1dc>)
 8010768:	4803      	ldr	r0, [pc, #12]	@ (8010778 <WS28xxMulti::FullOn()+0x1e0>)
 801076a:	f240 3103 	movw	r1, #771	@ 0x303
 801076e:	f007 fb75 	bl	8017e5c <__assert_func>
 8010772:	e7d0      	b.n	8010716 <WS28xxMulti::FullOn()+0x17e>
 8010774:	08019f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, ip, pc}
 8010778:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 801077c:	08019ae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, pc}
 8010780:	20000078 	andcs	r0, r0, r8, ror r0
 8010784:	20020000 	andcs	r0, r2, r0
 8010788:	08019b30 	stmdaeq	r1, {r4, r5, r8, r9, fp, ip, pc}
 801078c:	08019ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, pc}
 8010790:	080198f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, pc}
 8010794:	08019904 	stmdaeq	r1, {r2, r8, fp, ip, pc}
 8010798:	08019f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, ip, pc}
 801079c:	2000c9a8 	andcs	ip, r0, r8, lsr #19

080107a0 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>:
 80107a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80107a4:	290f      	cmp	r1, #15
 80107a6:	f89d 6020 	ldrb.w	r6, [sp, #32]
 80107aa:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80107ae:	f89d 8028 	ldrb.w	r8, [sp, #40]	@ 0x28
 80107b2:	460c      	mov	r4, r1
 80107b4:	4682      	mov	sl, r0
 80107b6:	4691      	mov	r9, r2
 80107b8:	461d      	mov	r5, r3
 80107ba:	f200 8086 	bhi.w	80108ca <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x12a>
 80107be:	f8da 3000 	ldr.w	r3, [sl]
 80107c2:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 80107c6:	f080 808d 	bcs.w	80108e4 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x144>
 80107ca:	4a4a      	ldr	r2, [pc, #296]	@ (80108f4 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x154>)
 80107cc:	3406      	adds	r4, #6
 80107ce:	eb02 1189 	add.w	r1, r2, r9, lsl #6
 80107d2:	b2e0      	uxtb	r0, r4
 80107d4:	f101 7488 	add.w	r4, r1, #17825792	@ 0x1100000
 80107d8:	3430      	adds	r4, #48	@ 0x30
 80107da:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 80107de:	f10c 0080 	add.w	r0, ip, #128	@ 0x80
 80107e2:	ea4f 0a80 	mov.w	sl, r0, lsl #2
 80107e6:	ebaa 098c 	sub.w	r9, sl, ip, lsl #2
 80107ea:	4663      	mov	r3, ip
 80107ec:	ea5f 6049 	movs.w	r0, r9, lsl #25
 80107f0:	ea4f 0283 	mov.w	r2, r3, lsl #2
 80107f4:	f04f 0400 	mov.w	r4, #0
 80107f8:	f04f 0380 	mov.w	r3, #128	@ 0x80
 80107fc:	f04f 0e01 	mov.w	lr, #1
 8010800:	d53a      	bpl.n	8010878 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xd8>
 8010802:	f5a2 6cc0 	sub.w	ip, r2, #1536	@ 0x600
 8010806:	0631      	lsls	r1, r6, #24
 8010808:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 801080c:	bf4c      	ite	mi
 801080e:	f8cc 4000 	strmi.w	r4, [ip]
 8010812:	f8cc e000 	strpl.w	lr, [ip]
 8010816:	f5a2 7300 	sub.w	r3, r2, #512	@ 0x200
 801081a:	0628      	lsls	r0, r5, #24
 801081c:	bf4c      	ite	mi
 801081e:	600c      	strmi	r4, [r1, #0]
 8010820:	f8c1 e000 	strpl.w	lr, [r1]
 8010824:	0639      	lsls	r1, r7, #24
 8010826:	bf4c      	ite	mi
 8010828:	601c      	strmi	r4, [r3, #0]
 801082a:	f8c3 e000 	strpl.w	lr, [r3]
 801082e:	f018 0f80 	tst.w	r8, #128	@ 0x80
 8010832:	bf14      	ite	ne
 8010834:	6014      	strne	r4, [r2, #0]
 8010836:	f8c2 e000 	streq.w	lr, [r2]
 801083a:	2340      	movs	r3, #64	@ 0x40
 801083c:	3240      	adds	r2, #64	@ 0x40
 801083e:	e019      	b.n	8010874 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xd4>
 8010840:	f8c2 e000 	str.w	lr, [r2]
 8010844:	f5a0 6380 	sub.w	r3, r0, #1024	@ 0x400
 8010848:	4229      	tst	r1, r5
 801084a:	f5a0 7900 	sub.w	r9, r0, #512	@ 0x200
 801084e:	bf14      	ite	ne
 8010850:	601c      	strne	r4, [r3, #0]
 8010852:	f8c3 e000 	streq.w	lr, [r3]
 8010856:	4239      	tst	r1, r7
 8010858:	bf14      	ite	ne
 801085a:	f8c9 4000 	strne.w	r4, [r9]
 801085e:	f8c9 e000 	streq.w	lr, [r9]
 8010862:	ea11 0f08 	tst.w	r1, r8
 8010866:	bf14      	ite	ne
 8010868:	6004      	strne	r4, [r0, #0]
 801086a:	f8c0 e000 	streq.w	lr, [r0]
 801086e:	f100 0240 	add.w	r2, r0, #64	@ 0x40
 8010872:	084b      	lsrs	r3, r1, #1
 8010874:	4552      	cmp	r2, sl
 8010876:	d026      	beq.n	80108c6 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x126>
 8010878:	f5a2 60c0 	sub.w	r0, r2, #1536	@ 0x600
 801087c:	4233      	tst	r3, r6
 801087e:	f5a2 6980 	sub.w	r9, r2, #1024	@ 0x400
 8010882:	bf0c      	ite	eq
 8010884:	f8c0 e000 	streq.w	lr, [r0]
 8010888:	6004      	strne	r4, [r0, #0]
 801088a:	f5a2 7c00 	sub.w	ip, r2, #512	@ 0x200
 801088e:	422b      	tst	r3, r5
 8010890:	bf0c      	ite	eq
 8010892:	f8c9 e000 	streq.w	lr, [r9]
 8010896:	f8c9 4000 	strne.w	r4, [r9]
 801089a:	423b      	tst	r3, r7
 801089c:	bf0c      	ite	eq
 801089e:	f8cc e000 	streq.w	lr, [ip]
 80108a2:	f8cc 4000 	strne.w	r4, [ip]
 80108a6:	ea13 0f08 	tst.w	r3, r8
 80108aa:	bf0c      	ite	eq
 80108ac:	f8c2 e000 	streq.w	lr, [r2]
 80108b0:	6014      	strne	r4, [r2, #0]
 80108b2:	0859      	lsrs	r1, r3, #1
 80108b4:	ea16 0353 	ands.w	r3, r6, r3, lsr #1
 80108b8:	f102 0040 	add.w	r0, r2, #64	@ 0x40
 80108bc:	f5a2 62b8 	sub.w	r2, r2, #1472	@ 0x5c0
 80108c0:	d0be      	beq.n	8010840 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa0>
 80108c2:	6014      	str	r4, [r2, #0]
 80108c4:	e7be      	b.n	8010844 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa4>
 80108c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80108ca:	4b0b      	ldr	r3, [pc, #44]	@ (80108f8 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x158>)
 80108cc:	4a0b      	ldr	r2, [pc, #44]	@ (80108fc <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x15c>)
 80108ce:	480c      	ldr	r0, [pc, #48]	@ (8010900 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x160>)
 80108d0:	f240 3187 	movw	r1, #903	@ 0x387
 80108d4:	f007 fac2 	bl	8017e5c <__assert_func>
 80108d8:	f8da 3000 	ldr.w	r3, [sl]
 80108dc:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 80108e0:	f4ff af73 	bcc.w	80107ca <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x2a>
 80108e4:	4b07      	ldr	r3, [pc, #28]	@ (8010904 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x164>)
 80108e6:	4a05      	ldr	r2, [pc, #20]	@ (80108fc <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x15c>)
 80108e8:	4805      	ldr	r0, [pc, #20]	@ (8010900 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x160>)
 80108ea:	f44f 7162 	mov.w	r1, #904	@ 0x388
 80108ee:	f007 fab5 	bl	8017e5c <__assert_func>
 80108f2:	e76a      	b.n	80107ca <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x2a>
 80108f4:	20020000 	andcs	r0, r2, r0
 80108f8:	08019d70 	stmdaeq	r1, {r4, r5, r6, r8, sl, fp, ip, pc}
 80108fc:	08019d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, pc}
 8010900:	08019c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, pc}
 8010904:	08019d90 	stmdaeq	r1, {r4, r7, r8, sl, fp, ip, pc}

08010908 <memcpy.isra.0>:
 8010908:	440a      	add	r2, r1
 801090a:	4291      	cmp	r1, r2
 801090c:	d100      	bne.n	8010910 <memcpy.isra.0+0x8>
 801090e:	4770      	bx	lr
 8010910:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010914:	f800 3b01 	strb.w	r3, [r0], #1
 8010918:	e7f7      	b.n	801090a <memcpy.isra.0+0x2>

0801091a <strlen>:
 801091a:	4603      	mov	r3, r0
 801091c:	461a      	mov	r2, r3
 801091e:	3301      	adds	r3, #1
 8010920:	7811      	ldrb	r1, [r2, #0]
 8010922:	2900      	cmp	r1, #0
 8010924:	d1fa      	bne.n	801091c <strlen+0x2>
 8010926:	1a10      	subs	r0, r2, r0
 8010928:	4770      	bx	lr
	...

0801092c <mdns::Domain::AddDotLocal()>:
 801092c:	b510      	push	{r4, lr}
 801092e:	4604      	mov	r4, r0
 8010930:	f8b0 0100 	ldrh.w	r0, [r0, #256]	@ 0x100
 8010934:	4905      	ldr	r1, [pc, #20]	@ (801094c <mdns::Domain::AddDotLocal()+0x20>)
 8010936:	2207      	movs	r2, #7
 8010938:	4420      	add	r0, r4
 801093a:	f7ff ffe5 	bl	8010908 <memcpy.isra.0>
 801093e:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8010942:	3307      	adds	r3, #7
 8010944:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8010948:	bd10      	pop	{r4, pc}
 801094a:	bf00      	nop
 801094c:	0801be72 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, fp, ip, sp, pc}

08010950 <create_host_domain(mdns::Domain&)>:
 8010950:	2300      	movs	r3, #0
 8010952:	b570      	push	{r4, r5, r6, lr}
 8010954:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 8010958:	4b0c      	ldr	r3, [pc, #48]	@ (801098c <create_host_domain(mdns::Domain&)+0x3c>)
 801095a:	681e      	ldr	r6, [r3, #0]
 801095c:	3616      	adds	r6, #22
 801095e:	4604      	mov	r4, r0
 8010960:	4630      	mov	r0, r6
 8010962:	f7ff ffda 	bl	801091a <strlen>
 8010966:	2301      	movs	r3, #1
 8010968:	7020      	strb	r0, [r4, #0]
 801096a:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 801096e:	4602      	mov	r2, r0
 8010970:	4605      	mov	r5, r0
 8010972:	4631      	mov	r1, r6
 8010974:	18e0      	adds	r0, r4, r3
 8010976:	f7ff ffc7 	bl	8010908 <memcpy.isra.0>
 801097a:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 801097e:	441d      	add	r5, r3
 8010980:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 8010984:	4620      	mov	r0, r4
 8010986:	f7ff ffd1 	bl	801092c <mdns::Domain::AddDotLocal()>
 801098a:	bd70      	pop	{r4, r5, r6, pc}
 801098c:	2000cbf0 	strdcs	ip, [r0], -r0

08010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
 8010990:	2300      	movs	r3, #0
 8010992:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010996:	4604      	mov	r4, r0
 8010998:	460e      	mov	r6, r1
 801099a:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 801099e:	b1aa      	cbz	r2, 80109cc <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x3c>
 80109a0:	680f      	ldr	r7, [r1, #0]
 80109a2:	f100 0801 	add.w	r8, r0, #1
 80109a6:	b3b7      	cbz	r7, 8010a16 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x86>
 80109a8:	4638      	mov	r0, r7
 80109aa:	f7ff ffb6 	bl	801091a <strlen>
 80109ae:	2301      	movs	r3, #1
 80109b0:	4605      	mov	r5, r0
 80109b2:	7020      	strb	r0, [r4, #0]
 80109b4:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 80109b8:	4602      	mov	r2, r0
 80109ba:	4639      	mov	r1, r7
 80109bc:	4640      	mov	r0, r8
 80109be:	f7ff ffa3 	bl	8010908 <memcpy.isra.0>
 80109c2:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 80109c6:	441d      	add	r5, r3
 80109c8:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 80109cc:	4b15      	ldr	r3, [pc, #84]	@ (8010a24 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x94>)
 80109ce:	68f6      	ldr	r6, [r6, #12]
 80109d0:	f8b4 0100 	ldrh.w	r0, [r4, #256]	@ 0x100
 80109d4:	0131      	lsls	r1, r6, #4
 80109d6:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 80109da:	5859      	ldr	r1, [r3, r1]
 80109dc:	88b5      	ldrh	r5, [r6, #4]
 80109de:	4420      	add	r0, r4
 80109e0:	462a      	mov	r2, r5
 80109e2:	f7ff ff91 	bl	8010908 <memcpy.isra.0>
 80109e6:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 80109ea:	18e8      	adds	r0, r5, r3
 80109ec:	68b3      	ldr	r3, [r6, #8]
 80109ee:	b280      	uxth	r0, r0
 80109f0:	f8a4 0100 	strh.w	r0, [r4, #256]	@ 0x100
 80109f4:	2205      	movs	r2, #5
 80109f6:	4420      	add	r0, r4
 80109f8:	b98b      	cbnz	r3, 8010a1e <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x8e>
 80109fa:	490b      	ldr	r1, [pc, #44]	@ (8010a28 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x98>)
 80109fc:	f7ff ff84 	bl	8010908 <memcpy.isra.0>
 8010a00:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8010a04:	3305      	adds	r3, #5
 8010a06:	b29b      	uxth	r3, r3
 8010a08:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8010a0c:	4620      	mov	r0, r4
 8010a0e:	f7ff ff8d 	bl	801092c <mdns::Domain::AddDotLocal()>
 8010a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a16:	4b05      	ldr	r3, [pc, #20]	@ (8010a2c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x9c>)
 8010a18:	681f      	ldr	r7, [r3, #0]
 8010a1a:	3716      	adds	r7, #22
 8010a1c:	e7c4      	b.n	80109a8 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x18>
 8010a1e:	4904      	ldr	r1, [pc, #16]	@ (8010a30 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xa0>)
 8010a20:	e7ec      	b.n	80109fc <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x6c>
 8010a22:	bf00      	nop
 8010a24:	0801bd98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip, sp, pc}
 8010a28:	0801be6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sl, fp, ip, sp, pc}
 8010a2c:	2000cbf0 	strdcs	ip, [r0], -r0
 8010a30:	0801be68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, ip, sp, pc}

08010a34 <mdns::Domain::Print(bool)>:
 8010a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a38:	4605      	mov	r5, r0
 8010a3a:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 8010a78 <mdns::Domain::Print(bool)+0x44>
 8010a3e:	2020      	movs	r0, #32
 8010a40:	460e      	mov	r6, r1
 8010a42:	f007 f97b 	bl	8017d3c <putchar>
 8010a46:	462a      	mov	r2, r5
 8010a48:	7817      	ldrb	r7, [r2, #0]
 8010a4a:	b92f      	cbnz	r7, 8010a58 <mdns::Domain::Print(bool)+0x24>
 8010a4c:	b18e      	cbz	r6, 8010a72 <mdns::Domain::Print(bool)+0x3e>
 8010a4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010a52:	200a      	movs	r0, #10
 8010a54:	f007 b972 	b.w	8017d3c <putchar>
 8010a58:	f8b5 3100 	ldrh.w	r3, [r5, #256]	@ 0x100
 8010a5c:	442b      	add	r3, r5
 8010a5e:	429a      	cmp	r2, r3
 8010a60:	d2f4      	bcs.n	8010a4c <mdns::Domain::Print(bool)+0x18>
 8010a62:	1c54      	adds	r4, r2, #1
 8010a64:	4622      	mov	r2, r4
 8010a66:	4639      	mov	r1, r7
 8010a68:	4640      	mov	r0, r8
 8010a6a:	f007 f917 	bl	8017c9c <printf>
 8010a6e:	19e2      	adds	r2, r4, r7
 8010a70:	e7ea      	b.n	8010a48 <mdns::Domain::Print(bool)+0x14>
 8010a72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a76:	bf00      	nop
 8010a78:	08018f75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, fp, pc}

08010a7c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
 8010a7c:	f8b0 2100 	ldrh.w	r2, [r0, #256]	@ 0x100
 8010a80:	f8b1 3100 	ldrh.w	r3, [r1, #256]	@ 0x100
 8010a84:	4293      	cmp	r3, r2
 8010a86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a8a:	d127      	bne.n	8010adc <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8010a8c:	18c2      	adds	r2, r0, r3
 8010a8e:	7803      	ldrb	r3, [r0, #0]
 8010a90:	b11b      	cbz	r3, 8010a9a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 8010a92:	780c      	ldrb	r4, [r1, #0]
 8010a94:	b10c      	cbz	r4, 8010a9a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 8010a96:	4290      	cmp	r0, r2
 8010a98:	d301      	bcc.n	8010a9e <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x22>
 8010a9a:	2001      	movs	r0, #1
 8010a9c:	e01f      	b.n	8010ade <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x62>
 8010a9e:	42a3      	cmp	r3, r4
 8010aa0:	d11c      	bne.n	8010adc <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8010aa2:	4684      	mov	ip, r0
 8010aa4:	460f      	mov	r7, r1
 8010aa6:	461e      	mov	r6, r3
 8010aa8:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 8010aac:	f1a4 0541 	sub.w	r5, r4, #65	@ 0x41
 8010ab0:	2d19      	cmp	r5, #25
 8010ab2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8010ab6:	f1a5 0841 	sub.w	r8, r5, #65	@ 0x41
 8010aba:	46a6      	mov	lr, r4
 8010abc:	bf98      	it	ls
 8010abe:	f104 0e20 	addls.w	lr, r4, #32
 8010ac2:	f1b8 0f19 	cmp.w	r8, #25
 8010ac6:	bf98      	it	ls
 8010ac8:	3520      	addls	r5, #32
 8010aca:	4575      	cmp	r5, lr
 8010acc:	d106      	bne.n	8010adc <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8010ace:	b10c      	cbz	r4, 8010ad4 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x58>
 8010ad0:	3e01      	subs	r6, #1
 8010ad2:	d1e9      	bne.n	8010aa8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x2c>
 8010ad4:	3301      	adds	r3, #1
 8010ad6:	4418      	add	r0, r3
 8010ad8:	4419      	add	r1, r3
 8010ada:	e7d8      	b.n	8010a8e <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x12>
 8010adc:	2000      	movs	r0, #0
 8010ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010ae2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
 8010ae2:	f892 c000 	ldrb.w	ip, [r2]
 8010ae6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010aea:	ea6f 050c 	mvn.w	r5, ip
 8010aee:	4606      	mov	r6, r0
 8010af0:	440d      	add	r5, r1
 8010af2:	42b5      	cmp	r5, r6
 8010af4:	4628      	mov	r0, r5
 8010af6:	d201      	bcs.n	8010afc <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x1a>
 8010af8:	2000      	movs	r0, #0
 8010afa:	e040      	b.n	8010b7e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x9c>
 8010afc:	7803      	ldrb	r3, [r0, #0]
 8010afe:	4563      	cmp	r3, ip
 8010b00:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 8010b04:	d1f5      	bne.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b06:	78ac      	ldrb	r4, [r5, #2]
 8010b08:	7853      	ldrb	r3, [r2, #1]
 8010b0a:	429c      	cmp	r4, r3
 8010b0c:	d1f1      	bne.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b0e:	4604      	mov	r4, r0
 8010b10:	4617      	mov	r7, r2
 8010b12:	e018      	b.n	8010b46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 8010b14:	4573      	cmp	r3, lr
 8010b16:	db27      	blt.n	8010b68 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x86>
 8010b18:	e7eb      	b.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b1a:	2b3f      	cmp	r3, #63	@ 0x3f
 8010b1c:	d913      	bls.n	8010b46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 8010b1e:	2bbf      	cmp	r3, #191	@ 0xbf
 8010b20:	d9e7      	bls.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b22:	f104 0e01 	add.w	lr, r4, #1
 8010b26:	4571      	cmp	r1, lr
 8010b28:	d9e3      	bls.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b2a:	f894 e001 	ldrb.w	lr, [r4, #1]
 8010b2e:	021b      	lsls	r3, r3, #8
 8010b30:	f403 537c 	and.w	r3, r3, #16128	@ 0x3f00
 8010b34:	4473      	add	r3, lr
 8010b36:	eb06 0e03 	add.w	lr, r6, r3
 8010b3a:	4574      	cmp	r4, lr
 8010b3c:	d3d9      	bcc.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b3e:	5cf3      	ldrb	r3, [r6, r3]
 8010b40:	2b3f      	cmp	r3, #63	@ 0x3f
 8010b42:	d8d6      	bhi.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b44:	4674      	mov	r4, lr
 8010b46:	783b      	ldrb	r3, [r7, #0]
 8010b48:	eb04 0e03 	add.w	lr, r4, r3
 8010b4c:	4571      	cmp	r1, lr
 8010b4e:	d9d0      	bls.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b50:	f04f 0e00 	mov.w	lr, #0
 8010b54:	f814 900e 	ldrb.w	r9, [r4, lr]
 8010b58:	f817 800e 	ldrb.w	r8, [r7, lr]
 8010b5c:	45c1      	cmp	r9, r8
 8010b5e:	d1d9      	bne.n	8010b14 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x32>
 8010b60:	f10e 0e01 	add.w	lr, lr, #1
 8010b64:	4573      	cmp	r3, lr
 8010b66:	daf5      	bge.n	8010b54 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x72>
 8010b68:	3301      	adds	r3, #1
 8010b6a:	441f      	add	r7, r3
 8010b6c:	441c      	add	r4, r3
 8010b6e:	f897 e000 	ldrb.w	lr, [r7]
 8010b72:	7823      	ldrb	r3, [r4, #0]
 8010b74:	f1be 0f00 	cmp.w	lr, #0
 8010b78:	d1cf      	bne.n	8010b1a <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x38>
 8010b7a:	2b00      	cmp	r3, #0
 8010b7c:	d1b9      	bne.n	8010af2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8010b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
 8010b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010b86:	460a      	mov	r2, r1
 8010b88:	4606      	mov	r6, r0
 8010b8a:	4605      	mov	r5, r0
 8010b8c:	7814      	ldrb	r4, [r2, #0]
 8010b8e:	b91c      	cbnz	r4, 8010b98 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x14>
 8010b90:	4628      	mov	r0, r5
 8010b92:	f800 4b01 	strb.w	r4, [r0], #1
 8010b96:	e00e      	b.n	8010bb6 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x32>
 8010b98:	4810      	ldr	r0, [pc, #64]	@ (8010bdc <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 8010b9a:	4631      	mov	r1, r6
 8010b9c:	f7ff ffa1 	bl	8010ae2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
 8010ba0:	b150      	cbz	r0, 8010bb8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x34>
 8010ba2:	4b0e      	ldr	r3, [pc, #56]	@ (8010bdc <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 8010ba4:	1ac3      	subs	r3, r0, r3
 8010ba6:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010baa:	4628      	mov	r0, r5
 8010bac:	f062 023f 	orn	r2, r2, #63	@ 0x3f
 8010bb0:	f800 2b02 	strb.w	r2, [r0], #2
 8010bb4:	706b      	strb	r3, [r5, #1]
 8010bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010bb8:	462b      	mov	r3, r5
 8010bba:	3201      	adds	r2, #1
 8010bbc:	f803 4b01 	strb.w	r4, [r3], #1
 8010bc0:	4617      	mov	r7, r2
 8010bc2:	4618      	mov	r0, r3
 8010bc4:	f817 1b01 	ldrb.w	r1, [r7], #1
 8010bc8:	f800 1b01 	strb.w	r1, [r0], #1
 8010bcc:	1b41      	subs	r1, r0, r5
 8010bce:	3901      	subs	r1, #1
 8010bd0:	42a1      	cmp	r1, r4
 8010bd2:	d3f7      	bcc.n	8010bc4 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x40>
 8010bd4:	4422      	add	r2, r4
 8010bd6:	191d      	adds	r5, r3, r4
 8010bd8:	e7d8      	b.n	8010b8c <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x8>
 8010bda:	bf00      	nop
 8010bdc:	2000c9c5 	andcs	ip, r0, r5, asr #19

08010be0 <add_answer_a(unsigned char*, unsigned long)>:
 8010be0:	b530      	push	{r4, r5, lr}
 8010be2:	b0c3      	sub	sp, #268	@ 0x10c
 8010be4:	4605      	mov	r5, r0
 8010be6:	a801      	add	r0, sp, #4
 8010be8:	460c      	mov	r4, r1
 8010bea:	f7ff feb1 	bl	8010950 <create_host_domain(mdns::Domain&)>
 8010bee:	a901      	add	r1, sp, #4
 8010bf0:	4628      	mov	r0, r5
 8010bf2:	f7ff ffc7 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010bf6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8010bfa:	8003      	strh	r3, [r0, #0]
 8010bfc:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8010c00:	8043      	strh	r3, [r0, #2]
 8010c02:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8010c06:	8103      	strh	r3, [r0, #8]
 8010c08:	4b04      	ldr	r3, [pc, #16]	@ (8010c1c <add_answer_a(unsigned char*, unsigned long)+0x3c>)
 8010c0a:	ba24      	rev	r4, r4
 8010c0c:	681b      	ldr	r3, [r3, #0]
 8010c0e:	6044      	str	r4, [r0, #4]
 8010c10:	f8c0 300a 	str.w	r3, [r0, #10]
 8010c14:	300e      	adds	r0, #14
 8010c16:	1b40      	subs	r0, r0, r5
 8010c18:	b043      	add	sp, #268	@ 0x10c
 8010c1a:	bd30      	pop	{r4, r5, pc}
 8010c1c:	2000cc10 	andcs	ip, r0, r0, lsl ip

08010c20 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
 8010c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c22:	4e11      	ldr	r6, [pc, #68]	@ (8010c68 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x48>)
 8010c24:	b0c3      	sub	sp, #268	@ 0x10c
 8010c26:	4607      	mov	r7, r0
 8010c28:	460d      	mov	r5, r1
 8010c2a:	4630      	mov	r0, r6
 8010c2c:	490f      	ldr	r1, [pc, #60]	@ (8010c6c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x4c>)
 8010c2e:	f7ff ffa9 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010c32:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8010c36:	8003      	strh	r3, [r0, #0]
 8010c38:	ba2d      	rev	r5, r5
 8010c3a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8010c3e:	8043      	strh	r3, [r0, #2]
 8010c40:	4604      	mov	r4, r0
 8010c42:	6045      	str	r5, [r0, #4]
 8010c44:	2200      	movs	r2, #0
 8010c46:	f100 050a 	add.w	r5, r0, #10
 8010c4a:	4639      	mov	r1, r7
 8010c4c:	a801      	add	r0, sp, #4
 8010c4e:	f7ff fe9f 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010c52:	a901      	add	r1, sp, #4
 8010c54:	4628      	mov	r0, r5
 8010c56:	f7ff ff95 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010c5a:	1b45      	subs	r5, r0, r5
 8010c5c:	ba6d      	rev16	r5, r5
 8010c5e:	1b80      	subs	r0, r0, r6
 8010c60:	8125      	strh	r5, [r4, #8]
 8010c62:	b043      	add	sp, #268	@ 0x10c
 8010c64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c66:	bf00      	nop
 8010c68:	2000c9d1 	ldrdcs	ip, [r0], -r1
 8010c6c:	0801bc94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp, pc}

08010c70 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8010c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c72:	b0c3      	sub	sp, #268	@ 0x10c
 8010c74:	460e      	mov	r6, r1
 8010c76:	4607      	mov	r7, r0
 8010c78:	4601      	mov	r1, r0
 8010c7a:	4615      	mov	r5, r2
 8010c7c:	a801      	add	r0, sp, #4
 8010c7e:	2201      	movs	r2, #1
 8010c80:	f7ff fe86 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010c84:	a901      	add	r1, sp, #4
 8010c86:	4630      	mov	r0, r6
 8010c88:	f7ff ff7c 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010c8c:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 8010c90:	8003      	strh	r3, [r0, #0]
 8010c92:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8010c96:	8043      	strh	r3, [r0, #2]
 8010c98:	2300      	movs	r3, #0
 8010c9a:	f8c0 300a 	str.w	r3, [r0, #10]
 8010c9e:	ba2d      	rev	r5, r5
 8010ca0:	897b      	ldrh	r3, [r7, #10]
 8010ca2:	81c3      	strh	r3, [r0, #14]
 8010ca4:	4604      	mov	r4, r0
 8010ca6:	6045      	str	r5, [r0, #4]
 8010ca8:	f100 0510 	add.w	r5, r0, #16
 8010cac:	a801      	add	r0, sp, #4
 8010cae:	f7ff fe4f 	bl	8010950 <create_host_domain(mdns::Domain&)>
 8010cb2:	a901      	add	r1, sp, #4
 8010cb4:	4628      	mov	r0, r5
 8010cb6:	f7ff ff65 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010cba:	1d83      	adds	r3, r0, #6
 8010cbc:	1b5b      	subs	r3, r3, r5
 8010cbe:	ba5b      	rev16	r3, r3
 8010cc0:	1b80      	subs	r0, r0, r6
 8010cc2:	8123      	strh	r3, [r4, #8]
 8010cc4:	b043      	add	sp, #268	@ 0x10c
 8010cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010cc8 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8010cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cca:	b0c3      	sub	sp, #268	@ 0x10c
 8010ccc:	460e      	mov	r6, r1
 8010cce:	4607      	mov	r7, r0
 8010cd0:	4601      	mov	r1, r0
 8010cd2:	4615      	mov	r5, r2
 8010cd4:	a801      	add	r0, sp, #4
 8010cd6:	2200      	movs	r2, #0
 8010cd8:	f7ff fe5a 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010cdc:	a901      	add	r1, sp, #4
 8010cde:	4630      	mov	r0, r6
 8010ce0:	f7ff ff50 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010ce4:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8010ce8:	8003      	strh	r3, [r0, #0]
 8010cea:	ba2d      	rev	r5, r5
 8010cec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8010cf0:	8043      	strh	r3, [r0, #2]
 8010cf2:	4604      	mov	r4, r0
 8010cf4:	6045      	str	r5, [r0, #4]
 8010cf6:	2201      	movs	r2, #1
 8010cf8:	f100 050a 	add.w	r5, r0, #10
 8010cfc:	4639      	mov	r1, r7
 8010cfe:	a801      	add	r0, sp, #4
 8010d00:	f7ff fe46 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010d04:	a901      	add	r1, sp, #4
 8010d06:	4628      	mov	r0, r5
 8010d08:	f7ff ff3c 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010d0c:	1b45      	subs	r5, r0, r5
 8010d0e:	ba6d      	rev16	r5, r5
 8010d10:	1b80      	subs	r0, r0, r6
 8010d12:	8125      	strh	r5, [r4, #8]
 8010d14:	b043      	add	sp, #268	@ 0x10c
 8010d16:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010d18 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8010d18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d1a:	b0c3      	sub	sp, #268	@ 0x10c
 8010d1c:	4604      	mov	r4, r0
 8010d1e:	460e      	mov	r6, r1
 8010d20:	4615      	mov	r5, r2
 8010d22:	4601      	mov	r1, r0
 8010d24:	2201      	movs	r2, #1
 8010d26:	a801      	add	r0, sp, #4
 8010d28:	f7ff fe32 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010d2c:	a901      	add	r1, sp, #4
 8010d2e:	4630      	mov	r0, r6
 8010d30:	f7ff ff28 	bl	8010b84 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8010d34:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8010d38:	8002      	strh	r2, [r0, #0]
 8010d3a:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8010d3e:	8042      	strh	r2, [r0, #2]
 8010d40:	6862      	ldr	r2, [r4, #4]
 8010d42:	ba2d      	rev	r5, r5
 8010d44:	6045      	str	r5, [r0, #4]
 8010d46:	f100 050b 	add.w	r5, r0, #11
 8010d4a:	b932      	cbnz	r2, 8010d5a <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x42>
 8010d4c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8010d50:	8101      	strh	r1, [r0, #8]
 8010d52:	7282      	strb	r2, [r0, #10]
 8010d54:	1ba8      	subs	r0, r5, r6
 8010d56:	b043      	add	sp, #268	@ 0x10c
 8010d58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d5a:	8927      	ldrh	r7, [r4, #8]
 8010d5c:	7287      	strb	r7, [r0, #10]
 8010d5e:	1c7a      	adds	r2, r7, #1
 8010d60:	ba52      	rev16	r2, r2
 8010d62:	8102      	strh	r2, [r0, #8]
 8010d64:	8922      	ldrh	r2, [r4, #8]
 8010d66:	6861      	ldr	r1, [r4, #4]
 8010d68:	4628      	mov	r0, r5
 8010d6a:	f7ff fdcd 	bl	8010908 <memcpy.isra.0>
 8010d6e:	443d      	add	r5, r7
 8010d70:	e7f0      	b.n	8010d54 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x3c>

08010d72 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
 8010d72:	4281      	cmp	r1, r0
 8010d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d78:	4606      	mov	r6, r0
 8010d7a:	d310      	bcc.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010d7c:	4291      	cmp	r1, r2
 8010d7e:	d20e      	bcs.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010d80:	2500      	movs	r5, #0
 8010d82:	f503 7c80 	add.w	ip, r3, #256	@ 0x100
 8010d86:	701d      	strb	r5, [r3, #0]
 8010d88:	4608      	mov	r0, r1
 8010d8a:	4607      	mov	r7, r0
 8010d8c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010d90:	b38c      	cbz	r4, 8010df6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
 8010d92:	f004 01c0 	and.w	r1, r4, #192	@ 0xc0
 8010d96:	2980      	cmp	r1, #128	@ 0x80
 8010d98:	d001      	beq.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010d9a:	d803      	bhi.n	8010da4 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x32>
 8010d9c:	b199      	cbz	r1, 8010dc6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x54>
 8010d9e:	2000      	movs	r0, #0
 8010da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010da4:	29c0      	cmp	r1, #192	@ 0xc0
 8010da6:	d1f0      	bne.n	8010d8a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x18>
 8010da8:	7800      	ldrb	r0, [r0, #0]
 8010daa:	0224      	lsls	r4, r4, #8
 8010dac:	f404 547c 	and.w	r4, r4, #16128	@ 0x3f00
 8010db0:	4320      	orrs	r0, r4
 8010db2:	b905      	cbnz	r5, 8010db6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x44>
 8010db4:	1cbd      	adds	r5, r7, #2
 8010db6:	1831      	adds	r1, r6, r0
 8010db8:	d2f1      	bcs.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010dba:	428a      	cmp	r2, r1
 8010dbc:	d9ef      	bls.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010dbe:	5c30      	ldrb	r0, [r6, r0]
 8010dc0:	283f      	cmp	r0, #63	@ 0x3f
 8010dc2:	d9e1      	bls.n	8010d88 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 8010dc4:	e7eb      	b.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010dc6:	1901      	adds	r1, r0, r4
 8010dc8:	4291      	cmp	r1, r2
 8010dca:	d2e8      	bcs.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010dcc:	1c67      	adds	r7, r4, #1
 8010dce:	441f      	add	r7, r3
 8010dd0:	4567      	cmp	r7, ip
 8010dd2:	d2e4      	bcs.n	8010d9e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010dd4:	469e      	mov	lr, r3
 8010dd6:	f80e 4b01 	strb.w	r4, [lr], #1
 8010dda:	f810 8b01 	ldrb.w	r8, [r0], #1
 8010dde:	f80e 8b01 	strb.w	r8, [lr], #1
 8010de2:	ebae 0803 	sub.w	r8, lr, r3
 8010de6:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8010dea:	4544      	cmp	r4, r8
 8010dec:	dcf5      	bgt.n	8010dda <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x68>
 8010dee:	2300      	movs	r3, #0
 8010df0:	703b      	strb	r3, [r7, #0]
 8010df2:	463b      	mov	r3, r7
 8010df4:	e7c8      	b.n	8010d88 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 8010df6:	2d00      	cmp	r5, #0
 8010df8:	bf18      	it	ne
 8010dfa:	4628      	movne	r0, r5
 8010dfc:	e7d0      	b.n	8010da0 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2e>
	...

08010e00 <MDNS::SendTo(unsigned long)>:
 8010e00:	4b0d      	ldr	r3, [pc, #52]	@ (8010e38 <MDNS::SendTo(unsigned long)+0x38>)
 8010e02:	b513      	push	{r0, r1, r4, lr}
 8010e04:	6818      	ldr	r0, [r3, #0]
 8010e06:	4b0d      	ldr	r3, [pc, #52]	@ (8010e3c <MDNS::SendTo(unsigned long)+0x3c>)
 8010e08:	460a      	mov	r2, r1
 8010e0a:	6819      	ldr	r1, [r3, #0]
 8010e0c:	4b0c      	ldr	r3, [pc, #48]	@ (8010e40 <MDNS::SendTo(unsigned long)+0x40>)
 8010e0e:	781b      	ldrb	r3, [r3, #0]
 8010e10:	b94b      	cbnz	r3, 8010e26 <MDNS::SendTo(unsigned long)+0x26>
 8010e12:	b131      	cbz	r1, 8010e22 <MDNS::SendTo(unsigned long)+0x22>
 8010e14:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 8010e18:	9300      	str	r3, [sp, #0]
 8010e1a:	4b0a      	ldr	r3, [pc, #40]	@ (8010e44 <MDNS::SendTo(unsigned long)+0x44>)
 8010e1c:	490a      	ldr	r1, [pc, #40]	@ (8010e48 <MDNS::SendTo(unsigned long)+0x48>)
 8010e1e:	f001 fdf1 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010e22:	b002      	add	sp, #8
 8010e24:	bd10      	pop	{r4, pc}
 8010e26:	4b09      	ldr	r3, [pc, #36]	@ (8010e4c <MDNS::SendTo(unsigned long)+0x4c>)
 8010e28:	4c09      	ldr	r4, [pc, #36]	@ (8010e50 <MDNS::SendTo(unsigned long)+0x50>)
 8010e2a:	681b      	ldr	r3, [r3, #0]
 8010e2c:	8824      	ldrh	r4, [r4, #0]
 8010e2e:	2900      	cmp	r1, #0
 8010e30:	d0f7      	beq.n	8010e22 <MDNS::SendTo(unsigned long)+0x22>
 8010e32:	9400      	str	r4, [sp, #0]
 8010e34:	e7f2      	b.n	8010e1c <MDNS::SendTo(unsigned long)+0x1c>
 8010e36:	bf00      	nop
 8010e38:	2000c9c0 	andcs	ip, r0, r0, asr #19
 8010e3c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8010e40:	2000c9c4 	andcs	ip, r0, r4, asr #19
 8010e44:	fb0000e0 	blx	80111ce <MDNS::HandleQuestions(unsigned long)+0x8a>
 8010e48:	2000c9c5 	andcs	ip, r0, r5, asr #19
 8010e4c:	2000c9bc 			@ <UNDEFINED> instruction: 0x2000c9bc
 8010e50:	2000c9b8 			@ <UNDEFINED> instruction: 0x2000c9b8

08010e54 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>:
 8010e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010e56:	4b11      	ldr	r3, [pc, #68]	@ (8010e9c <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x48>)
 8010e58:	4c11      	ldr	r4, [pc, #68]	@ (8010ea0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x4c>)
 8010e5a:	681d      	ldr	r5, [r3, #0]
 8010e5c:	f015 0501 	ands.w	r5, r5, #1
 8010e60:	460f      	mov	r7, r1
 8010e62:	4606      	mov	r6, r0
 8010e64:	4611      	mov	r1, r2
 8010e66:	d003      	beq.n	8010e70 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x1c>
 8010e68:	4620      	mov	r0, r4
 8010e6a:	f7ff feb9 	bl	8010be0 <add_answer_a(unsigned char*, unsigned long)>
 8010e6e:	4404      	add	r4, r0
 8010e70:	4b0c      	ldr	r3, [pc, #48]	@ (8010ea4 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x50>)
 8010e72:	2284      	movs	r2, #132	@ 0x84
 8010e74:	709a      	strb	r2, [r3, #2]
 8010e76:	2200      	movs	r2, #0
 8010e78:	ba6d      	rev16	r5, r5
 8010e7a:	1ae4      	subs	r4, r4, r3
 8010e7c:	70da      	strb	r2, [r3, #3]
 8010e7e:	801f      	strh	r7, [r3, #0]
 8010e80:	711a      	strb	r2, [r3, #4]
 8010e82:	715a      	strb	r2, [r3, #5]
 8010e84:	80dd      	strh	r5, [r3, #6]
 8010e86:	721a      	strb	r2, [r3, #8]
 8010e88:	725a      	strb	r2, [r3, #9]
 8010e8a:	729a      	strb	r2, [r3, #10]
 8010e8c:	72da      	strb	r2, [r3, #11]
 8010e8e:	b2a1      	uxth	r1, r4
 8010e90:	4630      	mov	r0, r6
 8010e92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010e96:	f7ff bfb3 	b.w	8010e00 <MDNS::SendTo(unsigned long)>
 8010e9a:	bf00      	nop
 8010e9c:	2000cbcc 	andcs	ip, r0, ip, asr #23
 8010ea0:	2000c9d1 	ldrdcs	ip, [r0], -r1
 8010ea4:	2000c9c5 	andcs	ip, r0, r5, asr #19

08010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
 8010ea8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010eac:	461e      	mov	r6, r3
 8010eae:	4b25      	ldr	r3, [pc, #148]	@ (8010f44 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x9c>)
 8010eb0:	4c25      	ldr	r4, [pc, #148]	@ (8010f48 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa0>)
 8010eb2:	f8d3 9000 	ldr.w	r9, [r3]
 8010eb6:	f019 0510 	ands.w	r5, r9, #16
 8010eba:	4607      	mov	r7, r0
 8010ebc:	4688      	mov	r8, r1
 8010ebe:	4692      	mov	sl, r2
 8010ec0:	d005      	beq.n	8010ece <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x26>
 8010ec2:	4631      	mov	r1, r6
 8010ec4:	4640      	mov	r0, r8
 8010ec6:	f7ff feab 	bl	8010c20 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
 8010eca:	2501      	movs	r5, #1
 8010ecc:	4404      	add	r4, r0
 8010ece:	f019 0f20 	tst.w	r9, #32
 8010ed2:	d006      	beq.n	8010ee2 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x3a>
 8010ed4:	4621      	mov	r1, r4
 8010ed6:	4632      	mov	r2, r6
 8010ed8:	4640      	mov	r0, r8
 8010eda:	f7ff fef5 	bl	8010cc8 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8010ede:	3501      	adds	r5, #1
 8010ee0:	4404      	add	r4, r0
 8010ee2:	f019 0f40 	tst.w	r9, #64	@ 0x40
 8010ee6:	d006      	beq.n	8010ef6 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x4e>
 8010ee8:	4621      	mov	r1, r4
 8010eea:	4632      	mov	r2, r6
 8010eec:	4640      	mov	r0, r8
 8010eee:	f7ff febf 	bl	8010c70 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8010ef2:	3501      	adds	r5, #1
 8010ef4:	4404      	add	r4, r0
 8010ef6:	f019 0f80 	tst.w	r9, #128	@ 0x80
 8010efa:	d006      	beq.n	8010f0a <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x62>
 8010efc:	4621      	mov	r1, r4
 8010efe:	4632      	mov	r2, r6
 8010f00:	4640      	mov	r0, r8
 8010f02:	f7ff ff09 	bl	8010d18 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8010f06:	3501      	adds	r5, #1
 8010f08:	4404      	add	r4, r0
 8010f0a:	4631      	mov	r1, r6
 8010f0c:	4620      	mov	r0, r4
 8010f0e:	f7ff fe67 	bl	8010be0 <add_answer_a(unsigned char*, unsigned long)>
 8010f12:	4b0e      	ldr	r3, [pc, #56]	@ (8010f4c <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa4>)
 8010f14:	2284      	movs	r2, #132	@ 0x84
 8010f16:	2101      	movs	r1, #1
 8010f18:	709a      	strb	r2, [r3, #2]
 8010f1a:	7259      	strb	r1, [r3, #9]
 8010f1c:	2200      	movs	r2, #0
 8010f1e:	1821      	adds	r1, r4, r0
 8010f20:	ba6d      	rev16	r5, r5
 8010f22:	70da      	strb	r2, [r3, #3]
 8010f24:	1ac9      	subs	r1, r1, r3
 8010f26:	f8a3 a000 	strh.w	sl, [r3]
 8010f2a:	80dd      	strh	r5, [r3, #6]
 8010f2c:	4638      	mov	r0, r7
 8010f2e:	b289      	uxth	r1, r1
 8010f30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f34:	711a      	strb	r2, [r3, #4]
 8010f36:	715a      	strb	r2, [r3, #5]
 8010f38:	721a      	strb	r2, [r3, #8]
 8010f3a:	729a      	strb	r2, [r3, #10]
 8010f3c:	72da      	strb	r2, [r3, #11]
 8010f3e:	f7ff bf5f 	b.w	8010e00 <MDNS::SendTo(unsigned long)>
 8010f42:	bf00      	nop
 8010f44:	2000cbc8 	andcs	ip, r0, r8, asr #23
 8010f48:	2000c9d1 	ldrdcs	ip, [r0], -r1
 8010f4c:	2000c9c5 	andcs	ip, r0, r5, asr #19

08010f50 <MDNS::SendAnnouncement(unsigned long)>:
 8010f50:	4b14      	ldr	r3, [pc, #80]	@ (8010fa4 <MDNS::SendAnnouncement(unsigned long)+0x54>)
 8010f52:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 8010f56:	b570      	push	{r4, r5, r6, lr}
 8010f58:	801a      	strh	r2, [r3, #0]
 8010f5a:	4b13      	ldr	r3, [pc, #76]	@ (8010fa8 <MDNS::SendAnnouncement(unsigned long)+0x58>)
 8010f5c:	4e13      	ldr	r6, [pc, #76]	@ (8010fac <MDNS::SendAnnouncement(unsigned long)+0x5c>)
 8010f5e:	2201      	movs	r2, #1
 8010f60:	601a      	str	r2, [r3, #0]
 8010f62:	460c      	mov	r4, r1
 8010f64:	460a      	mov	r2, r1
 8010f66:	2100      	movs	r1, #0
 8010f68:	4605      	mov	r5, r0
 8010f6a:	f7ff ff73 	bl	8010e54 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 8010f6e:	68f3      	ldr	r3, [r6, #12]
 8010f70:	2b08      	cmp	r3, #8
 8010f72:	dc08      	bgt.n	8010f86 <MDNS::SendAnnouncement(unsigned long)+0x36>
 8010f74:	4b0e      	ldr	r3, [pc, #56]	@ (8010fb0 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 8010f76:	22f0      	movs	r2, #240	@ 0xf0
 8010f78:	601a      	str	r2, [r3, #0]
 8010f7a:	4631      	mov	r1, r6
 8010f7c:	4623      	mov	r3, r4
 8010f7e:	2200      	movs	r2, #0
 8010f80:	4628      	mov	r0, r5
 8010f82:	f7ff ff91 	bl	8010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8010f86:	69f3      	ldr	r3, [r6, #28]
 8010f88:	2b08      	cmp	r3, #8
 8010f8a:	dc0a      	bgt.n	8010fa2 <MDNS::SendAnnouncement(unsigned long)+0x52>
 8010f8c:	4b08      	ldr	r3, [pc, #32]	@ (8010fb0 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 8010f8e:	4909      	ldr	r1, [pc, #36]	@ (8010fb4 <MDNS::SendAnnouncement(unsigned long)+0x64>)
 8010f90:	22f0      	movs	r2, #240	@ 0xf0
 8010f92:	601a      	str	r2, [r3, #0]
 8010f94:	4628      	mov	r0, r5
 8010f96:	4623      	mov	r3, r4
 8010f98:	2200      	movs	r2, #0
 8010f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f9e:	f7ff bf83 	b.w	8010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8010fa2:	bd70      	pop	{r4, r5, r6, pc}
 8010fa4:	2000c9b8 			@ <UNDEFINED> instruction: 0x2000c9b8
 8010fa8:	2000cbcc 	andcs	ip, r0, ip, asr #23
 8010fac:	2000cbd0 	ldrdcs	ip, [r0], -r0
 8010fb0:	2000cbc8 	andcs	ip, r0, r8, asr #23
 8010fb4:	2000cbe0 	andcs	ip, r0, r0, ror #23

08010fb8 <network::mdns_announcement()>:
 8010fb8:	4b02      	ldr	r3, [pc, #8]	@ (8010fc4 <network::mdns_announcement()+0xc>)
 8010fba:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8010fbe:	6818      	ldr	r0, [r3, #0]
 8010fc0:	f7ff bfc6 	b.w	8010f50 <MDNS::SendAnnouncement(unsigned long)>
 8010fc4:	2000c9ac 	andcs	ip, r0, ip, lsr #19

08010fc8 <network::mdns_shutdown()>:
 8010fc8:	4b02      	ldr	r3, [pc, #8]	@ (8010fd4 <network::mdns_shutdown()+0xc>)
 8010fca:	2100      	movs	r1, #0
 8010fcc:	6818      	ldr	r0, [r3, #0]
 8010fce:	f7ff bfbf 	b.w	8010f50 <MDNS::SendAnnouncement(unsigned long)>
 8010fd2:	bf00      	nop
 8010fd4:	2000c9ac 	andcs	ip, r0, ip, lsr #19

08010fd8 <MDNS::MDNS()>:
 8010fd8:	b538      	push	{r3, r4, r5, lr}
 8010fda:	4b16      	ldr	r3, [pc, #88]	@ (8011034 <MDNS::MDNS()+0x5c>)
 8010fdc:	4d16      	ldr	r5, [pc, #88]	@ (8011038 <MDNS::MDNS()+0x60>)
 8010fde:	6018      	str	r0, [r3, #0]
 8010fe0:	4b16      	ldr	r3, [pc, #88]	@ (801103c <MDNS::MDNS()+0x64>)
 8010fe2:	2209      	movs	r2, #9
 8010fe4:	4604      	mov	r4, r0
 8010fe6:	f241 40e9 	movw	r0, #5353	@ 0x14e9
 8010fea:	60da      	str	r2, [r3, #12]
 8010fec:	61da      	str	r2, [r3, #28]
 8010fee:	f001 fc85 	bl	80128fc <net::udp_begin(unsigned short)>
 8010ff2:	4b13      	ldr	r3, [pc, #76]	@ (8011040 <MDNS::MDNS()+0x68>)
 8010ff4:	6018      	str	r0, [r3, #0]
 8010ff6:	4813      	ldr	r0, [pc, #76]	@ (8011044 <MDNS::MDNS()+0x6c>)
 8010ff8:	f001 f868 	bl	80120cc <net::igmp_join(unsigned long)>
 8010ffc:	4b12      	ldr	r3, [pc, #72]	@ (8011048 <MDNS::MDNS()+0x70>)
 8010ffe:	6819      	ldr	r1, [r3, #0]
 8011000:	233f      	movs	r3, #63	@ 0x3f
 8011002:	f101 0256 	add.w	r2, r1, #86	@ 0x56
 8011006:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 801100a:	b118      	cbz	r0, 8011014 <MDNS::MDNS()+0x3c>
 801100c:	3b01      	subs	r3, #1
 801100e:	f802 0b01 	strb.w	r0, [r2], #1
 8011012:	d1f8      	bne.n	8011006 <MDNS::MDNS()+0x2e>
 8011014:	4413      	add	r3, r2
 8011016:	2000      	movs	r0, #0
 8011018:	429a      	cmp	r2, r3
 801101a:	d108      	bne.n	801102e <MDNS::MDNS()+0x56>
 801101c:	f881 0095 	strb.w	r0, [r1, #149]	@ 0x95
 8011020:	4620      	mov	r0, r4
 8011022:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8011026:	f7ff ff93 	bl	8010f50 <MDNS::SendAnnouncement(unsigned long)>
 801102a:	4620      	mov	r0, r4
 801102c:	bd38      	pop	{r3, r4, r5, pc}
 801102e:	f802 0b01 	strb.w	r0, [r2], #1
 8011032:	e7f1      	b.n	8011018 <MDNS::MDNS()+0x40>
 8011034:	2000c9ac 	andcs	ip, r0, ip, lsr #19
 8011038:	0801be72 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 801103c:	2000cbd0 	ldrdcs	ip, [r0], -r0
 8011040:	2000c9c0 	andcs	ip, r0, r0, asr #19
 8011044:	fb0000e0 	blx	80113ce <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x3a>
 8011048:	2000cbf0 	strdcs	ip, [r0], -r0

0801104c <MDNS::ServiceRecordDelete(mdns::Services)>:
 801104c:	b510      	push	{r4, lr}
 801104e:	4c0c      	ldr	r4, [pc, #48]	@ (8011080 <MDNS::ServiceRecordDelete(mdns::Services)+0x34>)
 8011050:	68e3      	ldr	r3, [r4, #12]
 8011052:	4299      	cmp	r1, r3
 8011054:	d003      	beq.n	801105e <MDNS::ServiceRecordDelete(mdns::Services)+0x12>
 8011056:	69e3      	ldr	r3, [r4, #28]
 8011058:	4299      	cmp	r1, r3
 801105a:	d10f      	bne.n	801107c <MDNS::ServiceRecordDelete(mdns::Services)+0x30>
 801105c:	3410      	adds	r4, #16
 801105e:	2300      	movs	r3, #0
 8011060:	461a      	mov	r2, r3
 8011062:	4621      	mov	r1, r4
 8011064:	f7ff ff20 	bl	8010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8011068:	6820      	ldr	r0, [r4, #0]
 801106a:	b108      	cbz	r0, 8011070 <MDNS::ServiceRecordDelete(mdns::Services)+0x24>
 801106c:	f007 f868 	bl	8018140 <operator delete[](void*)>
 8011070:	6860      	ldr	r0, [r4, #4]
 8011072:	b108      	cbz	r0, 8011078 <MDNS::ServiceRecordDelete(mdns::Services)+0x2c>
 8011074:	f007 f864 	bl	8018140 <operator delete[](void*)>
 8011078:	2001      	movs	r0, #1
 801107a:	bd10      	pop	{r4, pc}
 801107c:	2000      	movs	r0, #0
 801107e:	e7fc      	b.n	801107a <MDNS::ServiceRecordDelete(mdns::Services)+0x2e>
 8011080:	2000cbd0 	ldrdcs	ip, [r0], -r0

08011084 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>:
 8011084:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011088:	4d2a      	ldr	r5, [pc, #168]	@ (8011134 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb0>)
 801108a:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 801108e:	461f      	mov	r7, r3
 8011090:	68eb      	ldr	r3, [r5, #12]
 8011092:	2b09      	cmp	r3, #9
 8011094:	4680      	mov	r8, r0
 8011096:	4689      	mov	r9, r1
 8011098:	4692      	mov	sl, r2
 801109a:	d003      	beq.n	80110a4 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x20>
 801109c:	69eb      	ldr	r3, [r5, #28]
 801109e:	2b09      	cmp	r3, #9
 80110a0:	d145      	bne.n	801112e <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xaa>
 80110a2:	3510      	adds	r5, #16
 80110a4:	f1b9 0f00 	cmp.w	r9, #0
 80110a8:	d012      	beq.n	80110d0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x4c>
 80110aa:	4648      	mov	r0, r9
 80110ac:	f7ff fc35 	bl	801091a <strlen>
 80110b0:	283f      	cmp	r0, #63	@ 0x3f
 80110b2:	4604      	mov	r4, r0
 80110b4:	d839      	bhi.n	801112a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa6>
 80110b6:	2800      	cmp	r0, #0
 80110b8:	d035      	beq.n	8011126 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 80110ba:	1c60      	adds	r0, r4, #1
 80110bc:	f007 f846 	bl	801814c <operator new[](unsigned int)>
 80110c0:	4622      	mov	r2, r4
 80110c2:	6028      	str	r0, [r5, #0]
 80110c4:	4649      	mov	r1, r9
 80110c6:	f7ff fc1f 	bl	8010908 <memcpy.isra.0>
 80110ca:	682b      	ldr	r3, [r5, #0]
 80110cc:	2200      	movs	r2, #0
 80110ce:	551a      	strb	r2, [r3, r4]
 80110d0:	f8c5 a00c 	str.w	sl, [r5, #12]
 80110d4:	b91e      	cbnz	r6, 80110de <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x5a>
 80110d6:	4b18      	ldr	r3, [pc, #96]	@ (8011138 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb4>)
 80110d8:	eb03 130a 	add.w	r3, r3, sl, lsl #4
 80110dc:	899e      	ldrh	r6, [r3, #12]
 80110de:	ba76      	rev16	r6, r6
 80110e0:	b2b6      	uxth	r6, r6
 80110e2:	816e      	strh	r6, [r5, #10]
 80110e4:	b187      	cbz	r7, 8011108 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x84>
 80110e6:	4638      	mov	r0, r7
 80110e8:	f7ff fc17 	bl	801091a <strlen>
 80110ec:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80110f0:	bf28      	it	cs
 80110f2:	f44f 7080 	movcs.w	r0, #256	@ 0x100
 80110f6:	4604      	mov	r4, r0
 80110f8:	f007 f828 	bl	801814c <operator new[](unsigned int)>
 80110fc:	4622      	mov	r2, r4
 80110fe:	6068      	str	r0, [r5, #4]
 8011100:	4639      	mov	r1, r7
 8011102:	f7ff fc01 	bl	8010908 <memcpy.isra.0>
 8011106:	812c      	strh	r4, [r5, #8]
 8011108:	4b0c      	ldr	r3, [pc, #48]	@ (801113c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb8>)
 801110a:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 801110e:	801a      	strh	r2, [r3, #0]
 8011110:	4b0b      	ldr	r3, [pc, #44]	@ (8011140 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xbc>)
 8011112:	22f0      	movs	r2, #240	@ 0xf0
 8011114:	601a      	str	r2, [r3, #0]
 8011116:	4640      	mov	r0, r8
 8011118:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 801111c:	2200      	movs	r2, #0
 801111e:	4629      	mov	r1, r5
 8011120:	f7ff fec2 	bl	8010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8011124:	2001      	movs	r0, #1
 8011126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801112a:	243f      	movs	r4, #63	@ 0x3f
 801112c:	e7c5      	b.n	80110ba <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x36>
 801112e:	2000      	movs	r0, #0
 8011130:	e7f9      	b.n	8011126 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 8011132:	bf00      	nop
 8011134:	2000cbd0 	ldrdcs	ip, [r0], -r0
 8011138:	0801bd98 	stmdaeq	r1, {r3, r4, r7, r8, sl, fp, ip, sp, pc}
 801113c:	2000c9b8 			@ <UNDEFINED> instruction: 0x2000c9b8
 8011140:	2000cbc8 	andcs	ip, r0, r8, asr #23

08011144 <MDNS::HandleQuestions(unsigned long)>:
 8011144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011148:	4b5c      	ldr	r3, [pc, #368]	@ (80112bc <MDNS::HandleQuestions(unsigned long)+0x178>)
 801114a:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 80112dc <MDNS::HandleQuestions(unsigned long)+0x198>
 801114e:	881a      	ldrh	r2, [r3, #0]
 8011150:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 8011154:	429a      	cmp	r2, r3
 8011156:	f04f 0500 	mov.w	r5, #0
 801115a:	4b59      	ldr	r3, [pc, #356]	@ (80112c0 <MDNS::HandleQuestions(unsigned long)+0x17c>)
 801115c:	f8c9 5000 	str.w	r5, [r9]
 8011160:	f5ad 7d47 	sub.w	sp, sp, #796	@ 0x31c
 8011164:	bf14      	ite	ne
 8011166:	2201      	movne	r2, #1
 8011168:	462a      	moveq	r2, r5
 801116a:	9001      	str	r0, [sp, #4]
 801116c:	4688      	mov	r8, r1
 801116e:	701a      	strb	r2, [r3, #0]
 8011170:	d004      	beq.n	801117c <MDNS::HandleQuestions(unsigned long)+0x38>
 8011172:	2901      	cmp	r1, #1
 8011174:	bf02      	ittt	eq
 8011176:	4b53      	ldreq	r3, [pc, #332]	@ (80112c4 <MDNS::HandleQuestions(unsigned long)+0x180>)
 8011178:	681b      	ldreq	r3, [r3, #0]
 801117a:	881d      	ldrheq	r5, [r3, #0]
 801117c:	4c52      	ldr	r4, [pc, #328]	@ (80112c8 <MDNS::HandleQuestions(unsigned long)+0x184>)
 801117e:	f04f 0b00 	mov.w	fp, #0
 8011182:	f04f 0a0c 	mov.w	sl, #12
 8011186:	45c3      	cmp	fp, r8
 8011188:	d10e      	bne.n	80111a8 <MDNS::HandleQuestions(unsigned long)+0x64>
 801118a:	f8d9 3000 	ldr.w	r3, [r9]
 801118e:	2b00      	cmp	r3, #0
 8011190:	f000 808f 	beq.w	80112b2 <MDNS::HandleQuestions(unsigned long)+0x16e>
 8011194:	9801      	ldr	r0, [sp, #4]
 8011196:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 801119a:	4629      	mov	r1, r5
 801119c:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 80111a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111a4:	f7ff be56 	b.w	8010e54 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 80111a8:	4b48      	ldr	r3, [pc, #288]	@ (80112cc <MDNS::HandleQuestions(unsigned long)+0x188>)
 80111aa:	4e46      	ldr	r6, [pc, #280]	@ (80112c4 <MDNS::HandleQuestions(unsigned long)+0x180>)
 80111ac:	681a      	ldr	r2, [r3, #0]
 80111ae:	6830      	ldr	r0, [r6, #0]
 80111b0:	ab03      	add	r3, sp, #12
 80111b2:	4402      	add	r2, r0
 80111b4:	eb00 010a 	add.w	r1, r0, sl
 80111b8:	f7ff fddb 	bl	8010d72 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
 80111bc:	2800      	cmp	r0, #0
 80111be:	d078      	beq.n	80112b2 <MDNS::HandleQuestions(unsigned long)+0x16e>
 80111c0:	6833      	ldr	r3, [r6, #0]
 80111c2:	eb03 020a 	add.w	r2, r3, sl
 80111c6:	1a80      	subs	r0, r0, r2
 80111c8:	f8ad 010c 	strh.w	r0, [sp, #268]	@ 0x10c
 80111cc:	fa1a f080 	uxtah	r0, sl, r0
 80111d0:	181a      	adds	r2, r3, r0
 80111d2:	f100 0a04 	add.w	sl, r0, #4
 80111d6:	8852      	ldrh	r2, [r2, #2]
 80111d8:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 80111dc:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80111e0:	d002      	beq.n	80111e8 <MDNS::HandleQuestions(unsigned long)+0xa4>
 80111e2:	f10b 0b01 	add.w	fp, fp, #1
 80111e6:	e7ce      	b.n	8011186 <MDNS::HandleQuestions(unsigned long)+0x42>
 80111e8:	5a1e      	ldrh	r6, [r3, r0]
 80111ea:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 80111ee:	d002      	beq.n	80111f6 <MDNS::HandleQuestions(unsigned long)+0xb2>
 80111f0:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80111f4:	d10d      	bne.n	8011212 <MDNS::HandleQuestions(unsigned long)+0xce>
 80111f6:	a844      	add	r0, sp, #272	@ 0x110
 80111f8:	f7ff fbaa 	bl	8010950 <create_host_domain(mdns::Domain&)>
 80111fc:	a903      	add	r1, sp, #12
 80111fe:	a844      	add	r0, sp, #272	@ 0x110
 8011200:	f7ff fc3c 	bl	8010a7c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8011204:	b128      	cbz	r0, 8011212 <MDNS::HandleQuestions(unsigned long)+0xce>
 8011206:	f8d9 3000 	ldr.w	r3, [r9]
 801120a:	f043 0301 	orr.w	r3, r3, #1
 801120e:	f8c9 3000 	str.w	r3, [r9]
 8011212:	4f2f      	ldr	r7, [pc, #188]	@ (80112d0 <MDNS::HandleQuestions(unsigned long)+0x18c>)
 8011214:	68fb      	ldr	r3, [r7, #12]
 8011216:	2b08      	cmp	r3, #8
 8011218:	dc46      	bgt.n	80112a8 <MDNS::HandleQuestions(unsigned long)+0x164>
 801121a:	2300      	movs	r3, #0
 801121c:	f5b6 6f40 	cmp.w	r6, #3072	@ 0xc00
 8011220:	6023      	str	r3, [r4, #0]
 8011222:	d002      	beq.n	801122a <MDNS::HandleQuestions(unsigned long)+0xe6>
 8011224:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8011228:	d115      	bne.n	8011256 <MDNS::HandleQuestions(unsigned long)+0x112>
 801122a:	482a      	ldr	r0, [pc, #168]	@ (80112d4 <MDNS::HandleQuestions(unsigned long)+0x190>)
 801122c:	a903      	add	r1, sp, #12
 801122e:	f7ff fc25 	bl	8010a7c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8011232:	b108      	cbz	r0, 8011238 <MDNS::HandleQuestions(unsigned long)+0xf4>
 8011234:	2310      	movs	r3, #16
 8011236:	6023      	str	r3, [r4, #0]
 8011238:	2200      	movs	r2, #0
 801123a:	4639      	mov	r1, r7
 801123c:	a885      	add	r0, sp, #532	@ 0x214
 801123e:	f7ff fba7 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8011242:	a903      	add	r1, sp, #12
 8011244:	a885      	add	r0, sp, #532	@ 0x214
 8011246:	f7ff fc19 	bl	8010a7c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 801124a:	6823      	ldr	r3, [r4, #0]
 801124c:	b118      	cbz	r0, 8011256 <MDNS::HandleQuestions(unsigned long)+0x112>
 801124e:	f043 0320 	orr.w	r3, r3, #32
 8011252:	b2db      	uxtb	r3, r3
 8011254:	6023      	str	r3, [r4, #0]
 8011256:	4639      	mov	r1, r7
 8011258:	a885      	add	r0, sp, #532	@ 0x214
 801125a:	2201      	movs	r2, #1
 801125c:	f7ff fb98 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8011260:	a903      	add	r1, sp, #12
 8011262:	a885      	add	r0, sp, #532	@ 0x214
 8011264:	f7ff fc0a 	bl	8010a7c <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8011268:	b1d8      	cbz	r0, 80112a2 <MDNS::HandleQuestions(unsigned long)+0x15e>
 801126a:	f5b6 5f04 	cmp.w	r6, #8448	@ 0x2100
 801126e:	d002      	beq.n	8011276 <MDNS::HandleQuestions(unsigned long)+0x132>
 8011270:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8011274:	d112      	bne.n	801129c <MDNS::HandleQuestions(unsigned long)+0x158>
 8011276:	7823      	ldrb	r3, [r4, #0]
 8011278:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 801127c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011280:	6023      	str	r3, [r4, #0]
 8011282:	d103      	bne.n	801128c <MDNS::HandleQuestions(unsigned long)+0x148>
 8011284:	7823      	ldrb	r3, [r4, #0]
 8011286:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801128a:	6023      	str	r3, [r4, #0]
 801128c:	9801      	ldr	r0, [sp, #4]
 801128e:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8011292:	462a      	mov	r2, r5
 8011294:	4639      	mov	r1, r7
 8011296:	f7ff fe07 	bl	8010ea8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 801129a:	e005      	b.n	80112a8 <MDNS::HandleQuestions(unsigned long)+0x164>
 801129c:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
 80112a0:	d0f0      	beq.n	8011284 <MDNS::HandleQuestions(unsigned long)+0x140>
 80112a2:	6823      	ldr	r3, [r4, #0]
 80112a4:	2b00      	cmp	r3, #0
 80112a6:	d1f1      	bne.n	801128c <MDNS::HandleQuestions(unsigned long)+0x148>
 80112a8:	4b0b      	ldr	r3, [pc, #44]	@ (80112d8 <MDNS::HandleQuestions(unsigned long)+0x194>)
 80112aa:	3710      	adds	r7, #16
 80112ac:	429f      	cmp	r7, r3
 80112ae:	d1b1      	bne.n	8011214 <MDNS::HandleQuestions(unsigned long)+0xd0>
 80112b0:	e797      	b.n	80111e2 <MDNS::HandleQuestions(unsigned long)+0x9e>
 80112b2:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 80112b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112ba:	bf00      	nop
 80112bc:	2000c9b8 			@ <UNDEFINED> instruction: 0x2000c9b8
 80112c0:	2000c9c4 	andcs	ip, r0, r4, asr #19
 80112c4:	2000c9b0 			@ <UNDEFINED> instruction: 0x2000c9b0
 80112c8:	2000cbc8 	andcs	ip, r0, r8, asr #23
 80112cc:	2000c9b4 			@ <UNDEFINED> instruction: 0x2000c9b4
 80112d0:	2000cbd0 	ldrdcs	ip, [r0], -r0
 80112d4:	0801bc94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp, pc}
 80112d8:	2000cbf0 	strdcs	ip, [r0], -r0
 80112dc:	2000cbcc 	andcs	ip, r0, ip, asr #23

080112e0 <MDNS::Print()>:
 80112e0:	b530      	push	{r4, r5, lr}
 80112e2:	4815      	ldr	r0, [pc, #84]	@ (8011338 <MDNS::Print()+0x58>)
 80112e4:	4c15      	ldr	r4, [pc, #84]	@ (801133c <MDNS::Print()+0x5c>)
 80112e6:	b0c3      	sub	sp, #268	@ 0x10c
 80112e8:	f006 fcd8 	bl	8017c9c <printf>
 80112ec:	a801      	add	r0, sp, #4
 80112ee:	f7ff fb2f 	bl	8010950 <create_host_domain(mdns::Domain&)>
 80112f2:	2101      	movs	r1, #1
 80112f4:	a801      	add	r0, sp, #4
 80112f6:	f7ff fb9d 	bl	8010a34 <mdns::Domain::Print(bool)>
 80112fa:	2503      	movs	r5, #3
 80112fc:	3d01      	subs	r5, #1
 80112fe:	d101      	bne.n	8011304 <MDNS::Print()+0x24>
 8011300:	b043      	add	sp, #268	@ 0x10c
 8011302:	bd30      	pop	{r4, r5, pc}
 8011304:	68e3      	ldr	r3, [r4, #12]
 8011306:	2b08      	cmp	r3, #8
 8011308:	dc14      	bgt.n	8011334 <MDNS::Print()+0x54>
 801130a:	2200      	movs	r2, #0
 801130c:	4621      	mov	r1, r4
 801130e:	a801      	add	r0, sp, #4
 8011310:	f7ff fb3e 	bl	8010990 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8011314:	2100      	movs	r1, #0
 8011316:	a801      	add	r0, sp, #4
 8011318:	f7ff fb8c 	bl	8010a34 <mdns::Domain::Print(bool)>
 801131c:	8961      	ldrh	r1, [r4, #10]
 801131e:	4a08      	ldr	r2, [pc, #32]	@ (8011340 <MDNS::Print()+0x60>)
 8011320:	6863      	ldr	r3, [r4, #4]
 8011322:	4808      	ldr	r0, [pc, #32]	@ (8011344 <MDNS::Print()+0x64>)
 8011324:	ba49      	rev16	r1, r1
 8011326:	2b00      	cmp	r3, #0
 8011328:	bf08      	it	eq
 801132a:	4613      	moveq	r3, r2
 801132c:	b289      	uxth	r1, r1
 801132e:	8922      	ldrh	r2, [r4, #8]
 8011330:	f006 fcb4 	bl	8017c9c <printf>
 8011334:	3410      	adds	r4, #16
 8011336:	e7e1      	b.n	80112fc <MDNS::Print()+0x1c>
 8011338:	08018f7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, pc}
 801133c:	2000cbd0 	ldrdcs	ip, [r0], -r0
 8011340:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 8011344:	08018f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, pc}

08011348 <strncpy.isra.0>:
 8011348:	3901      	subs	r1, #1
 801134a:	b112      	cbz	r2, 8011352 <strncpy.isra.0+0xa>
 801134c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8011350:	b913      	cbnz	r3, 8011358 <strncpy.isra.0+0x10>
 8011352:	4402      	add	r2, r0
 8011354:	2300      	movs	r3, #0
 8011356:	e005      	b.n	8011364 <strncpy.isra.0+0x1c>
 8011358:	f800 3b01 	strb.w	r3, [r0], #1
 801135c:	3a01      	subs	r2, #1
 801135e:	e7f4      	b.n	801134a <strncpy.isra.0+0x2>
 8011360:	f800 3b01 	strb.w	r3, [r0], #1
 8011364:	4290      	cmp	r0, r2
 8011366:	d1fb      	bne.n	8011360 <strncpy.isra.0+0x18>
 8011368:	4770      	bx	lr
	...

0801136c <NetworkStore::SaveDhcp(bool)>:
 801136c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801136e:	2301      	movs	r3, #1
 8011370:	2100      	movs	r1, #0
 8011372:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011376:	f88d 0017 	strb.w	r0, [sp, #23]
 801137a:	4805      	ldr	r0, [pc, #20]	@ (8011390 <NetworkStore::SaveDhcp(bool)+0x24>)
 801137c:	9300      	str	r3, [sp, #0]
 801137e:	6800      	ldr	r0, [r0, #0]
 8011380:	f10d 0317 	add.w	r3, sp, #23
 8011384:	2214      	movs	r2, #20
 8011386:	f002 ff29 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 801138a:	b007      	add	sp, #28
 801138c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011390:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08011394 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 8011394:	b530      	push	{r4, r5, lr}
 8011396:	4605      	mov	r5, r0
 8011398:	06e8      	lsls	r0, r5, #27
 801139a:	b087      	sub	sp, #28
 801139c:	460c      	mov	r4, r1
 801139e:	d51a      	bpl.n	80113d6 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x42>
 80113a0:	f002 fe22 	bl	8013fe8 <net::display_ip()>
 80113a4:	f7ff fe08 	bl	8010fb8 <network::mdns_announcement()>
 80113a8:	4b2e      	ldr	r3, [pc, #184]	@ (8011464 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 80113aa:	6821      	ldr	r1, [r4, #0]
 80113ac:	681b      	ldr	r3, [r3, #0]
 80113ae:	482e      	ldr	r0, [pc, #184]	@ (8011468 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd4>)
 80113b0:	0e1a      	lsrs	r2, r3, #24
 80113b2:	9204      	str	r2, [sp, #16]
 80113b4:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80113b8:	9203      	str	r2, [sp, #12]
 80113ba:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80113be:	b2db      	uxtb	r3, r3
 80113c0:	9301      	str	r3, [sp, #4]
 80113c2:	0e0b      	lsrs	r3, r1, #24
 80113c4:	9202      	str	r2, [sp, #8]
 80113c6:	9300      	str	r3, [sp, #0]
 80113c8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80113cc:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80113d0:	b2c9      	uxtb	r1, r1
 80113d2:	f006 fc63 	bl	8017c9c <printf>
 80113d6:	0669      	lsls	r1, r5, #25
 80113d8:	d518      	bpl.n	801140c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x78>
 80113da:	f002 fe0d 	bl	8013ff8 <net::display_netmask()>
 80113de:	4b21      	ldr	r3, [pc, #132]	@ (8011464 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 80113e0:	6861      	ldr	r1, [r4, #4]
 80113e2:	685b      	ldr	r3, [r3, #4]
 80113e4:	4821      	ldr	r0, [pc, #132]	@ (801146c <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd8>)
 80113e6:	0e1a      	lsrs	r2, r3, #24
 80113e8:	9204      	str	r2, [sp, #16]
 80113ea:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80113ee:	9203      	str	r2, [sp, #12]
 80113f0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80113f4:	b2db      	uxtb	r3, r3
 80113f6:	9301      	str	r3, [sp, #4]
 80113f8:	0e0b      	lsrs	r3, r1, #24
 80113fa:	9202      	str	r2, [sp, #8]
 80113fc:	9300      	str	r3, [sp, #0]
 80113fe:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011402:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011406:	b2c9      	uxtb	r1, r1
 8011408:	f006 fc48 	bl	8017c9c <printf>
 801140c:	06aa      	lsls	r2, r5, #26
 801140e:	d518      	bpl.n	8011442 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xae>
 8011410:	f002 fe14 	bl	801403c <net::display_gateway()>
 8011414:	4b13      	ldr	r3, [pc, #76]	@ (8011464 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 8011416:	68a1      	ldr	r1, [r4, #8]
 8011418:	689b      	ldr	r3, [r3, #8]
 801141a:	4815      	ldr	r0, [pc, #84]	@ (8011470 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xdc>)
 801141c:	0e1a      	lsrs	r2, r3, #24
 801141e:	9204      	str	r2, [sp, #16]
 8011420:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011424:	9203      	str	r2, [sp, #12]
 8011426:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801142a:	b2db      	uxtb	r3, r3
 801142c:	9301      	str	r3, [sp, #4]
 801142e:	0e0b      	lsrs	r3, r1, #24
 8011430:	9202      	str	r2, [sp, #8]
 8011432:	9300      	str	r3, [sp, #0]
 8011434:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011438:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801143c:	b2c9      	uxtb	r1, r1
 801143e:	f006 fc2d 	bl	8017c9c <printf>
 8011442:	076b      	lsls	r3, r5, #29
 8011444:	d50c      	bpl.n	8011460 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 8011446:	7823      	ldrb	r3, [r4, #0]
 8011448:	b953      	cbnz	r3, 8011460 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 801144a:	f7ff fdbd 	bl	8010fc8 <network::mdns_shutdown()>
 801144e:	f001 f98f 	bl	8012770 <net::tcp_shutdown()>
 8011452:	f7f6 ff21 	bl	8008298 <net::igmp_shutdown()>
 8011456:	b007      	add	sp, #28
 8011458:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801145c:	f000 bc7a 	b.w	8011d54 <net::dhcp_release_and_stop()>
 8011460:	b007      	add	sp, #28
 8011462:	bd30      	pop	{r4, r5, pc}
 8011464:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011468:	08018f8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, fp, pc}
 801146c:	08018fab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, fp, pc}
 8011470:	08018fd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, fp, pc}

08011474 <Network::Network()>:
 8011474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011476:	2300      	movs	r3, #0
 8011478:	f240 1201 	movw	r2, #257	@ 0x101
 801147c:	6003      	str	r3, [r0, #0]
 801147e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 8011482:	4b53      	ldr	r3, [pc, #332]	@ (80115d0 <Network::Network()+0x15c>)
 8011484:	8082      	strh	r2, [r0, #4]
 8011486:	4a53      	ldr	r2, [pc, #332]	@ (80115d4 <Network::Network()+0x160>)
 8011488:	6018      	str	r0, [r3, #0]
 801148a:	b09f      	sub	sp, #124	@ 0x7c
 801148c:	4604      	mov	r4, r0
 801148e:	1d83      	adds	r3, r0, #6
 8011490:	f812 6b01 	ldrb.w	r6, [r2], #1
 8011494:	f803 6b01 	strb.w	r6, [r3], #1
 8011498:	2e00      	cmp	r6, #0
 801149a:	d1f9      	bne.n	8011490 <Network::Network()+0x1c>
 801149c:	f884 6056 	strb.w	r6, [r4, #86]	@ 0x56
 80114a0:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80114a4:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
 80114a8:	f803 6b01 	strb.w	r6, [r3], #1
 80114ac:	4293      	cmp	r3, r2
 80114ae:	d1fb      	bne.n	80114a8 <Network::Network()+0x34>
 80114b0:	4d49      	ldr	r5, [pc, #292]	@ (80115d8 <Network::Network()+0x164>)
 80114b2:	f002 fd59 	bl	8013f68 <net::display_emac_config()>
 80114b6:	f7f6 ff73 	bl	80083a0 <emac_config()>
 80114ba:	f002 fd67 	bl	8013f8c <net::display_emac_start()>
 80114be:	4847      	ldr	r0, [pc, #284]	@ (80115dc <Network::Network()+0x168>)
 80114c0:	4621      	mov	r1, r4
 80114c2:	f7f6 ff91 	bl	80083e8 <emac_start(unsigned char*, net::Link&)>
 80114c6:	7e6b      	ldrb	r3, [r5, #25]
 80114c8:	9302      	str	r3, [sp, #8]
 80114ca:	7e2b      	ldrb	r3, [r5, #24]
 80114cc:	9301      	str	r3, [sp, #4]
 80114ce:	7deb      	ldrb	r3, [r5, #23]
 80114d0:	9300      	str	r3, [sp, #0]
 80114d2:	7dab      	ldrb	r3, [r5, #22]
 80114d4:	7d6a      	ldrb	r2, [r5, #21]
 80114d6:	7d29      	ldrb	r1, [r5, #20]
 80114d8:	4841      	ldr	r0, [pc, #260]	@ (80115e0 <Network::Network()+0x16c>)
 80114da:	f006 fbdf 	bl	8017c9c <printf>
 80114de:	f001 fd34 	bl	8012f4a <net::phy_customized_timing()>
 80114e2:	f001 fd31 	bl	8012f48 <net::phy_customized_led()>
 80114e6:	f000 ff17 	bl	8012318 <net::netif_init()>
 80114ea:	483e      	ldr	r0, [pc, #248]	@ (80115e4 <Network::Network()+0x170>)
 80114ec:	f000 ffb4 	bl	8012458 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
 80114f0:	a806      	add	r0, sp, #24
 80114f2:	f001 fb1f 	bl	8012b34 <NetworkParams::NetworkParams()>
 80114f6:	a806      	add	r0, sp, #24
 80114f8:	f001 fb26 	bl	8012b48 <NetworkParams::Load()>
 80114fc:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
 8011500:	2b00      	cmp	r3, #0
 8011502:	d15b      	bne.n	80115bc <Network::Network()+0x148>
 8011504:	4a38      	ldr	r2, [pc, #224]	@ (80115e8 <Network::Network()+0x174>)
 8011506:	f104 0315 	add.w	r3, r4, #21
 801150a:	f104 0120 	add.w	r1, r4, #32
 801150e:	f812 0b01 	ldrb.w	r0, [r2], #1
 8011512:	f803 0f01 	strb.w	r0, [r3, #1]!
 8011516:	428b      	cmp	r3, r1
 8011518:	d1f9      	bne.n	801150e <Network::Network()+0x9a>
 801151a:	7deb      	ldrb	r3, [r5, #23]
 801151c:	091a      	lsrs	r2, r3, #4
 801151e:	2b9f      	cmp	r3, #159	@ 0x9f
 8011520:	f003 030f 	and.w	r3, r3, #15
 8011524:	bf94      	ite	ls
 8011526:	3230      	addls	r2, #48	@ 0x30
 8011528:	3237      	addhi	r2, #55	@ 0x37
 801152a:	2b09      	cmp	r3, #9
 801152c:	bf94      	ite	ls
 801152e:	3330      	addls	r3, #48	@ 0x30
 8011530:	3337      	addhi	r3, #55	@ 0x37
 8011532:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8011536:	7e2b      	ldrb	r3, [r5, #24]
 8011538:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 801153c:	2b9f      	cmp	r3, #159	@ 0x9f
 801153e:	ea4f 1213 	mov.w	r2, r3, lsr #4
 8011542:	f003 030f 	and.w	r3, r3, #15
 8011546:	bf94      	ite	ls
 8011548:	3230      	addls	r2, #48	@ 0x30
 801154a:	3237      	addhi	r2, #55	@ 0x37
 801154c:	2b09      	cmp	r3, #9
 801154e:	bf94      	ite	ls
 8011550:	3330      	addls	r3, #48	@ 0x30
 8011552:	3337      	addhi	r3, #55	@ 0x37
 8011554:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8011558:	7e6b      	ldrb	r3, [r5, #25]
 801155a:	f884 2023 	strb.w	r2, [r4, #35]	@ 0x23
 801155e:	2b9f      	cmp	r3, #159	@ 0x9f
 8011560:	ea4f 1213 	mov.w	r2, r3, lsr #4
 8011564:	f003 030f 	and.w	r3, r3, #15
 8011568:	bf94      	ite	ls
 801156a:	3230      	addls	r2, #48	@ 0x30
 801156c:	3237      	addhi	r2, #55	@ 0x37
 801156e:	2b09      	cmp	r3, #9
 8011570:	bf94      	ite	ls
 8011572:	3330      	addls	r3, #48	@ 0x30
 8011574:	3337      	addhi	r3, #55	@ 0x37
 8011576:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 801157a:	2300      	movs	r3, #0
 801157c:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 8011580:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 8011584:	6820      	ldr	r0, [r4, #0]
 8011586:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8011588:	f104 0316 	add.w	r3, r4, #22
 801158c:	61eb      	str	r3, [r5, #28]
 801158e:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 8011592:	f88d 3017 	strb.w	r3, [sp, #23]
 8011596:	1e43      	subs	r3, r0, #1
 8011598:	4258      	negs	r0, r3
 801159a:	4158      	adcs	r0, r3
 801159c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80115a0:	f002 fd06 	bl	8013fb0 <net::display_emac_status(bool)>
 80115a4:	f10d 0317 	add.w	r3, sp, #23
 80115a8:	9300      	str	r3, [sp, #0]
 80115aa:	6820      	ldr	r0, [r4, #0]
 80115ac:	463b      	mov	r3, r7
 80115ae:	4632      	mov	r2, r6
 80115b0:	4629      	mov	r1, r5
 80115b2:	f7f6 fe7f 	bl	80082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
 80115b6:	4620      	mov	r0, r4
 80115b8:	b01f      	add	sp, #124	@ 0x7c
 80115ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115bc:	223f      	movs	r2, #63	@ 0x3f
 80115be:	f10d 012d 	add.w	r1, sp, #45	@ 0x2d
 80115c2:	f104 0016 	add.w	r0, r4, #22
 80115c6:	f7ff febf 	bl	8011348 <strncpy.isra.0>
 80115ca:	f884 6055 	strb.w	r6, [r4, #85]	@ 0x55
 80115ce:	e7d9      	b.n	8011584 <Network::Network()+0x110>
 80115d0:	2000cbf0 	strdcs	ip, [r0], -r0
 80115d4:	08018ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115d8:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80115dc:	2000cc24 	andcs	ip, r0, r4, lsr #24
 80115e0:	08018ff5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115e4:	08011395 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, ip}
 80115e8:	08019014 	stmdaeq	r1, {r2, r4, ip, pc}

080115ec <Network::SetIp(unsigned long)>:
 80115ec:	b510      	push	{r4, lr}
 80115ee:	4b0d      	ldr	r3, [pc, #52]	@ (8011624 <Network::SetIp(unsigned long)+0x38>)
 80115f0:	681b      	ldr	r3, [r3, #0]
 80115f2:	428b      	cmp	r3, r1
 80115f4:	b086      	sub	sp, #24
 80115f6:	460c      	mov	r4, r1
 80115f8:	d012      	beq.n	8011620 <Network::SetIp(unsigned long)+0x34>
 80115fa:	4608      	mov	r0, r1
 80115fc:	f000 fe04 	bl	8012208 <net::net_set_primary_ip(net::ip_addr)>
 8011600:	9405      	str	r4, [sp, #20]
 8011602:	2302      	movs	r3, #2
 8011604:	2400      	movs	r4, #0
 8011606:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801160a:	2204      	movs	r2, #4
 801160c:	4806      	ldr	r0, [pc, #24]	@ (8011628 <Network::SetIp(unsigned long)+0x3c>)
 801160e:	9200      	str	r2, [sp, #0]
 8011610:	6800      	ldr	r0, [r0, #0]
 8011612:	ab05      	add	r3, sp, #20
 8011614:	4621      	mov	r1, r4
 8011616:	f002 fde1 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 801161a:	4620      	mov	r0, r4
 801161c:	f7ff fea6 	bl	801136c <NetworkStore::SaveDhcp(bool)>
 8011620:	b006      	add	sp, #24
 8011622:	bd10      	pop	{r4, pc}
 8011624:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011628:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

0801162c <Network::SetNetmask(unsigned long)>:
 801162c:	b510      	push	{r4, lr}
 801162e:	4b0b      	ldr	r3, [pc, #44]	@ (801165c <Network::SetNetmask(unsigned long)+0x30>)
 8011630:	685b      	ldr	r3, [r3, #4]
 8011632:	428b      	cmp	r3, r1
 8011634:	b086      	sub	sp, #24
 8011636:	460c      	mov	r4, r1
 8011638:	d00e      	beq.n	8011658 <Network::SetNetmask(unsigned long)+0x2c>
 801163a:	4608      	mov	r0, r1
 801163c:	f000 fe9e 	bl	801237c <net::netif_set_netmask(net::ip_addr)>
 8011640:	2304      	movs	r3, #4
 8011642:	2100      	movs	r1, #0
 8011644:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011648:	4805      	ldr	r0, [pc, #20]	@ (8011660 <Network::SetNetmask(unsigned long)+0x34>)
 801164a:	9300      	str	r3, [sp, #0]
 801164c:	6800      	ldr	r0, [r0, #0]
 801164e:	9405      	str	r4, [sp, #20]
 8011650:	ab05      	add	r3, sp, #20
 8011652:	2208      	movs	r2, #8
 8011654:	f002 fdc2 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8011658:	b006      	add	sp, #24
 801165a:	bd10      	pop	{r4, pc}
 801165c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011660:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08011664 <Network::SetGatewayIp(unsigned long)>:
 8011664:	b510      	push	{r4, lr}
 8011666:	4b0c      	ldr	r3, [pc, #48]	@ (8011698 <Network::SetGatewayIp(unsigned long)+0x34>)
 8011668:	689b      	ldr	r3, [r3, #8]
 801166a:	428b      	cmp	r3, r1
 801166c:	b086      	sub	sp, #24
 801166e:	460c      	mov	r4, r1
 8011670:	d00f      	beq.n	8011692 <Network::SetGatewayIp(unsigned long)+0x2e>
 8011672:	4608      	mov	r0, r1
 8011674:	f000 fe96 	bl	80123a4 <net::netif_set_gw(net::ip_addr)>
 8011678:	2308      	movs	r3, #8
 801167a:	2100      	movs	r1, #0
 801167c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011680:	4806      	ldr	r0, [pc, #24]	@ (801169c <Network::SetGatewayIp(unsigned long)+0x38>)
 8011682:	9405      	str	r4, [sp, #20]
 8011684:	2304      	movs	r3, #4
 8011686:	9300      	str	r3, [sp, #0]
 8011688:	6800      	ldr	r0, [r0, #0]
 801168a:	ab05      	add	r3, sp, #20
 801168c:	220c      	movs	r2, #12
 801168e:	f002 fda5 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8011692:	b006      	add	sp, #24
 8011694:	bd10      	pop	{r4, pc}
 8011696:	bf00      	nop
 8011698:	2000cc10 	andcs	ip, r0, r0, lsl ip
 801169c:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

080116a0 <Network::SetHostName(char const*)>:
 80116a0:	b530      	push	{r4, r5, lr}
 80116a2:	f100 0416 	add.w	r4, r0, #22
 80116a6:	4605      	mov	r5, r0
 80116a8:	b085      	sub	sp, #20
 80116aa:	223f      	movs	r2, #63	@ 0x3f
 80116ac:	4620      	mov	r0, r4
 80116ae:	f7ff fe4b 	bl	8011348 <strncpy.isra.0>
 80116b2:	2300      	movs	r3, #0
 80116b4:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80116b8:	4623      	mov	r3, r4
 80116ba:	461a      	mov	r2, r3
 80116bc:	3301      	adds	r3, #1
 80116be:	7811      	ldrb	r1, [r2, #0]
 80116c0:	2900      	cmp	r1, #0
 80116c2:	d1fa      	bne.n	80116ba <Network::SetHostName(char const*)+0x1a>
 80116c4:	1b12      	subs	r2, r2, r4
 80116c6:	2a40      	cmp	r2, #64	@ 0x40
 80116c8:	bf28      	it	cs
 80116ca:	2240      	movcs	r2, #64	@ 0x40
 80116cc:	2320      	movs	r3, #32
 80116ce:	4808      	ldr	r0, [pc, #32]	@ (80116f0 <Network::SetHostName(char const*)+0x50>)
 80116d0:	9102      	str	r1, [sp, #8]
 80116d2:	9301      	str	r3, [sp, #4]
 80116d4:	9200      	str	r2, [sp, #0]
 80116d6:	6800      	ldr	r0, [r0, #0]
 80116d8:	4623      	mov	r3, r4
 80116da:	2215      	movs	r2, #21
 80116dc:	f002 fd7e 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80116e0:	f7ff fc6a 	bl	8010fb8 <network::mdns_announcement()>
 80116e4:	b005      	add	sp, #20
 80116e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80116ea:	f002 bcc7 	b.w	801407c <net::display_hostname()>
 80116ee:	bf00      	nop
 80116f0:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

080116f4 <Network::SetZeroconf()>:
 80116f4:	b508      	push	{r3, lr}
 80116f6:	f000 f869 	bl	80117cc <net::autoip_start()>
 80116fa:	2000      	movs	r0, #0
 80116fc:	f7ff fe36 	bl	801136c <NetworkStore::SaveDhcp(bool)>
 8011700:	bd08      	pop	{r3, pc}

08011702 <Network::EnableDhcp()>:
 8011702:	b508      	push	{r3, lr}
 8011704:	f000 fada 	bl	8011cbc <net::dhcp_start()>
 8011708:	2001      	movs	r0, #1
 801170a:	f7ff fe2f 	bl	801136c <NetworkStore::SaveDhcp(bool)>
 801170e:	bd08      	pop	{r3, pc}

08011710 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>:
 8011710:	b909      	cbnz	r1, 8011716 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x6>
 8011712:	4b08      	ldr	r3, [pc, #32]	@ (8011734 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 8011714:	6819      	ldr	r1, [r3, #0]
 8011716:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
 801171a:	b90a      	cbnz	r2, 8011720 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x10>
 801171c:	4b05      	ldr	r3, [pc, #20]	@ (8011734 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 801171e:	685a      	ldr	r2, [r3, #4]
 8011720:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8011724:	f8c0 20ac 	str.w	r2, [r0, #172]	@ 0xac
 8011728:	f043 0303 	orr.w	r3, r3, #3
 801172c:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 8011730:	4770      	bx	lr
 8011732:	bf00      	nop
 8011734:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011738 <Network::SetQueuedDefaultRoute(unsigned long)>:
 8011738:	b909      	cbnz	r1, 801173e <Network::SetQueuedDefaultRoute(unsigned long)+0x6>
 801173a:	4b05      	ldr	r3, [pc, #20]	@ (8011750 <Network::SetQueuedDefaultRoute(unsigned long)+0x18>)
 801173c:	6899      	ldr	r1, [r3, #8]
 801173e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8011742:	f8c0 10b0 	str.w	r1, [r0, #176]	@ 0xb0
 8011746:	f043 0304 	orr.w	r3, r3, #4
 801174a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 801174e:	4770      	bx	lr
 8011750:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011754 <Network::ApplyQueuedConfig()>:
 8011754:	b538      	push	{r3, r4, r5, lr}
 8011756:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 801175a:	4604      	mov	r4, r0
 801175c:	b3a3      	cbz	r3, 80117c8 <Network::ApplyQueuedConfig()+0x74>
 801175e:	07d9      	lsls	r1, r3, #31
 8011760:	d40f      	bmi.n	8011782 <Network::ApplyQueuedConfig()+0x2e>
 8011762:	f013 0f06 	tst.w	r3, #6
 8011766:	d110      	bne.n	801178a <Network::ApplyQueuedConfig()+0x36>
 8011768:	f013 0508 	ands.w	r5, r3, #8
 801176c:	d024      	beq.n	80117b8 <Network::ApplyQueuedConfig()+0x64>
 801176e:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
 8011772:	2b01      	cmp	r3, #1
 8011774:	d101      	bne.n	801177a <Network::ApplyQueuedConfig()+0x26>
 8011776:	f7ff ffc4 	bl	8011702 <Network::EnableDhcp()>
 801177a:	2302      	movs	r3, #2
 801177c:	f884 30b4 	strb.w	r3, [r4, #180]	@ 0xb4
 8011780:	e015      	b.n	80117ae <Network::ApplyQueuedConfig()+0x5a>
 8011782:	f8d0 10a8 	ldr.w	r1, [r0, #168]	@ 0xa8
 8011786:	f7ff ff31 	bl	80115ec <Network::SetIp(unsigned long)>
 801178a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 801178e:	079a      	lsls	r2, r3, #30
 8011790:	d504      	bpl.n	801179c <Network::ApplyQueuedConfig()+0x48>
 8011792:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
 8011796:	4620      	mov	r0, r4
 8011798:	f7ff ff48 	bl	801162c <Network::SetNetmask(unsigned long)>
 801179c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80117a0:	075b      	lsls	r3, r3, #29
 80117a2:	d504      	bpl.n	80117ae <Network::ApplyQueuedConfig()+0x5a>
 80117a4:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
 80117a8:	4620      	mov	r0, r4
 80117aa:	f7ff ff5b 	bl	8011664 <Network::SetGatewayIp(unsigned long)>
 80117ae:	2300      	movs	r3, #0
 80117b0:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 80117b4:	2001      	movs	r0, #1
 80117b6:	bd38      	pop	{r3, r4, r5, pc}
 80117b8:	f013 0310 	ands.w	r3, r3, #16
 80117bc:	d004      	beq.n	80117c8 <Network::ApplyQueuedConfig()+0x74>
 80117be:	f7ff ff99 	bl	80116f4 <Network::SetZeroconf()>
 80117c2:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 80117c6:	e7f5      	b.n	80117b4 <Network::ApplyQueuedConfig()+0x60>
 80117c8:	4618      	mov	r0, r3
 80117ca:	e7f4      	b.n	80117b6 <Network::ApplyQueuedConfig()+0x62>

080117cc <net::autoip_start()>:
 80117cc:	b570      	push	{r4, r5, r6, lr}
 80117ce:	4e21      	ldr	r6, [pc, #132]	@ (8011854 <net::autoip_start()+0x88>)
 80117d0:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 80117d2:	b95c      	cbnz	r4, 80117ec <net::autoip_start()+0x20>
 80117d4:	201c      	movs	r0, #28
 80117d6:	f006 fcb7 	bl	8018148 <operator new(unsigned int)>
 80117da:	2100      	movs	r1, #0
 80117dc:	4604      	mov	r4, r0
 80117de:	f100 021c 	add.w	r2, r0, #28
 80117e2:	4603      	mov	r3, r0
 80117e4:	f803 1b01 	strb.w	r1, [r3], #1
 80117e8:	4293      	cmp	r3, r2
 80117ea:	d1fb      	bne.n	80117e4 <net::autoip_start()+0x18>
 80117ec:	6863      	ldr	r3, [r4, #4]
 80117ee:	bb7b      	cbnz	r3, 8011850 <net::autoip_start()+0x84>
 80117f0:	f104 050c 	add.w	r5, r4, #12
 80117f4:	4918      	ldr	r1, [pc, #96]	@ (8011858 <net::autoip_start()+0x8c>)
 80117f6:	4628      	mov	r0, r5
 80117f8:	f001 feee 	bl	80135d8 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 80117fc:	8822      	ldrh	r2, [r4, #0]
 80117fe:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8011802:	429a      	cmp	r2, r3
 8011804:	d01c      	beq.n	8011840 <net::autoip_start()+0x74>
 8011806:	f8b6 3017 	ldrh.w	r3, [r6, #23]
 801180a:	4a14      	ldr	r2, [pc, #80]	@ (801185c <net::autoip_start()+0x90>)
 801180c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8011810:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 8011812:	7a1b      	ldrb	r3, [r3, #8]
 8011814:	ba12      	rev	r2, r2
 8011816:	4413      	add	r3, r2
 8011818:	b29b      	uxth	r3, r3
 801181a:	4a11      	ldr	r2, [pc, #68]	@ (8011860 <net::autoip_start()+0x94>)
 801181c:	f043 4329 	orr.w	r3, r3, #2835349504	@ 0xa9000000
 8011820:	f443 037e 	orr.w	r3, r3, #16646144	@ 0xfe0000
 8011824:	4293      	cmp	r3, r2
 8011826:	4a0f      	ldr	r2, [pc, #60]	@ (8011864 <net::autoip_start()+0x98>)
 8011828:	bf98      	it	ls
 801182a:	f503 437e 	addls.w	r3, r3, #65024	@ 0xfe00
 801182e:	4293      	cmp	r3, r2
 8011830:	6023      	str	r3, [r4, #0]
 8011832:	bf84      	itt	hi
 8011834:	f5a3 437e 	subhi.w	r3, r3, #65024	@ 0xfe00
 8011838:	6023      	strhi	r3, [r4, #0]
 801183a:	6823      	ldr	r3, [r4, #0]
 801183c:	ba1b      	rev	r3, r3
 801183e:	6023      	str	r3, [r4, #0]
 8011840:	2301      	movs	r3, #1
 8011842:	6821      	ldr	r1, [r4, #0]
 8011844:	6063      	str	r3, [r4, #4]
 8011846:	4628      	mov	r0, r5
 8011848:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801184c:	f001 bd8e 	b.w	801336c <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8011850:	bd70      	pop	{r4, r5, r6, pc}
 8011852:	bf00      	nop
 8011854:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011858:	0801188d 	stmdaeq	r1, {r0, r2, r3, r7, fp, ip}
 801185c:	0001fea9 	andeq	pc, r1, r9, lsr #29
 8011860:	a9fe00ff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7}^
 8011864:	a9fefeff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}^

08011868 <net::autoip_stop()>:
 8011868:	4b07      	ldr	r3, [pc, #28]	@ (8011888 <net::autoip_stop()+0x20>)
 801186a:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 801186c:	b151      	cbz	r1, 8011884 <net::autoip_stop()+0x1c>
 801186e:	2200      	movs	r2, #0
 8011870:	604a      	str	r2, [r1, #4]
 8011872:	8819      	ldrh	r1, [r3, #0]
 8011874:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8011878:	4299      	cmp	r1, r3
 801187a:	d103      	bne.n	8011884 <net::autoip_stop()+0x1c>
 801187c:	4611      	mov	r1, r2
 801187e:	4610      	mov	r0, r2
 8011880:	f000 bda4 	b.w	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011884:	4770      	bx	lr
 8011886:	bf00      	nop
 8011888:	2000cc10 	andcs	ip, r0, r0, lsl ip

0801188c <net::autoip_conflict_callback(net::acd::Callback)>:
 801188c:	b510      	push	{r4, lr}
 801188e:	4c11      	ldr	r4, [pc, #68]	@ (80118d4 <net::autoip_conflict_callback(net::acd::Callback)+0x48>)
 8011890:	2801      	cmp	r0, #1
 8011892:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8011894:	4602      	mov	r2, r0
 8011896:	d00e      	beq.n	80118b6 <net::autoip_conflict_callback(net::acd::Callback)+0x2a>
 8011898:	2802      	cmp	r0, #2
 801189a:	d013      	beq.n	80118c4 <net::autoip_conflict_callback(net::acd::Callback)+0x38>
 801189c:	b950      	cbnz	r0, 80118b4 <net::autoip_conflict_callback(net::acd::Callback)+0x28>
 801189e:	2102      	movs	r1, #2
 80118a0:	6059      	str	r1, [r3, #4]
 80118a2:	6818      	ldr	r0, [r3, #0]
 80118a4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80118a8:	f000 fd90 	bl	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 80118ac:	7ea3      	ldrb	r3, [r4, #26]
 80118ae:	f043 0304 	orr.w	r3, r3, #4
 80118b2:	76a3      	strb	r3, [r4, #26]
 80118b4:	bd10      	pop	{r4, pc}
 80118b6:	7a1a      	ldrb	r2, [r3, #8]
 80118b8:	3201      	adds	r2, #1
 80118ba:	721a      	strb	r2, [r3, #8]
 80118bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118c0:	f7ff bf84 	b.w	80117cc <net::autoip_start()>
 80118c4:	2200      	movs	r2, #0
 80118c6:	601a      	str	r2, [r3, #0]
 80118c8:	f7ff ffce 	bl	8011868 <net::autoip_stop()>
 80118cc:	7ea3      	ldrb	r3, [r4, #26]
 80118ce:	f023 0304 	bic.w	r3, r3, #4
 80118d2:	e7ee      	b.n	80118b2 <net::autoip_conflict_callback(net::acd::Callback)+0x26>
 80118d4:	2000cc10 	andcs	ip, r0, r0, lsl ip

080118d8 <net::dhcp_bind()>:
 80118d8:	4833      	ldr	r0, [pc, #204]	@ (80119a8 <net::dhcp_bind()+0xd0>)
 80118da:	6a03      	ldr	r3, [r0, #32]
 80118dc:	2200      	movs	r2, #0
 80118de:	b410      	push	{r4}
 80118e0:	82da      	strh	r2, [r3, #22]
 80118e2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80118e4:	1c51      	adds	r1, r2, #1
 80118e6:	d009      	beq.n	80118fc <net::dhcp_bind()+0x24>
 80118e8:	321e      	adds	r2, #30
 80118ea:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 80118ee:	d23f      	bcs.n	8011970 <net::dhcp_bind()+0x98>
 80118f0:	2a3b      	cmp	r2, #59	@ 0x3b
 80118f2:	d940      	bls.n	8011976 <net::dhcp_bind()+0x9e>
 80118f4:	213c      	movs	r1, #60	@ 0x3c
 80118f6:	fbb2 f2f1 	udiv	r2, r2, r1
 80118fa:	831a      	strh	r2, [r3, #24]
 80118fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80118fe:	1c54      	adds	r4, r2, #1
 8011900:	d00b      	beq.n	801191a <net::dhcp_bind()+0x42>
 8011902:	321e      	adds	r2, #30
 8011904:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8011908:	d237      	bcs.n	801197a <net::dhcp_bind()+0xa2>
 801190a:	2a3b      	cmp	r2, #59	@ 0x3b
 801190c:	d938      	bls.n	8011980 <net::dhcp_bind()+0xa8>
 801190e:	213c      	movs	r1, #60	@ 0x3c
 8011910:	fbb2 f2f1 	udiv	r2, r2, r1
 8011914:	b292      	uxth	r2, r2
 8011916:	81da      	strh	r2, [r3, #14]
 8011918:	825a      	strh	r2, [r3, #18]
 801191a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801191c:	1c51      	adds	r1, r2, #1
 801191e:	d00b      	beq.n	8011938 <net::dhcp_bind()+0x60>
 8011920:	321e      	adds	r2, #30
 8011922:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8011926:	d22d      	bcs.n	8011984 <net::dhcp_bind()+0xac>
 8011928:	2a3b      	cmp	r2, #59	@ 0x3b
 801192a:	d92e      	bls.n	801198a <net::dhcp_bind()+0xb2>
 801192c:	213c      	movs	r1, #60	@ 0x3c
 801192e:	fbb2 f2f1 	udiv	r2, r2, r1
 8011932:	b292      	uxth	r2, r2
 8011934:	821a      	strh	r2, [r3, #16]
 8011936:	829a      	strh	r2, [r3, #20]
 8011938:	8a1a      	ldrh	r2, [r3, #16]
 801193a:	89d9      	ldrh	r1, [r3, #14]
 801193c:	4291      	cmp	r1, r2
 801193e:	d302      	bcc.n	8011946 <net::dhcp_bind()+0x6e>
 8011940:	b10a      	cbz	r2, 8011946 <net::dhcp_bind()+0x6e>
 8011942:	2200      	movs	r2, #0
 8011944:	81da      	strh	r2, [r3, #14]
 8011946:	7a9a      	ldrb	r2, [r3, #10]
 8011948:	07d4      	lsls	r4, r2, #31
 801194a:	d520      	bpl.n	801198e <net::dhcp_bind()+0xb6>
 801194c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 801194e:	7a1c      	ldrb	r4, [r3, #8]
 8011950:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8011952:	2c0a      	cmp	r4, #10
 8011954:	bf1f      	itttt	ne
 8011956:	240a      	movne	r4, #10
 8011958:	811c      	strhne	r4, [r3, #8]
 801195a:	2400      	movne	r4, #0
 801195c:	819c      	strhne	r4, [r3, #12]
 801195e:	7e84      	ldrb	r4, [r0, #26]
 8011960:	f044 0402 	orr.w	r4, r4, #2
 8011964:	7684      	strb	r4, [r0, #26]
 8011966:	f85d 4b04 	ldr.w	r4, [sp], #4
 801196a:	6a18      	ldr	r0, [r3, #32]
 801196c:	f000 bd2e 	b.w	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011970:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8011974:	e7c1      	b.n	80118fa <net::dhcp_bind()+0x22>
 8011976:	2201      	movs	r2, #1
 8011978:	e7bf      	b.n	80118fa <net::dhcp_bind()+0x22>
 801197a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801197e:	e7c9      	b.n	8011914 <net::dhcp_bind()+0x3c>
 8011980:	2201      	movs	r2, #1
 8011982:	e7c7      	b.n	8011914 <net::dhcp_bind()+0x3c>
 8011984:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8011988:	e7d3      	b.n	8011932 <net::dhcp_bind()+0x5a>
 801198a:	2201      	movs	r2, #1
 801198c:	e7d1      	b.n	8011932 <net::dhcp_bind()+0x5a>
 801198e:	6a1a      	ldr	r2, [r3, #32]
 8011990:	0611      	lsls	r1, r2, #24
 8011992:	d507      	bpl.n	80119a4 <net::dhcp_bind()+0xcc>
 8011994:	b2d2      	uxtb	r2, r2
 8011996:	2abf      	cmp	r2, #191	@ 0xbf
 8011998:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801199c:	bf88      	it	hi
 801199e:	f06f 417f 	mvnhi.w	r1, #4278190080	@ 0xff000000
 80119a2:	e7d4      	b.n	801194e <net::dhcp_bind()+0x76>
 80119a4:	21ff      	movs	r1, #255	@ 0xff
 80119a6:	e7d2      	b.n	801194e <net::dhcp_bind()+0x76>
 80119a8:	2000cc10 	andcs	ip, r0, r0, lsl ip

080119ac <net::message_init()>:
 80119ac:	b508      	push	{r3, lr}
 80119ae:	4b0c      	ldr	r3, [pc, #48]	@ (80119e0 <net::message_init()+0x34>)
 80119b0:	f44f 7209 	mov.w	r2, #548	@ 0x224
 80119b4:	2100      	movs	r1, #0
 80119b6:	4618      	mov	r0, r3
 80119b8:	f005 fe8c 	bl	80176d4 <memset>
 80119bc:	f240 1201 	movw	r2, #257	@ 0x101
 80119c0:	8002      	strh	r2, [r0, #0]
 80119c2:	2206      	movs	r2, #6
 80119c4:	7082      	strb	r2, [r0, #2]
 80119c6:	4a07      	ldr	r2, [pc, #28]	@ (80119e4 <net::message_init()+0x38>)
 80119c8:	6951      	ldr	r1, [r2, #20]
 80119ca:	8b12      	ldrh	r2, [r2, #24]
 80119cc:	8402      	strh	r2, [r0, #32]
 80119ce:	4a06      	ldr	r2, [pc, #24]	@ (80119e8 <net::message_init()+0x3c>)
 80119d0:	f8c0 20ec 	str.w	r2, [r0, #236]	@ 0xec
 80119d4:	f240 1235 	movw	r2, #309	@ 0x135
 80119d8:	f8a0 20f0 	strh.w	r2, [r0, #240]	@ 0xf0
 80119dc:	61c1      	str	r1, [r0, #28]
 80119de:	bd08      	pop	{r3, pc}
 80119e0:	10008000 	andne	r8, r0, r0
 80119e4:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80119e8:	63538263 	cmpvs	r3, #805306374	@ 0x30000006

080119ec <net::dhcp_discover()>:
 80119ec:	4a27      	ldr	r2, [pc, #156]	@ (8011a8c <net::dhcp_discover()+0xa0>)
 80119ee:	b513      	push	{r0, r1, r4, lr}
 80119f0:	6a14      	ldr	r4, [r2, #32]
 80119f2:	7a21      	ldrb	r1, [r4, #8]
 80119f4:	2906      	cmp	r1, #6
 80119f6:	bf1c      	itt	ne
 80119f8:	2106      	movne	r1, #6
 80119fa:	8121      	strhne	r1, [r4, #8]
 80119fc:	f04f 0300 	mov.w	r3, #0
 8011a00:	6a10      	ldr	r0, [r2, #32]
 8011a02:	6223      	str	r3, [r4, #32]
 8011a04:	bf18      	it	ne
 8011a06:	81a3      	strhne	r3, [r4, #12]
 8011a08:	7a43      	ldrb	r3, [r0, #9]
 8011a0a:	b923      	cbnz	r3, 8011a16 <net::dhcp_discover()+0x2a>
 8011a0c:	6843      	ldr	r3, [r0, #4]
 8011a0e:	ba1b      	rev	r3, r3
 8011a10:	3301      	adds	r3, #1
 8011a12:	ba1b      	rev	r3, r3
 8011a14:	6043      	str	r3, [r0, #4]
 8011a16:	491e      	ldr	r1, [pc, #120]	@ (8011a90 <net::dhcp_discover()+0xa4>)
 8011a18:	6843      	ldr	r3, [r0, #4]
 8011a1a:	604b      	str	r3, [r1, #4]
 8011a1c:	f643 5301 	movw	r3, #15617	@ 0x3d01
 8011a20:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8011a24:	f240 1307 	movw	r3, #263	@ 0x107
 8011a28:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8011a2c:	8a93      	ldrh	r3, [r2, #20]
 8011a2e:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8011a32:	8ad3      	ldrh	r3, [r2, #22]
 8011a34:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8011a38:	8b13      	ldrh	r3, [r2, #24]
 8011a3a:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8011a3e:	4a15      	ldr	r2, [pc, #84]	@ (8011a94 <net::dhcp_discover()+0xa8>)
 8011a40:	4b15      	ldr	r3, [pc, #84]	@ (8011a98 <net::dhcp_discover()+0xac>)
 8011a42:	e9c1 233f 	strd	r2, r3, [r1, #252]	@ 0xfc
 8011a46:	23ff      	movs	r3, #255	@ 0xff
 8011a48:	f881 3104 	strb.w	r3, [r1, #260]	@ 0x104
 8011a4c:	2343      	movs	r3, #67	@ 0x43
 8011a4e:	9300      	str	r3, [sp, #0]
 8011a50:	6800      	ldr	r0, [r0, #0]
 8011a52:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8011a56:	f240 1205 	movw	r2, #261	@ 0x105
 8011a5a:	f000 ffd3 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8011a5e:	7a63      	ldrb	r3, [r4, #9]
 8011a60:	2bff      	cmp	r3, #255	@ 0xff
 8011a62:	bf1c      	itt	ne
 8011a64:	3301      	addne	r3, #1
 8011a66:	7263      	strbne	r3, [r4, #9]
 8011a68:	7a62      	ldrb	r2, [r4, #9]
 8011a6a:	2a05      	cmp	r2, #5
 8011a6c:	bf9a      	itte	ls
 8011a6e:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8011a72:	4093      	lslls	r3, r2
 8011a74:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8011a78:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8011a7c:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8011a80:	fbb3 f3f2 	udiv	r3, r3, r2
 8011a84:	81a3      	strh	r3, [r4, #12]
 8011a86:	b002      	add	sp, #8
 8011a88:	bd10      	pop	{r4, pc}
 8011a8a:	bf00      	nop
 8011a8c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011a90:	10008000 	andne	r8, r0, r0
 8011a94:	03010637 	movweq	r0, #5687	@ 0x1637
 8011a98:	3b3a330f 	blcc	8e9e6dc <_sidata+0xe821f8>

08011a9c <net::memcpy_ip(unsigned char*, unsigned long)>:
 8011a9c:	6001      	str	r1, [r0, #0]
 8011a9e:	4770      	bx	lr

08011aa0 <net::send_request()>:
 8011aa0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011aa2:	4c31      	ldr	r4, [pc, #196]	@ (8011b68 <net::send_request()+0xc8>)
 8011aa4:	4d31      	ldr	r5, [pc, #196]	@ (8011b6c <net::send_request()+0xcc>)
 8011aa6:	f643 5303 	movw	r3, #15619	@ 0x3d03
 8011aaa:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8011aae:	f240 1307 	movw	r3, #263	@ 0x107
 8011ab2:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 8011ab6:	8aab      	ldrh	r3, [r5, #20]
 8011ab8:	f8a4 30f6 	strh.w	r3, [r4, #246]	@ 0xf6
 8011abc:	8aeb      	ldrh	r3, [r5, #22]
 8011abe:	f8a4 30f8 	strh.w	r3, [r4, #248]	@ 0xf8
 8011ac2:	8b2b      	ldrh	r3, [r5, #24]
 8011ac4:	6a2e      	ldr	r6, [r5, #32]
 8011ac6:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
 8011aca:	f240 4332 	movw	r3, #1074	@ 0x432
 8011ace:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
 8011ad2:	6a31      	ldr	r1, [r6, #32]
 8011ad4:	f104 00fe 	add.w	r0, r4, #254	@ 0xfe
 8011ad8:	f7ff ffe0 	bl	8011a9c <net::memcpy_ip(unsigned char*, unsigned long)>
 8011adc:	f240 4336 	movw	r3, #1078	@ 0x436
 8011ae0:	f8a4 3102 	strh.w	r3, [r4, #258]	@ 0x102
 8011ae4:	69f1      	ldr	r1, [r6, #28]
 8011ae6:	f504 7082 	add.w	r0, r4, #260	@ 0x104
 8011aea:	f7ff ffd7 	bl	8011a9c <net::memcpy_ip(unsigned char*, unsigned long)>
 8011aee:	230c      	movs	r3, #12
 8011af0:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
 8011af4:	69eb      	ldr	r3, [r5, #28]
 8011af6:	221e      	movs	r2, #30
 8011af8:	3b01      	subs	r3, #1
 8011afa:	f204 1509 	addw	r5, r4, #265	@ 0x109
 8011afe:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8011b02:	1c51      	adds	r1, r2, #1
 8011b04:	bb58      	cbnz	r0, 8011b5e <net::send_request()+0xbe>
 8011b06:	f1a2 031e 	sub.w	r3, r2, #30
 8011b0a:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 8011b0e:	18a3      	adds	r3, r4, r2
 8011b10:	440c      	add	r4, r1
 8011b12:	2037      	movs	r0, #55	@ 0x37
 8011b14:	2106      	movs	r1, #6
 8011b16:	f883 00ec 	strb.w	r0, [r3, #236]	@ 0xec
 8011b1a:	f884 10ec 	strb.w	r1, [r4, #236]	@ 0xec
 8011b1e:	f883 10f0 	strb.w	r1, [r3, #240]	@ 0xf0
 8011b22:	210f      	movs	r1, #15
 8011b24:	f883 10f1 	strb.w	r1, [r3, #241]	@ 0xf1
 8011b28:	213a      	movs	r1, #58	@ 0x3a
 8011b2a:	f883 10f2 	strb.w	r1, [r3, #242]	@ 0xf2
 8011b2e:	2001      	movs	r0, #1
 8011b30:	213b      	movs	r1, #59	@ 0x3b
 8011b32:	f883 00ee 	strb.w	r0, [r3, #238]	@ 0xee
 8011b36:	f883 10f3 	strb.w	r1, [r3, #243]	@ 0xf3
 8011b3a:	2003      	movs	r0, #3
 8011b3c:	21ff      	movs	r1, #255	@ 0xff
 8011b3e:	f883 10f4 	strb.w	r1, [r3, #244]	@ 0xf4
 8011b42:	f883 00ef 	strb.w	r0, [r3, #239]	@ 0xef
 8011b46:	2343      	movs	r3, #67	@ 0x43
 8011b48:	9300      	str	r3, [sp, #0]
 8011b4a:	32f5      	adds	r2, #245	@ 0xf5
 8011b4c:	4906      	ldr	r1, [pc, #24]	@ (8011b68 <net::send_request()+0xc8>)
 8011b4e:	6830      	ldr	r0, [r6, #0]
 8011b50:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8011b54:	b292      	uxth	r2, r2
 8011b56:	f000 ff55 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8011b5a:	b002      	add	sp, #8
 8011b5c:	bd70      	pop	{r4, r5, r6, pc}
 8011b5e:	f805 0f01 	strb.w	r0, [r5, #1]!
 8011b62:	460a      	mov	r2, r1
 8011b64:	e7cb      	b.n	8011afe <net::send_request()+0x5e>
 8011b66:	bf00      	nop
 8011b68:	10008000 	andne	r8, r0, r0
 8011b6c:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011b70 <net::dhcp_select()>:
 8011b70:	4b11      	ldr	r3, [pc, #68]	@ (8011bb8 <net::dhcp_select()+0x48>)
 8011b72:	b510      	push	{r4, lr}
 8011b74:	6a1c      	ldr	r4, [r3, #32]
 8011b76:	7a23      	ldrb	r3, [r4, #8]
 8011b78:	2b01      	cmp	r3, #1
 8011b7a:	bf1f      	itttt	ne
 8011b7c:	2301      	movne	r3, #1
 8011b7e:	8123      	strhne	r3, [r4, #8]
 8011b80:	2300      	movne	r3, #0
 8011b82:	81a3      	strhne	r3, [r4, #12]
 8011b84:	f7ff ff8c 	bl	8011aa0 <net::send_request()>
 8011b88:	7a63      	ldrb	r3, [r4, #9]
 8011b8a:	2bff      	cmp	r3, #255	@ 0xff
 8011b8c:	bf1c      	itt	ne
 8011b8e:	3301      	addne	r3, #1
 8011b90:	7263      	strbne	r3, [r4, #9]
 8011b92:	7a62      	ldrb	r2, [r4, #9]
 8011b94:	2a05      	cmp	r2, #5
 8011b96:	bf9d      	ittte	ls
 8011b98:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8011b9c:	4093      	lslls	r3, r2
 8011b9e:	b29b      	uxthls	r3, r3
 8011ba0:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8011ba4:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8011ba8:	b29b      	uxth	r3, r3
 8011baa:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8011bae:	fbb3 f3f2 	udiv	r3, r3, r2
 8011bb2:	81a3      	strh	r3, [r4, #12]
 8011bb4:	bd10      	pop	{r4, pc}
 8011bb6:	bf00      	nop
 8011bb8:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011bbc <net::dhcp_reboot()>:
 8011bbc:	4b12      	ldr	r3, [pc, #72]	@ (8011c08 <net::dhcp_reboot()+0x4c>)
 8011bbe:	b510      	push	{r4, lr}
 8011bc0:	6a1c      	ldr	r4, [r3, #32]
 8011bc2:	7a23      	ldrb	r3, [r4, #8]
 8011bc4:	2b03      	cmp	r3, #3
 8011bc6:	bf1f      	itttt	ne
 8011bc8:	2303      	movne	r3, #3
 8011bca:	8123      	strhne	r3, [r4, #8]
 8011bcc:	2300      	movne	r3, #0
 8011bce:	81a3      	strhne	r3, [r4, #12]
 8011bd0:	f7ff ff66 	bl	8011aa0 <net::send_request()>
 8011bd4:	7a63      	ldrb	r3, [r4, #9]
 8011bd6:	2bff      	cmp	r3, #255	@ 0xff
 8011bd8:	bf1c      	itt	ne
 8011bda:	3301      	addne	r3, #1
 8011bdc:	7263      	strbne	r3, [r4, #9]
 8011bde:	7a63      	ldrb	r3, [r4, #9]
 8011be0:	2b09      	cmp	r3, #9
 8011be2:	bf9f      	itttt	ls
 8011be4:	ebc3 1243 	rsbls	r2, r3, r3, lsl #5
 8011be8:	eb03 0382 	addls.w	r3, r3, r2, lsl #2
 8011bec:	00db      	lslls	r3, r3, #3
 8011bee:	b29b      	uxthls	r3, r3
 8011bf0:	bf88      	it	hi
 8011bf2:	f242 7310 	movwhi	r3, #10000	@ 0x2710
 8011bf6:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8011bfa:	b29b      	uxth	r3, r3
 8011bfc:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8011c00:	fbb3 f3f2 	udiv	r3, r3, r2
 8011c04:	81a3      	strh	r3, [r4, #12]
 8011c06:	bd10      	pop	{r4, pc}
 8011c08:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011c0c <net::memcpy_ip(unsigned char const*)>:
 8011c0c:	6800      	ldr	r0, [r0, #0]
 8011c0e:	4770      	bx	lr

08011c10 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
 8011c10:	4b0e      	ldr	r3, [pc, #56]	@ (8011c4c <net::dhcp_handle_ack(net::dhcp::Message const*)+0x3c>)
 8011c12:	b510      	push	{r4, lr}
 8011c14:	6a1c      	ldr	r4, [r3, #32]
 8011c16:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8011c18:	b913      	cbnz	r3, 8011c20 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x10>
 8011c1a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011c1c:	085b      	lsrs	r3, r3, #1
 8011c1e:	6323      	str	r3, [r4, #48]	@ 0x30
 8011c20:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8011c22:	b923      	cbnz	r3, 8011c2e <net::dhcp_handle_ack(net::dhcp::Message const*)+0x1e>
 8011c24:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011c26:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8011c2a:	08db      	lsrs	r3, r3, #3
 8011c2c:	6363      	str	r3, [r4, #52]	@ 0x34
 8011c2e:	3010      	adds	r0, #16
 8011c30:	f7ff ffec 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011c34:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8011c36:	7aa3      	ldrb	r3, [r4, #10]
 8011c38:	6220      	str	r0, [r4, #32]
 8011c3a:	b11a      	cbz	r2, 8011c44 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x34>
 8011c3c:	f043 0301 	orr.w	r3, r3, #1
 8011c40:	72a3      	strb	r3, [r4, #10]
 8011c42:	bd10      	pop	{r4, pc}
 8011c44:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8011c48:	e7fa      	b.n	8011c40 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x30>
 8011c4a:	bf00      	nop
 8011c4c:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011c50 <net::dhcp_inform()>:
 8011c50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c52:	2044      	movs	r0, #68	@ 0x44
 8011c54:	f000 fe52 	bl	80128fc <net::udp_begin(unsigned short)>
 8011c58:	4c16      	ldr	r4, [pc, #88]	@ (8011cb4 <net::dhcp_inform()+0x64>)
 8011c5a:	4d17      	ldr	r5, [pc, #92]	@ (8011cb8 <net::dhcp_inform()+0x68>)
 8011c5c:	4606      	mov	r6, r0
 8011c5e:	f7ff fea5 	bl	80119ac <net::message_init()>
 8011c62:	6829      	ldr	r1, [r5, #0]
 8011c64:	4620      	mov	r0, r4
 8011c66:	f7ff ff19 	bl	8011a9c <net::memcpy_ip(unsigned char*, unsigned long)>
 8011c6a:	f1a4 010c 	sub.w	r1, r4, #12
 8011c6e:	f643 5308 	movw	r3, #15624	@ 0x3d08
 8011c72:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8011c76:	f240 1307 	movw	r3, #263	@ 0x107
 8011c7a:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8011c7e:	8aab      	ldrh	r3, [r5, #20]
 8011c80:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8011c84:	8aeb      	ldrh	r3, [r5, #22]
 8011c86:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8011c8a:	8b2b      	ldrh	r3, [r5, #24]
 8011c8c:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8011c90:	23ff      	movs	r3, #255	@ 0xff
 8011c92:	f881 30fc 	strb.w	r3, [r1, #252]	@ 0xfc
 8011c96:	2343      	movs	r3, #67	@ 0x43
 8011c98:	9300      	str	r3, [sp, #0]
 8011c9a:	4630      	mov	r0, r6
 8011c9c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8011ca0:	22fd      	movs	r2, #253	@ 0xfd
 8011ca2:	f000 feaf 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8011ca6:	2044      	movs	r0, #68	@ 0x44
 8011ca8:	b002      	add	sp, #8
 8011caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cae:	f000 be3b 	b.w	8012928 <net::udp_end(unsigned short)>
 8011cb2:	bf00      	nop
 8011cb4:	1000800c 	andne	r8, r0, ip
 8011cb8:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011cbc <net::dhcp_start()>:
 8011cbc:	b570      	push	{r4, r5, r6, lr}
 8011cbe:	4d20      	ldr	r5, [pc, #128]	@ (8011d40 <net::dhcp_start()+0x84>)
 8011cc0:	6a2c      	ldr	r4, [r5, #32]
 8011cc2:	b96c      	cbnz	r4, 8011ce0 <net::dhcp_start()+0x24>
 8011cc4:	2048      	movs	r0, #72	@ 0x48
 8011cc6:	f006 fa3f 	bl	8018148 <operator new(unsigned int)>
 8011cca:	4b1e      	ldr	r3, [pc, #120]	@ (8011d44 <net::dhcp_start()+0x88>)
 8011ccc:	6228      	str	r0, [r5, #32]
 8011cce:	681b      	ldr	r3, [r3, #0]
 8011cd0:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 8011cd4:	2907      	cmp	r1, #7
 8011cd6:	4604      	mov	r4, r0
 8011cd8:	d919      	bls.n	8011d0e <net::dhcp_start()+0x52>
 8011cda:	481b      	ldr	r0, [pc, #108]	@ (8011d48 <net::dhcp_start()+0x8c>)
 8011cdc:	f003 fcd6 	bl	801568c <console_error>
 8011ce0:	2248      	movs	r2, #72	@ 0x48
 8011ce2:	2100      	movs	r1, #0
 8011ce4:	4620      	mov	r0, r4
 8011ce6:	f005 fcf5 	bl	80176d4 <memset>
 8011cea:	2044      	movs	r0, #68	@ 0x44
 8011cec:	f000 fe06 	bl	80128fc <net::udp_begin(unsigned short)>
 8011cf0:	6020      	str	r0, [r4, #0]
 8011cf2:	f7ff fe5b 	bl	80119ac <net::message_init()>
 8011cf6:	7ead      	ldrb	r5, [r5, #26]
 8011cf8:	f015 0501 	ands.w	r5, r5, #1
 8011cfc:	d11d      	bne.n	8011d3a <net::dhcp_start()+0x7e>
 8011cfe:	7a23      	ldrb	r3, [r4, #8]
 8011d00:	2b02      	cmp	r3, #2
 8011d02:	d002      	beq.n	8011d0a <net::dhcp_start()+0x4e>
 8011d04:	2302      	movs	r3, #2
 8011d06:	8123      	strh	r3, [r4, #8]
 8011d08:	81a5      	strh	r5, [r4, #12]
 8011d0a:	4628      	mov	r0, r5
 8011d0c:	bd70      	pop	{r4, r5, r6, pc}
 8011d0e:	f8d3 00a4 	ldr.w	r0, [r3, #164]	@ 0xa4
 8011d12:	4a0e      	ldr	r2, [pc, #56]	@ (8011d4c <net::dhcp_start()+0x90>)
 8011d14:	1c46      	adds	r6, r0, #1
 8011d16:	f8c3 60a4 	str.w	r6, [r3, #164]	@ 0xa4
 8011d1a:	6812      	ldr	r2, [r2, #0]
 8011d1c:	1c4e      	adds	r6, r1, #1
 8011d1e:	f8c3 60a0 	str.w	r6, [r3, #160]	@ 0xa0
 8011d22:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8011d26:	f502 72fa 	add.w	r2, r2, #500	@ 0x1f4
 8011d2a:	621a      	str	r2, [r3, #32]
 8011d2c:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8011d30:	e9c3 2009 	strd	r2, r0, [r3, #36]	@ 0x24
 8011d34:	4a06      	ldr	r2, [pc, #24]	@ (8011d50 <net::dhcp_start()+0x94>)
 8011d36:	62da      	str	r2, [r3, #44]	@ 0x2c
 8011d38:	e7d2      	b.n	8011ce0 <net::dhcp_start()+0x24>
 8011d3a:	f7ff fe57 	bl	80119ec <net::dhcp_discover()>
 8011d3e:	e7e4      	b.n	8011d0a <net::dhcp_start()+0x4e>
 8011d40:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011d44:	2000cdc0 	andcs	ip, r0, r0, asr #27
 8011d48:	08019020 	stmdaeq	r1, {r5, ip, pc}
 8011d4c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8011d50:	08011df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip}

08011d54 <net::dhcp_release_and_stop()>:
 8011d54:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011d58:	4d25      	ldr	r5, [pc, #148]	@ (8011df0 <net::dhcp_release_and_stop()+0x9c>)
 8011d5a:	6a2c      	ldr	r4, [r5, #32]
 8011d5c:	2c00      	cmp	r4, #0
 8011d5e:	d044      	beq.n	8011dea <net::dhcp_release_and_stop()+0x96>
 8011d60:	7a23      	ldrb	r3, [r4, #8]
 8011d62:	2b00      	cmp	r3, #0
 8011d64:	d041      	beq.n	8011dea <net::dhcp_release_and_stop()+0x96>
 8011d66:	2600      	movs	r6, #0
 8011d68:	69e7      	ldr	r7, [r4, #28]
 8011d6a:	61e6      	str	r6, [r4, #28]
 8011d6c:	2218      	movs	r2, #24
 8011d6e:	4631      	mov	r1, r6
 8011d70:	f104 0020 	add.w	r0, r4, #32
 8011d74:	f005 fcae 	bl	80176d4 <memset>
 8011d78:	6a2b      	ldr	r3, [r5, #32]
 8011d7a:	8266      	strh	r6, [r4, #18]
 8011d7c:	6166      	str	r6, [r4, #20]
 8011d7e:	8326      	strh	r6, [r4, #24]
 8011d80:	b363      	cbz	r3, 8011ddc <net::dhcp_release_and_stop()+0x88>
 8011d82:	7a1b      	ldrb	r3, [r3, #8]
 8011d84:	2b0a      	cmp	r3, #10
 8011d86:	d002      	beq.n	8011d8e <net::dhcp_release_and_stop()+0x3a>
 8011d88:	3b04      	subs	r3, #4
 8011d8a:	2b01      	cmp	r3, #1
 8011d8c:	d826      	bhi.n	8011ddc <net::dhcp_release_and_stop()+0x88>
 8011d8e:	2600      	movs	r6, #0
 8011d90:	8126      	strh	r6, [r4, #8]
 8011d92:	81a6      	strh	r6, [r4, #12]
 8011d94:	4c17      	ldr	r4, [pc, #92]	@ (8011df4 <net::dhcp_release_and_stop()+0xa0>)
 8011d96:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8011d9a:	f243 6307 	movw	r3, #13831	@ 0x3607
 8011d9e:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8011da2:	2304      	movs	r3, #4
 8011da4:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 8011da8:	f8d8 101c 	ldr.w	r1, [r8, #28]
 8011dac:	f104 00f5 	add.w	r0, r4, #245	@ 0xf5
 8011db0:	f7ff fe74 	bl	8011a9c <net::memcpy_ip(unsigned char*, unsigned long)>
 8011db4:	23ff      	movs	r3, #255	@ 0xff
 8011db6:	f884 30f9 	strb.w	r3, [r4, #249]	@ 0xf9
 8011dba:	2343      	movs	r3, #67	@ 0x43
 8011dbc:	9300      	str	r3, [sp, #0]
 8011dbe:	22fa      	movs	r2, #250	@ 0xfa
 8011dc0:	4621      	mov	r1, r4
 8011dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8011dc6:	463b      	mov	r3, r7
 8011dc8:	f000 fe1c 	bl	8012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8011dcc:	2044      	movs	r0, #68	@ 0x44
 8011dce:	f000 fdab 	bl	8012928 <net::udp_end(unsigned short)>
 8011dd2:	4632      	mov	r2, r6
 8011dd4:	4631      	mov	r1, r6
 8011dd6:	4630      	mov	r0, r6
 8011dd8:	f000 faf8 	bl	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011ddc:	6a28      	ldr	r0, [r5, #32]
 8011dde:	b110      	cbz	r0, 8011de6 <net::dhcp_release_and_stop()+0x92>
 8011de0:	2148      	movs	r1, #72	@ 0x48
 8011de2:	f006 f9af 	bl	8018144 <operator delete(void*, unsigned int)>
 8011de6:	2300      	movs	r3, #0
 8011de8:	622b      	str	r3, [r5, #32]
 8011dea:	b002      	add	sp, #8
 8011dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011df0:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8011df4:	10008000 	andne	r8, r0, r0

08011df8 <net::dhcp_fine_tmr()>:
 8011df8:	b508      	push	{r3, lr}
 8011dfa:	4b21      	ldr	r3, [pc, #132]	@ (8011e80 <net::dhcp_fine_tmr()+0x88>)
 8011dfc:	6a1b      	ldr	r3, [r3, #32]
 8011dfe:	b123      	cbz	r3, 8011e0a <net::dhcp_fine_tmr()+0x12>
 8011e00:	899a      	ldrh	r2, [r3, #12]
 8011e02:	2a01      	cmp	r2, #1
 8011e04:	d902      	bls.n	8011e0c <net::dhcp_fine_tmr()+0x14>
 8011e06:	3a01      	subs	r2, #1
 8011e08:	819a      	strh	r2, [r3, #12]
 8011e0a:	bd08      	pop	{r3, pc}
 8011e0c:	d1fd      	bne.n	8011e0a <net::dhcp_fine_tmr()+0x12>
 8011e0e:	2200      	movs	r2, #0
 8011e10:	819a      	strh	r2, [r3, #12]
 8011e12:	7a1a      	ldrb	r2, [r3, #8]
 8011e14:	3a01      	subs	r2, #1
 8011e16:	2a0b      	cmp	r2, #11
 8011e18:	d8f7      	bhi.n	8011e0a <net::dhcp_fine_tmr()+0x12>
 8011e1a:	a101      	add	r1, pc, #4	@ (adr r1, 8011e20 <net::dhcp_fine_tmr()+0x28>)
 8011e1c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8011e20:	08011e51 	stmdaeq	r1, {r0, r4, r6, r9, sl, fp, ip}
 8011e24:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e28:	08011e6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, fp, ip}
 8011e2c:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e30:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e34:	08011e79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, fp, ip}
 8011e38:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e3c:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e40:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e44:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e48:	08011e0b 	stmdaeq	r1, {r0, r1, r3, r9, sl, fp, ip}
 8011e4c:	08011e79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, fp, ip}
 8011e50:	7a5b      	ldrb	r3, [r3, #9]
 8011e52:	2b05      	cmp	r3, #5
 8011e54:	d803      	bhi.n	8011e5e <net::dhcp_fine_tmr()+0x66>
 8011e56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e5a:	f7ff be89 	b.w	8011b70 <net::dhcp_select()>
 8011e5e:	f7ff ff79 	bl	8011d54 <net::dhcp_release_and_stop()>
 8011e62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e66:	f7ff bf29 	b.w	8011cbc <net::dhcp_start()>
 8011e6a:	7a5b      	ldrb	r3, [r3, #9]
 8011e6c:	2b01      	cmp	r3, #1
 8011e6e:	d803      	bhi.n	8011e78 <net::dhcp_fine_tmr()+0x80>
 8011e70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e74:	f7ff bea2 	b.w	8011bbc <net::dhcp_reboot()>
 8011e78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e7c:	f7ff bdb6 	b.w	80119ec <net::dhcp_discover()>
 8011e80:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011e84 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
 8011e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011e88:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 8011fdc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x158>
 8011e8c:	f8d8 5020 	ldr.w	r5, [r8, #32]
 8011e90:	4606      	mov	r6, r0
 8011e92:	4689      	mov	r9, r1
 8011e94:	2218      	movs	r2, #24
 8011e96:	2100      	movs	r1, #0
 8011e98:	f105 0020 	add.w	r0, r5, #32
 8011e9c:	2700      	movs	r7, #0
 8011e9e:	f106 04f0 	add.w	r4, r6, #240	@ 0xf0
 8011ea2:	f005 fc17 	bl	80176d4 <memset>
 8011ea6:	44a1      	add	r9, r4
 8011ea8:	61ef      	str	r7, [r5, #28]
 8011eaa:	454c      	cmp	r4, r9
 8011eac:	d318      	bcc.n	8011ee0 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x5c>
 8011eae:	2f02      	cmp	r7, #2
 8011eb0:	d167      	bne.n	8011f82 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xfe>
 8011eb2:	3610      	adds	r6, #16
 8011eb4:	4630      	mov	r0, r6
 8011eb6:	f7ff fea9 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011eba:	7a2b      	ldrb	r3, [r5, #8]
 8011ebc:	6228      	str	r0, [r5, #32]
 8011ebe:	2b06      	cmp	r3, #6
 8011ec0:	d170      	bne.n	8011fa4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011ec2:	f8d8 4020 	ldr.w	r4, [r8, #32]
 8011ec6:	69e3      	ldr	r3, [r4, #28]
 8011ec8:	2b00      	cmp	r3, #0
 8011eca:	d06b      	beq.n	8011fa4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011ecc:	2300      	movs	r3, #0
 8011ece:	81a3      	strh	r3, [r4, #12]
 8011ed0:	4630      	mov	r0, r6
 8011ed2:	f7ff fe9b 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011ed6:	6220      	str	r0, [r4, #32]
 8011ed8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011edc:	f7ff be48 	b.w	8011b70 <net::dhcp_select()>
 8011ee0:	7823      	ldrb	r3, [r4, #0]
 8011ee2:	2b3b      	cmp	r3, #59	@ 0x3b
 8011ee4:	d822      	bhi.n	8011f2c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xa8>
 8011ee6:	2b32      	cmp	r3, #50	@ 0x32
 8011ee8:	d808      	bhi.n	8011efc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x78>
 8011eea:	2b01      	cmp	r3, #1
 8011eec:	d027      	beq.n	8011f3e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xba>
 8011eee:	2b03      	cmp	r3, #3
 8011ef0:	d02b      	beq.n	8011f4a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc6>
 8011ef2:	b1fb      	cbz	r3, 8011f34 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb0>
 8011ef4:	7863      	ldrb	r3, [r4, #1]
 8011ef6:	3302      	adds	r3, #2
 8011ef8:	441c      	add	r4, r3
 8011efa:	e7d6      	b.n	8011eaa <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011efc:	3b33      	subs	r3, #51	@ 0x33
 8011efe:	2b08      	cmp	r3, #8
 8011f00:	d8f8      	bhi.n	8011ef4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8011f02:	a201      	add	r2, pc, #4	@ (adr r2, 8011f08 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x84>)
 8011f04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011f08:	08011f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip}
 8011f0c:	08011ef5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip}
 8011f10:	08011f39 	stmdaeq	r1, {r0, r3, r4, r5, r8, r9, sl, fp, ip}
 8011f14:	08011f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp, ip}
 8011f18:	08011ef5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip}
 8011f1c:	08011ef5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip}
 8011f20:	08011ef5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip}
 8011f24:	08011f6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip}
 8011f28:	08011f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip}
 8011f2c:	2bff      	cmp	r3, #255	@ 0xff
 8011f2e:	d1e1      	bne.n	8011ef4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8011f30:	464c      	mov	r4, r9
 8011f32:	e7ba      	b.n	8011eaa <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011f34:	3401      	adds	r4, #1
 8011f36:	e7b8      	b.n	8011eaa <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011f38:	78a7      	ldrb	r7, [r4, #2]
 8011f3a:	3403      	adds	r4, #3
 8011f3c:	e7b5      	b.n	8011eaa <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011f3e:	1ca0      	adds	r0, r4, #2
 8011f40:	f7ff fe64 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f44:	6268      	str	r0, [r5, #36]	@ 0x24
 8011f46:	3406      	adds	r4, #6
 8011f48:	e7af      	b.n	8011eaa <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011f4a:	1ca0      	adds	r0, r4, #2
 8011f4c:	f7ff fe5e 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f50:	62a8      	str	r0, [r5, #40]	@ 0x28
 8011f52:	e7f8      	b.n	8011f46 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8011f54:	1ca0      	adds	r0, r4, #2
 8011f56:	f7ff fe59 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f5a:	61e8      	str	r0, [r5, #28]
 8011f5c:	e7f3      	b.n	8011f46 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8011f5e:	1ca0      	adds	r0, r4, #2
 8011f60:	f7ff fe54 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f64:	ba00      	rev	r0, r0
 8011f66:	62e8      	str	r0, [r5, #44]	@ 0x2c
 8011f68:	e7ed      	b.n	8011f46 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8011f6a:	1ca0      	adds	r0, r4, #2
 8011f6c:	f7ff fe4e 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f70:	ba00      	rev	r0, r0
 8011f72:	6328      	str	r0, [r5, #48]	@ 0x30
 8011f74:	e7e7      	b.n	8011f46 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8011f76:	1ca0      	adds	r0, r4, #2
 8011f78:	f7ff fe48 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8011f7c:	ba00      	rev	r0, r0
 8011f7e:	6368      	str	r0, [r5, #52]	@ 0x34
 8011f80:	e7e1      	b.n	8011f46 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8011f82:	2f05      	cmp	r7, #5
 8011f84:	d110      	bne.n	8011fa8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x124>
 8011f86:	7a2b      	ldrb	r3, [r5, #8]
 8011f88:	f003 02fd 	and.w	r2, r3, #253	@ 0xfd
 8011f8c:	2a01      	cmp	r2, #1
 8011f8e:	d106      	bne.n	8011f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x11a>
 8011f90:	4630      	mov	r0, r6
 8011f92:	f7ff fe3d 	bl	8011c10 <net::dhcp_handle_ack(net::dhcp::Message const*)>
 8011f96:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011f9a:	f7ff bc9d 	b.w	80118d8 <net::dhcp_bind()>
 8011f9e:	3b04      	subs	r3, #4
 8011fa0:	2b01      	cmp	r3, #1
 8011fa2:	d9f5      	bls.n	8011f90 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x10c>
 8011fa4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011fa8:	2f06      	cmp	r7, #6
 8011faa:	d1fb      	bne.n	8011fa4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011fac:	7a2b      	ldrb	r3, [r5, #8]
 8011fae:	1eda      	subs	r2, r3, #3
 8011fb0:	2a02      	cmp	r2, #2
 8011fb2:	d901      	bls.n	8011fb8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x134>
 8011fb4:	2b01      	cmp	r3, #1
 8011fb6:	d1f5      	bne.n	8011fa4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011fb8:	f8d8 3020 	ldr.w	r3, [r8, #32]
 8011fbc:	7a1a      	ldrb	r2, [r3, #8]
 8011fbe:	2a0c      	cmp	r2, #12
 8011fc0:	bf1f      	itttt	ne
 8011fc2:	220c      	movne	r2, #12
 8011fc4:	811a      	strhne	r2, [r3, #8]
 8011fc6:	2200      	movne	r2, #0
 8011fc8:	819a      	strhne	r2, [r3, #12]
 8011fca:	2200      	movs	r2, #0
 8011fcc:	4611      	mov	r1, r2
 8011fce:	4610      	mov	r0, r2
 8011fd0:	f000 f9fc 	bl	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011fd4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011fd8:	f7ff bd08 	b.w	80119ec <net::dhcp_discover()>
 8011fdc:	2000cc10 	andcs	ip, r0, r0, lsl ip

08011fe0 <net::igmp_send_report(unsigned long)>:
 8011fe0:	4a19      	ldr	r2, [pc, #100]	@ (8012048 <net::igmp_send_report(unsigned long)+0x68>)
 8011fe2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011fe4:	f3c0 2106 	ubfx	r1, r0, #8, #7
 8011fe8:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8011fec:	4c17      	ldr	r4, [pc, #92]	@ (801204c <net::igmp_send_report(unsigned long)+0x6c>)
 8011fee:	70d1      	strb	r1, [r2, #3]
 8011ff0:	7113      	strb	r3, [r2, #4]
 8011ff2:	f3c0 6107 	ubfx	r1, r0, #24, #8
 8011ff6:	4613      	mov	r3, r2
 8011ff8:	7151      	strb	r1, [r2, #5]
 8011ffa:	4605      	mov	r5, r0
 8011ffc:	4622      	mov	r2, r4
 8011ffe:	f103 0c06 	add.w	ip, r3, #6
 8012002:	f813 1b01 	ldrb.w	r1, [r3], #1
 8012006:	f802 1b01 	strb.w	r1, [r2], #1
 801200a:	4563      	cmp	r3, ip
 801200c:	d1f9      	bne.n	8012002 <net::igmp_send_report(unsigned long)+0x22>
 801200e:	4e10      	ldr	r6, [pc, #64]	@ (8012050 <net::igmp_send_report(unsigned long)+0x70>)
 8012010:	4810      	ldr	r0, [pc, #64]	@ (8012054 <net::igmp_send_report(unsigned long)+0x74>)
 8012012:	8833      	ldrh	r3, [r6, #0]
 8012014:	8263      	strh	r3, [r4, #18]
 8012016:	2700      	movs	r7, #0
 8012018:	2118      	movs	r1, #24
 801201a:	f8c4 501e 	str.w	r5, [r4, #30]
 801201e:	8327      	strh	r7, [r4, #24]
 8012020:	f000 f90e 	bl	8012240 <net::net_chksum(void const*, unsigned long)>
 8012024:	2120      	movs	r1, #32
 8012026:	8320      	strh	r0, [r4, #24]
 8012028:	480a      	ldr	r0, [pc, #40]	@ (8012054 <net::igmp_send_report(unsigned long)+0x74>)
 801202a:	f8c4 502a 	str.w	r5, [r4, #42]	@ 0x2a
 801202e:	8527      	strh	r7, [r4, #40]	@ 0x28
 8012030:	f000 f906 	bl	8012240 <net::net_chksum(void const*, unsigned long)>
 8012034:	212e      	movs	r1, #46	@ 0x2e
 8012036:	4603      	mov	r3, r0
 8012038:	4804      	ldr	r0, [pc, #16]	@ (801204c <net::igmp_send_report(unsigned long)+0x6c>)
 801203a:	8523      	strh	r3, [r4, #40]	@ 0x28
 801203c:	f001 f950 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 8012040:	8833      	ldrh	r3, [r6, #0]
 8012042:	3301      	adds	r3, #1
 8012044:	8033      	strh	r3, [r6, #0]
 8012046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012048:	10008348 	andne	r8, r0, r8, asr #6
 801204c:	10008380 	andne	r8, r0, r0, lsl #7
 8012050:	10008224 	andne	r8, r0, r4, lsr #4
 8012054:	1000838e 	andne	r8, r0, lr, lsl #7

08012058 <net::igmp_timer()>:
 8012058:	b570      	push	{r4, r5, r6, lr}
 801205a:	4c12      	ldr	r4, [pc, #72]	@ (80120a4 <net::igmp_timer()+0x4c>)
 801205c:	4e12      	ldr	r6, [pc, #72]	@ (80120a8 <net::igmp_timer()+0x50>)
 801205e:	f504 7590 	add.w	r5, r4, #288	@ 0x120
 8012062:	e002      	b.n	801206a <net::igmp_timer()+0x12>
 8012064:	3408      	adds	r4, #8
 8012066:	42ac      	cmp	r4, r5
 8012068:	d01a      	beq.n	80120a0 <net::igmp_timer()+0x48>
 801206a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801206e:	1e53      	subs	r3, r2, #1
 8012070:	b29b      	uxth	r3, r3
 8012072:	2a00      	cmp	r2, #0
 8012074:	d0f6      	beq.n	8012064 <net::igmp_timer()+0xc>
 8012076:	f824 3c04 	strh.w	r3, [r4, #-4]
 801207a:	2b00      	cmp	r3, #0
 801207c:	d1f2      	bne.n	8012064 <net::igmp_timer()+0xc>
 801207e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012082:	2b01      	cmp	r3, #1
 8012084:	d1ee      	bne.n	8012064 <net::igmp_timer()+0xc>
 8012086:	f854 0c08 	ldr.w	r0, [r4, #-8]
 801208a:	42b0      	cmp	r0, r6
 801208c:	f04f 0302 	mov.w	r3, #2
 8012090:	d0e8      	beq.n	8012064 <net::igmp_timer()+0xc>
 8012092:	f804 3c02 	strb.w	r3, [r4, #-2]
 8012096:	3408      	adds	r4, #8
 8012098:	f7ff ffa2 	bl	8011fe0 <net::igmp_send_report(unsigned long)>
 801209c:	42ac      	cmp	r4, r5
 801209e:	d1e4      	bne.n	801206a <net::igmp_timer()+0x12>
 80120a0:	bd70      	pop	{r4, r5, r6, pc}
 80120a2:	bf00      	nop
 80120a4:	10008230 	andne	r8, r0, r0, lsr r2
 80120a8:	010000e0 	smlatteq	r0, r0, r0, r0

080120ac <net::igmp_set_ip()>:
 80120ac:	4b04      	ldr	r3, [pc, #16]	@ (80120c0 <net::igmp_set_ip()+0x14>)
 80120ae:	4905      	ldr	r1, [pc, #20]	@ (80120c4 <net::igmp_set_ip()+0x18>)
 80120b0:	4a05      	ldr	r2, [pc, #20]	@ (80120c8 <net::igmp_set_ip()+0x1c>)
 80120b2:	681b      	ldr	r3, [r3, #0]
 80120b4:	f8c1 301a 	str.w	r3, [r1, #26]
 80120b8:	f8c2 301a 	str.w	r3, [r2, #26]
 80120bc:	4770      	bx	lr
 80120be:	bf00      	nop
 80120c0:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80120c4:	10008380 	andne	r8, r0, r0, lsl #7
 80120c8:	10008350 	andne	r8, r0, r0, asr r3

080120cc <net::igmp_join(unsigned long)>:
 80120cc:	f000 03e0 	and.w	r3, r0, #224	@ 0xe0
 80120d0:	2be0      	cmp	r3, #224	@ 0xe0
 80120d2:	d10c      	bne.n	80120ee <net::igmp_join(unsigned long)+0x22>
 80120d4:	490b      	ldr	r1, [pc, #44]	@ (8012104 <net::igmp_join(unsigned long)+0x38>)
 80120d6:	2300      	movs	r3, #0
 80120d8:	e003      	b.n	80120e2 <net::igmp_join(unsigned long)+0x16>
 80120da:	b14a      	cbz	r2, 80120f0 <net::igmp_join(unsigned long)+0x24>
 80120dc:	3301      	adds	r3, #1
 80120de:	2b24      	cmp	r3, #36	@ 0x24
 80120e0:	d005      	beq.n	80120ee <net::igmp_join(unsigned long)+0x22>
 80120e2:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 80120e6:	4282      	cmp	r2, r0
 80120e8:	eb01 0cc3 	add.w	ip, r1, r3, lsl #3
 80120ec:	d1f5      	bne.n	80120da <net::igmp_join(unsigned long)+0xe>
 80120ee:	4770      	bx	lr
 80120f0:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
 80120f4:	2201      	movs	r2, #1
 80120f6:	2302      	movs	r3, #2
 80120f8:	f88c 2006 	strb.w	r2, [ip, #6]
 80120fc:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012100:	f7ff bf6e 	b.w	8011fe0 <net::igmp_send_report(unsigned long)>
 8012104:	10008228 	andne	r8, r0, r8, lsr #4

08012108 <net::igmp_leave(unsigned long)>:
 8012108:	b570      	push	{r4, r5, r6, lr}
 801210a:	4c0f      	ldr	r4, [pc, #60]	@ (8012148 <net::igmp_leave(unsigned long)+0x40>)
 801210c:	4602      	mov	r2, r0
 801210e:	f504 7190 	add.w	r1, r4, #288	@ 0x120
 8012112:	e002      	b.n	801211a <net::igmp_leave(unsigned long)+0x12>
 8012114:	3408      	adds	r4, #8
 8012116:	428c      	cmp	r4, r1
 8012118:	d014      	beq.n	8012144 <net::igmp_leave(unsigned long)+0x3c>
 801211a:	6823      	ldr	r3, [r4, #0]
 801211c:	4293      	cmp	r3, r2
 801211e:	d1f9      	bne.n	8012114 <net::igmp_leave(unsigned long)+0xc>
 8012120:	4e0a      	ldr	r6, [pc, #40]	@ (801214c <net::igmp_leave(unsigned long)+0x44>)
 8012122:	480b      	ldr	r0, [pc, #44]	@ (8012150 <net::igmp_leave(unsigned long)+0x48>)
 8012124:	8833      	ldrh	r3, [r6, #0]
 8012126:	8243      	strh	r3, [r0, #18]
 8012128:	2500      	movs	r5, #0
 801212a:	212e      	movs	r1, #46	@ 0x2e
 801212c:	f8c0 202a 	str.w	r2, [r0, #42]	@ 0x2a
 8012130:	8305      	strh	r5, [r0, #24]
 8012132:	8505      	strh	r5, [r0, #40]	@ 0x28
 8012134:	f001 f8d4 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 8012138:	8833      	ldrh	r3, [r6, #0]
 801213a:	6025      	str	r5, [r4, #0]
 801213c:	3301      	adds	r3, #1
 801213e:	8033      	strh	r3, [r6, #0]
 8012140:	71a5      	strb	r5, [r4, #6]
 8012142:	80a5      	strh	r5, [r4, #4]
 8012144:	bd70      	pop	{r4, r5, r6, pc}
 8012146:	bf00      	nop
 8012148:	10008228 	andne	r8, r0, r8, lsr #4
 801214c:	10008224 	andne	r8, r0, r4, lsr #4
 8012150:	10008350 	andne	r8, r0, r0, asr r3

08012154 <net::igmp_report_groups()>:
 8012154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012156:	4c14      	ldr	r4, [pc, #80]	@ (80121a8 <net::igmp_report_groups()+0x54>)
 8012158:	4d14      	ldr	r5, [pc, #80]	@ (80121ac <net::igmp_report_groups()+0x58>)
 801215a:	f504 7790 	add.w	r7, r4, #288	@ 0x120
 801215e:	2601      	movs	r6, #1
 8012160:	e002      	b.n	8012168 <net::igmp_report_groups()+0x14>
 8012162:	3408      	adds	r4, #8
 8012164:	42bc      	cmp	r4, r7
 8012166:	d01e      	beq.n	80121a6 <net::igmp_report_groups()+0x52>
 8012168:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801216c:	2b02      	cmp	r3, #2
 801216e:	d007      	beq.n	8012180 <net::igmp_report_groups()+0x2c>
 8012170:	2b01      	cmp	r3, #1
 8012172:	d1f6      	bne.n	8012162 <net::igmp_report_groups()+0xe>
 8012174:	f834 3c04 	ldrh.w	r3, [r4, #-4]
 8012178:	3b01      	subs	r3, #1
 801217a:	b29b      	uxth	r3, r3
 801217c:	2b04      	cmp	r3, #4
 801217e:	d9f0      	bls.n	8012162 <net::igmp_report_groups()+0xe>
 8012180:	f005 fdea 	bl	8017d58 <random>
 8012184:	fba5 3200 	umull	r3, r2, r5, r0
 8012188:	f022 0303 	bic.w	r3, r2, #3
 801218c:	eb03 0392 	add.w	r3, r3, r2, lsr #2
 8012190:	1ac0      	subs	r0, r0, r3
 8012192:	2801      	cmp	r0, #1
 8012194:	bf38      	it	cc
 8012196:	2001      	movcc	r0, #1
 8012198:	f824 0c04 	strh.w	r0, [r4, #-4]
 801219c:	f804 6c02 	strb.w	r6, [r4, #-2]
 80121a0:	3408      	adds	r4, #8
 80121a2:	42bc      	cmp	r4, r7
 80121a4:	d1e0      	bne.n	8012168 <net::igmp_report_groups()+0x14>
 80121a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121a8:	10008230 	andne	r8, r0, r0, lsr r2
 80121ac:	cccccccd 	stclgt	12, cr12, [ip], {205}	@ 0xcd

080121b0 <net::primary_ip_conflict_callback(net::acd::Callback)>:
 80121b0:	b140      	cbz	r0, 80121c4 <net::primary_ip_conflict_callback(net::acd::Callback)+0x14>
 80121b2:	2802      	cmp	r0, #2
 80121b4:	d000      	beq.n	80121b8 <net::primary_ip_conflict_callback(net::acd::Callback)+0x8>
 80121b6:	4770      	bx	lr
 80121b8:	4a10      	ldr	r2, [pc, #64]	@ (80121fc <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 80121ba:	7e93      	ldrb	r3, [r2, #26]
 80121bc:	f023 0308 	bic.w	r3, r3, #8
 80121c0:	7693      	strb	r3, [r2, #26]
 80121c2:	4770      	bx	lr
 80121c4:	4b0e      	ldr	r3, [pc, #56]	@ (8012200 <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>)
 80121c6:	b510      	push	{r4, lr}
 80121c8:	4c0c      	ldr	r4, [pc, #48]	@ (80121fc <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 80121ca:	6818      	ldr	r0, [r3, #0]
 80121cc:	6923      	ldr	r3, [r4, #16]
 80121ce:	4298      	cmp	r0, r3
 80121d0:	d008      	beq.n	80121e4 <net::primary_ip_conflict_callback(net::acd::Callback)+0x34>
 80121d2:	f000 f8c1 	bl	8012358 <net::netif_set_ipaddr(net::ip_addr)>
 80121d6:	f7ff fd3b 	bl	8011c50 <net::dhcp_inform()>
 80121da:	7ea3      	ldrb	r3, [r4, #26]
 80121dc:	f043 0308 	orr.w	r3, r3, #8
 80121e0:	76a3      	strb	r3, [r4, #26]
 80121e2:	bd10      	pop	{r4, pc}
 80121e4:	4602      	mov	r2, r0
 80121e6:	21ff      	movs	r1, #255	@ 0xff
 80121e8:	f000 f8f0 	bl	80123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 80121ec:	f7ff fd30 	bl	8011c50 <net::dhcp_inform()>
 80121f0:	7ea3      	ldrb	r3, [r4, #26]
 80121f2:	f043 0308 	orr.w	r3, r3, #8
 80121f6:	76a3      	strb	r3, [r4, #26]
 80121f8:	bd10      	pop	{r4, pc}
 80121fa:	bf00      	nop
 80121fc:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8012200:	2000cbfc 	strdcs	ip, [r0], -ip	@ <UNPREDICTABLE>

08012204 <net::net_shutdown()>:
 8012204:	f000 b92e 	b.w	8012464 <net::netif_set_link_down()>

08012208 <net::net_set_primary_ip(net::ip_addr)>:
 8012208:	b510      	push	{r4, lr}
 801220a:	4604      	mov	r4, r0
 801220c:	f7ff fda2 	bl	8011d54 <net::dhcp_release_and_stop()>
 8012210:	4908      	ldr	r1, [pc, #32]	@ (8012234 <net::net_set_primary_ip(net::ip_addr)+0x2c>)
 8012212:	4809      	ldr	r0, [pc, #36]	@ (8012238 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8012214:	f001 f9e0 	bl	80135d8 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 8012218:	b934      	cbnz	r4, 8012228 <net::net_set_primary_ip(net::ip_addr)+0x20>
 801221a:	4b08      	ldr	r3, [pc, #32]	@ (801223c <net::net_set_primary_ip(net::ip_addr)+0x34>)
 801221c:	4806      	ldr	r0, [pc, #24]	@ (8012238 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 801221e:	6919      	ldr	r1, [r3, #16]
 8012220:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012224:	f001 b8a2 	b.w	801336c <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8012228:	4621      	mov	r1, r4
 801222a:	4803      	ldr	r0, [pc, #12]	@ (8012238 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 801222c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012230:	f001 b89c 	b.w	801336c <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8012234:	080121b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sp}
 8012238:	2000cbfc 	strdcs	ip, [r0], -ip	@ <UNPREDICTABLE>
 801223c:	2000cc10 	andcs	ip, r0, r0, lsl ip

08012240 <net::net_chksum(void const*, unsigned long)>:
 8012240:	2901      	cmp	r1, #1
 8012242:	d91f      	bls.n	8012284 <net::net_chksum(void const*, unsigned long)+0x44>
 8012244:	f1a1 0c02 	sub.w	ip, r1, #2
 8012248:	f02c 0c01 	bic.w	ip, ip, #1
 801224c:	f10c 0c02 	add.w	ip, ip, #2
 8012250:	4484      	add	ip, r0
 8012252:	2300      	movs	r3, #0
 8012254:	f830 2b02 	ldrh.w	r2, [r0], #2
 8012258:	4560      	cmp	r0, ip
 801225a:	4413      	add	r3, r2
 801225c:	d1fa      	bne.n	8012254 <net::net_chksum(void const*, unsigned long)+0x14>
 801225e:	07ca      	lsls	r2, r1, #31
 8012260:	d40a      	bmi.n	8012278 <net::net_chksum(void const*, unsigned long)+0x38>
 8012262:	0c1a      	lsrs	r2, r3, #16
 8012264:	d005      	beq.n	8012272 <net::net_chksum(void const*, unsigned long)+0x32>
 8012266:	fa12 f383 	uxtah	r3, r2, r3
 801226a:	0c1a      	lsrs	r2, r3, #16
 801226c:	bf1c      	itt	ne
 801226e:	b29b      	uxthne	r3, r3
 8012270:	3301      	addne	r3, #1
 8012272:	43db      	mvns	r3, r3
 8012274:	b298      	uxth	r0, r3
 8012276:	4770      	bx	lr
 8012278:	7802      	ldrb	r2, [r0, #0]
 801227a:	0212      	lsls	r2, r2, #8
 801227c:	ba52      	rev16	r2, r2
 801227e:	fa13 f382 	uxtah	r3, r3, r2
 8012282:	e7ee      	b.n	8012262 <net::net_chksum(void const*, unsigned long)+0x22>
 8012284:	b121      	cbz	r1, 8012290 <net::net_chksum(void const*, unsigned long)+0x50>
 8012286:	7803      	ldrb	r3, [r0, #0]
 8012288:	021b      	lsls	r3, r3, #8
 801228a:	ba5b      	rev16	r3, r3
 801228c:	b29b      	uxth	r3, r3
 801228e:	e7f0      	b.n	8012272 <net::net_chksum(void const*, unsigned long)+0x32>
 8012290:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8012294:	4770      	bx	lr
 8012296:	bf00      	nop

08012298 <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 8012298:	4770      	bx	lr
	...

0801229c <net::netif_do_update_globals()>:
 801229c:	4908      	ldr	r1, [pc, #32]	@ (80122c0 <net::netif_do_update_globals()+0x24>)
 801229e:	e9d1 3200 	ldrd	r3, r2, [r1]
 80122a2:	b410      	push	{r4}
 80122a4:	ea63 0402 	orn	r4, r3, r2
 80122a8:	43d0      	mvns	r0, r2
 80122aa:	60cc      	str	r4, [r1, #12]
 80122ac:	4013      	ands	r3, r2
 80122ae:	4905      	ldr	r1, [pc, #20]	@ (80122c4 <net::netif_do_update_globals()+0x28>)
 80122b0:	4a05      	ldr	r2, [pc, #20]	@ (80122c8 <net::netif_do_update_globals()+0x2c>)
 80122b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80122b6:	6008      	str	r0, [r1, #0]
 80122b8:	6013      	str	r3, [r2, #0]
 80122ba:	f001 bae3 	b.w	8013884 <net::ip_set_ip()>
 80122be:	bf00      	nop
 80122c0:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80122c4:	2000cbf8 	strdcs	ip, [r0], -r8
 80122c8:	2000cbf4 	strdcs	ip, [r0], -r4

080122cc <net::netif_issue_reports()>:
 80122cc:	4b04      	ldr	r3, [pc, #16]	@ (80122e0 <net::netif_issue_reports()+0x14>)
 80122ce:	7e9a      	ldrb	r2, [r3, #26]
 80122d0:	07d2      	lsls	r2, r2, #31
 80122d2:	d503      	bpl.n	80122dc <net::netif_issue_reports()+0x10>
 80122d4:	681b      	ldr	r3, [r3, #0]
 80122d6:	b10b      	cbz	r3, 80122dc <net::netif_issue_reports()+0x10>
 80122d8:	f7ff bf3c 	b.w	8012154 <net::igmp_report_groups()>
 80122dc:	4770      	bx	lr
 80122de:	bf00      	nop
 80122e0:	2000cc10 	andcs	ip, r0, r0, lsl ip

080122e4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
 80122e4:	b570      	push	{r4, r5, r6, lr}
 80122e6:	4e0b      	ldr	r6, [pc, #44]	@ (8012314 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x30>)
 80122e8:	6833      	ldr	r3, [r6, #0]
 80122ea:	4283      	cmp	r3, r0
 80122ec:	4604      	mov	r4, r0
 80122ee:	460d      	mov	r5, r1
 80122f0:	d00d      	beq.n	801230e <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x2a>
 80122f2:	600b      	str	r3, [r1, #0]
 80122f4:	f001 fac6 	bl	8013884 <net::ip_set_ip()>
 80122f8:	6828      	ldr	r0, [r5, #0]
 80122fa:	4621      	mov	r1, r4
 80122fc:	f001 f972 	bl	80135e4 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
 8012300:	6034      	str	r4, [r6, #0]
 8012302:	f7ff ffcb 	bl	801229c <net::netif_do_update_globals()>
 8012306:	f7ff ffe1 	bl	80122cc <net::netif_issue_reports()>
 801230a:	2001      	movs	r0, #1
 801230c:	bd70      	pop	{r4, r5, r6, pc}
 801230e:	2000      	movs	r0, #0
 8012310:	e7fc      	b.n	801230c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x28>
 8012312:	bf00      	nop
 8012314:	2000cc10 	andcs	ip, r0, r0, lsl ip

08012318 <net::netif_init()>:
 8012318:	4b0c      	ldr	r3, [pc, #48]	@ (801234c <net::netif_init()+0x34>)
 801231a:	7e1a      	ldrb	r2, [r3, #24]
 801231c:	7dd8      	ldrb	r0, [r3, #23]
 801231e:	0412      	lsls	r2, r2, #16
 8012320:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 8012324:	7e58      	ldrb	r0, [r3, #25]
 8012326:	3202      	adds	r2, #2
 8012328:	2100      	movs	r1, #0
 801232a:	eb02 6200 	add.w	r2, r2, r0, lsl #24
 801232e:	e9c3 1100 	strd	r1, r1, [r3]
 8012332:	611a      	str	r2, [r3, #16]
 8012334:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8012338:	e9c3 1108 	strd	r1, r1, [r3, #32]
 801233c:	7699      	strb	r1, [r3, #26]
 801233e:	6299      	str	r1, [r3, #40]	@ 0x28
 8012340:	4b03      	ldr	r3, [pc, #12]	@ (8012350 <net::netif_init()+0x38>)
 8012342:	4a04      	ldr	r2, [pc, #16]	@ (8012354 <net::netif_init()+0x3c>)
 8012344:	601a      	str	r2, [r3, #0]
 8012346:	f7f6 b87f 	b.w	8008448 <net::arp_init()>
 801234a:	bf00      	nop
 801234c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8012350:	2000cc0c 	andcs	ip, r0, ip, lsl #24
 8012354:	08012299 	stmdaeq	r1, {r0, r3, r4, r7, r9, sp}

08012358 <net::netif_set_ipaddr(net::ip_addr)>:
 8012358:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801235a:	4669      	mov	r1, sp
 801235c:	f7ff ffc2 	bl	80122e4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8012360:	b130      	cbz	r0, 8012370 <net::netif_set_ipaddr(net::ip_addr)+0x18>
 8012362:	9b00      	ldr	r3, [sp, #0]
 8012364:	9301      	str	r3, [sp, #4]
 8012366:	4b04      	ldr	r3, [pc, #16]	@ (8012378 <net::netif_set_ipaddr(net::ip_addr)+0x20>)
 8012368:	a901      	add	r1, sp, #4
 801236a:	681b      	ldr	r3, [r3, #0]
 801236c:	2010      	movs	r0, #16
 801236e:	4798      	blx	r3
 8012370:	b005      	add	sp, #20
 8012372:	f85d fb04 	ldr.w	pc, [sp], #4
 8012376:	bf00      	nop
 8012378:	2000cc0c 	andcs	ip, r0, ip, lsl #24

0801237c <net::netif_set_netmask(net::ip_addr)>:
 801237c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801237e:	4b07      	ldr	r3, [pc, #28]	@ (801239c <net::netif_set_netmask(net::ip_addr)+0x20>)
 8012380:	685c      	ldr	r4, [r3, #4]
 8012382:	42a0      	cmp	r0, r4
 8012384:	d008      	beq.n	8012398 <net::netif_set_netmask(net::ip_addr)+0x1c>
 8012386:	6058      	str	r0, [r3, #4]
 8012388:	f7ff ff88 	bl	801229c <net::netif_do_update_globals()>
 801238c:	4b04      	ldr	r3, [pc, #16]	@ (80123a0 <net::netif_set_netmask(net::ip_addr)+0x24>)
 801238e:	9402      	str	r4, [sp, #8]
 8012390:	681b      	ldr	r3, [r3, #0]
 8012392:	a901      	add	r1, sp, #4
 8012394:	2040      	movs	r0, #64	@ 0x40
 8012396:	4798      	blx	r3
 8012398:	b004      	add	sp, #16
 801239a:	bd10      	pop	{r4, pc}
 801239c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80123a0:	2000cc0c 	andcs	ip, r0, ip, lsl #24

080123a4 <net::netif_set_gw(net::ip_addr)>:
 80123a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80123a6:	4a07      	ldr	r2, [pc, #28]	@ (80123c4 <net::netif_set_gw(net::ip_addr)+0x20>)
 80123a8:	6893      	ldr	r3, [r2, #8]
 80123aa:	4298      	cmp	r0, r3
 80123ac:	d006      	beq.n	80123bc <net::netif_set_gw(net::ip_addr)+0x18>
 80123ae:	9303      	str	r3, [sp, #12]
 80123b0:	4b05      	ldr	r3, [pc, #20]	@ (80123c8 <net::netif_set_gw(net::ip_addr)+0x24>)
 80123b2:	6090      	str	r0, [r2, #8]
 80123b4:	681b      	ldr	r3, [r3, #0]
 80123b6:	a901      	add	r1, sp, #4
 80123b8:	2020      	movs	r0, #32
 80123ba:	4798      	blx	r3
 80123bc:	b005      	add	sp, #20
 80123be:	f85d fb04 	ldr.w	pc, [sp], #4
 80123c2:	bf00      	nop
 80123c4:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80123c8:	2000cc0c 	andcs	ip, r0, ip, lsl #24

080123cc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
 80123cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80123d0:	4688      	mov	r8, r1
 80123d2:	b085      	sub	sp, #20
 80123d4:	4617      	mov	r7, r2
 80123d6:	4605      	mov	r5, r0
 80123d8:	b348      	cbz	r0, 801242e <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x62>
 80123da:	2400      	movs	r4, #0
 80123dc:	4e1c      	ldr	r6, [pc, #112]	@ (8012450 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>)
 80123de:	f8d6 9004 	ldr.w	r9, [r6, #4]
 80123e2:	45c8      	cmp	r8, r9
 80123e4:	d007      	beq.n	80123f6 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x2a>
 80123e6:	f8c6 8004 	str.w	r8, [r6, #4]
 80123ea:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
 80123ee:	f7ff ff55 	bl	801229c <net::netif_do_update_globals()>
 80123f2:	f8cd 9008 	str.w	r9, [sp, #8]
 80123f6:	68b3      	ldr	r3, [r6, #8]
 80123f8:	429f      	cmp	r7, r3
 80123fa:	bf1e      	ittt	ne
 80123fc:	60b7      	strne	r7, [r6, #8]
 80123fe:	f044 0420 	orrne.w	r4, r4, #32
 8012402:	9303      	strne	r3, [sp, #12]
 8012404:	b30d      	cbz	r5, 801244a <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x7e>
 8012406:	4669      	mov	r1, sp
 8012408:	4628      	mov	r0, r5
 801240a:	f7ff ff6b 	bl	80122e4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 801240e:	b1b8      	cbz	r0, 8012440 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x74>
 8012410:	9b00      	ldr	r3, [sp, #0]
 8012412:	9301      	str	r3, [sp, #4]
 8012414:	f044 0410 	orr.w	r4, r4, #16
 8012418:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 801241c:	b995      	cbnz	r5, 8012444 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x78>
 801241e:	4b0d      	ldr	r3, [pc, #52]	@ (8012454 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x88>)
 8012420:	a901      	add	r1, sp, #4
 8012422:	681b      	ldr	r3, [r3, #0]
 8012424:	4620      	mov	r0, r4
 8012426:	4798      	blx	r3
 8012428:	b005      	add	sp, #20
 801242a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801242e:	4669      	mov	r1, sp
 8012430:	f7ff ff58 	bl	80122e4 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8012434:	2800      	cmp	r0, #0
 8012436:	d0d0      	beq.n	80123da <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe>
 8012438:	9b00      	ldr	r3, [sp, #0]
 801243a:	9301      	str	r3, [sp, #4]
 801243c:	2410      	movs	r4, #16
 801243e:	e7cd      	b.n	80123dc <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x10>
 8012440:	2c00      	cmp	r4, #0
 8012442:	d1e9      	bne.n	8012418 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 8012444:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 8012448:	e7e9      	b.n	801241e <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x52>
 801244a:	2c00      	cmp	r4, #0
 801244c:	d1e4      	bne.n	8012418 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 801244e:	e7eb      	b.n	8012428 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
 8012450:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8012454:	2000cc0c 	andcs	ip, r0, ip, lsl #24

08012458 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
 8012458:	4b01      	ldr	r3, [pc, #4]	@ (8012460 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0x8>)
 801245a:	6018      	str	r0, [r3, #0]
 801245c:	4770      	bx	lr
 801245e:	bf00      	nop
 8012460:	2000cc0c 	andcs	ip, r0, ip, lsl #24

08012464 <net::netif_set_link_down()>:
 8012464:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012466:	4a0d      	ldr	r2, [pc, #52]	@ (801249c <net::netif_set_link_down()+0x38>)
 8012468:	7e93      	ldrb	r3, [r2, #26]
 801246a:	07d9      	lsls	r1, r3, #31
 801246c:	d512      	bpl.n	8012494 <net::netif_set_link_down()+0x30>
 801246e:	f023 0301 	bic.w	r3, r3, #1
 8012472:	7693      	strb	r3, [r2, #26]
 8012474:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8012476:	b11b      	cbz	r3, 8012480 <net::netif_set_link_down()+0x1c>
 8012478:	685b      	ldr	r3, [r3, #4]
 801247a:	b10b      	cbz	r3, 8012480 <net::netif_set_link_down()+0x1c>
 801247c:	f7ff f9f4 	bl	8011868 <net::autoip_stop()>
 8012480:	f001 f84e 	bl	8013520 <net::acd_network_changed_link_down()>
 8012484:	2300      	movs	r3, #0
 8012486:	f88d 3004 	strb.w	r3, [sp, #4]
 801248a:	4b05      	ldr	r3, [pc, #20]	@ (80124a0 <net::netif_set_link_down()+0x3c>)
 801248c:	a901      	add	r1, sp, #4
 801248e:	681b      	ldr	r3, [r3, #0]
 8012490:	2004      	movs	r0, #4
 8012492:	4798      	blx	r3
 8012494:	b005      	add	sp, #20
 8012496:	f85d fb04 	ldr.w	pc, [sp], #4
 801249a:	bf00      	nop
 801249c:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80124a0:	2000cc0c 	andcs	ip, r0, ip, lsl #24

080124a4 <net::_bswap32(t_tcp*)>:
 80124a4:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
 80124a8:	079a      	lsls	r2, r3, #30
 80124aa:	bf0b      	itete	eq
 80124ac:	f8d0 302a 	ldreq.w	r3, [r0, #42]	@ 0x2a
 80124b0:	f8d0 302a 	ldrne.w	r3, [r0, #42]	@ 0x2a
 80124b4:	ba1b      	reveq	r3, r3
 80124b6:	ba1b      	revne	r3, r3
 80124b8:	bf0c      	ite	eq
 80124ba:	f8c0 302a 	streq.w	r3, [r0, #42]	@ 0x2a
 80124be:	f8c0 302a 	strne.w	r3, [r0, #42]	@ 0x2a
 80124c2:	f100 0326 	add.w	r3, r0, #38	@ 0x26
 80124c6:	079b      	lsls	r3, r3, #30
 80124c8:	bf0b      	itete	eq
 80124ca:	f8d0 3026 	ldreq.w	r3, [r0, #38]	@ 0x26
 80124ce:	f8d0 3026 	ldrne.w	r3, [r0, #38]	@ 0x26
 80124d2:	ba1b      	reveq	r3, r3
 80124d4:	ba1b      	revne	r3, r3
 80124d6:	bf0c      	ite	eq
 80124d8:	f8c0 3026 	streq.w	r3, [r0, #38]	@ 0x26
 80124dc:	f8c0 3026 	strne.w	r3, [r0, #38]	@ 0x26
 80124e0:	4770      	bx	lr
 80124e2:	bf00      	nop

080124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>:
 80124e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124e8:	7a0b      	ldrb	r3, [r1, #8]
 80124ea:	8f86      	ldrh	r6, [r0, #60]	@ 0x3c
 80124ec:	4c52      	ldr	r4, [pc, #328]	@ (8012638 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 80124ee:	f003 0302 	and.w	r3, r3, #2
 80124f2:	2b00      	cmp	r3, #0
 80124f4:	bf14      	ite	ne
 80124f6:	2324      	movne	r3, #36	@ 0x24
 80124f8:	2320      	moveq	r3, #32
 80124fa:	441e      	add	r6, r3
 80124fc:	b084      	sub	sp, #16
 80124fe:	4605      	mov	r5, r0
 8012500:	bf14      	ite	ne
 8012502:	f04f 0e90 	movne.w	lr, #144	@ 0x90
 8012506:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 801250a:	f100 030c 	add.w	r3, r0, #12
 801250e:	f100 0c12 	add.w	ip, r0, #18
 8012512:	4622      	mov	r2, r4
 8012514:	f813 0b01 	ldrb.w	r0, [r3], #1
 8012518:	f802 0b01 	strb.w	r0, [r2], #1
 801251c:	459c      	cmp	ip, r3
 801251e:	d1f9      	bne.n	8012514 <net::send_package(net::tcb const*, net::SendInfo const&)+0x30>
 8012520:	b2b7      	uxth	r7, r6
 8012522:	4a46      	ldr	r2, [pc, #280]	@ (801263c <net::send_package(net::tcb const*, net::SendInfo const&)+0x158>)
 8012524:	f107 0314 	add.w	r3, r7, #20
 8012528:	ba5b      	rev16	r3, r3
 801252a:	8223      	strh	r3, [r4, #16]
 801252c:	8813      	ldrh	r3, [r2, #0]
 801252e:	8263      	strh	r3, [r4, #18]
 8012530:	3301      	adds	r3, #1
 8012532:	8013      	strh	r3, [r2, #0]
 8012534:	682b      	ldr	r3, [r5, #0]
 8012536:	f8c4 301a 	str.w	r3, [r4, #26]
 801253a:	686b      	ldr	r3, [r5, #4]
 801253c:	f8c4 301e 	str.w	r3, [r4, #30]
 8012540:	2300      	movs	r3, #0
 8012542:	8323      	strh	r3, [r4, #24]
 8012544:	892a      	ldrh	r2, [r5, #8]
 8012546:	8462      	strh	r2, [r4, #34]	@ 0x22
 8012548:	680a      	ldr	r2, [r1, #0]
 801254a:	8968      	ldrh	r0, [r5, #10]
 801254c:	f8c4 2026 	str.w	r2, [r4, #38]	@ 0x26
 8012550:	684a      	ldr	r2, [r1, #4]
 8012552:	84a0      	strh	r0, [r4, #36]	@ 0x24
 8012554:	f884 e02e 	strb.w	lr, [r4, #46]	@ 0x2e
 8012558:	f8c4 202a 	str.w	r2, [r4, #42]	@ 0x2a
 801255c:	7a0a      	ldrb	r2, [r1, #8]
 801255e:	f884 202f 	strb.w	r2, [r4, #47]	@ 0x2f
 8012562:	f8b5 2044 	ldrh.w	r2, [r5, #68]	@ 0x44
 8012566:	8622      	strh	r2, [r4, #48]	@ 0x30
 8012568:	8c2a      	ldrh	r2, [r5, #32]
 801256a:	86a2      	strh	r2, [r4, #52]	@ 0x34
 801256c:	8663      	strh	r3, [r4, #50]	@ 0x32
 801256e:	7a0b      	ldrb	r3, [r1, #8]
 8012570:	079b      	lsls	r3, r3, #30
 8012572:	bf41      	itttt	mi
 8012574:	f240 4302 	movwmi	r3, #1026	@ 0x402
 8012578:	86e3      	strhmi	r3, [r4, #54]	@ 0x36
 801257a:	f648 4305 	movwmi	r3, #35845	@ 0x8c05
 801257e:	8723      	strhmi	r3, [r4, #56]	@ 0x38
 8012580:	4b2f      	ldr	r3, [pc, #188]	@ (8012640 <net::send_package(net::tcb const*, net::SendInfo const&)+0x15c>)
 8012582:	bf48      	it	mi
 8012584:	4a2f      	ldrmi	r2, [pc, #188]	@ (8012644 <net::send_package(net::tcb const*, net::SendInfo const&)+0x160>)
 8012586:	681b      	ldr	r3, [r3, #0]
 8012588:	bf58      	it	pl
 801258a:	4a2f      	ldrpl	r2, [pc, #188]	@ (8012648 <net::send_package(net::tcb const*, net::SendInfo const&)+0x164>)
 801258c:	ba1b      	rev	r3, r3
 801258e:	6053      	str	r3, [r2, #4]
 8012590:	4b2e      	ldr	r3, [pc, #184]	@ (801264c <net::send_package(net::tcb const*, net::SendInfo const&)+0x168>)
 8012592:	6013      	str	r3, [r2, #0]
 8012594:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8012596:	6093      	str	r3, [r2, #8]
 8012598:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 801259a:	b18b      	cbz	r3, 80125c0 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 801259c:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 801259e:	b179      	cbz	r1, 80125c0 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80125a0:	781b      	ldrb	r3, [r3, #0]
 80125a2:	7313      	strb	r3, [r2, #12]
 80125a4:	8fab      	ldrh	r3, [r5, #60]	@ 0x3c
 80125a6:	2b01      	cmp	r3, #1
 80125a8:	f102 020d 	add.w	r2, r2, #13
 80125ac:	d908      	bls.n	80125c0 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80125ae:	2301      	movs	r3, #1
 80125b0:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 80125b2:	5cc9      	ldrb	r1, [r1, r3]
 80125b4:	f802 1b01 	strb.w	r1, [r2], #1
 80125b8:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 80125ba:	3301      	adds	r3, #1
 80125bc:	4299      	cmp	r1, r3
 80125be:	dcf7      	bgt.n	80125b0 <net::send_package(net::tcb const*, net::SendInfo const&)+0xcc>
 80125c0:	8c63      	ldrh	r3, [r4, #34]	@ 0x22
 80125c2:	481d      	ldr	r0, [pc, #116]	@ (8012638 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 80125c4:	ba5b      	rev16	r3, r3
 80125c6:	8463      	strh	r3, [r4, #34]	@ 0x22
 80125c8:	8ca3      	ldrh	r3, [r4, #36]	@ 0x24
 80125ca:	ba5b      	rev16	r3, r3
 80125cc:	84a3      	strh	r3, [r4, #36]	@ 0x24
 80125ce:	f7ff ff69 	bl	80124a4 <net::_bswap32(t_tcp*)>
 80125d2:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 80125d4:	ba5b      	rev16	r3, r3
 80125d6:	8623      	strh	r3, [r4, #48]	@ 0x30
 80125d8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80125da:	f100 0816 	add.w	r8, r0, #22
 80125de:	ba5b      	rev16	r3, r3
 80125e0:	86a3      	strh	r3, [r4, #52]	@ 0x34
 80125e2:	4642      	mov	r2, r8
 80125e4:	ab01      	add	r3, sp, #4
 80125e6:	f852 1b04 	ldr.w	r1, [r2], #4
 80125ea:	f843 1b04 	str.w	r1, [r3], #4
 80125ee:	a904      	add	r1, sp, #16
 80125f0:	428b      	cmp	r3, r1
 80125f2:	d1f8      	bne.n	80125e6 <net::send_package(net::tcb const*, net::SendInfo const&)+0x102>
 80125f4:	682b      	ldr	r3, [r5, #0]
 80125f6:	f8c4 3016 	str.w	r3, [r4, #22]
 80125fa:	686b      	ldr	r3, [r5, #4]
 80125fc:	f8c4 301a 	str.w	r3, [r4, #26]
 8012600:	b2b1      	uxth	r1, r6
 8012602:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8012606:	4812      	ldr	r0, [pc, #72]	@ (8012650 <net::send_package(net::tcb const*, net::SendInfo const&)+0x16c>)
 8012608:	83e3      	strh	r3, [r4, #30]
 801260a:	ba7f      	rev16	r7, r7
 801260c:	310c      	adds	r1, #12
 801260e:	8427      	strh	r7, [r4, #32]
 8012610:	f7ff fe16 	bl	8012240 <net::net_chksum(void const*, unsigned long)>
 8012614:	ab01      	add	r3, sp, #4
 8012616:	4605      	mov	r5, r0
 8012618:	f853 2b04 	ldr.w	r2, [r3], #4
 801261c:	f848 2b04 	str.w	r2, [r8], #4
 8012620:	aa04      	add	r2, sp, #16
 8012622:	4293      	cmp	r3, r2
 8012624:	d1f8      	bne.n	8012618 <net::send_package(net::tcb const*, net::SendInfo const&)+0x134>
 8012626:	4804      	ldr	r0, [pc, #16]	@ (8012638 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8012628:	8665      	strh	r5, [r4, #50]	@ 0x32
 801262a:	f106 0122 	add.w	r1, r6, #34	@ 0x22
 801262e:	b004      	add	sp, #16
 8012630:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012634:	f000 be54 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8012638:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 801263c:	1000899c 	mulne	r0, ip, r9
 8012640:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8012644:	100083ea 	andne	r8, r0, sl, ror #7
 8012648:	100083e6 	andne	r8, r0, r6, ror #7
 801264c:	0a080101 	beq	8212a58 <_sidata+0x1f6574>
 8012650:	100083c6 	andne	r8, r0, r6, asr #7

08012654 <net::send_reset(t_tcp*, net::tcb const*)>:
 8012654:	f890 202f 	ldrb.w	r2, [r0, #47]	@ 0x2f
 8012658:	0753      	lsls	r3, r2, #29
 801265a:	d42d      	bmi.n	80126b8 <net::send_reset(t_tcp*, net::tcb const*)+0x64>
 801265c:	b500      	push	{lr}
 801265e:	b085      	sub	sp, #20
 8012660:	4603      	mov	r3, r0
 8012662:	4608      	mov	r0, r1
 8012664:	2104      	movs	r1, #4
 8012666:	f88d 100c 	strb.w	r1, [sp, #12]
 801266a:	f012 0110 	ands.w	r1, r2, #16
 801266e:	d119      	bne.n	80126a4 <net::send_reset(t_tcp*, net::tcb const*)+0x50>
 8012670:	f04f 0c14 	mov.w	ip, #20
 8012674:	9101      	str	r1, [sp, #4]
 8012676:	f88d c00c 	strb.w	ip, [sp, #12]
 801267a:	f3c2 0140 	ubfx	r1, r2, #1, #1
 801267e:	07d2      	lsls	r2, r2, #31
 8012680:	f103 0226 	add.w	r2, r3, #38	@ 0x26
 8012684:	bf48      	it	mi
 8012686:	3101      	addmi	r1, #1
 8012688:	0792      	lsls	r2, r2, #30
 801268a:	bf0c      	ite	eq
 801268c:	f8d3 3026 	ldreq.w	r3, [r3, #38]	@ 0x26
 8012690:	f8d3 3026 	ldrne.w	r3, [r3, #38]	@ 0x26
 8012694:	440b      	add	r3, r1
 8012696:	a901      	add	r1, sp, #4
 8012698:	9302      	str	r3, [sp, #8]
 801269a:	f7ff ff23 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 801269e:	b005      	add	sp, #20
 80126a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80126a4:	f103 012a 	add.w	r1, r3, #42	@ 0x2a
 80126a8:	0789      	lsls	r1, r1, #30
 80126aa:	bf0c      	ite	eq
 80126ac:	f8d3 102a 	ldreq.w	r1, [r3, #42]	@ 0x2a
 80126b0:	f8d3 102a 	ldrne.w	r1, [r3, #42]	@ 0x2a
 80126b4:	9101      	str	r1, [sp, #4]
 80126b6:	e7e0      	b.n	801267a <net::send_reset(t_tcp*, net::tcb const*)+0x26>
 80126b8:	4770      	bx	lr
 80126ba:	bf00      	nop

080126bc <net::scan_options(t_tcp*, net::tcb*, long)>:
 80126bc:	f100 0322 	add.w	r3, r0, #34	@ 0x22
 80126c0:	441a      	add	r2, r3
 80126c2:	f100 0c3c 	add.w	ip, r0, #60	@ 0x3c
 80126c6:	4562      	cmp	r2, ip
 80126c8:	d349      	bcc.n	801275e <net::scan_options(t_tcp*, net::tcb*, long)+0xa2>
 80126ca:	b530      	push	{r4, r5, lr}
 80126cc:	f100 0336 	add.w	r3, r0, #54	@ 0x36
 80126d0:	f893 c000 	ldrb.w	ip, [r3]
 80126d4:	f1bc 0f08 	cmp.w	ip, #8
 80126d8:	d820      	bhi.n	801271c <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 80126da:	e8df f00c 	tbb	[pc, ip]
 80126de:	1f052726 	svcne	0x00052726
 80126e2:	1f1f1f1f 	svcne	0x001f1f1f
 80126e6:	f8930029 			@ <UNDEFINED> instruction: 0xf8930029
 80126ea:	c001      	stmia	r0!, {r0}
 80126ec:	f1bc 0f04 	cmp.w	ip, #4
 80126f0:	d116      	bne.n	8012720 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80126f2:	f103 0e04 	add.w	lr, r3, #4
 80126f6:	4572      	cmp	r2, lr
 80126f8:	d312      	bcc.n	8012720 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80126fa:	f8b3 c002 	ldrh.w	ip, [r3, #2]
 80126fe:	fa9c fc9c 	rev16.w	ip, ip
 8012702:	fa1f fc8c 	uxth.w	ip, ip
 8012706:	f10c 0c14 	add.w	ip, ip, #20
 801270a:	f240 5e8c 	movw	lr, #1420	@ 0x58c
 801270e:	45f4      	cmp	ip, lr
 8012710:	bfa8      	it	ge
 8012712:	46f4      	movge	ip, lr
 8012714:	f1ac 0c14 	sub.w	ip, ip, #20
 8012718:	f8a1 c034 	strh.w	ip, [r1, #52]	@ 0x34
 801271c:	f893 c001 	ldrb.w	ip, [r3, #1]
 8012720:	4463      	add	r3, ip
 8012722:	f103 0c06 	add.w	ip, r3, #6
 8012726:	4562      	cmp	r2, ip
 8012728:	d2d2      	bcs.n	80126d0 <net::scan_options(t_tcp*, net::tcb*, long)+0x14>
 801272a:	bd30      	pop	{r4, r5, pc}
 801272c:	3301      	adds	r3, #1
 801272e:	e7f8      	b.n	8012722 <net::scan_options(t_tcp*, net::tcb*, long)+0x66>
 8012730:	f893 c001 	ldrb.w	ip, [r3, #1]
 8012734:	f1bc 0f0a 	cmp.w	ip, #10
 8012738:	d1f2      	bne.n	8012720 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801273a:	f103 0e0a 	add.w	lr, r3, #10
 801273e:	4572      	cmp	r2, lr
 8012740:	d3ee      	bcc.n	8012720 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8012742:	1c9c      	adds	r4, r3, #2
 8012744:	f890 e02f 	ldrb.w	lr, [r0, #47]	@ 0x2f
 8012748:	07a4      	lsls	r4, r4, #30
 801274a:	bf0c      	ite	eq
 801274c:	f8d3 4002 	ldreq.w	r4, [r3, #2]
 8012750:	f8d3 4002 	ldrne.w	r4, [r3, #2]
 8012754:	f01e 0f02 	tst.w	lr, #2
 8012758:	d002      	beq.n	8012760 <net::scan_options(t_tcp*, net::tcb*, long)+0xa4>
 801275a:	630c      	str	r4, [r1, #48]	@ 0x30
 801275c:	e7de      	b.n	801271c <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 801275e:	4770      	bx	lr
 8012760:	6b0d      	ldr	r5, [r1, #48]	@ 0x30
 8012762:	fa95 fe85 	rev.w	lr, r5
 8012766:	ba25      	rev	r5, r4
 8012768:	4575      	cmp	r5, lr
 801276a:	d9d9      	bls.n	8012720 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801276c:	e7f5      	b.n	801275a <net::scan_options(t_tcp*, net::tcb*, long)+0x9e>
 801276e:	bf00      	nop

08012770 <net::tcp_shutdown()>:
 8012770:	4770      	bx	lr
 8012772:	bf00      	nop

08012774 <net::tcp_begin(unsigned short)>:
 8012774:	4b16      	ldr	r3, [pc, #88]	@ (80127d0 <net::tcp_begin(unsigned short)+0x5c>)
 8012776:	f8b3 1d04 	ldrh.w	r1, [r3, #3332]	@ 0xd04
 801277a:	4281      	cmp	r1, r0
 801277c:	d025      	beq.n	80127ca <net::tcp_begin(unsigned short)+0x56>
 801277e:	bb09      	cbnz	r1, 80127c4 <net::tcp_begin(unsigned short)+0x50>
 8012780:	b530      	push	{r4, r5, lr}
 8012782:	4d14      	ldr	r5, [pc, #80]	@ (80127d4 <net::tcp_begin(unsigned short)+0x60>)
 8012784:	f8a3 0d04 	strh.w	r0, [r3, #3332]	@ 0xd04
 8012788:	f103 0250 	add.w	r2, r3, #80	@ 0x50
 801278c:	f503 7c0c 	add.w	ip, r3, #560	@ 0x230
 8012790:	f640 3418 	movw	r4, #2840	@ 0xb18
 8012794:	f04f 0e01 	mov.w	lr, #1
 8012798:	f1a2 0350 	sub.w	r3, r2, #80	@ 0x50
 801279c:	f843 1b04 	str.w	r1, [r3], #4
 80127a0:	4293      	cmp	r3, r2
 80127a2:	d1fb      	bne.n	801279c <net::tcp_begin(unsigned short)+0x28>
 80127a4:	682b      	ldr	r3, [r5, #0]
 80127a6:	f822 0c48 	strh.w	r0, [r2, #-72]
 80127aa:	f822 4c0c 	strh.w	r4, [r2, #-12]
 80127ae:	f802 ec04 	strb.w	lr, [r2, #-4]
 80127b2:	e942 330f 	strd	r3, r3, [r2, #-60]	@ 0x3c
 80127b6:	e942 330a 	strd	r3, r3, [r2, #-40]	@ 0x28
 80127ba:	3250      	adds	r2, #80	@ 0x50
 80127bc:	4562      	cmp	r2, ip
 80127be:	d1eb      	bne.n	8012798 <net::tcp_begin(unsigned short)+0x24>
 80127c0:	2000      	movs	r0, #0
 80127c2:	bd30      	pop	{r4, r5, pc}
 80127c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80127c8:	4770      	bx	lr
 80127ca:	2000      	movs	r0, #0
 80127cc:	4770      	bx	lr
 80127ce:	bf00      	nop
 80127d0:	100089a0 	andne	r8, r0, r0, lsr #19
 80127d4:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

080127d8 <net::tcp_read(long, unsigned char const**, unsigned long&)>:
 80127d8:	b570      	push	{r4, r5, r6, lr}
 80127da:	4b1a      	ldr	r3, [pc, #104]	@ (8012844 <net::tcp_read(long, unsigned char const**, unsigned long&)+0x6c>)
 80127dc:	f640 5408 	movw	r4, #3336	@ 0xd08
 80127e0:	fb04 f000 	mul.w	r0, r4, r0
 80127e4:	eb03 0c00 	add.w	ip, r3, r0
 80127e8:	f8bc e1e2 	ldrh.w	lr, [ip, #482]	@ 0x1e2
 80127ec:	f8bc 41e0 	ldrh.w	r4, [ip, #480]	@ 0x1e0
 80127f0:	4574      	cmp	r4, lr
 80127f2:	bf08      	it	eq
 80127f4:	2000      	moveq	r0, #0
 80127f6:	d100      	bne.n	80127fa <net::tcp_read(long, unsigned char const**, unsigned long&)+0x22>
 80127f8:	bd70      	pop	{r4, r5, r6, pc}
 80127fa:	f44f 64b2 	mov.w	r4, #1424	@ 0x590
 80127fe:	fb04 fe0e 	mul.w	lr, r4, lr
 8012802:	eb0e 0500 	add.w	r5, lr, r0
 8012806:	441d      	add	r5, r3
 8012808:	f500 76f2 	add.w	r6, r0, #484	@ 0x1e4
 801280c:	f8b5 4772 	ldrh.w	r4, [r5, #1906]	@ 0x772
 8012810:	6014      	str	r4, [r2, #0]
 8012812:	4476      	add	r6, lr
 8012814:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8012818:	441e      	add	r6, r3
 801281a:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 801281e:	600e      	str	r6, [r1, #0]
 8012820:	4403      	add	r3, r0
 8012822:	f8bc 21e2 	ldrh.w	r2, [ip, #482]	@ 0x1e2
 8012826:	f8b3 1044 	ldrh.w	r1, [r3, #68]	@ 0x44
 801282a:	f8b5 0770 	ldrh.w	r0, [r5, #1904]	@ 0x770
 801282e:	3201      	adds	r2, #1
 8012830:	f201 518c 	addw	r1, r1, #1420	@ 0x58c
 8012834:	f002 0201 	and.w	r2, r2, #1
 8012838:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 801283c:	f8ac 21e2 	strh.w	r2, [ip, #482]	@ 0x1e2
 8012840:	bd70      	pop	{r4, r5, r6, pc}
 8012842:	bf00      	nop
 8012844:	100089a0 	andne	r8, r0, r0, lsr #19

08012848 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
 8012848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801284c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8012850:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 80128e4 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x9c>
 8012854:	f640 5408 	movw	r4, #3336	@ 0xd08
 8012858:	011b      	lsls	r3, r3, #4
 801285a:	fb04 3700 	mla	r7, r4, r0, r3
 801285e:	b085      	sub	sp, #20
 8012860:	eb08 0907 	add.w	r9, r8, r7
 8012864:	2a00      	cmp	r2, #0
 8012866:	d038      	beq.n	80128da <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 8012868:	f107 0b10 	add.w	fp, r7, #16
 801286c:	468a      	mov	sl, r1
 801286e:	4616      	mov	r6, r2
 8012870:	44c3      	add	fp, r8
 8012872:	e01e      	b.n	80128b2 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 8012874:	f8c5 a038 	str.w	sl, [r5, #56]	@ 0x38
 8012878:	87ac      	strh	r4, [r5, #60]	@ 0x3c
 801287a:	f8db 3008 	ldr.w	r3, [fp, #8]
 801287e:	f8db 2030 	ldr.w	r2, [fp, #48]	@ 0x30
 8012882:	4566      	cmp	r6, ip
 8012884:	bf8c      	ite	hi
 8012886:	f04f 0c10 	movhi.w	ip, #16
 801288a:	f04f 0c18 	movls.w	ip, #24
 801288e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8012892:	f88d c00c 	strb.w	ip, [sp, #12]
 8012896:	f7ff fe25 	bl	80124e4 <net::send_package(net::tcb const*, net::SendInfo const&)>
 801289a:	e9d5 2306 	ldrd	r2, r3, [r5, #24]
 801289e:	2100      	movs	r1, #0
 80128a0:	4422      	add	r2, r4
 80128a2:	1b1b      	subs	r3, r3, r4
 80128a4:	1b36      	subs	r6, r6, r4
 80128a6:	e9c5 2306 	strd	r2, r3, [r5, #24]
 80128aa:	63a9      	str	r1, [r5, #56]	@ 0x38
 80128ac:	87a9      	strh	r1, [r5, #60]	@ 0x3c
 80128ae:	44a2      	add	sl, r4
 80128b0:	d013      	beq.n	80128da <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 80128b2:	eb08 0507 	add.w	r5, r8, r7
 80128b6:	f240 548c 	movw	r4, #1420	@ 0x58c
 80128ba:	42b4      	cmp	r4, r6
 80128bc:	69eb      	ldr	r3, [r5, #28]
 80128be:	bf28      	it	cs
 80128c0:	4634      	movcs	r4, r6
 80128c2:	429c      	cmp	r4, r3
 80128c4:	f240 5c8b 	movw	ip, #1419	@ 0x58b
 80128c8:	a901      	add	r1, sp, #4
 80128ca:	4648      	mov	r0, r9
 80128cc:	d9d2      	bls.n	8012874 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x2c>
 80128ce:	4804      	ldr	r0, [pc, #16]	@ (80128e0 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x98>)
 80128d0:	f002 fedc 	bl	801568c <console_error>
 80128d4:	1b36      	subs	r6, r6, r4
 80128d6:	44a2      	add	sl, r4
 80128d8:	d1eb      	bne.n	80128b2 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 80128da:	b005      	add	sp, #20
 80128dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128e0:	08019f7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 80128e4:	100089a0 	andne	r8, r0, r0, lsr #19

080128e8 <net::udp_set_ip()>:
 80128e8:	4a02      	ldr	r2, [pc, #8]	@ (80128f4 <net::udp_set_ip()+0xc>)
 80128ea:	4b03      	ldr	r3, [pc, #12]	@ (80128f8 <net::udp_set_ip()+0x10>)
 80128ec:	6812      	ldr	r2, [r2, #0]
 80128ee:	f8c3 201a 	str.w	r2, [r3, #26]
 80128f2:	4770      	bx	lr
 80128f4:	2000cc10 	andcs	ip, r0, r0, lsl ip
 80128f8:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4

080128fc <net::udp_begin(unsigned short)>:
 80128fc:	4a08      	ldr	r2, [pc, #32]	@ (8012920 <net::udp_begin(unsigned short)+0x24>)
 80128fe:	4601      	mov	r1, r0
 8012900:	2000      	movs	r0, #0
 8012902:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012906:	428b      	cmp	r3, r1
 8012908:	d005      	beq.n	8012916 <net::udp_begin(unsigned short)+0x1a>
 801290a:	b12b      	cbz	r3, 8012918 <net::udp_begin(unsigned short)+0x1c>
 801290c:	3001      	adds	r0, #1
 801290e:	2808      	cmp	r0, #8
 8012910:	d1f7      	bne.n	8012902 <net::udp_begin(unsigned short)+0x6>
 8012912:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8012916:	4770      	bx	lr
 8012918:	4b02      	ldr	r3, [pc, #8]	@ (8012924 <net::udp_begin(unsigned short)+0x28>)
 801291a:	f823 1010 	strh.w	r1, [r3, r0, lsl #1]
 801291e:	4770      	bx	lr
 8012920:	1000cafe 	strdne	ip, [r0], -lr
 8012924:	1000cb00 	andne	ip, r0, r0, lsl #22

08012928 <net::udp_end(unsigned short)>:
 8012928:	4a0d      	ldr	r2, [pc, #52]	@ (8012960 <net::udp_end(unsigned short)+0x38>)
 801292a:	b508      	push	{r3, lr}
 801292c:	2300      	movs	r3, #0
 801292e:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8012932:	4281      	cmp	r1, r0
 8012934:	d008      	beq.n	8012948 <net::udp_end(unsigned short)+0x20>
 8012936:	3301      	adds	r3, #1
 8012938:	2b08      	cmp	r3, #8
 801293a:	d1f8      	bne.n	801292e <net::udp_end(unsigned short)+0x6>
 801293c:	4809      	ldr	r0, [pc, #36]	@ (8012964 <net::udp_end(unsigned short)+0x3c>)
 801293e:	f002 fea5 	bl	801568c <console_error>
 8012942:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8012946:	bd08      	pop	{r3, pc}
 8012948:	4a07      	ldr	r2, [pc, #28]	@ (8012968 <net::udp_end(unsigned short)+0x40>)
 801294a:	4908      	ldr	r1, [pc, #32]	@ (801296c <net::udp_end(unsigned short)+0x44>)
 801294c:	f240 50cc 	movw	r0, #1484	@ 0x5cc
 8012950:	fb00 2203 	mla	r2, r0, r3, r2
 8012954:	2000      	movs	r0, #0
 8012956:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
 801295a:	6050      	str	r0, [r2, #4]
 801295c:	bd08      	pop	{r3, pc}
 801295e:	bf00      	nop
 8012960:	1000cafe 	strdne	ip, [r0], -lr
 8012964:	08019fac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, fp, ip, pc}
 8012968:	10009ca0 	andne	r9, r0, r0, lsr #25
 801296c:	1000cb00 	andne	ip, r0, r0, lsl #22

08012970 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)>:
 8012970:	b530      	push	{r4, r5, lr}
 8012972:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 8012976:	4c13      	ldr	r4, [pc, #76]	@ (80129c4 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)+0x54>)
 8012978:	fb0c fc00 	mul.w	ip, ip, r0
 801297c:	4686      	mov	lr, r0
 801297e:	eb04 000c 	add.w	r0, r4, ip
 8012982:	6840      	ldr	r0, [r0, #4]
 8012984:	b900      	cbnz	r0, 8012988 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)+0x18>
 8012986:	bd30      	pop	{r4, r5, pc}
 8012988:	4290      	cmp	r0, r2
 801298a:	f10c 0c0a 	add.w	ip, ip, #10
 801298e:	bf28      	it	cs
 8012990:	4610      	movcs	r0, r2
 8012992:	44a4      	add	ip, r4
 8012994:	b130      	cbz	r0, 80129a4 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)+0x34>
 8012996:	180d      	adds	r5, r1, r0
 8012998:	f81c 2b01 	ldrb.w	r2, [ip], #1
 801299c:	f801 2b01 	strb.w	r2, [r1], #1
 80129a0:	428d      	cmp	r5, r1
 80129a2:	d1f9      	bne.n	8012998 <net::udp_recv1(int, unsigned char*, unsigned long, unsigned long*, unsigned short*)+0x28>
 80129a4:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 80129a8:	fb02 fe0e 	mul.w	lr, r2, lr
 80129ac:	eb04 020e 	add.w	r2, r4, lr
 80129b0:	f854 100e 	ldr.w	r1, [r4, lr]
 80129b4:	6019      	str	r1, [r3, #0]
 80129b6:	9c03      	ldr	r4, [sp, #12]
 80129b8:	8911      	ldrh	r1, [r2, #8]
 80129ba:	8021      	strh	r1, [r4, #0]
 80129bc:	2300      	movs	r3, #0
 80129be:	6053      	str	r3, [r2, #4]
 80129c0:	bd30      	pop	{r4, r5, pc}
 80129c2:	bf00      	nop
 80129c4:	10009ca0 	andne	r9, r0, r0, lsr #25

080129c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>:
 80129c8:	b510      	push	{r4, lr}
 80129ca:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 80129ce:	4c0c      	ldr	r4, [pc, #48]	@ (8012a00 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x38>)
 80129d0:	fb0c fc00 	mul.w	ip, ip, r0
 80129d4:	eb04 0e0c 	add.w	lr, r4, ip
 80129d8:	f8de 0004 	ldr.w	r0, [lr, #4]
 80129dc:	b900      	cbnz	r0, 80129e0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x18>
 80129de:	bd10      	pop	{r4, pc}
 80129e0:	f10c 000a 	add.w	r0, ip, #10
 80129e4:	4420      	add	r0, r4
 80129e6:	6008      	str	r0, [r1, #0]
 80129e8:	f854 100c 	ldr.w	r1, [r4, ip]
 80129ec:	6011      	str	r1, [r2, #0]
 80129ee:	f8be 2008 	ldrh.w	r2, [lr, #8]
 80129f2:	801a      	strh	r2, [r3, #0]
 80129f4:	2300      	movs	r3, #0
 80129f6:	f8de 0004 	ldr.w	r0, [lr, #4]
 80129fa:	f8ce 3004 	str.w	r3, [lr, #4]
 80129fe:	bd10      	pop	{r4, pc}
 8012a00:	10009ca0 	andne	r9, r0, r0, lsr #25

08012a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
 8012a04:	b570      	push	{r4, r5, r6, lr}
 8012a06:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8012a0a:	4e3d      	ldr	r6, [pc, #244]	@ (8012b00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>)
 8012a0c:	fa94 fe94 	rev16.w	lr, r4
 8012a10:	4c3c      	ldr	r4, [pc, #240]	@ (8012b04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>)
 8012a12:	f8b6 c000 	ldrh.w	ip, [r6]
 8012a16:	f834 5010 	ldrh.w	r5, [r4, r0, lsl #1]
 8012a1a:	4c3b      	ldr	r4, [pc, #236]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012a1c:	b290      	uxth	r0, r2
 8012a1e:	f8a4 c012 	strh.w	ip, [r4, #18]
 8012a22:	f10c 0c01 	add.w	ip, ip, #1
 8012a26:	f8a6 c000 	strh.w	ip, [r6]
 8012a2a:	f100 0c1c 	add.w	ip, r0, #28
 8012a2e:	3008      	adds	r0, #8
 8012a30:	ba40      	rev16	r0, r0
 8012a32:	ba6d      	rev16	r5, r5
 8012a34:	fa9c fc9c 	rev16.w	ip, ip
 8012a38:	84e0      	strh	r0, [r4, #38]	@ 0x26
 8012a3a:	f5b2 6fb8 	cmp.w	r2, #1472	@ 0x5c0
 8012a3e:	f04f 0000 	mov.w	r0, #0
 8012a42:	8465      	strh	r5, [r4, #34]	@ 0x22
 8012a44:	f8a4 e024 	strh.w	lr, [r4, #36]	@ 0x24
 8012a48:	4615      	mov	r5, r2
 8012a4a:	f8a4 c010 	strh.w	ip, [r4, #16]
 8012a4e:	bf28      	it	cs
 8012a50:	f44f 65b8 	movcs.w	r5, #1472	@ 0x5c0
 8012a54:	8320      	strh	r0, [r4, #24]
 8012a56:	b14a      	cbz	r2, 8012a6c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
 8012a58:	eb01 0e05 	add.w	lr, r1, r5
 8012a5c:	f104 002a 	add.w	r0, r4, #42	@ 0x2a
 8012a60:	f811 cb01 	ldrb.w	ip, [r1], #1
 8012a64:	f800 cb01 	strb.w	ip, [r0], #1
 8012a68:	4571      	cmp	r1, lr
 8012a6a:	d1f9      	bne.n	8012a60 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5c>
 8012a6c:	1c5a      	adds	r2, r3, #1
 8012a6e:	f105 012a 	add.w	r1, r5, #42	@ 0x2a
 8012a72:	d02e      	beq.n	8012ad2 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce>
 8012a74:	4a25      	ldr	r2, [pc, #148]	@ (8012b0c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x108>)
 8012a76:	6812      	ldr	r2, [r2, #0]
 8012a78:	439a      	bics	r2, r3
 8012a7a:	d01c      	beq.n	8012ab6 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb2>
 8012a7c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8012a80:	2ae0      	cmp	r2, #224	@ 0xe0
 8012a82:	d136      	bne.n	8012af2 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee>
 8012a84:	4822      	ldr	r0, [pc, #136]	@ (8012b10 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x10c>)
 8012a86:	f3c3 2206 	ubfx	r2, r3, #8, #7
 8012a8a:	70c2      	strb	r2, [r0, #3]
 8012a8c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012a90:	7102      	strb	r2, [r0, #4]
 8012a92:	f3c3 6207 	ubfx	r2, r3, #24, #8
 8012a96:	7142      	strb	r2, [r0, #5]
 8012a98:	4a1b      	ldr	r2, [pc, #108]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012a9a:	1d85      	adds	r5, r0, #6
 8012a9c:	f810 cb01 	ldrb.w	ip, [r0], #1
 8012aa0:	f802 cb01 	strb.w	ip, [r2], #1
 8012aa4:	42a8      	cmp	r0, r5
 8012aa6:	d1f9      	bne.n	8012a9c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
 8012aa8:	f8c4 301e 	str.w	r3, [r4, #30]
 8012aac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ab0:	4815      	ldr	r0, [pc, #84]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012ab2:	f000 bc15 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8012ab6:	4a14      	ldr	r2, [pc, #80]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012ab8:	25ff      	movs	r5, #255	@ 0xff
 8012aba:	1d90      	adds	r0, r2, #6
 8012abc:	f802 5b01 	strb.w	r5, [r2], #1
 8012ac0:	4282      	cmp	r2, r0
 8012ac2:	d1fb      	bne.n	8012abc <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
 8012ac4:	f8c4 301e 	str.w	r3, [r4, #30]
 8012ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012acc:	480e      	ldr	r0, [pc, #56]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012ace:	f000 bc07 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8012ad2:	4b0d      	ldr	r3, [pc, #52]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012ad4:	22ff      	movs	r2, #255	@ 0xff
 8012ad6:	1d98      	adds	r0, r3, #6
 8012ad8:	f803 2b01 	strb.w	r2, [r3], #1
 8012adc:	4283      	cmp	r3, r0
 8012ade:	d1fb      	bne.n	8012ad8 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
 8012ae0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8012ae4:	f8c4 301e 	str.w	r3, [r4, #30]
 8012ae8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012aec:	4806      	ldr	r0, [pc, #24]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012aee:	f000 bbf7 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 8012af2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012af6:	4804      	ldr	r0, [pc, #16]	@ (8012b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8012af8:	461a      	mov	r2, r3
 8012afa:	f000 be27 	b.w	801374c <net::arp_send(t_udp*, unsigned long, unsigned long)>
 8012afe:	bf00      	nop
 8012b00:	100096b0 			@ <UNDEFINED> instruction: 0x100096b0
 8012b04:	1000cb00 	andne	ip, r0, r0, lsl #22
 8012b08:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8012b0c:	2000cbf8 	strdcs	ip, [r0], -r8
 8012b10:	100096a8 	andne	r9, r0, r8, lsr #13

08012b14 <NetworkParamsStore::Copy(networkparams::Params*)>:
 8012b14:	b507      	push	{r0, r1, r2, lr}
 8012b16:	2301      	movs	r3, #1
 8012b18:	2100      	movs	r1, #0
 8012b1a:	e9cd 1300 	strd	r1, r3, [sp]
 8012b1e:	4602      	mov	r2, r0
 8012b20:	4803      	ldr	r0, [pc, #12]	@ (8012b30 <NetworkParamsStore::Copy(networkparams::Params*)+0x1c>)
 8012b22:	235e      	movs	r3, #94	@ 0x5e
 8012b24:	6800      	ldr	r0, [r0, #0]
 8012b26:	f001 fb7f 	bl	8014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8012b2a:	b003      	add	sp, #12
 8012b2c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012b30:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08012b34 <NetworkParams::NetworkParams()>:
 8012b34:	b510      	push	{r4, lr}
 8012b36:	225e      	movs	r2, #94	@ 0x5e
 8012b38:	4604      	mov	r4, r0
 8012b3a:	2100      	movs	r1, #0
 8012b3c:	f004 fdca 	bl	80176d4 <memset>
 8012b40:	2301      	movs	r3, #1
 8012b42:	7523      	strb	r3, [r4, #20]
 8012b44:	4620      	mov	r0, r4
 8012b46:	bd10      	pop	{r4, pc}

08012b48 <NetworkParams::Load()>:
 8012b48:	b508      	push	{r3, lr}
 8012b4a:	2200      	movs	r2, #0
 8012b4c:	7002      	strb	r2, [r0, #0]
 8012b4e:	7042      	strb	r2, [r0, #1]
 8012b50:	7082      	strb	r2, [r0, #2]
 8012b52:	70c2      	strb	r2, [r0, #3]
 8012b54:	f7ff ffde 	bl	8012b14 <NetworkParamsStore::Copy(networkparams::Params*)>
 8012b58:	bd08      	pop	{r3, pc}
	...

08012b5c <NetworkParams::Load(char const*, unsigned long)>:
 8012b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b5e:	2500      	movs	r5, #0
 8012b60:	b087      	sub	sp, #28
 8012b62:	4604      	mov	r4, r0
 8012b64:	460e      	mov	r6, r1
 8012b66:	4617      	mov	r7, r2
 8012b68:	7005      	strb	r5, [r0, #0]
 8012b6a:	7045      	strb	r5, [r0, #1]
 8012b6c:	7085      	strb	r5, [r0, #2]
 8012b6e:	70c5      	strb	r5, [r0, #3]
 8012b70:	4602      	mov	r2, r0
 8012b72:	490c      	ldr	r1, [pc, #48]	@ (8012ba4 <NetworkParams::Load(char const*, unsigned long)+0x48>)
 8012b74:	a804      	add	r0, sp, #16
 8012b76:	f001 fe31 	bl	80147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012b7a:	463a      	mov	r2, r7
 8012b7c:	4631      	mov	r1, r6
 8012b7e:	a804      	add	r0, sp, #16
 8012b80:	f001 fe30 	bl	80147e4 <ReadConfigFile::Read(char const*, unsigned int)>
 8012b84:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8012b88:	235e      	movs	r3, #94	@ 0x5e
 8012b8a:	4807      	ldr	r0, [pc, #28]	@ (8012ba8 <NetworkParams::Load(char const*, unsigned long)+0x4c>)
 8012b8c:	9300      	str	r3, [sp, #0]
 8012b8e:	462a      	mov	r2, r5
 8012b90:	4623      	mov	r3, r4
 8012b92:	4629      	mov	r1, r5
 8012b94:	6800      	ldr	r0, [r0, #0]
 8012b96:	f001 fb21 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8012b9a:	a804      	add	r0, sp, #16
 8012b9c:	f001 fe21 	bl	80147e2 <ReadConfigFile::~ReadConfigFile()>
 8012ba0:	b007      	add	sp, #28
 8012ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ba4:	08012d09 	stmdaeq	r1, {r0, r3, r8, sl, fp, sp}
 8012ba8:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08012bac <NetworkParams::callbackFunction(char const*)>:
 8012bac:	b530      	push	{r4, r5, lr}
 8012bae:	460d      	mov	r5, r1
 8012bb0:	b085      	sub	sp, #20
 8012bb2:	4604      	mov	r4, r0
 8012bb4:	494d      	ldr	r1, [pc, #308]	@ (8012cec <NetworkParams::callbackFunction(char const*)+0x140>)
 8012bb6:	f10d 0207 	add.w	r2, sp, #7
 8012bba:	4628      	mov	r0, r5
 8012bbc:	f001 ff38 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012bc0:	b978      	cbnz	r0, 8012be2 <NetworkParams::callbackFunction(char const*)+0x36>
 8012bc2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012bc6:	6823      	ldr	r3, [r4, #0]
 8012bc8:	b142      	cbz	r2, 8012bdc <NetworkParams::callbackFunction(char const*)+0x30>
 8012bca:	f023 0301 	bic.w	r3, r3, #1
 8012bce:	3a00      	subs	r2, #0
 8012bd0:	bf18      	it	ne
 8012bd2:	2201      	movne	r2, #1
 8012bd4:	6023      	str	r3, [r4, #0]
 8012bd6:	7522      	strb	r2, [r4, #20]
 8012bd8:	b005      	add	sp, #20
 8012bda:	bd30      	pop	{r4, r5, pc}
 8012bdc:	f043 0301 	orr.w	r3, r3, #1
 8012be0:	e7f5      	b.n	8012bce <NetworkParams::callbackFunction(char const*)+0x22>
 8012be2:	4943      	ldr	r1, [pc, #268]	@ (8012cf0 <NetworkParams::callbackFunction(char const*)+0x144>)
 8012be4:	f10d 0207 	add.w	r2, sp, #7
 8012be8:	4628      	mov	r0, r5
 8012bea:	f001 ff21 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012bee:	b980      	cbnz	r0, 8012c12 <NetworkParams::callbackFunction(char const*)+0x66>
 8012bf0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012bf4:	6823      	ldr	r3, [r4, #0]
 8012bf6:	1e51      	subs	r1, r2, #1
 8012bf8:	2904      	cmp	r1, #4
 8012bfa:	bf97      	itett	ls
 8012bfc:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 8012c00:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 8012c04:	6023      	strls	r3, [r4, #0]
 8012c06:	f884 205d 	strbls.w	r2, [r4, #93]	@ 0x5d
 8012c0a:	bf84      	itt	hi
 8012c0c:	6023      	strhi	r3, [r4, #0]
 8012c0e:	f884 005d 	strbhi.w	r0, [r4, #93]	@ 0x5d
 8012c12:	4938      	ldr	r1, [pc, #224]	@ (8012cf4 <NetworkParams::callbackFunction(char const*)+0x148>)
 8012c14:	aa02      	add	r2, sp, #8
 8012c16:	4628      	mov	r0, r5
 8012c18:	f001 fe85 	bl	8014926 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8012c1c:	b9d8      	cbnz	r0, 8012c56 <NetworkParams::callbackFunction(char const*)+0xaa>
 8012c1e:	9a02      	ldr	r2, [sp, #8]
 8012c20:	6823      	ldr	r3, [r4, #0]
 8012c22:	b2d1      	uxtb	r1, r2
 8012c24:	29ac      	cmp	r1, #172	@ 0xac
 8012c26:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8012c2a:	d007      	beq.n	8012c3c <NetworkParams::callbackFunction(char const*)+0x90>
 8012c2c:	29c0      	cmp	r1, #192	@ 0xc0
 8012c2e:	d00c      	beq.n	8012c4a <NetworkParams::callbackFunction(char const*)+0x9e>
 8012c30:	290a      	cmp	r1, #10
 8012c32:	d006      	beq.n	8012c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8012c34:	2902      	cmp	r1, #2
 8012c36:	d004      	beq.n	8012c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8012c38:	b11a      	cbz	r2, 8012c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8012c3a:	e008      	b.n	8012c4e <NetworkParams::callbackFunction(char const*)+0xa2>
 8012c3c:	3810      	subs	r0, #16
 8012c3e:	280f      	cmp	r0, #15
 8012c40:	d805      	bhi.n	8012c4e <NetworkParams::callbackFunction(char const*)+0xa2>
 8012c42:	6062      	str	r2, [r4, #4]
 8012c44:	f043 0302 	orr.w	r3, r3, #2
 8012c48:	e003      	b.n	8012c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8012c4a:	28a8      	cmp	r0, #168	@ 0xa8
 8012c4c:	d0f9      	beq.n	8012c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8012c4e:	f023 0302 	bic.w	r3, r3, #2
 8012c52:	6023      	str	r3, [r4, #0]
 8012c54:	e7c0      	b.n	8012bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012c56:	4928      	ldr	r1, [pc, #160]	@ (8012cf8 <NetworkParams::callbackFunction(char const*)+0x14c>)
 8012c58:	aa02      	add	r2, sp, #8
 8012c5a:	4628      	mov	r0, r5
 8012c5c:	f001 fe63 	bl	8014926 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8012c60:	b970      	cbnz	r0, 8012c80 <NetworkParams::callbackFunction(char const*)+0xd4>
 8012c62:	9a02      	ldr	r2, [sp, #8]
 8012c64:	6823      	ldr	r3, [r4, #0]
 8012c66:	b142      	cbz	r2, 8012c7a <NetworkParams::callbackFunction(char const*)+0xce>
 8012c68:	ba11      	rev	r1, r2
 8012c6a:	43c8      	mvns	r0, r1
 8012c6c:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8012c70:	d103      	bne.n	8012c7a <NetworkParams::callbackFunction(char const*)+0xce>
 8012c72:	60a2      	str	r2, [r4, #8]
 8012c74:	f043 0304 	orr.w	r3, r3, #4
 8012c78:	e7eb      	b.n	8012c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8012c7a:	f023 0304 	bic.w	r3, r3, #4
 8012c7e:	e7e8      	b.n	8012c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8012c80:	491e      	ldr	r1, [pc, #120]	@ (8012cfc <NetworkParams::callbackFunction(char const*)+0x150>)
 8012c82:	aa02      	add	r2, sp, #8
 8012c84:	4628      	mov	r0, r5
 8012c86:	f001 fe4e 	bl	8014926 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8012c8a:	b950      	cbnz	r0, 8012ca2 <NetworkParams::callbackFunction(char const*)+0xf6>
 8012c8c:	9a02      	ldr	r2, [sp, #8]
 8012c8e:	6823      	ldr	r3, [r4, #0]
 8012c90:	b122      	cbz	r2, 8012c9c <NetworkParams::callbackFunction(char const*)+0xf0>
 8012c92:	f043 0308 	orr.w	r3, r3, #8
 8012c96:	6023      	str	r3, [r4, #0]
 8012c98:	60e2      	str	r2, [r4, #12]
 8012c9a:	e79d      	b.n	8012bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012c9c:	f023 0308 	bic.w	r3, r3, #8
 8012ca0:	e7d7      	b.n	8012c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8012ca2:	233f      	movs	r3, #63	@ 0x3f
 8012ca4:	9303      	str	r3, [sp, #12]
 8012ca6:	4916      	ldr	r1, [pc, #88]	@ (8012d00 <NetworkParams::callbackFunction(char const*)+0x154>)
 8012ca8:	ab03      	add	r3, sp, #12
 8012caa:	f104 0215 	add.w	r2, r4, #21
 8012cae:	4628      	mov	r0, r5
 8012cb0:	f001 fdce 	bl	8014850 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8012cb4:	b930      	cbnz	r0, 8012cc4 <NetworkParams::callbackFunction(char const*)+0x118>
 8012cb6:	9b03      	ldr	r3, [sp, #12]
 8012cb8:	4423      	add	r3, r4
 8012cba:	7558      	strb	r0, [r3, #21]
 8012cbc:	6823      	ldr	r3, [r4, #0]
 8012cbe:	f043 0320 	orr.w	r3, r3, #32
 8012cc2:	e7c6      	b.n	8012c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8012cc4:	490f      	ldr	r1, [pc, #60]	@ (8012d04 <NetworkParams::callbackFunction(char const*)+0x158>)
 8012cc6:	aa02      	add	r2, sp, #8
 8012cc8:	4628      	mov	r0, r5
 8012cca:	f001 fe2c 	bl	8014926 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8012cce:	2800      	cmp	r0, #0
 8012cd0:	d182      	bne.n	8012bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012cd2:	9a02      	ldr	r2, [sp, #8]
 8012cd4:	6823      	ldr	r3, [r4, #0]
 8012cd6:	b12a      	cbz	r2, 8012ce4 <NetworkParams::callbackFunction(char const*)+0x138>
 8012cd8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012cdc:	6023      	str	r3, [r4, #0]
 8012cde:	f8c4 2055 	str.w	r2, [r4, #85]	@ 0x55
 8012ce2:	e779      	b.n	8012bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8012ce4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012ce8:	e7f8      	b.n	8012cdc <NetworkParams::callbackFunction(char const*)+0x130>
 8012cea:	bf00      	nop
 8012cec:	0801bec1 	stmdaeq	r1, {r0, r6, r7, r9, sl, fp, ip, sp, pc}
 8012cf0:	0801beb1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 8012cf4:	0801bea6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, fp, ip, sp, pc}
 8012cf8:	0801be9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 8012cfc:	0801be8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, ip, sp, pc}
 8012d00:	0801be84 	stmdaeq	r1, {r2, r7, r9, sl, fp, ip, sp, pc}
 8012d04:	0801be79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}

08012d08 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8012d08:	f7ff bf50 	b.w	8012bac <NetworkParams::callbackFunction(char const*)>

08012d0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
 8012d0c:	b570      	push	{r4, r5, r6, lr}
 8012d0e:	4604      	mov	r4, r0
 8012d10:	b086      	sub	sp, #24
 8012d12:	4615      	mov	r5, r2
 8012d14:	461e      	mov	r6, r3
 8012d16:	2900      	cmp	r1, #0
 8012d18:	d046      	beq.n	8012da8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 8012d1a:	225e      	movs	r2, #94	@ 0x5e
 8012d1c:	f004 fcc3 	bl	80176a6 <memmove>
 8012d20:	462a      	mov	r2, r5
 8012d22:	4d76      	ldr	r5, [pc, #472]	@ (8012efc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>)
 8012d24:	4976      	ldr	r1, [pc, #472]	@ (8012f00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f4>)
 8012d26:	4633      	mov	r3, r6
 8012d28:	a803      	add	r0, sp, #12
 8012d2a:	f001 fc81 	bl	8014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8012d2e:	692a      	ldr	r2, [r5, #16]
 8012d30:	4974      	ldr	r1, [pc, #464]	@ (8012f04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>)
 8012d32:	2300      	movs	r3, #0
 8012d34:	a803      	add	r0, sp, #12
 8012d36:	f001 fcbd 	bl	80146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012d3a:	6823      	ldr	r3, [r4, #0]
 8012d3c:	0799      	lsls	r1, r3, #30
 8012d3e:	bf5c      	itt	pl
 8012d40:	682a      	ldrpl	r2, [r5, #0]
 8012d42:	6062      	strpl	r2, [r4, #4]
 8012d44:	075a      	lsls	r2, r3, #29
 8012d46:	bf5c      	itt	pl
 8012d48:	686a      	ldrpl	r2, [r5, #4]
 8012d4a:	60a2      	strpl	r2, [r4, #8]
 8012d4c:	071e      	lsls	r6, r3, #28
 8012d4e:	bf5c      	itt	pl
 8012d50:	68aa      	ldrpl	r2, [r5, #8]
 8012d52:	60e2      	strpl	r2, [r4, #12]
 8012d54:	0698      	lsls	r0, r3, #26
 8012d56:	d412      	bmi.n	8012d7e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x72>
 8012d58:	4b6b      	ldr	r3, [pc, #428]	@ (8012f08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1fc>)
 8012d5a:	681b      	ldr	r3, [r3, #0]
 8012d5c:	f104 0015 	add.w	r0, r4, #21
 8012d60:	3315      	adds	r3, #21
 8012d62:	223f      	movs	r2, #63	@ 0x3f
 8012d64:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8012d68:	b119      	cbz	r1, 8012d72 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x66>
 8012d6a:	3a01      	subs	r2, #1
 8012d6c:	f800 1b01 	strb.w	r1, [r0], #1
 8012d70:	d1f8      	bne.n	8012d64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x58>
 8012d72:	2100      	movs	r1, #0
 8012d74:	f004 fcae 	bl	80176d4 <memset>
 8012d78:	2300      	movs	r3, #0
 8012d7a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012d7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012d82:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012d86:	7d23      	ldrb	r3, [r4, #20]
 8012d88:	6821      	ldr	r1, [r4, #0]
 8012d8a:	42aa      	cmp	r2, r5
 8012d8c:	d21d      	bcs.n	8012dca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 8012d8e:	9803      	ldr	r0, [sp, #12]
 8012d90:	07c9      	lsls	r1, r1, #31
 8012d92:	4410      	add	r0, r2
 8012d94:	eba5 0502 	sub.w	r5, r5, r2
 8012d98:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012d9c:	d407      	bmi.n	8012dae <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8012d9e:	b93a      	cbnz	r2, 8012db0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
 8012da0:	9300      	str	r3, [sp, #0]
 8012da2:	4a5a      	ldr	r2, [pc, #360]	@ (8012f0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8012da4:	4b5a      	ldr	r3, [pc, #360]	@ (8012f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8012da6:	e006      	b.n	8012db6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8012da8:	f7ff feb4 	bl	8012b14 <NetworkParamsStore::Copy(networkparams::Params*)>
 8012dac:	e7b8      	b.n	8012d20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8012dae:	b312      	cbz	r2, 8012df6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 8012db0:	9300      	str	r3, [sp, #0]
 8012db2:	4a58      	ldr	r2, [pc, #352]	@ (8012f14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8012db4:	4b56      	ldr	r3, [pc, #344]	@ (8012f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8012db6:	4629      	mov	r1, r5
 8012db8:	f004 ff98 	bl	8017cec <snprintf>
 8012dbc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012dc0:	4285      	cmp	r5, r0
 8012dc2:	bfa4      	itt	ge
 8012dc4:	181b      	addge	r3, r3, r0
 8012dc6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012dca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012dce:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012dd2:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8012dd6:	6821      	ldr	r1, [r4, #0]
 8012dd8:	42aa      	cmp	r2, r5
 8012dda:	d21f      	bcs.n	8012e1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
 8012ddc:	9803      	ldr	r0, [sp, #12]
 8012dde:	05ce      	lsls	r6, r1, #23
 8012de0:	4410      	add	r0, r2
 8012de2:	eba5 0502 	sub.w	r5, r5, r2
 8012de6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012dea:	d408      	bmi.n	8012dfe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf2>
 8012dec:	b94a      	cbnz	r2, 8012e02 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf6>
 8012dee:	9300      	str	r3, [sp, #0]
 8012df0:	4a46      	ldr	r2, [pc, #280]	@ (8012f0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8012df2:	4b49      	ldr	r3, [pc, #292]	@ (8012f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8012df4:	e008      	b.n	8012e08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8012df6:	9300      	str	r3, [sp, #0]
 8012df8:	4a48      	ldr	r2, [pc, #288]	@ (8012f1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8012dfa:	4b45      	ldr	r3, [pc, #276]	@ (8012f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8012dfc:	e7db      	b.n	8012db6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8012dfe:	2a00      	cmp	r2, #0
 8012e00:	d03e      	beq.n	8012e80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x174>
 8012e02:	9300      	str	r3, [sp, #0]
 8012e04:	4a43      	ldr	r2, [pc, #268]	@ (8012f14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8012e06:	4b44      	ldr	r3, [pc, #272]	@ (8012f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8012e08:	4629      	mov	r1, r5
 8012e0a:	f004 ff6f 	bl	8017cec <snprintf>
 8012e0e:	4285      	cmp	r5, r0
 8012e10:	bfa2      	ittt	ge
 8012e12:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012e16:	18c0      	addge	r0, r0, r3
 8012e18:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012e1c:	4940      	ldr	r1, [pc, #256]	@ (8012f20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 8012e1e:	a803      	add	r0, sp, #12
 8012e20:	f001 fcc2 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 8012e24:	6823      	ldr	r3, [r4, #0]
 8012e26:	6862      	ldr	r2, [r4, #4]
 8012e28:	493e      	ldr	r1, [pc, #248]	@ (8012f24 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 8012e2a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8012e2e:	a803      	add	r0, sp, #12
 8012e30:	f001 fc40 	bl	80146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012e34:	6823      	ldr	r3, [r4, #0]
 8012e36:	68a2      	ldr	r2, [r4, #8]
 8012e38:	493b      	ldr	r1, [pc, #236]	@ (8012f28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 8012e3a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8012e3e:	a803      	add	r0, sp, #12
 8012e40:	f001 fc38 	bl	80146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012e44:	6823      	ldr	r3, [r4, #0]
 8012e46:	68e2      	ldr	r2, [r4, #12]
 8012e48:	4938      	ldr	r1, [pc, #224]	@ (8012f2c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 8012e4a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8012e4e:	a803      	add	r0, sp, #12
 8012e50:	f001 fc30 	bl	80146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012e54:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012e58:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012e5c:	6821      	ldr	r1, [r4, #0]
 8012e5e:	42aa      	cmp	r2, r5
 8012e60:	d221      	bcs.n	8012ea6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x19a>
 8012e62:	9803      	ldr	r0, [sp, #12]
 8012e64:	0689      	lsls	r1, r1, #26
 8012e66:	4410      	add	r0, r2
 8012e68:	eba5 0502 	sub.w	r5, r5, r2
 8012e6c:	f104 0315 	add.w	r3, r4, #21
 8012e70:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012e74:	d408      	bmi.n	8012e88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
 8012e76:	b94a      	cbnz	r2, 8012e8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x180>
 8012e78:	9300      	str	r3, [sp, #0]
 8012e7a:	4a2d      	ldr	r2, [pc, #180]	@ (8012f30 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 8012e7c:	4b2d      	ldr	r3, [pc, #180]	@ (8012f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8012e7e:	e008      	b.n	8012e92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8012e80:	9300      	str	r3, [sp, #0]
 8012e82:	4a26      	ldr	r2, [pc, #152]	@ (8012f1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8012e84:	4b24      	ldr	r3, [pc, #144]	@ (8012f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8012e86:	e7bf      	b.n	8012e08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8012e88:	2a00      	cmp	r2, #0
 8012e8a:	d032      	beq.n	8012ef2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1e6>
 8012e8c:	9300      	str	r3, [sp, #0]
 8012e8e:	4a2a      	ldr	r2, [pc, #168]	@ (8012f38 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 8012e90:	4b28      	ldr	r3, [pc, #160]	@ (8012f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8012e92:	4629      	mov	r1, r5
 8012e94:	f004 ff2a 	bl	8017cec <snprintf>
 8012e98:	4285      	cmp	r5, r0
 8012e9a:	bfa2      	ittt	ge
 8012e9c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012ea0:	18c0      	addge	r0, r0, r3
 8012ea2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012ea6:	4925      	ldr	r1, [pc, #148]	@ (8012f3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 8012ea8:	a803      	add	r0, sp, #12
 8012eaa:	f001 fc7d 	bl	80147a8 <PropertiesBuilder::AddComment(char const*)>
 8012eae:	6823      	ldr	r3, [r4, #0]
 8012eb0:	f8d4 2055 	ldr.w	r2, [r4, #85]	@ 0x55
 8012eb4:	4922      	ldr	r1, [pc, #136]	@ (8012f40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 8012eb6:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8012eba:	a803      	add	r0, sp, #12
 8012ebc:	f001 fbfa 	bl	80146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012ec0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012ec4:	b17b      	cbz	r3, 8012ee6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1da>
 8012ec6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012eca:	9b03      	ldr	r3, [sp, #12]
 8012ecc:	4413      	add	r3, r2
 8012ece:	227d      	movs	r2, #125	@ 0x7d
 8012ed0:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012ed4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012ed8:	9903      	ldr	r1, [sp, #12]
 8012eda:	54ca      	strb	r2, [r1, r3]
 8012edc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012ee0:	3301      	adds	r3, #1
 8012ee2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012ee6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012eea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012eec:	601a      	str	r2, [r3, #0]
 8012eee:	b006      	add	sp, #24
 8012ef0:	bd70      	pop	{r4, r5, r6, pc}
 8012ef2:	9300      	str	r3, [sp, #0]
 8012ef4:	4a13      	ldr	r2, [pc, #76]	@ (8012f44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 8012ef6:	4b0f      	ldr	r3, [pc, #60]	@ (8012f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8012ef8:	e7cb      	b.n	8012e92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8012efa:	bf00      	nop
 8012efc:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8012f00:	0801beca 	stmdaeq	r1, {r1, r3, r6, r7, r9, sl, fp, ip, sp, pc}
 8012f04:	08019032 	stmdaeq	r1, {r1, r4, r5, ip, pc}
 8012f08:	2000cbf0 	strdcs	ip, [r0], -r0
 8012f0c:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 8012f10:	0801bec1 	stmdaeq	r1, {r0, r6, r7, r9, sl, fp, ip, sp, pc}
 8012f14:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 8012f18:	0801beb1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, fp, ip, sp, pc}
 8012f1c:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}
 8012f20:	0801903f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, ip, pc}
 8012f24:	0801bea6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, fp, ip, sp, pc}
 8012f28:	0801be9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 8012f2c:	0801be8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, ip, sp, pc}
 8012f30:	080188c4 	stmdaeq	r1, {r2, r6, r7, fp, pc}
 8012f34:	0801be84 	stmdaeq	r1, {r2, r7, r9, sl, fp, ip, sp, pc}
 8012f38:	080188b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, pc}
 8012f3c:	08019049 	stmdaeq	r1, {r0, r3, r6, ip, pc}
 8012f40:	0801be79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 8012f44:	080188c5 	stmdaeq	r1, {r0, r2, r6, r7, fp, pc}

08012f48 <net::phy_customized_led()>:
 8012f48:	4770      	bx	lr

08012f4a <net::phy_customized_timing()>:
 8012f4a:	4770      	bx	lr

08012f4c <emac_adjust_link(net::PhyStatus)>:
 8012f4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012f4e:	ac04      	add	r4, sp, #16
 8012f50:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8012f54:	460c      	mov	r4, r1
 8012f56:	4b14      	ldr	r3, [pc, #80]	@ (8012fa8 <emac_adjust_link(net::PhyStatus)+0x5c>)
 8012f58:	4914      	ldr	r1, [pc, #80]	@ (8012fac <emac_adjust_link(net::PhyStatus)+0x60>)
 8012f5a:	2a00      	cmp	r2, #0
 8012f5c:	4615      	mov	r5, r2
 8012f5e:	4606      	mov	r6, r0
 8012f60:	bf14      	ite	ne
 8012f62:	2264      	movne	r2, #100	@ 0x64
 8012f64:	220a      	moveq	r2, #10
 8012f66:	4812      	ldr	r0, [pc, #72]	@ (8012fb0 <emac_adjust_link(net::PhyStatus)+0x64>)
 8012f68:	2c00      	cmp	r4, #0
 8012f6a:	bf18      	it	ne
 8012f6c:	460b      	movne	r3, r1
 8012f6e:	4911      	ldr	r1, [pc, #68]	@ (8012fb4 <emac_adjust_link(net::PhyStatus)+0x68>)
 8012f70:	2e01      	cmp	r6, #1
 8012f72:	bf08      	it	eq
 8012f74:	4601      	moveq	r1, r0
 8012f76:	4810      	ldr	r0, [pc, #64]	@ (8012fb8 <emac_adjust_link(net::PhyStatus)+0x6c>)
 8012f78:	f004 fe90 	bl	8017c9c <printf>
 8012f7c:	2d01      	cmp	r5, #1
 8012f7e:	d10d      	bne.n	8012f9c <emac_adjust_link(net::PhyStatus)+0x50>
 8012f80:	2c01      	cmp	r4, #1
 8012f82:	bf14      	ite	ne
 8012f84:	f44f 4080 	movne.w	r0, #16384	@ 0x4000
 8012f88:	f44f 4090 	moveq.w	r0, #18432	@ 0x4800
 8012f8c:	2210      	movs	r2, #16
 8012f8e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8012f92:	b004      	add	sp, #16
 8012f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f98:	f002 be72 	b.w	8015c80 <enet_init>
 8012f9c:	1e63      	subs	r3, r4, #1
 8012f9e:	4258      	negs	r0, r3
 8012fa0:	4158      	adcs	r0, r3
 8012fa2:	02c0      	lsls	r0, r0, #11
 8012fa4:	e7f2      	b.n	8012f8c <emac_adjust_link(net::PhyStatus)+0x40>
 8012fa6:	bf00      	nop
 8012fa8:	08019081 	stmdaeq	r1, {r0, r7, ip, pc}
 8012fac:	08019086 	stmdaeq	r1, {r1, r2, r7, ip, pc}
 8012fb0:	08019079 	stmdaeq	r1, {r0, r3, r4, r5, r6, ip, pc}
 8012fb4:	0801907c 	stmdaeq	r1, {r2, r3, r4, r5, r6, ip, pc}
 8012fb8:	0801908b 	stmdaeq	r1, {r0, r1, r3, r7, ip, pc}

08012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
 8012fbc:	b508      	push	{r3, lr}
 8012fbe:	4613      	mov	r3, r2
 8012fc0:	b28a      	uxth	r2, r1
 8012fc2:	b281      	uxth	r1, r0
 8012fc4:	2000      	movs	r0, #0
 8012fc6:	f002 fe31 	bl	8015c2c <enet_phy_write_read>
 8012fca:	1e43      	subs	r3, r0, #1
 8012fcc:	4258      	negs	r0, r3
 8012fce:	4158      	adcs	r0, r3
 8012fd0:	bd08      	pop	{r3, pc}

08012fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>:
 8012fd2:	b507      	push	{r0, r1, r2, lr}
 8012fd4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012fd8:	f10d 0306 	add.w	r3, sp, #6
 8012fdc:	b28a      	uxth	r2, r1
 8012fde:	b281      	uxth	r1, r0
 8012fe0:	2002      	movs	r0, #2
 8012fe2:	f002 fe23 	bl	8015c2c <enet_phy_write_read>
 8012fe6:	1e43      	subs	r3, r0, #1
 8012fe8:	4258      	negs	r0, r3
 8012fea:	4158      	adcs	r0, r3
 8012fec:	b003      	add	sp, #12
 8012fee:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08012ff4 <net::phy_config(unsigned long)>:
 8012ff4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ff6:	4e28      	ldr	r6, [pc, #160]	@ (8013098 <net::phy_config(unsigned long)+0xa4>)
 8012ff8:	4605      	mov	r5, r0
 8012ffa:	2001      	movs	r0, #1
 8012ffc:	6934      	ldr	r4, [r6, #16]
 8012ffe:	f003 f905 	bl	801620c <rcu_clock_freq_get>
 8013002:	4b26      	ldr	r3, [pc, #152]	@ (801309c <net::phy_config(unsigned long)+0xa8>)
 8013004:	4a26      	ldr	r2, [pc, #152]	@ (80130a0 <net::phy_config(unsigned long)+0xac>)
 8013006:	4403      	add	r3, r0
 8013008:	4293      	cmp	r3, r2
 801300a:	f024 041c 	bic.w	r4, r4, #28
 801300e:	d216      	bcs.n	801303e <net::phy_config(unsigned long)+0x4a>
 8013010:	f044 0408 	orr.w	r4, r4, #8
 8013014:	6134      	str	r4, [r6, #16]
 8013016:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 801301a:	2100      	movs	r1, #0
 801301c:	4628      	mov	r0, r5
 801301e:	f7ff ffd8 	bl	8012fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8013022:	b330      	cbz	r0, 8013072 <net::phy_config(unsigned long)+0x7e>
 8013024:	4c1f      	ldr	r4, [pc, #124]	@ (80130a4 <net::phy_config(unsigned long)+0xb0>)
 8013026:	6826      	ldr	r6, [r4, #0]
 8013028:	6823      	ldr	r3, [r4, #0]
 801302a:	1b9b      	subs	r3, r3, r6
 801302c:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8013030:	d325      	bcc.n	801307e <net::phy_config(unsigned long)+0x8a>
 8013032:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013036:	43c0      	mvns	r0, r0
 8013038:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801303c:	e01a      	b.n	8013074 <net::phy_config(unsigned long)+0x80>
 801303e:	4b1a      	ldr	r3, [pc, #104]	@ (80130a8 <net::phy_config(unsigned long)+0xb4>)
 8013040:	4a1a      	ldr	r2, [pc, #104]	@ (80130ac <net::phy_config(unsigned long)+0xb8>)
 8013042:	4403      	add	r3, r0
 8013044:	4293      	cmp	r3, r2
 8013046:	d802      	bhi.n	801304e <net::phy_config(unsigned long)+0x5a>
 8013048:	f044 040c 	orr.w	r4, r4, #12
 801304c:	e7e2      	b.n	8013014 <net::phy_config(unsigned long)+0x20>
 801304e:	4b18      	ldr	r3, [pc, #96]	@ (80130b0 <net::phy_config(unsigned long)+0xbc>)
 8013050:	4a18      	ldr	r2, [pc, #96]	@ (80130b4 <net::phy_config(unsigned long)+0xc0>)
 8013052:	4403      	add	r3, r0
 8013054:	4293      	cmp	r3, r2
 8013056:	d3dd      	bcc.n	8013014 <net::phy_config(unsigned long)+0x20>
 8013058:	4b17      	ldr	r3, [pc, #92]	@ (80130b8 <net::phy_config(unsigned long)+0xc4>)
 801305a:	4a18      	ldr	r2, [pc, #96]	@ (80130bc <net::phy_config(unsigned long)+0xc8>)
 801305c:	4403      	add	r3, r0
 801305e:	4293      	cmp	r3, r2
 8013060:	d802      	bhi.n	8013068 <net::phy_config(unsigned long)+0x74>
 8013062:	f044 0404 	orr.w	r4, r4, #4
 8013066:	e7d5      	b.n	8013014 <net::phy_config(unsigned long)+0x20>
 8013068:	4b15      	ldr	r3, [pc, #84]	@ (80130c0 <net::phy_config(unsigned long)+0xcc>)
 801306a:	4a16      	ldr	r2, [pc, #88]	@ (80130c4 <net::phy_config(unsigned long)+0xd0>)
 801306c:	4403      	add	r3, r0
 801306e:	4293      	cmp	r3, r2
 8013070:	d902      	bls.n	8013078 <net::phy_config(unsigned long)+0x84>
 8013072:	2000      	movs	r0, #0
 8013074:	b002      	add	sp, #8
 8013076:	bd70      	pop	{r4, r5, r6, pc}
 8013078:	f044 0410 	orr.w	r4, r4, #16
 801307c:	e7ca      	b.n	8013014 <net::phy_config(unsigned long)+0x20>
 801307e:	f10d 0206 	add.w	r2, sp, #6
 8013082:	2100      	movs	r1, #0
 8013084:	4628      	mov	r0, r5
 8013086:	f7ff ff99 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801308a:	2800      	cmp	r0, #0
 801308c:	d0f1      	beq.n	8013072 <net::phy_config(unsigned long)+0x7e>
 801308e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8013092:	2b00      	cmp	r3, #0
 8013094:	dbc8      	blt.n	8013028 <net::phy_config(unsigned long)+0x34>
 8013096:	e7ed      	b.n	8013074 <net::phy_config(unsigned long)+0x80>
 8013098:	40028000 	andmi	r8, r2, r0
 801309c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80130a0:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80130a4:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80130a8:	fde9f140 	stc2l	1, cr15, [r9, #256]!	@ 0x100
 80130ac:	017d783f 	cmneq	sp, pc, lsr r8
 80130b0:	fc6c7900 	stc2l	9, cr7, [ip], #-0	@ <UNPREDICTABLE>
 80130b4:	02625a00 	rsbeq	r5, r2, #0, 20
 80130b8:	fa0a1f00 	blx	829acc0 <_sidata+0x27e7dc>
 80130bc:	02faf07f 	rscseq	pc, sl, #127	@ 0x7f
 80130c0:	f70f2e80 			@ <UNDEFINED> instruction: 0xf70f2e80
 80130c4:	055d4a80 	ldrbeq	r4, [sp, #-2688]	@ 0xfffff580

080130c8 <enet_gpio_config()>:
 80130c8:	b510      	push	{r4, lr}
 80130ca:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80130ce:	f003 f861 	bl	8016194 <rcu_periph_clock_enable>
 80130d2:	f640 4001 	movw	r0, #3073	@ 0xc01
 80130d6:	4c68      	ldr	r4, [pc, #416]	@ (8013278 <enet_gpio_config()+0x1b0>)
 80130d8:	f003 f85c 	bl	8016194 <rcu_periph_clock_enable>
 80130dc:	f640 4002 	movw	r0, #3074	@ 0xc02
 80130e0:	f003 f858 	bl	8016194 <rcu_periph_clock_enable>
 80130e4:	f241 100e 	movw	r0, #4366	@ 0x110e
 80130e8:	f003 f854 	bl	8016194 <rcu_periph_clock_enable>
 80130ec:	4620      	mov	r0, r4
 80130ee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80130f2:	2100      	movs	r1, #0
 80130f4:	f003 f80a 	bl	801610c <gpio_af_set>
 80130f8:	4620      	mov	r0, r4
 80130fa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80130fe:	2200      	movs	r2, #0
 8013100:	2102      	movs	r1, #2
 8013102:	f002 ffc5 	bl	8016090 <gpio_mode_set>
 8013106:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801310a:	2203      	movs	r2, #3
 801310c:	4620      	mov	r0, r4
 801310e:	2100      	movs	r1, #0
 8013110:	f002 ffe0 	bl	80160d4 <gpio_output_options_set>
 8013114:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 8013118:	f44f 00c0 	mov.w	r0, #6291456	@ 0x600000
 801311c:	f003 f85a 	bl	80161d4 <rcu_ckout0_config>
 8013120:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8013124:	f003 f8e6 	bl	80162f4 <syscfg_enet_phy_interface_config>
 8013128:	2302      	movs	r3, #2
 801312a:	4619      	mov	r1, r3
 801312c:	4620      	mov	r0, r4
 801312e:	2200      	movs	r2, #0
 8013130:	f002 ffae 	bl	8016090 <gpio_mode_set>
 8013134:	4620      	mov	r0, r4
 8013136:	2302      	movs	r3, #2
 8013138:	2203      	movs	r2, #3
 801313a:	2100      	movs	r1, #0
 801313c:	f002 ffca 	bl	80160d4 <gpio_output_options_set>
 8013140:	4620      	mov	r0, r4
 8013142:	2304      	movs	r3, #4
 8013144:	2200      	movs	r2, #0
 8013146:	2102      	movs	r1, #2
 8013148:	f002 ffa2 	bl	8016090 <gpio_mode_set>
 801314c:	4620      	mov	r0, r4
 801314e:	2304      	movs	r3, #4
 8013150:	2203      	movs	r2, #3
 8013152:	2100      	movs	r1, #0
 8013154:	f002 ffbe 	bl	80160d4 <gpio_output_options_set>
 8013158:	4620      	mov	r0, r4
 801315a:	2380      	movs	r3, #128	@ 0x80
 801315c:	2200      	movs	r2, #0
 801315e:	2102      	movs	r1, #2
 8013160:	f002 ff96 	bl	8016090 <gpio_mode_set>
 8013164:	2380      	movs	r3, #128	@ 0x80
 8013166:	4620      	mov	r0, r4
 8013168:	2203      	movs	r2, #3
 801316a:	2100      	movs	r1, #0
 801316c:	f002 ffb2 	bl	80160d4 <gpio_output_options_set>
 8013170:	4620      	mov	r0, r4
 8013172:	2202      	movs	r2, #2
 8013174:	210b      	movs	r1, #11
 8013176:	f002 ffc9 	bl	801610c <gpio_af_set>
 801317a:	4620      	mov	r0, r4
 801317c:	2204      	movs	r2, #4
 801317e:	210b      	movs	r1, #11
 8013180:	f002 ffc4 	bl	801610c <gpio_af_set>
 8013184:	4620      	mov	r0, r4
 8013186:	2280      	movs	r2, #128	@ 0x80
 8013188:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801318c:	210b      	movs	r1, #11
 801318e:	f002 ffbd 	bl	801610c <gpio_af_set>
 8013192:	4620      	mov	r0, r4
 8013194:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8013198:	2200      	movs	r2, #0
 801319a:	2102      	movs	r1, #2
 801319c:	f002 ff78 	bl	8016090 <gpio_mode_set>
 80131a0:	4620      	mov	r0, r4
 80131a2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80131a6:	2203      	movs	r2, #3
 80131a8:	2100      	movs	r1, #0
 80131aa:	f002 ff93 	bl	80160d4 <gpio_output_options_set>
 80131ae:	4620      	mov	r0, r4
 80131b0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80131b4:	2200      	movs	r2, #0
 80131b6:	2102      	movs	r1, #2
 80131b8:	f002 ff6a 	bl	8016090 <gpio_mode_set>
 80131bc:	4620      	mov	r0, r4
 80131be:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80131c2:	2203      	movs	r2, #3
 80131c4:	2100      	movs	r1, #0
 80131c6:	f002 ff85 	bl	80160d4 <gpio_output_options_set>
 80131ca:	4620      	mov	r0, r4
 80131cc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80131d0:	2200      	movs	r2, #0
 80131d2:	2102      	movs	r1, #2
 80131d4:	f002 ff5c 	bl	8016090 <gpio_mode_set>
 80131d8:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80131dc:	4620      	mov	r0, r4
 80131de:	2203      	movs	r2, #3
 80131e0:	2100      	movs	r1, #0
 80131e2:	f002 ff77 	bl	80160d4 <gpio_output_options_set>
 80131e6:	4620      	mov	r0, r4
 80131e8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80131ec:	210b      	movs	r1, #11
 80131ee:	f002 ff8d 	bl	801610c <gpio_af_set>
 80131f2:	4620      	mov	r0, r4
 80131f4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80131f8:	210b      	movs	r1, #11
 80131fa:	f002 ff87 	bl	801610c <gpio_af_set>
 80131fe:	4620      	mov	r0, r4
 8013200:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8013204:	210b      	movs	r1, #11
 8013206:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801320a:	f002 ff7f 	bl	801610c <gpio_af_set>
 801320e:	2302      	movs	r3, #2
 8013210:	4619      	mov	r1, r3
 8013212:	4620      	mov	r0, r4
 8013214:	2200      	movs	r2, #0
 8013216:	f002 ff3b 	bl	8016090 <gpio_mode_set>
 801321a:	4620      	mov	r0, r4
 801321c:	2302      	movs	r3, #2
 801321e:	2203      	movs	r2, #3
 8013220:	2100      	movs	r1, #0
 8013222:	f002 ff57 	bl	80160d4 <gpio_output_options_set>
 8013226:	4620      	mov	r0, r4
 8013228:	2310      	movs	r3, #16
 801322a:	2200      	movs	r2, #0
 801322c:	2102      	movs	r1, #2
 801322e:	f002 ff2f 	bl	8016090 <gpio_mode_set>
 8013232:	4620      	mov	r0, r4
 8013234:	2310      	movs	r3, #16
 8013236:	2203      	movs	r2, #3
 8013238:	2100      	movs	r1, #0
 801323a:	f002 ff4b 	bl	80160d4 <gpio_output_options_set>
 801323e:	4620      	mov	r0, r4
 8013240:	2320      	movs	r3, #32
 8013242:	2200      	movs	r2, #0
 8013244:	2102      	movs	r1, #2
 8013246:	f002 ff23 	bl	8016090 <gpio_mode_set>
 801324a:	2320      	movs	r3, #32
 801324c:	4620      	mov	r0, r4
 801324e:	2203      	movs	r2, #3
 8013250:	2100      	movs	r1, #0
 8013252:	f002 ff3f 	bl	80160d4 <gpio_output_options_set>
 8013256:	4620      	mov	r0, r4
 8013258:	2202      	movs	r2, #2
 801325a:	210b      	movs	r1, #11
 801325c:	f002 ff56 	bl	801610c <gpio_af_set>
 8013260:	4620      	mov	r0, r4
 8013262:	2210      	movs	r2, #16
 8013264:	210b      	movs	r1, #11
 8013266:	f002 ff51 	bl	801610c <gpio_af_set>
 801326a:	4620      	mov	r0, r4
 801326c:	2220      	movs	r2, #32
 801326e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013272:	210b      	movs	r1, #11
 8013274:	f002 bf4a 	b.w	801610c <gpio_af_set>
 8013278:	40020000 	andmi	r0, r2, r0

0801327c <emac_eth_recv(unsigned char**)>:
 801327c:	b538      	push	{r3, r4, r5, lr}
 801327e:	4d07      	ldr	r5, [pc, #28]	@ (801329c <emac_eth_recv(unsigned char**)+0x20>)
 8013280:	4604      	mov	r4, r0
 8013282:	2102      	movs	r1, #2
 8013284:	6828      	ldr	r0, [r5, #0]
 8013286:	f002 fe7d 	bl	8015f84 <enet_desc_information_get>
 801328a:	b118      	cbz	r0, 8013294 <emac_eth_recv(unsigned char**)+0x18>
 801328c:	682b      	ldr	r3, [r5, #0]
 801328e:	689b      	ldr	r3, [r3, #8]
 8013290:	6023      	str	r3, [r4, #0]
 8013292:	bd38      	pop	{r3, r4, r5, pc}
 8013294:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8013298:	bd38      	pop	{r3, r4, r5, pc}
 801329a:	bf00      	nop
 801329c:	2000ce10 	andcs	ip, r0, r0, lsl lr

080132a0 <emac_free_pkt()>:
 80132a0:	490d      	ldr	r1, [pc, #52]	@ (80132d8 <emac_free_pkt()+0x38>)
 80132a2:	e001      	b.n	80132a8 <emac_free_pkt()+0x8>
 80132a4:	f3bf 8f5f 	dmb	sy
 80132a8:	680b      	ldr	r3, [r1, #0]
 80132aa:	681a      	ldr	r2, [r3, #0]
 80132ac:	2a00      	cmp	r2, #0
 80132ae:	dbf9      	blt.n	80132a4 <emac_free_pkt()+0x4>
 80132b0:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 80132b4:	4a09      	ldr	r2, [pc, #36]	@ (80132dc <emac_free_pkt()+0x3c>)
 80132b6:	6018      	str	r0, [r3, #0]
 80132b8:	6950      	ldr	r0, [r2, #20]
 80132ba:	0600      	lsls	r0, r0, #24
 80132bc:	d509      	bpl.n	80132d2 <emac_free_pkt()+0x32>
 80132be:	b410      	push	{r4}
 80132c0:	2000      	movs	r0, #0
 80132c2:	2480      	movs	r4, #128	@ 0x80
 80132c4:	6154      	str	r4, [r2, #20]
 80132c6:	6090      	str	r0, [r2, #8]
 80132c8:	68db      	ldr	r3, [r3, #12]
 80132ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80132ce:	600b      	str	r3, [r1, #0]
 80132d0:	4770      	bx	lr
 80132d2:	68db      	ldr	r3, [r3, #12]
 80132d4:	600b      	str	r3, [r1, #0]
 80132d6:	4770      	bx	lr
 80132d8:	2000ce10 	andcs	ip, r0, r0, lsl lr
 80132dc:	40029000 	andmi	r9, r2, r0

080132e0 <emac_eth_send(void*, unsigned long)>:
 80132e0:	b570      	push	{r4, r5, r6, lr}
 80132e2:	4c20      	ldr	r4, [pc, #128]	@ (8013364 <emac_eth_send(void*, unsigned long)+0x84>)
 80132e4:	e001      	b.n	80132ea <emac_eth_send(void*, unsigned long)+0xa>
 80132e6:	f3bf 8f5f 	dmb	sy
 80132ea:	6823      	ldr	r3, [r4, #0]
 80132ec:	681a      	ldr	r2, [r3, #0]
 80132ee:	2a00      	cmp	r2, #0
 80132f0:	dbf9      	blt.n	80132e6 <emac_eth_send(void*, unsigned long)+0x6>
 80132f2:	689b      	ldr	r3, [r3, #8]
 80132f4:	ea43 0200 	orr.w	r2, r3, r0
 80132f8:	0792      	lsls	r2, r2, #30
 80132fa:	d01e      	beq.n	801333a <emac_eth_send(void*, unsigned long)+0x5a>
 80132fc:	460a      	mov	r2, r1
 80132fe:	eb00 0c02 	add.w	ip, r0, r2
 8013302:	b12a      	cbz	r2, 8013310 <emac_eth_send(void*, unsigned long)+0x30>
 8013304:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013308:	f803 2b01 	strb.w	r2, [r3], #1
 801330c:	4584      	cmp	ip, r0
 801330e:	d1f9      	bne.n	8013304 <emac_eth_send(void*, unsigned long)+0x24>
 8013310:	6822      	ldr	r2, [r4, #0]
 8013312:	4815      	ldr	r0, [pc, #84]	@ (8013368 <emac_eth_send(void*, unsigned long)+0x88>)
 8013314:	6813      	ldr	r3, [r2, #0]
 8013316:	6051      	str	r1, [r2, #4]
 8013318:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 801331c:	6013      	str	r3, [r2, #0]
 801331e:	6943      	ldr	r3, [r0, #20]
 8013320:	6941      	ldr	r1, [r0, #20]
 8013322:	f003 0304 	and.w	r3, r3, #4
 8013326:	f001 0120 	and.w	r1, r1, #32
 801332a:	430b      	orrs	r3, r1
 801332c:	d002      	beq.n	8013334 <emac_eth_send(void*, unsigned long)+0x54>
 801332e:	2100      	movs	r1, #0
 8013330:	6143      	str	r3, [r0, #20]
 8013332:	6041      	str	r1, [r0, #4]
 8013334:	68d3      	ldr	r3, [r2, #12]
 8013336:	6023      	str	r3, [r4, #0]
 8013338:	bd70      	pop	{r4, r5, r6, pc}
 801333a:	2903      	cmp	r1, #3
 801333c:	d9de      	bls.n	80132fc <emac_eth_send(void*, unsigned long)+0x1c>
 801333e:	1f0e      	subs	r6, r1, #4
 8013340:	f026 0603 	bic.w	r6, r6, #3
 8013344:	3604      	adds	r6, #4
 8013346:	eb00 0c06 	add.w	ip, r0, r6
 801334a:	eba3 0e00 	sub.w	lr, r3, r0
 801334e:	eb00 020e 	add.w	r2, r0, lr
 8013352:	f850 5b04 	ldr.w	r5, [r0], #4
 8013356:	6015      	str	r5, [r2, #0]
 8013358:	4560      	cmp	r0, ip
 801335a:	d1f8      	bne.n	801334e <emac_eth_send(void*, unsigned long)+0x6e>
 801335c:	4433      	add	r3, r6
 801335e:	f001 0203 	and.w	r2, r1, #3
 8013362:	e7cc      	b.n	80132fe <emac_eth_send(void*, unsigned long)+0x1e>
 8013364:	2000ce14 	andcs	ip, r0, r4, lsl lr
 8013368:	40029000 	andmi	r9, r2, r0

0801336c <net::acd_start(net::acd::Acd*, net::ip_addr)>:
 801336c:	2301      	movs	r3, #1
 801336e:	b510      	push	{r4, lr}
 8013370:	7103      	strb	r3, [r0, #4]
 8013372:	6001      	str	r1, [r0, #0]
 8013374:	4604      	mov	r4, r0
 8013376:	f004 fcef 	bl	8017d58 <random>
 801337a:	230a      	movs	r3, #10
 801337c:	fbb0 f2f3 	udiv	r2, r0, r3
 8013380:	fb02 0013 	mls	r0, r2, r3, r0
 8013384:	4b11      	ldr	r3, [pc, #68]	@ (80133cc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x60>)
 8013386:	81a0      	strh	r0, [r4, #12]
 8013388:	681b      	ldr	r3, [r3, #0]
 801338a:	f8d3 00a0 	ldr.w	r0, [r3, #160]	@ 0xa0
 801338e:	2807      	cmp	r0, #7
 8013390:	d907      	bls.n	80133a2 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x36>
 8013392:	480f      	ldr	r0, [pc, #60]	@ (80133d0 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x64>)
 8013394:	f002 f97a 	bl	801568c <console_error>
 8013398:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 801339c:	4b0d      	ldr	r3, [pc, #52]	@ (80133d4 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x68>)
 801339e:	601a      	str	r2, [r3, #0]
 80133a0:	bd10      	pop	{r4, pc}
 80133a2:	4a0d      	ldr	r2, [pc, #52]	@ (80133d8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x6c>)
 80133a4:	6811      	ldr	r1, [r2, #0]
 80133a6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80133aa:	1c54      	adds	r4, r2, #1
 80133ac:	f8c3 40a4 	str.w	r4, [r3, #164]	@ 0xa4
 80133b0:	1c44      	adds	r4, r0, #1
 80133b2:	f8c3 40a0 	str.w	r4, [r3, #160]	@ 0xa0
 80133b6:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 80133ba:	3164      	adds	r1, #100	@ 0x64
 80133bc:	6219      	str	r1, [r3, #32]
 80133be:	2164      	movs	r1, #100	@ 0x64
 80133c0:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80133c4:	4905      	ldr	r1, [pc, #20]	@ (80133dc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x70>)
 80133c6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80133c8:	e7e8      	b.n	801339c <net::acd_start(net::acd::Acd*, net::ip_addr)+0x30>
 80133ca:	bf00      	nop
 80133cc:	2000cdc0 	andcs	ip, r0, r0, asr #27
 80133d0:	08019020 	stmdaeq	r1, {r5, ip, pc}
 80133d4:	2000cc3c 	andcs	ip, r0, ip, lsr ip
 80133d8:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80133dc:	08013439 	stmdaeq	r1, {r0, r3, r4, r5, sl, ip, sp}

080133e0 <net::acd_stop(net::acd::Acd*)>:
 80133e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80133e2:	4e13      	ldr	r6, [pc, #76]	@ (8013430 <net::acd_stop(net::acd::Acd*)+0x50>)
 80133e4:	6832      	ldr	r2, [r6, #0]
 80133e6:	2300      	movs	r3, #0
 80133e8:	429a      	cmp	r2, r3
 80133ea:	7103      	strb	r3, [r0, #4]
 80133ec:	db1a      	blt.n	8013424 <net::acd_stop(net::acd::Acd*)+0x44>
 80133ee:	4911      	ldr	r1, [pc, #68]	@ (8013434 <net::acd_stop(net::acd::Acd*)+0x54>)
 80133f0:	680d      	ldr	r5, [r1, #0]
 80133f2:	f8d5 40a0 	ldr.w	r4, [r5, #160]	@ 0xa0
 80133f6:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 80133fa:	42a3      	cmp	r3, r4
 80133fc:	d012      	beq.n	8013424 <net::acd_stop(net::acd::Acd*)+0x44>
 80133fe:	0118      	lsls	r0, r3, #4
 8013400:	580f      	ldr	r7, [r1, r0]
 8013402:	42ba      	cmp	r2, r7
 8013404:	d112      	bne.n	801342c <net::acd_stop(net::acd::Acd*)+0x4c>
 8013406:	3c01      	subs	r4, #1
 8013408:	1ae2      	subs	r2, r4, r3
 801340a:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 801340e:	0112      	lsls	r2, r2, #4
 8013410:	3020      	adds	r0, #32
 8013412:	42a3      	cmp	r3, r4
 8013414:	bf88      	it	hi
 8013416:	2200      	movhi	r2, #0
 8013418:	4429      	add	r1, r5
 801341a:	4428      	add	r0, r5
 801341c:	f004 f943 	bl	80176a6 <memmove>
 8013420:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
 8013424:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8013428:	6033      	str	r3, [r6, #0]
 801342a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801342c:	3301      	adds	r3, #1
 801342e:	e7e4      	b.n	80133fa <net::acd_stop(net::acd::Acd*)+0x1a>
 8013430:	2000cc3c 	andcs	ip, r0, ip, lsr ip
 8013434:	2000cdc0 	andcs	ip, r0, r0, asr #27

08013438 <net::acd_timer()>:
 8013438:	b510      	push	{r4, lr}
 801343a:	4b2b      	ldr	r3, [pc, #172]	@ (80134e8 <net::acd_timer()+0xb0>)
 801343c:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 801343e:	79a3      	ldrb	r3, [r4, #6]
 8013440:	b10b      	cbz	r3, 8013446 <net::acd_timer()+0xe>
 8013442:	3b01      	subs	r3, #1
 8013444:	71a3      	strb	r3, [r4, #6]
 8013446:	89a3      	ldrh	r3, [r4, #12]
 8013448:	b10b      	cbz	r3, 801344e <net::acd_timer()+0x16>
 801344a:	3b01      	subs	r3, #1
 801344c:	81a3      	strh	r3, [r4, #12]
 801344e:	7923      	ldrb	r3, [r4, #4]
 8013450:	2b04      	cmp	r3, #4
 8013452:	d805      	bhi.n	8013460 <net::acd_timer()+0x28>
 8013454:	2b02      	cmp	r3, #2
 8013456:	d82b      	bhi.n	80134b0 <net::acd_timer()+0x78>
 8013458:	3b01      	subs	r3, #1
 801345a:	2b01      	cmp	r3, #1
 801345c:	d90b      	bls.n	8013476 <net::acd_timer()+0x3e>
 801345e:	bd10      	pop	{r4, pc}
 8013460:	2b07      	cmp	r3, #7
 8013462:	d1fc      	bne.n	801345e <net::acd_timer()+0x26>
 8013464:	89a3      	ldrh	r3, [r4, #12]
 8013466:	2b00      	cmp	r3, #0
 8013468:	d1f9      	bne.n	801345e <net::acd_timer()+0x26>
 801346a:	4620      	mov	r0, r4
 801346c:	f7ff ffb8 	bl	80133e0 <net::acd_stop(net::acd::Acd*)>
 8013470:	68a3      	ldr	r3, [r4, #8]
 8013472:	2001      	movs	r0, #1
 8013474:	e034      	b.n	80134e0 <net::acd_timer()+0xa8>
 8013476:	89a3      	ldrh	r3, [r4, #12]
 8013478:	2b00      	cmp	r3, #0
 801347a:	d1f0      	bne.n	801345e <net::acd_timer()+0x26>
 801347c:	2302      	movs	r3, #2
 801347e:	7123      	strb	r3, [r4, #4]
 8013480:	6820      	ldr	r0, [r4, #0]
 8013482:	f000 f9df 	bl	8013844 <net::arp_acd_probe(net::ip_addr)>
 8013486:	7963      	ldrb	r3, [r4, #5]
 8013488:	3301      	adds	r3, #1
 801348a:	b2db      	uxtb	r3, r3
 801348c:	2b02      	cmp	r3, #2
 801348e:	7163      	strb	r3, [r4, #5]
 8013490:	d904      	bls.n	801349c <net::acd_timer()+0x64>
 8013492:	2303      	movs	r3, #3
 8013494:	80a3      	strh	r3, [r4, #4]
 8013496:	2314      	movs	r3, #20
 8013498:	81a3      	strh	r3, [r4, #12]
 801349a:	e7e0      	b.n	801345e <net::acd_timer()+0x26>
 801349c:	f004 fc5c 	bl	8017d58 <random>
 80134a0:	230a      	movs	r3, #10
 80134a2:	fbb0 f2f3 	udiv	r2, r0, r3
 80134a6:	fb02 0013 	mls	r0, r2, r3, r0
 80134aa:	4418      	add	r0, r3
 80134ac:	81a0      	strh	r0, [r4, #12]
 80134ae:	e7d6      	b.n	801345e <net::acd_timer()+0x26>
 80134b0:	89a3      	ldrh	r3, [r4, #12]
 80134b2:	2b00      	cmp	r3, #0
 80134b4:	d1d3      	bne.n	801345e <net::acd_timer()+0x26>
 80134b6:	7963      	ldrb	r3, [r4, #5]
 80134b8:	b913      	cbnz	r3, 80134c0 <net::acd_timer()+0x88>
 80134ba:	2204      	movs	r2, #4
 80134bc:	7122      	strb	r2, [r4, #4]
 80134be:	71e3      	strb	r3, [r4, #7]
 80134c0:	6820      	ldr	r0, [r4, #0]
 80134c2:	f000 f9d3 	bl	801386c <net::arp_acd_send_announcement(net::ip_addr)>
 80134c6:	2314      	movs	r3, #20
 80134c8:	81a3      	strh	r3, [r4, #12]
 80134ca:	7963      	ldrb	r3, [r4, #5]
 80134cc:	3301      	adds	r3, #1
 80134ce:	b2db      	uxtb	r3, r3
 80134d0:	2b01      	cmp	r3, #1
 80134d2:	7163      	strb	r3, [r4, #5]
 80134d4:	d9c3      	bls.n	801345e <net::acd_timer()+0x26>
 80134d6:	2305      	movs	r3, #5
 80134d8:	80a3      	strh	r3, [r4, #4]
 80134da:	2000      	movs	r0, #0
 80134dc:	68a3      	ldr	r3, [r4, #8]
 80134de:	81a0      	strh	r0, [r4, #12]
 80134e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134e4:	4718      	bx	r3
 80134e6:	bf00      	nop
 80134e8:	2000cc10 	andcs	ip, r0, r0, lsl ip

080134ec <net::acd_restart(net::acd::Acd*)>:
 80134ec:	b510      	push	{r4, lr}
 80134ee:	79c3      	ldrb	r3, [r0, #7]
 80134f0:	4604      	mov	r4, r0
 80134f2:	3301      	adds	r3, #1
 80134f4:	71c3      	strb	r3, [r0, #7]
 80134f6:	6883      	ldr	r3, [r0, #8]
 80134f8:	2002      	movs	r0, #2
 80134fa:	4798      	blx	r3
 80134fc:	79e3      	ldrb	r3, [r4, #7]
 80134fe:	2b09      	cmp	r3, #9
 8013500:	d905      	bls.n	801350e <net::acd_restart(net::acd::Acd*)+0x22>
 8013502:	2307      	movs	r3, #7
 8013504:	7123      	strb	r3, [r4, #4]
 8013506:	f44f 7316 	mov.w	r3, #600	@ 0x258
 801350a:	81a3      	strh	r3, [r4, #12]
 801350c:	bd10      	pop	{r4, pc}
 801350e:	4620      	mov	r0, r4
 8013510:	f7ff ff66 	bl	80133e0 <net::acd_stop(net::acd::Acd*)>
 8013514:	68a3      	ldr	r3, [r4, #8]
 8013516:	2001      	movs	r0, #1
 8013518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801351c:	4718      	bx	r3
	...

08013520 <net::acd_network_changed_link_down()>:
 8013520:	4b01      	ldr	r3, [pc, #4]	@ (8013528 <net::acd_network_changed_link_down()+0x8>)
 8013522:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8013524:	f7ff bf5c 	b.w	80133e0 <net::acd_stop(net::acd::Acd*)>
 8013528:	2000cc10 	andcs	ip, r0, r0, lsl ip

0801352c <net::acd_arp_reply(t_arp*)>:
 801352c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013530:	4e28      	ldr	r6, [pc, #160]	@ (80135d4 <net::acd_arp_reply(t_arp*)+0xa8>)
 8013532:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 8013534:	792f      	ldrb	r7, [r5, #4]
 8013536:	2f03      	cmp	r7, #3
 8013538:	4604      	mov	r4, r0
 801353a:	d802      	bhi.n	8013542 <net::acd_arp_reply(t_arp*)+0x16>
 801353c:	b9bf      	cbnz	r7, 801356e <net::acd_arp_reply(t_arp*)+0x42>
 801353e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013542:	1f3b      	subs	r3, r7, #4
 8013544:	2b02      	cmp	r3, #2
 8013546:	d8fa      	bhi.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 8013548:	301c      	adds	r0, #28
 801354a:	f7fe fb5f 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 801354e:	682b      	ldr	r3, [r5, #0]
 8013550:	4298      	cmp	r0, r3
 8013552:	d1f4      	bne.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 8013554:	f104 0315 	add.w	r3, r4, #21
 8013558:	3613      	adds	r6, #19
 801355a:	341b      	adds	r4, #27
 801355c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013560:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8013564:	4291      	cmp	r1, r2
 8013566:	d121      	bne.n	80135ac <net::acd_arp_reply(t_arp*)+0x80>
 8013568:	42a3      	cmp	r3, r4
 801356a:	d1f7      	bne.n	801355c <net::acd_arp_reply(t_arp*)+0x30>
 801356c:	e7e7      	b.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 801356e:	301c      	adds	r0, #28
 8013570:	f7fe fb4c 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8013574:	682f      	ldr	r7, [r5, #0]
 8013576:	42b8      	cmp	r0, r7
 8013578:	d013      	beq.n	80135a2 <net::acd_arp_reply(t_arp*)+0x76>
 801357a:	2800      	cmp	r0, #0
 801357c:	d0df      	beq.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 801357e:	f104 0026 	add.w	r0, r4, #38	@ 0x26
 8013582:	f7fe fb43 	bl	8011c0c <net::memcpy_ip(unsigned char const*)>
 8013586:	4287      	cmp	r7, r0
 8013588:	d1d9      	bne.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 801358a:	f104 0315 	add.w	r3, r4, #21
 801358e:	3613      	adds	r6, #19
 8013590:	341b      	adds	r4, #27
 8013592:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013596:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 801359a:	4291      	cmp	r1, r2
 801359c:	d1cf      	bne.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 801359e:	42a3      	cmp	r3, r4
 80135a0:	d1f7      	bne.n	8013592 <net::acd_arp_reply(t_arp*)+0x66>
 80135a2:	4628      	mov	r0, r5
 80135a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80135a8:	f7ff bfa0 	b.w	80134ec <net::acd_restart(net::acd::Acd*)>
 80135ac:	2f06      	cmp	r7, #6
 80135ae:	d107      	bne.n	80135c0 <net::acd_arp_reply(t_arp*)+0x94>
 80135b0:	4628      	mov	r0, r5
 80135b2:	f7ff ff15 	bl	80133e0 <net::acd_stop(net::acd::Acd*)>
 80135b6:	68ab      	ldr	r3, [r5, #8]
 80135b8:	2002      	movs	r0, #2
 80135ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80135be:	4718      	bx	r3
 80135c0:	79ab      	ldrb	r3, [r5, #6]
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	d1ed      	bne.n	80135a2 <net::acd_arp_reply(t_arp*)+0x76>
 80135c6:	6828      	ldr	r0, [r5, #0]
 80135c8:	f000 f950 	bl	801386c <net::arp_acd_send_announcement(net::ip_addr)>
 80135cc:	2364      	movs	r3, #100	@ 0x64
 80135ce:	71ab      	strb	r3, [r5, #6]
 80135d0:	e7b5      	b.n	801353e <net::acd_arp_reply(t_arp*)+0x12>
 80135d2:	bf00      	nop
 80135d4:	2000cc10 	andcs	ip, r0, r0, lsl ip

080135d8 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
 80135d8:	4b01      	ldr	r3, [pc, #4]	@ (80135e0 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x8>)
 80135da:	6081      	str	r1, [r0, #8]
 80135dc:	6258      	str	r0, [r3, #36]	@ 0x24
 80135de:	4770      	bx	lr
 80135e0:	2000cc10 	andcs	ip, r0, r0, lsl ip

080135e4 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
 80135e4:	b320      	cbz	r0, 8013630 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80135e6:	b319      	cbz	r1, 8013630 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80135e8:	4b12      	ldr	r3, [pc, #72]	@ (8013634 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x50>)
 80135ea:	b510      	push	{r4, lr}
 80135ec:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80135ee:	6823      	ldr	r3, [r4, #0]
 80135f0:	4283      	cmp	r3, r0
 80135f2:	d119      	bne.n	8013628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80135f4:	b29b      	uxth	r3, r3
 80135f6:	f64a 12fe 	movw	r2, #43518	@ 0xa9fe
 80135fa:	4293      	cmp	r3, r2
 80135fc:	d114      	bne.n	8013628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80135fe:	b289      	uxth	r1, r1
 8013600:	4299      	cmp	r1, r3
 8013602:	d011      	beq.n	8013628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8013604:	7923      	ldrb	r3, [r4, #4]
 8013606:	2b05      	cmp	r3, #5
 8013608:	d80c      	bhi.n	8013624 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x40>
 801360a:	2b03      	cmp	r3, #3
 801360c:	d80d      	bhi.n	801362a <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x46>
 801360e:	3b01      	subs	r3, #1
 8013610:	2b02      	cmp	r3, #2
 8013612:	d809      	bhi.n	8013628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8013614:	4620      	mov	r0, r4
 8013616:	f7ff fee3 	bl	80133e0 <net::acd_stop(net::acd::Acd*)>
 801361a:	68a3      	ldr	r3, [r4, #8]
 801361c:	2002      	movs	r0, #2
 801361e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013622:	4718      	bx	r3
 8013624:	2b07      	cmp	r3, #7
 8013626:	d0f5      	beq.n	8013614 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x30>
 8013628:	bd10      	pop	{r4, pc}
 801362a:	2306      	movs	r3, #6
 801362c:	7123      	strb	r3, [r4, #4]
 801362e:	e7fb      	b.n	8013628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8013630:	4770      	bx	lr
 8013632:	bf00      	nop
 8013634:	2000cc10 	andcs	ip, r0, r0, lsl ip

08013638 <net::arp_find_record(unsigned long, net::arp::Flags)>:
 8013638:	4b17      	ldr	r3, [pc, #92]	@ (8013698 <net::arp_find_record(unsigned long, net::arp::Flags)+0x60>)
 801363a:	b570      	push	{r4, r5, r6, lr}
 801363c:	f04f 0e00 	mov.w	lr, #0
 8013640:	4604      	mov	r4, r0
 8013642:	f503 7cc0 	add.w	ip, r3, #384	@ 0x180
 8013646:	4676      	mov	r6, lr
 8013648:	4675      	mov	r5, lr
 801364a:	4670      	mov	r0, lr
 801364c:	e004      	b.n	8013658 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801364e:	2a03      	cmp	r2, #3
 8013650:	d019      	beq.n	8013686 <net::arp_find_record(unsigned long, net::arp::Flags)+0x4e>
 8013652:	3318      	adds	r3, #24
 8013654:	4563      	cmp	r3, ip
 8013656:	d012      	beq.n	801367e <net::arp_find_record(unsigned long, net::arp::Flags)+0x46>
 8013658:	681a      	ldr	r2, [r3, #0]
 801365a:	42a2      	cmp	r2, r4
 801365c:	d01a      	beq.n	8013694 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5c>
 801365e:	2901      	cmp	r1, #1
 8013660:	d0f7      	beq.n	8013652 <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 8013662:	695a      	ldr	r2, [r3, #20]
 8013664:	b1aa      	cbz	r2, 8013692 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5a>
 8013666:	2a02      	cmp	r2, #2
 8013668:	d1f1      	bne.n	801364e <net::arp_find_record(unsigned long, net::arp::Flags)+0x16>
 801366a:	8a5a      	ldrh	r2, [r3, #18]
 801366c:	4572      	cmp	r2, lr
 801366e:	bf88      	it	hi
 8013670:	461d      	movhi	r5, r3
 8013672:	f103 0318 	add.w	r3, r3, #24
 8013676:	bf88      	it	hi
 8013678:	4696      	movhi	lr, r2
 801367a:	4563      	cmp	r3, ip
 801367c:	d1ec      	bne.n	8013658 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801367e:	2800      	cmp	r0, #0
 8013680:	bf08      	it	eq
 8013682:	4628      	moveq	r0, r5
 8013684:	bd70      	pop	{r4, r5, r6, pc}
 8013686:	8a5a      	ldrh	r2, [r3, #18]
 8013688:	42b2      	cmp	r2, r6
 801368a:	bf84      	itt	hi
 801368c:	4616      	movhi	r6, r2
 801368e:	4618      	movhi	r0, r3
 8013690:	e7df      	b.n	8013652 <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 8013692:	601c      	str	r4, [r3, #0]
 8013694:	4618      	mov	r0, r3
 8013696:	bd70      	pop	{r4, r5, r6, pc}
 8013698:	1000cb10 	andne	ip, r0, r0, lsl fp

0801369c <net::arp_timer()>:
 801369c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136a0:	4c28      	ldr	r4, [pc, #160]	@ (8013744 <net::arp_timer()+0xa8>)
 80136a2:	2703      	movs	r7, #3
 80136a4:	f504 76c0 	add.w	r6, r4, #384	@ 0x180
 80136a8:	f04f 0800 	mov.w	r8, #0
 80136ac:	e006      	b.n	80136bc <net::arp_timer()+0x20>
 80136ae:	2a01      	cmp	r2, #1
 80136b0:	d101      	bne.n	80136b6 <net::arp_timer()+0x1a>
 80136b2:	2b02      	cmp	r3, #2
 80136b4:	d839      	bhi.n	801372a <net::arp_timer()+0x8e>
 80136b6:	3418      	adds	r4, #24
 80136b8:	42a6      	cmp	r6, r4
 80136ba:	d02c      	beq.n	8013716 <net::arp_timer()+0x7a>
 80136bc:	f854 2c04 	ldr.w	r2, [r4, #-4]
 80136c0:	2a00      	cmp	r2, #0
 80136c2:	d0f8      	beq.n	80136b6 <net::arp_timer()+0x1a>
 80136c4:	f834 3c06 	ldrh.w	r3, [r4, #-6]
 80136c8:	3301      	adds	r3, #1
 80136ca:	b29b      	uxth	r3, r3
 80136cc:	2a02      	cmp	r2, #2
 80136ce:	f824 3c06 	strh.w	r3, [r4, #-6]
 80136d2:	d022      	beq.n	801371a <net::arp_timer()+0x7e>
 80136d4:	2a03      	cmp	r2, #3
 80136d6:	d1ea      	bne.n	80136ae <net::arp_timer()+0x12>
 80136d8:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 80136dc:	d9eb      	bls.n	80136b6 <net::arp_timer()+0x1a>
 80136de:	4d1a      	ldr	r5, [pc, #104]	@ (8013748 <net::arp_timer()+0xac>)
 80136e0:	2301      	movs	r3, #1
 80136e2:	f844 3c04 	str.w	r3, [r4, #-4]
 80136e6:	f854 3c18 	ldr.w	r3, [r4, #-24]
 80136ea:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 80136ee:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80136f2:	602b      	str	r3, [r5, #0]
 80136f4:	4628      	mov	r0, r5
 80136f6:	f834 3c08 	ldrh.w	r3, [r4, #-8]
 80136fa:	80ab      	strh	r3, [r5, #4]
 80136fc:	213c      	movs	r1, #60	@ 0x3c
 80136fe:	f7ff fdef 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 8013702:	4628      	mov	r0, r5
 8013704:	1dab      	adds	r3, r5, #6
 8013706:	22ff      	movs	r2, #255	@ 0xff
 8013708:	f800 2b01 	strb.w	r2, [r0], #1
 801370c:	4298      	cmp	r0, r3
 801370e:	d1fb      	bne.n	8013708 <net::arp_timer()+0x6c>
 8013710:	3418      	adds	r4, #24
 8013712:	42a6      	cmp	r6, r4
 8013714:	d1d2      	bne.n	80136bc <net::arp_timer()+0x20>
 8013716:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801371a:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 801371e:	d9ca      	bls.n	80136b6 <net::arp_timer()+0x1a>
 8013720:	f844 7c04 	str.w	r7, [r4, #-4]
 8013724:	f824 8c06 	strh.w	r8, [r4, #-6]
 8013728:	e7c5      	b.n	80136b6 <net::arp_timer()+0x1a>
 801372a:	f854 0c14 	ldr.w	r0, [r4, #-20]
 801372e:	b108      	cbz	r0, 8013734 <net::arp_timer()+0x98>
 8013730:	f004 fd06 	bl	8018140 <operator delete[](void*)>
 8013734:	f1a4 0318 	sub.w	r3, r4, #24
 8013738:	2200      	movs	r2, #0
 801373a:	f843 2b04 	str.w	r2, [r3], #4
 801373e:	42a3      	cmp	r3, r4
 8013740:	d1fb      	bne.n	801373a <net::arp_timer()+0x9e>
 8013742:	e7b8      	b.n	80136b6 <net::arp_timer()+0x1a>
 8013744:	1000cb28 	andne	ip, r0, r8, lsr #22
 8013748:	2000cc7c 	andcs	ip, r0, ip, ror ip

0801374c <net::arp_send(t_udp*, unsigned long, unsigned long)>:
 801374c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801374e:	4b39      	ldr	r3, [pc, #228]	@ (8013834 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>)
 8013750:	681b      	ldr	r3, [r3, #0]
 8013752:	4604      	mov	r4, r0
 8013754:	4393      	bics	r3, r2
 8013756:	f04f 0000 	mov.w	r0, #0
 801375a:	4615      	mov	r5, r2
 801375c:	f8c4 201e 	str.w	r2, [r4, #30]
 8013760:	7620      	strb	r0, [r4, #24]
 8013762:	7660      	strb	r0, [r4, #25]
 8013764:	460e      	mov	r6, r1
 8013766:	d15c      	bne.n	8013822 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd6>
 8013768:	4b33      	ldr	r3, [pc, #204]	@ (8013838 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xec>)
 801376a:	f503 72c0 	add.w	r2, r3, #384	@ 0x180
 801376e:	6959      	ldr	r1, [r3, #20]
 8013770:	2901      	cmp	r1, #1
 8013772:	dd02      	ble.n	801377a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2e>
 8013774:	6819      	ldr	r1, [r3, #0]
 8013776:	42a9      	cmp	r1, r5
 8013778:	d031      	beq.n	80137de <net::arp_send(t_udp*, unsigned long, unsigned long)+0x92>
 801377a:	3318      	adds	r3, #24
 801377c:	4293      	cmp	r3, r2
 801377e:	d1f6      	bne.n	801376e <net::arp_send(t_udp*, unsigned long, unsigned long)+0x22>
 8013780:	2100      	movs	r1, #0
 8013782:	4628      	mov	r0, r5
 8013784:	f7ff ff58 	bl	8013638 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8013788:	6943      	ldr	r3, [r0, #20]
 801378a:	4607      	mov	r7, r0
 801378c:	b1d3      	cbz	r3, 80137c4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x78>
 801378e:	2b01      	cmp	r3, #1
 8013790:	d000      	beq.n	8013794 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 8013792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013794:	6878      	ldr	r0, [r7, #4]
 8013796:	b108      	cbz	r0, 801379c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x50>
 8013798:	f004 fcd2 	bl	8018140 <operator delete[](void*)>
 801379c:	4630      	mov	r0, r6
 801379e:	f004 fcd5 	bl	801814c <operator new[](unsigned int)>
 80137a2:	ea44 0200 	orr.w	r2, r4, r0
 80137a6:	0792      	lsls	r2, r2, #30
 80137a8:	4603      	mov	r3, r0
 80137aa:	6078      	str	r0, [r7, #4]
 80137ac:	d027      	beq.n	80137fe <net::arp_send(t_udp*, unsigned long, unsigned long)+0xb2>
 80137ae:	4631      	mov	r1, r6
 80137b0:	b131      	cbz	r1, 80137c0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
 80137b2:	4421      	add	r1, r4
 80137b4:	f814 2b01 	ldrb.w	r2, [r4], #1
 80137b8:	f803 2b01 	strb.w	r2, [r3], #1
 80137bc:	428c      	cmp	r4, r1
 80137be:	d1f9      	bne.n	80137b4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
 80137c0:	60be      	str	r6, [r7, #8]
 80137c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80137c4:	8243      	strh	r3, [r0, #18]
 80137c6:	2301      	movs	r3, #1
 80137c8:	481c      	ldr	r0, [pc, #112]	@ (801383c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf0>)
 80137ca:	617b      	str	r3, [r7, #20]
 80137cc:	213c      	movs	r1, #60	@ 0x3c
 80137ce:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 80137d2:	f7ff fd85 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 80137d6:	697b      	ldr	r3, [r7, #20]
 80137d8:	2b01      	cmp	r3, #1
 80137da:	d1da      	bne.n	8013792 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x46>
 80137dc:	e7da      	b.n	8013794 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 80137de:	f103 020c 	add.w	r2, r3, #12
 80137e2:	4621      	mov	r1, r4
 80137e4:	3312      	adds	r3, #18
 80137e6:	f812 0b01 	ldrb.w	r0, [r2], #1
 80137ea:	f801 0b01 	strb.w	r0, [r1], #1
 80137ee:	429a      	cmp	r2, r3
 80137f0:	d1f9      	bne.n	80137e6 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x9a>
 80137f2:	4631      	mov	r1, r6
 80137f4:	4620      	mov	r0, r4
 80137f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80137fa:	f7ff bd71 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 80137fe:	2e03      	cmp	r6, #3
 8013800:	d9d5      	bls.n	80137ae <net::arp_send(t_udp*, unsigned long, unsigned long)+0x62>
 8013802:	1f35      	subs	r5, r6, #4
 8013804:	f025 0503 	bic.w	r5, r5, #3
 8013808:	3504      	adds	r5, #4
 801380a:	1960      	adds	r0, r4, r5
 801380c:	461a      	mov	r2, r3
 801380e:	f854 1b04 	ldr.w	r1, [r4], #4
 8013812:	f842 1b04 	str.w	r1, [r2], #4
 8013816:	4284      	cmp	r4, r0
 8013818:	d1f9      	bne.n	801380e <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc2>
 801381a:	442b      	add	r3, r5
 801381c:	f006 0103 	and.w	r1, r6, #3
 8013820:	e7c6      	b.n	80137b0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x64>
 8013822:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8013826:	b292      	uxth	r2, r2
 8013828:	429a      	cmp	r2, r3
 801382a:	bf1c      	itt	ne
 801382c:	4b04      	ldrne	r3, [pc, #16]	@ (8013840 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf4>)
 801382e:	689d      	ldrne	r5, [r3, #8]
 8013830:	e79a      	b.n	8013768 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c>
 8013832:	bf00      	nop
 8013834:	2000cbf4 	strdcs	ip, [r0], -r4
 8013838:	1000cb10 	andne	ip, r0, r0, lsl fp
 801383c:	2000cc7c 	andcs	ip, r0, ip, ror ip
 8013840:	2000cc10 	andcs	ip, r0, r0, lsl ip

08013844 <net::arp_acd_probe(net::ip_addr)>:
 8013844:	b510      	push	{r4, lr}
 8013846:	4c07      	ldr	r4, [pc, #28]	@ (8013864 <net::arp_acd_probe(net::ip_addr)+0x20>)
 8013848:	4603      	mov	r3, r0
 801384a:	2200      	movs	r2, #0
 801384c:	213c      	movs	r1, #60	@ 0x3c
 801384e:	4620      	mov	r0, r4
 8013850:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8013854:	61e2      	str	r2, [r4, #28]
 8013856:	f7ff fd43 	bl	80132e0 <emac_eth_send(void*, unsigned long)>
 801385a:	4b03      	ldr	r3, [pc, #12]	@ (8013868 <net::arp_acd_probe(net::ip_addr)+0x24>)
 801385c:	681b      	ldr	r3, [r3, #0]
 801385e:	61e3      	str	r3, [r4, #28]
 8013860:	bd10      	pop	{r4, pc}
 8013862:	bf00      	nop
 8013864:	2000cc7c 	andcs	ip, r0, ip, ror ip
 8013868:	2000cc10 	andcs	ip, r0, r0, lsl ip

0801386c <net::arp_acd_send_announcement(net::ip_addr)>:
 801386c:	4a04      	ldr	r2, [pc, #16]	@ (8013880 <net::arp_acd_send_announcement(net::ip_addr)+0x14>)
 801386e:	4603      	mov	r3, r0
 8013870:	213c      	movs	r1, #60	@ 0x3c
 8013872:	4610      	mov	r0, r2
 8013874:	f8c2 3026 	str.w	r3, [r2, #38]	@ 0x26
 8013878:	61d3      	str	r3, [r2, #28]
 801387a:	f7ff bd31 	b.w	80132e0 <emac_eth_send(void*, unsigned long)>
 801387e:	bf00      	nop
 8013880:	2000cc7c 	andcs	ip, r0, ip, ror ip

08013884 <net::ip_set_ip()>:
 8013884:	b508      	push	{r3, lr}
 8013886:	f7ff f82f 	bl	80128e8 <net::udp_set_ip()>
 801388a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801388e:	f7fe bc0d 	b.w	80120ac <net::igmp_set_ip()>
 8013892:	bf00      	nop

08013894 <net::phy_get_link(unsigned long)>:
 8013894:	b507      	push	{r0, r1, r2, lr}
 8013896:	2300      	movs	r3, #0
 8013898:	f10d 0206 	add.w	r2, sp, #6
 801389c:	2101      	movs	r1, #1
 801389e:	f8ad 3006 	strh.w	r3, [sp, #6]
 80138a2:	f7ff fb8b 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80138a6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80138aa:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80138ae:	b003      	add	sp, #12
 80138b0:	f85d fb04 	ldr.w	pc, [sp], #4

080138b4 <net::phy_start(unsigned long, net::PhyStatus&)>:
 80138b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80138b8:	460d      	mov	r5, r1
 80138ba:	f10d 0206 	add.w	r2, sp, #6
 80138be:	2104      	movs	r1, #4
 80138c0:	4604      	mov	r4, r0
 80138c2:	f7ff fb7b 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80138c6:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 80138ca:	f240 1241 	movw	r2, #321	@ 0x141
 80138ce:	f401 637e 	and.w	r3, r1, #4064	@ 0xfe0
 80138d2:	4313      	orrs	r3, r2
 80138d4:	f411 616a 	ands.w	r1, r1, #3744	@ 0xea0
 80138d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80138dc:	d10a      	bne.n	80138f4 <net::phy_start(unsigned long, net::PhyStatus&)+0x40>
 80138de:	f10d 0206 	add.w	r2, sp, #6
 80138e2:	4620      	mov	r0, r4
 80138e4:	f7ff fb6a 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80138e8:	b9f8      	cbnz	r0, 801392a <net::phy_start(unsigned long, net::PhyStatus&)+0x76>
 80138ea:	2600      	movs	r6, #0
 80138ec:	4630      	mov	r0, r6
 80138ee:	b003      	add	sp, #12
 80138f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80138f4:	2104      	movs	r1, #4
 80138f6:	4620      	mov	r0, r4
 80138f8:	f7ff fb6b 	bl	8012fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 80138fc:	2800      	cmp	r0, #0
 80138fe:	d0f4      	beq.n	80138ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8013900:	f10d 0206 	add.w	r2, sp, #6
 8013904:	2100      	movs	r1, #0
 8013906:	4620      	mov	r0, r4
 8013908:	f7ff fb58 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801390c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013910:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8013914:	f442 5290 	orr.w	r2, r2, #4608	@ 0x1200
 8013918:	b292      	uxth	r2, r2
 801391a:	2100      	movs	r1, #0
 801391c:	4620      	mov	r0, r4
 801391e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013922:	f7ff fb56 	bl	8012fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8013926:	b938      	cbnz	r0, 8013938 <net::phy_start(unsigned long, net::PhyStatus&)+0x84>
 8013928:	e7df      	b.n	80138ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 801392a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801392e:	f403 53a0 	and.w	r3, r3, #5120	@ 0x1400
 8013932:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8013936:	d1e3      	bne.n	8013900 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
 8013938:	f10d 0206 	add.w	r2, sp, #6
 801393c:	2101      	movs	r1, #1
 801393e:	4620      	mov	r0, r4
 8013940:	f7ff fb3c 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8013944:	4606      	mov	r6, r0
 8013946:	2800      	cmp	r0, #0
 8013948:	d0cf      	beq.n	80138ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 801394a:	682a      	ldr	r2, [r5, #0]
 801394c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013950:	b90a      	cbnz	r2, 8013956 <net::phy_start(unsigned long, net::PhyStatus&)+0xa2>
 8013952:	0759      	lsls	r1, r3, #29
 8013954:	d40f      	bmi.n	8013976 <net::phy_start(unsigned long, net::PhyStatus&)+0xc2>
 8013956:	069a      	lsls	r2, r3, #26
 8013958:	d43b      	bmi.n	80139d2 <net::phy_start(unsigned long, net::PhyStatus&)+0x11e>
 801395a:	4f25      	ldr	r7, [pc, #148]	@ (80139f0 <net::phy_start(unsigned long, net::PhyStatus&)+0x13c>)
 801395c:	4825      	ldr	r0, [pc, #148]	@ (80139f4 <net::phy_start(unsigned long, net::PhyStatus&)+0x140>)
 801395e:	f004 f9f2 	bl	8017d46 <puts>
 8013962:	f8d7 8000 	ldr.w	r8, [r7]
 8013966:	f241 3988 	movw	r9, #5000	@ 0x1388
 801396a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801396e:	069b      	lsls	r3, r3, #26
 8013970:	d523      	bpl.n	80139ba <net::phy_start(unsigned long, net::PhyStatus&)+0x106>
 8013972:	2301      	movs	r3, #1
 8013974:	602b      	str	r3, [r5, #0]
 8013976:	2300      	movs	r3, #0
 8013978:	e9c5 3301 	strd	r3, r3, [r5, #4]
 801397c:	aa01      	add	r2, sp, #4
 801397e:	2104      	movs	r1, #4
 8013980:	4620      	mov	r0, r4
 8013982:	f7ff fb1b 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8013986:	f10d 0206 	add.w	r2, sp, #6
 801398a:	2105      	movs	r1, #5
 801398c:	4620      	mov	r0, r4
 801398e:	f7ff fb15 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8013992:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8013996:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801399a:	4013      	ands	r3, r2
 801399c:	f413 7fc0 	tst.w	r3, #384	@ 0x180
 80139a0:	d022      	beq.n	80139e8 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
 80139a2:	2201      	movs	r2, #1
 80139a4:	60aa      	str	r2, [r5, #8]
 80139a6:	f413 7f80 	tst.w	r3, #256	@ 0x100
 80139aa:	d001      	beq.n	80139b0 <net::phy_start(unsigned long, net::PhyStatus&)+0xfc>
 80139ac:	2301      	movs	r3, #1
 80139ae:	606b      	str	r3, [r5, #4]
 80139b0:	4620      	mov	r0, r4
 80139b2:	f7ff ff6f 	bl	8013894 <net::phy_get_link(unsigned long)>
 80139b6:	6028      	str	r0, [r5, #0]
 80139b8:	e798      	b.n	80138ec <net::phy_start(unsigned long, net::PhyStatus&)+0x38>
 80139ba:	683b      	ldr	r3, [r7, #0]
 80139bc:	eba3 0308 	sub.w	r3, r3, r8
 80139c0:	454b      	cmp	r3, r9
 80139c2:	d892      	bhi.n	80138ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 80139c4:	f10d 0206 	add.w	r2, sp, #6
 80139c8:	2101      	movs	r1, #1
 80139ca:	4620      	mov	r0, r4
 80139cc:	f7ff faf6 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80139d0:	e7cb      	b.n	801396a <net::phy_start(unsigned long, net::PhyStatus&)+0xb6>
 80139d2:	f10d 0206 	add.w	r2, sp, #6
 80139d6:	2101      	movs	r1, #1
 80139d8:	4620      	mov	r0, r4
 80139da:	f7ff faef 	bl	8012fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80139de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80139e2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80139e6:	e7c5      	b.n	8013974 <net::phy_start(unsigned long, net::PhyStatus&)+0xc0>
 80139e8:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80139ec:	e7dd      	b.n	80139aa <net::phy_start(unsigned long, net::PhyStatus&)+0xf6>
 80139ee:	bf00      	nop
 80139f0:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80139f4:	0801909c 	stmdaeq	r1, {r2, r3, r4, r7, ip, pc}

080139f8 <Display::ClearEndOfLine() [clone .isra.0]>:
 80139f8:	b108      	cbz	r0, 80139fe <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 80139fa:	2301      	movs	r3, #1
 80139fc:	7303      	strb	r3, [r0, #12]
 80139fe:	4770      	bx	lr

08013a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8013a00:	b430      	push	{r4, r5}
 8013a02:	b160      	cbz	r0, 8013a1e <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8013a04:	6845      	ldr	r5, [r0, #4]
 8013a06:	2300      	movs	r3, #0
 8013a08:	5cd4      	ldrb	r4, [r2, r3]
 8013a0a:	b11c      	cbz	r4, 8013a14 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8013a0c:	1c5c      	adds	r4, r3, #1
 8013a0e:	429d      	cmp	r5, r3
 8013a10:	4623      	mov	r3, r4
 8013a12:	d8f9      	bhi.n	8013a08 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8013a14:	6804      	ldr	r4, [r0, #0]
 8013a16:	69e4      	ldr	r4, [r4, #28]
 8013a18:	46a4      	mov	ip, r4
 8013a1a:	bc30      	pop	{r4, r5}
 8013a1c:	4760      	bx	ip
 8013a1e:	bc30      	pop	{r4, r5}
 8013a20:	4770      	bx	lr
	...

08013a24 <DisplayUdf::ShowIpAddress()>:
 8013a24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013a28:	4e16      	ldr	r6, [pc, #88]	@ (8013a84 <DisplayUdf::ShowIpAddress()+0x60>)
 8013a2a:	b086      	sub	sp, #24
 8013a2c:	4605      	mov	r5, r0
 8013a2e:	6980      	ldr	r0, [r0, #24]
 8013a30:	f7ff ffe2 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013a34:	6870      	ldr	r0, [r6, #4]
 8013a36:	6834      	ldr	r4, [r6, #0]
 8013a38:	f895 703e 	ldrb.w	r7, [r5, #62]	@ 0x3e
 8013a3c:	f004 fbd4 	bl	80181e8 <__popcountsi2>
 8013a40:	7eb3      	ldrb	r3, [r6, #26]
 8013a42:	075a      	lsls	r2, r3, #29
 8013a44:	fa5f f884 	uxtb.w	r8, r4
 8013a48:	f3c4 2907 	ubfx	r9, r4, #8, #8
 8013a4c:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 8013a50:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8013a54:	d413      	bmi.n	8013a7e <DisplayUdf::ShowIpAddress()+0x5a>
 8013a56:	f013 0f02 	tst.w	r3, #2
 8013a5a:	bf0c      	ite	eq
 8013a5c:	2253      	moveq	r2, #83	@ 0x53
 8013a5e:	2244      	movne	r2, #68	@ 0x44
 8013a60:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8013a64:	e9cd a401 	strd	sl, r4, [sp, #4]
 8013a68:	4a07      	ldr	r2, [pc, #28]	@ (8013a88 <DisplayUdf::ShowIpAddress()+0x64>)
 8013a6a:	f8cd 9000 	str.w	r9, [sp]
 8013a6e:	4643      	mov	r3, r8
 8013a70:	4639      	mov	r1, r7
 8013a72:	4628      	mov	r0, r5
 8013a74:	f7f5 fd80 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013a78:	b006      	add	sp, #24
 8013a7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013a7e:	225a      	movs	r2, #90	@ 0x5a
 8013a80:	e7ee      	b.n	8013a60 <DisplayUdf::ShowIpAddress()+0x3c>
 8013a82:	bf00      	nop
 8013a84:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8013a88:	080190c9 	stmdaeq	r1, {r0, r3, r6, r7, ip, pc}

08013a8c <DisplayUdf::DisplayUdf()>:
 8013a8c:	b510      	push	{r4, lr}
 8013a8e:	4604      	mov	r4, r0
 8013a90:	f001 f896 	bl	8014bc0 <Display::Display()>
 8013a94:	4b05      	ldr	r3, [pc, #20]	@ (8013aac <DisplayUdf::DisplayUdf()+0x20>)
 8013a96:	f104 023b 	add.w	r2, r4, #59	@ 0x3b
 8013a9a:	601c      	str	r4, [r3, #0]
 8013a9c:	2301      	movs	r3, #1
 8013a9e:	f802 3f01 	strb.w	r3, [r2, #1]!
 8013aa2:	3301      	adds	r3, #1
 8013aa4:	2b15      	cmp	r3, #21
 8013aa6:	d1fa      	bne.n	8013a9e <DisplayUdf::DisplayUdf()+0x12>
 8013aa8:	4620      	mov	r0, r4
 8013aaa:	bd10      	pop	{r4, pc}
 8013aac:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8

08013ab0 <DisplayUdf::SetTitle(char const*, ...)>:
 8013ab0:	b40e      	push	{r1, r2, r3}
 8013ab2:	b517      	push	{r0, r1, r2, r4, lr}
 8013ab4:	ab05      	add	r3, sp, #20
 8013ab6:	4604      	mov	r4, r0
 8013ab8:	f853 2b04 	ldr.w	r2, [r3], #4
 8013abc:	9301      	str	r3, [sp, #4]
 8013abe:	211f      	movs	r1, #31
 8013ac0:	301c      	adds	r0, #28
 8013ac2:	f004 f92b 	bl	8017d1c <vsnprintf>
 8013ac6:	4404      	add	r4, r0
 8013ac8:	2300      	movs	r3, #0
 8013aca:	7723      	strb	r3, [r4, #28]
 8013acc:	b003      	add	sp, #12
 8013ace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ad2:	b003      	add	sp, #12
 8013ad4:	4770      	bx	lr

08013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>:
 8013ad6:	1e4b      	subs	r3, r1, #1
 8013ad8:	2b05      	cmp	r3, #5
 8013ada:	b530      	push	{r4, r5, lr}
 8013adc:	d810      	bhi.n	8013b00 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2a>
 8013ade:	f100 043b 	add.w	r4, r0, #59	@ 0x3b
 8013ae2:	2300      	movs	r3, #0
 8013ae4:	b2c9      	uxtb	r1, r1
 8013ae6:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8013aea:	428d      	cmp	r5, r1
 8013aec:	d109      	bne.n	8013b02 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2c>
 8013aee:	1884      	adds	r4, r0, r2
 8013af0:	4403      	add	r3, r0
 8013af2:	f894 403c 	ldrb.w	r4, [r4, #60]	@ 0x3c
 8013af6:	f883 403c 	strb.w	r4, [r3, #60]	@ 0x3c
 8013afa:	4410      	add	r0, r2
 8013afc:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 8013b00:	bd30      	pop	{r4, r5, pc}
 8013b02:	3301      	adds	r3, #1
 8013b04:	2b14      	cmp	r3, #20
 8013b06:	d1ee      	bne.n	8013ae6 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x10>
 8013b08:	e7f7      	b.n	8013afa <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x24>
	...

08013b0c <DisplayUdf::Show()>:
 8013b0c:	b530      	push	{r4, r5, lr}
 8013b0e:	f100 033b 	add.w	r3, r0, #59	@ 0x3b
 8013b12:	b085      	sub	sp, #20
 8013b14:	4604      	mov	r4, r0
 8013b16:	f100 024f 	add.w	r2, r0, #79	@ 0x4f
 8013b1a:	21ff      	movs	r1, #255	@ 0xff
 8013b1c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013b20:	2806      	cmp	r0, #6
 8013b22:	bf88      	it	hi
 8013b24:	7019      	strbhi	r1, [r3, #0]
 8013b26:	4293      	cmp	r3, r2
 8013b28:	d1f8      	bne.n	8013b1c <DisplayUdf::Show()+0x10>
 8013b2a:	69a0      	ldr	r0, [r4, #24]
 8013b2c:	4d2a      	ldr	r5, [pc, #168]	@ (8013bd8 <DisplayUdf::Show()+0xcc>)
 8013b2e:	f7ff ff63 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013b32:	f104 021c 	add.w	r2, r4, #28
 8013b36:	f894 103c 	ldrb.w	r1, [r4, #60]	@ 0x3c
 8013b3a:	f7ff ff61 	bl	8013a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8013b3e:	69a0      	ldr	r0, [r4, #24]
 8013b40:	4a26      	ldr	r2, [pc, #152]	@ (8013bdc <DisplayUdf::Show()+0xd0>)
 8013b42:	f7ff ff59 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013b46:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 8013b4a:	f7ff ff59 	bl	8013a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8013b4e:	69a0      	ldr	r0, [r4, #24]
 8013b50:	4a23      	ldr	r2, [pc, #140]	@ (8013be0 <DisplayUdf::Show()+0xd4>)
 8013b52:	f7ff ff51 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013b56:	4b23      	ldr	r3, [pc, #140]	@ (8013be4 <DisplayUdf::Show()+0xd8>)
 8013b58:	9300      	str	r3, [sp, #0]
 8013b5a:	f894 103f 	ldrb.w	r1, [r4, #63]	@ 0x3f
 8013b5e:	2303      	movs	r3, #3
 8013b60:	4620      	mov	r0, r4
 8013b62:	f7f5 fd09 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013b66:	4620      	mov	r0, r4
 8013b68:	f7ff ff5c 	bl	8013a24 <DisplayUdf::ShowIpAddress()>
 8013b6c:	69a0      	ldr	r0, [r4, #24]
 8013b6e:	f7ff ff43 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013b72:	68ab      	ldr	r3, [r5, #8]
 8013b74:	0e1a      	lsrs	r2, r3, #24
 8013b76:	9202      	str	r2, [sp, #8]
 8013b78:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013b7c:	9201      	str	r2, [sp, #4]
 8013b7e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013b82:	9200      	str	r2, [sp, #0]
 8013b84:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 8013b88:	4a17      	ldr	r2, [pc, #92]	@ (8013be8 <DisplayUdf::Show()+0xdc>)
 8013b8a:	b2db      	uxtb	r3, r3
 8013b8c:	4620      	mov	r0, r4
 8013b8e:	f7f5 fcf3 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013b92:	69a0      	ldr	r0, [r4, #24]
 8013b94:	f7ff ff30 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013b98:	686b      	ldr	r3, [r5, #4]
 8013b9a:	0e1a      	lsrs	r2, r3, #24
 8013b9c:	9202      	str	r2, [sp, #8]
 8013b9e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013ba2:	9201      	str	r2, [sp, #4]
 8013ba4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013ba8:	9200      	str	r2, [sp, #0]
 8013baa:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8013bae:	4a0f      	ldr	r2, [pc, #60]	@ (8013bec <DisplayUdf::Show()+0xe0>)
 8013bb0:	b2db      	uxtb	r3, r3
 8013bb2:	4620      	mov	r0, r4
 8013bb4:	f7f5 fce0 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013bb8:	4620      	mov	r0, r4
 8013bba:	f7ff ff33 	bl	8013a24 <DisplayUdf::ShowIpAddress()>
 8013bbe:	69a0      	ldr	r0, [r4, #24]
 8013bc0:	f7ff ff1a 	bl	80139f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8013bc4:	4b0a      	ldr	r3, [pc, #40]	@ (8013bf0 <DisplayUdf::Show()+0xe4>)
 8013bc6:	f894 1043 	ldrb.w	r1, [r4, #67]	@ 0x43
 8013bca:	681a      	ldr	r2, [r3, #0]
 8013bcc:	3216      	adds	r2, #22
 8013bce:	b005      	add	sp, #20
 8013bd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013bd4:	f7ff bf14 	b.w	8013a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8013bd8:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8013bdc:	080189c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, pc}
 8013be0:	080190db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, ip, pc}
 8013be4:	2000cda8 	andcs	ip, r0, r8, lsr #27
 8013be8:	080190ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip, pc}
 8013bec:	080190f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, ip, pc}
 8013bf0:	2000cbf0 	strdcs	ip, [r0], -r0

08013bf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 8013bf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013bf6:	88c6      	ldrh	r6, [r0, #6]
 8013bf8:	8885      	ldrh	r5, [r0, #4]
 8013bfa:	42ae      	cmp	r6, r5
 8013bfc:	d216      	bcs.n	8013c2c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 8013bfe:	4604      	mov	r4, r0
 8013c00:	6800      	ldr	r0, [r0, #0]
 8013c02:	1bad      	subs	r5, r5, r6
 8013c04:	4430      	add	r0, r6
 8013c06:	7a26      	ldrb	r6, [r4, #8]
 8013c08:	b923      	cbnz	r3, 8013c14 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 8013c0a:	b926      	cbnz	r6, 8013c16 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 8013c0c:	9200      	str	r2, [sp, #0]
 8013c0e:	460b      	mov	r3, r1
 8013c10:	4a09      	ldr	r2, [pc, #36]	@ (8013c38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 8013c12:	e003      	b.n	8013c1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8013c14:	b166      	cbz	r6, 8013c30 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 8013c16:	9200      	str	r2, [sp, #0]
 8013c18:	4a08      	ldr	r2, [pc, #32]	@ (8013c3c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 8013c1a:	460b      	mov	r3, r1
 8013c1c:	4629      	mov	r1, r5
 8013c1e:	f004 f865 	bl	8017cec <snprintf>
 8013c22:	4285      	cmp	r5, r0
 8013c24:	bfa2      	ittt	ge
 8013c26:	88e3      	ldrhge	r3, [r4, #6]
 8013c28:	181b      	addge	r3, r3, r0
 8013c2a:	80e3      	strhge	r3, [r4, #6]
 8013c2c:	b002      	add	sp, #8
 8013c2e:	bd70      	pop	{r4, r5, r6, pc}
 8013c30:	9200      	str	r2, [sp, #0]
 8013c32:	460b      	mov	r3, r1
 8013c34:	4a02      	ldr	r2, [pc, #8]	@ (8013c40 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 8013c36:	e7f1      	b.n	8013c1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8013c38:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 8013c3c:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 8013c40:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

08013c44 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>:
 8013c44:	b507      	push	{r0, r1, r2, lr}
 8013c46:	2300      	movs	r3, #0
 8013c48:	2101      	movs	r1, #1
 8013c4a:	e9cd 3100 	strd	r3, r1, [sp]
 8013c4e:	4602      	mov	r2, r0
 8013c50:	4804      	ldr	r0, [pc, #16]	@ (8013c64 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)+0x20>)
 8013c52:	2322      	movs	r3, #34	@ 0x22
 8013c54:	6800      	ldr	r0, [r0, #0]
 8013c56:	210d      	movs	r1, #13
 8013c58:	f000 fae6 	bl	8014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8013c5c:	b003      	add	sp, #12
 8013c5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8013c62:	bf00      	nop
 8013c64:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08013c68 <DisplayUdfParams::DisplayUdfParams()>:
 8013c68:	b510      	push	{r4, lr}
 8013c6a:	2220      	movs	r2, #32
 8013c6c:	4604      	mov	r4, r0
 8013c6e:	2100      	movs	r1, #0
 8013c70:	f003 fd30 	bl	80176d4 <memset>
 8013c74:	2305      	movs	r3, #5
 8013c76:	f884 3020 	strb.w	r3, [r4, #32]
 8013c7a:	237f      	movs	r3, #127	@ 0x7f
 8013c7c:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8013c80:	4620      	mov	r0, r4
 8013c82:	bd10      	pop	{r4, pc}

08013c84 <DisplayUdfParams::Load()>:
 8013c84:	b508      	push	{r3, lr}
 8013c86:	2200      	movs	r2, #0
 8013c88:	7002      	strb	r2, [r0, #0]
 8013c8a:	7042      	strb	r2, [r0, #1]
 8013c8c:	7082      	strb	r2, [r0, #2]
 8013c8e:	70c2      	strb	r2, [r0, #3]
 8013c90:	f7ff ffd8 	bl	8013c44 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8013c94:	bd08      	pop	{r3, pc}
	...

08013c98 <DisplayUdfParams::Load(char const*, unsigned long)>:
 8013c98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013c9a:	2500      	movs	r5, #0
 8013c9c:	b087      	sub	sp, #28
 8013c9e:	4604      	mov	r4, r0
 8013ca0:	460e      	mov	r6, r1
 8013ca2:	4617      	mov	r7, r2
 8013ca4:	7005      	strb	r5, [r0, #0]
 8013ca6:	7045      	strb	r5, [r0, #1]
 8013ca8:	7085      	strb	r5, [r0, #2]
 8013caa:	70c5      	strb	r5, [r0, #3]
 8013cac:	4602      	mov	r2, r0
 8013cae:	490c      	ldr	r1, [pc, #48]	@ (8013ce0 <DisplayUdfParams::Load(char const*, unsigned long)+0x48>)
 8013cb0:	a804      	add	r0, sp, #16
 8013cb2:	f000 fd93 	bl	80147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8013cb6:	463a      	mov	r2, r7
 8013cb8:	4631      	mov	r1, r6
 8013cba:	a804      	add	r0, sp, #16
 8013cbc:	f000 fd92 	bl	80147e4 <ReadConfigFile::Read(char const*, unsigned int)>
 8013cc0:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8013cc4:	2322      	movs	r3, #34	@ 0x22
 8013cc6:	4807      	ldr	r0, [pc, #28]	@ (8013ce4 <DisplayUdfParams::Load(char const*, unsigned long)+0x4c>)
 8013cc8:	9300      	str	r3, [sp, #0]
 8013cca:	462a      	mov	r2, r5
 8013ccc:	4623      	mov	r3, r4
 8013cce:	210d      	movs	r1, #13
 8013cd0:	6800      	ldr	r0, [r0, #0]
 8013cd2:	f000 fa83 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8013cd6:	a804      	add	r0, sp, #16
 8013cd8:	f000 fd83 	bl	80147e2 <ReadConfigFile::~ReadConfigFile()>
 8013cdc:	b007      	add	sp, #28
 8013cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ce0:	08013da9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, fp, ip, sp}
 8013ce4:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc

08013ce8 <DisplayUdfParams::callbackFunction(char const*)>:
 8013ce8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013cea:	460e      	mov	r6, r1
 8013cec:	4604      	mov	r4, r0
 8013cee:	492a      	ldr	r1, [pc, #168]	@ (8013d98 <DisplayUdfParams::callbackFunction(char const*)+0xb0>)
 8013cf0:	f10d 0207 	add.w	r2, sp, #7
 8013cf4:	4630      	mov	r0, r6
 8013cf6:	f000 fe9b 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013cfa:	b968      	cbnz	r0, 8013d18 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8013cfc:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013d00:	6823      	ldr	r3, [r4, #0]
 8013d02:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8013d06:	2a7f      	cmp	r2, #127	@ 0x7f
 8013d08:	bf14      	ite	ne
 8013d0a:	f043 5300 	orrne.w	r3, r3, #536870912	@ 0x20000000
 8013d0e:	f023 5300 	biceq.w	r3, r3, #536870912	@ 0x20000000
 8013d12:	6023      	str	r3, [r4, #0]
 8013d14:	b003      	add	sp, #12
 8013d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d18:	4920      	ldr	r1, [pc, #128]	@ (8013d9c <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8013d1a:	f10d 0207 	add.w	r2, sp, #7
 8013d1e:	4630      	mov	r0, r6
 8013d20:	f000 fe86 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013d24:	b958      	cbnz	r0, 8013d3e <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8013d26:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013d2a:	6823      	ldr	r3, [r4, #0]
 8013d2c:	f884 2020 	strb.w	r2, [r4, #32]
 8013d30:	2a05      	cmp	r2, #5
 8013d32:	bf14      	ite	ne
 8013d34:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8013d38:	f023 5380 	biceq.w	r3, r3, #268435456	@ 0x10000000
 8013d3c:	e7e9      	b.n	8013d12 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013d3e:	4918      	ldr	r1, [pc, #96]	@ (8013da0 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8013d40:	f10d 0207 	add.w	r2, sp, #7
 8013d44:	4630      	mov	r0, r6
 8013d46:	f000 fe73 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013d4a:	b948      	cbnz	r0, 8013d60 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8013d4c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8013d50:	6823      	ldr	r3, [r4, #0]
 8013d52:	b112      	cbz	r2, 8013d5a <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8013d54:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8013d58:	e7db      	b.n	8013d12 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013d5a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8013d5e:	e7d8      	b.n	8013d12 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013d60:	4f10      	ldr	r7, [pc, #64]	@ (8013da4 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8013d62:	2500      	movs	r5, #0
 8013d64:	f857 1b04 	ldr.w	r1, [r7], #4
 8013d68:	f10d 0207 	add.w	r2, sp, #7
 8013d6c:	4630      	mov	r0, r6
 8013d6e:	f000 fe5f 	bl	8014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013d72:	b968      	cbnz	r0, 8013d90 <DisplayUdfParams::callbackFunction(char const*)+0xa8>
 8013d74:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013d78:	6823      	ldr	r3, [r4, #0]
 8013d7a:	2201      	movs	r2, #1
 8013d7c:	40aa      	lsls	r2, r5
 8013d7e:	1e4e      	subs	r6, r1, #1
 8013d80:	4425      	add	r5, r4
 8013d82:	2e05      	cmp	r6, #5
 8013d84:	bf99      	ittee	ls
 8013d86:	7129      	strbls	r1, [r5, #4]
 8013d88:	4313      	orrls	r3, r2
 8013d8a:	7128      	strbhi	r0, [r5, #4]
 8013d8c:	4393      	bichi	r3, r2
 8013d8e:	e7c0      	b.n	8013d12 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8013d90:	3501      	adds	r5, #1
 8013d92:	2d14      	cmp	r5, #20
 8013d94:	d1e6      	bne.n	8013d64 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8013d96:	e7bd      	b.n	8013d14 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8013d98:	0801bf7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8013d9c:	0801bf6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8013da0:	0801bf5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8013da4:	0801bed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}

08013da8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8013da8:	f7ff bf9e 	b.w	8013ce8 <DisplayUdfParams::callbackFunction(char const*)>

08013dac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>:
 8013dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013db0:	4604      	mov	r4, r0
 8013db2:	b086      	sub	sp, #24
 8013db4:	4615      	mov	r5, r2
 8013db6:	461e      	mov	r6, r3
 8013db8:	b379      	cbz	r1, 8013e1a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 8013dba:	2222      	movs	r2, #34	@ 0x22
 8013dbc:	f003 fc73 	bl	80176a6 <memmove>
 8013dc0:	462a      	mov	r2, r5
 8013dc2:	493c      	ldr	r1, [pc, #240]	@ (8013eb4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x108>)
 8013dc4:	4633      	mov	r3, r6
 8013dc6:	a803      	add	r0, sp, #12
 8013dc8:	f000 fc32 	bl	8014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8013dcc:	6823      	ldr	r3, [r4, #0]
 8013dce:	f894 2021 	ldrb.w	r2, [r4, #33]	@ 0x21
 8013dd2:	4939      	ldr	r1, [pc, #228]	@ (8013eb8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x10c>)
 8013dd4:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8013dd8:	a803      	add	r0, sp, #12
 8013dda:	f7ff ff0b 	bl	8013bf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8013dde:	6823      	ldr	r3, [r4, #0]
 8013de0:	f894 2020 	ldrb.w	r2, [r4, #32]
 8013de4:	4935      	ldr	r1, [pc, #212]	@ (8013ebc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x110>)
 8013de6:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8013dea:	a803      	add	r0, sp, #12
 8013dec:	f7ff ff02 	bl	8013bf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8013df0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013df4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8013df8:	6823      	ldr	r3, [r4, #0]
 8013dfa:	42aa      	cmp	r2, r5
 8013dfc:	d222      	bcs.n	8013e44 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x98>
 8013dfe:	9803      	ldr	r0, [sp, #12]
 8013e00:	f013 4380 	ands.w	r3, r3, #1073741824	@ 0x40000000
 8013e04:	4410      	add	r0, r2
 8013e06:	eba5 0502 	sub.w	r5, r5, r2
 8013e0a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8013e0e:	d107      	bne.n	8013e20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x74>
 8013e10:	b942      	cbnz	r2, 8013e24 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x78>
 8013e12:	9200      	str	r2, [sp, #0]
 8013e14:	4b2a      	ldr	r3, [pc, #168]	@ (8013ec0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8013e16:	4a2b      	ldr	r2, [pc, #172]	@ (8013ec4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 8013e18:	e00a      	b.n	8013e30 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8013e1a:	f7ff ff13 	bl	8013c44 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8013e1e:	e7cf      	b.n	8013dc0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8013e20:	2a00      	cmp	r2, #0
 8013e22:	d042      	beq.n	8013eaa <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xfe>
 8013e24:	3b00      	subs	r3, #0
 8013e26:	bf18      	it	ne
 8013e28:	2301      	movne	r3, #1
 8013e2a:	9300      	str	r3, [sp, #0]
 8013e2c:	4a26      	ldr	r2, [pc, #152]	@ (8013ec8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 8013e2e:	4b24      	ldr	r3, [pc, #144]	@ (8013ec0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8013e30:	4629      	mov	r1, r5
 8013e32:	f003 ff5b 	bl	8017cec <snprintf>
 8013e36:	4285      	cmp	r5, r0
 8013e38:	bfa2      	ittt	ge
 8013e3a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8013e3e:	18c0      	addge	r0, r0, r3
 8013e40:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8013e44:	4e21      	ldr	r6, [pc, #132]	@ (8013ecc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 8013e46:	2500      	movs	r5, #0
 8013e48:	2701      	movs	r7, #1
 8013e4a:	f104 0804 	add.w	r8, r4, #4
 8013e4e:	f856 1b04 	ldr.w	r1, [r6], #4
 8013e52:	780b      	ldrb	r3, [r1, #0]
 8013e54:	b163      	cbz	r3, 8013e70 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 8013e56:	6822      	ldr	r2, [r4, #0]
 8013e58:	fa07 f305 	lsl.w	r3, r7, r5
 8013e5c:	4393      	bics	r3, r2
 8013e5e:	bf08      	it	eq
 8013e60:	2301      	moveq	r3, #1
 8013e62:	f818 2005 	ldrb.w	r2, [r8, r5]
 8013e66:	bf18      	it	ne
 8013e68:	2300      	movne	r3, #0
 8013e6a:	a803      	add	r0, sp, #12
 8013e6c:	f7ff fec2 	bl	8013bf4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8013e70:	3501      	adds	r5, #1
 8013e72:	2d14      	cmp	r5, #20
 8013e74:	d1eb      	bne.n	8013e4e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8013e76:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013e7a:	b17b      	cbz	r3, 8013e9c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
 8013e7c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013e80:	9b03      	ldr	r3, [sp, #12]
 8013e82:	4413      	add	r3, r2
 8013e84:	227d      	movs	r2, #125	@ 0x7d
 8013e86:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013e8a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013e8e:	9903      	ldr	r1, [sp, #12]
 8013e90:	54ca      	strb	r2, [r1, r3]
 8013e92:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013e96:	3301      	adds	r3, #1
 8013e98:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013e9c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013ea0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013ea2:	601a      	str	r2, [r3, #0]
 8013ea4:	b006      	add	sp, #24
 8013ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013eaa:	2301      	movs	r3, #1
 8013eac:	9300      	str	r3, [sp, #0]
 8013eae:	4a08      	ldr	r2, [pc, #32]	@ (8013ed0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 8013eb0:	4b03      	ldr	r3, [pc, #12]	@ (8013ec0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8013eb2:	e7bd      	b.n	8013e30 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8013eb4:	0801bf84 	stmdaeq	r1, {r2, r7, r8, r9, sl, fp, ip, sp, pc}
 8013eb8:	0801bf7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8013ebc:	0801bf6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8013ec0:	0801bf5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 8013ec4:	080188b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, pc}
 8013ec8:	080188a8 	stmdaeq	r1, {r3, r5, r7, fp, pc}
 8013ecc:	0801bed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8013ed0:	08018e32 	stmdaeq	r1, {r1, r4, r5, r9, sl, fp, pc}

08013ed4 <DisplayUdfParams::Set(DisplayUdf*)>:
 8013ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ed8:	4604      	mov	r4, r0
 8013eda:	460d      	mov	r5, r1
 8013edc:	6823      	ldr	r3, [r4, #0]
 8013ede:	6988      	ldr	r0, [r1, #24]
 8013ee0:	009a      	lsls	r2, r3, #2
 8013ee2:	d506      	bpl.n	8013ef2 <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8013ee4:	f894 1021 	ldrb.w	r1, [r4, #33]	@ 0x21
 8013ee8:	7529      	strb	r1, [r5, #20]
 8013eea:	b110      	cbz	r0, 8013ef2 <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8013eec:	6803      	ldr	r3, [r0, #0]
 8013eee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013ef0:	4798      	blx	r3
 8013ef2:	6823      	ldr	r3, [r4, #0]
 8013ef4:	69a8      	ldr	r0, [r5, #24]
 8013ef6:	00db      	lsls	r3, r3, #3
 8013ef8:	bf41      	itttt	mi
 8013efa:	f894 3020 	ldrbmi.w	r3, [r4, #32]
 8013efe:	f64e 2260 	movwmi	r2, #60000	@ 0xea60
 8013f02:	4353      	mulmi	r3, r2
 8013f04:	612b      	strmi	r3, [r5, #16]
 8013f06:	6821      	ldr	r1, [r4, #0]
 8013f08:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8013f0c:	75a9      	strb	r1, [r5, #22]
 8013f0e:	b110      	cbz	r0, 8013f16 <DisplayUdfParams::Set(DisplayUdf*)+0x42>
 8013f10:	6803      	ldr	r3, [r0, #0]
 8013f12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013f14:	4798      	blx	r3
 8013f16:	2600      	movs	r6, #0
 8013f18:	2701      	movs	r7, #1
 8013f1a:	f104 0804 	add.w	r8, r4, #4
 8013f1e:	6822      	ldr	r2, [r4, #0]
 8013f20:	fa07 f306 	lsl.w	r3, r7, r6
 8013f24:	4393      	bics	r3, r2
 8013f26:	d105      	bne.n	8013f34 <DisplayUdfParams::Set(DisplayUdf*)+0x60>
 8013f28:	f818 1006 	ldrb.w	r1, [r8, r6]
 8013f2c:	4632      	mov	r2, r6
 8013f2e:	4628      	mov	r0, r5
 8013f30:	f7ff fdd1 	bl	8013ad6 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8013f34:	3601      	adds	r6, #1
 8013f36:	2e14      	cmp	r6, #20
 8013f38:	d1f1      	bne.n	8013f1e <DisplayUdfParams::Set(DisplayUdf*)+0x4a>
 8013f3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013f3e <Display::ClearEndOfLine() [clone .isra.0]>:
 8013f3e:	b108      	cbz	r0, 8013f44 <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 8013f40:	2301      	movs	r3, #1
 8013f42:	7303      	strb	r3, [r0, #12]
 8013f44:	4770      	bx	lr

08013f46 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8013f46:	b430      	push	{r4, r5}
 8013f48:	b160      	cbz	r0, 8013f64 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8013f4a:	6845      	ldr	r5, [r0, #4]
 8013f4c:	2300      	movs	r3, #0
 8013f4e:	5cd4      	ldrb	r4, [r2, r3]
 8013f50:	b11c      	cbz	r4, 8013f5a <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8013f52:	1c5c      	adds	r4, r3, #1
 8013f54:	429d      	cmp	r5, r3
 8013f56:	4623      	mov	r3, r4
 8013f58:	d8f9      	bhi.n	8013f4e <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8013f5a:	6804      	ldr	r4, [r0, #0]
 8013f5c:	69e4      	ldr	r4, [r4, #28]
 8013f5e:	46a4      	mov	ip, r4
 8013f60:	bc30      	pop	{r4, r5}
 8013f62:	4760      	bx	ip
 8013f64:	bc30      	pop	{r4, r5}
 8013f66:	4770      	bx	lr

08013f68 <net::display_emac_config()>:
 8013f68:	4b06      	ldr	r3, [pc, #24]	@ (8013f84 <net::display_emac_config()+0x1c>)
 8013f6a:	4a07      	ldr	r2, [pc, #28]	@ (8013f88 <net::display_emac_config()+0x20>)
 8013f6c:	b510      	push	{r4, lr}
 8013f6e:	681c      	ldr	r4, [r3, #0]
 8013f70:	69a0      	ldr	r0, [r4, #24]
 8013f72:	f7ff ffe4 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8013f76:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8013f7a:	4620      	mov	r0, r4
 8013f7c:	f7f5 fafc 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013f80:	bd10      	pop	{r4, pc}
 8013f82:	bf00      	nop
 8013f84:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 8013f88:	08019108 	stmdaeq	r1, {r3, r8, ip, pc}

08013f8c <net::display_emac_start()>:
 8013f8c:	4b06      	ldr	r3, [pc, #24]	@ (8013fa8 <net::display_emac_start()+0x1c>)
 8013f8e:	4a07      	ldr	r2, [pc, #28]	@ (8013fac <net::display_emac_start()+0x20>)
 8013f90:	b510      	push	{r4, lr}
 8013f92:	681c      	ldr	r4, [r3, #0]
 8013f94:	69a0      	ldr	r0, [r4, #24]
 8013f96:	f7ff ffd2 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8013f9a:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8013f9e:	4620      	mov	r0, r4
 8013fa0:	f7f5 faea 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013fa4:	bd10      	pop	{r4, pc}
 8013fa6:	bf00      	nop
 8013fa8:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 8013fac:	08019116 	stmdaeq	r1, {r1, r2, r4, r8, ip, pc}

08013fb0 <net::display_emac_status(bool)>:
 8013fb0:	4b09      	ldr	r3, [pc, #36]	@ (8013fd8 <net::display_emac_status(bool)+0x28>)
 8013fb2:	490a      	ldr	r1, [pc, #40]	@ (8013fdc <net::display_emac_status(bool)+0x2c>)
 8013fb4:	b510      	push	{r4, lr}
 8013fb6:	681c      	ldr	r4, [r3, #0]
 8013fb8:	4602      	mov	r2, r0
 8013fba:	69a0      	ldr	r0, [r4, #24]
 8013fbc:	f7ff ffbf 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8013fc0:	4b07      	ldr	r3, [pc, #28]	@ (8013fe0 <net::display_emac_status(bool)+0x30>)
 8013fc2:	4620      	mov	r0, r4
 8013fc4:	2a00      	cmp	r2, #0
 8013fc6:	bf08      	it	eq
 8013fc8:	460b      	moveq	r3, r1
 8013fca:	4a06      	ldr	r2, [pc, #24]	@ (8013fe4 <net::display_emac_status(bool)+0x34>)
 8013fcc:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8013fd0:	f7f5 fad2 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8013fd4:	bd10      	pop	{r4, pc}
 8013fd6:	bf00      	nop
 8013fd8:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 8013fdc:	08019128 	stmdaeq	r1, {r3, r5, r8, ip, pc}
 8013fe0:	08019125 	stmdaeq	r1, {r0, r2, r5, r8, ip, pc}
 8013fe4:	0801912d 	stmdaeq	r1, {r0, r2, r3, r5, r8, ip, pc}

08013fe8 <net::display_ip()>:
 8013fe8:	b508      	push	{r3, lr}
 8013fea:	4b02      	ldr	r3, [pc, #8]	@ (8013ff4 <net::display_ip()+0xc>)
 8013fec:	6818      	ldr	r0, [r3, #0]
 8013fee:	f7ff fd19 	bl	8013a24 <DisplayUdf::ShowIpAddress()>
 8013ff2:	bd08      	pop	{r3, pc}
 8013ff4:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8

08013ff8 <net::display_netmask()>:
 8013ff8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013ffa:	4b0d      	ldr	r3, [pc, #52]	@ (8014030 <net::display_netmask()+0x38>)
 8013ffc:	681c      	ldr	r4, [r3, #0]
 8013ffe:	69a0      	ldr	r0, [r4, #24]
 8014000:	f7ff ff9d 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8014004:	4b0b      	ldr	r3, [pc, #44]	@ (8014034 <net::display_netmask()+0x3c>)
 8014006:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 801400a:	685b      	ldr	r3, [r3, #4]
 801400c:	0e1a      	lsrs	r2, r3, #24
 801400e:	9202      	str	r2, [sp, #8]
 8014010:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8014014:	9201      	str	r2, [sp, #4]
 8014016:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801401a:	9200      	str	r2, [sp, #0]
 801401c:	b2db      	uxtb	r3, r3
 801401e:	4a06      	ldr	r2, [pc, #24]	@ (8014038 <net::display_netmask()+0x40>)
 8014020:	4620      	mov	r0, r4
 8014022:	f7f5 faa9 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 8014026:	4620      	mov	r0, r4
 8014028:	f7ff fcfc 	bl	8013a24 <DisplayUdf::ShowIpAddress()>
 801402c:	b004      	add	sp, #16
 801402e:	bd10      	pop	{r4, pc}
 8014030:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 8014034:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8014038:	080190f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, ip, pc}

0801403c <net::display_gateway()>:
 801403c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801403e:	4b0c      	ldr	r3, [pc, #48]	@ (8014070 <net::display_gateway()+0x34>)
 8014040:	681c      	ldr	r4, [r3, #0]
 8014042:	69a0      	ldr	r0, [r4, #24]
 8014044:	f7ff ff7b 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8014048:	4b0a      	ldr	r3, [pc, #40]	@ (8014074 <net::display_gateway()+0x38>)
 801404a:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 801404e:	689b      	ldr	r3, [r3, #8]
 8014050:	0e1a      	lsrs	r2, r3, #24
 8014052:	9202      	str	r2, [sp, #8]
 8014054:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8014058:	9201      	str	r2, [sp, #4]
 801405a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801405e:	9200      	str	r2, [sp, #0]
 8014060:	b2db      	uxtb	r3, r3
 8014062:	4a05      	ldr	r2, [pc, #20]	@ (8014078 <net::display_gateway()+0x3c>)
 8014064:	4620      	mov	r0, r4
 8014066:	f7f5 fa87 	bl	8009578 <Display::Printf(unsigned long, char const*, ...)>
 801406a:	b004      	add	sp, #16
 801406c:	bd10      	pop	{r4, pc}
 801406e:	bf00      	nop
 8014070:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 8014074:	2000cc10 	andcs	ip, r0, r0, lsl ip
 8014078:	080190ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip, pc}

0801407c <net::display_hostname()>:
 801407c:	b508      	push	{r3, lr}
 801407e:	4b07      	ldr	r3, [pc, #28]	@ (801409c <net::display_hostname()+0x20>)
 8014080:	6819      	ldr	r1, [r3, #0]
 8014082:	6988      	ldr	r0, [r1, #24]
 8014084:	f7ff ff5b 	bl	8013f3e <Display::ClearEndOfLine() [clone .isra.0]>
 8014088:	4b05      	ldr	r3, [pc, #20]	@ (80140a0 <net::display_hostname()+0x24>)
 801408a:	f891 1043 	ldrb.w	r1, [r1, #67]	@ 0x43
 801408e:	681a      	ldr	r2, [r3, #0]
 8014090:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014094:	3216      	adds	r2, #22
 8014096:	f7ff bf56 	b.w	8013f46 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 801409a:	bf00      	nop
 801409c:	2000ccb8 			@ <UNDEFINED> instruction: 0x2000ccb8
 80140a0:	2000cbf0 	strdcs	ip, [r0], -r0

080140a4 <ConfigStore::GetStoreOffset(configstore::Store)>:
 80140a4:	b510      	push	{r4, lr}
 80140a6:	4a05      	ldr	r2, [pc, #20]	@ (80140bc <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 80140a8:	2300      	movs	r3, #0
 80140aa:	2020      	movs	r0, #32
 80140ac:	428b      	cmp	r3, r1
 80140ae:	d100      	bne.n	80140b2 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 80140b0:	bd10      	pop	{r4, pc}
 80140b2:	f852 4b04 	ldr.w	r4, [r2], #4
 80140b6:	3301      	adds	r3, #1
 80140b8:	4420      	add	r0, r4
 80140ba:	e7f7      	b.n	80140ac <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 80140bc:	0801bf90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, ip, sp, pc}

080140c0 <ConfigStore::ConfigStore()>:
 80140c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80140c4:	b085      	sub	sp, #20
 80140c6:	4605      	mov	r5, r0
 80140c8:	f000 f9e4 	bl	8014494 <StoreDevice::StoreDevice()>
 80140cc:	4b30      	ldr	r3, [pc, #192]	@ (8014190 <ConfigStore::ConfigStore()+0xd0>)
 80140ce:	4c31      	ldr	r4, [pc, #196]	@ (8014194 <ConfigStore::ConfigStore()+0xd4>)
 80140d0:	601d      	str	r5, [r3, #0]
 80140d2:	4b31      	ldr	r3, [pc, #196]	@ (8014198 <ConfigStore::ConfigStore()+0xd8>)
 80140d4:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80141b4 <ConfigStore::ConfigStore()+0xf4>
 80140d8:	601c      	str	r4, [r3, #0]
 80140da:	4628      	mov	r0, r5
 80140dc:	782b      	ldrb	r3, [r5, #0]
 80140de:	f888 3000 	strb.w	r3, [r8]
 80140e2:	f000 f9e8 	bl	80144b6 <StoreDevice::GetSectorSize() const>
 80140e6:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 80140ea:	4606      	mov	r6, r0
 80140ec:	fbb7 f9f0 	udiv	r9, r7, r0
 80140f0:	4628      	mov	r0, r5
 80140f2:	f000 f9dd 	bl	80144b0 <StoreDevice::GetSize() const>
 80140f6:	4b29      	ldr	r3, [pc, #164]	@ (801419c <ConfigStore::ConfigStore()+0xdc>)
 80140f8:	fb09 0116 	mls	r1, r9, r6, r0
 80140fc:	6019      	str	r1, [r3, #0]
 80140fe:	f898 3000 	ldrb.w	r3, [r8]
 8014102:	3c10      	subs	r4, #16
 8014104:	b133      	cbz	r3, 8014114 <ConfigStore::ConfigStore()+0x54>
 8014106:	ab03      	add	r3, sp, #12
 8014108:	9300      	str	r3, [sp, #0]
 801410a:	463a      	mov	r2, r7
 801410c:	4623      	mov	r3, r4
 801410e:	4628      	mov	r0, r5
 8014110:	f000 f9d4 	bl	80144bc <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 8014114:	4822      	ldr	r0, [pc, #136]	@ (80141a0 <ConfigStore::ConfigStore()+0xe0>)
 8014116:	4b23      	ldr	r3, [pc, #140]	@ (80141a4 <ConfigStore::ConfigStore()+0xe4>)
 8014118:	2104      	movs	r1, #4
 801411a:	2201      	movs	r2, #1
 801411c:	f810 6b01 	ldrb.w	r6, [r0], #1
 8014120:	f813 7b01 	ldrb.w	r7, [r3], #1
 8014124:	42be      	cmp	r6, r7
 8014126:	bf1c      	itt	ne
 8014128:	f803 6c01 	strbne.w	r6, [r3, #-1]
 801412c:	2200      	movne	r2, #0
 801412e:	3901      	subs	r1, #1
 8014130:	d1f4      	bne.n	801411c <ConfigStore::ConfigStore()+0x5c>
 8014132:	b952      	cbnz	r2, 801414a <ConfigStore::ConfigStore()+0x8a>
 8014134:	4a17      	ldr	r2, [pc, #92]	@ (8014194 <ConfigStore::ConfigStore()+0xd4>)
 8014136:	f44f 637f 	mov.w	r3, #4080	@ 0xff0
 801413a:	4608      	mov	r0, r1
 801413c:	3b01      	subs	r3, #1
 801413e:	f802 0b01 	strb.w	r0, [r2], #1
 8014142:	d1fb      	bne.n	801413c <ConfigStore::ConfigStore()+0x7c>
 8014144:	4b18      	ldr	r3, [pc, #96]	@ (80141a8 <ConfigStore::ConfigStore()+0xe8>)
 8014146:	2201      	movs	r2, #1
 8014148:	601a      	str	r2, [r3, #0]
 801414a:	4818      	ldr	r0, [pc, #96]	@ (80141ac <ConfigStore::ConfigStore()+0xec>)
 801414c:	2200      	movs	r2, #0
 801414e:	2320      	movs	r3, #32
 8014150:	f850 6b04 	ldr.w	r6, [r0], #4
 8014154:	3201      	adds	r2, #1
 8014156:	2a1b      	cmp	r2, #27
 8014158:	4433      	add	r3, r6
 801415a:	d1f9      	bne.n	8014150 <ConfigStore::ConfigStore()+0x90>
 801415c:	4a14      	ldr	r2, [pc, #80]	@ (80141b0 <ConfigStore::ConfigStore()+0xf0>)
 801415e:	2600      	movs	r6, #0
 8014160:	6013      	str	r3, [r2, #0]
 8014162:	4628      	mov	r0, r5
 8014164:	f7ff ff9e 	bl	80140a4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8014168:	5823      	ldr	r3, [r4, r0]
 801416a:	3101      	adds	r1, #1
 801416c:	3301      	adds	r3, #1
 801416e:	bf08      	it	eq
 8014170:	5026      	streq	r6, [r4, r0]
 8014172:	291b      	cmp	r1, #27
 8014174:	d1f5      	bne.n	8014162 <ConfigStore::ConfigStore()+0xa2>
 8014176:	6923      	ldr	r3, [r4, #16]
 8014178:	3301      	adds	r3, #1
 801417a:	d104      	bne.n	8014186 <ConfigStore::ConfigStore()+0xc6>
 801417c:	2300      	movs	r3, #0
 801417e:	7423      	strb	r3, [r4, #16]
 8014180:	7463      	strb	r3, [r4, #17]
 8014182:	74a3      	strb	r3, [r4, #18]
 8014184:	74e3      	strb	r3, [r4, #19]
 8014186:	4628      	mov	r0, r5
 8014188:	b005      	add	sp, #20
 801418a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801418e:	bf00      	nop
 8014190:	2000ccbc 			@ <UNDEFINED> instruction: 0x2000ccbc
 8014194:	40024010 	andmi	r4, r2, r0, lsl r0
 8014198:	2001a6e4 	andcs	sl, r1, r4, ror #13
 801419c:	2000ccc8 	andcs	ip, r0, r8, asr #25
 80141a0:	0801bffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 80141a4:	40024000 	andmi	r4, r2, r0
 80141a8:	2000cccc 	andcs	ip, r0, ip, asr #25
 80141ac:	0801bf90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, ip, sp, pc}
 80141b0:	2000ccc4 	andcs	ip, r0, r4, asr #25
 80141b4:	2000ccd0 	ldrdcs	ip, [r0], -r0

080141b8 <ConfigStore::ResetSetList(configstore::Store)>:
 80141b8:	b508      	push	{r3, lr}
 80141ba:	f7ff ff73 	bl	80140a4 <ConfigStore::GetStoreOffset(configstore::Store)>
 80141be:	4905      	ldr	r1, [pc, #20]	@ (80141d4 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 80141c0:	1842      	adds	r2, r0, r1
 80141c2:	2300      	movs	r3, #0
 80141c4:	540b      	strb	r3, [r1, r0]
 80141c6:	7053      	strb	r3, [r2, #1]
 80141c8:	7093      	strb	r3, [r2, #2]
 80141ca:	70d3      	strb	r3, [r2, #3]
 80141cc:	4b02      	ldr	r3, [pc, #8]	@ (80141d8 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 80141ce:	2201      	movs	r2, #1
 80141d0:	601a      	str	r2, [r3, #0]
 80141d2:	bd08      	pop	{r3, pc}
 80141d4:	40024000 	andmi	r4, r2, r0
 80141d8:	2000cccc 	andcs	ip, r0, ip, asr #25

080141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 80141dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141de:	4614      	mov	r4, r2
 80141e0:	461d      	mov	r5, r3
 80141e2:	f7ff ff5f 	bl	80140a4 <ConfigStore::GetStoreOffset(configstore::Store)>
 80141e6:	490e      	ldr	r1, [pc, #56]	@ (8014220 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x44>)
 80141e8:	1902      	adds	r2, r0, r4
 80141ea:	9c06      	ldr	r4, [sp, #24]
 80141ec:	440a      	add	r2, r1
 80141ee:	1e6b      	subs	r3, r5, #1
 80141f0:	4414      	add	r4, r2
 80141f2:	2500      	movs	r5, #0
 80141f4:	42a2      	cmp	r2, r4
 80141f6:	d10a      	bne.n	801420e <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x32>
 80141f8:	b145      	cbz	r5, 801420c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x30>
 80141fa:	9b08      	ldr	r3, [sp, #32]
 80141fc:	9a07      	ldr	r2, [sp, #28]
 80141fe:	4418      	add	r0, r3
 8014200:	580b      	ldr	r3, [r1, r0]
 8014202:	4313      	orrs	r3, r2
 8014204:	500b      	str	r3, [r1, r0]
 8014206:	4b07      	ldr	r3, [pc, #28]	@ (8014224 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x48>)
 8014208:	2201      	movs	r2, #1
 801420a:	601a      	str	r2, [r3, #0]
 801420c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801420e:	7817      	ldrb	r7, [r2, #0]
 8014210:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8014214:	42b7      	cmp	r7, r6
 8014216:	bf1c      	itt	ne
 8014218:	7016      	strbne	r6, [r2, #0]
 801421a:	2501      	movne	r5, #1
 801421c:	3201      	adds	r2, #1
 801421e:	e7e9      	b.n	80141f4 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x18>
 8014220:	40024000 	andmi	r4, r2, r0
 8014224:	2000cccc 	andcs	ip, r0, ip, asr #25

08014228 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
 8014228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801422c:	b085      	sub	sp, #20
 801422e:	461e      	mov	r6, r3
 8014230:	4615      	mov	r5, r2
 8014232:	4607      	mov	r7, r0
 8014234:	f7ff ff36 	bl	80140a4 <ConfigStore::GetStoreOffset(configstore::Store)>
 8014238:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801423a:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801423e:	18c4      	adds	r4, r0, r3
 8014240:	4b10      	ldr	r3, [pc, #64]	@ (8014284 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>)
 8014242:	441c      	add	r4, r3
 8014244:	4688      	mov	r8, r1
 8014246:	4623      	mov	r3, r4
 8014248:	1932      	adds	r2, r6, r4
 801424a:	4293      	cmp	r3, r2
 801424c:	d10c      	bne.n	8014268 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x40>
 801424e:	f1b9 0f00 	cmp.w	r9, #0
 8014252:	d00f      	beq.n	8014274 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8014254:	2200      	movs	r2, #0
 8014256:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801425a:	9600      	str	r6, [sp, #0]
 801425c:	462b      	mov	r3, r5
 801425e:	4641      	mov	r1, r8
 8014260:	4638      	mov	r0, r7
 8014262:	f7ff ffbb 	bl	80141dc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8014266:	e005      	b.n	8014274 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8014268:	f813 1b01 	ldrb.w	r1, [r3], #1
 801426c:	2900      	cmp	r1, #0
 801426e:	d0ec      	beq.n	801424a <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x22>
 8014270:	4294      	cmp	r4, r2
 8014272:	d102      	bne.n	801427a <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x52>
 8014274:	b005      	add	sp, #20
 8014276:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801427a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801427e:	f805 3b01 	strb.w	r3, [r5], #1
 8014282:	e7f5      	b.n	8014270 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
 8014284:	40024000 	andmi	r4, r2, r0

08014288 <ConfigStore::Flash()>:
 8014288:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801428a:	4c24      	ldr	r4, [pc, #144]	@ (801431c <ConfigStore::Flash()+0x94>)
 801428c:	6823      	ldr	r3, [r4, #0]
 801428e:	2b00      	cmp	r3, #0
 8014290:	d041      	beq.n	8014316 <ConfigStore::Flash()+0x8e>
 8014292:	3b01      	subs	r3, #1
 8014294:	2b05      	cmp	r3, #5
 8014296:	d82f      	bhi.n	80142f8 <ConfigStore::Flash()+0x70>
 8014298:	e8df f003 	tbb	[pc, r3]
 801429c:	2c140b03 			@ <UNDEFINED> instruction: 0x2c140b03
 80142a0:	4b1f2e23 	blmi	87dfb34 <_sidata+0x7c3650>
 80142a4:	681a      	ldr	r2, [r3, #0]
 80142a6:	4b1f      	ldr	r3, [pc, #124]	@ (8014324 <ConfigStore::Flash()+0x9c>)
 80142a8:	601a      	str	r2, [r3, #0]
 80142aa:	2302      	movs	r3, #2
 80142ac:	6023      	str	r3, [r4, #0]
 80142ae:	2001      	movs	r0, #1
 80142b0:	e02f      	b.n	8014312 <ConfigStore::Flash()+0x8a>
 80142b2:	4b1b      	ldr	r3, [pc, #108]	@ (8014320 <ConfigStore::Flash()+0x98>)
 80142b4:	4a1b      	ldr	r2, [pc, #108]	@ (8014324 <ConfigStore::Flash()+0x9c>)
 80142b6:	681b      	ldr	r3, [r3, #0]
 80142b8:	6812      	ldr	r2, [r2, #0]
 80142ba:	1a9b      	subs	r3, r3, r2
 80142bc:	2b63      	cmp	r3, #99	@ 0x63
 80142be:	d9f6      	bls.n	80142ae <ConfigStore::Flash()+0x26>
 80142c0:	2303      	movs	r3, #3
 80142c2:	e7f3      	b.n	80142ac <ConfigStore::Flash()+0x24>
 80142c4:	4918      	ldr	r1, [pc, #96]	@ (8014328 <ConfigStore::Flash()+0xa0>)
 80142c6:	ab03      	add	r3, sp, #12
 80142c8:	6809      	ldr	r1, [r1, #0]
 80142ca:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80142ce:	f000 f8fa 	bl	80144c6 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 80142d2:	2800      	cmp	r0, #0
 80142d4:	d0eb      	beq.n	80142ae <ConfigStore::Flash()+0x26>
 80142d6:	4b12      	ldr	r3, [pc, #72]	@ (8014320 <ConfigStore::Flash()+0x98>)
 80142d8:	681a      	ldr	r2, [r3, #0]
 80142da:	4b12      	ldr	r3, [pc, #72]	@ (8014324 <ConfigStore::Flash()+0x9c>)
 80142dc:	601a      	str	r2, [r3, #0]
 80142de:	2305      	movs	r3, #5
 80142e0:	e7e4      	b.n	80142ac <ConfigStore::Flash()+0x24>
 80142e2:	4b0f      	ldr	r3, [pc, #60]	@ (8014320 <ConfigStore::Flash()+0x98>)
 80142e4:	4a0f      	ldr	r2, [pc, #60]	@ (8014324 <ConfigStore::Flash()+0x9c>)
 80142e6:	681b      	ldr	r3, [r3, #0]
 80142e8:	6812      	ldr	r2, [r2, #0]
 80142ea:	1a9b      	subs	r3, r3, r2
 80142ec:	2b63      	cmp	r3, #99	@ 0x63
 80142ee:	d9de      	bls.n	80142ae <ConfigStore::Flash()+0x26>
 80142f0:	2304      	movs	r3, #4
 80142f2:	e7db      	b.n	80142ac <ConfigStore::Flash()+0x24>
 80142f4:	2306      	movs	r3, #6
 80142f6:	e7d9      	b.n	80142ac <ConfigStore::Flash()+0x24>
 80142f8:	ab03      	add	r3, sp, #12
 80142fa:	4a0c      	ldr	r2, [pc, #48]	@ (801432c <ConfigStore::Flash()+0xa4>)
 80142fc:	490a      	ldr	r1, [pc, #40]	@ (8014328 <ConfigStore::Flash()+0xa0>)
 80142fe:	9300      	str	r3, [sp, #0]
 8014300:	6812      	ldr	r2, [r2, #0]
 8014302:	4b0b      	ldr	r3, [pc, #44]	@ (8014330 <ConfigStore::Flash()+0xa8>)
 8014304:	6809      	ldr	r1, [r1, #0]
 8014306:	f000 f8e2 	bl	80144ce <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 801430a:	2800      	cmp	r0, #0
 801430c:	d0cf      	beq.n	80142ae <ConfigStore::Flash()+0x26>
 801430e:	2000      	movs	r0, #0
 8014310:	6020      	str	r0, [r4, #0]
 8014312:	b004      	add	sp, #16
 8014314:	bd10      	pop	{r4, pc}
 8014316:	4618      	mov	r0, r3
 8014318:	e7fb      	b.n	8014312 <ConfigStore::Flash()+0x8a>
 801431a:	bf00      	nop
 801431c:	2000cccc 	andcs	ip, r0, ip, asr #25
 8014320:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8014324:	2000ccc0 	andcs	ip, r0, r0, asr #25
 8014328:	2000ccc8 	andcs	ip, r0, r8, asr #25
 801432c:	2000ccc4 	andcs	ip, r0, r4, asr #25
 8014330:	40024000 	andmi	r4, r2, r0

08014334 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
 8014334:	b510      	push	{r4, lr}
 8014336:	4a0d      	ldr	r2, [pc, #52]	@ (801436c <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x38>)
 8014338:	f44f 6461 	mov.w	r4, #3600	@ 0xe10
 801433c:	6913      	ldr	r3, [r2, #16]
 801433e:	fb93 f3f4 	sdiv	r3, r3, r4
 8014342:	b25b      	sxtb	r3, r3
 8014344:	7003      	strb	r3, [r0, #0]
 8014346:	2b00      	cmp	r3, #0
 8014348:	6912      	ldr	r2, [r2, #16]
 801434a:	dd08      	ble.n	801435e <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x2a>
 801434c:	4808      	ldr	r0, [pc, #32]	@ (8014370 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x3c>)
 801434e:	fb00 2203 	mla	r2, r0, r3, r2
 8014352:	233c      	movs	r3, #60	@ 0x3c
 8014354:	fbb2 f2f3 	udiv	r2, r2, r3
 8014358:	b2d3      	uxtb	r3, r2
 801435a:	700b      	strb	r3, [r1, #0]
 801435c:	bd10      	pop	{r4, pc}
 801435e:	4363      	muls	r3, r4
 8014360:	1a9b      	subs	r3, r3, r2
 8014362:	223c      	movs	r2, #60	@ 0x3c
 8014364:	fbb3 f3f2 	udiv	r3, r3, r2
 8014368:	b2db      	uxtb	r3, r3
 801436a:	e7f6      	b.n	801435a <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x26>
 801436c:	40024000 	andmi	r4, r2, r0
 8014370:	fffff1f0 			@ <UNDEFINED> instruction: 0xfffff1f0

08014374 <EnvParams::EnvParams()>:
 8014374:	4770      	bx	lr
	...

08014378 <EnvParams::LoadAndSet(char const*, unsigned long)>:
 8014378:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801437a:	460c      	mov	r4, r1
 801437c:	4615      	mov	r5, r2
 801437e:	4907      	ldr	r1, [pc, #28]	@ (801439c <EnvParams::LoadAndSet(char const*, unsigned long)+0x24>)
 8014380:	4602      	mov	r2, r0
 8014382:	4668      	mov	r0, sp
 8014384:	f000 fa2a 	bl	80147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8014388:	462a      	mov	r2, r5
 801438a:	4621      	mov	r1, r4
 801438c:	4668      	mov	r0, sp
 801438e:	f000 fa29 	bl	80147e4 <ReadConfigFile::Read(char const*, unsigned int)>
 8014392:	4668      	mov	r0, sp
 8014394:	f000 fa25 	bl	80147e2 <ReadConfigFile::~ReadConfigFile()>
 8014398:	b003      	add	sp, #12
 801439a:	bd30      	pop	{r4, r5, pc}
 801439c:	0801442d 	stmdaeq	r1, {r0, r2, r3, r5, sl, lr}

080143a0 <EnvParams::callbackFunction(char const*)>:
 80143a0:	b513      	push	{r0, r1, r4, lr}
 80143a2:	4608      	mov	r0, r1
 80143a4:	f10d 0307 	add.w	r3, sp, #7
 80143a8:	491c      	ldr	r1, [pc, #112]	@ (801441c <EnvParams::callbackFunction(char const*)+0x7c>)
 80143aa:	f10d 0206 	add.w	r2, sp, #6
 80143ae:	f000 fb5a 	bl	8014a66 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
 80143b2:	bb70      	cbnz	r0, 8014412 <EnvParams::callbackFunction(char const*)+0x72>
 80143b4:	f99d 1006 	ldrsb.w	r1, [sp, #6]
 80143b8:	f101 030c 	add.w	r3, r1, #12
 80143bc:	b2db      	uxtb	r3, r3
 80143be:	2b1a      	cmp	r3, #26
 80143c0:	d827      	bhi.n	8014412 <EnvParams::callbackFunction(char const*)+0x72>
 80143c2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80143c6:	bb32      	cbnz	r2, 8014416 <EnvParams::callbackFunction(char const*)+0x76>
 80143c8:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80143cc:	434b      	muls	r3, r1
 80143ce:	4a14      	ldr	r2, [pc, #80]	@ (8014420 <EnvParams::callbackFunction(char const*)+0x80>)
 80143d0:	6911      	ldr	r1, [r2, #16]
 80143d2:	4299      	cmp	r1, r3
 80143d4:	bf1f      	itttt	ne
 80143d6:	6113      	strne	r3, [r2, #16]
 80143d8:	4b12      	ldrne	r3, [pc, #72]	@ (8014424 <EnvParams::callbackFunction(char const*)+0x84>)
 80143da:	2201      	movne	r2, #1
 80143dc:	601a      	strne	r2, [r3, #0]
 80143de:	e018      	b.n	8014412 <EnvParams::callbackFunction(char const*)+0x72>
 80143e0:	f993 4000 	ldrsb.w	r4, [r3]
 80143e4:	428c      	cmp	r4, r1
 80143e6:	d111      	bne.n	801440c <EnvParams::callbackFunction(char const*)+0x6c>
 80143e8:	785c      	ldrb	r4, [r3, #1]
 80143ea:	4294      	cmp	r4, r2
 80143ec:	d10e      	bne.n	801440c <EnvParams::callbackFunction(char const*)+0x6c>
 80143ee:	2900      	cmp	r1, #0
 80143f0:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80143f4:	fb01 f303 	mul.w	r3, r1, r3
 80143f8:	bfcb      	itete	gt
 80143fa:	ebc2 1202 	rsbgt	r2, r2, r2, lsl #4
 80143fe:	f06f 013b 	mvnle.w	r1, #59	@ 0x3b
 8014402:	eb03 0382 	addgt.w	r3, r3, r2, lsl #2
 8014406:	fb01 3302 	mlale	r3, r1, r2, r3
 801440a:	e7e0      	b.n	80143ce <EnvParams::callbackFunction(char const*)+0x2e>
 801440c:	3302      	adds	r3, #2
 801440e:	3801      	subs	r0, #1
 8014410:	d1e6      	bne.n	80143e0 <EnvParams::callbackFunction(char const*)+0x40>
 8014412:	b002      	add	sp, #8
 8014414:	bd10      	pop	{r4, pc}
 8014416:	4b04      	ldr	r3, [pc, #16]	@ (8014428 <EnvParams::callbackFunction(char const*)+0x88>)
 8014418:	200c      	movs	r0, #12
 801441a:	e7f8      	b.n	801440e <EnvParams::callbackFunction(char const*)+0x6e>
 801441c:	0801c016 	stmdaeq	r1, {r1, r2, r4, lr, pc}
 8014420:	40024000 	andmi	r4, r2, r0
 8014424:	2000cccc 	andcs	ip, r0, ip, asr #25
 8014428:	0801c000 	stmdaeq	r1, {lr, pc}

0801442c <EnvParams::staticCallbackFunction(void*, char const*)>:
 801442c:	f7ff bfb8 	b.w	80143a0 <EnvParams::callbackFunction(char const*)>

08014430 <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
 8014430:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014432:	461c      	mov	r4, r3
 8014434:	a801      	add	r0, sp, #4
 8014436:	4613      	mov	r3, r2
 8014438:	460a      	mov	r2, r1
 801443a:	4914      	ldr	r1, [pc, #80]	@ (801448c <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x5c>)
 801443c:	f000 f8f8 	bl	8014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8014440:	f10d 0103 	add.w	r1, sp, #3
 8014444:	f10d 0002 	add.w	r0, sp, #2
 8014448:	f7ff ff74 	bl	8014334 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
 801444c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8014450:	f99d 2002 	ldrsb.w	r2, [sp, #2]
 8014454:	490e      	ldr	r1, [pc, #56]	@ (8014490 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x60>)
 8014456:	a801      	add	r0, sp, #4
 8014458:	f000 f970 	bl	801473c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
 801445c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8014460:	b17b      	cbz	r3, 8014482 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x52>
 8014462:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014466:	9b01      	ldr	r3, [sp, #4]
 8014468:	4413      	add	r3, r2
 801446a:	227d      	movs	r2, #125	@ 0x7d
 801446c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014470:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014474:	9901      	ldr	r1, [sp, #4]
 8014476:	54ca      	strb	r2, [r1, r3]
 8014478:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801447c:	3301      	adds	r3, #1
 801447e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014482:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014486:	6023      	str	r3, [r4, #0]
 8014488:	b004      	add	sp, #16
 801448a:	bd10      	pop	{r4, pc}
 801448c:	0801c021 	stmdaeq	r1, {r0, r5, lr, pc}
 8014490:	0801c016 	stmdaeq	r1, {r1, r2, r4, lr, pc}

08014494 <StoreDevice::StoreDevice()>:
 8014494:	b510      	push	{r4, lr}
 8014496:	2301      	movs	r3, #1
 8014498:	4604      	mov	r4, r0
 801449a:	7003      	strb	r3, [r0, #0]
 801449c:	2204      	movs	r2, #4
 801449e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80144a2:	4802      	ldr	r0, [pc, #8]	@ (80144ac <StoreDevice::StoreDevice()+0x18>)
 80144a4:	f003 fbfa 	bl	8017c9c <printf>
 80144a8:	4620      	mov	r0, r4
 80144aa:	bd10      	pop	{r4, pc}
 80144ac:	0801913e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, ip, pc}

080144b0 <StoreDevice::GetSize() const>:
 80144b0:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80144b4:	4770      	bx	lr

080144b6 <StoreDevice::GetSectorSize() const>:
 80144b6:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80144ba:	4770      	bx	lr

080144bc <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 80144bc:	9b00      	ldr	r3, [sp, #0]
 80144be:	2200      	movs	r2, #0
 80144c0:	601a      	str	r2, [r3, #0]
 80144c2:	2001      	movs	r0, #1
 80144c4:	4770      	bx	lr

080144c6 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 80144c6:	2200      	movs	r2, #0
 80144c8:	601a      	str	r2, [r3, #0]
 80144ca:	2001      	movs	r0, #1
 80144cc:	4770      	bx	lr

080144ce <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 80144ce:	9b00      	ldr	r3, [sp, #0]
 80144d0:	2200      	movs	r2, #0
 80144d2:	601a      	str	r2, [r3, #0]
 80144d4:	2001      	movs	r0, #1
 80144d6:	4770      	bx	lr

080144d8 <properties::convert_json_file(char*, unsigned long, bool)>:
 80144d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80144dc:	7803      	ldrb	r3, [r0, #0]
 80144de:	2b7b      	cmp	r3, #123	@ 0x7b
 80144e0:	4604      	mov	r4, r0
 80144e2:	f040 80a2 	bne.w	801462a <properties::convert_json_file(char*, unsigned long, bool)+0x152>
 80144e6:	b172      	cbz	r2, 8014506 <properties::convert_json_file(char*, unsigned long, bool)+0x2e>
 80144e8:	2501      	movs	r5, #1
 80144ea:	4603      	mov	r3, r0
 80144ec:	4628      	mov	r0, r5
 80144ee:	f04f 0c3d 	mov.w	ip, #61	@ 0x3d
 80144f2:	f04f 0e0a 	mov.w	lr, #10
 80144f6:	428d      	cmp	r5, r1
 80144f8:	d377      	bcc.n	80145ea <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 80144fa:	b102      	cbz	r2, 80144fe <properties::convert_json_file(char*, unsigned long, bool)+0x26>
 80144fc:	3801      	subs	r0, #1
 80144fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014502:	4635      	mov	r5, r6
 8014504:	e7f3      	b.n	80144ee <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 8014506:	4605      	mov	r5, r0
 8014508:	2323      	movs	r3, #35	@ 0x23
 801450a:	f805 3b01 	strb.w	r3, [r5], #1
 801450e:	2601      	movs	r6, #1
 8014510:	462f      	mov	r7, r5
 8014512:	428e      	cmp	r6, r1
 8014514:	d317      	bcc.n	8014546 <properties::convert_json_file(char*, unsigned long, bool)+0x6e>
 8014516:	1c6b      	adds	r3, r5, #1
 8014518:	428e      	cmp	r6, r1
 801451a:	eba3 0004 	sub.w	r0, r3, r4
 801451e:	d205      	bcs.n	801452c <properties::convert_json_file(char*, unsigned long, bool)+0x54>
 8014520:	46bc      	mov	ip, r7
 8014522:	f81c eb01 	ldrb.w	lr, [ip], #1
 8014526:	f1be 0f22 	cmp.w	lr, #34	@ 0x22
 801452a:	d112      	bne.n	8014552 <properties::convert_json_file(char*, unsigned long, bool)+0x7a>
 801452c:	240a      	movs	r4, #10
 801452e:	702c      	strb	r4, [r5, #0]
 8014530:	463c      	mov	r4, r7
 8014532:	3701      	adds	r7, #1
 8014534:	7825      	ldrb	r5, [r4, #0]
 8014536:	2d7b      	cmp	r5, #123	@ 0x7b
 8014538:	d0e3      	beq.n	8014502 <properties::convert_json_file(char*, unsigned long, bool)+0x2a>
 801453a:	428e      	cmp	r6, r1
 801453c:	f106 0501 	add.w	r5, r6, #1
 8014540:	d2d5      	bcs.n	80144ee <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 8014542:	462e      	mov	r6, r5
 8014544:	e7f4      	b.n	8014530 <properties::convert_json_file(char*, unsigned long, bool)+0x58>
 8014546:	f817 3b01 	ldrb.w	r3, [r7], #1
 801454a:	2b22      	cmp	r3, #34	@ 0x22
 801454c:	d0e3      	beq.n	8014516 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 801454e:	3601      	adds	r6, #1
 8014550:	e7df      	b.n	8014512 <properties::convert_json_file(char*, unsigned long, bool)+0x3a>
 8014552:	f803 ec01 	strb.w	lr, [r3, #-1]
 8014556:	3601      	adds	r6, #1
 8014558:	4667      	mov	r7, ip
 801455a:	461d      	mov	r5, r3
 801455c:	e7db      	b.n	8014516 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 801455e:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 8014562:	d142      	bne.n	80145ea <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 8014564:	eba0 0904 	sub.w	r9, r0, r4
 8014568:	f894 8000 	ldrb.w	r8, [r4]
 801456c:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 8014570:	eb04 0009 	add.w	r0, r4, r9
 8014574:	4626      	mov	r6, r4
 8014576:	f105 0701 	add.w	r7, r5, #1
 801457a:	f104 0401 	add.w	r4, r4, #1
 801457e:	d13f      	bne.n	8014600 <properties::convert_json_file(char*, unsigned long, bool)+0x128>
 8014580:	f803 cb01 	strb.w	ip, [r3], #1
 8014584:	3001      	adds	r0, #1
 8014586:	462f      	mov	r7, r5
 8014588:	428f      	cmp	r7, r1
 801458a:	f896 8000 	ldrb.w	r8, [r6]
 801458e:	4634      	mov	r4, r6
 8014590:	f107 0701 	add.w	r7, r7, #1
 8014594:	f106 0601 	add.w	r6, r6, #1
 8014598:	d338      	bcc.n	801460c <properties::convert_json_file(char*, unsigned long, bool)+0x134>
 801459a:	7825      	ldrb	r5, [r4, #0]
 801459c:	2d20      	cmp	r5, #32
 801459e:	4626      	mov	r6, r4
 80145a0:	46b8      	mov	r8, r7
 80145a2:	f104 0401 	add.w	r4, r4, #1
 80145a6:	f107 0701 	add.w	r7, r7, #1
 80145aa:	d134      	bne.n	8014616 <properties::convert_json_file(char*, unsigned long, bool)+0x13e>
 80145ac:	4588      	cmp	r8, r1
 80145ae:	d3f4      	bcc.n	801459a <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 80145b0:	46b8      	mov	r8, r7
 80145b2:	7834      	ldrb	r4, [r6, #0]
 80145b4:	2c22      	cmp	r4, #34	@ 0x22
 80145b6:	d100      	bne.n	80145ba <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 80145b8:	3601      	adds	r6, #1
 80145ba:	4634      	mov	r4, r6
 80145bc:	f108 0501 	add.w	r5, r8, #1
 80145c0:	f814 7b01 	ldrb.w	r7, [r4], #1
 80145c4:	2f22      	cmp	r7, #34	@ 0x22
 80145c6:	d02a      	beq.n	801461e <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80145c8:	2f2c      	cmp	r7, #44	@ 0x2c
 80145ca:	d028      	beq.n	801461e <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80145cc:	2f7d      	cmp	r7, #125	@ 0x7d
 80145ce:	d026      	beq.n	801461e <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80145d0:	4588      	cmp	r8, r1
 80145d2:	d228      	bcs.n	8014626 <properties::convert_json_file(char*, unsigned long, bool)+0x14e>
 80145d4:	f1a7 0820 	sub.w	r8, r7, #32
 80145d8:	f1b8 0f5a 	cmp.w	r8, #90	@ 0x5a
 80145dc:	d803      	bhi.n	80145e6 <properties::convert_json_file(char*, unsigned long, bool)+0x10e>
 80145de:	f803 7b01 	strb.w	r7, [r3], #1
 80145e2:	3001      	adds	r0, #1
 80145e4:	4626      	mov	r6, r4
 80145e6:	46a8      	mov	r8, r5
 80145e8:	e7e7      	b.n	80145ba <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 80145ea:	428d      	cmp	r5, r1
 80145ec:	f894 8000 	ldrb.w	r8, [r4]
 80145f0:	4627      	mov	r7, r4
 80145f2:	f105 0501 	add.w	r5, r5, #1
 80145f6:	f104 0401 	add.w	r4, r4, #1
 80145fa:	d3b0      	bcc.n	801455e <properties::convert_json_file(char*, unsigned long, bool)+0x86>
 80145fc:	463c      	mov	r4, r7
 80145fe:	e7b1      	b.n	8014564 <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
 8014600:	428d      	cmp	r5, r1
 8014602:	d2c1      	bcs.n	8014588 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 8014604:	f803 8b01 	strb.w	r8, [r3], #1
 8014608:	463d      	mov	r5, r7
 801460a:	e7ad      	b.n	8014568 <properties::convert_json_file(char*, unsigned long, bool)+0x90>
 801460c:	f1b8 0f3a 	cmp.w	r8, #58	@ 0x3a
 8014610:	d1ba      	bne.n	8014588 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 8014612:	4634      	mov	r4, r6
 8014614:	e7c1      	b.n	801459a <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 8014616:	2d22      	cmp	r5, #34	@ 0x22
 8014618:	bf08      	it	eq
 801461a:	4626      	moveq	r6, r4
 801461c:	e7c9      	b.n	80145b2 <properties::convert_json_file(char*, unsigned long, bool)+0xda>
 801461e:	f803 eb01 	strb.w	lr, [r3], #1
 8014622:	3001      	adds	r0, #1
 8014624:	4645      	mov	r5, r8
 8014626:	3501      	adds	r5, #1
 8014628:	e765      	b.n	80144f6 <properties::convert_json_file(char*, unsigned long, bool)+0x1e>
 801462a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801462e:	e766      	b.n	80144fe <properties::convert_json_file(char*, unsigned long, bool)+0x26>

08014630 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
 8014630:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014634:	6002      	str	r2, [r0, #0]
 8014636:	4614      	mov	r4, r2
 8014638:	2200      	movs	r2, #0
 801463a:	80c2      	strh	r2, [r0, #6]
 801463c:	4a1c      	ldr	r2, [pc, #112]	@ (80146b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x80>)
 801463e:	8083      	strh	r3, [r0, #4]
 8014640:	7812      	ldrb	r2, [r2, #0]
 8014642:	f002 0201 	and.w	r2, r2, #1
 8014646:	4606      	mov	r6, r0
 8014648:	7202      	strb	r2, [r0, #8]
 801464a:	4608      	mov	r0, r1
 801464c:	4605      	mov	r5, r0
 801464e:	3001      	adds	r0, #1
 8014650:	782f      	ldrb	r7, [r5, #0]
 8014652:	2f00      	cmp	r7, #0
 8014654:	d1fa      	bne.n	801464c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x1c>
 8014656:	1a6d      	subs	r5, r5, r1
 8014658:	b29b      	uxth	r3, r3
 801465a:	b1d2      	cbz	r2, 8014692 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x62>
 801465c:	1d2f      	adds	r7, r5, #4
 801465e:	429f      	cmp	r7, r3
 8014660:	d814      	bhi.n	801468c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8014662:	f04f 087b 	mov.w	r8, #123	@ 0x7b
 8014666:	f04f 0922 	mov.w	r9, #34	@ 0x22
 801466a:	462a      	mov	r2, r5
 801466c:	f884 8000 	strb.w	r8, [r4]
 8014670:	f884 9001 	strb.w	r9, [r4, #1]
 8014674:	1ca0      	adds	r0, r4, #2
 8014676:	f003 f816 	bl	80176a6 <memmove>
 801467a:	1963      	adds	r3, r4, r5
 801467c:	223a      	movs	r2, #58	@ 0x3a
 801467e:	f883 9002 	strb.w	r9, [r3, #2]
 8014682:	70da      	strb	r2, [r3, #3]
 8014684:	3505      	adds	r5, #5
 8014686:	f804 8007 	strb.w	r8, [r4, r7]
 801468a:	80f5      	strh	r5, [r6, #6]
 801468c:	4630      	mov	r0, r6
 801468e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014692:	1caf      	adds	r7, r5, #2
 8014694:	42bb      	cmp	r3, r7
 8014696:	d3f9      	bcc.n	801468c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8014698:	4620      	mov	r0, r4
 801469a:	2323      	movs	r3, #35	@ 0x23
 801469c:	f800 3b01 	strb.w	r3, [r0], #1
 80146a0:	462a      	mov	r2, r5
 80146a2:	442c      	add	r4, r5
 80146a4:	f002 ffff 	bl	80176a6 <memmove>
 80146a8:	230a      	movs	r3, #10
 80146aa:	7063      	strb	r3, [r4, #1]
 80146ac:	80f7      	strh	r7, [r6, #6]
 80146ae:	e7ed      	b.n	801468c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 80146b0:	2000ccd1 	ldrdcs	ip, [r0], -r1

080146b4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
 80146b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80146b6:	469c      	mov	ip, r3
 80146b8:	8885      	ldrh	r5, [r0, #4]
 80146ba:	88c3      	ldrh	r3, [r0, #6]
 80146bc:	42ab      	cmp	r3, r5
 80146be:	b085      	sub	sp, #20
 80146c0:	d302      	bcc.n	80146c8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x14>
 80146c2:	2000      	movs	r0, #0
 80146c4:	b005      	add	sp, #20
 80146c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80146c8:	4604      	mov	r4, r0
 80146ca:	6800      	ldr	r0, [r0, #0]
 80146cc:	f894 e008 	ldrb.w	lr, [r4, #8]
 80146d0:	4418      	add	r0, r3
 80146d2:	1aed      	subs	r5, r5, r3
 80146d4:	b2d6      	uxtb	r6, r2
 80146d6:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80146da:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80146de:	0e12      	lsrs	r2, r2, #24
 80146e0:	f1bc 0f00 	cmp.w	ip, #0
 80146e4:	d109      	bne.n	80146fa <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x46>
 80146e6:	f1be 0f00 	cmp.w	lr, #0
 80146ea:	d109      	bne.n	8014700 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x4c>
 80146ec:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80146f0:	e9cd 6700 	strd	r6, r7, [sp]
 80146f4:	4a0e      	ldr	r2, [pc, #56]	@ (8014730 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x7c>)
 80146f6:	460b      	mov	r3, r1
 80146f8:	e008      	b.n	801470c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 80146fa:	f1be 0f00 	cmp.w	lr, #0
 80146fe:	d00f      	beq.n	8014720 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x6c>
 8014700:	e9cd 6700 	strd	r6, r7, [sp]
 8014704:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014708:	4a0a      	ldr	r2, [pc, #40]	@ (8014734 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x80>)
 801470a:	460b      	mov	r3, r1
 801470c:	4629      	mov	r1, r5
 801470e:	f003 faed 	bl	8017cec <snprintf>
 8014712:	4285      	cmp	r5, r0
 8014714:	dbd5      	blt.n	80146c2 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xe>
 8014716:	88e3      	ldrh	r3, [r4, #6]
 8014718:	4403      	add	r3, r0
 801471a:	80e3      	strh	r3, [r4, #6]
 801471c:	2001      	movs	r0, #1
 801471e:	e7d1      	b.n	80146c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x10>
 8014720:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014724:	e9cd 6700 	strd	r6, r7, [sp]
 8014728:	4a03      	ldr	r2, [pc, #12]	@ (8014738 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x84>)
 801472a:	460b      	mov	r3, r1
 801472c:	e7ee      	b.n	801470c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 801472e:	bf00      	nop
 8014730:	08019182 	stmdaeq	r1, {r1, r7, r8, ip, pc}
 8014734:	0801916e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, ip, pc}
 8014738:	08019183 	stmdaeq	r1, {r0, r1, r7, r8, ip, pc}

0801473c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
 801473c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801473e:	88c6      	ldrh	r6, [r0, #6]
 8014740:	8885      	ldrh	r5, [r0, #4]
 8014742:	42ae      	cmp	r6, r5
 8014744:	b085      	sub	sp, #20
 8014746:	d302      	bcc.n	801474e <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x12>
 8014748:	2000      	movs	r0, #0
 801474a:	b005      	add	sp, #20
 801474c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801474e:	4604      	mov	r4, r0
 8014750:	6800      	ldr	r0, [r0, #0]
 8014752:	1bad      	subs	r5, r5, r6
 8014754:	4430      	add	r0, r6
 8014756:	7a26      	ldrb	r6, [r4, #8]
 8014758:	b19e      	cbz	r6, 8014782 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x46>
 801475a:	4e0f      	ldr	r6, [pc, #60]	@ (8014798 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 801475c:	4f0f      	ldr	r7, [pc, #60]	@ (801479c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 801475e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8014762:	2a00      	cmp	r2, #0
 8014764:	bfc8      	it	gt
 8014766:	463e      	movgt	r6, r7
 8014768:	4a0d      	ldr	r2, [pc, #52]	@ (80147a0 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x64>)
 801476a:	9600      	str	r6, [sp, #0]
 801476c:	460b      	mov	r3, r1
 801476e:	4629      	mov	r1, r5
 8014770:	f003 fabc 	bl	8017cec <snprintf>
 8014774:	4285      	cmp	r5, r0
 8014776:	dbe7      	blt.n	8014748 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xc>
 8014778:	88e3      	ldrh	r3, [r4, #6]
 801477a:	4403      	add	r3, r0
 801477c:	80e3      	strh	r3, [r4, #6]
 801477e:	2001      	movs	r0, #1
 8014780:	e7e3      	b.n	801474a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xe>
 8014782:	4e05      	ldr	r6, [pc, #20]	@ (8014798 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8014784:	4f05      	ldr	r7, [pc, #20]	@ (801479c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 8014786:	2a00      	cmp	r2, #0
 8014788:	bfc8      	it	gt
 801478a:	463e      	movgt	r6, r7
 801478c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8014790:	9600      	str	r6, [sp, #0]
 8014792:	4a04      	ldr	r2, [pc, #16]	@ (80147a4 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x68>)
 8014794:	460b      	mov	r3, r1
 8014796:	e7ea      	b.n	801476e <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x32>
 8014798:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801479c:	08019193 	stmdaeq	r1, {r0, r1, r4, r7, r8, ip, pc}
 80147a0:	08019195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, pc}
 80147a4:	080191a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, ip, pc}

080147a8 <PropertiesBuilder::AddComment(char const*)>:
 80147a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80147aa:	7a06      	ldrb	r6, [r0, #8]
 80147ac:	b98e      	cbnz	r6, 80147d2 <PropertiesBuilder::AddComment(char const*)+0x2a>
 80147ae:	4604      	mov	r4, r0
 80147b0:	88c0      	ldrh	r0, [r0, #6]
 80147b2:	88a5      	ldrh	r5, [r4, #4]
 80147b4:	42a8      	cmp	r0, r5
 80147b6:	d20d      	bcs.n	80147d4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80147b8:	6827      	ldr	r7, [r4, #0]
 80147ba:	4a07      	ldr	r2, [pc, #28]	@ (80147d8 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80147bc:	1a2d      	subs	r5, r5, r0
 80147be:	460b      	mov	r3, r1
 80147c0:	4438      	add	r0, r7
 80147c2:	4629      	mov	r1, r5
 80147c4:	f003 fa92 	bl	8017cec <snprintf>
 80147c8:	4285      	cmp	r5, r0
 80147ca:	db03      	blt.n	80147d4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80147cc:	88e3      	ldrh	r3, [r4, #6]
 80147ce:	4418      	add	r0, r3
 80147d0:	80e0      	strh	r0, [r4, #6]
 80147d2:	2601      	movs	r6, #1
 80147d4:	4630      	mov	r0, r6
 80147d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80147d8:	080191b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, pc}

080147dc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80147dc:	e9c0 1200 	strd	r1, r2, [r0]
 80147e0:	4770      	bx	lr

080147e2 <ReadConfigFile::~ReadConfigFile()>:
 80147e2:	4770      	bx	lr

080147e4 <ReadConfigFile::Read(char const*, unsigned int)>:
 80147e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80147e8:	b0a0      	sub	sp, #128	@ 0x80
 80147ea:	230a      	movs	r3, #10
 80147ec:	4607      	mov	r7, r0
 80147ee:	460d      	mov	r5, r1
 80147f0:	4614      	mov	r4, r2
 80147f2:	f88d 3000 	strb.w	r3, [sp]
 80147f6:	f04f 0800 	mov.w	r8, #0
 80147fa:	b334      	cbz	r4, 801484a <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 80147fc:	466e      	mov	r6, sp
 80147fe:	462a      	mov	r2, r5
 8014800:	4631      	mov	r1, r6
 8014802:	7810      	ldrb	r0, [r2, #0]
 8014804:	280d      	cmp	r0, #13
 8014806:	4613      	mov	r3, r2
 8014808:	f102 0201 	add.w	r2, r2, #1
 801480c:	d009      	beq.n	8014822 <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 801480e:	280a      	cmp	r0, #10
 8014810:	d007      	beq.n	8014822 <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8014812:	f806 0b01 	strb.w	r0, [r6], #1
 8014816:	1a73      	subs	r3, r6, r1
 8014818:	2b7f      	cmp	r3, #127	@ 0x7f
 801481a:	dc16      	bgt.n	801484a <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 801481c:	3c01      	subs	r4, #1
 801481e:	d1f0      	bne.n	8014802 <ReadConfigFile::Read(char const*, unsigned int)+0x1e>
 8014820:	4613      	mov	r3, r2
 8014822:	461d      	mov	r5, r3
 8014824:	b12c      	cbz	r4, 8014832 <ReadConfigFile::Read(char const*, unsigned int)+0x4e>
 8014826:	f813 2b01 	ldrb.w	r2, [r3], #1
 801482a:	2a0d      	cmp	r2, #13
 801482c:	d00b      	beq.n	8014846 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801482e:	2a0a      	cmp	r2, #10
 8014830:	d009      	beq.n	8014846 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8014832:	f89d 3000 	ldrb.w	r3, [sp]
 8014836:	2b2f      	cmp	r3, #47	@ 0x2f
 8014838:	d9df      	bls.n	80147fa <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 801483a:	e9d7 3000 	ldrd	r3, r0, [r7]
 801483e:	f886 8000 	strb.w	r8, [r6]
 8014842:	4798      	blx	r3
 8014844:	e7d9      	b.n	80147fa <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 8014846:	3c01      	subs	r4, #1
 8014848:	e7eb      	b.n	8014822 <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 801484a:	b020      	add	sp, #128	@ 0x80
 801484c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014850 <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
 8014850:	b570      	push	{r4, r5, r6, lr}
 8014852:	4615      	mov	r5, r2
 8014854:	461c      	mov	r4, r3
 8014856:	f000 f950 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 801485a:	b170      	cbz	r0, 801487a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2a>
 801485c:	2100      	movs	r1, #0
 801485e:	5c43      	ldrb	r3, [r0, r1]
 8014860:	6826      	ldr	r6, [r4, #0]
 8014862:	b28a      	uxth	r2, r1
 8014864:	b11b      	cbz	r3, 801486e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1e>
 8014866:	4296      	cmp	r6, r2
 8014868:	d804      	bhi.n	8014874 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x24>
 801486a:	2b0a      	cmp	r3, #10
 801486c:	d107      	bne.n	801487e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2e>
 801486e:	6022      	str	r2, [r4, #0]
 8014870:	2000      	movs	r0, #0
 8014872:	bd70      	pop	{r4, r5, r6, pc}
 8014874:	546b      	strb	r3, [r5, r1]
 8014876:	3101      	adds	r1, #1
 8014878:	e7f1      	b.n	801485e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0xe>
 801487a:	2001      	movs	r0, #1
 801487c:	e7f9      	b.n	8014872 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>
 801487e:	2002      	movs	r0, #2
 8014880:	e7f7      	b.n	8014872 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>

08014882 <Sscan::Float(char const*, char const*, float&)>:
 8014882:	b570      	push	{r4, r5, r6, lr}
 8014884:	4614      	mov	r4, r2
 8014886:	f000 f938 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 801488a:	2800      	cmp	r0, #0
 801488c:	d049      	beq.n	8014922 <Sscan::Float(char const*, char const*, float&)+0xa0>
 801488e:	7803      	ldrb	r3, [r0, #0]
 8014890:	2b2d      	cmp	r3, #45	@ 0x2d
 8014892:	bf04      	itt	eq
 8014894:	3001      	addeq	r0, #1
 8014896:	2501      	moveq	r5, #1
 8014898:	7803      	ldrb	r3, [r0, #0]
 801489a:	bf18      	it	ne
 801489c:	2500      	movne	r5, #0
 801489e:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 80148a2:	d101      	bne.n	80148a8 <Sscan::Float(char const*, char const*, float&)+0x26>
 80148a4:	2002      	movs	r0, #2
 80148a6:	bd70      	pop	{r4, r5, r6, pc}
 80148a8:	2300      	movs	r3, #0
 80148aa:	7802      	ldrb	r2, [r0, #0]
 80148ac:	3a30      	subs	r2, #48	@ 0x30
 80148ae:	2a09      	cmp	r2, #9
 80148b0:	d8f8      	bhi.n	80148a4 <Sscan::Float(char const*, char const*, float&)+0x22>
 80148b2:	210a      	movs	r1, #10
 80148b4:	fb01 2303 	mla	r3, r1, r3, r2
 80148b8:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 80148bc:	2a2e      	cmp	r2, #46	@ 0x2e
 80148be:	d002      	beq.n	80148c6 <Sscan::Float(char const*, char const*, float&)+0x44>
 80148c0:	f012 0fdf 	tst.w	r2, #223	@ 0xdf
 80148c4:	d1f1      	bne.n	80148aa <Sscan::Float(char const*, char const*, float&)+0x28>
 80148c6:	ee07 3a90 	vmov	s15, r3
 80148ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80148ce:	edc4 7a00 	vstr	s15, [r4]
 80148d2:	7803      	ldrb	r3, [r0, #0]
 80148d4:	2b2e      	cmp	r3, #46	@ 0x2e
 80148d6:	d006      	beq.n	80148e6 <Sscan::Float(char const*, char const*, float&)+0x64>
 80148d8:	b11d      	cbz	r5, 80148e2 <Sscan::Float(char const*, char const*, float&)+0x60>
 80148da:	eef1 7a67 	vneg.f32	s15, s15
 80148de:	edc4 7a00 	vstr	s15, [r4]
 80148e2:	2000      	movs	r0, #0
 80148e4:	e7df      	b.n	80148a6 <Sscan::Float(char const*, char const*, float&)+0x24>
 80148e6:	2301      	movs	r3, #1
 80148e8:	2200      	movs	r2, #0
 80148ea:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 80148ee:	f011 0fdf 	tst.w	r1, #223	@ 0xdf
 80148f2:	d10e      	bne.n	8014912 <Sscan::Float(char const*, char const*, float&)+0x90>
 80148f4:	ee07 2a10 	vmov	s14, r2
 80148f8:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 80148fc:	ee07 3a10 	vmov	s14, r3
 8014900:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8014904:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8014908:	ee77 7a27 	vadd.f32	s15, s14, s15
 801490c:	2d00      	cmp	r5, #0
 801490e:	d1e4      	bne.n	80148da <Sscan::Float(char const*, char const*, float&)+0x58>
 8014910:	e7e5      	b.n	80148de <Sscan::Float(char const*, char const*, float&)+0x5c>
 8014912:	3930      	subs	r1, #48	@ 0x30
 8014914:	2909      	cmp	r1, #9
 8014916:	d8c5      	bhi.n	80148a4 <Sscan::Float(char const*, char const*, float&)+0x22>
 8014918:	260a      	movs	r6, #10
 801491a:	fb06 1202 	mla	r2, r6, r2, r1
 801491e:	4373      	muls	r3, r6
 8014920:	e7e3      	b.n	80148ea <Sscan::Float(char const*, char const*, float&)+0x68>
 8014922:	2001      	movs	r0, #1
 8014924:	e7bf      	b.n	80148a6 <Sscan::Float(char const*, char const*, float&)+0x24>

08014926 <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
 8014926:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014928:	4615      	mov	r5, r2
 801492a:	f000 f8e6 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 801492e:	bb60      	cbnz	r0, 801498a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x64>
 8014930:	2001      	movs	r0, #1
 8014932:	e028      	b.n	8014986 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8014934:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8014938:	2b09      	cmp	r3, #9
 801493a:	d823      	bhi.n	8014984 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 801493c:	230a      	movs	r3, #10
 801493e:	fb03 2101 	mla	r1, r3, r1, r2
 8014942:	3930      	subs	r1, #48	@ 0x30
 8014944:	4603      	mov	r3, r0
 8014946:	4618      	mov	r0, r3
 8014948:	f810 2b01 	ldrb.w	r2, [r0], #1
 801494c:	2a2e      	cmp	r2, #46	@ 0x2e
 801494e:	d115      	bne.n	801497c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x56>
 8014950:	29ff      	cmp	r1, #255	@ 0xff
 8014952:	d817      	bhi.n	8014984 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8014954:	3401      	adds	r4, #1
 8014956:	2c03      	cmp	r4, #3
 8014958:	f806 1b01 	strb.w	r1, [r6], #1
 801495c:	d117      	bne.n	801498e <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x68>
 801495e:	1d1a      	adds	r2, r3, #4
 8014960:	2400      	movs	r4, #0
 8014962:	260a      	movs	r6, #10
 8014964:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8014968:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 801496c:	d113      	bne.n	8014996 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x70>
 801496e:	2cff      	cmp	r4, #255	@ 0xff
 8014970:	d808      	bhi.n	8014984 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8014972:	f88d 4007 	strb.w	r4, [sp, #7]
 8014976:	9b01      	ldr	r3, [sp, #4]
 8014978:	602b      	str	r3, [r5, #0]
 801497a:	e004      	b.n	8014986 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 801497c:	2a00      	cmp	r2, #0
 801497e:	d0e7      	beq.n	8014950 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x2a>
 8014980:	42b8      	cmp	r0, r7
 8014982:	d1d7      	bne.n	8014934 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xe>
 8014984:	2002      	movs	r0, #2
 8014986:	b003      	add	sp, #12
 8014988:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801498a:	ae01      	add	r6, sp, #4
 801498c:	2400      	movs	r4, #0
 801498e:	4603      	mov	r3, r0
 8014990:	1d07      	adds	r7, r0, #4
 8014992:	2100      	movs	r1, #0
 8014994:	e7d7      	b.n	8014946 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x20>
 8014996:	4293      	cmp	r3, r2
 8014998:	d0f4      	beq.n	8014984 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 801499a:	3930      	subs	r1, #48	@ 0x30
 801499c:	2909      	cmp	r1, #9
 801499e:	d8f1      	bhi.n	8014984 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 80149a0:	fb06 1404 	mla	r4, r6, r4, r1
 80149a4:	e7de      	b.n	8014964 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x3e>

080149a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80149a6:	b538      	push	{r3, r4, r5, lr}
 80149a8:	4615      	mov	r5, r2
 80149aa:	f000 f8a6 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 80149ae:	b190      	cbz	r0, 80149d6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x30>
 80149b0:	4601      	mov	r1, r0
 80149b2:	2400      	movs	r4, #0
 80149b4:	780b      	ldrb	r3, [r1, #0]
 80149b6:	3b30      	subs	r3, #48	@ 0x30
 80149b8:	2b09      	cmp	r3, #9
 80149ba:	d80e      	bhi.n	80149da <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80149bc:	220a      	movs	r2, #10
 80149be:	fb02 3404 	mla	r4, r2, r4, r3
 80149c2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80149c6:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 80149ca:	d1f3      	bne.n	80149b4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 80149cc:	f5b4 3f80 	cmp.w	r4, #65536	@ 0x10000
 80149d0:	d203      	bcs.n	80149da <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80149d2:	802c      	strh	r4, [r5, #0]
 80149d4:	bd38      	pop	{r3, r4, r5, pc}
 80149d6:	2001      	movs	r0, #1
 80149d8:	e7fc      	b.n	80149d4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>
 80149da:	2002      	movs	r0, #2
 80149dc:	e7fa      	b.n	80149d4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>

080149de <Sscan::Uint32(char const*, char const*, unsigned long&)>:
 80149de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149e0:	4616      	mov	r6, r2
 80149e2:	f000 f88a 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 80149e6:	b1f8      	cbz	r0, 8014a28 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4a>
 80149e8:	2300      	movs	r3, #0
 80149ea:	4605      	mov	r5, r0
 80149ec:	461c      	mov	r4, r3
 80149ee:	782a      	ldrb	r2, [r5, #0]
 80149f0:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80149f4:	2909      	cmp	r1, #9
 80149f6:	d819      	bhi.n	8014a2c <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4e>
 80149f8:	200a      	movs	r0, #10
 80149fa:	fba3 3700 	umull	r3, r7, r3, r0
 80149fe:	3a30      	subs	r2, #48	@ 0x30
 8014a00:	eb62 0202 	sbc.w	r2, r2, r2
 8014a04:	18cb      	adds	r3, r1, r3
 8014a06:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8014a0a:	fb00 7404 	mla	r4, r0, r4, r7
 8014a0e:	eb44 0402 	adc.w	r4, r4, r2
 8014a12:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 8014a16:	d1ea      	bne.n	80149ee <Sscan::Uint32(char const*, char const*, unsigned long&)+0x10>
 8014a18:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8014a1c:	429a      	cmp	r2, r3
 8014a1e:	eb70 0404 	sbcs.w	r4, r0, r4
 8014a22:	d303      	bcc.n	8014a2c <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4e>
 8014a24:	6033      	str	r3, [r6, #0]
 8014a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a28:	2001      	movs	r0, #1
 8014a2a:	e7fc      	b.n	8014a26 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x48>
 8014a2c:	2002      	movs	r0, #2
 8014a2e:	e7fa      	b.n	8014a26 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x48>

08014a30 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8014a30:	b538      	push	{r3, r4, r5, lr}
 8014a32:	4615      	mov	r5, r2
 8014a34:	f000 f861 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 8014a38:	b188      	cbz	r0, 8014a5e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2e>
 8014a3a:	4601      	mov	r1, r0
 8014a3c:	2400      	movs	r4, #0
 8014a3e:	780b      	ldrb	r3, [r1, #0]
 8014a40:	3b30      	subs	r3, #48	@ 0x30
 8014a42:	2b09      	cmp	r3, #9
 8014a44:	d80d      	bhi.n	8014a62 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8014a46:	220a      	movs	r2, #10
 8014a48:	fb02 3404 	mla	r4, r2, r4, r3
 8014a4c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8014a50:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8014a54:	d1f3      	bne.n	8014a3e <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8014a56:	2cff      	cmp	r4, #255	@ 0xff
 8014a58:	d803      	bhi.n	8014a62 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8014a5a:	702c      	strb	r4, [r5, #0]
 8014a5c:	bd38      	pop	{r3, r4, r5, pc}
 8014a5e:	2001      	movs	r0, #1
 8014a60:	e7fc      	b.n	8014a5c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>
 8014a62:	2002      	movs	r0, #2
 8014a64:	e7fa      	b.n	8014a5c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>

08014a66 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
 8014a66:	b570      	push	{r4, r5, r6, lr}
 8014a68:	4615      	mov	r5, r2
 8014a6a:	461e      	mov	r6, r3
 8014a6c:	f000 f845 	bl	8014afa <Sscan::checkName(char const*, char const*)>
 8014a70:	2800      	cmp	r0, #0
 8014a72:	d040      	beq.n	8014af6 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x90>
 8014a74:	7803      	ldrb	r3, [r0, #0]
 8014a76:	2b2d      	cmp	r3, #45	@ 0x2d
 8014a78:	4601      	mov	r1, r0
 8014a7a:	d107      	bne.n	8014a8c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x26>
 8014a7c:	3101      	adds	r1, #1
 8014a7e:	2201      	movs	r2, #1
 8014a80:	780b      	ldrb	r3, [r1, #0]
 8014a82:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 8014a86:	d106      	bne.n	8014a96 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x30>
 8014a88:	2002      	movs	r0, #2
 8014a8a:	bd70      	pop	{r4, r5, r6, pc}
 8014a8c:	2b2b      	cmp	r3, #43	@ 0x2b
 8014a8e:	bf08      	it	eq
 8014a90:	3101      	addeq	r1, #1
 8014a92:	2200      	movs	r2, #0
 8014a94:	e7f4      	b.n	8014a80 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x1a>
 8014a96:	2300      	movs	r3, #0
 8014a98:	702b      	strb	r3, [r5, #0]
 8014a9a:	780b      	ldrb	r3, [r1, #0]
 8014a9c:	f1a3 0030 	sub.w	r0, r3, #48	@ 0x30
 8014aa0:	2801      	cmp	r0, #1
 8014aa2:	d8f1      	bhi.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014aa4:	2b31      	cmp	r3, #49	@ 0x31
 8014aa6:	bf14      	ite	ne
 8014aa8:	2300      	movne	r3, #0
 8014aaa:	230a      	moveq	r3, #10
 8014aac:	702b      	strb	r3, [r5, #0]
 8014aae:	7848      	ldrb	r0, [r1, #1]
 8014ab0:	3830      	subs	r0, #48	@ 0x30
 8014ab2:	2809      	cmp	r0, #9
 8014ab4:	d8e8      	bhi.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014ab6:	4403      	add	r3, r0
 8014ab8:	702b      	strb	r3, [r5, #0]
 8014aba:	788b      	ldrb	r3, [r1, #2]
 8014abc:	2b3a      	cmp	r3, #58	@ 0x3a
 8014abe:	d1e3      	bne.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014ac0:	78cc      	ldrb	r4, [r1, #3]
 8014ac2:	3c30      	subs	r4, #48	@ 0x30
 8014ac4:	2c09      	cmp	r4, #9
 8014ac6:	d8df      	bhi.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014ac8:	790b      	ldrb	r3, [r1, #4]
 8014aca:	3b30      	subs	r3, #48	@ 0x30
 8014acc:	2b09      	cmp	r3, #9
 8014ace:	d8db      	bhi.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014ad0:	7948      	ldrb	r0, [r1, #5]
 8014ad2:	f010 00df 	ands.w	r0, r0, #223	@ 0xdf
 8014ad6:	d1d7      	bne.n	8014a88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8014ad8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8014adc:	0064      	lsls	r4, r4, #1
 8014ade:	b2e4      	uxtb	r4, r4
 8014ae0:	7034      	strb	r4, [r6, #0]
 8014ae2:	790b      	ldrb	r3, [r1, #4]
 8014ae4:	3b30      	subs	r3, #48	@ 0x30
 8014ae6:	441c      	add	r4, r3
 8014ae8:	7034      	strb	r4, [r6, #0]
 8014aea:	2a00      	cmp	r2, #0
 8014aec:	d0cd      	beq.n	8014a8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8014aee:	782b      	ldrb	r3, [r5, #0]
 8014af0:	425b      	negs	r3, r3
 8014af2:	702b      	strb	r3, [r5, #0]
 8014af4:	e7c9      	b.n	8014a8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8014af6:	2001      	movs	r0, #1
 8014af8:	e7c7      	b.n	8014a8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>

08014afa <Sscan::checkName(char const*, char const*)>:
 8014afa:	3901      	subs	r1, #1
 8014afc:	4602      	mov	r2, r0
 8014afe:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8014b02:	b130      	cbz	r0, 8014b12 <Sscan::checkName(char const*, char const*)+0x18>
 8014b04:	f812 3b01 	ldrb.w	r3, [r2], #1
 8014b08:	b10b      	cbz	r3, 8014b0e <Sscan::checkName(char const*, char const*)+0x14>
 8014b0a:	4298      	cmp	r0, r3
 8014b0c:	d0f7      	beq.n	8014afe <Sscan::checkName(char const*, char const*)+0x4>
 8014b0e:	2000      	movs	r0, #0
 8014b10:	4770      	bx	lr
 8014b12:	7813      	ldrb	r3, [r2, #0]
 8014b14:	2b3d      	cmp	r3, #61	@ 0x3d
 8014b16:	d1fb      	bne.n	8014b10 <Sscan::checkName(char const*, char const*)+0x16>
 8014b18:	7853      	ldrb	r3, [r2, #1]
 8014b1a:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8014b1e:	d0f7      	beq.n	8014b10 <Sscan::checkName(char const*, char const*)+0x16>
 8014b20:	1c50      	adds	r0, r2, #1
 8014b22:	4770      	bx	lr

08014b24 <Display::PrintInfo() [clone .isra.0]>:
 8014b24:	b910      	cbnz	r0, 8014b2c <Display::PrintInfo() [clone .isra.0]+0x8>
 8014b26:	4803      	ldr	r0, [pc, #12]	@ (8014b34 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8014b28:	f003 b90d 	b.w	8017d46 <puts>
 8014b2c:	6803      	ldr	r3, [r0, #0]
 8014b2e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014b30:	4718      	bx	r3
 8014b32:	bf00      	nop
 8014b34:	080191c0 	stmdaeq	r1, {r6, r7, r8, ip, pc}

08014b38 <display::timeout::gpio_init()>:
 8014b38:	b510      	push	{r4, lr}
 8014b3a:	4c0a      	ldr	r4, [pc, #40]	@ (8014b64 <display::timeout::gpio_init()+0x2c>)
 8014b3c:	f640 4002 	movw	r0, #3074	@ 0xc02
 8014b40:	f001 fb28 	bl	8016194 <rcu_periph_clock_enable>
 8014b44:	4620      	mov	r0, r4
 8014b46:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8014b4a:	2201      	movs	r2, #1
 8014b4c:	2100      	movs	r1, #0
 8014b4e:	f001 fa9f 	bl	8016090 <gpio_mode_set>
 8014b52:	4620      	mov	r0, r4
 8014b54:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8014b58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b5c:	2201      	movs	r2, #1
 8014b5e:	2100      	movs	r1, #0
 8014b60:	f001 ba96 	b.w	8016090 <gpio_mode_set>
 8014b64:	40020800 	andmi	r0, r2, r0, lsl #16

08014b68 <Display::Detect(display::Type)>:
 8014b68:	2902      	cmp	r1, #2
 8014b6a:	b538      	push	{r3, r4, r5, lr}
 8014b6c:	4604      	mov	r4, r0
 8014b6e:	d014      	beq.n	8014b9a <Display::Detect(display::Type)+0x32>
 8014b70:	2904      	cmp	r1, #4
 8014b72:	d01b      	beq.n	8014bac <Display::Detect(display::Type)+0x44>
 8014b74:	69a0      	ldr	r0, [r4, #24]
 8014b76:	b168      	cbz	r0, 8014b94 <Display::Detect(display::Type)+0x2c>
 8014b78:	6803      	ldr	r3, [r0, #0]
 8014b7a:	689b      	ldr	r3, [r3, #8]
 8014b7c:	4798      	blx	r3
 8014b7e:	4603      	mov	r3, r0
 8014b80:	69a0      	ldr	r0, [r4, #24]
 8014b82:	b9ab      	cbnz	r3, 8014bb0 <Display::Detect(display::Type)+0x48>
 8014b84:	b110      	cbz	r0, 8014b8c <Display::Detect(display::Type)+0x24>
 8014b86:	6803      	ldr	r3, [r0, #0]
 8014b88:	685b      	ldr	r3, [r3, #4]
 8014b8a:	4798      	blx	r3
 8014b8c:	2300      	movs	r3, #0
 8014b8e:	61a3      	str	r3, [r4, #24]
 8014b90:	2304      	movs	r3, #4
 8014b92:	6023      	str	r3, [r4, #0]
 8014b94:	2300      	movs	r3, #0
 8014b96:	6123      	str	r3, [r4, #16]
 8014b98:	e010      	b.n	8014bbc <Display::Detect(display::Type)+0x54>
 8014b9a:	2020      	movs	r0, #32
 8014b9c:	f003 fad4 	bl	8018148 <operator new(unsigned int)>
 8014ba0:	2100      	movs	r1, #0
 8014ba2:	4605      	mov	r5, r0
 8014ba4:	f000 f8bc 	bl	8014d20 <Ssd1306::Ssd1306(TOledPanel)>
 8014ba8:	61a5      	str	r5, [r4, #24]
 8014baa:	e7e3      	b.n	8014b74 <Display::Detect(display::Type)+0xc>
 8014bac:	6001      	str	r1, [r0, #0]
 8014bae:	e7e1      	b.n	8014b74 <Display::Detect(display::Type)+0xc>
 8014bb0:	6803      	ldr	r3, [r0, #0]
 8014bb2:	68db      	ldr	r3, [r3, #12]
 8014bb4:	4798      	blx	r3
 8014bb6:	69a3      	ldr	r3, [r4, #24]
 8014bb8:	2b00      	cmp	r3, #0
 8014bba:	d0eb      	beq.n	8014b94 <Display::Detect(display::Type)+0x2c>
 8014bbc:	bd38      	pop	{r3, r4, r5, pc}
	...

08014bc0 <Display::Display()>:
 8014bc0:	2304      	movs	r3, #4
 8014bc2:	b510      	push	{r4, lr}
 8014bc4:	6003      	str	r3, [r0, #0]
 8014bc6:	4b0e      	ldr	r3, [pc, #56]	@ (8014c00 <Display::Display()+0x40>)
 8014bc8:	4a0e      	ldr	r2, [pc, #56]	@ (8014c04 <Display::Display()+0x44>)
 8014bca:	681b      	ldr	r3, [r3, #0]
 8014bcc:	6043      	str	r3, [r0, #4]
 8014bce:	2321      	movs	r3, #33	@ 0x21
 8014bd0:	7203      	strb	r3, [r0, #8]
 8014bd2:	4b0d      	ldr	r3, [pc, #52]	@ (8014c08 <Display::Display()+0x48>)
 8014bd4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8014bd8:	237f      	movs	r3, #127	@ 0x7f
 8014bda:	8283      	strh	r3, [r0, #20]
 8014bdc:	2300      	movs	r3, #0
 8014bde:	4604      	mov	r4, r0
 8014be0:	7583      	strb	r3, [r0, #22]
 8014be2:	6183      	str	r3, [r0, #24]
 8014be4:	4b09      	ldr	r3, [pc, #36]	@ (8014c0c <Display::Display()+0x4c>)
 8014be6:	2102      	movs	r1, #2
 8014be8:	6018      	str	r0, [r3, #0]
 8014bea:	f7ff ffbd 	bl	8014b68 <Display::Detect(display::Type)>
 8014bee:	69a3      	ldr	r3, [r4, #24]
 8014bf0:	b10b      	cbz	r3, 8014bf6 <Display::Display()+0x36>
 8014bf2:	f7ff ffa1 	bl	8014b38 <display::timeout::gpio_init()>
 8014bf6:	69a0      	ldr	r0, [r4, #24]
 8014bf8:	f7ff ff94 	bl	8014b24 <Display::PrintInfo() [clone .isra.0]>
 8014bfc:	4620      	mov	r0, r4
 8014bfe:	bd10      	pop	{r4, pc}
 8014c00:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8014c04:	00061a80 	andeq	r1, r6, r0, lsl #21
 8014c08:	000493e0 	andeq	r9, r4, r0, ror #7
 8014c0c:	2000ccd4 	ldrdcs	ip, [r0], -r4

08014c10 <Ssd1306::~Ssd1306()>:
 8014c10:	4770      	bx	lr

08014c12 <Ssd1306::SetCursor(unsigned long)>:
 8014c12:	4770      	bx	lr

08014c14 <Ssd1306::PrintInfo()>:
 8014c14:	b410      	push	{r4}
 8014c16:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8014c1a:	7e44      	ldrb	r4, [r0, #25]
 8014c1c:	4904      	ldr	r1, [pc, #16]	@ (8014c30 <Ssd1306::PrintInfo()+0x1c>)
 8014c1e:	4805      	ldr	r0, [pc, #20]	@ (8014c34 <Ssd1306::PrintInfo()+0x20>)
 8014c20:	2c00      	cmp	r4, #0
 8014c22:	bf18      	it	ne
 8014c24:	4601      	movne	r1, r0
 8014c26:	4804      	ldr	r0, [pc, #16]	@ (8014c38 <Ssd1306::PrintInfo()+0x24>)
 8014c28:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014c2c:	f003 b836 	b.w	8017c9c <printf>
 8014c30:	080191d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, ip, pc}
 8014c34:	080191d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, ip, pc}
 8014c38:	080191e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, pc}

08014c3c <Ssd1306::~Ssd1306()>:
 8014c3c:	b510      	push	{r4, lr}
 8014c3e:	2120      	movs	r1, #32
 8014c40:	4604      	mov	r4, r0
 8014c42:	f003 fa7f 	bl	8018144 <operator delete(void*, unsigned int)>
 8014c46:	4620      	mov	r0, r4
 8014c48:	bd10      	pop	{r4, pc}

08014c4a <HAL_I2C::Setup()>:
 8014c4a:	b510      	push	{r4, lr}
 8014c4c:	4604      	mov	r4, r0
 8014c4e:	7800      	ldrb	r0, [r0, #0]
 8014c50:	f001 ff66 	bl	8016b20 <gd32_i2c_set_address>
 8014c54:	6860      	ldr	r0, [r4, #4]
 8014c56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c5a:	f001 bf59 	b.w	8016b10 <gd32_i2c_set_baudrate>
	...

08014c60 <Ssd1306::PutChar(int)>:
 8014c60:	b510      	push	{r4, lr}
 8014c62:	f1a1 0420 	sub.w	r4, r1, #32
 8014c66:	2c5f      	cmp	r4, #95	@ 0x5f
 8014c68:	f100 0010 	add.w	r0, r0, #16
 8014c6c:	bf88      	it	hi
 8014c6e:	2400      	movhi	r4, #0
 8014c70:	f7ff ffeb 	bl	8014c4a <HAL_I2C::Setup()>
 8014c74:	4804      	ldr	r0, [pc, #16]	@ (8014c88 <Ssd1306::PutChar(int)+0x28>)
 8014c76:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8014c7a:	4420      	add	r0, r4
 8014c7c:	2107      	movs	r1, #7
 8014c7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c82:	f001 bf53 	b.w	8016b2c <gd32_i2c_write>
 8014c86:	bf00      	nop
 8014c88:	0801c214 	stmdaeq	r1, {r2, r4, r9, lr, pc}

08014c8c <Ssd1306::PutString(char const*)>:
 8014c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c8e:	4604      	mov	r4, r0
 8014c90:	460e      	mov	r6, r1
 8014c92:	460f      	mov	r7, r1
 8014c94:	463d      	mov	r5, r7
 8014c96:	f817 1b01 	ldrb.w	r1, [r7], #1
 8014c9a:	b939      	cbnz	r1, 8014cac <Ssd1306::PutString(char const*)+0x20>
 8014c9c:	7b23      	ldrb	r3, [r4, #12]
 8014c9e:	b123      	cbz	r3, 8014caa <Ssd1306::PutString(char const*)+0x1e>
 8014ca0:	7321      	strb	r1, [r4, #12]
 8014ca2:	1bad      	subs	r5, r5, r6
 8014ca4:	6863      	ldr	r3, [r4, #4]
 8014ca6:	42ab      	cmp	r3, r5
 8014ca8:	d804      	bhi.n	8014cb4 <Ssd1306::PutString(char const*)+0x28>
 8014caa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014cac:	4620      	mov	r0, r4
 8014cae:	f7ff ffd7 	bl	8014c60 <Ssd1306::PutChar(int)>
 8014cb2:	e7ef      	b.n	8014c94 <Ssd1306::PutString(char const*)+0x8>
 8014cb4:	2120      	movs	r1, #32
 8014cb6:	4620      	mov	r0, r4
 8014cb8:	f7ff ffd2 	bl	8014c60 <Ssd1306::PutChar(int)>
 8014cbc:	3501      	adds	r5, #1
 8014cbe:	e7f1      	b.n	8014ca4 <Ssd1306::PutString(char const*)+0x18>

08014cc0 <Ssd1306::Text(char const*, unsigned long)>:
 8014cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014cc2:	6843      	ldr	r3, [r0, #4]
 8014cc4:	429a      	cmp	r2, r3
 8014cc6:	bf28      	it	cs
 8014cc8:	461a      	movcs	r2, r3
 8014cca:	4604      	mov	r4, r0
 8014ccc:	4615      	mov	r5, r2
 8014cce:	460e      	mov	r6, r1
 8014cd0:	188f      	adds	r7, r1, r2
 8014cd2:	42be      	cmp	r6, r7
 8014cd4:	d107      	bne.n	8014ce6 <Ssd1306::Text(char const*, unsigned long)+0x26>
 8014cd6:	7b23      	ldrb	r3, [r4, #12]
 8014cd8:	b123      	cbz	r3, 8014ce4 <Ssd1306::Text(char const*, unsigned long)+0x24>
 8014cda:	2300      	movs	r3, #0
 8014cdc:	7323      	strb	r3, [r4, #12]
 8014cde:	6863      	ldr	r3, [r4, #4]
 8014ce0:	42ab      	cmp	r3, r5
 8014ce2:	d806      	bhi.n	8014cf2 <Ssd1306::Text(char const*, unsigned long)+0x32>
 8014ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ce6:	f816 1b01 	ldrb.w	r1, [r6], #1
 8014cea:	4620      	mov	r0, r4
 8014cec:	f7ff ffb8 	bl	8014c60 <Ssd1306::PutChar(int)>
 8014cf0:	e7ef      	b.n	8014cd2 <Ssd1306::Text(char const*, unsigned long)+0x12>
 8014cf2:	2120      	movs	r1, #32
 8014cf4:	4620      	mov	r0, r4
 8014cf6:	f7ff ffb3 	bl	8014c60 <Ssd1306::PutChar(int)>
 8014cfa:	3501      	adds	r5, #1
 8014cfc:	e7ef      	b.n	8014cde <Ssd1306::Text(char const*, unsigned long)+0x1e>

08014cfe <Ssd1306::InitMembers()>:
 8014cfe:	2315      	movs	r3, #21
 8014d00:	6043      	str	r3, [r0, #4]
 8014d02:	7e03      	ldrb	r3, [r0, #24]
 8014d04:	b12b      	cbz	r3, 8014d12 <Ssd1306::InitMembers()+0x14>
 8014d06:	3b01      	subs	r3, #1
 8014d08:	2b01      	cmp	r3, #1
 8014d0a:	d807      	bhi.n	8014d1c <Ssd1306::InitMembers()+0x1e>
 8014d0c:	2304      	movs	r3, #4
 8014d0e:	2204      	movs	r2, #4
 8014d10:	e001      	b.n	8014d16 <Ssd1306::InitMembers()+0x18>
 8014d12:	2308      	movs	r3, #8
 8014d14:	461a      	mov	r2, r3
 8014d16:	6083      	str	r3, [r0, #8]
 8014d18:	61c2      	str	r2, [r0, #28]
 8014d1a:	4770      	bx	lr
 8014d1c:	2308      	movs	r3, #8
 8014d1e:	e7f6      	b.n	8014d0e <Ssd1306::InitMembers()+0x10>

08014d20 <Ssd1306::Ssd1306(TOledPanel)>:
 8014d20:	b510      	push	{r4, lr}
 8014d22:	4c07      	ldr	r4, [pc, #28]	@ (8014d40 <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8014d24:	6004      	str	r4, [r0, #0]
 8014d26:	2200      	movs	r2, #0
 8014d28:	243c      	movs	r4, #60	@ 0x3c
 8014d2a:	7302      	strb	r2, [r0, #12]
 8014d2c:	7404      	strb	r4, [r0, #16]
 8014d2e:	7642      	strb	r2, [r0, #25]
 8014d30:	4c04      	ldr	r4, [pc, #16]	@ (8014d44 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8014d32:	4a05      	ldr	r2, [pc, #20]	@ (8014d48 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8014d34:	6144      	str	r4, [r0, #20]
 8014d36:	7601      	strb	r1, [r0, #24]
 8014d38:	6010      	str	r0, [r2, #0]
 8014d3a:	f7ff ffe0 	bl	8014cfe <Ssd1306::InitMembers()>
 8014d3e:	bd10      	pop	{r4, pc}
 8014d40:	0801c1ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, lr, pc}
 8014d44:	00061a80 	andeq	r1, r6, r0, lsl #21
 8014d48:	2000ccd8 	ldrdcs	ip, [r0], -r8

08014d4c <Ssd1306::SendCommand(unsigned char)>:
 8014d4c:	b507      	push	{r0, r1, r2, lr}
 8014d4e:	2300      	movs	r3, #0
 8014d50:	3010      	adds	r0, #16
 8014d52:	f88d 3004 	strb.w	r3, [sp, #4]
 8014d56:	f88d 1005 	strb.w	r1, [sp, #5]
 8014d5a:	f7ff ff76 	bl	8014c4a <HAL_I2C::Setup()>
 8014d5e:	2102      	movs	r1, #2
 8014d60:	a801      	add	r0, sp, #4
 8014d62:	f001 fee3 	bl	8016b2c <gd32_i2c_write>
 8014d66:	b003      	add	sp, #12
 8014d68:	f85d fb04 	ldr.w	pc, [sp], #4

08014d6c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 8014d6c:	2914      	cmp	r1, #20
 8014d6e:	b570      	push	{r4, r5, r6, lr}
 8014d70:	4605      	mov	r5, r0
 8014d72:	4616      	mov	r6, r2
 8014d74:	d81d      	bhi.n	8014db2 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8014d76:	6883      	ldr	r3, [r0, #8]
 8014d78:	4293      	cmp	r3, r2
 8014d7a:	d91a      	bls.n	8014db2 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8014d7c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014d80:	7e43      	ldrb	r3, [r0, #25]
 8014d82:	004c      	lsls	r4, r1, #1
 8014d84:	b2e4      	uxtb	r4, r4
 8014d86:	b10b      	cbz	r3, 8014d8c <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 8014d88:	3404      	adds	r4, #4
 8014d8a:	b2e4      	uxtb	r4, r4
 8014d8c:	f004 010e 	and.w	r1, r4, #14
 8014d90:	4628      	mov	r0, r5
 8014d92:	f7ff ffdb 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014d96:	0921      	lsrs	r1, r4, #4
 8014d98:	4628      	mov	r0, r5
 8014d9a:	f041 0110 	orr.w	r1, r1, #16
 8014d9e:	f7ff ffd5 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014da2:	f066 014f 	orn	r1, r6, #79	@ 0x4f
 8014da6:	4628      	mov	r0, r5
 8014da8:	b2c9      	uxtb	r1, r1
 8014daa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014dae:	f7ff bfcd 	b.w	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014db2:	bd70      	pop	{r4, r5, r6, pc}

08014db4 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 8014db4:	b570      	push	{r4, r5, r6, lr}
 8014db6:	461e      	mov	r6, r3
 8014db8:	6883      	ldr	r3, [r0, #8]
 8014dba:	428b      	cmp	r3, r1
 8014dbc:	4604      	mov	r4, r0
 8014dbe:	4615      	mov	r5, r2
 8014dc0:	d30b      	bcc.n	8014dda <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 8014dc2:	3901      	subs	r1, #1
 8014dc4:	b2ca      	uxtb	r2, r1
 8014dc6:	2100      	movs	r1, #0
 8014dc8:	f7ff ffd0 	bl	8014d6c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8014dcc:	4632      	mov	r2, r6
 8014dce:	4629      	mov	r1, r5
 8014dd0:	4620      	mov	r0, r4
 8014dd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014dd6:	f7ff bf73 	b.w	8014cc0 <Ssd1306::Text(char const*, unsigned long)>
 8014dda:	bd70      	pop	{r4, r5, r6, pc}

08014ddc <Ssd1306::ClearLine(unsigned long)>:
 8014ddc:	b538      	push	{r3, r4, r5, lr}
 8014dde:	6883      	ldr	r3, [r0, #8]
 8014de0:	428b      	cmp	r3, r1
 8014de2:	4605      	mov	r5, r0
 8014de4:	d314      	bcc.n	8014e10 <Ssd1306::ClearLine(unsigned long)+0x34>
 8014de6:	3901      	subs	r1, #1
 8014de8:	b2cc      	uxtb	r4, r1
 8014dea:	4622      	mov	r2, r4
 8014dec:	2100      	movs	r1, #0
 8014dee:	f7ff ffbd 	bl	8014d6c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8014df2:	f105 0010 	add.w	r0, r5, #16
 8014df6:	f7ff ff28 	bl	8014c4a <HAL_I2C::Setup()>
 8014dfa:	2181      	movs	r1, #129	@ 0x81
 8014dfc:	4805      	ldr	r0, [pc, #20]	@ (8014e14 <Ssd1306::ClearLine(unsigned long)+0x38>)
 8014dfe:	f001 fe95 	bl	8016b2c <gd32_i2c_write>
 8014e02:	4622      	mov	r2, r4
 8014e04:	4628      	mov	r0, r5
 8014e06:	2100      	movs	r1, #0
 8014e08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014e0c:	f7ff bfae 	b.w	8014d6c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8014e10:	bd38      	pop	{r3, r4, r5, pc}
 8014e12:	bf00      	nop
 8014e14:	2000ccdc 	ldrdcs	ip, [r0], -ip	@ <UNPREDICTABLE>

08014e18 <Ssd1306::SetSleep(bool)>:
 8014e18:	b111      	cbz	r1, 8014e20 <Ssd1306::SetSleep(bool)+0x8>
 8014e1a:	21ae      	movs	r1, #174	@ 0xae
 8014e1c:	f7ff bf96 	b.w	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e20:	21af      	movs	r1, #175	@ 0xaf
 8014e22:	e7fb      	b.n	8014e1c <Ssd1306::SetSleep(bool)+0x4>

08014e24 <Ssd1306::SetContrast(unsigned char)>:
 8014e24:	b538      	push	{r3, r4, r5, lr}
 8014e26:	4604      	mov	r4, r0
 8014e28:	460d      	mov	r5, r1
 8014e2a:	2181      	movs	r1, #129	@ 0x81
 8014e2c:	f7ff ff8e 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e30:	4629      	mov	r1, r5
 8014e32:	4620      	mov	r0, r4
 8014e34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014e38:	f7ff bf88 	b.w	8014d4c <Ssd1306::SendCommand(unsigned char)>

08014e3c <Ssd1306::SetFlipVertically(bool)>:
 8014e3c:	b510      	push	{r4, lr}
 8014e3e:	4604      	mov	r4, r0
 8014e40:	b141      	cbz	r1, 8014e54 <Ssd1306::SetFlipVertically(bool)+0x18>
 8014e42:	21a0      	movs	r1, #160	@ 0xa0
 8014e44:	f7ff ff82 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e48:	21c0      	movs	r1, #192	@ 0xc0
 8014e4a:	4620      	mov	r0, r4
 8014e4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e50:	f7ff bf7c 	b.w	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e54:	21a1      	movs	r1, #161	@ 0xa1
 8014e56:	f7ff ff79 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e5a:	21c8      	movs	r1, #200	@ 0xc8
 8014e5c:	e7f5      	b.n	8014e4a <Ssd1306::SetFlipVertically(bool)+0xe>
	...

08014e60 <Ssd1306::CheckSH1106()>:
 8014e60:	b530      	push	{r4, r5, lr}
 8014e62:	2100      	movs	r1, #0
 8014e64:	b087      	sub	sp, #28
 8014e66:	4604      	mov	r4, r0
 8014e68:	f7ff ff70 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e6c:	2190      	movs	r1, #144	@ 0x90
 8014e6e:	4620      	mov	r0, r4
 8014e70:	f7ff ff6c 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e74:	21b0      	movs	r1, #176	@ 0xb0
 8014e76:	4620      	mov	r0, r4
 8014e78:	f7ff ff68 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014e7c:	4b21      	ldr	r3, [pc, #132]	@ (8014f04 <Ssd1306::CheckSH1106()+0xa4>)
 8014e7e:	f104 0510 	add.w	r5, r4, #16
 8014e82:	6818      	ldr	r0, [r3, #0]
 8014e84:	9002      	str	r0, [sp, #8]
 8014e86:	791b      	ldrb	r3, [r3, #4]
 8014e88:	f88d 300c 	strb.w	r3, [sp, #12]
 8014e8c:	4628      	mov	r0, r5
 8014e8e:	f7ff fedc 	bl	8014c4a <HAL_I2C::Setup()>
 8014e92:	2105      	movs	r1, #5
 8014e94:	a802      	add	r0, sp, #8
 8014e96:	f001 fe49 	bl	8016b2c <gd32_i2c_write>
 8014e9a:	2100      	movs	r1, #0
 8014e9c:	4620      	mov	r0, r4
 8014e9e:	f7ff ff55 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014ea2:	2190      	movs	r1, #144	@ 0x90
 8014ea4:	4620      	mov	r0, r4
 8014ea6:	f7ff ff51 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014eaa:	21b0      	movs	r1, #176	@ 0xb0
 8014eac:	4620      	mov	r0, r4
 8014eae:	f7ff ff4d 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014eb2:	2300      	movs	r3, #0
 8014eb4:	4628      	mov	r0, r5
 8014eb6:	9304      	str	r3, [sp, #16]
 8014eb8:	f88d 3014 	strb.w	r3, [sp, #20]
 8014ebc:	f7ff fec5 	bl	8014c4a <HAL_I2C::Setup()>
 8014ec0:	2340      	movs	r3, #64	@ 0x40
 8014ec2:	2101      	movs	r1, #1
 8014ec4:	a801      	add	r0, sp, #4
 8014ec6:	f88d 3004 	strb.w	r3, [sp, #4]
 8014eca:	f001 fe2f 	bl	8016b2c <gd32_i2c_write>
 8014ece:	4628      	mov	r0, r5
 8014ed0:	f7ff febb 	bl	8014c4a <HAL_I2C::Setup()>
 8014ed4:	2105      	movs	r1, #5
 8014ed6:	a804      	add	r0, sp, #16
 8014ed8:	f001 fe8e 	bl	8016bf8 <gd32_i2c_read>
 8014edc:	a902      	add	r1, sp, #8
 8014ede:	aa04      	add	r2, sp, #16
 8014ee0:	2003      	movs	r0, #3
 8014ee2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8014ee6:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8014eea:	42ab      	cmp	r3, r5
 8014eec:	d006      	beq.n	8014efc <Ssd1306::CheckSH1106()+0x9c>
 8014eee:	1b5b      	subs	r3, r3, r5
 8014ef0:	fab3 f383 	clz	r3, r3
 8014ef4:	095b      	lsrs	r3, r3, #5
 8014ef6:	7663      	strb	r3, [r4, #25]
 8014ef8:	b007      	add	sp, #28
 8014efa:	bd30      	pop	{r4, r5, pc}
 8014efc:	3801      	subs	r0, #1
 8014efe:	d2f0      	bcs.n	8014ee2 <Ssd1306::CheckSH1106()+0x82>
 8014f00:	2300      	movs	r3, #0
 8014f02:	e7f5      	b.n	8014ef0 <Ssd1306::CheckSH1106()+0x90>
 8014f04:	080191ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, ip, pc}

08014f08 <Ssd1306::Cls()>:
 8014f08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014f0c:	7e46      	ldrb	r6, [r0, #25]
 8014f0e:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 8014f70 <Ssd1306::Cls()+0x68>
 8014f12:	00b6      	lsls	r6, r6, #2
 8014f14:	b2f7      	uxtb	r7, r6
 8014f16:	4604      	mov	r4, r0
 8014f18:	2500      	movs	r5, #0
 8014f1a:	f047 0810 	orr.w	r8, r7, #16
 8014f1e:	69e3      	ldr	r3, [r4, #28]
 8014f20:	42ab      	cmp	r3, r5
 8014f22:	4639      	mov	r1, r7
 8014f24:	4620      	mov	r0, r4
 8014f26:	d80b      	bhi.n	8014f40 <Ssd1306::Cls()+0x38>
 8014f28:	f7ff ff10 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f2c:	4641      	mov	r1, r8
 8014f2e:	4620      	mov	r0, r4
 8014f30:	f7ff ff0c 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f34:	4620      	mov	r0, r4
 8014f36:	21b0      	movs	r1, #176	@ 0xb0
 8014f38:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014f3c:	f7ff bf06 	b.w	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f40:	f7ff ff04 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f44:	4641      	mov	r1, r8
 8014f46:	4620      	mov	r0, r4
 8014f48:	f7ff ff00 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f4c:	f065 014f 	orn	r1, r5, #79	@ 0x4f
 8014f50:	b2c9      	uxtb	r1, r1
 8014f52:	4620      	mov	r0, r4
 8014f54:	f7ff fefa 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014f58:	f104 0010 	add.w	r0, r4, #16
 8014f5c:	f7ff fe75 	bl	8014c4a <HAL_I2C::Setup()>
 8014f60:	f106 0181 	add.w	r1, r6, #129	@ 0x81
 8014f64:	4648      	mov	r0, r9
 8014f66:	f001 fde1 	bl	8016b2c <gd32_i2c_write>
 8014f6a:	3501      	adds	r5, #1
 8014f6c:	e7d7      	b.n	8014f1e <Ssd1306::Cls()+0x16>
 8014f6e:	bf00      	nop
 8014f70:	2000ccdc 	ldrdcs	ip, [r0], -ip	@ <UNPREDICTABLE>

08014f74 <Ssd1306::Start()>:
 8014f74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f76:	7c04      	ldrb	r4, [r0, #16]
 8014f78:	6946      	ldr	r6, [r0, #20]
 8014f7a:	4605      	mov	r5, r0
 8014f7c:	4620      	mov	r0, r4
 8014f7e:	f001 fdcf 	bl	8016b20 <gd32_i2c_set_address>
 8014f82:	4630      	mov	r0, r6
 8014f84:	f001 fdc4 	bl	8016b10 <gd32_i2c_set_baudrate>
 8014f88:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8014f8c:	2b07      	cmp	r3, #7
 8014f8e:	d902      	bls.n	8014f96 <Ssd1306::Start()+0x22>
 8014f90:	3c50      	subs	r4, #80	@ 0x50
 8014f92:	2c0f      	cmp	r4, #15
 8014f94:	d80f      	bhi.n	8014fb6 <Ssd1306::Start()+0x42>
 8014f96:	2101      	movs	r1, #1
 8014f98:	f10d 0007 	add.w	r0, sp, #7
 8014f9c:	f001 fe2c 	bl	8016bf8 <gd32_i2c_read>
 8014fa0:	fab0 f480 	clz	r4, r0
 8014fa4:	0964      	lsrs	r4, r4, #5
 8014fa6:	b34c      	cbz	r4, 8014ffc <Ssd1306::Start()+0x88>
 8014fa8:	7e2e      	ldrb	r6, [r5, #24]
 8014faa:	b14e      	cbz	r6, 8014fc0 <Ssd1306::Start()+0x4c>
 8014fac:	3e01      	subs	r6, #1
 8014fae:	2e01      	cmp	r6, #1
 8014fb0:	d927      	bls.n	8015002 <Ssd1306::Start()+0x8e>
 8014fb2:	2400      	movs	r4, #0
 8014fb4:	e022      	b.n	8014ffc <Ssd1306::Start()+0x88>
 8014fb6:	2100      	movs	r1, #0
 8014fb8:	4608      	mov	r0, r1
 8014fba:	f001 fdb7 	bl	8016b2c <gd32_i2c_write>
 8014fbe:	e7ef      	b.n	8014fa0 <Ssd1306::Start()+0x2c>
 8014fc0:	4f15      	ldr	r7, [pc, #84]	@ (8015018 <Ssd1306::Start()+0xa4>)
 8014fc2:	f817 1b01 	ldrb.w	r1, [r7], #1
 8014fc6:	4628      	mov	r0, r5
 8014fc8:	3601      	adds	r6, #1
 8014fca:	f7ff febf 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014fce:	2e18      	cmp	r6, #24
 8014fd0:	d1f7      	bne.n	8014fc2 <Ssd1306::Start()+0x4e>
 8014fd2:	4a12      	ldr	r2, [pc, #72]	@ (801501c <Ssd1306::Start()+0xa8>)
 8014fd4:	2300      	movs	r3, #0
 8014fd6:	4611      	mov	r1, r2
 8014fd8:	4618      	mov	r0, r3
 8014fda:	3301      	adds	r3, #1
 8014fdc:	2b86      	cmp	r3, #134	@ 0x86
 8014fde:	f802 0b01 	strb.w	r0, [r2], #1
 8014fe2:	d1fa      	bne.n	8014fda <Ssd1306::Start()+0x66>
 8014fe4:	2340      	movs	r3, #64	@ 0x40
 8014fe6:	4628      	mov	r0, r5
 8014fe8:	700b      	strb	r3, [r1, #0]
 8014fea:	f7ff ff39 	bl	8014e60 <Ssd1306::CheckSH1106()>
 8014fee:	4628      	mov	r0, r5
 8014ff0:	f7ff ff8a 	bl	8014f08 <Ssd1306::Cls()>
 8014ff4:	21af      	movs	r1, #175	@ 0xaf
 8014ff6:	4628      	mov	r0, r5
 8014ff8:	f7ff fea8 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8014ffc:	4620      	mov	r0, r4
 8014ffe:	b003      	add	sp, #12
 8015000:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015002:	4f07      	ldr	r7, [pc, #28]	@ (8015020 <Ssd1306::Start()+0xac>)
 8015004:	2600      	movs	r6, #0
 8015006:	f817 1b01 	ldrb.w	r1, [r7], #1
 801500a:	4628      	mov	r0, r5
 801500c:	3601      	adds	r6, #1
 801500e:	f7ff fe9d 	bl	8014d4c <Ssd1306::SendCommand(unsigned char)>
 8015012:	2e18      	cmp	r6, #24
 8015014:	d1f7      	bne.n	8015006 <Ssd1306::Start()+0x92>
 8015016:	e7dc      	b.n	8014fd2 <Ssd1306::Start()+0x5e>
 8015018:	0801c1fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, lr, pc}
 801501c:	2000ccdc 	ldrdcs	ip, [r0], -ip	@ <UNPREDICTABLE>
 8015020:	0801c1e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, lr, pc}

08015024 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8015024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015028:	4d15      	ldr	r5, [pc, #84]	@ (8015080 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801502a:	461e      	mov	r6, r3
 801502c:	4b15      	ldr	r3, [pc, #84]	@ (8015084 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801502e:	b086      	sub	sp, #24
 8015030:	6018      	str	r0, [r3, #0]
 8015032:	4604      	mov	r4, r0
 8015034:	4617      	mov	r7, r2
 8015036:	f105 0803 	add.w	r8, r5, #3
 801503a:	2203      	movs	r2, #3
 801503c:	4628      	mov	r0, r5
 801503e:	f002 fb32 	bl	80176a6 <memmove>
 8015042:	4639      	mov	r1, r7
 8015044:	220b      	movs	r2, #11
 8015046:	4640      	mov	r0, r8
 8015048:	f002 fb2d 	bl	80176a6 <memmove>
 801504c:	f105 030e 	add.w	r3, r5, #14
 8015050:	4631      	mov	r1, r6
 8015052:	2208      	movs	r2, #8
 8015054:	4618      	mov	r0, r3
 8015056:	f002 fb26 	bl	80176a6 <memmove>
 801505a:	2308      	movs	r3, #8
 801505c:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8015060:	230b      	movs	r3, #11
 8015062:	9302      	str	r3, [sp, #8]
 8015064:	4b08      	ldr	r3, [pc, #32]	@ (8015088 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8015066:	9005      	str	r0, [sp, #20]
 8015068:	e9cd 5300 	strd	r5, r3, [sp]
 801506c:	4a07      	ldr	r2, [pc, #28]	@ (801508c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801506e:	4808      	ldr	r0, [pc, #32]	@ (8015090 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8015070:	2303      	movs	r3, #3
 8015072:	213f      	movs	r1, #63	@ 0x3f
 8015074:	f002 fe3a 	bl	8017cec <snprintf>
 8015078:	4620      	mov	r0, r4
 801507a:	b006      	add	sp, #24
 801507c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015080:	2000cda8 	andcs	ip, r0, r8, lsr #27
 8015084:	2000cd64 	andcs	ip, r0, r4, ror #26
 8015088:	080189c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, fp, pc}
 801508c:	080191f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, ip, pc}
 8015090:	2000cd68 	andcs	ip, r0, r8, ror #26

08015094 <Hardware::ledblink()>:
 8015094:	4b02      	ldr	r3, [pc, #8]	@ (80150a0 <Hardware::ledblink()+0xc>)
 8015096:	2210      	movs	r2, #16
 8015098:	f8c3 2c2c 	str.w	r2, [r3, #3116]	@ 0xc2c
 801509c:	4770      	bx	lr
 801509e:	bf00      	nop
 80150a0:	40020000 	andmi	r0, r2, r0

080150a4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 80150a4:	2900      	cmp	r1, #0
 80150a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150a8:	db10      	blt.n	80150cc <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80150aa:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 80150ae:	2300      	movs	r3, #0
 80150b0:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 80150b4:	42ab      	cmp	r3, r5
 80150b6:	d009      	beq.n	80150cc <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80150b8:	011c      	lsls	r4, r3, #4
 80150ba:	5937      	ldr	r7, [r6, r4]
 80150bc:	42b9      	cmp	r1, r7
 80150be:	d106      	bne.n	80150ce <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 80150c0:	4b04      	ldr	r3, [pc, #16]	@ (80150d4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 80150c2:	681b      	ldr	r3, [r3, #0]
 80150c4:	4420      	add	r0, r4
 80150c6:	4413      	add	r3, r2
 80150c8:	e9c0 3208 	strd	r3, r2, [r0, #32]
 80150cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80150ce:	3301      	adds	r3, #1
 80150d0:	e7f0      	b.n	80150b4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 80150d2:	bf00      	nop
 80150d4:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

080150d8 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>:
 80150d8:	680a      	ldr	r2, [r1, #0]
 80150da:	2a00      	cmp	r2, #0
 80150dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150de:	4606      	mov	r6, r0
 80150e0:	468e      	mov	lr, r1
 80150e2:	db17      	blt.n	8015114 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80150e4:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80150e8:	2400      	movs	r4, #0
 80150ea:	f100 0128 	add.w	r1, r0, #40	@ 0x28
 80150ee:	429c      	cmp	r4, r3
 80150f0:	d010      	beq.n	8015114 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80150f2:	0125      	lsls	r5, r4, #4
 80150f4:	5948      	ldr	r0, [r1, r5]
 80150f6:	4282      	cmp	r2, r0
 80150f8:	d116      	bne.n	8015128 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x50>
 80150fa:	4435      	add	r5, r6
 80150fc:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
 8015100:	4564      	cmp	r4, ip
 8015102:	f105 0510 	add.w	r5, r5, #16
 8015106:	d306      	bcc.n	8015116 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3e>
 8015108:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 801510c:	f8c6 c0a0 	str.w	ip, [r6, #160]	@ 0xa0
 8015110:	f8ce 3000 	str.w	r3, [lr]
 8015114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015116:	f105 0320 	add.w	r3, r5, #32
 801511a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801511c:	f105 0710 	add.w	r7, r5, #16
 8015120:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8015124:	3401      	adds	r4, #1
 8015126:	e7eb      	b.n	8015100 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x28>
 8015128:	3401      	adds	r4, #1
 801512a:	e7e0      	b.n	80150ee <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x16>

0801512c <Hardware::SetFrequency(unsigned long)>:
 801512c:	460a      	mov	r2, r1
 801512e:	69c1      	ldr	r1, [r0, #28]
 8015130:	2900      	cmp	r1, #0
 8015132:	b538      	push	{r3, r4, r5, lr}
 8015134:	4604      	mov	r4, r0
 8015136:	da21      	bge.n	801517c <Hardware::SetFrequency(unsigned long)+0x50>
 8015138:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 801513c:	2b07      	cmp	r3, #7
 801513e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8015142:	fbb1 f1f2 	udiv	r1, r1, r2
 8015146:	d906      	bls.n	8015156 <Hardware::SetFrequency(unsigned long)+0x2a>
 8015148:	4825      	ldr	r0, [pc, #148]	@ (80151e0 <Hardware::SetFrequency(unsigned long)+0xb4>)
 801514a:	f000 fa9f 	bl	801568c <console_error>
 801514e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8015152:	61e2      	str	r2, [r4, #28]
 8015154:	bd38      	pop	{r3, r4, r5, pc}
 8015156:	4a23      	ldr	r2, [pc, #140]	@ (80151e4 <Hardware::SetFrequency(unsigned long)+0xb8>)
 8015158:	6810      	ldr	r0, [r2, #0]
 801515a:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 801515e:	1c55      	adds	r5, r2, #1
 8015160:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8015164:	4408      	add	r0, r1
 8015166:	1c5d      	adds	r5, r3, #1
 8015168:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 801516c:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8015170:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8015174:	491c      	ldr	r1, [pc, #112]	@ (80151e8 <Hardware::SetFrequency(unsigned long)+0xbc>)
 8015176:	629a      	str	r2, [r3, #40]	@ 0x28
 8015178:	62d9      	str	r1, [r3, #44]	@ 0x2c
 801517a:	e7ea      	b.n	8015152 <Hardware::SetFrequency(unsigned long)+0x26>
 801517c:	2a08      	cmp	r2, #8
 801517e:	d808      	bhi.n	8015192 <Hardware::SetFrequency(unsigned long)+0x66>
 8015180:	2a08      	cmp	r2, #8
 8015182:	d808      	bhi.n	8015196 <Hardware::SetFrequency(unsigned long)+0x6a>
 8015184:	e8df f002 	tbb	[pc, r2]
 8015188:	1c07150c 	cfstr32ne	mvfx1, [r7], {12}
 801518c:	07071f07 	streq	r1, [r7, -r7, lsl #30]
 8015190:	2aff0021 	bcs	7fd521c <__stack_size+0x7fcd21c>
 8015194:	d01b      	beq.n	80151ce <Hardware::SetFrequency(unsigned long)+0xa2>
 8015196:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 801519a:	fbb3 f2f2 	udiv	r2, r3, r2
 801519e:	e00a      	b.n	80151b6 <Hardware::SetFrequency(unsigned long)+0x8a>
 80151a0:	f100 011c 	add.w	r1, r0, #28
 80151a4:	f7ff ff98 	bl	80150d8 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80151a8:	4b10      	ldr	r3, [pc, #64]	@ (80151ec <Hardware::SetFrequency(unsigned long)+0xc0>)
 80151aa:	2210      	movs	r2, #16
 80151ac:	f8c3 2c28 	str.w	r2, [r3, #3112]	@ 0xc28
 80151b0:	e7d0      	b.n	8015154 <Hardware::SetFrequency(unsigned long)+0x28>
 80151b2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80151b6:	4620      	mov	r0, r4
 80151b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80151bc:	f7ff bf72 	b.w	80150a4 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80151c0:	f240 124d 	movw	r2, #333	@ 0x14d
 80151c4:	e7f7      	b.n	80151b6 <Hardware::SetFrequency(unsigned long)+0x8a>
 80151c6:	22c8      	movs	r2, #200	@ 0xc8
 80151c8:	e7f5      	b.n	80151b6 <Hardware::SetFrequency(unsigned long)+0x8a>
 80151ca:	227d      	movs	r2, #125	@ 0x7d
 80151cc:	e7f3      	b.n	80151b6 <Hardware::SetFrequency(unsigned long)+0x8a>
 80151ce:	f100 011c 	add.w	r1, r0, #28
 80151d2:	f7ff ff81 	bl	80150d8 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80151d6:	4b05      	ldr	r3, [pc, #20]	@ (80151ec <Hardware::SetFrequency(unsigned long)+0xc0>)
 80151d8:	2210      	movs	r2, #16
 80151da:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 80151de:	e7b9      	b.n	8015154 <Hardware::SetFrequency(unsigned long)+0x28>
 80151e0:	08019020 	stmdaeq	r1, {r5, ip, pc}
 80151e4:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80151e8:	08015095 	stmdaeq	r1, {r0, r2, r4, r7, ip, lr}
 80151ec:	40020000 	andmi	r0, r2, r0

080151f0 <Hardware::SetMode(hardware::ledblink::Mode)>:
 80151f0:	7e03      	ldrb	r3, [r0, #24]
 80151f2:	b510      	push	{r4, lr}
 80151f4:	4604      	mov	r4, r0
 80151f6:	b993      	cbnz	r3, 801521e <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80151f8:	6943      	ldr	r3, [r0, #20]
 80151fa:	428b      	cmp	r3, r1
 80151fc:	d00f      	beq.n	801521e <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80151fe:	6141      	str	r1, [r0, #20]
 8015200:	3901      	subs	r1, #1
 8015202:	2904      	cmp	r1, #4
 8015204:	d804      	bhi.n	8015210 <Hardware::SetMode(hardware::ledblink::Mode)+0x20>
 8015206:	e8df f001 	tbb	[pc, r1]
 801520a:	110f0d0b 	tstne	pc, fp, lsl #26
 801520e:	21000013 	tstcs	r0, r3, lsl r0
 8015212:	4620      	mov	r0, r4
 8015214:	f7ff ff8a 	bl	801512c <Hardware::SetFrequency(unsigned long)>
 8015218:	6960      	ldr	r0, [r4, #20]
 801521a:	f7f4 fa31 	bl	8009680 <hardware::ledblink::display(unsigned long)>
 801521e:	bd10      	pop	{r4, pc}
 8015220:	21ff      	movs	r1, #255	@ 0xff
 8015222:	e7f6      	b.n	8015212 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8015224:	2101      	movs	r1, #1
 8015226:	e7f4      	b.n	8015212 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8015228:	2103      	movs	r1, #3
 801522a:	e7f2      	b.n	8015212 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 801522c:	2105      	movs	r1, #5
 801522e:	e7f0      	b.n	8015212 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8015230:	2108      	movs	r1, #8
 8015232:	e7ee      	b.n	8015212 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>

08015234 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
 8015234:	b538      	push	{r3, r4, r5, lr}
 8015236:	4604      	mov	r4, r0
 8015238:	2300      	movs	r3, #0
 801523a:	4615      	mov	r5, r2
 801523c:	7603      	strb	r3, [r0, #24]
 801523e:	f7ff ffd7 	bl	80151f0 <Hardware::SetMode(hardware::ledblink::Mode)>
 8015242:	7625      	strb	r5, [r4, #24]
 8015244:	bd38      	pop	{r3, r4, r5, pc}

08015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>:
 8015246:	b530      	push	{r4, r5, lr}
 8015248:	4603      	mov	r3, r0
 801524a:	4401      	add	r1, r0
 801524c:	250a      	movs	r5, #10
 801524e:	2000      	movs	r0, #0
 8015250:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015254:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8015258:	2c09      	cmp	r4, #9
 801525a:	d805      	bhi.n	8015268 <remoteconfig::timedate::atoi(char const*, unsigned long)+0x22>
 801525c:	fb05 2000 	mla	r0, r5, r0, r2
 8015260:	428b      	cmp	r3, r1
 8015262:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 8015266:	d1f3      	bne.n	8015250 <remoteconfig::timedate::atoi(char const*, unsigned long)+0xa>
 8015268:	bd30      	pop	{r4, r5, pc}
	...

0801526c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
 801526c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015270:	b08a      	sub	sp, #40	@ 0x28
 8015272:	4605      	mov	r5, r0
 8015274:	460e      	mov	r6, r1
 8015276:	a808      	add	r0, sp, #32
 8015278:	2100      	movs	r1, #0
 801527a:	f002 fee7 	bl	801804c <gettimeofday>
 801527e:	2800      	cmp	r0, #0
 8015280:	db52      	blt.n	8015328 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xbc>
 8015282:	a808      	add	r0, sp, #32
 8015284:	f002 fe6a 	bl	8017f5c <localtime>
 8015288:	4b28      	ldr	r3, [pc, #160]	@ (801532c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc0>)
 801528a:	4604      	mov	r4, r0
 801528c:	6919      	ldr	r1, [r3, #16]
 801528e:	6827      	ldr	r7, [r4, #0]
 8015290:	6963      	ldr	r3, [r4, #20]
 8015292:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 8015296:	fb91 fcf2 	sdiv	ip, r1, r2
 801529a:	fa4f f08c 	sxtb.w	r0, ip
 801529e:	2800      	cmp	r0, #0
 80152a0:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 80152a4:	dd21      	ble.n	80152ea <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x7e>
 80152a6:	f5a2 52e1 	sub.w	r2, r2, #7200	@ 0x1c20
 80152aa:	fb02 1100 	mla	r1, r2, r0, r1
 80152ae:	fbb1 f1fe 	udiv	r1, r1, lr
 80152b2:	b2ca      	uxtb	r2, r1
 80152b4:	e9d4 8e02 	ldrd	r8, lr, [r4, #8]
 80152b8:	6921      	ldr	r1, [r4, #16]
 80152ba:	6864      	ldr	r4, [r4, #4]
 80152bc:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 801533c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xd0>
 80152c0:	9403      	str	r4, [sp, #12]
 80152c2:	4c1b      	ldr	r4, [pc, #108]	@ (8015330 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>)
 80152c4:	3101      	adds	r1, #1
 80152c6:	2800      	cmp	r0, #0
 80152c8:	bfd8      	it	le
 80152ca:	4664      	movle	r4, ip
 80152cc:	e9cd 0206 	strd	r0, r2, [sp, #24]
 80152d0:	9100      	str	r1, [sp, #0]
 80152d2:	e9cd 7404 	strd	r7, r4, [sp, #16]
 80152d6:	e9cd e801 	strd	lr, r8, [sp, #4]
 80152da:	4a16      	ldr	r2, [pc, #88]	@ (8015334 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc8>)
 80152dc:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 80152e0:	4631      	mov	r1, r6
 80152e2:	4628      	mov	r0, r5
 80152e4:	f002 fd02 	bl	8017cec <snprintf>
 80152e8:	e01b      	b.n	8015322 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 80152ea:	4342      	muls	r2, r0
 80152ec:	1a52      	subs	r2, r2, r1
 80152ee:	fbb2 f2fe 	udiv	r2, r2, lr
 80152f2:	b2d2      	uxtb	r2, r2
 80152f4:	ea42 0c0c 	orr.w	ip, r2, ip
 80152f8:	fa5f f18c 	uxtb.w	r1, ip
 80152fc:	2900      	cmp	r1, #0
 80152fe:	d1d9      	bne.n	80152b4 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x48>
 8015300:	9704      	str	r7, [sp, #16]
 8015302:	6862      	ldr	r2, [r4, #4]
 8015304:	9203      	str	r2, [sp, #12]
 8015306:	68a2      	ldr	r2, [r4, #8]
 8015308:	9202      	str	r2, [sp, #8]
 801530a:	68e2      	ldr	r2, [r4, #12]
 801530c:	9201      	str	r2, [sp, #4]
 801530e:	6922      	ldr	r2, [r4, #16]
 8015310:	3201      	adds	r2, #1
 8015312:	9200      	str	r2, [sp, #0]
 8015314:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8015318:	4a07      	ldr	r2, [pc, #28]	@ (8015338 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xcc>)
 801531a:	4631      	mov	r1, r6
 801531c:	4628      	mov	r0, r5
 801531e:	f002 fce5 	bl	8017cec <snprintf>
 8015322:	b00a      	add	sp, #40	@ 0x28
 8015324:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015328:	2000      	movs	r0, #0
 801532a:	e7fa      	b.n	8015322 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 801532c:	40024000 	andmi	r4, r2, r0
 8015330:	08019193 	stmdaeq	r1, {r0, r1, r4, r7, r8, ip, pc}
 8015334:	0801923f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, ip, pc}
 8015338:	08019216 	stmdaeq	r1, {r1, r2, r4, r9, ip, pc}
 801533c:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}

08015340 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
 8015340:	b570      	push	{r4, r5, r6, lr}
 8015342:	291a      	cmp	r1, #26
 8015344:	b08c      	sub	sp, #48	@ 0x30
 8015346:	4606      	mov	r6, r0
 8015348:	460c      	mov	r4, r1
 801534a:	d001      	beq.n	8015350 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10>
 801534c:	291f      	cmp	r1, #31
 801534e:	d174      	bne.n	801543a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfa>
 8015350:	2104      	movs	r1, #4
 8015352:	1d70      	adds	r0, r6, #5
 8015354:	f7ff ff77 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8015358:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 801535c:	9008      	str	r0, [sp, #32]
 801535e:	2102      	movs	r1, #2
 8015360:	f106 000a 	add.w	r0, r6, #10
 8015364:	f7ff ff6f 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8015368:	3801      	subs	r0, #1
 801536a:	9007      	str	r0, [sp, #28]
 801536c:	2102      	movs	r1, #2
 801536e:	f106 000d 	add.w	r0, r6, #13
 8015372:	f7ff ff68 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8015376:	2102      	movs	r1, #2
 8015378:	9006      	str	r0, [sp, #24]
 801537a:	f106 0010 	add.w	r0, r6, #16
 801537e:	f7ff ff62 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8015382:	2102      	movs	r1, #2
 8015384:	9005      	str	r0, [sp, #20]
 8015386:	f106 0013 	add.w	r0, r6, #19
 801538a:	f7ff ff5c 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801538e:	2102      	movs	r1, #2
 8015390:	9004      	str	r0, [sp, #16]
 8015392:	f106 0016 	add.w	r0, r6, #22
 8015396:	f7ff ff56 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801539a:	9003      	str	r0, [sp, #12]
 801539c:	a803      	add	r0, sp, #12
 801539e:	f002 fded 	bl	8017f7c <mktime>
 80153a2:	2300      	movs	r3, #0
 80153a4:	2c1a      	cmp	r4, #26
 80153a6:	4605      	mov	r5, r0
 80153a8:	9001      	str	r0, [sp, #4]
 80153aa:	9302      	str	r3, [sp, #8]
 80153ac:	d041      	beq.n	8015432 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xf2>
 80153ae:	7e33      	ldrb	r3, [r6, #24]
 80153b0:	2102      	movs	r1, #2
 80153b2:	2b2d      	cmp	r3, #45	@ 0x2d
 80153b4:	f106 0019 	add.w	r0, r6, #25
 80153b8:	bf14      	ite	ne
 80153ba:	2401      	movne	r4, #1
 80153bc:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
 80153c0:	f7ff ff41 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80153c4:	4344      	muls	r4, r0
 80153c6:	f004 04ff 	and.w	r4, r4, #255	@ 0xff
 80153ca:	f104 030c 	add.w	r3, r4, #12
 80153ce:	b2db      	uxtb	r3, r3
 80153d0:	2b1a      	cmp	r3, #26
 80153d2:	d82a      	bhi.n	801542a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80153d4:	2102      	movs	r1, #2
 80153d6:	f106 001c 	add.w	r0, r6, #28
 80153da:	f7ff ff34 	bl	8015246 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80153de:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
 80153e2:	b264      	sxtb	r4, r4
 80153e4:	d12b      	bne.n	801543e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfe>
 80153e6:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80153ea:	4363      	muls	r3, r4
 80153ec:	4a15      	ldr	r2, [pc, #84]	@ (8015444 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 80153ee:	6911      	ldr	r1, [r2, #16]
 80153f0:	4299      	cmp	r1, r3
 80153f2:	bf1f      	itttt	ne
 80153f4:	6113      	strne	r3, [r2, #16]
 80153f6:	4b14      	ldrne	r3, [pc, #80]	@ (8015448 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x108>)
 80153f8:	2201      	movne	r2, #1
 80153fa:	601a      	strne	r2, [r3, #0]
 80153fc:	e015      	b.n	801542a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80153fe:	f993 1000 	ldrsb.w	r1, [r3]
 8015402:	42a1      	cmp	r1, r4
 8015404:	d10e      	bne.n	8015424 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 8015406:	7859      	ldrb	r1, [r3, #1]
 8015408:	4281      	cmp	r1, r0
 801540a:	d10b      	bne.n	8015424 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 801540c:	2c00      	cmp	r4, #0
 801540e:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8015412:	fb04 f303 	mul.w	r3, r4, r3
 8015416:	bfcc      	ite	gt
 8015418:	223c      	movgt	r2, #60	@ 0x3c
 801541a:	f06f 023b 	mvnle.w	r2, #59	@ 0x3b
 801541e:	fb02 3300 	mla	r3, r2, r0, r3
 8015422:	e7e3      	b.n	80153ec <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xac>
 8015424:	3302      	adds	r3, #2
 8015426:	3a01      	subs	r2, #1
 8015428:	d1e9      	bne.n	80153fe <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xbe>
 801542a:	4b06      	ldr	r3, [pc, #24]	@ (8015444 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 801542c:	691b      	ldr	r3, [r3, #16]
 801542e:	1aed      	subs	r5, r5, r3
 8015430:	9501      	str	r5, [sp, #4]
 8015432:	2100      	movs	r1, #0
 8015434:	a801      	add	r0, sp, #4
 8015436:	f002 fe3b 	bl	80180b0 <settimeofday>
 801543a:	b00c      	add	sp, #48	@ 0x30
 801543c:	bd70      	pop	{r4, r5, r6, pc}
 801543e:	4b03      	ldr	r3, [pc, #12]	@ (801544c <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10c>)
 8015440:	220c      	movs	r2, #12
 8015442:	e7f0      	b.n	8015426 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe6>
 8015444:	40024000 	andmi	r4, r2, r0
 8015448:	2000cccc 	andcs	ip, r0, ip, asr #25
 801544c:	0801c000 	stmdaeq	r1, {lr, pc}

08015450 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 8015450:	2900      	cmp	r1, #0
 8015452:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015454:	db10      	blt.n	8015478 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8015456:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 801545a:	2300      	movs	r3, #0
 801545c:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 8015460:	42ab      	cmp	r3, r5
 8015462:	d009      	beq.n	8015478 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8015464:	011c      	lsls	r4, r3, #4
 8015466:	5937      	ldr	r7, [r6, r4]
 8015468:	42b9      	cmp	r1, r7
 801546a:	d106      	bne.n	801547a <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 801546c:	4b04      	ldr	r3, [pc, #16]	@ (8015480 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 801546e:	681b      	ldr	r3, [r3, #0]
 8015470:	4420      	add	r0, r4
 8015472:	4413      	add	r3, r2
 8015474:	e9c0 3208 	strd	r3, r2, [r0, #32]
 8015478:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801547a:	3301      	adds	r3, #1
 801547c:	e7f0      	b.n	8015460 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 801547e:	bf00      	nop
 8015480:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

08015484 <Hardware::Hardware()>:
 8015484:	b570      	push	{r4, r5, r6, lr}
 8015486:	2306      	movs	r3, #6
 8015488:	6143      	str	r3, [r0, #20]
 801548a:	2500      	movs	r5, #0
 801548c:	4b5c      	ldr	r3, [pc, #368]	@ (8015600 <Hardware::Hardware()+0x17c>)
 801548e:	7405      	strb	r5, [r0, #16]
 8015490:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8015494:	b090      	sub	sp, #64	@ 0x40
 8015496:	e9c0 5528 	strd	r5, r5, [r0, #160]	@ 0xa0
 801549a:	4604      	mov	r4, r0
 801549c:	7605      	strb	r5, [r0, #24]
 801549e:	61c6      	str	r6, [r0, #28]
 80154a0:	6018      	str	r0, [r3, #0]
 80154a2:	f7f3 f879 	bl	8008598 <console_init()>
 80154a6:	f001 f9cf 	bl	8016848 <timer6_config()>
 80154aa:	f001 fa33 	bl	8016914 <systick_config>
 80154ae:	f001 fa05 	bl	80168bc <udelay_init()>
 80154b2:	4620      	mov	r0, r4
 80154b4:	f002 fdae 	bl	8018014 <hal::uuid_init(unsigned char*)>
 80154b8:	f001 fa52 	bl	8016960 <gd32_adc_init()>
 80154bc:	f001 fadc 	bl	8016a78 <gd32_i2c_begin>
 80154c0:	f241 0004 	movw	r0, #4100	@ 0x1004
 80154c4:	f000 fe66 	bl	8016194 <rcu_periph_clock_enable>
 80154c8:	484e      	ldr	r0, [pc, #312]	@ (8015604 <Hardware::Hardware()+0x180>)
 80154ca:	f000 ff1f 	bl	801630c <timer_deinit>
 80154ce:	a803      	add	r0, sp, #12
 80154d0:	f000 ffc2 	bl	8016458 <timer_struct_para_init>
 80154d4:	23ef      	movs	r3, #239	@ 0xef
 80154d6:	a903      	add	r1, sp, #12
 80154d8:	484a      	ldr	r0, [pc, #296]	@ (8015604 <Hardware::Hardware()+0x180>)
 80154da:	f8ad 300c 	strh.w	r3, [sp, #12]
 80154de:	9605      	str	r6, [sp, #20]
 80154e0:	f000 ffc2 	bl	8016468 <timer_init>
 80154e4:	4847      	ldr	r0, [pc, #284]	@ (8015604 <Hardware::Hardware()+0x180>)
 80154e6:	f000 fff3 	bl	80164d0 <timer_enable>
 80154ea:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 80154ee:	f000 fe7d 	bl	80161ec <rcu_timer_clock_prescaler_config>
 80154f2:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 80154f6:	f000 fe4d 	bl	8016194 <rcu_periph_clock_enable>
 80154fa:	f241 001c 	movw	r0, #4124	@ 0x101c
 80154fe:	f000 fe49 	bl	8016194 <rcu_periph_clock_enable>
 8015502:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8015506:	f000 fe31 	bl	801616c <pmu_backup_ldo_config>
 801550a:	f640 4012 	movw	r0, #3090	@ 0xc12
 801550e:	f000 fe41 	bl	8016194 <rcu_periph_clock_enable>
 8015512:	f000 fe37 	bl	8016184 <pmu_backup_write_enable>
 8015516:	4629      	mov	r1, r5
 8015518:	2001      	movs	r0, #1
 801551a:	f001 f953 	bl	80167c4 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 801551e:	4a3a      	ldr	r2, [pc, #232]	@ (8015608 <Hardware::Hardware()+0x184>)
 8015520:	4b3a      	ldr	r3, [pc, #232]	@ (801560c <Hardware::Hardware()+0x188>)
 8015522:	1a9b      	subs	r3, r3, r2
 8015524:	3b01      	subs	r3, #1
 8015526:	d245      	bcs.n	80155b4 <Hardware::Hardware()+0x130>
 8015528:	4a39      	ldr	r2, [pc, #228]	@ (8015610 <Hardware::Hardware()+0x18c>)
 801552a:	4b3a      	ldr	r3, [pc, #232]	@ (8015614 <Hardware::Hardware()+0x190>)
 801552c:	2100      	movs	r1, #0
 801552e:	1a9b      	subs	r3, r3, r2
 8015530:	3b01      	subs	r3, #1
 8015532:	d242      	bcs.n	80155ba <Hardware::Hardware()+0x136>
 8015534:	4a38      	ldr	r2, [pc, #224]	@ (8015618 <Hardware::Hardware()+0x194>)
 8015536:	4b39      	ldr	r3, [pc, #228]	@ (801561c <Hardware::Hardware()+0x198>)
 8015538:	2100      	movs	r1, #0
 801553a:	1a9b      	subs	r3, r3, r2
 801553c:	3b01      	subs	r3, #1
 801553e:	d23f      	bcs.n	80155c0 <Hardware::Hardware()+0x13c>
 8015540:	ab07      	add	r3, sp, #28
 8015542:	2524      	movs	r5, #36	@ 0x24
 8015544:	4618      	mov	r0, r3
 8015546:	2200      	movs	r2, #0
 8015548:	3d01      	subs	r5, #1
 801554a:	f803 2b01 	strb.w	r2, [r3], #1
 801554e:	d1fb      	bne.n	8015548 <Hardware::Hardware()+0xc4>
 8015550:	2217      	movs	r2, #23
 8015552:	2308      	movs	r3, #8
 8015554:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 8015558:	237c      	movs	r3, #124	@ 0x7c
 801555a:	930c      	str	r3, [sp, #48]	@ 0x30
 801555c:	f002 fd0e 	bl	8017f7c <mktime>
 8015560:	4629      	mov	r1, r5
 8015562:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8015566:	a801      	add	r0, sp, #4
 8015568:	f002 fda2 	bl	80180b0 <settimeofday>
 801556c:	f640 4003 	movw	r0, #3075	@ 0xc03
 8015570:	f000 fe10 	bl	8016194 <rcu_periph_clock_enable>
 8015574:	482a      	ldr	r0, [pc, #168]	@ (8015620 <Hardware::Hardware()+0x19c>)
 8015576:	2310      	movs	r3, #16
 8015578:	462a      	mov	r2, r5
 801557a:	2101      	movs	r1, #1
 801557c:	f000 fd88 	bl	8016090 <gpio_mode_set>
 8015580:	2310      	movs	r3, #16
 8015582:	2202      	movs	r2, #2
 8015584:	4629      	mov	r1, r5
 8015586:	4826      	ldr	r0, [pc, #152]	@ (8015620 <Hardware::Hardware()+0x19c>)
 8015588:	f000 fda4 	bl	80160d4 <gpio_output_options_set>
 801558c:	4b25      	ldr	r3, [pc, #148]	@ (8015624 <Hardware::Hardware()+0x1a0>)
 801558e:	2210      	movs	r2, #16
 8015590:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 8015594:	69e1      	ldr	r1, [r4, #28]
 8015596:	2900      	cmp	r1, #0
 8015598:	da2b      	bge.n	80155f2 <Hardware::Hardware()+0x16e>
 801559a:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 801559e:	2b07      	cmp	r3, #7
 80155a0:	d911      	bls.n	80155c6 <Hardware::Hardware()+0x142>
 80155a2:	4821      	ldr	r0, [pc, #132]	@ (8015628 <Hardware::Hardware()+0x1a4>)
 80155a4:	f000 f872 	bl	801568c <console_error>
 80155a8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80155ac:	61e2      	str	r2, [r4, #28]
 80155ae:	4620      	mov	r0, r4
 80155b0:	b010      	add	sp, #64	@ 0x40
 80155b2:	bd70      	pop	{r4, r5, r6, pc}
 80155b4:	f802 5b01 	strb.w	r5, [r2], #1
 80155b8:	e7b4      	b.n	8015524 <Hardware::Hardware()+0xa0>
 80155ba:	f802 1b01 	strb.w	r1, [r2], #1
 80155be:	e7b7      	b.n	8015530 <Hardware::Hardware()+0xac>
 80155c0:	f802 1b01 	strb.w	r1, [r2], #1
 80155c4:	e7ba      	b.n	801553c <Hardware::Hardware()+0xb8>
 80155c6:	4a19      	ldr	r2, [pc, #100]	@ (801562c <Hardware::Hardware()+0x1a8>)
 80155c8:	6811      	ldr	r1, [r2, #0]
 80155ca:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 80155ce:	1c50      	adds	r0, r2, #1
 80155d0:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
 80155d4:	1c58      	adds	r0, r3, #1
 80155d6:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 80155da:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 80155de:	f8c4 00a0 	str.w	r0, [r4, #160]	@ 0xa0
 80155e2:	6219      	str	r1, [r3, #32]
 80155e4:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80155e8:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80155ec:	4910      	ldr	r1, [pc, #64]	@ (8015630 <Hardware::Hardware()+0x1ac>)
 80155ee:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80155f0:	e7dc      	b.n	80155ac <Hardware::Hardware()+0x128>
 80155f2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80155f6:	4620      	mov	r0, r4
 80155f8:	f7ff ff2a 	bl	8015450 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80155fc:	e7d7      	b.n	80155ae <Hardware::Hardware()+0x12a>
 80155fe:	bf00      	nop
 8015600:	2000cdc0 	andcs	ip, r0, r0, asr #27
 8015604:	40001000 	andmi	r1, r0, r0
 8015608:	2001c000 	andcs	ip, r1, r0
 801560c:	2001c000 	andcs	ip, r1, r0
 8015610:	10008000 	andne	r8, r0, r0
 8015614:	1000cc90 	mulne	r0, r0, ip
 8015618:	20020000 	andcs	r0, r2, r0
 801561c:	20030000 	andcs	r0, r3, r0
 8015620:	40020c00 	andmi	r0, r2, r0, lsl #24
 8015624:	40020000 	andmi	r0, r2, r0
 8015628:	08019020 	stmdaeq	r1, {r5, ip, pc}
 801562c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8015630:	08015095 	stmdaeq	r1, {r0, r2, r4, r7, ip, lr}

08015634 <Hardware::Reboot()>:
 8015634:	4604      	mov	r4, r0
 8015636:	b508      	push	{r3, lr}
 8015638:	2500      	movs	r5, #0
 801563a:	480f      	ldr	r0, [pc, #60]	@ (8015678 <Hardware::Reboot()+0x44>)
 801563c:	f002 fb83 	bl	8017d46 <puts>
 8015640:	2104      	movs	r1, #4
 8015642:	7425      	strb	r5, [r4, #16]
 8015644:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8015648:	f000 fcf8 	bl	801603c <fwdgt_config>
 801564c:	4620      	mov	r0, r4
 801564e:	f7f4 f9ed 	bl	8009a2c <Hardware::RebootHandler()>
 8015652:	f7fc fdd7 	bl	8012204 <net::net_shutdown()>
 8015656:	4629      	mov	r1, r5
 8015658:	4620      	mov	r0, r4
 801565a:	f7ff fdc9 	bl	80151f0 <Hardware::SetMode(hardware::ledblink::Mode)>
 801565e:	f3bf 8f4f 	dsb	sy
 8015662:	4906      	ldr	r1, [pc, #24]	@ (801567c <Hardware::Reboot()+0x48>)
 8015664:	4b06      	ldr	r3, [pc, #24]	@ (8015680 <Hardware::Reboot()+0x4c>)
 8015666:	68ca      	ldr	r2, [r1, #12]
 8015668:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 801566c:	4313      	orrs	r3, r2
 801566e:	60cb      	str	r3, [r1, #12]
 8015670:	f3bf 8f4f 	dsb	sy
 8015674:	bf00      	nop
 8015676:	e7fd      	b.n	8015674 <Hardware::Reboot()+0x40>
 8015678:	080188cc 	stmdaeq	r1, {r2, r3, r6, r7, fp, pc}
 801567c:	e000ed00 	and	lr, r0, r0, lsl #26
 8015680:	05fa0004 	ldrbeq	r0, [sl, #4]!

08015684 <console_putc>:
 8015684:	f001 bb6e 	b.w	8016d64 <uart0_putc>

08015688 <console_puts>:
 8015688:	f001 bb86 	b.w	8016d98 <uart0_puts>

0801568c <console_error>:
 801568c:	b510      	push	{r4, lr}
 801568e:	4604      	mov	r4, r0
 8015690:	4805      	ldr	r0, [pc, #20]	@ (80156a8 <console_error+0x1c>)
 8015692:	f001 fb81 	bl	8016d98 <uart0_puts>
 8015696:	4620      	mov	r0, r4
 8015698:	f001 fb7e 	bl	8016d98 <uart0_puts>
 801569c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80156a0:	4802      	ldr	r0, [pc, #8]	@ (80156ac <console_error+0x20>)
 80156a2:	f001 bb79 	b.w	8016d98 <uart0_puts>
 80156a6:	bf00      	nop
 80156a8:	08019272 	stmdaeq	r1, {r1, r4, r5, r6, r9, ip, pc}
 80156ac:	08019278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, pc}

080156b0 <console_set_fg_color>:
 80156b0:	2807      	cmp	r0, #7
 80156b2:	d810      	bhi.n	80156d6 <console_set_fg_color+0x26>
 80156b4:	e8df f000 	tbb	[pc, r0]
 80156b8:	0b090704 	bleq	82572d0 <_sidata+0x23adec>
 80156bc:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	@ 8015688 <console_puts>
 80156c0:	4806      	ldr	r0, [pc, #24]	@ (80156dc <console_set_fg_color+0x2c>)
 80156c2:	f001 bb69 	b.w	8016d98 <uart0_puts>
 80156c6:	4806      	ldr	r0, [pc, #24]	@ (80156e0 <console_set_fg_color+0x30>)
 80156c8:	e7fb      	b.n	80156c2 <console_set_fg_color+0x12>
 80156ca:	4806      	ldr	r0, [pc, #24]	@ (80156e4 <console_set_fg_color+0x34>)
 80156cc:	e7f9      	b.n	80156c2 <console_set_fg_color+0x12>
 80156ce:	4806      	ldr	r0, [pc, #24]	@ (80156e8 <console_set_fg_color+0x38>)
 80156d0:	e7f7      	b.n	80156c2 <console_set_fg_color+0x12>
 80156d2:	4806      	ldr	r0, [pc, #24]	@ (80156ec <console_set_fg_color+0x3c>)
 80156d4:	e7f5      	b.n	80156c2 <console_set_fg_color+0x12>
 80156d6:	4806      	ldr	r0, [pc, #24]	@ (80156f0 <console_set_fg_color+0x40>)
 80156d8:	e7f3      	b.n	80156c2 <console_set_fg_color+0x12>
 80156da:	bf00      	nop
 80156dc:	0801927e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, ip, pc}
 80156e0:	08019272 	stmdaeq	r1, {r1, r4, r5, r6, r9, ip, pc}
 80156e4:	08019284 	stmdaeq	r1, {r2, r7, r9, ip, pc}
 80156e8:	0801928a 	stmdaeq	r1, {r1, r3, r7, r9, ip, pc}
 80156ec:	08019278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, pc}
 80156f0:	08019290 	stmdaeq	r1, {r4, r7, r9, ip, pc}

080156f4 <console_status>:
 80156f4:	b510      	push	{r4, lr}
 80156f6:	b280      	uxth	r0, r0
 80156f8:	460c      	mov	r4, r1
 80156fa:	f7ff ffd9 	bl	80156b0 <console_set_fg_color>
 80156fe:	4807      	ldr	r0, [pc, #28]	@ (801571c <console_status+0x28>)
 8015700:	f001 fb4a 	bl	8016d98 <uart0_puts>
 8015704:	4620      	mov	r0, r4
 8015706:	f001 fb47 	bl	8016d98 <uart0_puts>
 801570a:	200a      	movs	r0, #10
 801570c:	f001 fb2a 	bl	8016d64 <uart0_putc>
 8015710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015714:	4802      	ldr	r0, [pc, #8]	@ (8015720 <console_status+0x2c>)
 8015716:	f001 bb3f 	b.w	8016d98 <uart0_puts>
 801571a:	bf00      	nop
 801571c:	08019296 	stmdaeq	r1, {r1, r2, r4, r7, r9, ip, pc}
 8015720:	08019278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, pc}

08015724 <stack_debug_init>:
 8015724:	4b04      	ldr	r3, [pc, #16]	@ (8015738 <stack_debug_init+0x14>)
 8015726:	4a05      	ldr	r2, [pc, #20]	@ (801573c <stack_debug_init+0x18>)
 8015728:	4905      	ldr	r1, [pc, #20]	@ (8015740 <stack_debug_init+0x1c>)
 801572a:	4293      	cmp	r3, r2
 801572c:	d300      	bcc.n	8015730 <stack_debug_init+0xc>
 801572e:	4770      	bx	lr
 8015730:	f843 1b04 	str.w	r1, [r3], #4
 8015734:	e7f9      	b.n	801572a <stack_debug_init+0x6>
 8015736:	bf00      	nop
 8015738:	10000000 	andne	r0, r0, r0
 801573c:	10008000 	andne	r8, r0, r0
 8015740:	abcdabcd 	blge	738067c <__stack_size+0x737867c>

08015744 <stack_debug_print()>:
 8015744:	b570      	push	{r4, r5, r6, lr}
 8015746:	4d18      	ldr	r5, [pc, #96]	@ (80157a8 <stack_debug_print()+0x64>)
 8015748:	4c18      	ldr	r4, [pc, #96]	@ (80157ac <stack_debug_print()+0x68>)
 801574a:	4a19      	ldr	r2, [pc, #100]	@ (80157b0 <stack_debug_print()+0x6c>)
 801574c:	4629      	mov	r1, r5
 801574e:	42a5      	cmp	r5, r4
 8015750:	d202      	bcs.n	8015758 <stack_debug_print()+0x14>
 8015752:	6828      	ldr	r0, [r5, #0]
 8015754:	4290      	cmp	r0, r2
 8015756:	d005      	beq.n	8015764 <stack_debug_print()+0x20>
 8015758:	4a16      	ldr	r2, [pc, #88]	@ (80157b4 <stack_debug_print()+0x70>)
 801575a:	6810      	ldr	r0, [r2, #0]
 801575c:	1b66      	subs	r6, r4, r5
 801575e:	42b0      	cmp	r0, r6
 8015760:	d102      	bne.n	8015768 <stack_debug_print()+0x24>
 8015762:	bd70      	pop	{r4, r5, r6, pc}
 8015764:	3504      	adds	r5, #4
 8015766:	e7f2      	b.n	801574e <stack_debug_print()+0xa>
 8015768:	1a64      	subs	r4, r4, r1
 801576a:	1a6d      	subs	r5, r5, r1
 801576c:	2319      	movs	r3, #25
 801576e:	10a4      	asrs	r4, r4, #2
 8015770:	436b      	muls	r3, r5
 8015772:	6016      	str	r6, [r2, #0]
 8015774:	fb93 f3f4 	sdiv	r3, r3, r4
 8015778:	b983      	cbnz	r3, 801579c <stack_debug_print()+0x58>
 801577a:	480f      	ldr	r0, [pc, #60]	@ (80157b8 <stack_debug_print()+0x74>)
 801577c:	f002 fa8e 	bl	8017c9c <printf>
 8015780:	1e21      	subs	r1, r4, #0
 8015782:	bfb8      	it	lt
 8015784:	31ff      	addlt	r1, #255	@ 0xff
 8015786:	462b      	mov	r3, r5
 8015788:	4632      	mov	r2, r6
 801578a:	480c      	ldr	r0, [pc, #48]	@ (80157bc <stack_debug_print()+0x78>)
 801578c:	1209      	asrs	r1, r1, #8
 801578e:	f002 fa85 	bl	8017c9c <printf>
 8015792:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015796:	480a      	ldr	r0, [pc, #40]	@ (80157c0 <stack_debug_print()+0x7c>)
 8015798:	f002 ba80 	b.w	8017c9c <printf>
 801579c:	2b01      	cmp	r3, #1
 801579e:	bf0c      	ite	eq
 80157a0:	4808      	ldreq	r0, [pc, #32]	@ (80157c4 <stack_debug_print()+0x80>)
 80157a2:	4809      	ldrne	r0, [pc, #36]	@ (80157c8 <stack_debug_print()+0x84>)
 80157a4:	e7ea      	b.n	801577c <stack_debug_print()+0x38>
 80157a6:	bf00      	nop
 80157a8:	10000000 	andne	r0, r0, r0
 80157ac:	10008000 	andne	r8, r0, r0
 80157b0:	abcdabcd 	blge	73806ec <__stack_size+0x73786ec>
 80157b4:	2000cdc8 	andcs	ip, r0, r8, asr #27
 80157b8:	08019272 	stmdaeq	r1, {r1, r4, r5, r6, r9, ip, pc}
 80157bc:	080192b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, pc}
 80157c0:	080192d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip, pc}
 80157c4:	0801928a 	stmdaeq	r1, {r1, r3, r7, r9, ip, pc}
 80157c8:	080192ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, ip, pc}

080157cc <stack_debug_run()>:
 80157cc:	b508      	push	{r3, lr}
 80157ce:	2000      	movs	r0, #0
 80157d0:	f002 fc84 	bl	80180dc <time>
 80157d4:	4b04      	ldr	r3, [pc, #16]	@ (80157e8 <stack_debug_run()+0x1c>)
 80157d6:	681a      	ldr	r2, [r3, #0]
 80157d8:	4282      	cmp	r2, r0
 80157da:	d004      	beq.n	80157e6 <stack_debug_run()+0x1a>
 80157dc:	6018      	str	r0, [r3, #0]
 80157de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80157e2:	f7ff bfaf 	b.w	8015744 <stack_debug_print()>
 80157e6:	bd08      	pop	{r3, pc}
 80157e8:	2000cdc4 	andcs	ip, r0, r4, asr #27

080157ec <SystemInit>:
 80157ec:	4a56      	ldr	r2, [pc, #344]	@ (8015948 <SystemInit+0x15c>)
 80157ee:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80157f2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80157f6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80157fa:	4b54      	ldr	r3, [pc, #336]	@ (801594c <SystemInit+0x160>)
 80157fc:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8015800:	f042 0201 	orr.w	r2, r2, #1
 8015804:	b082      	sub	sp, #8
 8015806:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 801580a:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 801580e:	0790      	lsls	r0, r2, #30
 8015810:	d5fb      	bpl.n	801580a <SystemInit+0x1e>
 8015812:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8015816:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801581a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801581e:	2300      	movs	r3, #0
 8015820:	9301      	str	r3, [sp, #4]
 8015822:	9b01      	ldr	r3, [sp, #4]
 8015824:	2b4f      	cmp	r3, #79	@ 0x4f
 8015826:	d93d      	bls.n	80158a4 <SystemInit+0xb8>
 8015828:	4b48      	ldr	r3, [pc, #288]	@ (801594c <SystemInit+0x160>)
 801582a:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 801582e:	f042 0290 	orr.w	r2, r2, #144	@ 0x90
 8015832:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8015836:	2200      	movs	r2, #0
 8015838:	9201      	str	r2, [sp, #4]
 801583a:	9a01      	ldr	r2, [sp, #4]
 801583c:	2a4f      	cmp	r2, #79	@ 0x4f
 801583e:	d934      	bls.n	80158aa <SystemInit+0xbe>
 8015840:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8015844:	f022 0203 	bic.w	r2, r2, #3
 8015848:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801584c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8015850:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8015854:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8015858:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 801585c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8015860:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8015864:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8015868:	2200      	movs	r2, #0
 801586a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801586e:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8015872:	4937      	ldr	r1, [pc, #220]	@ (8015950 <SystemInit+0x164>)
 8015874:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8015878:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 801587c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8015880:	f042 0201 	orr.w	r2, r2, #1
 8015884:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8015888:	4b30      	ldr	r3, [pc, #192]	@ (801594c <SystemInit+0x160>)
 801588a:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 801588e:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 8015892:	0789      	lsls	r1, r1, #30
 8015894:	d401      	bmi.n	801589a <SystemInit+0xae>
 8015896:	3a01      	subs	r2, #1
 8015898:	d1f9      	bne.n	801588e <SystemInit+0xa2>
 801589a:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 801589e:	0792      	lsls	r2, r2, #30
 80158a0:	d406      	bmi.n	80158b0 <SystemInit+0xc4>
 80158a2:	e7fe      	b.n	80158a2 <SystemInit+0xb6>
 80158a4:	9b01      	ldr	r3, [sp, #4]
 80158a6:	3301      	adds	r3, #1
 80158a8:	e7ba      	b.n	8015820 <SystemInit+0x34>
 80158aa:	9a01      	ldr	r2, [sp, #4]
 80158ac:	3201      	adds	r2, #1
 80158ae:	e7c3      	b.n	8015838 <SystemInit+0x4c>
 80158b0:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80158b4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80158b8:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 80158bc:	4a25      	ldr	r2, [pc, #148]	@ (8015954 <SystemInit+0x168>)
 80158be:	6811      	ldr	r1, [r2, #0]
 80158c0:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 80158c4:	6011      	str	r1, [r2, #0]
 80158c6:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 80158ca:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 80158ce:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 80158d2:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 80158d6:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 80158da:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 80158de:	f441 51a0 	orr.w	r1, r1, #5120	@ 0x1400
 80158e2:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 80158e6:	491c      	ldr	r1, [pc, #112]	@ (8015958 <SystemInit+0x16c>)
 80158e8:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 80158ec:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 80158f0:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 80158f4:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
 80158f8:	4914      	ldr	r1, [pc, #80]	@ (801594c <SystemInit+0x160>)
 80158fa:	f8d1 3800 	ldr.w	r3, [r1, #2048]	@ 0x800
 80158fe:	019b      	lsls	r3, r3, #6
 8015900:	d5fb      	bpl.n	80158fa <SystemInit+0x10e>
 8015902:	6813      	ldr	r3, [r2, #0]
 8015904:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8015908:	6013      	str	r3, [r2, #0]
 801590a:	4b12      	ldr	r3, [pc, #72]	@ (8015954 <SystemInit+0x168>)
 801590c:	685a      	ldr	r2, [r3, #4]
 801590e:	03d0      	lsls	r0, r2, #15
 8015910:	d5fc      	bpl.n	801590c <SystemInit+0x120>
 8015912:	681a      	ldr	r2, [r3, #0]
 8015914:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8015918:	601a      	str	r2, [r3, #0]
 801591a:	685a      	ldr	r2, [r3, #4]
 801591c:	0391      	lsls	r1, r2, #14
 801591e:	d5fc      	bpl.n	801591a <SystemInit+0x12e>
 8015920:	4b0a      	ldr	r3, [pc, #40]	@ (801594c <SystemInit+0x160>)
 8015922:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8015926:	f022 0203 	bic.w	r2, r2, #3
 801592a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801592e:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8015932:	f042 0202 	orr.w	r2, r2, #2
 8015936:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801593a:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 801593e:	0712      	lsls	r2, r2, #28
 8015940:	d5fb      	bpl.n	801593a <SystemInit+0x14e>
 8015942:	b002      	add	sp, #8
 8015944:	4770      	bx	lr
 8015946:	bf00      	nop
 8015948:	e000ed00 	and	lr, r0, r0, lsl #26
 801594c:	40023000 	andmi	r3, r2, r0
 8015950:	24003010 	strcs	r3, [r0], #-16
 8015954:	40007000 	andmi	r7, r0, r0
 8015958:	0a007810 	beq	80339a0 <_sidata+0x174bc>

0801595c <dma_deinit>:
 801595c:	2318      	movs	r3, #24
 801595e:	fb03 0301 	mla	r3, r3, r1, r0
 8015962:	b510      	push	{r4, lr}
 8015964:	691a      	ldr	r2, [r3, #16]
 8015966:	f022 0201 	bic.w	r2, r2, #1
 801596a:	611a      	str	r2, [r3, #16]
 801596c:	2200      	movs	r2, #0
 801596e:	611a      	str	r2, [r3, #16]
 8015970:	2903      	cmp	r1, #3
 8015972:	615a      	str	r2, [r3, #20]
 8015974:	619a      	str	r2, [r3, #24]
 8015976:	61da      	str	r2, [r3, #28]
 8015978:	621a      	str	r2, [r3, #32]
 801597a:	f04f 0221 	mov.w	r2, #33	@ 0x21
 801597e:	625a      	str	r2, [r3, #36]	@ 0x24
 8015980:	d80a      	bhi.n	8015998 <dma_deinit+0x3c>
 8015982:	2406      	movs	r4, #6
 8015984:	084b      	lsrs	r3, r1, #1
 8015986:	4361      	muls	r1, r4
 8015988:	6882      	ldr	r2, [r0, #8]
 801598a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801598e:	233d      	movs	r3, #61	@ 0x3d
 8015990:	408b      	lsls	r3, r1
 8015992:	4313      	orrs	r3, r2
 8015994:	6083      	str	r3, [r0, #8]
 8015996:	bd10      	pop	{r4, pc}
 8015998:	3904      	subs	r1, #4
 801599a:	b2ca      	uxtb	r2, r1
 801599c:	2306      	movs	r3, #6
 801599e:	435a      	muls	r2, r3
 80159a0:	f3c1 0140 	ubfx	r1, r1, #1, #1
 80159a4:	68c4      	ldr	r4, [r0, #12]
 80159a6:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80159aa:	233d      	movs	r3, #61	@ 0x3d
 80159ac:	4093      	lsls	r3, r2
 80159ae:	4323      	orrs	r3, r4
 80159b0:	60c3      	str	r3, [r0, #12]
 80159b2:	e7f0      	b.n	8015996 <dma_deinit+0x3a>

080159b4 <dma_single_data_para_struct_init>:
 80159b4:	2300      	movs	r3, #0
 80159b6:	2201      	movs	r2, #1
 80159b8:	e9c0 3200 	strd	r3, r2, [r0]
 80159bc:	e9c0 3202 	strd	r3, r2, [r0, #8]
 80159c0:	e9c0 3204 	strd	r3, r2, [r0, #16]
 80159c4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80159c8:	6203      	str	r3, [r0, #32]
 80159ca:	4770      	bx	lr

080159cc <dma_single_data_mode_init>:
 80159cc:	2318      	movs	r3, #24
 80159ce:	fb03 0101 	mla	r1, r3, r1, r0
 80159d2:	b530      	push	{r4, r5, lr}
 80159d4:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 80159d6:	f023 0304 	bic.w	r3, r3, #4
 80159da:	624b      	str	r3, [r1, #36]	@ 0x24
 80159dc:	6813      	ldr	r3, [r2, #0]
 80159de:	618b      	str	r3, [r1, #24]
 80159e0:	6893      	ldr	r3, [r2, #8]
 80159e2:	61cb      	str	r3, [r1, #28]
 80159e4:	69d3      	ldr	r3, [r2, #28]
 80159e6:	614b      	str	r3, [r1, #20]
 80159e8:	6914      	ldr	r4, [r2, #16]
 80159ea:	6a13      	ldr	r3, [r2, #32]
 80159ec:	6908      	ldr	r0, [r1, #16]
 80159ee:	6995      	ldr	r5, [r2, #24]
 80159f0:	4323      	orrs	r3, r4
 80159f2:	f420 305e 	bic.w	r0, r0, #227328	@ 0x37800
 80159f6:	432b      	orrs	r3, r5
 80159f8:	f020 00c0 	bic.w	r0, r0, #192	@ 0xc0
 80159fc:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 8015a00:	4303      	orrs	r3, r0
 8015a02:	610b      	str	r3, [r1, #16]
 8015a04:	6853      	ldr	r3, [r2, #4]
 8015a06:	b983      	cbnz	r3, 8015a2a <dma_single_data_mode_init+0x5e>
 8015a08:	690b      	ldr	r3, [r1, #16]
 8015a0a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8015a0e:	610b      	str	r3, [r1, #16]
 8015a10:	68d3      	ldr	r3, [r2, #12]
 8015a12:	b993      	cbnz	r3, 8015a3a <dma_single_data_mode_init+0x6e>
 8015a14:	690b      	ldr	r3, [r1, #16]
 8015a16:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8015a1a:	610b      	str	r3, [r1, #16]
 8015a1c:	6953      	ldr	r3, [r2, #20]
 8015a1e:	b983      	cbnz	r3, 8015a42 <dma_single_data_mode_init+0x76>
 8015a20:	690b      	ldr	r3, [r1, #16]
 8015a22:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8015a26:	610b      	str	r3, [r1, #16]
 8015a28:	bd30      	pop	{r4, r5, pc}
 8015a2a:	2b01      	cmp	r3, #1
 8015a2c:	690b      	ldr	r3, [r1, #16]
 8015a2e:	bf0c      	ite	eq
 8015a30:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 8015a34:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 8015a38:	e7e9      	b.n	8015a0e <dma_single_data_mode_init+0x42>
 8015a3a:	690b      	ldr	r3, [r1, #16]
 8015a3c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8015a40:	e7eb      	b.n	8015a1a <dma_single_data_mode_init+0x4e>
 8015a42:	690b      	ldr	r3, [r1, #16]
 8015a44:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015a48:	e7ed      	b.n	8015a26 <dma_single_data_mode_init+0x5a>
	...

08015a4c <dma_multi_data_mode_init>:
 8015a4c:	2318      	movs	r3, #24
 8015a4e:	fb03 0101 	mla	r1, r3, r1, r0
 8015a52:	6a10      	ldr	r0, [r2, #32]
 8015a54:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8015a56:	4303      	orrs	r3, r0
 8015a58:	f043 0304 	orr.w	r3, r3, #4
 8015a5c:	b510      	push	{r4, lr}
 8015a5e:	624b      	str	r3, [r1, #36]	@ 0x24
 8015a60:	6813      	ldr	r3, [r2, #0]
 8015a62:	618b      	str	r3, [r1, #24]
 8015a64:	68d3      	ldr	r3, [r2, #12]
 8015a66:	61cb      	str	r3, [r1, #28]
 8015a68:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8015a6a:	614b      	str	r3, [r1, #20]
 8015a6c:	690b      	ldr	r3, [r1, #16]
 8015a6e:	4819      	ldr	r0, [pc, #100]	@ (8015ad4 <dma_multi_data_mode_init+0x88>)
 8015a70:	6914      	ldr	r4, [r2, #16]
 8015a72:	4018      	ands	r0, r3
 8015a74:	6853      	ldr	r3, [r2, #4]
 8015a76:	4323      	orrs	r3, r4
 8015a78:	6b14      	ldr	r4, [r2, #48]	@ 0x30
 8015a7a:	4323      	orrs	r3, r4
 8015a7c:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015a7e:	4323      	orrs	r3, r4
 8015a80:	6994      	ldr	r4, [r2, #24]
 8015a82:	4323      	orrs	r3, r4
 8015a84:	69d4      	ldr	r4, [r2, #28]
 8015a86:	4323      	orrs	r3, r4
 8015a88:	4303      	orrs	r3, r0
 8015a8a:	610b      	str	r3, [r1, #16]
 8015a8c:	6893      	ldr	r3, [r2, #8]
 8015a8e:	b983      	cbnz	r3, 8015ab2 <dma_multi_data_mode_init+0x66>
 8015a90:	690b      	ldr	r3, [r1, #16]
 8015a92:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8015a96:	610b      	str	r3, [r1, #16]
 8015a98:	6953      	ldr	r3, [r2, #20]
 8015a9a:	b993      	cbnz	r3, 8015ac2 <dma_multi_data_mode_init+0x76>
 8015a9c:	690b      	ldr	r3, [r1, #16]
 8015a9e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8015aa2:	610b      	str	r3, [r1, #16]
 8015aa4:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8015aa6:	b983      	cbnz	r3, 8015aca <dma_multi_data_mode_init+0x7e>
 8015aa8:	690b      	ldr	r3, [r1, #16]
 8015aaa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8015aae:	610b      	str	r3, [r1, #16]
 8015ab0:	bd10      	pop	{r4, pc}
 8015ab2:	2b01      	cmp	r3, #1
 8015ab4:	690b      	ldr	r3, [r1, #16]
 8015ab6:	bf0c      	ite	eq
 8015ab8:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 8015abc:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 8015ac0:	e7e9      	b.n	8015a96 <dma_multi_data_mode_init+0x4a>
 8015ac2:	690b      	ldr	r3, [r1, #16]
 8015ac4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8015ac8:	e7eb      	b.n	8015aa2 <dma_multi_data_mode_init+0x56>
 8015aca:	690b      	ldr	r3, [r1, #16]
 8015acc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015ad0:	e7ed      	b.n	8015aae <dma_multi_data_mode_init+0x62>
 8015ad2:	bf00      	nop
 8015ad4:	fe1c873f 	mrc2	7, 0, r8, cr12, cr15, {1}

08015ad8 <dma_circulation_disable>:
 8015ad8:	2318      	movs	r3, #24
 8015ada:	4359      	muls	r1, r3
 8015adc:	3010      	adds	r0, #16
 8015ade:	580b      	ldr	r3, [r1, r0]
 8015ae0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015ae4:	500b      	str	r3, [r1, r0]
 8015ae6:	4770      	bx	lr

08015ae8 <dma_channel_subperipheral_select>:
 8015ae8:	2318      	movs	r3, #24
 8015aea:	4359      	muls	r1, r3
 8015aec:	3010      	adds	r0, #16
 8015aee:	580b      	ldr	r3, [r1, r0]
 8015af0:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8015af4:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8015af8:	500b      	str	r3, [r1, r0]
 8015afa:	4770      	bx	lr

08015afc <dma_flag_clear>:
 8015afc:	2903      	cmp	r1, #3
 8015afe:	b530      	push	{r4, r5, lr}
 8015b00:	d80a      	bhi.n	8015b18 <dma_flag_clear+0x1c>
 8015b02:	2506      	movs	r5, #6
 8015b04:	084c      	lsrs	r4, r1, #1
 8015b06:	4369      	muls	r1, r5
 8015b08:	6883      	ldr	r3, [r0, #8]
 8015b0a:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8015b0e:	fa02 f101 	lsl.w	r1, r2, r1
 8015b12:	4319      	orrs	r1, r3
 8015b14:	6081      	str	r1, [r0, #8]
 8015b16:	bd30      	pop	{r4, r5, pc}
 8015b18:	3904      	subs	r1, #4
 8015b1a:	b2cb      	uxtb	r3, r1
 8015b1c:	2506      	movs	r5, #6
 8015b1e:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8015b22:	436b      	muls	r3, r5
 8015b24:	68c4      	ldr	r4, [r0, #12]
 8015b26:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8015b2a:	409a      	lsls	r2, r3
 8015b2c:	4322      	orrs	r2, r4
 8015b2e:	60c2      	str	r2, [r0, #12]
 8015b30:	e7f1      	b.n	8015b16 <dma_flag_clear+0x1a>

08015b32 <dma_interrupt_flag_clear>:
 8015b32:	f7ff bfe3 	b.w	8015afc <dma_flag_clear>
	...

08015b38 <enet_software_reset>:
 8015b38:	4b07      	ldr	r3, [pc, #28]	@ (8015b58 <enet_software_reset+0x20>)
 8015b3a:	681a      	ldr	r2, [r3, #0]
 8015b3c:	f042 0201 	orr.w	r2, r2, #1
 8015b40:	601a      	str	r2, [r3, #0]
 8015b42:	4a06      	ldr	r2, [pc, #24]	@ (8015b5c <enet_software_reset+0x24>)
 8015b44:	6819      	ldr	r1, [r3, #0]
 8015b46:	07c9      	lsls	r1, r1, #31
 8015b48:	d501      	bpl.n	8015b4e <enet_software_reset+0x16>
 8015b4a:	3a01      	subs	r2, #1
 8015b4c:	d1fa      	bne.n	8015b44 <enet_software_reset+0xc>
 8015b4e:	6818      	ldr	r0, [r3, #0]
 8015b50:	43c0      	mvns	r0, r0
 8015b52:	f000 0001 	and.w	r0, r0, #1
 8015b56:	4770      	bx	lr
 8015b58:	40029000 	andmi	r9, r2, r0
 8015b5c:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08015b60 <enet_descriptors_chain_init>:
 8015b60:	f5b0 0fe0 	cmp.w	r0, #7340032	@ 0x700000
 8015b64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015b66:	4a19      	ldr	r2, [pc, #100]	@ (8015bcc <enet_descriptors_chain_init+0x6c>)
 8015b68:	d125      	bne.n	8015bb6 <enet_descriptors_chain_init+0x56>
 8015b6a:	4b19      	ldr	r3, [pc, #100]	@ (8015bd0 <enet_descriptors_chain_init+0x70>)
 8015b6c:	6113      	str	r3, [r2, #16]
 8015b6e:	4a19      	ldr	r2, [pc, #100]	@ (8015bd4 <enet_descriptors_chain_init+0x74>)
 8015b70:	4c19      	ldr	r4, [pc, #100]	@ (8015bd8 <enet_descriptors_chain_init+0x78>)
 8015b72:	6013      	str	r3, [r2, #0]
 8015b74:	2500      	movs	r5, #0
 8015b76:	f44f 1680 	mov.w	r6, #1048576	@ 0x100000
 8015b7a:	2002      	movs	r0, #2
 8015b7c:	4917      	ldr	r1, [pc, #92]	@ (8015bdc <enet_descriptors_chain_init+0x7c>)
 8015b7e:	2200      	movs	r2, #0
 8015b80:	600a      	str	r2, [r1, #0]
 8015b82:	4917      	ldr	r1, [pc, #92]	@ (8015be0 <enet_descriptors_chain_init+0x80>)
 8015b84:	f240 5ef4 	movw	lr, #1524	@ 0x5f4
 8015b88:	600a      	str	r2, [r1, #0]
 8015b8a:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8015b8e:	f103 0110 	add.w	r1, r3, #16
 8015b92:	fb0e 4702 	mla	r7, lr, r2, r4
 8015b96:	f841 7c08 	str.w	r7, [r1, #-8]
 8015b9a:	4594      	cmp	ip, r2
 8015b9c:	bf94      	ite	ls
 8015b9e:	461f      	movls	r7, r3
 8015ba0:	460f      	movhi	r7, r1
 8015ba2:	3201      	adds	r2, #1
 8015ba4:	4290      	cmp	r0, r2
 8015ba6:	e941 6504 	strd	r6, r5, [r1, #-16]
 8015baa:	f841 7c04 	str.w	r7, [r1, #-4]
 8015bae:	f101 0110 	add.w	r1, r1, #16
 8015bb2:	d1ee      	bne.n	8015b92 <enet_descriptors_chain_init+0x32>
 8015bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015bb6:	4b0b      	ldr	r3, [pc, #44]	@ (8015be4 <enet_descriptors_chain_init+0x84>)
 8015bb8:	60d3      	str	r3, [r2, #12]
 8015bba:	4a0b      	ldr	r2, [pc, #44]	@ (8015be8 <enet_descriptors_chain_init+0x88>)
 8015bbc:	4c0b      	ldr	r4, [pc, #44]	@ (8015bec <enet_descriptors_chain_init+0x8c>)
 8015bbe:	6013      	str	r3, [r2, #0]
 8015bc0:	f244 55f4 	movw	r5, #17908	@ 0x45f4
 8015bc4:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 8015bc8:	2022      	movs	r0, #34	@ 0x22
 8015bca:	e7d7      	b.n	8015b7c <enet_descriptors_chain_init+0x1c>
 8015bcc:	40029000 	andmi	r9, r2, r0
 8015bd0:	2001a468 	andcs	sl, r1, r8, ror #8
 8015bd4:	2000ce14 	andcs	ip, r0, r4, lsl lr
 8015bd8:	2000ce18 	andcs	ip, r0, r8, lsl lr
 8015bdc:	2000ce08 	andcs	ip, r0, r8, lsl #28
 8015be0:	2000ce0c 	andcs	ip, r0, ip, lsl #28
 8015be4:	2001a488 	andcs	sl, r1, r8, lsl #9
 8015be8:	2000ce10 	andcs	ip, r0, r0, lsl lr
 8015bec:	2000da00 	andcs	sp, r0, r0, lsl #20

08015bf0 <enet_transmit_checksum_config>:
 8015bf0:	6803      	ldr	r3, [r0, #0]
 8015bf2:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8015bf6:	430b      	orrs	r3, r1
 8015bf8:	6003      	str	r3, [r0, #0]
 8015bfa:	4770      	bx	lr

08015bfc <enet_mac_address_set>:
 8015bfc:	4b03      	ldr	r3, [pc, #12]	@ (8015c0c <enet_mac_address_set+0x10>)
 8015bfe:	888a      	ldrh	r2, [r1, #4]
 8015c00:	50c2      	str	r2, [r0, r3]
 8015c02:	3304      	adds	r3, #4
 8015c04:	680a      	ldr	r2, [r1, #0]
 8015c06:	50c2      	str	r2, [r0, r3]
 8015c08:	4770      	bx	lr
 8015c0a:	bf00      	nop
 8015c0c:	40028040 	andmi	r8, r2, r0, asr #32

08015c10 <enet_rx_enable>:
 8015c10:	4a05      	ldr	r2, [pc, #20]	@ (8015c28 <enet_rx_enable+0x18>)
 8015c12:	6813      	ldr	r3, [r2, #0]
 8015c14:	f043 0304 	orr.w	r3, r3, #4
 8015c18:	6013      	str	r3, [r2, #0]
 8015c1a:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8015c1e:	6993      	ldr	r3, [r2, #24]
 8015c20:	f043 0302 	orr.w	r3, r3, #2
 8015c24:	6193      	str	r3, [r2, #24]
 8015c26:	4770      	bx	lr
 8015c28:	40028000 	andmi	r8, r2, r0

08015c2c <enet_phy_write_read>:
 8015c2c:	b530      	push	{r4, r5, lr}
 8015c2e:	4d12      	ldr	r5, [pc, #72]	@ (8015c78 <enet_phy_write_read+0x4c>)
 8015c30:	4604      	mov	r4, r0
 8015c32:	6928      	ldr	r0, [r5, #16]
 8015c34:	0192      	lsls	r2, r2, #6
 8015c36:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8015c3a:	f402 62f8 	and.w	r2, r2, #1984	@ 0x7c0
 8015c3e:	f020 00c3 	bic.w	r0, r0, #195	@ 0xc3
 8015c42:	4302      	orrs	r2, r0
 8015c44:	02c9      	lsls	r1, r1, #11
 8015c46:	b289      	uxth	r1, r1
 8015c48:	4322      	orrs	r2, r4
 8015c4a:	430a      	orrs	r2, r1
 8015c4c:	2c02      	cmp	r4, #2
 8015c4e:	bf04      	itt	eq
 8015c50:	8819      	ldrheq	r1, [r3, #0]
 8015c52:	6169      	streq	r1, [r5, #20]
 8015c54:	f042 0201 	orr.w	r2, r2, #1
 8015c58:	612a      	str	r2, [r5, #16]
 8015c5a:	4907      	ldr	r1, [pc, #28]	@ (8015c78 <enet_phy_write_read+0x4c>)
 8015c5c:	4a07      	ldr	r2, [pc, #28]	@ (8015c7c <enet_phy_write_read+0x50>)
 8015c5e:	6908      	ldr	r0, [r1, #16]
 8015c60:	07c0      	lsls	r0, r0, #31
 8015c62:	d501      	bpl.n	8015c68 <enet_phy_write_read+0x3c>
 8015c64:	3a01      	subs	r2, #1
 8015c66:	d1fa      	bne.n	8015c5e <enet_phy_write_read+0x32>
 8015c68:	690a      	ldr	r2, [r1, #16]
 8015c6a:	43d2      	mvns	r2, r2
 8015c6c:	f002 0001 	and.w	r0, r2, #1
 8015c70:	b90c      	cbnz	r4, 8015c76 <enet_phy_write_read+0x4a>
 8015c72:	694a      	ldr	r2, [r1, #20]
 8015c74:	801a      	strh	r2, [r3, #0]
 8015c76:	bd30      	pop	{r4, r5, pc}
 8015c78:	40028000 	andmi	r8, r2, r0
 8015c7c:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08015c80 <enet_init>:
 8015c80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015c82:	4616      	mov	r6, r2
 8015c84:	4a9d      	ldr	r2, [pc, #628]	@ (8015efc <enet_init+0x27c>)
 8015c86:	460d      	mov	r5, r1
 8015c88:	6814      	ldr	r4, [r2, #0]
 8015c8a:	499d      	ldr	r1, [pc, #628]	@ (8015f00 <enet_init+0x280>)
 8015c8c:	2300      	movs	r3, #0
 8015c8e:	4021      	ands	r1, r4
 8015c90:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015c94:	6011      	str	r1, [r2, #0]
 8015c96:	6053      	str	r3, [r2, #4]
 8015c98:	6093      	str	r3, [r2, #8]
 8015c9a:	60d3      	str	r3, [r2, #12]
 8015c9c:	6991      	ldr	r1, [r2, #24]
 8015c9e:	f021 01be 	bic.w	r1, r1, #190	@ 0xbe
 8015ca2:	0409      	lsls	r1, r1, #16
 8015ca4:	0c09      	lsrs	r1, r1, #16
 8015ca6:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 8015caa:	6191      	str	r1, [r2, #24]
 8015cac:	4995      	ldr	r1, [pc, #596]	@ (8015f04 <enet_init+0x284>)
 8015cae:	61d3      	str	r3, [r2, #28]
 8015cb0:	698c      	ldr	r4, [r1, #24]
 8015cb2:	4a95      	ldr	r2, [pc, #596]	@ (8015f08 <enet_init+0x288>)
 8015cb4:	4022      	ands	r2, r4
 8015cb6:	f042 7208 	orr.w	r2, r2, #35651584	@ 0x2200000
 8015cba:	618a      	str	r2, [r1, #24]
 8015cbc:	680a      	ldr	r2, [r1, #0]
 8015cbe:	4a93      	ldr	r2, [pc, #588]	@ (8015f0c <enet_init+0x28c>)
 8015cc0:	600a      	str	r2, [r1, #0]
 8015cc2:	2801      	cmp	r0, #1
 8015cc4:	d146      	bne.n	8015d54 <enet_init+0xd4>
 8015cc6:	4f92      	ldr	r7, [pc, #584]	@ (8015f10 <enet_init+0x290>)
 8015cc8:	461c      	mov	r4, r3
 8015cca:	2201      	movs	r2, #1
 8015ccc:	4611      	mov	r1, r2
 8015cce:	f10d 0306 	add.w	r3, sp, #6
 8015cd2:	2000      	movs	r0, #0
 8015cd4:	f7ff ffaa 	bl	8015c2c <enet_phy_write_read>
 8015cd8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015cdc:	f002 0204 	and.w	r2, r2, #4
 8015ce0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015ce4:	3401      	adds	r4, #1
 8015ce6:	b922      	cbnz	r2, 8015cf2 <enet_init+0x72>
 8015ce8:	42bc      	cmp	r4, r7
 8015cea:	d1ee      	bne.n	8015cca <enet_init+0x4a>
 8015cec:	2000      	movs	r0, #0
 8015cee:	b003      	add	sp, #12
 8015cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015cf2:	42bc      	cmp	r4, r7
 8015cf4:	d0fa      	beq.n	8015cec <enet_init+0x6c>
 8015cf6:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8015cfa:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015cfe:	2101      	movs	r1, #1
 8015d00:	2200      	movs	r2, #0
 8015d02:	2002      	movs	r0, #2
 8015d04:	f7ff ff92 	bl	8015c2c <enet_phy_write_read>
 8015d08:	2800      	cmp	r0, #0
 8015d0a:	d0ef      	beq.n	8015cec <enet_init+0x6c>
 8015d0c:	4f80      	ldr	r7, [pc, #512]	@ (8015f10 <enet_init+0x290>)
 8015d0e:	2400      	movs	r4, #0
 8015d10:	2201      	movs	r2, #1
 8015d12:	4611      	mov	r1, r2
 8015d14:	f10d 0306 	add.w	r3, sp, #6
 8015d18:	2000      	movs	r0, #0
 8015d1a:	f7ff ff87 	bl	8015c2c <enet_phy_write_read>
 8015d1e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015d22:	f002 0220 	and.w	r2, r2, #32
 8015d26:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015d2a:	3401      	adds	r4, #1
 8015d2c:	b912      	cbnz	r2, 8015d34 <enet_init+0xb4>
 8015d2e:	42bc      	cmp	r4, r7
 8015d30:	d1ee      	bne.n	8015d10 <enet_init+0x90>
 8015d32:	e7db      	b.n	8015cec <enet_init+0x6c>
 8015d34:	42bc      	cmp	r4, r7
 8015d36:	d0d9      	beq.n	8015cec <enet_init+0x6c>
 8015d38:	2101      	movs	r1, #1
 8015d3a:	2210      	movs	r2, #16
 8015d3c:	2000      	movs	r0, #0
 8015d3e:	f7ff ff75 	bl	8015c2c <enet_phy_write_read>
 8015d42:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8015d46:	f3c3 0080 	ubfx	r0, r3, #2, #1
 8015d4a:	02c0      	lsls	r0, r0, #11
 8015d4c:	0799      	lsls	r1, r3, #30
 8015d4e:	bf58      	it	pl
 8015d50:	f440 4080 	orrpl.w	r0, r0, #16384	@ 0x4000
 8015d54:	4b69      	ldr	r3, [pc, #420]	@ (8015efc <enet_init+0x27c>)
 8015d56:	681a      	ldr	r2, [r3, #0]
 8015d58:	f422 42b0 	bic.w	r2, r2, #22528	@ 0x5800
 8015d5c:	4310      	orrs	r0, r2
 8015d5e:	056a      	lsls	r2, r5, #21
 8015d60:	6018      	str	r0, [r3, #0]
 8015d62:	d50b      	bpl.n	8015d7c <enet_init+0xfc>
 8015d64:	681a      	ldr	r2, [r3, #0]
 8015d66:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8015d6a:	601a      	str	r2, [r3, #0]
 8015d6c:	4a65      	ldr	r2, [pc, #404]	@ (8015f04 <enet_init+0x284>)
 8015d6e:	6993      	ldr	r3, [r2, #24]
 8015d70:	f005 6580 	and.w	r5, r5, #67108864	@ 0x4000000
 8015d74:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8015d78:	431d      	orrs	r5, r3
 8015d7a:	6195      	str	r5, [r2, #24]
 8015d7c:	485f      	ldr	r0, [pc, #380]	@ (8015efc <enet_init+0x27c>)
 8015d7e:	6843      	ldr	r3, [r0, #4]
 8015d80:	431e      	orrs	r6, r3
 8015d82:	4b64      	ldr	r3, [pc, #400]	@ (8015f14 <enet_init+0x294>)
 8015d84:	6046      	str	r6, [r0, #4]
 8015d86:	681a      	ldr	r2, [r3, #0]
 8015d88:	07d7      	lsls	r7, r2, #31
 8015d8a:	d513      	bpl.n	8015db4 <enet_init+0x134>
 8015d8c:	6801      	ldr	r1, [r0, #0]
 8015d8e:	685a      	ldr	r2, [r3, #4]
 8015d90:	4c61      	ldr	r4, [pc, #388]	@ (8015f18 <enet_init+0x298>)
 8015d92:	f021 7100 	bic.w	r1, r1, #33554432	@ 0x2000000
 8015d96:	4014      	ands	r4, r2
 8015d98:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8015d9c:	4321      	orrs	r1, r4
 8015d9e:	6001      	str	r1, [r0, #0]
 8015da0:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8015da4:	0892      	lsrs	r2, r2, #2
 8015da6:	6981      	ldr	r1, [r0, #24]
 8015da8:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
 8015dac:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8015db0:	430a      	orrs	r2, r1
 8015db2:	6182      	str	r2, [r0, #24]
 8015db4:	681a      	ldr	r2, [r3, #0]
 8015db6:	0796      	lsls	r6, r2, #30
 8015db8:	d508      	bpl.n	8015dcc <enet_init+0x14c>
 8015dba:	4952      	ldr	r1, [pc, #328]	@ (8015f04 <enet_init+0x284>)
 8015dbc:	6898      	ldr	r0, [r3, #8]
 8015dbe:	680a      	ldr	r2, [r1, #0]
 8015dc0:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8015dc4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8015dc8:	4302      	orrs	r2, r0
 8015dca:	600a      	str	r2, [r1, #0]
 8015dcc:	681a      	ldr	r2, [r3, #0]
 8015dce:	0755      	lsls	r5, r2, #29
 8015dd0:	d508      	bpl.n	8015de4 <enet_init+0x164>
 8015dd2:	494c      	ldr	r1, [pc, #304]	@ (8015f04 <enet_init+0x284>)
 8015dd4:	68d8      	ldr	r0, [r3, #12]
 8015dd6:	680a      	ldr	r2, [r1, #0]
 8015dd8:	f422 027e 	bic.w	r2, r2, #16646144	@ 0xfe0000
 8015ddc:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 8015de0:	4302      	orrs	r2, r0
 8015de2:	600a      	str	r2, [r1, #0]
 8015de4:	681a      	ldr	r2, [r3, #0]
 8015de6:	0714      	lsls	r4, r2, #28
 8015de8:	d508      	bpl.n	8015dfc <enet_init+0x17c>
 8015dea:	4946      	ldr	r1, [pc, #280]	@ (8015f04 <enet_init+0x284>)
 8015dec:	6918      	ldr	r0, [r3, #16]
 8015dee:	680a      	ldr	r2, [r1, #0]
 8015df0:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8015df4:	f022 0202 	bic.w	r2, r2, #2
 8015df8:	4302      	orrs	r2, r0
 8015dfa:	600a      	str	r2, [r1, #0]
 8015dfc:	681a      	ldr	r2, [r3, #0]
 8015dfe:	06d0      	lsls	r0, r2, #27
 8015e00:	d506      	bpl.n	8015e10 <enet_init+0x190>
 8015e02:	4940      	ldr	r1, [pc, #256]	@ (8015f04 <enet_init+0x284>)
 8015e04:	4a45      	ldr	r2, [pc, #276]	@ (8015f1c <enet_init+0x29c>)
 8015e06:	6988      	ldr	r0, [r1, #24]
 8015e08:	4002      	ands	r2, r0
 8015e0a:	6958      	ldr	r0, [r3, #20]
 8015e0c:	4302      	orrs	r2, r0
 8015e0e:	618a      	str	r2, [r1, #24]
 8015e10:	681a      	ldr	r2, [r3, #0]
 8015e12:	0691      	lsls	r1, r2, #26
 8015e14:	d511      	bpl.n	8015e3a <enet_init+0x1ba>
 8015e16:	483b      	ldr	r0, [pc, #236]	@ (8015f04 <enet_init+0x284>)
 8015e18:	699a      	ldr	r2, [r3, #24]
 8015e1a:	6981      	ldr	r1, [r0, #24]
 8015e1c:	4c40      	ldr	r4, [pc, #256]	@ (8015f20 <enet_init+0x2a0>)
 8015e1e:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8015e22:	4014      	ands	r4, r2
 8015e24:	f021 0104 	bic.w	r1, r1, #4
 8015e28:	4321      	orrs	r1, r4
 8015e2a:	6181      	str	r1, [r0, #24]
 8015e2c:	6801      	ldr	r1, [r0, #0]
 8015e2e:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8015e32:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8015e36:	430a      	orrs	r2, r1
 8015e38:	6002      	str	r2, [r0, #0]
 8015e3a:	681a      	ldr	r2, [r3, #0]
 8015e3c:	0652      	lsls	r2, r2, #25
 8015e3e:	d506      	bpl.n	8015e4e <enet_init+0x1ce>
 8015e40:	492e      	ldr	r1, [pc, #184]	@ (8015efc <enet_init+0x27c>)
 8015e42:	69d8      	ldr	r0, [r3, #28]
 8015e44:	69ca      	ldr	r2, [r1, #28]
 8015e46:	f36f 0210 	bfc	r2, #0, #17
 8015e4a:	4302      	orrs	r2, r0
 8015e4c:	61ca      	str	r2, [r1, #28]
 8015e4e:	681a      	ldr	r2, [r3, #0]
 8015e50:	0617      	lsls	r7, r2, #24
 8015e52:	d517      	bpl.n	8015e84 <enet_init+0x204>
 8015e54:	4c29      	ldr	r4, [pc, #164]	@ (8015efc <enet_init+0x27c>)
 8015e56:	6a1a      	ldr	r2, [r3, #32]
 8015e58:	69a0      	ldr	r0, [r4, #24]
 8015e5a:	f020 00be 	bic.w	r0, r0, #190	@ 0xbe
 8015e5e:	f422 417f 	bic.w	r1, r2, #65280	@ 0xff00
 8015e62:	0400      	lsls	r0, r0, #16
 8015e64:	0c00      	lsrs	r0, r0, #16
 8015e66:	f021 0141 	bic.w	r1, r1, #65	@ 0x41
 8015e6a:	4301      	orrs	r1, r0
 8015e6c:	4825      	ldr	r0, [pc, #148]	@ (8015f04 <enet_init+0x284>)
 8015e6e:	61a1      	str	r1, [r4, #24]
 8015e70:	f8d0 1080 	ldr.w	r1, [r0, #128]	@ 0x80
 8015e74:	0a12      	lsrs	r2, r2, #8
 8015e76:	f021 0177 	bic.w	r1, r1, #119	@ 0x77
 8015e7a:	f002 0277 	and.w	r2, r2, #119	@ 0x77
 8015e7e:	430a      	orrs	r2, r1
 8015e80:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 8015e84:	681a      	ldr	r2, [r3, #0]
 8015e86:	05d6      	lsls	r6, r2, #23
 8015e88:	bf42      	ittt	mi
 8015e8a:	4a1c      	ldrmi	r2, [pc, #112]	@ (8015efc <enet_init+0x27c>)
 8015e8c:	6a59      	ldrmi	r1, [r3, #36]	@ 0x24
 8015e8e:	6091      	strmi	r1, [r2, #8]
 8015e90:	681a      	ldr	r2, [r3, #0]
 8015e92:	0595      	lsls	r5, r2, #22
 8015e94:	bf42      	ittt	mi
 8015e96:	4a19      	ldrmi	r2, [pc, #100]	@ (8015efc <enet_init+0x27c>)
 8015e98:	6a99      	ldrmi	r1, [r3, #40]	@ 0x28
 8015e9a:	60d1      	strmi	r1, [r2, #12]
 8015e9c:	681a      	ldr	r2, [r3, #0]
 8015e9e:	0554      	lsls	r4, r2, #21
 8015ea0:	d508      	bpl.n	8015eb4 <enet_init+0x234>
 8015ea2:	4916      	ldr	r1, [pc, #88]	@ (8015efc <enet_init+0x27c>)
 8015ea4:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8015ea6:	684a      	ldr	r2, [r1, #4]
 8015ea8:	f422 62fb 	bic.w	r2, r2, #2008	@ 0x7d8
 8015eac:	f022 0206 	bic.w	r2, r2, #6
 8015eb0:	4302      	orrs	r2, r0
 8015eb2:	604a      	str	r2, [r1, #4]
 8015eb4:	681a      	ldr	r2, [r3, #0]
 8015eb6:	0510      	lsls	r0, r2, #20
 8015eb8:	d508      	bpl.n	8015ecc <enet_init+0x24c>
 8015eba:	4910      	ldr	r1, [pc, #64]	@ (8015efc <enet_init+0x27c>)
 8015ebc:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8015ebe:	680a      	ldr	r2, [r1, #0]
 8015ec0:	f422 3291 	bic.w	r2, r2, #74240	@ 0x12200
 8015ec4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8015ec8:	4302      	orrs	r2, r0
 8015eca:	600a      	str	r2, [r1, #0]
 8015ecc:	681a      	ldr	r2, [r3, #0]
 8015ece:	04d1      	lsls	r1, r2, #19
 8015ed0:	d506      	bpl.n	8015ee0 <enet_init+0x260>
 8015ed2:	490a      	ldr	r1, [pc, #40]	@ (8015efc <enet_init+0x27c>)
 8015ed4:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8015ed6:	680a      	ldr	r2, [r1, #0]
 8015ed8:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8015edc:	4302      	orrs	r2, r0
 8015ede:	600a      	str	r2, [r1, #0]
 8015ee0:	681a      	ldr	r2, [r3, #0]
 8015ee2:	0492      	lsls	r2, r2, #18
 8015ee4:	d401      	bmi.n	8015eea <enet_init+0x26a>
 8015ee6:	2001      	movs	r0, #1
 8015ee8:	e701      	b.n	8015cee <enet_init+0x6e>
 8015eea:	4904      	ldr	r1, [pc, #16]	@ (8015efc <enet_init+0x27c>)
 8015eec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015eee:	680a      	ldr	r2, [r1, #0]
 8015ef0:	f422 2260 	bic.w	r2, r2, #917504	@ 0xe0000
 8015ef4:	4313      	orrs	r3, r2
 8015ef6:	600b      	str	r3, [r1, #0]
 8015ef8:	e7f5      	b.n	8015ee6 <enet_init+0x266>
 8015efa:	bf00      	nop
 8015efc:	40028000 	andmi	r8, r2, r0
 8015f00:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	@ 0xffffffc4
 8015f04:	40029000 	andmi	r9, r2, r0
 8015f08:	f8de3f23 			@ <UNDEFINED> instruction: 0xf8de3f23
 8015f0c:	02c16000 	sbceq	r6, r1, #0
 8015f10:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>
 8015f14:	2000cdcc 	andcs	ip, r0, ip, asr #27
 8015f18:	02000080 	andeq	r0, r0, #128	@ 0x80
 8015f1c:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	@ 0x39c
 8015f20:	01000004 	tsteq	r0, r4

08015f24 <enet_txfifo_flush>:
 8015f24:	4a08      	ldr	r2, [pc, #32]	@ (8015f48 <enet_txfifo_flush+0x24>)
 8015f26:	6993      	ldr	r3, [r2, #24]
 8015f28:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8015f2c:	6193      	str	r3, [r2, #24]
 8015f2e:	4b07      	ldr	r3, [pc, #28]	@ (8015f4c <enet_txfifo_flush+0x28>)
 8015f30:	6990      	ldr	r0, [r2, #24]
 8015f32:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
 8015f36:	d003      	beq.n	8015f40 <enet_txfifo_flush+0x1c>
 8015f38:	3b01      	subs	r3, #1
 8015f3a:	d1f9      	bne.n	8015f30 <enet_txfifo_flush+0xc>
 8015f3c:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8015f40:	fab0 f080 	clz	r0, r0
 8015f44:	0940      	lsrs	r0, r0, #5
 8015f46:	4770      	bx	lr
 8015f48:	40029000 	andmi	r9, r2, r0
 8015f4c:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08015f50 <enet_tx_enable>:
 8015f50:	4a06      	ldr	r2, [pc, #24]	@ (8015f6c <enet_tx_enable+0x1c>)
 8015f52:	b508      	push	{r3, lr}
 8015f54:	6813      	ldr	r3, [r2, #0]
 8015f56:	f043 0308 	orr.w	r3, r3, #8
 8015f5a:	6013      	str	r3, [r2, #0]
 8015f5c:	f7ff ffe2 	bl	8015f24 <enet_txfifo_flush>
 8015f60:	4a03      	ldr	r2, [pc, #12]	@ (8015f70 <enet_tx_enable+0x20>)
 8015f62:	6993      	ldr	r3, [r2, #24]
 8015f64:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8015f68:	6193      	str	r3, [r2, #24]
 8015f6a:	bd08      	pop	{r3, pc}
 8015f6c:	40028000 	andmi	r8, r2, r0
 8015f70:	40029000 	andmi	r9, r2, r0

08015f74 <enet_enable>:
 8015f74:	b508      	push	{r3, lr}
 8015f76:	f7ff ffeb 	bl	8015f50 <enet_tx_enable>
 8015f7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015f7e:	f7ff be47 	b.w	8015c10 <enet_rx_enable>
	...

08015f84 <enet_desc_information_get>:
 8015f84:	2905      	cmp	r1, #5
 8015f86:	d820      	bhi.n	8015fca <enet_desc_information_get+0x46>
 8015f88:	e8df f001 	tbb	[pc, r1]
 8015f8c:	0309191b 	movweq	r1, #39195	@ 0x991b
 8015f90:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 8015f94:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015f98:	4770      	bx	lr
 8015f9a:	88c0      	ldrh	r0, [r0, #6]
 8015f9c:	e7fa      	b.n	8015f94 <enet_desc_information_get+0x10>
 8015f9e:	6802      	ldr	r2, [r0, #0]
 8015fa0:	f3c2 430d 	ubfx	r3, r2, #16, #14
 8015fa4:	2b04      	cmp	r3, #4
 8015fa6:	d913      	bls.n	8015fd0 <enet_desc_information_get+0x4c>
 8015fa8:	490a      	ldr	r1, [pc, #40]	@ (8015fd4 <enet_desc_information_get+0x50>)
 8015faa:	6809      	ldr	r1, [r1, #0]
 8015fac:	0189      	lsls	r1, r1, #6
 8015fae:	f1a3 0004 	sub.w	r0, r3, #4
 8015fb2:	d50e      	bpl.n	8015fd2 <enet_desc_information_get+0x4e>
 8015fb4:	f012 0f20 	tst.w	r2, #32
 8015fb8:	bf18      	it	ne
 8015fba:	4618      	movne	r0, r3
 8015fbc:	4770      	bx	lr
 8015fbe:	6880      	ldr	r0, [r0, #8]
 8015fc0:	4770      	bx	lr
 8015fc2:	6800      	ldr	r0, [r0, #0]
 8015fc4:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8015fc8:	4770      	bx	lr
 8015fca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8015fce:	4770      	bx	lr
 8015fd0:	2000      	movs	r0, #0
 8015fd2:	4770      	bx	lr
 8015fd4:	40028000 	andmi	r8, r2, r0

08015fd8 <enet_initpara_reset>:
 8015fd8:	4b08      	ldr	r3, [pc, #32]	@ (8015ffc <enet_initpara_reset+0x24>)
 8015fda:	2200      	movs	r2, #0
 8015fdc:	e9c3 2200 	strd	r2, r2, [r3]
 8015fe0:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8015fe4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8015fe8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8015fec:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8015ff0:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
 8015ff4:	e9c3 220c 	strd	r2, r2, [r3, #48]	@ 0x30
 8015ff8:	639a      	str	r2, [r3, #56]	@ 0x38
 8015ffa:	4770      	bx	lr
 8015ffc:	2000cdcc 	andcs	ip, r0, ip, asr #27

08016000 <enet_deinit>:
 8016000:	b508      	push	{r3, lr}
 8016002:	f240 4019 	movw	r0, #1049	@ 0x419
 8016006:	f000 f8e0 	bl	80161ca <rcu_periph_reset_enable>
 801600a:	f240 4019 	movw	r0, #1049	@ 0x419
 801600e:	f000 f8de 	bl	80161ce <rcu_periph_reset_disable>
 8016012:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016016:	f7ff bfdf 	b.w	8015fd8 <enet_initpara_reset>
	...

0801601c <fwdgt_enable>:
 801601c:	4b02      	ldr	r3, [pc, #8]	@ (8016028 <fwdgt_enable+0xc>)
 801601e:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
 8016022:	601a      	str	r2, [r3, #0]
 8016024:	4770      	bx	lr
 8016026:	bf00      	nop
 8016028:	40003000 	andmi	r3, r0, r0

0801602c <fwdgt_counter_reload>:
 801602c:	4b02      	ldr	r3, [pc, #8]	@ (8016038 <fwdgt_counter_reload+0xc>)
 801602e:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
 8016032:	601a      	str	r2, [r3, #0]
 8016034:	4770      	bx	lr
 8016036:	bf00      	nop
 8016038:	40003000 	andmi	r3, r0, r0

0801603c <fwdgt_config>:
 801603c:	4a12      	ldr	r2, [pc, #72]	@ (8016088 <fwdgt_config+0x4c>)
 801603e:	b510      	push	{r4, lr}
 8016040:	f245 5355 	movw	r3, #21845	@ 0x5555
 8016044:	4c11      	ldr	r4, [pc, #68]	@ (801608c <fwdgt_config+0x50>)
 8016046:	6013      	str	r3, [r2, #0]
 8016048:	68d3      	ldr	r3, [r2, #12]
 801604a:	3c01      	subs	r4, #1
 801604c:	f003 0301 	and.w	r3, r3, #1
 8016050:	d013      	beq.n	801607a <fwdgt_config+0x3e>
 8016052:	2b00      	cmp	r3, #0
 8016054:	d1f8      	bne.n	8016048 <fwdgt_config+0xc>
 8016056:	6051      	str	r1, [r2, #4]
 8016058:	490c      	ldr	r1, [pc, #48]	@ (801608c <fwdgt_config+0x50>)
 801605a:	4a0b      	ldr	r2, [pc, #44]	@ (8016088 <fwdgt_config+0x4c>)
 801605c:	68d3      	ldr	r3, [r2, #12]
 801605e:	3901      	subs	r1, #1
 8016060:	f003 0302 	and.w	r3, r3, #2
 8016064:	d00d      	beq.n	8016082 <fwdgt_config+0x46>
 8016066:	2b00      	cmp	r3, #0
 8016068:	d1f8      	bne.n	801605c <fwdgt_config+0x20>
 801606a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801606e:	f64a 23aa 	movw	r3, #43690	@ 0xaaaa
 8016072:	6090      	str	r0, [r2, #8]
 8016074:	6013      	str	r3, [r2, #0]
 8016076:	2001      	movs	r0, #1
 8016078:	e002      	b.n	8016080 <fwdgt_config+0x44>
 801607a:	2b00      	cmp	r3, #0
 801607c:	d0eb      	beq.n	8016056 <fwdgt_config+0x1a>
 801607e:	2000      	movs	r0, #0
 8016080:	bd10      	pop	{r4, pc}
 8016082:	2b00      	cmp	r3, #0
 8016084:	d1fb      	bne.n	801607e <fwdgt_config+0x42>
 8016086:	e7f0      	b.n	801606a <fwdgt_config+0x2e>
 8016088:	40003000 	andmi	r3, r0, r0
 801608c:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

08016090 <gpio_mode_set>:
 8016090:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016094:	6805      	ldr	r5, [r0, #0]
 8016096:	68c4      	ldr	r4, [r0, #12]
 8016098:	2600      	movs	r6, #0
 801609a:	f04f 0e01 	mov.w	lr, #1
 801609e:	f04f 0803 	mov.w	r8, #3
 80160a2:	fa0e f706 	lsl.w	r7, lr, r6
 80160a6:	421f      	tst	r7, r3
 80160a8:	d00d      	beq.n	80160c6 <gpio_mode_set+0x36>
 80160aa:	0077      	lsls	r7, r6, #1
 80160ac:	fa08 fc07 	lsl.w	ip, r8, r7
 80160b0:	fa01 f907 	lsl.w	r9, r1, r7
 80160b4:	ea25 050c 	bic.w	r5, r5, ip
 80160b8:	ea24 040c 	bic.w	r4, r4, ip
 80160bc:	fa02 f707 	lsl.w	r7, r2, r7
 80160c0:	ea49 0505 	orr.w	r5, r9, r5
 80160c4:	433c      	orrs	r4, r7
 80160c6:	3601      	adds	r6, #1
 80160c8:	2e10      	cmp	r6, #16
 80160ca:	d1ea      	bne.n	80160a2 <gpio_mode_set+0x12>
 80160cc:	6005      	str	r5, [r0, #0]
 80160ce:	60c4      	str	r4, [r0, #12]
 80160d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080160d4 <gpio_output_options_set>:
 80160d4:	2901      	cmp	r1, #1
 80160d6:	6841      	ldr	r1, [r0, #4]
 80160d8:	bf0c      	ite	eq
 80160da:	4319      	orreq	r1, r3
 80160dc:	4399      	bicne	r1, r3
 80160de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80160e0:	6041      	str	r1, [r0, #4]
 80160e2:	6881      	ldr	r1, [r0, #8]
 80160e4:	2400      	movs	r4, #0
 80160e6:	2601      	movs	r6, #1
 80160e8:	2703      	movs	r7, #3
 80160ea:	fa06 f504 	lsl.w	r5, r6, r4
 80160ee:	421d      	tst	r5, r3
 80160f0:	d007      	beq.n	8016102 <gpio_output_options_set+0x2e>
 80160f2:	0065      	lsls	r5, r4, #1
 80160f4:	fa07 fc05 	lsl.w	ip, r7, r5
 80160f8:	ea21 010c 	bic.w	r1, r1, ip
 80160fc:	fa02 f505 	lsl.w	r5, r2, r5
 8016100:	4329      	orrs	r1, r5
 8016102:	3401      	adds	r4, #1
 8016104:	2c10      	cmp	r4, #16
 8016106:	d1f0      	bne.n	80160ea <gpio_output_options_set+0x16>
 8016108:	6081      	str	r1, [r0, #8]
 801610a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801610c <gpio_af_set>:
 801610c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801610e:	6a06      	ldr	r6, [r0, #32]
 8016110:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 8016112:	2300      	movs	r3, #0
 8016114:	f04f 0c01 	mov.w	ip, #1
 8016118:	f04f 0e0f 	mov.w	lr, #15
 801611c:	fa0c f403 	lsl.w	r4, ip, r3
 8016120:	4214      	tst	r4, r2
 8016122:	d007      	beq.n	8016134 <gpio_af_set+0x28>
 8016124:	009c      	lsls	r4, r3, #2
 8016126:	fa0e f704 	lsl.w	r7, lr, r4
 801612a:	ea26 0607 	bic.w	r6, r6, r7
 801612e:	fa01 f404 	lsl.w	r4, r1, r4
 8016132:	4326      	orrs	r6, r4
 8016134:	3301      	adds	r3, #1
 8016136:	2b08      	cmp	r3, #8
 8016138:	d1f0      	bne.n	801611c <gpio_af_set+0x10>
 801613a:	2300      	movs	r3, #0
 801613c:	f04f 0c01 	mov.w	ip, #1
 8016140:	f04f 0e0f 	mov.w	lr, #15
 8016144:	f103 0408 	add.w	r4, r3, #8
 8016148:	fa0c f404 	lsl.w	r4, ip, r4
 801614c:	4214      	tst	r4, r2
 801614e:	d007      	beq.n	8016160 <gpio_af_set+0x54>
 8016150:	009c      	lsls	r4, r3, #2
 8016152:	fa0e f704 	lsl.w	r7, lr, r4
 8016156:	ea25 0507 	bic.w	r5, r5, r7
 801615a:	fa01 f404 	lsl.w	r4, r1, r4
 801615e:	4325      	orrs	r5, r4
 8016160:	3301      	adds	r3, #1
 8016162:	2b08      	cmp	r3, #8
 8016164:	d1ee      	bne.n	8016144 <gpio_af_set+0x38>
 8016166:	6206      	str	r6, [r0, #32]
 8016168:	6245      	str	r5, [r0, #36]	@ 0x24
 801616a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801616c <pmu_backup_ldo_config>:
 801616c:	4b04      	ldr	r3, [pc, #16]	@ (8016180 <pmu_backup_ldo_config+0x14>)
 801616e:	685a      	ldr	r2, [r3, #4]
 8016170:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8016174:	605a      	str	r2, [r3, #4]
 8016176:	685a      	ldr	r2, [r3, #4]
 8016178:	4302      	orrs	r2, r0
 801617a:	605a      	str	r2, [r3, #4]
 801617c:	4770      	bx	lr
 801617e:	bf00      	nop
 8016180:	40007000 	andmi	r7, r0, r0

08016184 <pmu_backup_write_enable>:
 8016184:	4a02      	ldr	r2, [pc, #8]	@ (8016190 <pmu_backup_write_enable+0xc>)
 8016186:	6813      	ldr	r3, [r2, #0]
 8016188:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 801618c:	6013      	str	r3, [r2, #0]
 801618e:	4770      	bx	lr
 8016190:	40007000 	andmi	r7, r0, r0

08016194 <rcu_periph_clock_enable>:
 8016194:	0983      	lsrs	r3, r0, #6
 8016196:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801619a:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 801619e:	f000 001f 	and.w	r0, r0, #31
 80161a2:	6819      	ldr	r1, [r3, #0]
 80161a4:	2201      	movs	r2, #1
 80161a6:	4082      	lsls	r2, r0
 80161a8:	430a      	orrs	r2, r1
 80161aa:	601a      	str	r2, [r3, #0]
 80161ac:	4770      	bx	lr

080161ae <rcu_periph_clock_disable>:
 80161ae:	0983      	lsrs	r3, r0, #6
 80161b0:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80161b4:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 80161b8:	f000 001f 	and.w	r0, r0, #31
 80161bc:	681a      	ldr	r2, [r3, #0]
 80161be:	2101      	movs	r1, #1
 80161c0:	4081      	lsls	r1, r0
 80161c2:	ea22 0201 	bic.w	r2, r2, r1
 80161c6:	601a      	str	r2, [r3, #0]
 80161c8:	4770      	bx	lr

080161ca <rcu_periph_reset_enable>:
 80161ca:	f7ff bfe3 	b.w	8016194 <rcu_periph_clock_enable>

080161ce <rcu_periph_reset_disable>:
 80161ce:	f7ff bfee 	b.w	80161ae <rcu_periph_clock_disable>
	...

080161d4 <rcu_ckout0_config>:
 80161d4:	4a04      	ldr	r2, [pc, #16]	@ (80161e8 <rcu_ckout0_config+0x14>)
 80161d6:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 80161da:	f023 63ec 	bic.w	r3, r3, #123731968	@ 0x7600000
 80161de:	430b      	orrs	r3, r1
 80161e0:	4303      	orrs	r3, r0
 80161e2:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 80161e6:	4770      	bx	lr
 80161e8:	40023000 	andmi	r3, r2, r0

080161ec <rcu_timer_clock_prescaler_config>:
 80161ec:	f06f 7380 	mvn.w	r3, #16777216	@ 0x1000000
 80161f0:	4298      	cmp	r0, r3
 80161f2:	4b05      	ldr	r3, [pc, #20]	@ (8016208 <rcu_timer_clock_prescaler_config+0x1c>)
 80161f4:	f8d3 288c 	ldr.w	r2, [r3, #2188]	@ 0x88c
 80161f8:	bf0c      	ite	eq
 80161fa:	f022 7280 	biceq.w	r2, r2, #16777216	@ 0x1000000
 80161fe:	4302      	orrne	r2, r0
 8016200:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
 8016204:	4770      	bx	lr
 8016206:	bf00      	nop
 8016208:	40023000 	andmi	r3, r2, r0

0801620c <rcu_clock_freq_get>:
 801620c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801620e:	4b35      	ldr	r3, [pc, #212]	@ (80162e4 <rcu_clock_freq_get+0xd8>)
 8016210:	b089      	sub	sp, #36	@ 0x24
 8016212:	4604      	mov	r4, r0
 8016214:	ad04      	add	r5, sp, #16
 8016216:	f103 0610 	add.w	r6, r3, #16
 801621a:	461f      	mov	r7, r3
 801621c:	6818      	ldr	r0, [r3, #0]
 801621e:	6859      	ldr	r1, [r3, #4]
 8016220:	462a      	mov	r2, r5
 8016222:	c203      	stmia	r2!, {r0, r1}
 8016224:	3308      	adds	r3, #8
 8016226:	42b3      	cmp	r3, r6
 8016228:	4615      	mov	r5, r2
 801622a:	d1f7      	bne.n	801621c <rcu_clock_freq_get+0x10>
 801622c:	6938      	ldr	r0, [r7, #16]
 801622e:	6871      	ldr	r1, [r6, #4]
 8016230:	4a2d      	ldr	r2, [pc, #180]	@ (80162e8 <rcu_clock_freq_get+0xdc>)
 8016232:	466b      	mov	r3, sp
 8016234:	c303      	stmia	r3!, {r0, r1}
 8016236:	c303      	stmia	r3!, {r0, r1}
 8016238:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 801623c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016240:	2b01      	cmp	r3, #1
 8016242:	d03f      	beq.n	80162c4 <rcu_clock_freq_get+0xb8>
 8016244:	2b02      	cmp	r3, #2
 8016246:	d13f      	bne.n	80162c8 <rcu_clock_freq_get+0xbc>
 8016248:	f8d2 0804 	ldr.w	r0, [r2, #2052]	@ 0x804
 801624c:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804
 8016250:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 8016254:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 8016258:	4d24      	ldr	r5, [pc, #144]	@ (80162ec <rcu_clock_freq_get+0xe0>)
 801625a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 801625e:	f412 0f80 	tst.w	r2, #4194304	@ 0x400000
 8016262:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8016266:	f103 0301 	add.w	r3, r3, #1
 801626a:	4a21      	ldr	r2, [pc, #132]	@ (80162f0 <rcu_clock_freq_get+0xe4>)
 801626c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016270:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016274:	bf18      	it	ne
 8016276:	462a      	movne	r2, r5
 8016278:	fbb2 f2f0 	udiv	r2, r2, r0
 801627c:	434a      	muls	r2, r1
 801627e:	fbb2 f0f3 	udiv	r0, r2, r3
 8016282:	4919      	ldr	r1, [pc, #100]	@ (80162e8 <rcu_clock_freq_get+0xdc>)
 8016284:	f8d1 3808 	ldr.w	r3, [r1, #2056]	@ 0x808
 8016288:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 801628c:	f3c2 2282 	ubfx	r2, r2, #10, #3
 8016290:	3220      	adds	r2, #32
 8016292:	446a      	add	r2, sp
 8016294:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8016298:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 801629c:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 80162a0:	3320      	adds	r3, #32
 80162a2:	446b      	add	r3, sp
 80162a4:	f3c2 3242 	ubfx	r2, r2, #13, #3
 80162a8:	3220      	adds	r2, #32
 80162aa:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80162ae:	446a      	add	r2, sp
 80162b0:	fa20 f303 	lsr.w	r3, r0, r3
 80162b4:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80162b8:	2c03      	cmp	r4, #3
 80162ba:	d807      	bhi.n	80162cc <rcu_clock_freq_get+0xc0>
 80162bc:	e8df f004 	tbb	[pc, r4]
 80162c0:	0e0b0907 	vmlaeq.f16	s0, s22, s14	@ <UNPREDICTABLE>
 80162c4:	4809      	ldr	r0, [pc, #36]	@ (80162ec <rcu_clock_freq_get+0xe0>)
 80162c6:	e7dc      	b.n	8016282 <rcu_clock_freq_get+0x76>
 80162c8:	4809      	ldr	r0, [pc, #36]	@ (80162f0 <rcu_clock_freq_get+0xe4>)
 80162ca:	e7da      	b.n	8016282 <rcu_clock_freq_get+0x76>
 80162cc:	2000      	movs	r0, #0
 80162ce:	b009      	add	sp, #36	@ 0x24
 80162d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80162d2:	4618      	mov	r0, r3
 80162d4:	e7fb      	b.n	80162ce <rcu_clock_freq_get+0xc2>
 80162d6:	fa23 f005 	lsr.w	r0, r3, r5
 80162da:	e7f8      	b.n	80162ce <rcu_clock_freq_get+0xc2>
 80162dc:	fa23 f002 	lsr.w	r0, r3, r2
 80162e0:	e7f5      	b.n	80162ce <rcu_clock_freq_get+0xc2>
 80162e2:	bf00      	nop
 80162e4:	08018258 	stmdaeq	r1, {r3, r4, r6, r9, pc}
 80162e8:	40023000 	andmi	r3, r2, r0
 80162ec:	017d7840 	cmneq	sp, r0, asr #16
 80162f0:	00f42400 	rscseq	r2, r4, r0, lsl #8

080162f4 <syscfg_enet_phy_interface_config>:
 80162f4:	4a04      	ldr	r2, [pc, #16]	@ (8016308 <syscfg_enet_phy_interface_config+0x14>)
 80162f6:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 80162fa:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80162fe:	4303      	orrs	r3, r0
 8016300:	f8c2 3804 	str.w	r3, [r2, #2052]	@ 0x804
 8016304:	4770      	bx	lr
 8016306:	bf00      	nop
 8016308:	40013000 	andmi	r3, r1, r0

0801630c <timer_deinit>:
 801630c:	b508      	push	{r3, lr}
 801630e:	4b4e      	ldr	r3, [pc, #312]	@ (8016448 <timer_deinit+0x13c>)
 8016310:	4298      	cmp	r0, r3
 8016312:	f000 8092 	beq.w	801643a <timer_deinit+0x12e>
 8016316:	d822      	bhi.n	801635e <timer_deinit+0x52>
 8016318:	f5a3 5380 	sub.w	r3, r3, #4096	@ 0x1000
 801631c:	4298      	cmp	r0, r3
 801631e:	d062      	beq.n	80163e6 <timer_deinit+0xda>
 8016320:	d80b      	bhi.n	801633a <timer_deinit+0x2e>
 8016322:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8016326:	4298      	cmp	r0, r3
 8016328:	d04f      	beq.n	80163ca <timer_deinit+0xbe>
 801632a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801632e:	4298      	cmp	r0, r3
 8016330:	d052      	beq.n	80163d8 <timer_deinit+0xcc>
 8016332:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8016336:	d041      	beq.n	80163bc <timer_deinit+0xb0>
 8016338:	bd08      	pop	{r3, pc}
 801633a:	4b44      	ldr	r3, [pc, #272]	@ (801644c <timer_deinit+0x140>)
 801633c:	4298      	cmp	r0, r3
 801633e:	d059      	beq.n	80163f4 <timer_deinit+0xe8>
 8016340:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8016344:	4298      	cmp	r0, r3
 8016346:	d071      	beq.n	801642c <timer_deinit+0x120>
 8016348:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 801634c:	4298      	cmp	r0, r3
 801634e:	d1f3      	bne.n	8016338 <timer_deinit+0x2c>
 8016350:	f640 0004 	movw	r0, #2052	@ 0x804
 8016354:	f7ff ff39 	bl	80161ca <rcu_periph_reset_enable>
 8016358:	f640 0004 	movw	r0, #2052	@ 0x804
 801635c:	e02a      	b.n	80163b4 <timer_deinit+0xa8>
 801635e:	4b3c      	ldr	r3, [pc, #240]	@ (8016450 <timer_deinit+0x144>)
 8016360:	4298      	cmp	r0, r3
 8016362:	d055      	beq.n	8016410 <timer_deinit+0x104>
 8016364:	d812      	bhi.n	801638c <timer_deinit+0x80>
 8016366:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 801636a:	4298      	cmp	r0, r3
 801636c:	d01c      	beq.n	80163a8 <timer_deinit+0x9c>
 801636e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8016372:	4298      	cmp	r0, r3
 8016374:	d045      	beq.n	8016402 <timer_deinit+0xf6>
 8016376:	f5a3 4364 	sub.w	r3, r3, #58368	@ 0xe400
 801637a:	4298      	cmp	r0, r3
 801637c:	d1dc      	bne.n	8016338 <timer_deinit+0x2c>
 801637e:	f640 0008 	movw	r0, #2056	@ 0x808
 8016382:	f7ff ff22 	bl	80161ca <rcu_periph_reset_enable>
 8016386:	f640 0008 	movw	r0, #2056	@ 0x808
 801638a:	e013      	b.n	80163b4 <timer_deinit+0xa8>
 801638c:	4b31      	ldr	r3, [pc, #196]	@ (8016454 <timer_deinit+0x148>)
 801638e:	4298      	cmp	r0, r3
 8016390:	d045      	beq.n	801641e <timer_deinit+0x112>
 8016392:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8016396:	4298      	cmp	r0, r3
 8016398:	d1ce      	bne.n	8016338 <timer_deinit+0x2c>
 801639a:	f640 1012 	movw	r0, #2322	@ 0x912
 801639e:	f7ff ff14 	bl	80161ca <rcu_periph_reset_enable>
 80163a2:	f640 1012 	movw	r0, #2322	@ 0x912
 80163a6:	e005      	b.n	80163b4 <timer_deinit+0xa8>
 80163a8:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80163ac:	f7ff ff0d 	bl	80161ca <rcu_periph_reset_enable>
 80163b0:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80163b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80163b8:	f7ff bf09 	b.w	80161ce <rcu_periph_reset_disable>
 80163bc:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80163c0:	f7ff ff03 	bl	80161ca <rcu_periph_reset_enable>
 80163c4:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80163c8:	e7f4      	b.n	80163b4 <timer_deinit+0xa8>
 80163ca:	f640 0001 	movw	r0, #2049	@ 0x801
 80163ce:	f7ff fefc 	bl	80161ca <rcu_periph_reset_enable>
 80163d2:	f640 0001 	movw	r0, #2049	@ 0x801
 80163d6:	e7ed      	b.n	80163b4 <timer_deinit+0xa8>
 80163d8:	f640 0002 	movw	r0, #2050	@ 0x802
 80163dc:	f7ff fef5 	bl	80161ca <rcu_periph_reset_enable>
 80163e0:	f640 0002 	movw	r0, #2050	@ 0x802
 80163e4:	e7e6      	b.n	80163b4 <timer_deinit+0xa8>
 80163e6:	f640 0003 	movw	r0, #2051	@ 0x803
 80163ea:	f7ff feee 	bl	80161ca <rcu_periph_reset_enable>
 80163ee:	f640 0003 	movw	r0, #2051	@ 0x803
 80163f2:	e7df      	b.n	80163b4 <timer_deinit+0xa8>
 80163f4:	f640 0005 	movw	r0, #2053	@ 0x805
 80163f8:	f7ff fee7 	bl	80161ca <rcu_periph_reset_enable>
 80163fc:	f640 0005 	movw	r0, #2053	@ 0x805
 8016400:	e7d8      	b.n	80163b4 <timer_deinit+0xa8>
 8016402:	f640 1001 	movw	r0, #2305	@ 0x901
 8016406:	f7ff fee0 	bl	80161ca <rcu_periph_reset_enable>
 801640a:	f640 1001 	movw	r0, #2305	@ 0x901
 801640e:	e7d1      	b.n	80163b4 <timer_deinit+0xa8>
 8016410:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8016414:	f7ff fed9 	bl	80161ca <rcu_periph_reset_enable>
 8016418:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 801641c:	e7ca      	b.n	80163b4 <timer_deinit+0xa8>
 801641e:	f640 1011 	movw	r0, #2321	@ 0x911
 8016422:	f7ff fed2 	bl	80161ca <rcu_periph_reset_enable>
 8016426:	f640 1011 	movw	r0, #2321	@ 0x911
 801642a:	e7c3      	b.n	80163b4 <timer_deinit+0xa8>
 801642c:	f640 0006 	movw	r0, #2054	@ 0x806
 8016430:	f7ff fecb 	bl	80161ca <rcu_periph_reset_enable>
 8016434:	f640 0006 	movw	r0, #2054	@ 0x806
 8016438:	e7bc      	b.n	80163b4 <timer_deinit+0xa8>
 801643a:	f640 0007 	movw	r0, #2055	@ 0x807
 801643e:	f7ff fec4 	bl	80161ca <rcu_periph_reset_enable>
 8016442:	f640 0007 	movw	r0, #2055	@ 0x807
 8016446:	e7b5      	b.n	80163b4 <timer_deinit+0xa8>
 8016448:	40001c00 	andmi	r1, r0, r0, lsl #24
 801644c:	40001400 	andmi	r1, r0, r0, lsl #8
 8016450:	40014000 	andmi	r4, r1, r0
 8016454:	40014400 	andmi	r4, r1, r0, lsl #8

08016458 <timer_struct_para_init>:
 8016458:	2300      	movs	r3, #0
 801645a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801645e:	e9c0 3300 	strd	r3, r3, [r0]
 8016462:	6082      	str	r2, [r0, #8]
 8016464:	7303      	strb	r3, [r0, #12]
 8016466:	4770      	bx	lr

08016468 <timer_init>:
 8016468:	880b      	ldrh	r3, [r1, #0]
 801646a:	4a17      	ldr	r2, [pc, #92]	@ (80164c8 <timer_init+0x60>)
 801646c:	b510      	push	{r4, lr}
 801646e:	6283      	str	r3, [r0, #40]	@ 0x28
 8016470:	f420 6380 	bic.w	r3, r0, #1024	@ 0x400
 8016474:	4293      	cmp	r3, r2
 8016476:	d004      	beq.n	8016482 <timer_init+0x1a>
 8016478:	f420 6240 	bic.w	r2, r0, #3072	@ 0xc00
 801647c:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8016480:	d10b      	bne.n	801649a <timer_init+0x32>
 8016482:	6802      	ldr	r2, [r0, #0]
 8016484:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8016488:	6002      	str	r2, [r0, #0]
 801648a:	6804      	ldr	r4, [r0, #0]
 801648c:	884a      	ldrh	r2, [r1, #2]
 801648e:	4322      	orrs	r2, r4
 8016490:	6002      	str	r2, [r0, #0]
 8016492:	6804      	ldr	r4, [r0, #0]
 8016494:	888a      	ldrh	r2, [r1, #4]
 8016496:	4322      	orrs	r2, r4
 8016498:	6002      	str	r2, [r0, #0]
 801649a:	688a      	ldr	r2, [r1, #8]
 801649c:	62c2      	str	r2, [r0, #44]	@ 0x2c
 801649e:	4a0b      	ldr	r2, [pc, #44]	@ (80164cc <timer_init+0x64>)
 80164a0:	4293      	cmp	r3, r2
 80164a2:	d00c      	beq.n	80164be <timer_init+0x56>
 80164a4:	6802      	ldr	r2, [r0, #0]
 80164a6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80164aa:	6002      	str	r2, [r0, #0]
 80164ac:	6804      	ldr	r4, [r0, #0]
 80164ae:	88ca      	ldrh	r2, [r1, #6]
 80164b0:	4322      	orrs	r2, r4
 80164b2:	6002      	str	r2, [r0, #0]
 80164b4:	4a04      	ldr	r2, [pc, #16]	@ (80164c8 <timer_init+0x60>)
 80164b6:	4293      	cmp	r3, r2
 80164b8:	bf04      	itt	eq
 80164ba:	7b0b      	ldrbeq	r3, [r1, #12]
 80164bc:	6303      	streq	r3, [r0, #48]	@ 0x30
 80164be:	6943      	ldr	r3, [r0, #20]
 80164c0:	f043 0301 	orr.w	r3, r3, #1
 80164c4:	6143      	str	r3, [r0, #20]
 80164c6:	bd10      	pop	{r4, pc}
 80164c8:	40010000 	andmi	r0, r1, r0
 80164cc:	40001000 	andmi	r1, r0, r0

080164d0 <timer_enable>:
 80164d0:	6803      	ldr	r3, [r0, #0]
 80164d2:	f043 0301 	orr.w	r3, r3, #1
 80164d6:	6003      	str	r3, [r0, #0]
 80164d8:	4770      	bx	lr

080164da <timer_counter_value_config>:
 80164da:	6241      	str	r1, [r0, #36]	@ 0x24
 80164dc:	4770      	bx	lr

080164de <timer_dma_enable>:
 80164de:	68c3      	ldr	r3, [r0, #12]
 80164e0:	4319      	orrs	r1, r3
 80164e2:	60c1      	str	r1, [r0, #12]
 80164e4:	4770      	bx	lr
	...

080164e8 <timer_channel_output_config>:
 80164e8:	2903      	cmp	r1, #3
 80164ea:	d83e      	bhi.n	801656a <timer_channel_output_config+0x82>
 80164ec:	e8df f011 	tbh	[pc, r1, lsl #1]
 80164f0:	003e0004 	eorseq	r0, lr, r4
 80164f4:	00bc007d 	adcseq	r0, ip, sp, ror r0
 80164f8:	6a03      	ldr	r3, [r0, #32]
 80164fa:	f023 0301 	bic.w	r3, r3, #1
 80164fe:	6203      	str	r3, [r0, #32]
 8016500:	6983      	ldr	r3, [r0, #24]
 8016502:	f023 0303 	bic.w	r3, r3, #3
 8016506:	6183      	str	r3, [r0, #24]
 8016508:	6a01      	ldr	r1, [r0, #32]
 801650a:	8813      	ldrh	r3, [r2, #0]
 801650c:	430b      	orrs	r3, r1
 801650e:	6203      	str	r3, [r0, #32]
 8016510:	6a03      	ldr	r3, [r0, #32]
 8016512:	f023 0302 	bic.w	r3, r3, #2
 8016516:	6203      	str	r3, [r0, #32]
 8016518:	6a01      	ldr	r1, [r0, #32]
 801651a:	8893      	ldrh	r3, [r2, #4]
 801651c:	430b      	orrs	r3, r1
 801651e:	6203      	str	r3, [r0, #32]
 8016520:	4b64      	ldr	r3, [pc, #400]	@ (80166b4 <timer_channel_output_config+0x1cc>)
 8016522:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 8016526:	4299      	cmp	r1, r3
 8016528:	d11f      	bne.n	801656a <timer_channel_output_config+0x82>
 801652a:	6a03      	ldr	r3, [r0, #32]
 801652c:	f023 0304 	bic.w	r3, r3, #4
 8016530:	6203      	str	r3, [r0, #32]
 8016532:	6a01      	ldr	r1, [r0, #32]
 8016534:	8853      	ldrh	r3, [r2, #2]
 8016536:	430b      	orrs	r3, r1
 8016538:	6203      	str	r3, [r0, #32]
 801653a:	6a03      	ldr	r3, [r0, #32]
 801653c:	f023 0308 	bic.w	r3, r3, #8
 8016540:	6203      	str	r3, [r0, #32]
 8016542:	6a01      	ldr	r1, [r0, #32]
 8016544:	88d3      	ldrh	r3, [r2, #6]
 8016546:	430b      	orrs	r3, r1
 8016548:	6203      	str	r3, [r0, #32]
 801654a:	6843      	ldr	r3, [r0, #4]
 801654c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8016550:	6043      	str	r3, [r0, #4]
 8016552:	6841      	ldr	r1, [r0, #4]
 8016554:	8913      	ldrh	r3, [r2, #8]
 8016556:	430b      	orrs	r3, r1
 8016558:	6043      	str	r3, [r0, #4]
 801655a:	6843      	ldr	r3, [r0, #4]
 801655c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8016560:	6043      	str	r3, [r0, #4]
 8016562:	6841      	ldr	r1, [r0, #4]
 8016564:	8953      	ldrh	r3, [r2, #10]
 8016566:	430b      	orrs	r3, r1
 8016568:	6043      	str	r3, [r0, #4]
 801656a:	4770      	bx	lr
 801656c:	6a03      	ldr	r3, [r0, #32]
 801656e:	8811      	ldrh	r1, [r2, #0]
 8016570:	f023 0310 	bic.w	r3, r3, #16
 8016574:	6203      	str	r3, [r0, #32]
 8016576:	6983      	ldr	r3, [r0, #24]
 8016578:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 801657c:	6183      	str	r3, [r0, #24]
 801657e:	6a03      	ldr	r3, [r0, #32]
 8016580:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016584:	6203      	str	r3, [r0, #32]
 8016586:	6a03      	ldr	r3, [r0, #32]
 8016588:	8891      	ldrh	r1, [r2, #4]
 801658a:	f023 0320 	bic.w	r3, r3, #32
 801658e:	6203      	str	r3, [r0, #32]
 8016590:	6a03      	ldr	r3, [r0, #32]
 8016592:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016596:	6203      	str	r3, [r0, #32]
 8016598:	4b46      	ldr	r3, [pc, #280]	@ (80166b4 <timer_channel_output_config+0x1cc>)
 801659a:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 801659e:	4299      	cmp	r1, r3
 80165a0:	d1e3      	bne.n	801656a <timer_channel_output_config+0x82>
 80165a2:	6a03      	ldr	r3, [r0, #32]
 80165a4:	8851      	ldrh	r1, [r2, #2]
 80165a6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80165aa:	6203      	str	r3, [r0, #32]
 80165ac:	6a03      	ldr	r3, [r0, #32]
 80165ae:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80165b2:	6203      	str	r3, [r0, #32]
 80165b4:	6a03      	ldr	r3, [r0, #32]
 80165b6:	88d1      	ldrh	r1, [r2, #6]
 80165b8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80165bc:	6203      	str	r3, [r0, #32]
 80165be:	6a03      	ldr	r3, [r0, #32]
 80165c0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80165c4:	6203      	str	r3, [r0, #32]
 80165c6:	6843      	ldr	r3, [r0, #4]
 80165c8:	8911      	ldrh	r1, [r2, #8]
 80165ca:	8952      	ldrh	r2, [r2, #10]
 80165cc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80165d0:	6043      	str	r3, [r0, #4]
 80165d2:	6843      	ldr	r3, [r0, #4]
 80165d4:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 80165d8:	6043      	str	r3, [r0, #4]
 80165da:	6843      	ldr	r3, [r0, #4]
 80165dc:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80165e0:	6043      	str	r3, [r0, #4]
 80165e2:	6843      	ldr	r3, [r0, #4]
 80165e4:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80165e8:	e7be      	b.n	8016568 <timer_channel_output_config+0x80>
 80165ea:	6a03      	ldr	r3, [r0, #32]
 80165ec:	8811      	ldrh	r1, [r2, #0]
 80165ee:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80165f2:	6203      	str	r3, [r0, #32]
 80165f4:	69c3      	ldr	r3, [r0, #28]
 80165f6:	f023 0303 	bic.w	r3, r3, #3
 80165fa:	61c3      	str	r3, [r0, #28]
 80165fc:	6a03      	ldr	r3, [r0, #32]
 80165fe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016602:	6203      	str	r3, [r0, #32]
 8016604:	6a03      	ldr	r3, [r0, #32]
 8016606:	8891      	ldrh	r1, [r2, #4]
 8016608:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 801660c:	6203      	str	r3, [r0, #32]
 801660e:	6a03      	ldr	r3, [r0, #32]
 8016610:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016614:	6203      	str	r3, [r0, #32]
 8016616:	4b27      	ldr	r3, [pc, #156]	@ (80166b4 <timer_channel_output_config+0x1cc>)
 8016618:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 801661c:	4299      	cmp	r1, r3
 801661e:	d1a4      	bne.n	801656a <timer_channel_output_config+0x82>
 8016620:	6a03      	ldr	r3, [r0, #32]
 8016622:	8851      	ldrh	r1, [r2, #2]
 8016624:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8016628:	6203      	str	r3, [r0, #32]
 801662a:	6a03      	ldr	r3, [r0, #32]
 801662c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016630:	6203      	str	r3, [r0, #32]
 8016632:	6a03      	ldr	r3, [r0, #32]
 8016634:	88d1      	ldrh	r1, [r2, #6]
 8016636:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 801663a:	6203      	str	r3, [r0, #32]
 801663c:	6a03      	ldr	r3, [r0, #32]
 801663e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8016642:	6203      	str	r3, [r0, #32]
 8016644:	6843      	ldr	r3, [r0, #4]
 8016646:	8911      	ldrh	r1, [r2, #8]
 8016648:	8952      	ldrh	r2, [r2, #10]
 801664a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801664e:	6043      	str	r3, [r0, #4]
 8016650:	6843      	ldr	r3, [r0, #4]
 8016652:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8016656:	6043      	str	r3, [r0, #4]
 8016658:	6843      	ldr	r3, [r0, #4]
 801665a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801665e:	6043      	str	r3, [r0, #4]
 8016660:	6843      	ldr	r3, [r0, #4]
 8016662:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8016666:	e77f      	b.n	8016568 <timer_channel_output_config+0x80>
 8016668:	6a03      	ldr	r3, [r0, #32]
 801666a:	8811      	ldrh	r1, [r2, #0]
 801666c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8016670:	6203      	str	r3, [r0, #32]
 8016672:	69c3      	ldr	r3, [r0, #28]
 8016674:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8016678:	61c3      	str	r3, [r0, #28]
 801667a:	6a03      	ldr	r3, [r0, #32]
 801667c:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016680:	6203      	str	r3, [r0, #32]
 8016682:	6a03      	ldr	r3, [r0, #32]
 8016684:	8891      	ldrh	r1, [r2, #4]
 8016686:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801668a:	6203      	str	r3, [r0, #32]
 801668c:	6a03      	ldr	r3, [r0, #32]
 801668e:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8016692:	6203      	str	r3, [r0, #32]
 8016694:	4b07      	ldr	r3, [pc, #28]	@ (80166b4 <timer_channel_output_config+0x1cc>)
 8016696:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 801669a:	4299      	cmp	r1, r3
 801669c:	f47f af65 	bne.w	801656a <timer_channel_output_config+0x82>
 80166a0:	6843      	ldr	r3, [r0, #4]
 80166a2:	8912      	ldrh	r2, [r2, #8]
 80166a4:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80166a8:	6043      	str	r3, [r0, #4]
 80166aa:	6843      	ldr	r3, [r0, #4]
 80166ac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80166b0:	e75a      	b.n	8016568 <timer_channel_output_config+0x80>
 80166b2:	bf00      	nop
 80166b4:	40010000 	andmi	r0, r1, r0

080166b8 <timer_channel_output_mode_config>:
 80166b8:	2903      	cmp	r1, #3
 80166ba:	d81a      	bhi.n	80166f2 <timer_channel_output_mode_config+0x3a>
 80166bc:	e8df f001 	tbb	[pc, r1]
 80166c0:	1a120a02 	bne	8498ed0 <_sidata+0x47c9ec>
 80166c4:	6983      	ldr	r3, [r0, #24]
 80166c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80166ca:	6183      	str	r3, [r0, #24]
 80166cc:	6983      	ldr	r3, [r0, #24]
 80166ce:	4313      	orrs	r3, r2
 80166d0:	6183      	str	r3, [r0, #24]
 80166d2:	4770      	bx	lr
 80166d4:	6983      	ldr	r3, [r0, #24]
 80166d6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80166da:	6183      	str	r3, [r0, #24]
 80166dc:	6983      	ldr	r3, [r0, #24]
 80166de:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80166e2:	e7f5      	b.n	80166d0 <timer_channel_output_mode_config+0x18>
 80166e4:	69c3      	ldr	r3, [r0, #28]
 80166e6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80166ea:	61c3      	str	r3, [r0, #28]
 80166ec:	69c3      	ldr	r3, [r0, #28]
 80166ee:	4313      	orrs	r3, r2
 80166f0:	61c3      	str	r3, [r0, #28]
 80166f2:	4770      	bx	lr
 80166f4:	69c3      	ldr	r3, [r0, #28]
 80166f6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80166fa:	61c3      	str	r3, [r0, #28]
 80166fc:	69c3      	ldr	r3, [r0, #28]
 80166fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016702:	e7f5      	b.n	80166f0 <timer_channel_output_mode_config+0x38>

08016704 <timer_channel_output_pulse_value_config>:
 8016704:	2903      	cmp	r1, #3
 8016706:	d80a      	bhi.n	801671e <timer_channel_output_pulse_value_config+0x1a>
 8016708:	e8df f001 	tbb	[pc, r1]
 801670c:	08060402 	stmdaeq	r6, {r1, sl}
 8016710:	6342      	str	r2, [r0, #52]	@ 0x34
 8016712:	4770      	bx	lr
 8016714:	6382      	str	r2, [r0, #56]	@ 0x38
 8016716:	4770      	bx	lr
 8016718:	63c2      	str	r2, [r0, #60]	@ 0x3c
 801671a:	4770      	bx	lr
 801671c:	6402      	str	r2, [r0, #64]	@ 0x40
 801671e:	4770      	bx	lr

08016720 <timer_channel_output_shadow_config>:
 8016720:	2903      	cmp	r1, #3
 8016722:	d81a      	bhi.n	801675a <timer_channel_output_shadow_config+0x3a>
 8016724:	e8df f001 	tbb	[pc, r1]
 8016728:	1a120a02 	bne	8498f38 <_sidata+0x47ca54>
 801672c:	6983      	ldr	r3, [r0, #24]
 801672e:	f023 0308 	bic.w	r3, r3, #8
 8016732:	6183      	str	r3, [r0, #24]
 8016734:	6983      	ldr	r3, [r0, #24]
 8016736:	4313      	orrs	r3, r2
 8016738:	6183      	str	r3, [r0, #24]
 801673a:	4770      	bx	lr
 801673c:	6983      	ldr	r3, [r0, #24]
 801673e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8016742:	6183      	str	r3, [r0, #24]
 8016744:	6983      	ldr	r3, [r0, #24]
 8016746:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801674a:	e7f5      	b.n	8016738 <timer_channel_output_shadow_config+0x18>
 801674c:	69c3      	ldr	r3, [r0, #28]
 801674e:	f023 0308 	bic.w	r3, r3, #8
 8016752:	61c3      	str	r3, [r0, #28]
 8016754:	69c3      	ldr	r3, [r0, #28]
 8016756:	4313      	orrs	r3, r2
 8016758:	61c3      	str	r3, [r0, #28]
 801675a:	4770      	bx	lr
 801675c:	69c3      	ldr	r3, [r0, #28]
 801675e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8016762:	61c3      	str	r3, [r0, #28]
 8016764:	69c3      	ldr	r3, [r0, #28]
 8016766:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801676a:	e7f5      	b.n	8016758 <timer_channel_output_shadow_config+0x38>

0801676c <timer_input_trigger_source_select>:
 801676c:	6883      	ldr	r3, [r0, #8]
 801676e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8016772:	6083      	str	r3, [r0, #8]
 8016774:	6883      	ldr	r3, [r0, #8]
 8016776:	430b      	orrs	r3, r1
 8016778:	6083      	str	r3, [r0, #8]
 801677a:	4770      	bx	lr

0801677c <timer_master_output_trigger_source_select>:
 801677c:	6843      	ldr	r3, [r0, #4]
 801677e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8016782:	6043      	str	r3, [r0, #4]
 8016784:	6843      	ldr	r3, [r0, #4]
 8016786:	430b      	orrs	r3, r1
 8016788:	6043      	str	r3, [r0, #4]
 801678a:	4770      	bx	lr

0801678c <timer_slave_mode_select>:
 801678c:	6883      	ldr	r3, [r0, #8]
 801678e:	f023 0307 	bic.w	r3, r3, #7
 8016792:	6083      	str	r3, [r0, #8]
 8016794:	6883      	ldr	r3, [r0, #8]
 8016796:	430b      	orrs	r3, r1
 8016798:	6083      	str	r3, [r0, #8]
 801679a:	4770      	bx	lr

0801679c <timer_master_slave_mode_config>:
 801679c:	b921      	cbnz	r1, 80167a8 <timer_master_slave_mode_config+0xc>
 801679e:	6883      	ldr	r3, [r0, #8]
 80167a0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80167a4:	6083      	str	r3, [r0, #8]
 80167a6:	4770      	bx	lr
 80167a8:	2901      	cmp	r1, #1
 80167aa:	d1fc      	bne.n	80167a6 <timer_master_slave_mode_config+0xa>
 80167ac:	6883      	ldr	r3, [r0, #8]
 80167ae:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80167b2:	e7f7      	b.n	80167a4 <timer_master_slave_mode_config+0x8>

080167b4 <timer_interrupt_enable>:
 80167b4:	68c3      	ldr	r3, [r0, #12]
 80167b6:	430b      	orrs	r3, r1
 80167b8:	60c3      	str	r3, [r0, #12]
 80167ba:	4770      	bx	lr

080167bc <timer_interrupt_flag_clear>:
 80167bc:	43c9      	mvns	r1, r1
 80167be:	6101      	str	r1, [r0, #16]
 80167c0:	4770      	bx	lr
	...

080167c4 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 80167c4:	b110      	cbz	r0, 80167cc <bkp_data_write(bkp_data_register_enum, unsigned short)+0x8>
 80167c6:	2801      	cmp	r0, #1
 80167c8:	d004      	beq.n	80167d4 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x10>
 80167ca:	4770      	bx	lr
 80167cc:	4b03      	ldr	r3, [pc, #12]	@ (80167dc <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 80167ce:	f8c3 1850 	str.w	r1, [r3, #2128]	@ 0x850
 80167d2:	4770      	bx	lr
 80167d4:	4b01      	ldr	r3, [pc, #4]	@ (80167dc <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 80167d6:	f8c3 1854 	str.w	r1, [r3, #2132]	@ 0x854
 80167da:	4770      	bx	lr
 80167dc:	40002000 	andmi	r2, r0, r0

080167e0 <bkp_data_read(bkp_data_register_enum)>:
 80167e0:	b118      	cbz	r0, 80167ea <bkp_data_read(bkp_data_register_enum)+0xa>
 80167e2:	2801      	cmp	r0, #1
 80167e4:	d006      	beq.n	80167f4 <bkp_data_read(bkp_data_register_enum)+0x14>
 80167e6:	2000      	movs	r0, #0
 80167e8:	4770      	bx	lr
 80167ea:	4b04      	ldr	r3, [pc, #16]	@ (80167fc <bkp_data_read(bkp_data_register_enum)+0x1c>)
 80167ec:	f8d3 0850 	ldr.w	r0, [r3, #2128]	@ 0x850
 80167f0:	b280      	uxth	r0, r0
 80167f2:	4770      	bx	lr
 80167f4:	4b01      	ldr	r3, [pc, #4]	@ (80167fc <bkp_data_read(bkp_data_register_enum)+0x1c>)
 80167f6:	f8d3 0854 	ldr.w	r0, [r3, #2132]	@ 0x854
 80167fa:	e7f9      	b.n	80167f0 <bkp_data_read(bkp_data_register_enum)+0x10>
 80167fc:	40002000 	andmi	r2, r0, r0

08016800 <mac_address_get(unsigned char*)>:
 8016800:	4a07      	ldr	r2, [pc, #28]	@ (8016820 <mac_address_get(unsigned char*)+0x20>)
 8016802:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8016806:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	@ 0xa14
 801680a:	7042      	strb	r2, [r0, #1]
 801680c:	0e1a      	lsrs	r2, r3, #24
 801680e:	7082      	strb	r2, [r0, #2]
 8016810:	0c1a      	lsrs	r2, r3, #16
 8016812:	2102      	movs	r1, #2
 8016814:	70c2      	strb	r2, [r0, #3]
 8016816:	0a1a      	lsrs	r2, r3, #8
 8016818:	7001      	strb	r1, [r0, #0]
 801681a:	7102      	strb	r2, [r0, #4]
 801681c:	7143      	strb	r3, [r0, #5]
 801681e:	4770      	bx	lr
 8016820:	1fff7000 	svcne	0x00ff7000

08016824 <TIMER6_IRQHandler>:
 8016824:	4b06      	ldr	r3, [pc, #24]	@ (8016840 <TIMER6_IRQHandler+0x1c>)
 8016826:	f8d3 3410 	ldr.w	r3, [r3, #1040]	@ 0x410
 801682a:	07da      	lsls	r2, r3, #31
 801682c:	bf41      	itttt	mi
 801682e:	4905      	ldrmi	r1, [pc, #20]	@ (8016844 <TIMER6_IRQHandler+0x20>)
 8016830:	684a      	ldrmi	r2, [r1, #4]
 8016832:	3201      	addmi	r2, #1
 8016834:	604a      	strmi	r2, [r1, #4]
 8016836:	4a02      	ldr	r2, [pc, #8]	@ (8016840 <TIMER6_IRQHandler+0x1c>)
 8016838:	43db      	mvns	r3, r3
 801683a:	f8c2 3410 	str.w	r3, [r2, #1040]	@ 0x410
 801683e:	4770      	bx	lr
 8016840:	40001000 	andmi	r1, r0, r0
 8016844:	2001a6a8 	andcs	sl, r1, r8, lsr #13

08016848 <timer6_config()>:
 8016848:	b530      	push	{r4, r5, lr}
 801684a:	4b19      	ldr	r3, [pc, #100]	@ (80168b0 <timer6_config()+0x68>)
 801684c:	4c19      	ldr	r4, [pc, #100]	@ (80168b4 <timer6_config()+0x6c>)
 801684e:	b085      	sub	sp, #20
 8016850:	2500      	movs	r5, #0
 8016852:	f241 0005 	movw	r0, #4101	@ 0x1005
 8016856:	605d      	str	r5, [r3, #4]
 8016858:	f7ff fc9c 	bl	8016194 <rcu_periph_clock_enable>
 801685c:	4620      	mov	r0, r4
 801685e:	f7ff fd55 	bl	801630c <timer_deinit>
 8016862:	4668      	mov	r0, sp
 8016864:	f7ff fdf8 	bl	8016458 <timer_struct_para_init>
 8016868:	f645 52bf 	movw	r2, #23999	@ 0x5dbf
 801686c:	f242 730f 	movw	r3, #9999	@ 0x270f
 8016870:	4669      	mov	r1, sp
 8016872:	4620      	mov	r0, r4
 8016874:	f8ad 2000 	strh.w	r2, [sp]
 8016878:	9302      	str	r3, [sp, #8]
 801687a:	f7ff fdf5 	bl	8016468 <timer_init>
 801687e:	4629      	mov	r1, r5
 8016880:	4620      	mov	r0, r4
 8016882:	f7ff fe2a 	bl	80164da <timer_counter_value_config>
 8016886:	4620      	mov	r0, r4
 8016888:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 801688c:	f7ff ff96 	bl	80167bc <timer_interrupt_flag_clear>
 8016890:	2101      	movs	r1, #1
 8016892:	4620      	mov	r0, r4
 8016894:	f7ff ff8e 	bl	80167b4 <timer_interrupt_enable>
 8016898:	4b07      	ldr	r3, [pc, #28]	@ (80168b8 <timer6_config()+0x70>)
 801689a:	22f0      	movs	r2, #240	@ 0xf0
 801689c:	f883 2337 	strb.w	r2, [r3, #823]	@ 0x337
 80168a0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80168a4:	605a      	str	r2, [r3, #4]
 80168a6:	4620      	mov	r0, r4
 80168a8:	f7ff fe12 	bl	80164d0 <timer_enable>
 80168ac:	b005      	add	sp, #20
 80168ae:	bd30      	pop	{r4, r5, pc}
 80168b0:	2001a6a8 	andcs	sl, r1, r8, lsr #13
 80168b4:	40001400 	andmi	r1, r0, r0, lsl #8
 80168b8:	e000e100 	and	lr, r0, r0, lsl #2

080168bc <udelay_init()>:
 80168bc:	4a07      	ldr	r2, [pc, #28]	@ (80168dc <udelay_init()+0x20>)
 80168be:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 80168c2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80168c6:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
 80168ca:	4b05      	ldr	r3, [pc, #20]	@ (80168e0 <udelay_init()+0x24>)
 80168cc:	2200      	movs	r2, #0
 80168ce:	605a      	str	r2, [r3, #4]
 80168d0:	681a      	ldr	r2, [r3, #0]
 80168d2:	f042 0201 	orr.w	r2, r2, #1
 80168d6:	601a      	str	r2, [r3, #0]
 80168d8:	4770      	bx	lr
 80168da:	bf00      	nop
 80168dc:	e000ed00 	and	lr, r0, r0, lsl #26
 80168e0:	e0001000 	and	r1, r0, r0

080168e4 <udelay(unsigned long, unsigned long)>:
 80168e4:	23f0      	movs	r3, #240	@ 0xf0
 80168e6:	b530      	push	{r4, r5, lr}
 80168e8:	4358      	muls	r0, r3
 80168ea:	b909      	cbnz	r1, 80168f0 <udelay(unsigned long, unsigned long)+0xc>
 80168ec:	4b08      	ldr	r3, [pc, #32]	@ (8016910 <udelay(unsigned long, unsigned long)+0x2c>)
 80168ee:	6859      	ldr	r1, [r3, #4]
 80168f0:	4c07      	ldr	r4, [pc, #28]	@ (8016910 <udelay(unsigned long, unsigned long)+0x2c>)
 80168f2:	2300      	movs	r3, #0
 80168f4:	6862      	ldr	r2, [r4, #4]
 80168f6:	4291      	cmp	r1, r2
 80168f8:	d0fc      	beq.n	80168f4 <udelay(unsigned long, unsigned long)+0x10>
 80168fa:	bf2a      	itet	cs
 80168fc:	f102 35ff 	addcs.w	r5, r2, #4294967295	@ 0xffffffff
 8016900:	189b      	addcc	r3, r3, r2
 8016902:	195b      	addcs	r3, r3, r5
 8016904:	1a5b      	subs	r3, r3, r1
 8016906:	4283      	cmp	r3, r0
 8016908:	d300      	bcc.n	801690c <udelay(unsigned long, unsigned long)+0x28>
 801690a:	bd30      	pop	{r4, r5, pc}
 801690c:	4611      	mov	r1, r2
 801690e:	e7f1      	b.n	80168f4 <udelay(unsigned long, unsigned long)+0x10>
 8016910:	e0001000 	and	r1, r0, r0

08016914 <systick_config>:
 8016914:	4b0c      	ldr	r3, [pc, #48]	@ (8016948 <systick_config+0x34>)
 8016916:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 801691a:	681b      	ldr	r3, [r3, #0]
 801691c:	fbb3 f3f2 	udiv	r3, r3, r2
 8016920:	3b01      	subs	r3, #1
 8016922:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8016926:	d20d      	bcs.n	8016944 <systick_config+0x30>
 8016928:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 801692c:	21f0      	movs	r1, #240	@ 0xf0
 801692e:	6153      	str	r3, [r2, #20]
 8016930:	4b06      	ldr	r3, [pc, #24]	@ (801694c <systick_config+0x38>)
 8016932:	2000      	movs	r0, #0
 8016934:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8016938:	6190      	str	r0, [r2, #24]
 801693a:	2007      	movs	r0, #7
 801693c:	6110      	str	r0, [r2, #16]
 801693e:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8016942:	4770      	bx	lr
 8016944:	e7fe      	b.n	8016944 <systick_config+0x30>
 8016946:	bf00      	nop
 8016948:	20000000 	andcs	r0, r0, r0
 801694c:	e000ed00 	and	lr, r0, r0, lsl #26

08016950 <SysTick_Handler>:
 8016950:	4a02      	ldr	r2, [pc, #8]	@ (801695c <SysTick_Handler+0xc>)
 8016952:	6813      	ldr	r3, [r2, #0]
 8016954:	3301      	adds	r3, #1
 8016956:	6013      	str	r3, [r2, #0]
 8016958:	4770      	bx	lr
 801695a:	bf00      	nop
 801695c:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0

08016960 <gd32_adc_init()>:
 8016960:	b510      	push	{r4, lr}
 8016962:	f241 1008 	movw	r0, #4360	@ 0x1108
 8016966:	4c24      	ldr	r4, [pc, #144]	@ (80169f8 <gd32_adc_init()+0x98>)
 8016968:	f7ff fc14 	bl	8016194 <rcu_periph_clock_enable>
 801696c:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 8016970:	f000 fa22 	bl	8016db8 <adc_clock_config>
 8016974:	4620      	mov	r0, r4
 8016976:	2203      	movs	r2, #3
 8016978:	2102      	movs	r1, #2
 801697a:	f000 fa9f 	bl	8016ebc <adc_channel_length_config>
 801697e:	4620      	mov	r0, r4
 8016980:	2306      	movs	r3, #6
 8016982:	2210      	movs	r2, #16
 8016984:	2100      	movs	r1, #0
 8016986:	f000 fab6 	bl	8016ef6 <adc_inserted_channel_config>
 801698a:	4620      	mov	r0, r4
 801698c:	2306      	movs	r3, #6
 801698e:	2211      	movs	r2, #17
 8016990:	2101      	movs	r1, #1
 8016992:	f000 fab0 	bl	8016ef6 <adc_inserted_channel_config>
 8016996:	2306      	movs	r3, #6
 8016998:	4620      	mov	r0, r4
 801699a:	2212      	movs	r2, #18
 801699c:	2102      	movs	r1, #2
 801699e:	f000 faaa 	bl	8016ef6 <adc_inserted_channel_config>
 80169a2:	2200      	movs	r2, #0
 80169a4:	4620      	mov	r0, r4
 80169a6:	2102      	movs	r1, #2
 80169a8:	f000 fad5 	bl	8016f56 <adc_external_trigger_config>
 80169ac:	4620      	mov	r0, r4
 80169ae:	2100      	movs	r1, #0
 80169b0:	f000 fa3a 	bl	8016e28 <adc_data_alignment_config>
 80169b4:	2201      	movs	r2, #1
 80169b6:	4620      	mov	r0, r4
 80169b8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80169bc:	f000 fa0c 	bl	8016dd8 <adc_special_function_config>
 80169c0:	2101      	movs	r1, #1
 80169c2:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 80169c6:	f000 fa51 	bl	8016e6c <adc_channel_16_to_18>
 80169ca:	2101      	movs	r1, #1
 80169cc:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 80169d0:	f000 fa4c 	bl	8016e6c <adc_channel_16_to_18>
 80169d4:	4620      	mov	r0, r4
 80169d6:	f000 fa30 	bl	8016e3a <adc_enable>
 80169da:	2100      	movs	r1, #0
 80169dc:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80169e0:	f7ff ff80 	bl	80168e4 <udelay(unsigned long, unsigned long)>
 80169e4:	4620      	mov	r0, r4
 80169e6:	f000 fa30 	bl	8016e4a <adc_calibration_enable>
 80169ea:	4620      	mov	r0, r4
 80169ec:	2102      	movs	r1, #2
 80169ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80169f2:	f000 bac6 	b.w	8016f82 <adc_software_trigger_enable>
 80169f6:	bf00      	nop
 80169f8:	40012000 	andmi	r2, r1, r0

080169fc <dma::memcpy32_init()>:
 80169fc:	b510      	push	{r4, lr}
 80169fe:	4c14      	ldr	r4, [pc, #80]	@ (8016a50 <dma::memcpy32_init()+0x54>)
 8016a00:	b08e      	sub	sp, #56	@ 0x38
 8016a02:	f640 4016 	movw	r0, #3094	@ 0xc16
 8016a06:	f7ff fbc5 	bl	8016194 <rcu_periph_clock_enable>
 8016a0a:	4620      	mov	r0, r4
 8016a0c:	2100      	movs	r1, #0
 8016a0e:	f7fe ffa5 	bl	801595c <dma_deinit>
 8016a12:	2100      	movs	r1, #0
 8016a14:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8016a18:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8016a1c:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8016a20:	e9cd 3105 	strd	r3, r1, [sp, #20]
 8016a24:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8016a28:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 8016a2c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016a30:	2003      	movs	r0, #3
 8016a32:	2301      	movs	r3, #1
 8016a34:	e9cd 0309 	strd	r0, r3, [sp, #36]	@ 0x24
 8016a38:	2380      	movs	r3, #128	@ 0x80
 8016a3a:	e9cd 310b 	strd	r3, r1, [sp, #44]	@ 0x2c
 8016a3e:	aa01      	add	r2, sp, #4
 8016a40:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8016a44:	4620      	mov	r0, r4
 8016a46:	930d      	str	r3, [sp, #52]	@ 0x34
 8016a48:	f7ff f800 	bl	8015a4c <dma_multi_data_mode_init>
 8016a4c:	b00e      	add	sp, #56	@ 0x38
 8016a4e:	bd10      	pop	{r4, pc}
 8016a50:	40026400 	andmi	r6, r2, r0, lsl #8

08016a54 <send_stop() [clone .isra.0]>:
 8016a54:	b508      	push	{r3, lr}
 8016a56:	4806      	ldr	r0, [pc, #24]	@ (8016a70 <send_stop() [clone .isra.0]+0x1c>)
 8016a58:	f000 fb22 	bl	80170a0 <i2c_stop_on_bus>
 8016a5c:	4905      	ldr	r1, [pc, #20]	@ (8016a74 <send_stop() [clone .isra.0]+0x20>)
 8016a5e:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8016a62:	f8d1 2400 	ldr.w	r2, [r1, #1024]	@ 0x400
 8016a66:	0592      	lsls	r2, r2, #22
 8016a68:	d501      	bpl.n	8016a6e <send_stop() [clone .isra.0]+0x1a>
 8016a6a:	3b01      	subs	r3, #1
 8016a6c:	d1f9      	bne.n	8016a62 <send_stop() [clone .isra.0]+0xe>
 8016a6e:	bd08      	pop	{r3, pc}
 8016a70:	40005400 	andmi	r5, r0, r0, lsl #8
 8016a74:	40005000 	andmi	r5, r0, r0

08016a78 <gd32_i2c_begin>:
 8016a78:	b510      	push	{r4, lr}
 8016a7a:	f241 0015 	movw	r0, #4117	@ 0x1015
 8016a7e:	4c22      	ldr	r4, [pc, #136]	@ (8016b08 <gd32_i2c_begin+0x90>)
 8016a80:	f7ff fb88 	bl	8016194 <rcu_periph_clock_enable>
 8016a84:	f640 4001 	movw	r0, #3073	@ 0xc01
 8016a88:	f7ff fb84 	bl	8016194 <rcu_periph_clock_enable>
 8016a8c:	f640 4001 	movw	r0, #3073	@ 0xc01
 8016a90:	f7ff fb80 	bl	8016194 <rcu_periph_clock_enable>
 8016a94:	4620      	mov	r0, r4
 8016a96:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016a9a:	2104      	movs	r1, #4
 8016a9c:	f7ff fb36 	bl	801610c <gpio_af_set>
 8016aa0:	4620      	mov	r0, r4
 8016aa2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8016aa6:	2201      	movs	r2, #1
 8016aa8:	2102      	movs	r1, #2
 8016aaa:	f7ff faf1 	bl	8016090 <gpio_mode_set>
 8016aae:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8016ab2:	4620      	mov	r0, r4
 8016ab4:	2202      	movs	r2, #2
 8016ab6:	2101      	movs	r1, #1
 8016ab8:	f7ff fb0c 	bl	80160d4 <gpio_output_options_set>
 8016abc:	4620      	mov	r0, r4
 8016abe:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8016ac2:	2104      	movs	r1, #4
 8016ac4:	f7ff fb22 	bl	801610c <gpio_af_set>
 8016ac8:	4620      	mov	r0, r4
 8016aca:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8016ace:	2201      	movs	r2, #1
 8016ad0:	2102      	movs	r1, #2
 8016ad2:	f7ff fadd 	bl	8016090 <gpio_mode_set>
 8016ad6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8016ada:	4620      	mov	r0, r4
 8016adc:	2202      	movs	r2, #2
 8016ade:	f5a4 34d8 	sub.w	r4, r4, #110592	@ 0x1b000
 8016ae2:	2101      	movs	r1, #1
 8016ae4:	f7ff faf6 	bl	80160d4 <gpio_output_options_set>
 8016ae8:	4908      	ldr	r1, [pc, #32]	@ (8016b0c <gd32_i2c_begin+0x94>)
 8016aea:	4620      	mov	r0, r4
 8016aec:	2200      	movs	r2, #0
 8016aee:	f000 fa57 	bl	8016fa0 <i2c_clock_config>
 8016af2:	4620      	mov	r0, r4
 8016af4:	f000 faca 	bl	801708c <i2c_enable>
 8016af8:	4620      	mov	r0, r4
 8016afa:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8016afe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016b02:	f000 baaf 	b.w	8017064 <i2c_ack_config>
 8016b06:	bf00      	nop
 8016b08:	40020400 	andmi	r0, r2, r0, lsl #8
 8016b0c:	00061a80 	andeq	r1, r6, r0, lsl #21

08016b10 <gd32_i2c_set_baudrate>:
 8016b10:	4601      	mov	r1, r0
 8016b12:	2200      	movs	r2, #0
 8016b14:	4801      	ldr	r0, [pc, #4]	@ (8016b1c <gd32_i2c_set_baudrate+0xc>)
 8016b16:	f000 ba43 	b.w	8016fa0 <i2c_clock_config>
 8016b1a:	bf00      	nop
 8016b1c:	40005400 	andmi	r5, r0, r0, lsl #8

08016b20 <gd32_i2c_set_address>:
 8016b20:	4b01      	ldr	r3, [pc, #4]	@ (8016b28 <gd32_i2c_set_address+0x8>)
 8016b22:	0040      	lsls	r0, r0, #1
 8016b24:	7018      	strb	r0, [r3, #0]
 8016b26:	4770      	bx	lr
 8016b28:	2001a6b4 			@ <UNDEFINED> instruction: 0x2001a6b4

08016b2c <gd32_i2c_write>:
 8016b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016b2e:	4f30      	ldr	r7, [pc, #192]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b30:	4604      	mov	r4, r0
 8016b32:	460d      	mov	r5, r1
 8016b34:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8016b38:	f240 6101 	movw	r1, #1537	@ 0x601
 8016b3c:	4638      	mov	r0, r7
 8016b3e:	f000 fab9 	bl	80170b4 <i2c_flag_get>
 8016b42:	bb90      	cbnz	r0, 8016baa <gd32_i2c_write+0x7e>
 8016b44:	482a      	ldr	r0, [pc, #168]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b46:	4f2a      	ldr	r7, [pc, #168]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b48:	f000 faa5 	bl	8017096 <i2c_start_on_bus>
 8016b4c:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8016b50:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8016b54:	4638      	mov	r0, r7
 8016b56:	f000 faad 	bl	80170b4 <i2c_flag_get>
 8016b5a:	b370      	cbz	r0, 8016bba <gd32_i2c_write+0x8e>
 8016b5c:	4b25      	ldr	r3, [pc, #148]	@ (8016bf4 <gd32_i2c_write+0xc8>)
 8016b5e:	4824      	ldr	r0, [pc, #144]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b60:	7819      	ldrb	r1, [r3, #0]
 8016b62:	4f23      	ldr	r7, [pc, #140]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b64:	f06f 0201 	mvn.w	r2, #1
 8016b68:	f000 fa88 	bl	801707c <i2c_master_addressing>
 8016b6c:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8016b70:	f240 5101 	movw	r1, #1281	@ 0x501
 8016b74:	4638      	mov	r0, r7
 8016b76:	f000 fa9d 	bl	80170b4 <i2c_flag_get>
 8016b7a:	b308      	cbz	r0, 8016bc0 <gd32_i2c_write+0x94>
 8016b7c:	481c      	ldr	r0, [pc, #112]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b7e:	4f1c      	ldr	r7, [pc, #112]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b80:	f240 5101 	movw	r1, #1281	@ 0x501
 8016b84:	f000 fa9e 	bl	80170c4 <i2c_flag_clear>
 8016b88:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8016b8c:	f240 5107 	movw	r1, #1287	@ 0x507
 8016b90:	4638      	mov	r0, r7
 8016b92:	f000 fa8f 	bl	80170b4 <i2c_flag_get>
 8016b96:	2801      	cmp	r0, #1
 8016b98:	d115      	bne.n	8016bc6 <gd32_i2c_write+0x9a>
 8016b9a:	4f15      	ldr	r7, [pc, #84]	@ (8016bf0 <gd32_i2c_write+0xc4>)
 8016b9c:	4425      	add	r5, r4
 8016b9e:	42ac      	cmp	r4, r5
 8016ba0:	d114      	bne.n	8016bcc <gd32_i2c_write+0xa0>
 8016ba2:	f7ff ff57 	bl	8016a54 <send_stop() [clone .isra.0]>
 8016ba6:	2000      	movs	r0, #0
 8016ba8:	e005      	b.n	8016bb6 <gd32_i2c_write+0x8a>
 8016baa:	3e01      	subs	r6, #1
 8016bac:	d1c4      	bne.n	8016b38 <gd32_i2c_write+0xc>
 8016bae:	f7ff ff51 	bl	8016a54 <send_stop() [clone .isra.0]>
 8016bb2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016bb6:	4240      	negs	r0, r0
 8016bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016bba:	3e01      	subs	r6, #1
 8016bbc:	d1c8      	bne.n	8016b50 <gd32_i2c_write+0x24>
 8016bbe:	e7f6      	b.n	8016bae <gd32_i2c_write+0x82>
 8016bc0:	3e01      	subs	r6, #1
 8016bc2:	d1d5      	bne.n	8016b70 <gd32_i2c_write+0x44>
 8016bc4:	e7f3      	b.n	8016bae <gd32_i2c_write+0x82>
 8016bc6:	3e01      	subs	r6, #1
 8016bc8:	d1e0      	bne.n	8016b8c <gd32_i2c_write+0x60>
 8016bca:	e7f0      	b.n	8016bae <gd32_i2c_write+0x82>
 8016bcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8016bd0:	4638      	mov	r0, r7
 8016bd2:	f000 fa6a 	bl	80170aa <i2c_data_transmit>
 8016bd6:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8016bda:	f240 5102 	movw	r1, #1282	@ 0x502
 8016bde:	4638      	mov	r0, r7
 8016be0:	f000 fa68 	bl	80170b4 <i2c_flag_get>
 8016be4:	2800      	cmp	r0, #0
 8016be6:	d1da      	bne.n	8016b9e <gd32_i2c_write+0x72>
 8016be8:	3e01      	subs	r6, #1
 8016bea:	d1f6      	bne.n	8016bda <gd32_i2c_write+0xae>
 8016bec:	e7df      	b.n	8016bae <gd32_i2c_write+0x82>
 8016bee:	bf00      	nop
 8016bf0:	40005400 	andmi	r5, r0, r0, lsl #8
 8016bf4:	2001a6b4 			@ <UNDEFINED> instruction: 0x2001a6b4

08016bf8 <gd32_i2c_read>:
 8016bf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016bfc:	4f4e      	ldr	r7, [pc, #312]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016bfe:	4680      	mov	r8, r0
 8016c00:	460c      	mov	r4, r1
 8016c02:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8016c06:	f240 6101 	movw	r1, #1537	@ 0x601
 8016c0a:	4638      	mov	r0, r7
 8016c0c:	f000 fa52 	bl	80170b4 <i2c_flag_get>
 8016c10:	4606      	mov	r6, r0
 8016c12:	bb10      	cbnz	r0, 8016c5a <gd32_i2c_read+0x62>
 8016c14:	2c02      	cmp	r4, #2
 8016c16:	d104      	bne.n	8016c22 <gd32_i2c_read+0x2a>
 8016c18:	4847      	ldr	r0, [pc, #284]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c1a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8016c1e:	f000 fa27 	bl	8017070 <i2c_ackpos_config>
 8016c22:	4845      	ldr	r0, [pc, #276]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c24:	4f44      	ldr	r7, [pc, #272]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c26:	f000 fa36 	bl	8017096 <i2c_start_on_bus>
 8016c2a:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8016c2e:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8016c32:	4638      	mov	r0, r7
 8016c34:	f000 fa3e 	bl	80170b4 <i2c_flag_get>
 8016c38:	b1b8      	cbz	r0, 8016c6a <gd32_i2c_read+0x72>
 8016c3a:	4b40      	ldr	r3, [pc, #256]	@ (8016d3c <gd32_i2c_read+0x144>)
 8016c3c:	483e      	ldr	r0, [pc, #248]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c3e:	7819      	ldrb	r1, [r3, #0]
 8016c40:	2201      	movs	r2, #1
 8016c42:	f000 fa1b 	bl	801707c <i2c_master_addressing>
 8016c46:	2c02      	cmp	r4, #2
 8016c48:	d803      	bhi.n	8016c52 <gd32_i2c_read+0x5a>
 8016c4a:	483b      	ldr	r0, [pc, #236]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c4c:	2100      	movs	r1, #0
 8016c4e:	f000 fa09 	bl	8017064 <i2c_ack_config>
 8016c52:	4f39      	ldr	r7, [pc, #228]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c54:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8016c58:	e00c      	b.n	8016c74 <gd32_i2c_read+0x7c>
 8016c5a:	3d01      	subs	r5, #1
 8016c5c:	d1d3      	bne.n	8016c06 <gd32_i2c_read+0xe>
 8016c5e:	f7ff fef9 	bl	8016a54 <send_stop() [clone .isra.0]>
 8016c62:	2604      	movs	r6, #4
 8016c64:	4630      	mov	r0, r6
 8016c66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016c6a:	3d01      	subs	r5, #1
 8016c6c:	d1df      	bne.n	8016c2e <gd32_i2c_read+0x36>
 8016c6e:	e7f6      	b.n	8016c5e <gd32_i2c_read+0x66>
 8016c70:	3d01      	subs	r5, #1
 8016c72:	d0f4      	beq.n	8016c5e <gd32_i2c_read+0x66>
 8016c74:	f240 5101 	movw	r1, #1281	@ 0x501
 8016c78:	4638      	mov	r0, r7
 8016c7a:	f000 fa1b 	bl	80170b4 <i2c_flag_get>
 8016c7e:	2800      	cmp	r0, #0
 8016c80:	d0f6      	beq.n	8016c70 <gd32_i2c_read+0x78>
 8016c82:	482d      	ldr	r0, [pc, #180]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c84:	f240 5101 	movw	r1, #1281	@ 0x501
 8016c88:	f000 fa1c 	bl	80170c4 <i2c_flag_clear>
 8016c8c:	2c01      	cmp	r4, #1
 8016c8e:	d102      	bne.n	8016c96 <gd32_i2c_read+0x9e>
 8016c90:	4829      	ldr	r0, [pc, #164]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c92:	f000 fa05 	bl	80170a0 <i2c_stop_on_bus>
 8016c96:	4d28      	ldr	r5, [pc, #160]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016c98:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8016c9c:	e022      	b.n	8016ce4 <gd32_i2c_read+0xec>
 8016c9e:	2c03      	cmp	r4, #3
 8016ca0:	d134      	bne.n	8016d0c <gd32_i2c_read+0x114>
 8016ca2:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8016ca6:	e002      	b.n	8016cae <gd32_i2c_read+0xb6>
 8016ca8:	f1b9 0901 	subs.w	r9, r9, #1
 8016cac:	d0d7      	beq.n	8016c5e <gd32_i2c_read+0x66>
 8016cae:	f240 5102 	movw	r1, #1282	@ 0x502
 8016cb2:	4628      	mov	r0, r5
 8016cb4:	f000 f9fe 	bl	80170b4 <i2c_flag_get>
 8016cb8:	2800      	cmp	r0, #0
 8016cba:	d0f5      	beq.n	8016ca8 <gd32_i2c_read+0xb0>
 8016cbc:	2100      	movs	r1, #0
 8016cbe:	4628      	mov	r0, r5
 8016cc0:	f000 f9d0 	bl	8017064 <i2c_ack_config>
 8016cc4:	f240 5106 	movw	r1, #1286	@ 0x506
 8016cc8:	4628      	mov	r0, r5
 8016cca:	f000 f9f3 	bl	80170b4 <i2c_flag_get>
 8016cce:	b138      	cbz	r0, 8016ce0 <gd32_i2c_read+0xe8>
 8016cd0:	4628      	mov	r0, r5
 8016cd2:	f000 f9ec 	bl	80170ae <i2c_data_receive>
 8016cd6:	f808 0b01 	strb.w	r0, [r8], #1
 8016cda:	3c01      	subs	r4, #1
 8016cdc:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8016ce0:	3f01      	subs	r7, #1
 8016ce2:	d0bc      	beq.n	8016c5e <gd32_i2c_read+0x66>
 8016ce4:	2c00      	cmp	r4, #0
 8016ce6:	d1da      	bne.n	8016c9e <gd32_i2c_read+0xa6>
 8016ce8:	4a15      	ldr	r2, [pc, #84]	@ (8016d40 <gd32_i2c_read+0x148>)
 8016cea:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8016cee:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 8016cf2:	f414 7400 	ands.w	r4, r4, #512	@ 0x200
 8016cf6:	d11c      	bne.n	8016d32 <gd32_i2c_read+0x13a>
 8016cf8:	480f      	ldr	r0, [pc, #60]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016cfa:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8016cfe:	f000 f9b1 	bl	8017064 <i2c_ack_config>
 8016d02:	480d      	ldr	r0, [pc, #52]	@ (8016d38 <gd32_i2c_read+0x140>)
 8016d04:	4621      	mov	r1, r4
 8016d06:	f000 f9b3 	bl	8017070 <i2c_ackpos_config>
 8016d0a:	e7ab      	b.n	8016c64 <gd32_i2c_read+0x6c>
 8016d0c:	2c02      	cmp	r4, #2
 8016d0e:	d1d9      	bne.n	8016cc4 <gd32_i2c_read+0xcc>
 8016d10:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8016d14:	e002      	b.n	8016d1c <gd32_i2c_read+0x124>
 8016d16:	f1b9 0901 	subs.w	r9, r9, #1
 8016d1a:	d0a0      	beq.n	8016c5e <gd32_i2c_read+0x66>
 8016d1c:	f240 5102 	movw	r1, #1282	@ 0x502
 8016d20:	4628      	mov	r0, r5
 8016d22:	f000 f9c7 	bl	80170b4 <i2c_flag_get>
 8016d26:	2800      	cmp	r0, #0
 8016d28:	d0f5      	beq.n	8016d16 <gd32_i2c_read+0x11e>
 8016d2a:	4628      	mov	r0, r5
 8016d2c:	f000 f9b8 	bl	80170a0 <i2c_stop_on_bus>
 8016d30:	e7c8      	b.n	8016cc4 <gd32_i2c_read+0xcc>
 8016d32:	3b01      	subs	r3, #1
 8016d34:	d1db      	bne.n	8016cee <gd32_i2c_read+0xf6>
 8016d36:	e794      	b.n	8016c62 <gd32_i2c_read+0x6a>
 8016d38:	40005400 	andmi	r5, r0, r0, lsl #8
 8016d3c:	2001a6b4 			@ <UNDEFINED> instruction: 0x2001a6b4
 8016d40:	40005000 	andmi	r5, r0, r0

08016d44 <uart0_init>:
 8016d44:	b507      	push	{r0, r1, r2, lr}
 8016d46:	2301      	movs	r3, #1
 8016d48:	9300      	str	r3, [sp, #0]
 8016d4a:	4805      	ldr	r0, [pc, #20]	@ (8016d60 <uart0_init+0x1c>)
 8016d4c:	2300      	movs	r3, #0
 8016d4e:	2208      	movs	r2, #8
 8016d50:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8016d54:	f000 faae 	bl	80172b4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 8016d58:	b003      	add	sp, #12
 8016d5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8016d5e:	bf00      	nop
 8016d60:	40011000 	andmi	r1, r1, r0

08016d64 <uart0_putc>:
 8016d64:	280a      	cmp	r0, #10
 8016d66:	b570      	push	{r4, r5, r6, lr}
 8016d68:	4d0a      	ldr	r5, [pc, #40]	@ (8016d94 <uart0_putc+0x30>)
 8016d6a:	4604      	mov	r4, r0
 8016d6c:	d107      	bne.n	8016d7e <uart0_putc+0x1a>
 8016d6e:	2107      	movs	r1, #7
 8016d70:	4628      	mov	r0, r5
 8016d72:	f000 fa97 	bl	80172a4 <usart_flag_get>
 8016d76:	2800      	cmp	r0, #0
 8016d78:	d0f9      	beq.n	8016d6e <uart0_putc+0xa>
 8016d7a:	230d      	movs	r3, #13
 8016d7c:	606b      	str	r3, [r5, #4]
 8016d7e:	4e05      	ldr	r6, [pc, #20]	@ (8016d94 <uart0_putc+0x30>)
 8016d80:	2107      	movs	r1, #7
 8016d82:	4630      	mov	r0, r6
 8016d84:	f000 fa8e 	bl	80172a4 <usart_flag_get>
 8016d88:	2800      	cmp	r0, #0
 8016d8a:	d0f9      	beq.n	8016d80 <uart0_putc+0x1c>
 8016d8c:	b2e4      	uxtb	r4, r4
 8016d8e:	606c      	str	r4, [r5, #4]
 8016d90:	bd70      	pop	{r4, r5, r6, pc}
 8016d92:	bf00      	nop
 8016d94:	40011000 	andmi	r1, r1, r0

08016d98 <uart0_puts>:
 8016d98:	b510      	push	{r4, lr}
 8016d9a:	1e44      	subs	r4, r0, #1
 8016d9c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8016da0:	b903      	cbnz	r3, 8016da4 <uart0_puts+0xc>
 8016da2:	bd10      	pop	{r4, pc}
 8016da4:	2b0a      	cmp	r3, #10
 8016da6:	d102      	bne.n	8016dae <uart0_puts+0x16>
 8016da8:	200d      	movs	r0, #13
 8016daa:	f7ff ffdb 	bl	8016d64 <uart0_putc>
 8016dae:	7820      	ldrb	r0, [r4, #0]
 8016db0:	f7ff ffd8 	bl	8016d64 <uart0_putc>
 8016db4:	e7f2      	b.n	8016d9c <uart0_puts+0x4>
	...

08016db8 <adc_clock_config>:
 8016db8:	4b06      	ldr	r3, [pc, #24]	@ (8016dd4 <adc_clock_config+0x1c>)
 8016dba:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8016dbe:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8016dc2:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8016dc6:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8016dca:	4302      	orrs	r2, r0
 8016dcc:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8016dd0:	4770      	bx	lr
 8016dd2:	bf00      	nop
 8016dd4:	40012000 	andmi	r2, r1, r0

08016dd8 <adc_special_function_config>:
 8016dd8:	b510      	push	{r4, lr}
 8016dda:	f401 7380 	and.w	r3, r1, #256	@ 0x100
 8016dde:	f401 6480 	and.w	r4, r1, #1024	@ 0x400
 8016de2:	f001 0102 	and.w	r1, r1, #2
 8016de6:	b17a      	cbz	r2, 8016e08 <adc_special_function_config+0x30>
 8016de8:	b11b      	cbz	r3, 8016df2 <adc_special_function_config+0x1a>
 8016dea:	6843      	ldr	r3, [r0, #4]
 8016dec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8016df0:	6043      	str	r3, [r0, #4]
 8016df2:	b11c      	cbz	r4, 8016dfc <adc_special_function_config+0x24>
 8016df4:	6843      	ldr	r3, [r0, #4]
 8016df6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8016dfa:	6043      	str	r3, [r0, #4]
 8016dfc:	b119      	cbz	r1, 8016e06 <adc_special_function_config+0x2e>
 8016dfe:	6883      	ldr	r3, [r0, #8]
 8016e00:	f043 0302 	orr.w	r3, r3, #2
 8016e04:	6083      	str	r3, [r0, #8]
 8016e06:	bd10      	pop	{r4, pc}
 8016e08:	b11b      	cbz	r3, 8016e12 <adc_special_function_config+0x3a>
 8016e0a:	6843      	ldr	r3, [r0, #4]
 8016e0c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8016e10:	6043      	str	r3, [r0, #4]
 8016e12:	b11c      	cbz	r4, 8016e1c <adc_special_function_config+0x44>
 8016e14:	6843      	ldr	r3, [r0, #4]
 8016e16:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8016e1a:	6043      	str	r3, [r0, #4]
 8016e1c:	2900      	cmp	r1, #0
 8016e1e:	d0f2      	beq.n	8016e06 <adc_special_function_config+0x2e>
 8016e20:	6883      	ldr	r3, [r0, #8]
 8016e22:	f023 0302 	bic.w	r3, r3, #2
 8016e26:	e7ed      	b.n	8016e04 <adc_special_function_config+0x2c>

08016e28 <adc_data_alignment_config>:
 8016e28:	6883      	ldr	r3, [r0, #8]
 8016e2a:	b119      	cbz	r1, 8016e34 <adc_data_alignment_config+0xc>
 8016e2c:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8016e30:	6083      	str	r3, [r0, #8]
 8016e32:	4770      	bx	lr
 8016e34:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8016e38:	e7fa      	b.n	8016e30 <adc_data_alignment_config+0x8>

08016e3a <adc_enable>:
 8016e3a:	6883      	ldr	r3, [r0, #8]
 8016e3c:	07db      	lsls	r3, r3, #31
 8016e3e:	bf5e      	ittt	pl
 8016e40:	6883      	ldrpl	r3, [r0, #8]
 8016e42:	f043 0301 	orrpl.w	r3, r3, #1
 8016e46:	6083      	strpl	r3, [r0, #8]
 8016e48:	4770      	bx	lr

08016e4a <adc_calibration_enable>:
 8016e4a:	6883      	ldr	r3, [r0, #8]
 8016e4c:	f043 0308 	orr.w	r3, r3, #8
 8016e50:	f100 0208 	add.w	r2, r0, #8
 8016e54:	6083      	str	r3, [r0, #8]
 8016e56:	6813      	ldr	r3, [r2, #0]
 8016e58:	0719      	lsls	r1, r3, #28
 8016e5a:	d4fc      	bmi.n	8016e56 <adc_calibration_enable+0xc>
 8016e5c:	6883      	ldr	r3, [r0, #8]
 8016e5e:	f043 0304 	orr.w	r3, r3, #4
 8016e62:	6083      	str	r3, [r0, #8]
 8016e64:	6813      	ldr	r3, [r2, #0]
 8016e66:	075b      	lsls	r3, r3, #29
 8016e68:	d4fc      	bmi.n	8016e64 <adc_calibration_enable+0x1a>
 8016e6a:	4770      	bx	lr

08016e6c <adc_channel_16_to_18>:
 8016e6c:	f400 0380 	and.w	r3, r0, #4194304	@ 0x400000
 8016e70:	f400 0000 	and.w	r0, r0, #8388608	@ 0x800000
 8016e74:	b181      	cbz	r1, 8016e98 <adc_channel_16_to_18+0x2c>
 8016e76:	b133      	cbz	r3, 8016e86 <adc_channel_16_to_18+0x1a>
 8016e78:	4a0f      	ldr	r2, [pc, #60]	@ (8016eb8 <adc_channel_16_to_18+0x4c>)
 8016e7a:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8016e7e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8016e82:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8016e86:	b130      	cbz	r0, 8016e96 <adc_channel_16_to_18+0x2a>
 8016e88:	4a0b      	ldr	r2, [pc, #44]	@ (8016eb8 <adc_channel_16_to_18+0x4c>)
 8016e8a:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8016e8e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8016e92:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8016e96:	4770      	bx	lr
 8016e98:	b133      	cbz	r3, 8016ea8 <adc_channel_16_to_18+0x3c>
 8016e9a:	4a07      	ldr	r2, [pc, #28]	@ (8016eb8 <adc_channel_16_to_18+0x4c>)
 8016e9c:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8016ea0:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8016ea4:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8016ea8:	2800      	cmp	r0, #0
 8016eaa:	d0f4      	beq.n	8016e96 <adc_channel_16_to_18+0x2a>
 8016eac:	4a02      	ldr	r2, [pc, #8]	@ (8016eb8 <adc_channel_16_to_18+0x4c>)
 8016eae:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8016eb2:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8016eb6:	e7ec      	b.n	8016e92 <adc_channel_16_to_18+0x26>
 8016eb8:	40012000 	andmi	r2, r1, r0

08016ebc <adc_channel_length_config>:
 8016ebc:	2901      	cmp	r1, #1
 8016ebe:	d002      	beq.n	8016ec6 <adc_channel_length_config+0xa>
 8016ec0:	2902      	cmp	r1, #2
 8016ec2:	d00c      	beq.n	8016ede <adc_channel_length_config+0x22>
 8016ec4:	4770      	bx	lr
 8016ec6:	3a01      	subs	r2, #1
 8016ec8:	2a0f      	cmp	r2, #15
 8016eca:	d813      	bhi.n	8016ef4 <adc_channel_length_config+0x38>
 8016ecc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8016ece:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8016ed2:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8016ed4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8016ed6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8016eda:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8016edc:	4770      	bx	lr
 8016ede:	3a01      	subs	r2, #1
 8016ee0:	2a03      	cmp	r2, #3
 8016ee2:	d807      	bhi.n	8016ef4 <adc_channel_length_config+0x38>
 8016ee4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8016ee6:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8016eea:	6383      	str	r3, [r0, #56]	@ 0x38
 8016eec:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8016eee:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8016ef2:	6383      	str	r3, [r0, #56]	@ 0x38
 8016ef4:	4770      	bx	lr

08016ef6 <adc_inserted_channel_config>:
 8016ef6:	2903      	cmp	r1, #3
 8016ef8:	b530      	push	{r4, r5, lr}
 8016efa:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8016efc:	d80f      	bhi.n	8016f1e <adc_inserted_channel_config+0x28>
 8016efe:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8016f02:	1a61      	subs	r1, r4, r1
 8016f04:	f06f 0404 	mvn.w	r4, #4
 8016f08:	4361      	muls	r1, r4
 8016f0a:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8016f0c:	310f      	adds	r1, #15
 8016f0e:	241f      	movs	r4, #31
 8016f10:	408c      	lsls	r4, r1
 8016f12:	ea25 0404 	bic.w	r4, r5, r4
 8016f16:	fa02 f101 	lsl.w	r1, r2, r1
 8016f1a:	4321      	orrs	r1, r4
 8016f1c:	6381      	str	r1, [r0, #56]	@ 0x38
 8016f1e:	2a09      	cmp	r2, #9
 8016f20:	d80b      	bhi.n	8016f3a <adc_inserted_channel_config+0x44>
 8016f22:	6901      	ldr	r1, [r0, #16]
 8016f24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f28:	2407      	movs	r4, #7
 8016f2a:	4094      	lsls	r4, r2
 8016f2c:	ea21 0104 	bic.w	r1, r1, r4
 8016f30:	fa03 f202 	lsl.w	r2, r3, r2
 8016f34:	430a      	orrs	r2, r1
 8016f36:	6102      	str	r2, [r0, #16]
 8016f38:	bd30      	pop	{r4, r5, pc}
 8016f3a:	2a12      	cmp	r2, #18
 8016f3c:	d8fc      	bhi.n	8016f38 <adc_inserted_channel_config+0x42>
 8016f3e:	3a0a      	subs	r2, #10
 8016f40:	68c1      	ldr	r1, [r0, #12]
 8016f42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f46:	2407      	movs	r4, #7
 8016f48:	4094      	lsls	r4, r2
 8016f4a:	ea21 0104 	bic.w	r1, r1, r4
 8016f4e:	4093      	lsls	r3, r2
 8016f50:	430b      	orrs	r3, r1
 8016f52:	60c3      	str	r3, [r0, #12]
 8016f54:	e7f0      	b.n	8016f38 <adc_inserted_channel_config+0x42>

08016f56 <adc_external_trigger_config>:
 8016f56:	2901      	cmp	r1, #1
 8016f58:	d002      	beq.n	8016f60 <adc_external_trigger_config+0xa>
 8016f5a:	2902      	cmp	r1, #2
 8016f5c:	d009      	beq.n	8016f72 <adc_external_trigger_config+0x1c>
 8016f5e:	4770      	bx	lr
 8016f60:	6883      	ldr	r3, [r0, #8]
 8016f62:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8016f66:	6083      	str	r3, [r0, #8]
 8016f68:	6883      	ldr	r3, [r0, #8]
 8016f6a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8016f6e:	6083      	str	r3, [r0, #8]
 8016f70:	4770      	bx	lr
 8016f72:	6883      	ldr	r3, [r0, #8]
 8016f74:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8016f78:	6083      	str	r3, [r0, #8]
 8016f7a:	6883      	ldr	r3, [r0, #8]
 8016f7c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8016f80:	e7f5      	b.n	8016f6e <adc_external_trigger_config+0x18>

08016f82 <adc_software_trigger_enable>:
 8016f82:	2901      	cmp	r1, #1
 8016f84:	d002      	beq.n	8016f8c <adc_software_trigger_enable+0xa>
 8016f86:	2902      	cmp	r1, #2
 8016f88:	d005      	beq.n	8016f96 <adc_software_trigger_enable+0x14>
 8016f8a:	4770      	bx	lr
 8016f8c:	6883      	ldr	r3, [r0, #8]
 8016f8e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8016f92:	6083      	str	r3, [r0, #8]
 8016f94:	4770      	bx	lr
 8016f96:	6883      	ldr	r3, [r0, #8]
 8016f98:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8016f9c:	e7f9      	b.n	8016f92 <adc_software_trigger_enable+0x10>
	...

08016fa0 <i2c_clock_config>:
 8016fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016fa2:	4605      	mov	r5, r0
 8016fa4:	2002      	movs	r0, #2
 8016fa6:	460c      	mov	r4, r1
 8016fa8:	4617      	mov	r7, r2
 8016faa:	f7ff f92f 	bl	801620c <rcu_clock_freq_get>
 8016fae:	4a29      	ldr	r2, [pc, #164]	@ (8017054 <i2c_clock_config+0xb4>)
 8016fb0:	686e      	ldr	r6, [r5, #4]
 8016fb2:	4603      	mov	r3, r0
 8016fb4:	4828      	ldr	r0, [pc, #160]	@ (8017058 <i2c_clock_config+0xb8>)
 8016fb6:	fbb3 f0f0 	udiv	r0, r3, r0
 8016fba:	4293      	cmp	r3, r2
 8016fbc:	bf34      	ite	cc
 8016fbe:	4601      	movcc	r1, r0
 8016fc0:	213c      	movcs	r1, #60	@ 0x3c
 8016fc2:	4a26      	ldr	r2, [pc, #152]	@ (801705c <i2c_clock_config+0xbc>)
 8016fc4:	f026 063f 	bic.w	r6, r6, #63	@ 0x3f
 8016fc8:	430e      	orrs	r6, r1
 8016fca:	4294      	cmp	r4, r2
 8016fcc:	606e      	str	r6, [r5, #4]
 8016fce:	d816      	bhi.n	8016ffe <i2c_clock_config+0x5e>
 8016fd0:	3001      	adds	r0, #1
 8016fd2:	283b      	cmp	r0, #59	@ 0x3b
 8016fd4:	d90d      	bls.n	8016ff2 <i2c_clock_config+0x52>
 8016fd6:	223c      	movs	r2, #60	@ 0x3c
 8016fd8:	622a      	str	r2, [r5, #32]
 8016fda:	0064      	lsls	r4, r4, #1
 8016fdc:	fbb3 f4f4 	udiv	r4, r3, r4
 8016fe0:	2c04      	cmp	r4, #4
 8016fe2:	69ea      	ldr	r2, [r5, #28]
 8016fe4:	bf38      	it	cc
 8016fe6:	2404      	movcc	r4, #4
 8016fe8:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8016fec:	4314      	orrs	r4, r2
 8016fee:	61ec      	str	r4, [r5, #28]
 8016ff0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016ff2:	2802      	cmp	r0, #2
 8016ff4:	d801      	bhi.n	8016ffa <i2c_clock_config+0x5a>
 8016ff6:	2202      	movs	r2, #2
 8016ff8:	e7ee      	b.n	8016fd8 <i2c_clock_config+0x38>
 8016ffa:	6228      	str	r0, [r5, #32]
 8016ffc:	e7ed      	b.n	8016fda <i2c_clock_config+0x3a>
 8016ffe:	4a18      	ldr	r2, [pc, #96]	@ (8017060 <i2c_clock_config+0xc0>)
 8017000:	4294      	cmp	r4, r2
 8017002:	d8f5      	bhi.n	8016ff0 <i2c_clock_config+0x50>
 8017004:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8017008:	4351      	muls	r1, r2
 801700a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 801700e:	fbb1 f1f2 	udiv	r1, r1, r2
 8017012:	3101      	adds	r1, #1
 8017014:	6229      	str	r1, [r5, #32]
 8017016:	b9a7      	cbnz	r7, 8017042 <i2c_clock_config+0xa2>
 8017018:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801701c:	fbb3 f4f4 	udiv	r4, r3, r4
 8017020:	69eb      	ldr	r3, [r5, #28]
 8017022:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8017026:	61eb      	str	r3, [r5, #28]
 8017028:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801702c:	b90b      	cbnz	r3, 8017032 <i2c_clock_config+0x92>
 801702e:	f044 0401 	orr.w	r4, r4, #1
 8017032:	69eb      	ldr	r3, [r5, #28]
 8017034:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8017038:	61eb      	str	r3, [r5, #28]
 801703a:	69eb      	ldr	r3, [r5, #28]
 801703c:	4323      	orrs	r3, r4
 801703e:	61eb      	str	r3, [r5, #28]
 8017040:	e7d6      	b.n	8016ff0 <i2c_clock_config+0x50>
 8017042:	2219      	movs	r2, #25
 8017044:	4354      	muls	r4, r2
 8017046:	fbb3 f4f4 	udiv	r4, r3, r4
 801704a:	69eb      	ldr	r3, [r5, #28]
 801704c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8017050:	e7e9      	b.n	8017026 <i2c_clock_config+0x86>
 8017052:	bf00      	nop
 8017054:	03938700 	orrseq	r8, r3, #0, 14
 8017058:	000f4240 	andeq	r4, pc, r0, asr #4
 801705c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8017060:	00061a80 	andeq	r1, r6, r0, lsl #21

08017064 <i2c_ack_config>:
 8017064:	6803      	ldr	r3, [r0, #0]
 8017066:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801706a:	430b      	orrs	r3, r1
 801706c:	6003      	str	r3, [r0, #0]
 801706e:	4770      	bx	lr

08017070 <i2c_ackpos_config>:
 8017070:	6803      	ldr	r3, [r0, #0]
 8017072:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8017076:	430b      	orrs	r3, r1
 8017078:	6003      	str	r3, [r0, #0]
 801707a:	4770      	bx	lr

0801707c <i2c_master_addressing>:
 801707c:	3202      	adds	r2, #2
 801707e:	bf0c      	ite	eq
 8017080:	f021 0101 	biceq.w	r1, r1, #1
 8017084:	f041 0101 	orrne.w	r1, r1, #1
 8017088:	6101      	str	r1, [r0, #16]
 801708a:	4770      	bx	lr

0801708c <i2c_enable>:
 801708c:	6803      	ldr	r3, [r0, #0]
 801708e:	f043 0301 	orr.w	r3, r3, #1
 8017092:	6003      	str	r3, [r0, #0]
 8017094:	4770      	bx	lr

08017096 <i2c_start_on_bus>:
 8017096:	6803      	ldr	r3, [r0, #0]
 8017098:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 801709c:	6003      	str	r3, [r0, #0]
 801709e:	4770      	bx	lr

080170a0 <i2c_stop_on_bus>:
 80170a0:	6803      	ldr	r3, [r0, #0]
 80170a2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80170a6:	6003      	str	r3, [r0, #0]
 80170a8:	4770      	bx	lr

080170aa <i2c_data_transmit>:
 80170aa:	6101      	str	r1, [r0, #16]
 80170ac:	4770      	bx	lr

080170ae <i2c_data_receive>:
 80170ae:	6900      	ldr	r0, [r0, #16]
 80170b0:	b2c0      	uxtb	r0, r0
 80170b2:	4770      	bx	lr

080170b4 <i2c_flag_get>:
 80170b4:	098b      	lsrs	r3, r1, #6
 80170b6:	f001 011f 	and.w	r1, r1, #31
 80170ba:	5818      	ldr	r0, [r3, r0]
 80170bc:	40c8      	lsrs	r0, r1
 80170be:	f000 0001 	and.w	r0, r0, #1
 80170c2:	4770      	bx	lr

080170c4 <i2c_flag_clear>:
 80170c4:	f240 5301 	movw	r3, #1281	@ 0x501
 80170c8:	4299      	cmp	r1, r3
 80170ca:	b510      	push	{r4, lr}
 80170cc:	d102      	bne.n	80170d4 <i2c_flag_clear+0x10>
 80170ce:	6943      	ldr	r3, [r0, #20]
 80170d0:	6983      	ldr	r3, [r0, #24]
 80170d2:	bd10      	pop	{r4, pc}
 80170d4:	098c      	lsrs	r4, r1, #6
 80170d6:	2201      	movs	r2, #1
 80170d8:	5823      	ldr	r3, [r4, r0]
 80170da:	f001 011f 	and.w	r1, r1, #31
 80170de:	408a      	lsls	r2, r1
 80170e0:	ea23 0302 	bic.w	r3, r3, r2
 80170e4:	5023      	str	r3, [r4, r0]
 80170e6:	e7f4      	b.n	80170d2 <i2c_flag_clear+0xe>

080170e8 <usart_deinit>:
 80170e8:	b508      	push	{r3, lr}
 80170ea:	4b2d      	ldr	r3, [pc, #180]	@ (80171a0 <usart_deinit+0xb8>)
 80170ec:	4298      	cmp	r0, r3
 80170ee:	d050      	beq.n	8017192 <usart_deinit+0xaa>
 80170f0:	d817      	bhi.n	8017122 <usart_deinit+0x3a>
 80170f2:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 80170f6:	4298      	cmp	r0, r3
 80170f8:	d044      	beq.n	8017184 <usart_deinit+0x9c>
 80170fa:	d808      	bhi.n	801710e <usart_deinit+0x26>
 80170fc:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8017100:	4298      	cmp	r0, r3
 8017102:	d02a      	beq.n	801715a <usart_deinit+0x72>
 8017104:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8017108:	4298      	cmp	r0, r3
 801710a:	d02d      	beq.n	8017168 <usart_deinit+0x80>
 801710c:	bd08      	pop	{r3, pc}
 801710e:	4b25      	ldr	r3, [pc, #148]	@ (80171a4 <usart_deinit+0xbc>)
 8017110:	4298      	cmp	r0, r3
 8017112:	d1fb      	bne.n	801710c <usart_deinit+0x24>
 8017114:	f640 0014 	movw	r0, #2068	@ 0x814
 8017118:	f7ff f857 	bl	80161ca <rcu_periph_reset_enable>
 801711c:	f640 0014 	movw	r0, #2068	@ 0x814
 8017120:	e017      	b.n	8017152 <usart_deinit+0x6a>
 8017122:	4b21      	ldr	r3, [pc, #132]	@ (80171a8 <usart_deinit+0xc0>)
 8017124:	4298      	cmp	r0, r3
 8017126:	d00e      	beq.n	8017146 <usart_deinit+0x5e>
 8017128:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801712c:	4298      	cmp	r0, r3
 801712e:	d022      	beq.n	8017176 <usart_deinit+0x8e>
 8017130:	f5a3 4318 	sub.w	r3, r3, #38912	@ 0x9800
 8017134:	4298      	cmp	r0, r3
 8017136:	d1e9      	bne.n	801710c <usart_deinit+0x24>
 8017138:	f640 001f 	movw	r0, #2079	@ 0x81f
 801713c:	f7ff f845 	bl	80161ca <rcu_periph_reset_enable>
 8017140:	f640 001f 	movw	r0, #2079	@ 0x81f
 8017144:	e005      	b.n	8017152 <usart_deinit+0x6a>
 8017146:	f640 1004 	movw	r0, #2308	@ 0x904
 801714a:	f7ff f83e 	bl	80161ca <rcu_periph_reset_enable>
 801714e:	f640 1004 	movw	r0, #2308	@ 0x904
 8017152:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8017156:	f7ff b83a 	b.w	80161ce <rcu_periph_reset_disable>
 801715a:	f640 0011 	movw	r0, #2065	@ 0x811
 801715e:	f7ff f834 	bl	80161ca <rcu_periph_reset_enable>
 8017162:	f640 0011 	movw	r0, #2065	@ 0x811
 8017166:	e7f4      	b.n	8017152 <usart_deinit+0x6a>
 8017168:	f640 0012 	movw	r0, #2066	@ 0x812
 801716c:	f7ff f82d 	bl	80161ca <rcu_periph_reset_enable>
 8017170:	f640 0012 	movw	r0, #2066	@ 0x812
 8017174:	e7ed      	b.n	8017152 <usart_deinit+0x6a>
 8017176:	f640 1005 	movw	r0, #2309	@ 0x905
 801717a:	f7ff f826 	bl	80161ca <rcu_periph_reset_enable>
 801717e:	f640 1005 	movw	r0, #2309	@ 0x905
 8017182:	e7e6      	b.n	8017152 <usart_deinit+0x6a>
 8017184:	f640 0013 	movw	r0, #2067	@ 0x813
 8017188:	f7ff f81f 	bl	80161ca <rcu_periph_reset_enable>
 801718c:	f640 0013 	movw	r0, #2067	@ 0x813
 8017190:	e7df      	b.n	8017152 <usart_deinit+0x6a>
 8017192:	f640 001e 	movw	r0, #2078	@ 0x81e
 8017196:	f7ff f818 	bl	80161ca <rcu_periph_reset_enable>
 801719a:	f640 001e 	movw	r0, #2078	@ 0x81e
 801719e:	e7d8      	b.n	8017152 <usart_deinit+0x6a>
 80171a0:	40007800 	andmi	r7, r0, r0, lsl #16
 80171a4:	40005000 	andmi	r5, r0, r0
 80171a8:	40011000 	andmi	r1, r1, r0

080171ac <usart_baudrate_set>:
 80171ac:	b538      	push	{r3, r4, r5, lr}
 80171ae:	4b1e      	ldr	r3, [pc, #120]	@ (8017228 <usart_baudrate_set+0x7c>)
 80171b0:	4298      	cmp	r0, r3
 80171b2:	4604      	mov	r4, r0
 80171b4:	460d      	mov	r5, r1
 80171b6:	d02e      	beq.n	8017216 <usart_baudrate_set+0x6a>
 80171b8:	d821      	bhi.n	80171fe <usart_baudrate_set+0x52>
 80171ba:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 80171be:	4298      	cmp	r0, r3
 80171c0:	d029      	beq.n	8017216 <usart_baudrate_set+0x6a>
 80171c2:	d81a      	bhi.n	80171fa <usart_baudrate_set+0x4e>
 80171c4:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80171c8:	4298      	cmp	r0, r3
 80171ca:	d024      	beq.n	8017216 <usart_baudrate_set+0x6a>
 80171cc:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80171d0:	429c      	cmp	r4, r3
 80171d2:	d020      	beq.n	8017216 <usart_baudrate_set+0x6a>
 80171d4:	2000      	movs	r0, #0
 80171d6:	68e2      	ldr	r2, [r4, #12]
 80171d8:	0412      	lsls	r2, r2, #16
 80171da:	ea4f 0355 	mov.w	r3, r5, lsr #1
 80171de:	d51c      	bpl.n	801721a <usart_baudrate_set+0x6e>
 80171e0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80171e4:	fbb3 f1f5 	udiv	r1, r3, r5
 80171e8:	f3c1 0342 	ubfx	r3, r1, #1, #3
 80171ec:	f021 010f 	bic.w	r1, r1, #15
 80171f0:	0409      	lsls	r1, r1, #16
 80171f2:	0c09      	lsrs	r1, r1, #16
 80171f4:	430b      	orrs	r3, r1
 80171f6:	60a3      	str	r3, [r4, #8]
 80171f8:	bd38      	pop	{r3, r4, r5, pc}
 80171fa:	4b0c      	ldr	r3, [pc, #48]	@ (801722c <usart_baudrate_set+0x80>)
 80171fc:	e7e8      	b.n	80171d0 <usart_baudrate_set+0x24>
 80171fe:	4b0c      	ldr	r3, [pc, #48]	@ (8017230 <usart_baudrate_set+0x84>)
 8017200:	f420 6280 	bic.w	r2, r0, #1024	@ 0x400
 8017204:	429a      	cmp	r2, r3
 8017206:	d002      	beq.n	801720e <usart_baudrate_set+0x62>
 8017208:	f5a3 4314 	sub.w	r3, r3, #37888	@ 0x9400
 801720c:	e7e0      	b.n	80171d0 <usart_baudrate_set+0x24>
 801720e:	2003      	movs	r0, #3
 8017210:	f7fe fffc 	bl	801620c <rcu_clock_freq_get>
 8017214:	e7df      	b.n	80171d6 <usart_baudrate_set+0x2a>
 8017216:	2002      	movs	r0, #2
 8017218:	e7fa      	b.n	8017210 <usart_baudrate_set+0x64>
 801721a:	18c1      	adds	r1, r0, r3
 801721c:	fbb1 f1f5 	udiv	r1, r1, r5
 8017220:	b289      	uxth	r1, r1
 8017222:	60a1      	str	r1, [r4, #8]
 8017224:	e7e8      	b.n	80171f8 <usart_baudrate_set+0x4c>
 8017226:	bf00      	nop
 8017228:	40007800 	andmi	r7, r0, r0, lsl #16
 801722c:	40005000 	andmi	r5, r0, r0
 8017230:	40011000 	andmi	r1, r1, r0

08017234 <usart_parity_config>:
 8017234:	68c3      	ldr	r3, [r0, #12]
 8017236:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 801723a:	60c3      	str	r3, [r0, #12]
 801723c:	68c3      	ldr	r3, [r0, #12]
 801723e:	430b      	orrs	r3, r1
 8017240:	60c3      	str	r3, [r0, #12]
 8017242:	4770      	bx	lr

08017244 <usart_word_length_set>:
 8017244:	68c3      	ldr	r3, [r0, #12]
 8017246:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801724a:	60c3      	str	r3, [r0, #12]
 801724c:	68c3      	ldr	r3, [r0, #12]
 801724e:	430b      	orrs	r3, r1
 8017250:	60c3      	str	r3, [r0, #12]
 8017252:	4770      	bx	lr

08017254 <usart_stop_bit_set>:
 8017254:	6903      	ldr	r3, [r0, #16]
 8017256:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 801725a:	6103      	str	r3, [r0, #16]
 801725c:	6903      	ldr	r3, [r0, #16]
 801725e:	430b      	orrs	r3, r1
 8017260:	6103      	str	r3, [r0, #16]
 8017262:	4770      	bx	lr

08017264 <usart_transmit_config>:
 8017264:	68c3      	ldr	r3, [r0, #12]
 8017266:	f023 0308 	bic.w	r3, r3, #8
 801726a:	430b      	orrs	r3, r1
 801726c:	60c3      	str	r3, [r0, #12]
 801726e:	4770      	bx	lr

08017270 <usart_receive_config>:
 8017270:	68c3      	ldr	r3, [r0, #12]
 8017272:	f023 0304 	bic.w	r3, r3, #4
 8017276:	430b      	orrs	r3, r1
 8017278:	60c3      	str	r3, [r0, #12]
 801727a:	4770      	bx	lr

0801727c <usart_hardware_flow_rts_config>:
 801727c:	6943      	ldr	r3, [r0, #20]
 801727e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8017282:	6143      	str	r3, [r0, #20]
 8017284:	6943      	ldr	r3, [r0, #20]
 8017286:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801728a:	4319      	orrs	r1, r3
 801728c:	6141      	str	r1, [r0, #20]
 801728e:	4770      	bx	lr

08017290 <usart_hardware_flow_cts_config>:
 8017290:	6943      	ldr	r3, [r0, #20]
 8017292:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8017296:	6143      	str	r3, [r0, #20]
 8017298:	6943      	ldr	r3, [r0, #20]
 801729a:	f401 7100 	and.w	r1, r1, #512	@ 0x200
 801729e:	4319      	orrs	r1, r3
 80172a0:	6141      	str	r1, [r0, #20]
 80172a2:	4770      	bx	lr

080172a4 <usart_flag_get>:
 80172a4:	098b      	lsrs	r3, r1, #6
 80172a6:	f001 011f 	and.w	r1, r1, #31
 80172aa:	5818      	ldr	r0, [r3, r0]
 80172ac:	40c8      	lsrs	r0, r1
 80172ae:	f000 0001 	and.w	r0, r0, #1
 80172b2:	4770      	bx	lr

080172b4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
 80172b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80172b6:	461e      	mov	r6, r3
 80172b8:	4bc3      	ldr	r3, [pc, #780]	@ (80175c8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x314>)
 80172ba:	4298      	cmp	r0, r3
 80172bc:	4604      	mov	r4, r0
 80172be:	460f      	mov	r7, r1
 80172c0:	4615      	mov	r5, r2
 80172c2:	f000 818f 	beq.w	80175e4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x330>
 80172c6:	d83a      	bhi.n	801733e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x8a>
 80172c8:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 80172cc:	4298      	cmp	r0, r3
 80172ce:	f000 80f5 	beq.w	80174bc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x208>
 80172d2:	f200 8122 	bhi.w	801751a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x266>
 80172d6:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80172da:	4298      	cmp	r0, r3
 80172dc:	f000 80c8 	beq.w	8017470 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x1bc>
 80172e0:	f241 0012 	movw	r0, #4114	@ 0x1012
 80172e4:	f7fe ff56 	bl	8016194 <rcu_periph_clock_enable>
 80172e8:	f640 4001 	movw	r0, #3073	@ 0xc01
 80172ec:	f7fe ff52 	bl	8016194 <rcu_periph_clock_enable>
 80172f0:	48b6      	ldr	r0, [pc, #728]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 80172f2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80172f6:	2107      	movs	r1, #7
 80172f8:	f7fe ff08 	bl	801610c <gpio_af_set>
 80172fc:	48b3      	ldr	r0, [pc, #716]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 80172fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8017302:	2201      	movs	r2, #1
 8017304:	2102      	movs	r1, #2
 8017306:	f7fe fec3 	bl	8016090 <gpio_mode_set>
 801730a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801730e:	48af      	ldr	r0, [pc, #700]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8017310:	2202      	movs	r2, #2
 8017312:	2100      	movs	r1, #0
 8017314:	f7fe fede 	bl	80160d4 <gpio_output_options_set>
 8017318:	48ac      	ldr	r0, [pc, #688]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 801731a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 801731e:	2107      	movs	r1, #7
 8017320:	f7fe fef4 	bl	801610c <gpio_af_set>
 8017324:	48a9      	ldr	r0, [pc, #676]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8017326:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801732a:	2201      	movs	r2, #1
 801732c:	2102      	movs	r1, #2
 801732e:	f7fe feaf 	bl	8016090 <gpio_mode_set>
 8017332:	48a6      	ldr	r0, [pc, #664]	@ (80175cc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8017334:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8017338:	2202      	movs	r2, #2
 801733a:	2100      	movs	r1, #0
 801733c:	e05b      	b.n	80173f6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801733e:	4ba4      	ldr	r3, [pc, #656]	@ (80175d0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x31c>)
 8017340:	4298      	cmp	r0, r3
 8017342:	d02a      	beq.n	801739a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0xe6>
 8017344:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8017348:	4298      	cmp	r0, r3
 801734a:	f000 8116 	beq.w	801757a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x2c6>
 801734e:	f241 001f 	movw	r0, #4127	@ 0x101f
 8017352:	f7fe ff1f 	bl	8016194 <rcu_periph_clock_enable>
 8017356:	f640 4004 	movw	r0, #3076	@ 0xc04
 801735a:	f7fe ff1b 	bl	8016194 <rcu_periph_clock_enable>
 801735e:	489d      	ldr	r0, [pc, #628]	@ (80175d4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8017360:	2202      	movs	r2, #2
 8017362:	2108      	movs	r1, #8
 8017364:	f7fe fed2 	bl	801610c <gpio_af_set>
 8017368:	2302      	movs	r3, #2
 801736a:	4619      	mov	r1, r3
 801736c:	4899      	ldr	r0, [pc, #612]	@ (80175d4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 801736e:	2201      	movs	r2, #1
 8017370:	f7fe fe8e 	bl	8016090 <gpio_mode_set>
 8017374:	2302      	movs	r3, #2
 8017376:	461a      	mov	r2, r3
 8017378:	4896      	ldr	r0, [pc, #600]	@ (80175d4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 801737a:	2100      	movs	r1, #0
 801737c:	f7fe feaa 	bl	80160d4 <gpio_output_options_set>
 8017380:	4894      	ldr	r0, [pc, #592]	@ (80175d4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8017382:	2201      	movs	r2, #1
 8017384:	2108      	movs	r1, #8
 8017386:	f7fe fec1 	bl	801610c <gpio_af_set>
 801738a:	2301      	movs	r3, #1
 801738c:	461a      	mov	r2, r3
 801738e:	4891      	ldr	r0, [pc, #580]	@ (80175d4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8017390:	2102      	movs	r1, #2
 8017392:	f7fe fe7d 	bl	8016090 <gpio_mode_set>
 8017396:	2301      	movs	r3, #1
 8017398:	e14c      	b.n	8017634 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x380>
 801739a:	f241 1004 	movw	r0, #4356	@ 0x1104
 801739e:	f7fe fef9 	bl	8016194 <rcu_periph_clock_enable>
 80173a2:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80173a6:	f7fe fef5 	bl	8016194 <rcu_periph_clock_enable>
 80173aa:	488b      	ldr	r0, [pc, #556]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173ac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80173b0:	2107      	movs	r1, #7
 80173b2:	f7fe feab 	bl	801610c <gpio_af_set>
 80173b6:	4888      	ldr	r0, [pc, #544]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173b8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80173bc:	2201      	movs	r2, #1
 80173be:	2102      	movs	r1, #2
 80173c0:	f7fe fe66 	bl	8016090 <gpio_mode_set>
 80173c4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80173c8:	4883      	ldr	r0, [pc, #524]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173ca:	2202      	movs	r2, #2
 80173cc:	2100      	movs	r1, #0
 80173ce:	f7fe fe81 	bl	80160d4 <gpio_output_options_set>
 80173d2:	4881      	ldr	r0, [pc, #516]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173d4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80173d8:	2107      	movs	r1, #7
 80173da:	f7fe fe97 	bl	801610c <gpio_af_set>
 80173de:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80173e2:	487d      	ldr	r0, [pc, #500]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173e4:	2201      	movs	r2, #1
 80173e6:	2102      	movs	r1, #2
 80173e8:	f7fe fe52 	bl	8016090 <gpio_mode_set>
 80173ec:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80173f0:	4879      	ldr	r0, [pc, #484]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80173f2:	2202      	movs	r2, #2
 80173f4:	2100      	movs	r1, #0
 80173f6:	f7fe fe6d 	bl	80160d4 <gpio_output_options_set>
 80173fa:	4620      	mov	r0, r4
 80173fc:	f7ff fe74 	bl	80170e8 <usart_deinit>
 8017400:	68e3      	ldr	r3, [r4, #12]
 8017402:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8017406:	60e3      	str	r3, [r4, #12]
 8017408:	4639      	mov	r1, r7
 801740a:	4620      	mov	r0, r4
 801740c:	f7ff fece 	bl	80171ac <usart_baudrate_set>
 8017410:	f1a5 0309 	sub.w	r3, r5, #9
 8017414:	4259      	negs	r1, r3
 8017416:	4159      	adcs	r1, r3
 8017418:	0309      	lsls	r1, r1, #12
 801741a:	4620      	mov	r0, r4
 801741c:	f7ff ff12 	bl	8017244 <usart_word_length_set>
 8017420:	9906      	ldr	r1, [sp, #24]
 8017422:	1e8a      	subs	r2, r1, #2
 8017424:	4251      	negs	r1, r2
 8017426:	4151      	adcs	r1, r2
 8017428:	0349      	lsls	r1, r1, #13
 801742a:	4620      	mov	r0, r4
 801742c:	f7ff ff12 	bl	8017254 <usart_stop_bit_set>
 8017430:	2e01      	cmp	r6, #1
 8017432:	f000 8103 	beq.w	801763c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x388>
 8017436:	2e02      	cmp	r6, #2
 8017438:	f040 8103 	bne.w	8017642 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x38e>
 801743c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8017440:	4620      	mov	r0, r4
 8017442:	f7ff fef7 	bl	8017234 <usart_parity_config>
 8017446:	2100      	movs	r1, #0
 8017448:	4620      	mov	r0, r4
 801744a:	f7ff ff17 	bl	801727c <usart_hardware_flow_rts_config>
 801744e:	2100      	movs	r1, #0
 8017450:	4620      	mov	r0, r4
 8017452:	f7ff ff1d 	bl	8017290 <usart_hardware_flow_cts_config>
 8017456:	2104      	movs	r1, #4
 8017458:	4620      	mov	r0, r4
 801745a:	f7ff ff09 	bl	8017270 <usart_receive_config>
 801745e:	2108      	movs	r1, #8
 8017460:	4620      	mov	r0, r4
 8017462:	f7ff feff 	bl	8017264 <usart_transmit_config>
 8017466:	68e3      	ldr	r3, [r4, #12]
 8017468:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801746c:	60e3      	str	r3, [r4, #12]
 801746e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017470:	f241 0011 	movw	r0, #4113	@ 0x1011
 8017474:	f7fe fe8e 	bl	8016194 <rcu_periph_clock_enable>
 8017478:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 801747c:	f7fe fe8a 	bl	8016194 <rcu_periph_clock_enable>
 8017480:	4855      	ldr	r0, [pc, #340]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8017482:	2204      	movs	r2, #4
 8017484:	2107      	movs	r1, #7
 8017486:	f7fe fe41 	bl	801610c <gpio_af_set>
 801748a:	4853      	ldr	r0, [pc, #332]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801748c:	2304      	movs	r3, #4
 801748e:	2201      	movs	r2, #1
 8017490:	2102      	movs	r1, #2
 8017492:	f7fe fdfd 	bl	8016090 <gpio_mode_set>
 8017496:	2304      	movs	r3, #4
 8017498:	484f      	ldr	r0, [pc, #316]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 801749a:	2202      	movs	r2, #2
 801749c:	2100      	movs	r1, #0
 801749e:	f7fe fe19 	bl	80160d4 <gpio_output_options_set>
 80174a2:	484d      	ldr	r0, [pc, #308]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80174a4:	2208      	movs	r2, #8
 80174a6:	2107      	movs	r1, #7
 80174a8:	f7fe fe30 	bl	801610c <gpio_af_set>
 80174ac:	2308      	movs	r3, #8
 80174ae:	484a      	ldr	r0, [pc, #296]	@ (80175d8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80174b0:	2201      	movs	r2, #1
 80174b2:	2102      	movs	r1, #2
 80174b4:	f7fe fdec 	bl	8016090 <gpio_mode_set>
 80174b8:	2308      	movs	r3, #8
 80174ba:	e799      	b.n	80173f0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x13c>
 80174bc:	f241 0013 	movw	r0, #4115	@ 0x1013
 80174c0:	f7fe fe68 	bl	8016194 <rcu_periph_clock_enable>
 80174c4:	f640 4002 	movw	r0, #3074	@ 0xc02
 80174c8:	f7fe fe64 	bl	8016194 <rcu_periph_clock_enable>
 80174cc:	4843      	ldr	r0, [pc, #268]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80174ce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80174d2:	2108      	movs	r1, #8
 80174d4:	f7fe fe1a 	bl	801610c <gpio_af_set>
 80174d8:	4840      	ldr	r0, [pc, #256]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80174da:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80174de:	2201      	movs	r2, #1
 80174e0:	2102      	movs	r1, #2
 80174e2:	f7fe fdd5 	bl	8016090 <gpio_mode_set>
 80174e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80174ea:	483c      	ldr	r0, [pc, #240]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80174ec:	2202      	movs	r2, #2
 80174ee:	2100      	movs	r1, #0
 80174f0:	f7fe fdf0 	bl	80160d4 <gpio_output_options_set>
 80174f4:	4839      	ldr	r0, [pc, #228]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80174f6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80174fa:	2108      	movs	r1, #8
 80174fc:	f7fe fe06 	bl	801610c <gpio_af_set>
 8017500:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8017504:	4835      	ldr	r0, [pc, #212]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017506:	2201      	movs	r2, #1
 8017508:	2102      	movs	r1, #2
 801750a:	f7fe fdc1 	bl	8016090 <gpio_mode_set>
 801750e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8017512:	4832      	ldr	r0, [pc, #200]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017514:	2202      	movs	r2, #2
 8017516:	2100      	movs	r1, #0
 8017518:	e76d      	b.n	80173f6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801751a:	f241 0014 	movw	r0, #4116	@ 0x1014
 801751e:	f7fe fe39 	bl	8016194 <rcu_periph_clock_enable>
 8017522:	f640 4002 	movw	r0, #3074	@ 0xc02
 8017526:	f7fe fe35 	bl	8016194 <rcu_periph_clock_enable>
 801752a:	f640 4003 	movw	r0, #3075	@ 0xc03
 801752e:	f7fe fe31 	bl	8016194 <rcu_periph_clock_enable>
 8017532:	482a      	ldr	r0, [pc, #168]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017534:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8017538:	2108      	movs	r1, #8
 801753a:	f7fe fde7 	bl	801610c <gpio_af_set>
 801753e:	4827      	ldr	r0, [pc, #156]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017540:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8017544:	2201      	movs	r2, #1
 8017546:	2102      	movs	r1, #2
 8017548:	f7fe fda2 	bl	8016090 <gpio_mode_set>
 801754c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8017550:	4822      	ldr	r0, [pc, #136]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017552:	2202      	movs	r2, #2
 8017554:	2100      	movs	r1, #0
 8017556:	f7fe fdbd 	bl	80160d4 <gpio_output_options_set>
 801755a:	4821      	ldr	r0, [pc, #132]	@ (80175e0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 801755c:	2204      	movs	r2, #4
 801755e:	2108      	movs	r1, #8
 8017560:	f7fe fdd4 	bl	801610c <gpio_af_set>
 8017564:	481e      	ldr	r0, [pc, #120]	@ (80175e0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8017566:	2304      	movs	r3, #4
 8017568:	2201      	movs	r2, #1
 801756a:	2102      	movs	r1, #2
 801756c:	f7fe fd90 	bl	8016090 <gpio_mode_set>
 8017570:	481b      	ldr	r0, [pc, #108]	@ (80175e0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8017572:	2304      	movs	r3, #4
 8017574:	2202      	movs	r2, #2
 8017576:	2100      	movs	r1, #0
 8017578:	e73d      	b.n	80173f6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801757a:	f241 1005 	movw	r0, #4357	@ 0x1105
 801757e:	f7fe fe09 	bl	8016194 <rcu_periph_clock_enable>
 8017582:	f640 4002 	movw	r0, #3074	@ 0xc02
 8017586:	f7fe fe05 	bl	8016194 <rcu_periph_clock_enable>
 801758a:	4814      	ldr	r0, [pc, #80]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801758c:	2240      	movs	r2, #64	@ 0x40
 801758e:	2108      	movs	r1, #8
 8017590:	f7fe fdbc 	bl	801610c <gpio_af_set>
 8017594:	4811      	ldr	r0, [pc, #68]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8017596:	2340      	movs	r3, #64	@ 0x40
 8017598:	2201      	movs	r2, #1
 801759a:	2102      	movs	r1, #2
 801759c:	f7fe fd78 	bl	8016090 <gpio_mode_set>
 80175a0:	2340      	movs	r3, #64	@ 0x40
 80175a2:	480e      	ldr	r0, [pc, #56]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80175a4:	2202      	movs	r2, #2
 80175a6:	2100      	movs	r1, #0
 80175a8:	f7fe fd94 	bl	80160d4 <gpio_output_options_set>
 80175ac:	480b      	ldr	r0, [pc, #44]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80175ae:	2280      	movs	r2, #128	@ 0x80
 80175b0:	2108      	movs	r1, #8
 80175b2:	f7fe fdab 	bl	801610c <gpio_af_set>
 80175b6:	2380      	movs	r3, #128	@ 0x80
 80175b8:	4808      	ldr	r0, [pc, #32]	@ (80175dc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80175ba:	2201      	movs	r2, #1
 80175bc:	2102      	movs	r1, #2
 80175be:	f7fe fd67 	bl	8016090 <gpio_mode_set>
 80175c2:	2380      	movs	r3, #128	@ 0x80
 80175c4:	e7a5      	b.n	8017512 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x25e>
 80175c6:	bf00      	nop
 80175c8:	40007800 	andmi	r7, r0, r0, lsl #16
 80175cc:	40020400 	andmi	r0, r2, r0, lsl #8
 80175d0:	40011000 	andmi	r1, r1, r0
 80175d4:	40021000 	andmi	r1, r2, r0
 80175d8:	40020000 	andmi	r0, r2, r0
 80175dc:	40020800 	andmi	r0, r2, r0, lsl #16
 80175e0:	40020c00 	andmi	r0, r2, r0, lsl #24
 80175e4:	f241 001e 	movw	r0, #4126	@ 0x101e
 80175e8:	f7fe fdd4 	bl	8016194 <rcu_periph_clock_enable>
 80175ec:	f640 4004 	movw	r0, #3076	@ 0xc04
 80175f0:	f7fe fdd0 	bl	8016194 <rcu_periph_clock_enable>
 80175f4:	4814      	ldr	r0, [pc, #80]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 80175f6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80175fa:	2108      	movs	r1, #8
 80175fc:	f7fe fd86 	bl	801610c <gpio_af_set>
 8017600:	4811      	ldr	r0, [pc, #68]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8017602:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8017606:	2201      	movs	r2, #1
 8017608:	2102      	movs	r1, #2
 801760a:	f7fe fd41 	bl	8016090 <gpio_mode_set>
 801760e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8017612:	480d      	ldr	r0, [pc, #52]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8017614:	2202      	movs	r2, #2
 8017616:	2100      	movs	r1, #0
 8017618:	f7fe fd5c 	bl	80160d4 <gpio_output_options_set>
 801761c:	480a      	ldr	r0, [pc, #40]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801761e:	2280      	movs	r2, #128	@ 0x80
 8017620:	2108      	movs	r1, #8
 8017622:	f7fe fd73 	bl	801610c <gpio_af_set>
 8017626:	2380      	movs	r3, #128	@ 0x80
 8017628:	4807      	ldr	r0, [pc, #28]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801762a:	2201      	movs	r2, #1
 801762c:	2102      	movs	r1, #2
 801762e:	f7fe fd2f 	bl	8016090 <gpio_mode_set>
 8017632:	2380      	movs	r3, #128	@ 0x80
 8017634:	4804      	ldr	r0, [pc, #16]	@ (8017648 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8017636:	2202      	movs	r2, #2
 8017638:	2100      	movs	r1, #0
 801763a:	e6dc      	b.n	80173f6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801763c:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8017640:	e6fe      	b.n	8017440 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8017642:	2100      	movs	r1, #0
 8017644:	e6fc      	b.n	8017440 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8017646:	bf00      	nop
 8017648:	40021000 	andmi	r1, r2, r0

0801764c <__libc_init_array>:
 801764c:	b570      	push	{r4, r5, r6, lr}
 801764e:	4d0c      	ldr	r5, [pc, #48]	@ (8017680 <__libc_init_array+0x34>)
 8017650:	4c0c      	ldr	r4, [pc, #48]	@ (8017684 <__libc_init_array+0x38>)
 8017652:	1b64      	subs	r4, r4, r5
 8017654:	10a4      	asrs	r4, r4, #2
 8017656:	2600      	movs	r6, #0
 8017658:	42a6      	cmp	r6, r4
 801765a:	d107      	bne.n	801766c <__libc_init_array+0x20>
 801765c:	4d0a      	ldr	r5, [pc, #40]	@ (8017688 <__libc_init_array+0x3c>)
 801765e:	4c0b      	ldr	r4, [pc, #44]	@ (801768c <__libc_init_array+0x40>)
 8017660:	1b64      	subs	r4, r4, r5
 8017662:	10a4      	asrs	r4, r4, #2
 8017664:	2600      	movs	r6, #0
 8017666:	42a6      	cmp	r6, r4
 8017668:	d105      	bne.n	8017676 <__libc_init_array+0x2a>
 801766a:	bd70      	pop	{r4, r5, r6, pc}
 801766c:	f855 3b04 	ldr.w	r3, [r5], #4
 8017670:	4798      	blx	r3
 8017672:	3601      	adds	r6, #1
 8017674:	e7f0      	b.n	8017658 <__libc_init_array+0xc>
 8017676:	f855 3b04 	ldr.w	r3, [r5], #4
 801767a:	4798      	blx	r3
 801767c:	3601      	adds	r6, #1
 801767e:	e7f2      	b.n	8017666 <__libc_init_array+0x1a>
 8017680:	0801c4e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, lr, pc}
 8017684:	0801c4e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, lr, pc}
 8017688:	0801c4e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, lr, pc}
 801768c:	0801c4e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, lr, pc}

08017690 <memcpy>:
 8017690:	b510      	push	{r4, lr}
 8017692:	1e43      	subs	r3, r0, #1
 8017694:	440a      	add	r2, r1
 8017696:	4291      	cmp	r1, r2
 8017698:	d100      	bne.n	801769c <memcpy+0xc>
 801769a:	bd10      	pop	{r4, pc}
 801769c:	f811 4b01 	ldrb.w	r4, [r1], #1
 80176a0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80176a4:	e7f7      	b.n	8017696 <memcpy+0x6>

080176a6 <memmove>:
 80176a6:	4288      	cmp	r0, r1
 80176a8:	b510      	push	{r4, lr}
 80176aa:	eb01 0302 	add.w	r3, r1, r2
 80176ae:	d208      	bcs.n	80176c2 <memmove+0x1c>
 80176b0:	1e42      	subs	r2, r0, #1
 80176b2:	4299      	cmp	r1, r3
 80176b4:	d100      	bne.n	80176b8 <memmove+0x12>
 80176b6:	bd10      	pop	{r4, pc}
 80176b8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80176bc:	f802 4f01 	strb.w	r4, [r2, #1]!
 80176c0:	e7f7      	b.n	80176b2 <memmove+0xc>
 80176c2:	4402      	add	r2, r0
 80176c4:	4601      	mov	r1, r0
 80176c6:	428a      	cmp	r2, r1
 80176c8:	d0f5      	beq.n	80176b6 <memmove+0x10>
 80176ca:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80176ce:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80176d2:	e7f8      	b.n	80176c6 <memmove+0x20>

080176d4 <memset>:
 80176d4:	b570      	push	{r4, r5, r6, lr}
 80176d6:	b1ca      	cbz	r2, 801770c <memset+0x38>
 80176d8:	b2c9      	uxtb	r1, r1
 80176da:	4603      	mov	r3, r0
 80176dc:	075c      	lsls	r4, r3, #29
 80176de:	d111      	bne.n	8017704 <memset+0x30>
 80176e0:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
 80176e4:	fba1 5605 	umull	r5, r6, r1, r5
 80176e8:	f022 0407 	bic.w	r4, r2, #7
 80176ec:	442e      	add	r6, r5
 80176ee:	441c      	add	r4, r3
 80176f0:	42a3      	cmp	r3, r4
 80176f2:	d10c      	bne.n	801770e <memset+0x3a>
 80176f4:	f002 0207 	and.w	r2, r2, #7
 80176f8:	4422      	add	r2, r4
 80176fa:	4294      	cmp	r4, r2
 80176fc:	d006      	beq.n	801770c <memset+0x38>
 80176fe:	f804 1b01 	strb.w	r1, [r4], #1
 8017702:	e7fa      	b.n	80176fa <memset+0x26>
 8017704:	3a01      	subs	r2, #1
 8017706:	f803 1b01 	strb.w	r1, [r3], #1
 801770a:	d1e7      	bne.n	80176dc <memset+0x8>
 801770c:	bd70      	pop	{r4, r5, r6, pc}
 801770e:	f843 5b08 	str.w	r5, [r3], #8
 8017712:	f843 6c04 	str.w	r6, [r3, #-4]
 8017716:	e7eb      	b.n	80176f0 <memset+0x1c>

08017718 <_itostr>:
 8017718:	b5f0      	push	{r4, r5, r6, r7, lr}
 801771a:	0fc7      	lsrs	r7, r0, #31
 801771c:	b091      	sub	sp, #68	@ 0x44
 801771e:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 8017722:	d01b      	beq.n	801775c <_itostr+0x44>
 8017724:	4240      	negs	r0, r0
 8017726:	4623      	mov	r3, r4
 8017728:	250a      	movs	r5, #10
 801772a:	46ec      	mov	ip, sp
 801772c:	fb90 f6f5 	sdiv	r6, r0, r5
 8017730:	fb05 0016 	mls	r0, r5, r6, r0
 8017734:	3030      	adds	r0, #48	@ 0x30
 8017736:	f803 0901 	strb.w	r0, [r3], #-1
 801773a:	4630      	mov	r0, r6
 801773c:	b10e      	cbz	r6, 8017742 <_itostr+0x2a>
 801773e:	4563      	cmp	r3, ip
 8017740:	d1f4      	bne.n	801772c <_itostr+0x14>
 8017742:	b132      	cbz	r2, 8017752 <_itostr+0x3a>
 8017744:	4668      	mov	r0, sp
 8017746:	2530      	movs	r5, #48	@ 0x30
 8017748:	1ae6      	subs	r6, r4, r3
 801774a:	4296      	cmp	r6, r2
 801774c:	da01      	bge.n	8017752 <_itostr+0x3a>
 801774e:	4283      	cmp	r3, r0
 8017750:	d816      	bhi.n	8017780 <_itostr+0x68>
 8017752:	b167      	cbz	r7, 801776e <_itostr+0x56>
 8017754:	222d      	movs	r2, #45	@ 0x2d
 8017756:	f803 2901 	strb.w	r2, [r3], #-1
 801775a:	e008      	b.n	801776e <_itostr+0x56>
 801775c:	2800      	cmp	r0, #0
 801775e:	d1e2      	bne.n	8017726 <_itostr+0xe>
 8017760:	2330      	movs	r3, #48	@ 0x30
 8017762:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8017766:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801776a:	2a00      	cmp	r2, #0
 801776c:	d1ea      	bne.n	8017744 <_itostr+0x2c>
 801776e:	3301      	adds	r3, #1
 8017770:	1ae0      	subs	r0, r4, r3
 8017772:	3901      	subs	r1, #1
 8017774:	aa10      	add	r2, sp, #64	@ 0x40
 8017776:	4293      	cmp	r3, r2
 8017778:	d305      	bcc.n	8017786 <_itostr+0x6e>
 801777a:	3001      	adds	r0, #1
 801777c:	b011      	add	sp, #68	@ 0x44
 801777e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017780:	f803 5901 	strb.w	r5, [r3], #-1
 8017784:	e7e0      	b.n	8017748 <_itostr+0x30>
 8017786:	f813 2b01 	ldrb.w	r2, [r3], #1
 801778a:	f801 2f01 	strb.w	r2, [r1, #1]!
 801778e:	e7f1      	b.n	8017774 <_itostr+0x5c>

08017790 <_xputch>:
 8017790:	4603      	mov	r3, r0
 8017792:	b410      	push	{r4}
 8017794:	4c09      	ldr	r4, [pc, #36]	@ (80177bc <_xputch+0x2c>)
 8017796:	68da      	ldr	r2, [r3, #12]
 8017798:	4608      	mov	r0, r1
 801779a:	6821      	ldr	r1, [r4, #0]
 801779c:	3201      	adds	r2, #1
 801779e:	60da      	str	r2, [r3, #12]
 80177a0:	b141      	cbz	r1, 80177b4 <_xputch+0x24>
 80177a2:	691b      	ldr	r3, [r3, #16]
 80177a4:	429a      	cmp	r2, r3
 80177a6:	da02      	bge.n	80177ae <_xputch+0x1e>
 80177a8:	1c4b      	adds	r3, r1, #1
 80177aa:	6023      	str	r3, [r4, #0]
 80177ac:	7008      	strb	r0, [r1, #0]
 80177ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80177b2:	4770      	bx	lr
 80177b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80177b8:	f7fd bf64 	b.w	8015684 <console_putc>
 80177bc:	2001a6b8 			@ <UNDEFINED> instruction: 0x2001a6b8

080177c0 <_format_int>:
 80177c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80177c2:	b091      	sub	sp, #68	@ 0x44
 80177c4:	4606      	mov	r6, r0
 80177c6:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 80177ca:	bb91      	cbnz	r1, 8017832 <_format_int+0x72>
 80177cc:	2330      	movs	r3, #48	@ 0x30
 80177ce:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 80177d2:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 80177d6:	6832      	ldr	r2, [r6, #0]
 80177d8:	07d5      	lsls	r5, r2, #31
 80177da:	d507      	bpl.n	80177ec <_format_int+0x2c>
 80177dc:	6870      	ldr	r0, [r6, #4]
 80177de:	4669      	mov	r1, sp
 80177e0:	2530      	movs	r5, #48	@ 0x30
 80177e2:	1ae7      	subs	r7, r4, r3
 80177e4:	4287      	cmp	r7, r0
 80177e6:	da01      	bge.n	80177ec <_format_int+0x2c>
 80177e8:	428b      	cmp	r3, r1
 80177ea:	d833      	bhi.n	8017854 <_format_int+0x94>
 80177ec:	0690      	lsls	r0, r2, #26
 80177ee:	d507      	bpl.n	8017800 <_format_int+0x40>
 80177f0:	68b0      	ldr	r0, [r6, #8]
 80177f2:	4669      	mov	r1, sp
 80177f4:	2530      	movs	r5, #48	@ 0x30
 80177f6:	1ae7      	subs	r7, r4, r3
 80177f8:	4287      	cmp	r7, r0
 80177fa:	da01      	bge.n	8017800 <_format_int+0x40>
 80177fc:	428b      	cmp	r3, r1
 80177fe:	d82c      	bhi.n	801785a <_format_int+0x9a>
 8017800:	0711      	lsls	r1, r2, #28
 8017802:	bf44      	itt	mi
 8017804:	212d      	movmi	r1, #45	@ 0x2d
 8017806:	f803 1901 	strbmi.w	r1, [r3], #-1
 801780a:	0652      	lsls	r2, r2, #25
 801780c:	d407      	bmi.n	801781e <_format_int+0x5e>
 801780e:	68b1      	ldr	r1, [r6, #8]
 8017810:	466a      	mov	r2, sp
 8017812:	2020      	movs	r0, #32
 8017814:	1ae5      	subs	r5, r4, r3
 8017816:	428d      	cmp	r5, r1
 8017818:	da01      	bge.n	801781e <_format_int+0x5e>
 801781a:	4293      	cmp	r3, r2
 801781c:	d820      	bhi.n	8017860 <_format_int+0xa0>
 801781e:	1ae5      	subs	r5, r4, r3
 8017820:	1c5c      	adds	r4, r3, #1
 8017822:	ab10      	add	r3, sp, #64	@ 0x40
 8017824:	429c      	cmp	r4, r3
 8017826:	d31e      	bcc.n	8017866 <_format_int+0xa6>
 8017828:	68b3      	ldr	r3, [r6, #8]
 801782a:	42ab      	cmp	r3, r5
 801782c:	dc21      	bgt.n	8017872 <_format_int+0xb2>
 801782e:	b011      	add	sp, #68	@ 0x44
 8017830:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017832:	4623      	mov	r3, r4
 8017834:	200a      	movs	r0, #10
 8017836:	466f      	mov	r7, sp
 8017838:	fbb1 f5f0 	udiv	r5, r1, r0
 801783c:	fb00 1215 	mls	r2, r0, r5, r1
 8017840:	3230      	adds	r2, #48	@ 0x30
 8017842:	f803 2901 	strb.w	r2, [r3], #-1
 8017846:	460a      	mov	r2, r1
 8017848:	2a09      	cmp	r2, #9
 801784a:	4629      	mov	r1, r5
 801784c:	d9c3      	bls.n	80177d6 <_format_int+0x16>
 801784e:	42bb      	cmp	r3, r7
 8017850:	d1f2      	bne.n	8017838 <_format_int+0x78>
 8017852:	e7c0      	b.n	80177d6 <_format_int+0x16>
 8017854:	f803 5901 	strb.w	r5, [r3], #-1
 8017858:	e7c3      	b.n	80177e2 <_format_int+0x22>
 801785a:	f803 5901 	strb.w	r5, [r3], #-1
 801785e:	e7ca      	b.n	80177f6 <_format_int+0x36>
 8017860:	f803 0901 	strb.w	r0, [r3], #-1
 8017864:	e7d6      	b.n	8017814 <_format_int+0x54>
 8017866:	f814 1b01 	ldrb.w	r1, [r4], #1
 801786a:	4630      	mov	r0, r6
 801786c:	f7ff ff90 	bl	8017790 <_xputch>
 8017870:	e7d7      	b.n	8017822 <_format_int+0x62>
 8017872:	2120      	movs	r1, #32
 8017874:	4630      	mov	r0, r6
 8017876:	f7ff ff8b 	bl	8017790 <_xputch>
 801787a:	3501      	adds	r5, #1
 801787c:	e7d4      	b.n	8017828 <_format_int+0x68>

0801787e <_format_hex>:
 801787e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017880:	b091      	sub	sp, #68	@ 0x44
 8017882:	6804      	ldr	r4, [r0, #0]
 8017884:	4606      	mov	r6, r0
 8017886:	f10d 023f 	add.w	r2, sp, #63	@ 0x3f
 801788a:	bb61      	cbnz	r1, 80178e6 <_format_hex+0x68>
 801788c:	2330      	movs	r3, #48	@ 0x30
 801788e:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8017892:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 8017896:	07e5      	lsls	r5, r4, #31
 8017898:	d507      	bpl.n	80178aa <_format_hex+0x2c>
 801789a:	6870      	ldr	r0, [r6, #4]
 801789c:	4669      	mov	r1, sp
 801789e:	2530      	movs	r5, #48	@ 0x30
 80178a0:	1ad7      	subs	r7, r2, r3
 80178a2:	4287      	cmp	r7, r0
 80178a4:	da01      	bge.n	80178aa <_format_hex+0x2c>
 80178a6:	428b      	cmp	r3, r1
 80178a8:	d831      	bhi.n	801790e <_format_hex+0x90>
 80178aa:	06a0      	lsls	r0, r4, #26
 80178ac:	d507      	bpl.n	80178be <_format_hex+0x40>
 80178ae:	68b0      	ldr	r0, [r6, #8]
 80178b0:	4669      	mov	r1, sp
 80178b2:	2530      	movs	r5, #48	@ 0x30
 80178b4:	1ad7      	subs	r7, r2, r3
 80178b6:	4287      	cmp	r7, r0
 80178b8:	da01      	bge.n	80178be <_format_hex+0x40>
 80178ba:	428b      	cmp	r3, r1
 80178bc:	d82a      	bhi.n	8017914 <_format_hex+0x96>
 80178be:	0661      	lsls	r1, r4, #25
 80178c0:	d407      	bmi.n	80178d2 <_format_hex+0x54>
 80178c2:	68b0      	ldr	r0, [r6, #8]
 80178c4:	4669      	mov	r1, sp
 80178c6:	2420      	movs	r4, #32
 80178c8:	1ad5      	subs	r5, r2, r3
 80178ca:	4285      	cmp	r5, r0
 80178cc:	da01      	bge.n	80178d2 <_format_hex+0x54>
 80178ce:	428b      	cmp	r3, r1
 80178d0:	d823      	bhi.n	801791a <_format_hex+0x9c>
 80178d2:	1ad5      	subs	r5, r2, r3
 80178d4:	1c5c      	adds	r4, r3, #1
 80178d6:	ab10      	add	r3, sp, #64	@ 0x40
 80178d8:	429c      	cmp	r4, r3
 80178da:	d321      	bcc.n	8017920 <_format_hex+0xa2>
 80178dc:	68b3      	ldr	r3, [r6, #8]
 80178de:	42ab      	cmp	r3, r5
 80178e0:	dc24      	bgt.n	801792c <_format_hex+0xae>
 80178e2:	b011      	add	sp, #68	@ 0x44
 80178e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80178e6:	f014 0f02 	tst.w	r4, #2
 80178ea:	bf0c      	ite	eq
 80178ec:	2757      	moveq	r7, #87	@ 0x57
 80178ee:	2737      	movne	r7, #55	@ 0x37
 80178f0:	4613      	mov	r3, r2
 80178f2:	466d      	mov	r5, sp
 80178f4:	f001 000f 	and.w	r0, r1, #15
 80178f8:	2809      	cmp	r0, #9
 80178fa:	bf94      	ite	ls
 80178fc:	3030      	addls	r0, #48	@ 0x30
 80178fe:	19c0      	addhi	r0, r0, r7
 8017900:	0909      	lsrs	r1, r1, #4
 8017902:	f803 0901 	strb.w	r0, [r3], #-1
 8017906:	d0c6      	beq.n	8017896 <_format_hex+0x18>
 8017908:	42ab      	cmp	r3, r5
 801790a:	d1f3      	bne.n	80178f4 <_format_hex+0x76>
 801790c:	e7c3      	b.n	8017896 <_format_hex+0x18>
 801790e:	f803 5901 	strb.w	r5, [r3], #-1
 8017912:	e7c5      	b.n	80178a0 <_format_hex+0x22>
 8017914:	f803 5901 	strb.w	r5, [r3], #-1
 8017918:	e7cc      	b.n	80178b4 <_format_hex+0x36>
 801791a:	f803 4901 	strb.w	r4, [r3], #-1
 801791e:	e7d3      	b.n	80178c8 <_format_hex+0x4a>
 8017920:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017924:	4630      	mov	r0, r6
 8017926:	f7ff ff33 	bl	8017790 <_xputch>
 801792a:	e7d4      	b.n	80178d6 <_format_hex+0x58>
 801792c:	2120      	movs	r1, #32
 801792e:	4630      	mov	r0, r6
 8017930:	f7ff ff2e 	bl	8017790 <_xputch>
 8017934:	3501      	adds	r5, #1
 8017936:	e7d1      	b.n	80178dc <_format_hex+0x5e>

08017938 <_vprintf>:
 8017938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801793c:	2700      	movs	r7, #0
 801793e:	b096      	sub	sp, #88	@ 0x58
 8017940:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8017944:	460b      	mov	r3, r1
 8017946:	4614      	mov	r4, r2
 8017948:	f04f 080a 	mov.w	r8, #10
 801794c:	7819      	ldrb	r1, [r3, #0]
 801794e:	b919      	cbnz	r1, 8017958 <_vprintf+0x20>
 8017950:	9804      	ldr	r0, [sp, #16]
 8017952:	b016      	add	sp, #88	@ 0x58
 8017954:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017958:	2925      	cmp	r1, #37	@ 0x25
 801795a:	f103 0501 	add.w	r5, r3, #1
 801795e:	d004      	beq.n	801796a <_vprintf+0x32>
 8017960:	a801      	add	r0, sp, #4
 8017962:	f7ff ff15 	bl	8017790 <_xputch>
 8017966:	462b      	mov	r3, r5
 8017968:	e7f0      	b.n	801794c <_vprintf+0x14>
 801796a:	785a      	ldrb	r2, [r3, #1]
 801796c:	9703      	str	r7, [sp, #12]
 801796e:	2a30      	cmp	r2, #48	@ 0x30
 8017970:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8017974:	d127      	bne.n	80179c6 <_vprintf+0x8e>
 8017976:	2220      	movs	r2, #32
 8017978:	9201      	str	r2, [sp, #4]
 801797a:	1c9d      	adds	r5, r3, #2
 801797c:	2200      	movs	r2, #0
 801797e:	462e      	mov	r6, r5
 8017980:	4613      	mov	r3, r2
 8017982:	7831      	ldrb	r1, [r6, #0]
 8017984:	f1a1 0030 	sub.w	r0, r1, #48	@ 0x30
 8017988:	2809      	cmp	r0, #9
 801798a:	4635      	mov	r5, r6
 801798c:	f106 0601 	add.w	r6, r6, #1
 8017990:	d91d      	bls.n	80179ce <_vprintf+0x96>
 8017992:	b12a      	cbz	r2, 80179a0 <_vprintf+0x68>
 8017994:	9303      	str	r3, [sp, #12]
 8017996:	b11b      	cbz	r3, 80179a0 <_vprintf+0x68>
 8017998:	9b01      	ldr	r3, [sp, #4]
 801799a:	f043 0310 	orr.w	r3, r3, #16
 801799e:	9301      	str	r3, [sp, #4]
 80179a0:	292e      	cmp	r1, #46	@ 0x2e
 80179a2:	d123      	bne.n	80179ec <_vprintf+0xb4>
 80179a4:	786b      	ldrb	r3, [r5, #1]
 80179a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80179a8:	d015      	beq.n	80179d6 <_vprintf+0x9e>
 80179aa:	2100      	movs	r1, #0
 80179ac:	1c68      	adds	r0, r5, #1
 80179ae:	460a      	mov	r2, r1
 80179b0:	260a      	movs	r6, #10
 80179b2:	7803      	ldrb	r3, [r0, #0]
 80179b4:	3b30      	subs	r3, #48	@ 0x30
 80179b6:	2b09      	cmp	r3, #9
 80179b8:	4605      	mov	r5, r0
 80179ba:	f100 0001 	add.w	r0, r0, #1
 80179be:	d959      	bls.n	8017a74 <_vprintf+0x13c>
 80179c0:	b181      	cbz	r1, 80179e4 <_vprintf+0xac>
 80179c2:	9202      	str	r2, [sp, #8]
 80179c4:	e00e      	b.n	80179e4 <_vprintf+0xac>
 80179c6:	2a2d      	cmp	r2, #45	@ 0x2d
 80179c8:	d1d8      	bne.n	801797c <_vprintf+0x44>
 80179ca:	2240      	movs	r2, #64	@ 0x40
 80179cc:	e7d4      	b.n	8017978 <_vprintf+0x40>
 80179ce:	fb08 0303 	mla	r3, r8, r3, r0
 80179d2:	2201      	movs	r2, #1
 80179d4:	e7d5      	b.n	8017982 <_vprintf+0x4a>
 80179d6:	f854 3b04 	ldr.w	r3, [r4], #4
 80179da:	2b00      	cmp	r3, #0
 80179dc:	bfb8      	it	lt
 80179de:	425b      	neglt	r3, r3
 80179e0:	3502      	adds	r5, #2
 80179e2:	9302      	str	r3, [sp, #8]
 80179e4:	9b01      	ldr	r3, [sp, #4]
 80179e6:	f043 0301 	orr.w	r3, r3, #1
 80179ea:	9301      	str	r3, [sp, #4]
 80179ec:	782b      	ldrb	r3, [r5, #0]
 80179ee:	2b6c      	cmp	r3, #108	@ 0x6c
 80179f0:	bf04      	itt	eq
 80179f2:	3501      	addeq	r5, #1
 80179f4:	9b01      	ldreq	r3, [sp, #4]
 80179f6:	7829      	ldrb	r1, [r5, #0]
 80179f8:	bf04      	itt	eq
 80179fa:	f043 0304 	orreq.w	r3, r3, #4
 80179fe:	9301      	streq	r3, [sp, #4]
 8017a00:	2958      	cmp	r1, #88	@ 0x58
 8017a02:	f000 8143 	beq.w	8017c8c <_vprintf+0x354>
 8017a06:	f1a1 0363 	sub.w	r3, r1, #99	@ 0x63
 8017a0a:	b2da      	uxtb	r2, r3
 8017a0c:	2a15      	cmp	r2, #21
 8017a0e:	d8a7      	bhi.n	8017960 <_vprintf+0x28>
 8017a10:	2b15      	cmp	r3, #21
 8017a12:	d8a5      	bhi.n	8017960 <_vprintf+0x28>
 8017a14:	a201      	add	r2, pc, #4	@ (adr r2, 8017a1c <_vprintf+0xe4>)
 8017a16:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8017a1a:	bf00      	nop
 8017a1c:	08017a7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, fp, ip, sp, lr}
 8017a20:	08017a8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, fp, ip, sp, lr}
 8017a24:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a28:	08017aa5 	stmdaeq	r1, {r0, r2, r5, r7, r9, fp, ip, sp, lr}
 8017a2c:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a30:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a34:	08017a8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, fp, ip, sp, lr}
 8017a38:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a3c:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a40:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a44:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a48:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a4c:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a50:	08017bed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 8017a54:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a58:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a5c:	08017c13 	stmdaeq	r1, {r0, r1, r4, sl, fp, ip, sp, lr}
 8017a60:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a64:	08017c87 	stmdaeq	r1, {r0, r1, r2, r7, sl, fp, ip, sp, lr}
 8017a68:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a6c:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a70:	08017c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr}
 8017a74:	fb06 3202 	mla	r2, r6, r2, r3
 8017a78:	2101      	movs	r1, #1
 8017a7a:	e79a      	b.n	80179b2 <_vprintf+0x7a>
 8017a7c:	f854 1b04 	ldr.w	r1, [r4], #4
 8017a80:	a801      	add	r0, sp, #4
 8017a82:	f7ff fe85 	bl	8017790 <_xputch>
 8017a86:	3501      	adds	r5, #1
 8017a88:	e76d      	b.n	8017966 <_vprintf+0x2e>
 8017a8a:	f854 1b04 	ldr.w	r1, [r4], #4
 8017a8e:	9b01      	ldr	r3, [sp, #4]
 8017a90:	2900      	cmp	r1, #0
 8017a92:	da03      	bge.n	8017a9c <_vprintf+0x164>
 8017a94:	f043 0308 	orr.w	r3, r3, #8
 8017a98:	9301      	str	r3, [sp, #4]
 8017a9a:	4249      	negs	r1, r1
 8017a9c:	a801      	add	r0, sp, #4
 8017a9e:	f7ff fe8f 	bl	80177c0 <_format_int>
 8017aa2:	e7f0      	b.n	8017a86 <_vprintf+0x14e>
 8017aa4:	3407      	adds	r4, #7
 8017aa6:	f024 0407 	bic.w	r4, r4, #7
 8017aaa:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8017aae:	f7f1 fc1d 	bl	80092ec <__aeabi_d2f>
 8017ab2:	9b01      	ldr	r3, [sp, #4]
 8017ab4:	ee07 0a90 	vmov	s15, r0
 8017ab8:	07de      	lsls	r6, r3, #31
 8017aba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017abe:	bf4c      	ite	mi
 8017ac0:	9e02      	ldrmi	r6, [sp, #8]
 8017ac2:	2606      	movpl	r6, #6
 8017ac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ac8:	bf48      	it	mi
 8017aca:	eef1 7a67 	vnegmi.f32	s15, s15
 8017ace:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8017ad2:	bf4a      	itet	mi
 8017ad4:	f10d 0a19 	addmi.w	sl, sp, #25
 8017ad8:	f10d 0a18 	addpl.w	sl, sp, #24
 8017adc:	232d      	movmi	r3, #45	@ 0x2d
 8017ade:	ee17 0a10 	vmov	r0, s14
 8017ae2:	f04f 0200 	mov.w	r2, #0
 8017ae6:	4651      	mov	r1, sl
 8017ae8:	bf48      	it	mi
 8017aea:	f88d 3018 	strbmi.w	r3, [sp, #24]
 8017aee:	f7ff fe13 	bl	8017718 <_itostr>
 8017af2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017af6:	232e      	movs	r3, #46	@ 0x2e
 8017af8:	f80a 3000 	strb.w	r3, [sl, r0]
 8017afc:	eb0a 0900 	add.w	r9, sl, r0
 8017b00:	230a      	movs	r3, #10
 8017b02:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8017b06:	1c72      	adds	r2, r6, #1
 8017b08:	f109 0901 	add.w	r9, r9, #1
 8017b0c:	4619      	mov	r1, r3
 8017b0e:	2e00      	cmp	r6, #0
 8017b10:	dc41      	bgt.n	8017b96 <_vprintf+0x25e>
 8017b12:	ee07 3a10 	vmov	s14, r3
 8017b16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b1a:	4649      	mov	r1, r9
 8017b1c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017b20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017b24:	ee17 0a90 	vmov	r0, s15
 8017b28:	f7ff fdf6 	bl	8017718 <_itostr>
 8017b2c:	4448      	add	r0, r9
 8017b2e:	f10d 0918 	add.w	r9, sp, #24
 8017b32:	eba0 0009 	sub.w	r0, r0, r9
 8017b36:	1e46      	subs	r6, r0, #1
 8017b38:	eb09 0206 	add.w	r2, r9, r6
 8017b3c:	f819 3006 	ldrb.w	r3, [r9, r6]
 8017b40:	2b34      	cmp	r3, #52	@ 0x34
 8017b42:	d911      	bls.n	8017b68 <_vprintf+0x230>
 8017b44:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8017b48:	292e      	cmp	r1, #46	@ 0x2e
 8017b4a:	f102 33ff 	add.w	r3, r2, #4294967295	@ 0xffffffff
 8017b4e:	d028      	beq.n	8017ba2 <_vprintf+0x26a>
 8017b50:	469c      	mov	ip, r3
 8017b52:	f04f 0e30 	mov.w	lr, #48	@ 0x30
 8017b56:	4663      	mov	r3, ip
 8017b58:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8017b5c:	2939      	cmp	r1, #57	@ 0x39
 8017b5e:	d01d      	beq.n	8017b9c <_vprintf+0x264>
 8017b60:	292e      	cmp	r1, #46	@ 0x2e
 8017b62:	d01e      	beq.n	8017ba2 <_vprintf+0x26a>
 8017b64:	3101      	adds	r1, #1
 8017b66:	7019      	strb	r1, [r3, #0]
 8017b68:	f106 0358 	add.w	r3, r6, #88	@ 0x58
 8017b6c:	446b      	add	r3, sp
 8017b6e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8017b72:	2b2e      	cmp	r3, #46	@ 0x2e
 8017b74:	bf08      	it	eq
 8017b76:	f106 36ff 	addeq.w	r6, r6, #4294967295	@ 0xffffffff
 8017b7a:	46b2      	mov	sl, r6
 8017b7c:	9b03      	ldr	r3, [sp, #12]
 8017b7e:	4553      	cmp	r3, sl
 8017b80:	dc2d      	bgt.n	8017bde <_vprintf+0x2a6>
 8017b82:	2e00      	cmp	r6, #0
 8017b84:	f77f af7f 	ble.w	8017a86 <_vprintf+0x14e>
 8017b88:	f819 1b01 	ldrb.w	r1, [r9], #1
 8017b8c:	a801      	add	r0, sp, #4
 8017b8e:	f7ff fdff 	bl	8017790 <_xputch>
 8017b92:	3e01      	subs	r6, #1
 8017b94:	e7f5      	b.n	8017b82 <_vprintf+0x24a>
 8017b96:	434b      	muls	r3, r1
 8017b98:	3e01      	subs	r6, #1
 8017b9a:	e7b8      	b.n	8017b0e <_vprintf+0x1d6>
 8017b9c:	f88c e001 	strb.w	lr, [ip, #1]
 8017ba0:	e7d9      	b.n	8017b56 <_vprintf+0x21e>
 8017ba2:	3b01      	subs	r3, #1
 8017ba4:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 8017ba8:	7819      	ldrb	r1, [r3, #0]
 8017baa:	2939      	cmp	r1, #57	@ 0x39
 8017bac:	d10d      	bne.n	8017bca <_vprintf+0x292>
 8017bae:	454b      	cmp	r3, r9
 8017bb0:	d208      	bcs.n	8017bc4 <_vprintf+0x28c>
 8017bb2:	1c51      	adds	r1, r2, #1
 8017bb4:	1c9e      	adds	r6, r3, #2
 8017bb6:	3202      	adds	r2, #2
 8017bb8:	4296      	cmp	r6, r2
 8017bba:	d10b      	bne.n	8017bd4 <_vprintf+0x29c>
 8017bbc:	2231      	movs	r2, #49	@ 0x31
 8017bbe:	705a      	strb	r2, [r3, #1]
 8017bc0:	4606      	mov	r6, r0
 8017bc2:	e7d1      	b.n	8017b68 <_vprintf+0x230>
 8017bc4:	f803 c901 	strb.w	ip, [r3], #-1
 8017bc8:	e7ee      	b.n	8017ba8 <_vprintf+0x270>
 8017bca:	454b      	cmp	r3, r9
 8017bcc:	d3f1      	bcc.n	8017bb2 <_vprintf+0x27a>
 8017bce:	292d      	cmp	r1, #45	@ 0x2d
 8017bd0:	d1c8      	bne.n	8017b64 <_vprintf+0x22c>
 8017bd2:	e7ee      	b.n	8017bb2 <_vprintf+0x27a>
 8017bd4:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8017bd8:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8017bdc:	e7ec      	b.n	8017bb8 <_vprintf+0x280>
 8017bde:	2120      	movs	r1, #32
 8017be0:	a801      	add	r0, sp, #4
 8017be2:	f7ff fdd5 	bl	8017790 <_xputch>
 8017be6:	f10a 0a01 	add.w	sl, sl, #1
 8017bea:	e7c7      	b.n	8017b7c <_vprintf+0x244>
 8017bec:	2308      	movs	r3, #8
 8017bee:	f854 6b04 	ldr.w	r6, [r4], #4
 8017bf2:	9303      	str	r3, [sp, #12]
 8017bf4:	2130      	movs	r1, #48	@ 0x30
 8017bf6:	2320      	movs	r3, #32
 8017bf8:	a801      	add	r0, sp, #4
 8017bfa:	9301      	str	r3, [sp, #4]
 8017bfc:	f7ff fdc8 	bl	8017790 <_xputch>
 8017c00:	2178      	movs	r1, #120	@ 0x78
 8017c02:	a801      	add	r0, sp, #4
 8017c04:	f7ff fdc4 	bl	8017790 <_xputch>
 8017c08:	4631      	mov	r1, r6
 8017c0a:	a801      	add	r0, sp, #4
 8017c0c:	f7ff fe37 	bl	801787e <_format_hex>
 8017c10:	e739      	b.n	8017a86 <_vprintf+0x14e>
 8017c12:	f854 9b04 	ldr.w	r9, [r4], #4
 8017c16:	2600      	movs	r6, #0
 8017c18:	f819 3006 	ldrb.w	r3, [r9, r6]
 8017c1c:	b993      	cbnz	r3, 8017c44 <_vprintf+0x30c>
 8017c1e:	9b01      	ldr	r3, [sp, #4]
 8017c20:	07d9      	lsls	r1, r3, #31
 8017c22:	d503      	bpl.n	8017c2c <_vprintf+0x2f4>
 8017c24:	9b02      	ldr	r3, [sp, #8]
 8017c26:	429e      	cmp	r6, r3
 8017c28:	bfa8      	it	ge
 8017c2a:	461e      	movge	r6, r3
 8017c2c:	9b01      	ldr	r3, [sp, #4]
 8017c2e:	065a      	lsls	r2, r3, #25
 8017c30:	f106 0a01 	add.w	sl, r6, #1
 8017c34:	d403      	bmi.n	8017c3e <_vprintf+0x306>
 8017c36:	9b03      	ldr	r3, [sp, #12]
 8017c38:	429e      	cmp	r6, r3
 8017c3a:	db05      	blt.n	8017c48 <_vprintf+0x310>
 8017c3c:	4656      	mov	r6, sl
 8017c3e:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8017c42:	e00d      	b.n	8017c60 <_vprintf+0x328>
 8017c44:	3601      	adds	r6, #1
 8017c46:	e7e7      	b.n	8017c18 <_vprintf+0x2e0>
 8017c48:	2120      	movs	r1, #32
 8017c4a:	a801      	add	r0, sp, #4
 8017c4c:	f7ff fda0 	bl	8017790 <_xputch>
 8017c50:	4656      	mov	r6, sl
 8017c52:	e7eb      	b.n	8017c2c <_vprintf+0x2f4>
 8017c54:	a801      	add	r0, sp, #4
 8017c56:	f7ff fd9b 	bl	8017790 <_xputch>
 8017c5a:	9b02      	ldr	r3, [sp, #8]
 8017c5c:	3b01      	subs	r3, #1
 8017c5e:	9302      	str	r3, [sp, #8]
 8017c60:	9b01      	ldr	r3, [sp, #4]
 8017c62:	07db      	lsls	r3, r3, #31
 8017c64:	d501      	bpl.n	8017c6a <_vprintf+0x332>
 8017c66:	9b02      	ldr	r3, [sp, #8]
 8017c68:	b11b      	cbz	r3, 8017c72 <_vprintf+0x33a>
 8017c6a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8017c6e:	2900      	cmp	r1, #0
 8017c70:	d1f0      	bne.n	8017c54 <_vprintf+0x31c>
 8017c72:	9b03      	ldr	r3, [sp, #12]
 8017c74:	42b3      	cmp	r3, r6
 8017c76:	f77f af06 	ble.w	8017a86 <_vprintf+0x14e>
 8017c7a:	2120      	movs	r1, #32
 8017c7c:	a801      	add	r0, sp, #4
 8017c7e:	f7ff fd87 	bl	8017790 <_xputch>
 8017c82:	3601      	adds	r6, #1
 8017c84:	e7f5      	b.n	8017c72 <_vprintf+0x33a>
 8017c86:	f854 1b04 	ldr.w	r1, [r4], #4
 8017c8a:	e707      	b.n	8017a9c <_vprintf+0x164>
 8017c8c:	9b01      	ldr	r3, [sp, #4]
 8017c8e:	f043 0302 	orr.w	r3, r3, #2
 8017c92:	9301      	str	r3, [sp, #4]
 8017c94:	f854 1b04 	ldr.w	r1, [r4], #4
 8017c98:	e7b7      	b.n	8017c0a <_vprintf+0x2d2>
 8017c9a:	bf00      	nop

08017c9c <printf>:
 8017c9c:	b40f      	push	{r0, r1, r2, r3}
 8017c9e:	b507      	push	{r0, r1, r2, lr}
 8017ca0:	aa04      	add	r2, sp, #16
 8017ca2:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8017ca6:	f852 1b04 	ldr.w	r1, [r2], #4
 8017caa:	9201      	str	r2, [sp, #4]
 8017cac:	f7ff fe44 	bl	8017938 <_vprintf>
 8017cb0:	b003      	add	sp, #12
 8017cb2:	f85d eb04 	ldr.w	lr, [sp], #4
 8017cb6:	b004      	add	sp, #16
 8017cb8:	4770      	bx	lr
	...

08017cbc <sprintf>:
 8017cbc:	b40e      	push	{r1, r2, r3}
 8017cbe:	b517      	push	{r0, r1, r2, r4, lr}
 8017cc0:	4c09      	ldr	r4, [pc, #36]	@ (8017ce8 <sprintf+0x2c>)
 8017cc2:	aa05      	add	r2, sp, #20
 8017cc4:	6020      	str	r0, [r4, #0]
 8017cc6:	f852 1b04 	ldr.w	r1, [r2], #4
 8017cca:	9201      	str	r2, [sp, #4]
 8017ccc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8017cd0:	f7ff fe32 	bl	8017938 <_vprintf>
 8017cd4:	6822      	ldr	r2, [r4, #0]
 8017cd6:	2300      	movs	r3, #0
 8017cd8:	7013      	strb	r3, [r2, #0]
 8017cda:	6023      	str	r3, [r4, #0]
 8017cdc:	b003      	add	sp, #12
 8017cde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ce2:	b003      	add	sp, #12
 8017ce4:	4770      	bx	lr
 8017ce6:	bf00      	nop
 8017ce8:	2001a6b8 			@ <UNDEFINED> instruction: 0x2001a6b8

08017cec <snprintf>:
 8017cec:	b40c      	push	{r2, r3}
 8017cee:	b513      	push	{r0, r1, r4, lr}
 8017cf0:	4c09      	ldr	r4, [pc, #36]	@ (8017d18 <snprintf+0x2c>)
 8017cf2:	aa04      	add	r2, sp, #16
 8017cf4:	460b      	mov	r3, r1
 8017cf6:	6020      	str	r0, [r4, #0]
 8017cf8:	f852 1b04 	ldr.w	r1, [r2], #4
 8017cfc:	9201      	str	r2, [sp, #4]
 8017cfe:	4618      	mov	r0, r3
 8017d00:	f7ff fe1a 	bl	8017938 <_vprintf>
 8017d04:	6822      	ldr	r2, [r4, #0]
 8017d06:	2300      	movs	r3, #0
 8017d08:	7013      	strb	r3, [r2, #0]
 8017d0a:	6023      	str	r3, [r4, #0]
 8017d0c:	b002      	add	sp, #8
 8017d0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017d12:	b002      	add	sp, #8
 8017d14:	4770      	bx	lr
 8017d16:	bf00      	nop
 8017d18:	2001a6b8 			@ <UNDEFINED> instruction: 0x2001a6b8

08017d1c <vsnprintf>:
 8017d1c:	b538      	push	{r3, r4, r5, lr}
 8017d1e:	4c06      	ldr	r4, [pc, #24]	@ (8017d38 <vsnprintf+0x1c>)
 8017d20:	4605      	mov	r5, r0
 8017d22:	4608      	mov	r0, r1
 8017d24:	4611      	mov	r1, r2
 8017d26:	461a      	mov	r2, r3
 8017d28:	6025      	str	r5, [r4, #0]
 8017d2a:	f7ff fe05 	bl	8017938 <_vprintf>
 8017d2e:	6822      	ldr	r2, [r4, #0]
 8017d30:	2300      	movs	r3, #0
 8017d32:	7013      	strb	r3, [r2, #0]
 8017d34:	6023      	str	r3, [r4, #0]
 8017d36:	bd38      	pop	{r3, r4, r5, pc}
 8017d38:	2001a6b8 			@ <UNDEFINED> instruction: 0x2001a6b8

08017d3c <putchar>:
 8017d3c:	b508      	push	{r3, lr}
 8017d3e:	f7fd fca1 	bl	8015684 <console_putc>
 8017d42:	2001      	movs	r0, #1
 8017d44:	bd08      	pop	{r3, pc}

08017d46 <puts>:
 8017d46:	b508      	push	{r3, lr}
 8017d48:	f7fd fc9e 	bl	8015688 <console_puts>
 8017d4c:	200a      	movs	r0, #10
 8017d4e:	f7fd fc99 	bl	8015684 <console_putc>
 8017d52:	2001      	movs	r0, #1
 8017d54:	bd08      	pop	{r3, pc}
	...

08017d58 <random>:
 8017d58:	4a06      	ldr	r2, [pc, #24]	@ (8017d74 <random+0x1c>)
 8017d5a:	6813      	ldr	r3, [r2, #0]
 8017d5c:	10d8      	asrs	r0, r3, #3
 8017d5e:	ea80 00a3 	eor.w	r0, r0, r3, asr #2
 8017d62:	4058      	eors	r0, r3
 8017d64:	ea80 1063 	eor.w	r0, r0, r3, asr #5
 8017d68:	03c0      	lsls	r0, r0, #15
 8017d6a:	b280      	uxth	r0, r0
 8017d6c:	ea40 0063 	orr.w	r0, r0, r3, asr #1
 8017d70:	6010      	str	r0, [r2, #0]
 8017d72:	4770      	bx	lr
 8017d74:	20000004 	andcs	r0, r0, r4

08017d78 <strtok>:
 8017d78:	b570      	push	{r4, r5, r6, lr}
 8017d7a:	4603      	mov	r3, r0
 8017d7c:	b910      	cbnz	r0, 8017d84 <strtok+0xc>
 8017d7e:	4b12      	ldr	r3, [pc, #72]	@ (8017dc8 <strtok+0x50>)
 8017d80:	681b      	ldr	r3, [r3, #0]
 8017d82:	b14b      	cbz	r3, 8017d98 <strtok+0x20>
 8017d84:	4618      	mov	r0, r3
 8017d86:	f813 2b01 	ldrb.w	r2, [r3], #1
 8017d8a:	460d      	mov	r5, r1
 8017d8c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8017d90:	b924      	cbnz	r4, 8017d9c <strtok+0x24>
 8017d92:	b94a      	cbnz	r2, 8017da8 <strtok+0x30>
 8017d94:	4b0c      	ldr	r3, [pc, #48]	@ (8017dc8 <strtok+0x50>)
 8017d96:	601a      	str	r2, [r3, #0]
 8017d98:	2000      	movs	r0, #0
 8017d9a:	bd70      	pop	{r4, r5, r6, pc}
 8017d9c:	42a2      	cmp	r2, r4
 8017d9e:	d1f5      	bne.n	8017d8c <strtok+0x14>
 8017da0:	e7f0      	b.n	8017d84 <strtok+0xc>
 8017da2:	4613      	mov	r3, r2
 8017da4:	e00c      	b.n	8017dc0 <strtok+0x48>
 8017da6:	b91c      	cbnz	r4, 8017db0 <strtok+0x38>
 8017da8:	461e      	mov	r6, r3
 8017daa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8017dae:	460d      	mov	r5, r1
 8017db0:	f815 4b01 	ldrb.w	r4, [r5], #1
 8017db4:	42a2      	cmp	r2, r4
 8017db6:	d1f6      	bne.n	8017da6 <strtok+0x2e>
 8017db8:	2a00      	cmp	r2, #0
 8017dba:	d0f2      	beq.n	8017da2 <strtok+0x2a>
 8017dbc:	2200      	movs	r2, #0
 8017dbe:	7032      	strb	r2, [r6, #0]
 8017dc0:	4a01      	ldr	r2, [pc, #4]	@ (8017dc8 <strtok+0x50>)
 8017dc2:	6013      	str	r3, [r2, #0]
 8017dc4:	e7e9      	b.n	8017d9a <strtok+0x22>
 8017dc6:	bf00      	nop
 8017dc8:	2001a6bc 			@ <UNDEFINED> instruction: 0x2001a6bc

08017dcc <uuid_unparse_x>:
 8017dcc:	b530      	push	{r4, r5, lr}
 8017dce:	4603      	mov	r3, r0
 8017dd0:	4608      	mov	r0, r1
 8017dd2:	4611      	mov	r1, r2
 8017dd4:	681a      	ldr	r2, [r3, #0]
 8017dd6:	891c      	ldrh	r4, [r3, #8]
 8017dd8:	b08f      	sub	sp, #60	@ 0x3c
 8017dda:	ba12      	rev	r2, r2
 8017ddc:	920a      	str	r2, [sp, #40]	@ 0x28
 8017dde:	889a      	ldrh	r2, [r3, #4]
 8017de0:	ba52      	rev16	r2, r2
 8017de2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8017de6:	88da      	ldrh	r2, [r3, #6]
 8017de8:	ba64      	rev16	r4, r4
 8017dea:	ba52      	rev16	r2, r2
 8017dec:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017df0:	f8ad 4030 	strh.w	r4, [sp, #48]	@ 0x30
 8017df4:	f103 020a 	add.w	r2, r3, #10
 8017df8:	f10d 0431 	add.w	r4, sp, #49	@ 0x31
 8017dfc:	3310      	adds	r3, #16
 8017dfe:	f812 5b01 	ldrb.w	r5, [r2], #1
 8017e02:	f804 5f01 	strb.w	r5, [r4, #1]!
 8017e06:	4293      	cmp	r3, r2
 8017e08:	d1f9      	bne.n	8017dfe <uuid_unparse_x+0x32>
 8017e0a:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
 8017e0e:	9208      	str	r2, [sp, #32]
 8017e10:	f89d 2036 	ldrb.w	r2, [sp, #54]	@ 0x36
 8017e14:	9207      	str	r2, [sp, #28]
 8017e16:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
 8017e1a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8017e1e:	9206      	str	r2, [sp, #24]
 8017e20:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
 8017e24:	9205      	str	r2, [sp, #20]
 8017e26:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
 8017e2a:	9204      	str	r2, [sp, #16]
 8017e2c:	0a1b      	lsrs	r3, r3, #8
 8017e2e:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
 8017e32:	9203      	str	r2, [sp, #12]
 8017e34:	9301      	str	r3, [sp, #4]
 8017e36:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
 8017e3a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8017e3e:	9202      	str	r2, [sp, #8]
 8017e40:	9300      	str	r3, [sp, #0]
 8017e42:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017e44:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8017e48:	f7ff ff38 	bl	8017cbc <sprintf>
 8017e4c:	b00f      	add	sp, #60	@ 0x3c
 8017e4e:	bd30      	pop	{r4, r5, pc}

08017e50 <uuid_unparse>:
 8017e50:	4a01      	ldr	r2, [pc, #4]	@ (8017e58 <uuid_unparse+0x8>)
 8017e52:	f7ff bfbb 	b.w	8017dcc <uuid_unparse_x>
 8017e56:	bf00      	nop
 8017e58:	080192e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, pc}

08017e5c <__assert_func>:
 8017e5c:	b507      	push	{r0, r1, r2, lr}
 8017e5e:	460c      	mov	r4, r1
 8017e60:	4619      	mov	r1, r3
 8017e62:	b142      	cbz	r2, 8017e76 <__assert_func+0x1a>
 8017e64:	4b05      	ldr	r3, [pc, #20]	@ (8017e7c <__assert_func+0x20>)
 8017e66:	e9cd 3200 	strd	r3, r2, [sp]
 8017e6a:	4602      	mov	r2, r0
 8017e6c:	4623      	mov	r3, r4
 8017e6e:	4804      	ldr	r0, [pc, #16]	@ (8017e80 <__assert_func+0x24>)
 8017e70:	f7ff ff14 	bl	8017c9c <printf>
 8017e74:	e7fe      	b.n	8017e74 <__assert_func+0x18>
 8017e76:	4b03      	ldr	r3, [pc, #12]	@ (8017e84 <__assert_func+0x28>)
 8017e78:	461a      	mov	r2, r3
 8017e7a:	e7f4      	b.n	8017e66 <__assert_func+0xa>
 8017e7c:	08019311 	stmdaeq	r1, {r0, r4, r8, r9, ip, pc}
 8017e80:	0801931e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, ip, pc}
 8017e84:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}

08017e88 <isleapyear(int)>:
 8017e88:	2264      	movs	r2, #100	@ 0x64
 8017e8a:	fb90 f3f2 	sdiv	r3, r0, r2
 8017e8e:	fb02 0313 	mls	r3, r2, r3, r0
 8017e92:	b94b      	cbnz	r3, 8017ea8 <isleapyear(int)+0x20>
 8017e94:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8017e98:	fb90 f2f3 	sdiv	r2, r0, r3
 8017e9c:	fb03 0012 	mls	r0, r3, r2, r0
 8017ea0:	fab0 f080 	clz	r0, r0
 8017ea4:	0940      	lsrs	r0, r0, #5
 8017ea6:	4770      	bx	lr
 8017ea8:	f010 0f03 	tst.w	r0, #3
 8017eac:	bf0c      	ite	eq
 8017eae:	2001      	moveq	r0, #1
 8017eb0:	2000      	movne	r0, #0
 8017eb2:	4770      	bx	lr

08017eb4 <getdaysofmonth(int, int)>:
 8017eb4:	b510      	push	{r4, lr}
 8017eb6:	4604      	mov	r4, r0
 8017eb8:	2c01      	cmp	r4, #1
 8017eba:	4608      	mov	r0, r1
 8017ebc:	d102      	bne.n	8017ec4 <getdaysofmonth(int, int)+0x10>
 8017ebe:	f7ff ffe3 	bl	8017e88 <isleapyear(int)>
 8017ec2:	b918      	cbnz	r0, 8017ecc <getdaysofmonth(int, int)+0x18>
 8017ec4:	4b02      	ldr	r3, [pc, #8]	@ (8017ed0 <getdaysofmonth(int, int)+0x1c>)
 8017ec6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8017eca:	bd10      	pop	{r4, pc}
 8017ecc:	201d      	movs	r0, #29
 8017ece:	e7fc      	b.n	8017eca <getdaysofmonth(int, int)+0x16>
 8017ed0:	0801c4b4 	stmdaeq	r1, {r2, r4, r5, r7, sl, lr, pc}

08017ed4 <gmtime>:
 8017ed4:	b570      	push	{r4, r5, r6, lr}
 8017ed6:	2800      	cmp	r0, #0
 8017ed8:	d03c      	beq.n	8017f54 <gmtime+0x80>
 8017eda:	6803      	ldr	r3, [r0, #0]
 8017edc:	4d1e      	ldr	r5, [pc, #120]	@ (8017f58 <gmtime+0x84>)
 8017ede:	213c      	movs	r1, #60	@ 0x3c
 8017ee0:	fb93 f2f1 	sdiv	r2, r3, r1
 8017ee4:	fb01 3312 	mls	r3, r1, r2, r3
 8017ee8:	602b      	str	r3, [r5, #0]
 8017eea:	fb92 f3f1 	sdiv	r3, r2, r1
 8017eee:	fb01 2213 	mls	r2, r1, r3, r2
 8017ef2:	606a      	str	r2, [r5, #4]
 8017ef4:	2218      	movs	r2, #24
 8017ef6:	fb93 f4f2 	sdiv	r4, r3, r2
 8017efa:	fb02 3314 	mls	r3, r2, r4, r3
 8017efe:	60ab      	str	r3, [r5, #8]
 8017f00:	1d22      	adds	r2, r4, #4
 8017f02:	2307      	movs	r3, #7
 8017f04:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f08:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8017f0c:	1ad2      	subs	r2, r2, r3
 8017f0e:	61aa      	str	r2, [r5, #24]
 8017f10:	f240 71b2 	movw	r1, #1970	@ 0x7b2
 8017f14:	f240 166d 	movw	r6, #365	@ 0x16d
 8017f18:	4608      	mov	r0, r1
 8017f1a:	f7ff ffb5 	bl	8017e88 <isleapyear(int)>
 8017f1e:	2800      	cmp	r0, #0
 8017f20:	bf0c      	ite	eq
 8017f22:	4633      	moveq	r3, r6
 8017f24:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8017f28:	429c      	cmp	r4, r3
 8017f2a:	db02      	blt.n	8017f32 <gmtime+0x5e>
 8017f2c:	1ae4      	subs	r4, r4, r3
 8017f2e:	3101      	adds	r1, #1
 8017f30:	e7f2      	b.n	8017f18 <gmtime+0x44>
 8017f32:	f2a1 736c 	subw	r3, r1, #1900	@ 0x76c
 8017f36:	616b      	str	r3, [r5, #20]
 8017f38:	61ec      	str	r4, [r5, #28]
 8017f3a:	2600      	movs	r6, #0
 8017f3c:	4630      	mov	r0, r6
 8017f3e:	f7ff ffb9 	bl	8017eb4 <getdaysofmonth(int, int)>
 8017f42:	4284      	cmp	r4, r0
 8017f44:	db02      	blt.n	8017f4c <gmtime+0x78>
 8017f46:	1a24      	subs	r4, r4, r0
 8017f48:	3601      	adds	r6, #1
 8017f4a:	e7f7      	b.n	8017f3c <gmtime+0x68>
 8017f4c:	3401      	adds	r4, #1
 8017f4e:	4802      	ldr	r0, [pc, #8]	@ (8017f58 <gmtime+0x84>)
 8017f50:	612e      	str	r6, [r5, #16]
 8017f52:	60ec      	str	r4, [r5, #12]
 8017f54:	bd70      	pop	{r4, r5, r6, pc}
 8017f56:	bf00      	nop
 8017f58:	2001a6c0 	andcs	sl, r1, r0, asr #13

08017f5c <localtime>:
 8017f5c:	b507      	push	{r0, r1, r2, lr}
 8017f5e:	b140      	cbz	r0, 8017f72 <localtime+0x16>
 8017f60:	4b05      	ldr	r3, [pc, #20]	@ (8017f78 <localtime+0x1c>)
 8017f62:	6802      	ldr	r2, [r0, #0]
 8017f64:	681b      	ldr	r3, [r3, #0]
 8017f66:	681b      	ldr	r3, [r3, #0]
 8017f68:	a801      	add	r0, sp, #4
 8017f6a:	4413      	add	r3, r2
 8017f6c:	9301      	str	r3, [sp, #4]
 8017f6e:	f7ff ffb1 	bl	8017ed4 <gmtime>
 8017f72:	b003      	add	sp, #12
 8017f74:	f85d fb04 	ldr.w	pc, [sp], #4
 8017f78:	2001a6e4 	andcs	sl, r1, r4, ror #13

08017f7c <mktime>:
 8017f7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f80:	4604      	mov	r4, r0
 8017f82:	2800      	cmp	r0, #0
 8017f84:	d043      	beq.n	801800e <mktime+0x92>
 8017f86:	6941      	ldr	r1, [r0, #20]
 8017f88:	f1a1 0346 	sub.w	r3, r1, #70	@ 0x46
 8017f8c:	2b45      	cmp	r3, #69	@ 0x45
 8017f8e:	d83e      	bhi.n	801800e <mktime+0x92>
 8017f90:	f240 75b2 	movw	r5, #1970	@ 0x7b2
 8017f94:	2600      	movs	r6, #0
 8017f96:	f201 776b 	addw	r7, r1, #1899	@ 0x76b
 8017f9a:	f240 186d 	movw	r8, #365	@ 0x16d
 8017f9e:	42af      	cmp	r7, r5
 8017fa0:	da24      	bge.n	8017fec <mktime+0x70>
 8017fa2:	6927      	ldr	r7, [r4, #16]
 8017fa4:	2f0b      	cmp	r7, #11
 8017fa6:	d832      	bhi.n	801800e <mktime+0x92>
 8017fa8:	2500      	movs	r5, #0
 8017faa:	42af      	cmp	r7, r5
 8017fac:	d129      	bne.n	8018002 <mktime+0x86>
 8017fae:	68e5      	ldr	r5, [r4, #12]
 8017fb0:	2d00      	cmp	r5, #0
 8017fb2:	dd2c      	ble.n	801800e <mktime+0x92>
 8017fb4:	4638      	mov	r0, r7
 8017fb6:	f7ff ff7d 	bl	8017eb4 <getdaysofmonth(int, int)>
 8017fba:	4285      	cmp	r5, r0
 8017fbc:	dc27      	bgt.n	801800e <mktime+0x92>
 8017fbe:	3d01      	subs	r5, #1
 8017fc0:	2318      	movs	r3, #24
 8017fc2:	4435      	add	r5, r6
 8017fc4:	435d      	muls	r5, r3
 8017fc6:	68a3      	ldr	r3, [r4, #8]
 8017fc8:	2b17      	cmp	r3, #23
 8017fca:	d820      	bhi.n	801800e <mktime+0x92>
 8017fcc:	442b      	add	r3, r5
 8017fce:	213c      	movs	r1, #60	@ 0x3c
 8017fd0:	fb01 f203 	mul.w	r2, r1, r3
 8017fd4:	6863      	ldr	r3, [r4, #4]
 8017fd6:	2b3b      	cmp	r3, #59	@ 0x3b
 8017fd8:	d819      	bhi.n	801800e <mktime+0x92>
 8017fda:	6820      	ldr	r0, [r4, #0]
 8017fdc:	4413      	add	r3, r2
 8017fde:	283b      	cmp	r0, #59	@ 0x3b
 8017fe0:	fb01 f303 	mul.w	r3, r1, r3
 8017fe4:	d813      	bhi.n	801800e <mktime+0x92>
 8017fe6:	4418      	add	r0, r3
 8017fe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017fec:	4628      	mov	r0, r5
 8017fee:	f7ff ff4b 	bl	8017e88 <isleapyear(int)>
 8017ff2:	2800      	cmp	r0, #0
 8017ff4:	bf0c      	ite	eq
 8017ff6:	4643      	moveq	r3, r8
 8017ff8:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8017ffc:	441e      	add	r6, r3
 8017ffe:	3501      	adds	r5, #1
 8018000:	e7cd      	b.n	8017f9e <mktime+0x22>
 8018002:	4628      	mov	r0, r5
 8018004:	f7ff ff56 	bl	8017eb4 <getdaysofmonth(int, int)>
 8018008:	3501      	adds	r5, #1
 801800a:	4406      	add	r6, r0
 801800c:	e7cd      	b.n	8017faa <mktime+0x2e>
 801800e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8018012:	e7e9      	b.n	8017fe8 <mktime+0x6c>

08018014 <hal::uuid_init(unsigned char*)>:
 8018014:	4a0c      	ldr	r2, [pc, #48]	@ (8018048 <hal::uuid_init(unsigned char*)+0x34>)
 8018016:	b084      	sub	sp, #16
 8018018:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 801801c:	9300      	str	r3, [sp, #0]
 801801e:	f8d2 1a14 	ldr.w	r1, [r2, #2580]	@ 0xa14
 8018022:	9101      	str	r1, [sp, #4]
 8018024:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	@ 0xa18
 8018028:	9202      	str	r2, [sp, #8]
 801802a:	440b      	add	r3, r1
 801802c:	4413      	add	r3, r2
 801802e:	9303      	str	r3, [sp, #12]
 8018030:	f100 0210 	add.w	r2, r0, #16
 8018034:	466b      	mov	r3, sp
 8018036:	f813 1b01 	ldrb.w	r1, [r3], #1
 801803a:	f800 1b01 	strb.w	r1, [r0], #1
 801803e:	4282      	cmp	r2, r0
 8018040:	d1f9      	bne.n	8018036 <hal::uuid_init(unsigned char*)+0x22>
 8018042:	b004      	add	sp, #16
 8018044:	4770      	bx	lr
 8018046:	bf00      	nop
 8018048:	1fff7000 	svcne	0x00ff7000

0801804c <gettimeofday>:
 801804c:	4b13      	ldr	r3, [pc, #76]	@ (801809c <gettimeofday+0x50>)
 801804e:	4a14      	ldr	r2, [pc, #80]	@ (80180a0 <gettimeofday+0x54>)
 8018050:	6819      	ldr	r1, [r3, #0]
 8018052:	6812      	ldr	r2, [r2, #0]
 8018054:	b510      	push	{r4, lr}
 8018056:	4c13      	ldr	r4, [pc, #76]	@ (80180a4 <gettimeofday+0x58>)
 8018058:	601a      	str	r2, [r3, #0]
 801805a:	4b13      	ldr	r3, [pc, #76]	@ (80180a8 <gettimeofday+0x5c>)
 801805c:	1a51      	subs	r1, r2, r1
 801805e:	fba3 2301 	umull	r2, r3, r3, r1
 8018062:	6822      	ldr	r2, [r4, #0]
 8018064:	ea4f 1e93 	mov.w	lr, r3, lsr #6
 8018068:	eb02 1293 	add.w	r2, r2, r3, lsr #6
 801806c:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8018070:	6863      	ldr	r3, [r4, #4]
 8018072:	6022      	str	r2, [r4, #0]
 8018074:	fb0c 111e 	mls	r1, ip, lr, r1
 8018078:	fb0c 3301 	mla	r3, ip, r1, r3
 801807c:	490b      	ldr	r1, [pc, #44]	@ (80180ac <gettimeofday+0x60>)
 801807e:	6063      	str	r3, [r4, #4]
 8018080:	428b      	cmp	r3, r1
 8018082:	bfc2      	ittt	gt
 8018084:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8018088:	3201      	addgt	r2, #1
 801808a:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 801808e:	e9c0 2300 	strd	r2, r3, [r0]
 8018092:	bfc8      	it	gt
 8018094:	e9c4 2300 	strdgt	r2, r3, [r4]
 8018098:	2000      	movs	r0, #0
 801809a:	bd10      	pop	{r4, pc}
 801809c:	2001a6f0 	strdcs	sl, [r1], -r0
 80180a0:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80180a4:	2001a6e8 	andcs	sl, r1, r8, ror #13
 80180a8:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 80180ac:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

080180b0 <settimeofday>:
 80180b0:	4a07      	ldr	r2, [pc, #28]	@ (80180d0 <settimeofday+0x20>)
 80180b2:	4b08      	ldr	r3, [pc, #32]	@ (80180d4 <settimeofday+0x24>)
 80180b4:	4908      	ldr	r1, [pc, #32]	@ (80180d8 <settimeofday+0x28>)
 80180b6:	b410      	push	{r4}
 80180b8:	6814      	ldr	r4, [r2, #0]
 80180ba:	6844      	ldr	r4, [r0, #4]
 80180bc:	6812      	ldr	r2, [r2, #0]
 80180be:	6800      	ldr	r0, [r0, #0]
 80180c0:	605c      	str	r4, [r3, #4]
 80180c2:	6018      	str	r0, [r3, #0]
 80180c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80180c8:	600a      	str	r2, [r1, #0]
 80180ca:	2000      	movs	r0, #0
 80180cc:	4770      	bx	lr
 80180ce:	bf00      	nop
 80180d0:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 80180d4:	2001a6e8 	andcs	sl, r1, r8, ror #13
 80180d8:	2001a6f0 	strdcs	sl, [r1], -r0

080180dc <time>:
 80180dc:	4b13      	ldr	r3, [pc, #76]	@ (801812c <time+0x50>)
 80180de:	4914      	ldr	r1, [pc, #80]	@ (8018130 <time+0x54>)
 80180e0:	681a      	ldr	r2, [r3, #0]
 80180e2:	b430      	push	{r4, r5}
 80180e4:	680d      	ldr	r5, [r1, #0]
 80180e6:	601d      	str	r5, [r3, #0]
 80180e8:	4912      	ldr	r1, [pc, #72]	@ (8018134 <time+0x58>)
 80180ea:	4b13      	ldr	r3, [pc, #76]	@ (8018138 <time+0x5c>)
 80180ec:	1aaa      	subs	r2, r5, r2
 80180ee:	fba3 3c02 	umull	r3, ip, r3, r2
 80180f2:	680b      	ldr	r3, [r1, #0]
 80180f4:	ea4f 159c 	mov.w	r5, ip, lsr #6
 80180f8:	4604      	mov	r4, r0
 80180fa:	eb03 109c 	add.w	r0, r3, ip, lsr #6
 80180fe:	684b      	ldr	r3, [r1, #4]
 8018100:	6008      	str	r0, [r1, #0]
 8018102:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8018106:	fb0c 2215 	mls	r2, ip, r5, r2
 801810a:	fb0c 3302 	mla	r3, ip, r2, r3
 801810e:	4a0b      	ldr	r2, [pc, #44]	@ (801813c <time+0x60>)
 8018110:	604b      	str	r3, [r1, #4]
 8018112:	4293      	cmp	r3, r2
 8018114:	bfc1      	itttt	gt
 8018116:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 801811a:	3001      	addgt	r0, #1
 801811c:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8018120:	e9c1 0300 	strdgt	r0, r3, [r1]
 8018124:	b104      	cbz	r4, 8018128 <time+0x4c>
 8018126:	6020      	str	r0, [r4, #0]
 8018128:	bc30      	pop	{r4, r5}
 801812a:	4770      	bx	lr
 801812c:	2001a6f0 	strdcs	sl, [r1], -r0
 8018130:	2001a6b0 			@ <UNDEFINED> instruction: 0x2001a6b0
 8018134:	2001a6e8 	andcs	sl, r1, r8, ror #13
 8018138:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 801813c:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

08018140 <operator delete[](void*)>:
 8018140:	f000 b838 	b.w	80181b4 <free>

08018144 <operator delete(void*, unsigned int)>:
 8018144:	f000 b836 	b.w	80181b4 <free>

08018148 <operator new(unsigned int)>:
 8018148:	f000 b802 	b.w	8018150 <malloc>

0801814c <operator new[](unsigned int)>:
 801814c:	f000 b800 	b.w	8018150 <malloc>

08018150 <malloc>:
 8018150:	b510      	push	{r4, lr}
 8018152:	b180      	cbz	r0, 8018176 <malloc+0x26>
 8018154:	4b12      	ldr	r3, [pc, #72]	@ (80181a0 <malloc+0x50>)
 8018156:	681a      	ldr	r2, [r3, #0]
 8018158:	b97a      	cbnz	r2, 801817a <malloc+0x2a>
 801815a:	4602      	mov	r2, r0
 801815c:	4911      	ldr	r1, [pc, #68]	@ (80181a4 <malloc+0x54>)
 801815e:	4c12      	ldr	r4, [pc, #72]	@ (80181a8 <malloc+0x58>)
 8018160:	6808      	ldr	r0, [r1, #0]
 8018162:	f102 031b 	add.w	r3, r2, #27
 8018166:	f023 030f 	bic.w	r3, r3, #15
 801816a:	4403      	add	r3, r0
 801816c:	42a3      	cmp	r3, r4
 801816e:	d911      	bls.n	8018194 <malloc+0x44>
 8018170:	480e      	ldr	r0, [pc, #56]	@ (80181ac <malloc+0x5c>)
 8018172:	f7fd fa8b 	bl	801568c <console_error>
 8018176:	2000      	movs	r0, #0
 8018178:	bd10      	pop	{r4, pc}
 801817a:	4282      	cmp	r2, r0
 801817c:	d201      	bcs.n	8018182 <malloc+0x32>
 801817e:	3308      	adds	r3, #8
 8018180:	e7e9      	b.n	8018156 <malloc+0x6>
 8018182:	6858      	ldr	r0, [r3, #4]
 8018184:	2800      	cmp	r0, #0
 8018186:	d0e9      	beq.n	801815c <malloc+0xc>
 8018188:	6882      	ldr	r2, [r0, #8]
 801818a:	605a      	str	r2, [r3, #4]
 801818c:	2300      	movs	r3, #0
 801818e:	6083      	str	r3, [r0, #8]
 8018190:	300c      	adds	r0, #12
 8018192:	e7f1      	b.n	8018178 <malloc+0x28>
 8018194:	600b      	str	r3, [r1, #0]
 8018196:	4b06      	ldr	r3, [pc, #24]	@ (80181b0 <malloc+0x60>)
 8018198:	e9c0 3200 	strd	r3, r2, [r0]
 801819c:	e7f6      	b.n	801818c <malloc+0x3c>
 801819e:	bf00      	nop
 80181a0:	20000008 	andcs	r0, r0, r8
 80181a4:	20000070 	andcs	r0, r0, r0, ror r0
 80181a8:	1000ec90 	mulne	r0, r0, ip
 80181ac:	0801934d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, ip, pc}
 80181b0:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0

080181b4 <free>:
 80181b4:	b138      	cbz	r0, 80181c6 <free+0x12>
 80181b6:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 80181ba:	4b09      	ldr	r3, [pc, #36]	@ (80181e0 <free+0x2c>)
 80181bc:	429a      	cmp	r2, r3
 80181be:	d102      	bne.n	80181c6 <free+0x12>
 80181c0:	4b08      	ldr	r3, [pc, #32]	@ (80181e4 <free+0x30>)
 80181c2:	681a      	ldr	r2, [r3, #0]
 80181c4:	b902      	cbnz	r2, 80181c8 <free+0x14>
 80181c6:	4770      	bx	lr
 80181c8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80181cc:	4291      	cmp	r1, r2
 80181ce:	d105      	bne.n	80181dc <free+0x28>
 80181d0:	685a      	ldr	r2, [r3, #4]
 80181d2:	f840 2c04 	str.w	r2, [r0, #-4]
 80181d6:	380c      	subs	r0, #12
 80181d8:	6058      	str	r0, [r3, #4]
 80181da:	4770      	bx	lr
 80181dc:	3308      	adds	r3, #8
 80181de:	e7f0      	b.n	80181c2 <free+0xe>
 80181e0:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0
 80181e4:	20000008 	andcs	r0, r0, r8

080181e8 <__popcountsi2>:
 80181e8:	0843      	lsrs	r3, r0, #1
 80181ea:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
 80181ee:	1ac0      	subs	r0, r0, r3
 80181f0:	0883      	lsrs	r3, r0, #2
 80181f2:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
 80181f6:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
 80181fa:	4418      	add	r0, r3
 80181fc:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8018200:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
 8018204:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8018208:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 801820c:	0e00      	lsrs	r0, r0, #24
 801820e:	4770      	bx	lr

Disassembly of section .rodata:

08018210 <CSWTCH.85-0x1151>:
 8018210:	00000000 	andeq	r0, r0, r0
 8018214:	00000001 	andeq	r0, r0, r1
 8018218:	00000002 	andeq	r0, r0, r2
 801821c:	00000000 	andeq	r0, r0, r0
 8018220:	00000002 	andeq	r0, r0, r2
 8018224:	00000001 	andeq	r0, r0, r1
 8018228:	00000001 	andeq	r0, r0, r1
 801822c:	00000000 	andeq	r0, r0, r0
 8018230:	00000002 	andeq	r0, r0, r2
 8018234:	00000002 	andeq	r0, r0, r2
 8018238:	00000000 	andeq	r0, r0, r0
 801823c:	00000001 	andeq	r0, r0, r1
 8018240:	00000001 	andeq	r0, r0, r1
 8018244:	00000002 	andeq	r0, r0, r2
 8018248:	00000000 	andeq	r0, r0, r0
 801824c:	00000002 	andeq	r0, r0, r2
 8018250:	00000001 	andeq	r0, r0, r1
	...
 8018260:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8018264:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8018268:	00000000 	andeq	r0, r0, r0
 801826c:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8018270:	7261485b 	rsbvc	r4, r1, #5963776	@ 0x5b0000
 8018274:	75614664 	strbvc	r4, [r1, #-1636]!	@ 0xfffff99c
 8018278:	0a5d746c 	beq	9775430 <__init_array_end+0x1758f4c>
 801827c:	53202d00 	noppl	{0}	@ <UNPREDICTABLE>
 8018280:	6b636174 	blvs	98f0858 <__init_array_end+0x18d4374>
 8018284:	61726620 	cmnvs	r2, r0, lsr #12
 8018288:	0a3a656d 	beq	8eb1844 <__init_array_end+0xe95360>
 801828c:	30522000 	subscc	r2, r2, r0
 8018290:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8018294:	000a7825 	andeq	r7, sl, r5, lsr #16
 8018298:	20315220 	eorscs	r5, r1, r0, lsr #4
 801829c:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 80182a0:	20000a78 	andcs	r0, r0, r8, ror sl
 80182a4:	20203252 	eorcs	r3, r0, r2, asr r2
 80182a8:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 80182ac:	5220000a 	eorpl	r0, r0, #10
 80182b0:	3d202033 	stccc	0, cr2, [r0, #-204]!	@ 0xffffff34
 80182b4:	0a782520 	beq	9e2173c <__init_array_end+0x1e05258>
 80182b8:	31522000 	cmpcc	r2, r0
 80182bc:	203d2032 	eorscs	r2, sp, r2, lsr r0
 80182c0:	000a7825 	andeq	r7, sl, r5, lsr #16
 80182c4:	20524c20 	subscs	r4, r2, r0, lsr #24
 80182c8:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 80182cc:	20000a78 	andcs	r0, r0, r8, ror sl
 80182d0:	20204350 	eorcs	r4, r0, r0, asr r3
 80182d4:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 80182d8:	5020000a 	eorpl	r0, r0, sl
 80182dc:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 80182e0:	0a782520 	beq	9e21768 <__init_array_end+0x1e05284>
 80182e4:	46202d00 	strtmi	r2, [r0], -r0, lsl #26
 80182e8:	462f5253 			@ <UNDEFINED> instruction: 0x462f5253
 80182ec:	0a3a5241 	beq	8eacbf8 <__init_array_end+0xe90714>
 80182f0:	46432000 	strbmi	r2, [r3], -r0
 80182f4:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 80182f8:	0a782520 	beq	9e21780 <__init_array_end+0x1e0529c>
 80182fc:	46482000 	strbmi	r2, [r8], -r0
 8018300:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8018304:	0a782520 	beq	9e2178c <__init_array_end+0x1e052a8>
 8018308:	46442000 	strbmi	r2, [r4], -r0
 801830c:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8018310:	0a782520 	beq	9e21798 <__init_array_end+0x1e052b4>
 8018314:	46412000 	strbmi	r2, [r1], -r0
 8018318:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801831c:	0a782520 	beq	9e217a4 <__init_array_end+0x1e052c0>
 8018320:	4d4d2000 	stclmi	0, cr2, [sp, #-0]
 8018324:	20524146 	subscs	r4, r2, r6, asr #2
 8018328:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801832c:	4220000a 	eormi	r0, r0, #10
 8018330:	20524146 	subscs	r4, r2, r6, asr #2
 8018334:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8018338:	202d000a 	eorcs	r0, sp, sl
 801833c:	6373694d 	cmnvs	r3, #1261568	@ 0x134000
 8018340:	4c20000a 	stcmi	0, cr0, [r0], #-40	@ 0xffffffd8
 8018344:	58452f52 	stmdapl	r5, {r1, r4, r6, r8, r9, sl, fp, sp}^
 8018348:	45525f43 	ldrbmi	r5, [r2, #-3907]	@ 0xfffff0bd
 801834c:	4e525554 	mrcmi	5, 2, r5, cr2, cr4, {2}
 8018350:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8018354:	2e2e000a 	cdpcs	0, 2, cr0, cr14, cr10, {0}
 8018358:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 801835c:	74656e2d 	strbtvc	r6, [r5], #-3629	@ 0xfffff1d3
 8018360:	6b726f77 	blvs	9cb4144 <__init_array_end+0x1c97c60>
 8018364:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 8018368:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 801836c:	74656e2f 	strbtvc	r6, [r5], #-3631	@ 0xfffff1d1
 8018370:	6368642f 	cmnvs	r8, #788529152	@ 0x2f000000
 8018374:	00682e70 	rsbeq	r2, r8, r0, ror lr
 8018378:	70636864 	rsbvc	r6, r3, r4, ror #16
 801837c:	6e75725f 	mrcvs	2, 3, r7, cr5, cr15, {2}
 8018380:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8018384:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 8018388:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801838c:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 8018390:	70203a69 	eorvc	r3, r0, r9, ror #20
 8018394:	70636844 	rsbvc	r6, r3, r4, asr #16
 8018398:	7373654d 	cmnvc	r3, #322961408	@ 0x13400000
 801839c:	2d656761 	stclcs	7, cr6, [r5, #-388]!	@ 0xfffffe7c
 80183a0:	6469783e 	strbtvs	r7, [r9], #-2110	@ 0xfffff7c2
 80183a4:	2c75253d 	cfldr64cs	mvdx2, [r5], #-244	@ 0xffffff0c
 80183a8:	63686420 	cmnvs	r8, #32, 8	@ 0x20000000
 80183ac:	783e2d70 	ldmdavc	lr!, {r4, r5, r6, r8, sl, fp, sp}
 80183b0:	253d6469 	ldrcs	r6, [sp, #-1129]!	@ 0xfffffb97
 80183b4:	6e000a75 			@ <UNDEFINED> instruction: 0x6e000a75
 80183b8:	756c6f43 	strbvc	r6, [ip, #-3907]!	@ 0xfffff0bd
 80183bc:	20736e6d 	rsbscs	r6, r3, sp, ror #28
 80183c0:	31203d3e 			@ <UNDEFINED> instruction: 0x31203d3e
 80183c4:	78655400 	stmdavc	r5!, {sl, ip, lr}^
 80183c8:	61745374 	cmnvs	r4, r4, ror r3
 80183cc:	00737574 	rsbseq	r7, r3, r4, ror r5
 80183d0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	@ 8018320 <_etext+0x110>
 80183d4:	642d6269 	strtvs	r6, [sp], #-617	@ 0xfffffd97
 80183d8:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80183dc:	692f7961 	stmdbvs	pc!, {r0, r5, r6, r8, fp, ip, sp, lr}	@ <UNPREDICTABLE>
 80183e0:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
 80183e4:	692f6564 	stmdbvs	pc!, {r2, r5, r6, r8, sl, sp, lr}	@ <UNPREDICTABLE>
 80183e8:	642f6332 	strtvs	r6, [pc], #-818	@ 80183f0 <_etext+0x1e0>
 80183ec:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80183f0:	682e7961 	stmdavs	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
 80183f4:	6f526e00 	svcvs	0x00526e00
 80183f8:	3e207377 	mcrcc	3, 1, r7, cr0, cr7, {3}
 80183fc:	0031203d 	eorseq	r2, r1, sp, lsr r0
 8018400:	54705f73 	ldrbtpl	r5, [r0], #-3955	@ 0xfffff08d
 8018404:	20736968 	rsbscs	r6, r3, r8, ror #18
 8018408:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 801840c:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8018410:	47007274 	smlsdxmi	r0, r4, r2, r7
 8018414:	2e007465 	cdpcs	4, 0, cr7, cr0, cr5, {3}
 8018418:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 801841c:	73772d62 	cmnvc	r7, #6272	@ 0x1880
 8018420:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 8018424:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 8018428:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 801842c:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 8018430:	6f636c65 	svcvs	0x00636c65
 8018434:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018438:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 801843c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018440:	69500068 	ldmdbvs	r0, {r3, r5, r6}^
 8018444:	436c6578 	cmnmi	ip, #120, 10	@ 0x1e000000
 8018448:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801844c:	61727567 	cmnvs	r2, r7, ror #10
 8018450:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018454:	3e2d2d00 	cdpcc	13, 2, cr2, cr13, cr0, {0}
 8018458:	3a732520 	bcc	9ce18e0 <__init_array_end+0x1cc53fc>
 801845c:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 8018460:	73000a64 	movwvc	r0, #2660	@ 0xa64
 8018464:	6854705f 	ldmdavs	r4, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 8018468:	3d207369 	stccc	3, cr7, [r0, #-420]!	@ 0xfffffe5c
 801846c:	756e203d 	strbvc	r2, [lr, #-61]!	@ 0xffffffc3
 8018470:	74706c6c 	ldrbtvc	r6, [r0], #-3180	@ 0xfffff394
 8018474:	2d3c0072 	ldccs	0, cr0, [ip, #-456]!	@ 0xfffffe38
 8018478:	7325202d 			@ <UNDEFINED> instruction: 0x7325202d
 801847c:	3a73253a 	bcc	9ce196c <__init_array_end+0x1cc5488>
 8018480:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018484:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8018488:	786d446c 	stmdavc	sp!, {r2, r3, r5, r6, sl, lr}^
 801848c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018490:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 8018494:	6f697461 	svcvs	0x00697461
 8018498:	2e2e006e 	cdpcs	0, 2, cr0, cr14, cr14, {3}
 801849c:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 80184a0:	3273772d 	rsbscc	r7, r3, #11796480	@ 0xb40000
 80184a4:	64787838 	ldrbtvs	r7, [r8], #-2104	@ 0xfffff7c8
 80184a8:	692f786d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, fp, ip, sp, lr}	@ <UNPREDICTABLE>
 80184ac:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
 80184b0:	702f6564 	eorvc	r6, pc, r4, ror #10
 80184b4:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 80184b8:	63786d64 	cmnvs	r8, #100, 26	@ 0x1900
 80184bc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80184c0:	61727567 	cmnvs	r2, r7, ror #10
 80184c4:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80184c8:	7e00682e 	cdpvc	8, 0, cr6, cr0, cr14, {1}
 80184cc:	534d4452 	movtpl	r4, #54354	@ 0xd452
 80184d0:	65446275 	strbvs	r6, [r4, #-629]	@ 0xfffffd8b
 80184d4:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 80184d8:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
 80184dc:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 80184e0:	6d64722d 	sfmvs	f7, 2, [r4, #-180]!	@ 0xffffff4c
 80184e4:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 80184e8:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 80184ec:	6d64722f 	sfmvs	f7, 2, [r4, #-188]!	@ 0xffffff44
 80184f0:	64627573 	strbtvs	r7, [r2], #-1395	@ 0xfffffa8d
 80184f4:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 80184f8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 80184fc:	2f2e2e00 	svccs	0x002e2e00
 8018500:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 8018504:	2f6d6472 	svccs	0x006d6472
 8018508:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801850c:	2f656475 	svccs	0x00656475
 8018510:	70726c6c 	rsbsvc	r6, r2, ip, ror #24
 8018514:	726c6c2f 	rsbvc	r6, ip, #12032	@ 0x2f00
 8018518:	76656470 			@ <UNDEFINED> instruction: 0x76656470
 801851c:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
 8018520:	496e0068 	stmdbmi	lr!, {r3, r5, r6}^
 8018524:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8018528:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801852c:	4200312d 	andmi	r3, r0, #1073741835	@ 0x4000000b
 8018530:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
 8018534:	2f2e2e00 	svccs	0x002e2e00
 8018538:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 801853c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8018540:	2f6b726f 	svccs	0x006b726f
 8018544:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 8018548:	2f656475 	svccs	0x00656475
 801854c:	63616d65 	cmnvs	r1, #6464	@ 0x1940
 8018550:	74656e2f 	strbtvc	r6, [r5], #-3631	@ 0xfffff1d1
 8018554:	6b726f77 	blvs	9cb4338 <__init_array_end+0x1c97e54>
 8018558:	7300682e 	movwvc	r6, #2094	@ 0x82e
 801855c:	61486e5f 	cmpvs	r8, pc, asr lr
 8018560:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
 8018564:	50524c4c 	subspl	r4, r2, ip, asr #24
 8018568:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801856c:	7e00312d 	adfvcsp	f3, f0, #5.0
 8018570:	534d4452 	movtpl	r4, #54354	@ 0xd452
 8018574:	6f736e65 	svcvs	0x00736e65
 8018578:	2e007372 	mcrcs	3, 0, r7, cr0, cr2, {3}
 801857c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8018580:	64722d62 	ldrbtvs	r2, [r2], #-3426	@ 0xfffff29e
 8018584:	6e692f6d 	cdpvs	15, 6, cr2, cr9, cr13, {3}
 8018588:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 801858c:	64722f65 	ldrbtvs	r2, [r2], #-3941	@ 0xfffff09b
 8018590:	6e65736d 	cdpvs	3, 6, cr7, cr5, cr13, {3}
 8018594:	73726f73 	cmnvc	r2, #460	@ 0x1cc
 8018598:	7e00682e 	cdpvc	8, 0, cr6, cr0, cr14, {1}
 801859c:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80185a0:	65447465 	strbvs	r7, [r4, #-1125]	@ 0xfffffb9b
 80185a4:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 80185a8:	2f2e2e00 	svccs	0x002e2e00
 80185ac:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 80185b0:	2f6d6472 	svccs	0x006d6472
 80185b4:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 80185b8:	2f656475 	svccs	0x00656475
 80185bc:	6e6d6472 	mcrvs	4, 3, r6, cr13, cr2, {3}
 80185c0:	65647465 	strbvs	r7, [r4, #-1125]!	@ 0xfffffb9b
 80185c4:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 80185c8:	7e00682e 	cdpvc	8, 0, cr6, cr0, cr14, {1}
 80185cc:	50524c4c 	subspl	r4, r2, ip, asr #24
 80185d0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80185d4:	6e006563 	cfsh32vs	mvfx6, mvfx0, #51
 80185d8:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 80185dc:	3d3d2078 	ldccc	0, cr2, [sp, #-480]!	@ 0xfffffe20
 80185e0:	45003020 	strmi	r3, [r0, #-32]	@ 0xffffffe0
 80185e4:	5200646e 	andpl	r6, r0, #1845493760	@ 0x6e000000
 80185e8:	654e4d44 	strbvs	r4, [lr, #-3396]	@ 0xfffff2bc
 80185ec:	20000a74 	andcs	r0, r0, r4, ror sl
 80185f0:	20444943 	subcs	r4, r4, r3, asr #18
 80185f4:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 80185f8:	4c4c000a 	mcrrmi	0, 0, r0, ip, cr10
 80185fc:	44205052 	strtmi	r5, [r0], #-82	@ 0xffffffae
 8018600:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8018604:	20000a65 	andcs	r0, r0, r5, ror #20
 8018608:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801860c:	50445520 	subpl	r5, r4, r0, lsr #10
 8018610:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018614:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018618:	3a202020 	bcc	88206a0 <__init_array_end+0x8041bc>
 801861c:	0a642520 	beq	9921aa4 <__init_array_end+0x19055c0>
 8018620:	6f4a2000 	svcvs	0x004a2000
 8018624:	52206e69 	eorpl	r6, r0, #1680	@ 0x690
 8018628:	65757165 	ldrbvs	r7, [r5, #-357]!	@ 0xfffffe9b
 801862c:	20207473 	eorcs	r7, r0, r3, ror r4
 8018630:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018634:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018638:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801863c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018640:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018644:	6c754d20 	ldclvs	13, cr4, [r5], #-128	@ 0xffffff80
 8018648:	61636974 	smcvs	13972	@ 0x3694
 801864c:	52207473 	eorpl	r7, r0, #1929379840	@ 0x73000000
 8018650:	6f707365 	svcvs	0x00707365
 8018654:	2065736e 	rsbcs	r7, r5, lr, ror #6
 8018658:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 801865c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018660:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018664:	31000a64 	tstcc	r0, r4, ror #20
 8018668:	32333a38 	eorscc	r3, r3, #56, 20	@ 0x38000
 801866c:	0036313a 	eorseq	r3, r6, sl, lsr r1
 8018670:	20706553 	rsbscs	r6, r0, r3, asr r5
 8018674:	32203332 	eorcc	r3, r0, #-939524096	@ 0xc8000000
 8018678:	00343230 	eorseq	r3, r4, r0, lsr r2
 801867c:	20504444 	subscs	r4, r0, r4, asr #8
 8018680:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8018684:	6f63206c 	svcvs	0x0063206c
 8018688:	6f72746e 	svcvs	0x0072746e
 801868c:	72656c6c 	rsbvc	r6, r5, #108, 24	@ 0x6c00
 8018690:	78387b20 	ldmdavc	r8!, {r5, r8, r9, fp, ip, sp, lr}
 8018694:	55203420 	strpl	r3, [r0, #-1056]!	@ 0xfffffbe0
 8018698:	6576696e 	ldrbvs	r6, [r6, #-2414]!	@ 0xfffff692
 801869c:	73657372 	cmnvc	r5, #-939524095	@ 0xc8000001
 80186a0:	5b1b007d 	blpl	86d889c <__init_array_end+0x6bc3b8>
 80186a4:	256d3233 	strbcs	r3, [sp, #-563]!	@ 0xfffffdcd
 80186a8:	305b1b73 	subscc	r1, fp, r3, ror fp
 80186ac:	74000a6d 	strvc	r0, [r0], #-2669	@ 0xfffff593
 80186b0:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 80186b4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80186b8:	0079616c 	rsbseq	r6, r9, ip, ror #2
 80186bc:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 80186c0:	7365546c 	cmnvc	r5, #108, 8	@ 0x6c000000
 80186c4:	74615074 	strbtvc	r5, [r1], #-116	@ 0xffffff8c
 80186c8:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 80186cc:	2f2e2e00 	svccs	0x002e2e00
 80186d0:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 80186d4:	38327377 	ldmdacc	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
 80186d8:	692f7878 	stmdbvs	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	@ <UNPREDICTABLE>
 80186dc:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
 80186e0:	702f6564 	eorvc	r6, pc, r4, ror #10
 80186e4:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 80186e8:	74736574 	ldrbtvc	r6, [r3], #-1396	@ 0xfffffa8c
 80186ec:	74746170 	ldrbtvc	r6, [r4], #-368	@ 0xfffffe90
 80186f0:	2e6e7265 	cdpcs	2, 6, cr7, cr14, cr5, {3}
 80186f4:	44440068 	strbmi	r0, [r4], #-104	@ 0xffffff98
 80186f8:	69442050 	stmdbvs	r4, {r4, r6, sp}^
 80186fc:	616c7073 	smcvs	50947	@ 0xc703
 8018700:	75252079 	strvc	r2, [r5, #-121]!	@ 0xffffff87
 8018704:	3a73252d 	bcc	9ce1bc0 <__init_array_end+0x1cc56dc>
 8018708:	4f006425 	svcmi	0x00006425
 801870c:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 8018710:	69502065 	ldmdbvs	r0, {r0, r2, r5, r6, sp}^
 8018714:	72655a20 	rsbvc	r5, r5, #32, 20	@ 0x20000
 8018718:	6950206f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6, sp}^
 801871c:	006c6578 	rsbeq	r6, ip, r8, ror r5
 8018720:	20504444 	subscs	r4, r0, r4, asr #8
 8018724:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8018728:	6425206c 	strtvs	r2, [r5], #-108	@ 0xffffff94
 801872c:	3a732500 	bcc	9ce1b34 <__init_array_end+0x1cc5650>
 8018730:	47206425 	strmi	r6, [r0, -r5, lsr #8]!
 8018734:	25206425 	strcs	r6, [r0, #-1061]!	@ 0xfffffbdb
 8018738:	73250073 			@ <UNDEFINED> instruction: 0x73250073
 801873c:	0075253a 	rsbseq	r2, r5, sl, lsr r5
 8018740:	72617453 	rsbvc	r7, r1, #1392508928	@ 0x53000000
 8018744:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 8018748:	50444420 	subpl	r4, r4, r0, lsr #8
 801874c:	73694420 	cmnvc	r9, #32, 8	@ 0x20000000
 8018750:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018754:	50444400 	subpl	r4, r4, r0, lsl #8
 8018758:	73694420 	cmnvc	r9, #32, 8	@ 0x20000000
 801875c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018760:	61745320 	cmnvs	r4, r0, lsr #6
 8018764:	64657472 	strbtvs	r7, [r5], #-1138	@ 0xfffffb8e
 8018768:	2f2e2e00 	svccs	0x002e2e00
 801876c:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 8018770:	6f6d6572 	svcvs	0x006d6572
 8018774:	6f636574 	svcvs	0x00636574
 8018778:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801877c:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 8018780:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 8018784:	7474682f 	ldrbtvc	r6, [r4], #-2095	@ 0xfffff7d1
 8018788:	682f6470 	stmdavs	pc!, {r4, r5, r6, sl, sp, lr}	@ <UNPREDICTABLE>
 801878c:	64707474 	ldrbtvs	r7, [r0], #-1140	@ 0xfffffb8c
 8018790:	5200682e 	andpl	r6, r0, #3014656	@ 0x2e0000
 8018794:	25006e75 	strcs	r6, [r0, #-3701]	@ 0xfffff18b
 8018798:	20292873 	eorcs	r2, r9, r3, ror r8
 801879c:	202c7325 	eorcs	r7, ip, r5, lsr #6
 80187a0:	656e696c 	strbvs	r6, [lr, #-2412]!	@ 0xfffff694
 80187a4:	3a692520 	bcc	9a61c2c <__init_array_end+0x1a45748>
 80187a8:	6f436e20 	svcvs	0x00436e20
 80187ac:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 80187b0:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80187b4:	646e6148 	strbtvs	r6, [lr], #-328	@ 0xfffffeb8
 80187b8:	253d656c 	ldrcs	r6, [sp, #-1388]!	@ 0xfffffa94
 80187bc:	25000a75 	strcs	r0, [r0, #-2677]	@ 0xfffff58b
 80187c0:	20292873 	eorcs	r2, r9, r3, ror r8
 80187c4:	202c7325 	eorcs	r7, ip, r5, lsr #6
 80187c8:	656e696c 	strbvs	r6, [lr, #-2412]!	@ 0xfffff694
 80187cc:	3a692520 	bcc	9a61c54 <__init_array_end+0x1a45770>
 80187d0:	0a732520 	beq	9ce1c58 <__init_array_end+0x1cc5774>
 80187d4:	43455600 	movtmi	r5, #22016	@ 0x5600
 80187d8:	5f524f54 	svcpl	0x00524f54
 80187dc:	50524c4c 	subspl	r4, r2, ip, asr #24
 80187e0:	4f52505f 	svcmi	0x0052505f
 80187e4:	525f4542 	subspl	r4, pc, #276824064	@ 0x10800000
 80187e8:	594c5045 	stmdbpl	ip, {r0, r2, r6, ip, lr}^
 80187ec:	006e4f00 	rsbeq	r4, lr, r0, lsl #30
 80187f0:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80187f4:	3a79616c 	bcc	9e70dac <__init_array_end+0x1e548c8>
 80187f8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80187fc:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 8018800:	203a656d 	eorscs	r6, sl, sp, ror #10
 8018804:	0a737525 	beq	9cf5ca0 <__init_array_end+0x1cd97bc>
 8018808:	72657600 	rsbvc	r7, r5, #0, 12
 801880c:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018810:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 8018814:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8018818:	0a73253a 	beq	9ce1d08 <__init_array_end+0x1cc5824>
 801881c:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8018820:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018824:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018828:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 801882c:	252c7325 	strcs	r7, [ip, #-805]!	@ 0xfffffcdb
 8018830:	73252c75 			@ <UNDEFINED> instruction: 0x73252c75
 8018834:	6425000a 	strtvs	r0, [r5], #-10
 8018838:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801883c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018840:	73252c64 			@ <UNDEFINED> instruction: 0x73252c64
 8018844:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 8018848:	000a7525 	andeq	r7, sl, r5, lsr #10
 801884c:	4f525245 	svcmi	0x00525245
 8018850:	673f2352 			@ <UNDEFINED> instruction: 0x673f2352
 8018854:	000a7465 	andeq	r7, sl, r5, ror #8
 8018858:	4f525245 	svcmi	0x00525245
 801885c:	0a3f2352 	beq	8fe15ac <__init_array_end+0xfc50c8>
 8018860:	74667400 	strbtvc	r7, [r6], #-1024	@ 0xfffffc00
 8018864:	64002370 	strvs	r2, [r0], #-880	@ 0xfffffc90
 8018868:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 801886c:	00237961 	eoreq	r7, r3, r1, ror #18
 8018870:	4f525245 	svcmi	0x00525245
 8018874:	0a212352 	beq	88615c4 <__init_array_end+0x8450e0>
 8018878:	62657200 	rsbvs	r7, r5, #0, 4
 801887c:	23746f6f 	cmncs	r4, #444	@ 0x1bc
 8018880:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8018884:	00237473 	eoreq	r7, r3, r3, ror r4
 8018888:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801888c:	236e6f69 	cmncs	lr, #420	@ 0x1a4
 8018890:	74707500 	ldrbtvc	r7, [r0], #-1280	@ 0xfffffb00
 8018894:	23656d69 	cmncs	r5, #6720	@ 0x1a40
 8018898:	74656700 	strbtvc	r6, [r5], #-1792	@ 0xfffff900
 801889c:	61660023 	cmnvs	r6, r3, lsr #32
 80188a0:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 80188a4:	00232379 	eoreq	r2, r3, r9, ror r3
 80188a8:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 80188ac:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	@ 0xffffff18
 80188b0:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 80188b4:	0a64253d 	beq	9921db0 <__init_array_end+0x19058cc>
 80188b8:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 80188bc:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 80188c0:	002c2273 	eoreq	r2, ip, r3, ror r2
 80188c4:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	@ 0xffffff74
 80188c8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80188cc:	6f626552 	svcvs	0x00626552
 80188d0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80188d4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80188d8:	6372002e 	cmnvs	r2, #46	@ 0x2e
 80188dc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80188e0:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 80188e4:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
 80188e8:	78742e76 	ldmdavc	r4!, {r1, r2, r4, r5, r6, r9, sl, fp, sp}^
 80188ec:	656e0074 	strbvs	r0, [lr, #-116]!	@ 0xffffff8c
 80188f0:	726f7774 	rsbvc	r7, pc, #116, 14	@ 0x1d00000
 80188f4:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 80188f8:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 80188fc:	616c7073 	smcvs	50947	@ 0xc703
 8018900:	78742e79 	ldmdavc	r4!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}^
 8018904:	65640074 	strbvs	r0, [r4, #-116]!	@ 0xffffff8c
 8018908:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801890c:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8018910:	46540074 			@ <UNDEFINED> instruction: 0x46540074
 8018914:	4f205054 	svcmi	0x00205054
 8018918:	5400206e 	strpl	r2, [r0], #-110	@ 0xffffff92
 801891c:	20505446 	subscs	r5, r0, r6, asr #8
 8018920:	0066664f 	rsbeq	r6, r6, pc, asr #12
 8018924:	696c227b 	stmdbvs	ip!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 8018928:	3a227473 	bcc	88b5afc <__init_array_end+0x899618>
 801892c:	7069227b 	rsbvc	r2, r9, fp, ror r2
 8018930:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8018934:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018938:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801893c:	2c226425 	cfstrscs	mvf6, [r2], #-148	@ 0xffffff6c
 8018940:	6d616e22 	stclvs	14, cr6, [r1, #-136]!	@ 0xffffff78
 8018944:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8018948:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 801894c:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 8018954 <_etext+0x744>
 8018950:	7b3a2265 	blvc	8ea12ec <__init_array_end+0xe84e08>
 8018954:	70797422 	rsbsvc	r7, r9, r2, lsr #8
 8018958:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 801895c:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 8018960:	726f7022 	rsbvc	r7, pc, #34	@ 0x22
 8018964:	7b3a2274 	blvc	8ea133c <__init_array_end+0xe84e58>
 8018968:	70797422 	rsbsvc	r7, r9, r2, lsr #8
 801896c:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8018970:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 8018974:	756f6322 	strbvc	r6, [pc, #-802]!	@ 801865a <_etext+0x44a>
 8018978:	3a22746e 	bcc	88b5b38 <__init_array_end+0x899654>
 801897c:	7d7d6425 	cfldrdvc	mvd6, [sp, #-148]!	@ 0xffffff6c
 8018980:	7b007d7d 	blvc	8037f7c <__init_array_end+0x1ba98>
 8018984:	72657622 	rsbvc	r7, r5, #35651584	@ 0x2200000
 8018988:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801898c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8018990:	22732a2e 	rsbscs	r2, r3, #188416	@ 0x2e000
 8018994:	6f62222c 	svcvs	0x0062222c
 8018998:	22647261 	rsbcs	r7, r4, #268435462	@ 0x10000006
 801899c:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 80189a0:	62222c22 	eorvs	r2, r2, #8704	@ 0x2200
 80189a4:	646c6975 	strbtvs	r6, [ip], #-2421	@ 0xfffff68b
 80189a8:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 80189ac:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 80189b0:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 80189b4:	22732a2e 	rsbscs	r2, r3, #188416	@ 0x2e000
 80189b8:	6974222c 	ldmdbvs	r4!, {r2, r3, r5, r9, sp}^
 80189bc:	3a22656d 	bcc	88b1f78 <__init_array_end+0x895a94>
 80189c0:	2a2e2522 	bcs	8ba1e50 <__init_array_end+0xb8596c>
 80189c4:	7d7d2273 	lfmvc	f2, 2, [sp, #-460]!	@ 0xfffffe34
 80189c8:	33444700 	movtcc	r4, #18176	@ 0x4700
 80189cc:	37344632 			@ <UNDEFINED> instruction: 0x37344632
 80189d0:	455f5a30 	ldrbmi	r5, [pc, #-2608]	@ 8017fa8 <mktime+0x2c>
 80189d4:	004c4156 	subeq	r4, ip, r6, asr r1
 80189d8:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80189dc:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80189e0:	75253a22 	strvc	r3, [r5, #-2594]!	@ 0xfffff5de
 80189e4:	7b000a7d 	blvc	801b3e0 <static_js+0x258>
 80189e8:	73696422 	cmnvc	r9, #570425344	@ 0x22000000
 80189ec:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80189f0:	64253a22 	strtvs	r3, [r5], #-2594	@ 0xfffff5de
 80189f4:	227b007d 	rsbscs	r0, fp, #125	@ 0x7d
 80189f8:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 80189fc:	7b3a2273 	blvc	8ea13d0 <__init_array_end+0xe84eec>
 8018a00:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8018a04:	73656369 	cmnvc	r5, #-1543503871	@ 0xa4000001
 8018a08:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 8018a0c:	44223a22 	strtmi	r3, [r2], #-2594	@ 0xfffff5de
 8018a10:	5020584d 	eorpl	r5, r0, sp, asr #16
 8018a14:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018a18:	64222c22 	strtvs	r2, [r2], #-3106	@ 0xfffff3de
 8018a1c:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 8018a20:	742e7961 	strtvc	r7, [lr], #-2401	@ 0xfffff69f
 8018a24:	3a227478 	bcc	88b5c0c <__init_array_end+0x899728>
 8018a28:	73694422 	cmnvc	r9, #570425344	@ 0x22000000
 8018a2c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018a30:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8018a34:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8018a38:	6f777465 	svcvs	0x00777465
 8018a3c:	742e6b72 	strtvc	r6, [lr], #-2930	@ 0xfffff48e
 8018a40:	3a227478 	bcc	88b5c28 <__init_array_end+0x899744>
 8018a44:	74654e22 	strbtvc	r4, [r5], #-3618	@ 0xfffff1de
 8018a48:	6b726f77 	blvs	9cb482c <__init_array_end+0x1c98348>
 8018a4c:	65222c22 	strvs	r2, [r2, #-3106]!	@ 0xfffff3de
 8018a50:	742e766e 	strtvc	r7, [lr], #-1646	@ 0xfffff992
 8018a54:	3a227478 	bcc	88b5c3c <__init_array_end+0x899758>
 8018a58:	766e4522 	strbtvc	r4, [lr], -r2, lsr #10
 8018a5c:	6e6f7269 	cdpvs	2, 6, cr7, cr15, cr9, {3}
 8018a60:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8018a64:	72222c22 	eorvc	r2, r2, #8704	@ 0x2200
 8018a68:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018a6c:	742e6769 	strtvc	r6, [lr], #-1897	@ 0xfffff897
 8018a70:	3a227478 	bcc	88b5c58 <__init_array_end+0x899774>
 8018a74:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	@ 0xffffff78
 8018a78:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8018a7c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8018a80:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 8018a84:	6f697461 	svcvs	0x00697461
 8018a88:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	@ 0xfffffe48
 8018a8c:	61747300 	cmnvs	r4, r0, lsl #6
 8018a90:	2e636974 			@ <UNDEFINED> instruction: 0x2e636974
 8018a94:	7300736a 	movwvc	r7, #874	@ 0x36a
 8018a98:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 8018a9c:	73632e73 	cmnvc	r3, #1840	@ 0x730
 8018aa0:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
 8018aa4:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8018aa8:	6400736a 	strvs	r7, [r0], #-874	@ 0xfffffc96
 8018aac:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8018ab0:	6400736a 	strvs	r7, [r0], #-874	@ 0xfffffc96
 8018ab4:	75616665 	strbvc	r6, [r1, #-1637]!	@ 0xfffff99b
 8018ab8:	6a2e746c 	bvs	8bb5c70 <__init_array_end+0xb9978c>
 8018abc:	69740073 	ldmdbvs	r4!, {r0, r1, r4, r5, r6}^
 8018ac0:	6a2e656d 	bvs	8bb207c <__init_array_end+0xb95b98>
 8018ac4:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
 8018ac8:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8018acc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8018ad0:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
 8018ad4:	74682e65 	strbtvc	r2, [r8], #-3685	@ 0xfffff19b
 8018ad8:	68006c6d 	stmdavs	r0, {r0, r2, r3, r5, r6, sl, fp, sp, lr}
 8018adc:	73707474 	cmnvc	r0, #116, 8	@ 0x74000000
 8018ae0:	672f2f3a 			@ <UNDEFINED> instruction: 0x672f2f3a
 8018ae4:	2d323364 	ldccs	3, cr3, [r2, #-400]!	@ 0xfffffe70
 8018ae8:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8018aec:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8018af0:	756f4320 	strbvc	r4, [pc, #-800]!	@ 80187d8 <_etext+0x5c8>
 8018af4:	2020746e 	eorcs	r7, r0, lr, ror #8
 8018af8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018afc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018b00:	3a202020 	bcc	8820b88 <__init_array_end+0x8046a4>
 8018b04:	0a752520 	beq	9d61f8c <__init_array_end+0x1d45aa8>
 8018b08:	68432000 	stmdavs	r3, {sp}^
 8018b0c:	656e6e61 	strbvs	r6, [lr, #-3681]!	@ 0xfffff19f
 8018b10:	7020736c 	eorvc	r7, r0, ip, ror #6
 8018b14:	70207265 	eorvc	r7, r0, r5, ror #4
 8018b18:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018b1c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8018b20:	4120000a 			@ <UNDEFINED> instruction: 0x4120000a
 8018b24:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 8018b28:	6f702065 	svcvs	0x00702065
 8018b2c:	20737472 	rsbscs	r7, r3, r2, ror r4
 8018b30:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018b34:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018b38:	52000a75 	andpl	r0, r0, #479232	@ 0x75000
 8018b3c:	52204d44 	eorpl	r4, r0, #68, 26	@ 0x1100
 8018b40:	6f707365 	svcvs	0x00707365
 8018b44:	7265646e 	rsbvc	r6, r5, #1845493760	@ 0x6e000000
 8018b48:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8018b4c:	75676966 	strbvc	r6, [r7, #-2406]!	@ 0xfffff69a
 8018b50:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8018b54:	20006e6f 	andcs	r6, r0, pc, ror #28
 8018b58:	746f7250 	strbtvc	r7, [pc], #-592	@ 8018b60 <_etext+0x950>
 8018b5c:	6c6f636f 	stclvs	3, cr6, [pc], #-444	@ 80189a8 <_etext+0x798>
 8018b60:	72655620 	rsbvc	r5, r5, #32, 12	@ 0x2000000
 8018b64:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018b68:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8018b6c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018b70:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8018b74:	64644120 	strbtvs	r4, [r4], #-288	@ 0xfffffee0
 8018b78:	73736572 	cmnvc	r3, #478150656	@ 0x1c800000
 8018b7c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018b80:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8018b84:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018b88:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8018b8c:	6f6f4620 	svcvs	0x006f4620
 8018b90:	69727074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, sp, lr}^
 8018b94:	2020746e 	eorcs	r7, r0, lr, ror #8
 8018b98:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8018b9c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018ba0:	72655020 	rsbvc	r5, r5, #32
 8018ba4:	616e6f73 	smcvs	59123	@ 0xe6f3
 8018ba8:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 8018bac:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8018bb0:	2520666f 	strcs	r6, [r0, #-1647]!	@ 0xfffff991
 8018bb4:	255b2064 	ldrbcs	r2, [fp, #-100]	@ 0xffffff9c
 8018bb8:	5d732a2e 	vldmdbpl	r3!, {s5-s50}
 8018bbc:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 8018bc0:	44206275 	strtmi	r6, [r0], #-629	@ 0xfffffd8b
 8018bc4:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8018bc8:	20207365 	eorcs	r7, r0, r5, ror #6
 8018bcc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018bd0:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8018bd4:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 8018bd8:	6f736e65 	svcvs	0x00736e65
 8018bdc:	20207372 	eorcs	r7, r0, r2, ror r3
 8018be0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018be4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018be8:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8018bec:	4452000a 	ldrbmi	r0, [r2], #-10
 8018bf0:	6544204d 	strbvs	r2, [r4, #-77]	@ 0xffffffb3
 8018bf4:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 8018bf8:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8018bfc:	75676966 	strbvc	r6, [r7, #-2406]!	@ 0xfffff69a
 8018c00:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8018c04:	20006e6f 	andcs	r6, r0, pc, ror #28
 8018c08:	756e614d 	strbvc	r6, [lr, #-333]!	@ 0xfffffeb3
 8018c0c:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 8018c10:	72657275 	rsbvc	r7, r5, #1342177287	@ 0x50000007
 8018c14:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	@ 0xffffff80
 8018c18:	203a2065 	eorscs	r2, sl, r5, rrx
 8018c1c:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8018c20:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	@ 0xffffffd8
 8018c24:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8018c28:	75746361 	ldrbvc	r6, [r4, #-865]!	@ 0xfffffc9f
 8018c2c:	20726572 	rsbscs	r6, r2, r2, ror r5
 8018c30:	20204449 	eorcs	r4, r0, r9, asr #8
 8018c34:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018c38:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8018c3c:	0a58322e 	beq	96254fc <__init_array_end+0x1609018>
 8018c40:	65532000 	ldrbvs	r2, [r3, #-0]
 8018c44:	6c616972 			@ <UNDEFINED> instruction: 0x6c616972
 8018c48:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	@ 0xffffff80
 8018c4c:	20726562 	rsbscs	r6, r2, r2, ror #10
 8018c50:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018c54:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8018c58:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8018c5c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8018c60:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8018c64:	000a5832 	andeq	r5, sl, r2, lsr r8
 8018c68:	6f6f5220 	svcvs	0x006f5220
 8018c6c:	616c2074 	smcvs	49668	@ 0xc204
 8018c70:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8018c74:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018c78:	3a202020 	bcc	8820d00 <__init_array_end+0x80481c>
 8018c7c:	2a2e2520 	bcs	8ba2104 <__init_array_end+0xb85c20>
 8018c80:	20000a73 	andcs	r0, r0, r3, ror sl
 8018c84:	646f7250 	strbtvs	r7, [pc], #-592	@ 8018c8c <_etext+0xa7c>
 8018c88:	20746375 	rsbscs	r6, r4, r5, ror r3
 8018c8c:	65746143 	ldrbvs	r6, [r4, #-323]!	@ 0xfffffebd
 8018c90:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018c94:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8018c98:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8018c9c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8018ca0:	5020000a 	eorpl	r0, r0, sl
 8018ca4:	75646f72 	strbvc	r6, [r4, #-3954]!	@ 0xfffff08e
 8018ca8:	44207463 	strtmi	r7, [r0], #-1123	@ 0xfffffb9d
 8018cac:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 8018cb0:	2020206c 	eorcs	r2, r0, ip, rrx
 8018cb4:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018cb8:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8018cbc:	0a58322e 	beq	962557c <__init_array_end+0x1609098>
 8018cc0:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 8018cc4:	2e253a22 	vmulcs.f32	s6, s10, s5
 8018cc8:	002c662a 	eoreq	r6, ip, sl, lsr #12
 8018ccc:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	@ 0xffffff74
 8018cd0:	662a2e25 	strtvs	r2, [sl], -r5, lsr #28
 8018cd4:	4c70000a 	ldclmi	0, cr0, [r0], #-40	@ 0xffffffd8
 8018cd8:	20656e69 	rsbcs	r6, r5, r9, ror #28
 8018cdc:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 8018ce0:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8018ce4:	63007274 	movwvs	r7, #628	@ 0x274
 8018ce8:	626c6c61 	rsbvs	r6, ip, #24832	@ 0x6100
 8018cec:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
 8018cf0:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8018cf4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 8018cf8:	2f637273 	svccs	0x00637273
 8018cfc:	61726170 	cmnvs	r2, r0, ror r1
 8018d00:	702f736d 	eorvc	r7, pc, sp, ror #6
 8018d04:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018d08:	70786d64 	rsbsvc	r6, r8, r4, ror #26
 8018d0c:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
 8018d10:	70632e73 	rsbvc	r2, r3, r3, ror lr
 8018d14:	20700070 	rsbscs	r0, r0, r0, ror r0
 8018d18:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 8018d1c:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8018d20:	73007274 	movwvc	r7, #628	@ 0x274
 8018d24:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 8018d28:	6c614363 	stclvs	3, cr4, [r1], #-396	@ 0xfffffe74
 8018d2c:	6361626c 	cmnvs	r1, #108, 4	@ 0xc0000006
 8018d30:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
 8018d34:	6f697463 	svcvs	0x00697463
 8018d38:	4270006e 	rsbsmi	r0, r0, #110	@ 0x6e
 8018d3c:	65666675 	strbvs	r6, [r6, #-1653]!	@ 0xfffff98b
 8018d40:	3d212072 	stccc	0, cr2, [r1, #-456]!	@ 0xfffffe38
 8018d44:	6c756e20 	ldclvs	14, cr6, [r5], #-128	@ 0xffffff80
 8018d48:	7274706c 	rsbsvc	r7, r4, #108	@ 0x6c
 8018d4c:	69754200 	ldmdbvs	r5!, {r9, lr}^
 8018d50:	7265646c 	rsbvc	r6, r5, #108, 8	@ 0x6c000000
 8018d54:	65764f00 	ldrbvs	r4, [r6, #-3840]!	@ 0xfffff100
 8018d58:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8018d5c:	64206574 	strtvs	r6, [r0], #-1396	@ 0xfffffa8c
 8018d60:	73617461 	cmnvc	r1, #1627389952	@ 0x61000000
 8018d64:	74656568 	strbtvc	r6, [r5], #-1384	@ 0xfffffa98
 8018d68:	65764f00 	ldrbvs	r4, [r6, #-3840]!	@ 0xfffff100
 8018d6c:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8018d70:	74206574 	strtvc	r6, [r0], #-1396	@ 0xfffffa8c
 8018d74:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 8018d78:	75282067 	strvc	r2, [r8, #-103]!	@ 0xffffff99
 8018d7c:	47002973 	smlsdxmi	r0, r3, r9, r2
 8018d80:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8018d84:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8018d88:	636f6c43 	cmnvs	pc, #17152	@ 0x4300
 8018d8c:	6162206b 	cmnvs	r2, fp, rrx
 8018d90:	20646573 	rsbcs	r6, r4, r3, ror r5
 8018d94:	70696863 	rsbvc	r6, r9, r3, ror #16
 8018d98:	50410073 	subpl	r0, r1, r3, ror r0
 8018d9c:	32303141 	eorscc	r3, r0, #1073741840	@ 0x40000010
 8018da0:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 8018da4:	00323238 	eorseq	r3, r2, r8, lsr r2
 8018da8:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
 8018dac:	74617020 	strbtvc	r7, [r1], #-32	@ 0xffffffe0
 8018db0:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8018db4:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8018db8:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 8018dbc:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8018dc0:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 8018dc4:	6e203a69 	vnmulvs.f32	s6, s0, s19
 8018dc8:	657a6953 	ldrbvs	r6, [sl, #-2387]!	@ 0xfffff6ad
 8018dcc:	0a64253d 	beq	99222c8 <__init_array_end+0x1905de4>
 8018dd0:	692f2e00 	stmdbvs	pc!, {r9, sl, fp, sp}	@ <UNPREDICTABLE>
 8018dd4:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
 8018dd8:	702f6564 	eorvc	r6, pc, r4, ror #10
 8018ddc:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018de0:	63786d64 	cmnvs	r8, #100, 26	@ 0x1900
 8018de4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018de8:	61727567 	cmnvs	r2, r7, ror #10
 8018dec:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018df0:	4400682e 	strmi	r6, [r0], #-2094	@ 0xfffff7d2
 8018df4:	00706d75 	rsbseq	r6, r0, r5, ror sp
 8018df8:	3a3a7325 	bcc	8eb5a94 <__init_array_end+0xe995b0>
 8018dfc:	27207325 	strcs	r7, [r0, -r5, lsr #6]!
 8018e00:	3a277325 	bcc	89f5a9c <__init_array_end+0x9d95b8>
 8018e04:	2520000a 	strcs	r0, [r0, #-10]!
 8018e08:	73253d73 			@ <UNDEFINED> instruction: 0x73253d73
 8018e0c:	64255b20 	strtvs	r5, [r5], #-2848	@ 0xfffff4e0
 8018e10:	20000a5d 	andcs	r0, r0, sp, asr sl
 8018e14:	253d7325 	ldrcs	r7, [sp, #-805]!	@ 0xfffffcdb
 8018e18:	255b2064 	ldrbcs	r2, [fp, #-100]	@ 0xffffff9c
 8018e1c:	000a5d73 	andeq	r5, sl, r3, ror sp
 8018e20:	3d732520 	cfldr64cc	mvdx2, [r3, #-128]!	@ 0xffffff80
 8018e24:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 8018e28:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8018e2c:	0a5d5825 	beq	976eec8 <__init_array_end+0x17529e4>
 8018e30:	73252000 			@ <UNDEFINED> instruction: 0x73252000
 8018e34:	0a64253d 	beq	9922330 <__init_array_end+0x1905e4c>
 8018e38:	73252000 			@ <UNDEFINED> instruction: 0x73252000
 8018e3c:	0a75253d 	beq	9d62338 <__init_array_end+0x1d45e54>
 8018e40:	616f4c00 	cmnvs	pc, r0, lsl #24
 8018e44:	4c6e0064 	stclmi	0, cr0, [lr], #-400	@ 0xfffffe70
 8018e48:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 8018e4c:	3d212068 	stccc	0, cr2, [r1, #-416]!	@ 0xfffffe60
 8018e50:	2e003020 	cdpcs	0, 0, cr3, cr0, cr0, {1}
 8018e54:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 8018e58:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 8018e5c:	7869702f 	stmdavc	r9!, {r0, r1, r2, r3, r5, ip, sp, lr}^
 8018e60:	6f636c65 	svcvs	0x00636c65
 8018e64:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018e68:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8018e6c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018e70:	227b0068 	rsbscs	r0, fp, #104	@ 0x68
 8018e74:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 8018e78:	5f687365 	svcpl	0x00687365
 8018e7c:	65746172 	ldrbvs	r6, [r4, #-370]!	@ 0xfffffe8e
 8018e80:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8018e84:	007d2275 	rsbseq	r2, sp, r5, ror r2
 8018e88:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8018e8c:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8018e90:	72745370 	rsbsvc	r5, r4, #112, 6	@ 0xc0000001
 8018e94:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8018e98:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 8018e9c:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8018ea0:	70007274 	andvc	r7, r0, r4, ror r2
 8018ea4:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018ea8:	7465675f 	strbtvc	r6, [r5], #-1887	@ 0xfffff8a1
 8018eac:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 8018eb0:	72730065 	rsbsvc	r0, r3, #101	@ 0x65
 8018eb4:	69702f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 8018eb8:	746c6578 	strbtvc	r6, [ip], #-1400	@ 0xfffffa88
 8018ebc:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
 8018ec0:	00707063 	rsbseq	r7, r0, r3, rrx
 8018ec4:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 8018ec8:	65675f6c 	strbvs	r5, [r7, #-3948]!	@ 0xfffff094
 8018ecc:	616d5f74 	smcvs	54772	@ 0xd5f4
 8018ed0:	6e550070 	mrcvs	0, 2, r0, cr5, cr0, {3}
 8018ed4:	69666564 	stmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8018ed8:	0064656e 	rsbeq	r6, r4, lr, ror #10
 8018edc:	7974227b 	ldmdbvc	r4!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 8018ee0:	22736570 	rsbscs	r6, r3, #112, 10	@ 0x1c000000
 8018ee4:	6e005b3a 	vmovvs.16	d0[0], r5
 8018ee8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8018eec:	3c206874 	stccc	8, cr6, [r0], #-464	@ 0xfffffe30
 8018ef0:	4f6e203d 	svcmi	0x006e203d
 8018ef4:	75427475 	strbvc	r7, [r2, #-1141]	@ 0xfffffb8b
 8018ef8:	72656666 	rsbvc	r6, r5, #106954752	@ 0x6600000
 8018efc:	657a6953 	ldrbvs	r6, [sl, #-2387]!	@ 0xfffff6ad
 8018f00:	6f736a00 	svcvs	0x00736a00
 8018f04:	65675f6e 	strbvs	r5, [r7, #-3950]!	@ 0xfffff092
 8018f08:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018f0c:	00736570 	rsbseq	r6, r3, r0, ror r5
 8018f10:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8018f14:	7461506c 	strbtvc	r5, [r1], #-108	@ 0xffffff94
 8018f18:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8018f1c:	72730073 	rsbsvc	r0, r3, #115	@ 0x73
 8018f20:	61702f63 	cmnvs	r0, r3, ror #30
 8018f24:	72657474 	rsbvc	r7, r5, #116, 8	@ 0x74000000
 8018f28:	702f736e 	eorvc	r7, pc, lr, ror #6
 8018f2c:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8018f30:	74746170 	ldrbtvc	r6, [r4], #-368	@ 0xfffffe90
 8018f34:	736e7265 	cmnvc	lr, #1342177286	@ 0x50000006
 8018f38:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8018f3c:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8018f40:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 8018f44:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8018f48:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 8018f4c:	6e203a69 	vnmulvs.f32	s6, s0, s19
 8018f50:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
 8018f54:	6f506576 	svcvs	0x00506576
 8018f58:	3d737472 	cfldrdcc	mvd7, [r3, #-456]!	@ 0xfffffe38
 8018f5c:	000a7525 	andeq	r7, sl, r5, lsr #10
 8018f60:	4f705f73 	svcmi	0x00705f73
 8018f64:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
 8018f68:	3d212074 	stccc	0, cr2, [r1, #-464]!	@ 0xfffffe30
 8018f6c:	6c756e20 	ldclvs	14, cr6, [r5], #-128	@ 0xffffff80
 8018f70:	7274706c 	rsbsvc	r7, r4, #108	@ 0x6c
 8018f74:	2a2e2500 	bcs	8ba237c <__init_array_end+0xb85e98>
 8018f78:	6d002e73 	stcvs	14, cr2, [r0, #-460]	@ 0xfffffe34
 8018f7c:	0a534e44 	beq	94ec894 <__init_array_end+0x14d03b0>
 8018f80:	64252000 	strtvs	r2, [r5], #-0
 8018f84:	2a2e2520 	bcs	8ba240c <__init_array_end+0xb85f28>
 8018f88:	69000a73 	stmdbvs	r0, {r0, r1, r4, r5, r6, r9, fp}
 8018f8c:	25203a70 	strcs	r3, [r0, #-2672]!	@ 0xfffff590
 8018f90:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018f94:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018f98:	2d206425 	cfstrscs	mvf6, [r0, #-148]!	@ 0xffffff6c
 8018f9c:	6425203e 	strtvs	r2, [r5], #-62	@ 0xffffffc2
 8018fa0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018fa4:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018fa8:	6e000a64 	vmlsvs.f32	s0, s0, s9
 8018fac:	616d7465 	cmnvs	sp, r5, ror #8
 8018fb0:	203a6b73 	eorscs	r6, sl, r3, ror fp
 8018fb4:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018fb8:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018fbc:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8018fc0:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 8018fc4:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018fc8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018fcc:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018fd0:	203a7767 	eorscs	r7, sl, r7, ror #14
 8018fd4:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8018fd8:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018fdc:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8018fe0:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 8018fe4:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8018fe8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018fec:	000a6425 	andeq	r6, sl, r5, lsr #8
 8018ff0:	30687465 	rsbcc	r7, r8, r5, ror #8
 8018ff4:	322e2500 	eorcc	r2, lr, #0, 10
 8018ff8:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 8018ffc:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 8019000:	3a78322e 	bcc	9e258c0 <__init_array_end+0x1e093dc>
 8019004:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8019008:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 801900c:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 8019010:	000a7832 	andeq	r7, sl, r2, lsr r8
 8019014:	61676967 	cmnvs	r7, r7, ror #18
 8019018:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801901c:	005f6563 	subseq	r6, pc, r3, ror #10
 8019020:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 8019024:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 8019028:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801902c:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 8019030:	6573000a 	ldrbvs	r0, [r3, #-10]!
 8019034:	646e6f63 	strbtvs	r6, [lr], #-3939	@ 0xfffff09d
 8019038:	5f797261 	svcpl	0x00797261
 801903c:	53007069 	movwpl	r7, #105	@ 0x69
 8019040:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 8019044:	50492063 	subpl	r2, r9, r3, rrx
 8019048:	50544e00 	subspl	r4, r4, r0, lsl #28
 801904c:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 8019050:	00726576 	rsbseq	r6, r2, r6, ror r5
 8019054:	33385044 	teqcc	r8, #68	@ 0x44
 8019058:	00383438 	eorseq	r3, r8, r8, lsr r4
 801905c:	3a74656e 	bcc	9d3261c <__init_array_end+0x1d16138>
 8019060:	7968703a 	stmdbvc	r8!, {r1, r3, r4, r5, ip, sp, lr}^
 8019064:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8019068:	28676966 	stmdacs	r7!, {r1, r2, r5, r6, r8, fp, sp, lr}^
 801906c:	5f594850 	svcpl	0x00594850
 8019070:	52444441 	subpl	r4, r4, #1090519040	@ 0x41000000
 8019074:	29535345 	ldmdbcs	r3, {r0, r2, r6, r8, r9, ip, lr}^
 8019078:	00705500 	rsbseq	r5, r0, r0, lsl #10
 801907c:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 8019080:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
 8019084:	55460046 	strbpl	r0, [r6, #-70]	@ 0xffffffba
 8019088:	4c004c4c 	stcmi	12, cr4, [r0], {76}	@ 0x4c
 801908c:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 8019090:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8019094:	202c6425 	eorcs	r6, ip, r5, lsr #8
 8019098:	000a7325 	andeq	r7, sl, r5, lsr #6
 801909c:	74696157 	strbtvc	r6, [r9], #-343	@ 0xfffffea9
 80190a0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80190a4:	20726f66 	rsbscs	r6, r2, r6, ror #30
 80190a8:	20594850 	subscs	r4, r9, r0, asr r8
 80190ac:	6f747561 	svcvs	0x00747561
 80190b0:	67656e20 	strbvs	r6, [r5, -r0, lsr #28]!
 80190b4:	6169746f 	cmnvs	r9, pc, ror #8
 80190b8:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80190bc:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 80190c0:	706d6f63 	rsbvc	r6, sp, r3, ror #30
 80190c4:	6574656c 	ldrbvs	r6, [r4, #-1388]!	@ 0xfffffa94
 80190c8:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80190cc:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80190d0:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80190d4:	2064252f 	rsbcs	r2, r4, pc, lsr #10
 80190d8:	46006325 	strmi	r6, [r0], -r5, lsr #6
 80190dc:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80190e0:	20657261 	rsbcs	r7, r5, r1, ror #4
 80190e4:	2a2e2556 	bcs	8ba2644 <__init_array_end+0xb86160>
 80190e8:	3a470073 	bcc	91d92bc <__init_array_end+0x11bcdd8>
 80190ec:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80190f0:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80190f4:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80190f8:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80190fc:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8019100:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8019104:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8019108:	65687445 	strbvs	r7, [r8, #-1093]!	@ 0xfffffbbb
 801910c:	74656e72 	strbtvc	r6, [r5], #-3698	@ 0xfffff18e
 8019110:	696e6920 	stmdbvs	lr!, {r5, r8, fp, sp, lr}^
 8019114:	74450074 	strbvc	r0, [r5], #-116	@ 0xffffff8c
 8019118:	6e726568 	cdpvs	5, 7, cr6, cr2, cr8, {3}
 801911c:	73207465 			@ <UNDEFINED> instruction: 0x73207465
 8019120:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
 8019124:	00505500 	subseq	r5, r0, r0, lsl #10
 8019128:	4e574f44 	cdpmi	15, 5, cr4, cr7, cr4, {2}
 801912c:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 8019130:	656e7265 	strbvs	r7, [lr, #-613]!	@ 0xfffffd9b
 8019134:	694c2074 	stmdbvs	ip, {r2, r4, r5, r6, sp}^
 8019138:	25206b6e 	strcs	r6, [r0, #-2926]!	@ 0xfffff492
 801913c:	74530073 	ldrbvc	r0, [r3], #-115	@ 0xffffff8d
 8019140:	4465726f 	strbtmi	r7, [r5], #-623	@ 0xfffffd91
 8019144:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8019148:	42203a65 	eormi	r3, r0, #413696	@ 0x65000
 801914c:	4d415253 	sfmmi	f5, 2, [r1, #-332]	@ 0xfffffeb4
 8019150:	74697720 	strbtvc	r7, [r9], #-1824	@ 0xfffff8e0
 8019154:	6f742068 	svcvs	0x00742068
 8019158:	206c6174 	rsbcs	r6, ip, r4, ror r1
 801915c:	62206425 	eorvs	r6, r0, #620756992	@ 0x25000000
 8019160:	73657479 	cmnvc	r5, #2030043136	@ 0x79000000
 8019164:	64255b20 	strtvs	r5, [r5], #-2848	@ 0xfffff4e0
 8019168:	5d426b20 	vstrpl	d22, [r2, #-128]	@ 0xffffff80
 801916c:	2522000a 	strcs	r0, [r2, #-10]!
 8019170:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 8019174:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8019178:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801917c:	2264252e 	rsbcs	r2, r4, #192937984	@ 0xb800000
 8019180:	2523002c 	strcs	r0, [r3, #-44]!	@ 0xffffffd4
 8019184:	64253d73 	strtvs	r3, [r5], #-3443	@ 0xfffff28d
 8019188:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801918c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8019190:	2b000a64 	blcs	801bb28 <CSWTCH.49+0x24>
 8019194:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 8019198:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801919c:	322e2573 	eorcc	r2, lr, #482344960	@ 0x1cc00000
 80191a0:	2e253a64 	vnmulcs.f32	s6, s10, s9
 80191a4:	2c227532 	cfstr32cs	mvfx7, [r2], #-200	@ 0xffffff38
 80191a8:	3d732500 	cfldr64cc	mvdx2, [r3, #-0]
 80191ac:	2e257325 	cdpcs	3, 2, cr7, cr5, cr5, {1}
 80191b0:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 80191b4:	0075322e 	rsbseq	r3, r5, lr, lsr #4
 80191b8:	73252023 			@ <UNDEFINED> instruction: 0x73252023
 80191bc:	000a2320 	andeq	r2, sl, r0, lsr #6
 80191c0:	64206f4e 	strtvs	r6, [r0], #-3918	@ 0xfffff0b2
 80191c4:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80191c8:	66207961 	strtvs	r7, [r0], -r1, ror #18
 80191cc:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 80191d0:	31485300 	mrscc	r5, (UNDEF: 120)
 80191d4:	00363031 	eorseq	r3, r6, r1, lsr r0
 80191d8:	31445353 	cmpcc	r4, r3, asr r3
 80191dc:	00363033 	eorseq	r3, r6, r3, lsr r0
 80191e0:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 80191e4:	252c7525 	strcs	r7, [ip, #-1317]!	@ 0xfffffadb
 80191e8:	000a2975 	andeq	r2, sl, r5, ror r9
 80191ec:	aaeeaa40 	bge	7bc3af4 <__stack_size+0x7bbbaf4>
 80191f0:	565b00ee 	ldrbpl	r0, [fp], -lr, ror #1
 80191f4:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 80191f8:	7325205d 			@ <UNDEFINED> instruction: 0x7325205d
 80191fc:	6d6f4320 	stclvs	3, cr4, [pc, #-128]!	@ 8019184 <_etext+0xf74>
 8019200:	656c6970 	strbvs	r6, [ip, #-2416]!	@ 0xfffff690
 8019204:	6e6f2064 	cdpvs	0, 6, cr2, cr15, cr4, {3}
 8019208:	2a2e2520 	bcs	8ba2690 <__init_array_end+0xb861ac>
 801920c:	74612073 	strbtvc	r2, [r1], #-115	@ 0xffffff8d
 8019210:	2a2e2520 	bcs	8ba2698 <__init_array_end+0xb861b4>
 8019214:	227b0073 	rsbscs	r0, fp, #115	@ 0x73
 8019218:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801921c:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8019220:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
 8019224:	252d6432 	strcs	r6, [sp, #-1074]!	@ 0xfffffbce
 8019228:	5464322e 	strbtpl	r3, [r4], #-558	@ 0xfffffdd2
 801922c:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8019230:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8019234:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8019238:	225a6432 	subscs	r6, sl, #838860800	@ 0x32000000
 801923c:	7b000a7d 	blvc	801bc38 <s_patternName+0x40>
 8019240:	74616422 	strbtvc	r6, [r1], #-1058	@ 0xfffffbde
 8019244:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8019248:	252d6425 	strcs	r6, [sp, #-1061]!	@ 0xfffffbdb
 801924c:	2d64322e 	sfmcs	f3, 2, [r4, #-184]!	@ 0xffffff48
 8019250:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8019254:	322e2554 	eorcc	r2, lr, #84, 10	@ 0x15000000
 8019258:	2e253a64 	vnmulcs.f32	s6, s10, s9
 801925c:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8019260:	2564322e 	strbcs	r3, [r4, #-558]!	@ 0xfffffdd2
 8019264:	322e2573 	eorcc	r2, lr, #482344960	@ 0x1cc00000
 8019268:	2e253a64 	vnmulcs.f32	s6, s10, s9
 801926c:	7d227532 	cfstr32vc	mvfx7, [r2, #-200]!	@ 0xffffff38
 8019270:	5b1b000a 	blpl	86d92a0 <__init_array_end+0x6bcdbc>
 8019274:	006d3133 	rsbeq	r3, sp, r3, lsr r1
 8019278:	37335b1b 			@ <UNDEFINED> instruction: 0x37335b1b
 801927c:	5b1b006d 	blpl	86d9438 <__init_array_end+0x6bcf54>
 8019280:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8019284:	32335b1b 	eorscc	r5, r3, #27648	@ 0x6c00
 8019288:	5b1b006d 	blpl	86d9444 <__init_array_end+0x6bcf60>
 801928c:	006d3333 	rsbeq	r3, sp, r3, lsr r3
 8019290:	39335b1b 	ldmdbcc	r3!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
 8019294:	5b1b006d 	blpl	86d9450 <__init_array_end+0x6bcf6c>
 8019298:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 801929c:	31345b1b 	teqcc	r4, fp, lsl fp
 80192a0:	5b1b006d 	blpl	86d945c <__init_array_end+0x6bcf78>
 80192a4:	006d3734 	rsbeq	r3, sp, r4, lsr r7
 80192a8:	39345b1b 	ldmdbcc	r4!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
 80192ac:	5b1b006d 	blpl	86d9468 <__init_array_end+0x6bcf84>
 80192b0:	006d3433 	rsbeq	r3, sp, r3, lsr r4
 80192b4:	63617453 	cmnvs	r1, #1392508928	@ 0x53000000
 80192b8:	53203a6b 			@ <UNDEFINED> instruction: 0x53203a6b
 80192bc:	20657a69 	rsbcs	r7, r5, r9, ror #20
 80192c0:	424b7525 	submi	r7, fp, #155189248	@ 0x9400000
 80192c4:	7355202c 	cmpvc	r5, #44	@ 0x2c
 80192c8:	203a6465 	eorscs	r6, sl, r5, ror #8
 80192cc:	202c7525 	eorcs	r7, ip, r5, lsr #10
 80192d0:	65657246 	strbvs	r7, [r5, #-582]!	@ 0xfffffdba
 80192d4:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80192d8:	335b1b00 	cmpcc	fp, #0, 22
 80192dc:	000a6d39 	andeq	r6, sl, r9, lsr sp
 80192e0:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80192e4:	3430252d 	ldrtcc	r2, [r0], #-1325	@ 0xfffffad3
 80192e8:	30252d78 	eorcc	r2, r5, r8, ror sp
 80192ec:	252d7834 	strcs	r7, [sp, #-2100]!	@ 0xfffff7cc
 80192f0:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 80192f4:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	@ 0xffffff40
 80192f8:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80192fc:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8019300:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8019304:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8019308:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801930c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8019310:	66202c00 	strtvs	r2, [r0], -r0, lsl #24
 8019314:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8019318:	3a6e6f69 	bcc	9bb50c4 <__init_array_end+0x1b98be0>
 801931c:	73610020 	cmnvc	r1, #32
 8019320:	74726573 	ldrbtvc	r6, [r2], #-1395	@ 0xfffffa8d
 8019324:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8019328:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801932c:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8019330:	3a64656c 	bcc	99328e8 <__init_array_end+0x1916404>
 8019334:	6c696620 	stclvs	6, cr6, [r9], #-128	@ 0xffffff80
 8019338:	25222065 	strcs	r2, [r2, #-101]!	@ 0xffffff9b
 801933c:	202c2273 	eorcs	r2, ip, r3, ror r2
 8019340:	656e696c 	strbvs	r6, [lr, #-2412]!	@ 0xfffff694
 8019344:	25642520 	strbcs	r2, [r4, #-1312]!	@ 0xfffffae0
 8019348:	0a732573 	beq	9ce291c <__init_array_end+0x1cc6438>
 801934c:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
 8019350:	203e2074 	eorscs	r2, lr, r4, ror r0
 8019354:	636f6c62 	cmnvs	pc, #25088	@ 0x6200
 8019358:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801935c:	0a74696d 	beq	9d33918 <__init_array_end+0x1d17434>
	...

08019361 <CSWTCH.85>:
 8019361:	444e4f4f 	strbmi	r4, [lr], #-3919	@ 0xfffff0b1
 8019365:	 	andeq	r5, r0, r6, asr #4

08019368 <vtable for RDMNetDevice>:
	...
 8019370:	080098e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, fp, ip, pc}
 8019374:	08009975 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, fp, ip, pc}
 8019378:	0800bae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, ip, sp, pc}
 801937c:	0800bae3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, fp, ip, sp, pc}

08019380 <SOFTWARE_VERSION>:
 8019380:	00302e31 	eorseq	r2, r0, r1, lsr lr

08019384 <SOFTWARE_VERSION>:
 8019384:	00302e31 	eorseq	r2, r0, r1, lsr lr

08019388 <s_Output>:
 8019388:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8019394:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80193a0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80193a4:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80193a8:	00000000 	andeq	r0, r0, r0
 80193ac:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 80193b0:	0000006c 	andeq	r0, r0, ip, rrx
 80193b4:	00000000 	andeq	r0, r0, r0
 80193b8:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 80193bc:	65646f43 	strbvs	r6, [r4, #-3907]!	@ 0xfffff0bd
 80193c0:	00000000 	andeq	r0, r0, r0
 80193c4:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80193d0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80193d4:	00006769 	andeq	r6, r0, r9, ror #14
 80193d8:	00000000 	andeq	r0, r0, r0
 80193dc:	70657453 	rsbvc	r7, r5, r3, asr r4
 80193e0:	00726570 	rsbseq	r6, r2, r0, ror r5
 80193e4:	00000000 	andeq	r0, r0, r0
 80193e8:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80193ec:	00007265 	andeq	r7, r0, r5, ror #4
 80193f0:	00000000 	andeq	r0, r0, r0
 80193f4:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 80193f8:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80193fc:	00000000 	andeq	r0, r0, r0
 8019400:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8019404:	00006c61 	andeq	r6, r0, r1, ror #24
 8019408:	00000000 	andeq	r0, r0, r0
 801940c:	20424752 	subcs	r4, r2, r2, asr r7
 8019410:	656e6150 	strbvs	r6, [lr, #-336]!	@ 0xfffffeb0
 8019414:	0000006c 	andeq	r0, r0, ip, rrx
 8019418:	004d5750 	subeq	r5, sp, r0, asr r7
	...

08019424 <s_Node>:
 8019424:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 8019428:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8019434:	41730000 	cmnmi	r3, r0
 8019438:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 801943c:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8019448:	2043534f 	subcs	r5, r3, pc, asr #6
 801944c:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 8019450:	00007265 	andeq	r7, r0, r5, ror #4
 8019454:	00000000 	andeq	r0, r0, r0
 8019458:	544c0000 	strbpl	r0, [ip], #-0
 801945c:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801946c:	2043534f 	subcs	r5, r3, pc, asr #6
 8019470:	65696c43 	strbvs	r6, [r9, #-3139]!	@ 0xfffff3bd
 8019474:	0000746e 	andeq	r7, r0, lr, ror #8
 8019478:	00000000 	andeq	r0, r0, r0
 801947c:	44520000 	ldrbmi	r0, [r2], #-0
 8019480:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 8019484:	524c4c20 	subpl	r4, ip, #32, 24	@ 0x2000
 8019488:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801948c:	0000796c 	andeq	r7, r0, ip, ror #18
 8019490:	776f6853 			@ <UNDEFINED> instruction: 0x776f6853
 8019494:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
	...
 80194a0:	494d0000 	stmdbmi	sp, {}^	@ <UNPREDICTABLE>
 80194a4:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80194b4:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80194c4:	69500000 	ldmdbvs	r0, {}^	@ <UNPREDICTABLE>
 80194c8:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80194cc:	65687375 	strbvs	r7, [r8, #-885]!	@ 0xfffffc8b
 80194d0:	00000072 	andeq	r0, r0, r2, ror r0
 80194d4:	00000000 	andeq	r0, r0, r0
 80194d8:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
	...
 80194e8:	6f420000 	svcvs	0x00420000
 80194ec:	6f6c746f 	svcvs	0x006c746f
 80194f0:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 80194f4:	54465420 	strbpl	r5, [r6], #-1056	@ 0xfffffbe0
 80194f8:	00000050 	andeq	r0, r0, r0, asr r0
 80194fc:	204d4452 	subcs	r4, sp, r2, asr r4
 8019500:	70736552 	rsbsvc	r6, r3, r2, asr r5
 8019504:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8019508:	00000072 	andeq	r0, r0, r2, ror r0
 801950c:	00000000 	andeq	r0, r0, r0

08019510 <RemoteConfig::s_SET>:
 8019510:	0800a31d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sp, pc}
 8019514:	00000000 	andeq	r0, r0, r0
 8019518:	08018861 	stmdaeq	r1, {r0, r5, r6, fp, pc}
 801951c:	00010005 	andeq	r0, r1, r5
 8019520:	0800a2f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sp, pc}
 8019524:	00000000 	andeq	r0, r0, r0
 8019528:	08018867 	stmdaeq	r1, {r0, r1, r2, r5, r6, fp, pc}
 801952c:	00010008 	andeq	r0, r1, r8

08019530 <RemoteConfig::s_GET>:
 8019530:	0800aafd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp, pc}
 8019534:	00000000 	andeq	r0, r0, r0
 8019538:	08018879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, pc}
 801953c:	00000008 	andeq	r0, r0, r8
 8019540:	0800a245 	stmdaeq	r0, {r0, r2, r6, r9, sp, pc}
 8019544:	00000000 	andeq	r0, r0, r0
 8019548:	08018882 	stmdaeq	r1, {r1, r7, fp, pc}
 801954c:	00000005 	andeq	r0, r0, r5
 8019550:	0800a1c1 	stmdaeq	r0, {r0, r6, r7, r8, sp, pc}
 8019554:	00000000 	andeq	r0, r0, r0
 8019558:	08018888 	stmdaeq	r1, {r3, r7, fp, pc}
 801955c:	00000008 	andeq	r0, r0, r8
 8019560:	0800a135 	stmdaeq	r0, {r0, r2, r4, r5, r8, sp, pc}
 8019564:	00000000 	andeq	r0, r0, r0
 8019568:	08018867 	stmdaeq	r1, {r0, r1, r2, r5, r6, fp, pc}
 801956c:	00000008 	andeq	r0, r0, r8
 8019570:	0800a181 	stmdaeq	r0, {r0, r7, r8, sp, pc}
 8019574:	00000000 	andeq	r0, r0, r0
 8019578:	08018891 	stmdaeq	r1, {r0, r4, r7, fp, pc}
 801957c:	00000007 	andeq	r0, r0, r7
 8019580:	0800a539 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, sp, pc}
 8019584:	00000000 	andeq	r0, r0, r0
 8019588:	08018899 	stmdaeq	r1, {r0, r3, r4, r7, fp, pc}
 801958c:	00010004 	andeq	r0, r1, r4
 8019590:	0800a1f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sp, pc}
 8019594:	00000000 	andeq	r0, r0, r0
 8019598:	08018861 	stmdaeq	r1, {r0, r5, r6, fp, pc}
 801959c:	00000005 	andeq	r0, r0, r5
 80195a0:	0800a851 	stmdaeq	r0, {r0, r4, r6, fp, sp, pc}
 80195a4:	00000000 	andeq	r0, r0, r0
 80195a8:	0801889e 	stmdaeq	r1, {r1, r2, r3, r4, r7, fp, pc}
 80195ac:	00000009 	andeq	r0, r0, r9

080195b0 <paramMasks>:
 80195b0:	0801a09a 	stmdaeq	r1, {r1, r3, r4, r7, sp, pc}
 80195b4:	00000001 	andeq	r0, r0, r1
 80195b8:	0801a08c 	stmdaeq	r1, {r2, r3, r7, sp, pc}
 80195bc:	00000002 	andeq	r0, r0, r2
 80195c0:	0801a07e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sp, pc}
 80195c4:	00000004 	andeq	r0, r0, r4
 80195c8:	0801a070 	stmdaeq	r1, {r4, r5, r6, sp, pc}
 80195cc:	00000008 	andeq	r0, r0, r8
 80195d0:	0801a061 	stmdaeq	r1, {r0, r5, r6, sp, pc}
 80195d4:	00000020 	andeq	r0, r0, r0, lsr #32

080195d8 <RemoteConfig::s_TXT>:
 80195d8:	0800a541 	stmdaeq	r0, {r0, r6, r8, sl, sp, pc}
 80195dc:	00000000 	andeq	r0, r0, r0
 80195e0:	0800a7a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, sp, pc}
 80195e4:	00000000 	andeq	r0, r0, r0
 80195e8:	080188da 	stmdaeq	r1, {r1, r3, r4, r6, r7, fp, pc}
 80195ec:	0000000b 	andeq	r0, r0, fp
 80195f0:	0800a569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, sp, pc}
 80195f4:	00000000 	andeq	r0, r0, r0
 80195f8:	0800a7d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, sp, pc}
 80195fc:	00000000 	andeq	r0, r0, r0
 8019600:	080188e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, fp, pc}
 8019604:	00000007 	andeq	r0, r0, r7
 8019608:	0800a58d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, sp, pc}
 801960c:	00000000 	andeq	r0, r0, r0
 8019610:	0800a7f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 8019614:	00000000 	andeq	r0, r0, r0
 8019618:	080188ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, fp, pc}
 801961c:	0000000b 	andeq	r0, r0, fp
 8019620:	0800a5dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, sp, pc}
 8019624:	00000000 	andeq	r0, r0, r0
 8019628:	0800a831 	stmdaeq	r0, {r0, r4, r5, fp, sp, pc}
 801962c:	00000000 	andeq	r0, r0, r0
 8019630:	080188fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, fp, pc}
 8019634:	0000000b 	andeq	r0, r0, fp
 8019638:	0800a5b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, sp, pc}
 801963c:	00000000 	andeq	r0, r0, r0
 8019640:	0800a811 	stmdaeq	r0, {r0, r4, fp, sp, pc}
 8019644:	00000000 	andeq	r0, r0, r0
 8019648:	08018906 	stmdaeq	r1, {r1, r2, r8, fp, pc}
 801964c:	0000000b 	andeq	r0, r0, fp
 8019650:	00000020 	andeq	r0, r0, r0, lsr #32
 8019654:	00544547 	subseq	r4, r4, r7, asr #10
 8019658:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 801965c:	00000000 	andeq	r0, r0, r0
 8019660:	0000002f 	andeq	r0, r0, pc, lsr #32
 8019664:	50545448 	subspl	r5, r4, r8, asr #8
 8019668:	00000000 	andeq	r0, r0, r0
 801966c:	00000a20 	andeq	r0, r0, r0, lsr #20
 8019670:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8019674:	0000003a 	andeq	r0, r0, sl, lsr r0
 8019678:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801967c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8019680:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8019684:	00000000 	andeq	r0, r0, r0
 8019688:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801968c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8019690:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8019694:	00006874 	andeq	r6, r0, r4, ror r8
 8019698:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801969c:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80196a0:	2f6e6f69 	svccs	0x006e6f69
 80196a4:	00000000 	andeq	r0, r0, r0
 80196a8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80196ac:	00000000 	andeq	r0, r0, r0
 80196b0:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 80196b4:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 80196b8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
 80196bc:	00000000 	andeq	r0, r0, r0
 80196c0:	00003b20 	andeq	r3, r0, r0, lsr #22
 80196c4:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80196c8:	00000000 	andeq	r0, r0, r0
 80196cc:	6f736a2f 	svcvs	0x00736a2f
 80196d0:	00002f6e 	andeq	r2, r0, lr, ror #30
 80196d4:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 80196d8:	00002f6c 	andeq	r2, r0, ip, ror #30
 80196dc:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 80196e0:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 80196e4:	00006c6d 	andeq	r6, r0, sp, ror #24
 80196e8:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	@ 0xffffff44
 80196ec:	00000065 	andeq	r0, r0, r5, rrx
 80196f0:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80196f4:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 80196f8:	0000006c 	andeq	r0, r0, ip, rrx
 80196fc:	6f736a2f 	svcvs	0x00736a2f
 8019700:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 8019704:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019708:	00000000 	andeq	r0, r0, r0
 801970c:	6f736a2f 	svcvs	0x00736a2f
 8019710:	0000006e 	andeq	r0, r0, lr, rrx
 8019714:	6f626572 	svcvs	0x00626572
 8019718:	0000746f 	andeq	r7, r0, pc, ror #8
 801971c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8019720:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8019724:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8019728:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 801972c:	00000000 	andeq	r0, r0, r0
 8019730:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8019734:	0000003d 	andeq	r0, r0, sp, lsr r0
 8019738:	4f44213c 	svcmi	0x0044213c
 801973c:	50595443 	subspl	r5, r9, r3, asr #8
 8019740:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8019744:	0a3e6c6d 	beq	8fb4900 <__init_array_end+0xf9841c>
 8019748:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801974c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8019750:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8019754:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8019758:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801975c:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	@ 0xfffffeb4
 8019760:	2f3c7469 	svccs	0x003c7469
 8019764:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 8019768:	2f3c3e65 	svccs	0x003c3e65
 801976c:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8019770:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8019774:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8019778:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801977c:	2f3c4b4f 	svccs	0x003c4b4f
 8019780:	3c3e3168 	ldfccs	f3, [lr], #-416	@ 0xfffffe60
 8019784:	646f622f 	strbtvs	r6, [pc], #-559	@ 801978c <RemoteConfig::s_TXT+0x1b4>
 8019788:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801978c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8019790:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8019794:	20646142 	rsbcs	r6, r4, r2, asr #2
 8019798:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 801979c:	00747365 	rsbseq	r7, r4, r5, ror #6
 80197a0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80197a4:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80197a8:	6f727245 	svcvs	0x00727245
 80197ac:	00000072 	andeq	r0, r0, r2, ror r0
 80197b0:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80197b4:	20747365 	rsbscs	r7, r4, r5, ror #6
 80197b8:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 80197bc:	54207974 	strtpl	r7, [r0], #-2420	@ 0xfffff68c
 80197c0:	4c206f6f 	stcmi	15, cr6, [r0], #-444	@ 0xfffffe44
 80197c4:	65677261 	strbvs	r7, [r7, #-609]!	@ 0xfffffd9f
 80197c8:	00000000 	andeq	r0, r0, r0
 80197cc:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80197d0:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	@ 0xfffffe6c
 80197d4:	20495255 	subcs	r5, r9, r5, asr r2
 80197d8:	206f6f54 	rsbcs	r6, pc, r4, asr pc	@ <UNPREDICTABLE>
 80197dc:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80197e0:	00000000 	andeq	r0, r0, r0
 80197e4:	65746e49 	ldrbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 80197e8:	6c616e72 	stclvs	14, cr6, [r1], #-456	@ 0xfffffe38
 80197ec:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 80197f0:	20726576 	rsbscs	r6, r2, r6, ror r5
 80197f4:	6f727245 	svcvs	0x00727245
 80197f8:	00000072 	andeq	r0, r0, r2, ror r0
 80197fc:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
 8019800:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
 8019804:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 8019808:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
 801980c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8019810:	00006465 	andeq	r6, r0, r5, ror #8
 8019814:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8019818:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801981c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8019820:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8019824:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8019828:	00000064 	andeq	r0, r0, r4, rrx
 801982c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8019830:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 8019834:	00000064 	andeq	r0, r0, r4, rrx
 8019838:	00004b4f 	andeq	r4, r0, pc, asr #22
 801983c:	4f44213c 	svcmi	0x0044213c
 8019840:	50595443 	subspl	r5, r9, r3, asr #8
 8019844:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8019848:	0a3e6c6d 	beq	8fb4a04 <__init_array_end+0xf98520>
 801984c:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8019850:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8019854:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8019858:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801985c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8019860:	25207525 	strcs	r7, [r0, #-1317]!	@ 0xfffffadb
 8019864:	742f3c73 	strtvc	r3, [pc], #-3187	@ 801986c <RemoteConfig::s_TXT+0x294>
 8019868:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801986c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8019870:	3e646165 	powccsz	f6, f4, f5
 8019874:	6f623c0a 	svcvs	0x00623c0a
 8019878:	3c3e7964 			@ <UNDEFINED> instruction: 0x3c3e7964
 801987c:	253e3168 	ldrcs	r3, [lr, #-360]!	@ 0xfffffe98
 8019880:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8019884:	2f3c3e31 	svccs	0x003c3e31
 8019888:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801988c:	2f3c0a3e 	svccs	0x003c0a3e
 8019890:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8019894:	00000a3e 	andeq	r0, r0, lr, lsr sl
 8019898:	50545448 	subspl	r5, r4, r8, asr #8
 801989c:	312e312f 			@ <UNDEFINED> instruction: 0x312e312f
 80198a0:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80198a4:	0a0d7325 	beq	8376540 <__init_array_end+0x35a05c>
 80198a8:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 80198ac:	203a7265 	eorscs	r7, sl, r5, ror #4
 80198b0:	0a0d7325 	beq	837654c <__init_array_end+0x35a068>
 80198b4:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80198b8:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80198bc:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 80198c0:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 80198c4:	6f430a0d 	svcvs	0x00430a0d
 80198c8:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80198cc:	654c2d74 	strbvs	r2, [ip, #-3444]	@ 0xfffff28c
 80198d0:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80198d4:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80198d8:	6f430a0d 	svcvs	0x00430a0d
 80198dc:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 80198e0:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80198e4:	6c63203a 	stclvs	0, cr2, [r3], #-232	@ 0xffffff18
 80198e8:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	@ 0xfffffe44
 80198ec:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 80198f0:	54705f73 	ldrbtpl	r5, [r0], #-3955	@ 0xfffff08d
 80198f4:	20736968 	rsbscs	r6, r3, r8, ror #18
 80198f8:	6e203d21 	cdpvs	13, 2, cr3, cr0, cr1, {1}
 80198fc:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8019900:	00007274 	andeq	r7, r0, r4, ror r2
 8019904:	00746547 	rsbseq	r6, r4, r7, asr #10
 8019908:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
 801990c:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8019910:	69702f65 	ldmdbvs	r0!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 8019914:	646c6578 	strbtvs	r6, [ip], #-1400	@ 0xfffffa88
 8019918:	6f63786d 	svcvs	0x0063786d
 801991c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8019920:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8019924:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8019928:	00000068 	andeq	r0, r0, r8, rrx
 801992c:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8019930:	6f63206c 	svcvs	0x0063206c
 8019934:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8019938:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 801993c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 8019940:	70795420 	rsbsvc	r5, r9, r0, lsr #8
 8019944:	20202065 	eorcs	r2, r0, r5, rrx
 8019948:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 801994c:	255b2073 	ldrbcs	r2, [fp, #-115]	@ 0xffffff8d
 8019950:	3c205d64 	stccc	13, cr5, [r0], #-400	@ 0xfffffe70
 8019954:	6c206425 	cfstrsvs	mvf6, [r0], #-148	@ 0xffffff6c
 8019958:	2f736465 	svccs	0x00736465
 801995c:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 8019960:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8019964:	756f4320 	strbvc	r4, [pc, #-800]!	@ 801964c <RemoteConfig::s_TXT+0x74>
 8019968:	2020746e 	eorcs	r7, r0, lr, ror #8
 801996c:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8019970:	00000a64 	andeq	r0, r0, r4, ror #20
 8019974:	70614d20 	rsbvc	r4, r1, r0, lsr #26
 8019978:	676e6970 			@ <UNDEFINED> instruction: 0x676e6970
 801997c:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8019980:	255b2073 	ldrbcs	r2, [fp, #-115]	@ 0xffffff8d
 8019984:	000a5d64 	andeq	r5, sl, r4, ror #26
 8019988:	48305420 	ldmdami	r0!, {r5, sl, ip, lr}
 801998c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019990:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8019994:	2066322e 	rsbcs	r3, r6, lr, lsr #4
 8019998:	2578305b 	ldrbcs	r3, [r8, #-91]!	@ 0xffffffa5
 801999c:	000a5d58 	andeq	r5, sl, r8, asr sp
 80199a0:	48315420 	ldmdami	r1!, {r5, sl, ip, lr}
 80199a4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80199a8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80199ac:	2066322e 	rsbcs	r3, r6, lr, lsr #4
 80199b0:	2578305b 	ldrbcs	r3, [r8, #-91]!	@ 0xffffffa5
 80199b4:	000a5d58 	andeq	r5, sl, r8, asr sp
 80199b8:	6f6c4720 	svcvs	0x006c4720
 80199bc:	426c6162 	rsbmi	r6, ip, #-2147483624	@ 0x80000018
 80199c0:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80199c4:	73656e74 	cmnvc	r5, #116, 28	@ 0x740
 80199c8:	25203a73 	strcs	r3, [r0, #-2675]!	@ 0xfffff58d
 80199cc:	00000a75 	andeq	r0, r0, r5, ror sl
 80199d0:	6f6c4320 	svcvs	0x006c4320
 80199d4:	20206b63 	eorcs	r6, r0, r3, ror #22
 80199d8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80199dc:	7a482075 	bvc	9221bb8 <__init_array_end+0x12056d4>
 80199e0:	0000000a 	andeq	r0, r0, sl
 80199e4:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 80199e8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 80199ec:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80199f0:	7a482075 	bvc	9221bcc <__init_array_end+0x12056e8>
 80199f4:	0000000a 	andeq	r0, r0, sl
 80199f8:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 80199fc:	4d44206c 	stclmi	0, cr2, [r4, #-432]	@ 0xfffffe50
 8019a00:	6f632058 	svcvs	0x00632058
 8019a04:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8019a08:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8019a0c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 8019a10:	74754f20 	ldrbtvc	r4, [r5], #-3872	@ 0xfffff0e0
 8019a14:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 8019a18:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019a1c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019a20:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8019a24:	0000000a 	andeq	r0, r0, sl
 8019a28:	6f724720 	svcvs	0x00724720
 8019a2c:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8019a30:	6f632067 	svcvs	0x00632067
 8019a34:	20746e75 	rsbscs	r6, r4, r5, ror lr
 8019a38:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8019a3c:	72475b20 	subvc	r5, r7, #32, 22	@ 0x8000
 8019a40:	7370756f 	cmnvc	r0, #465567744	@ 0x1bc00000
 8019a44:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8019a48:	000a5d75 	andeq	r5, sl, r5, ror sp
 8019a4c:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 8019a50:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 8019a54:	20207365 	eorcs	r7, r0, r5, ror #6
 8019a58:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019a5c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8019a60:	0000000a 	andeq	r0, r0, sl
 8019a64:	786d4420 	stmdavc	sp!, {r5, sl, lr}^
 8019a68:	746f6f46 	strbtvc	r6, [pc], #-3910	@ 8019a70 <RemoteConfig::s_TXT+0x498>
 8019a6c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 8019a70:	20202074 	eorcs	r2, r0, r4, ror r0
 8019a74:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8019a78:	0000000a 	andeq	r0, r0, sl
 8019a7c:	3a752520 	bcc	9d62f04 <__init_array_end+0x1d46a20>
 8019a80:	253a7525 	ldrcs	r7, [sl, #-1317]!	@ 0xfffffadb
 8019a84:	75253a75 	strvc	r3, [r5, #-2677]!	@ 0xfffff58b
 8019a88:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8019a8c:	000a7525 	andeq	r7, sl, r5, lsr #10
 8019a90:	2f637273 	svccs	0x00637273
 8019a94:	6d786d64 	ldclvs	13, cr6, [r8, #-400]!	@ 0xfffffe70
 8019a98:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8019a9c:	3273772f 	rsbscc	r7, r3, #12320768	@ 0xbc0000
 8019aa0:	64787838 	ldrbtvs	r7, [r8], #-2104	@ 0xfffff7c8
 8019aa4:	756d786d 	strbvc	r7, [sp, #-2157]!	@ 0xfffff793
 8019aa8:	2e69746c 	cdpcs	4, 6, cr7, cr9, cr12, {3}
 8019aac:	00707063 	rsbseq	r7, r0, r3, rrx
 8019ab0:	72617453 	rsbvc	r7, r1, #1392508928	@ 0x53000000
 8019ab4:	00000074 	andeq	r0, r0, r4, ror r0
 8019ab8:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019abc:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019ac0:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019ac4:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019ac8:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8019acc:	0000000a 	andeq	r0, r0, sl
 8019ad0:	706f7453 	rsbvc	r7, pc, r3, asr r4	@ <UNPREDICTABLE>
 8019ad4:	00000000 	andeq	r0, r0, r0
 8019ad8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019adc:	6d447878 	stclvs	8, cr7, [r4, #-480]	@ 0xfffffe20
 8019ae0:	6c754d78 	ldclvs	13, cr4, [r5], #-480	@ 0xfffffe20
 8019ae4:	00006974 	andeq	r6, r0, r4, ror r9
 8019ae8:	203e2d2d 	eorscs	r2, lr, sp, lsr #26
 8019aec:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 8019af0:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 8019af4:	0000000a 	andeq	r0, r0, sl
 8019af8:	696c6156 	stmdbvs	ip!, {r1, r2, r4, r6, r8, sp, lr}^
 8019afc:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8019b00:	00000000 	andeq	r0, r0, r0
 8019b04:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	@ 8019a54 <RemoteConfig::s_TXT+0x47c>
 8019b08:	772d6269 	strvc	r6, [sp, -r9, ror #4]!
 8019b0c:	78383273 	ldmdavc	r8!, {r0, r1, r4, r5, r6, r9, ip, sp}
 8019b10:	6e692f78 	mcrvs	15, 3, r2, cr9, cr8, {3}
 8019b14:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8019b18:	69702f65 	ldmdbvs	r0!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 8019b1c:	636c6578 	cmnvs	ip, #120, 10	@ 0x1e000000
 8019b20:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8019b24:	61727567 	cmnvs	r2, r7, ror #10
 8019b28:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019b2c:	0000682e 	andeq	r6, r0, lr, lsr #16
 8019b30:	202d2d3c 	eorcs	r2, sp, ip, lsr sp
 8019b34:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 8019b38:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 8019b3c:	0000000a 	andeq	r0, r0, sl
 8019b40:	74614470 	strbtvc	r4, [r1], #-1136	@ 0xfffffb90
 8019b44:	3d212061 	stccc	0, cr2, [r1, #-388]!	@ 0xfffffe7c
 8019b48:	6c756e20 	ldclvs	14, cr6, [r5], #-128	@ 0xffffff80
 8019b4c:	7274706c 	rsbsvc	r7, r4, #108	@ 0x6c
 8019b50:	00000000 	andeq	r0, r0, r0
 8019b54:	44746553 	ldrbtmi	r6, [r4], #-1363	@ 0xfffffaad
 8019b58:	00617461 	rsbeq	r7, r1, r1, ror #8
 8019b5c:	6e654c6e 	cdpvs	12, 6, cr4, cr5, cr14, {3}
 8019b60:	20687467 	rsbcs	r7, r8, r7, ror #8
 8019b64:	6c203d3c 	stcvs	13, cr3, [r0], #-240	@ 0xffffff10
 8019b68:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
 8019b6c:	3a746573 	bcc	9d33140 <__init_array_end+0x1d16c5c>
 8019b70:	786d643a 	stmdavc	sp!, {r1, r3, r4, r5, sl, sp, lr}^
 8019b74:	4e553a3a 			@ <UNDEFINED> instruction: 0x4e553a3a
 8019b78:	52455649 	subpl	r5, r5, #76546048	@ 0x4900000
 8019b7c:	535f4553 	cmppl	pc, #348127232	@ 0x14c00000
 8019b80:	00455a49 	subeq	r5, r5, r9, asr #20
 8019b84:	4970616d 	ldmdbmi	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8019b88:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 8019b8c:	73203c20 			@ <UNDEFINED> instruction: 0x73203c20
 8019b90:	6f657a69 	svcvs	0x00657a69
 8019b94:	68632866 	stmdavs	r3!, {r1, r2, r5, r6, fp, sp}^
 8019b98:	656e6e61 	strbvs	r6, [lr, #-3681]!	@ 0xfffff19f
 8019b9c:	70614d6c 	rsbvc	r4, r1, ip, ror #26
 8019ba0:	202f2029 	eorcs	r2, pc, r9, lsr #32
 8019ba4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	@ 0xfffff68d
 8019ba8:	6328666f 			@ <UNDEFINED> instruction: 0x6328666f
 8019bac:	6e6e6168 	powvsez	f6, f6, #0.0
 8019bb0:	614d6c65 	cmpvs	sp, r5, ror #24
 8019bb4:	5d305b70 	vldmdbpl	r0!, {d5-<overflow reg d60>}
 8019bb8:	00000029 	andeq	r0, r0, r9, lsr #32
 8019bbc:	00000030 	andeq	r0, r0, r0, lsr r0
 8019bc0:	7265706f 	rsbvc	r7, r5, #111	@ 0x6f
 8019bc4:	726f7461 	rsbvc	r7, pc, #1627389952	@ 0x61000000
 8019bc8:	00002928 	andeq	r2, r0, r8, lsr #18
 8019bcc:	6168436e 	cmnvs	r8, lr, ror #6
 8019bd0:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
 8019bd4:	72655073 	rsbvc	r5, r5, #115	@ 0x73
 8019bd8:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8019bdc:	3d3d206c 	ldccc	0, cr2, [sp, #-432]!	@ 0xfffffe50
 8019be0:	00003420 	andeq	r3, r0, r0, lsr #8
 8019be4:	54527369 	ldrbpl	r7, [r2], #-873	@ 0xfffffc97
 8019be8:	6f72505a 	svcvs	0x0072505a
 8019bec:	6f636f74 	svcvs	0x00636f74
 8019bf0:	0000006c 	andeq	r0, r0, ip, rrx
 8019bf4:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 8019bf8:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 8019bfc:	3c207865 	stccc	8, cr7, [r0], #-404	@ 0xfffffe6c
 8019c00:	524f5020 	subpl	r5, pc, #32
 8019c04:	00005354 	andeq	r5, r0, r4, asr r3
 8019c08:	63614249 	cmnvs	r1, #-1879048188	@ 0x90000004
 8019c0c:	0070756b 	rsbseq	r7, r0, fp, ror #10
 8019c10:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	@ 8019b60 <RemoteConfig::s_TXT+0x588>
 8019c14:	6c2d6269 	sfmvs	f6, 4, [sp], #-420	@ 0xfffffe5c
 8019c18:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
 8019c1c:	2f746573 	svccs	0x00746573
 8019c20:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 8019c24:	2f656475 	svccs	0x00656475
 8019c28:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 8019c2c:	74657374 	strbtvc	r7, [r5], #-884	@ 0xfffffc8c
 8019c30:	61746164 	cmnvs	r4, r4, ror #2
 8019c34:	0000682e 	andeq	r6, r0, lr, lsr #16
 8019c38:	3253577e 	subscc	r5, r3, #33030144	@ 0x1f80000
 8019c3c:	4d787838 	ldclmi	8, cr7, [r8, #-224]!	@ 0xffffff20
 8019c40:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8019c44:	00000000 	andeq	r0, r0, r0
 8019c48:	2f637273 	svccs	0x00637273
 8019c4c:	32336467 	eorscc	r6, r3, #1728053248	@ 0x67000000
 8019c50:	6970672f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}^
 8019c54:	73772f6f 	cmnvc	r7, #444	@ 0x1bc
 8019c58:	78783832 	ldmdavc	r8!, {r1, r4, r5, fp, ip, sp}^
 8019c5c:	746c756d 	strbtvc	r7, [ip], #-1389	@ 0xfffffa93
 8019c60:	70632e69 	rsbvc	r2, r3, r9, ror #28
 8019c64:	00000070 	andeq	r0, r0, r0, ror r0
 8019c68:	75746553 	ldrbvc	r6, [r4, #-1363]!	@ 0xfffffaad
 8019c6c:	00000070 	andeq	r0, r0, r0, ror r0
 8019c70:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019c74:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019c78:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019c7c:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019c80:	5452203a 	ldrbpl	r2, [r2], #-58	@ 0xffffffc6
 8019c84:	49545f5a 	ldmdbmi	r4, {r1, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 8019c88:	5f52454d 	svcpl	0x0052454d
 8019c8c:	49524550 	ldmdbmi	r2, {r4, r6, r8, sl, lr}^
 8019c90:	253d444f 	ldrcs	r4, [sp, #-1103]!	@ 0xfffffbb1
 8019c94:	6e202c75 	mcrvs	12, 1, r2, cr0, cr5, {3}
 8019c98:	3d483054 	stclcc	0, cr3, [r8, #-336]	@ 0xfffffeb0
 8019c9c:	202c7525 	eorcs	r7, ip, r5, lsr #10
 8019ca0:	4831546e 	ldmdami	r1!, {r1, r2, r3, r5, r6, sl, ip, lr}
 8019ca4:	0a75253d 	beq	9d631a0 <__init_array_end+0x1d46cbc>
 8019ca8:	00000000 	andeq	r0, r0, r0
 8019cac:	2b203128 	blcs	8826154 <__init_array_end+0x809c70>
 8019cb0:	6e5f6d20 	cdpvs	13, 5, cr6, cr15, cr0, {1}
 8019cb4:	53667542 	cmnpl	r6, #276824064	@ 0x10800000
 8019cb8:	29657a69 	stmdbcs	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 8019cbc:	55203c20 	strpl	r3, [r0, #-3104]!	@ 0xfffff3e0
 8019cc0:	31544e49 	cmpcc	r4, r9, asr #28
 8019cc4:	414d5f36 	cmpmi	sp, r6, lsr pc
 8019cc8:	00000058 	andeq	r0, r0, r8, asr r0
 8019ccc:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
 8019cd0:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 8019cd4:	69702f65 	ldmdbvs	r0!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 8019cd8:	636c6578 	cmnvs	ip, #120, 10	@ 0x1e000000
 8019cdc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8019ce0:	61727567 	cmnvs	r2, r7, ror #10
 8019ce4:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019ce8:	0000682e 	andeq	r6, r0, lr, lsr #16
 8019cec:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8019cf0:	00000a6c 	andeq	r0, r0, ip, ror #20
 8019cf4:	70795420 	rsbsvc	r5, r9, r0, lsr #8
 8019cf8:	3a202065 	bcc	8821e94 <__init_array_end+0x8059b0>
 8019cfc:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8019d00:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	@ 0xfffffe94
 8019d04:	0000000a 	andeq	r0, r0, sl
 8019d08:	756f4320 	strbvc	r4, [pc, #-800]!	@ 80199f0 <RemoteConfig::s_TXT+0x418>
 8019d0c:	3a20746e 	bcc	8836ecc <__init_array_end+0x81a9e8>
 8019d10:	0a642520 	beq	9923198 <__init_array_end+0x1906cb4>
 8019d14:	00000000 	andeq	r0, r0, r0
 8019d18:	6f6c4320 	svcvs	0x006c4320
 8019d1c:	3a206b63 	bcc	8834ab0 <__init_array_end+0x8185cc>
 8019d20:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8019d24:	000a7a48 	andeq	r7, sl, r8, asr #20
 8019d28:	5f767321 	svcpl	0x00767321
 8019d2c:	75527369 	ldrbvc	r7, [r2, #-873]	@ 0xfffffc97
 8019d30:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
 8019d34:	00000067 	andeq	r0, r0, r7, rrx
 8019d38:	61647055 	qdsubvs	r7, r5, r4
 8019d3c:	00006574 	andeq	r6, r0, r4, ror r5
 8019d40:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 8019d44:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 8019d48:	3c207865 	stccc	8, cr7, [r0], #-404	@ 0xfffffe6c
 8019d4c:	78697020 	stmdavc	r9!, {r5, ip, sp, lr}^
 8019d50:	3a3a6c65 	bcc	8eb4eec <__init_array_end+0xe98a08>
 8019d54:	54524f50 	ldrbpl	r4, [r2], #-3920	@ 0xfffff0b0
 8019d58:	554f435f 	strbpl	r4, [pc, #-863]	@ 8019a01 <RemoteConfig::s_TXT+0x429>
 8019d5c:	0000544e 	andeq	r5, r0, lr, asr #8
 8019d60:	43746553 	cmnmi	r4, #348127232	@ 0x14c00000
 8019d64:	756f6c6f 	strbvc	r6, [pc, #-3183]!	@ 80190fd <_etext+0xeed>
 8019d68:	5a545272 	bpl	952e738 <__init_array_end+0x1512254>
 8019d6c:	00000000 	andeq	r0, r0, r0
 8019d70:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 8019d74:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 8019d78:	3c207865 	stccc	8, cr7, [r0], #-404	@ 0xfffffe6c
 8019d7c:	00363120 	eorseq	r3, r6, r0, lsr #2
 8019d80:	43746553 	cmnmi	r4, #348127232	@ 0x14c00000
 8019d84:	756f6c6f 	strbvc	r6, [pc, #-3183]!	@ 801911d <_etext+0xf0d>
 8019d88:	32535772 	subscc	r5, r3, #29884416	@ 0x1c80000
 8019d8c:	00313038 	eorseq	r3, r1, r8, lsr r0
 8019d90:	7869506e 	stmdavc	r9!, {r1, r2, r3, r5, r6, ip, lr}^
 8019d94:	6e496c65 	cdpvs	12, 4, cr6, cr9, cr5, {3}
 8019d98:	20786564 	rsbscs	r6, r8, r4, ror #10
 8019d9c:	5f6d203c 	svcpl	0x006d203c
 8019da0:	6675426e 	ldrbtvs	r4, [r5], -lr, ror #4
 8019da4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	@ 0xfffff6ad
 8019da8:	38202f20 	stmdacc	r0!, {r5, r8, r9, sl, fp, sp}
 8019dac:	00000000 	andeq	r0, r0, r0
 8019db0:	50746553 	rsbspl	r6, r4, r3, asr r5
 8019db4:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8019db8:	74794234 	ldrbtvc	r4, [r9], #-564	@ 0xfffffdcc
 8019dbc:	00007365 	andeq	r7, r0, r5, ror #6
 8019dc0:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019dc4:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019dc8:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019dcc:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019dd0:	466e203a 			@ <UNDEFINED> instruction: 0x466e203a
 8019dd4:	75716572 	ldrbvc	r6, [r1, #-1394]!	@ 0xfffffa8e
 8019dd8:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8019ddc:	2c75253d 	cfldr64cs	mvdx2, [r5], #-244	@ 0xffffff0c
 8019de0:	69546e20 	ldmdbvs	r4, {r5, r9, sl, fp, sp, lr}^
 8019de4:	72656b63 	rsbvc	r6, r5, #101376	@ 0x18c00
 8019de8:	0a75253d 	beq	9d632e4 <__init_array_end+0x1d46e00>
 8019dec:	00000000 	andeq	r0, r0, r0
 8019df0:	546e2828 	strbtpl	r2, [lr], #-2088	@ 0xfffff7d8
 8019df4:	656b6369 	strbvs	r6, [fp, #-873]!	@ 0xfffffc97
 8019df8:	202f2072 	eorcs	r2, pc, r2, ror r0	@ <UNPREDICTABLE>
 8019dfc:	2d202932 			@ <UNDEFINED> instruction: 0x2d202932
 8019e00:	20293120 	eorcs	r3, r9, r0, lsr #2
 8019e04:	4955203c 	ldmdbmi	r5, {r2, r3, r4, r5, sp}^
 8019e08:	3631544e 	ldrtcc	r5, [r1], -lr, asr #8
 8019e0c:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
 8019e10:	00000000 	andeq	r0, r0, r0
 8019e14:	546e2828 	strbtpl	r2, [lr], #-2088	@ 0xfffff7d8
 8019e18:	656b6369 	strbvs	r6, [fp, #-873]!	@ 0xfffffc97
 8019e1c:	202f2072 	eorcs	r2, pc, r2, ror r0	@ <UNPREDICTABLE>
 8019e20:	2d202934 			@ <UNDEFINED> instruction: 0x2d202934
 8019e24:	20293120 	eorcs	r3, r9, r0, lsr #2
 8019e28:	4955203c 	ldmdbmi	r5, {r2, r3, r4, r5, sp}^
 8019e2c:	3631544e 	ldrtcc	r5, [r1], -lr, asr #8
 8019e30:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
 8019e34:	00000000 	andeq	r0, r0, r0
 8019e38:	426e5f6d 	rsbmi	r5, lr, #436	@ 0x1b4
 8019e3c:	69536675 	ldmdbvs	r3, {r0, r2, r4, r5, r6, r9, sl, sp, lr}^
 8019e40:	3c20657a 	cfstr32cc	mvfx6, [r0], #-488	@ 0xfffffe18
 8019e44:	4e495520 	cdpmi	5, 4, cr5, cr9, cr0, {1}
 8019e48:	5f363154 	svcpl	0x00363154
 8019e4c:	0058414d 	subseq	r4, r8, sp, asr #2
 8019e50:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019e54:	754d7878 	strbvc	r7, [sp, #-2168]	@ 0xfffff788
 8019e58:	0069746c 	rsbeq	r7, r9, ip, ror #8
 8019e5c:	54705f73 	ldrbtpl	r5, [r0], #-3955	@ 0xfffff08d
 8019e60:	20736968 	rsbscs	r6, r3, r8, ror #18
 8019e64:	6e203d3d 	mcrvs	13, 1, r3, cr0, cr13, {1}
 8019e68:	706c6c75 	rsbvc	r6, ip, r5, ror ip
 8019e6c:	00007274 	andeq	r7, r0, r4, ror r2
 8019e70:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019e74:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019e78:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019e7c:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019e80:	4f50203a 	svcmi	0x0050203a
 8019e84:	435f5452 	cmpmi	pc, #1375731712	@ 0x52000000
 8019e88:	544e554f 	strbpl	r5, [lr], #-1359	@ 0xfffffab1
 8019e8c:	0a75253d 	beq	9d63388 <__init_array_end+0x1d46ea4>
 8019e90:	00000000 	andeq	r0, r0, r0
 8019e94:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019e98:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019e9c:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019ea0:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019ea4:	414d203a 	cmpmi	sp, sl, lsr r0
 8019ea8:	50415f58 	subpl	r5, r1, r8, asr pc
 8019eac:	32303141 	eorscc	r3, r0, #1073741840	@ 0x40000010
 8019eb0:	0a75253d 	beq	9d633ac <__init_array_end+0x1d46ec8>
 8019eb4:	00000000 	andeq	r0, r0, r0
 8019eb8:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019ebc:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019ec0:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019ec4:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019ec8:	5f73203a 	svcpl	0x0073203a
 8019ecc:	42616d44 	rsbmi	r6, r1, #68, 26	@ 0x1100
 8019ed0:	65666675 	strbvs	r6, [r6, #-1653]!	@ 0xfffff98b
 8019ed4:	70253d72 	eorvc	r3, r5, r2, ror sp
 8019ed8:	5f73202c 	svcpl	0x0073202c
 8019edc:	66754270 			@ <UNDEFINED> instruction: 0x66754270
 8019ee0:	3d726566 	cfldr64cc	mvdx6, [r2, #-408]!	@ 0xfffffe68
 8019ee4:	000a7025 	andeq	r7, sl, r5, lsr #32
 8019ee8:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8019eec:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8019ef0:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8019ef4:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8019ef8:	5f6d203a 	svcpl	0x006d203a
 8019efc:	6675426e 	ldrbtvs	r4, [r5], -lr, ror #4
 8019f00:	657a6953 	ldrbvs	r6, [sl, #-2387]!	@ 0xfffff6ad
 8019f04:	2075253d 	rsbscs	r2, r5, sp, lsr r5
 8019f08:	5d75255b 	cfldr64pl	mvdx2, [r5, #-364]!	@ 0xfffffe94
 8019f0c:	0000000a 	andeq	r0, r0, sl
 8019f10:	426e5f6d 	rsbmi	r5, lr, #436	@ 0x1b4
 8019f14:	69536675 	ldmdbvs	r3, {r0, r2, r4, r5, r6, r9, sl, sp, lr}^
 8019f18:	3c20657a 	cfstr32cc	mvfx6, [r0], #-488	@ 0xfffffe18
 8019f1c:	6970203d 	ldmdbvs	r0!, {r0, r2, r3, r4, r5, sp}^
 8019f20:	3a6c6578 	bcc	9b33508 <__init_array_end+0x1b17024>
 8019f24:	414d443a 	cmpmi	sp, sl, lsr r4
 8019f28:	4655425f 			@ <UNDEFINED> instruction: 0x4655425f
 8019f2c:	5f524546 	svcpl	0x00524546
 8019f30:	455a4953 	ldrbmi	r4, [sl, #-2387]	@ 0xfffff6ad
 8019f34:	00000000 	andeq	r0, r0, r0
 8019f38:	63616c42 	cmnvs	r1, #16896	@ 0x4200
 8019f3c:	74756f6b 	ldrbtvc	r6, [r5], #-3947	@ 0xfffff095
 8019f40:	00000000 	andeq	r0, r0, r0
 8019f44:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8019f48:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 8019f4c:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 8019f50:	543a3a6c 	ldrtpl	r3, [sl], #-2668	@ 0xfffff594
 8019f54:	3a657079 	bcc	9976140 <__init_array_end+0x1959c5c>
 8019f58:	3253573a 	subscc	r5, r3, #15204352	@ 0xe80000
 8019f5c:	00313038 	eorseq	r3, r1, r8, lsr r0
 8019f60:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	@ 0xfffffee8
 8019f64:	00006e4f 	andeq	r6, r0, pc, asr #28
 8019f68:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 8019f6c:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 8019f70:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8019f74:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 8019f78:	0000000a 	andeq	r0, r0, sl
 8019f7c:	72746552 	rsbsvc	r6, r4, #343932928	@ 0x14800000
 8019f80:	726f2079 	rsbvc	r2, pc, #121	@ 0x79
 8019f84:	65757120 	ldrbvs	r7, [r5, #-288]!	@ 0xfffffee0
 8019f88:	74206575 	strtvc	r6, [r0], #-1397	@ 0xfffffa8b
 8019f8c:	64206568 	strtvs	r6, [r0], #-1384	@ 0xfffffa98
 8019f90:	20617461 	rsbcs	r7, r1, r1, ror #8
 8019f94:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8019f98:	6574616c 	ldrbvs	r6, [r4, #-364]!	@ 0xfffffe94
 8019f9c:	72742072 	rsbsvc	r2, r4, #114	@ 0x72
 8019fa0:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	@ 0xfffffe7c
 8019fa4:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8019fa8:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8019fac:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 8019fb0:	000a646e 	andeq	r6, sl, lr, ror #8

08019fb4 <s_contentType>:
 8019fb4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8019fb8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8019fbc:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8019fd4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8019fd8:	7373632f 	cmnvc	r3, #-1140850688	@ 0xbc000000
	...
 8019ff4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8019ff8:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8019ffc:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 801a000:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 801a014:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801a018:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801a01c:	2f6e6f69 	svccs	0x006e6f69
 801a020:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
 801a034:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801a038:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801a03c:	2f6e6f69 	svccs	0x006e6f69
 801a040:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 801a044:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 801a048:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
	...

0801a054 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801a054:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a058:	5f79616c 	svcpl	0x0079616c
 801a05c:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801a061 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801a061:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801a065:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801a069:	6f746361 	svcvs	0x00746361
 801a06d:	 	strvs	r7, [r0, #-2418]	@ 0xfffff68e

0801a070 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 801a070:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801a074:	755f656c 	ldrbvc	r6, [pc, #-1388]	@ 8019b10 <RemoteConfig::s_TXT+0x538>
 801a078:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 801a07c:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801a07e <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801a07e:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801a082:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 801a086:	6f6f6265 	svcvs	0x006f6265
 801a08a:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

0801a08c <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801a08c:	61736964 	cmnvs	r3, r4, ror #18
 801a090:	5f656c62 	svcpl	0x00656c62
 801a094:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 801a098:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

0801a09a <RemoteConfigConst::PARAMS_DISABLE>:
 801a09a:	61736964 	cmnvs	r3, r4, ror #18
 801a09e:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801a0a2 <RemoteConfigConst::PARAMS_FILE_NAME>:
 801a0a2:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 801a0a6:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 801a0aa:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801a0b0 <HttpContent>:
 801a0b0:	08018a8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, fp, pc}
 801a0b4:	0801b188 	stmdaeq	r1, {r3, r7, r8, ip, sp, pc}
 801a0b8:	000004c3 	andeq	r0, r0, r3, asr #9
 801a0bc:	00000002 	andeq	r0, r0, r2
 801a0c0:	08018a97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, fp, pc}
 801a0c4:	0801afee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 801a0c8:	00000199 	muleq	r0, r9, r1
 801a0cc:	00000001 	andeq	r0, r0, r1
 801a0d0:	08018aa2 	stmdaeq	r1, {r1, r5, r7, r9, fp, pc}
 801a0d4:	0801ab79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, fp, sp, pc}
 801a0d8:	00000474 	andeq	r0, r0, r4, ror r4
 801a0dc:	00000002 	andeq	r0, r0, r2
 801a0e0:	08018aab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, fp, pc}
 801a0e4:	0801a8ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, sp, pc}
 801a0e8:	000002cc 	andeq	r0, r0, ip, asr #5
 801a0ec:	00000002 	andeq	r0, r0, r2
 801a0f0:	08018ab3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, fp, pc}
 801a0f4:	0801a7ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, sp, pc}
 801a0f8:	000000fe 	strdeq	r0, [r0], -lr
 801a0fc:	00000002 	andeq	r0, r0, r2
 801a100:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 801a104:	0801a626 	stmdaeq	r1, {r1, r2, r5, r9, sl, sp, pc}
 801a108:	00000186 	andeq	r0, r0, r6, lsl #3
 801a10c:	00000002 	andeq	r0, r0, r2
 801a110:	08018ac6 	stmdaeq	r1, {r1, r2, r6, r7, r9, fp, pc}
 801a114:	0801a388 	stmdaeq	r1, {r3, r7, r8, r9, sp, pc}
 801a118:	0000029d 	muleq	r0, sp, r2
 801a11c:	00000000 	andeq	r0, r0, r0
 801a120:	08018ad1 	stmdaeq	r1, {r0, r4, r6, r7, r9, fp, pc}
 801a124:	0801a130 	stmdaeq	r1, {r4, r5, r8, sp, pc}
 801a128:	00000257 	andeq	r0, r0, r7, asr r2
 801a12c:	00000000 	andeq	r0, r0, r0

0801a130 <time_html>:
 801a130:	4f44213c 	svcmi	0x0044213c
 801a134:	50595443 	subspl	r5, r9, r3, asr #8
 801a138:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801a13c:	0a3e6c6d 	beq	8fb52f8 <__init_array_end+0xf98e14>
 801a140:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801a144:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801a148:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801a14c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801a150:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801a154:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 801a158:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801a15c:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 801a160:	20227465 	eorcs	r7, r2, r5, ror #8
 801a164:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 801a168:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801a16c:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801a170:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801a174:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 801a178:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 801a17c:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
 801a180:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801a184:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801a188:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801a18c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801a190:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 801a194:	0a3e6461 	beq	8fb3320 <__init_array_end+0xf96e3c>
 801a198:	646f623c 	strbtvs	r6, [pc], #-572	@ 801a1a0 <time_html+0x70>
 801a19c:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801a1a0:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801a1a4:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801a1a8:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801a1ac:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801a1b0:	73694c64 	cmnvc	r9, #100, 24	@ 0x6400
 801a1b4:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801a1b8:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 801a1bc:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 801a1c0:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801a1c4:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 801a1c8:	75623c3e 	strbvc	r3, [r2, #-3134]!	@ 0xfffff3c2
 801a1cc:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801a1d0:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 801a1d4:	6b63696c 	blvs	98f478c <__init_array_end+0x18d82a8>
 801a1d8:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801a1dc:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 801a1e0:	22292868 	eorcs	r2, r9, #104, 16	@ 0x680000
 801a1e4:	6665523e 			@ <UNDEFINED> instruction: 0x6665523e
 801a1e8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 801a1ec:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 801a1f0:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801a1f4:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	@ <UNPREDICTABLE>
 801a1f8:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 801a1fc:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801a200:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 801a208 <time_html+0xd8>
 801a204:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 801a208:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
 801a20c:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801a210:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801a214:	6c697720 	stclvs	7, cr7, [r9], #-128	@ 0xffffff80
 801a218:	6562206c 	strbvs	r2, [r2, #-108]!	@ 0xffffff94
 801a21c:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 801a220:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801a224:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 801a228:	3c657265 	sfmcc	f7, 2, [r5], #-404	@ 0xfffffe6c
 801a22c:	0a3e702f 	beq	8fb62f0 <__init_array_end+0xf99e0c>
 801a230:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801a234:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801a238:	6f206e6f 	svcvs	0x00206e6f
 801a23c:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801a240:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 801a244:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801a248:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
 801a24c:	61636f4c 	cmnvs	r3, ip, asr #30
 801a250:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	@ 0xfffffe50
 801a254:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 801a258:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
 801a25c:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
 801a260:	4c206874 	stcmi	8, cr6, [r0], #-464	@ 0xfffffe30
 801a264:	6c61636f 	stclvs	3, cr6, [r1], #-444	@ 0xfffffe44
 801a268:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 801a26c:	622f3c65 	eorvs	r3, pc, #25856	@ 0x6500
 801a270:	6f747475 	svcvs	0x00747475
 801a274:	2f3c3e6e 	svccs	0x003c3e6e
 801a278:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 801a27c:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801a284 <time_html+0x154>
 801a280:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801a284:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801a288:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801a28c:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 801a290:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801a294:	2f3c3e22 	svccs	0x003c3e22
 801a298:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 801a29c:	6f6f662f 	svcvs	0x006f662f
 801a2a0:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 801a2a4:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801a2a8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a2ac:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 801a2b0:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801a2b4:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 801a2b8:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801a2bc:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801a2c0:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801a2c4:	2f747865 	svccs	0x00747865
 801a2c8:	6176616a 	cmnvs	r6, sl, ror #2
 801a2cc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a2d0:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 801a2d4:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 801a2d8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a2dc:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 801a2e0:	70697263 	rsbvc	r7, r9, r3, ror #4
 801a2e4:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 801a2e8:	64223d63 	strtvs	r3, [r2], #-3427	@ 0xfffff29d
 801a2ec:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 801a2f0:	2022736a 	eorcs	r7, r2, sl, ror #6
 801a2f4:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801a2f8:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 801a2fc:	6a2f7478 	bvs	8bf74e4 <__init_array_end+0xbdb000>
 801a300:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 801a304:	70697263 	rsbvc	r7, r9, r3, ror #4
 801a308:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801a30c:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801a310:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801a314:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801a318:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a31c:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 801a320:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
 801a324:	6a2e656d 	bvs	8bb38e0 <__init_array_end+0xb973fc>
 801a328:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801a32c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801a330:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801a334:	616a2f74 	smcvs	41716	@ 0xa2f4
 801a338:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801a33c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a340:	2f3c3e22 	svccs	0x003c3e22
 801a344:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a348:	0a3e7470 	beq	8fb7510 <__init_array_end+0xf9b02c>
 801a34c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801a350:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801a354:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801a358:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
 801a35c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801a360:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801a364:	6665723b 			@ <UNDEFINED> instruction: 0x6665723b
 801a368:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 801a36c:	2f3c2928 	svccs	0x003c2928
 801a370:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a374:	0a3e7470 	beq	8fb753c <__init_array_end+0xf9b058>
 801a378:	6f622f3c 	svcvs	0x00622f3c
 801a37c:	0a3e7964 	beq	8fb8914 <__init_array_end+0xf9c430>
 801a380:	74682f3c 	strbtvc	r2, [r8], #-3900	@ 0xfffff0c4
 801a384:	003e6c6d 	eorseq	r6, lr, sp, ror #24

0801a388 <index_html>:
 801a388:	4f44213c 	svcmi	0x0044213c
 801a38c:	50595443 	subspl	r5, r9, r3, asr #8
 801a390:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801a394:	0a3e6c6d 	beq	8fb5550 <__init_array_end+0xf9906c>
 801a398:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801a39c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801a3a0:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801a3a4:	6c3c0a3e 			@ <UNDEFINED> instruction: 0x6c3c0a3e
 801a3a8:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 801a3ac:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	@ 0xfffffe38
 801a3b0:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
 801a3b4:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 801a3b8:	22746565 	rsbscs	r6, r4, #423624704	@ 0x19400000
 801a3bc:	65726820 	ldrbvs	r6, [r2, #-2080]!	@ 0xfffff7e0
 801a3c0:	73223d66 			@ <UNDEFINED> instruction: 0x73223d66
 801a3c4:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801a3c8:	73632e73 	cmnvc	r3, #1840	@ 0x730
 801a3cc:	2f202273 	svccs	0x00202273
 801a3d0:	743c0a3e 	ldrtvc	r0, [ip], #-2622	@ 0xfffff5c2
 801a3d4:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801a3d8:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801a3e0 <index_html+0x58>
 801a3dc:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801a3e0:	2f3c0a3e 	svccs	0x003c0a3e
 801a3e4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801a3e8:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801a3ec:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801a3f0:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 801a3f4:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801a3f8:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 801a3fc:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801a400:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 801a404:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801a408:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 80197d2 <RemoteConfig::s_TXT+0x1fa>
 801a40c:	2f3c3e6c 	svccs	0x003c3e6c
 801a410:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801a414:	0a3e7265 	beq	8fb6db0 <__init_array_end+0xf9a8cc>
 801a418:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801a41c:	656c6573 	strbvs	r6, [ip, #-1395]!	@ 0xfffffa8d
 801a420:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801a424:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801a428:	72694464 	rsbvc	r4, r9, #100, 8	@ 0x64000000
 801a42c:	6f746365 	svcvs	0x00746365
 801a430:	20227972 	eorcs	r7, r2, r2, ror r9
 801a434:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801a438:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
 801a43c:	6567223d 	strbvs	r2, [r7, #-573]!	@ 0xfffffdc3
 801a440:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a444:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801a448:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 801a44c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 801a450:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	@ 0xffffff5c
 801a454:	6c65732f 	stclvs	3, cr7, [r5], #-188	@ 0xffffff44
 801a458:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 801a45c:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 801a460:	61743c0a 	cmnvs	r4, sl, lsl #24
 801a464:	20656c62 	rsbcs	r6, r5, r2, ror #24
 801a468:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 801a46c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801a470:	62202274 	eorvs	r2, r0, #116, 4	@ 0x40000007
 801a474:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 801a478:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 801a47c:	2f3c3e27 	svccs	0x003c3e27
 801a480:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 801a484:	3c0a3e65 	stccc	14, cr3, [sl], {101}	@ 0x65
 801a488:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801a490 <index_html+0x108>
 801a48c:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801a490:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801a494:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801a498:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 801a49c:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801a4a0:	2f3c3e22 	svccs	0x003c3e22
 801a4a4:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 801a4a8:	6f6f662f 	svcvs	0x006f662f
 801a4ac:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 801a4b0:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 801a4b4:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801a4b8:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801a4bc:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801a4c0:	6c223d64 	stcvs	13, cr3, [r2], #-400	@ 0xfffffe70
 801a4c4:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 801a4c8:	74754265 	ldrbtvc	r4, [r5], #-613	@ 0xfffffd9b
 801a4cc:	226e6f74 	rsbcs	r6, lr, #116, 30	@ 0x1d0
 801a4d0:	616c6320 	cmnvs	ip, r0, lsr #6
 801a4d4:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 801a4d8:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801a4dc:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801a4e0:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
 801a4e4:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 801a4e8:	6c223d6b 	stcvs	13, cr3, [r2], #-428	@ 0xfffffe54
 801a4ec:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 801a4f0:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 801a4f4:	636f4c3e 	cmnvs	pc, #15872	@ 0x3e00
 801a4f8:	20657461 	rsbcs	r7, r5, r1, ror #8
 801a4fc:	3c66664f 	stclcc	6, cr6, [r6], #-316	@ 0xfffffec4
 801a500:	7475622f 	ldrbtvc	r6, [r5], #-559	@ 0xfffffdd1
 801a504:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
 801a508:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 801a50c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801a510:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 801a514:	6b63696c 	blvs	98f4acc <__init_array_end+0x18d85e8>
 801a518:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801a51c:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801a524 <index_html+0x19c>
 801a520:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 801a524:	6f626552 	svcvs	0x00626552
 801a528:	2f3c746f 	svccs	0x003c746f
 801a52c:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801a530:	0a3e6e6f 	beq	8fb5ef4 <__init_array_end+0xf99a10>
 801a534:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801a538:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801a53c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a540:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 801a544:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 801a548:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 801a54c:	6a2e6369 	bvs	8bb32f8 <__init_array_end+0xb96e14>
 801a550:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801a554:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801a558:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801a55c:	616a2f74 	smcvs	41716	@ 0xa2f4
 801a560:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801a564:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a568:	2f3c3e22 	svccs	0x003c3e22
 801a56c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a570:	0a3e7470 	beq	8fb7738 <__init_array_end+0xf9b254>
 801a574:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801a578:	20747069 	rsbscs	r7, r4, r9, rrx
 801a57c:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 801a580:	646e6922 	strbtvs	r6, [lr], #-2338	@ 0xfffff6de
 801a584:	6a2e7865 	bvs	8bb8720 <__init_array_end+0xb9c23c>
 801a588:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801a58c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801a590:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801a594:	616a2f74 	smcvs	41716	@ 0xa2f4
 801a598:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801a59c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a5a0:	2f3c3e22 	svccs	0x003c3e22
 801a5a4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a5a8:	0a3e7470 	beq	8fb7770 <__init_array_end+0xf9b28c>
 801a5ac:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801a5b0:	20747069 	rsbscs	r7, r4, r9, rrx
 801a5b4:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 801a5b8:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
 801a5bc:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 801a5c0:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801a5c4:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801a5c8:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801a5cc:	2f747865 	svccs	0x00747865
 801a5d0:	6176616a 	cmnvs	r6, sl, ror #2
 801a5d4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801a5d8:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 801a5dc:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 801a5e0:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801a5e4:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 801a5e8:	70697263 	rsbvc	r7, r9, r3, ror #4
 801a5ec:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 801a5f0:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801a5f4:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 801a5f8:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801a5fc:	643b2928 	ldrtvs	r2, [fp], #-2344	@ 0xfffff6d8
 801a600:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 801a604:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801a608:	3c3b2928 			@ <UNDEFINED> instruction: 0x3c3b2928
 801a60c:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801a610:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801a614:	622f3c0a 	eorvs	r3, pc, #2560	@ 0xa00
 801a618:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801a61c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 801a620:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801a624:	 	cmnvc	r1, #10

0801a626 <time_js>:
 801a626:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801a62a:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801a62e:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801a632:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 801a636:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801a63a:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801a63e:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 801a642:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 801a646:	20617461 	rsbcs	r7, r1, r1, ror #8
 801a64a:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801a64e:	20746961 	rsbscs	r6, r4, r1, ror #18
 801a652:	4a746567 	bmi	9d33bf6 <__init_array_end+0x1d17712>
 801a656:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801a65a:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 801a65e:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 801a662:	0a292765 	beq	8a643fe <__init_array_end+0xa47f1a>
 801a666:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801a66a:	6f6e2074 	svcvs	0x006e2074
 801a66e:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 801a672:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 801a676:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 801a67a:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 801a67e:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 801a682:	2077656e 	rsbscs	r6, r7, lr, ror #10
 801a686:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 801a68a:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801a68e:	61642e61 	cmnvs	r4, r1, ror #28
 801a692:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801a696:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 801a69a:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801a69e:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801a6a2:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801a6a6:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801a6aa:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801a6ae:	6f6e2728 	svcvs	0x006e2728
 801a6b2:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
 801a6b6:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 801a6ba:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
 801a6be:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
 801a6c2:	746e6574 	strbtvc	r6, [lr], #-1396	@ 0xfffffa8c
 801a6c6:	60203d20 	eorvs	r3, r0, r0, lsr #26
 801a6ca:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 801a6ce:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 801a6d2:	24203a65 	strtcs	r3, [r0], #-2661	@ 0xfffff59b
 801a6d6:	646f6e7b 	strbtvs	r6, [pc], #-3707	@ 801a6de <time_js+0xb8>
 801a6da:	0a607d65 	beq	9839c76 <__init_array_end+0x181d792>
 801a6de:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 801a6e2:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801a6e6:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801a6ea:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801a6ee:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
 801a6f2:	74695763 	strbtvc	r5, [r9], #-1891	@ 0xfffff89d
 801a6f6:	636f4c68 	cmnvs	pc, #104, 24	@ 0x6800
 801a6fa:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
 801a6fe:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 801a702:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801a706:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801a70a:	646f6e20 	strbtvs	r6, [pc], #-3616	@ 801a712 <time_js+0xec>
 801a70e:	203d2065 	eorscs	r2, sp, r5, rrx
 801a712:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 801a716:	61447461 	cmpvs	r4, r1, ror #8
 801a71a:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
 801a71e:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
 801a722:	44207765 	strtmi	r7, [r0], #-1893	@ 0xfffff89b
 801a726:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 801a72a:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 801a72e:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801a732:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801a736:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801a73a:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801a73e:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801a742:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 801a746:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 801a74a:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801a74e:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 801a752:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 801a756:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801a75a:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 801a75e:	6f4e6020 	svcvs	0x004e6020
 801a762:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 801a766:	3a656d69 	bcc	9975d12 <__init_array_end+0x195982e>
 801a76a:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 801a76e:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 801a772:	6f630a60 	svcvs	0x00630a60
 801a776:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801a77a:	61746164 	cmnvs	r4, r4, ror #2
 801a77e:	7b203d20 	blvc	8829c06 <__init_array_end+0x80d722>
 801a782:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801a786:	6e203a65 	vnmulvs.f32	s6, s0, s11
 801a78a:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801a78e:	77610a7d 			@ <UNDEFINED> instruction: 0x77610a7d
 801a792:	20746961 	rsbscs	r6, r4, r1, ror #18
 801a796:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 801a79a:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801a79e:	720a2961 	andvc	r2, sl, #1589248	@ 0x184000
 801a7a2:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801a7a6:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801a7aa:	 	strvs	r7, [r0], -sl, lsl #26

0801a7ad <default_js>:
 801a7ad:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801a7b1:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801a7b5:	73657220 	cmnvc	r5, #32, 4
 801a7b9:	73287465 			@ <UNDEFINED> instruction: 0x73287465
 801a7bd:	20296c65 	eorcs	r6, r9, r5, ror #24
 801a7c1:	61760a7b 	cmnvs	r6, fp, ror sl
 801a7c5:	20642072 	rsbcs	r2, r4, r2, ror r0
 801a7c9:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	@ 0xffffff0c
 801a7cd:	61760a3b 	cmnvs	r6, fp, lsr sl
 801a7d1:	756f2072 	strbvc	r2, [pc, #-114]!	@ 801a767 <time_js+0x141>
 801a7d5:	203d2074 	eorscs	r2, sp, r4, ror r0
 801a7d9:	0a3b7d7b 	beq	8ef9dcd <__init_array_end+0xedd8e9>
 801a7dd:	5b74756f 	blpl	9d37da1 <__init_array_end+0x1d1b8bd>
 801a7e1:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 801a7e5:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 801a7e9:	61760a3b 	cmnvs	r6, fp, lsr sl
 801a7ed:	61702072 	cmnvs	r0, r2, ror r0
 801a7f1:	616f6c79 	smcvs	63177	@ 0xf6c9
 801a7f5:	203d2064 	eorscs	r2, sp, r4, rrx
 801a7f9:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801a7fd:	7274732e 	rsbsvc	r7, r4, #-1207959552	@ 0xb8000000
 801a801:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 801a805:	6f287966 	svcvs	0x00287966
 801a809:	3b297475 	blcc	8a779e5 <__init_array_end+0xa5b501>
 801a80d:	7465660a 	strbtvc	r6, [r5], #-1546	@ 0xfffff9f6
 801a811:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801a815:	6f736a2f 	svcvs	0x00736a2f
 801a819:	202c276e 	eorcs	r2, ip, lr, ror #14
 801a81d:	656d0a7b 	strbvs	r0, [sp, #-2683]!	@ 0xfffff585
 801a821:	646f6874 	strbtvs	r6, [pc], #-2164	@ 801a829 <default_js+0x7c>
 801a825:	5027203a 	eorpl	r2, r7, sl, lsr r0
 801a829:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
 801a82d:	65680a2c 	strbvs	r0, [r8, #-2604]!	@ 0xfffff5d4
 801a831:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801a835:	7b203a73 	blvc	8829209 <__init_array_end+0x80cd25>
 801a839:	6f43270a 	svcvs	0x0043270a
 801a83d:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801a841:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 801a845:	3a276570 	bcc	89f3e0d <__init_array_end+0x9d7929>
 801a849:	70612720 	rsbvc	r2, r1, r0, lsr #14
 801a84d:	63696c70 	cmnvs	r9, #112, 24	@ 0x7000
 801a851:	6f697461 	svcvs	0x00697461
 801a855:	736a2f6e 	cmnvc	sl, #440	@ 0x1b8
 801a859:	0a276e6f 	beq	89f621d <__init_array_end+0x9d9d39>
 801a85d:	620a2c7d 	andvs	r2, sl, #32000	@ 0x7d00
 801a861:	3a79646f 	bcc	9e73a25 <__init_array_end+0x1e57541>
 801a865:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
 801a869:	64616f6c 	strbtvs	r6, [r1], #-3948	@ 0xfffff094
 801a86d:	20297d0a 	eorcs	r7, r9, sl, lsl #26
 801a871:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 801a875:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 801a879:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 801a87d:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	@ 0xfffffe34
 801a881:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
 801a885:	72282066 	eorvc	r2, r8, #102	@ 0x66
 801a889:	6f707365 	svcvs	0x00707365
 801a88d:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
 801a891:	20296b6f 	eorcs	r6, r9, pc, ror #22
 801a895:	6567207b 	strbvs	r2, [r7, #-123]!	@ 0xffffff85
 801a899:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a89d:	65732874 	ldrbvs	r2, [r3, #-2164]!	@ 0xfffff78c
 801a8a1:	203b296c 	eorscs	r2, fp, ip, ror #18
 801a8a5:	3b297d7d 	blcc	8a79ea1 <__init_array_end+0xa5d9bd>
 801a8a9:	 	strvs	r7, [r0], -sl, lsl #26

0801a8ac <date_js>:
 801a8ac:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801a8b0:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801a8b4:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 801a8b8:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 801a8bc:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 801a8c0:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 801a8c4:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801a8c8:	0a7b2029 	beq	9ee2974 <__init_array_end+0x1ec6490>
 801a8cc:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801a8d0:	65792074 	ldrbvs	r2, [r9, #-116]!	@ 0xffffff8c
 801a8d4:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	@ 0xfffffe7c
 801a8d8:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801a8dc:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801a8e0:	6c754674 	ldclvs	6, cr4, [r5], #-464	@ 0xfffffe30
 801a8e4:	6165596c 	cmnvs	r5, ip, ror #18
 801a8e8:	3b292872 	blcc	8a64ab8 <__init_array_end+0xa485d4>
 801a8ec:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801a8f0:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	@ 0xfffffe34
 801a8f4:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	@ 0xfffffe44
 801a8f8:	30272820 	eorcc	r2, r7, r0, lsr #16
 801a8fc:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801a900:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801a904:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801a908:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
 801a90c:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
 801a910:	31202b20 			@ <UNDEFINED> instruction: 0x31202b20
 801a914:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 801a918:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801a91c:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801a920:	6f630a3b 	svcvs	0x00630a3b
 801a924:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801a928:	20796164 	rsbscs	r6, r9, r4, ror #2
 801a92c:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 801a930:	2b202730 	blcs	88245f8 <__init_array_end+0x808114>
 801a934:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801a938:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801a93c:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 801a940:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
 801a944:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 801a948:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801a94c:	0a3b2932 	beq	8ee4e1c <__init_array_end+0xec8938>
 801a950:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801a954:	6f682074 	svcvs	0x00682074
 801a958:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	@ 0xfffffe2c
 801a95c:	30272820 	eorcc	r2, r7, r0, lsr #16
 801a960:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801a964:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801a968:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801a96c:	72756f48 	rsbsvc	r6, r5, #72, 30	@ 0x120
 801a970:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
 801a974:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 801a978:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801a97c:	0a3b2932 	beq	8ee4e4c <__init_array_end+0xec8968>
 801a980:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801a984:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
 801a988:	203d206e 	eorscs	r2, sp, lr, rrx
 801a98c:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
 801a990:	64202b20 	strtvs	r2, [r0], #-2848	@ 0xfffff4e0
 801a994:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 801a998:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	@ 0xfffffe64
 801a99c:	74756e69 	ldrbtvc	r6, [r5], #-3689	@ 0xfffff197
 801a9a0:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 801a9a4:	6c732e29 	ldclvs	14, cr2, [r3], #-164	@ 0xffffff5c
 801a9a8:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 801a9ac:	3b29322d 	blcc	8a67268 <__init_array_end+0xa4ad84>
 801a9b0:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801a9b4:	73207473 			@ <UNDEFINED> instruction: 0x73207473
 801a9b8:	3d206365 	stccc	3, cr6, [r0, #-404]!	@ 0xfffffe6c
 801a9bc:	30272820 	eorcc	r2, r7, r0, lsr #16
 801a9c0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801a9c4:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801a9c8:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801a9cc:	6f636553 	svcvs	0x00636553
 801a9d0:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801a9d4:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 801a9d8:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801a9dc:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801a9e0:	6f630a3b 	svcvs	0x00630a3b
 801a9e4:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801a9e8:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801a9ec:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	@ 0xfffffe6c
 801a9f0:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801a9f4:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801a9f8:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	@ 0xfffffe30
 801a9fc:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
 801aa00:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
 801aa04:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801aa08:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 801aa0c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801aa10:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801aa14:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801aa18:	2072756f 	rsbscs	r7, r2, pc, ror #10
 801aa1c:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 801aa20:	2b202730 	blcs	88246e8 <__init_array_end+0x808204>
 801aa24:	74614d20 	strbtvc	r4, [r1], #-3360	@ 0xfffff2e0
 801aa28:	6c662e68 	stclvs	14, cr2, [r6], #-416	@ 0xfffffe60
 801aa2c:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801aa30:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 801aa34:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801aa38:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801aa3c:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801aa40:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
 801aa44:	2e292930 			@ <UNDEFINED> instruction: 0x2e292930
 801aa48:	63696c73 	cmnvs	r9, #29440	@ 0x7300
 801aa4c:	322d2865 	eorcc	r2, sp, #6619136	@ 0x650000
 801aa50:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 801aa54:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801aa58:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801aa5c:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	@ 0xfffffe34
 801aa60:	3d206e69 	stccc	14, cr6, [r0, #-420]!	@ 0xfffffe5c
 801aa64:	30272820 	eorcc	r2, r7, r0, lsr #16
 801aa68:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801aa6c:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 801aa70:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801aa74:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801aa78:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801aa7c:	36202520 	strtcc	r2, [r0], -r0, lsr #10
 801aa80:	732e2930 			@ <UNDEFINED> instruction: 0x732e2930
 801aa84:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801aa88:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801aa8c:	6f630a3b 	svcvs	0x00630a3b
 801aa90:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801aa94:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
 801aa98:	6f203d20 	svcvs	0x00203d20
 801aa9c:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 801aaa0:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	@ 0xfffffe30
 801aaa4:	3f203020 	svccc	0x00203020
 801aaa8:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
 801aaac:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
 801aab0:	0a3b272d 	beq	8ee476c <__init_array_end+0xec8288>
 801aab4:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801aab8:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801aabc:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801aac0:	2072756f 	rsbscs	r7, r2, pc, ror #10
 801aac4:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 801aac8:	26262029 	strtcs	r2, [r6], -r9, lsr #32
 801aacc:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
 801aad0:	74657366 	strbtvc	r7, [r5], #-870	@ 0xfffffc9a
 801aad4:	206e694d 	rsbcs	r6, lr, sp, asr #18
 801aad8:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 801aadc:	7b202929 	blvc	8824f88 <__init_array_end+0x808aa4>
 801aae0:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801aae4:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801aae8:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 801aaec:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 801aaf0:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 801aaf4:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801aaf8:	61647b24 	cmnvs	r4, r4, lsr #22
 801aafc:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 801ab00:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 801a28d <time_html+0x15d>
 801ab04:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801ab08:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 801ab0c:	7b243a7d 	blvc	8929508 <__init_array_end+0x90d024>
 801ab10:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801ab14:	203b605a 	eorscs	r6, fp, sl, asr r0
 801ab18:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
 801ab1c:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801ab20:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801ab24:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 801ab28:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 801ab2c:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 801ab30:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801ab34:	61647b24 	cmnvs	r4, r4, lsr #22
 801ab38:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 801ab3c:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 801a2c9 <time_html+0x199>
 801ab40:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801ab44:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 801ab48:	7b243a7d 	blvc	8929544 <__init_array_end+0x90d060>
 801ab4c:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801ab50:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
 801ab54:	247d6e67 	ldrbtcs	r6, [sp], #-3687	@ 0xfffff199
 801ab58:	66666f7b 	uqsub16vs	r6, r6, fp
 801ab5c:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801ab60:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	@ 0xfffffe44
 801ab64:	6f7b243a 	svcvs	0x007b243a
 801ab68:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 801ab6c:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
 801ab70:	203b607d 	eorscs	r6, fp, sp, ror r0
 801ab74:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	@ 0xffffff80
	...

0801ab79 <index_js>:
 801ab79:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801ab7d:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801ab81:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801ab85:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 801ab89:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 801ab8d:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801ab91:	7b202928 	blvc	8825039 <__init_array_end+0x808b55>
 801ab95:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801ab99:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801ab9d:	61776120 	cmnvs	r7, r0, lsr #2
 801aba1:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801aba5:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801aba9:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801abad:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801abb1:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 801abb5:	0a292779 	beq	8a649a1 <__init_array_end+0xa484bd>
 801abb9:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801abbd:	203d2068 	eorscs	r2, sp, r8, rrx
 801abc1:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	@ 0x22
 801abc5:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801abc9:	4f203d20 	svcmi	0x00203d20
 801abcd:	63656a62 	cmnvs	r5, #401408	@ 0x62000
 801abd1:	656b2e74 	strbvs	r2, [fp, #-3700]!	@ 0xfffff18c
 801abd5:	64287379 	strtvs	r7, [r8], #-889	@ 0xfffffc87
 801abd9:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
 801abdd:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 801abe1:	660a295d 			@ <UNDEFINED> instruction: 0x660a295d
 801abe5:	726f662e 	rsbvc	r6, pc, #48234496	@ 0x2e00000
 801abe9:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
 801abed:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
 801abf1:	6f697463 	svcvs	0x00697463
 801abf5:	656b286e 	strbvs	r2, [fp, #-2158]!	@ 0xfffff792
 801abf9:	7b202979 	blvc	88251e5 <__init_array_end+0x808d01>
 801abfd:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 801ac01:	3d207620 	stccc	6, cr7, [r0, #-128]!	@ 0xffffff80
 801ac05:	225b6420 	subscs	r6, fp, #32, 8	@ 0x20000000
 801ac09:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 801ac0d:	5b5d2273 	blpl	97635e1 <__init_array_end+0x17470fd>
 801ac11:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	@ 0xfffffe54
 801ac15:	2b20680a 	blcs	8834c45 <__init_array_end+0x818761>
 801ac19:	3c22203d 	stccc	0, cr2, [r2], #-244	@ 0xffffff0c
 801ac1d:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 801ac21:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
 801ac25:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 801ac29:	6b2b223d 	blvs	8ae3525 <__init_array_end+0xac7041>
 801ac2d:	222b7965 	eorcs	r7, fp, #1654784	@ 0x194000
 801ac31:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801ac35:	2f3c222b 	svccs	0x003c222b
 801ac39:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 801ac3d:	223e6e6f 	eorscs	r6, lr, #1776	@ 0x6f0
 801ac41:	3b297d0a 	blcc	8a7a071 <__init_array_end+0xa5db8d>
 801ac45:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 801ac49:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801ac4d:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801ac51:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801ac55:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801ac59:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801ac5d:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801ac61:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 801ac65:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 801ac69:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
 801ac6d:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801ac71:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801ac75:	203d204c 	eorscs	r2, sp, ip, asr #32
 801ac79:	65670a68 	strbvs	r0, [r7, #-2664]!	@ 0xfffff598
 801ac7d:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801ac81:	5b662874 	blpl	99a4e59 <__init_array_end+0x1988975>
 801ac85:	0a295d30 	beq	8a7214d <__init_array_end+0xa55c69>
 801ac89:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 801ac8d:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801ac91:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801ac95:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801ac99:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 801ac9d:	7478745f 	ldrbtvc	r7, [r8], #-1119	@ 0xfffffba1
 801aca1:	6c657328 	stclvs	3, cr7, [r5], #-160	@ 0xffffff60
 801aca5:	0a7b2029 	beq	9ee2d51 <__init_array_end+0x1ec686d>
 801aca9:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801acad:	20747874 	rsbscs	r7, r4, r4, ror r8
 801acb1:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801acb5:	20746961 	rsbscs	r6, r4, r1, ror #18
 801acb9:	4a746567 	bmi	9d3425d <__init_array_end+0x1d17d79>
 801acbd:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801acc1:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801acc5:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801acc9:	3d206820 	stccc	8, cr6, [r0, #-128]!	@ 0xffffff80
 801accd:	0a222220 	beq	88a3555 <__init_array_end+0x887071>
 801acd1:	656a624f 	strbvs	r6, [sl, #-591]!	@ 0xfffffdb1
 801acd5:	6b2e7463 	blvs	8bb7e69 <__init_array_end+0xb9b985>
 801acd9:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
 801acdd:	5b747874 	blpl	9d38eb5 <__init_array_end+0x1d1c9d1>
 801ace1:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 801ace5:	6f662e29 	svcvs	0x00662e29
 801ace9:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 801aced:	75662868 	strbvc	r2, [r6, #-2152]!	@ 0xfffff798
 801acf1:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801acf5:	6b286e6f 	blvs	8a366b9 <__init_array_end+0xa1a1d5>
 801acf9:	20297965 	eorcs	r7, r9, r5, ror #18
 801acfd:	61760a7b 	cmnvs	r6, fp, ror sl
 801ad01:	20762072 	rsbscs	r2, r6, r2, ror r0
 801ad05:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 801ad09:	65735b74 	ldrbvs	r5, [r3, #-2932]!	@ 0xfffff48c
 801ad0d:	6b5b5d6c 	blvs	96f22c5 <__init_array_end+0x16d5de1>
 801ad11:	0a5d7965 	beq	97792ad <__init_array_end+0x175cdc9>
 801ad15:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 801ad19:	743c2220 	ldrtvc	r2, [ip], #-544	@ 0xfffffde0
 801ad1d:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801ad21:	2b223e64 	blcs	88aa6b9 <__init_array_end+0x88e1d5>
 801ad25:	2b79656b 	blcs	9e742d9 <__init_array_end+0x1e57df5>
 801ad29:	742f3c27 	strtvc	r3, [pc], #-3111	@ 801ad31 <index_js+0x1b8>
 801ad2d:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801ad31:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
 801ad35:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 801ad39:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801ad3d:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801ad41:	22747865 	rsbscs	r7, r4, #6619136	@ 0x650000
 801ad45:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 801ad49:	223d6575 	eorscs	r6, sp, #490733568	@ 0x1d400000
 801ad4d:	2b762b27 	blcs	9da59f1 <__init_array_end+0x1d8950d>
 801ad51:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
 801ad55:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
 801ad59:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801ad5d:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
 801ad61:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801ad65:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801ad6d <index_js+0x1f4>
 801ad69:	0a273e72 	beq	89ea739 <__init_array_end+0x9ce255>
 801ad6d:	0a3b297d 	beq	8ee5369 <__init_array_end+0xec8e85>
 801ad71:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 801ad75:	743c2720 	ldrtvc	r2, [ip], #-1824	@ 0xfffff8e0
 801ad79:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801ad7d:	6f632064 	svcvs	0x00632064
 801ad81:	6170736c 	cmnvs	r0, ip, ror #6
 801ad85:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 801ad89:	623c3e22 	eorsvs	r3, ip, #544	@ 0x220
 801ad8d:	6f747475 	svcvs	0x00747475
 801ad91:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
 801ad95:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 801ad99:	73223d6b 			@ <UNDEFINED> instruction: 0x73223d6b
 801ad9d:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
 801ada1:	2b27275c 	blcs	89e4b19 <__init_array_end+0x9c8635>
 801ada5:	2b6c6573 	blcs	9b34379 <__init_array_end+0x1b17e95>
 801ada9:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
 801adad:	61533e22 	cmpvs	r3, r2, lsr #28
 801adb1:	2f3c6576 	svccs	0x003c6576
 801adb5:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801adb9:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
 801adbd:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
 801adc1:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
 801adc5:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 801adc9:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 801adcd:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801add1:	62223d73 	eorvs	r3, r2, #7360	@ 0x1cc0
 801add5:	20226e74 	eorcs	r6, r2, r4, ror lr
 801add9:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 801addd:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 801ade1:	73657222 	cmnvc	r5, #536870914	@ 0x20000002
 801ade5:	5c287465 	cfstrspl	mvf7, [r8], #-404	@ 0xfffffe6c
 801ade9:	732b2727 			@ <UNDEFINED> instruction: 0x732b2727
 801aded:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
 801adf1:	2229275c 	eorcs	r2, r9, #92, 14	@ 0x1700000
 801adf5:	6665443e 			@ <UNDEFINED> instruction: 0x6665443e
 801adf9:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 801adfd:	622f3c73 	eorvs	r3, pc, #29440	@ 0x7300
 801ae01:	6f747475 	svcvs	0x00747475
 801ae05:	2f3c3e6e 	svccs	0x003c3e6e
 801ae09:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 801ae0d:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 801ae11:	640a3b27 	strvs	r3, [sl], #-2855	@ 0xfffff4d9
 801ae15:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801ae19:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801ae1d:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801ae21:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801ae25:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801ae29:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801ae2d:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801ae31:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801ae35:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801ae39:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801ae3d:	203d204c 	eorscs	r2, sp, ip, asr #32
 801ae41:	0a7d0a68 	beq	9f5d7e9 <__init_array_end+0x1f41305>
 801ae45:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801ae49:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801ae4d:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
 801ae51:	65732865 	ldrbvs	r2, [r3, #-2149]!	@ 0xfffff79b
 801ae55:	7b20296c 	blvc	882540d <__init_array_end+0x808f29>
 801ae59:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 801ae5d:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801ae61:	0a7d7b20 	beq	9f79ae9 <__init_array_end+0x1f5d605>
 801ae65:	20726176 	rsbscs	r6, r2, r6, ror r1
 801ae69:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801ae6d:	3d207374 	stccc	3, cr7, [r0, #-464]!	@ 0xfffffe30
 801ae71:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 801ae75:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801ae79:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801ae7d:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801ae81:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801ae85:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801ae89:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801ae8d:	22747854 	rsbscs	r7, r4, #84, 16	@ 0x540000
 801ae91:	65672e29 	strbvs	r2, [r7, #-3625]!	@ 0xfffff1d7
 801ae95:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801ae99:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801ae9d:	54794273 	ldrbtpl	r4, [r9], #-627	@ 0xfffffd8d
 801aea1:	614e6761 	cmpvs	lr, r1, ror #14
 801aea5:	2228656d 	eorcs	r6, r8, #457179136	@ 0x1b400000
 801aea9:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801aead:	0a292274 	beq	8a63885 <__init_array_end+0xa473a1>
 801aeb1:	20726f66 	rsbscs	r6, r2, r6, ror #30
 801aeb5:	72617628 	rsbvc	r7, r1, #40, 12	@ 0x2800000
 801aeb9:	3d206920 			@ <UNDEFINED> instruction: 0x3d206920
 801aebd:	203b3020 	eorscs	r3, fp, r0, lsr #32
 801aec1:	203c2069 	eorscs	r2, ip, r9, rrx
 801aec5:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801aec9:	6c2e7374 	stcvs	3, cr7, [lr], #-464	@ 0xfffffe30
 801aecd:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 801aed1:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
 801aed5:	20292b2b 	eorcs	r2, r9, fp, lsr #22
 801aed9:	61760a7b 	cmnvs	r6, fp, ror sl
 801aedd:	206b2072 	rsbcs	r2, fp, r2, ror r0
 801aee1:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
 801aee5:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 801aee9:	2e5d695b 			@ <UNDEFINED> instruction: 0x2e5d695b
 801aeed:	760a6469 	strvc	r6, [sl], -r9, ror #8
 801aef1:	76207261 	strtvc	r7, [r0], -r1, ror #4
 801aef5:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
 801aef9:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 801aefd:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	@ Deprecated
 801af01:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 801af05:	640a6575 	strvs	r6, [sl], #-1397	@ 0xfffffa8b
 801af09:	205d6b5b 	subscs	r6, sp, fp, asr fp
 801af0d:	0a76203d 	beq	9da3009 <__init_array_end+0x1d86b25>
 801af11:	61760a7d 	cmnvs	r6, sp, ror sl
 801af15:	756f2072 	strbvc	r2, [pc, #-114]!	@ 801aeab <index_js+0x332>
 801af19:	203d2074 	eorscs	r2, sp, r4, ror r0
 801af1d:	6f0a7d7b 	svcvs	0x000a7d7b
 801af21:	735b7475 	cmpvc	fp, #1962934272	@ 0x75000000
 801af25:	205d6c65 	subscs	r6, sp, r5, ror #24
 801af29:	0a64203d 	beq	9923025 <__init_array_end+0x1906b41>
 801af2d:	20726176 	rsbscs	r6, r2, r6, ror r1
 801af31:	6c796170 	ldfvse	f6, [r9], #-448	@ 0xfffffe40
 801af35:	2064616f 	rsbcs	r6, r4, pc, ror #2
 801af39:	534a203d 	movtpl	r2, #41021	@ 0xa03d
 801af3d:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 801af41:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 801af45:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 801af49:	74756f28 	ldrbtvc	r6, [r5], #-3880	@ 0xfffff0d8
 801af4d:	65660a29 	strbvs	r0, [r6, #-2601]!	@ 0xfffff5d7
 801af51:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
 801af55:	736a2f27 	cmnvc	sl, #39, 30	@ 0x9c
 801af59:	2c276e6f 	stccs	14, cr6, [r7], #-444	@ 0xfffffe44
 801af5d:	6d0a7b20 	vstrvs	d7, [sl, #-128]	@ 0xffffff80
 801af61:	6f687465 	svcvs	0x00687465
 801af65:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
 801af69:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 801af6d:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 801af71:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 801af75:	203a7372 	eorscs	r7, sl, r2, ror r3
 801af79:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 801af7d:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801af81:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 801af85:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 801af89:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 801af8d:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801af91:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 801af95:	6a2f6e6f 	bvs	8bf6959 <__init_array_end+0xbda475>
 801af99:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 801af9d:	0a2c7d0a 	beq	8b3a3cd <__init_array_end+0xb1dee9>
 801afa1:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801afa5:	6170203a 	cmnvs	r0, sl, lsr r0
 801afa9:	616f6c79 	smcvs	63177	@ 0xf6c9
 801afad:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
 801afb1:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
 801afb5:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 801afb9:	6f707365 	svcvs	0x00707365
 801afbd:	2065736e 	rsbcs	r7, r5, lr, ror #6
 801afc1:	7b203e3d 	blvc	882a8bd <__init_array_end+0x80e3d9>
 801afc5:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801afc9:	70736572 	rsbsvc	r6, r3, r2, ror r5
 801afcd:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 801afd1:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 801afd5:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
 801afd9:	745f7465 	ldrbvc	r7, [pc], #-1125	@ 801afe1 <index_js+0x468>
 801afdd:	73287478 			@ <UNDEFINED> instruction: 0x73287478
 801afe1:	3b296c65 	blcc	8a7617d <__init_array_end+0xa59c99>
 801afe5:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
 801afe9:	0a7d0a3b 	beq	9f5d8dd <__init_array_end+0x1f413f9>
	...

0801afee <styles_css>:
 801afee:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801aff2:	620a7b20 	andvs	r7, sl, #32, 22	@ 0x8000
 801aff6:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
 801affa:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
 801affe:	6f632d64 	svcvs	0x00632d64
 801b002:	3a726f6c 	bcc	9cb6dba <__init_array_end+0x1c9a8d6>
 801b006:	62677220 	rsbvs	r7, r7, #32, 4
 801b00a:	2c303228 	lfmcs	f3, 4, [r0], #-160	@ 0xffffff60
 801b00e:	322c3032 	eorcc	r3, ip, #50	@ 0x32
 801b012:	0a3b2930 	beq	8ee54da <__init_array_end+0xec8ff6>
 801b016:	6f6c6f63 	svcvs	0x006c6f63
 801b01a:	72203a72 	eorvc	r3, r0, #466944	@ 0x72000
 801b01e:	32286267 	eorcc	r6, r8, #1879048198	@ 0x70000006
 801b022:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801b026:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	@ 0xffffff38
 801b02a:	35353220 	ldrcc	r3, [r5, #-544]!	@ 0xfffffde0
 801b02e:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 801b032:	206c750a 	rsbcs	r7, ip, sl, lsl #10
 801b036:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801b03a:	616c7073 	smcvs	50947	@ 0xc703
 801b03e:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 801b042:	3b78656c 	blcc	9e345fa <__init_array_end+0x1e18116>
 801b046:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
 801b04a:	0a7b2069 	beq	9ee31f6 <__init_array_end+0x1ec6d12>
 801b04e:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801b052:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
 801b056:	203a656c 	eorscs	r6, sl, ip, ror #10
 801b05a:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
 801b05e:	616d0a3b 	cmnvs	sp, fp, lsr sl
 801b062:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801b066:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 801b06a:	70352078 	eorsvc	r2, r5, r8, ror r0
 801b06e:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801b072:	6165680a 	cmnvs	r5, sl, lsl #16
 801b076:	20726564 	rsbscs	r6, r2, r4, ror #10
 801b07a:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801b07e:	616c7073 	smcvs	50947	@ 0xc703
 801b082:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 801b086:	3b78656c 	blcc	9e3463e <__init_array_end+0x1e1815a>
 801b08a:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801b08e:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	@ 0xfffffe70
 801b092:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801b096:	203a7375 	eorscs	r7, sl, r5, ror r3
 801b09a:	3b787034 	blcc	9e37172 <__init_array_end+0x1e1ac8e>
 801b09e:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801b0a2:	3a726564 	bcc	9cb463a <__init_array_end+0x1c98156>
 801b0a6:	6c6f7320 	stclvs	3, cr7, [pc], #-128	@ 801b02c <styles_css+0x3e>
 801b0aa:	67206469 	strvs	r6, [r0, -r9, ror #8]!
 801b0ae:	20796572 	rsbscs	r6, r9, r2, ror r5
 801b0b2:	3b787031 	blcc	9e3717e <__init_array_end+0x1e1ac9a>
 801b0b6:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 801b0ba:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 801b0be:	0a7b2072 	beq	9ee328e <__init_array_end+0x1ec6daa>
 801b0c2:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801b0c6:	3a79616c 	bcc	9e7367e <__init_array_end+0x1e5719a>
 801b0ca:	656c6620 	strbvs	r6, [ip, #-1568]!	@ 0xfffff9e0
 801b0ce:	6a0a3b78 	bvs	82a9eb6 <__init_array_end+0x28d9d2>
 801b0d2:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801b0d6:	632d7966 			@ <UNDEFINED> instruction: 0x632d7966
 801b0da:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801b0de:	203a746e 	eorscs	r7, sl, lr, ror #8
 801b0e2:	746e6563 	strbtvc	r6, [lr], #-1379	@ 0xfffffa9d
 801b0e6:	0a3b7265 	beq	8ef7a82 <__init_array_end+0xedb59e>
 801b0ea:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801b0ee:	722d7265 	eorvc	r7, sp, #1342177286	@ 0x50000006
 801b0f2:	75696461 	strbvc	r6, [r9, #-1121]!	@ 0xfffffb9f
 801b0f6:	34203a73 	strtcc	r3, [r0], #-2675	@ 0xfffff58d
 801b0fa:	0a3b7870 	beq	8ef92c2 <__init_array_end+0xedcdde>
 801b0fe:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801b102:	203a7265 	eorscs	r7, sl, r5, ror #4
 801b106:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b10a:	72672064 	rsbvc	r2, r7, #100	@ 0x64
 801b10e:	31207965 			@ <UNDEFINED> instruction: 0x31207965
 801b112:	0a3b7870 	beq	8ef92da <__init_array_end+0xedcdf6>
 801b116:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 801b11a:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801b11e:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801b122:	6f737275 	svcvs	0x00737275
 801b126:	70203a72 	eorvc	r3, r0, r2, ror sl
 801b12a:	746e696f 	strbtvc	r6, [lr], #-2415	@ 0xfffff691
 801b12e:	0a3b7265 	beq	8ef7aca <__init_array_end+0xedb5e6>
 801b132:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 801b136:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801b13a:	7463613a 	strbtvc	r6, [r3], #-314	@ 0xfffffec6
 801b13e:	20657669 	rsbcs	r7, r5, r9, ror #12
 801b142:	61620a7b 	smcvs	8363	@ 0x20ab
 801b146:	72676b63 	rsbvc	r6, r7, #101376	@ 0x18c00
 801b14a:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 801b14e:	6c6f632d 	stclvs	3, cr6, [pc], #-180	@ 801b0a0 <styles_css+0xb2>
 801b152:	203a726f 	eorscs	r7, sl, pc, ror #4
 801b156:	30303023 	eorscc	r3, r0, r3, lsr #32
 801b15a:	6f630a3b 	svcvs	0x00630a3b
 801b15e:	3a726f6c 	bcc	9cb6f16 <__init_array_end+0x1c9aa32>
 801b162:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
 801b166:	7d0a3b66 	vstrvc	d3, [sl, #-408]	@ 0xfffffe68
 801b16a:	74622e0a 	strbtvc	r2, [r2], #-3594	@ 0xfffff1f6
 801b16e:	0a7b206e 	beq	9ee332e <__init_array_end+0x1ec6e4a>
 801b172:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
 801b176:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	@ 0xfffffe5c
 801b17a:	3a746665 	bcc	9d34b16 <__init_array_end+0x1d18632>
 801b17e:	70303520 	eorsvc	r3, r0, r0, lsr #10
 801b182:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801b186:	 	cmnvc	r1, #10

0801b188 <static_js>:
 801b188:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801b18c:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801b190:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801b194:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801b198:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801b19c:	6a284e4f 	bvs	8a2eae0 <__init_array_end+0xa125fc>
 801b1a0:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b1a4:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801b1a8:	7b207972 	blvc	8839778 <__init_array_end+0x81d294>
 801b1ac:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801b1b0:	72207473 	eorvc	r7, r0, #1929379840	@ 0x73000000
 801b1b4:	61203d20 			@ <UNDEFINED> instruction: 0x61203d20
 801b1b8:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 801b1bc:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801b1c0:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801b1c4:	6f736a2f 	svcvs	0x00736a2f
 801b1c8:	2b272f6e 	blcs	89e6f88 <__init_array_end+0x9caaa4>
 801b1cc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801b1d0:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
 801b1d4:	72212820 	eorvc	r2, r1, #32, 16	@ 0x200000
 801b1d8:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 801b1dc:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801b1e0:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
 801b1e4:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
 801b1e8:	72724520 	rsbsvc	r4, r2, #32, 10	@ 0x8000000
 801b1ec:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
 801b1f0:	6f727245 	svcvs	0x00727245
 801b1f4:	0a292772 	beq	8a64fc4 <__init_array_end+0xa48ae0>
 801b1f8:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	@ 0xfffff583
 801b1fc:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 801b200:	6a2e7220 	bvs	8bb7a88 <__init_array_end+0xb9b5a4>
 801b204:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b208:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
 801b20c:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 801b210:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 801b214:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 801b218:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	@ 0xffffff5c
 801b21c:	610a7d0a 	tstvs	sl, sl, lsl #26
 801b220:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801b224:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 801b228:	6f697463 	svcvs	0x00697463
 801b22c:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
 801b230:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801b234:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801b238:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801b23c:	3d206c20 	stccc	12, cr6, [r0, #-128]!	@ 0xffffff80
 801b240:	61776120 	cmnvs	r7, r0, lsr #2
 801b244:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801b248:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801b24c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801b250:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801b254:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 801b258:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801b25c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801b260:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801b264:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801b268:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801b26c:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801b270:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801b274:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801b278:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801b27c:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801b280:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 801b284:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	@ 0xffffff80
 801b288:	2b223e69 	blcs	88aac34 <__init_array_end+0x88e750>
 801b28c:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 801b290:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801b294:	2b656d61 	blcs	9976820 <__init_array_end+0x195a33c>
 801b298:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801b218 <static_js+0x90>
 801b29c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 801b2a0:	2b223e69 	blcs	88aac4c <__init_array_end+0x88e768>
 801b2a4:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 801b2a8:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801b2ac:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
 801b2b0:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801b2b4:	2f3c222b 	svccs	0x003c222b
 801b2b8:	3c3e696c 			@ <UNDEFINED> instruction: 0x3c3e696c
 801b2bc:	223e696c 	eorscs	r6, lr, #108, 18	@ 0x1b0000
 801b2c0:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	@ 0xffffff54
 801b2c4:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801b2c8:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 801b2cc:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 801b2d0:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801b2d4:	222b6570 	eorcs	r6, fp, #112, 10	@ 0x1c000000
 801b2d8:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801b2dc:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	@ 0xffffff08
 801b2e0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 801b2e4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801b2e8:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 801b2ec:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801b2f0:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801b2f4:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b2f8:	0a7b2029 	beq	9ee33a4 <__init_array_end+0x1ec6ec0>
 801b2fc:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801b300:	20762074 	rsbscs	r2, r6, r4, ror r0
 801b304:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801b308:	20746961 	rsbscs	r6, r4, r1, ror #18
 801b30c:	4a746567 	bmi	9d348b0 <__init_array_end+0x1d183cc>
 801b310:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801b314:	72657627 	rsbvc	r7, r5, #40894464	@ 0x2700000
 801b318:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801b31c:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 801b320:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801b324:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801b328:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801b32c:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801b330:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801b334:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801b338:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 801b33c:	6f697372 	svcvs	0x00697372
 801b340:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
 801b344:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801b348:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801b34c:	203d204c 	eorscs	r2, sp, ip, asr #32
 801b350:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 801b354:	2b22563e 	blcs	88b0c54 <__init_array_end+0x894770>
 801b358:	65762e76 	ldrbvs	r2, [r6, #-3702]!	@ 0xfffff18a
 801b35c:	6f697372 	svcvs	0x00697372
 801b360:	3c222b6e 			@ <UNDEFINED> instruction: 0x3c222b6e
 801b364:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 801b368:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 801b36c:	2e762b22 	vaddcs.f64	d18, d6, d18
 801b370:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 801b374:	61642e64 	cmnvs	r4, r4, ror #28
 801b378:	222b6574 	eorcs	r6, fp, #116, 10	@ 0x1d000000
 801b37c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801b380:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801b384:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801b388:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
 801b38c:	742e646c 	strtvc	r6, [lr], #-1132	@ 0xfffffb94
 801b390:	2b656d69 	blcs	997693c <__init_array_end+0x195a458>
 801b394:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801b314 <static_js+0x18c>
 801b398:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 801b39c:	2b223e69 	blcs	88aad48 <__init_array_end+0x88e864>
 801b3a0:	6f622e76 	svcvs	0x00622e76
 801b3a4:	2b647261 	blcs	9937d30 <__init_array_end+0x191b84c>
 801b3a8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801b328 <static_js+0x1a0>
 801b3ac:	0a223e69 	beq	88aad58 <__init_array_end+0x88e874>
 801b3b0:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 801b3b4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801b3b8:	70206e6f 	eorvc	r6, r0, pc, ror #28
 801b3bc:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801b3c0:	7b202973 	blvc	8825994 <__init_array_end+0x8094b0>
 801b3c4:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801b3c8:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801b3cc:	63746566 	cmnvs	r4, #427819008	@ 0x19800000
 801b3d0:	2f272868 	svccs	0x00272868
 801b3d4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801b3d8:	7463612f 	strbtvc	r6, [r3], #-303	@ 0xfffffed1
 801b3dc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 801b3e0:	0a7b202c 	beq	9ee3498 <__init_array_end+0x1ec6fb4>
 801b3e4:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 801b3e8:	203a646f 	eorscs	r6, sl, pc, ror #8
 801b3ec:	534f5027 	movtpl	r5, #61479	@ 0xf027
 801b3f0:	0a2c2754 	beq	8b25148 <__init_array_end+0xb08c64>
 801b3f4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801b3f8:	3a737265 	bcc	9cf7d94 <__init_array_end+0x1cdb8b0>
 801b3fc:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
 801b400:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801b404:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801b408:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 801b40c:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
 801b410:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801b414:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801b418:	2f6e6f69 	svccs	0x006e6f69
 801b41c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801b420:	2c7d0a27 			@ <UNDEFINED> instruction: 0x2c7d0a27
 801b424:	646f620a 	strbtvs	r6, [pc], #-522	@ 801b42c <static_js+0x2a4>
 801b428:	4a203a79 	bmi	8829e14 <__init_array_end+0x80d930>
 801b42c:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
 801b430:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 801b434:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
 801b438:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
 801b43c:	0a297d0a 	beq	8a7a86c <__init_array_end+0xa5e388>
 801b440:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 801b444:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801b448:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 801b44c:	74656c65 	strbtvc	r6, [r5], #-3173	@ 0xfffff39b
 801b450:	20297328 	eorcs	r7, r9, r8, lsr #6
 801b454:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 801b458:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 801b45c:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801b460:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801b464:	6f736a2f 	svcvs	0x00736a2f
 801b468:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 801b46c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801b470:	7b202c27 	blvc	8826514 <__init_array_end+0x80a030>
 801b474:	74656d0a 	strbtvc	r6, [r5], #-3338	@ 0xfffff2f6
 801b478:	3a646f68 	bcc	9937220 <__init_array_end+0x191ad3c>
 801b47c:	45442720 	strbmi	r2, [r4, #-1824]	@ 0xfffff8e0
 801b480:	4554454c 	ldrbmi	r4, [r4, #-1356]	@ 0xfffffab4
 801b484:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 801b488:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 801b48c:	203a7372 	eorscs	r7, sl, r2, ror r3
 801b490:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 801b494:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801b498:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 801b49c:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 801b4a0:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 801b4a4:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801b4a8:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 801b4ac:	6a2f6e6f 	bvs	8bf6e70 <__init_array_end+0xbda98c>
 801b4b0:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 801b4b4:	0a2c7d0a 	beq	8b3a8e4 <__init_array_end+0xb1e400>
 801b4b8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b4bc:	534a203a 	movtpl	r2, #41018	@ 0xa03a
 801b4c0:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 801b4c4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 801b4c8:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 801b4cc:	0a297328 	beq	8a78174 <__init_array_end+0xa5bc90>
 801b4d0:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	@ 0xffffff06	@ <UNPREDICTABLE>
 801b4d4:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
 801b4d8:	6f697463 	svcvs	0x00697463
 801b4dc:	6572206e 	ldrbvs	r2, [r2, #-110]!	@ 0xffffff92
 801b4e0:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801b4e8 <static_js+0x360>
 801b4e4:	7b202928 	blvc	882598c <__init_array_end+0x8094a8>
 801b4e8:	736f700a 	cmnvc	pc, #10
 801b4ec:	207b2874 	rsbscs	r2, fp, r4, ror r8
 801b4f0:	6f626572 	svcvs	0x00626572
 801b4f4:	203a746f 	eorscs	r7, sl, pc, ror #8
 801b4f8:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 801b4fc:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 801b500:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 801b504:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801b508:	61636f6c 	cmnvs	r3, ip, ror #30
 801b50c:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801b510:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
 801b514:	62207261 	eorvs	r7, r0, #268435462	@ 0x10000006
 801b518:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 801b51c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801b520:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801b524:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801b528:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801b52c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801b530:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 801b534:	61636f6c 	cmnvs	r3, ip, ror #30
 801b538:	75426574 	strbvc	r6, [r2, #-1396]	@ 0xfffffa8c
 801b53c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801b540:	0a3b2927 	beq	8ee59e4 <__init_array_end+0xec9500>
 801b544:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801b548:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 801b54c:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 801b550:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801b554:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 801b558:	736e6961 	cmnvc	lr, #1589248	@ 0x184000
 801b55c:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
 801b560:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b564:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 801b568:	0a7b2029 	beq	9ee3614 <__init_array_end+0x1ec7130>
 801b56c:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 801b570:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 801b574:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801b578:	6f6d6572 	svcvs	0x006d6572
 801b57c:	27286576 			@ <UNDEFINED> instruction: 0x27286576
 801b580:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801b584:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801b588:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801b58c:	616c632e 	cmnvs	ip, lr, lsr #6
 801b590:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 801b594:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 801b598:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 801b59c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801b5a0:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 801b5a4:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
 801b5a8:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801b5ac:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801b5b0:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
 801b5b4:	61636f4c 	cmnvs	r3, ip, asr #30
 801b5b8:	4f206574 	svcmi	0x00206574
 801b5bc:	700a276e 	andvc	r2, sl, lr, ror #14
 801b5c0:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801b5c4:	6469207b 	strbtvs	r2, [r9], #-123	@ 0xffffff85
 801b5c8:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 801b5cc:	203a7966 	eorscs	r7, sl, r6, ror #18
 801b5d0:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 801b5d4:	65207d0a 	strvs	r7, [r0, #-3338]!	@ 0xfffff2f6
 801b5d8:	2065736c 	rsbcs	r7, r5, ip, ror #6
 801b5dc:	2e620a7b 			@ <UNDEFINED> instruction: 0x2e620a7b
 801b5e0:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801b5e4:	73694c73 	cmnvc	r9, #29440	@ 0x7300
 801b5e8:	65722e74 	ldrbvs	r2, [r2, #-3700]!	@ 0xfffff18c
 801b5ec:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
 801b5f0:	63612728 	cmnvs	r1, #40, 14	@ 0xa00000
 801b5f4:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801b5f8:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801b5fc:	616c632e 	cmnvs	ip, lr, lsr #6
 801b600:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 801b604:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 801b608:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 801b60c:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801b610:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801b614:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801b618:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801b61c:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801b620:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 801b624:	6f4c2720 	svcvs	0x004c2720
 801b628:	65746163 	ldrbvs	r6, [r4, #-355]!	@ 0xfffffe9d
 801b62c:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 801b630:	6f700a27 	svcvs	0x00700a27
 801b634:	7b287473 	blvc	8a38808 <__init_array_end+0xa1c324>
 801b638:	65646920 	strbvs	r6, [r4, #-2336]!	@ 0xfffff6e0
 801b63c:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
 801b640:	30203a79 	eorcc	r3, r0, r9, ror sl
 801b644:	0a297d20 	beq	8a7aacc <__init_array_end+0xa5e5e8>
 801b648:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

0801b64c <json::CONFIG_REPLY>:
 801b64c:	6f63227b 	svcvs	0x0063227b
 801b650:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801b654:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801b658:	3a227069 	bcc	88b7804 <__init_array_end+0x89b320>
 801b65c:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 801b660:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b664:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b668:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 801b66c:	223a226d 	eorscs	r2, sl, #-805306362	@ 0xd0000006
 801b670:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b674:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b678:	2264252e 	rsbcs	r2, r4, #192937984	@ 0xb800000
 801b67c:	7767222c 	strbvc	r2, [r7, -ip, lsr #4]!
 801b680:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b684:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b688:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b68c:	2c226425 	cfstrscs	mvf6, [r2], #-148	@ 0xffffff6c
 801b690:	726f7022 	rsbvc	r7, pc, #34	@ 0x22
 801b694:	3a227374 	bcc	88b846c <__init_array_end+0x89bf88>
 801b698:	70227b5b 	eorvc	r7, r2, fp, asr fp
 801b69c:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b6a0:	2230223a 	eorscs	r2, r0, #-1610612733	@ 0xa0000003
 801b6a4:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b6a8:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b6ac:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b6b0:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b6b4:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b6b8:	3a227373 	bcc	88b848c <__init_array_end+0x89bfa8>
 801b6bc:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b6c0:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b6c4:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b6c8:	2231223a 	eorscs	r2, r1, #-1610612733	@ 0xa0000003
 801b6cc:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b6d0:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b6d4:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b6d8:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b6dc:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b6e0:	3a227373 	bcc	88b84b4 <__init_array_end+0x89bfd0>
 801b6e4:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b6e8:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b6ec:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b6f0:	2232223a 	eorscs	r2, r2, #-1610612733	@ 0xa0000003
 801b6f4:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b6f8:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b6fc:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b700:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b704:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b708:	3a227373 	bcc	88b84dc <__init_array_end+0x89bff8>
 801b70c:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b710:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b714:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b718:	2233223a 	eorscs	r2, r3, #-1610612733	@ 0xa0000003
 801b71c:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b720:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b724:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b728:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b72c:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b730:	3a227373 	bcc	88b8504 <__init_array_end+0x89c020>
 801b734:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b738:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b73c:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b740:	2234223a 	eorscs	r2, r4, #-1610612733	@ 0xa0000003
 801b744:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b748:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b74c:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b750:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b754:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b758:	3a227373 	bcc	88b852c <__init_array_end+0x89c048>
 801b75c:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b760:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b764:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b768:	2235223a 	eorscs	r2, r5, #-1610612733	@ 0xa0000003
 801b76c:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b770:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b774:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b778:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b77c:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b780:	3a227373 	bcc	88b8554 <__init_array_end+0x89c070>
 801b784:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b788:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b78c:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b790:	2236223a 	eorscs	r2, r6, #-1610612733	@ 0xa0000003
 801b794:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b798:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b79c:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b7a0:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b7a4:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b7a8:	3a227373 	bcc	88b857c <__init_array_end+0x89c098>
 801b7ac:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b7b0:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b7b4:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b7b8:	2237223a 	eorscs	r2, r7, #-1610612733	@ 0xa0000003
 801b7bc:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b7c0:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b7c4:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b7c8:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b7cc:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b7d0:	3a227373 	bcc	88b85a4 <__init_array_end+0x89c0c0>
 801b7d4:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b7d8:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b7dc:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b7e0:	2238223a 	eorscs	r2, r8, #-1610612733	@ 0xa0000003
 801b7e4:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b7e8:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b7ec:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b7f0:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b7f4:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b7f8:	3a227373 	bcc	88b85cc <__init_array_end+0x89c0e8>
 801b7fc:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b800:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801b804:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 801b808:	2239223a 	eorscs	r2, r9, #-1610612733	@ 0xa0000003
 801b80c:	7374222c 	cmnvc	r4, #44, 4	@ 0xc0000002
 801b810:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801b814:	6c222c22 	stcvs	12, cr2, [r2], #-136	@ 0xffffff78
 801b818:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b81c:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801b820:	3a227373 	bcc	88b85f4 <__init_array_end+0x89c110>
 801b824:	7d223022 	stcvc	0, cr3, [r2, #-136]!	@ 0xffffff78
 801b828:	007d7d5d 	rsbseq	r7, sp, sp, asr sp

0801b82c <json::DISCOVER_REPLY>:
 801b82c:	7473227b 	ldrbtvc	r2, [r3], #-635	@ 0xfffffd85
 801b830:	73757461 	cmnvc	r5, #1627389952	@ 0x61000000
 801b834:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801b838:	226e616d 	rsbcs	r6, lr, #1073741851	@ 0x4000001b
 801b83c:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 801b840:	6d222c22 	stcvs	12, cr2, [r2, #-136]!	@ 0xffffff78
 801b844:	3a22646f 	bcc	88b4a08 <__init_array_end+0x898524>
 801b848:	78695022 	stmdavc	r9!, {r1, r5, ip, lr}^
 801b84c:	2c226c65 	stccs	12, cr6, [r2], #-404	@ 0xfffffe6c
 801b850:	72657622 	rsbvc	r7, r5, #35651584	@ 0x2200000
 801b854:	31223a22 			@ <UNDEFINED> instruction: 0x31223a22
 801b858:	2c22302e 	stccs	0, cr3, [r2], #-184	@ 0xffffff48
 801b85c:	63616d22 	cmnvs	r1, #2176	@ 0x880
 801b860:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b864:	3a78322e 	bcc	9e28124 <__init_array_end+0x1e0bc40>
 801b868:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b86c:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 801b870:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 801b874:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 801b878:	3a78322e 	bcc	9e28138 <__init_array_end+0x1e0bc54>
 801b87c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b880:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

0801b884 <json::START>:
 801b884:	7473227b 	ldrbtvc	r2, [r3], #-635	@ 0xfffffd85
 801b888:	73757461 	cmnvc	r5, #1627389952	@ 0x61000000
 801b88c:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801b890:	61647075 	smcvs	18181	@ 0x4705
 801b894:	3a226574 	bcc	88b4e6c <__init_array_end+0x898988>
 801b898:	61686322 	cmnvs	r8, r2, lsr #6
 801b89c:	2265676e 	rsbcs	r6, r5, #28835840	@ 0x1b80000
 801b8a0:	7473222c 	ldrbtvc	r2, [r3], #-556	@ 0xfffffdd4
 801b8a4:	22657461 	rsbcs	r7, r5, #1627389952	@ 0x61000000
 801b8a8:	7075223a 	rsbsvc	r2, r5, sl, lsr r2
 801b8ac:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

0801b8b0 <vtable for RDMDeviceResponder>:
	...
 801b8b8:	08009881 	stmdaeq	r0, {r0, r7, fp, ip, pc}
 801b8bc:	08009989 	stmdaeq	r0, {r0, r3, r7, r8, fp, ip, pc}
 801b8c0:	0800bae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, ip, sp, pc}
 801b8c4:	0800bae3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, fp, ip, sp, pc}

0801b8c8 <RDMHandler::PID_DEFINITIONS>:
 801b8c8:	00000060 	andeq	r0, r0, r0, rrx
 801b8cc:	0800c021 	stmdaeq	r0, {r0, r5, lr, pc}
	...
 801b8dc:	01010000 	mrseq	r0, (UNDEF: 1)
 801b8e0:	00000080 	andeq	r0, r0, r0, lsl #1
 801b8e4:	0800c159 	stmdaeq	r0, {r0, r3, r4, r6, r8, lr, pc}
	...
 801b8f4:	01010100 	mrseq	r0, (UNDEF: 17)
 801b8f8:	00000081 	andeq	r0, r0, r1, lsl #1
 801b8fc:	0800c1c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, lr, pc}
	...
 801b90c:	01010100 	mrseq	r0, (UNDEF: 17)
 801b910:	00000082 	andeq	r0, r0, r2, lsl #1
 801b914:	0800c175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, lr, pc}
 801b918:	00000000 	andeq	r0, r0, r0
 801b91c:	0800c2f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, lr, pc}
 801b920:	00000000 	andeq	r0, r0, r0
 801b924:	01010100 	mrseq	r0, (UNDEF: 17)
 801b928:	00000090 	muleq	r0, r0, r0
 801b92c:	0800c099 	stmdaeq	r0, {r0, r3, r4, r7, lr, pc}
 801b930:	00000000 	andeq	r0, r0, r0
 801b934:	0800c2c1 	stmdaeq	r0, {r0, r6, r7, r9, lr, pc}
 801b938:	00000000 	andeq	r0, r0, r0
 801b93c:	01010100 	mrseq	r0, (UNDEF: 17)
 801b940:	00001000 	andeq	r1, r0, r0
 801b944:	0800c1b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, lr, pc}
 801b948:	00000000 	andeq	r0, r0, r0
 801b94c:	0800c245 	stmdaeq	r0, {r0, r2, r6, r9, lr, pc}
 801b950:	00000000 	andeq	r0, r0, r0
 801b954:	01010000 	mrseq	r0, (UNDEF: 1)
 801b958:	00001001 	andeq	r1, r0, r1
	...
 801b964:	0800c1fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, lr, pc}
 801b968:	00000000 	andeq	r0, r0, r0
 801b96c:	01010100 	mrseq	r0, (UNDEF: 17)
 801b970:	00000700 	andeq	r0, r0, r0, lsl #14
 801b974:	0800c7d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, lr, pc}
	...
 801b984:	01000000 	mrseq	r0, (UNDEF: 0)
 801b988:	00000701 	andeq	r0, r0, r1, lsl #14
 801b98c:	0800c7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, lr, pc}
	...
 801b99c:	01000004 	tsteq	r0, r4
 801b9a0:	00000702 	andeq	r0, r0, r2, lsl #14
 801b9a4:	0800c83d 	stmdaeq	r0, {r0, r2, r3, r4, r5, fp, lr, pc}
	...
 801b9b4:	01000004 	tsteq	r0, r4
 801b9b8:	00000703 	andeq	r0, r0, r3, lsl #14
 801b9bc:	0800c871 	stmdaeq	r0, {r0, r4, r5, r6, fp, lr, pc}
 801b9c0:	00000000 	andeq	r0, r0, r0
 801b9c4:	0800c8a1 	stmdaeq	r0, {r0, r5, r7, fp, lr, pc}
 801b9c8:	00000000 	andeq	r0, r0, r0
 801b9cc:	01000004 	tsteq	r0, r4
 801b9d0:	00000704 	andeq	r0, r0, r4, lsl #14
 801b9d4:	0800c921 	stmdaeq	r0, {r0, r5, r8, fp, lr, pc}
 801b9d8:	00000000 	andeq	r0, r0, r0
 801b9dc:	0800c95d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, fp, lr, pc}
 801b9e0:	00000000 	andeq	r0, r0, r0
 801b9e4:	01000004 	tsteq	r0, r4
 801b9e8:	00000705 	andeq	r0, r0, r5, lsl #14
 801b9ec:	0800c9d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, lr, pc}
	...
 801b9fc:	01000004 	tsteq	r0, r4
 801ba00:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 801ba0c:	0800c9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, lr, pc}
 801ba10:	00000000 	andeq	r0, r0, r0
 801ba14:	01000004 	tsteq	r0, r4
 801ba18:	00000706 	andeq	r0, r0, r6, lsl #14
 801ba1c:	0800ca25 	stmdaeq	r0, {r0, r2, r5, r9, fp, lr, pc}
 801ba20:	00000000 	andeq	r0, r0, r0
 801ba24:	0800ca6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, lr, pc}
 801ba28:	00000000 	andeq	r0, r0, r0
 801ba2c:	01000004 	tsteq	r0, r4
 801ba30:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 801ba3c:	0800cabd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, fp, lr, pc}
 801ba40:	00000000 	andeq	r0, r0, r0
 801ba44:	01000004 	tsteq	r0, r4
 801ba48:	0000070b 	andeq	r0, r0, fp, lsl #14
 801ba4c:	0800c8d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, fp, lr, pc}
	...
 801ba5c:	01000001 	tsteq	r0, r1
 801ba60:	0000070a 	andeq	r0, r0, sl, lsl #14
 801ba64:	0800cae5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, fp, lr, pc}
 801ba68:	00000000 	andeq	r0, r0, r0
 801ba6c:	0800cb21 	stmdaeq	r0, {r0, r5, r8, r9, fp, lr, pc}
 801ba70:	00000000 	andeq	r0, r0, r0
 801ba74:	01000004 	tsteq	r0, r4
 801ba78:	0000070c 	andeq	r0, r0, ip, lsl #14
 801ba7c:	0800cb61 	stmdaeq	r0, {r0, r5, r6, r8, r9, fp, lr, pc}
 801ba80:	00000000 	andeq	r0, r0, r0
 801ba84:	0800cb8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, fp, lr, pc}
 801ba88:	00000000 	andeq	r0, r0, r0
 801ba8c:	01000000 	mrseq	r0, (UNDEF: 0)
 801ba90:	0000070d 	andeq	r0, r0, sp, lsl #14
 801ba94:	0800cbc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, fp, lr, pc}
 801ba98:	00000000 	andeq	r0, r0, r0
 801ba9c:	0800cbed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, fp, lr, pc}
 801baa0:	00000000 	andeq	r0, r0, r0
 801baa4:	01000000 	mrseq	r0, (UNDEF: 0)

0801baa8 <UID_ALL>:
 801baa8:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 801baac:	 	svcvs	0x0043ffff

0801baae <RDMNetConst::MSG_CONFIG>:
 801baae:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801bab2:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 801bab6:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801baba:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801babe:	 	andpl	r7, r0, r5, ror #8

0801bac1 <RDMConst::MANUFACTURER_ID>:
 801bac1:	 	strbtvc	r0, [r8], #-80	@ 0xffffffb0

0801bac3 <RDMConst::MANUFACTURER_NAME>:
 801bac3:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801bac7:	772f2f3a 			@ <UNDEFINED> instruction: 0x772f2f3a
 801bacb:	6f2e7777 	svcvs	0x002e7777
 801bacf:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 801bad3:	2d697065 	stclcs	0, cr7, [r9, #-404]!	@ 0xfffffe6c
 801bad7:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801badb:	0067726f 	rsbeq	r7, r7, pc, ror #4

0801badf <DEVICE_LABEL>:
 801badf:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 801bae3:	30373446 	eorscc	r3, r7, r6, asr #8
 801bae7:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 801baeb:	52204c41 	eorpl	r4, r0, #16640	@ 0x4100
 801baef:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 801baf3:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801baf7:	 	andeq	r0, r0, #101	@ 0x65

0801baf9 <CSWTCH.81>:
 801baf9:	02020200 	andeq	r0, r2, #0, 4
 801bafd:	04020202 	streq	r0, [r2], #-514	@ 0xfffffdfe
 801bb01:	 	andeq	r0, r0, r0, lsl #10

0801bb04 <CSWTCH.49>:
 801bb04:	00000000 	andeq	r0, r0, r0
 801bb08:	00000002 	andeq	r0, r0, r2
 801bb0c:	00000002 	andeq	r0, r0, r2
 801bb10:	00000002 	andeq	r0, r0, r2
 801bb14:	00000002 	andeq	r0, r0, r2
 801bb18:	00000002 	andeq	r0, r0, r2
 801bb1c:	00000002 	andeq	r0, r0, r2
 801bb20:	00000004 	andeq	r0, r0, r4
 801bb24:	00000000 	andeq	r0, r0, r0
 801bb28:	00000005 	andeq	r0, r0, r5

0801bb2c <vtable for WS28xxDmxMulti>:
	...
 801bb34:	0800d889 	stmdaeq	r0, {r0, r3, r7, fp, ip, lr, pc}
 801bb38:	0800dba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, lr, pc}
 801bb3c:	0800daed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, fp, ip, lr, pc}
 801bb40:	0800db59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, fp, ip, lr, pc}
 801bb44:	0800e889 	stmdaeq	r0, {r0, r3, r7, fp, sp, lr, pc}
 801bb48:	0800e83d 	stmdaeq	r0, {r0, r2, r3, r4, r5, fp, sp, lr, pc}
 801bb4c:	0800d8ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, fp, ip, lr, pc}
 801bb50:	0800d869 	stmdaeq	r0, {r0, r3, r5, r6, fp, ip, lr, pc}
 801bb54:	0800db31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp, ip, lr, pc}
 801bb58:	0800d8c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, ip, lr, pc}
 801bb5c:	0800d8dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, ip, lr, pc}
 801bb60:	0800d879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, ip, lr, pc}
 801bb64:	0800d87d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, ip, lr, pc}
 801bb68:	0800d885 	stmdaeq	r0, {r0, r2, r7, fp, ip, lr, pc}
 801bb6c:	0800d86d 	stmdaeq	r0, {r0, r2, r3, r5, r6, fp, ip, lr, pc}

0801bb70 <pixel::MAPS>:
 801bb70:	00424752 	subeq	r4, r2, r2, asr r7
 801bb74:	00474252 	subeq	r4, r7, r2, asr r2
 801bb78:	00425247 	subeq	r5, r2, r7, asr #4
 801bb7c:	00524247 	subseq	r4, r2, r7, asr #4
 801bb80:	00475242 	subeq	r5, r7, r2, asr #4
 801bb84:	00524742 	subseq	r4, r2, r2, asr #14

0801bb88 <pixel::TYPES>:
 801bb88:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bb8c:	00003130 	andeq	r3, r0, r0, lsr r1
 801bb90:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bb94:	00003131 	andeq	r3, r0, r1, lsr r1
 801bb98:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bb9c:	00003231 	andeq	r3, r0, r1, lsr r2
 801bba0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bba4:	00423231 	subeq	r3, r2, r1, lsr r2
 801bba8:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bbac:	00003331 	andeq	r3, r0, r1, lsr r3
 801bbb0:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801bbb4:	00003531 	andeq	r3, r0, r1, lsr r5
 801bbb8:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801bbbc:	00003231 	andeq	r3, r0, r1, lsr r2
 801bbc0:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801bbc4:	00573231 	subseq	r3, r7, r1, lsr r2
 801bbc8:	31534355 	cmpcc	r3, r5, asr r3
 801bbcc:	00333039 	eorseq	r3, r3, r9, lsr r0
 801bbd0:	32534355 	subscc	r4, r3, #1409286145	@ 0x54000001
 801bbd4:	00333039 	eorseq	r3, r3, r9, lsr r0
 801bbd8:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801bbdc:	00003231 	andeq	r3, r0, r1, lsr r2
 801bbe0:	31415041 	cmpcc	r1, r1, asr #32
 801bbe4:	00003230 	andeq	r3, r0, r0, lsr r2
 801bbe8:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801bbec:	00003232 	andeq	r3, r0, r2, lsr r2
 801bbf0:	31383950 	teqcc	r8, r0, asr r9
 801bbf4:	00000033 	andeq	r0, r0, r3, lsr r0

0801bbf8 <s_patternName>:
 801bbf8:	656e6f4e 	strbvs	r6, [lr, #-3918]!	@ 0xfffff0b2
	...
 801bc04:	61520000 	cmpvs	r2, r0
 801bc08:	6f626e69 	svcvs	0x00626e69
 801bc0c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801bc10:	00656c63 	rsbeq	r6, r5, r3, ror #24
 801bc14:	61656854 	cmnvs	r5, r4, asr r8
 801bc18:	20726574 	rsbscs	r6, r2, r4, ror r5
 801bc1c:	73616863 	cmnvc	r1, #6488064	@ 0x630000
 801bc20:	6f430065 	svcvs	0x00430065
 801bc24:	72756f6c 	rsbsvc	r6, r5, #108, 30	@ 0x1b0
 801bc28:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801bc2c:	00000065 	andeq	r0, r0, r5, rrx
 801bc30:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801bc34:	0072656e 	rsbseq	r6, r2, lr, ror #10
 801bc38:	00000000 	andeq	r0, r0, r0
 801bc3c:	61460000 	mrsvs	r0, (UNDEF: 70)
 801bc40:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801bc4c <CSWTCH.69>:
 801bc4c:	00000000 	andeq	r0, r0, r0
 801bc50:	00000002 	andeq	r0, r0, r2
 801bc54:	00000002 	andeq	r0, r0, r2
 801bc58:	00000002 	andeq	r0, r0, r2
 801bc5c:	00000002 	andeq	r0, r0, r2
 801bc60:	00000002 	andeq	r0, r0, r2
 801bc64:	00000002 	andeq	r0, r0, r2
 801bc68:	00000004 	andeq	r0, r0, r4
 801bc6c:	00000000 	andeq	r0, r0, r0
 801bc70:	00000005 	andeq	r0, r0, r5

0801bc74 <pixel::s_GPIO_PINs>:
 801bc74:	 	strbvs	r3, [lr, #-4032]	@ 0xfffff040

0801bc76 <NetworkConst::MSG_NETWORK_STARTED>:
 801bc76:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801bc7a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801bc7e:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801bc82:	00646574 	rsbeq	r6, r4, r4, ror r5

0801bc86 <NetworkConst::MSG_NETWORK_INIT>:
 801bc86:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801bc8a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801bc8e:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
	...

0801bc94 <mdns::DOMAIN_DNSSD>:
 801bc94:	65735f09 	ldrbvs	r5, [r3, #-3849]!	@ 0xfffff0f7
 801bc98:	63697672 	cmnvs	r9, #119537664	@ 0x7200000
 801bc9c:	5f077365 	svcpl	0x00077365
 801bca0:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	@ 0xfffffe70
 801bca4:	5f046473 	svcpl	0x00046473
 801bca8:	05706475 	ldrbeq	r6, [r0, #-1141]!	@ 0xfffffb8b
 801bcac:	61636f6c 	cmnvs	r3, ip, ror #30
 801bcb0:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801bd94:	0000001e 	andeq	r0, r0, lr, lsl r0

0801bd98 <mdns::s_Services>:
 801bd98:	0801be60 	stmdaeq	r1, {r5, r6, r9, sl, fp, ip, sp, pc}
 801bd9c:	00000008 	andeq	r0, r0, r8
 801bda0:	00000000 	andeq	r0, r0, r0
 801bda4:	00002905 	andeq	r2, r0, r5, lsl #18
 801bda8:	0801be5a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, fp, ip, sp, pc}
 801bdac:	00000006 	andeq	r0, r0, r6
 801bdb0:	00000000 	andeq	r0, r0, r0
 801bdb4:	00000045 	andeq	r0, r0, r5, asr #32
 801bdb8:	0801be54 	stmdaeq	r1, {r2, r4, r6, r9, sl, fp, ip, sp, pc}
 801bdbc:	00000006 	andeq	r0, r0, r6
 801bdc0:	00000001 	andeq	r0, r0, r1
 801bdc4:	00000050 	andeq	r0, r0, r0, asr r0
 801bdc8:	0801be47 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, fp, ip, sp, pc}
 801bdcc:	0000000d 	andeq	r0, r0, sp
 801bdd0:	00000000 	andeq	r0, r0, r0
 801bdd4:	000015c1 	andeq	r1, r0, r1, asr #11
 801bdd8:	0801be42 	stmdaeq	r1, {r1, r6, r9, sl, fp, ip, sp, pc}
 801bddc:	00000005 	andeq	r0, r0, r5
 801bde0:	00000000 	andeq	r0, r0, r0
 801bde4:	0000007b 	andeq	r0, r0, fp, ror r0
 801bde8:	0801be36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp, ip, sp, pc}
 801bdec:	0000000c 	andeq	r0, r0, ip
 801bdf0:	00000000 	andeq	r0, r0, r0
 801bdf4:	0000138c 	andeq	r1, r0, ip, lsl #7
 801bdf8:	0801be31 	stmdaeq	r1, {r0, r4, r5, r9, sl, fp, ip, sp, pc}
 801bdfc:	00000005 	andeq	r0, r0, r5
	...
 801be08:	0801be2c 	stmdaeq	r1, {r2, r3, r5, r9, sl, fp, ip, sp, pc}
 801be0c:	00000005 	andeq	r0, r0, r5
 801be10:	00000000 	andeq	r0, r0, r0
 801be14:	00000fd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 801be18:	0801be28 	stmdaeq	r1, {r3, r5, r9, sl, fp, ip, sp, pc}
 801be1c:	00000004 	andeq	r0, r0, r4
 801be20:	00000000 	andeq	r0, r0, r0
 801be24:	000013d6 	ldrdeq	r1, [r0], -r6

0801be28 <mdns::DOMAIN_PP>:
 801be28:	70705f03 	rsbsvc	r5, r0, r3, lsl #30

0801be2c <mdns::DOMAIN_DDP>:
 801be2c:	64645f04 	strbtvs	r5, [r4], #-3844	@ 0xfffff0fc
 801be30:	 	svcvs	0x005f0470

0801be31 <mdns::DOMAIN_OSC>:
 801be31:	736f5f04 	cmnvc	pc, #4, 30
 801be35:	 	cmpvs	pc, r3, ror #22

0801be36 <mdns::DOMAIN_MIDI>:
 801be36:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
 801be3a:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	@ 0xfffffe40
 801be3e:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

0801be42 <mdns::DOMAIN_NTP>:
 801be42:	746e5f04 	strbtvc	r5, [lr], #-3844	@ 0xfffff0fc
 801be46:	 	subsvc	r0, pc, #112, 24	@ 0x7000

0801be47 <mdns::DOMAIN_RDMNET_LLRP>:
 801be47:	64725f0c 	ldrbtvs	r5, [r2], #-3852	@ 0xfffff0f4
 801be4b:	74656e6d 	strbtvc	r6, [r5], #-3693	@ 0xfffff193
 801be4f:	726c6c2d 	rsbvc	r6, ip, #11520	@ 0x2d00
 801be53:	 	ldmdavs	pc, {r4, r5, r6, r8, sl}^	@ <UNPREDICTABLE>

0801be54 <mdns::DOMAIN_HTTP>:
 801be54:	74685f05 	strbtvc	r5, [r8], #-3845	@ 0xfffff0fb
 801be58:	 	svcpl	0x00057074

0801be5a <mdns::DOMAIN_TFTP>:
 801be5a:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
 801be5e:	 	svcpl	0x00077074

0801be60 <mdns::DOMAIN_CONFIG>:
 801be60:	6f635f07 	svcvs	0x00635f07
 801be64:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

0801be68 <mdns::DOMAIN_TCP>:
 801be68:	63745f04 	cmnvs	r4, #4, 30
 801be6c:	 	ldrbvc	r0, [pc, #-1136]	@ 801ba04 <RDMHandler::PID_DEFINITIONS+0x13c>

0801be6d <mdns::DOMAIN_UDP>:
 801be6d:	64755f04 	ldrbtvs	r5, [r5], #-3844	@ 0xfffff0fc
 801be71:	 	svcvs	0x006c0570

0801be72 <mdns::DOMAIN_LOCAL>:
 801be72:	636f6c05 	cmnvs	pc, #1280	@ 0x500
 801be76:	 	cdpvs	12, 0, cr6, cr0, cr1, {3}

0801be79 <NetworkParamsConst::NTP_SERVER>:
 801be79:	5f70746e 	svcpl	0x0070746e
 801be7d:	76726573 			@ <UNDEFINED> instruction: 0x76726573
 801be81:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

0801be84 <NetworkParamsConst::HOSTNAME>:
 801be84:	74736f68 	ldrbtvc	r6, [r3], #-3944	@ 0xfffff098
 801be88:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801be8d <NetworkParamsConst::DEFAULT_GATEWAY>:
 801be8d:	61666564 	cmnvs	r6, r4, ror #10
 801be91:	5f746c75 	svcpl	0x00746c75
 801be95:	65746167 	ldrbvs	r6, [r4, #-359]!	@ 0xfffffe99
 801be99:	00796177 	rsbseq	r6, r9, r7, ror r1

0801be9d <NetworkParamsConst::NET_MASK>:
 801be9d:	5f74656e 	svcpl	0x0074656e
 801bea1:	6b73616d 	blvs	9cf445d <__init_array_end+0x1cd7f79>
	...

0801bea6 <NetworkParamsConst::IP_ADDRESS>:
 801bea6:	615f7069 	cmpvs	pc, r9, rrx
 801beaa:	65726464 	ldrbvs	r6, [r2, #-1124]!	@ 0xfffffb9c
 801beae:	 	strvs	r7, [r0], #-883	@ 0xfffffc8d

0801beb1 <NetworkParamsConst::DHCP_RETRY_TIME>:
 801beb1:	70636864 	rsbvc	r6, r3, r4, ror #16
 801beb5:	7465725f 	strbtvc	r7, [r5], #-607	@ 0xfffffda1
 801beb9:	745f7972 	ldrbvc	r7, [pc], #-2418	@ 801bec1 <NetworkParamsConst::USE_DHCP>
 801bebd:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801bec1 <NetworkParamsConst::USE_DHCP>:
 801bec1:	5f657375 	svcpl	0x00657375
 801bec5:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801beca <NetworkParamsConst::FILE_NAME>:
 801beca:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801bece:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801bed2:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801bed8 <pArray>:
 801bed8:	0801bf56 	stmdaeq	r1, {r1, r2, r4, r6, r8, r9, sl, fp, ip, sp, pc}
 801bedc:	0801bf4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, fp, ip, sp, pc}
 801bee0:	0801bea6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, fp, ip, sp, pc}
 801bee4:	0801bf43 	stmdaeq	r1, {r0, r1, r6, r8, r9, sl, fp, ip, sp, pc}
 801bee8:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801beec:	0801bf36 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, pc}
 801bef0:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801bef4:	0801be84 	stmdaeq	r1, {r2, r7, r9, sl, fp, ip, sp, pc}
 801bef8:	0801c163 	stmdaeq	r1, {r0, r1, r5, r6, r8, lr, pc}
 801befc:	0801c173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, lr, pc}
 801bf00:	0801c183 	stmdaeq	r1, {r0, r1, r7, r8, lr, pc}
 801bf04:	0801c193 	stmdaeq	r1, {r0, r1, r4, r7, r8, lr, pc}
 801bf08:	0801be9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, pc}
 801bf0c:	0801c151 	stmdaeq	r1, {r0, r4, r6, r8, lr, pc}
 801bf10:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801bf14:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801bf18:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801bf1c:	08018878 	stmdaeq	r1, {r3, r4, r5, r6, fp, pc}
 801bf20:	0801be8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, ip, sp, pc}
 801bf24:	0801bf28 	stmdaeq	r1, {r3, r5, r8, r9, sl, fp, ip, sp, pc}

0801bf28 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801bf28:	5f786d64 	svcpl	0x00786d64
 801bf2c:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801bf30:	6f697463 	svcvs	0x00697463
 801bf34:	 	cmnvs	r1, #110	@ 0x6e

0801bf36 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801bf36:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801bf3a:	705f6576 	subsvc	r6, pc, r6, ror r5	@ <UNPREDICTABLE>
 801bf3e:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
	...

0801bf43 <DisplayUdfParamsConst::VERSION>:
 801bf43:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801bf47:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801bf4b <DisplayUdfParamsConst::BOARD_NAME>:
 801bf4b:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 801bf4f:	616e5f64 	cmnvs	lr, r4, ror #30
 801bf53:	 	strvc	r6, [r0], #-1389	@ 0xfffffa93

0801bf56 <DisplayUdfParamsConst::TITLE>:
 801bf56:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801bf5a:	 	stclvs	0, cr0, [r6], #-404	@ 0xfffffe6c

0801bf5c <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801bf5c:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801bf60:	7265765f 	rsbvc	r7, r5, #99614720	@ 0x5f00000
 801bf64:	61636974 	smcvs	13972	@ 0x3694
 801bf68:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801bf6c <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801bf6c:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
 801bf70:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801bf74:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 801ba0f <RDMHandler::PID_DEFINITIONS+0x147>
 801bf78:	 	mcrvs	0, 3, r0, cr9, cr4, {3}

0801bf7a <DisplayUdfParamsConst::INTENSITY>:
 801bf7a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801bf7e:	7469736e 	strbtvc	r7, [r9], #-878	@ 0xfffffc92
 801bf82:	 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^

0801bf84 <DisplayUdfParamsConst::FILE_NAME>:
 801bf84:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801bf88:	2e79616c 	rpwcsez	f6, f1, #4.0
 801bf8c:	00747874 	rsbseq	r7, r4, r4, ror r8

0801bf90 <s_aStorSize>:
 801bf90:	00000060 	andeq	r0, r0, r0, rrx
 801bf94:	00000020 	andeq	r0, r0, r0, lsr #32
 801bf98:	00000040 	andeq	r0, r0, r0, asr #32
 801bf9c:	00000040 	andeq	r0, r0, r0, asr #32
 801bfa0:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfa4:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfa8:	000001e0 	andeq	r0, r0, r0, ror #3
 801bfac:	00000040 	andeq	r0, r0, r0, asr #32
 801bfb0:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfb4:	00000060 	andeq	r0, r0, r0, rrx
 801bfb8:	00000030 	andeq	r0, r0, r0, lsr r0
 801bfbc:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfc0:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
 801bfc4:	00000030 	andeq	r0, r0, r0, lsr r0
 801bfc8:	00000040 	andeq	r0, r0, r0, asr #32
 801bfcc:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfd0:	00000060 	andeq	r0, r0, r0, rrx
 801bfd4:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfd8:	00000400 	andeq	r0, r0, r0, lsl #8
 801bfdc:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfe0:	00000020 	andeq	r0, r0, r0, lsr #32
 801bfe4:	00000040 	andeq	r0, r0, r0, asr #32
 801bfe8:	00000060 	andeq	r0, r0, r0, rrx
 801bfec:	00000020 	andeq	r0, r0, r0, lsr #32
 801bff0:	00000020 	andeq	r0, r0, r0, lsr #32
 801bff4:	00000140 	andeq	r0, r0, r0, asr #2
 801bff8:	00000020 	andeq	r0, r0, r0, lsr #32

0801bffc <s_aSignature>:
 801bffc:	01567641 	cmpeq	r6, r1, asr #12

0801c000 <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
 801c000:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
 801c004:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
 801c008:	2d051e05 	stccs	14, cr1, [r5, #-20]	@ 0xffffffec
 801c00c:	2d081e06 	stccs	14, cr1, [r8, #-24]	@ 0xffffffe8
 801c010:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
 801c014:	 	ldrbtvc	r2, [r5], #-3340	@ 0xfffff2f4

0801c016 <EnvParamsConst::UTC_OFFSET>:
 801c016:	5f637475 	svcpl	0x00637475
 801c01a:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801c01e:	 	strvs	r7, [r0, #-1125]	@ 0xfffffb9b

0801c021 <EnvParamsConst::FILE_NAME>:
 801c021:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 801c025:	00747874 	rsbseq	r7, r4, r4, ror r8

0801c029 <DevicesParamsConst::TEST_PATTERN>:
 801c029:	74736574 	ldrbtvc	r6, [r3], #-1396	@ 0xfffffa8c
 801c02d:	7461705f 	strbtvc	r7, [r1], #-95	@ 0xffffffa1
 801c031:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801c036 <DevicesParamsConst::ACTIVE_OUT>:
 801c036:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801c03a:	6f5f6576 	svcvs	0x005f6576
 801c03e:	 	smlsdxvs	r0, r5, r4, r7

0801c041 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801c041:	626f6c67 	rsbvs	r6, pc, #26368	@ 0x6700
 801c045:	625f6c61 	subsvs	r6, pc, #24832	@ 0x6100
 801c049:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801c04d:	73656e74 	cmnvc	r5, #116, 28	@ 0x740
 801c051:	 	stclvs	0, cr0, [r3], #-460	@ 0xfffffe34

0801c053 <DevicesParamsConst::SPI_SPEED_HZ>:
 801c053:	636f6c63 	cmnvs	pc, #25344	@ 0x6300
 801c057:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801c05b:	5f646565 	svcpl	0x00646565
 801c05f:	 			@ <UNDEFINED> instruction: 0x6c007a68

0801c062 <DevicesParamsConst::GROUPING_COUNT>:
 801c062:	5f64656c 	svcpl	0x0064656c
 801c066:	756f7267 	strbvc	r7, [pc, #-615]!	@ 801be07 <mdns::s_Services+0x6f>
 801c06a:	6f635f70 	svcvs	0x00635f70
 801c06e:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801c072 <DevicesParamsConst::COUNT>:
 801c072:	5f64656c 	svcpl	0x0064656c
 801c076:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801c07a:	 	strbvs	r0, [ip, #-116]!	@ 0xffffff8c

0801c07c <DevicesParamsConst::LED_T1H>:
 801c07c:	5f64656c 	svcpl	0x0064656c
 801c080:	00683174 	rsbeq	r3, r8, r4, ror r1

0801c084 <DevicesParamsConst::LED_T0H>:
 801c084:	5f64656c 	svcpl	0x0064656c
 801c088:	00683074 	rsbeq	r3, r8, r4, ror r0

0801c08c <DevicesParamsConst::MAP>:
 801c08c:	5f64656c 	svcpl	0x0064656c
 801c090:	5f626772 	svcpl	0x00626772
 801c094:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801c098:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801c09c <DevicesParamsConst::TYPE>:
 801c09c:	5f64656c 	svcpl	0x0064656c
 801c0a0:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
	...

0801c0a5 <DevicesParamsConst::FILE_NAME>:
 801c0a5:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801c0a9:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801c0ad:	00747874 	rsbseq	r7, r4, r4, ror r8

0801c0b1 <LightSetParamsConst::START_UNI_PORT>:
 801c0b1:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c0b5:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c0b9:	6f705f69 	svcvs	0x00705f69
 801c0bd:	315f7472 	cmpcc	pc, r2, ror r4	@ <UNPREDICTABLE>
 801c0c1:	00000000 	andeq	r0, r0, r0
 801c0c5:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c0c9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c0cd:	6f705f69 	svcvs	0x00705f69
 801c0d1:	325f7472 	subscc	r7, pc, #1912602624	@ 0x72000000
 801c0d5:	00000000 	andeq	r0, r0, r0
 801c0d9:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c0dd:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c0e1:	6f705f69 	svcvs	0x00705f69
 801c0e5:	335f7472 	cmpcc	pc, #1912602624	@ 0x72000000
 801c0e9:	00000000 	andeq	r0, r0, r0
 801c0ed:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c0f1:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c0f5:	6f705f69 	svcvs	0x00705f69
 801c0f9:	345f7472 	ldrbcc	r7, [pc], #-1138	@ 801c101 <LightSetParamsConst::START_UNI_PORT+0x50>
 801c0fd:	00000000 	andeq	r0, r0, r0
 801c101:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c105:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c109:	6f705f69 	svcvs	0x00705f69
 801c10d:	355f7472 	ldrbcc	r7, [pc, #-1138]	@ 801bca3 <mdns::DOMAIN_DNSSD+0xf>
 801c111:	00000000 	andeq	r0, r0, r0
 801c115:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c119:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c11d:	6f705f69 	svcvs	0x00705f69
 801c121:	365f7472 			@ <UNDEFINED> instruction: 0x365f7472
 801c125:	00000000 	andeq	r0, r0, r0
 801c129:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c12d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c131:	6f705f69 	svcvs	0x00705f69
 801c135:	375f7472 			@ <UNDEFINED> instruction: 0x375f7472
 801c139:	00000000 	andeq	r0, r0, r0
 801c13d:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c141:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801c145:	6f705f69 	svcvs	0x00705f69
 801c149:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 801c14d:	00000000 	andeq	r0, r0, r0

0801c151 <LightSetParamsConst::DMX_START_ADDRESS>:
 801c151:	5f786d64 	svcpl	0x00786d64
 801c155:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801c159:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 801c15d:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 801c161:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

0801c163 <LightSetParamsConst::UNIVERSE_PORT>:
 801c163:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801c167:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801c16b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801c16f:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801c173:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801c177:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801c17b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801c17f:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801c183:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801c187:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801c18b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801c18f:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801c193:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801c197:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801c19b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801c19f:	00645f74 	rsbeq	r5, r4, r4, ror pc
	...

0801c1a4 <vtable for Ssd1306>:
	...
 801c1ac:	08014c11 	stmdaeq	r1, {r0, r4, sl, fp, lr}
 801c1b0:	08014c3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, fp, lr}
 801c1b4:	08014f75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, fp, lr}
 801c1b8:	08014f09 	stmdaeq	r1, {r0, r3, r8, r9, sl, fp, lr}
 801c1bc:	08014ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp, lr}
 801c1c0:	08014c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, lr}
 801c1c4:	08014c8d 	stmdaeq	r1, {r0, r2, r3, r7, sl, fp, lr}
 801c1c8:	08014db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, lr}
 801c1cc:	08014d6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sl, fp, lr}
 801c1d0:	08014c13 	stmdaeq	r1, {r0, r1, r4, sl, fp, lr}
 801c1d4:	08014e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, lr}
 801c1d8:	08014e25 	stmdaeq	r1, {r0, r2, r5, r9, sl, fp, lr}
 801c1dc:	08014e3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, fp, lr}
 801c1e0:	08014c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, lr}

0801c1e4 <oled_128x32_init>:
 801c1e4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801c1e8:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801c1ec:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801c1f0:	02dac8a1 	sbcseq	ip, sl, #10551296	@ 0xa10000
 801c1f4:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801c1f8:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801c1fc <oled_128x64_init>:
 801c1fc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801c200:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801c204:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801c208:	12dac8a1 	sbcsne	ip, sl, #10551296	@ 0xa10000
 801c20c:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801c210:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801c214 <_OledFont8x6>:
 801c214:	00000040 	andeq	r0, r0, r0, asr #32
 801c218:	40000000 	andmi	r0, r0, r0
 801c21c:	005f0000 	subseq	r0, pc, r0
 801c220:	00400000 	subeq	r0, r0, r0
 801c224:	00070007 	andeq	r0, r7, r7
 801c228:	7f144000 	svcvc	0x00144000
 801c22c:	00147f14 	andseq	r7, r4, r4, lsl pc
 801c230:	7f2a2440 	svcvc	0x002a2440
 801c234:	4000122a 	andmi	r1, r0, sl, lsr #4
 801c238:	64081323 	strvs	r1, [r8], #-803	@ 0xfffffcdd
 801c23c:	36400062 	strbcc	r0, [r0], -r2, rrx
 801c240:	50205649 	eorpl	r5, r0, r9, asr #12
 801c244:	08004000 	stmdaeq	r0, {lr}
 801c248:	00000307 	andeq	r0, r0, r7, lsl #6
 801c24c:	221c0040 	andscs	r0, ip, #64	@ 0x40
 801c250:	40000041 	andmi	r0, r0, r1, asr #32
 801c254:	1c224100 	stfnes	f4, [r2], #-0
 801c258:	2a400000 	bcs	901c260 <__init_array_end+0xfffd7c>
 801c25c:	2a1c7f1c 	bcs	873bed4 <__init_array_end+0x71f9f0>
 801c260:	08084000 	stmdaeq	r8, {lr}
 801c264:	0008083e 	andeq	r0, r8, lr, lsr r8
 801c268:	70800040 	addvc	r0, r0, r0, asr #32
 801c26c:	40000030 	andmi	r0, r0, r0, lsr r0
 801c270:	08080808 	stmdaeq	r8, {r3, fp}
 801c274:	00400008 	subeq	r0, r0, r8
 801c278:	00606000 	rsbeq	r6, r0, r0
 801c27c:	10204000 	eorne	r4, r0, r0
 801c280:	00020408 	andeq	r0, r2, r8, lsl #8
 801c284:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801c288:	40003e45 	andmi	r3, r0, r5, asr #28
 801c28c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801c290:	72400000 	subvc	r0, r0, #0
 801c294:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801c298:	41214000 			@ <UNDEFINED> instruction: 0x41214000
 801c29c:	00334d49 	eorseq	r4, r3, r9, asr #26
 801c2a0:	12141840 	andsne	r1, r4, #64, 16	@ 0x400000
 801c2a4:	4000107f 	andmi	r1, r0, pc, ror r0
 801c2a8:	45454527 	strbmi	r4, [r5, #-1319]	@ 0xfffffad9
 801c2ac:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801c2b0:	3149494a 	cmpcc	r9, sl, asr #18
 801c2b4:	21414000 	mrscs	r4, (UNDEF: 65)
 801c2b8:	00070911 	andeq	r0, r7, r1, lsl r9
 801c2bc:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801c2c0:	40003649 	andmi	r3, r0, r9, asr #12
 801c2c4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801c2c8:	0040001e 	subeq	r0, r0, lr, lsl r0
 801c2cc:	00001400 	andeq	r1, r0, r0, lsl #8
 801c2d0:	40004000 	andmi	r4, r0, r0
 801c2d4:	00000034 	andeq	r0, r0, r4, lsr r0
 801c2d8:	14080040 	strne	r0, [r8], #-64	@ 0xffffffc0
 801c2dc:	40004122 	andmi	r4, r0, r2, lsr #2
 801c2e0:	14141414 	ldrne	r1, [r4], #-1044	@ 0xfffffbec
 801c2e4:	00400014 	subeq	r0, r0, r4, lsl r0
 801c2e8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801c2ec:	01024000 	mrseq	r4, (UNDEF: 2)
 801c2f0:	00060959 	andeq	r0, r6, r9, asr r9
 801c2f4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	@ 0xffffff00
 801c2f8:	40004e59 	andmi	r4, r0, r9, asr lr
 801c2fc:	1211127c 	andsne	r1, r1, #124, 4	@ 0xc0000007
 801c300:	7f40007c 	svcvc	0x0040007c
 801c304:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801c308:	413e4000 	teqmi	lr, r0
 801c30c:	00224141 	eoreq	r4, r2, r1, asr #2
 801c310:	41417f40 	cmpmi	r1, r0, asr #30
 801c314:	40003e41 	andmi	r3, r0, r1, asr #28
 801c318:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801c31c:	7f400041 	svcvc	0x00400041
 801c320:	01090909 	tsteq	r9, r9, lsl #18
 801c324:	413e4000 	teqmi	lr, r0
 801c328:	00735141 	rsbseq	r5, r3, r1, asr #2
 801c32c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801c330:	40007f08 	andmi	r7, r0, r8, lsl #30
 801c334:	417f4100 	cmnmi	pc, r0, lsl #2
 801c338:	20400000 	subcs	r0, r0, r0
 801c33c:	013f4140 	teqeq	pc, r0, asr #2
 801c340:	087f4000 	ldmdaeq	pc!, {lr}^	@ <UNPREDICTABLE>
 801c344:	00412214 	subeq	r2, r1, r4, lsl r2
 801c348:	40407f40 	submi	r7, r0, r0, asr #30
 801c34c:	40004040 	andmi	r4, r0, r0, asr #32
 801c350:	021c027f 	andseq	r0, ip, #-268435449	@ 0xf0000007
 801c354:	7f40007f 	svcvc	0x0040007f
 801c358:	7f100804 	svcvc	0x00100804
 801c35c:	413e4000 	teqmi	lr, r0
 801c360:	003e4141 	eorseq	r4, lr, r1, asr #2
 801c364:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801c368:	40000609 	andmi	r0, r0, r9, lsl #12
 801c36c:	2151413e 	cmpcs	r1, lr, lsr r1
 801c370:	7f40005e 	svcvc	0x0040005e
 801c374:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801c378:	49264000 	stmdbmi	r6!, {lr}
 801c37c:	00324949 	eorseq	r4, r2, r9, asr #18
 801c380:	7f010340 	svcvc	0x00010340
 801c384:	40000301 	andmi	r0, r0, r1, lsl #6
 801c388:	4040403f 	submi	r4, r0, pc, lsr r0
 801c38c:	1f40003f 	svcne	0x0040003f
 801c390:	1f204020 	svcne	0x00204020
 801c394:	403f4000 	eorsmi	r4, pc, r0
 801c398:	003f4038 	eorseq	r4, pc, r8, lsr r0	@ <UNPREDICTABLE>
 801c39c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801c3a0:	40006314 	andmi	r6, r0, r4, lsl r3
 801c3a4:	04780403 	ldrbteq	r0, [r8], #-1027	@ 0xfffffbfd
 801c3a8:	61400003 	cmpvs	r0, r3
 801c3ac:	434d4959 	movtmi	r4, #55641	@ 0xd959
 801c3b0:	7f004000 	svcvc	0x00004000
 801c3b4:	00414141 	subeq	r4, r1, r1, asr #2
 801c3b8:	08040240 	stmdaeq	r4, {r6, r9}
 801c3bc:	40002010 	andmi	r2, r0, r0, lsl r0
 801c3c0:	41414100 	mrsmi	r4, (UNDEF: 81)
 801c3c4:	0440007f 	strbeq	r0, [r0], #-127	@ 0xffffff81
 801c3c8:	04020102 	streq	r0, [r2], #-258	@ 0xfffffefe
 801c3cc:	40404000 	submi	r4, r0, r0
 801c3d0:	00404040 	subeq	r4, r0, r0, asr #32
 801c3d4:	07030040 	streq	r0, [r3, -r0, asr #32]
 801c3d8:	40000008 	andmi	r0, r0, r8
 801c3dc:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801c3e0:	7f400040 	svcvc	0x00400040
 801c3e4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801c3e8:	44384000 	ldrtmi	r4, [r8], #-0
 801c3ec:	00284444 	eoreq	r4, r8, r4, asr #8
 801c3f0:	44443840 	strbmi	r3, [r4], #-2112	@ 0xfffff7c0
 801c3f4:	40007f28 	andmi	r7, r0, r8, lsr #30
 801c3f8:	54545438 	ldrbpl	r5, [r4], #-1080	@ 0xfffffbc8
 801c3fc:	00400018 	subeq	r0, r0, r8, lsl r0
 801c400:	02097e08 	andeq	r7, r9, #8, 28	@ 0x80
 801c404:	a4184000 	ldrge	r4, [r8], #-0
 801c408:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801c40c:	04087f40 	streq	r7, [r8], #-3904	@ 0xfffff0c0
 801c410:	40007804 	andmi	r7, r0, r4, lsl #16
 801c414:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801c418:	20400000 	subcs	r0, r0, r0
 801c41c:	003d4040 	eorseq	r4, sp, r0, asr #32
 801c420:	107f4000 	rsbsne	r4, pc, r0
 801c424:	00004428 	andeq	r4, r0, r8, lsr #8
 801c428:	7f410040 	svcvc	0x00410040
 801c42c:	40000040 	andmi	r0, r0, r0, asr #32
 801c430:	0478047c 	ldrbteq	r0, [r8], #-1148	@ 0xfffffb84
 801c434:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801c438:	78040408 	stmdavc	r4, {r3, sl}
 801c43c:	44384000 	ldrtmi	r4, [r8], #-0
 801c440:	00384444 	eorseq	r4, r8, r4, asr #8
 801c444:	2418fc40 	ldrcs	pc, [r8], #-3136	@ 0xfffff3c0
 801c448:	40001824 	andmi	r1, r0, r4, lsr #16
 801c44c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801c450:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801c454:	08040408 	stmdaeq	r4, {r3, sl}
 801c458:	54484000 	strbpl	r4, [r8], #-0
 801c45c:	00245454 	eoreq	r5, r4, r4, asr r4
 801c460:	3f040440 	svccc	0x00040440
 801c464:	40002444 	andmi	r2, r0, r4, asr #8
 801c468:	2040403c 	subcs	r4, r0, ip, lsr r0
 801c46c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801c470:	1c204020 	stcne	0, cr4, [r0], #-128	@ 0xffffff80
 801c474:	403c4000 	eorsmi	r4, ip, r0
 801c478:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801c47c:	10284440 	eorne	r4, r8, r0, asr #8
 801c480:	40004428 	andmi	r4, r0, r8, lsr #8
 801c484:	9090904c 	addsls	r9, r0, ip, asr #32
 801c488:	4440007c 	strbmi	r0, [r0], #-124	@ 0xffffff84
 801c48c:	444c5464 	strbmi	r5, [ip], #-1124	@ 0xfffffb9c
 801c490:	08004000 	stmdaeq	r0, {lr}
 801c494:	00004136 	andeq	r4, r0, r6, lsr r1
 801c498:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801c49c:	40000000 	andmi	r0, r0, r0
 801c4a0:	08364100 	ldmdaeq	r6!, {r8, lr}
 801c4a4:	02400000 	subeq	r0, r0, #0
 801c4a8:	02040201 	andeq	r0, r4, #268435456	@ 0x10000000
 801c4ac:	263c4000 	ldrtcs	r4, [ip], -r0
 801c4b0:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801c4b4 <days_of_month>:
 801c4b4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 801c4bc:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4c0:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c4c4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4c8:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c4cc:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4d0:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4d4:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c4d8:	0000001f 	andeq	r0, r0, pc, lsl r0
 801c4dc:	0000001e 	andeq	r0, r0, lr, lsl r0
 801c4e0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .tcmsram:

10008000 <net::s_dhcp_message>:
	...

10008224 <net::s_id>:
10008224:	00000000 	andeq	r0, r0, r0

10008228 <net::s_groups>:
	...

10008348 <net::s_multicast_mac>:
	...

10008350 <net::s_leave>:
	...

10008380 <net::s_report>:
	...

100083b0 <net::s_tcp>:
	...

1000899c <net::s_id>:
1000899c:	00000000 	andeq	r0, r0, r0

100089a0 <net::s_Port>:
	...

100096a8 <net::s_multicast_mac>:
	...

100096b0 <net::s_id>:
100096b0:	00000000 	andeq	r0, r0, r0

100096b4 <net::s_send_packet>:
	...

10009ca0 <net::s_data>:
	...

1000cb00 <net::s_Port>:
	...

1000cb10 <net::s_ArpRecords>:
	...

Disassembly of section .data:

20000000 <SystemCoreClock>:
20000000:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}

20000004 <lfsr>:
20000004:	0000ace1 	andeq	sl, r0, r1, ror #25

20000008 <s_block_bucket>:
20000008:	00000010 	andeq	r0, r0, r0, lsl r0
2000000c:	00000000 	andeq	r0, r0, r0
20000010:	00000020 	andeq	r0, r0, r0, lsr #32
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000040 	andeq	r0, r0, r0, asr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000060 	andeq	r0, r0, r0, rrx
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000080 	andeq	r0, r0, r0, lsl #1
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000100 	andeq	r0, r0, r0, lsl #2
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000140 	andeq	r0, r0, r0, asr #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000180 	andeq	r0, r0, r0, lsl #3
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000200 	andeq	r0, r0, r0, lsl #4
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000300 	andeq	r0, r0, r0, lsl #6
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000400 	andeq	r0, r0, r0, lsl #8
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000070 <next_block>:
20000070:	1000cc90 	mulne	r0, r0, ip

Disassembly of section .sram2:

20020000 <pixel::s_DmaBuffer>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
