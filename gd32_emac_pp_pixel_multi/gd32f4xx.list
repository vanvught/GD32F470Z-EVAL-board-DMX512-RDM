
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10008000 	andne	r8, r0, r0
 8008004:	0800938d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, ip, pc}
 8008008:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800800c:	080093df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008010:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008014:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008018:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
	...
 800802c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008030:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800803c:	08015a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, ip, lr}
 8008040:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008044:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008048:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800804c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008050:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008054:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008058:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800805c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008060:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008064:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008068:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800806c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008070:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008074:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008078:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800807c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008080:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008084:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008088:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800808c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008090:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008094:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008098:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800809c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080a0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080a4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080a8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080ac:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080b0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080b4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080b8:	0800e8b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, sp, lr, pc}
 80080bc:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080c0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080c4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080c8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080cc:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080d0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080d4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080d8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080dc:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080e0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080e4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080e8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080ec:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080f0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080f4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080f8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80080fc:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008100:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008104:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008108:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800810c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008110:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008114:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008118:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800811c:	08015959 	stmdaeq	r1, {r0, r3, r4, r6, r8, fp, ip, lr}
 8008120:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008124:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008128:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800812c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008130:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008134:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008138:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800813c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008140:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008144:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008148:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800814c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008150:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008154:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008158:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800815c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008160:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008164:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008168:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800816c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008170:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008174:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008178:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008184:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008188:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800818c:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008190:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008194:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8008198:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80081a4:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 80081a8:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}

Disassembly of section .text:

080081ac <net::igmp_init()>:
 80081ac:	b538      	push	{r3, r4, r5, lr}
 80081ae:	f009 f8a7 	bl	8011300 <net::igmp_set_ip()>
 80081b2:	492c      	ldr	r1, [pc, #176]	@ (8008264 <net::igmp_init()+0xb8>)
 80081b4:	4b2c      	ldr	r3, [pc, #176]	@ (8008268 <net::igmp_init()+0xbc>)
 80081b6:	4a2d      	ldr	r2, [pc, #180]	@ (800826c <net::igmp_init()+0xc0>)
 80081b8:	2401      	movs	r4, #1
 80081ba:	205e      	movs	r0, #94	@ 0x5e
 80081bc:	800c      	strh	r4, [r1, #0]
 80081be:	7088      	strb	r0, [r1, #2]
 80081c0:	2106      	movs	r1, #6
 80081c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80081c6:	f803 0b01 	strb.w	r0, [r3], #1
 80081ca:	3901      	subs	r1, #1
 80081cc:	d1f9      	bne.n	80081c2 <net::igmp_init()+0x16>
 80081ce:	4a28      	ldr	r2, [pc, #160]	@ (8008270 <net::igmp_init()+0xc4>)
 80081d0:	4828      	ldr	r0, [pc, #160]	@ (8008274 <net::igmp_init()+0xc8>)
 80081d2:	60d0      	str	r0, [r2, #12]
 80081d4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80081d8:	4b27      	ldr	r3, [pc, #156]	@ (8008278 <net::igmp_init()+0xcc>)
 80081da:	8210      	strh	r0, [r2, #16]
 80081dc:	f240 4094 	movw	r0, #1172	@ 0x494
 80081e0:	8450      	strh	r0, [r2, #34]	@ 0x22
 80081e2:	4c26      	ldr	r4, [pc, #152]	@ (800827c <net::igmp_init()+0xd0>)
 80081e4:	4826      	ldr	r0, [pc, #152]	@ (8008280 <net::igmp_init()+0xd4>)
 80081e6:	8491      	strh	r1, [r2, #36]	@ 0x24
 80081e8:	2516      	movs	r5, #22
 80081ea:	6154      	str	r4, [r2, #20]
 80081ec:	84d5      	strh	r5, [r2, #38]	@ 0x26
 80081ee:	6018      	str	r0, [r3, #0]
 80081f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80081f4:	2006      	movs	r0, #6
 80081f6:	491d      	ldr	r1, [pc, #116]	@ (800826c <net::igmp_init()+0xc0>)
 80081f8:	809a      	strh	r2, [r3, #4]
 80081fa:	181a      	adds	r2, r3, r0
 80081fc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008200:	f802 5b01 	strb.w	r5, [r2], #1
 8008204:	3801      	subs	r0, #1
 8008206:	d1f9      	bne.n	80081fc <net::igmp_init()+0x50>
 8008208:	4a1e      	ldr	r2, [pc, #120]	@ (8008284 <net::igmp_init()+0xd8>)
 800820a:	615c      	str	r4, [r3, #20]
 800820c:	6811      	ldr	r1, [r2, #0]
 800820e:	4c1e      	ldr	r4, [pc, #120]	@ (8008288 <net::igmp_init()+0xdc>)
 8008210:	f8d1 20a0 	ldr.w	r2, [r1, #160]	@ 0xa0
 8008214:	8498      	strh	r0, [r3, #36]	@ 0x24
 8008216:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800821a:	4d16      	ldr	r5, [pc, #88]	@ (8008274 <net::igmp_init()+0xc8>)
 800821c:	f8c3 401e 	str.w	r4, [r3, #30]
 8008220:	8218      	strh	r0, [r3, #16]
 8008222:	2417      	movs	r4, #23
 8008224:	f240 4094 	movw	r0, #1172	@ 0x494
 8008228:	2a07      	cmp	r2, #7
 800822a:	84dc      	strh	r4, [r3, #38]	@ 0x26
 800822c:	60dd      	str	r5, [r3, #12]
 800822e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8008230:	d904      	bls.n	800823c <net::igmp_init()+0x90>
 8008232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008236:	4815      	ldr	r0, [pc, #84]	@ (800828c <net::igmp_init()+0xe0>)
 8008238:	f00c bb26 	b.w	8014888 <console_error>
 800823c:	4b14      	ldr	r3, [pc, #80]	@ (8008290 <net::igmp_init()+0xe4>)
 800823e:	f8d1 40a4 	ldr.w	r4, [r1, #164]	@ 0xa4
 8008242:	6818      	ldr	r0, [r3, #0]
 8008244:	1c55      	adds	r5, r2, #1
 8008246:	1c63      	adds	r3, r4, #1
 8008248:	f8c1 30a4 	str.w	r3, [r1, #164]	@ 0xa4
 800824c:	f8c1 50a0 	str.w	r5, [r1, #160]	@ 0xa0
 8008250:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8008254:	3064      	adds	r0, #100	@ 0x64
 8008256:	2164      	movs	r1, #100	@ 0x64
 8008258:	e9c3 0108 	strd	r0, r1, [r3, #32]
 800825c:	4a0d      	ldr	r2, [pc, #52]	@ (8008294 <net::igmp_init()+0xe8>)
 800825e:	e9c3 420a 	strd	r4, r2, [r3, #40]	@ 0x28
 8008262:	bd38      	pop	{r3, r4, r5, pc}
 8008264:	10008348 	andne	r8, r0, r8, asr #6
 8008268:	10008386 	andne	r8, r0, r6, lsl #7
 800826c:	20009b64 	andcs	r9, r0, r4, ror #22
 8008270:	10008380 	andne	r8, r0, r0, lsl #7
 8008274:	00460008 	subeq	r0, r6, r8
 8008278:	10008350 	andne	r8, r0, r0, asr r3
 800827c:	02010040 	andeq	r0, r1, #64	@ 0x40
 8008280:	005e0001 	subseq	r0, lr, r1
 8008284:	20009d00 	andcs	r9, r0, r0, lsl #26
 8008288:	020000e0 	andeq	r0, r0, #224	@ 0xe0
 800828c:	08018648 	stmdaeq	r1, {r3, r6, r9, sl, pc}
 8008290:	200145c8 	andcs	r4, r1, r8, asr #11
 8008294:	080112ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, ip}

08008298 <net::igmp_shutdown()>:
 8008298:	b538      	push	{r3, r4, r5, lr}
 800829a:	4d05      	ldr	r5, [pc, #20]	@ (80082b0 <net::igmp_shutdown()+0x18>)
 800829c:	2400      	movs	r4, #0
 800829e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 80082a2:	b108      	cbz	r0, 80082a8 <net::igmp_shutdown()+0x10>
 80082a4:	f009 f85a 	bl	801135c <net::igmp_leave(unsigned long)>
 80082a8:	3401      	adds	r4, #1
 80082aa:	2c24      	cmp	r4, #36	@ 0x24
 80082ac:	d1f7      	bne.n	800829e <net::igmp_shutdown()+0x6>
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	10008228 	andne	r8, r0, r8, lsr #4

080082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
 80082b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b8:	4d19      	ldr	r5, [pc, #100]	@ (8008320 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x6c>)
 80082ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082be:	7e2c      	ldrb	r4, [r5, #24]
 80082c0:	461f      	mov	r7, r3
 80082c2:	7deb      	ldrb	r3, [r5, #23]
 80082c4:	0424      	lsls	r4, r4, #16
 80082c6:	eb04 2403 	add.w	r4, r4, r3, lsl #8
 80082ca:	7e6b      	ldrb	r3, [r5, #25]
 80082cc:	3402      	adds	r4, #2
 80082ce:	eb04 6403 	add.w	r4, r4, r3, lsl #24
 80082d2:	4682      	mov	sl, r0
 80082d4:	460e      	mov	r6, r1
 80082d6:	4690      	mov	r8, r2
 80082d8:	612c      	str	r4, [r5, #16]
 80082da:	f000 f8b5 	bl	8008448 <net::arp_init()>
 80082de:	f000 f951 	bl	8008584 <net::ip_init()>
 80082e2:	f1ba 0f01 	cmp.w	sl, #1
 80082e6:	7eab      	ldrb	r3, [r5, #26]
 80082e8:	d115      	bne.n	8008316 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x62>
 80082ea:	f043 0301 	orr.w	r3, r3, #1
 80082ee:	76ab      	strb	r3, [r5, #26]
 80082f0:	f899 3000 	ldrb.w	r3, [r9]
 80082f4:	b11b      	cbz	r3, 80082fe <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x4a>
 80082f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082fa:	f008 be09 	b.w	8010f10 <net::dhcp_start()>
 80082fe:	b12e      	cbz	r6, 800830c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x58>
 8008300:	4640      	mov	r0, r8
 8008302:	f009 f965 	bl	80115d0 <net::netif_set_netmask(net::ip_addr)>
 8008306:	4638      	mov	r0, r7
 8008308:	f009 f976 	bl	80115f8 <net::netif_set_gw(net::ip_addr)>
 800830c:	4630      	mov	r0, r6
 800830e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008312:	f009 b8a3 	b.w	801145c <net::net_set_primary_ip(net::ip_addr)>
 8008316:	f023 0301 	bic.w	r3, r3, #1
 800831a:	76ab      	strb	r3, [r5, #26]
 800831c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008320:	20009b50 	andcs	r9, r0, r0, asr fp

08008324 <net::tcp_init()>:
 8008324:	4a07      	ldr	r2, [pc, #28]	@ (8008344 <net::tcp_init()+0x20>)
 8008326:	4908      	ldr	r1, [pc, #32]	@ (8008348 <net::tcp_init()+0x24>)
 8008328:	2306      	movs	r3, #6
 800832a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800832e:	f802 0b01 	strb.w	r0, [r2], #1
 8008332:	3b01      	subs	r3, #1
 8008334:	d1f9      	bne.n	800832a <net::tcp_init()+0x6>
 8008336:	4b05      	ldr	r3, [pc, #20]	@ (800834c <net::tcp_init()+0x28>)
 8008338:	4905      	ldr	r1, [pc, #20]	@ (8008350 <net::tcp_init()+0x2c>)
 800833a:	4a06      	ldr	r2, [pc, #24]	@ (8008354 <net::tcp_init()+0x30>)
 800833c:	60d9      	str	r1, [r3, #12]
 800833e:	615a      	str	r2, [r3, #20]
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	100083b6 			@ <UNDEFINED> instruction: 0x100083b6
 8008348:	20009b64 	andcs	r9, r0, r4, ror #22
 800834c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8008350:	00450008 	subeq	r0, r5, r8
 8008354:	06400040 	strbeq	r0, [r0], -r0, asr #32

08008358 <net::udp_init()>:
 8008358:	490b      	ldr	r1, [pc, #44]	@ (8008388 <net::udp_init()+0x30>)
 800835a:	4b0c      	ldr	r3, [pc, #48]	@ (800838c <net::udp_init()+0x34>)
 800835c:	4a0c      	ldr	r2, [pc, #48]	@ (8008390 <net::udp_init()+0x38>)
 800835e:	b510      	push	{r4, lr}
 8008360:	205e      	movs	r0, #94	@ 0x5e
 8008362:	2401      	movs	r4, #1
 8008364:	800c      	strh	r4, [r1, #0]
 8008366:	7088      	strb	r0, [r1, #2]
 8008368:	2106      	movs	r1, #6
 800836a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800836e:	f803 0b01 	strb.w	r0, [r3], #1
 8008372:	3901      	subs	r1, #1
 8008374:	d1f9      	bne.n	800836a <net::udp_init()+0x12>
 8008376:	4807      	ldr	r0, [pc, #28]	@ (8008394 <net::udp_init()+0x3c>)
 8008378:	4a07      	ldr	r2, [pc, #28]	@ (8008398 <net::udp_init()+0x40>)
 800837a:	4b08      	ldr	r3, [pc, #32]	@ (800839c <net::udp_init()+0x44>)
 800837c:	60c2      	str	r2, [r0, #12]
 800837e:	6143      	str	r3, [r0, #20]
 8008380:	f009 fbdc 	bl	8011b3c <net::udp_set_ip()>
 8008384:	8501      	strh	r1, [r0, #40]	@ 0x28
 8008386:	bd10      	pop	{r4, pc}
 8008388:	100096a8 	andne	r9, r0, r8, lsr #13
 800838c:	100096ba 			@ <UNDEFINED> instruction: 0x100096ba
 8008390:	20009b64 	andcs	r9, r0, r4, ror #22
 8008394:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8008398:	00450008 	subeq	r0, r5, r8
 800839c:	11400040 	cmpne	r0, r0, asr #32

080083a0 <emac_config()>:
 80083a0:	b508      	push	{r3, lr}
 80083a2:	480f      	ldr	r0, [pc, #60]	@ (80083e0 <emac_config()+0x40>)
 80083a4:	f00e fd69 	bl	8016e7a <puts>
 80083a8:	f009 ff8c 	bl	80122c4 <enet_gpio_config()>
 80083ac:	f640 4019 	movw	r0, #3097	@ 0xc19
 80083b0:	f00c ff8a 	bl	80152c8 <rcu_periph_clock_enable>
 80083b4:	f640 401a 	movw	r0, #3098	@ 0xc1a
 80083b8:	f00c ff86 	bl	80152c8 <rcu_periph_clock_enable>
 80083bc:	f640 401b 	movw	r0, #3099	@ 0xc1b
 80083c0:	f00c ff82 	bl	80152c8 <rcu_periph_clock_enable>
 80083c4:	f00c feb6 	bl	8015134 <enet_deinit>
 80083c8:	f00c fc50 	bl	8014c6c <enet_software_reset>
 80083cc:	2001      	movs	r0, #1
 80083ce:	f009 ff0f 	bl	80121f0 <net::phy_config(unsigned long)>
 80083d2:	b920      	cbnz	r0, 80083de <emac_config()+0x3e>
 80083d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083d8:	4802      	ldr	r0, [pc, #8]	@ (80083e4 <emac_config()+0x44>)
 80083da:	f00c ba55 	b.w	8014888 <console_error>
 80083de:	bd08      	pop	{r3, pc}
 80083e0:	08017cc9 	stmdaeq	r1, {r0, r3, r6, r7, sl, fp, ip, sp, lr}
 80083e4:	08017cd1 	stmdaeq	r1, {r0, r4, r6, r7, sl, fp, ip, sp, lr}

080083e8 <emac_start(unsigned char*, net::Link&)>:
 80083e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80083ea:	466c      	mov	r4, sp
 80083ec:	4605      	mov	r5, r0
 80083ee:	460e      	mov	r6, r1
 80083f0:	2001      	movs	r0, #1
 80083f2:	4621      	mov	r1, r4
 80083f4:	f00a fb5c 	bl	8012ab0 <net::phy_start(unsigned long, net::PhyStatus&)>
 80083f8:	9b00      	ldr	r3, [sp, #0]
 80083fa:	6033      	str	r3, [r6, #0]
 80083fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8008400:	f009 fea2 	bl	8012148 <emac_adjust_link(net::PhyStatus)>
 8008404:	4628      	mov	r0, r5
 8008406:	f00d fa95 	bl	8015934 <mac_address_get(unsigned char*)>
 800840a:	4629      	mov	r1, r5
 800840c:	2000      	movs	r0, #0
 800840e:	f00c fc8f 	bl	8014d30 <enet_mac_address_set>
 8008412:	4c0c      	ldr	r4, [pc, #48]	@ (8008444 <emac_start(unsigned char*, net::Link&)+0x5c>)
 8008414:	f44f 00e0 	mov.w	r0, #7340032	@ 0x700000
 8008418:	f00c fc3c 	bl	8014c94 <enet_descriptors_chain_init>
 800841c:	f44f 2060 	mov.w	r0, #917504	@ 0xe0000
 8008420:	f00c fc38 	bl	8014c94 <enet_descriptors_chain_init>
 8008424:	4620      	mov	r0, r4
 8008426:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 800842a:	f00c fc7b 	bl	8014d24 <enet_transmit_checksum_config>
 800842e:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 8008432:	f104 0010 	add.w	r0, r4, #16
 8008436:	f00c fc75 	bl	8014d24 <enet_transmit_checksum_config>
 800843a:	f00c fe35 	bl	80150a8 <enet_enable>
 800843e:	b004      	add	sp, #16
 8008440:	bd70      	pop	{r4, r5, r6, pc}
 8008442:	bf00      	nop
 8008444:	20014400 	andcs	r4, r1, r0, lsl #8

08008448 <net::arp_init()>:
 8008448:	b410      	push	{r4}
 800844a:	4b3e      	ldr	r3, [pc, #248]	@ (8008544 <net::arp_init()+0xfc>)
 800844c:	b083      	sub	sp, #12
 800844e:	2210      	movs	r2, #16
 8008450:	2000      	movs	r0, #0
 8008452:	f103 0118 	add.w	r1, r3, #24
 8008456:	f803 0b01 	strb.w	r0, [r3], #1
 800845a:	428b      	cmp	r3, r1
 800845c:	d1fb      	bne.n	8008456 <net::arp_init()+0xe>
 800845e:	3a01      	subs	r2, #1
 8008460:	d1f7      	bne.n	8008452 <net::arp_init()+0xa>
 8008462:	4a39      	ldr	r2, [pc, #228]	@ (8008548 <net::arp_init()+0x100>)
 8008464:	4939      	ldr	r1, [pc, #228]	@ (800854c <net::arp_init()+0x104>)
 8008466:	2306      	movs	r3, #6
 8008468:	f811 0b01 	ldrb.w	r0, [r1], #1
 800846c:	f802 0b01 	strb.w	r0, [r2], #1
 8008470:	3b01      	subs	r3, #1
 8008472:	d1f9      	bne.n	8008468 <net::arp_init()+0x20>
 8008474:	4936      	ldr	r1, [pc, #216]	@ (8008550 <net::arp_init()+0x108>)
 8008476:	2206      	movs	r2, #6
 8008478:	460b      	mov	r3, r1
 800847a:	20ff      	movs	r0, #255	@ 0xff
 800847c:	3a01      	subs	r2, #1
 800847e:	f801 0b01 	strb.w	r0, [r1], #1
 8008482:	d1fb      	bne.n	800847c <net::arp_init()+0x34>
 8008484:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8008488:	4c32      	ldr	r4, [pc, #200]	@ (8008554 <net::arp_init()+0x10c>)
 800848a:	4933      	ldr	r1, [pc, #204]	@ (8008558 <net::arp_init()+0x110>)
 800848c:	8298      	strh	r0, [r3, #20]
 800848e:	4a33      	ldr	r2, [pc, #204]	@ (800855c <net::arp_init()+0x114>)
 8008490:	482e      	ldr	r0, [pc, #184]	@ (800854c <net::arp_init()+0x104>)
 8008492:	e9c3 4103 	strd	r4, r1, [r3, #12]
 8008496:	2306      	movs	r3, #6
 8008498:	f810 4b01 	ldrb.w	r4, [r0], #1
 800849c:	f802 4b01 	strb.w	r4, [r2], #1
 80084a0:	3b01      	subs	r3, #1
 80084a2:	d1f9      	bne.n	8008498 <net::arp_init()+0x50>
 80084a4:	4b2e      	ldr	r3, [pc, #184]	@ (8008560 <net::arp_init()+0x118>)
 80084a6:	4a2f      	ldr	r2, [pc, #188]	@ (8008564 <net::arp_init()+0x11c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	9301      	str	r3, [sp, #4]
 80084ac:	a801      	add	r0, sp, #4
 80084ae:	2304      	movs	r3, #4
 80084b0:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084b4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80084b8:	3b01      	subs	r3, #1
 80084ba:	d1f9      	bne.n	80084b0 <net::arp_init()+0x68>
 80084bc:	482a      	ldr	r0, [pc, #168]	@ (8008568 <net::arp_init()+0x120>)
 80084be:	2206      	movs	r2, #6
 80084c0:	3a01      	subs	r2, #1
 80084c2:	f800 3b01 	strb.w	r3, [r0], #1
 80084c6:	d1fb      	bne.n	80084c0 <net::arp_init()+0x78>
 80084c8:	4a28      	ldr	r2, [pc, #160]	@ (800856c <net::arp_init()+0x124>)
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <net::arp_init()+0x104>)
 80084cc:	2306      	movs	r3, #6
 80084ce:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084d2:	f802 4b01 	strb.w	r4, [r2], #1
 80084d6:	3b01      	subs	r3, #1
 80084d8:	d1f9      	bne.n	80084ce <net::arp_init()+0x86>
 80084da:	4b25      	ldr	r3, [pc, #148]	@ (8008570 <net::arp_init()+0x128>)
 80084dc:	481d      	ldr	r0, [pc, #116]	@ (8008554 <net::arp_init()+0x10c>)
 80084de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80084e2:	e9c3 0103 	strd	r0, r1, [r3, #12]
 80084e6:	4919      	ldr	r1, [pc, #100]	@ (800854c <net::arp_init()+0x104>)
 80084e8:	829a      	strh	r2, [r3, #20]
 80084ea:	2206      	movs	r2, #6
 80084ec:	3316      	adds	r3, #22
 80084ee:	f811 0b01 	ldrb.w	r0, [r1], #1
 80084f2:	f803 0b01 	strb.w	r0, [r3], #1
 80084f6:	3a01      	subs	r2, #1
 80084f8:	d1f9      	bne.n	80084ee <net::arp_init()+0xa6>
 80084fa:	4b1e      	ldr	r3, [pc, #120]	@ (8008574 <net::arp_init()+0x12c>)
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8008502:	2b07      	cmp	r3, #7
 8008504:	d905      	bls.n	8008512 <net::arp_init()+0xca>
 8008506:	481c      	ldr	r0, [pc, #112]	@ (8008578 <net::arp_init()+0x130>)
 8008508:	b003      	add	sp, #12
 800850a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800850e:	f00c b9bb 	b.w	8014888 <console_error>
 8008512:	f8d2 00a4 	ldr.w	r0, [r2, #164]	@ 0xa4
 8008516:	4919      	ldr	r1, [pc, #100]	@ (800857c <net::arp_init()+0x134>)
 8008518:	1c44      	adds	r4, r0, #1
 800851a:	f8c2 40a4 	str.w	r4, [r2, #164]	@ 0xa4
 800851e:	6809      	ldr	r1, [r1, #0]
 8008520:	1c5c      	adds	r4, r3, #1
 8008522:	f8c2 40a0 	str.w	r4, [r2, #160]	@ 0xa0
 8008526:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800852a:	4a15      	ldr	r2, [pc, #84]	@ (8008580 <net::arp_init()+0x138>)
 800852c:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8008530:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
 8008534:	e9c3 1408 	strd	r1, r4, [r3, #32]
 8008538:	e9c3 020a 	strd	r0, r2, [r3, #40]	@ 0x28
 800853c:	b003      	add	sp, #12
 800853e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	1000cb10 	andne	ip, r0, r0, lsl fp
 8008548:	20009bc2 	andcs	r9, r0, r2, asr #23
 800854c:	20009b64 	andcs	r9, r0, r4, ror #22
 8008550:	20009bbc 			@ <UNDEFINED> instruction: 0x20009bbc
 8008554:	01000608 	tsteq	r0, r8, lsl #12
 8008558:	04060008 	streq	r0, [r6], #-8
 800855c:	20009bd2 	ldrdcs	r9, [r0], -r2
 8008560:	20009b50 	andcs	r9, r0, r0, asr fp
 8008564:	20009bd7 	ldrdcs	r9, [r0], -r7
 8008568:	20009bdc 	ldrdcs	r9, [r0], -ip
 800856c:	20009b86 	andcs	r9, r0, r6, lsl #23
 8008570:	20009b80 	andcs	r9, r0, r0, lsl #23
 8008574:	20009d00 	andcs	r9, r0, r0, lsl #26
 8008578:	08018648 	stmdaeq	r1, {r3, r6, r9, sl, pc}
 800857c:	200145c8 	andcs	r4, r1, r8, asr #11
 8008580:	08012899 	stmdaeq	r1, {r0, r3, r4, r7, fp, sp}

08008584 <net::ip_init()>:
 8008584:	b508      	push	{r3, lr}
 8008586:	f7ff fee7 	bl	8008358 <net::udp_init()>
 800858a:	f7ff fe0f 	bl	80081ac <net::igmp_init()>
 800858e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008592:	f7ff bec7 	b.w	8008324 <net::tcp_init()>
	...

08008598 <console_init()>:
 8008598:	b508      	push	{r3, lr}
 800859a:	f00d fc6d 	bl	8015e78 <uart0_init>
 800859e:	4804      	ldr	r0, [pc, #16]	@ (80085b0 <console_init()+0x18>)
 80085a0:	f00d fc94 	bl	8015ecc <uart0_puts>
 80085a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085a8:	4802      	ldr	r0, [pc, #8]	@ (80085b4 <console_init()+0x1c>)
 80085aa:	f00d bc8f 	b.w	8015ecc <uart0_puts>
 80085ae:	bf00      	nop
 80085b0:	08017eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80085b4:	08017f0b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, fp, ip, sp, lr}

080085b8 <net::igmp_handle(t_igmp*)>:
 80085b8:	7b83      	ldrb	r3, [r0, #14]
 80085ba:	2b45      	cmp	r3, #69	@ 0x45
 80085bc:	d000      	beq.n	80085c0 <net::igmp_handle(t_igmp*)+0x8>
 80085be:	4770      	bx	lr
 80085c0:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 80085c4:	2b11      	cmp	r3, #17
 80085c6:	d1fa      	bne.n	80085be <net::igmp_handle(t_igmp*)+0x6>
 80085c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085cc:	b082      	sub	sp, #8
 80085ce:	4b23      	ldr	r3, [pc, #140]	@ (800865c <net::igmp_handle(t_igmp*)+0xa4>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f100 081d 	add.w	r8, r0, #29
 80085d6:	466a      	mov	r2, sp
 80085d8:	f100 0421 	add.w	r4, r0, #33	@ 0x21
 80085dc:	4643      	mov	r3, r8
 80085de:	e001      	b.n	80085e4 <net::igmp_handle(t_igmp*)+0x2c>
 80085e0:	42a3      	cmp	r3, r4
 80085e2:	d038      	beq.n	8008656 <net::igmp_handle(t_igmp*)+0x9e>
 80085e4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 80085e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085ec:	428d      	cmp	r5, r1
 80085ee:	d0f7      	beq.n	80085e0 <net::igmp_handle(t_igmp*)+0x28>
 80085f0:	1a6d      	subs	r5, r5, r1
 80085f2:	4b1b      	ldr	r3, [pc, #108]	@ (8008660 <net::igmp_handle(t_igmp*)+0xa8>)
 80085f4:	2701      	movs	r7, #1
 80085f6:	f503 7690 	add.w	r6, r3, #288	@ 0x120
 80085fa:	e00a      	b.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 80085fc:	f803 7c02 	strb.w	r7, [r3, #-2]
 8008600:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 8008604:	0852      	lsrs	r2, r2, #1
 8008606:	3201      	adds	r2, #1
 8008608:	f823 2c04 	strh.w	r2, [r3, #-4]
 800860c:	3308      	adds	r3, #8
 800860e:	42b3      	cmp	r3, r6
 8008610:	d012      	beq.n	8008638 <net::igmp_handle(t_igmp*)+0x80>
 8008612:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8008616:	2a00      	cmp	r2, #0
 8008618:	d0f8      	beq.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 800861a:	9201      	str	r2, [sp, #4]
 800861c:	b97d      	cbnz	r5, 800863e <net::igmp_handle(t_igmp*)+0x86>
 800861e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8008622:	2a01      	cmp	r2, #1
 8008624:	d1ea      	bne.n	80085fc <net::igmp_handle(t_igmp*)+0x44>
 8008626:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 800862a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800862e:	428a      	cmp	r2, r1
 8008630:	dbe8      	blt.n	8008604 <net::igmp_handle(t_igmp*)+0x4c>
 8008632:	3308      	adds	r3, #8
 8008634:	42b3      	cmp	r3, r6
 8008636:	d1ec      	bne.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 8008638:	b002      	add	sp, #8
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800863e:	a901      	add	r1, sp, #4
 8008640:	4642      	mov	r2, r8
 8008642:	e001      	b.n	8008648 <net::igmp_handle(t_igmp*)+0x90>
 8008644:	42a2      	cmp	r2, r4
 8008646:	d0ea      	beq.n	800861e <net::igmp_handle(t_igmp*)+0x66>
 8008648:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800864c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008650:	45e6      	cmp	lr, ip
 8008652:	d0f7      	beq.n	8008644 <net::igmp_handle(t_igmp*)+0x8c>
 8008654:	e7da      	b.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 8008656:	2500      	movs	r5, #0
 8008658:	e7cb      	b.n	80085f2 <net::igmp_handle(t_igmp*)+0x3a>
 800865a:	bf00      	nop
 800865c:	010000e0 	smlatteq	r0, r0, r0, r0
 8008660:	10008230 	andne	r8, r0, r0, lsr r2

08008664 <net::net_handle()>:
 8008664:	b500      	push	{lr}
 8008666:	b083      	sub	sp, #12
 8008668:	a801      	add	r0, sp, #4
 800866a:	f009 ff05 	bl	8012478 <emac_eth_recv(unsigned char**)>
 800866e:	2800      	cmp	r0, #0
 8008670:	dc02      	bgt.n	8008678 <net::net_handle()+0x14>
 8008672:	b003      	add	sp, #12
 8008674:	f85d fb04 	ldr.w	pc, [sp], #4
 8008678:	9801      	ldr	r0, [sp, #4]
 800867a:	8983      	ldrh	r3, [r0, #12]
 800867c:	2b08      	cmp	r3, #8
 800867e:	d007      	beq.n	8008690 <net::net_handle()+0x2c>
 8008680:	f5b3 6fc1 	cmp.w	r3, #1544	@ 0x608
 8008684:	d007      	beq.n	8008696 <net::net_handle()+0x32>
 8008686:	f009 ff09 	bl	801249c <emac_free_pkt()>
 800868a:	b003      	add	sp, #12
 800868c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008690:	f000 fc06 	bl	8008ea0 <net::ip_handle(t_ip4*)>
 8008694:	e7f7      	b.n	8008686 <net::net_handle()+0x22>
 8008696:	f000 fb79 	bl	8008d8c <net::arp_handle(t_arp*)>
 800869a:	e7f4      	b.n	8008686 <net::net_handle()+0x22>

0800869c <net::tcp_run()>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	4c11      	ldr	r4, [pc, #68]	@ (80086e4 <net::tcp_run()+0x48>)
 80086a0:	b085      	sub	sp, #20
 80086a2:	2711      	movs	r7, #17
 80086a4:	f504 75f0 	add.w	r5, r4, #480	@ 0x1e0
 80086a8:	2609      	movs	r6, #9
 80086aa:	e002      	b.n	80086b2 <net::tcp_run()+0x16>
 80086ac:	3450      	adds	r4, #80	@ 0x50
 80086ae:	42ac      	cmp	r4, r5
 80086b0:	d015      	beq.n	80086de <net::tcp_run()+0x42>
 80086b2:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 80086b6:	2b07      	cmp	r3, #7
 80086b8:	d1f8      	bne.n	80086ac <net::tcp_run()+0x10>
 80086ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086bc:	69a2      	ldr	r2, [r4, #24]
 80086be:	f88d 700c 	strb.w	r7, [sp, #12]
 80086c2:	4620      	mov	r0, r4
 80086c4:	a901      	add	r1, sp, #4
 80086c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086ca:	f009 f835 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 80086ce:	69a3      	ldr	r3, [r4, #24]
 80086d0:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
 80086d4:	3301      	adds	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	3450      	adds	r4, #80	@ 0x50
 80086da:	42ac      	cmp	r4, r5
 80086dc:	d1e9      	bne.n	80086b2 <net::tcp_run()+0x16>
 80086de:	b005      	add	sp, #20
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e2:	bf00      	nop
 80086e4:	100089a0 	andne	r8, r0, r0, lsr #19

080086e8 <net::tcp_handle(t_tcp*)>:
 80086e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ec:	4605      	mov	r5, r0
 80086ee:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80086f0:	8ca9      	ldrh	r1, [r5, #36]	@ 0x24
 80086f2:	4fb3      	ldr	r7, [pc, #716]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 80086f4:	f8b5 9010 	ldrh.w	r9, [r5, #16]
 80086f8:	ba49      	rev16	r1, r1
 80086fa:	ba40      	rev16	r0, r0
 80086fc:	8468      	strh	r0, [r5, #34]	@ 0x22
 80086fe:	84a9      	strh	r1, [r5, #36]	@ 0x24
 8008700:	f8b7 2d04 	ldrh.w	r2, [r7, #3332]	@ 0xd04
 8008704:	b28b      	uxth	r3, r1
 8008706:	429a      	cmp	r2, r3
 8008708:	b099      	sub	sp, #100	@ 0x64
 800870a:	d029      	beq.n	8008760 <net::tcp_handle(t_tcp*)+0x78>
 800870c:	f895 602e 	ldrb.w	r6, [r5, #46]	@ 0x2e
 8008710:	ab04      	add	r3, sp, #16
 8008712:	2400      	movs	r4, #0
 8008714:	f843 4b04 	str.w	r4, [r3], #4
 8008718:	aa18      	add	r2, sp, #96	@ 0x60
 800871a:	4293      	cmp	r3, r2
 800871c:	d1fa      	bne.n	8008714 <net::tcp_handle(t_tcp*)+0x2c>
 800871e:	f8d5 301a 	ldr.w	r3, [r5, #26]
 8008722:	f8d5 201e 	ldr.w	r2, [r5, #30]
 8008726:	f8ad 1018 	strh.w	r1, [sp, #24]
 800872a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800872e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008732:	1dab      	adds	r3, r5, #6
 8008734:	f105 040c 	add.w	r4, r5, #12
 8008738:	a907      	add	r1, sp, #28
 800873a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800873e:	f801 0b01 	strb.w	r0, [r1], #1
 8008742:	42a3      	cmp	r3, r4
 8008744:	d1f9      	bne.n	800873a <net::tcp_handle(t_tcp*)+0x52>
 8008746:	4628      	mov	r0, r5
 8008748:	f008 ffd6 	bl	80116f8 <net::_bswap32(t_tcp*)>
 800874c:	0932      	lsrs	r2, r6, #4
 800874e:	0092      	lsls	r2, r2, #2
 8008750:	a904      	add	r1, sp, #16
 8008752:	f009 f8dd 	bl	8011910 <net::scan_options(t_tcp*, net::tcb*, long)>
 8008756:	f009 f8a7 	bl	80118a8 <net::send_reset(t_tcp*, net::tcb const*)>
 800875a:	b019      	add	sp, #100	@ 0x64
 800875c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008760:	f107 0a04 	add.w	sl, r7, #4
 8008764:	fa1f fe80 	uxth.w	lr, r0
 8008768:	4653      	mov	r3, sl
 800876a:	2400      	movs	r4, #0
 800876c:	e005      	b.n	800877a <net::tcp_handle(t_tcp*)+0x92>
 800876e:	3401      	adds	r4, #1
 8008770:	2c06      	cmp	r4, #6
 8008772:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 8008776:	f000 8088 	beq.w	800888a <net::tcp_handle(t_tcp*)+0x1a2>
 800877a:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800877e:	2a01      	cmp	r2, #1
 8008780:	d0f5      	beq.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008782:	88da      	ldrh	r2, [r3, #6]
 8008784:	4572      	cmp	r2, lr
 8008786:	d1f2      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008788:	1e5a      	subs	r2, r3, #1
 800878a:	f105 0119 	add.w	r1, r5, #25
 800878e:	f103 0c03 	add.w	ip, r3, #3
 8008792:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8008796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800879a:	4286      	cmp	r6, r0
 800879c:	d1e7      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 800879e:	4562      	cmp	r2, ip
 80087a0:	d1f7      	bne.n	8008792 <net::tcp_handle(t_tcp*)+0xaa>
 80087a2:	f895 802e 	ldrb.w	r8, [r5, #46]	@ 0x2e
 80087a6:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80087aa:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80087ae:	4628      	mov	r0, r5
 80087b0:	9300      	str	r3, [sp, #0]
 80087b2:	f008 ffa1 	bl	80116f8 <net::_bswap32(t_tcp*)>
 80087b6:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80087b8:	9a00      	ldr	r2, [sp, #0]
 80087ba:	ba5b      	rev16	r3, r3
 80087bc:	862b      	strh	r3, [r5, #48]	@ 0x30
 80087be:	b29b      	uxth	r3, r3
 80087c0:	9303      	str	r3, [sp, #12]
 80087c2:	8eab      	ldrh	r3, [r5, #52]	@ 0x34
 80087c4:	ba5b      	rev16	r3, r3
 80087c6:	86ab      	strh	r3, [r5, #52]	@ 0x34
 80087c8:	f105 032a 	add.w	r3, r5, #42	@ 0x2a
 80087cc:	079b      	lsls	r3, r3, #30
 80087ce:	bf0c      	ite	eq
 80087d0:	f8d5 302a 	ldreq.w	r3, [r5, #42]	@ 0x2a
 80087d4:	f8d5 302a 	ldrne.w	r3, [r5, #42]	@ 0x2a
 80087d8:	9301      	str	r3, [sp, #4]
 80087da:	f105 0326 	add.w	r3, r5, #38	@ 0x26
 80087de:	079e      	lsls	r6, r3, #30
 80087e0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 80087e4:	eb07 1603 	add.w	r6, r7, r3, lsl #4
 80087e8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80087ec:	4631      	mov	r1, r6
 80087ee:	ea4f 0384 	mov.w	r3, r4, lsl #2
 80087f2:	bf0c      	ite	eq
 80087f4:	f8d5 b026 	ldreq.w	fp, [r5, #38]	@ 0x26
 80087f8:	f8d5 b026 	ldrne.w	fp, [r5, #38]	@ 0x26
 80087fc:	9302      	str	r3, [sp, #8]
 80087fe:	f009 f887 	bl	8011910 <net::scan_options(t_tcp*, net::tcb*, long)>
 8008802:	f896 204c 	ldrb.w	r2, [r6, #76]	@ 0x4c
 8008806:	2a01      	cmp	r2, #1
 8008808:	d04c      	beq.n	80088a4 <net::tcp_handle(t_tcp*)+0x1bc>
 800880a:	1ed3      	subs	r3, r2, #3
 800880c:	2b07      	cmp	r3, #7
 800880e:	d8a4      	bhi.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008810:	9b00      	ldr	r3, [sp, #0]
 8008812:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 8008816:	33ec      	adds	r3, #236	@ 0xec
 8008818:	fa99 f999 	rev16.w	r9, r9
 800881c:	fa13 f989 	uxtah	r9, r3, r9
 8008820:	f8b6 3044 	ldrh.w	r3, [r6, #68]	@ 0x44
 8008824:	fa1f f989 	uxth.w	r9, r9
 8008828:	2b00      	cmp	r3, #0
 800882a:	d077      	beq.n	800891c <net::tcp_handle(t_tcp*)+0x234>
 800882c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 800882e:	eba1 000b 	sub.w	r0, r1, fp
 8008832:	f1b9 0f00 	cmp.w	r9, #0
 8008836:	f040 8085 	bne.w	8008944 <net::tcp_handle(t_tcp*)+0x25c>
 800883a:	2800      	cmp	r0, #0
 800883c:	f340 80b8 	ble.w	80089b0 <net::tcp_handle(t_tcp*)+0x2c8>
 8008840:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 8008844:	f013 0f04 	tst.w	r3, #4
 8008848:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800884c:	4423      	add	r3, r4
 800884e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008852:	d06a      	beq.n	800892a <net::tcp_handle(t_tcp*)+0x242>
 8008854:	891d      	ldrh	r5, [r3, #8]
 8008856:	2200      	movs	r2, #0
 8008858:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 800885c:	f846 2b04 	str.w	r2, [r6], #4
 8008860:	42b3      	cmp	r3, r6
 8008862:	d1fb      	bne.n	800885c <net::tcp_handle(t_tcp*)+0x174>
 8008864:	9b02      	ldr	r3, [sp, #8]
 8008866:	4a57      	ldr	r2, [pc, #348]	@ (80089c4 <net::tcp_handle(t_tcp*)+0x2dc>)
 8008868:	4423      	add	r3, r4
 800886a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800886e:	6812      	ldr	r2, [r2, #0]
 8008870:	811d      	strh	r5, [r3, #8]
 8008872:	f640 3018 	movw	r0, #2840	@ 0xb18
 8008876:	2101      	movs	r1, #1
 8008878:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800887c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800887e:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 8008882:	629a      	str	r2, [r3, #40]	@ 0x28
 8008884:	f883 104c 	strb.w	r1, [r3, #76]	@ 0x4c
 8008888:	e767      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800888a:	4b4d      	ldr	r3, [pc, #308]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 800888c:	2400      	movs	r4, #0
 800888e:	e002      	b.n	8008896 <net::tcp_handle(t_tcp*)+0x1ae>
 8008890:	3401      	adds	r4, #1
 8008892:	2c06      	cmp	r4, #6
 8008894:	d085      	beq.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 8008896:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
 800889a:	2a01      	cmp	r2, #1
 800889c:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 80088a0:	d1f6      	bne.n	8008890 <net::tcp_handle(t_tcp*)+0x1a8>
 80088a2:	e77e      	b.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 80088a4:	f8d5 201e 	ldr.w	r2, [r5, #30]
 80088a8:	f847 2008 	str.w	r2, [r7, r8]
 80088ac:	8c69      	ldrh	r1, [r5, #34]	@ 0x22
 80088ae:	8171      	strh	r1, [r6, #10]
 80088b0:	f8d5 101a 	ldr.w	r1, [r5, #26]
 80088b4:	f84a 1008 	str.w	r1, [sl, r8]
 80088b8:	f108 020c 	add.w	r2, r8, #12
 80088bc:	443a      	add	r2, r7
 80088be:	1dab      	adds	r3, r5, #6
 80088c0:	f105 000c 	add.w	r0, r5, #12
 80088c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 80088c8:	f802 1b01 	strb.w	r1, [r2], #1
 80088cc:	4283      	cmp	r3, r0
 80088ce:	d1f9      	bne.n	80088c4 <net::tcp_handle(t_tcp*)+0x1dc>
 80088d0:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 80088d4:	0758      	lsls	r0, r3, #29
 80088d6:	f53f af40 	bmi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088da:	06d9      	lsls	r1, r3, #27
 80088dc:	f100 8135 	bmi.w	8008b4a <net::tcp_handle(t_tcp*)+0x462>
 80088e0:	079a      	lsls	r2, r3, #30
 80088e2:	f57f af3a 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088e6:	9b02      	ldr	r3, [sp, #8]
 80088e8:	4423      	add	r3, r4
 80088ea:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 80088ee:	2212      	movs	r2, #18
 80088f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088f2:	9104      	str	r1, [sp, #16]
 80088f4:	f10b 0301 	add.w	r3, fp, #1
 80088f8:	4630      	mov	r0, r6
 80088fa:	a904      	add	r1, sp, #16
 80088fc:	6423      	str	r3, [r4, #64]	@ 0x40
 80088fe:	9305      	str	r3, [sp, #20]
 8008900:	f88d 2018 	strb.w	r2, [sp, #24]
 8008904:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
 8008908:	f008 ff16 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 800890c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800890e:	6163      	str	r3, [r4, #20]
 8008910:	2203      	movs	r2, #3
 8008912:	3301      	adds	r3, #1
 8008914:	61a3      	str	r3, [r4, #24]
 8008916:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
 800891a:	e71e      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d18e      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008922:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8008924:	455b      	cmp	r3, fp
 8008926:	d18b      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008928:	e01f      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 800892a:	6999      	ldr	r1, [r3, #24]
 800892c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800892e:	9305      	str	r3, [sp, #20]
 8008930:	2210      	movs	r2, #16
 8008932:	9104      	str	r1, [sp, #16]
 8008934:	4630      	mov	r0, r6
 8008936:	eb0d 0102 	add.w	r1, sp, r2
 800893a:	f88d 2018 	strb.w	r2, [sp, #24]
 800893e:	f008 fefb 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008942:	e70a      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008944:	2800      	cmp	r0, #0
 8008946:	440b      	add	r3, r1
 8008948:	dd0b      	ble.n	8008962 <net::tcp_handle(t_tcp*)+0x27a>
 800894a:	f10b 30ff 	add.w	r0, fp, #4294967295	@ 0xffffffff
 800894e:	4448      	add	r0, r9
 8008950:	1a09      	subs	r1, r1, r0
 8008952:	2900      	cmp	r1, #0
 8008954:	f73f af74 	bgt.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008958:	1ac0      	subs	r0, r0, r3
 800895a:	2800      	cmp	r0, #0
 800895c:	f6bf af70 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008960:	e003      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 8008962:	ebab 0003 	sub.w	r0, fp, r3
 8008966:	2800      	cmp	r0, #0
 8008968:	daef      	bge.n	800894a <net::tcp_handle(t_tcp*)+0x262>
 800896a:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800896e:	f011 0004 	ands.w	r0, r1, #4
 8008972:	f040 80f1 	bne.w	8008b58 <net::tcp_handle(t_tcp*)+0x470>
 8008976:	078b      	lsls	r3, r1, #30
 8008978:	d508      	bpl.n	800898c <net::tcp_handle(t_tcp*)+0x2a4>
 800897a:	2a03      	cmp	r2, #3
 800897c:	f000 811f 	beq.w	8008bbe <net::tcp_handle(t_tcp*)+0x4d6>
 8008980:	4631      	mov	r1, r6
 8008982:	4628      	mov	r0, r5
 8008984:	f008 ff90 	bl	80118a8 <net::send_reset(t_tcp*, net::tcb const*)>
 8008988:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800898c:	06c8      	lsls	r0, r1, #27
 800898e:	f57f aee4 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008992:	00a3      	lsls	r3, r4, #2
 8008994:	4423      	add	r3, r4
 8008996:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800899a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800899e:	1eda      	subs	r2, r3, #3
 80089a0:	2a07      	cmp	r2, #7
 80089a2:	d87f      	bhi.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 80089a4:	e8df f002 	tbb	[pc, r2]
 80089a8:	10101066 	andsne	r1, r0, r6, rrx
 80089ac:	b8a71010 	stmialt	r7!, {r4, ip}
 80089b0:	440b      	add	r3, r1
 80089b2:	ebab 0303 	sub.w	r3, fp, r3
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	f6bf af42 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 80089bc:	e7d5      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 80089be:	bf00      	nop
 80089c0:	100089a0 	andne	r8, r0, r0, lsr #19
 80089c4:	200145c8 	andcs	r4, r1, r8, asr #11
 80089c8:	00a2      	lsls	r2, r4, #2
 80089ca:	1911      	adds	r1, r2, r4
 80089cc:	eb07 1101 	add.w	r1, r7, r1, lsl #4
 80089d0:	e9d1 c205 	ldrd	ip, r2, [r1, #20]
 80089d4:	9801      	ldr	r0, [sp, #4]
 80089d6:	ebbc 0e00 	subs.w	lr, ip, r0
 80089da:	f100 80fc 	bmi.w	8008bd6 <net::tcp_handle(t_tcp*)+0x4ee>
 80089de:	9801      	ldr	r0, [sp, #4]
 80089e0:	eba0 0c0c 	sub.w	ip, r0, ip
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	f340 810d 	ble.w	8008c06 <net::tcp_handle(t_tcp*)+0x51e>
 80089ec:	9901      	ldr	r1, [sp, #4]
 80089ee:	1a89      	subs	r1, r1, r2
 80089f0:	2900      	cmp	r1, #0
 80089f2:	f300 80fa 	bgt.w	8008bea <net::tcp_handle(t_tcp*)+0x502>
 80089f6:	3b04      	subs	r3, #4
 80089f8:	2b02      	cmp	r3, #2
 80089fa:	d856      	bhi.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 80089fc:	f1b9 0f00 	cmp.w	r9, #0
 8008a00:	d053      	beq.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 8008a02:	00a3      	lsls	r3, r4, #2
 8008a04:	4423      	add	r3, r4
 8008a06:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008a0c:	455a      	cmp	r2, fp
 8008a0e:	f040 816c 	bne.w	8008cea <net::tcp_handle(t_tcp*)+0x602>
 8008a12:	f8b7 01e0 	ldrh.w	r0, [r7, #480]	@ 0x1e0
 8008a16:	9900      	ldr	r1, [sp, #0]
 8008a18:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008a1c:	fb00 f303 	mul.w	r3, r0, r3
 8008a20:	18fa      	adds	r2, r7, r3
 8008a22:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8008a26:	f8a2 4772 	strh.w	r4, [r2, #1906]	@ 0x772
 8008a2a:	19da      	adds	r2, r3, r7
 8008a2c:	f105 0322 	add.w	r3, r5, #34	@ 0x22
 8008a30:	4419      	add	r1, r3
 8008a32:	079b      	lsls	r3, r3, #30
 8008a34:	4688      	mov	r8, r1
 8008a36:	f040 8122 	bne.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a3a:	f1b9 0f03 	cmp.w	r9, #3
 8008a3e:	f240 811e 	bls.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a42:	f1a9 0304 	sub.w	r3, r9, #4
 8008a46:	089b      	lsrs	r3, r3, #2
 8008a48:	1c59      	adds	r1, r3, #1
 8008a4a:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 8008a4e:	4694      	mov	ip, r2
 8008a50:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8008a54:	f858 eb04 	ldr.w	lr, [r8], #4
 8008a58:	f84c eb04 	str.w	lr, [ip], #4
 8008a5c:	4588      	cmp	r8, r1
 8008a5e:	d1f9      	bne.n	8008a54 <net::tcp_handle(t_tcp*)+0x36c>
 8008a60:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 8008a64:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8008a68:	2b04      	cmp	r3, #4
 8008a6a:	f000 8112 	beq.w	8008c92 <net::tcp_handle(t_tcp*)+0x5aa>
 8008a6e:	4452      	add	r2, sl
 8008a70:	3b05      	subs	r3, #5
 8008a72:	e106      	b.n	8008c82 <net::tcp_handle(t_tcp*)+0x59a>
 8008a74:	00a3      	lsls	r3, r4, #2
 8008a76:	4423      	add	r3, r4
 8008a78:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a7c:	9801      	ldr	r0, [sp, #4]
 8008a7e:	695a      	ldr	r2, [r3, #20]
 8008a80:	1a11      	subs	r1, r2, r0
 8008a82:	2900      	cmp	r1, #0
 8008a84:	699a      	ldr	r2, [r3, #24]
 8008a86:	f340 80eb 	ble.w	8008c60 <net::tcp_handle(t_tcp*)+0x578>
 8008a8a:	4631      	mov	r1, r6
 8008a8c:	4628      	mov	r0, r5
 8008a8e:	f008 ff0b 	bl	80118a8 <net::send_reset(t_tcp*, net::tcb const*)>
 8008a92:	00a3      	lsls	r3, r4, #2
 8008a94:	4423      	add	r3, r4
 8008a96:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a9a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8008a9e:	1f1a      	subs	r2, r3, #4
 8008aa0:	2a02      	cmp	r2, #2
 8008aa2:	d9ab      	bls.n	80089fc <net::tcp_handle(t_tcp*)+0x314>
 8008aa4:	2b02      	cmp	r3, #2
 8008aa6:	f67f ae58 	bls.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aaa:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 8008aae:	07ca      	lsls	r2, r1, #31
 8008ab0:	f57f ae53 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	4423      	add	r3, r4
 8008ab8:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 8008abc:	4630      	mov	r0, r6
 8008abe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ac0:	69a2      	ldr	r2, [r4, #24]
 8008ac2:	9204      	str	r2, [sp, #16]
 8008ac4:	2210      	movs	r2, #16
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	eb0d 0102 	add.w	r1, sp, r2
 8008acc:	6423      	str	r3, [r4, #64]	@ 0x40
 8008ace:	9305      	str	r3, [sp, #20]
 8008ad0:	f88d 2018 	strb.w	r2, [sp, #24]
 8008ad4:	f008 fe30 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008ad8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 8008adc:	2b05      	cmp	r3, #5
 8008ade:	f000 80b9 	beq.w	8008c54 <net::tcp_handle(t_tcp*)+0x56c>
 8008ae2:	f200 80b2 	bhi.w	8008c4a <net::tcp_handle(t_tcp*)+0x562>
 8008ae6:	3b03      	subs	r3, #3
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	f63f ae36 	bhi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aee:	2307      	movs	r3, #7
 8008af0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 8008af4:	e631      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008af6:	00a3      	lsls	r3, r4, #2
 8008af8:	4423      	add	r3, r4
 8008afa:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008afe:	9801      	ldr	r0, [sp, #4]
 8008b00:	699a      	ldr	r2, [r3, #24]
 8008b02:	4282      	cmp	r2, r0
 8008b04:	d1d3      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b06:	891d      	ldrh	r5, [r3, #8]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b0e:	f846 2b04 	str.w	r2, [r6], #4
 8008b12:	42b3      	cmp	r3, r6
 8008b14:	d1fb      	bne.n	8008b0e <net::tcp_handle(t_tcp*)+0x426>
 8008b16:	e6a5      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008b18:	00a3      	lsls	r3, r4, #2
 8008b1a:	eb03 0a04 	add.w	sl, r3, r4
 8008b1e:	eb07 1a0a 	add.w	sl, r7, sl, lsl #4
 8008b22:	9a01      	ldr	r2, [sp, #4]
 8008b24:	f8da 3018 	ldr.w	r3, [sl, #24]
 8008b28:	4293      	cmp	r3, r2
 8008b2a:	d1c0      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b2c:	f8da 3040 	ldr.w	r3, [sl, #64]	@ 0x40
 8008b30:	9305      	str	r3, [sp, #20]
 8008b32:	2310      	movs	r3, #16
 8008b34:	eb0d 0103 	add.w	r1, sp, r3
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f88d 3018 	strb.w	r3, [sp, #24]
 8008b3e:	9204      	str	r2, [sp, #16]
 8008b40:	f008 fdfa 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008b44:	f89a 304c 	ldrb.w	r3, [sl, #76]	@ 0x4c
 8008b48:	e7a9      	b.n	8008a9e <net::tcp_handle(t_tcp*)+0x3b6>
 8008b4a:	4631      	mov	r1, r6
 8008b4c:	4628      	mov	r0, r5
 8008b4e:	b019      	add	sp, #100	@ 0x64
 8008b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b54:	f008 bea8 	b.w	80118a8 <net::send_reset(t_tcp*, net::tcb const*)>
 8008b58:	00a3      	lsls	r3, r4, #2
 8008b5a:	4423      	add	r3, r4
 8008b5c:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b60:	2a07      	cmp	r2, #7
 8008b62:	8919      	ldrh	r1, [r3, #8]
 8008b64:	d81b      	bhi.n	8008b9e <net::tcp_handle(t_tcp*)+0x4b6>
 8008b66:	2a03      	cmp	r2, #3
 8008b68:	d021      	beq.n	8008bae <net::tcp_handle(t_tcp*)+0x4c6>
 8008b6a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b6e:	2200      	movs	r2, #0
 8008b70:	f846 2b04 	str.w	r2, [r6], #4
 8008b74:	42b3      	cmp	r3, r6
 8008b76:	d1fb      	bne.n	8008b70 <net::tcp_handle(t_tcp*)+0x488>
 8008b78:	9b02      	ldr	r3, [sp, #8]
 8008b7a:	4a62      	ldr	r2, [pc, #392]	@ (8008d04 <net::tcp_handle(t_tcp*)+0x61c>)
 8008b7c:	4423      	add	r3, r4
 8008b7e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b82:	6812      	ldr	r2, [r2, #0]
 8008b84:	8119      	strh	r1, [r3, #8]
 8008b86:	f640 3418 	movw	r4, #2840	@ 0xb18
 8008b8a:	2001      	movs	r0, #1
 8008b8c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008b90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008b92:	f8a3 4044 	strh.w	r4, [r3, #68]	@ 0x44
 8008b96:	629a      	str	r2, [r3, #40]	@ 0x28
 8008b98:	f883 004c 	strb.w	r0, [r3, #76]	@ 0x4c
 8008b9c:	e5dd      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008b9e:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f846 2b04 	str.w	r2, [r6], #4
 8008ba8:	429e      	cmp	r6, r3
 8008baa:	d1fb      	bne.n	8008ba4 <net::tcp_handle(t_tcp*)+0x4bc>
 8008bac:	e7e4      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bae:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	f846 2b04 	str.w	r2, [r6], #4
 8008bb8:	42b3      	cmp	r3, r6
 8008bba:	d1fb      	bne.n	8008bb4 <net::tcp_handle(t_tcp*)+0x4cc>
 8008bbc:	e7dc      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bbe:	00a3      	lsls	r3, r4, #2
 8008bc0:	4423      	add	r3, r4
 8008bc2:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bc6:	891d      	ldrh	r5, [r3, #8]
 8008bc8:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bcc:	f846 0b04 	str.w	r0, [r6], #4
 8008bd0:	429e      	cmp	r6, r3
 8008bd2:	d1fb      	bne.n	8008bcc <net::tcp_handle(t_tcp*)+0x4e4>
 8008bd4:	e646      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008bd6:	1a80      	subs	r0, r0, r2
 8008bd8:	2800      	cmp	r0, #0
 8008bda:	f340 8090 	ble.w	8008cfe <net::tcp_handle(t_tcp*)+0x616>
 8008bde:	9801      	ldr	r0, [sp, #4]
 8008be0:	eba0 010c 	sub.w	r1, r0, ip
 8008be4:	2900      	cmp	r1, #0
 8008be6:	f77f af06 	ble.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008bea:	00a3      	lsls	r3, r4, #2
 8008bec:	4423      	add	r3, r4
 8008bee:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bf2:	2410      	movs	r4, #16
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008bf6:	f88d 4018 	strb.w	r4, [sp, #24]
 8008bfa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008bfe:	eb0d 0104 	add.w	r1, sp, r4
 8008c02:	4630      	mov	r0, r6
 8008c04:	e69b      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008c06:	f1be 0f00 	cmp.w	lr, #0
 8008c0a:	f47f aef4 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c0e:	9801      	ldr	r0, [sp, #4]
 8008c10:	1a82      	subs	r2, r0, r2
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	f73f aeef 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c18:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8008c1a:	eba2 000b 	sub.w	r0, r2, fp
 8008c1e:	2800      	cmp	r0, #0
 8008c20:	db08      	blt.n	8008c34 <net::tcp_handle(t_tcp*)+0x54c>
 8008c22:	455a      	cmp	r2, fp
 8008c24:	f47f aee7 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c28:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 8008c2a:	9901      	ldr	r1, [sp, #4]
 8008c2c:	1a52      	subs	r2, r2, r1
 8008c2e:	2a00      	cmp	r2, #0
 8008c30:	f73f aee1 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c34:	00a2      	lsls	r2, r4, #2
 8008c36:	4422      	add	r2, r4
 8008c38:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008c3c:	9903      	ldr	r1, [sp, #12]
 8008c3e:	61d1      	str	r1, [r2, #28]
 8008c40:	9901      	ldr	r1, [sp, #4]
 8008c42:	f8c2 b024 	str.w	fp, [r2, #36]	@ 0x24
 8008c46:	6291      	str	r1, [r2, #40]	@ 0x28
 8008c48:	e6d5      	b.n	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c4a:	2b06      	cmp	r3, #6
 8008c4c:	f47f ad85 	bne.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c50:	230a      	movs	r3, #10
 8008c52:	e74d      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c54:	69a3      	ldr	r3, [r4, #24]
 8008c56:	9a01      	ldr	r2, [sp, #4]
 8008c58:	4293      	cmp	r3, r2
 8008c5a:	d0f9      	beq.n	8008c50 <net::tcp_handle(t_tcp*)+0x568>
 8008c5c:	2308      	movs	r3, #8
 8008c5e:	e747      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c60:	1a82      	subs	r2, r0, r2
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	f73f af11 	bgt.w	8008a8a <net::tcp_handle(t_tcp*)+0x3a2>
 8008c68:	9903      	ldr	r1, [sp, #12]
 8008c6a:	61d9      	str	r1, [r3, #28]
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	9901      	ldr	r1, [sp, #4]
 8008c70:	f8c3 b024 	str.w	fp, [r3, #36]	@ 0x24
 8008c74:	6299      	str	r1, [r3, #40]	@ 0x28
 8008c76:	6159      	str	r1, [r3, #20]
 8008c78:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008c7c:	e56d      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c7e:	f109 33ff 	add.w	r3, r9, #4294967295	@ 0xffffffff
 8008c82:	3301      	adds	r3, #1
 8008c84:	4443      	add	r3, r8
 8008c86:	f818 1b01 	ldrb.w	r1, [r8], #1
 8008c8a:	f802 1b01 	strb.w	r1, [r2], #1
 8008c8e:	4543      	cmp	r3, r8
 8008c90:	d1f9      	bne.n	8008c86 <net::tcp_handle(t_tcp*)+0x59e>
 8008c92:	9b02      	ldr	r3, [sp, #8]
 8008c94:	eb03 0804 	add.w	r8, r3, r4
 8008c98:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008c9c:	eb07 1808 	add.w	r8, r7, r8, lsl #4
 8008ca0:	fb03 7300 	mla	r3, r3, r0, r7
 8008ca4:	4630      	mov	r0, r6
 8008ca6:	f8a3 9770 	strh.w	r9, [r3, #1904]	@ 0x770
 8008caa:	f8d8 3040 	ldr.w	r3, [r8, #64]	@ 0x40
 8008cae:	444b      	add	r3, r9
 8008cb0:	f8c8 3040 	str.w	r3, [r8, #64]	@ 0x40
 8008cb4:	9305      	str	r3, [sp, #20]
 8008cb6:	f8b8 3044 	ldrh.w	r3, [r8, #68]	@ 0x44
 8008cba:	f2a3 538c 	subw	r3, r3, #1420	@ 0x58c
 8008cbe:	f8a8 3044 	strh.w	r3, [r8, #68]	@ 0x44
 8008cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8008cc6:	9304      	str	r3, [sp, #16]
 8008cc8:	2310      	movs	r3, #16
 8008cca:	eb0d 0103 	add.w	r1, sp, r3
 8008cce:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cd2:	f008 fd31 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008cd6:	f8b7 21e0 	ldrh.w	r2, [r7, #480]	@ 0x1e0
 8008cda:	f898 304c 	ldrb.w	r3, [r8, #76]	@ 0x4c
 8008cde:	3201      	adds	r2, #1
 8008ce0:	f002 0201 	and.w	r2, r2, #1
 8008ce4:	f8a7 21e0 	strh.w	r2, [r7, #480]	@ 0x1e0
 8008ce8:	e6dc      	b.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 8008cea:	699c      	ldr	r4, [r3, #24]
 8008cec:	2310      	movs	r3, #16
 8008cee:	e9cd 4204 	strd	r4, r2, [sp, #16]
 8008cf2:	eb0d 0103 	add.w	r1, sp, r3
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cfc:	e61f      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008cfe:	9a01      	ldr	r2, [sp, #4]
 8008d00:	614a      	str	r2, [r1, #20]
 8008d02:	e789      	b.n	8008c18 <net::tcp_handle(t_tcp*)+0x530>
 8008d04:	200145c8 	andcs	r4, r1, r8, asr #11

08008d08 <net::udp_handle(t_udp*)>:
 8008d08:	f8b0 c024 	ldrh.w	ip, [r0, #36]	@ 0x24
 8008d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8008d84 <net::udp_handle(t_udp*)+0x7c>)
 8008d0e:	fa9c fc9c 	rev16.w	ip, ip
 8008d12:	2300      	movs	r3, #0
 8008d14:	fa1f fc8c 	uxth.w	ip, ip
 8008d18:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8008d1c:	4561      	cmp	r1, ip
 8008d1e:	d003      	beq.n	8008d28 <net::udp_handle(t_udp*)+0x20>
 8008d20:	3301      	adds	r3, #1
 8008d22:	2b08      	cmp	r3, #8
 8008d24:	d1f8      	bne.n	8008d18 <net::udp_handle(t_udp*)+0x10>
 8008d26:	4770      	bx	lr
 8008d28:	8cc1      	ldrh	r1, [r0, #38]	@ 0x26
 8008d2a:	b530      	push	{r4, r5, lr}
 8008d2c:	ba4c      	rev16	r4, r1
 8008d2e:	3c08      	subs	r4, #8
 8008d30:	b2a4      	uxth	r4, r4
 8008d32:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d36:	fa1f fc81 	uxth.w	ip, r1
 8008d3a:	f5b4 6fb8 	cmp.w	r4, #1472	@ 0x5c0
 8008d3e:	4d12      	ldr	r5, [pc, #72]	@ (8008d88 <net::udp_handle(t_udp*)+0x80>)
 8008d40:	fb03 f202 	mul.w	r2, r3, r2
 8008d44:	f102 020a 	add.w	r2, r2, #10
 8008d48:	bf28      	it	cs
 8008d4a:	f44f 64b8 	movcs.w	r4, #1472	@ 0x5c0
 8008d4e:	f5bc 6f00 	cmp.w	ip, #2048	@ 0x800
 8008d52:	442a      	add	r2, r5
 8008d54:	f100 012a 	add.w	r1, r0, #42	@ 0x2a
 8008d58:	d007      	beq.n	8008d6a <net::udp_handle(t_udp*)+0x62>
 8008d5a:	eb02 0e04 	add.w	lr, r2, r4
 8008d5e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008d62:	f802 cb01 	strb.w	ip, [r2], #1
 8008d66:	4572      	cmp	r2, lr
 8008d68:	d1f9      	bne.n	8008d5e <net::udp_handle(t_udp*)+0x56>
 8008d6a:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d6e:	fb02 f303 	mul.w	r3, r2, r3
 8008d72:	f8d0 101a 	ldr.w	r1, [r0, #26]
 8008d76:	50e9      	str	r1, [r5, r3]
 8008d78:	18ea      	adds	r2, r5, r3
 8008d7a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
 8008d7c:	6054      	str	r4, [r2, #4]
 8008d7e:	ba5b      	rev16	r3, r3
 8008d80:	8113      	strh	r3, [r2, #8]
 8008d82:	bd30      	pop	{r4, r5, pc}
 8008d84:	1000cafe 	strdne	ip, [r0], -lr
 8008d88:	10009ca0 	andne	r9, r0, r0, lsr #25

08008d8c <net::arp_handle(t_arp*)>:
 8008d8c:	89c3      	ldrh	r3, [r0, #14]
 8008d8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008d92:	d17e      	bne.n	8008e92 <net::arp_handle(t_arp*)+0x106>
 8008d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d98:	8a03      	ldrh	r3, [r0, #16]
 8008d9a:	2b08      	cmp	r3, #8
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	d172      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da0:	7c83      	ldrb	r3, [r0, #18]
 8008da2:	2b06      	cmp	r3, #6
 8008da4:	d16f      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da6:	7cc3      	ldrb	r3, [r0, #19]
 8008da8:	2b04      	cmp	r3, #4
 8008daa:	d16c      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008dac:	f009 fcbc 	bl	8012728 <net::acd_arp_reply(t_arp*)>
 8008db0:	4a38      	ldr	r2, [pc, #224]	@ (8008e94 <net::arp_handle(t_arp*)+0x108>)
 8008db2:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 8008db6:	6817      	ldr	r7, [r2, #0]
 8008db8:	429f      	cmp	r7, r3
 8008dba:	d066      	beq.n	8008e8a <net::arp_handle(t_arp*)+0xfe>
 8008dbc:	6912      	ldr	r2, [r2, #16]
 8008dbe:	429a      	cmp	r2, r3
 8008dc0:	bf0d      	iteet	eq
 8008dc2:	f04f 0801 	moveq.w	r8, #1
 8008dc6:	f04f 0800 	movne.w	r8, #0
 8008dca:	2101      	movne	r1, #1
 8008dcc:	2100      	moveq	r1, #0
 8008dce:	69e6      	ldr	r6, [r4, #28]
 8008dd0:	4630      	mov	r0, r6
 8008dd2:	f009 fd2f 	bl	8012834 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8008dd6:	f104 091c 	add.w	r9, r4, #28
 8008dda:	f104 0a16 	add.w	sl, r4, #22
 8008dde:	4605      	mov	r5, r0
 8008de0:	b350      	cbz	r0, 8008e38 <net::arp_handle(t_arp*)+0xac>
 8008de2:	2302      	movs	r3, #2
 8008de4:	6143      	str	r3, [r0, #20]
 8008de6:	f100 020c 	add.w	r2, r0, #12
 8008dea:	2300      	movs	r3, #0
 8008dec:	8243      	strh	r3, [r0, #18]
 8008dee:	4611      	mov	r1, r2
 8008df0:	4653      	mov	r3, sl
 8008df2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008df6:	f801 0b01 	strb.w	r0, [r1], #1
 8008dfa:	4599      	cmp	r9, r3
 8008dfc:	d1f9      	bne.n	8008df2 <net::arp_handle(t_arp*)+0x66>
 8008dfe:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008e02:	f1bc 0f00 	cmp.w	ip, #0
 8008e06:	d017      	beq.n	8008e38 <net::arp_handle(t_arp*)+0xac>
 8008e08:	4663      	mov	r3, ip
 8008e0a:	f105 0012 	add.w	r0, r5, #18
 8008e0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e12:	f803 1b01 	strb.w	r1, [r3], #1
 8008e16:	4282      	cmp	r2, r0
 8008e18:	d1f9      	bne.n	8008e0e <net::arp_handle(t_arp*)+0x82>
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8008e20:	f88c 3018 	strb.w	r3, [ip, #24]
 8008e24:	f88c 3019 	strb.w	r3, [ip, #25]
 8008e28:	f009 fb58 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 8008e2c:	6868      	ldr	r0, [r5, #4]
 8008e2e:	b108      	cbz	r0, 8008e34 <net::arp_handle(t_arp*)+0xa8>
 8008e30:	f00e f9d8 	bl	80171e4 <operator delete[](void*)>
 8008e34:	2300      	movs	r3, #0
 8008e36:	606b      	str	r3, [r5, #4]
 8008e38:	8aa3      	ldrh	r3, [r4, #20]
 8008e3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e3e:	d122      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e40:	f1b8 0f00 	cmp.w	r8, #0
 8008e44:	d01f      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e46:	42b7      	cmp	r7, r6
 8008e48:	d01d      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e4a:	4d13      	ldr	r5, [pc, #76]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e4c:	1da3      	adds	r3, r4, #6
 8008e4e:	f104 000c 	add.w	r0, r4, #12
 8008e52:	462a      	mov	r2, r5
 8008e54:	f813 1b01 	ldrb.w	r1, [r3], #1
 8008e58:	f802 1b01 	strb.w	r1, [r2], #1
 8008e5c:	4283      	cmp	r3, r0
 8008e5e:	d1f9      	bne.n	8008e54 <net::arp_handle(t_arp*)+0xc8>
 8008e60:	f8d4 6026 	ldr.w	r6, [r4, #38]	@ 0x26
 8008e64:	4b0d      	ldr	r3, [pc, #52]	@ (8008e9c <net::arp_handle(t_arp*)+0x110>)
 8008e66:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008e6a:	f803 2b01 	strb.w	r2, [r3], #1
 8008e6e:	45d1      	cmp	r9, sl
 8008e70:	d1f9      	bne.n	8008e66 <net::arp_handle(t_arp*)+0xda>
 8008e72:	69e3      	ldr	r3, [r4, #28]
 8008e74:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8008e78:	61ee      	str	r6, [r5, #28]
 8008e7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e7e:	4806      	ldr	r0, [pc, #24]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e80:	213c      	movs	r1, #60	@ 0x3c
 8008e82:	f009 bb2b 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8008e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	f04f 0801 	mov.w	r8, #1
 8008e90:	e79d      	b.n	8008dce <net::arp_handle(t_arp*)+0x42>
 8008e92:	4770      	bx	lr
 8008e94:	20009b50 	andcs	r9, r0, r0, asr fp
 8008e98:	20009b80 	andcs	r9, r0, r0, lsl #23
 8008e9c:	20009ba0 	andcs	r9, r0, r0, lsr #23

08008ea0 <net::ip_handle(t_ip4*)>:
 8008ea0:	7b81      	ldrb	r1, [r0, #14]
 8008ea2:	7dc2      	ldrb	r2, [r0, #23]
 8008ea4:	2945      	cmp	r1, #69	@ 0x45
 8008ea6:	d121      	bne.n	8008eec <net::ip_handle(t_ip4*)+0x4c>
 8008ea8:	3a01      	subs	r2, #1
 8008eaa:	b508      	push	{r3, lr}
 8008eac:	2a10      	cmp	r2, #16
 8008eae:	d80a      	bhi.n	8008ec6 <net::ip_handle(t_ip4*)+0x26>
 8008eb0:	e8df f002 	tbb	[pc, r2]
 8008eb4:	0909120e 	stmdbeq	r9, {r1, r2, r3, r9, ip}
 8008eb8:	09091609 	stmdbeq	r9, {r0, r3, r9, sl, ip}
 8008ebc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec4:	bd08000a 	stclt	0, cr0, [r8, #-40]	@ 0xffffffd8
 8008ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ecc:	f7ff bf1c 	b.w	8008d08 <net::udp_handle(t_udp*)>
 8008ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ed4:	f000 b80e 	b.w	8008ef4 <net::icmp_handle(t_icmp*)>
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008edc:	f7ff bb6c 	b.w	80085b8 <net::igmp_handle(t_igmp*)>
 8008ee0:	f7ff fc02 	bl	80086e8 <net::tcp_handle(t_tcp*)>
 8008ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ee8:	f7ff bbd8 	b.w	800869c <net::tcp_run()>
 8008eec:	2a02      	cmp	r2, #2
 8008eee:	d0f5      	beq.n	8008edc <net::ip_handle(t_ip4*)+0x3c>
 8008ef0:	4770      	bx	lr
 8008ef2:	bf00      	nop

08008ef4 <net::icmp_handle(t_icmp*)>:
 8008ef4:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 8008ef8:	2b08      	cmp	r3, #8
 8008efa:	d000      	beq.n	8008efe <net::icmp_handle(t_icmp*)+0xa>
 8008efc:	4770      	bx	lr
 8008efe:	f890 3023 	ldrb.w	r3, [r0, #35]	@ 0x23
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1fa      	bne.n	8008efc <net::icmp_handle(t_icmp*)+0x8>
 8008f06:	f100 0c06 	add.w	ip, r0, #6
 8008f0a:	4603      	mov	r3, r0
 8008f0c:	4662      	mov	r2, ip
 8008f0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	459c      	cmp	ip, r3
 8008f18:	d1f9      	bne.n	8008f0e <net::icmp_handle(t_icmp*)+0x1a>
 8008f1a:	4a14      	ldr	r2, [pc, #80]	@ (8008f6c <net::icmp_handle(t_icmp*)+0x78>)
 8008f1c:	f100 0c0c 	add.w	ip, r0, #12
 8008f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f24:	f803 1b01 	strb.w	r1, [r3], #1
 8008f28:	4563      	cmp	r3, ip
 8008f2a:	d1f9      	bne.n	8008f20 <net::icmp_handle(t_icmp*)+0x2c>
 8008f2c:	8a43      	ldrh	r3, [r0, #18]
 8008f2e:	4a10      	ldr	r2, [pc, #64]	@ (8008f70 <net::icmp_handle(t_icmp*)+0x7c>)
 8008f30:	f8d0 101e 	ldr.w	r1, [r0, #30]
 8008f34:	f8d0 c01a 	ldr.w	ip, [r0, #26]
 8008f38:	f8c0 c01e 	str.w	ip, [r0, #30]
 8008f3c:	43db      	mvns	r3, r3
 8008f3e:	8243      	strh	r3, [r0, #18]
 8008f40:	6913      	ldr	r3, [r2, #16]
 8008f42:	428b      	cmp	r3, r1
 8008f44:	8a01      	ldrh	r1, [r0, #16]
 8008f46:	bf18      	it	ne
 8008f48:	6813      	ldrne	r3, [r2, #0]
 8008f4a:	f8c0 301a 	str.w	r3, [r0, #26]
 8008f4e:	ba49      	rev16	r1, r1
 8008f50:	2300      	movs	r3, #0
 8008f52:	b289      	uxth	r1, r1
 8008f54:	7603      	strb	r3, [r0, #24]
 8008f56:	7643      	strb	r3, [r0, #25]
 8008f58:	f880 3022 	strb.w	r3, [r0, #34]	@ 0x22
 8008f5c:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8008f60:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8008f64:	310e      	adds	r1, #14
 8008f66:	f009 bab9 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8008f6a:	bf00      	nop
 8008f6c:	20009b64 	andcs	r9, r0, r4, ror #22
 8008f70:	20009b50 	andcs	r9, r0, r0, asr fp

08008f74 <__aeabi_drsub>:
 8008f74:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8008f78:	e002      	b.n	8008f80 <__adddf3>
 8008f7a:	bf00      	nop

08008f7c <__aeabi_dsub>:
 8008f7c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08008f80 <__adddf3>:
 8008f80:	b530      	push	{r4, r5, lr}
 8008f82:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8008f86:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8008f8a:	ea94 0f05 	teq	r4, r5
 8008f8e:	bf08      	it	eq
 8008f90:	ea90 0f02 	teqeq	r0, r2
 8008f94:	bf1f      	itttt	ne
 8008f96:	ea54 0c00 	orrsne.w	ip, r4, r0
 8008f9a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8008f9e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8008fa2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008fa6:	f000 80e2 	beq.w	800916e <__adddf3+0x1ee>
 8008faa:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8008fae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8008fb2:	bfb8      	it	lt
 8008fb4:	426d      	neglt	r5, r5
 8008fb6:	dd0c      	ble.n	8008fd2 <__adddf3+0x52>
 8008fb8:	442c      	add	r4, r5
 8008fba:	ea80 0202 	eor.w	r2, r0, r2
 8008fbe:	ea81 0303 	eor.w	r3, r1, r3
 8008fc2:	ea82 0000 	eor.w	r0, r2, r0
 8008fc6:	ea83 0101 	eor.w	r1, r3, r1
 8008fca:	ea80 0202 	eor.w	r2, r0, r2
 8008fce:	ea81 0303 	eor.w	r3, r1, r3
 8008fd2:	2d36      	cmp	r5, #54	@ 0x36
 8008fd4:	bf88      	it	hi
 8008fd6:	bd30      	pophi	{r4, r5, pc}
 8008fd8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8008fdc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8008fe0:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8008fe4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8008fe8:	d002      	beq.n	8008ff0 <__adddf3+0x70>
 8008fea:	4240      	negs	r0, r0
 8008fec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008ff0:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8008ff4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8008ff8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8008ffc:	d002      	beq.n	8009004 <__adddf3+0x84>
 8008ffe:	4252      	negs	r2, r2
 8009000:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009004:	ea94 0f05 	teq	r4, r5
 8009008:	f000 80a7 	beq.w	800915a <__adddf3+0x1da>
 800900c:	f1a4 0401 	sub.w	r4, r4, #1
 8009010:	f1d5 0e20 	rsbs	lr, r5, #32
 8009014:	db0d      	blt.n	8009032 <__adddf3+0xb2>
 8009016:	fa02 fc0e 	lsl.w	ip, r2, lr
 800901a:	fa22 f205 	lsr.w	r2, r2, r5
 800901e:	1880      	adds	r0, r0, r2
 8009020:	f141 0100 	adc.w	r1, r1, #0
 8009024:	fa03 f20e 	lsl.w	r2, r3, lr
 8009028:	1880      	adds	r0, r0, r2
 800902a:	fa43 f305 	asr.w	r3, r3, r5
 800902e:	4159      	adcs	r1, r3
 8009030:	e00e      	b.n	8009050 <__adddf3+0xd0>
 8009032:	f1a5 0520 	sub.w	r5, r5, #32
 8009036:	f10e 0e20 	add.w	lr, lr, #32
 800903a:	2a01      	cmp	r2, #1
 800903c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8009040:	bf28      	it	cs
 8009042:	f04c 0c02 	orrcs.w	ip, ip, #2
 8009046:	fa43 f305 	asr.w	r3, r3, r5
 800904a:	18c0      	adds	r0, r0, r3
 800904c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8009050:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8009054:	d507      	bpl.n	8009066 <__adddf3+0xe6>
 8009056:	f04f 0e00 	mov.w	lr, #0
 800905a:	f1dc 0c00 	rsbs	ip, ip, #0
 800905e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8009062:	eb6e 0101 	sbc.w	r1, lr, r1
 8009066:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800906a:	d31b      	bcc.n	80090a4 <__adddf3+0x124>
 800906c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8009070:	d30c      	bcc.n	800908c <__adddf3+0x10c>
 8009072:	0849      	lsrs	r1, r1, #1
 8009074:	ea5f 0030 	movs.w	r0, r0, rrx
 8009078:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800907c:	f104 0401 	add.w	r4, r4, #1
 8009080:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8009084:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8009088:	f080 809a 	bcs.w	80091c0 <__adddf3+0x240>
 800908c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8009090:	bf08      	it	eq
 8009092:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8009096:	f150 0000 	adcs.w	r0, r0, #0
 800909a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800909e:	ea41 0105 	orr.w	r1, r1, r5
 80090a2:	bd30      	pop	{r4, r5, pc}
 80090a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80090a8:	4140      	adcs	r0, r0
 80090aa:	eb41 0101 	adc.w	r1, r1, r1
 80090ae:	3c01      	subs	r4, #1
 80090b0:	bf28      	it	cs
 80090b2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80090b6:	d2e9      	bcs.n	800908c <__adddf3+0x10c>
 80090b8:	f091 0f00 	teq	r1, #0
 80090bc:	bf04      	itt	eq
 80090be:	4601      	moveq	r1, r0
 80090c0:	2000      	moveq	r0, #0
 80090c2:	fab1 f381 	clz	r3, r1
 80090c6:	bf08      	it	eq
 80090c8:	3320      	addeq	r3, #32
 80090ca:	f1a3 030b 	sub.w	r3, r3, #11
 80090ce:	f1b3 0220 	subs.w	r2, r3, #32
 80090d2:	da0c      	bge.n	80090ee <__adddf3+0x16e>
 80090d4:	320c      	adds	r2, #12
 80090d6:	dd08      	ble.n	80090ea <__adddf3+0x16a>
 80090d8:	f102 0c14 	add.w	ip, r2, #20
 80090dc:	f1c2 020c 	rsb	r2, r2, #12
 80090e0:	fa01 f00c 	lsl.w	r0, r1, ip
 80090e4:	fa21 f102 	lsr.w	r1, r1, r2
 80090e8:	e00c      	b.n	8009104 <__adddf3+0x184>
 80090ea:	f102 0214 	add.w	r2, r2, #20
 80090ee:	bfd8      	it	le
 80090f0:	f1c2 0c20 	rsble	ip, r2, #32
 80090f4:	fa01 f102 	lsl.w	r1, r1, r2
 80090f8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80090fc:	bfdc      	itt	le
 80090fe:	ea41 010c 	orrle.w	r1, r1, ip
 8009102:	4090      	lslle	r0, r2
 8009104:	1ae4      	subs	r4, r4, r3
 8009106:	bfa2      	ittt	ge
 8009108:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800910c:	4329      	orrge	r1, r5
 800910e:	bd30      	popge	{r4, r5, pc}
 8009110:	ea6f 0404 	mvn.w	r4, r4
 8009114:	3c1f      	subs	r4, #31
 8009116:	da1c      	bge.n	8009152 <__adddf3+0x1d2>
 8009118:	340c      	adds	r4, #12
 800911a:	dc0e      	bgt.n	800913a <__adddf3+0x1ba>
 800911c:	f104 0414 	add.w	r4, r4, #20
 8009120:	f1c4 0220 	rsb	r2, r4, #32
 8009124:	fa20 f004 	lsr.w	r0, r0, r4
 8009128:	fa01 f302 	lsl.w	r3, r1, r2
 800912c:	ea40 0003 	orr.w	r0, r0, r3
 8009130:	fa21 f304 	lsr.w	r3, r1, r4
 8009134:	ea45 0103 	orr.w	r1, r5, r3
 8009138:	bd30      	pop	{r4, r5, pc}
 800913a:	f1c4 040c 	rsb	r4, r4, #12
 800913e:	f1c4 0220 	rsb	r2, r4, #32
 8009142:	fa20 f002 	lsr.w	r0, r0, r2
 8009146:	fa01 f304 	lsl.w	r3, r1, r4
 800914a:	ea40 0003 	orr.w	r0, r0, r3
 800914e:	4629      	mov	r1, r5
 8009150:	bd30      	pop	{r4, r5, pc}
 8009152:	fa21 f004 	lsr.w	r0, r1, r4
 8009156:	4629      	mov	r1, r5
 8009158:	bd30      	pop	{r4, r5, pc}
 800915a:	f094 0f00 	teq	r4, #0
 800915e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8009162:	bf06      	itte	eq
 8009164:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8009168:	3401      	addeq	r4, #1
 800916a:	3d01      	subne	r5, #1
 800916c:	e74e      	b.n	800900c <__adddf3+0x8c>
 800916e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8009172:	bf18      	it	ne
 8009174:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8009178:	d029      	beq.n	80091ce <__adddf3+0x24e>
 800917a:	ea94 0f05 	teq	r4, r5
 800917e:	bf08      	it	eq
 8009180:	ea90 0f02 	teqeq	r0, r2
 8009184:	d005      	beq.n	8009192 <__adddf3+0x212>
 8009186:	ea54 0c00 	orrs.w	ip, r4, r0
 800918a:	bf04      	itt	eq
 800918c:	4619      	moveq	r1, r3
 800918e:	4610      	moveq	r0, r2
 8009190:	bd30      	pop	{r4, r5, pc}
 8009192:	ea91 0f03 	teq	r1, r3
 8009196:	bf1e      	ittt	ne
 8009198:	2100      	movne	r1, #0
 800919a:	2000      	movne	r0, #0
 800919c:	bd30      	popne	{r4, r5, pc}
 800919e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80091a2:	d105      	bne.n	80091b0 <__adddf3+0x230>
 80091a4:	0040      	lsls	r0, r0, #1
 80091a6:	4149      	adcs	r1, r1
 80091a8:	bf28      	it	cs
 80091aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80091ae:	bd30      	pop	{r4, r5, pc}
 80091b0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80091b4:	bf3c      	itt	cc
 80091b6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80091ba:	bd30      	popcc	{r4, r5, pc}
 80091bc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80091c0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80091c4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80091c8:	f04f 0000 	mov.w	r0, #0
 80091cc:	bd30      	pop	{r4, r5, pc}
 80091ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80091d2:	bf1a      	itte	ne
 80091d4:	4619      	movne	r1, r3
 80091d6:	4610      	movne	r0, r2
 80091d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80091dc:	bf1c      	itt	ne
 80091de:	460b      	movne	r3, r1
 80091e0:	4602      	movne	r2, r0
 80091e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80091e6:	bf06      	itte	eq
 80091e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80091ec:	ea91 0f03 	teqeq	r1, r3
 80091f0:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80091f4:	bd30      	pop	{r4, r5, pc}
 80091f6:	bf00      	nop

080091f8 <__aeabi_ui2d>:
 80091f8:	f090 0f00 	teq	r0, #0
 80091fc:	bf04      	itt	eq
 80091fe:	2100      	moveq	r1, #0
 8009200:	4770      	bxeq	lr
 8009202:	b530      	push	{r4, r5, lr}
 8009204:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8009208:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800920c:	f04f 0500 	mov.w	r5, #0
 8009210:	f04f 0100 	mov.w	r1, #0
 8009214:	e750      	b.n	80090b8 <__adddf3+0x138>
 8009216:	bf00      	nop

08009218 <__aeabi_i2d>:
 8009218:	f090 0f00 	teq	r0, #0
 800921c:	bf04      	itt	eq
 800921e:	2100      	moveq	r1, #0
 8009220:	4770      	bxeq	lr
 8009222:	b530      	push	{r4, r5, lr}
 8009224:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8009228:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800922c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8009230:	bf48      	it	mi
 8009232:	4240      	negmi	r0, r0
 8009234:	f04f 0100 	mov.w	r1, #0
 8009238:	e73e      	b.n	80090b8 <__adddf3+0x138>
 800923a:	bf00      	nop

0800923c <__aeabi_f2d>:
 800923c:	0042      	lsls	r2, r0, #1
 800923e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8009242:	ea4f 0131 	mov.w	r1, r1, rrx
 8009246:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800924a:	bf1f      	itttt	ne
 800924c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8009250:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8009254:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8009258:	4770      	bxne	lr
 800925a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800925e:	bf08      	it	eq
 8009260:	4770      	bxeq	lr
 8009262:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8009266:	bf04      	itt	eq
 8009268:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 800926c:	4770      	bxeq	lr
 800926e:	b530      	push	{r4, r5, lr}
 8009270:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8009274:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8009278:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800927c:	e71c      	b.n	80090b8 <__adddf3+0x138>
 800927e:	bf00      	nop

08009280 <__aeabi_ul2d>:
 8009280:	ea50 0201 	orrs.w	r2, r0, r1
 8009284:	bf08      	it	eq
 8009286:	4770      	bxeq	lr
 8009288:	b530      	push	{r4, r5, lr}
 800928a:	f04f 0500 	mov.w	r5, #0
 800928e:	e00a      	b.n	80092a6 <__aeabi_l2d+0x16>

08009290 <__aeabi_l2d>:
 8009290:	ea50 0201 	orrs.w	r2, r0, r1
 8009294:	bf08      	it	eq
 8009296:	4770      	bxeq	lr
 8009298:	b530      	push	{r4, r5, lr}
 800929a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800929e:	d502      	bpl.n	80092a6 <__aeabi_l2d+0x16>
 80092a0:	4240      	negs	r0, r0
 80092a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80092a6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80092aa:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80092ae:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80092b2:	f43f aed8 	beq.w	8009066 <__adddf3+0xe6>
 80092b6:	f04f 0203 	mov.w	r2, #3
 80092ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80092be:	bf18      	it	ne
 80092c0:	3203      	addne	r2, #3
 80092c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80092c6:	bf18      	it	ne
 80092c8:	3203      	addne	r2, #3
 80092ca:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80092ce:	f1c2 0320 	rsb	r3, r2, #32
 80092d2:	fa00 fc03 	lsl.w	ip, r0, r3
 80092d6:	fa20 f002 	lsr.w	r0, r0, r2
 80092da:	fa01 fe03 	lsl.w	lr, r1, r3
 80092de:	ea40 000e 	orr.w	r0, r0, lr
 80092e2:	fa21 f102 	lsr.w	r1, r1, r2
 80092e6:	4414      	add	r4, r2
 80092e8:	e6bd      	b.n	8009066 <__adddf3+0xe6>
 80092ea:	bf00      	nop

080092ec <__aeabi_d2f>:
 80092ec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80092f0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 80092f4:	bf24      	itt	cs
 80092f6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 80092fa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 80092fe:	d90d      	bls.n	800931c <__aeabi_d2f+0x30>
 8009300:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8009304:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8009308:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800930c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8009310:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8009314:	bf08      	it	eq
 8009316:	f020 0001 	biceq.w	r0, r0, #1
 800931a:	4770      	bx	lr
 800931c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8009320:	d121      	bne.n	8009366 <__aeabi_d2f+0x7a>
 8009322:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8009326:	bfbc      	itt	lt
 8009328:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 800932c:	4770      	bxlt	lr
 800932e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8009332:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8009336:	f1c2 0218 	rsb	r2, r2, #24
 800933a:	f1c2 0c20 	rsb	ip, r2, #32
 800933e:	fa10 f30c 	lsls.w	r3, r0, ip
 8009342:	fa20 f002 	lsr.w	r0, r0, r2
 8009346:	bf18      	it	ne
 8009348:	f040 0001 	orrne.w	r0, r0, #1
 800934c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009350:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8009354:	fa03 fc0c 	lsl.w	ip, r3, ip
 8009358:	ea40 000c 	orr.w	r0, r0, ip
 800935c:	fa23 f302 	lsr.w	r3, r3, r2
 8009360:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8009364:	e7cc      	b.n	8009300 <__aeabi_d2f+0x14>
 8009366:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800936a:	d107      	bne.n	800937c <__aeabi_d2f+0x90>
 800936c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8009370:	bf1e      	ittt	ne
 8009372:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8009376:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 800937a:	4770      	bxne	lr
 800937c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8009380:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8009384:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8009388:	4770      	bx	lr
 800938a:	bf00      	nop

0800938c <Reset_Handler>:
 800938c:	490e      	ldr	r1, [pc, #56]	@ (80093c8 <ZeroBSSLoop+0x1a>)
 800938e:	4a0f      	ldr	r2, [pc, #60]	@ (80093cc <ZeroBSSLoop+0x1e>)
 8009390:	4b0f      	ldr	r3, [pc, #60]	@ (80093d0 <ZeroBSSLoop+0x22>)
 8009392:	1a5b      	subs	r3, r3, r1
 8009394:	d005      	beq.n	80093a2 <ZeroBSS>

08009396 <CopyDataLoop>:
 8009396:	f812 4b01 	ldrb.w	r4, [r2], #1
 800939a:	f801 4b01 	strb.w	r4, [r1], #1
 800939e:	3b01      	subs	r3, #1
 80093a0:	dcf9      	bgt.n	8009396 <CopyDataLoop>

080093a2 <ZeroBSS>:
 80093a2:	4a0c      	ldr	r2, [pc, #48]	@ (80093d4 <ZeroBSSLoop+0x26>)
 80093a4:	4b0c      	ldr	r3, [pc, #48]	@ (80093d8 <ZeroBSSLoop+0x2a>)
 80093a6:	eba3 0302 	sub.w	r3, r3, r2
 80093aa:	f04f 0400 	mov.w	r4, #0

080093ae <ZeroBSSLoop>:
 80093ae:	f842 4b04 	str.w	r4, [r2], #4
 80093b2:	3b04      	subs	r3, #4
 80093b4:	dcfb      	bgt.n	80093ae <ZeroBSSLoop>
 80093b6:	f00b fab3 	bl	8014920 <SystemInit>
 80093ba:	f00d f9e1 	bl	8016780 <__libc_init_array>
 80093be:	f000 fa8b 	bl	80098d8 <main>
 80093c2:	4770      	bx	lr
 80093c4:	bf00      	nop
 80093c6:	00000000 	andeq	r0, r0, r0
 80093ca:	a9742000 	ldmdbge	r4!, {sp}^
 80093ce:	00740801 	rsbseq	r0, r4, r1, lsl #16
 80093d2:	00742000 	rsbseq	r2, r4, r0
 80093d6:	460c2000 	strmi	r2, [ip], -r0
 80093da:	 	ldrb	r2, [lr, r1]!

080093dc <ADC_IRQHandler>:
 80093dc:	e7fe      	b.n	80093dc <ADC_IRQHandler>

080093de <HardFault_Handler>:
 80093de:	f01e 0f04 	tst.w	lr, #4
 80093e2:	bf0c      	ite	eq
 80093e4:	f3ef 8008 	mrseq	r0, MSP
 80093e8:	f3ef 8009 	mrsne	r0, PSP
 80093ec:	4671      	mov	r1, lr
 80093ee:	f000 b801 	b.w	80093f4 <hardfault_handler>
 80093f2:	4770      	bx	lr

080093f4 <hardfault_handler>:
 80093f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093f8:	4d2f      	ldr	r5, [pc, #188]	@ (80094b8 <hardfault_handler+0xc4>)
 80093fa:	b087      	sub	sp, #28
 80093fc:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80093fe:	9301      	str	r3, [sp, #4]
 8009400:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8009402:	9302      	str	r3, [sp, #8]
 8009404:	e9d0 9303 	ldrd	r9, r3, [r0, #12]
 8009408:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 800940a:	9303      	str	r3, [sp, #12]
 800940c:	e9d0 ba01 	ldrd	fp, sl, [r0, #4]
 8009410:	69c3      	ldr	r3, [r0, #28]
 8009412:	9304      	str	r3, [sp, #16]
 8009414:	e9d0 7605 	ldrd	r7, r6, [r0, #20]
 8009418:	4688      	mov	r8, r1
 800941a:	6801      	ldr	r1, [r0, #0]
 800941c:	4827      	ldr	r0, [pc, #156]	@ (80094bc <hardfault_handler+0xc8>)
 800941e:	9105      	str	r1, [sp, #20]
 8009420:	f00d fcd6 	bl	8016dd0 <printf>
 8009424:	4826      	ldr	r0, [pc, #152]	@ (80094c0 <hardfault_handler+0xcc>)
 8009426:	f00d fcd3 	bl	8016dd0 <printf>
 800942a:	9905      	ldr	r1, [sp, #20]
 800942c:	4825      	ldr	r0, [pc, #148]	@ (80094c4 <hardfault_handler+0xd0>)
 800942e:	f00d fccf 	bl	8016dd0 <printf>
 8009432:	4659      	mov	r1, fp
 8009434:	4824      	ldr	r0, [pc, #144]	@ (80094c8 <hardfault_handler+0xd4>)
 8009436:	f00d fccb 	bl	8016dd0 <printf>
 800943a:	4651      	mov	r1, sl
 800943c:	4823      	ldr	r0, [pc, #140]	@ (80094cc <hardfault_handler+0xd8>)
 800943e:	f00d fcc7 	bl	8016dd0 <printf>
 8009442:	4649      	mov	r1, r9
 8009444:	4822      	ldr	r0, [pc, #136]	@ (80094d0 <hardfault_handler+0xdc>)
 8009446:	f00d fcc3 	bl	8016dd0 <printf>
 800944a:	9903      	ldr	r1, [sp, #12]
 800944c:	4821      	ldr	r0, [pc, #132]	@ (80094d4 <hardfault_handler+0xe0>)
 800944e:	f00d fcbf 	bl	8016dd0 <printf>
 8009452:	4639      	mov	r1, r7
 8009454:	4820      	ldr	r0, [pc, #128]	@ (80094d8 <hardfault_handler+0xe4>)
 8009456:	f00d fcbb 	bl	8016dd0 <printf>
 800945a:	4631      	mov	r1, r6
 800945c:	481f      	ldr	r0, [pc, #124]	@ (80094dc <hardfault_handler+0xe8>)
 800945e:	f00d fcb7 	bl	8016dd0 <printf>
 8009462:	9904      	ldr	r1, [sp, #16]
 8009464:	481e      	ldr	r0, [pc, #120]	@ (80094e0 <hardfault_handler+0xec>)
 8009466:	f00d fcb3 	bl	8016dd0 <printf>
 800946a:	481e      	ldr	r0, [pc, #120]	@ (80094e4 <hardfault_handler+0xf0>)
 800946c:	f00d fcb0 	bl	8016dd0 <printf>
 8009470:	4621      	mov	r1, r4
 8009472:	481d      	ldr	r0, [pc, #116]	@ (80094e8 <hardfault_handler+0xf4>)
 8009474:	f00d fcac 	bl	8016dd0 <printf>
 8009478:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 800947a:	481c      	ldr	r0, [pc, #112]	@ (80094ec <hardfault_handler+0xf8>)
 800947c:	f00d fca8 	bl	8016dd0 <printf>
 8009480:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 8009482:	481b      	ldr	r0, [pc, #108]	@ (80094f0 <hardfault_handler+0xfc>)
 8009484:	f00d fca4 	bl	8016dd0 <printf>
 8009488:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 800948a:	481a      	ldr	r0, [pc, #104]	@ (80094f4 <hardfault_handler+0x100>)
 800948c:	f00d fca0 	bl	8016dd0 <printf>
 8009490:	0622      	lsls	r2, r4, #24
 8009492:	d503      	bpl.n	800949c <hardfault_handler+0xa8>
 8009494:	9902      	ldr	r1, [sp, #8]
 8009496:	4818      	ldr	r0, [pc, #96]	@ (80094f8 <hardfault_handler+0x104>)
 8009498:	f00d fc9a 	bl	8016dd0 <printf>
 800949c:	0423      	lsls	r3, r4, #16
 800949e:	d503      	bpl.n	80094a8 <hardfault_handler+0xb4>
 80094a0:	9901      	ldr	r1, [sp, #4]
 80094a2:	4816      	ldr	r0, [pc, #88]	@ (80094fc <hardfault_handler+0x108>)
 80094a4:	f00d fc94 	bl	8016dd0 <printf>
 80094a8:	4815      	ldr	r0, [pc, #84]	@ (8009500 <hardfault_handler+0x10c>)
 80094aa:	f00d fc91 	bl	8016dd0 <printf>
 80094ae:	4815      	ldr	r0, [pc, #84]	@ (8009504 <hardfault_handler+0x110>)
 80094b0:	4641      	mov	r1, r8
 80094b2:	f00d fc8d 	bl	8016dd0 <printf>
 80094b6:	e7fe      	b.n	80094b6 <hardfault_handler+0xc2>
 80094b8:	e000ed00 	and	lr, r0, r0, lsl #26
 80094bc:	08017314 	stmdaeq	r1, {r2, r4, r8, r9, ip, sp, lr}
 80094c0:	08017321 	stmdaeq	r1, {r0, r5, r8, r9, ip, sp, lr}
 80094c4:	08017331 	stmdaeq	r1, {r0, r4, r5, r8, r9, ip, sp, lr}
 80094c8:	0801733c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, sp, lr}
 80094cc:	08017347 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, ip, sp, lr}
 80094d0:	08017352 	stmdaeq	r1, {r1, r4, r6, r8, r9, ip, sp, lr}
 80094d4:	0801735d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, ip, sp, lr}
 80094d8:	08017368 	stmdaeq	r1, {r3, r5, r6, r8, r9, ip, sp, lr}
 80094dc:	08017373 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
 80094e0:	0801737e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, ip, sp, lr}
 80094e4:	08017389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp, lr}
 80094e8:	08017395 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, ip, sp, lr}
 80094ec:	080173a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, sp, lr}
 80094f0:	080173ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 80094f4:	080173b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, ip, sp, lr}
 80094f8:	080173c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, ip, sp, lr}
 80094fc:	080173d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, ip, sp, lr}
 8009500:	080173de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, r9, ip, sp, lr}
 8009504:	080173e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, ip, sp, lr}

08009508 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>:
 8009508:	b110      	cbz	r0, 8009510 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]+0x8>
 800950a:	6803      	ldr	r3, [r0, #0]
 800950c:	6a1b      	ldr	r3, [r3, #32]
 800950e:	4718      	bx	r3
 8009510:	4770      	bx	lr

08009512 <Display::PutChar(int) [clone .isra.0]>:
 8009512:	b110      	cbz	r0, 800951a <Display::PutChar(int) [clone .isra.0]+0x8>
 8009514:	6803      	ldr	r3, [r0, #0]
 8009516:	695b      	ldr	r3, [r3, #20]
 8009518:	4718      	bx	r3
 800951a:	4770      	bx	lr

0800951c <net::dhcp_run()>:
 800951c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800951e:	4b0c      	ldr	r3, [pc, #48]	@ (8009550 <net::dhcp_run()+0x34>)
 8009520:	6a1c      	ldr	r4, [r3, #32]
 8009522:	b19c      	cbz	r4, 800954c <net::dhcp_run()+0x30>
 8009524:	a902      	add	r1, sp, #8
 8009526:	6820      	ldr	r0, [r4, #0]
 8009528:	f10d 0306 	add.w	r3, sp, #6
 800952c:	aa03      	add	r2, sp, #12
 800952e:	f008 fb49 	bl	8011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009532:	4601      	mov	r1, r0
 8009534:	b150      	cbz	r0, 800954c <net::dhcp_run()+0x30>
 8009536:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800953a:	2b43      	cmp	r3, #67	@ 0x43
 800953c:	d106      	bne.n	800954c <net::dhcp_run()+0x30>
 800953e:	9802      	ldr	r0, [sp, #8]
 8009540:	6863      	ldr	r3, [r4, #4]
 8009542:	6842      	ldr	r2, [r0, #4]
 8009544:	429a      	cmp	r2, r3
 8009546:	d101      	bne.n	800954c <net::dhcp_run()+0x30>
 8009548:	f007 fdc6 	bl	80110d8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
 800954c:	b004      	add	sp, #16
 800954e:	bd10      	pop	{r4, pc}
 8009550:	20009b50 	andcs	r9, r0, r0, asr fp

08009554 <Display::Printf(unsigned long, char const*, ...)>:
 8009554:	b40c      	push	{r2, r3}
 8009556:	b570      	push	{r4, r5, r6, lr}
 8009558:	6984      	ldr	r4, [r0, #24]
 800955a:	b08a      	sub	sp, #40	@ 0x28
 800955c:	4605      	mov	r5, r0
 800955e:	460e      	mov	r6, r1
 8009560:	b174      	cbz	r4, 8009580 <Display::Printf(unsigned long, char const*, ...)+0x2c>
 8009562:	ab0f      	add	r3, sp, #60	@ 0x3c
 8009564:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009566:	9301      	str	r3, [sp, #4]
 8009568:	2120      	movs	r1, #32
 800956a:	a802      	add	r0, sp, #8
 800956c:	f00d fc70 	bl	8016e50 <vsnprintf>
 8009570:	4604      	mov	r4, r0
 8009572:	69a8      	ldr	r0, [r5, #24]
 8009574:	6803      	ldr	r3, [r0, #0]
 8009576:	aa02      	add	r2, sp, #8
 8009578:	69dd      	ldr	r5, [r3, #28]
 800957a:	4631      	mov	r1, r6
 800957c:	4623      	mov	r3, r4
 800957e:	47a8      	blx	r5
 8009580:	4620      	mov	r0, r4
 8009582:	b00a      	add	sp, #40	@ 0x28
 8009584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009588:	b002      	add	sp, #8
 800958a:	4770      	bx	lr

0800958c <Display::TextStatus(char const*, unsigned long)>:
 800958c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009590:	4605      	mov	r5, r0
 8009592:	6980      	ldr	r0, [r0, #24]
 8009594:	460c      	mov	r4, r1
 8009596:	4616      	mov	r6, r2
 8009598:	b300      	cbz	r0, 80095dc <Display::TextStatus(char const*, unsigned long)+0x50>
 800959a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800959e:	f108 39ff 	add.w	r9, r8, #4294967295	@ 0xffffffff
 80095a2:	464a      	mov	r2, r9
 80095a4:	2100      	movs	r1, #0
 80095a6:	f7ff ffaf 	bl	8009508 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 80095aa:	f04f 0a00 	mov.w	sl, #0
 80095ae:	3f01      	subs	r7, #1
 80095b0:	45ba      	cmp	sl, r7
 80095b2:	69a8      	ldr	r0, [r5, #24]
 80095b4:	d31a      	bcc.n	80095ec <Display::TextStatus(char const*, unsigned long)+0x60>
 80095b6:	464a      	mov	r2, r9
 80095b8:	2100      	movs	r1, #0
 80095ba:	f7ff ffa5 	bl	8009508 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 80095be:	69a8      	ldr	r0, [r5, #24]
 80095c0:	b160      	cbz	r0, 80095dc <Display::TextStatus(char const*, unsigned long)+0x50>
 80095c2:	6841      	ldr	r1, [r0, #4]
 80095c4:	2300      	movs	r3, #0
 80095c6:	5ce2      	ldrb	r2, [r4, r3]
 80095c8:	b11a      	cbz	r2, 80095d2 <Display::TextStatus(char const*, unsigned long)+0x46>
 80095ca:	1c5a      	adds	r2, r3, #1
 80095cc:	4299      	cmp	r1, r3
 80095ce:	4613      	mov	r3, r2
 80095d0:	d8f9      	bhi.n	80095c6 <Display::TextStatus(char const*, unsigned long)+0x3a>
 80095d2:	6802      	ldr	r2, [r0, #0]
 80095d4:	4641      	mov	r1, r8
 80095d6:	69d5      	ldr	r5, [r2, #28]
 80095d8:	4622      	mov	r2, r4
 80095da:	47a8      	blx	r5
 80095dc:	1c73      	adds	r3, r6, #1
 80095de:	d00b      	beq.n	80095f8 <Display::TextStatus(char const*, unsigned long)+0x6c>
 80095e0:	4621      	mov	r1, r4
 80095e2:	4630      	mov	r0, r6
 80095e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095e8:	f00b b982 	b.w	80148f0 <console_status>
 80095ec:	2120      	movs	r1, #32
 80095ee:	f7ff ff90 	bl	8009512 <Display::PutChar(int) [clone .isra.0]>
 80095f2:	f10a 0a01 	add.w	sl, sl, #1
 80095f6:	e7db      	b.n	80095b0 <Display::TextStatus(char const*, unsigned long)+0x24>
 80095f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080095fc <Display::SetSleep(bool)>:
 80095fc:	b538      	push	{r3, r4, r5, lr}
 80095fe:	4604      	mov	r4, r0
 8009600:	6980      	ldr	r0, [r0, #24]
 8009602:	460d      	mov	r5, r1
 8009604:	b138      	cbz	r0, 8009616 <Display::SetSleep(bool)+0x1a>
 8009606:	6803      	ldr	r3, [r0, #0]
 8009608:	7561      	strb	r1, [r4, #21]
 800960a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800960c:	4798      	blx	r3
 800960e:	b915      	cbnz	r5, 8009616 <Display::SetSleep(bool)+0x1a>
 8009610:	4b01      	ldr	r3, [pc, #4]	@ (8009618 <Display::SetSleep(bool)+0x1c>)
 8009612:	681b      	ldr	r3, [r3, #0]
 8009614:	6063      	str	r3, [r4, #4]
 8009616:	bd38      	pop	{r3, r4, r5, pc}
 8009618:	200145c8 	andcs	r4, r1, r8, asr #11

0800961c <hardware::ledblink::display(unsigned long)>:
 800961c:	b538      	push	{r3, r4, r5, lr}
 800961e:	4d0d      	ldr	r5, [pc, #52]	@ (8009654 <hardware::ledblink::display(unsigned long)+0x38>)
 8009620:	682a      	ldr	r2, [r5, #0]
 8009622:	4603      	mov	r3, r0
 8009624:	6990      	ldr	r0, [r2, #24]
 8009626:	b1a0      	cbz	r0, 8009652 <hardware::ledblink::display(unsigned long)+0x36>
 8009628:	2b05      	cmp	r3, #5
 800962a:	bf9c      	itt	ls
 800962c:	4a0a      	ldrls	r2, [pc, #40]	@ (8009658 <hardware::ledblink::display(unsigned long)+0x3c>)
 800962e:	5cd4      	ldrbls	r4, [r2, r3]
 8009630:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8009634:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 8009638:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 800963c:	bf88      	it	hi
 800963e:	2455      	movhi	r4, #85	@ 0x55
 8009640:	f7ff ff62 	bl	8009508 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009644:	682b      	ldr	r3, [r5, #0]
 8009646:	4621      	mov	r1, r4
 8009648:	6998      	ldr	r0, [r3, #24]
 800964a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800964e:	f7ff bf60 	b.w	8009512 <Display::PutChar(int) [clone .isra.0]>
 8009652:	bd38      	pop	{r3, r4, r5, pc}
 8009654:	20009c14 	andcs	r9, r0, r4, lsl ip
 8009658:	08017f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}

0800965c <pixel::pixel_convert_TxH(unsigned char)>:
 800965c:	28f0      	cmp	r0, #240	@ 0xf0
 800965e:	d017      	beq.n	8009690 <pixel::pixel_convert_TxH(unsigned char)+0x34>
 8009660:	d80c      	bhi.n	800967c <pixel::pixel_convert_TxH(unsigned char)+0x20>
 8009662:	28c0      	cmp	r0, #192	@ 0xc0
 8009664:	d017      	beq.n	8009696 <pixel::pixel_convert_TxH(unsigned char)+0x3a>
 8009666:	28e0      	cmp	r0, #224	@ 0xe0
 8009668:	d018      	beq.n	800969c <pixel::pixel_convert_TxH(unsigned char)+0x40>
 800966a:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 80096b0 <pixel::pixel_convert_TxH(unsigned char)+0x54>
 800966e:	2880      	cmp	r0, #128	@ 0x80
 8009670:	eef4 7a04 	vmov.f32	s15, #68	@ 0x3e200000  0.1562500
 8009674:	bf08      	it	eq
 8009676:	eeb0 0a67 	vmoveq.f32	s0, s15
 800967a:	4770      	bx	lr
 800967c:	28fc      	cmp	r0, #252	@ 0xfc
 800967e:	d010      	beq.n	80096a2 <pixel::pixel_convert_TxH(unsigned char)+0x46>
 8009680:	28fe      	cmp	r0, #254	@ 0xfe
 8009682:	d011      	beq.n	80096a8 <pixel::pixel_convert_TxH(unsigned char)+0x4c>
 8009684:	ed9f 0a0a 	vldr	s0, [pc, #40]	@ 80096b0 <pixel::pixel_convert_TxH(unsigned char)+0x54>
 8009688:	28f8      	cmp	r0, #248	@ 0xf8
 800968a:	eef6 7a09 	vmov.f32	s15, #105	@ 0x3f480000  0.7812500
 800968e:	e7f1      	b.n	8009674 <pixel::pixel_convert_TxH(unsigned char)+0x18>
 8009690:	eeb6 0a04 	vmov.f32	s0, #100	@ 0x3f200000  0.625
 8009694:	4770      	bx	lr
 8009696:	eeb5 0a04 	vmov.f32	s0, #84	@ 0x3ea00000  0.3125000
 800969a:	4770      	bx	lr
 800969c:	eeb5 0a0e 	vmov.f32	s0, #94	@ 0x3ef00000  0.4687500
 80096a0:	4770      	bx	lr
 80096a2:	eeb6 0a0e 	vmov.f32	s0, #110	@ 0x3f700000  0.9375000
 80096a6:	4770      	bx	lr
 80096a8:	ed9f 0a02 	vldr	s0, [pc, #8]	@ 80096b4 <pixel::pixel_convert_TxH(unsigned char)+0x58>
 80096ac:	4770      	bx	lr
 80096ae:	bf00      	nop
 80096b0:	00000000 	andeq	r0, r0, r0
 80096b4:	3f8c0000 	svccc	0x008c0000

080096b8 <PixelConfiguration::Print()>:
 80096b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096ba:	4604      	mov	r4, r0
 80096bc:	4824      	ldr	r0, [pc, #144]	@ (8009750 <PixelConfiguration::Print()+0x98>)
 80096be:	f00d fbdc 	bl	8016e7a <puts>
 80096c2:	68e0      	ldr	r0, [r4, #12]
 80096c4:	f004 fcbc 	bl	800e040 <pixel::pixel_get_type(pixel::Type)>
 80096c8:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80096cc:	4601      	mov	r1, r0
 80096ce:	4821      	ldr	r0, [pc, #132]	@ (8009754 <PixelConfiguration::Print()+0x9c>)
 80096d0:	f00d fb7e 	bl	8016dd0 <printf>
 80096d4:	6821      	ldr	r1, [r4, #0]
 80096d6:	4820      	ldr	r0, [pc, #128]	@ (8009758 <PixelConfiguration::Print()+0xa0>)
 80096d8:	f00d fb7a 	bl	8016dd0 <printf>
 80096dc:	7d23      	ldrb	r3, [r4, #20]
 80096de:	b373      	cbz	r3, 800973e <PixelConfiguration::Print()+0x86>
 80096e0:	6920      	ldr	r0, [r4, #16]
 80096e2:	f004 fd05 	bl	800e0f0 <pixel::pixel_get_map(pixel::Map)>
 80096e6:	6922      	ldr	r2, [r4, #16]
 80096e8:	4601      	mov	r1, r0
 80096ea:	481c      	ldr	r0, [pc, #112]	@ (800975c <PixelConfiguration::Print()+0xa4>)
 80096ec:	f00d fb70 	bl	8016dd0 <printf>
 80096f0:	7d65      	ldrb	r5, [r4, #21]
 80096f2:	4628      	mov	r0, r5
 80096f4:	f7ff ffb2 	bl	800965c <pixel::pixel_convert_TxH(unsigned char)>
 80096f8:	ee10 0a10 	vmov	r0, s0
 80096fc:	f7ff fd9e 	bl	800923c <__aeabi_f2d>
 8009700:	9500      	str	r5, [sp, #0]
 8009702:	4602      	mov	r2, r0
 8009704:	460b      	mov	r3, r1
 8009706:	4816      	ldr	r0, [pc, #88]	@ (8009760 <PixelConfiguration::Print()+0xa8>)
 8009708:	f00d fb62 	bl	8016dd0 <printf>
 800970c:	7da5      	ldrb	r5, [r4, #22]
 800970e:	4628      	mov	r0, r5
 8009710:	f7ff ffa4 	bl	800965c <pixel::pixel_convert_TxH(unsigned char)>
 8009714:	ee10 0a10 	vmov	r0, s0
 8009718:	f7ff fd90 	bl	800923c <__aeabi_f2d>
 800971c:	9500      	str	r5, [sp, #0]
 800971e:	4602      	mov	r2, r0
 8009720:	460b      	mov	r3, r1
 8009722:	4810      	ldr	r0, [pc, #64]	@ (8009764 <PixelConfiguration::Print()+0xac>)
 8009724:	f00d fb54 	bl	8016dd0 <printf>
 8009728:	6861      	ldr	r1, [r4, #4]
 800972a:	480f      	ldr	r0, [pc, #60]	@ (8009768 <PixelConfiguration::Print()+0xb0>)
 800972c:	f00d fb50 	bl	8016dd0 <printf>
 8009730:	69a1      	ldr	r1, [r4, #24]
 8009732:	480e      	ldr	r0, [pc, #56]	@ (800976c <PixelConfiguration::Print()+0xb4>)
 8009734:	b003      	add	sp, #12
 8009736:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800973a:	f00d bb49 	b.w	8016dd0 <printf>
 800973e:	68e3      	ldr	r3, [r4, #12]
 8009740:	3b0b      	subs	r3, #11
 8009742:	2b01      	cmp	r3, #1
 8009744:	d8f0      	bhi.n	8009728 <PixelConfiguration::Print()+0x70>
 8009746:	7de1      	ldrb	r1, [r4, #23]
 8009748:	4809      	ldr	r0, [pc, #36]	@ (8009770 <PixelConfiguration::Print()+0xb8>)
 800974a:	f00d fb41 	bl	8016dd0 <printf>
 800974e:	e7eb      	b.n	8009728 <PixelConfiguration::Print()+0x70>
 8009750:	080173fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 8009754:	0801740e 	stmdaeq	r1, {r1, r2, r3, sl, ip, sp, lr}
 8009758:	08017432 	stmdaeq	r1, {r1, r4, r5, sl, ip, sp, lr}
 800975c:	08017441 	stmdaeq	r1, {r0, r6, sl, ip, sp, lr}
 8009760:	08017455 	stmdaeq	r1, {r0, r2, r4, r6, sl, ip, sp, lr}
 8009764:	0801746d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, ip, sp, lr}
 8009768:	0801749c 	stmdaeq	r1, {r2, r3, r4, r7, sl, ip, sp, lr}
 800976c:	080174ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, ip, sp, lr}
 8009770:	08017485 	stmdaeq	r1, {r0, r2, r7, sl, ip, sp, lr}

08009774 <RDMDeviceResponder::~RDMDeviceResponder()>:
 8009774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009776:	4b17      	ldr	r3, [pc, #92]	@ (80097d4 <RDMDeviceResponder::~RDMDeviceResponder()+0x60>)
 8009778:	6003      	str	r3, [r0, #0]
 800977a:	2500      	movs	r5, #0
 800977c:	4604      	mov	r4, r0
 800977e:	462e      	mov	r6, r5
 8009780:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 8009784:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8009786:	429d      	cmp	r5, r3
 8009788:	d30e      	bcc.n	80097a8 <RDMDeviceResponder::~RDMDeviceResponder()+0x34>
 800978a:	b108      	cbz	r0, 8009790 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>
 800978c:	f00d fd2a 	bl	80171e4 <operator delete[](void*)>
 8009790:	2500      	movs	r5, #0
 8009792:	462e      	mov	r6, r5
 8009794:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8009798:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800979a:	429d      	cmp	r5, r3
 800979c:	d30f      	bcc.n	80097be <RDMDeviceResponder::~RDMDeviceResponder()+0x4a>
 800979e:	b108      	cbz	r0, 80097a4 <RDMDeviceResponder::~RDMDeviceResponder()+0x30>
 80097a0:	f00d fd20 	bl	80171e4 <operator delete[](void*)>
 80097a4:	4620      	mov	r0, r4
 80097a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80097a8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80097ac:	00af      	lsls	r7, r5, #2
 80097ae:	b110      	cbz	r0, 80097b6 <RDMDeviceResponder::~RDMDeviceResponder()+0x42>
 80097b0:	6803      	ldr	r3, [r0, #0]
 80097b2:	685b      	ldr	r3, [r3, #4]
 80097b4:	4798      	blx	r3
 80097b6:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 80097b8:	3501      	adds	r5, #1
 80097ba:	51de      	str	r6, [r3, r7]
 80097bc:	e7e0      	b.n	8009780 <RDMDeviceResponder::~RDMDeviceResponder()+0xc>
 80097be:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80097c2:	b128      	cbz	r0, 80097d0 <RDMDeviceResponder::~RDMDeviceResponder()+0x5c>
 80097c4:	6803      	ldr	r3, [r0, #0]
 80097c6:	685b      	ldr	r3, [r3, #4]
 80097c8:	4798      	blx	r3
 80097ca:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80097cc:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 80097d0:	3501      	adds	r5, #1
 80097d2:	e7df      	b.n	8009794 <RDMDeviceResponder::~RDMDeviceResponder()+0x20>
 80097d4:	08019d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, pc}

080097d8 <RDMNetDevice::~RDMNetDevice()>:
 80097d8:	b510      	push	{r4, lr}
 80097da:	4b07      	ldr	r3, [pc, #28]	@ (80097f8 <RDMNetDevice::~RDMNetDevice()+0x20>)
 80097dc:	6003      	str	r3, [r0, #0]
 80097de:	4604      	mov	r4, r0
 80097e0:	4806      	ldr	r0, [pc, #24]	@ (80097fc <RDMNetDevice::~RDMNetDevice()+0x24>)
 80097e2:	f007 fdbb 	bl	801135c <net::igmp_leave(unsigned long)>
 80097e6:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 80097ea:	f008 f9c7 	bl	8011b7c <net::udp_end(unsigned short)>
 80097ee:	4620      	mov	r0, r4
 80097f0:	f7ff ffc0 	bl	8009774 <RDMDeviceResponder::~RDMDeviceResponder()>
 80097f4:	4620      	mov	r0, r4
 80097f6:	bd10      	pop	{r4, pc}
 80097f8:	08017f78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 80097fc:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>

08009800 <RDMNetDevice::~RDMNetDevice()>:
 8009800:	b510      	push	{r4, lr}
 8009802:	4604      	mov	r4, r0
 8009804:	f7ff ffe8 	bl	80097d8 <RDMNetDevice::~RDMNetDevice()>
 8009808:	4620      	mov	r0, r4
 800980a:	21ac      	movs	r1, #172	@ 0xac
 800980c:	f00d fcec 	bl	80171e8 <operator delete(void*, unsigned int)>
 8009810:	4620      	mov	r0, r4
 8009812:	bd10      	pop	{r4, pc}

08009814 <RDMDeviceResponder::~RDMDeviceResponder()>:
 8009814:	b510      	push	{r4, lr}
 8009816:	4604      	mov	r4, r0
 8009818:	f7ff ffac 	bl	8009774 <RDMDeviceResponder::~RDMDeviceResponder()>
 800981c:	4620      	mov	r0, r4
 800981e:	21a0      	movs	r1, #160	@ 0xa0
 8009820:	f00d fce2 	bl	80171e8 <operator delete(void*, unsigned int)>
 8009824:	4620      	mov	r0, r4
 8009826:	bd10      	pop	{r4, pc}

08009828 <RDMNetDevice::Print()>:
 8009828:	b530      	push	{r4, r5, lr}
 800982a:	b091      	sub	sp, #68	@ 0x44
 800982c:	2300      	movs	r3, #0
 800982e:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
 8009832:	4b1a      	ldr	r3, [pc, #104]	@ (800989c <RDMNetDevice::Print()+0x74>)
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	aa02      	add	r2, sp, #8
 8009838:	4604      	mov	r4, r0
 800983a:	f103 0110 	add.w	r1, r3, #16
 800983e:	4610      	mov	r0, r2
 8009840:	f813 5b01 	ldrb.w	r5, [r3], #1
 8009844:	f802 5b01 	strb.w	r5, [r2], #1
 8009848:	428b      	cmp	r3, r1
 800984a:	d1f9      	bne.n	8009840 <RDMNetDevice::Print()+0x18>
 800984c:	a906      	add	r1, sp, #24
 800984e:	f00d fb99 	bl	8016f84 <uuid_unparse>
 8009852:	4813      	ldr	r0, [pc, #76]	@ (80098a0 <RDMNetDevice::Print()+0x78>)
 8009854:	f00d fabc 	bl	8016dd0 <printf>
 8009858:	a906      	add	r1, sp, #24
 800985a:	4812      	ldr	r0, [pc, #72]	@ (80098a4 <RDMNetDevice::Print()+0x7c>)
 800985c:	f00d fab8 	bl	8016dd0 <printf>
 8009860:	4811      	ldr	r0, [pc, #68]	@ (80098a8 <RDMNetDevice::Print()+0x80>)
 8009862:	f00d fab5 	bl	8016dd0 <printf>
 8009866:	f241 51c1 	movw	r1, #5569	@ 0x15c1
 800986a:	4810      	ldr	r0, [pc, #64]	@ (80098ac <RDMNetDevice::Print()+0x84>)
 800986c:	f00d fab0 	bl	8016dd0 <printf>
 8009870:	2385      	movs	r3, #133	@ 0x85
 8009872:	9300      	str	r3, [sp, #0]
 8009874:	22ff      	movs	r2, #255	@ 0xff
 8009876:	23fa      	movs	r3, #250	@ 0xfa
 8009878:	21ef      	movs	r1, #239	@ 0xef
 800987a:	480d      	ldr	r0, [pc, #52]	@ (80098b0 <RDMNetDevice::Print()+0x88>)
 800987c:	f00d faa8 	bl	8016dd0 <printf>
 8009880:	2386      	movs	r3, #134	@ 0x86
 8009882:	9300      	str	r3, [sp, #0]
 8009884:	22ff      	movs	r2, #255	@ 0xff
 8009886:	23fa      	movs	r3, #250	@ 0xfa
 8009888:	21ef      	movs	r1, #239	@ 0xef
 800988a:	480a      	ldr	r0, [pc, #40]	@ (80098b4 <RDMNetDevice::Print()+0x8c>)
 800988c:	f00d faa0 	bl	8016dd0 <printf>
 8009890:	4620      	mov	r0, r4
 8009892:	f002 f8df 	bl	800ba54 <RDMDeviceResponder::Print()>
 8009896:	b011      	add	sp, #68	@ 0x44
 8009898:	bd30      	pop	{r4, r5, pc}
 800989a:	bf00      	nop
 800989c:	20009d00 	andcs	r9, r0, r0, lsl #26
 80098a0:	080174c0 	stmdaeq	r1, {r6, r7, sl, ip, sp, lr}
 80098a4:	080174c8 	stmdaeq	r1, {r3, r6, r7, sl, ip, sp, lr}
 80098a8:	080174d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, ip, sp, lr}
 80098ac:	080174e0 	stmdaeq	r1, {r5, r6, r7, sl, ip, sp, lr}
 80098b0:	080174fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, sl, ip, sp, lr}
 80098b4:	0801751d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, ip, sp, lr}

080098b8 <Hardware::RebootHandler()>:
 80098b8:	b508      	push	{r3, lr}
 80098ba:	4b05      	ldr	r3, [pc, #20]	@ (80098d0 <Hardware::RebootHandler()+0x18>)
 80098bc:	6818      	ldr	r0, [r3, #0]
 80098be:	f005 fc2d 	bl	800f11c <WS28xxMulti::Blackout()>
 80098c2:	4b04      	ldr	r3, [pc, #16]	@ (80098d4 <Hardware::RebootHandler()+0x1c>)
 80098c4:	6818      	ldr	r0, [r3, #0]
 80098c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80098ca:	f001 be59 	b.w	800b580 <PixelPusher::Stop()>
 80098ce:	bf00      	nop
 80098d0:	200098e4 	andcs	r9, r0, r4, ror #17
 80098d4:	20000648 	andcs	r0, r0, r8, asr #12

080098d8 <main>:
 80098d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098dc:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
 80098e0:	a897      	add	r0, sp, #604	@ 0x25c
 80098e2:	f00a fecd 	bl	8014680 <Hardware::Hardware()>
 80098e6:	a862      	add	r0, sp, #392	@ 0x188
 80098e8:	f009 f9ce 	bl	8012c88 <DisplayUdf::DisplayUdf()>
 80098ec:	a806      	add	r0, sp, #24
 80098ee:	f009 fce5 	bl	80132bc <ConfigStore::ConfigStore()>
 80098f2:	49b0      	ldr	r1, [pc, #704]	@ (8009bb4 <main+0x2dc>)
 80098f4:	2203      	movs	r2, #3
 80098f6:	a862      	add	r0, sp, #392	@ 0x188
 80098f8:	f7ff fe48 	bl	800958c <Display::TextStatus(char const*, unsigned long)>
 80098fc:	a8ec      	add	r0, sp, #944	@ 0x3b0
 80098fe:	f006 fee3 	bl	80106c8 <Network::Network()>
 8009902:	a807      	add	r0, sp, #28
 8009904:	f006 fc92 	bl	801022c <MDNS::MDNS()>
 8009908:	49ab      	ldr	r1, [pc, #684]	@ (8009bb8 <main+0x2e0>)
 800990a:	2202      	movs	r2, #2
 800990c:	a862      	add	r0, sp, #392	@ 0x188
 800990e:	f7ff fe3d 	bl	800958c <Display::TextStatus(char const*, unsigned long)>
 8009912:	4baa      	ldr	r3, [pc, #680]	@ (8009bbc <main+0x2e4>)
 8009914:	4aaa      	ldr	r2, [pc, #680]	@ (8009bc0 <main+0x2e8>)
 8009916:	49ab      	ldr	r1, [pc, #684]	@ (8009bc4 <main+0x2ec>)
 8009918:	a808      	add	r0, sp, #32
 800991a:	f00a fc81 	bl	8014220 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800991e:	48aa      	ldr	r0, [pc, #680]	@ (8009bc8 <main+0x2f0>)
 8009920:	2400      	movs	r4, #0
 8009922:	f00d faaa 	bl	8016e7a <puts>
 8009926:	49a9      	ldr	r1, [pc, #676]	@ (8009bcc <main+0x2f4>)
 8009928:	48a9      	ldr	r0, [pc, #676]	@ (8009bd0 <main+0x2f8>)
 800992a:	f00d fa51 	bl	8016dd0 <printf>
 800992e:	4623      	mov	r3, r4
 8009930:	2208      	movs	r2, #8
 8009932:	4621      	mov	r1, r4
 8009934:	9400      	str	r4, [sp, #0]
 8009936:	a807      	add	r0, sp, #28
 8009938:	f006 fcce 	bl	80102d8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800993c:	4ba5      	ldr	r3, [pc, #660]	@ (8009bd4 <main+0x2fc>)
 800993e:	9458      	str	r4, [sp, #352]	@ 0x160
 8009940:	ad52      	add	r5, sp, #328	@ 0x148
 8009942:	601d      	str	r5, [r3, #0]
 8009944:	2303      	movs	r3, #3
 8009946:	e9c5 3302 	strd	r3, r3, [r5, #8]
 800994a:	4ba3      	ldr	r3, [pc, #652]	@ (8009bd8 <main+0x300>)
 800994c:	2106      	movs	r1, #6
 800994e:	e9c5 1304 	strd	r1, r3, [r5, #16]
 8009952:	2301      	movs	r3, #1
 8009954:	e9c5 3307 	strd	r3, r3, [r5, #28]
 8009958:	e9c5 340b 	strd	r3, r4, [r5, #44]	@ 0x2c
 800995c:	4b9f      	ldr	r3, [pc, #636]	@ (8009bdc <main+0x304>)
 800995e:	22aa      	movs	r2, #170	@ 0xaa
 8009960:	a833      	add	r0, sp, #204	@ 0xcc
 8009962:	e9c5 2400 	strd	r2, r4, [r5]
 8009966:	e9c5 2409 	strd	r2, r4, [r5, #36]	@ 0x24
 800996a:	601d      	str	r5, [r3, #0]
 800996c:	f003 f9b6 	bl	800ccdc <PixelDmxParams::PixelDmxParams()>
 8009970:	a833      	add	r0, sp, #204	@ 0xcc
 8009972:	f003 f9f0 	bl	800cd56 <PixelDmxParams::Load()>
 8009976:	a833      	add	r0, sp, #204	@ 0xcc
 8009978:	f003 fc80 	bl	800d27c <PixelDmxParams::Set()>
 800997c:	a80c      	add	r0, sp, #48	@ 0x30
 800997e:	f003 fe25 	bl	800d5cc <WS28xxDmxMulti::WS28xxDmxMulti()>
 8009982:	a876      	add	r0, sp, #472	@ 0x1d8
 8009984:	f001 fd98 	bl	800b4b8 <PixelPusher::PixelPusher()>
 8009988:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800998a:	f8d5 901c 	ldr.w	r9, [r5, #28]
 800998e:	f89d 80dc 	ldrb.w	r8, [sp, #220]	@ 0xdc
 8009992:	f88d 41fc 	strb.w	r4, [sp, #508]	@ 0x1fc
 8009996:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 800999a:	bf28      	it	cs
 800999c:	f44f 73f0 	movcs.w	r3, #480	@ 0x1e0
 80099a0:	937a      	str	r3, [sp, #488]	@ 0x1e8
 80099a2:	22ab      	movs	r2, #171	@ 0xab
 80099a4:	fbb3 f3f2 	udiv	r3, r3, r2
 80099a8:	464a      	mov	r2, r9
 80099aa:	2a08      	cmp	r2, #8
 80099ac:	bf28      	it	cs
 80099ae:	2208      	movcs	r2, #8
 80099b0:	3301      	adds	r3, #1
 80099b2:	af09      	add	r7, sp, #36	@ 0x24
 80099b4:	937c      	str	r3, [sp, #496]	@ 0x1f0
 80099b6:	4649      	mov	r1, r9
 80099b8:	4353      	muls	r3, r2
 80099ba:	4638      	mov	r0, r7
 80099bc:	937d      	str	r3, [sp, #500]	@ 0x1f4
 80099be:	927e      	str	r2, [sp, #504]	@ 0x1f8
 80099c0:	f004 fc38 	bl	800e234 <PixelPatterns::PixelPatterns(unsigned long)>
 80099c4:	4b86      	ldr	r3, [pc, #536]	@ (8009be0 <main+0x308>)
 80099c6:	f1b8 0f05 	cmp.w	r8, #5
 80099ca:	601f      	str	r7, [r3, #0]
 80099cc:	dd6e      	ble.n	8009aac <main+0x1d4>
 80099ce:	4b83      	ldr	r3, [pc, #524]	@ (8009bdc <main+0x304>)
 80099d0:	681c      	ldr	r4, [r3, #0]
 80099d2:	4620      	mov	r0, r4
 80099d4:	f7ff fe70 	bl	80096b8 <PixelConfiguration::Print()>
 80099d8:	4882      	ldr	r0, [pc, #520]	@ (8009be4 <main+0x30c>)
 80099da:	f00d fa4e 	bl	8016e7a <puts>
 80099de:	69e1      	ldr	r1, [r4, #28]
 80099e0:	4881      	ldr	r0, [pc, #516]	@ (8009be8 <main+0x310>)
 80099e2:	f00d f9f5 	bl	8016dd0 <printf>
 80099e6:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 80099ea:	4880      	ldr	r0, [pc, #512]	@ (8009bec <main+0x314>)
 80099ec:	f00d f9f0 	bl	8016dd0 <printf>
 80099f0:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80099f2:	487f      	ldr	r0, [pc, #508]	@ (8009bf0 <main+0x318>)
 80099f4:	f00d f9ec 	bl	8016dd0 <printf>
 80099f8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80099fa:	487e      	ldr	r0, [pc, #504]	@ (8009bf4 <main+0x31c>)
 80099fc:	f00d f9e8 	bl	8016dd0 <printf>
 8009a00:	ab0c      	add	r3, sp, #48	@ 0x30
 8009a02:	a876      	add	r0, sp, #472	@ 0x1d8
 8009a04:	9380      	str	r3, [sp, #512]	@ 0x200
 8009a06:	f001 fe87 	bl	800b718 <PixelPusher::Print()>
 8009a0a:	497b      	ldr	r1, [pc, #492]	@ (8009bf8 <main+0x320>)
 8009a0c:	2203      	movs	r2, #3
 8009a0e:	a862      	add	r0, sp, #392	@ 0x188
 8009a10:	f7ff fdbc 	bl	800958c <Display::TextStatus(char const*, unsigned long)>
 8009a14:	68e8      	ldr	r0, [r5, #12]
 8009a16:	f004 fb13 	bl	800e040 <pixel::pixel_get_type(pixel::Type)>
 8009a1a:	682b      	ldr	r3, [r5, #0]
 8009a1c:	4a77      	ldr	r2, [pc, #476]	@ (8009bfc <main+0x324>)
 8009a1e:	e9cd 0300 	strd	r0, r3, [sp]
 8009a22:	2120      	movs	r1, #32
 8009a24:	464b      	mov	r3, r9
 8009a26:	a818      	add	r0, sp, #96	@ 0x60
 8009a28:	f00d f9fa 	bl	8016e20 <snprintf>
 8009a2c:	4a74      	ldr	r2, [pc, #464]	@ (8009c00 <main+0x328>)
 8009a2e:	2120      	movs	r1, #32
 8009a30:	a821      	add	r0, sp, #132	@ 0x84
 8009a32:	f00d f9f5 	bl	8016e20 <snprintf>
 8009a36:	4604      	mov	r4, r0
 8009a38:	202c      	movs	r0, #44	@ 0x2c
 8009a3a:	f00d fbd7 	bl	80171ec <operator new(unsigned int)>
 8009a3e:	4603      	mov	r3, r0
 8009a40:	2200      	movs	r2, #0
 8009a42:	6042      	str	r2, [r0, #4]
 8009a44:	6282      	str	r2, [r0, #40]	@ 0x28
 8009a46:	f100 0528 	add.w	r5, r0, #40	@ 0x28
 8009a4a:	f823 2b08 	strh.w	r2, [r3], #8
 8009a4e:	aa18      	add	r2, sp, #96	@ 0x60
 8009a50:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009a54:	b111      	cbz	r1, 8009a5c <main+0x184>
 8009a56:	429d      	cmp	r5, r3
 8009a58:	f040 80e8 	bne.w	8009c2c <main+0x354>
 8009a5c:	2301      	movs	r3, #1
 8009a5e:	461a      	mov	r2, r3
 8009a60:	900a      	str	r0, [sp, #40]	@ 0x28
 8009a62:	a90a      	add	r1, sp, #40	@ 0x28
 8009a64:	a8c1      	add	r0, sp, #772	@ 0x304
 8009a66:	f001 feef 	bl	800b848 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>
 8009a6a:	2100      	movs	r1, #0
 8009a6c:	a8e9      	add	r0, sp, #932	@ 0x3a4
 8009a6e:	f002 f928 	bl	800bcc2 <RDMHandler::RDMHandler(bool)>
 8009a72:	f241 50c1 	movw	r0, #5569	@ 0x15c1
 8009a76:	f008 f86b 	bl	8011b50 <net::udp_begin(unsigned short)>
 8009a7a:	4b62      	ldr	r3, [pc, #392]	@ (8009c04 <main+0x32c>)
 8009a7c:	6018      	str	r0, [r3, #0]
 8009a7e:	4862      	ldr	r0, [pc, #392]	@ (8009c08 <main+0x330>)
 8009a80:	f007 fc4e 	bl	8011320 <net::igmp_join(unsigned long)>
 8009a84:	b2e0      	uxtb	r0, r4
 8009a86:	4b61      	ldr	r3, [pc, #388]	@ (8009c0c <main+0x334>)
 8009a88:	93c1      	str	r3, [sp, #772]	@ 0x304
 8009a8a:	2820      	cmp	r0, #32
 8009a8c:	f89d 335a 	ldrb.w	r3, [sp, #858]	@ 0x35a
 8009a90:	bf28      	it	cs
 8009a92:	2020      	movcs	r0, #32
 8009a94:	4602      	mov	r2, r0
 8009a96:	2b00      	cmp	r3, #0
 8009a98:	f040 8200 	bne.w	8009e9c <main+0x5c4>
 8009a9c:	ab21      	add	r3, sp, #132	@ 0x84
 8009a9e:	a9c2      	add	r1, sp, #776	@ 0x308
 8009aa0:	3a01      	subs	r2, #1
 8009aa2:	f080 81fe 	bcs.w	8009ea2 <main+0x5ca>
 8009aa6:	f88d 0359 	strb.w	r0, [sp, #857]	@ 0x359
 8009aaa:	e0e4      	b.n	8009c76 <main+0x39e>
 8009aac:	4b58      	ldr	r3, [pc, #352]	@ (8009c10 <main+0x338>)
 8009aae:	9304      	str	r3, [sp, #16]
 8009ab0:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8009ab4:	f8c7 8000 	str.w	r8, [r7]
 8009ab8:	9305      	str	r3, [sp, #20]
 8009aba:	9a05      	ldr	r2, [sp, #20]
 8009abc:	2a04      	cmp	r2, #4
 8009abe:	d838      	bhi.n	8009b32 <main+0x25a>
 8009ac0:	e8df f002 	tbb	[pc, r2]
 8009ac4:	231a1003 	tstcs	sl, #3
 8009ac8:	2300002b 	movwcs	r0, #43	@ 0x2b
 8009acc:	2264      	movs	r2, #100	@ 0x64
 8009ace:	4621      	mov	r1, r4
 8009ad0:	4638      	mov	r0, r7
 8009ad2:	f004 fbdd 	bl	800e290 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)>
 8009ad6:	9b04      	ldr	r3, [sp, #16]
 8009ad8:	3401      	adds	r4, #1
 8009ada:	3320      	adds	r3, #32
 8009adc:	2c08      	cmp	r4, #8
 8009ade:	9304      	str	r3, [sp, #16]
 8009ae0:	d1eb      	bne.n	8009aba <main+0x1e2>
 8009ae2:	e774      	b.n	80099ce <main+0xf6>
 8009ae4:	2364      	movs	r3, #100	@ 0x64
 8009ae6:	2200      	movs	r2, #0
 8009ae8:	e9cd 3200 	strd	r3, r2, [sp]
 8009aec:	4621      	mov	r1, r4
 8009aee:	4b49      	ldr	r3, [pc, #292]	@ (8009c14 <main+0x33c>)
 8009af0:	4638      	mov	r0, r7
 8009af2:	f004 fbe3 	bl	800e2bc <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009af6:	e7ee      	b.n	8009ad6 <main+0x1fe>
 8009af8:	2300      	movs	r3, #0
 8009afa:	9300      	str	r3, [sp, #0]
 8009afc:	4a45      	ldr	r2, [pc, #276]	@ (8009c14 <main+0x33c>)
 8009afe:	2364      	movs	r3, #100	@ 0x64
 8009b00:	4621      	mov	r1, r4
 8009b02:	4638      	mov	r0, r7
 8009b04:	f004 fbf8 	bl	800e2f8 <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009b08:	e7e5      	b.n	8009ad6 <main+0x1fe>
 8009b0a:	2364      	movs	r3, #100	@ 0x64
 8009b0c:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
 8009b10:	4621      	mov	r1, r4
 8009b12:	4638      	mov	r0, r7
 8009b14:	f004 fc0c 	bl	800e330 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)>
 8009b18:	e7dd      	b.n	8009ad6 <main+0x1fe>
 8009b1a:	2364      	movs	r3, #100	@ 0x64
 8009b1c:	2200      	movs	r2, #0
 8009b1e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009b22:	230a      	movs	r3, #10
 8009b24:	9300      	str	r3, [sp, #0]
 8009b26:	4621      	mov	r1, r4
 8009b28:	4b3a      	ldr	r3, [pc, #232]	@ (8009c14 <main+0x33c>)
 8009b2a:	4638      	mov	r0, r7
 8009b2c:	f004 fc32 	bl	800e394 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>
 8009b30:	e7d1      	b.n	8009ad6 <main+0x1fe>
 8009b32:	9b04      	ldr	r3, [sp, #16]
 8009b34:	f8df b0e0 	ldr.w	fp, [pc, #224]	@ 8009c18 <main+0x340>
 8009b38:	2200      	movs	r2, #0
 8009b3a:	61da      	str	r2, [r3, #28]
 8009b3c:	4692      	mov	sl, r2
 8009b3e:	4616      	mov	r6, r2
 8009b40:	4b24      	ldr	r3, [pc, #144]	@ (8009bd4 <main+0x2fc>)
 8009b42:	f8db 0000 	ldr.w	r0, [fp]
 8009b46:	681b      	ldr	r3, [r3, #0]
 8009b48:	6819      	ldr	r1, [r3, #0]
 8009b4a:	458a      	cmp	sl, r1
 8009b4c:	d30a      	bcc.n	8009b64 <main+0x28c>
 8009b4e:	f8db 0000 	ldr.w	r0, [fp]
 8009b52:	f005 fccd 	bl	800f4f0 <WS28xxMulti::IsUpdating()>
 8009b56:	2800      	cmp	r0, #0
 8009b58:	d1f9      	bne.n	8009b4e <main+0x276>
 8009b5a:	f8db 0000 	ldr.w	r0, [fp]
 8009b5e:	f005 fa15 	bl	800ef8c <WS28xxMulti::Update()>
 8009b62:	e7b8      	b.n	8009ad6 <main+0x1fe>
 8009b64:	68db      	ldr	r3, [r3, #12]
 8009b66:	2b0d      	cmp	r3, #13
 8009b68:	d858      	bhi.n	8009c1c <main+0x344>
 8009b6a:	e8df f003 	tbb	[pc, r3]
 8009b6e:	57575707 	ldrbpl	r5, [r7, -r7, lsl #14]
 8009b72:	1a575757 	bne	95df8d6 <_sidata+0x15c4f62>
 8009b76:	11575757 	cmpne	r7, r7, asr r7
 8009b7a:	e9cd1111 	stmib	sp, {r0, r4, r8, ip}^
 8009b7e:	6600      	str	r0, [r0, #96]	@ 0x60
 8009b80:	2300      	movs	r3, #0
 8009b82:	4652      	mov	r2, sl
 8009b84:	4621      	mov	r1, r4
 8009b86:	f005 fdd9 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 8009b8a:	f10a 0a01 	add.w	sl, sl, #1
 8009b8e:	e7d7      	b.n	8009b40 <main+0x268>
 8009b90:	e9cd 6601 	strd	r6, r6, [sp, #4]
 8009b94:	9600      	str	r6, [sp, #0]
 8009b96:	23ff      	movs	r3, #255	@ 0xff
 8009b98:	4652      	mov	r2, sl
 8009b9a:	4621      	mov	r1, r4
 8009b9c:	f005 fee4 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009ba0:	e7f3      	b.n	8009b8a <main+0x2b2>
 8009ba2:	e9cd 6601 	strd	r6, r6, [sp, #4]
 8009ba6:	9600      	str	r6, [sp, #0]
 8009ba8:	2300      	movs	r3, #0
 8009baa:	4652      	mov	r2, sl
 8009bac:	4621      	mov	r1, r4
 8009bae:	f005 ff57 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 8009bb2:	e7ea      	b.n	8009b8a <main+0x2b2>
 8009bb4:	0801a116 	stmdaeq	r1, {r1, r2, r4, r8, sp, pc}
 8009bb8:	0801a106 	stmdaeq	r1, {r1, r2, r8, sp, pc}
 8009bbc:	08017540 	stmdaeq	r1, {r6, r8, sl, ip, sp, lr}
 8009bc0:	08017549 	stmdaeq	r1, {r0, r3, r6, r8, sl, ip, sp, lr}
 8009bc4:	08017f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip, sp, lr}
 8009bc8:	20009ca8 	andcs	r9, r0, r8, lsr #25
 8009bcc:	08017555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip, sp, lr}
 8009bd0:	0801757d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, ip, sp, lr}
 8009bd4:	20000078 	andcs	r0, r0, r8, ror r0
 8009bd8:	ff000001 			@ <UNDEFINED> instruction: 0xff000001
 8009bdc:	20000074 	andcs	r0, r0, r4, ror r0
 8009be0:	200098e0 	andcs	r9, r0, r0, ror #17
 8009be4:	0801758a 	stmdaeq	r1, {r1, r3, r7, r8, sl, ip, sp, lr}
 8009be8:	080175a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, sp, lr}
 8009bec:	080175b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, sl, ip, sp, lr}
 8009bf0:	080175dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sl, ip, sp, lr}
 8009bf4:	080175f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, ip, sp, lr}
 8009bf8:	08019f3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, pc}
 8009bfc:	08017608 	stmdaeq	r1, {r3, r9, sl, ip, sp, lr}
 8009c00:	0801761d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, ip, sp, lr}
 8009c04:	200097cc 	andcs	r9, r0, ip, asr #15
 8009c08:	85faffef 	ldrbhi	pc, [sl, #4079]!	@ 0xfef	@ <UNPREDICTABLE>
 8009c0c:	08017f78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8009c10:	200097d8 	ldrdcs	r9, [r0], -r8
 8009c14:	00646464 	rsbeq	r6, r4, r4, ror #8
 8009c18:	200098dc 	ldrdcs	r9, [r0], -ip
 8009c1c:	e9cd 6600 	strd	r6, r6, [sp]
 8009c20:	2300      	movs	r3, #0
 8009c22:	4652      	mov	r2, sl
 8009c24:	4621      	mov	r1, r4
 8009c26:	f005 fc6b 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 8009c2a:	e7ae      	b.n	8009b8a <main+0x2b2>
 8009c2c:	f803 1b01 	strb.w	r1, [r3], #1
 8009c30:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8009c32:	3101      	adds	r1, #1
 8009c34:	6281      	str	r1, [r0, #40]	@ 0x28
 8009c36:	e70b      	b.n	8009a50 <main+0x178>
 8009c38:	f813 4b01 	ldrb.w	r4, [r3], #1
 8009c3c:	f801 4b01 	strb.w	r4, [r1], #1
 8009c40:	3a01      	subs	r2, #1
 8009c42:	d2f9      	bcs.n	8009c38 <main+0x360>
 8009c44:	2401      	movs	r4, #1
 8009c46:	2600      	movs	r6, #0
 8009c48:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8009c4c:	4da0      	ldr	r5, [pc, #640]	@ (8009ed0 <main+0x5f8>)
 8009c4e:	9000      	str	r0, [sp, #0]
 8009c50:	f88d 0358 	strb.w	r0, [sp, #856]	@ 0x358
 8009c54:	f88d 011c 	strb.w	r0, [sp, #284]	@ 0x11c
 8009c58:	abca      	add	r3, sp, #808	@ 0x328
 8009c5a:	6828      	ldr	r0, [r5, #0]
 8009c5c:	2204      	movs	r2, #4
 8009c5e:	2109      	movs	r1, #9
 8009c60:	f009 fbba 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009c64:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8009c68:	9400      	str	r4, [sp, #0]
 8009c6a:	6828      	ldr	r0, [r5, #0]
 8009c6c:	ab47      	add	r3, sp, #284	@ 0x11c
 8009c6e:	2224      	movs	r2, #36	@ 0x24
 8009c70:	2109      	movs	r1, #9
 8009c72:	f009 fbb1 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009c76:	4b97      	ldr	r3, [pc, #604]	@ (8009ed4 <main+0x5fc>)
 8009c78:	93d2      	str	r3, [sp, #840]	@ 0x348
 8009c7a:	a8c1      	add	r0, sp, #772	@ 0x304
 8009c7c:	f001 fe3e 	bl	800b8fc <RDMDeviceResponder::Init()>
 8009c80:	a847      	add	r0, sp, #284	@ 0x11c
 8009c82:	f001 fd77 	bl	800b774 <RDMDeviceParams::RDMDeviceParams()>
 8009c86:	a847      	add	r0, sp, #284	@ 0x11c
 8009c88:	f001 fd87 	bl	800b79a <RDMDeviceParams::Load()>
 8009c8c:	a9c2      	add	r1, sp, #776	@ 0x308
 8009c8e:	a847      	add	r0, sp, #284	@ 0x11c
 8009c90:	f001 fd88 	bl	800b7a4 <RDMDeviceParams::Set(RDMDevice*)>
 8009c94:	a8c1      	add	r0, sp, #772	@ 0x304
 8009c96:	f7ff fdc7 	bl	8009828 <RDMNetDevice::Print()>
 8009c9a:	498f      	ldr	r1, [pc, #572]	@ (8009ed8 <main+0x600>)
 8009c9c:	464a      	mov	r2, r9
 8009c9e:	a862      	add	r0, sp, #392	@ 0x188
 8009ca0:	f009 f804 	bl	8012cac <DisplayUdf::SetTitle(char const*, ...)>
 8009ca4:	2203      	movs	r2, #3
 8009ca6:	2102      	movs	r1, #2
 8009ca8:	a862      	add	r0, sp, #392	@ 0x188
 8009caa:	f009 f812 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cae:	2207      	movs	r2, #7
 8009cb0:	2103      	movs	r1, #3
 8009cb2:	a862      	add	r0, sp, #392	@ 0x188
 8009cb4:	f009 f80d 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cb8:	2202      	movs	r2, #2
 8009cba:	2104      	movs	r1, #4
 8009cbc:	a862      	add	r0, sp, #392	@ 0x188
 8009cbe:	f009 f808 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cc2:	2212      	movs	r2, #18
 8009cc4:	2105      	movs	r1, #5
 8009cc6:	a862      	add	r0, sp, #392	@ 0x188
 8009cc8:	f009 f803 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009ccc:	2201      	movs	r2, #1
 8009cce:	2106      	movs	r1, #6
 8009cd0:	a862      	add	r0, sp, #392	@ 0x188
 8009cd2:	f008 fffe 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cd6:	a82a      	add	r0, sp, #168	@ 0xa8
 8009cd8:	f009 f8c4 	bl	8012e64 <DisplayUdfParams::DisplayUdfParams()>
 8009cdc:	a82a      	add	r0, sp, #168	@ 0xa8
 8009cde:	f009 f8cf 	bl	8012e80 <DisplayUdfParams::Load()>
 8009ce2:	a962      	add	r1, sp, #392	@ 0x188
 8009ce4:	a82a      	add	r0, sp, #168	@ 0xa8
 8009ce6:	f009 f9f3 	bl	80130d0 <DisplayUdfParams::Set(DisplayUdf*)>
 8009cea:	a862      	add	r0, sp, #392	@ 0x188
 8009cec:	f009 f80c 	bl	8012d08 <DisplayUdf::Show()>
 8009cf0:	9855      	ldr	r0, [sp, #340]	@ 0x154
 8009cf2:	f004 f9a5 	bl	800e040 <pixel::pixel_get_type(pixel::Type)>
 8009cf6:	4604      	mov	r4, r0
 8009cf8:	9856      	ldr	r0, [sp, #344]	@ 0x158
 8009cfa:	9d52      	ldr	r5, [sp, #328]	@ 0x148
 8009cfc:	9e5a      	ldr	r6, [sp, #360]	@ 0x168
 8009cfe:	f004 f9f7 	bl	800e0f0 <pixel::pixel_get_map(pixel::Map)>
 8009d02:	4a76      	ldr	r2, [pc, #472]	@ (8009edc <main+0x604>)
 8009d04:	9500      	str	r5, [sp, #0]
 8009d06:	e9cd 6001 	strd	r6, r0, [sp, #4]
 8009d0a:	4623      	mov	r3, r4
 8009d0c:	2107      	movs	r1, #7
 8009d0e:	a862      	add	r0, sp, #392	@ 0x188
 8009d10:	f7ff fc20 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8009d14:	f1b8 0f00 	cmp.w	r8, #0
 8009d18:	d010      	beq.n	8009d3c <main+0x464>
 8009d1a:	9868      	ldr	r0, [sp, #416]	@ 0x1a0
 8009d1c:	b118      	cbz	r0, 8009d26 <main+0x44e>
 8009d1e:	6803      	ldr	r3, [r0, #0]
 8009d20:	2106      	movs	r1, #6
 8009d22:	691b      	ldr	r3, [r3, #16]
 8009d24:	4798      	blx	r3
 8009d26:	4640      	mov	r0, r8
 8009d28:	f004 faa6 	bl	800e278 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8009d2c:	4a6c      	ldr	r2, [pc, #432]	@ (8009ee0 <main+0x608>)
 8009d2e:	f8cd 8000 	str.w	r8, [sp]
 8009d32:	4603      	mov	r3, r0
 8009d34:	2106      	movs	r1, #6
 8009d36:	a862      	add	r0, sp, #392	@ 0x188
 8009d38:	f7ff fc0c 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8009d3c:	2109      	movs	r1, #9
 8009d3e:	464b      	mov	r3, r9
 8009d40:	2203      	movs	r2, #3
 8009d42:	a83d      	add	r0, sp, #244	@ 0xf4
 8009d44:	f000 fa50 	bl	800a1e8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
 8009d48:	a810      	add	r0, sp, #64	@ 0x40
 8009d4a:	f000 fce9 	bl	800a720 <RemoteConfigParams::RemoteConfigParams()>
 8009d4e:	a810      	add	r0, sp, #64	@ 0x40
 8009d50:	f000 fcee 	bl	800a730 <RemoteConfigParams::Load()>
 8009d54:	a93d      	add	r1, sp, #244	@ 0xf4
 8009d56:	a810      	add	r0, sp, #64	@ 0x40
 8009d58:	f000 fdf8 	bl	800a94c <RemoteConfigParams::Set(RemoteConfig*)>
 8009d5c:	a806      	add	r0, sp, #24
 8009d5e:	f009 fb91 	bl	8013484 <ConfigStore::Flash()>
 8009d62:	2800      	cmp	r0, #0
 8009d64:	d1fa      	bne.n	8009d5c <main+0x484>
 8009d66:	a807      	add	r0, sp, #28
 8009d68:	f006 fbe4 	bl	8010534 <MDNS::Print()>
 8009d6c:	495d      	ldr	r1, [pc, #372]	@ (8009ee4 <main+0x60c>)
 8009d6e:	2203      	movs	r2, #3
 8009d70:	a862      	add	r0, sp, #392	@ 0x188
 8009d72:	f7ff fc0b 	bl	800958c <Display::TextStatus(char const*, unsigned long)>
 8009d76:	a876      	add	r0, sp, #472	@ 0x1d8
 8009d78:	f001 fbe4 	bl	800b544 <PixelPusher::Start()>
 8009d7c:	495a      	ldr	r1, [pc, #360]	@ (8009ee8 <main+0x610>)
 8009d7e:	2202      	movs	r2, #2
 8009d80:	a862      	add	r0, sp, #392	@ 0x188
 8009d82:	f7ff fc03 	bl	800958c <Display::TextStatus(char const*, unsigned long)>
 8009d86:	2102      	movs	r1, #2
 8009d88:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8009d8c:	f00b f9f0 	bl	8015170 <fwdgt_config>
 8009d90:	2801      	cmp	r0, #1
 8009d92:	bf0c      	ite	eq
 8009d94:	2301      	moveq	r3, #1
 8009d96:	2300      	movne	r3, #0
 8009d98:	f88d 326c 	strb.w	r3, [sp, #620]	@ 0x26c
 8009d9c:	d101      	bne.n	8009da2 <main+0x4ca>
 8009d9e:	f00b f9d7 	bl	8015150 <fwdgt_enable>
 8009da2:	4e52      	ldr	r6, [pc, #328]	@ (8009eec <main+0x614>)
 8009da4:	4d52      	ldr	r5, [pc, #328]	@ (8009ef0 <main+0x618>)
 8009da6:	f00b f9db 	bl	8015160 <fwdgt_counter_reload>
 8009daa:	f7fe fc5b 	bl	8008664 <net::net_handle()>
 8009dae:	f7ff fbb5 	bl	800951c <net::dhcp_run()>
 8009db2:	a876      	add	r0, sp, #472	@ 0x1d8
 8009db4:	f001 fbf4 	bl	800b5a0 <PixelPusher::Run()>
 8009db8:	f89d 3100 	ldrb.w	r3, [sp, #256]	@ 0x100
 8009dbc:	b9d3      	cbnz	r3, 8009df4 <main+0x51c>
 8009dbe:	9c46      	ldr	r4, [sp, #280]	@ 0x118
 8009dc0:	aa0b      	add	r2, sp, #44	@ 0x2c
 8009dc2:	f104 011c 	add.w	r1, r4, #28
 8009dc6:	69a0      	ldr	r0, [r4, #24]
 8009dc8:	f007 fe30 	bl	8011a2c <net::tcp_read(long, unsigned char const**, unsigned long&)>
 8009dcc:	4601      	mov	r1, r0
 8009dce:	b128      	cbz	r0, 8009ddc <main+0x504>
 8009dd0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009dd2:	69e2      	ldr	r2, [r4, #28]
 8009dd4:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8009dd8:	f001 fa22 	bl	800b220 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
 8009ddc:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8009dde:	ab0b      	add	r3, sp, #44	@ 0x2c
 8009de0:	aa43      	add	r2, sp, #268	@ 0x10c
 8009de2:	4631      	mov	r1, r6
 8009de4:	f007 feee 	bl	8011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009de8:	2803      	cmp	r0, #3
 8009dea:	9044      	str	r0, [sp, #272]	@ 0x110
 8009dec:	d902      	bls.n	8009df4 <main+0x51c>
 8009dee:	a83d      	add	r0, sp, #244	@ 0xf4
 8009df0:	f000 fb92 	bl	800a518 <RemoteConfig::HandleRequest()>
 8009df4:	a806      	add	r0, sp, #24
 8009df6:	f009 fb45 	bl	8013484 <ConfigStore::Flash()>
 8009dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009dfc:	4f3d      	ldr	r7, [pc, #244]	@ (8009ef4 <main+0x61c>)
 8009dfe:	b18b      	cbz	r3, 8009e24 <main+0x54c>
 8009e00:	6828      	ldr	r0, [r5, #0]
 8009e02:	f005 fb75 	bl	800f4f0 <WS28xxMulti::IsUpdating()>
 8009e06:	4604      	mov	r4, r0
 8009e08:	b960      	cbnz	r0, 8009e24 <main+0x54c>
 8009e0a:	f8d7 a000 	ldr.w	sl, [r7]
 8009e0e:	f8df 9108 	ldr.w	r9, [pc, #264]	@ 8009f18 <main+0x640>
 8009e12:	4680      	mov	r8, r0
 8009e14:	f8d9 3000 	ldr.w	r3, [r9]
 8009e18:	4598      	cmp	r8, r3
 8009e1a:	d347      	bcc.n	8009eac <main+0x5d4>
 8009e1c:	b114      	cbz	r4, 8009e24 <main+0x54c>
 8009e1e:	6828      	ldr	r0, [r5, #0]
 8009e20:	f005 f8b4 	bl	800ef8c <WS28xxMulti::Update()>
 8009e24:	4c34      	ldr	r4, [pc, #208]	@ (8009ef8 <main+0x620>)
 8009e26:	4835      	ldr	r0, [pc, #212]	@ (8009efc <main+0x624>)
 8009e28:	4b35      	ldr	r3, [pc, #212]	@ (8009f00 <main+0x628>)
 8009e2a:	4a36      	ldr	r2, [pc, #216]	@ (8009f04 <main+0x62c>)
 8009e2c:	6800      	ldr	r0, [r0, #0]
 8009e2e:	4621      	mov	r1, r4
 8009e30:	f007 fec8 	bl	8011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009e34:	4b34      	ldr	r3, [pc, #208]	@ (8009f08 <main+0x630>)
 8009e36:	280b      	cmp	r0, #11
 8009e38:	6018      	str	r0, [r3, #0]
 8009e3a:	d90a      	bls.n	8009e52 <main+0x57a>
 8009e3c:	6823      	ldr	r3, [r4, #0]
 8009e3e:	789a      	ldrb	r2, [r3, #2]
 8009e40:	f012 0f78 	tst.w	r2, #120	@ 0x78
 8009e44:	d105      	bne.n	8009e52 <main+0x57a>
 8009e46:	8899      	ldrh	r1, [r3, #4]
 8009e48:	ba49      	rev16	r1, r1
 8009e4a:	b289      	uxth	r1, r1
 8009e4c:	a807      	add	r0, sp, #28
 8009e4e:	f006 faa3 	bl	8010398 <MDNS::HandleQuestions(unsigned long)>
 8009e52:	4c2e      	ldr	r4, [pc, #184]	@ (8009f0c <main+0x634>)
 8009e54:	482e      	ldr	r0, [pc, #184]	@ (8009f10 <main+0x638>)
 8009e56:	4a2f      	ldr	r2, [pc, #188]	@ (8009f14 <main+0x63c>)
 8009e58:	6800      	ldr	r0, [r0, #0]
 8009e5a:	f10d 0322 	add.w	r3, sp, #34	@ 0x22
 8009e5e:	4621      	mov	r1, r4
 8009e60:	f007 feb0 	bl	8011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009e64:	2841      	cmp	r0, #65	@ 0x41
 8009e66:	d908      	bls.n	8009e7a <main+0x5a2>
 8009e68:	6823      	ldr	r3, [r4, #0]
 8009e6a:	f8d3 302a 	ldr.w	r3, [r3, #42]	@ 0x2a
 8009e6e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009e72:	d025      	beq.n	8009ec0 <main+0x5e8>
 8009e74:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8009e78:	d026      	beq.n	8009ec8 <main+0x5f0>
 8009e7a:	9a66      	ldr	r2, [sp, #408]	@ 0x198
 8009e7c:	2a00      	cmp	r2, #0
 8009e7e:	d053      	beq.n	8009f28 <main+0x650>
 8009e80:	f89d 319d 	ldrb.w	r3, [sp, #413]	@ 0x19d
 8009e84:	2b00      	cmp	r3, #0
 8009e86:	d149      	bne.n	8009f1c <main+0x644>
 8009e88:	683b      	ldr	r3, [r7, #0]
 8009e8a:	9963      	ldr	r1, [sp, #396]	@ 0x18c
 8009e8c:	1a5b      	subs	r3, r3, r1
 8009e8e:	429a      	cmp	r2, r3
 8009e90:	d24a      	bcs.n	8009f28 <main+0x650>
 8009e92:	2101      	movs	r1, #1
 8009e94:	a862      	add	r0, sp, #392	@ 0x188
 8009e96:	f7ff fbb1 	bl	80095fc <Display::SetSleep(bool)>
 8009e9a:	e045      	b.n	8009f28 <main+0x650>
 8009e9c:	ab21      	add	r3, sp, #132	@ 0x84
 8009e9e:	a9ca      	add	r1, sp, #808	@ 0x328
 8009ea0:	e6ce      	b.n	8009c40 <main+0x368>
 8009ea2:	f813 4b01 	ldrb.w	r4, [r3], #1
 8009ea6:	f801 4b01 	strb.w	r4, [r1], #1
 8009eaa:	e5f9      	b.n	8009aa0 <main+0x1c8>
 8009eac:	4641      	mov	r1, r8
 8009eae:	4652      	mov	r2, sl
 8009eb0:	a809      	add	r0, sp, #36	@ 0x24
 8009eb2:	f004 fbcf 	bl	800e654 <PixelPatterns::PortUpdate(unsigned long, unsigned long)>
 8009eb6:	4304      	orrs	r4, r0
 8009eb8:	b2e4      	uxtb	r4, r4
 8009eba:	f108 0801 	add.w	r8, r8, #1
 8009ebe:	e7a9      	b.n	8009e14 <main+0x53c>
 8009ec0:	a8e9      	add	r0, sp, #932	@ 0x3a4
 8009ec2:	f002 fa45 	bl	800c350 <LLRPDevice::HandleRequestMessage()>
 8009ec6:	e7d8      	b.n	8009e7a <main+0x5a2>
 8009ec8:	a8e9      	add	r0, sp, #932	@ 0x3a4
 8009eca:	f002 fad7 	bl	800c47c <LLRPDevice::HandleRdmCommand()>
 8009ece:	e7d4      	b.n	8009e7a <main+0x5a2>
 8009ed0:	20009bfc 	strdcs	r9, [r0], -ip
 8009ed4:	00040100 	andeq	r0, r4, r0, lsl #2
 8009ed8:	08017638 	stmdaeq	r1, {r3, r4, r5, r9, sl, ip, sp, lr}
 8009edc:	08017647 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, ip, sp, lr}
 8009ee0:	08017654 	stmdaeq	r1, {r2, r4, r6, r9, sl, ip, sp, lr}
 8009ee4:	0801765a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, ip, sp, lr}
 8009ee8:	0801766f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, ip, sp, lr}
 8009eec:	2000007c 	andcs	r0, r0, ip, ror r0
 8009ef0:	200098dc 	ldrdcs	r9, [r0], -ip
 8009ef4:	200145c8 	andcs	r4, r1, r8, asr #11
 8009ef8:	200098f0 	strdcs	r9, [r0], -r0
 8009efc:	20009900 	andcs	r9, r0, r0, lsl #18
 8009f00:	200098f8 	strdcs	r9, [r0], -r8
 8009f04:	200098fc 	strdcs	r9, [r0], -ip
 8009f08:	200098f4 	strdcs	r9, [r0], -r4
 8009f0c:	200097c4 	andcs	r9, r0, r4, asr #15
 8009f10:	200097cc 	andcs	r9, r0, ip, asr #15
 8009f14:	200097c8 	andcs	r9, r0, r8, asr #15
 8009f18:	200098d8 	ldrdcs	r9, [r0], -r8
 8009f1c:	4b0c      	ldr	r3, [pc, #48]	@ (8009f50 <main+0x678>)
 8009f1e:	f8d3 1810 	ldr.w	r1, [r3, #2064]	@ 0x810
 8009f22:	f411 5100 	ands.w	r1, r1, #8192	@ 0x2000
 8009f26:	d0b5      	beq.n	8009e94 <main+0x5bc>
 8009f28:	f8d7 8000 	ldr.w	r8, [r7]
 8009f2c:	ac97      	add	r4, sp, #604	@ 0x25c
 8009f2e:	2700      	movs	r7, #0
 8009f30:	9bbf      	ldr	r3, [sp, #764]	@ 0x2fc
 8009f32:	429f      	cmp	r7, r3
 8009f34:	f4bf af37 	bcs.w	8009da6 <main+0x4ce>
 8009f38:	6a23      	ldr	r3, [r4, #32]
 8009f3a:	4598      	cmp	r8, r3
 8009f3c:	d304      	bcc.n	8009f48 <main+0x670>
 8009f3e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009f40:	4798      	blx	r3
 8009f42:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009f44:	4443      	add	r3, r8
 8009f46:	6223      	str	r3, [r4, #32]
 8009f48:	3701      	adds	r7, #1
 8009f4a:	3410      	adds	r4, #16
 8009f4c:	e7f0      	b.n	8009f30 <main+0x658>
 8009f4e:	bf00      	nop
 8009f50:	40020000 	andmi	r0, r2, r0

08009f54 <rdm::device::responder::factorydefaults()>:
 8009f54:	b510      	push	{r4, lr}
 8009f56:	4b0d      	ldr	r3, [pc, #52]	@ (8009f8c <rdm::device::responder::factorydefaults()+0x38>)
 8009f58:	4c0d      	ldr	r4, [pc, #52]	@ (8009f90 <rdm::device::responder::factorydefaults()+0x3c>)
 8009f5a:	6818      	ldr	r0, [r3, #0]
 8009f5c:	b086      	sub	sp, #24
 8009f5e:	2100      	movs	r1, #0
 8009f60:	f000 f996 	bl	800a290 <RemoteConfig::SetDisable(bool)>
 8009f64:	6820      	ldr	r0, [r4, #0]
 8009f66:	2109      	movs	r1, #9
 8009f68:	f009 fa24 	bl	80133b4 <ConfigStore::ResetSetList(configstore::Store)>
 8009f6c:	2301      	movs	r3, #1
 8009f6e:	2100      	movs	r1, #0
 8009f70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009f74:	9300      	str	r3, [sp, #0]
 8009f76:	f88d 3017 	strb.w	r3, [sp, #23]
 8009f7a:	6820      	ldr	r0, [r4, #0]
 8009f7c:	f10d 0317 	add.w	r3, sp, #23
 8009f80:	2214      	movs	r2, #20
 8009f82:	f009 fa29 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009f86:	b006      	add	sp, #24
 8009f88:	bd10      	pop	{r4, pc}
 8009f8a:	bf00      	nop
 8009f8c:	200000a4 	andcs	r0, r0, r4, lsr #1
 8009f90:	20009bfc 	strdcs	r9, [r0], -ip

08009f94 <RDMSoftwareVersion::GetVersion()>:
 8009f94:	4800      	ldr	r0, [pc, #0]	@ (8009f98 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009f96:	4770      	bx	lr
 8009f98:	08017f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip, sp, lr}

08009f9c <RDMSoftwareVersion::GetVersionLength()>:
 8009f9c:	2003      	movs	r0, #3
 8009f9e:	4770      	bx	lr

08009fa0 <RDMSoftwareVersion::GetVersionId()>:
 8009fa0:	4800      	ldr	r0, [pc, #0]	@ (8009fa4 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009fa2:	4770      	bx	lr
 8009fa4:	66eb16a9 	strbtvs	r1, [fp], r9, lsr #13

08009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
 8009fa8:	b430      	push	{r4, r5}
 8009faa:	4d05      	ldr	r5, [pc, #20]	@ (8009fc0 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x18>)
 8009fac:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8009fb0:	682d      	ldr	r5, [r5, #0]
 8009fb2:	b11d      	cbz	r5, 8009fbc <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x14>
 8009fb4:	9402      	str	r4, [sp, #8]
 8009fb6:	bc30      	pop	{r4, r5}
 8009fb8:	f007 be22 	b.w	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8009fbc:	bc30      	pop	{r4, r5}
 8009fbe:	4770      	bx	lr
 8009fc0:	20009b50 	andcs	r9, r0, r0, asr fp

08009fc4 <RemoteConfig::HandleDisplayGet()>:
 8009fc4:	4b0d      	ldr	r3, [pc, #52]	@ (8009ffc <RemoteConfig::HandleDisplayGet()+0x38>)
 8009fc6:	681b      	ldr	r3, [r3, #0]
 8009fc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fca:	7d59      	ldrb	r1, [r3, #21]
 8009fcc:	4d0c      	ldr	r5, [pc, #48]	@ (800a000 <RemoteConfig::HandleDisplayGet()+0x3c>)
 8009fce:	4a0d      	ldr	r2, [pc, #52]	@ (800a004 <RemoteConfig::HandleDisplayGet()+0x40>)
 8009fd0:	4b0d      	ldr	r3, [pc, #52]	@ (800a008 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009fd2:	4604      	mov	r4, r0
 8009fd4:	2900      	cmp	r1, #0
 8009fd6:	bf08      	it	eq
 8009fd8:	4613      	moveq	r3, r2
 8009fda:	6828      	ldr	r0, [r5, #0]
 8009fdc:	4a0b      	ldr	r2, [pc, #44]	@ (800a00c <RemoteConfig::HandleDisplayGet()+0x48>)
 8009fde:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009fe2:	f00c ff1d 	bl	8016e20 <snprintf>
 8009fe6:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009fea:	9300      	str	r3, [sp, #0]
 8009fec:	4602      	mov	r2, r0
 8009fee:	69a3      	ldr	r3, [r4, #24]
 8009ff0:	6829      	ldr	r1, [r5, #0]
 8009ff2:	6960      	ldr	r0, [r4, #20]
 8009ff4:	f7ff ffd8 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009ff8:	b003      	add	sp, #12
 8009ffa:	bd30      	pop	{r4, r5, pc}
 8009ffc:	20009c14 	andcs	r9, r0, r4, lsl ip
 800a000:	2000007c 	andcs	r0, r0, ip, ror r0
 800a004:	08017683 	stmdaeq	r1, {r0, r1, r7, r9, sl, ip, sp, lr}
 800a008:	080177b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800a00c:	08017686 	stmdaeq	r1, {r1, r2, r7, r9, sl, ip, sp, lr}

0800a010 <RemoteConfig::HandleUptime()>:
 800a010:	7bc3      	ldrb	r3, [r0, #15]
 800a012:	b1ab      	cbz	r3, 800a040 <RemoteConfig::HandleUptime()+0x30>
 800a014:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a016:	4b0b      	ldr	r3, [pc, #44]	@ (800a044 <RemoteConfig::HandleUptime()+0x34>)
 800a018:	4d0b      	ldr	r5, [pc, #44]	@ (800a048 <RemoteConfig::HandleUptime()+0x38>)
 800a01a:	685b      	ldr	r3, [r3, #4]
 800a01c:	4a0b      	ldr	r2, [pc, #44]	@ (800a04c <RemoteConfig::HandleUptime()+0x3c>)
 800a01e:	4604      	mov	r4, r0
 800a020:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a024:	6828      	ldr	r0, [r5, #0]
 800a026:	f00c fefb 	bl	8016e20 <snprintf>
 800a02a:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a02e:	9300      	str	r3, [sp, #0]
 800a030:	4602      	mov	r2, r0
 800a032:	69a3      	ldr	r3, [r4, #24]
 800a034:	6829      	ldr	r1, [r5, #0]
 800a036:	6960      	ldr	r0, [r4, #20]
 800a038:	f7ff ffb6 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a03c:	b003      	add	sp, #12
 800a03e:	bd30      	pop	{r4, r5, pc}
 800a040:	4770      	bx	lr
 800a042:	bf00      	nop
 800a044:	200145c0 	andcs	r4, r1, r0, asr #11
 800a048:	2000007c 	andcs	r0, r0, ip, ror r0
 800a04c:	08017692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip, sp, lr}

0800a050 <RemoteConfig::HandleVersion()>:
 800a050:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a052:	4d0a      	ldr	r5, [pc, #40]	@ (800a07c <RemoteConfig::HandleVersion()+0x2c>)
 800a054:	4b0a      	ldr	r3, [pc, #40]	@ (800a080 <RemoteConfig::HandleVersion()+0x30>)
 800a056:	4a0b      	ldr	r2, [pc, #44]	@ (800a084 <RemoteConfig::HandleVersion()+0x34>)
 800a058:	4604      	mov	r4, r0
 800a05a:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a05e:	6828      	ldr	r0, [r5, #0]
 800a060:	f00c fede 	bl	8016e20 <snprintf>
 800a064:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a068:	9300      	str	r3, [sp, #0]
 800a06a:	4602      	mov	r2, r0
 800a06c:	69a3      	ldr	r3, [r4, #24]
 800a06e:	6829      	ldr	r1, [r5, #0]
 800a070:	6960      	ldr	r0, [r4, #20]
 800a072:	f7ff ff99 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a076:	b003      	add	sp, #12
 800a078:	bd30      	pop	{r4, r5, pc}
 800a07a:	bf00      	nop
 800a07c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a080:	20009ca8 	andcs	r9, r0, r8, lsr #25
 800a084:	0801769f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip, sp, lr}

0800a088 <RemoteConfig::HandleTftpGet()>:
 800a088:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a08a:	4604      	mov	r4, r0
 800a08c:	4d0d      	ldr	r5, [pc, #52]	@ (800a0c4 <RemoteConfig::HandleTftpGet()+0x3c>)
 800a08e:	f000 fd33 	bl	800aaf8 <RemoteConfig::PlatformHandleTftpGet()>
 800a092:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a096:	4a0c      	ldr	r2, [pc, #48]	@ (800a0c8 <RemoteConfig::HandleTftpGet()+0x40>)
 800a098:	4b0c      	ldr	r3, [pc, #48]	@ (800a0cc <RemoteConfig::HandleTftpGet()+0x44>)
 800a09a:	6828      	ldr	r0, [r5, #0]
 800a09c:	2900      	cmp	r1, #0
 800a09e:	bf18      	it	ne
 800a0a0:	4613      	movne	r3, r2
 800a0a2:	4a0b      	ldr	r2, [pc, #44]	@ (800a0d0 <RemoteConfig::HandleTftpGet()+0x48>)
 800a0a4:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a0a8:	f00c feba 	bl	8016e20 <snprintf>
 800a0ac:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a0b0:	9300      	str	r3, [sp, #0]
 800a0b2:	4602      	mov	r2, r0
 800a0b4:	69a3      	ldr	r3, [r4, #24]
 800a0b6:	6829      	ldr	r1, [r5, #0]
 800a0b8:	6960      	ldr	r0, [r4, #20]
 800a0ba:	f7ff ff75 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a0be:	b003      	add	sp, #12
 800a0c0:	bd30      	pop	{r4, r5, pc}
 800a0c2:	bf00      	nop
 800a0c4:	2000007c 	andcs	r0, r0, ip, ror r0
 800a0c8:	08017683 	stmdaeq	r1, {r0, r1, r7, r9, sl, ip, sp, lr}
 800a0cc:	080177b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800a0d0:	080176aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, sl, ip, sp, lr}

0800a0d4 <RemoteConfig::HandleList()>:
 800a0d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0d8:	6801      	ldr	r1, [r0, #0]
 800a0da:	4a23      	ldr	r2, [pc, #140]	@ (800a168 <RemoteConfig::HandleList()+0x94>)
 800a0dc:	4b23      	ldr	r3, [pc, #140]	@ (800a16c <RemoteConfig::HandleList()+0x98>)
 800a0de:	4604      	mov	r4, r0
 800a0e0:	2012      	movs	r0, #18
 800a0e2:	fb00 2201 	mla	r2, r0, r1, r2
 800a0e6:	6860      	ldr	r0, [r4, #4]
 800a0e8:	4921      	ldr	r1, [pc, #132]	@ (800a170 <RemoteConfig::HandleList()+0x9c>)
 800a0ea:	681d      	ldr	r5, [r3, #0]
 800a0ec:	4b21      	ldr	r3, [pc, #132]	@ (800a174 <RemoteConfig::HandleList()+0xa0>)
 800a0ee:	f04f 0e0c 	mov.w	lr, #12
 800a0f2:	fb0e 1100 	mla	r1, lr, r0, r1
 800a0f6:	4820      	ldr	r0, [pc, #128]	@ (800a178 <RemoteConfig::HandleList()+0xa4>)
 800a0f8:	681e      	ldr	r6, [r3, #0]
 800a0fa:	f890 8009 	ldrb.w	r8, [r0, #9]
 800a0fe:	f8d4 e008 	ldr.w	lr, [r4, #8]
 800a102:	b2f3      	uxtb	r3, r6
 800a104:	f3c6 2707 	ubfx	r7, r6, #8, #8
 800a108:	f3c6 4c07 	ubfx	ip, r6, #16, #8
 800a10c:	b088      	sub	sp, #32
 800a10e:	3507      	adds	r5, #7
 800a110:	0e36      	lsrs	r6, r6, #24
 800a112:	f1b8 0f00 	cmp.w	r8, #0
 800a116:	d019      	beq.n	800a14c <RemoteConfig::HandleList()+0x78>
 800a118:	3009      	adds	r0, #9
 800a11a:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a11e:	e9cd e005 	strd	lr, r0, [sp, #20]
 800a122:	e9cd c601 	strd	ip, r6, [sp, #4]
 800a126:	4a15      	ldr	r2, [pc, #84]	@ (800a17c <RemoteConfig::HandleList()+0xa8>)
 800a128:	9700      	str	r7, [sp, #0]
 800a12a:	f240 5184 	movw	r1, #1412	@ 0x584
 800a12e:	4628      	mov	r0, r5
 800a130:	f00c fe76 	bl	8016e20 <snprintf>
 800a134:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a138:	9300      	str	r3, [sp, #0]
 800a13a:	4602      	mov	r2, r0
 800a13c:	69a3      	ldr	r3, [r4, #24]
 800a13e:	6960      	ldr	r0, [r4, #20]
 800a140:	4629      	mov	r1, r5
 800a142:	f7ff ff31 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a146:	b008      	add	sp, #32
 800a148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a14c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 800a150:	e9cd 6202 	strd	r6, r2, [sp, #8]
 800a154:	e9cd 7c00 	strd	r7, ip, [sp]
 800a158:	4a09      	ldr	r2, [pc, #36]	@ (800a180 <RemoteConfig::HandleList()+0xac>)
 800a15a:	f240 5184 	movw	r1, #1412	@ 0x584
 800a15e:	4628      	mov	r0, r5
 800a160:	f00c fe5e 	bl	8016e20 <snprintf>
 800a164:	e7e6      	b.n	800a134 <RemoteConfig::HandleList()+0x60>
 800a166:	bf00      	nop
 800a168:	0801802c 	stmdaeq	r1, {r2, r3, r5, pc}
 800a16c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a170:	08017f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, ip, sp, lr}
 800a174:	20009b50 	andcs	r9, r0, r0, asr fp
 800a178:	20000080 	andcs	r0, r0, r0, lsl #1
 800a17c:	080176b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, ip, sp, lr}
 800a180:	080176cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp, lr}

0800a184 <RemoteConfig::HandleDisplaySet()>:
 800a184:	b508      	push	{r3, lr}
 800a186:	69c3      	ldr	r3, [r0, #28]
 800a188:	2b09      	cmp	r3, #9
 800a18a:	d10a      	bne.n	800a1a2 <RemoteConfig::HandleDisplaySet()+0x1e>
 800a18c:	4b05      	ldr	r3, [pc, #20]	@ (800a1a4 <RemoteConfig::HandleDisplaySet()+0x20>)
 800a18e:	681b      	ldr	r3, [r3, #0]
 800a190:	7a59      	ldrb	r1, [r3, #9]
 800a192:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 800a196:	4259      	negs	r1, r3
 800a198:	4159      	adcs	r1, r3
 800a19a:	4b03      	ldr	r3, [pc, #12]	@ (800a1a8 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a19c:	6818      	ldr	r0, [r3, #0]
 800a19e:	f7ff fa2d 	bl	80095fc <Display::SetSleep(bool)>
 800a1a2:	bd08      	pop	{r3, pc}
 800a1a4:	2000007c 	andcs	r0, r0, ip, ror r0
 800a1a8:	20009c14 	andcs	r9, r0, r4, lsl ip

0800a1ac <RemoteConfig::HandleTftpSet()>:
 800a1ac:	69c3      	ldr	r3, [r0, #28]
 800a1ae:	2b06      	cmp	r3, #6
 800a1b0:	d115      	bne.n	800a1de <RemoteConfig::HandleTftpSet()+0x32>
 800a1b2:	b510      	push	{r4, lr}
 800a1b4:	4b0a      	ldr	r3, [pc, #40]	@ (800a1e0 <RemoteConfig::HandleTftpSet()+0x34>)
 800a1b6:	681b      	ldr	r3, [r3, #0]
 800a1b8:	799b      	ldrb	r3, [r3, #6]
 800a1ba:	2b30      	cmp	r3, #48	@ 0x30
 800a1bc:	bf14      	ite	ne
 800a1be:	2301      	movne	r3, #1
 800a1c0:	2300      	moveq	r3, #0
 800a1c2:	4604      	mov	r4, r0
 800a1c4:	f880 3020 	strb.w	r3, [r0, #32]
 800a1c8:	d004      	beq.n	800a1d4 <RemoteConfig::HandleTftpSet()+0x28>
 800a1ca:	4b06      	ldr	r3, [pc, #24]	@ (800a1e4 <RemoteConfig::HandleTftpSet()+0x38>)
 800a1cc:	2100      	movs	r1, #0
 800a1ce:	6818      	ldr	r0, [r3, #0]
 800a1d0:	f7ff fa14 	bl	80095fc <Display::SetSleep(bool)>
 800a1d4:	4620      	mov	r0, r4
 800a1d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a1da:	f000 bc69 	b.w	800aab0 <RemoteConfig::PlatformHandleTftpSet()>
 800a1de:	4770      	bx	lr
 800a1e0:	2000007c 	andcs	r0, r0, ip, ror r0
 800a1e4:	20009c14 	andcs	r9, r0, r4, lsl ip

0800a1e8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
 800a1e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a1ea:	2500      	movs	r5, #0
 800a1ec:	4604      	mov	r4, r0
 800a1ee:	e9c0 1200 	strd	r1, r2, [r0]
 800a1f2:	6083      	str	r3, [r0, #8]
 800a1f4:	60c5      	str	r5, [r0, #12]
 800a1f6:	8205      	strh	r5, [r0, #16]
 800a1f8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a1fc:	e9c4 0505 	strd	r0, r5, [r4, #20]
 800a200:	4f13      	ldr	r7, [pc, #76]	@ (800a250 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x68>)
 800a202:	4814      	ldr	r0, [pc, #80]	@ (800a254 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x6c>)
 800a204:	4e14      	ldr	r6, [pc, #80]	@ (800a258 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x70>)
 800a206:	6004      	str	r4, [r0, #0]
 800a208:	6978      	ldr	r0, [r7, #20]
 800a20a:	6030      	str	r0, [r6, #0]
 800a20c:	8b38      	ldrh	r0, [r7, #24]
 800a20e:	61e5      	str	r5, [r4, #28]
 800a210:	f884 5020 	strb.w	r5, [r4, #32]
 800a214:	6265      	str	r5, [r4, #36]	@ 0x24
 800a216:	80b0      	strh	r0, [r6, #4]
 800a218:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a21c:	71b1      	strb	r1, [r6, #6]
 800a21e:	71f2      	strb	r2, [r6, #7]
 800a220:	7233      	strb	r3, [r6, #8]
 800a222:	7275      	strb	r5, [r6, #9]
 800a224:	f007 fc94 	bl	8011b50 <net::udp_begin(unsigned short)>
 800a228:	6160      	str	r0, [r4, #20]
 800a22a:	480c      	ldr	r0, [pc, #48]	@ (800a25c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x74>)
 800a22c:	9500      	str	r5, [sp, #0]
 800a22e:	462b      	mov	r3, r5
 800a230:	462a      	mov	r2, r5
 800a232:	4629      	mov	r1, r5
 800a234:	6800      	ldr	r0, [r0, #0]
 800a236:	f006 f84f 	bl	80102d8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a23a:	2020      	movs	r0, #32
 800a23c:	f00c ffd6 	bl	80171ec <operator new(unsigned int)>
 800a240:	4605      	mov	r5, r0
 800a242:	f000 fc67 	bl	800ab14 <HttpDaemon::HttpDaemon()>
 800a246:	4620      	mov	r0, r4
 800a248:	6265      	str	r5, [r4, #36]	@ 0x24
 800a24a:	b003      	add	sp, #12
 800a24c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a24e:	bf00      	nop
 800a250:	20009b50 	andcs	r9, r0, r0, asr fp
 800a254:	200000a4 	andcs	r0, r0, r4, lsr #1
 800a258:	20000080 	andcs	r0, r0, r0, lsl #1
 800a25c:	200098ec 	andcs	r9, r0, ip, ror #17

0800a260 <RemoteConfig::GetStringNode() const>:
 800a260:	4b03      	ldr	r3, [pc, #12]	@ (800a270 <RemoteConfig::GetStringNode() const+0x10>)
 800a262:	7998      	ldrb	r0, [r3, #6]
 800a264:	4b03      	ldr	r3, [pc, #12]	@ (800a274 <RemoteConfig::GetStringNode() const+0x14>)
 800a266:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a26a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a26e:	4770      	bx	lr
 800a270:	20000080 	andcs	r0, r0, r0, lsl #1
 800a274:	0801802c 	stmdaeq	r1, {r2, r3, r5, pc}

0800a278 <RemoteConfig::GetStringOutput() const>:
 800a278:	4b03      	ldr	r3, [pc, #12]	@ (800a288 <RemoteConfig::GetStringOutput() const+0x10>)
 800a27a:	79d8      	ldrb	r0, [r3, #7]
 800a27c:	4b03      	ldr	r3, [pc, #12]	@ (800a28c <RemoteConfig::GetStringOutput() const+0x14>)
 800a27e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a282:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a286:	4770      	bx	lr
 800a288:	20000080 	andcs	r0, r0, r0, lsl #1
 800a28c:	08017f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, ip, sp, lr}

0800a290 <RemoteConfig::SetDisable(bool)>:
 800a290:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a292:	7b06      	ldrb	r6, [r0, #12]
 800a294:	4605      	mov	r5, r0
 800a296:	b181      	cbz	r1, 800a2ba <RemoteConfig::SetDisable(bool)+0x2a>
 800a298:	b96e      	cbnz	r6, 800a2b6 <RemoteConfig::SetDisable(bool)+0x26>
 800a29a:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a29e:	f007 fc6d 	bl	8011b7c <net::udp_end(unsigned short)>
 800a2a2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a2a6:	616b      	str	r3, [r5, #20]
 800a2a8:	4b0d      	ldr	r3, [pc, #52]	@ (800a2e0 <RemoteConfig::SetDisable(bool)+0x50>)
 800a2aa:	4631      	mov	r1, r6
 800a2ac:	6818      	ldr	r0, [r3, #0]
 800a2ae:	f005 fff7 	bl	80102a0 <MDNS::ServiceRecordDelete(mdns::Services)>
 800a2b2:	2301      	movs	r3, #1
 800a2b4:	732b      	strb	r3, [r5, #12]
 800a2b6:	b002      	add	sp, #8
 800a2b8:	bd70      	pop	{r4, r5, r6, pc}
 800a2ba:	2e00      	cmp	r6, #0
 800a2bc:	d0fb      	beq.n	800a2b6 <RemoteConfig::SetDisable(bool)+0x26>
 800a2be:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a2c2:	460c      	mov	r4, r1
 800a2c4:	f007 fc44 	bl	8011b50 <net::udp_begin(unsigned short)>
 800a2c8:	6168      	str	r0, [r5, #20]
 800a2ca:	4805      	ldr	r0, [pc, #20]	@ (800a2e0 <RemoteConfig::SetDisable(bool)+0x50>)
 800a2cc:	9400      	str	r4, [sp, #0]
 800a2ce:	6800      	ldr	r0, [r0, #0]
 800a2d0:	4623      	mov	r3, r4
 800a2d2:	4622      	mov	r2, r4
 800a2d4:	4621      	mov	r1, r4
 800a2d6:	f005 ffff 	bl	80102d8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a2da:	732c      	strb	r4, [r5, #12]
 800a2dc:	e7eb      	b.n	800a2b6 <RemoteConfig::SetDisable(bool)+0x26>
 800a2de:	bf00      	nop
 800a2e0:	200098ec 	andcs	r9, r0, ip, ror #17

0800a2e4 <RemoteConfig::SetDisplayName(char const*)>:
 800a2e4:	b508      	push	{r3, lr}
 800a2e6:	4809      	ldr	r0, [pc, #36]	@ (800a30c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a2e8:	3901      	subs	r1, #1
 800a2ea:	2217      	movs	r2, #23
 800a2ec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a2f0:	b11b      	cbz	r3, 800a2fa <RemoteConfig::SetDisplayName(char const*)+0x16>
 800a2f2:	3a01      	subs	r2, #1
 800a2f4:	f800 3b01 	strb.w	r3, [r0], #1
 800a2f8:	d1f8      	bne.n	800a2ec <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a2fa:	2100      	movs	r1, #0
 800a2fc:	f00c fa84 	bl	8016808 <memset>
 800a300:	4b03      	ldr	r3, [pc, #12]	@ (800a310 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a302:	2200      	movs	r2, #0
 800a304:	f883 2020 	strb.w	r2, [r3, #32]
 800a308:	bd08      	pop	{r3, pc}
 800a30a:	bf00      	nop
 800a30c:	20000089 	andcs	r0, r0, r9, lsl #1
 800a310:	20000080 	andcs	r0, r0, r0, lsl #1

0800a314 <RemoteConfig::HandleGet(void*, unsigned long)>:
 800a314:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a316:	4f29      	ldr	r7, [pc, #164]	@ (800a3bc <RemoteConfig::HandleGet(void*, unsigned long)+0xa8>)
 800a318:	b085      	sub	sp, #20
 800a31a:	4604      	mov	r4, r0
 800a31c:	4616      	mov	r6, r2
 800a31e:	460d      	mov	r5, r1
 800a320:	b9a9      	cbnz	r1, 800a34e <RemoteConfig::HandleGet(void*, unsigned long)+0x3a>
 800a322:	6839      	ldr	r1, [r7, #0]
 800a324:	f44f 63b1 	mov.w	r3, #1416	@ 0x588
 800a328:	aa03      	add	r2, sp, #12
 800a32a:	3105      	adds	r1, #5
 800a32c:	9303      	str	r3, [sp, #12]
 800a32e:	f000 fb93 	bl	800aa58 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a332:	1e03      	subs	r3, r0, #0
 800a334:	da1b      	bge.n	800a36e <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a336:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a33a:	9300      	str	r3, [sp, #0]
 800a33c:	69a3      	ldr	r3, [r4, #24]
 800a33e:	4920      	ldr	r1, [pc, #128]	@ (800a3c0 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a340:	6960      	ldr	r0, [r4, #20]
 800a342:	220b      	movs	r2, #11
 800a344:	f7ff fe30 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a348:	200c      	movs	r0, #12
 800a34a:	b005      	add	sp, #20
 800a34c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a34e:	9203      	str	r2, [sp, #12]
 800a350:	aa03      	add	r2, sp, #12
 800a352:	6039      	str	r1, [r7, #0]
 800a354:	f000 fb80 	bl	800aa58 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a358:	1e03      	subs	r3, r0, #0
 800a35a:	da08      	bge.n	800a36e <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a35c:	2e0b      	cmp	r6, #11
 800a35e:	4632      	mov	r2, r6
 800a360:	4917      	ldr	r1, [pc, #92]	@ (800a3c0 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a362:	bf28      	it	cs
 800a364:	220b      	movcs	r2, #11
 800a366:	4628      	mov	r0, r5
 800a368:	f00c fa2c 	bl	80167c4 <memcpy>
 800a36c:	e7ec      	b.n	800a348 <RemoteConfig::HandleGet(void*, unsigned long)+0x34>
 800a36e:	4915      	ldr	r1, [pc, #84]	@ (800a3c4 <RemoteConfig::HandleGet(void*, unsigned long)+0xb0>)
 800a370:	2218      	movs	r2, #24
 800a372:	4353      	muls	r3, r2
 800a374:	18ca      	adds	r2, r1, r3
 800a376:	58cb      	ldr	r3, [r1, r3]
 800a378:	6852      	ldr	r2, [r2, #4]
 800a37a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a37e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a382:	07d2      	lsls	r2, r2, #31
 800a384:	bf48      	it	mi
 800a386:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a38a:	a903      	add	r1, sp, #12
 800a38c:	bf48      	it	mi
 800a38e:	58d3      	ldrmi	r3, [r2, r3]
 800a390:	4798      	blx	r3
 800a392:	b955      	cbnz	r5, 800a3aa <RemoteConfig::HandleGet(void*, unsigned long)+0x96>
 800a394:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a398:	9300      	str	r3, [sp, #0]
 800a39a:	69a3      	ldr	r3, [r4, #24]
 800a39c:	9a03      	ldr	r2, [sp, #12]
 800a39e:	6839      	ldr	r1, [r7, #0]
 800a3a0:	6960      	ldr	r0, [r4, #20]
 800a3a2:	f7ff fe01 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a3a6:	9803      	ldr	r0, [sp, #12]
 800a3a8:	e7cf      	b.n	800a34a <RemoteConfig::HandleGet(void*, unsigned long)+0x36>
 800a3aa:	9a03      	ldr	r2, [sp, #12]
 800a3ac:	6839      	ldr	r1, [r7, #0]
 800a3ae:	42b2      	cmp	r2, r6
 800a3b0:	bf28      	it	cs
 800a3b2:	4632      	movcs	r2, r6
 800a3b4:	4628      	mov	r0, r5
 800a3b6:	f00c fa10 	bl	80167da <memmove>
 800a3ba:	e7f4      	b.n	800a3a6 <RemoteConfig::HandleGet(void*, unsigned long)+0x92>
 800a3bc:	2000007c 	andcs	r0, r0, ip, ror r0
 800a3c0:	080176e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, ip, sp, lr}
 800a3c4:	080181e0 	stmdaeq	r1, {r5, r6, r7, r8, pc}

0800a3c8 <RemoteConfig::HandleGetNoParams()>:
 800a3c8:	2200      	movs	r2, #0
 800a3ca:	4611      	mov	r1, r2
 800a3cc:	f7ff bfa2 	b.w	800a314 <RemoteConfig::HandleGet(void*, unsigned long)>

0800a3d0 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
 800a3d0:	b510      	push	{r4, lr}
 800a3d2:	b08a      	sub	sp, #40	@ 0x28
 800a3d4:	a802      	add	r0, sp, #8
 800a3d6:	460c      	mov	r4, r1
 800a3d8:	f000 f9a2 	bl	800a720 <RemoteConfigParams::RemoteConfigParams()>
 800a3dc:	4a05      	ldr	r2, [pc, #20]	@ (800a3f4 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)+0x24>)
 800a3de:	9400      	str	r4, [sp, #0]
 800a3e0:	6812      	ldr	r2, [r2, #0]
 800a3e2:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a3e6:	2100      	movs	r1, #0
 800a3e8:	a802      	add	r0, sp, #8
 800a3ea:	f000 fa11 	bl	800a810 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
 800a3ee:	b00a      	add	sp, #40	@ 0x28
 800a3f0:	bd10      	pop	{r4, pc}
 800a3f2:	bf00      	nop
 800a3f4:	2000007c 	andcs	r0, r0, ip, ror r0

0800a3f8 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
 800a3f8:	b513      	push	{r0, r1, r4, lr}
 800a3fa:	a801      	add	r0, sp, #4
 800a3fc:	460c      	mov	r4, r1
 800a3fe:	f009 f8b7 	bl	8013570 <EnvParams::EnvParams()>
 800a402:	4905      	ldr	r1, [pc, #20]	@ (800a418 <RemoteConfig::HandleGetEnvTxt(unsigned long&)+0x20>)
 800a404:	4623      	mov	r3, r4
 800a406:	6809      	ldr	r1, [r1, #0]
 800a408:	f240 528c 	movw	r2, #1420	@ 0x58c
 800a40c:	a801      	add	r0, sp, #4
 800a40e:	f009 f90d 	bl	801362c <EnvParams::Builder(char*, unsigned long, unsigned long&)>
 800a412:	b002      	add	sp, #8
 800a414:	bd10      	pop	{r4, pc}
 800a416:	bf00      	nop
 800a418:	2000007c 	andcs	r0, r0, ip, ror r0

0800a41c <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
 800a41c:	b510      	push	{r4, lr}
 800a41e:	b09a      	sub	sp, #104	@ 0x68
 800a420:	a802      	add	r0, sp, #8
 800a422:	460c      	mov	r4, r1
 800a424:	f007 fc84 	bl	8011d30 <NetworkParams::NetworkParams()>
 800a428:	4a05      	ldr	r2, [pc, #20]	@ (800a440 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)+0x24>)
 800a42a:	9400      	str	r4, [sp, #0]
 800a42c:	6812      	ldr	r2, [r2, #0]
 800a42e:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a432:	2100      	movs	r1, #0
 800a434:	a802      	add	r0, sp, #8
 800a436:	f007 fd67 	bl	8011f08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
 800a43a:	b01a      	add	sp, #104	@ 0x68
 800a43c:	bd10      	pop	{r4, pc}
 800a43e:	bf00      	nop
 800a440:	2000007c 	andcs	r0, r0, ip, ror r0

0800a444 <RemoteConfig::HandleGetDevicesTxt(unsigned long&)>:
 800a444:	b510      	push	{r4, lr}
 800a446:	b08c      	sub	sp, #48	@ 0x30
 800a448:	a802      	add	r0, sp, #8
 800a44a:	460c      	mov	r4, r1
 800a44c:	f002 fc46 	bl	800ccdc <PixelDmxParams::PixelDmxParams()>
 800a450:	4a05      	ldr	r2, [pc, #20]	@ (800a468 <RemoteConfig::HandleGetDevicesTxt(unsigned long&)+0x24>)
 800a452:	9400      	str	r4, [sp, #0]
 800a454:	6812      	ldr	r2, [r2, #0]
 800a456:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a45a:	2100      	movs	r1, #0
 800a45c:	a802      	add	r0, sp, #8
 800a45e:	f002 fde1 	bl	800d024 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)>
 800a462:	b00c      	add	sp, #48	@ 0x30
 800a464:	bd10      	pop	{r4, pc}
 800a466:	bf00      	nop
 800a468:	2000007c 	andcs	r0, r0, ip, ror r0

0800a46c <RemoteConfig::HandleGetDisplayTxt(unsigned long&)>:
 800a46c:	b510      	push	{r4, lr}
 800a46e:	b08c      	sub	sp, #48	@ 0x30
 800a470:	a803      	add	r0, sp, #12
 800a472:	460c      	mov	r4, r1
 800a474:	f008 fcf6 	bl	8012e64 <DisplayUdfParams::DisplayUdfParams()>
 800a478:	4a05      	ldr	r2, [pc, #20]	@ (800a490 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)+0x24>)
 800a47a:	9400      	str	r4, [sp, #0]
 800a47c:	6812      	ldr	r2, [r2, #0]
 800a47e:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a482:	2100      	movs	r1, #0
 800a484:	a803      	add	r0, sp, #12
 800a486:	f008 fd8f 	bl	8012fa8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>
 800a48a:	b00c      	add	sp, #48	@ 0x30
 800a48c:	bd10      	pop	{r4, pc}
 800a48e:	bf00      	nop
 800a490:	2000007c 	andcs	r0, r0, ip, ror r0

0800a494 <RemoteConfig::HandleSet(void*, unsigned long)>:
 800a494:	b530      	push	{r4, r5, lr}
 800a496:	b085      	sub	sp, #20
 800a498:	4604      	mov	r4, r0
 800a49a:	9201      	str	r2, [sp, #4]
 800a49c:	b9d1      	cbnz	r1, 800a4d4 <RemoteConfig::HandleSet(void*, unsigned long)+0x40>
 800a49e:	f240 538b 	movw	r3, #1419	@ 0x58b
 800a4a2:	9303      	str	r3, [sp, #12]
 800a4a4:	4b19      	ldr	r3, [pc, #100]	@ (800a50c <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a4a6:	6819      	ldr	r1, [r3, #0]
 800a4a8:	aa03      	add	r2, sp, #12
 800a4aa:	3101      	adds	r1, #1
 800a4ac:	f000 fad4 	bl	800aa58 <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a4b0:	2800      	cmp	r0, #0
 800a4b2:	db0d      	blt.n	800a4d0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a4b4:	4b16      	ldr	r3, [pc, #88]	@ (800a510 <RemoteConfig::HandleSet(void*, unsigned long)+0x7c>)
 800a4b6:	2218      	movs	r2, #24
 800a4b8:	fb02 3300 	mla	r3, r2, r0, r3
 800a4bc:	68da      	ldr	r2, [r3, #12]
 800a4be:	689b      	ldr	r3, [r3, #8]
 800a4c0:	1051      	asrs	r1, r2, #1
 800a4c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a4c6:	07d2      	lsls	r2, r2, #31
 800a4c8:	bf44      	itt	mi
 800a4ca:	5862      	ldrmi	r2, [r4, r1]
 800a4cc:	58d3      	ldrmi	r3, [r2, r3]
 800a4ce:	4798      	blx	r3
 800a4d0:	b005      	add	sp, #20
 800a4d2:	bd30      	pop	{r4, r5, pc}
 800a4d4:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a4d8:	429a      	cmp	r2, r3
 800a4da:	d8f9      	bhi.n	800a4d0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a4dc:	4b0d      	ldr	r3, [pc, #52]	@ (800a514 <RemoteConfig::HandleSet(void*, unsigned long)+0x80>)
 800a4de:	781b      	ldrb	r3, [r3, #0]
 800a4e0:	460d      	mov	r5, r1
 800a4e2:	07d9      	lsls	r1, r3, #31
 800a4e4:	d50b      	bpl.n	800a4fe <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a4e6:	782b      	ldrb	r3, [r5, #0]
 800a4e8:	2b7b      	cmp	r3, #123	@ 0x7b
 800a4ea:	d108      	bne.n	800a4fe <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a4ec:	1e51      	subs	r1, r2, #1
 800a4ee:	b289      	uxth	r1, r1
 800a4f0:	2200      	movs	r2, #0
 800a4f2:	4628      	mov	r0, r5
 800a4f4:	f009 f8ee 	bl	80136d4 <properties::convert_json_file(char*, unsigned long, bool)>
 800a4f8:	1e02      	subs	r2, r0, #0
 800a4fa:	dde9      	ble.n	800a4d0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a4fc:	b292      	uxth	r2, r2
 800a4fe:	4b03      	ldr	r3, [pc, #12]	@ (800a50c <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a500:	61e2      	str	r2, [r4, #28]
 800a502:	601d      	str	r5, [r3, #0]
 800a504:	aa01      	add	r2, sp, #4
 800a506:	1c69      	adds	r1, r5, #1
 800a508:	4620      	mov	r0, r4
 800a50a:	e7cf      	b.n	800a4ac <RemoteConfig::HandleSet(void*, unsigned long)+0x18>
 800a50c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a510:	080181e0 	stmdaeq	r1, {r5, r6, r7, r8, pc}
 800a514:	20009c11 	andcs	r9, r0, r1, lsl ip

0800a518 <RemoteConfig::HandleRequest()>:
 800a518:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a51c:	69c2      	ldr	r2, [r0, #28]
 800a51e:	4b3f      	ldr	r3, [pc, #252]	@ (800a61c <RemoteConfig::HandleRequest()+0x104>)
 800a520:	3a01      	subs	r2, #1
 800a522:	681b      	ldr	r3, [r3, #0]
 800a524:	5c99      	ldrb	r1, [r3, r2]
 800a526:	290a      	cmp	r1, #10
 800a528:	bf08      	it	eq
 800a52a:	61c2      	streq	r2, [r0, #28]
 800a52c:	7819      	ldrb	r1, [r3, #0]
 800a52e:	293f      	cmp	r1, #63	@ 0x3f
 800a530:	d13c      	bne.n	800a5ac <RemoteConfig::HandleRequest()+0x94>
 800a532:	69c4      	ldr	r4, [r0, #28]
 800a534:	493a      	ldr	r1, [pc, #232]	@ (800a620 <RemoteConfig::HandleRequest()+0x108>)
 800a536:	3c01      	subs	r4, #1
 800a538:	61c4      	str	r4, [r0, #28]
 800a53a:	2200      	movs	r2, #0
 800a53c:	468c      	mov	ip, r1
 800a53e:	7b8e      	ldrb	r6, [r1, #14]
 800a540:	898d      	ldrh	r5, [r1, #12]
 800a542:	b18e      	cbz	r6, 800a568 <RemoteConfig::HandleRequest()+0x50>
 800a544:	42ac      	cmp	r4, r5
 800a546:	d811      	bhi.n	800a56c <RemoteConfig::HandleRequest()+0x54>
 800a548:	3201      	adds	r2, #1
 800a54a:	2a08      	cmp	r2, #8
 800a54c:	f101 0110 	add.w	r1, r1, #16
 800a550:	d1f5      	bne.n	800a53e <RemoteConfig::HandleRequest()+0x26>
 800a552:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a556:	9300      	str	r3, [sp, #0]
 800a558:	6983      	ldr	r3, [r0, #24]
 800a55a:	4932      	ldr	r1, [pc, #200]	@ (800a624 <RemoteConfig::HandleRequest()+0x10c>)
 800a55c:	6940      	ldr	r0, [r0, #20]
 800a55e:	f7ff fd23 	bl	8009fa8 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a562:	b002      	add	sp, #8
 800a564:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a568:	42ac      	cmp	r4, r5
 800a56a:	d1ed      	bne.n	800a548 <RemoteConfig::HandleRequest()+0x30>
 800a56c:	688e      	ldr	r6, [r1, #8]
 800a56e:	461f      	mov	r7, r3
 800a570:	3e01      	subs	r6, #1
 800a572:	441d      	add	r5, r3
 800a574:	42af      	cmp	r7, r5
 800a576:	d10f      	bne.n	800a598 <RemoteConfig::HandleRequest()+0x80>
 800a578:	0113      	lsls	r3, r2, #4
 800a57a:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 800a57e:	f85c 3003 	ldr.w	r3, [ip, r3]
 800a582:	6852      	ldr	r2, [r2, #4]
 800a584:	1054      	asrs	r4, r2, #1
 800a586:	eb00 0162 	add.w	r1, r0, r2, asr #1
 800a58a:	07d2      	lsls	r2, r2, #31
 800a58c:	d40b      	bmi.n	800a5a6 <RemoteConfig::HandleRequest()+0x8e>
 800a58e:	4608      	mov	r0, r1
 800a590:	b002      	add	sp, #8
 800a592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a596:	4718      	bx	r3
 800a598:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 800a59c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a5a0:	45f0      	cmp	r8, lr
 800a5a2:	d0e7      	beq.n	800a574 <RemoteConfig::HandleRequest()+0x5c>
 800a5a4:	e7d0      	b.n	800a548 <RemoteConfig::HandleRequest()+0x30>
 800a5a6:	5902      	ldr	r2, [r0, r4]
 800a5a8:	58d3      	ldr	r3, [r2, r3]
 800a5aa:	e7f0      	b.n	800a58e <RemoteConfig::HandleRequest()+0x76>
 800a5ac:	7b42      	ldrb	r2, [r0, #13]
 800a5ae:	2a00      	cmp	r2, #0
 800a5b0:	d1d7      	bne.n	800a562 <RemoteConfig::HandleRequest()+0x4a>
 800a5b2:	2923      	cmp	r1, #35	@ 0x23
 800a5b4:	d105      	bne.n	800a5c2 <RemoteConfig::HandleRequest()+0xaa>
 800a5b6:	4611      	mov	r1, r2
 800a5b8:	b002      	add	sp, #8
 800a5ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a5be:	f7ff bf69 	b.w	800a494 <RemoteConfig::HandleSet(void*, unsigned long)>
 800a5c2:	2921      	cmp	r1, #33	@ 0x21
 800a5c4:	d1cd      	bne.n	800a562 <RemoteConfig::HandleRequest()+0x4a>
 800a5c6:	69c2      	ldr	r2, [r0, #28]
 800a5c8:	3a01      	subs	r2, #1
 800a5ca:	2a05      	cmp	r2, #5
 800a5cc:	61c2      	str	r2, [r0, #28]
 800a5ce:	d91e      	bls.n	800a60e <RemoteConfig::HandleRequest()+0xf6>
 800a5d0:	4d15      	ldr	r5, [pc, #84]	@ (800a628 <RemoteConfig::HandleRequest()+0x110>)
 800a5d2:	4619      	mov	r1, r3
 800a5d4:	1d5e      	adds	r6, r3, #5
 800a5d6:	461c      	mov	r4, r3
 800a5d8:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800a5dc:	f815 7b01 	ldrb.w	r7, [r5], #1
 800a5e0:	45bc      	cmp	ip, r7
 800a5e2:	d112      	bne.n	800a60a <RemoteConfig::HandleRequest()+0xf2>
 800a5e4:	42b4      	cmp	r4, r6
 800a5e6:	d1f7      	bne.n	800a5d8 <RemoteConfig::HandleRequest()+0xc0>
 800a5e8:	2300      	movs	r3, #0
 800a5ea:	4a10      	ldr	r2, [pc, #64]	@ (800a62c <RemoteConfig::HandleRequest()+0x114>)
 800a5ec:	011b      	lsls	r3, r3, #4
 800a5ee:	58d3      	ldr	r3, [r2, r3]
 800a5f0:	e7ce      	b.n	800a590 <RemoteConfig::HandleRequest()+0x78>
 800a5f2:	4a0f      	ldr	r2, [pc, #60]	@ (800a630 <RemoteConfig::HandleRequest()+0x118>)
 800a5f4:	3308      	adds	r3, #8
 800a5f6:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800a5fa:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a5fe:	42a5      	cmp	r5, r4
 800a600:	d105      	bne.n	800a60e <RemoteConfig::HandleRequest()+0xf6>
 800a602:	4299      	cmp	r1, r3
 800a604:	d1f7      	bne.n	800a5f6 <RemoteConfig::HandleRequest()+0xde>
 800a606:	2301      	movs	r3, #1
 800a608:	e7ef      	b.n	800a5ea <RemoteConfig::HandleRequest()+0xd2>
 800a60a:	2a08      	cmp	r2, #8
 800a60c:	d8f1      	bhi.n	800a5f2 <RemoteConfig::HandleRequest()+0xda>
 800a60e:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a612:	9300      	str	r3, [sp, #0]
 800a614:	6983      	ldr	r3, [r0, #24]
 800a616:	4907      	ldr	r1, [pc, #28]	@ (800a634 <RemoteConfig::HandleRequest()+0x11c>)
 800a618:	2208      	movs	r2, #8
 800a61a:	e79f      	b.n	800a55c <RemoteConfig::HandleRequest()+0x44>
 800a61c:	2000007c 	andcs	r0, r0, ip, ror r0
 800a620:	08018138 	stmdaeq	r1, {r3, r4, r5, r8, pc}
 800a624:	080176ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, ip, sp, lr}
 800a628:	080176f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800a62c:	08018118 	stmdaeq	r1, {r3, r4, r8, pc}
 800a630:	080176fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800a634:	08017706 	stmdaeq	r1, {r1, r2, r8, r9, sl, ip, sp, lr}

0800a638 <RemoteConfig::HandleSetRconfigTxt()>:
 800a638:	b510      	push	{r4, lr}
 800a63a:	b088      	sub	sp, #32
 800a63c:	4604      	mov	r4, r0
 800a63e:	4668      	mov	r0, sp
 800a640:	f000 f86e 	bl	800a720 <RemoteConfigParams::RemoteConfigParams()>
 800a644:	4b05      	ldr	r3, [pc, #20]	@ (800a65c <RemoteConfig::HandleSetRconfigTxt()+0x24>)
 800a646:	69e2      	ldr	r2, [r4, #28]
 800a648:	6819      	ldr	r1, [r3, #0]
 800a64a:	4668      	mov	r0, sp
 800a64c:	f000 f87a 	bl	800a744 <RemoteConfigParams::Load(char const*, unsigned long)>
 800a650:	4621      	mov	r1, r4
 800a652:	4668      	mov	r0, sp
 800a654:	f000 f97a 	bl	800a94c <RemoteConfigParams::Set(RemoteConfig*)>
 800a658:	b008      	add	sp, #32
 800a65a:	bd10      	pop	{r4, pc}
 800a65c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a660 <RemoteConfig::HandleSetEnvTxt()>:
 800a660:	b513      	push	{r0, r1, r4, lr}
 800a662:	4604      	mov	r4, r0
 800a664:	a801      	add	r0, sp, #4
 800a666:	f008 ff83 	bl	8013570 <EnvParams::EnvParams()>
 800a66a:	4b04      	ldr	r3, [pc, #16]	@ (800a67c <RemoteConfig::HandleSetEnvTxt()+0x1c>)
 800a66c:	69e2      	ldr	r2, [r4, #28]
 800a66e:	6819      	ldr	r1, [r3, #0]
 800a670:	a801      	add	r0, sp, #4
 800a672:	f008 ff7f 	bl	8013574 <EnvParams::LoadAndSet(char const*, unsigned long)>
 800a676:	b002      	add	sp, #8
 800a678:	bd10      	pop	{r4, pc}
 800a67a:	bf00      	nop
 800a67c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a680 <RemoteConfig::HandleSetNetworkTxt()>:
 800a680:	b510      	push	{r4, lr}
 800a682:	b098      	sub	sp, #96	@ 0x60
 800a684:	4604      	mov	r4, r0
 800a686:	4668      	mov	r0, sp
 800a688:	f007 fb52 	bl	8011d30 <NetworkParams::NetworkParams()>
 800a68c:	4b03      	ldr	r3, [pc, #12]	@ (800a69c <RemoteConfig::HandleSetNetworkTxt()+0x1c>)
 800a68e:	69e2      	ldr	r2, [r4, #28]
 800a690:	6819      	ldr	r1, [r3, #0]
 800a692:	4668      	mov	r0, sp
 800a694:	f007 fb60 	bl	8011d58 <NetworkParams::Load(char const*, unsigned long)>
 800a698:	b018      	add	sp, #96	@ 0x60
 800a69a:	bd10      	pop	{r4, pc}
 800a69c:	2000007c 	andcs	r0, r0, ip, ror r0

0800a6a0 <RemoteConfig::HandleSetDevicesTxt()>:
 800a6a0:	b510      	push	{r4, lr}
 800a6a2:	b08a      	sub	sp, #40	@ 0x28
 800a6a4:	4604      	mov	r4, r0
 800a6a6:	4668      	mov	r0, sp
 800a6a8:	f002 fb18 	bl	800ccdc <PixelDmxParams::PixelDmxParams()>
 800a6ac:	4b03      	ldr	r3, [pc, #12]	@ (800a6bc <RemoteConfig::HandleSetDevicesTxt()+0x1c>)
 800a6ae:	69e2      	ldr	r2, [r4, #28]
 800a6b0:	6819      	ldr	r1, [r3, #0]
 800a6b2:	4668      	mov	r0, sp
 800a6b4:	f002 fb58 	bl	800cd68 <PixelDmxParams::Load(char const*, unsigned long)>
 800a6b8:	b00a      	add	sp, #40	@ 0x28
 800a6ba:	bd10      	pop	{r4, pc}
 800a6bc:	2000007c 	andcs	r0, r0, ip, ror r0

0800a6c0 <RemoteConfig::HandleSetDisplayTxt()>:
 800a6c0:	b510      	push	{r4, lr}
 800a6c2:	b08a      	sub	sp, #40	@ 0x28
 800a6c4:	4604      	mov	r4, r0
 800a6c6:	a801      	add	r0, sp, #4
 800a6c8:	f008 fbcc 	bl	8012e64 <DisplayUdfParams::DisplayUdfParams()>
 800a6cc:	4b03      	ldr	r3, [pc, #12]	@ (800a6dc <RemoteConfig::HandleSetDisplayTxt()+0x1c>)
 800a6ce:	69e2      	ldr	r2, [r4, #28]
 800a6d0:	6819      	ldr	r1, [r3, #0]
 800a6d2:	a801      	add	r0, sp, #4
 800a6d4:	f008 fbde 	bl	8012e94 <DisplayUdfParams::Load(char const*, unsigned long)>
 800a6d8:	b00a      	add	sp, #40	@ 0x28
 800a6da:	bd10      	pop	{r4, pc}
 800a6dc:	2000007c 	andcs	r0, r0, ip, ror r0

0800a6e0 <RemoteConfig::HandleFactory()>:
 800a6e0:	b538      	push	{r3, r4, r5, lr}
 800a6e2:	4b05      	ldr	r3, [pc, #20]	@ (800a6f8 <RemoteConfig::HandleFactory()+0x18>)
 800a6e4:	681d      	ldr	r5, [r3, #0]
 800a6e6:	2400      	movs	r4, #0
 800a6e8:	4621      	mov	r1, r4
 800a6ea:	4628      	mov	r0, r5
 800a6ec:	3401      	adds	r4, #1
 800a6ee:	f008 fe61 	bl	80133b4 <ConfigStore::ResetSetList(configstore::Store)>
 800a6f2:	2c1b      	cmp	r4, #27
 800a6f4:	d1f8      	bne.n	800a6e8 <RemoteConfig::HandleFactory()+0x8>
 800a6f6:	bd38      	pop	{r3, r4, r5, pc}
 800a6f8:	20009bfc 	strdcs	r9, [r0], -ip

0800a6fc <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
 800a6fc:	b507      	push	{r0, r1, r2, lr}
 800a6fe:	2300      	movs	r3, #0
 800a700:	2101      	movs	r1, #1
 800a702:	e9cd 3100 	strd	r3, r1, [sp]
 800a706:	4602      	mov	r2, r0
 800a708:	4804      	ldr	r0, [pc, #16]	@ (800a71c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x20>)
 800a70a:	2320      	movs	r3, #32
 800a70c:	6800      	ldr	r0, [r0, #0]
 800a70e:	210a      	movs	r1, #10
 800a710:	f008 fe88 	bl	8013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800a714:	b003      	add	sp, #12
 800a716:	f85d fb04 	ldr.w	pc, [sp], #4
 800a71a:	bf00      	nop
 800a71c:	20009bfc 	strdcs	r9, [r0], -ip

0800a720 <RemoteConfigParams::RemoteConfigParams()>:
 800a720:	b510      	push	{r4, lr}
 800a722:	2220      	movs	r2, #32
 800a724:	4604      	mov	r4, r0
 800a726:	2100      	movs	r1, #0
 800a728:	f00c f86e 	bl	8016808 <memset>
 800a72c:	4620      	mov	r0, r4
 800a72e:	bd10      	pop	{r4, pc}

0800a730 <RemoteConfigParams::Load()>:
 800a730:	b508      	push	{r3, lr}
 800a732:	2200      	movs	r2, #0
 800a734:	7002      	strb	r2, [r0, #0]
 800a736:	7042      	strb	r2, [r0, #1]
 800a738:	7082      	strb	r2, [r0, #2]
 800a73a:	70c2      	strb	r2, [r0, #3]
 800a73c:	f7ff ffde 	bl	800a6fc <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a740:	bd08      	pop	{r3, pc}
	...

0800a744 <RemoteConfigParams::Load(char const*, unsigned long)>:
 800a744:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a746:	2500      	movs	r5, #0
 800a748:	b087      	sub	sp, #28
 800a74a:	4604      	mov	r4, r0
 800a74c:	460e      	mov	r6, r1
 800a74e:	4617      	mov	r7, r2
 800a750:	7005      	strb	r5, [r0, #0]
 800a752:	7045      	strb	r5, [r0, #1]
 800a754:	7085      	strb	r5, [r0, #2]
 800a756:	70c5      	strb	r5, [r0, #3]
 800a758:	4602      	mov	r2, r0
 800a75a:	490c      	ldr	r1, [pc, #48]	@ (800a78c <RemoteConfigParams::Load(char const*, unsigned long)+0x48>)
 800a75c:	a804      	add	r0, sp, #16
 800a75e:	f009 f93b 	bl	80139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a762:	463a      	mov	r2, r7
 800a764:	4631      	mov	r1, r6
 800a766:	a804      	add	r0, sp, #16
 800a768:	f009 f93a 	bl	80139e0 <ReadConfigFile::Read(char const*, unsigned int)>
 800a76c:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800a770:	2320      	movs	r3, #32
 800a772:	4807      	ldr	r0, [pc, #28]	@ (800a790 <RemoteConfigParams::Load(char const*, unsigned long)+0x4c>)
 800a774:	9300      	str	r3, [sp, #0]
 800a776:	462a      	mov	r2, r5
 800a778:	4623      	mov	r3, r4
 800a77a:	210a      	movs	r1, #10
 800a77c:	6800      	ldr	r0, [r0, #0]
 800a77e:	f008 fe2b 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a782:	a804      	add	r0, sp, #16
 800a784:	f009 f92b 	bl	80139de <ReadConfigFile::~ReadConfigFile()>
 800a788:	b007      	add	sp, #28
 800a78a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a78c:	0800a80d 	stmdaeq	r0, {r0, r2, r3, fp, sp, pc}
 800a790:	20009bfc 	strdcs	r9, [r0], -ip

0800a794 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
 800a794:	6803      	ldr	r3, [r0, #0]
 800a796:	b111      	cbz	r1, 800a79e <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0xa>
 800a798:	4313      	orrs	r3, r2
 800a79a:	6003      	str	r3, [r0, #0]
 800a79c:	4770      	bx	lr
 800a79e:	ea23 0302 	bic.w	r3, r3, r2
 800a7a2:	e7fa      	b.n	800a79a <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0x6>

0800a7a4 <RemoteConfigParams::callbackFunction(char const*)>:
 800a7a4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a7a8:	4f16      	ldr	r7, [pc, #88]	@ (800a804 <RemoteConfigParams::callbackFunction(char const*)+0x60>)
 800a7aa:	4604      	mov	r4, r0
 800a7ac:	460e      	mov	r6, r1
 800a7ae:	2506      	movs	r5, #6
 800a7b0:	3d01      	subs	r5, #1
 800a7b2:	d113      	bne.n	800a7dc <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a7b4:	2317      	movs	r3, #23
 800a7b6:	9301      	str	r3, [sp, #4]
 800a7b8:	4913      	ldr	r1, [pc, #76]	@ (800a808 <RemoteConfigParams::callbackFunction(char const*)+0x64>)
 800a7ba:	ab01      	add	r3, sp, #4
 800a7bc:	f104 0208 	add.w	r2, r4, #8
 800a7c0:	4630      	mov	r0, r6
 800a7c2:	f009 f943 	bl	8013a4c <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800a7c6:	b930      	cbnz	r0, 800a7d6 <RemoteConfigParams::callbackFunction(char const*)+0x32>
 800a7c8:	9b01      	ldr	r3, [sp, #4]
 800a7ca:	4423      	add	r3, r4
 800a7cc:	721d      	strb	r5, [r3, #8]
 800a7ce:	6823      	ldr	r3, [r4, #0]
 800a7d0:	f043 0310 	orr.w	r3, r3, #16
 800a7d4:	6023      	str	r3, [r4, #0]
 800a7d6:	b002      	add	sp, #8
 800a7d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7dc:	6839      	ldr	r1, [r7, #0]
 800a7de:	f8d7 8004 	ldr.w	r8, [r7, #4]
 800a7e2:	aa01      	add	r2, sp, #4
 800a7e4:	4630      	mov	r0, r6
 800a7e6:	f009 fa21 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a7ea:	b108      	cbz	r0, 800a7f0 <RemoteConfigParams::callbackFunction(char const*)+0x4c>
 800a7ec:	3708      	adds	r7, #8
 800a7ee:	e7df      	b.n	800a7b0 <RemoteConfigParams::callbackFunction(char const*)+0xc>
 800a7f0:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a7f4:	4642      	mov	r2, r8
 800a7f6:	4620      	mov	r0, r4
 800a7f8:	b002      	add	sp, #8
 800a7fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a7fe:	f7ff bfc9 	b.w	800a794 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
 800a802:	bf00      	nop
 800a804:	080181b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, pc}
 800a808:	08018734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, pc}

0800a80c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a80c:	f7ff bfca 	b.w	800a7a4 <RemoteConfigParams::callbackFunction(char const*)>

0800a810 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
 800a810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a814:	4605      	mov	r5, r0
 800a816:	b087      	sub	sp, #28
 800a818:	4614      	mov	r4, r2
 800a81a:	461e      	mov	r6, r3
 800a81c:	b361      	cbz	r1, 800a878 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800a81e:	2220      	movs	r2, #32
 800a820:	f00b ffdb 	bl	80167da <memmove>
 800a824:	4940      	ldr	r1, [pc, #256]	@ (800a928 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800a826:	4f41      	ldr	r7, [pc, #260]	@ (800a92c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800a828:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800a944 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800a82c:	f8df a118 	ldr.w	sl, [pc, #280]	@ 800a948 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800a830:	4633      	mov	r3, r6
 800a832:	4622      	mov	r2, r4
 800a834:	a803      	add	r0, sp, #12
 800a836:	f008 fff9 	bl	801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800a83a:	f04f 0806 	mov.w	r8, #6
 800a83e:	f04f 0901 	mov.w	r9, #1
 800a842:	f1b8 0801 	subs.w	r8, r8, #1
 800a846:	f8d5 c000 	ldr.w	ip, [r5]
 800a84a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a84e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a852:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800a856:	d112      	bne.n	800a87e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800a858:	42a2      	cmp	r2, r4
 800a85a:	d246      	bcs.n	800a8ea <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xda>
 800a85c:	9803      	ldr	r0, [sp, #12]
 800a85e:	f01c 0f10 	tst.w	ip, #16
 800a862:	f105 0508 	add.w	r5, r5, #8
 800a866:	4410      	add	r0, r2
 800a868:	eba4 0402 	sub.w	r4, r4, r2
 800a86c:	d12f      	bne.n	800a8ce <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800a86e:	bb7e      	cbnz	r6, 800a8d0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
 800a870:	4b2f      	ldr	r3, [pc, #188]	@ (800a930 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a872:	4a30      	ldr	r2, [pc, #192]	@ (800a934 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800a874:	9500      	str	r5, [sp, #0]
 800a876:	e02e      	b.n	800a8d6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a878:	f7ff ff40 	bl	800a6fc <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a87c:	e7d2      	b.n	800a824 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800a87e:	42a2      	cmp	r2, r4
 800a880:	e9d7 3100 	ldrd	r3, r1, [r7]
 800a884:	d21d      	bcs.n	800a8c2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb2>
 800a886:	9803      	ldr	r0, [sp, #12]
 800a888:	ea01 0e0c 	and.w	lr, r1, ip
 800a88c:	ea31 0c0c 	bics.w	ip, r1, ip
 800a890:	4410      	add	r0, r2
 800a892:	eba4 0402 	sub.w	r4, r4, r2
 800a896:	d003      	beq.n	800a8a0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x90>
 800a898:	b91e      	cbnz	r6, 800a8a2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800a89a:	4a27      	ldr	r2, [pc, #156]	@ (800a938 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x128>)
 800a89c:	9600      	str	r6, [sp, #0]
 800a89e:	e006      	b.n	800a8ae <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a8a0:	b18e      	cbz	r6, 800a8c6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb6>
 800a8a2:	eba1 020e 	sub.w	r2, r1, lr
 800a8a6:	4251      	negs	r1, r2
 800a8a8:	4151      	adcs	r1, r2
 800a8aa:	9100      	str	r1, [sp, #0]
 800a8ac:	465a      	mov	r2, fp
 800a8ae:	4621      	mov	r1, r4
 800a8b0:	f00c fab6 	bl	8016e20 <snprintf>
 800a8b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8b8:	4284      	cmp	r4, r0
 800a8ba:	bfa4      	itt	ge
 800a8bc:	181b      	addge	r3, r3, r0
 800a8be:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8c2:	3708      	adds	r7, #8
 800a8c4:	e7bd      	b.n	800a842 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x32>
 800a8c6:	f8cd 9000 	str.w	r9, [sp]
 800a8ca:	4652      	mov	r2, sl
 800a8cc:	e7ef      	b.n	800a8ae <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a8ce:	b336      	cbz	r6, 800a91e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x10e>
 800a8d0:	4b17      	ldr	r3, [pc, #92]	@ (800a930 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a8d2:	4a1a      	ldr	r2, [pc, #104]	@ (800a93c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>)
 800a8d4:	9500      	str	r5, [sp, #0]
 800a8d6:	4621      	mov	r1, r4
 800a8d8:	f00c faa2 	bl	8016e20 <snprintf>
 800a8dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8e0:	4284      	cmp	r4, r0
 800a8e2:	bfa4      	itt	ge
 800a8e4:	181b      	addge	r3, r3, r0
 800a8e6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8ea:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a8ee:	b17b      	cbz	r3, 800a910 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x100>
 800a8f0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a8f4:	9b03      	ldr	r3, [sp, #12]
 800a8f6:	4413      	add	r3, r2
 800a8f8:	227d      	movs	r2, #125	@ 0x7d
 800a8fa:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a8fe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a902:	9903      	ldr	r1, [sp, #12]
 800a904:	54ca      	strb	r2, [r1, r3]
 800a906:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a90a:	3301      	adds	r3, #1
 800a90c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a910:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a914:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a916:	601a      	str	r2, [r3, #0]
 800a918:	b007      	add	sp, #28
 800a91a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a91e:	4b04      	ldr	r3, [pc, #16]	@ (800a930 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a920:	4a07      	ldr	r2, [pc, #28]	@ (800a940 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x130>)
 800a922:	9500      	str	r5, [sp, #0]
 800a924:	e7d7      	b.n	800a8d6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a926:	bf00      	nop
 800a928:	08018782 	stmdaeq	r1, {r1, r7, r8, r9, sl, pc}
 800a92c:	080181b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, pc}
 800a930:	08018734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, pc}
 800a934:	0801775a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800a938:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 800a93c:	0801774f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp, lr}
 800a940:	0801775b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800a944:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800a948:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

0800a94c <RemoteConfigParams::Set(RemoteConfig*)>:
 800a94c:	b538      	push	{r3, r4, r5, lr}
 800a94e:	460c      	mov	r4, r1
 800a950:	6801      	ldr	r1, [r0, #0]
 800a952:	4605      	mov	r5, r0
 800a954:	f001 0101 	and.w	r1, r1, #1
 800a958:	4620      	mov	r0, r4
 800a95a:	f7ff fc99 	bl	800a290 <RemoteConfig::SetDisable(bool)>
 800a95e:	682b      	ldr	r3, [r5, #0]
 800a960:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a964:	7362      	strb	r2, [r4, #13]
 800a966:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a96a:	73a2      	strb	r2, [r4, #14]
 800a96c:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a970:	73e2      	strb	r2, [r4, #15]
 800a972:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a976:	06db      	lsls	r3, r3, #27
 800a978:	7422      	strb	r2, [r4, #16]
 800a97a:	d506      	bpl.n	800a98a <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a97c:	f105 0108 	add.w	r1, r5, #8
 800a980:	4620      	mov	r0, r4
 800a982:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a986:	f7ff bcad 	b.w	800a2e4 <RemoteConfig::SetDisplayName(char const*)>
 800a98a:	bd38      	pop	{r3, r4, r5, pc}

0800a98c <Display::TextStatus(char const*)>:
 800a98c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a990:	4604      	mov	r4, r0
 800a992:	6980      	ldr	r0, [r0, #24]
 800a994:	460d      	mov	r5, r1
 800a996:	b368      	cbz	r0, 800a9f4 <Display::TextStatus(char const*)+0x68>
 800a998:	e9d0 8701 	ldrd	r8, r7, [r0, #4]
 800a99c:	6803      	ldr	r3, [r0, #0]
 800a99e:	f107 39ff 	add.w	r9, r7, #4294967295	@ 0xffffffff
 800a9a2:	6a1b      	ldr	r3, [r3, #32]
 800a9a4:	464a      	mov	r2, r9
 800a9a6:	2100      	movs	r1, #0
 800a9a8:	4798      	blx	r3
 800a9aa:	2600      	movs	r6, #0
 800a9ac:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800a9b0:	45b0      	cmp	r8, r6
 800a9b2:	69a0      	ldr	r0, [r4, #24]
 800a9b4:	d817      	bhi.n	800a9e6 <Display::TextStatus(char const*)+0x5a>
 800a9b6:	b120      	cbz	r0, 800a9c2 <Display::TextStatus(char const*)+0x36>
 800a9b8:	6803      	ldr	r3, [r0, #0]
 800a9ba:	464a      	mov	r2, r9
 800a9bc:	6a1b      	ldr	r3, [r3, #32]
 800a9be:	2100      	movs	r1, #0
 800a9c0:	4798      	blx	r3
 800a9c2:	69a0      	ldr	r0, [r4, #24]
 800a9c4:	b1b0      	cbz	r0, 800a9f4 <Display::TextStatus(char const*)+0x68>
 800a9c6:	6841      	ldr	r1, [r0, #4]
 800a9c8:	2300      	movs	r3, #0
 800a9ca:	5cea      	ldrb	r2, [r5, r3]
 800a9cc:	b11a      	cbz	r2, 800a9d6 <Display::TextStatus(char const*)+0x4a>
 800a9ce:	1c5a      	adds	r2, r3, #1
 800a9d0:	4299      	cmp	r1, r3
 800a9d2:	4613      	mov	r3, r2
 800a9d4:	d8f9      	bhi.n	800a9ca <Display::TextStatus(char const*)+0x3e>
 800a9d6:	6802      	ldr	r2, [r0, #0]
 800a9d8:	69d4      	ldr	r4, [r2, #28]
 800a9da:	4639      	mov	r1, r7
 800a9dc:	462a      	mov	r2, r5
 800a9de:	46a4      	mov	ip, r4
 800a9e0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a9e4:	4760      	bx	ip
 800a9e6:	b118      	cbz	r0, 800a9f0 <Display::TextStatus(char const*)+0x64>
 800a9e8:	6803      	ldr	r3, [r0, #0]
 800a9ea:	2120      	movs	r1, #32
 800a9ec:	695b      	ldr	r3, [r3, #20]
 800a9ee:	4798      	blx	r3
 800a9f0:	3601      	adds	r6, #1
 800a9f2:	e7dd      	b.n	800a9b0 <Display::TextStatus(char const*)+0x24>
 800a9f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a9f8 <RemoteConfig::HandleReboot()>:
 800a9f8:	b538      	push	{r3, r4, r5, lr}
 800a9fa:	7b83      	ldrb	r3, [r0, #14]
 800a9fc:	b30b      	cbz	r3, 800aa42 <RemoteConfig::HandleReboot()+0x4a>
 800a9fe:	4c11      	ldr	r4, [pc, #68]	@ (800aa44 <RemoteConfig::HandleReboot()+0x4c>)
 800aa00:	6825      	ldr	r5, [r4, #0]
 800aa02:	2301      	movs	r3, #1
 800aa04:	7443      	strb	r3, [r0, #17]
 800aa06:	69a8      	ldr	r0, [r5, #24]
 800aa08:	b138      	cbz	r0, 800aa1a <RemoteConfig::HandleReboot()+0x22>
 800aa0a:	6803      	ldr	r3, [r0, #0]
 800aa0c:	2100      	movs	r1, #0
 800aa0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aa10:	7569      	strb	r1, [r5, #21]
 800aa12:	4798      	blx	r3
 800aa14:	4b0c      	ldr	r3, [pc, #48]	@ (800aa48 <RemoteConfig::HandleReboot()+0x50>)
 800aa16:	681b      	ldr	r3, [r3, #0]
 800aa18:	606b      	str	r3, [r5, #4]
 800aa1a:	4d0c      	ldr	r5, [pc, #48]	@ (800aa4c <RemoteConfig::HandleReboot()+0x54>)
 800aa1c:	6828      	ldr	r0, [r5, #0]
 800aa1e:	f008 fd31 	bl	8013484 <ConfigStore::Flash()>
 800aa22:	2800      	cmp	r0, #0
 800aa24:	d1fa      	bne.n	800aa1c <RemoteConfig::HandleReboot()+0x24>
 800aa26:	6823      	ldr	r3, [r4, #0]
 800aa28:	6998      	ldr	r0, [r3, #24]
 800aa2a:	b110      	cbz	r0, 800aa32 <RemoteConfig::HandleReboot()+0x3a>
 800aa2c:	6803      	ldr	r3, [r0, #0]
 800aa2e:	68db      	ldr	r3, [r3, #12]
 800aa30:	4798      	blx	r3
 800aa32:	6820      	ldr	r0, [r4, #0]
 800aa34:	4906      	ldr	r1, [pc, #24]	@ (800aa50 <RemoteConfig::HandleReboot()+0x58>)
 800aa36:	f7ff ffa9 	bl	800a98c <Display::TextStatus(char const*)>
 800aa3a:	4b06      	ldr	r3, [pc, #24]	@ (800aa54 <RemoteConfig::HandleReboot()+0x5c>)
 800aa3c:	6818      	ldr	r0, [r3, #0]
 800aa3e:	f009 fef7 	bl	8014830 <Hardware::Reboot()>
 800aa42:	bd38      	pop	{r3, r4, r5, pc}
 800aa44:	20009c14 	andcs	r9, r0, r4, lsl ip
 800aa48:	200145c8 	andcs	r4, r1, r8, asr #11
 800aa4c:	20009bfc 	strdcs	r9, [r0], -ip
 800aa50:	08017762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip, sp, lr}
 800aa54:	20009d00 	andcs	r9, r0, r0, lsl #26

0800aa58 <RemoteConfig::GetIndex(void const*, unsigned long&)>:
 800aa58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800aa5c:	f8d2 c000 	ldr.w	ip, [r2]
 800aa60:	4e12      	ldr	r6, [pc, #72]	@ (800aaac <RemoteConfig::GetIndex(void const*, unsigned long&)+0x54>)
 800aa62:	2000      	movs	r0, #0
 800aa64:	f10d 0e04 	add.w	lr, sp, #4
 800aa68:	7d33      	ldrb	r3, [r6, #20]
 800aa6a:	9301      	str	r3, [sp, #4]
 800aa6c:	4563      	cmp	r3, ip
 800aa6e:	bf2c      	ite	cs
 800aa70:	4614      	movcs	r4, r2
 800aa72:	4674      	movcc	r4, lr
 800aa74:	6935      	ldr	r5, [r6, #16]
 800aa76:	6827      	ldr	r7, [r4, #0]
 800aa78:	3d01      	subs	r5, #1
 800aa7a:	440f      	add	r7, r1
 800aa7c:	460c      	mov	r4, r1
 800aa7e:	42bc      	cmp	r4, r7
 800aa80:	d101      	bne.n	800aa86 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x2e>
 800aa82:	6013      	str	r3, [r2, #0]
 800aa84:	e00c      	b.n	800aaa0 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x48>
 800aa86:	f894 9000 	ldrb.w	r9, [r4]
 800aa8a:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800aa8e:	45c1      	cmp	r9, r8
 800aa90:	d009      	beq.n	800aaa6 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x4e>
 800aa92:	3001      	adds	r0, #1
 800aa94:	2805      	cmp	r0, #5
 800aa96:	f106 0618 	add.w	r6, r6, #24
 800aa9a:	d1e5      	bne.n	800aa68 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
 800aa9c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800aaa0:	b003      	add	sp, #12
 800aaa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aaa6:	3401      	adds	r4, #1
 800aaa8:	e7e9      	b.n	800aa7e <RemoteConfig::GetIndex(void const*, unsigned long&)+0x26>
 800aaaa:	bf00      	nop
 800aaac:	080181e0 	stmdaeq	r1, {r5, r6, r7, r8, pc}

0800aab0 <RemoteConfig::PlatformHandleTftpSet()>:
 800aab0:	f890 1020 	ldrb.w	r1, [r0, #32]
 800aab4:	b510      	push	{r4, lr}
 800aab6:	4c0d      	ldr	r4, [pc, #52]	@ (800aaec <RemoteConfig::PlatformHandleTftpSet()+0x3c>)
 800aab8:	b171      	cbz	r1, 800aad8 <RemoteConfig::PlatformHandleTftpSet()+0x28>
 800aaba:	f24a 51a5 	movw	r1, #42405	@ 0xa5a5
 800aabe:	2001      	movs	r0, #1
 800aac0:	f00a ff1a 	bl	80158f8 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800aac4:	490a      	ldr	r1, [pc, #40]	@ (800aaf0 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800aac6:	6820      	ldr	r0, [r4, #0]
 800aac8:	f7ff ff60 	bl	800a98c <Display::TextStatus(char const*)>
 800aacc:	4908      	ldr	r1, [pc, #32]	@ (800aaf0 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800aace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aad2:	2002      	movs	r0, #2
 800aad4:	f009 bf0c 	b.w	80148f0 <console_status>
 800aad8:	2001      	movs	r0, #1
 800aada:	f00a ff0d 	bl	80158f8 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800aade:	4905      	ldr	r1, [pc, #20]	@ (800aaf4 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800aae0:	6820      	ldr	r0, [r4, #0]
 800aae2:	f7ff ff53 	bl	800a98c <Display::TextStatus(char const*)>
 800aae6:	4903      	ldr	r1, [pc, #12]	@ (800aaf4 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800aae8:	e7f1      	b.n	800aace <RemoteConfig::PlatformHandleTftpSet()+0x1e>
 800aaea:	bf00      	nop
 800aaec:	20009c14 	andcs	r9, r0, r4, lsl ip
 800aaf0:	080177a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, ip, sp, lr}
 800aaf4:	080177b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, ip, sp, lr}

0800aaf8 <RemoteConfig::PlatformHandleTftpGet()>:
 800aaf8:	b510      	push	{r4, lr}
 800aafa:	4604      	mov	r4, r0
 800aafc:	2001      	movs	r0, #1
 800aafe:	f00a ff09 	bl	8015914 <bkp_data_read(bkp_data_register_enum)>
 800ab02:	f24a 53a5 	movw	r3, #42405	@ 0xa5a5
 800ab06:	1ac3      	subs	r3, r0, r3
 800ab08:	4258      	negs	r0, r3
 800ab0a:	4158      	adcs	r0, r3
 800ab0c:	f884 0020 	strb.w	r0, [r4, #32]
 800ab10:	bd10      	pop	{r4, pc}
	...

0800ab14 <HttpDaemon::HttpDaemon()>:
 800ab14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab16:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800ab1a:	2500      	movs	r5, #0
 800ab1c:	e9c0 3506 	strd	r3, r5, [r0, #24]
 800ab20:	4606      	mov	r6, r0
 800ab22:	2050      	movs	r0, #80	@ 0x50
 800ab24:	f006 ff50 	bl	80119c8 <net::tcp_begin(unsigned short)>
 800ab28:	462c      	mov	r4, r5
 800ab2a:	61b0      	str	r0, [r6, #24]
 800ab2c:	f44f 7702 	mov.w	r7, #520	@ 0x208
 800ab30:	2038      	movs	r0, #56	@ 0x38
 800ab32:	f00c fb5b 	bl	80171ec <operator new(unsigned int)>
 800ab36:	69b3      	ldr	r3, [r6, #24]
 800ab38:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 800ab3c:	e9c0 5300 	strd	r5, r3, [r0]
 800ab40:	3501      	adds	r5, #1
 800ab42:	2203      	movs	r2, #3
 800ab44:	2305      	movs	r3, #5
 800ab46:	2d06      	cmp	r5, #6
 800ab48:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800ab4c:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800ab50:	e9c0 4406 	strd	r4, r4, [r0, #24]
 800ab54:	e9c0 4408 	strd	r4, r4, [r0, #32]
 800ab58:	e9c0 230b 	strd	r2, r3, [r0, #44]	@ 0x2c
 800ab5c:	6287      	str	r7, [r0, #40]	@ 0x28
 800ab5e:	f880 4034 	strb.w	r4, [r0, #52]	@ 0x34
 800ab62:	d1e5      	bne.n	800ab30 <HttpDaemon::HttpDaemon()+0x1c>
 800ab64:	4805      	ldr	r0, [pc, #20]	@ (800ab7c <HttpDaemon::HttpDaemon()+0x68>)
 800ab66:	9400      	str	r4, [sp, #0]
 800ab68:	2300      	movs	r3, #0
 800ab6a:	2202      	movs	r2, #2
 800ab6c:	4619      	mov	r1, r3
 800ab6e:	6800      	ldr	r0, [r0, #0]
 800ab70:	f005 fbb2 	bl	80102d8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800ab74:	4630      	mov	r0, r6
 800ab76:	b003      	add	sp, #12
 800ab78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab7a:	bf00      	nop
 800ab7c:	200098ec 	andcs	r9, r0, ip, ror #17

0800ab80 <DisplaySet::SetSleep(bool)>:
 800ab80:	4770      	bx	lr
 800ab82:	bf00      	nop

0800ab84 <HttpDeamonHandleRequest::ParseMethod(char*)>:
 800ab84:	460b      	mov	r3, r1
 800ab86:	b510      	push	{r4, lr}
 800ab88:	4929      	ldr	r1, [pc, #164]	@ (800ac30 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800ab8a:	4604      	mov	r4, r0
 800ab8c:	4618      	mov	r0, r3
 800ab8e:	f00c f98d 	bl	8016eac <strtok>
 800ab92:	2800      	cmp	r0, #0
 800ab94:	d039      	beq.n	800ac0a <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ab96:	7803      	ldrb	r3, [r0, #0]
 800ab98:	2b47      	cmp	r3, #71	@ 0x47
 800ab9a:	d139      	bne.n	800ac10 <HttpDeamonHandleRequest::ParseMethod(char*)+0x8c>
 800ab9c:	4a25      	ldr	r2, [pc, #148]	@ (800ac34 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb0>)
 800ab9e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800aba2:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800aba6:	428b      	cmp	r3, r1
 800aba8:	d12f      	bne.n	800ac0a <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800abaa:	2b00      	cmp	r3, #0
 800abac:	d1f7      	bne.n	800ab9e <HttpDeamonHandleRequest::ParseMethod(char*)+0x1a>
 800abae:	4920      	ldr	r1, [pc, #128]	@ (800ac30 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800abb0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800abb2:	2000      	movs	r0, #0
 800abb4:	f00c f97a 	bl	8016eac <strtok>
 800abb8:	b320      	cbz	r0, 800ac04 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800abba:	61a0      	str	r0, [r4, #24]
 800abbc:	491e      	ldr	r1, [pc, #120]	@ (800ac38 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb4>)
 800abbe:	2000      	movs	r0, #0
 800abc0:	f00c f974 	bl	8016eac <strtok>
 800abc4:	4603      	mov	r3, r0
 800abc6:	b1e8      	cbz	r0, 800ac04 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800abc8:	7802      	ldrb	r2, [r0, #0]
 800abca:	2a48      	cmp	r2, #72	@ 0x48
 800abcc:	d11a      	bne.n	800ac04 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800abce:	4a1b      	ldr	r2, [pc, #108]	@ (800ac3c <HttpDeamonHandleRequest::ParseMethod(char*)+0xb8>)
 800abd0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800abd4:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800abd8:	4288      	cmp	r0, r1
 800abda:	d113      	bne.n	800ac04 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800abdc:	2800      	cmp	r0, #0
 800abde:	d1f7      	bne.n	800abd0 <HttpDeamonHandleRequest::ParseMethod(char*)+0x4c>
 800abe0:	4917      	ldr	r1, [pc, #92]	@ (800ac40 <HttpDeamonHandleRequest::ParseMethod(char*)+0xbc>)
 800abe2:	f00c f963 	bl	8016eac <strtok>
 800abe6:	b168      	cbz	r0, 800ac04 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800abe8:	7803      	ldrb	r3, [r0, #0]
 800abea:	2b31      	cmp	r3, #49	@ 0x31
 800abec:	d11d      	bne.n	800ac2a <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800abee:	4a15      	ldr	r2, [pc, #84]	@ (800ac44 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc0>)
 800abf0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800abf4:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800abf8:	428b      	cmp	r3, r1
 800abfa:	d116      	bne.n	800ac2a <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800abfc:	2b00      	cmp	r3, #0
 800abfe:	d1f7      	bne.n	800abf0 <HttpDeamonHandleRequest::ParseMethod(char*)+0x6c>
 800ac00:	20c8      	movs	r0, #200	@ 0xc8
 800ac02:	bd10      	pop	{r4, pc}
 800ac04:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ac08:	bd10      	pop	{r4, pc}
 800ac0a:	f240 10f5 	movw	r0, #501	@ 0x1f5
 800ac0e:	bd10      	pop	{r4, pc}
 800ac10:	2b50      	cmp	r3, #80	@ 0x50
 800ac12:	d1fa      	bne.n	800ac0a <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ac14:	4a0c      	ldr	r2, [pc, #48]	@ (800ac48 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc4>)
 800ac16:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ac1a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ac1e:	428b      	cmp	r3, r1
 800ac20:	d1f3      	bne.n	800ac0a <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	d1f7      	bne.n	800ac16 <HttpDeamonHandleRequest::ParseMethod(char*)+0x92>
 800ac26:	2301      	movs	r3, #1
 800ac28:	e7c1      	b.n	800abae <HttpDeamonHandleRequest::ParseMethod(char*)+0x2a>
 800ac2a:	f240 10f9 	movw	r0, #505	@ 0x1f9
 800ac2e:	bd10      	pop	{r4, pc}
 800ac30:	08018258 	stmdaeq	r1, {r3, r4, r6, r9, pc}
 800ac34:	0801825c 	stmdaeq	r1, {r2, r3, r4, r6, r9, pc}
 800ac38:	08018268 	stmdaeq	r1, {r3, r5, r6, r9, pc}
 800ac3c:	0801826c 	stmdaeq	r1, {r2, r3, r5, r6, r9, pc}
 800ac40:	08018274 	stmdaeq	r1, {r2, r4, r5, r6, r9, pc}
 800ac44:	08018278 	stmdaeq	r1, {r3, r4, r5, r6, r9, pc}
 800ac48:	08018260 	stmdaeq	r1, {r5, r6, r9, pc}

0800ac4c <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
 800ac4c:	b538      	push	{r3, r4, r5, lr}
 800ac4e:	460b      	mov	r3, r1
 800ac50:	4605      	mov	r5, r0
 800ac52:	493f      	ldr	r1, [pc, #252]	@ (800ad50 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>)
 800ac54:	4618      	mov	r0, r3
 800ac56:	f00c f929 	bl	8016eac <strtok>
 800ac5a:	b370      	cbz	r0, 800acba <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ac5c:	1e41      	subs	r1, r0, #1
 800ac5e:	4c3d      	ldr	r4, [pc, #244]	@ (800ad54 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x108>)
 800ac60:	468c      	mov	ip, r1
 800ac62:	e000      	b.n	800ac66 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a>
 800ac64:	b360      	cbz	r0, 800acc0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x74>
 800ac66:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 800ac6a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800ac6e:	2b19      	cmp	r3, #25
 800ac70:	f814 3b01 	ldrb.w	r3, [r4], #1
 800ac74:	f1a3 0e41 	sub.w	lr, r3, #65	@ 0x41
 800ac78:	4602      	mov	r2, r0
 800ac7a:	bf98      	it	ls
 800ac7c:	f100 0220 	addls.w	r2, r0, #32
 800ac80:	f1be 0f19 	cmp.w	lr, #25
 800ac84:	bf98      	it	ls
 800ac86:	3320      	addls	r3, #32
 800ac88:	4293      	cmp	r3, r2
 800ac8a:	d0eb      	beq.n	800ac64 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18>
 800ac8c:	4832      	ldr	r0, [pc, #200]	@ (800ad58 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>)
 800ac8e:	e000      	b.n	800ac92 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x46>
 800ac90:	b34c      	cbz	r4, 800ace6 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x9a>
 800ac92:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ac96:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
 800ac9a:	2b19      	cmp	r3, #25
 800ac9c:	f810 3b01 	ldrb.w	r3, [r0], #1
 800aca0:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800aca4:	4622      	mov	r2, r4
 800aca6:	bf98      	it	ls
 800aca8:	f104 0220 	addls.w	r2, r4, #32
 800acac:	f1bc 0f19 	cmp.w	ip, #25
 800acb0:	bf98      	it	ls
 800acb2:	3320      	addls	r3, #32
 800acb4:	4293      	cmp	r3, r2
 800acb6:	d0eb      	beq.n	800ac90 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x44>
 800acb8:	e03a      	b.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800acba:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800acbe:	bd38      	pop	{r3, r4, r5, pc}
 800acc0:	4926      	ldr	r1, [pc, #152]	@ (800ad5c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x110>)
 800acc2:	f00c f8f3 	bl	8016eac <strtok>
 800acc6:	2800      	cmp	r0, #0
 800acc8:	d0f7      	beq.n	800acba <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800acca:	4a25      	ldr	r2, [pc, #148]	@ (800ad60 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x114>)
 800accc:	1e43      	subs	r3, r0, #1
 800acce:	f100 0c0b 	add.w	ip, r0, #11
 800acd2:	e001      	b.n	800acd8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
 800acd4:	459c      	cmp	ip, r3
 800acd6:	d019      	beq.n	800ad0c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xc0>
 800acd8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800acdc:	f812 4b01 	ldrb.w	r4, [r2], #1
 800ace0:	428c      	cmp	r4, r1
 800ace2:	d0f7      	beq.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x88>
 800ace4:	e024      	b.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ace6:	491f      	ldr	r1, [pc, #124]	@ (800ad64 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x118>)
 800ace8:	4620      	mov	r0, r4
 800acea:	f00c f8df 	bl	8016eac <strtok>
 800acee:	2800      	cmp	r0, #0
 800acf0:	d0e3      	beq.n	800acba <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800acf2:	7803      	ldrb	r3, [r0, #0]
 800acf4:	b1db      	cbz	r3, 800ad2e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe2>
 800acf6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 800acfa:	2a09      	cmp	r2, #9
 800acfc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800ad00:	d8db      	bhi.n	800acba <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ad02:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ad06:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ad0a:	e7f3      	b.n	800acf4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xa8>
 800ad0c:	7b02      	ldrb	r2, [r0, #12]
 800ad0e:	2a6a      	cmp	r2, #106	@ 0x6a
 800ad10:	f100 030c 	add.w	r3, r0, #12
 800ad14:	d10e      	bne.n	800ad34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
 800ad16:	4914      	ldr	r1, [pc, #80]	@ (800ad68 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x11c>)
 800ad18:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ad1c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ad20:	4282      	cmp	r2, r0
 800ad22:	d105      	bne.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ad24:	2a00      	cmp	r2, #0
 800ad26:	d1f7      	bne.n	800ad18 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xcc>
 800ad28:	2303      	movs	r3, #3
 800ad2a:	632b      	str	r3, [r5, #48]	@ 0x30
 800ad2c:	e000      	b.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ad2e:	612c      	str	r4, [r5, #16]
 800ad30:	20c8      	movs	r0, #200	@ 0xc8
 800ad32:	bd38      	pop	{r3, r4, r5, pc}
 800ad34:	2a6f      	cmp	r2, #111	@ 0x6f
 800ad36:	d1fb      	bne.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ad38:	490c      	ldr	r1, [pc, #48]	@ (800ad6c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x120>)
 800ad3a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ad3e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ad42:	4282      	cmp	r2, r0
 800ad44:	d1f4      	bne.n	800ad30 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ad46:	2a00      	cmp	r2, #0
 800ad48:	d1f7      	bne.n	800ad3a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xee>
 800ad4a:	2304      	movs	r3, #4
 800ad4c:	e7ed      	b.n	800ad2a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xde>
 800ad4e:	bf00      	nop
 800ad50:	0801827c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, pc}
 800ad54:	08018280 	stmdaeq	r1, {r7, r9, pc}
 800ad58:	08018290 	stmdaeq	r1, {r4, r7, r9, pc}
 800ad5c:	080182c8 	stmdaeq	r1, {r3, r6, r7, r9, pc}
 800ad60:	080182a0 	stmdaeq	r1, {r5, r7, r9, pc}
 800ad64:	08018258 	stmdaeq	r1, {r3, r4, r6, r9, pc}
 800ad68:	080182b0 	stmdaeq	r1, {r4, r5, r7, r9, pc}
 800ad6c:	080182b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, pc}

0800ad70 <HttpDeamonHandleRequest::ParseRequest()>:
 800ad70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad72:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ad74:	4605      	mov	r5, r0
 800ad76:	6940      	ldr	r0, [r0, #20]
 800ad78:	2400      	movs	r4, #0
 800ad7a:	2205      	movs	r2, #5
 800ad7c:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800ad80:	632a      	str	r2, [r5, #48]	@ 0x30
 800ad82:	b300      	cbz	r0, 800adc6 <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ad84:	4619      	mov	r1, r3
 800ad86:	46a4      	mov	ip, r4
 800ad88:	4626      	mov	r6, r4
 800ad8a:	e002      	b.n	800ad92 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800ad8c:	3401      	adds	r4, #1
 800ad8e:	42a0      	cmp	r0, r4
 800ad90:	d919      	bls.n	800adc6 <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ad92:	5d1a      	ldrb	r2, [r3, r4]
 800ad94:	2a0a      	cmp	r2, #10
 800ad96:	d1f9      	bne.n	800ad8c <HttpDeamonHandleRequest::ParseRequest()+0x1c>
 800ad98:	4423      	add	r3, r4
 800ad9a:	f10c 0701 	add.w	r7, ip, #1
 800ad9e:	f803 6c01 	strb.w	r6, [r3, #-1]
 800ada2:	f1bc 0f00 	cmp.w	ip, #0
 800ada6:	d010      	beq.n	800adca <HttpDeamonHandleRequest::ParseRequest()+0x5a>
 800ada8:	780b      	ldrb	r3, [r1, #0]
 800adaa:	b193      	cbz	r3, 800add2 <HttpDeamonHandleRequest::ParseRequest()+0x62>
 800adac:	4628      	mov	r0, r5
 800adae:	f7ff ff4d 	bl	800ac4c <HttpDeamonHandleRequest::ParseHeaderField(char*)>
 800adb2:	28c8      	cmp	r0, #200	@ 0xc8
 800adb4:	d108      	bne.n	800adc8 <HttpDeamonHandleRequest::ParseRequest()+0x58>
 800adb6:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800adb8:	6968      	ldr	r0, [r5, #20]
 800adba:	3401      	adds	r4, #1
 800adbc:	1919      	adds	r1, r3, r4
 800adbe:	3401      	adds	r4, #1
 800adc0:	42a0      	cmp	r0, r4
 800adc2:	46bc      	mov	ip, r7
 800adc4:	d8e5      	bhi.n	800ad92 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800adc6:	20c8      	movs	r0, #200	@ 0xc8
 800adc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800adca:	4628      	mov	r0, r5
 800adcc:	f7ff feda 	bl	800ab84 <HttpDeamonHandleRequest::ParseMethod(char*)>
 800add0:	e7ef      	b.n	800adb2 <HttpDeamonHandleRequest::ParseRequest()+0x42>
 800add2:	696a      	ldr	r2, [r5, #20]
 800add4:	3a01      	subs	r2, #1
 800add6:	1b12      	subs	r2, r2, r4
 800add8:	b292      	uxth	r2, r2
 800adda:	60ea      	str	r2, [r5, #12]
 800addc:	2a00      	cmp	r2, #0
 800adde:	d0f2      	beq.n	800adc6 <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ade0:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800ade2:	3401      	adds	r4, #1
 800ade4:	4421      	add	r1, r4
 800ade6:	61e9      	str	r1, [r5, #28]
 800ade8:	548b      	strb	r3, [r1, r2]
 800adea:	e7ec      	b.n	800adc6 <HttpDeamonHandleRequest::ParseRequest()+0x56>

0800adec <HttpDeamonHandleRequest::HandleGetTxt()>:
 800adec:	b570      	push	{r4, r5, r6, lr}
 800adee:	4605      	mov	r5, r0
 800adf0:	6980      	ldr	r0, [r0, #24]
 800adf2:	7983      	ldrb	r3, [r0, #6]
 800adf4:	2b00      	cmp	r3, #0
 800adf6:	d039      	beq.n	800ae6c <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800adf8:	1d84      	adds	r4, r0, #6
 800adfa:	4623      	mov	r3, r4
 800adfc:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ae00:	2a00      	cmp	r2, #0
 800ae02:	d1fb      	bne.n	800adfc <HttpDeamonHandleRequest::HandleGetTxt()+0x10>
 800ae04:	1b1a      	subs	r2, r3, r4
 800ae06:	2a04      	cmp	r2, #4
 800ae08:	d930      	bls.n	800ae6c <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ae0a:	1f13      	subs	r3, r2, #4
 800ae0c:	18e1      	adds	r1, r4, r3
 800ae0e:	5ce3      	ldrb	r3, [r4, r3]
 800ae10:	2b2e      	cmp	r3, #46	@ 0x2e
 800ae12:	d12b      	bne.n	800ae6c <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ae14:	4c18      	ldr	r4, [pc, #96]	@ (800ae78 <HttpDeamonHandleRequest::HandleGetTxt()+0x8c>)
 800ae16:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ae1a:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800ae1e:	4563      	cmp	r3, ip
 800ae20:	d124      	bne.n	800ae6c <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ae22:	2b00      	cmp	r3, #0
 800ae24:	d1f7      	bne.n	800ae16 <HttpDeamonHandleRequest::HandleGetTxt()+0x2a>
 800ae26:	4c15      	ldr	r4, [pc, #84]	@ (800ae7c <HttpDeamonHandleRequest::HandleGetTxt()+0x90>)
 800ae28:	7821      	ldrb	r1, [r4, #0]
 800ae2a:	f041 0601 	orr.w	r6, r1, #1
 800ae2e:	1d43      	adds	r3, r0, #5
 800ae30:	7026      	strb	r6, [r4, #0]
 800ae32:	4813      	ldr	r0, [pc, #76]	@ (800ae80 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800ae34:	f001 0601 	and.w	r6, r1, #1
 800ae38:	e003      	b.n	800ae42 <HttpDeamonHandleRequest::HandleGetTxt()+0x56>
 800ae3a:	3a01      	subs	r2, #1
 800ae3c:	f800 1b01 	strb.w	r1, [r0], #1
 800ae40:	d005      	beq.n	800ae4e <HttpDeamonHandleRequest::HandleGetTxt()+0x62>
 800ae42:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ae46:	2900      	cmp	r1, #0
 800ae48:	d1f7      	bne.n	800ae3a <HttpDeamonHandleRequest::HandleGetTxt()+0x4e>
 800ae4a:	f00b fcdd 	bl	8016808 <memset>
 800ae4e:	4b0d      	ldr	r3, [pc, #52]	@ (800ae84 <HttpDeamonHandleRequest::HandleGetTxt()+0x98>)
 800ae50:	490b      	ldr	r1, [pc, #44]	@ (800ae80 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800ae52:	6818      	ldr	r0, [r3, #0]
 800ae54:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800ae58:	f7ff fa5c 	bl	800a314 <RemoteConfig::HandleGet(void*, unsigned long)>
 800ae5c:	7823      	ldrb	r3, [r4, #0]
 800ae5e:	60a8      	str	r0, [r5, #8]
 800ae60:	b93e      	cbnz	r6, 800ae72 <HttpDeamonHandleRequest::HandleGetTxt()+0x86>
 800ae62:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800ae66:	7023      	strb	r3, [r4, #0]
 800ae68:	20c8      	movs	r0, #200	@ 0xc8
 800ae6a:	bd70      	pop	{r4, r5, r6, pc}
 800ae6c:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ae70:	bd70      	pop	{r4, r5, r6, pc}
 800ae72:	f043 0301 	orr.w	r3, r3, #1
 800ae76:	e7f6      	b.n	800ae66 <HttpDeamonHandleRequest::HandleGetTxt()+0x7a>
 800ae78:	080182cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, pc}
 800ae7c:	20009c11 	andcs	r9, r0, r1, lsl ip
 800ae80:	200000a8 	andcs	r0, r0, r8, lsr #1
 800ae84:	200000a4 	andcs	r0, r0, r4, lsr #1

0800ae88 <HttpDeamonHandleRequest::HandleGet()>:
 800ae88:	b510      	push	{r4, lr}
 800ae8a:	4604      	mov	r4, r0
 800ae8c:	b082      	sub	sp, #8
 800ae8e:	6980      	ldr	r0, [r0, #24]
 800ae90:	4b68      	ldr	r3, [pc, #416]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800ae92:	6223      	str	r3, [r4, #32]
 800ae94:	2100      	movs	r1, #0
 800ae96:	4a68      	ldr	r2, [pc, #416]	@ (800b038 <HttpDeamonHandleRequest::HandleGet()+0x1b0>)
 800ae98:	9101      	str	r1, [sp, #4]
 800ae9a:	1e43      	subs	r3, r0, #1
 800ae9c:	f100 0e05 	add.w	lr, r0, #5
 800aea0:	e001      	b.n	800aea6 <HttpDeamonHandleRequest::HandleGet()+0x1e>
 800aea2:	459e      	cmp	lr, r3
 800aea4:	d01f      	beq.n	800aee6 <HttpDeamonHandleRequest::HandleGet()+0x5e>
 800aea6:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800aeaa:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aeae:	458c      	cmp	ip, r1
 800aeb0:	d0f7      	beq.n	800aea2 <HttpDeamonHandleRequest::HandleGet()+0x1a>
 800aeb2:	7803      	ldrb	r3, [r0, #0]
 800aeb4:	2b2f      	cmp	r3, #47	@ 0x2f
 800aeb6:	d167      	bne.n	800af88 <HttpDeamonHandleRequest::HandleGet()+0x100>
 800aeb8:	4a60      	ldr	r2, [pc, #384]	@ (800b03c <HttpDeamonHandleRequest::HandleGet()+0x1b4>)
 800aeba:	4601      	mov	r1, r0
 800aebc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800aec0:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800aec4:	4563      	cmp	r3, ip
 800aec6:	d13c      	bne.n	800af42 <HttpDeamonHandleRequest::HandleGet()+0xba>
 800aec8:	2b00      	cmp	r3, #0
 800aeca:	d1f7      	bne.n	800aebc <HttpDeamonHandleRequest::HandleGet()+0x34>
 800aecc:	485c      	ldr	r0, [pc, #368]	@ (800b040 <HttpDeamonHandleRequest::HandleGet()+0x1b8>)
 800aece:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800aed2:	a901      	add	r1, sp, #4
 800aed4:	f000 fac6 	bl	800b464 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
 800aed8:	9b01      	ldr	r3, [sp, #4]
 800aeda:	6220      	str	r0, [r4, #32]
 800aedc:	b36b      	cbz	r3, 800af3a <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800aede:	60a3      	str	r3, [r4, #8]
 800aee0:	20c8      	movs	r0, #200	@ 0xc8
 800aee2:	b002      	add	sp, #8
 800aee4:	bd10      	pop	{r4, pc}
 800aee6:	2303      	movs	r3, #3
 800aee8:	6323      	str	r3, [r4, #48]	@ 0x30
 800aeea:	7982      	ldrb	r2, [r0, #6]
 800aeec:	1dc1      	adds	r1, r0, #7
 800aeee:	2a00      	cmp	r2, #0
 800aef0:	d03a      	beq.n	800af68 <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800aef2:	f241 5305 	movw	r3, #5381	@ 0x1505
 800aef6:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800aefa:	fa12 f383 	uxtah	r3, r2, r3
 800aefe:	f811 2b01 	ldrb.w	r2, [r1], #1
 800af02:	b29b      	uxth	r3, r3
 800af04:	2a00      	cmp	r2, #0
 800af06:	d1f6      	bne.n	800aef6 <HttpDeamonHandleRequest::HandleGet()+0x6e>
 800af08:	f244 729b 	movw	r2, #18331	@ 0x479b
 800af0c:	4293      	cmp	r3, r2
 800af0e:	d05a      	beq.n	800afc6 <HttpDeamonHandleRequest::HandleGet()+0x13e>
 800af10:	d83f      	bhi.n	800af92 <HttpDeamonHandleRequest::HandleGet()+0x10a>
 800af12:	f241 6261 	movw	r2, #5729	@ 0x1661
 800af16:	4293      	cmp	r3, r2
 800af18:	d01f      	beq.n	800af5a <HttpDeamonHandleRequest::HandleGet()+0xd2>
 800af1a:	f242 4272 	movw	r2, #9330	@ 0x2472
 800af1e:	4293      	cmp	r3, r2
 800af20:	d04a      	beq.n	800afb8 <HttpDeamonHandleRequest::HandleGet()+0x130>
 800af22:	f241 12fa 	movw	r2, #4602	@ 0x11fa
 800af26:	4293      	cmp	r3, r2
 800af28:	d11e      	bne.n	800af68 <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800af2a:	4842      	ldr	r0, [pc, #264]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800af2c:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800af30:	f000 fa92 	bl	800b458 <remoteconfig::json_get_directory(char*, unsigned long)>
 800af34:	4603      	mov	r3, r0
 800af36:	2b00      	cmp	r3, #0
 800af38:	d1d1      	bne.n	800aede <HttpDeamonHandleRequest::HandleGet()+0x56>
 800af3a:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800af3e:	b002      	add	sp, #8
 800af40:	bd10      	pop	{r4, pc}
 800af42:	4a40      	ldr	r2, [pc, #256]	@ (800b044 <HttpDeamonHandleRequest::HandleGet()+0x1bc>)
 800af44:	4601      	mov	r1, r0
 800af46:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800af4a:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800af4e:	4563      	cmp	r3, ip
 800af50:	d11a      	bne.n	800af88 <HttpDeamonHandleRequest::HandleGet()+0x100>
 800af52:	2b00      	cmp	r3, #0
 800af54:	d1f7      	bne.n	800af46 <HttpDeamonHandleRequest::HandleGet()+0xbe>
 800af56:	483c      	ldr	r0, [pc, #240]	@ (800b048 <HttpDeamonHandleRequest::HandleGet()+0x1c0>)
 800af58:	e7b9      	b.n	800aece <HttpDeamonHandleRequest::HandleGet()+0x46>
 800af5a:	4836      	ldr	r0, [pc, #216]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800af5c:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800af60:	f000 fa16 	bl	800b390 <remoteconfig::json_get_list(char*, unsigned long)>
 800af64:	4603      	mov	r3, r0
 800af66:	e7e6      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800af68:	4b38      	ldr	r3, [pc, #224]	@ (800b04c <HttpDeamonHandleRequest::HandleGet()+0x1c4>)
 800af6a:	f100 0c0b 	add.w	ip, r0, #11
 800af6e:	e001      	b.n	800af74 <HttpDeamonHandleRequest::HandleGet()+0xec>
 800af70:	45f4      	cmp	ip, lr
 800af72:	d039      	beq.n	800afe8 <HttpDeamonHandleRequest::HandleGet()+0x160>
 800af74:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 800af78:	f813 2b01 	ldrb.w	r2, [r3], #1
 800af7c:	4291      	cmp	r1, r2
 800af7e:	d0f7      	beq.n	800af70 <HttpDeamonHandleRequest::HandleGet()+0xe8>
 800af80:	4620      	mov	r0, r4
 800af82:	f7ff ff33 	bl	800adec <HttpDeamonHandleRequest::HandleGetTxt()>
 800af86:	e7ac      	b.n	800aee2 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800af88:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800af8c:	a901      	add	r1, sp, #4
 800af8e:	3001      	adds	r0, #1
 800af90:	e7a0      	b.n	800aed4 <HttpDeamonHandleRequest::HandleGet()+0x4c>
 800af92:	f646 424b 	movw	r2, #27723	@ 0x6c4b
 800af96:	4293      	cmp	r3, r2
 800af98:	d01c      	beq.n	800afd4 <HttpDeamonHandleRequest::HandleGet()+0x14c>
 800af9a:	f24b 72d9 	movw	r2, #47065	@ 0xb7d9
 800af9e:	4293      	cmp	r3, r2
 800afa0:	d1e2      	bne.n	800af68 <HttpDeamonHandleRequest::HandleGet()+0xe0>
 800afa2:	4b2b      	ldr	r3, [pc, #172]	@ (800b050 <HttpDeamonHandleRequest::HandleGet()+0x1c8>)
 800afa4:	681b      	ldr	r3, [r3, #0]
 800afa6:	7bdb      	ldrb	r3, [r3, #15]
 800afa8:	b1db      	cbz	r3, 800afe2 <HttpDeamonHandleRequest::HandleGet()+0x15a>
 800afaa:	4822      	ldr	r0, [pc, #136]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800afac:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afb0:	f000 fa3c 	bl	800b42c <remoteconfig::json_get_uptime(char*, unsigned long)>
 800afb4:	4603      	mov	r3, r0
 800afb6:	e7be      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800afb8:	481e      	ldr	r0, [pc, #120]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800afba:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afbe:	f009 fa53 	bl	8014468 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
 800afc2:	4603      	mov	r3, r0
 800afc4:	e7b7      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800afc6:	481b      	ldr	r0, [pc, #108]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800afc8:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afcc:	f000 fa38 	bl	800b440 <remoteconfig::json_get_display(char*, unsigned long)>
 800afd0:	4603      	mov	r3, r0
 800afd2:	e7b0      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800afd4:	4817      	ldr	r0, [pc, #92]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800afd6:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afda:	f000 fa0b 	bl	800b3f4 <remoteconfig::json_get_version(char*, unsigned long)>
 800afde:	4603      	mov	r3, r0
 800afe0:	e7a9      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800afe2:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800afe6:	e77c      	b.n	800aee2 <HttpDeamonHandleRequest::HandleGet()+0x5a>
 800afe8:	7b02      	ldrb	r2, [r0, #12]
 800afea:	f241 5305 	movw	r3, #5381	@ 0x1505
 800afee:	300d      	adds	r0, #13
 800aff0:	2a00      	cmp	r2, #0
 800aff2:	d0a2      	beq.n	800af3a <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800aff4:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800aff8:	fa12 f383 	uxtah	r3, r2, r3
 800affc:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b000:	b29b      	uxth	r3, r3
 800b002:	2a00      	cmp	r2, #0
 800b004:	d1f6      	bne.n	800aff4 <HttpDeamonHandleRequest::HandleGet()+0x16c>
 800b006:	f645 625a 	movw	r2, #24154	@ 0x5e5a
 800b00a:	4293      	cmp	r3, r2
 800b00c:	d00a      	beq.n	800b024 <HttpDeamonHandleRequest::HandleGet()+0x19c>
 800b00e:	f648 5249 	movw	r2, #36169	@ 0x8d49
 800b012:	4293      	cmp	r3, r2
 800b014:	d191      	bne.n	800af3a <HttpDeamonHandleRequest::HandleGet()+0xb2>
 800b016:	4807      	ldr	r0, [pc, #28]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b018:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b01c:	f003 f806 	bl	800e02c <remoteconfig::pixel::json_get_status(char*, unsigned long)>
 800b020:	4603      	mov	r3, r0
 800b022:	e788      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b024:	4803      	ldr	r0, [pc, #12]	@ (800b034 <HttpDeamonHandleRequest::HandleGet()+0x1ac>)
 800b026:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b02a:	f003 f86d 	bl	800e108 <remoteconfig::pixel::json_get_types(char*, unsigned long)>
 800b02e:	4603      	mov	r3, r0
 800b030:	e781      	b.n	800af36 <HttpDeamonHandleRequest::HandleGet()+0xae>
 800b032:	bf00      	nop
 800b034:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b038:	080182d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, pc}
 800b03c:	08018268 	stmdaeq	r1, {r3, r5, r6, r9, pc}
 800b040:	080182e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, pc}
 800b044:	080182f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, pc}
 800b048:	080182f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, pc}
 800b04c:	080182dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, pc}
 800b050:	200000a4 	andcs	r0, r0, r4, lsr #1

0800b054 <HttpDeamonHandleRequest::HandlePost(bool)>:
 800b054:	b570      	push	{r4, r5, r6, lr}
 800b056:	4604      	mov	r4, r0
 800b058:	b082      	sub	sp, #8
 800b05a:	b331      	cbz	r1, 800b0aa <HttpDeamonHandleRequest::HandlePost(bool)+0x56>
 800b05c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800b05e:	8aa1      	ldrh	r1, [r4, #20]
 800b060:	61e0      	str	r0, [r4, #28]
 800b062:	60e1      	str	r1, [r4, #12]
 800b064:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
 800b068:	2b00      	cmp	r3, #0
 800b06a:	d13c      	bne.n	800b0e6 <HttpDeamonHandleRequest::HandlePost(bool)+0x92>
 800b06c:	4d5e      	ldr	r5, [pc, #376]	@ (800b1e8 <HttpDeamonHandleRequest::HandlePost(bool)+0x194>)
 800b06e:	4b5f      	ldr	r3, [pc, #380]	@ (800b1ec <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800b070:	782e      	ldrb	r6, [r5, #0]
 800b072:	460a      	mov	r2, r1
 800b074:	4601      	mov	r1, r0
 800b076:	6818      	ldr	r0, [r3, #0]
 800b078:	f046 0301 	orr.w	r3, r6, #1
 800b07c:	702b      	strb	r3, [r5, #0]
 800b07e:	f7ff fa09 	bl	800a494 <RemoteConfig::HandleSet(void*, unsigned long)>
 800b082:	782b      	ldrb	r3, [r5, #0]
 800b084:	07f2      	lsls	r2, r6, #31
 800b086:	bf4c      	ite	mi
 800b088:	f043 0301 	orrmi.w	r3, r3, #1
 800b08c:	f023 0301 	bicpl.w	r3, r3, #1
 800b090:	702b      	strb	r3, [r5, #0]
 800b092:	2300      	movs	r3, #0
 800b094:	4a56      	ldr	r2, [pc, #344]	@ (800b1f0 <HttpDeamonHandleRequest::HandlePost(bool)+0x19c>)
 800b096:	4857      	ldr	r0, [pc, #348]	@ (800b1f4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a0>)
 800b098:	6323      	str	r3, [r4, #48]	@ 0x30
 800b09a:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b09e:	f00b febf 	bl	8016e20 <snprintf>
 800b0a2:	60a0      	str	r0, [r4, #8]
 800b0a4:	20c8      	movs	r0, #200	@ 0xc8
 800b0a6:	b002      	add	sp, #8
 800b0a8:	bd70      	pop	{r4, r5, r6, pc}
 800b0aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800b0ac:	2b03      	cmp	r3, #3
 800b0ae:	d134      	bne.n	800b11a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b0b0:	6985      	ldr	r5, [r0, #24]
 800b0b2:	782b      	ldrb	r3, [r5, #0]
 800b0b4:	2b2f      	cmp	r3, #47	@ 0x2f
 800b0b6:	f040 808c 	bne.w	800b1d2 <HttpDeamonHandleRequest::HandlePost(bool)+0x17e>
 800b0ba:	4a4f      	ldr	r2, [pc, #316]	@ (800b1f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a4>)
 800b0bc:	4629      	mov	r1, r5
 800b0be:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b0c2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b0c6:	4283      	cmp	r3, r0
 800b0c8:	d12b      	bne.n	800b122 <HttpDeamonHandleRequest::HandlePost(bool)+0xce>
 800b0ca:	2b00      	cmp	r3, #0
 800b0cc:	d1f7      	bne.n	800b0be <HttpDeamonHandleRequest::HandlePost(bool)+0x6a>
 800b0ce:	2301      	movs	r3, #1
 800b0d0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b0d4:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800b0d8:	429a      	cmp	r2, r3
 800b0da:	d3e3      	bcc.n	800b0a4 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b0dc:	68e1      	ldr	r1, [r4, #12]
 800b0de:	2900      	cmp	r1, #0
 800b0e0:	d0e0      	beq.n	800b0a4 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b0e2:	69e0      	ldr	r0, [r4, #28]
 800b0e4:	e7be      	b.n	800b064 <HttpDeamonHandleRequest::HandlePost(bool)+0x10>
 800b0e6:	2201      	movs	r2, #1
 800b0e8:	f008 faf4 	bl	80136d4 <properties::convert_json_file(char*, unsigned long, bool)>
 800b0ec:	1e05      	subs	r5, r0, #0
 800b0ee:	dd14      	ble.n	800b11a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b0f0:	69e3      	ldr	r3, [r4, #28]
 800b0f2:	4942      	ldr	r1, [pc, #264]	@ (800b1fc <HttpDeamonHandleRequest::HandlePost(bool)+0x1a8>)
 800b0f4:	442b      	add	r3, r5
 800b0f6:	2200      	movs	r2, #0
 800b0f8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b0fc:	69e0      	ldr	r0, [r4, #28]
 800b0fe:	f10d 0207 	add.w	r2, sp, #7
 800b102:	f008 fd93 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b106:	bb20      	cbnz	r0, 800b152 <HttpDeamonHandleRequest::HandlePost(bool)+0xfe>
 800b108:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b10c:	2b00      	cmp	r3, #0
 800b10e:	d0c0      	beq.n	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b110:	4b36      	ldr	r3, [pc, #216]	@ (800b1ec <HttpDeamonHandleRequest::HandlePost(bool)+0x198>)
 800b112:	6818      	ldr	r0, [r3, #0]
 800b114:	7b83      	ldrb	r3, [r0, #14]
 800b116:	2b00      	cmp	r3, #0
 800b118:	d164      	bne.n	800b1e4 <HttpDeamonHandleRequest::HandlePost(bool)+0x190>
 800b11a:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800b11e:	b002      	add	sp, #8
 800b120:	bd70      	pop	{r4, r5, r6, pc}
 800b122:	1a1b      	subs	r3, r3, r0
 800b124:	2b00      	cmp	r3, #0
 800b126:	bf0c      	ite	eq
 800b128:	2301      	moveq	r3, #1
 800b12a:	2300      	movne	r3, #0
 800b12c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b130:	d0d0      	beq.n	800b0d4 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b132:	782b      	ldrb	r3, [r5, #0]
 800b134:	2b2f      	cmp	r3, #47	@ 0x2f
 800b136:	d109      	bne.n	800b14c <HttpDeamonHandleRequest::HandlePost(bool)+0xf8>
 800b138:	4a31      	ldr	r2, [pc, #196]	@ (800b200 <HttpDeamonHandleRequest::HandlePost(bool)+0x1ac>)
 800b13a:	e001      	b.n	800b140 <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
 800b13c:	2b00      	cmp	r3, #0
 800b13e:	d0c9      	beq.n	800b0d4 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b140:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800b144:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b148:	428b      	cmp	r3, r1
 800b14a:	d0f7      	beq.n	800b13c <HttpDeamonHandleRequest::HandlePost(bool)+0xe8>
 800b14c:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800b150:	e7a9      	b.n	800b0a6 <HttpDeamonHandleRequest::HandlePost(bool)+0x52>
 800b152:	492c      	ldr	r1, [pc, #176]	@ (800b204 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b0>)
 800b154:	69e0      	ldr	r0, [r4, #28]
 800b156:	f10d 0207 	add.w	r2, sp, #7
 800b15a:	f008 fd67 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b15e:	b178      	cbz	r0, 800b180 <HttpDeamonHandleRequest::HandlePost(bool)+0x12c>
 800b160:	4929      	ldr	r1, [pc, #164]	@ (800b208 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b4>)
 800b162:	69e0      	ldr	r0, [r4, #28]
 800b164:	f10d 0207 	add.w	r2, sp, #7
 800b168:	f008 fd60 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b16c:	bb10      	cbnz	r0, 800b1b4 <HttpDeamonHandleRequest::HandlePost(bool)+0x160>
 800b16e:	4a27      	ldr	r2, [pc, #156]	@ (800b20c <HttpDeamonHandleRequest::HandlePost(bool)+0x1b8>)
 800b170:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b174:	6810      	ldr	r0, [r2, #0]
 800b176:	b37b      	cbz	r3, 800b1d8 <HttpDeamonHandleRequest::HandlePost(bool)+0x184>
 800b178:	2104      	movs	r1, #4
 800b17a:	f009 f937 	bl	80143ec <Hardware::SetMode(hardware::ledblink::Mode)>
 800b17e:	e788      	b.n	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b180:	4b23      	ldr	r3, [pc, #140]	@ (800b210 <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800b182:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b186:	681d      	ldr	r5, [r3, #0]
 800b188:	69a8      	ldr	r0, [r5, #24]
 800b18a:	fab6 f186 	clz	r1, r6
 800b18e:	0949      	lsrs	r1, r1, #5
 800b190:	2800      	cmp	r0, #0
 800b192:	f43f af7e 	beq.w	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b196:	6803      	ldr	r3, [r0, #0]
 800b198:	4a1e      	ldr	r2, [pc, #120]	@ (800b214 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800b19a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b19c:	7569      	strb	r1, [r5, #21]
 800b19e:	4293      	cmp	r3, r2
 800b1a0:	d106      	bne.n	800b1b0 <HttpDeamonHandleRequest::HandlePost(bool)+0x15c>
 800b1a2:	2e00      	cmp	r6, #0
 800b1a4:	f43f af75 	beq.w	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b1a8:	4b1b      	ldr	r3, [pc, #108]	@ (800b218 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c4>)
 800b1aa:	681b      	ldr	r3, [r3, #0]
 800b1ac:	606b      	str	r3, [r5, #4]
 800b1ae:	e770      	b.n	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b1b0:	4798      	blx	r3
 800b1b2:	e7f6      	b.n	800b1a2 <HttpDeamonHandleRequest::HandlePost(bool)+0x14e>
 800b1b4:	69e0      	ldr	r0, [r4, #28]
 800b1b6:	4a19      	ldr	r2, [pc, #100]	@ (800b21c <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>)
 800b1b8:	1e43      	subs	r3, r0, #1
 800b1ba:	f100 0c04 	add.w	ip, r0, #4
 800b1be:	e001      	b.n	800b1c4 <HttpDeamonHandleRequest::HandlePost(bool)+0x170>
 800b1c0:	4563      	cmp	r3, ip
 800b1c2:	d00b      	beq.n	800b1dc <HttpDeamonHandleRequest::HandlePost(bool)+0x188>
 800b1c4:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b1c8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b1cc:	428e      	cmp	r6, r1
 800b1ce:	d0f7      	beq.n	800b1c0 <HttpDeamonHandleRequest::HandlePost(bool)+0x16c>
 800b1d0:	e7a3      	b.n	800b11a <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b1d2:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800b1d6:	e7ac      	b.n	800b132 <HttpDeamonHandleRequest::HandlePost(bool)+0xde>
 800b1d8:	2102      	movs	r1, #2
 800b1da:	e7ce      	b.n	800b17a <HttpDeamonHandleRequest::HandlePost(bool)+0x126>
 800b1dc:	4629      	mov	r1, r5
 800b1de:	f009 f9ad 	bl	801453c <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
 800b1e2:	e756      	b.n	800b092 <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b1e4:	f7ff fc08 	bl	800a9f8 <RemoteConfig::HandleReboot()>
 800b1e8:	20009c11 	andcs	r9, r0, r1, lsl ip
 800b1ec:	200000a4 	andcs	r0, r0, r4, lsr #1
 800b1f0:	08018340 	stmdaeq	r1, {r6, r8, r9, pc}
 800b1f4:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b1f8:	08018304 	stmdaeq	r1, {r2, r8, r9, pc}
 800b1fc:	0801831c 	stmdaeq	r1, {r2, r3, r4, r8, r9, pc}
 800b200:	08018314 	stmdaeq	r1, {r2, r4, r8, r9, pc}
 800b204:	08018324 	stmdaeq	r1, {r2, r5, r8, r9, pc}
 800b208:	0801832c 	stmdaeq	r1, {r2, r3, r5, r8, r9, pc}
 800b20c:	20009d00 	andcs	r9, r0, r0, lsl #26
 800b210:	20009c14 	andcs	r9, r0, r4, lsl ip
 800b214:	0800ab81 	stmdaeq	r0, {r0, r7, r8, r9, fp, sp, pc}
 800b218:	200145c8 	andcs	r4, r1, r8, asr #11
 800b21c:	08018338 	stmdaeq	r1, {r3, r4, r5, r8, r9, pc}

0800b220 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
 800b220:	b570      	push	{r4, r5, r6, lr}
 800b222:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b224:	6141      	str	r1, [r0, #20]
 800b226:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800b22a:	b084      	sub	sp, #16
 800b22c:	4604      	mov	r4, r0
 800b22e:	6242      	str	r2, [r0, #36]	@ 0x24
 800b230:	d05f      	beq.n	800b2f2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xd2>
 800b232:	2bc8      	cmp	r3, #200	@ 0xc8
 800b234:	d055      	beq.n	800b2e2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc2>
 800b236:	f5b3 7fcf 	cmp.w	r3, #414	@ 0x19e
 800b23a:	dc10      	bgt.n	800b25e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x3e>
 800b23c:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800b240:	db1c      	blt.n	800b27c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b242:	f5a3 72c8 	sub.w	r2, r3, #400	@ 0x190
 800b246:	2a0e      	cmp	r2, #14
 800b248:	d818      	bhi.n	800b27c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b24a:	e8df f002 	tbb	[pc, r2]
 800b24e:	17171772 			@ <UNDEFINED> instruction: 0x17171772
 800b252:	17171770 			@ <UNDEFINED> instruction: 0x17171770
 800b256:	17171717 			@ <UNDEFINED> instruction: 0x17171717
 800b25a:	00606217 	rsbeq	r6, r0, r7, lsl r2
 800b25e:	f240 12f5 	movw	r2, #501	@ 0x1f5
 800b262:	4293      	cmp	r3, r2
 800b264:	d057      	beq.n	800b316 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xf6>
 800b266:	f240 12f9 	movw	r2, #505	@ 0x1f9
 800b26a:	4293      	cmp	r3, r2
 800b26c:	d04d      	beq.n	800b30a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xea>
 800b26e:	4e3a      	ldr	r6, [pc, #232]	@ (800b358 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b270:	4a3a      	ldr	r2, [pc, #232]	@ (800b35c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x13c>)
 800b272:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b276:	bf08      	it	eq
 800b278:	4616      	moveq	r6, r2
 800b27a:	e000      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b27c:	4e36      	ldr	r6, [pc, #216]	@ (800b358 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b27e:	4838      	ldr	r0, [pc, #224]	@ (800b360 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>)
 800b280:	6220      	str	r0, [r4, #32]
 800b282:	2200      	movs	r2, #0
 800b284:	6322      	str	r2, [r4, #48]	@ 0x30
 800b286:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b28a:	e9cd 6600 	strd	r6, r6, [sp]
 800b28e:	4a35      	ldr	r2, [pc, #212]	@ (800b364 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x144>)
 800b290:	f00b fdc6 	bl	8016e20 <snprintf>
 800b294:	e9d4 5309 	ldrd	r5, r3, [r4, #36]	@ 0x24
 800b298:	60a0      	str	r0, [r4, #8]
 800b29a:	4933      	ldr	r1, [pc, #204]	@ (800b368 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>)
 800b29c:	9003      	str	r0, [sp, #12]
 800b29e:	9600      	str	r6, [sp, #0]
 800b2a0:	6809      	ldr	r1, [r1, #0]
 800b2a2:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800b2a4:	4a31      	ldr	r2, [pc, #196]	@ (800b36c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x14c>)
 800b2a6:	3116      	adds	r1, #22
 800b2a8:	9101      	str	r1, [sp, #4]
 800b2aa:	4931      	ldr	r1, [pc, #196]	@ (800b370 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x150>)
 800b2ac:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b2b0:	9102      	str	r1, [sp, #8]
 800b2b2:	4628      	mov	r0, r5
 800b2b4:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b2b8:	f00b fdb2 	bl	8016e20 <snprintf>
 800b2bc:	6823      	ldr	r3, [r4, #0]
 800b2be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b2c0:	4602      	mov	r2, r0
 800b2c2:	6860      	ldr	r0, [r4, #4]
 800b2c4:	f006 fbea 	bl	8011a9c <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b2c8:	6823      	ldr	r3, [r4, #0]
 800b2ca:	68a2      	ldr	r2, [r4, #8]
 800b2cc:	6a21      	ldr	r1, [r4, #32]
 800b2ce:	6860      	ldr	r0, [r4, #4]
 800b2d0:	f006 fbe4 	bl	8011a9c <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b2d4:	f44f 7202 	mov.w	r2, #520	@ 0x208
 800b2d8:	2303      	movs	r3, #3
 800b2da:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 800b2de:	b004      	add	sp, #16
 800b2e0:	bd70      	pop	{r4, r5, r6, pc}
 800b2e2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b2e4:	2901      	cmp	r1, #1
 800b2e6:	4615      	mov	r5, r2
 800b2e8:	d017      	beq.n	800b31a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfa>
 800b2ea:	68a0      	ldr	r0, [r4, #8]
 800b2ec:	4e21      	ldr	r6, [pc, #132]	@ (800b374 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b2ee:	23c8      	movs	r3, #200	@ 0xc8
 800b2f0:	e7d3      	b.n	800b29a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b2f2:	f7ff fd3d 	bl	800ad70 <HttpDeamonHandleRequest::ParseRequest()>
 800b2f6:	28c8      	cmp	r0, #200	@ 0xc8
 800b2f8:	4603      	mov	r3, r0
 800b2fa:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b2fc:	d19b      	bne.n	800b236 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b2fe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b300:	b1cb      	cbz	r3, 800b336 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x116>
 800b302:	2b01      	cmp	r3, #1
 800b304:	d01b      	beq.n	800b33e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x11e>
 800b306:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b308:	e7ef      	b.n	800b2ea <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xca>
 800b30a:	4e1b      	ldr	r6, [pc, #108]	@ (800b378 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x158>)
 800b30c:	e7b7      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b30e:	4e1b      	ldr	r6, [pc, #108]	@ (800b37c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x15c>)
 800b310:	e7b5      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b312:	4e1b      	ldr	r6, [pc, #108]	@ (800b380 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x160>)
 800b314:	e7b3      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b316:	4e1b      	ldr	r6, [pc, #108]	@ (800b384 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x164>)
 800b318:	e7b1      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b31a:	f7ff fe9b 	bl	800b054 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b31e:	28c8      	cmp	r0, #200	@ 0xc8
 800b320:	4603      	mov	r3, r0
 800b322:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b324:	d187      	bne.n	800b236 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b326:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b328:	68a0      	ldr	r0, [r4, #8]
 800b32a:	4e12      	ldr	r6, [pc, #72]	@ (800b374 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b32c:	e7b5      	b.n	800b29a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b32e:	4e16      	ldr	r6, [pc, #88]	@ (800b388 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x168>)
 800b330:	e7a5      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b332:	4e16      	ldr	r6, [pc, #88]	@ (800b38c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16c>)
 800b334:	e7a3      	b.n	800b27e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b336:	4620      	mov	r0, r4
 800b338:	f7ff fda6 	bl	800ae88 <HttpDeamonHandleRequest::HandleGet()>
 800b33c:	e7ef      	b.n	800b31e <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfe>
 800b33e:	2100      	movs	r1, #0
 800b340:	4620      	mov	r0, r4
 800b342:	f7ff fe87 	bl	800b054 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b346:	28c8      	cmp	r0, #200	@ 0xc8
 800b348:	4603      	mov	r3, r0
 800b34a:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b34c:	f47f af73 	bne.w	800b236 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b350:	68e3      	ldr	r3, [r4, #12]
 800b352:	2b00      	cmp	r3, #0
 800b354:	d1d7      	bne.n	800b306 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xe6>
 800b356:	e7c2      	b.n	800b2de <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xbe>
 800b358:	080183a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, pc}
 800b35c:	080183ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, pc}
 800b360:	200000a8 	andcs	r0, r0, r8, lsr #1
 800b364:	08018444 	stmdaeq	r1, {r2, r6, sl, pc}
 800b368:	20009b30 	andcs	r9, r0, r0, lsr fp
 800b36c:	080184a0 	stmdaeq	r1, {r5, r7, sl, pc}
 800b370:	08018694 	stmdaeq	r1, {r2, r4, r7, r9, sl, pc}
 800b374:	08018440 	stmdaeq	r1, {r6, sl, pc}
 800b378:	0801841c 	stmdaeq	r1, {r2, r3, r4, sl, pc}
 800b37c:	080183d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, pc}
 800b380:	080183b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, pc}
 800b384:	08018404 	stmdaeq	r1, {r2, sl, pc}
 800b388:	08018434 	stmdaeq	r1, {r2, r4, r5, sl, pc}
 800b38c:	0801839c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, pc}

0800b390 <remoteconfig::json_get_list(char*, unsigned long)>:
 800b390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b394:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800b3f0 <remoteconfig::json_get_list(char*, unsigned long)+0x60>
 800b398:	4b12      	ldr	r3, [pc, #72]	@ (800b3e4 <remoteconfig::json_get_list(char*, unsigned long)+0x54>)
 800b39a:	b088      	sub	sp, #32
 800b39c:	4605      	mov	r5, r0
 800b39e:	f8d8 0000 	ldr.w	r0, [r8]
 800b3a2:	681c      	ldr	r4, [r3, #0]
 800b3a4:	460e      	mov	r6, r1
 800b3a6:	f7fe ff5b 	bl	800a260 <RemoteConfig::GetStringNode() const>
 800b3aa:	4607      	mov	r7, r0
 800b3ac:	f8d8 0000 	ldr.w	r0, [r8]
 800b3b0:	f7fe ff62 	bl	800a278 <RemoteConfig::GetStringOutput() const>
 800b3b4:	4b0c      	ldr	r3, [pc, #48]	@ (800b3e8 <remoteconfig::json_get_list(char*, unsigned long)+0x58>)
 800b3b6:	7a1a      	ldrb	r2, [r3, #8]
 800b3b8:	9704      	str	r7, [sp, #16]
 800b3ba:	3309      	adds	r3, #9
 800b3bc:	9303      	str	r3, [sp, #12]
 800b3be:	0e23      	lsrs	r3, r4, #24
 800b3c0:	9302      	str	r3, [sp, #8]
 800b3c2:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b3c6:	9301      	str	r3, [sp, #4]
 800b3c8:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b3cc:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b3d0:	9300      	str	r3, [sp, #0]
 800b3d2:	4a06      	ldr	r2, [pc, #24]	@ (800b3ec <remoteconfig::json_get_list(char*, unsigned long)+0x5c>)
 800b3d4:	b2e3      	uxtb	r3, r4
 800b3d6:	4631      	mov	r1, r6
 800b3d8:	4628      	mov	r0, r5
 800b3da:	f00b fd21 	bl	8016e20 <snprintf>
 800b3de:	b008      	add	sp, #32
 800b3e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3e4:	20009b50 	andcs	r9, r0, r0, asr fp
 800b3e8:	20000080 	andcs	r0, r0, r0, lsl #1
 800b3ec:	080177ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800b3f0:	200000a4 	andcs	r0, r0, r4, lsr #1

0800b3f4 <remoteconfig::json_get_version(char*, unsigned long)>:
 800b3f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3f6:	4b0a      	ldr	r3, [pc, #40]	@ (800b420 <remoteconfig::json_get_version(char*, unsigned long)+0x2c>)
 800b3f8:	9305      	str	r3, [sp, #20]
 800b3fa:	2208      	movs	r2, #8
 800b3fc:	9204      	str	r2, [sp, #16]
 800b3fe:	f1a3 020b 	sub.w	r2, r3, #11
 800b402:	9203      	str	r2, [sp, #12]
 800b404:	220b      	movs	r2, #11
 800b406:	9202      	str	r2, [sp, #8]
 800b408:	3b0e      	subs	r3, #14
 800b40a:	4a06      	ldr	r2, [pc, #24]	@ (800b424 <remoteconfig::json_get_version(char*, unsigned long)+0x30>)
 800b40c:	9201      	str	r2, [sp, #4]
 800b40e:	9300      	str	r3, [sp, #0]
 800b410:	4a05      	ldr	r2, [pc, #20]	@ (800b428 <remoteconfig::json_get_version(char*, unsigned long)+0x34>)
 800b412:	2303      	movs	r3, #3
 800b414:	f00b fd04 	bl	8016e20 <snprintf>
 800b418:	b007      	add	sp, #28
 800b41a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b41e:	bf00      	nop
 800b420:	20009cf6 	strdcs	r9, [r0], -r6
 800b424:	0801785f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
 800b428:	08017819 	stmdaeq	r1, {r0, r3, r4, fp, ip, sp, lr}

0800b42c <remoteconfig::json_get_uptime(char*, unsigned long)>:
 800b42c:	4b02      	ldr	r3, [pc, #8]	@ (800b438 <remoteconfig::json_get_uptime(char*, unsigned long)+0xc>)
 800b42e:	4a03      	ldr	r2, [pc, #12]	@ (800b43c <remoteconfig::json_get_uptime(char*, unsigned long)+0x10>)
 800b430:	685b      	ldr	r3, [r3, #4]
 800b432:	f00b bcf5 	b.w	8016e20 <snprintf>
 800b436:	bf00      	nop
 800b438:	200145c0 	andcs	r4, r1, r0, asr #11
 800b43c:	0801786e 	stmdaeq	r1, {r1, r2, r3, r5, r6, fp, ip, sp, lr}

0800b440 <remoteconfig::json_get_display(char*, unsigned long)>:
 800b440:	4b03      	ldr	r3, [pc, #12]	@ (800b450 <remoteconfig::json_get_display(char*, unsigned long)+0x10>)
 800b442:	4a04      	ldr	r2, [pc, #16]	@ (800b454 <remoteconfig::json_get_display(char*, unsigned long)+0x14>)
 800b444:	681b      	ldr	r3, [r3, #0]
 800b446:	7d5b      	ldrb	r3, [r3, #21]
 800b448:	f083 0301 	eor.w	r3, r3, #1
 800b44c:	f00b bce8 	b.w	8016e20 <snprintf>
 800b450:	20009c14 	andcs	r9, r0, r4, lsl ip
 800b454:	0801787d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, fp, ip, sp, lr}

0800b458 <remoteconfig::json_get_directory(char*, unsigned long)>:
 800b458:	4a01      	ldr	r2, [pc, #4]	@ (800b460 <remoteconfig::json_get_directory(char*, unsigned long)+0x8>)
 800b45a:	f00b bce1 	b.w	8016e20 <snprintf>
 800b45e:	bf00      	nop
 800b460:	0801788c 	stmdaeq	r1, {r2, r3, r7, fp, ip, sp, lr}

0800b464 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
 800b464:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b466:	4c0e      	ldr	r4, [pc, #56]	@ (800b4a0 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x3c>)
 800b468:	2309      	movs	r3, #9
 800b46a:	3b01      	subs	r3, #1
 800b46c:	d104      	bne.n	800b478 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x14>
 800b46e:	600b      	str	r3, [r1, #0]
 800b470:	2105      	movs	r1, #5
 800b472:	6011      	str	r1, [r2, #0]
 800b474:	4618      	mov	r0, r3
 800b476:	e011      	b.n	800b49c <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x38>
 800b478:	6825      	ldr	r5, [r4, #0]
 800b47a:	1e47      	subs	r7, r0, #1
 800b47c:	3d01      	subs	r5, #1
 800b47e:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b482:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800b486:	4566      	cmp	r6, ip
 800b488:	d001      	beq.n	800b48e <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x2a>
 800b48a:	3410      	adds	r4, #16
 800b48c:	e7ed      	b.n	800b46a <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x6>
 800b48e:	2e00      	cmp	r6, #0
 800b490:	d1f5      	bne.n	800b47e <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1a>
 800b492:	68a3      	ldr	r3, [r4, #8]
 800b494:	600b      	str	r3, [r1, #0]
 800b496:	6860      	ldr	r0, [r4, #4]
 800b498:	68e3      	ldr	r3, [r4, #12]
 800b49a:	6013      	str	r3, [r2, #0]
 800b49c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b49e:	bf00      	nop
 800b4a0:	08018790 	stmdaeq	r1, {r4, r7, r8, r9, sl, pc}

0800b4a4 <memcpy.isra.0>:
 800b4a4:	440a      	add	r2, r1
 800b4a6:	4291      	cmp	r1, r2
 800b4a8:	d100      	bne.n	800b4ac <memcpy.isra.0+0x8>
 800b4aa:	4770      	bx	lr
 800b4ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b4b0:	f800 3b01 	strb.w	r3, [r0], #1
 800b4b4:	e7f7      	b.n	800b4a6 <memcpy.isra.0+0x2>
	...

0800b4b8 <PixelPusher::PixelPusher()>:
 800b4b8:	b538      	push	{r3, r4, r5, lr}
 800b4ba:	4b1e      	ldr	r3, [pc, #120]	@ (800b534 <PixelPusher::PixelPusher()+0x7c>)
 800b4bc:	681b      	ldr	r3, [r3, #0]
 800b4be:	6003      	str	r3, [r0, #0]
 800b4c0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800b4c4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800b4c8:	4b1b      	ldr	r3, [pc, #108]	@ (800b538 <PixelPusher::PixelPusher()+0x80>)
 800b4ca:	2500      	movs	r5, #0
 800b4cc:	4604      	mov	r4, r0
 800b4ce:	f880 5024 	strb.w	r5, [r0, #36]	@ 0x24
 800b4d2:	6285      	str	r5, [r0, #40]	@ 0x28
 800b4d4:	f8c0 5080 	str.w	r5, [r0, #128]	@ 0x80
 800b4d8:	6018      	str	r0, [r3, #0]
 800b4da:	e9c0 5503 	strd	r5, r5, [r0, #12]
 800b4de:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800b4e2:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800b4e6:	302c      	adds	r0, #44	@ 0x2c
 800b4e8:	f104 0280 	add.w	r2, r4, #128	@ 0x80
 800b4ec:	4603      	mov	r3, r0
 800b4ee:	f803 5b01 	strb.w	r5, [r3], #1
 800b4f2:	4293      	cmp	r3, r2
 800b4f4:	d1fb      	bne.n	800b4ee <PixelPusher::PixelPusher()+0x36>
 800b4f6:	4911      	ldr	r1, [pc, #68]	@ (800b53c <PixelPusher::PixelPusher()+0x84>)
 800b4f8:	2206      	movs	r2, #6
 800b4fa:	f7ff ffd3 	bl	800b4a4 <memcpy.isra.0>
 800b4fe:	f44f 7381 	mov.w	r3, #258	@ 0x102
 800b502:	86e3      	strh	r3, [r4, #54]	@ 0x36
 800b504:	2303      	movs	r3, #3
 800b506:	8723      	strh	r3, [r4, #56]	@ 0x38
 800b508:	2379      	movs	r3, #121	@ 0x79
 800b50a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800b50c:	4b0c      	ldr	r3, [pc, #48]	@ (800b540 <PixelPusher::PixelPusher()+0x88>)
 800b50e:	6423      	str	r3, [r4, #64]	@ 0x40
 800b510:	2301      	movs	r3, #1
 800b512:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800b516:	f241 32d6 	movw	r2, #5078	@ 0x13d6
 800b51a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800b51e:	e9c4 1312 	strd	r1, r3, [r4, #72]	@ 0x48
 800b522:	f8a4 2060 	strh.w	r2, [r4, #96]	@ 0x60
 800b526:	f8a4 3072 	strh.w	r3, [r4, #114]	@ 0x72
 800b52a:	f8a4 5074 	strh.w	r5, [r4, #116]	@ 0x74
 800b52e:	4620      	mov	r0, r4
 800b530:	bd38      	pop	{r3, r4, r5, pc}
 800b532:	bf00      	nop
 800b534:	200145c8 	andcs	r4, r1, r8, asr #11
 800b538:	20000648 	andcs	r0, r0, r8, asr #12
 800b53c:	20009b64 	andcs	r9, r0, r4, ror #22
 800b540:	00989680 	addseq	r9, r8, r0, lsl #13

0800b544 <PixelPusher::Start()>:
 800b544:	b510      	push	{r4, lr}
 800b546:	4604      	mov	r4, r0
 800b548:	f641 40a3 	movw	r0, #7331	@ 0x1ca3
 800b54c:	f006 fb00 	bl	8011b50 <net::udp_begin(unsigned short)>
 800b550:	6060      	str	r0, [r4, #4]
 800b552:	f241 30d6 	movw	r0, #5078	@ 0x13d6
 800b556:	f006 fafb 	bl	8011b50 <net::udp_begin(unsigned short)>
 800b55a:	6923      	ldr	r3, [r4, #16]
 800b55c:	6a22      	ldr	r2, [r4, #32]
 800b55e:	f8a4 3046 	strh.w	r3, [r4, #70]	@ 0x46
 800b562:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800b566:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
 800b56a:	f8a4 206c 	strh.w	r2, [r4, #108]	@ 0x6c
 800b56e:	3301      	adds	r3, #1
 800b570:	2200      	movs	r2, #0
 800b572:	60a0      	str	r0, [r4, #8]
 800b574:	f8a4 206e 	strh.w	r2, [r4, #110]	@ 0x6e
 800b578:	f8a4 2070 	strh.w	r2, [r4, #112]	@ 0x70
 800b57c:	6163      	str	r3, [r4, #20]
 800b57e:	bd10      	pop	{r4, pc}

0800b580 <PixelPusher::Stop()>:
 800b580:	b538      	push	{r3, r4, r5, lr}
 800b582:	4604      	mov	r4, r0
 800b584:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 800b588:	f241 30d6 	movw	r0, #5078	@ 0x13d6
 800b58c:	f006 faf6 	bl	8011b7c <net::udp_end(unsigned short)>
 800b590:	60a5      	str	r5, [r4, #8]
 800b592:	f641 40a3 	movw	r0, #7331	@ 0x1ca3
 800b596:	f006 faf1 	bl	8011b7c <net::udp_end(unsigned short)>
 800b59a:	6065      	str	r5, [r4, #4]
 800b59c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b5a0 <PixelPusher::Run()>:
 800b5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5a4:	b089      	sub	sp, #36	@ 0x24
 800b5a6:	4604      	mov	r4, r0
 800b5a8:	f100 0180 	add.w	r1, r0, #128	@ 0x80
 800b5ac:	f10d 0312 	add.w	r3, sp, #18
 800b5b0:	6880      	ldr	r0, [r0, #8]
 800b5b2:	aa05      	add	r2, sp, #20
 800b5b4:	f006 fb06 	bl	8011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 800b5b8:	2803      	cmp	r0, #3
 800b5ba:	60e0      	str	r0, [r4, #12]
 800b5bc:	d820      	bhi.n	800b600 <PixelPusher::Run()+0x60>
 800b5be:	4b51      	ldr	r3, [pc, #324]	@ (800b704 <PixelPusher::Run()+0x164>)
 800b5c0:	681a      	ldr	r2, [r3, #0]
 800b5c2:	6823      	ldr	r3, [r4, #0]
 800b5c4:	1ad3      	subs	r3, r2, r3
 800b5c6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800b5ca:	d316      	bcc.n	800b5fa <PixelPusher::Run()+0x5a>
 800b5cc:	4620      	mov	r0, r4
 800b5ce:	4d4e      	ldr	r5, [pc, #312]	@ (800b708 <PixelPusher::Run()+0x168>)
 800b5d0:	f840 2b32 	str.w	r2, [r0], #50
 800b5d4:	a907      	add	r1, sp, #28
 800b5d6:	682b      	ldr	r3, [r5, #0]
 800b5d8:	9307      	str	r3, [sp, #28]
 800b5da:	2204      	movs	r2, #4
 800b5dc:	f7ff ff62 	bl	800b4a4 <memcpy.isra.0>
 800b5e0:	682b      	ldr	r3, [r5, #0]
 800b5e2:	6860      	ldr	r0, [r4, #4]
 800b5e4:	f104 012c 	add.w	r1, r4, #44	@ 0x2c
 800b5e8:	b13b      	cbz	r3, 800b5fa <PixelPusher::Run()+0x5a>
 800b5ea:	f641 43a3 	movw	r3, #7331	@ 0x1ca3
 800b5ee:	9300      	str	r3, [sp, #0]
 800b5f0:	2254      	movs	r2, #84	@ 0x54
 800b5f2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800b5f6:	f006 fb03 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800b5fa:	b009      	add	sp, #36	@ 0x24
 800b5fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b600:	f8d4 6080 	ldr.w	r6, [r4, #128]	@ 0x80
 800b604:	2204      	movs	r2, #4
 800b606:	4631      	mov	r1, r6
 800b608:	a806      	add	r0, sp, #24
 800b60a:	f7ff ff4b 	bl	800b4a4 <memcpy.isra.0>
 800b60e:	68e5      	ldr	r5, [r4, #12]
 800b610:	3d04      	subs	r5, #4
 800b612:	2d0f      	cmp	r5, #15
 800b614:	60e5      	str	r5, [r4, #12]
 800b616:	d90c      	bls.n	800b632 <PixelPusher::Run()+0x92>
 800b618:	4a3c      	ldr	r2, [pc, #240]	@ (800b70c <PixelPusher::Run()+0x16c>)
 800b61a:	1cf3      	adds	r3, r6, #3
 800b61c:	f106 0113 	add.w	r1, r6, #19
 800b620:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800b624:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b628:	4287      	cmp	r7, r0
 800b62a:	d102      	bne.n	800b632 <PixelPusher::Run()+0x92>
 800b62c:	428b      	cmp	r3, r1
 800b62e:	d1f7      	bne.n	800b620 <PixelPusher::Run()+0x80>
 800b630:	e7e3      	b.n	800b5fa <PixelPusher::Run()+0x5a>
 800b632:	6963      	ldr	r3, [r4, #20]
 800b634:	fbb5 f8f3 	udiv	r8, r5, r3
 800b638:	fb03 5518 	mls	r5, r3, r8, r5
 800b63c:	2d00      	cmp	r5, #0
 800b63e:	d1dc      	bne.n	800b5fa <PixelPusher::Run()+0x5a>
 800b640:	3604      	adds	r6, #4
 800b642:	4545      	cmp	r5, r8
 800b644:	d0d9      	beq.n	800b5fa <PixelPusher::Run()+0x5a>
 800b646:	69a3      	ldr	r3, [r4, #24]
 800b648:	f896 9000 	ldrb.w	r9, [r6]
 800b64c:	fb03 f909 	mul.w	r9, r3, r9
 800b650:	4b2f      	ldr	r3, [pc, #188]	@ (800b710 <PixelPusher::Run()+0x170>)
 800b652:	f240 6704 	movw	r7, #1540	@ 0x604
 800b656:	fb07 3709 	mla	r7, r7, r9, r3
 800b65a:	46ca      	mov	sl, r9
 800b65c:	f104 030c 	add.w	r3, r4, #12
 800b660:	69a2      	ldr	r2, [r4, #24]
 800b662:	444a      	add	r2, r9
 800b664:	4552      	cmp	r2, sl
 800b666:	6962      	ldr	r2, [r4, #20]
 800b668:	d901      	bls.n	800b66e <PixelPusher::Run()+0xce>
 800b66a:	68e1      	ldr	r1, [r4, #12]
 800b66c:	b979      	cbnz	r1, 800b68e <PixelPusher::Run()+0xee>
 800b66e:	69e3      	ldr	r3, [r4, #28]
 800b670:	4553      	cmp	r3, sl
 800b672:	4416      	add	r6, r2
 800b674:	d109      	bne.n	800b68a <PixelPusher::Run()+0xea>
 800b676:	2100      	movs	r1, #0
 800b678:	4a25      	ldr	r2, [pc, #148]	@ (800b710 <PixelPusher::Run()+0x170>)
 800b67a:	f04f 0901 	mov.w	r9, #1
 800b67e:	468a      	mov	sl, r1
 800b680:	69e3      	ldr	r3, [r4, #28]
 800b682:	428b      	cmp	r3, r1
 800b684:	f202 6704 	addw	r7, r2, #1540	@ 0x604
 800b688:	d829      	bhi.n	800b6de <PixelPusher::Run()+0x13e>
 800b68a:	3501      	adds	r5, #1
 800b68c:	e7d9      	b.n	800b642 <PixelPusher::Run()+0xa2>
 800b68e:	f5b1 7fff 	cmp.w	r1, #510	@ 0x1fe
 800b692:	4920      	ldr	r1, [pc, #128]	@ (800b714 <PixelPusher::Run()+0x174>)
 800b694:	9303      	str	r3, [sp, #12]
 800b696:	bf38      	it	cc
 800b698:	4619      	movcc	r1, r3
 800b69a:	3a01      	subs	r2, #1
 800b69c:	6808      	ldr	r0, [r1, #0]
 800b69e:	9207      	str	r2, [sp, #28]
 800b6a0:	4282      	cmp	r2, r0
 800b6a2:	ab07      	add	r3, sp, #28
 800b6a4:	bf98      	it	ls
 800b6a6:	4619      	movls	r1, r3
 800b6a8:	4638      	mov	r0, r7
 800b6aa:	f8d1 b000 	ldr.w	fp, [r1]
 800b6ae:	1c71      	adds	r1, r6, #1
 800b6b0:	465a      	mov	r2, fp
 800b6b2:	9102      	str	r1, [sp, #8]
 800b6b4:	f7ff fef6 	bl	800b4a4 <memcpy.isra.0>
 800b6b8:	9902      	ldr	r1, [sp, #8]
 800b6ba:	f8c7 b600 	str.w	fp, [r7, #1536]	@ 0x600
 800b6be:	f507 6080 	add.w	r0, r7, #1024	@ 0x400
 800b6c2:	465a      	mov	r2, fp
 800b6c4:	f7ff feee 	bl	800b4a4 <memcpy.isra.0>
 800b6c8:	68e1      	ldr	r1, [r4, #12]
 800b6ca:	9b03      	ldr	r3, [sp, #12]
 800b6cc:	eba1 010b 	sub.w	r1, r1, fp
 800b6d0:	60e1      	str	r1, [r4, #12]
 800b6d2:	445e      	add	r6, fp
 800b6d4:	f10a 0a01 	add.w	sl, sl, #1
 800b6d8:	f207 6704 	addw	r7, r7, #1540	@ 0x604
 800b6dc:	e7c0      	b.n	800b660 <PixelPusher::Run()+0xc0>
 800b6de:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b6e0:	9102      	str	r1, [sp, #8]
 800b6e2:	6803      	ldr	r3, [r0, #0]
 800b6e4:	f8cd 9000 	str.w	r9, [sp]
 800b6e8:	f8d3 b010 	ldr.w	fp, [r3, #16]
 800b6ec:	f857 3c04 	ldr.w	r3, [r7, #-4]
 800b6f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b6f4:	47d8      	blx	fp
 800b6f6:	9902      	ldr	r1, [sp, #8]
 800b6f8:	f847 ac04 	str.w	sl, [r7, #-4]
 800b6fc:	3101      	adds	r1, #1
 800b6fe:	463a      	mov	r2, r7
 800b700:	e7be      	b.n	800b680 <PixelPusher::Run()+0xe0>
 800b702:	bf00      	nop
 800b704:	200145c8 	andcs	r4, r1, r8, asr #11
 800b708:	20009b50 	andcs	r9, r0, r0, asr fp
 800b70c:	08019d2c 	stmdaeq	r1, {r2, r3, r5, r8, sl, fp, ip, pc}
 800b710:	2000064c 	andcs	r0, r0, ip, asr #12
 800b714:	08019d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, ip, pc}

0800b718 <PixelPusher::Print()>:
 800b718:	b510      	push	{r4, lr}
 800b71a:	4604      	mov	r4, r0
 800b71c:	4808      	ldr	r0, [pc, #32]	@ (800b740 <PixelPusher::Print()+0x28>)
 800b71e:	f00b fbac 	bl	8016e7a <puts>
 800b722:	6921      	ldr	r1, [r4, #16]
 800b724:	4807      	ldr	r0, [pc, #28]	@ (800b744 <PixelPusher::Print()+0x2c>)
 800b726:	f00b fb53 	bl	8016dd0 <printf>
 800b72a:	2103      	movs	r1, #3
 800b72c:	4806      	ldr	r0, [pc, #24]	@ (800b748 <PixelPusher::Print()+0x30>)
 800b72e:	f00b fb4f 	bl	8016dd0 <printf>
 800b732:	6a21      	ldr	r1, [r4, #32]
 800b734:	4805      	ldr	r0, [pc, #20]	@ (800b74c <PixelPusher::Print()+0x34>)
 800b736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b73a:	f00b bb49 	b.w	8016dd0 <printf>
 800b73e:	bf00      	nop
 800b740:	0801762c 	stmdaeq	r1, {r2, r3, r5, r9, sl, ip, sp, lr}
 800b744:	08017971 	stmdaeq	r1, {r0, r4, r5, r6, r8, fp, ip, sp, lr}
 800b748:	0801798a 	stmdaeq	r1, {r1, r3, r7, r8, fp, ip, sp, lr}
 800b74c:	080179a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, fp, ip, sp, lr}

0800b750 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>:
 800b750:	b507      	push	{r0, r1, r2, lr}
 800b752:	2300      	movs	r3, #0
 800b754:	2101      	movs	r1, #1
 800b756:	e9cd 3100 	strd	r3, r1, [sp]
 800b75a:	4602      	mov	r2, r0
 800b75c:	4804      	ldr	r0, [pc, #16]	@ (800b770 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)+0x20>)
 800b75e:	2329      	movs	r3, #41	@ 0x29
 800b760:	6800      	ldr	r0, [r0, #0]
 800b762:	2109      	movs	r1, #9
 800b764:	f007 fe5e 	bl	8013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800b768:	b003      	add	sp, #12
 800b76a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b76e:	bf00      	nop
 800b770:	20009bfc 	strdcs	r9, [r0], -ip

0800b774 <RDMDeviceParams::RDMDeviceParams()>:
 800b774:	b510      	push	{r4, lr}
 800b776:	2225      	movs	r2, #37	@ 0x25
 800b778:	4604      	mov	r4, r0
 800b77a:	2100      	movs	r1, #0
 800b77c:	f00b f844 	bl	8016808 <memset>
 800b780:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800b784:	237f      	movs	r3, #127	@ 0x7f
 800b786:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 800b78a:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 800b78e:	f884 2027 	strb.w	r2, [r4, #39]	@ 0x27
 800b792:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800b796:	4620      	mov	r0, r4
 800b798:	bd10      	pop	{r4, pc}

0800b79a <RDMDeviceParams::Load()>:
 800b79a:	b508      	push	{r3, lr}
 800b79c:	f7ff ffd8 	bl	800b750 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>
 800b7a0:	bd08      	pop	{r3, pc}
	...

0800b7a4 <RDMDeviceParams::Set(RDMDevice*)>:
 800b7a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7a8:	6803      	ldr	r3, [r0, #0]
 800b7aa:	460c      	mov	r4, r1
 800b7ac:	07d9      	lsls	r1, r3, #31
 800b7ae:	b087      	sub	sp, #28
 800b7b0:	4605      	mov	r5, r0
 800b7b2:	d52d      	bpl.n	800b810 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800b7b4:	f890 6024 	ldrb.w	r6, [r0, #36]	@ 0x24
 800b7b8:	f894 3052 	ldrb.w	r3, [r4, #82]	@ 0x52
 800b7bc:	2e20      	cmp	r6, #32
 800b7be:	f100 0104 	add.w	r1, r0, #4
 800b7c2:	bf28      	it	cs
 800b7c4:	2620      	movcs	r6, #32
 800b7c6:	b39b      	cbz	r3, 800b830 <RDMDeviceParams::Set(RDMDevice*)+0x8c>
 800b7c8:	f104 0320 	add.w	r3, r4, #32
 800b7cc:	2701      	movs	r7, #1
 800b7ce:	4632      	mov	r2, r6
 800b7d0:	4618      	mov	r0, r3
 800b7d2:	f04f 0900 	mov.w	r9, #0
 800b7d6:	f00b f800 	bl	80167da <memmove>
 800b7da:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 800b7de:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800b7e2:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 800b840 <RDMDeviceParams::Set(RDMDevice*)+0x9c>
 800b7e6:	9600      	str	r6, [sp, #0]
 800b7e8:	4603      	mov	r3, r0
 800b7ea:	2204      	movs	r2, #4
 800b7ec:	f8d8 0000 	ldr.w	r0, [r8]
 800b7f0:	f88d 6017 	strb.w	r6, [sp, #23]
 800b7f4:	2109      	movs	r1, #9
 800b7f6:	f007 fdef 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b7fa:	e9cd 7901 	strd	r7, r9, [sp, #4]
 800b7fe:	9700      	str	r7, [sp, #0]
 800b800:	f8d8 0000 	ldr.w	r0, [r8]
 800b804:	f10d 0317 	add.w	r3, sp, #23
 800b808:	2224      	movs	r2, #36	@ 0x24
 800b80a:	2109      	movs	r1, #9
 800b80c:	f007 fde4 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b810:	682b      	ldr	r3, [r5, #0]
 800b812:	079a      	lsls	r2, r3, #30
 800b814:	bf44      	itt	mi
 800b816:	f8b5 2025 	ldrhmi.w	r2, [r5, #37]	@ 0x25
 800b81a:	f8a4 2040 	strhmi.w	r2, [r4, #64]	@ 0x40
 800b81e:	075b      	lsls	r3, r3, #29
 800b820:	bf44      	itt	mi
 800b822:	f8b5 3027 	ldrhmi.w	r3, [r5, #39]	@ 0x27
 800b826:	f8a4 3042 	strhmi.w	r3, [r4, #66]	@ 0x42
 800b82a:	b007      	add	sp, #28
 800b82c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b830:	4632      	mov	r2, r6
 800b832:	4620      	mov	r0, r4
 800b834:	f00a ffd1 	bl	80167da <memmove>
 800b838:	f884 6051 	strb.w	r6, [r4, #81]	@ 0x51
 800b83c:	e7e8      	b.n	800b810 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 800b83e:	bf00      	nop
 800b840:	20009bfc 	strdcs	r9, [r0], -ip

0800b844 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b844:	4770      	bx	lr

0800b846 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b846:	4770      	bx	lr

0800b848 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)>:
 800b848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b84a:	4604      	mov	r4, r0
 800b84c:	3004      	adds	r0, #4
 800b84e:	460f      	mov	r7, r1
 800b850:	4616      	mov	r6, r2
 800b852:	461d      	mov	r5, r3
 800b854:	f001 f87e 	bl	800c954 <RDMDevice::RDMDevice()>
 800b858:	4620      	mov	r0, r4
 800b85a:	4b24      	ldr	r3, [pc, #144]	@ (800b8ec <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa4>)
 800b85c:	f840 3b57 	str.w	r3, [r0], #87
 800b860:	f000 fd64 	bl	800c32c <RDMIdentify::RDMIdentify()>
 800b864:	4a22      	ldr	r2, [pc, #136]	@ (800b8f0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa8>)
 800b866:	66a7      	str	r7, [r4, #104]	@ 0x68
 800b868:	f104 0158 	add.w	r1, r4, #88	@ 0x58
 800b86c:	6011      	str	r1, [r2, #0]
 800b86e:	4a21      	ldr	r2, [pc, #132]	@ (800b8f4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xac>)
 800b870:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 800b874:	6011      	str	r1, [r2, #0]
 800b876:	4a20      	ldr	r2, [pc, #128]	@ (800b8f8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xb0>)
 800b878:	6014      	str	r4, [r2, #0]
 800b87a:	2265      	movs	r2, #101	@ 0x65
 800b87c:	f884 2097 	strb.w	r2, [r4, #151]	@ 0x97
 800b880:	f44f 72b7 	mov.w	r2, #366	@ 0x16e
 800b884:	2300      	movs	r3, #0
 800b886:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
 800b88a:	2201      	movs	r2, #1
 800b88c:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
 800b890:	65a3      	str	r3, [r4, #88]	@ 0x58
 800b892:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 800b896:	6623      	str	r3, [r4, #96]	@ 0x60
 800b898:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 800b89c:	f104 0271 	add.w	r2, r4, #113	@ 0x71
 800b8a0:	f104 0184 	add.w	r1, r4, #132	@ 0x84
 800b8a4:	f802 3b01 	strb.w	r3, [r2], #1
 800b8a8:	428a      	cmp	r2, r1
 800b8aa:	d1fb      	bne.n	800b8a4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x5c>
 800b8ac:	f104 0397 	add.w	r3, r4, #151	@ 0x97
 800b8b0:	2200      	movs	r2, #0
 800b8b2:	f801 2b01 	strb.w	r2, [r1], #1
 800b8b6:	428b      	cmp	r3, r1
 800b8b8:	d1fb      	bne.n	800b8b2 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0x6a>
 800b8ba:	f884 607e 	strb.w	r6, [r4, #126]	@ 0x7e
 800b8be:	f884 507d 	strb.w	r5, [r4, #125]	@ 0x7d
 800b8c2:	f7fe fb67 	bl	8009f94 <RDMSoftwareVersion::GetVersion()>
 800b8c6:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800b8c8:	f7fe fb68 	bl	8009f9c <RDMSoftwareVersion::GetVersionLength()>
 800b8cc:	f105 4380 	add.w	r3, r5, #1073741824	@ 0x40000000
 800b8d0:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800b8d2:	f884 0070 	strb.w	r0, [r4, #112]	@ 0x70
 800b8d6:	3b01      	subs	r3, #1
 800b8d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b8dc:	685b      	ldr	r3, [r3, #4]
 800b8de:	b91b      	cbnz	r3, 800b8e8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned long, unsigned long)+0xa0>
 800b8e0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b8e4:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
 800b8e8:	4620      	mov	r0, r4
 800b8ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b8ec:	08019d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, pc}
 800b8f0:	200096b8 			@ <UNDEFINED> instruction: 0x200096b8
 800b8f4:	200096bc 			@ <UNDEFINED> instruction: 0x200096bc
 800b8f8:	200096ac 	andcs	r9, r0, ip, lsr #13

0800b8fc <RDMDeviceResponder::Init()>:
 800b8fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8fe:	2301      	movs	r3, #1
 800b900:	4604      	mov	r4, r0
 800b902:	f880 3056 	strb.w	r3, [r0, #86]	@ 0x56
 800b906:	f894 2055 	ldrb.w	r2, [r4, #85]	@ 0x55
 800b90a:	2a20      	cmp	r2, #32
 800b90c:	bf28      	it	cs
 800b90e:	2220      	movcs	r2, #32
 800b910:	b087      	sub	sp, #28
 800b912:	3004      	adds	r0, #4
 800b914:	f104 0324 	add.w	r3, r4, #36	@ 0x24
 800b918:	4611      	mov	r1, r2
 800b91a:	3901      	subs	r1, #1
 800b91c:	d275      	bcs.n	800ba0a <RDMDeviceResponder::Init()+0x10e>
 800b91e:	2501      	movs	r5, #1
 800b920:	2700      	movs	r7, #0
 800b922:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800b926:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800b92a:	4e49      	ldr	r6, [pc, #292]	@ (800ba50 <RDMDeviceResponder::Init()+0x154>)
 800b92c:	9200      	str	r2, [sp, #0]
 800b92e:	6830      	ldr	r0, [r6, #0]
 800b930:	f88d 2017 	strb.w	r2, [sp, #23]
 800b934:	2109      	movs	r1, #9
 800b936:	2204      	movs	r2, #4
 800b938:	f007 fd4e 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b93c:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800b940:	9500      	str	r5, [sp, #0]
 800b942:	6830      	ldr	r0, [r6, #0]
 800b944:	f10d 0317 	add.w	r3, sp, #23
 800b948:	2224      	movs	r2, #36	@ 0x24
 800b94a:	2109      	movs	r1, #9
 800b94c:	f007 fd44 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b950:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800b954:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800b958:	f894 0054 	ldrb.w	r0, [r4, #84]	@ 0x54
 800b95c:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800b960:	1b2d      	subs	r5, r5, r4
 800b962:	18a9      	adds	r1, r5, r2
 800b964:	4288      	cmp	r0, r1
 800b966:	d854      	bhi.n	800ba12 <RDMDeviceResponder::Init()+0x116>
 800b968:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800b96c:	f7fe fb18 	bl	8009fa0 <RDMSoftwareVersion::GetVersionId()>
 800b970:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800b974:	f884 3076 	strb.w	r3, [r4, #118]	@ 0x76
 800b978:	2201      	movs	r2, #1
 800b97a:	f884 2071 	strb.w	r2, [r4, #113]	@ 0x71
 800b97e:	2200      	movs	r2, #0
 800b980:	f8a4 2072 	strh.w	r2, [r4, #114]	@ 0x72
 800b984:	f884 2074 	strb.w	r2, [r4, #116]	@ 0x74
 800b988:	0a1a      	lsrs	r2, r3, #8
 800b98a:	0e03      	lsrs	r3, r0, #24
 800b98c:	f884 3077 	strb.w	r3, [r4, #119]	@ 0x77
 800b990:	0c03      	lsrs	r3, r0, #16
 800b992:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
 800b996:	0a03      	lsrs	r3, r0, #8
 800b998:	f884 3079 	strb.w	r3, [r4, #121]	@ 0x79
 800b99c:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800b9a0:	f884 2075 	strb.w	r2, [r4, #117]	@ 0x75
 800b9a4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800b9a8:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800b9aa:	f884 007a 	strb.w	r0, [r4, #122]	@ 0x7a
 800b9ae:	3b01      	subs	r3, #1
 800b9b0:	f8b4 6064 	ldrh.w	r6, [r4, #100]	@ 0x64
 800b9b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b9b8:	685d      	ldr	r5, [r3, #4]
 800b9ba:	bb7d      	cbnz	r5, 800ba1c <RDMDeviceResponder::Init()+0x120>
 800b9bc:	f8b4 009c 	ldrh.w	r0, [r4, #156]	@ 0x9c
 800b9c0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b9c4:	0a03      	lsrs	r3, r0, #8
 800b9c6:	f884 507c 	strb.w	r5, [r4, #124]	@ 0x7c
 800b9ca:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800b9ce:	0a33      	lsrs	r3, r6, #8
 800b9d0:	b2c0      	uxtb	r0, r0
 800b9d2:	f884 3081 	strb.w	r3, [r4, #129]	@ 0x81
 800b9d6:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 800b9da:	f884 3083 	strb.w	r3, [r4, #131]	@ 0x83
 800b9de:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800b9e2:	f884 6082 	strb.w	r6, [r4, #130]	@ 0x82
 800b9e6:	f104 0371 	add.w	r3, r4, #113	@ 0x71
 800b9ea:	f104 0284 	add.w	r2, r4, #132	@ 0x84
 800b9ee:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b9f2:	7499      	strb	r1, [r3, #18]
 800b9f4:	429a      	cmp	r2, r3
 800b9f6:	d1fa      	bne.n	800b9ee <RDMDeviceResponder::Init()+0xf2>
 800b9f8:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800b9fc:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800ba00:	4413      	add	r3, r2
 800ba02:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800ba06:	b007      	add	sp, #28
 800ba08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba0a:	f810 5b01 	ldrb.w	r5, [r0], #1
 800ba0e:	77c5      	strb	r5, [r0, #31]
 800ba10:	e783      	b.n	800b91a <RDMDeviceResponder::Init()+0x1e>
 800ba12:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ba16:	440b      	add	r3, r1
 800ba18:	b29b      	uxth	r3, r3
 800ba1a:	e7a2      	b.n	800b962 <RDMDeviceResponder::Init()+0x66>
 800ba1c:	682b      	ldr	r3, [r5, #0]
 800ba1e:	4628      	mov	r0, r5
 800ba20:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba22:	4798      	blx	r3
 800ba24:	0a00      	lsrs	r0, r0, #8
 800ba26:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800ba2a:	682b      	ldr	r3, [r5, #0]
 800ba2c:	4628      	mov	r0, r5
 800ba2e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba30:	4798      	blx	r3
 800ba32:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800ba36:	682b      	ldr	r3, [r5, #0]
 800ba38:	4628      	mov	r0, r5
 800ba3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ba3c:	4798      	blx	r3
 800ba3e:	0a00      	lsrs	r0, r0, #8
 800ba40:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800ba44:	682b      	ldr	r3, [r5, #0]
 800ba46:	4628      	mov	r0, r5
 800ba48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ba4a:	4798      	blx	r3
 800ba4c:	e7bf      	b.n	800b9ce <RDMDeviceResponder::Init()+0xd2>
 800ba4e:	bf00      	nop
 800ba50:	20009bfc 	strdcs	r9, [r0], -ip

0800ba54 <RDMDeviceResponder::Print()>:
 800ba54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ba56:	4604      	mov	r4, r0
 800ba58:	3004      	adds	r0, #4
 800ba5a:	f000 ffcb 	bl	800c9f4 <RDMDevice::Print()>
 800ba5e:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800ba62:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800ba64:	481b      	ldr	r0, [pc, #108]	@ (800bad4 <RDMDeviceResponder::Print()+0x80>)
 800ba66:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800ba6a:	3b01      	subs	r3, #1
 800ba6c:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 800ba70:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 800ba72:	f00b fa02 	bl	8016e7a <puts>
 800ba76:	f894 2072 	ldrb.w	r2, [r4, #114]	@ 0x72
 800ba7a:	f894 1071 	ldrb.w	r1, [r4, #113]	@ 0x71
 800ba7e:	4816      	ldr	r0, [pc, #88]	@ (800bad8 <RDMDeviceResponder::Print()+0x84>)
 800ba80:	f00b f9a6 	bl	8016dd0 <printf>
 800ba84:	f8b4 107f 	ldrh.w	r1, [r4, #127]	@ 0x7f
 800ba88:	4814      	ldr	r0, [pc, #80]	@ (800badc <RDMDeviceResponder::Print()+0x88>)
 800ba8a:	ba49      	rev16	r1, r1
 800ba8c:	b289      	uxth	r1, r1
 800ba8e:	f00b f99f 	bl	8016dd0 <printf>
 800ba92:	f8b4 107b 	ldrh.w	r1, [r4, #123]	@ 0x7b
 800ba96:	4812      	ldr	r0, [pc, #72]	@ (800bae0 <RDMDeviceResponder::Print()+0x8c>)
 800ba98:	ba49      	rev16	r1, r1
 800ba9a:	b289      	uxth	r1, r1
 800ba9c:	3508      	adds	r5, #8
 800ba9e:	f00b f997 	bl	8016dd0 <printf>
 800baa2:	9500      	str	r5, [sp, #0]
 800baa4:	f894 207e 	ldrb.w	r2, [r4, #126]	@ 0x7e
 800baa8:	f894 107d 	ldrb.w	r1, [r4, #125]	@ 0x7d
 800baac:	480d      	ldr	r0, [pc, #52]	@ (800bae4 <RDMDeviceResponder::Print()+0x90>)
 800baae:	b2f3      	uxtb	r3, r6
 800bab0:	f00b f98e 	bl	8016dd0 <printf>
 800bab4:	f8b4 1081 	ldrh.w	r1, [r4, #129]	@ 0x81
 800bab8:	480b      	ldr	r0, [pc, #44]	@ (800bae8 <RDMDeviceResponder::Print()+0x94>)
 800baba:	ba49      	rev16	r1, r1
 800babc:	b289      	uxth	r1, r1
 800babe:	f00b f987 	bl	8016dd0 <printf>
 800bac2:	f894 1083 	ldrb.w	r1, [r4, #131]	@ 0x83
 800bac6:	4809      	ldr	r0, [pc, #36]	@ (800baec <RDMDeviceResponder::Print()+0x98>)
 800bac8:	b002      	add	sp, #8
 800baca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bace:	f00b b97f 	b.w	8016dd0 <printf>
 800bad2:	bf00      	nop
 800bad4:	080179bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, fp, ip, sp, lr}
 800bad8:	080179d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, ip, sp, lr}
 800badc:	080179f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, fp, ip, sp, lr}
 800bae0:	08017a09 	stmdaeq	r1, {r0, r3, r9, fp, ip, sp, lr}
 800bae4:	08017a21 	stmdaeq	r1, {r0, r5, r9, fp, ip, sp, lr}
 800bae8:	08017a3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, fp, ip, sp, lr}
 800baec:	08017a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, sp, lr}

0800baf0 <memcpy.isra.0>:
 800baf0:	440a      	add	r2, r1
 800baf2:	4291      	cmp	r1, r2
 800baf4:	d100      	bne.n	800baf8 <memcpy.isra.0+0x8>
 800baf6:	4770      	bx	lr
 800baf8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bafc:	f800 3b01 	strb.w	r3, [r0], #1
 800bb00:	e7f7      	b.n	800baf2 <memcpy.isra.0+0x2>

0800bb02 <memcmp>:
 800bb02:	b510      	push	{r4, lr}
 800bb04:	3901      	subs	r1, #1
 800bb06:	4402      	add	r2, r0
 800bb08:	4290      	cmp	r0, r2
 800bb0a:	d101      	bne.n	800bb10 <memcmp+0xe>
 800bb0c:	2000      	movs	r0, #0
 800bb0e:	e005      	b.n	800bb1c <memcmp+0x1a>
 800bb10:	7803      	ldrb	r3, [r0, #0]
 800bb12:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800bb16:	42a3      	cmp	r3, r4
 800bb18:	d001      	beq.n	800bb1e <memcmp+0x1c>
 800bb1a:	1b18      	subs	r0, r3, r4
 800bb1c:	bd10      	pop	{r4, pc}
 800bb1e:	3001      	adds	r0, #1
 800bb20:	e7f2      	b.n	800bb08 <memcmp+0x6>
	...

0800bb24 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800bb24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb28:	790c      	ldrb	r4, [r1, #4]
 800bb2a:	f890 3052 	ldrb.w	r3, [r0, #82]	@ 0x52
 800bb2e:	6809      	ldr	r1, [r1, #0]
 800bb30:	2c20      	cmp	r4, #32
 800bb32:	b086      	sub	sp, #24
 800bb34:	4605      	mov	r5, r0
 800bb36:	bf28      	it	cs
 800bb38:	2420      	movcs	r4, #32
 800bb3a:	b313      	cbz	r3, 800bb82 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x5e>
 800bb3c:	f100 0820 	add.w	r8, r0, #32
 800bb40:	4622      	mov	r2, r4
 800bb42:	4640      	mov	r0, r8
 800bb44:	f7ff ffd4 	bl	800baf0 <memcpy.isra.0>
 800bb48:	2700      	movs	r7, #0
 800bb4a:	f885 4050 	strb.w	r4, [r5, #80]	@ 0x50
 800bb4e:	2501      	movs	r5, #1
 800bb50:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800bb54:	4e0e      	ldr	r6, [pc, #56]	@ (800bb90 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6c>)
 800bb56:	9400      	str	r4, [sp, #0]
 800bb58:	6830      	ldr	r0, [r6, #0]
 800bb5a:	f88d 4017 	strb.w	r4, [sp, #23]
 800bb5e:	4643      	mov	r3, r8
 800bb60:	2204      	movs	r2, #4
 800bb62:	2109      	movs	r1, #9
 800bb64:	f007 fc38 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bb68:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800bb6c:	9500      	str	r5, [sp, #0]
 800bb6e:	6830      	ldr	r0, [r6, #0]
 800bb70:	f10d 0317 	add.w	r3, sp, #23
 800bb74:	2224      	movs	r2, #36	@ 0x24
 800bb76:	2109      	movs	r1, #9
 800bb78:	f007 fc2e 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bb7c:	b006      	add	sp, #24
 800bb7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb82:	4622      	mov	r2, r4
 800bb84:	f7ff ffb4 	bl	800baf0 <memcpy.isra.0>
 800bb88:	f885 4051 	strb.w	r4, [r5, #81]	@ 0x51
 800bb8c:	e7f6      	b.n	800bb7c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x58>
 800bb8e:	bf00      	nop
 800bb90:	20009bfc 	strdcs	r9, [r0], -ip

0800bb94 <RDMDeviceResponder::SetFactoryDefaults()>:
 800bb94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb96:	4604      	mov	r4, r0
 800bb98:	4669      	mov	r1, sp
 800bb9a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800bb9e:	f88d 3004 	strb.w	r3, [sp, #4]
 800bba2:	3004      	adds	r0, #4
 800bba4:	9000      	str	r0, [sp, #0]
 800bba6:	f06f 0522 	mvn.w	r5, #34	@ 0x22
 800bbaa:	f7ff ffbb 	bl	800bb24 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bbae:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800bbb2:	f894 1054 	ldrb.w	r1, [r4, #84]	@ 0x54
 800bbb6:	f104 0223 	add.w	r2, r4, #35	@ 0x23
 800bbba:	1b2d      	subs	r5, r5, r4
 800bbbc:	18a8      	adds	r0, r5, r2
 800bbbe:	4288      	cmp	r0, r1
 800bbc0:	d361      	bcc.n	800bc86 <RDMDeviceResponder::SetFactoryDefaults()+0xf2>
 800bbc2:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 800bbc6:	2301      	movs	r3, #1
 800bbc8:	f884 307d 	strb.w	r3, [r4, #125]	@ 0x7d
 800bbcc:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800bbce:	681b      	ldr	r3, [r3, #0]
 800bbd0:	685d      	ldr	r5, [r3, #4]
 800bbd2:	b1f5      	cbz	r5, 800bc12 <RDMDeviceResponder::SetFactoryDefaults()+0x7e>
 800bbd4:	682b      	ldr	r3, [r5, #0]
 800bbd6:	4628      	mov	r0, r5
 800bbd8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bbda:	4798      	blx	r3
 800bbdc:	0a00      	lsrs	r0, r0, #8
 800bbde:	f884 007b 	strb.w	r0, [r4, #123]	@ 0x7b
 800bbe2:	682b      	ldr	r3, [r5, #0]
 800bbe4:	4628      	mov	r0, r5
 800bbe6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bbe8:	4798      	blx	r3
 800bbea:	f884 007c 	strb.w	r0, [r4, #124]	@ 0x7c
 800bbee:	682b      	ldr	r3, [r5, #0]
 800bbf0:	4628      	mov	r0, r5
 800bbf2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bbf4:	4798      	blx	r3
 800bbf6:	0a00      	lsrs	r0, r0, #8
 800bbf8:	f884 007f 	strb.w	r0, [r4, #127]	@ 0x7f
 800bbfc:	682b      	ldr	r3, [r5, #0]
 800bbfe:	4628      	mov	r0, r5
 800bc00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bc02:	4798      	blx	r3
 800bc04:	6823      	ldr	r3, [r4, #0]
 800bc06:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
 800bc0a:	689b      	ldr	r3, [r3, #8]
 800bc0c:	4629      	mov	r1, r5
 800bc0e:	4620      	mov	r0, r4
 800bc10:	4798      	blx	r3
 800bc12:	f8b4 509c 	ldrh.w	r5, [r4, #156]	@ 0x9c
 800bc16:	1e6b      	subs	r3, r5, #1
 800bc18:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bc1c:	d217      	bcs.n	800bc4e <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800bc1e:	f894 307d 	ldrb.w	r3, [r4, #125]	@ 0x7d
 800bc22:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 800bc24:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800bc28:	3b01      	subs	r3, #1
 800bc2a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bc2e:	6858      	ldr	r0, [r3, #4]
 800bc30:	b168      	cbz	r0, 800bc4e <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800bc32:	6803      	ldr	r3, [r0, #0]
 800bc34:	4629      	mov	r1, r5
 800bc36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc38:	4798      	blx	r3
 800bc3a:	b120      	cbz	r0, 800bc46 <RDMDeviceResponder::SetFactoryDefaults()+0xb2>
 800bc3c:	0a2b      	lsrs	r3, r5, #8
 800bc3e:	f884 307f 	strb.w	r3, [r4, #127]	@ 0x7f
 800bc42:	f884 5080 	strb.w	r5, [r4, #128]	@ 0x80
 800bc46:	6823      	ldr	r3, [r4, #0]
 800bc48:	4620      	mov	r0, r4
 800bc4a:	68db      	ldr	r3, [r3, #12]
 800bc4c:	4798      	blx	r3
 800bc4e:	f104 0171 	add.w	r1, r4, #113	@ 0x71
 800bc52:	2213      	movs	r2, #19
 800bc54:	f104 0084 	add.w	r0, r4, #132	@ 0x84
 800bc58:	f7ff ff4a 	bl	800baf0 <memcpy.isra.0>
 800bc5c:	2601      	movs	r6, #1
 800bc5e:	2100      	movs	r1, #0
 800bc60:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 800bc64:	4299      	cmp	r1, r3
 800bc66:	d313      	bcc.n	800bc90 <RDMDeviceResponder::SetFactoryDefaults()+0xfc>
 800bc68:	f894 3080 	ldrb.w	r3, [r4, #128]	@ 0x80
 800bc6c:	f894 207d 	ldrb.w	r2, [r4, #125]	@ 0x7d
 800bc70:	4413      	add	r3, r2
 800bc72:	f8a4 309a 	strh.w	r3, [r4, #154]	@ 0x9a
 800bc76:	2301      	movs	r3, #1
 800bc78:	f884 3099 	strb.w	r3, [r4, #153]	@ 0x99
 800bc7c:	b002      	add	sp, #8
 800bc7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc82:	f7fe b967 	b.w	8009f54 <rdm::device::responder::factorydefaults()>
 800bc86:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bc8a:	4403      	add	r3, r0
 800bc8c:	b29b      	uxth	r3, r3
 800bc8e:	e795      	b.n	800bbbc <RDMDeviceResponder::SetFactoryDefaults()+0x28>
 800bc90:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800bc92:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bc96:	b193      	cbz	r3, 800bcbe <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800bc98:	7a1a      	ldrb	r2, [r3, #8]
 800bc9a:	b982      	cbnz	r2, 800bcbe <RDMDeviceResponder::SetFactoryDefaults()+0x12a>
 800bc9c:	f103 0015 	add.w	r0, r3, #21
 800bca0:	f890 5023 	ldrb.w	r5, [r0, #35]	@ 0x23
 800bca4:	b125      	cbz	r5, 800bcb0 <RDMDeviceResponder::SetFactoryDefaults()+0x11c>
 800bca6:	3201      	adds	r2, #1
 800bca8:	2a20      	cmp	r2, #32
 800bcaa:	f800 5f01 	strb.w	r5, [r0, #1]!
 800bcae:	d1f7      	bne.n	800bca0 <RDMDeviceResponder::SetFactoryDefaults()+0x10c>
 800bcb0:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800bcb4:	899a      	ldrh	r2, [r3, #12]
 800bcb6:	825a      	strh	r2, [r3, #18]
 800bcb8:	7b9a      	ldrb	r2, [r3, #14]
 800bcba:	751a      	strb	r2, [r3, #20]
 800bcbc:	721e      	strb	r6, [r3, #8]
 800bcbe:	3101      	adds	r1, #1
 800bcc0:	e7ce      	b.n	800bc60 <RDMDeviceResponder::SetFactoryDefaults()+0xcc>

0800bcc2 <RDMHandler::RDMHandler(bool)>:
 800bcc2:	2200      	movs	r2, #0
 800bcc4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800bcc8:	7001      	strb	r1, [r0, #0]
 800bcca:	7042      	strb	r2, [r0, #1]
 800bccc:	4770      	bx	lr

0800bcce <RDMHandler::HandleString(char const*, unsigned long)>:
 800bcce:	6883      	ldr	r3, [r0, #8]
 800bcd0:	f803 2f17 	strb.w	r2, [r3, #23]!
 800bcd4:	440a      	add	r2, r1
 800bcd6:	4291      	cmp	r1, r2
 800bcd8:	d100      	bne.n	800bcdc <RDMHandler::HandleString(char const*, unsigned long)+0xe>
 800bcda:	4770      	bx	lr
 800bcdc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800bce0:	f803 0f01 	strb.w	r0, [r3, #1]!
 800bce4:	e7f7      	b.n	800bcd6 <RDMHandler::HandleString(char const*, unsigned long)+0x8>
	...

0800bce8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800bce8:	b570      	push	{r4, r5, r6, lr}
 800bcea:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800bcee:	25cc      	movs	r5, #204	@ 0xcc
 800bcf0:	701d      	strb	r5, [r3, #0]
 800bcf2:	7825      	ldrb	r5, [r4, #0]
 800bcf4:	705d      	strb	r5, [r3, #1]
 800bcf6:	7ba5      	ldrb	r5, [r4, #14]
 800bcf8:	73dd      	strb	r5, [r3, #15]
 800bcfa:	2500      	movs	r5, #0
 800bcfc:	745d      	strb	r5, [r3, #17]
 800bcfe:	7c65      	ldrb	r5, [r4, #17]
 800bd00:	749d      	strb	r5, [r3, #18]
 800bd02:	7ca5      	ldrb	r5, [r4, #18]
 800bd04:	74dd      	strb	r5, [r3, #19]
 800bd06:	7ce5      	ldrb	r5, [r4, #19]
 800bd08:	3501      	adds	r5, #1
 800bd0a:	751d      	strb	r5, [r3, #20]
 800bd0c:	7d25      	ldrb	r5, [r4, #20]
 800bd0e:	755d      	strb	r5, [r3, #21]
 800bd10:	7d65      	ldrb	r5, [r4, #21]
 800bd12:	759d      	strb	r5, [r3, #22]
 800bd14:	b119      	cbz	r1, 800bd1e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800bd16:	1e4d      	subs	r5, r1, #1
 800bd18:	2d01      	cmp	r5, #1
 800bd1a:	d91f      	bls.n	800bd5c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x74>
 800bd1c:	bd70      	pop	{r4, r5, r6, pc}
 800bd1e:	7dda      	ldrb	r2, [r3, #23]
 800bd20:	7419      	strb	r1, [r3, #16]
 800bd22:	3218      	adds	r2, #24
 800bd24:	709a      	strb	r2, [r3, #2]
 800bd26:	4a14      	ldr	r2, [pc, #80]	@ (800bd78 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x90>)
 800bd28:	6812      	ldr	r2, [r2, #0]
 800bd2a:	1de1      	adds	r1, r4, #7
 800bd2c:	1c9d      	adds	r5, r3, #2
 800bd2e:	3249      	adds	r2, #73	@ 0x49
 800bd30:	340d      	adds	r4, #13
 800bd32:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800bd36:	f805 6f01 	strb.w	r6, [r5, #1]!
 800bd3a:	42a1      	cmp	r1, r4
 800bd3c:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800bd40:	71ae      	strb	r6, [r5, #6]
 800bd42:	d1f6      	bne.n	800bd32 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800bd44:	2200      	movs	r2, #0
 800bd46:	6884      	ldr	r4, [r0, #8]
 800bd48:	7899      	ldrb	r1, [r3, #2]
 800bd4a:	4613      	mov	r3, r2
 800bd4c:	4291      	cmp	r1, r2
 800bd4e:	d80e      	bhi.n	800bd6e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x86>
 800bd50:	0a1d      	lsrs	r5, r3, #8
 800bd52:	54a5      	strb	r5, [r4, r2]
 800bd54:	6882      	ldr	r2, [r0, #8]
 800bd56:	440a      	add	r2, r1
 800bd58:	7053      	strb	r3, [r2, #1]
 800bd5a:	e7df      	b.n	800bd1c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800bd5c:	7419      	strb	r1, [r3, #16]
 800bd5e:	2102      	movs	r1, #2
 800bd60:	251a      	movs	r5, #26
 800bd62:	75d9      	strb	r1, [r3, #23]
 800bd64:	0a11      	lsrs	r1, r2, #8
 800bd66:	709d      	strb	r5, [r3, #2]
 800bd68:	7619      	strb	r1, [r3, #24]
 800bd6a:	765a      	strb	r2, [r3, #25]
 800bd6c:	e7db      	b.n	800bd26 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800bd6e:	5ca5      	ldrb	r5, [r4, r2]
 800bd70:	442b      	add	r3, r5
 800bd72:	b29b      	uxth	r3, r3
 800bd74:	3201      	adds	r2, #1
 800bd76:	e7e9      	b.n	800bd4c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800bd78:	200096ac 	andcs	r9, r0, ip, lsr #13

0800bd7c <RDMHandler::RespondMessageAck()>:
 800bd7c:	2200      	movs	r2, #0
 800bd7e:	4611      	mov	r1, r2
 800bd80:	f7ff bfb2 	b.w	800bce8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bd84 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800bd84:	4b1c      	ldr	r3, [pc, #112]	@ (800bdf8 <RDMHandler::GetDeviceInfo(unsigned short)+0x74>)
 800bd86:	b510      	push	{r4, lr}
 800bd88:	681b      	ldr	r3, [r3, #0]
 800bd8a:	4604      	mov	r4, r0
 800bd8c:	b351      	cbz	r1, 800bde4 <RDMHandler::GetDeviceInfo(unsigned short)+0x60>
 800bd8e:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800bd92:	3901      	subs	r1, #1
 800bd94:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800bd96:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800bd9a:	8a11      	ldrh	r1, [r2, #16]
 800bd9c:	0a09      	lsrs	r1, r1, #8
 800bd9e:	f883 108e 	strb.w	r1, [r3, #142]	@ 0x8e
 800bda2:	8a11      	ldrh	r1, [r2, #16]
 800bda4:	f883 108f 	strb.w	r1, [r3, #143]	@ 0x8f
 800bda8:	7d11      	ldrb	r1, [r2, #20]
 800bdaa:	f883 1090 	strb.w	r1, [r3, #144]	@ 0x90
 800bdae:	7d51      	ldrb	r1, [r2, #21]
 800bdb0:	f883 1091 	strb.w	r1, [r3, #145]	@ 0x91
 800bdb4:	8a51      	ldrh	r1, [r2, #18]
 800bdb6:	0a09      	lsrs	r1, r1, #8
 800bdb8:	f883 1092 	strb.w	r1, [r3, #146]	@ 0x92
 800bdbc:	8a51      	ldrh	r1, [r2, #18]
 800bdbe:	f883 1093 	strb.w	r1, [r3, #147]	@ 0x93
 800bdc2:	f892 2037 	ldrb.w	r2, [r2, #55]	@ 0x37
 800bdc6:	f883 2096 	strb.w	r2, [r3, #150]	@ 0x96
 800bdca:	f103 0184 	add.w	r1, r3, #132	@ 0x84
 800bdce:	68a0      	ldr	r0, [r4, #8]
 800bdd0:	2213      	movs	r2, #19
 800bdd2:	75c2      	strb	r2, [r0, #23]
 800bdd4:	3018      	adds	r0, #24
 800bdd6:	f7ff fe8b 	bl	800baf0 <memcpy.isra.0>
 800bdda:	4620      	mov	r0, r4
 800bddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bde0:	f7ff bfcc 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bde4:	f8b3 2044 	ldrh.w	r2, [r3, #68]	@ 0x44
 800bde8:	f883 2076 	strb.w	r2, [r3, #118]	@ 0x76
 800bdec:	0a11      	lsrs	r1, r2, #8
 800bdee:	f883 1075 	strb.w	r1, [r3, #117]	@ 0x75
 800bdf2:	f103 0171 	add.w	r1, r3, #113	@ 0x71
 800bdf6:	e7ea      	b.n	800bdce <RDMHandler::GetDeviceInfo(unsigned short)+0x4a>
 800bdf8:	200096ac 	andcs	r9, r0, ip, lsr #13

0800bdfc <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800bdfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be00:	6887      	ldr	r7, [r0, #8]
 800be02:	2301      	movs	r3, #1
 800be04:	75fb      	strb	r3, [r7, #23]
 800be06:	4b2c      	ldr	r3, [pc, #176]	@ (800beb8 <RDMHandler::GetFactoryDefaults(unsigned short)+0xbc>)
 800be08:	681b      	ldr	r3, [r3, #0]
 800be0a:	f893 1099 	ldrb.w	r1, [r3, #153]	@ 0x99
 800be0e:	b309      	cbz	r1, 800be54 <RDMHandler::GetFactoryDefaults(unsigned short)+0x58>
 800be10:	f06f 0e22 	mvn.w	lr, #34	@ 0x22
 800be14:	f8b3 5048 	ldrh.w	r5, [r3, #72]	@ 0x48
 800be18:	f893 2055 	ldrb.w	r2, [r3, #85]	@ 0x55
 800be1c:	f893 c054 	ldrb.w	ip, [r3, #84]	@ 0x54
 800be20:	f103 0423 	add.w	r4, r3, #35	@ 0x23
 800be24:	ebae 0e03 	sub.w	lr, lr, r3
 800be28:	eb0e 0604 	add.w	r6, lr, r4
 800be2c:	45b4      	cmp	ip, r6
 800be2e:	d813      	bhi.n	800be58 <RDMHandler::GetFactoryDefaults(unsigned short)+0x5c>
 800be30:	4295      	cmp	r5, r2
 800be32:	d130      	bne.n	800be96 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800be34:	f893 2080 	ldrb.w	r2, [r3, #128]	@ 0x80
 800be38:	f893 507d 	ldrb.w	r5, [r3, #125]	@ 0x7d
 800be3c:	f8b3 409a 	ldrh.w	r4, [r3, #154]	@ 0x9a
 800be40:	442a      	add	r2, r5
 800be42:	4294      	cmp	r4, r2
 800be44:	d127      	bne.n	800be96 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800be46:	f8b3 c064 	ldrh.w	ip, [r3, #100]	@ 0x64
 800be4a:	2500      	movs	r5, #0
 800be4c:	f06f 0e14 	mvn.w	lr, #20
 800be50:	4565      	cmp	r5, ip
 800be52:	d306      	bcc.n	800be62 <RDMHandler::GetFactoryDefaults(unsigned short)+0x66>
 800be54:	460b      	mov	r3, r1
 800be56:	e022      	b.n	800be9e <RDMHandler::GetFactoryDefaults(unsigned short)+0xa2>
 800be58:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 800be5c:	4432      	add	r2, r6
 800be5e:	b292      	uxth	r2, r2
 800be60:	e7e2      	b.n	800be28 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800be62:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800be64:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800be68:	b31a      	cbz	r2, 800beb2 <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800be6a:	7a14      	ldrb	r4, [r2, #8]
 800be6c:	b19c      	cbz	r4, 800be96 <RDMHandler::GetFactoryDefaults(unsigned short)+0x9a>
 800be6e:	7d16      	ldrb	r6, [r2, #20]
 800be70:	8a54      	ldrh	r4, [r2, #18]
 800be72:	f8b2 800a 	ldrh.w	r8, [r2, #10]
 800be76:	f892 9036 	ldrb.w	r9, [r2, #54]	@ 0x36
 800be7a:	4434      	add	r4, r6
 800be7c:	b2a4      	uxth	r4, r4
 800be7e:	f102 0615 	add.w	r6, r2, #21
 800be82:	ebae 0a02 	sub.w	sl, lr, r2
 800be86:	eb0a 0b06 	add.w	fp, sl, r6
 800be8a:	45cb      	cmp	fp, r9
 800be8c:	d30c      	bcc.n	800bea8 <RDMHandler::GetFactoryDefaults(unsigned short)+0xac>
 800be8e:	45a0      	cmp	r8, r4
 800be90:	d00f      	beq.n	800beb2 <RDMHandler::GetFactoryDefaults(unsigned short)+0xb6>
 800be92:	2100      	movs	r1, #0
 800be94:	7211      	strb	r1, [r2, #8]
 800be96:	2200      	movs	r2, #0
 800be98:	f883 2099 	strb.w	r2, [r3, #153]	@ 0x99
 800be9c:	4613      	mov	r3, r2
 800be9e:	763b      	strb	r3, [r7, #24]
 800bea0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bea4:	f7ff bf6a 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bea8:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 800beac:	445c      	add	r4, fp
 800beae:	b2a4      	uxth	r4, r4
 800beb0:	e7e9      	b.n	800be86 <RDMHandler::GetFactoryDefaults(unsigned short)+0x8a>
 800beb2:	3501      	adds	r5, #1
 800beb4:	e7cc      	b.n	800be50 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800beb6:	bf00      	nop
 800beb8:	200096ac 	andcs	r9, r0, ip, lsr #13

0800bebc <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800bebc:	b510      	push	{r4, lr}
 800bebe:	4905      	ldr	r1, [pc, #20]	@ (800bed4 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800bec0:	4604      	mov	r4, r0
 800bec2:	220e      	movs	r2, #14
 800bec4:	f7ff ff03 	bl	800bcce <RDMHandler::HandleString(char const*, unsigned long)>
 800bec8:	4620      	mov	r0, r4
 800beca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bece:	f7ff bf55 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bed2:	bf00      	nop
 800bed4:	0801785f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}

0800bed8 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800bed8:	4b0d      	ldr	r3, [pc, #52]	@ (800bf10 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800beda:	b510      	push	{r4, lr}
 800bedc:	681b      	ldr	r3, [r3, #0]
 800bede:	4604      	mov	r4, r0
 800bee0:	b189      	cbz	r1, 800bf06 <RDMHandler::GetDeviceLabel(unsigned short)+0x2e>
 800bee2:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800bee6:	3901      	subs	r1, #1
 800bee8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800beea:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800beee:	f893 2036 	ldrb.w	r2, [r3, #54]	@ 0x36
 800bef2:	f103 0116 	add.w	r1, r3, #22
 800bef6:	4620      	mov	r0, r4
 800bef8:	f7ff fee9 	bl	800bcce <RDMHandler::HandleString(char const*, unsigned long)>
 800befc:	4620      	mov	r0, r4
 800befe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf02:	f7ff bf3b 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bf06:	f893 2054 	ldrb.w	r2, [r3, #84]	@ 0x54
 800bf0a:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 800bf0e:	e7f2      	b.n	800bef6 <RDMHandler::GetDeviceLabel(unsigned short)+0x1e>
 800bf10:	200096ac 	andcs	r9, r0, ip, lsr #13

0800bf14 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800bf14:	6883      	ldr	r3, [r0, #8]
 800bf16:	2201      	movs	r2, #1
 800bf18:	75da      	strb	r2, [r3, #23]
 800bf1a:	4a02      	ldr	r2, [pc, #8]	@ (800bf24 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bf1c:	7812      	ldrb	r2, [r2, #0]
 800bf1e:	761a      	strb	r2, [r3, #24]
 800bf20:	f7ff bf2c 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bf24:	200096b5 			@ <UNDEFINED> instruction: 0x200096b5

0800bf28 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800bf28:	4b0a      	ldr	r3, [pc, #40]	@ (800bf54 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800bf2a:	b510      	push	{r4, lr}
 800bf2c:	4619      	mov	r1, r3
 800bf2e:	4604      	mov	r4, r0
 800bf30:	461a      	mov	r2, r3
 800bf32:	3301      	adds	r3, #1
 800bf34:	7810      	ldrb	r0, [r2, #0]
 800bf36:	2800      	cmp	r0, #0
 800bf38:	d1fa      	bne.n	800bf30 <RDMHandler::GetManufacturerLabel(unsigned short)+0x8>
 800bf3a:	1a52      	subs	r2, r2, r1
 800bf3c:	2a20      	cmp	r2, #32
 800bf3e:	4620      	mov	r0, r4
 800bf40:	4904      	ldr	r1, [pc, #16]	@ (800bf54 <RDMHandler::GetManufacturerLabel(unsigned short)+0x2c>)
 800bf42:	bf28      	it	cs
 800bf44:	2220      	movcs	r2, #32
 800bf46:	f7ff fec2 	bl	800bcce <RDMHandler::HandleString(char const*, unsigned long)>
 800bf4a:	4620      	mov	r0, r4
 800bf4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf50:	f7ff bf14 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bf54:	08019f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, ip, pc}

0800bf58 <RDMHandler::RespondMessageNack(unsigned short)>:
 800bf58:	460a      	mov	r2, r1
 800bf5a:	2102      	movs	r1, #2
 800bf5c:	f7ff bec4 	b.w	800bce8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bf60 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800bf60:	b510      	push	{r4, lr}
 800bf62:	6843      	ldr	r3, [r0, #4]
 800bf64:	7d9a      	ldrb	r2, [r3, #22]
 800bf66:	2a01      	cmp	r2, #1
 800bf68:	4604      	mov	r4, r0
 800bf6a:	d004      	beq.n	800bf76 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bf6c:	2101      	movs	r1, #1
 800bf6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf72:	f7ff bff1 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800bf76:	7ddb      	ldrb	r3, [r3, #23]
 800bf78:	2b01      	cmp	r3, #1
 800bf7a:	d003      	beq.n	800bf84 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bf7c:	2bff      	cmp	r3, #255	@ 0xff
 800bf7e:	d001      	beq.n	800bf84 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bf80:	2106      	movs	r1, #6
 800bf82:	e7f4      	b.n	800bf6e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bf84:	68a2      	ldr	r2, [r4, #8]
 800bf86:	2100      	movs	r1, #0
 800bf88:	2bff      	cmp	r3, #255	@ 0xff
 800bf8a:	75d1      	strb	r1, [r2, #23]
 800bf8c:	d102      	bne.n	800bf94 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bf8e:	2104      	movs	r1, #4
 800bf90:	4620      	mov	r0, r4
 800bf92:	e7ec      	b.n	800bf6e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bf94:	4b03      	ldr	r3, [pc, #12]	@ (800bfa4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bf96:	6818      	ldr	r0, [r3, #0]
 800bf98:	f008 fc4a 	bl	8014830 <Hardware::Reboot()>
 800bf9c:	2800      	cmp	r0, #0
 800bf9e:	d0f6      	beq.n	800bf8e <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bfa0:	bd10      	pop	{r4, pc}
 800bfa2:	bf00      	nop
 800bfa4:	20009d00 	andcs	r9, r0, r0, lsl #26

0800bfa8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bfa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bfaa:	6843      	ldr	r3, [r0, #4]
 800bfac:	7d9a      	ldrb	r2, [r3, #22]
 800bfae:	2a01      	cmp	r2, #1
 800bfb0:	4604      	mov	r4, r0
 800bfb2:	460d      	mov	r5, r1
 800bfb4:	d004      	beq.n	800bfc0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bfb6:	2101      	movs	r1, #1
 800bfb8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bfbc:	f7ff bfcc 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800bfc0:	7ddb      	ldrb	r3, [r3, #23]
 800bfc2:	2b01      	cmp	r3, #1
 800bfc4:	d901      	bls.n	800bfca <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bfc6:	2106      	movs	r1, #6
 800bfc8:	e7f6      	b.n	800bfb8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bfca:	4912      	ldr	r1, [pc, #72]	@ (800c014 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bfcc:	4f12      	ldr	r7, [pc, #72]	@ (800c018 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bfce:	680e      	ldr	r6, [r1, #0]
 800bfd0:	4912      	ldr	r1, [pc, #72]	@ (800c01c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bfd2:	6808      	ldr	r0, [r1, #0]
 800bfd4:	4912      	ldr	r1, [pc, #72]	@ (800c020 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bfd6:	b98b      	cbnz	r3, 800bffc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x54>
 800bfd8:	700b      	strb	r3, [r1, #0]
 800bfda:	461a      	mov	r2, r3
 800bfdc:	2102      	movs	r1, #2
 800bfde:	f008 fa27 	bl	8014430 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800bfe2:	7839      	ldrb	r1, [r7, #0]
 800bfe4:	b111      	cbz	r1, 800bfec <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800bfe6:	4630      	mov	r0, r6
 800bfe8:	f000 f9a7 	bl	800c33a <RDMIdentify::Off(rdm::identify::Mode)>
 800bfec:	b98d      	cbnz	r5, 800c012 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6a>
 800bfee:	68a3      	ldr	r3, [r4, #8]
 800bff0:	75dd      	strb	r5, [r3, #23]
 800bff2:	4620      	mov	r0, r4
 800bff4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bff8:	f7ff bec0 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800bffc:	700a      	strb	r2, [r1, #0]
 800bffe:	2104      	movs	r1, #4
 800c000:	f008 fa16 	bl	8014430 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c004:	7839      	ldrb	r1, [r7, #0]
 800c006:	2900      	cmp	r1, #0
 800c008:	d0f0      	beq.n	800bfec <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800c00a:	4630      	mov	r0, r6
 800c00c:	f000 f994 	bl	800c338 <RDMIdentify::On(rdm::identify::Mode)>
 800c010:	e7ec      	b.n	800bfec <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x44>
 800c012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c014:	200096b0 			@ <UNDEFINED> instruction: 0x200096b0
 800c018:	200096b4 			@ <UNDEFINED> instruction: 0x200096b4
 800c01c:	20009d00 	andcs	r9, r0, r0, lsl #26
 800c020:	200096b5 			@ <UNDEFINED> instruction: 0x200096b5

0800c024 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800c024:	b538      	push	{r3, r4, r5, lr}
 800c026:	6843      	ldr	r3, [r0, #4]
 800c028:	7d9b      	ldrb	r3, [r3, #22]
 800c02a:	4604      	mov	r4, r0
 800c02c:	460d      	mov	r5, r1
 800c02e:	b123      	cbz	r3, 800c03a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800c030:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c034:	2101      	movs	r1, #1
 800c036:	f7ff bf8f 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c03a:	4b06      	ldr	r3, [pc, #24]	@ (800c054 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800c03c:	6818      	ldr	r0, [r3, #0]
 800c03e:	f7ff fda9 	bl	800bb94 <RDMDeviceResponder::SetFactoryDefaults()>
 800c042:	b935      	cbnz	r5, 800c052 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800c044:	68a3      	ldr	r3, [r4, #8]
 800c046:	75dd      	strb	r5, [r3, #23]
 800c048:	4620      	mov	r0, r4
 800c04a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c04e:	f7ff be95 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c052:	bd38      	pop	{r3, r4, r5, pc}
 800c054:	200096ac 	andcs	r9, r0, ip, lsr #13

0800c058 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800c058:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c05a:	6843      	ldr	r3, [r0, #4]
 800c05c:	460d      	mov	r5, r1
 800c05e:	7d99      	ldrb	r1, [r3, #22]
 800c060:	2920      	cmp	r1, #32
 800c062:	4604      	mov	r4, r0
 800c064:	d905      	bls.n	800c072 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1a>
 800c066:	2101      	movs	r1, #1
 800c068:	b003      	add	sp, #12
 800c06a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c06e:	f7ff bf73 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c072:	4817      	ldr	r0, [pc, #92]	@ (800c0d0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x78>)
 800c074:	6800      	ldr	r0, [r0, #0]
 800c076:	b302      	cbz	r2, 800c0ba <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x62>
 800c078:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800c07c:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800c07e:	3a01      	subs	r2, #1
 800c080:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800c084:	b1b9      	cbz	r1, 800c0b6 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x5e>
 800c086:	3316      	adds	r3, #22
 800c088:	f100 0615 	add.w	r6, r0, #21
 800c08c:	2200      	movs	r2, #0
 800c08e:	3201      	adds	r2, #1
 800c090:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800c094:	f806 7f01 	strb.w	r7, [r6, #1]!
 800c098:	2a20      	cmp	r2, #32
 800c09a:	d001      	beq.n	800c0a0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800c09c:	4291      	cmp	r1, r2
 800c09e:	d8f6      	bhi.n	800c08e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x36>
 800c0a0:	f880 2036 	strb.w	r2, [r0, #54]	@ 0x36
 800c0a4:	b995      	cbnz	r5, 800c0cc <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x74>
 800c0a6:	68a3      	ldr	r3, [r4, #8]
 800c0a8:	4620      	mov	r0, r4
 800c0aa:	75dd      	strb	r5, [r3, #23]
 800c0ac:	b003      	add	sp, #12
 800c0ae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c0b2:	f7ff be63 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c0b6:	460a      	mov	r2, r1
 800c0b8:	e7f2      	b.n	800c0a0 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
 800c0ba:	3317      	adds	r3, #23
 800c0bc:	f88d 1004 	strb.w	r1, [sp, #4]
 800c0c0:	3004      	adds	r0, #4
 800c0c2:	4669      	mov	r1, sp
 800c0c4:	9300      	str	r3, [sp, #0]
 800c0c6:	f7ff fd2d 	bl	800bb24 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c0ca:	e7eb      	b.n	800c0a4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4c>
 800c0cc:	b003      	add	sp, #12
 800c0ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c0d0:	200096ac 	andcs	r9, r0, ip, lsr #13

0800c0d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800c0d4:	b4f0      	push	{r4, r5, r6, r7}
 800c0d6:	4615      	mov	r5, r2
 800c0d8:	f005 04ef 	and.w	r4, r5, #239	@ 0xef
 800c0dc:	2c20      	cmp	r4, #32
 800c0de:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800c0e2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c0e6:	d003      	beq.n	800c0f0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800c0e8:	2105      	movs	r1, #5
 800c0ea:	bcf0      	pop	{r4, r5, r6, r7}
 800c0ec:	f7ff bf34 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c0f0:	4c28      	ldr	r4, [pc, #160]	@ (800c194 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>)
 800c0f2:	6824      	ldr	r4, [r4, #0]
 800c0f4:	88a4      	ldrh	r4, [r4, #4]
 800c0f6:	4294      	cmp	r4, r2
 800c0f8:	d205      	bcs.n	800c106 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800c0fa:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800c0fe:	42a2      	cmp	r2, r4
 800c100:	d001      	beq.n	800c106 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x32>
 800c102:	2109      	movs	r1, #9
 800c104:	e7f1      	b.n	800c0ea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c106:	4c24      	ldr	r4, [pc, #144]	@ (800c198 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc4>)
 800c108:	4f24      	ldr	r7, [pc, #144]	@ (800c19c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc8>)
 800c10a:	f8b4 c000 	ldrh.w	ip, [r4]
 800c10e:	459c      	cmp	ip, r3
 800c110:	d108      	bne.n	800c124 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x50>
 800c112:	f890 c000 	ldrb.w	ip, [r0]
 800c116:	7da7      	ldrb	r7, [r4, #22]
 800c118:	7de3      	ldrb	r3, [r4, #23]
 800c11a:	f1bc 0f00 	cmp.w	ip, #0
 800c11e:	d106      	bne.n	800c12e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5a>
 800c120:	b93b      	cbnz	r3, 800c132 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800c122:	e002      	b.n	800c12a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800c124:	3418      	adds	r4, #24
 800c126:	42bc      	cmp	r4, r7
 800c128:	d1ef      	bne.n	800c10a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800c12a:	2100      	movs	r1, #0
 800c12c:	e7dd      	b.n	800c0ea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c12e:	2f00      	cmp	r7, #0
 800c130:	d0fb      	beq.n	800c12a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x56>
 800c132:	2d20      	cmp	r5, #32
 800c134:	d11b      	bne.n	800c16e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x9a>
 800c136:	bb59      	cbnz	r1, 800c190 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xbc>
 800c138:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c13c:	429a      	cmp	r2, r3
 800c13e:	d0e0      	beq.n	800c102 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2e>
 800c140:	6863      	ldr	r3, [r4, #4]
 800c142:	b913      	cbnz	r3, 800c14a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x76>
 800c144:	68a1      	ldr	r1, [r4, #8]
 800c146:	07cd      	lsls	r5, r1, #31
 800c148:	d5ce      	bpl.n	800c0e8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800c14a:	7d21      	ldrb	r1, [r4, #20]
 800c14c:	42b1      	cmp	r1, r6
 800c14e:	d001      	beq.n	800c154 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x80>
 800c150:	2101      	movs	r1, #1
 800c152:	e7ca      	b.n	800c0ea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x16>
 800c154:	68a1      	ldr	r1, [r4, #8]
 800c156:	104d      	asrs	r5, r1, #1
 800c158:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800c15c:	07c9      	lsls	r1, r1, #31
 800c15e:	bf48      	it	mi
 800c160:	5941      	ldrmi	r1, [r0, r5]
 800c162:	4620      	mov	r0, r4
 800c164:	bf48      	it	mi
 800c166:	58cb      	ldrmi	r3, [r1, r3]
 800c168:	bcf0      	pop	{r4, r5, r6, r7}
 800c16a:	4611      	mov	r1, r2
 800c16c:	4718      	bx	r3
 800c16e:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800c172:	f003 0401 	and.w	r4, r3, #1
 800c176:	b90d      	cbnz	r5, 800c17c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xa8>
 800c178:	2c00      	cmp	r4, #0
 800c17a:	d0b5      	beq.n	800c0e8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14>
 800c17c:	105e      	asrs	r6, r3, #1
 800c17e:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800c182:	b10c      	cbz	r4, 800c188 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb4>
 800c184:	5980      	ldr	r0, [r0, r6]
 800c186:	5945      	ldr	r5, [r0, r5]
 800c188:	4618      	mov	r0, r3
 800c18a:	462b      	mov	r3, r5
 800c18c:	bcf0      	pop	{r4, r5, r6, r7}
 800c18e:	4718      	bx	r3
 800c190:	bcf0      	pop	{r4, r5, r6, r7}
 800c192:	4770      	bx	lr
 800c194:	200096bc 			@ <UNDEFINED> instruction: 0x200096bc
 800c198:	08019d58 	stmdaeq	r1, {r3, r4, r6, r8, sl, fp, ip, pc}
 800c19c:	08019f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip, pc}

0800c1a0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800c1a0:	23ff      	movs	r3, #255	@ 0xff
 800c1a2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1a6:	7013      	strb	r3, [r2, #0]
 800c1a8:	7bcb      	ldrb	r3, [r1, #15]
 800c1aa:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c1ae:	4607      	mov	r7, r0
 800c1b0:	468a      	mov	sl, r1
 800c1b2:	4614      	mov	r4, r2
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d079      	beq.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c1b8:	7c0b      	ldrb	r3, [r1, #16]
 800c1ba:	2b00      	cmp	r3, #0
 800c1bc:	d176      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c1be:	4b58      	ldr	r3, [pc, #352]	@ (800c320 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800c1c0:	1c8e      	adds	r6, r1, #2
 800c1c2:	2206      	movs	r2, #6
 800c1c4:	4957      	ldr	r1, [pc, #348]	@ (800c324 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800c1c6:	f8d3 8000 	ldr.w	r8, [r3]
 800c1ca:	4630      	mov	r0, r6
 800c1cc:	f7ff fc99 	bl	800bb02 <memcmp>
 800c1d0:	f108 094a 	add.w	r9, r8, #74	@ 0x4a
 800c1d4:	4605      	mov	r5, r0
 800c1d6:	2800      	cmp	r0, #0
 800c1d8:	d06b      	beq.n	800c2b2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800c1da:	4630      	mov	r0, r6
 800c1dc:	2202      	movs	r2, #2
 800c1de:	4649      	mov	r1, r9
 800c1e0:	f7ff fc8f 	bl	800bb02 <memcmp>
 800c1e4:	4606      	mov	r6, r0
 800c1e6:	2800      	cmp	r0, #0
 800c1e8:	d160      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c1ea:	f10a 0b04 	add.w	fp, sl, #4
 800c1ee:	494d      	ldr	r1, [pc, #308]	@ (800c324 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x184>)
 800c1f0:	2204      	movs	r2, #4
 800c1f2:	4658      	mov	r0, fp
 800c1f4:	f7ff fc85 	bl	800bb02 <memcmp>
 800c1f8:	4605      	mov	r5, r0
 800c1fa:	2800      	cmp	r0, #0
 800c1fc:	d059      	beq.n	800c2b2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x112>
 800c1fe:	f108 014c 	add.w	r1, r8, #76	@ 0x4c
 800c202:	2204      	movs	r2, #4
 800c204:	4658      	mov	r0, fp
 800c206:	f7ff fc7c 	bl	800bb02 <memcmp>
 800c20a:	fab0 f580 	clz	r5, r0
 800c20e:	096d      	lsrs	r5, r5, #5
 800c210:	4631      	mov	r1, r6
 800c212:	f89a 2013 	ldrb.w	r2, [sl, #19]
 800c216:	f8ba 3014 	ldrh.w	r3, [sl, #20]
 800c21a:	b90d      	cbnz	r5, 800c220 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x80>
 800c21c:	2900      	cmp	r1, #0
 800c21e:	d045      	beq.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c220:	2a10      	cmp	r2, #16
 800c222:	d16f      	bne.n	800c304 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x164>
 800c224:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c228:	d145      	bne.n	800c2b6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x116>
 800c22a:	787b      	ldrb	r3, [r7, #1]
 800c22c:	2b00      	cmp	r3, #0
 800c22e:	d13d      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c230:	2206      	movs	r2, #6
 800c232:	4649      	mov	r1, r9
 800c234:	f10a 0017 	add.w	r0, sl, #23
 800c238:	f7ff fc63 	bl	800bb02 <memcmp>
 800c23c:	2800      	cmp	r0, #0
 800c23e:	dc35      	bgt.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c240:	2206      	movs	r2, #6
 800c242:	f10a 011d 	add.w	r1, sl, #29
 800c246:	4648      	mov	r0, r9
 800c248:	f7ff fc5b 	bl	800bb02 <memcmp>
 800c24c:	2800      	cmp	r0, #0
 800c24e:	dc2d      	bgt.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c250:	23fe      	movs	r3, #254	@ 0xfe
 800c252:	7023      	strb	r3, [r4, #0]
 800c254:	7063      	strb	r3, [r4, #1]
 800c256:	70a3      	strb	r3, [r4, #2]
 800c258:	70e3      	strb	r3, [r4, #3]
 800c25a:	7123      	strb	r3, [r4, #4]
 800c25c:	7163      	strb	r3, [r4, #5]
 800c25e:	71a3      	strb	r3, [r4, #6]
 800c260:	23aa      	movs	r3, #170	@ 0xaa
 800c262:	71e3      	strb	r3, [r4, #7]
 800c264:	f108 0249 	add.w	r2, r8, #73	@ 0x49
 800c268:	4621      	mov	r1, r4
 800c26a:	f108 084f 	add.w	r8, r8, #79	@ 0x4f
 800c26e:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 800c272:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c276:	f060 0055 	orn	r0, r0, #85	@ 0x55
 800c27a:	7208      	strb	r0, [r1, #8]
 800c27c:	7810      	ldrb	r0, [r2, #0]
 800c27e:	f040 0055 	orr.w	r0, r0, #85	@ 0x55
 800c282:	7248      	strb	r0, [r1, #9]
 800c284:	7810      	ldrb	r0, [r2, #0]
 800c286:	4542      	cmp	r2, r8
 800c288:	4403      	add	r3, r0
 800c28a:	b29b      	uxth	r3, r3
 800c28c:	f101 0102 	add.w	r1, r1, #2
 800c290:	d1ef      	bne.n	800c272 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xd2>
 800c292:	0a1a      	lsrs	r2, r3, #8
 800c294:	f062 0155 	orn	r1, r2, #85	@ 0x55
 800c298:	f042 0255 	orr.w	r2, r2, #85	@ 0x55
 800c29c:	7562      	strb	r2, [r4, #21]
 800c29e:	f063 0255 	orn	r2, r3, #85	@ 0x55
 800c2a2:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 800c2a6:	7521      	strb	r1, [r4, #20]
 800c2a8:	75a2      	strb	r2, [r4, #22]
 800c2aa:	75e3      	strb	r3, [r4, #23]
 800c2ac:	b003      	add	sp, #12
 800c2ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2b2:	2101      	movs	r1, #1
 800c2b4:	e7ad      	b.n	800c212 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800c2b6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800c2ba:	d11a      	bne.n	800c2f2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x152>
 800c2bc:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800c2c0:	2b00      	cmp	r3, #0
 800c2c2:	d1f3      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c2c4:	707b      	strb	r3, [r7, #1]
 800c2c6:	2900      	cmp	r1, #0
 800c2c8:	d1f0      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c2ca:	2d00      	cmp	r5, #0
 800c2cc:	d0ee      	beq.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c2ce:	2302      	movs	r3, #2
 800c2d0:	75e3      	strb	r3, [r4, #23]
 800c2d2:	4b15      	ldr	r3, [pc, #84]	@ (800c328 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x188>)
 800c2d4:	7661      	strb	r1, [r4, #25]
 800c2d6:	681b      	ldr	r3, [r3, #0]
 800c2d8:	7621      	strb	r1, [r4, #24]
 800c2da:	889b      	ldrh	r3, [r3, #4]
 800c2dc:	3b00      	subs	r3, #0
 800c2de:	bf18      	it	ne
 800c2e0:	2301      	movne	r3, #1
 800c2e2:	005b      	lsls	r3, r3, #1
 800c2e4:	4638      	mov	r0, r7
 800c2e6:	7663      	strb	r3, [r4, #25]
 800c2e8:	b003      	add	sp, #12
 800c2ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2ee:	f7ff bd45 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c2f2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c2f6:	d1d9      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c2f8:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800c2fc:	2b00      	cmp	r3, #0
 800c2fe:	d1d5      	bne.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c300:	2301      	movs	r3, #1
 800c302:	e7df      	b.n	800c2c4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x124>
 800c304:	f8ba 0011 	ldrh.w	r0, [sl, #17]
 800c308:	ba40      	rev16	r0, r0
 800c30a:	b280      	uxth	r0, r0
 800c30c:	9001      	str	r0, [sp, #4]
 800c30e:	f89a 0016 	ldrb.w	r0, [sl, #22]
 800c312:	9000      	str	r0, [sp, #0]
 800c314:	ba5b      	rev16	r3, r3
 800c316:	b29b      	uxth	r3, r3
 800c318:	4638      	mov	r0, r7
 800c31a:	f7ff fedb 	bl	800c0d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800c31e:	e7c5      	b.n	800c2ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x10c>
 800c320:	200096ac 	andcs	r9, r0, ip, lsr #13
 800c324:	08019f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
 800c328:	200096bc 			@ <UNDEFINED> instruction: 0x200096bc

0800c32c <RDMIdentify::RDMIdentify()>:
 800c32c:	4b01      	ldr	r3, [pc, #4]	@ (800c334 <RDMIdentify::RDMIdentify()+0x8>)
 800c32e:	6018      	str	r0, [r3, #0]
 800c330:	4770      	bx	lr
 800c332:	bf00      	nop
 800c334:	200096b0 			@ <UNDEFINED> instruction: 0x200096b0

0800c338 <RDMIdentify::On(rdm::identify::Mode)>:
 800c338:	4770      	bx	lr

0800c33a <RDMIdentify::Off(rdm::identify::Mode)>:
 800c33a:	4770      	bx	lr

0800c33c <memcpy.isra.0>:
 800c33c:	440a      	add	r2, r1
 800c33e:	4291      	cmp	r1, r2
 800c340:	d100      	bne.n	800c344 <memcpy.isra.0+0x8>
 800c342:	4770      	bx	lr
 800c344:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c348:	f800 3b01 	strb.w	r3, [r0], #1
 800c34c:	e7f7      	b.n	800c33e <memcpy.isra.0+0x2>
	...

0800c350 <LLRPDevice::HandleRequestMessage()>:
 800c350:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c354:	4e43      	ldr	r6, [pc, #268]	@ (800c464 <LLRPDevice::HandleRequestMessage()+0x114>)
 800c356:	4f44      	ldr	r7, [pc, #272]	@ (800c468 <LLRPDevice::HandleRequestMessage()+0x118>)
 800c358:	6835      	ldr	r5, [r6, #0]
 800c35a:	6839      	ldr	r1, [r7, #0]
 800c35c:	f895 4042 	ldrb.w	r4, [r5, #66]	@ 0x42
 800c360:	f8b5 3043 	ldrh.w	r3, [r5, #67]	@ 0x43
 800c364:	0424      	lsls	r4, r4, #16
 800c366:	ba5b      	rev16	r3, r3
 800c368:	b089      	sub	sp, #36	@ 0x24
 800c36a:	b29b      	uxth	r3, r3
 800c36c:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
 800c370:	431c      	orrs	r4, r3
 800c372:	2206      	movs	r2, #6
 800c374:	314a      	adds	r1, #74	@ 0x4a
 800c376:	a802      	add	r0, sp, #8
 800c378:	f7ff ffe0 	bl	800c33c <memcpy.isra.0>
 800c37c:	2c12      	cmp	r4, #18
 800c37e:	d909      	bls.n	800c394 <LLRPDevice::HandleRequestMessage()+0x44>
 800c380:	f105 0954 	add.w	r9, r5, #84	@ 0x54
 800c384:	f04f 0800 	mov.w	r8, #0
 800c388:	3c12      	subs	r4, #18
 800c38a:	2306      	movs	r3, #6
 800c38c:	fbb4 f4f3 	udiv	r4, r4, r3
 800c390:	45a0      	cmp	r8, r4
 800c392:	d15b      	bne.n	800c44c <LLRPDevice::HandleRequestMessage()+0xfc>
 800c394:	2206      	movs	r2, #6
 800c396:	a902      	add	r1, sp, #8
 800c398:	f105 0046 	add.w	r0, r5, #70	@ 0x46
 800c39c:	f7ff fbb1 	bl	800bb02 <memcmp>
 800c3a0:	2800      	cmp	r0, #0
 800c3a2:	dc50      	bgt.n	800c446 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c3a4:	2206      	movs	r2, #6
 800c3a6:	f105 014c 	add.w	r1, r5, #76	@ 0x4c
 800c3aa:	a802      	add	r0, sp, #8
 800c3ac:	f7ff fba9 	bl	800bb02 <memcmp>
 800c3b0:	2800      	cmp	r0, #0
 800c3b2:	dc48      	bgt.n	800c446 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c3b4:	6834      	ldr	r4, [r6, #0]
 800c3b6:	2210      	movs	r2, #16
 800c3b8:	f104 0517 	add.w	r5, r4, #23
 800c3bc:	4629      	mov	r1, r5
 800c3be:	eb0d 0002 	add.w	r0, sp, r2
 800c3c2:	f7ff ffbb 	bl	800c33c <memcpy.isra.0>
 800c3c6:	2343      	movs	r3, #67	@ 0x43
 800c3c8:	74a3      	strb	r3, [r4, #18]
 800c3ca:	4b28      	ldr	r3, [pc, #160]	@ (800c46c <LLRPDevice::HandleRequestMessage()+0x11c>)
 800c3cc:	4628      	mov	r0, r5
 800c3ce:	6819      	ldr	r1, [r3, #0]
 800c3d0:	4d27      	ldr	r5, [pc, #156]	@ (800c470 <LLRPDevice::HandleRequestMessage()+0x120>)
 800c3d2:	2210      	movs	r2, #16
 800c3d4:	f7ff ffb2 	bl	800c33c <memcpy.isra.0>
 800c3d8:	232c      	movs	r3, #44	@ 0x2c
 800c3da:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800c3de:	2300      	movs	r3, #0
 800c3e0:	2210      	movs	r2, #16
 800c3e2:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800c3e6:	f884 302b 	strb.w	r3, [r4, #43]	@ 0x2b
 800c3ea:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800c3ee:	2302      	movs	r3, #2
 800c3f0:	eb0d 0102 	add.w	r1, sp, r2
 800c3f4:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800c3f8:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800c3fc:	f7ff ff9e 	bl	800c33c <memcpy.isra.0>
 800c400:	6839      	ldr	r1, [r7, #0]
 800c402:	2311      	movs	r3, #17
 800c404:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800c408:	2301      	movs	r3, #1
 800c40a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800c40e:	2206      	movs	r2, #6
 800c410:	314a      	adds	r1, #74	@ 0x4a
 800c412:	f104 0046 	add.w	r0, r4, #70	@ 0x46
 800c416:	f7ff ff91 	bl	800c33c <memcpy.isra.0>
 800c41a:	f104 004c 	add.w	r0, r4, #76	@ 0x4c
 800c41e:	2206      	movs	r2, #6
 800c420:	4629      	mov	r1, r5
 800c422:	f7ff ff8b 	bl	800c33c <memcpy.isra.0>
 800c426:	23ff      	movs	r3, #255	@ 0xff
 800c428:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 800c42c:	4b11      	ldr	r3, [pc, #68]	@ (800c474 <LLRPDevice::HandleRequestMessage()+0x124>)
 800c42e:	6818      	ldr	r0, [r3, #0]
 800c430:	f855 3c14 	ldr.w	r3, [r5, #-20]
 800c434:	b13b      	cbz	r3, 800c446 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c436:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800c43a:	9300      	str	r3, [sp, #0]
 800c43c:	2253      	movs	r2, #83	@ 0x53
 800c43e:	4b0e      	ldr	r3, [pc, #56]	@ (800c478 <LLRPDevice::HandleRequestMessage()+0x128>)
 800c440:	4621      	mov	r1, r4
 800c442:	f005 fbdd 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800c446:	b009      	add	sp, #36	@ 0x24
 800c448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c44c:	2206      	movs	r2, #6
 800c44e:	a902      	add	r1, sp, #8
 800c450:	4648      	mov	r0, r9
 800c452:	f7ff fb56 	bl	800bb02 <memcmp>
 800c456:	2800      	cmp	r0, #0
 800c458:	d0f5      	beq.n	800c446 <LLRPDevice::HandleRequestMessage()+0xf6>
 800c45a:	f109 0906 	add.w	r9, r9, #6
 800c45e:	f108 0801 	add.w	r8, r8, #1
 800c462:	e795      	b.n	800c390 <LLRPDevice::HandleRequestMessage()+0x40>
 800c464:	200097c4 	andcs	r9, r0, r4, asr #15
 800c468:	200096ac 	andcs	r9, r0, ip, lsr #13
 800c46c:	20009d00 	andcs	r9, r0, r0, lsl #26
 800c470:	20009b64 	andcs	r9, r0, r4, ror #22
 800c474:	200097cc 	andcs	r9, r0, ip, asr #15
 800c478:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800c47c <LLRPDevice::HandleRdmCommand()>:
 800c47c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c480:	4b21      	ldr	r3, [pc, #132]	@ (800c508 <LLRPDevice::HandleRdmCommand()+0x8c>)
 800c482:	4f22      	ldr	r7, [pc, #136]	@ (800c50c <LLRPDevice::HandleRdmCommand()+0x90>)
 800c484:	681c      	ldr	r4, [r3, #0]
 800c486:	f104 0946 	add.w	r9, r4, #70	@ 0x46
 800c48a:	b087      	sub	sp, #28
 800c48c:	463a      	mov	r2, r7
 800c48e:	4649      	mov	r1, r9
 800c490:	f7ff fe86 	bl	800c1a0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800c494:	783b      	ldrb	r3, [r7, #0]
 800c496:	2bcc      	cmp	r3, #204	@ 0xcc
 800c498:	d132      	bne.n	800c500 <LLRPDevice::HandleRdmCommand()+0x84>
 800c49a:	f104 0817 	add.w	r8, r4, #23
 800c49e:	2210      	movs	r2, #16
 800c4a0:	4641      	mov	r1, r8
 800c4a2:	a802      	add	r0, sp, #8
 800c4a4:	f7ff ff4a 	bl	800c33c <memcpy.isra.0>
 800c4a8:	78be      	ldrb	r6, [r7, #2]
 800c4aa:	4b19      	ldr	r3, [pc, #100]	@ (800c510 <LLRPDevice::HandleRdmCommand()+0x94>)
 800c4ac:	f106 0537 	add.w	r5, r6, #55	@ 0x37
 800c4b0:	b2ed      	uxtb	r5, r5
 800c4b2:	6819      	ldr	r1, [r3, #0]
 800c4b4:	74a5      	strb	r5, [r4, #18]
 800c4b6:	2210      	movs	r2, #16
 800c4b8:	4640      	mov	r0, r8
 800c4ba:	f7ff ff3f 	bl	800c33c <memcpy.isra.0>
 800c4be:	f106 0320 	add.w	r3, r6, #32
 800c4c2:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800c4c6:	2210      	movs	r2, #16
 800c4c8:	a902      	add	r1, sp, #8
 800c4ca:	f104 002e 	add.w	r0, r4, #46	@ 0x2e
 800c4ce:	f7ff ff35 	bl	800c33c <memcpy.isra.0>
 800c4d2:	1d73      	adds	r3, r6, #5
 800c4d4:	1c72      	adds	r2, r6, #1
 800c4d6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800c4da:	b2d2      	uxtb	r2, r2
 800c4dc:	4648      	mov	r0, r9
 800c4de:	1c79      	adds	r1, r7, #1
 800c4e0:	f7ff ff2c 	bl	800c33c <memcpy.isra.0>
 800c4e4:	4b0b      	ldr	r3, [pc, #44]	@ (800c514 <LLRPDevice::HandleRdmCommand()+0x98>)
 800c4e6:	6818      	ldr	r0, [r3, #0]
 800c4e8:	4b0b      	ldr	r3, [pc, #44]	@ (800c518 <LLRPDevice::HandleRdmCommand()+0x9c>)
 800c4ea:	681b      	ldr	r3, [r3, #0]
 800c4ec:	f105 0210 	add.w	r2, r5, #16
 800c4f0:	b133      	cbz	r3, 800c500 <LLRPDevice::HandleRdmCommand()+0x84>
 800c4f2:	f241 53c1 	movw	r3, #5569	@ 0x15c1
 800c4f6:	9300      	str	r3, [sp, #0]
 800c4f8:	4621      	mov	r1, r4
 800c4fa:	4b08      	ldr	r3, [pc, #32]	@ (800c51c <LLRPDevice::HandleRdmCommand()+0xa0>)
 800c4fc:	f005 fb80 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800c500:	b007      	add	sp, #28
 800c502:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c506:	bf00      	nop
 800c508:	200097c4 	andcs	r9, r0, r4, asr #15
 800c50c:	200096c0 	andcs	r9, r0, r0, asr #13
 800c510:	20009d00 	andcs	r9, r0, r0, lsl #26
 800c514:	200097cc 	andcs	r9, r0, ip, asr #15
 800c518:	20009b50 	andcs	r9, r0, r0, asr fp
 800c51c:	86faffef 	ldrbthi	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>

0800c520 <memcpy.isra.0>:
 800c520:	440a      	add	r2, r1
 800c522:	4291      	cmp	r1, r2
 800c524:	d100      	bne.n	800c528 <memcpy.isra.0+0x8>
 800c526:	4770      	bx	lr
 800c528:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c52c:	f800 3b01 	strb.w	r3, [r0], #1
 800c530:	e7f7      	b.n	800c522 <memcpy.isra.0+0x2>

0800c532 <RDMHandler::GetInterfaceList(unsigned short)>:
 800c532:	6883      	ldr	r3, [r0, #8]
 800c534:	2200      	movs	r2, #0
 800c536:	761a      	strb	r2, [r3, #24]
 800c538:	765a      	strb	r2, [r3, #25]
 800c53a:	769a      	strb	r2, [r3, #26]
 800c53c:	2101      	movs	r1, #1
 800c53e:	771a      	strb	r2, [r3, #28]
 800c540:	2206      	movs	r2, #6
 800c542:	76d9      	strb	r1, [r3, #27]
 800c544:	775a      	strb	r2, [r3, #29]
 800c546:	75da      	strb	r2, [r3, #23]
 800c548:	f7ff bc18 	b.w	800bd7c <RDMHandler::RespondMessageAck()>

0800c54c <RDMHandler::GetInterfaceName(unsigned short)>:
 800c54c:	b538      	push	{r3, r4, r5, lr}
 800c54e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c552:	2204      	movs	r2, #4
 800c554:	4604      	mov	r4, r0
 800c556:	3117      	adds	r1, #23
 800c558:	f105 0018 	add.w	r0, r5, #24
 800c55c:	f7ff ffe0 	bl	800c520 <memcpy.isra.0>
 800c560:	4a0d      	ldr	r2, [pc, #52]	@ (800c598 <RDMHandler::GetInterfaceName(unsigned short)+0x4c>)
 800c562:	6813      	ldr	r3, [r2, #0]
 800c564:	f105 001c 	add.w	r0, r5, #28
 800c568:	3306      	adds	r3, #6
 800c56a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c56e:	f800 1b01 	strb.w	r1, [r0], #1
 800c572:	2900      	cmp	r1, #0
 800c574:	d1f9      	bne.n	800c56a <RDMHandler::GetInterfaceName(unsigned short)+0x1e>
 800c576:	6812      	ldr	r2, [r2, #0]
 800c578:	3206      	adds	r2, #6
 800c57a:	4611      	mov	r1, r2
 800c57c:	460b      	mov	r3, r1
 800c57e:	3101      	adds	r1, #1
 800c580:	7818      	ldrb	r0, [r3, #0]
 800c582:	2800      	cmp	r0, #0
 800c584:	d1fa      	bne.n	800c57c <RDMHandler::GetInterfaceName(unsigned short)+0x30>
 800c586:	1a9b      	subs	r3, r3, r2
 800c588:	3304      	adds	r3, #4
 800c58a:	75eb      	strb	r3, [r5, #23]
 800c58c:	4620      	mov	r0, r4
 800c58e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c592:	f7ff bbf3 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c596:	bf00      	nop
 800c598:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c59c <RDMHandler::GetHardwareAddress(unsigned short)>:
 800c59c:	b538      	push	{r3, r4, r5, lr}
 800c59e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c5a2:	4604      	mov	r4, r0
 800c5a4:	2204      	movs	r2, #4
 800c5a6:	f105 0018 	add.w	r0, r5, #24
 800c5aa:	3117      	adds	r1, #23
 800c5ac:	f7ff ffb8 	bl	800c520 <memcpy.isra.0>
 800c5b0:	f105 001c 	add.w	r0, r5, #28
 800c5b4:	4905      	ldr	r1, [pc, #20]	@ (800c5cc <RDMHandler::GetHardwareAddress(unsigned short)+0x30>)
 800c5b6:	2206      	movs	r2, #6
 800c5b8:	f7ff ffb2 	bl	800c520 <memcpy.isra.0>
 800c5bc:	230a      	movs	r3, #10
 800c5be:	75eb      	strb	r3, [r5, #23]
 800c5c0:	4620      	mov	r0, r4
 800c5c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5c6:	f7ff bbd9 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c5ca:	bf00      	nop
 800c5cc:	20009b64 	andcs	r9, r0, r4, ror #22

0800c5d0 <RDMHandler::GetDHCPMode(unsigned short)>:
 800c5d0:	b538      	push	{r3, r4, r5, lr}
 800c5d2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c5d6:	4604      	mov	r4, r0
 800c5d8:	2204      	movs	r2, #4
 800c5da:	f105 0018 	add.w	r0, r5, #24
 800c5de:	3117      	adds	r1, #23
 800c5e0:	f7ff ff9e 	bl	800c520 <memcpy.isra.0>
 800c5e4:	4b05      	ldr	r3, [pc, #20]	@ (800c5fc <RDMHandler::GetDHCPMode(unsigned short)+0x2c>)
 800c5e6:	7e9b      	ldrb	r3, [r3, #26]
 800c5e8:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c5ec:	772b      	strb	r3, [r5, #28]
 800c5ee:	2305      	movs	r3, #5
 800c5f0:	75eb      	strb	r3, [r5, #23]
 800c5f2:	4620      	mov	r0, r4
 800c5f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5f8:	f7ff bbc0 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c5fc:	20009b50 	andcs	r9, r0, r0, asr fp

0800c600 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800c600:	4b0b      	ldr	r3, [pc, #44]	@ (800c630 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x30>)
 800c602:	6842      	ldr	r2, [r0, #4]
 800c604:	681b      	ldr	r3, [r3, #0]
 800c606:	7919      	ldrb	r1, [r3, #4]
 800c608:	b911      	cbnz	r1, 800c610 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800c60a:	210b      	movs	r1, #11
 800c60c:	f7ff bca4 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c610:	7ed2      	ldrb	r2, [r2, #27]
 800c612:	2a01      	cmp	r2, #1
 800c614:	d809      	bhi.n	800c62a <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c616:	f883 20b4 	strb.w	r2, [r3, #180]	@ 0xb4
 800c61a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c61e:	f042 0208 	orr.w	r2, r2, #8
 800c622:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800c626:	f7ff bba9 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c62a:	2106      	movs	r1, #6
 800c62c:	e7ee      	b.n	800c60c <RDMHandler::SetDHCPMode(bool, unsigned short)+0xc>
 800c62e:	bf00      	nop
 800c630:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c634 <RDMHandler::GetNameServers(unsigned short)>:
 800c634:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c636:	6843      	ldr	r3, [r0, #4]
 800c638:	7ddb      	ldrb	r3, [r3, #23]
 800c63a:	2b02      	cmp	r3, #2
 800c63c:	4604      	mov	r4, r0
 800c63e:	d905      	bls.n	800c64c <RDMHandler::GetNameServers(unsigned short)+0x18>
 800c640:	2106      	movs	r1, #6
 800c642:	b003      	add	sp, #12
 800c644:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c648:	f7ff bc86 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c64c:	4a0b      	ldr	r2, [pc, #44]	@ (800c67c <RDMHandler::GetNameServers(unsigned short)+0x48>)
 800c64e:	6885      	ldr	r5, [r0, #8]
 800c650:	6812      	ldr	r2, [r2, #0]
 800c652:	f103 0126 	add.w	r1, r3, #38	@ 0x26
 800c656:	f105 0019 	add.w	r0, r5, #25
 800c65a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800c65e:	9201      	str	r2, [sp, #4]
 800c660:	2204      	movs	r2, #4
 800c662:	762b      	strb	r3, [r5, #24]
 800c664:	eb0d 0102 	add.w	r1, sp, r2
 800c668:	f7ff ff5a 	bl	800c520 <memcpy.isra.0>
 800c66c:	2305      	movs	r3, #5
 800c66e:	4620      	mov	r0, r4
 800c670:	75eb      	strb	r3, [r5, #23]
 800c672:	b003      	add	sp, #12
 800c674:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c678:	f7ff bb80 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c67c:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c680 <RDMHandler::GetZeroconf(unsigned short)>:
 800c680:	b538      	push	{r3, r4, r5, lr}
 800c682:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c686:	4604      	mov	r4, r0
 800c688:	2204      	movs	r2, #4
 800c68a:	3117      	adds	r1, #23
 800c68c:	f105 0018 	add.w	r0, r5, #24
 800c690:	f7ff ff46 	bl	800c520 <memcpy.isra.0>
 800c694:	4b07      	ldr	r3, [pc, #28]	@ (800c6b4 <RDMHandler::GetZeroconf(unsigned short)+0x34>)
 800c696:	681b      	ldr	r3, [r3, #0]
 800c698:	795b      	ldrb	r3, [r3, #5]
 800c69a:	b11b      	cbz	r3, 800c6a4 <RDMHandler::GetZeroconf(unsigned short)+0x24>
 800c69c:	4b06      	ldr	r3, [pc, #24]	@ (800c6b8 <RDMHandler::GetZeroconf(unsigned short)+0x38>)
 800c69e:	7e9b      	ldrb	r3, [r3, #26]
 800c6a0:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800c6a4:	772b      	strb	r3, [r5, #28]
 800c6a6:	2305      	movs	r3, #5
 800c6a8:	75eb      	strb	r3, [r5, #23]
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6b0:	f7ff bb64 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c6b4:	20009b30 	andcs	r9, r0, r0, lsr fp
 800c6b8:	20009b50 	andcs	r9, r0, r0, asr fp

0800c6bc <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c6bc:	4b10      	ldr	r3, [pc, #64]	@ (800c700 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c6be:	6842      	ldr	r2, [r0, #4]
 800c6c0:	681b      	ldr	r3, [r3, #0]
 800c6c2:	7959      	ldrb	r1, [r3, #5]
 800c6c4:	b510      	push	{r4, lr}
 800c6c6:	4604      	mov	r4, r0
 800c6c8:	b921      	cbnz	r1, 800c6d4 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c6ca:	210b      	movs	r1, #11
 800c6cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c6d0:	f7ff bc42 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c6d4:	7ed2      	ldrb	r2, [r2, #27]
 800c6d6:	2a01      	cmp	r2, #1
 800c6d8:	d109      	bne.n	800c6ee <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c6da:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c6de:	f042 0210 	orr.w	r2, r2, #16
 800c6e2:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 800c6e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c6ea:	f7ff bb47 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c6ee:	b92a      	cbnz	r2, 800c6fc <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c6f0:	4618      	mov	r0, r3
 800c6f2:	4611      	mov	r1, r2
 800c6f4:	f004 f936 	bl	8010964 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800c6f8:	4620      	mov	r0, r4
 800c6fa:	e7f4      	b.n	800c6e6 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c6fc:	2106      	movs	r1, #6
 800c6fe:	e7e5      	b.n	800c6cc <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c700:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c704 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c704:	b510      	push	{r4, lr}
 800c706:	4b09      	ldr	r3, [pc, #36]	@ (800c72c <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c708:	7e9b      	ldrb	r3, [r3, #26]
 800c70a:	079b      	lsls	r3, r3, #30
 800c70c:	4604      	mov	r4, r0
 800c70e:	d404      	bmi.n	800c71a <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c714:	210b      	movs	r1, #11
 800c716:	f7ff bc1f 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c71a:	4b05      	ldr	r3, [pc, #20]	@ (800c730 <RDMHandler::RenewDhcp(bool, unsigned short)+0x2c>)
 800c71c:	6818      	ldr	r0, [r3, #0]
 800c71e:	f004 f91a 	bl	8010956 <Network::EnableDhcp()>
 800c722:	4620      	mov	r0, r4
 800c724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c728:	f7ff bb28 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c72c:	20009b50 	andcs	r9, r0, r0, asr fp
 800c730:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c734 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c734:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c736:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c73a:	4e11      	ldr	r6, [pc, #68]	@ (800c780 <RDMHandler::GetAddressNetmask(unsigned short)+0x4c>)
 800c73c:	4604      	mov	r4, r0
 800c73e:	6833      	ldr	r3, [r6, #0]
 800c740:	9301      	str	r3, [sp, #4]
 800c742:	f105 0018 	add.w	r0, r5, #24
 800c746:	2204      	movs	r2, #4
 800c748:	3117      	adds	r1, #23
 800c74a:	f7ff fee9 	bl	800c520 <memcpy.isra.0>
 800c74e:	2204      	movs	r2, #4
 800c750:	eb0d 0102 	add.w	r1, sp, r2
 800c754:	f105 001c 	add.w	r0, r5, #28
 800c758:	f7ff fee2 	bl	800c520 <memcpy.isra.0>
 800c75c:	6870      	ldr	r0, [r6, #4]
 800c75e:	f00a fd95 	bl	801728c <__popcountsi2>
 800c762:	7eb3      	ldrb	r3, [r6, #26]
 800c764:	f885 0020 	strb.w	r0, [r5, #32]
 800c768:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c76c:	f885 3021 	strb.w	r3, [r5, #33]	@ 0x21
 800c770:	4620      	mov	r0, r4
 800c772:	230a      	movs	r3, #10
 800c774:	75eb      	strb	r3, [r5, #23]
 800c776:	b002      	add	sp, #8
 800c778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c77c:	f7ff bafe 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c780:	20009b50 	andcs	r9, r0, r0, asr fp

0800c784 <RDMHandler::GetStaticAddress(unsigned short)>:
 800c784:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c786:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c78a:	4e0f      	ldr	r6, [pc, #60]	@ (800c7c8 <RDMHandler::GetStaticAddress(unsigned short)+0x44>)
 800c78c:	4604      	mov	r4, r0
 800c78e:	6833      	ldr	r3, [r6, #0]
 800c790:	9301      	str	r3, [sp, #4]
 800c792:	f105 0018 	add.w	r0, r5, #24
 800c796:	2204      	movs	r2, #4
 800c798:	3117      	adds	r1, #23
 800c79a:	f7ff fec1 	bl	800c520 <memcpy.isra.0>
 800c79e:	2204      	movs	r2, #4
 800c7a0:	eb0d 0102 	add.w	r1, sp, r2
 800c7a4:	f105 001c 	add.w	r0, r5, #28
 800c7a8:	f7ff feba 	bl	800c520 <memcpy.isra.0>
 800c7ac:	6870      	ldr	r0, [r6, #4]
 800c7ae:	f00a fd6d 	bl	801728c <__popcountsi2>
 800c7b2:	2309      	movs	r3, #9
 800c7b4:	f885 0020 	strb.w	r0, [r5, #32]
 800c7b8:	4620      	mov	r0, r4
 800c7ba:	75eb      	strb	r3, [r5, #23]
 800c7bc:	b002      	add	sp, #8
 800c7be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7c2:	f7ff badb 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c7c6:	bf00      	nop
 800c7c8:	20009b50 	andcs	r9, r0, r0, asr fp

0800c7cc <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c7cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c7ce:	6845      	ldr	r5, [r0, #4]
 800c7d0:	7dab      	ldrb	r3, [r5, #22]
 800c7d2:	2b09      	cmp	r3, #9
 800c7d4:	4604      	mov	r4, r0
 800c7d6:	d005      	beq.n	800c7e4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c7d8:	2101      	movs	r1, #1
 800c7da:	b003      	add	sp, #12
 800c7dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c7e0:	f7ff bbba 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c7e4:	2204      	movs	r2, #4
 800c7e6:	eb0d 0002 	add.w	r0, sp, r2
 800c7ea:	f105 011b 	add.w	r1, r5, #27
 800c7ee:	f7ff fe97 	bl	800c520 <memcpy.isra.0>
 800c7f2:	4b09      	ldr	r3, [pc, #36]	@ (800c818 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x4c>)
 800c7f4:	7fea      	ldrb	r2, [r5, #31]
 800c7f6:	6818      	ldr	r0, [r3, #0]
 800c7f8:	9901      	ldr	r1, [sp, #4]
 800c7fa:	b12a      	cbz	r2, 800c808 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3c>
 800c7fc:	f1c2 0220 	rsb	r2, r2, #32
 800c800:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800c804:	4093      	lsls	r3, r2
 800c806:	ba1a      	rev	r2, r3
 800c808:	f004 f8ac 	bl	8010964 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>
 800c80c:	4620      	mov	r0, r4
 800c80e:	b003      	add	sp, #12
 800c810:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c814:	f7ff bab2 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c818:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c81c <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c81c:	4b08      	ldr	r3, [pc, #32]	@ (800c840 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c81e:	b510      	push	{r4, lr}
 800c820:	4604      	mov	r4, r0
 800c822:	6818      	ldr	r0, [r3, #0]
 800c824:	f004 f8c0 	bl	80109a8 <Network::ApplyQueuedConfig()>
 800c828:	b120      	cbz	r0, 800c834 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c82a:	4620      	mov	r0, r4
 800c82c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c830:	f7ff baa4 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c834:	4620      	mov	r0, r4
 800c836:	2101      	movs	r1, #1
 800c838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c83c:	f7ff bb8c 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c840:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c844 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c844:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c846:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c84a:	4b0c      	ldr	r3, [pc, #48]	@ (800c87c <RDMHandler::GetDefaultRoute(unsigned short)+0x38>)
 800c84c:	4604      	mov	r4, r0
 800c84e:	689b      	ldr	r3, [r3, #8]
 800c850:	9301      	str	r3, [sp, #4]
 800c852:	f105 0018 	add.w	r0, r5, #24
 800c856:	2204      	movs	r2, #4
 800c858:	3117      	adds	r1, #23
 800c85a:	f7ff fe61 	bl	800c520 <memcpy.isra.0>
 800c85e:	2204      	movs	r2, #4
 800c860:	f105 001c 	add.w	r0, r5, #28
 800c864:	eb0d 0102 	add.w	r1, sp, r2
 800c868:	f7ff fe5a 	bl	800c520 <memcpy.isra.0>
 800c86c:	2308      	movs	r3, #8
 800c86e:	4620      	mov	r0, r4
 800c870:	75eb      	strb	r3, [r5, #23]
 800c872:	b003      	add	sp, #12
 800c874:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c878:	f7ff ba80 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c87c:	20009b50 	andcs	r9, r0, r0, asr fp

0800c880 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c880:	b513      	push	{r0, r1, r4, lr}
 800c882:	6841      	ldr	r1, [r0, #4]
 800c884:	7d8b      	ldrb	r3, [r1, #22]
 800c886:	2b08      	cmp	r3, #8
 800c888:	4604      	mov	r4, r0
 800c88a:	d005      	beq.n	800c898 <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x18>
 800c88c:	2101      	movs	r1, #1
 800c88e:	b002      	add	sp, #8
 800c890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c894:	f7ff bb60 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c898:	2204      	movs	r2, #4
 800c89a:	eb0d 0002 	add.w	r0, sp, r2
 800c89e:	311b      	adds	r1, #27
 800c8a0:	f7ff fe3e 	bl	800c520 <memcpy.isra.0>
 800c8a4:	4b05      	ldr	r3, [pc, #20]	@ (800c8bc <RDMHandler::SetDefaultRoute(bool, unsigned short)+0x3c>)
 800c8a6:	9901      	ldr	r1, [sp, #4]
 800c8a8:	6818      	ldr	r0, [r3, #0]
 800c8aa:	f004 f86f 	bl	801098c <Network::SetQueuedDefaultRoute(unsigned long)>
 800c8ae:	4620      	mov	r0, r4
 800c8b0:	b002      	add	sp, #8
 800c8b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8b6:	f7ff ba61 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c8ba:	bf00      	nop
 800c8bc:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c8c0 <RDMHandler::GetHostName(unsigned short)>:
 800c8c0:	4b09      	ldr	r3, [pc, #36]	@ (800c8e8 <RDMHandler::GetHostName(unsigned short)+0x28>)
 800c8c2:	6819      	ldr	r1, [r3, #0]
 800c8c4:	3116      	adds	r1, #22
 800c8c6:	b510      	push	{r4, lr}
 800c8c8:	460b      	mov	r3, r1
 800c8ca:	4604      	mov	r4, r0
 800c8cc:	461a      	mov	r2, r3
 800c8ce:	3301      	adds	r3, #1
 800c8d0:	7810      	ldrb	r0, [r2, #0]
 800c8d2:	2800      	cmp	r0, #0
 800c8d4:	d1fa      	bne.n	800c8cc <RDMHandler::GetHostName(unsigned short)+0xc>
 800c8d6:	4620      	mov	r0, r4
 800c8d8:	1a52      	subs	r2, r2, r1
 800c8da:	f7ff f9f8 	bl	800bcce <RDMHandler::HandleString(char const*, unsigned long)>
 800c8de:	4620      	mov	r0, r4
 800c8e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8e4:	f7ff ba4a 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c8e8:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c8ec <RDMHandler::SetHostName(bool, unsigned short)>:
 800c8ec:	b510      	push	{r4, lr}
 800c8ee:	6841      	ldr	r1, [r0, #4]
 800c8f0:	7d8b      	ldrb	r3, [r1, #22]
 800c8f2:	2b3f      	cmp	r3, #63	@ 0x3f
 800c8f4:	4604      	mov	r4, r0
 800c8f6:	d904      	bls.n	800c902 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c8f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8fc:	2102      	movs	r1, #2
 800c8fe:	f7ff bb2b 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
 800c902:	440b      	add	r3, r1
 800c904:	2200      	movs	r2, #0
 800c906:	75da      	strb	r2, [r3, #23]
 800c908:	4b04      	ldr	r3, [pc, #16]	@ (800c91c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c90a:	3117      	adds	r1, #23
 800c90c:	6818      	ldr	r0, [r3, #0]
 800c90e:	f003 fff1 	bl	80108f4 <Network::SetHostName(char const*)>
 800c912:	4620      	mov	r0, r4
 800c914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c918:	f7ff ba30 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c91c:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c920 <RDMHandler::GetDomainName(unsigned short)>:
 800c920:	4b09      	ldr	r3, [pc, #36]	@ (800c948 <RDMHandler::GetDomainName(unsigned short)+0x28>)
 800c922:	6819      	ldr	r1, [r3, #0]
 800c924:	3156      	adds	r1, #86	@ 0x56
 800c926:	b510      	push	{r4, lr}
 800c928:	460b      	mov	r3, r1
 800c92a:	4604      	mov	r4, r0
 800c92c:	461a      	mov	r2, r3
 800c92e:	3301      	adds	r3, #1
 800c930:	7810      	ldrb	r0, [r2, #0]
 800c932:	2800      	cmp	r0, #0
 800c934:	d1fa      	bne.n	800c92c <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c936:	4620      	mov	r0, r4
 800c938:	1a52      	subs	r2, r2, r1
 800c93a:	f7ff f9c8 	bl	800bcce <RDMHandler::HandleString(char const*, unsigned long)>
 800c93e:	4620      	mov	r0, r4
 800c940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c944:	f7ff ba1a 	b.w	800bd7c <RDMHandler::RespondMessageAck()>
 800c948:	20009b30 	andcs	r9, r0, r0, lsr fp

0800c94c <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c94c:	210b      	movs	r1, #11
 800c94e:	f7ff bb03 	b.w	800bf58 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c954 <RDMDevice::RDMDevice()>:
 800c954:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800c958:	b513      	push	{r0, r1, r4, lr}
 800c95a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800c95e:	f8a0 3042 	strh.w	r3, [r0, #66]	@ 0x42
 800c962:	2300      	movs	r3, #0
 800c964:	f8a0 3044 	strh.w	r3, [r0, #68]	@ 0x44
 800c968:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 800c96c:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
 800c970:	4b1c      	ldr	r3, [pc, #112]	@ (800c9e4 <RDMDevice::RDMDevice()+0x90>)
 800c972:	491d      	ldr	r1, [pc, #116]	@ (800c9e8 <RDMDevice::RDMDevice()+0x94>)
 800c974:	6018      	str	r0, [r3, #0]
 800c976:	4b1d      	ldr	r3, [pc, #116]	@ (800c9ec <RDMDevice::RDMDevice()+0x98>)
 800c978:	781a      	ldrb	r2, [r3, #0]
 800c97a:	f880 2046 	strb.w	r2, [r0, #70]	@ 0x46
 800c97e:	785b      	ldrb	r3, [r3, #1]
 800c980:	f880 3047 	strb.w	r3, [r0, #71]	@ 0x47
 800c984:	466a      	mov	r2, sp
 800c986:	2306      	movs	r3, #6
 800c988:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c98c:	f802 4b01 	strb.w	r4, [r2], #1
 800c990:	3b01      	subs	r3, #1
 800c992:	d1f9      	bne.n	800c988 <RDMDevice::RDMDevice()+0x34>
 800c994:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c998:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c99c:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c9a0:	f89d 4005 	ldrb.w	r4, [sp, #5]
 800c9a4:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
 800c9a8:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
 800c9ac:	f880 204e 	strb.w	r2, [r0, #78]	@ 0x4e
 800c9b0:	f880 304f 	strb.w	r3, [r0, #79]	@ 0x4f
 800c9b4:	4a0e      	ldr	r2, [pc, #56]	@ (800c9f0 <RDMDevice::RDMDevice()+0x9c>)
 800c9b6:	f880 104a 	strb.w	r1, [r0, #74]	@ 0x4a
 800c9ba:	2319      	movs	r3, #25
 800c9bc:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
 800c9c0:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 800c9c4:	f880 404b 	strb.w	r4, [r0, #75]	@ 0x4b
 800c9c8:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
 800c9cc:	4603      	mov	r3, r0
 800c9ce:	f100 0119 	add.w	r1, r0, #25
 800c9d2:	f812 4b01 	ldrb.w	r4, [r2], #1
 800c9d6:	f803 4b01 	strb.w	r4, [r3], #1
 800c9da:	4299      	cmp	r1, r3
 800c9dc:	d1f9      	bne.n	800c9d2 <RDMDevice::RDMDevice()+0x7e>
 800c9de:	b002      	add	sp, #8
 800c9e0:	bd10      	pop	{r4, pc}
 800c9e2:	bf00      	nop
 800c9e4:	200097d0 	ldrdcs	r9, [r0], -r0
 800c9e8:	20009b64 	andcs	r9, r0, r4, ror #22
 800c9ec:	08019f51 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, fp, ip, pc}
 800c9f0:	08019f6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, pc}

0800c9f4 <RDMDevice::Print()>:
 800c9f4:	b513      	push	{r0, r1, r4, lr}
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	481f      	ldr	r0, [pc, #124]	@ (800ca78 <RDMDevice::Print()+0x84>)
 800c9fa:	f00a fa3e 	bl	8016e7a <puts>
 800c9fe:	4b1f      	ldr	r3, [pc, #124]	@ (800ca7c <RDMDevice::Print()+0x88>)
 800ca00:	461a      	mov	r2, r3
 800ca02:	4619      	mov	r1, r3
 800ca04:	3301      	adds	r3, #1
 800ca06:	7808      	ldrb	r0, [r1, #0]
 800ca08:	2800      	cmp	r0, #0
 800ca0a:	d1fa      	bne.n	800ca02 <RDMDevice::Print()+0xe>
 800ca0c:	1a89      	subs	r1, r1, r2
 800ca0e:	2920      	cmp	r1, #32
 800ca10:	bf28      	it	cs
 800ca12:	2120      	movcs	r1, #32
 800ca14:	4a19      	ldr	r2, [pc, #100]	@ (800ca7c <RDMDevice::Print()+0x88>)
 800ca16:	481a      	ldr	r0, [pc, #104]	@ (800ca80 <RDMDevice::Print()+0x8c>)
 800ca18:	f00a f9da 	bl	8016dd0 <printf>
 800ca1c:	f894 2047 	ldrb.w	r2, [r4, #71]	@ 0x47
 800ca20:	f894 1046 	ldrb.w	r1, [r4, #70]	@ 0x46
 800ca24:	4817      	ldr	r0, [pc, #92]	@ (800ca84 <RDMDevice::Print()+0x90>)
 800ca26:	f00a f9d3 	bl	8016dd0 <printf>
 800ca2a:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 800ca2e:	9300      	str	r3, [sp, #0]
 800ca30:	f894 304d 	ldrb.w	r3, [r4, #77]	@ 0x4d
 800ca34:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
 800ca38:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 800ca3c:	4812      	ldr	r0, [pc, #72]	@ (800ca88 <RDMDevice::Print()+0x94>)
 800ca3e:	f00a f9c7 	bl	8016dd0 <printf>
 800ca42:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 800ca46:	4811      	ldr	r0, [pc, #68]	@ (800ca8c <RDMDevice::Print()+0x98>)
 800ca48:	f104 0220 	add.w	r2, r4, #32
 800ca4c:	f00a f9c0 	bl	8016dd0 <printf>
 800ca50:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800ca54:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
 800ca58:	480d      	ldr	r0, [pc, #52]	@ (800ca90 <RDMDevice::Print()+0x9c>)
 800ca5a:	0a09      	lsrs	r1, r1, #8
 800ca5c:	f00a f9b8 	bl	8016dd0 <printf>
 800ca60:	f8b4 1042 	ldrh.w	r1, [r4, #66]	@ 0x42
 800ca64:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 800ca68:	480a      	ldr	r0, [pc, #40]	@ (800ca94 <RDMDevice::Print()+0xa0>)
 800ca6a:	0a09      	lsrs	r1, r1, #8
 800ca6c:	b002      	add	sp, #8
 800ca6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca72:	f00a b9ad 	b.w	8016dd0 <printf>
 800ca76:	bf00      	nop
 800ca78:	08017a6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp, lr}
 800ca7c:	08019f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, ip, pc}
 800ca80:	08017a88 	stmdaeq	r1, {r3, r7, r9, fp, ip, sp, lr}
 800ca84:	08017aa3 	stmdaeq	r1, {r0, r1, r5, r7, r9, fp, ip, sp, lr}
 800ca88:	08017ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, ip, sp, lr}
 800ca8c:	08017ae9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, fp, ip, sp, lr}
 800ca90:	08017b04 	stmdaeq	r1, {r2, r8, r9, fp, ip, sp, lr}
 800ca94:	08017b23 	stmdaeq	r1, {r0, r1, r5, r8, r9, fp, ip, sp, lr}

0800ca98 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 800ca98:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ca9a:	88c6      	ldrh	r6, [r0, #6]
 800ca9c:	8885      	ldrh	r5, [r0, #4]
 800ca9e:	42ae      	cmp	r6, r5
 800caa0:	d216      	bcs.n	800cad0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 800caa2:	4604      	mov	r4, r0
 800caa4:	6800      	ldr	r0, [r0, #0]
 800caa6:	1bad      	subs	r5, r5, r6
 800caa8:	4430      	add	r0, r6
 800caaa:	7a26      	ldrb	r6, [r4, #8]
 800caac:	b923      	cbnz	r3, 800cab8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 800caae:	b926      	cbnz	r6, 800caba <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 800cab0:	9200      	str	r2, [sp, #0]
 800cab2:	460b      	mov	r3, r1
 800cab4:	4a09      	ldr	r2, [pc, #36]	@ (800cadc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 800cab6:	e003      	b.n	800cac0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800cab8:	b166      	cbz	r6, 800cad4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 800caba:	9200      	str	r2, [sp, #0]
 800cabc:	4a08      	ldr	r2, [pc, #32]	@ (800cae0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 800cabe:	460b      	mov	r3, r1
 800cac0:	4629      	mov	r1, r5
 800cac2:	f00a f9ad 	bl	8016e20 <snprintf>
 800cac6:	4285      	cmp	r5, r0
 800cac8:	bfa2      	ittt	ge
 800caca:	88e3      	ldrhge	r3, [r4, #6]
 800cacc:	181b      	addge	r3, r3, r0
 800cace:	80e3      	strhge	r3, [r4, #6]
 800cad0:	b002      	add	sp, #8
 800cad2:	bd70      	pop	{r4, r5, r6, pc}
 800cad4:	9200      	str	r2, [sp, #0]
 800cad6:	460b      	mov	r3, r1
 800cad8:	4a02      	ldr	r2, [pc, #8]	@ (800cae4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 800cada:	e7f1      	b.n	800cac0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 800cadc:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 800cae0:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800cae4:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

0800cae8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>:
 800cae8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800caea:	88c6      	ldrh	r6, [r0, #6]
 800caec:	8885      	ldrh	r5, [r0, #4]
 800caee:	42ae      	cmp	r6, r5
 800caf0:	d216      	bcs.n	800cb20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x38>
 800caf2:	4604      	mov	r4, r0
 800caf4:	6800      	ldr	r0, [r0, #0]
 800caf6:	1bad      	subs	r5, r5, r6
 800caf8:	4430      	add	r0, r6
 800cafa:	7a26      	ldrb	r6, [r4, #8]
 800cafc:	b923      	cbnz	r3, 800cb08 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x20>
 800cafe:	b926      	cbnz	r6, 800cb0a <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x22>
 800cb00:	9200      	str	r2, [sp, #0]
 800cb02:	460b      	mov	r3, r1
 800cb04:	4a09      	ldr	r2, [pc, #36]	@ (800cb2c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x44>)
 800cb06:	e003      	b.n	800cb10 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800cb08:	b166      	cbz	r6, 800cb24 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x3c>
 800cb0a:	9200      	str	r2, [sp, #0]
 800cb0c:	4a08      	ldr	r2, [pc, #32]	@ (800cb30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x48>)
 800cb0e:	460b      	mov	r3, r1
 800cb10:	4629      	mov	r1, r5
 800cb12:	f00a f985 	bl	8016e20 <snprintf>
 800cb16:	4285      	cmp	r5, r0
 800cb18:	bfa2      	ittt	ge
 800cb1a:	88e3      	ldrhge	r3, [r4, #6]
 800cb1c:	181b      	addge	r3, r3, r0
 800cb1e:	80e3      	strhge	r3, [r4, #6]
 800cb20:	b002      	add	sp, #8
 800cb22:	bd70      	pop	{r4, r5, r6, pc}
 800cb24:	9200      	str	r2, [sp, #0]
 800cb26:	460b      	mov	r3, r1
 800cb28:	4a02      	ldr	r2, [pc, #8]	@ (800cb34 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x4c>)
 800cb2a:	e7f1      	b.n	800cb10 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 800cb2c:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 800cb30:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800cb34:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

0800cb38 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
 800cb38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cb3a:	88c6      	ldrh	r6, [r0, #6]
 800cb3c:	8885      	ldrh	r5, [r0, #4]
 800cb3e:	42ae      	cmp	r6, r5
 800cb40:	d216      	bcs.n	800cb70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x38>
 800cb42:	4604      	mov	r4, r0
 800cb44:	6800      	ldr	r0, [r0, #0]
 800cb46:	1bad      	subs	r5, r5, r6
 800cb48:	4430      	add	r0, r6
 800cb4a:	7a26      	ldrb	r6, [r4, #8]
 800cb4c:	b923      	cbnz	r3, 800cb58 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x20>
 800cb4e:	b926      	cbnz	r6, 800cb5a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x22>
 800cb50:	9200      	str	r2, [sp, #0]
 800cb52:	460b      	mov	r3, r1
 800cb54:	4a09      	ldr	r2, [pc, #36]	@ (800cb7c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x44>)
 800cb56:	e003      	b.n	800cb60 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800cb58:	b166      	cbz	r6, 800cb74 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x3c>
 800cb5a:	9200      	str	r2, [sp, #0]
 800cb5c:	4a08      	ldr	r2, [pc, #32]	@ (800cb80 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>)
 800cb5e:	460b      	mov	r3, r1
 800cb60:	4629      	mov	r1, r5
 800cb62:	f00a f95d 	bl	8016e20 <snprintf>
 800cb66:	4285      	cmp	r5, r0
 800cb68:	bfa2      	ittt	ge
 800cb6a:	88e3      	ldrhge	r3, [r4, #6]
 800cb6c:	181b      	addge	r3, r3, r0
 800cb6e:	80e3      	strhge	r3, [r4, #6]
 800cb70:	b002      	add	sp, #8
 800cb72:	bd70      	pop	{r4, r5, r6, pc}
 800cb74:	9200      	str	r2, [sp, #0]
 800cb76:	460b      	mov	r3, r1
 800cb78:	4a02      	ldr	r2, [pc, #8]	@ (800cb84 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x4c>)
 800cb7a:	e7f1      	b.n	800cb60 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800cb7c:	0801775a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800cb80:	0801774f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp, lr}
 800cb84:	0801775b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}

0800cb88 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>:
 800cb88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cb8c:	8885      	ldrh	r5, [r0, #4]
 800cb8e:	4698      	mov	r8, r3
 800cb90:	88c3      	ldrh	r3, [r0, #6]
 800cb92:	42ab      	cmp	r3, r5
 800cb94:	4604      	mov	r4, r0
 800cb96:	d229      	bcs.n	800cbec <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x64>
 800cb98:	6826      	ldr	r6, [r4, #0]
 800cb9a:	f894 a008 	ldrb.w	sl, [r4, #8]
 800cb9e:	4691      	mov	r9, r2
 800cba0:	ee10 0a10 	vmov	r0, s0
 800cba4:	460f      	mov	r7, r1
 800cba6:	441e      	add	r6, r3
 800cba8:	1aed      	subs	r5, r5, r3
 800cbaa:	f7fc fb47 	bl	800923c <__aeabi_f2d>
 800cbae:	f1b9 0f00 	cmp.w	r9, #0
 800cbb2:	d109      	bne.n	800cbc8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x40>
 800cbb4:	f1ba 0f00 	cmp.w	sl, #0
 800cbb8:	d109      	bne.n	800cbce <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x46>
 800cbba:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800cbbe:	4a10      	ldr	r2, [pc, #64]	@ (800cc00 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x78>)
 800cbc0:	f8cd 8000 	str.w	r8, [sp]
 800cbc4:	463b      	mov	r3, r7
 800cbc6:	e008      	b.n	800cbda <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x52>
 800cbc8:	f1ba 0f00 	cmp.w	sl, #0
 800cbcc:	d011      	beq.n	800cbf2 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x6a>
 800cbce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800cbd2:	4a0c      	ldr	r2, [pc, #48]	@ (800cc04 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x7c>)
 800cbd4:	f8cd 8000 	str.w	r8, [sp]
 800cbd8:	463b      	mov	r3, r7
 800cbda:	4629      	mov	r1, r5
 800cbdc:	4630      	mov	r0, r6
 800cbde:	f00a f91f 	bl	8016e20 <snprintf>
 800cbe2:	4285      	cmp	r5, r0
 800cbe4:	bfa2      	ittt	ge
 800cbe6:	88e3      	ldrhge	r3, [r4, #6]
 800cbe8:	181b      	addge	r3, r3, r0
 800cbea:	80e3      	strhge	r3, [r4, #6]
 800cbec:	b004      	add	sp, #16
 800cbee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cbf2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800cbf6:	4a04      	ldr	r2, [pc, #16]	@ (800cc08 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x80>)
 800cbf8:	f8cd 8000 	str.w	r8, [sp]
 800cbfc:	463b      	mov	r3, r7
 800cbfe:	e7ec      	b.n	800cbda <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]+0x52>
 800cc00:	08017b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, ip, sp, lr}
 800cc04:	08017b42 	stmdaeq	r1, {r1, r6, r8, r9, fp, ip, sp, lr}
 800cc08:	08017b4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, fp, ip, sp, lr}

0800cc0c <pixel::pixel_convert_TxH(float)>:
 800cc0c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800cca0 <pixel::pixel_convert_TxH(float)+0x94>
 800cc10:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc18:	d433      	bmi.n	800cc82 <pixel::pixel_convert_TxH(float)+0x76>
 800cc1a:	eef4 7a0e 	vmov.f32	s15, #78	@ 0x3e700000  0.2343750
 800cc1e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc26:	d42e      	bmi.n	800cc86 <pixel::pixel_convert_TxH(float)+0x7a>
 800cc28:	eef5 7a09 	vmov.f32	s15, #89	@ 0x3ec80000  0.3906250
 800cc2c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc34:	d429      	bmi.n	800cc8a <pixel::pixel_convert_TxH(float)+0x7e>
 800cc36:	eddf 7a1b 	vldr	s15, [pc, #108]	@ 800cca4 <pixel::pixel_convert_TxH(float)+0x98>
 800cc3a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc42:	d424      	bmi.n	800cc8e <pixel::pixel_convert_TxH(float)+0x82>
 800cc44:	eddf 7a18 	vldr	s15, [pc, #96]	@ 800cca8 <pixel::pixel_convert_TxH(float)+0x9c>
 800cc48:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc50:	d41f      	bmi.n	800cc92 <pixel::pixel_convert_TxH(float)+0x86>
 800cc52:	eddf 7a16 	vldr	s15, [pc, #88]	@ 800ccac <pixel::pixel_convert_TxH(float)+0xa0>
 800cc56:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc5e:	d41a      	bmi.n	800cc96 <pixel::pixel_convert_TxH(float)+0x8a>
 800cc60:	eddf 7a13 	vldr	s15, [pc, #76]	@ 800ccb0 <pixel::pixel_convert_TxH(float)+0xa4>
 800cc64:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc6c:	d415      	bmi.n	800cc9a <pixel::pixel_convert_TxH(float)+0x8e>
 800cc6e:	eddf 7a11 	vldr	s15, [pc, #68]	@ 800ccb4 <pixel::pixel_convert_TxH(float)+0xa8>
 800cc72:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800cc76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cc7a:	bf4c      	ite	mi
 800cc7c:	20fe      	movmi	r0, #254	@ 0xfe
 800cc7e:	2000      	movpl	r0, #0
 800cc80:	4770      	bx	lr
 800cc82:	2000      	movs	r0, #0
 800cc84:	4770      	bx	lr
 800cc86:	2080      	movs	r0, #128	@ 0x80
 800cc88:	4770      	bx	lr
 800cc8a:	20c0      	movs	r0, #192	@ 0xc0
 800cc8c:	4770      	bx	lr
 800cc8e:	20e0      	movs	r0, #224	@ 0xe0
 800cc90:	4770      	bx	lr
 800cc92:	20f0      	movs	r0, #240	@ 0xf0
 800cc94:	4770      	bx	lr
 800cc96:	20f8      	movs	r0, #248	@ 0xf8
 800cc98:	4770      	bx	lr
 800cc9a:	20fc      	movs	r0, #252	@ 0xfc
 800cc9c:	4770      	bx	lr
 800cc9e:	bf00      	nop
 800cca0:	3da00000 	stccc	0, cr0, [r0]
 800cca4:	3f0c0000 	svccc	0x000c0000
 800cca8:	3f340000 	svccc	0x00340000
 800ccac:	3f5c0000 	svccc	0x005c0000
 800ccb0:	3f820000 	svccc	0x00820000
 800ccb4:	3f960000 	svccc	0x00960000

0800ccb8 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>:
 800ccb8:	b507      	push	{r0, r1, r2, lr}
 800ccba:	2300      	movs	r3, #0
 800ccbc:	2101      	movs	r1, #1
 800ccbe:	e9cd 3100 	strd	r3, r1, [sp]
 800ccc2:	4602      	mov	r2, r0
 800ccc4:	4804      	ldr	r0, [pc, #16]	@ (800ccd8 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)+0x20>)
 800ccc6:	2326      	movs	r3, #38	@ 0x26
 800ccc8:	6800      	ldr	r0, [r0, #0]
 800ccca:	2102      	movs	r1, #2
 800cccc:	f006 fbaa 	bl	8013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800ccd0:	b003      	add	sp, #12
 800ccd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800ccd6:	bf00      	nop
 800ccd8:	20009bfc 	strdcs	r9, [r0], -ip

0800ccdc <PixelDmxParams::PixelDmxParams()>:
 800ccdc:	2103      	movs	r1, #3
 800ccde:	7101      	strb	r1, [r0, #4]
 800cce0:	f06f 0155 	mvn.w	r1, #85	@ 0x55
 800cce4:	7141      	strb	r1, [r0, #5]
 800cce6:	2101      	movs	r1, #1
 800cce8:	71c1      	strb	r1, [r0, #7]
 800ccea:	73c1      	strb	r1, [r0, #15]
 800ccec:	7441      	strb	r1, [r0, #17]
 800ccee:	7581      	strb	r1, [r0, #22]
 800ccf0:	2105      	movs	r1, #5
 800ccf2:	b530      	push	{r4, r5, lr}
 800ccf4:	7601      	strb	r1, [r0, #24]
 800ccf6:	253d      	movs	r5, #61	@ 0x3d
 800ccf8:	210d      	movs	r1, #13
 800ccfa:	7305      	strb	r5, [r0, #12]
 800ccfc:	7701      	strb	r1, [r0, #28]
 800ccfe:	25ff      	movs	r5, #255	@ 0xff
 800cd00:	2111      	movs	r1, #17
 800cd02:	2200      	movs	r2, #0
 800cd04:	2409      	movs	r4, #9
 800cd06:	7385      	strb	r5, [r0, #14]
 800cd08:	7781      	strb	r1, [r0, #30]
 800cd0a:	2506      	movs	r5, #6
 800cd0c:	2115      	movs	r1, #21
 800cd0e:	7002      	strb	r2, [r0, #0]
 800cd10:	7042      	strb	r2, [r0, #1]
 800cd12:	7082      	strb	r2, [r0, #2]
 800cd14:	70c2      	strb	r2, [r0, #3]
 800cd16:	7182      	strb	r2, [r0, #6]
 800cd18:	7202      	strb	r2, [r0, #8]
 800cd1a:	7282      	strb	r2, [r0, #10]
 800cd1c:	72c4      	strb	r4, [r0, #11]
 800cd1e:	7342      	strb	r2, [r0, #13]
 800cd20:	7482      	strb	r2, [r0, #18]
 800cd22:	74c5      	strb	r5, [r0, #19]
 800cd24:	7502      	strb	r2, [r0, #20]
 800cd26:	7542      	strb	r2, [r0, #21]
 800cd28:	7242      	strb	r2, [r0, #9]
 800cd2a:	7402      	strb	r2, [r0, #16]
 800cd2c:	75c2      	strb	r2, [r0, #23]
 800cd2e:	7642      	strb	r2, [r0, #25]
 800cd30:	7684      	strb	r4, [r0, #26]
 800cd32:	76c2      	strb	r2, [r0, #27]
 800cd34:	7742      	strb	r2, [r0, #29]
 800cd36:	77c2      	strb	r2, [r0, #31]
 800cd38:	f880 1020 	strb.w	r1, [r0, #32]
 800cd3c:	2119      	movs	r1, #25
 800cd3e:	f880 1022 	strb.w	r1, [r0, #34]	@ 0x22
 800cd42:	211d      	movs	r1, #29
 800cd44:	f880 2021 	strb.w	r2, [r0, #33]	@ 0x21
 800cd48:	f880 2023 	strb.w	r2, [r0, #35]	@ 0x23
 800cd4c:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800cd50:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800cd54:	bd30      	pop	{r4, r5, pc}

0800cd56 <PixelDmxParams::Load()>:
 800cd56:	b508      	push	{r3, lr}
 800cd58:	2200      	movs	r2, #0
 800cd5a:	7002      	strb	r2, [r0, #0]
 800cd5c:	7042      	strb	r2, [r0, #1]
 800cd5e:	7082      	strb	r2, [r0, #2]
 800cd60:	70c2      	strb	r2, [r0, #3]
 800cd62:	f7ff ffa9 	bl	800ccb8 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>
 800cd66:	bd08      	pop	{r3, pc}

0800cd68 <PixelDmxParams::Load(char const*, unsigned long)>:
 800cd68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd6a:	2500      	movs	r5, #0
 800cd6c:	b087      	sub	sp, #28
 800cd6e:	4604      	mov	r4, r0
 800cd70:	460e      	mov	r6, r1
 800cd72:	4617      	mov	r7, r2
 800cd74:	7005      	strb	r5, [r0, #0]
 800cd76:	7045      	strb	r5, [r0, #1]
 800cd78:	7085      	strb	r5, [r0, #2]
 800cd7a:	70c5      	strb	r5, [r0, #3]
 800cd7c:	4602      	mov	r2, r0
 800cd7e:	490c      	ldr	r1, [pc, #48]	@ (800cdb0 <PixelDmxParams::Load(char const*, unsigned long)+0x48>)
 800cd80:	a804      	add	r0, sp, #16
 800cd82:	f006 fe29 	bl	80139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800cd86:	463a      	mov	r2, r7
 800cd88:	4631      	mov	r1, r6
 800cd8a:	a804      	add	r0, sp, #16
 800cd8c:	f006 fe28 	bl	80139e0 <ReadConfigFile::Read(char const*, unsigned int)>
 800cd90:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800cd94:	2326      	movs	r3, #38	@ 0x26
 800cd96:	4807      	ldr	r0, [pc, #28]	@ (800cdb4 <PixelDmxParams::Load(char const*, unsigned long)+0x4c>)
 800cd98:	9300      	str	r3, [sp, #0]
 800cd9a:	462a      	mov	r2, r5
 800cd9c:	4623      	mov	r3, r4
 800cd9e:	2102      	movs	r1, #2
 800cda0:	6800      	ldr	r0, [r0, #0]
 800cda2:	f006 fb19 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800cda6:	a804      	add	r0, sp, #16
 800cda8:	f006 fe19 	bl	80139de <ReadConfigFile::~ReadConfigFile()>
 800cdac:	b007      	add	sp, #28
 800cdae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cdb0:	0800d021 	stmdaeq	r0, {r0, r5, ip, lr, pc}
 800cdb4:	20009bfc 	strdcs	r9, [r0], -ip

0800cdb8 <PixelDmxParams::callbackFunction(char const*)>:
 800cdb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cdbc:	b088      	sub	sp, #32
 800cdbe:	460d      	mov	r5, r1
 800cdc0:	2308      	movs	r3, #8
 800cdc2:	4604      	mov	r4, r0
 800cdc4:	9302      	str	r3, [sp, #8]
 800cdc6:	498a      	ldr	r1, [pc, #552]	@ (800cff0 <PixelDmxParams::callbackFunction(char const*)+0x238>)
 800cdc8:	446b      	add	r3, sp
 800cdca:	aa04      	add	r2, sp, #16
 800cdcc:	4628      	mov	r0, r5
 800cdce:	f006 fe3d 	bl	8013a4c <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800cdd2:	b9a0      	cbnz	r0, 800cdfe <PixelDmxParams::callbackFunction(char const*)+0x46>
 800cdd4:	9b02      	ldr	r3, [sp, #8]
 800cdd6:	3320      	adds	r3, #32
 800cdd8:	446b      	add	r3, sp
 800cdda:	f803 0c10 	strb.w	r0, [r3, #-16]
 800cdde:	a804      	add	r0, sp, #16
 800cde0:	f001 f93a 	bl	800e058 <pixel::pixel_get_type(char const*)>
 800cde4:	6823      	ldr	r3, [r4, #0]
 800cde6:	280e      	cmp	r0, #14
 800cde8:	bf0d      	iteet	eq
 800cdea:	2203      	moveq	r2, #3
 800cdec:	7120      	strbne	r0, [r4, #4]
 800cdee:	f043 0301 	orrne.w	r3, r3, #1
 800cdf2:	7122      	strbeq	r2, [r4, #4]
 800cdf4:	bf08      	it	eq
 800cdf6:	f023 0301 	biceq.w	r3, r3, #1
 800cdfa:	6023      	str	r3, [r4, #0]
 800cdfc:	e033      	b.n	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cdfe:	497d      	ldr	r1, [pc, #500]	@ (800cff4 <PixelDmxParams::callbackFunction(char const*)+0x23c>)
 800ce00:	f10d 0202 	add.w	r2, sp, #2
 800ce04:	4628      	mov	r0, r5
 800ce06:	f006 fecc 	bl	8013ba2 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ce0a:	b990      	cbnz	r0, 800ce32 <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800ce0c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800ce10:	6823      	ldr	r3, [r4, #0]
 800ce12:	1e51      	subs	r1, r2, #1
 800ce14:	f5b1 7f2a 	cmp.w	r1, #680	@ 0x2a8
 800ce18:	bf2d      	iteet	cs
 800ce1a:	f06f 0255 	mvncs.w	r2, #85	@ 0x55
 800ce1e:	f8a4 2005 	strhcc.w	r2, [r4, #5]
 800ce22:	f043 0302 	orrcc.w	r3, r3, #2
 800ce26:	7162      	strbcs	r2, [r4, #5]
 800ce28:	bf24      	itt	cs
 800ce2a:	71a0      	strbcs	r0, [r4, #6]
 800ce2c:	f023 0302 	biccs.w	r3, r3, #2
 800ce30:	e7e3      	b.n	800cdfa <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ce32:	2303      	movs	r3, #3
 800ce34:	9302      	str	r3, [sp, #8]
 800ce36:	4970      	ldr	r1, [pc, #448]	@ (800cff8 <PixelDmxParams::callbackFunction(char const*)+0x240>)
 800ce38:	ab02      	add	r3, sp, #8
 800ce3a:	aa04      	add	r2, sp, #16
 800ce3c:	4628      	mov	r0, r5
 800ce3e:	f006 fe05 	bl	8013a4c <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800ce42:	b998      	cbnz	r0, 800ce6c <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800ce44:	9b02      	ldr	r3, [sp, #8]
 800ce46:	3320      	adds	r3, #32
 800ce48:	446b      	add	r3, sp
 800ce4a:	f803 0c10 	strb.w	r0, [r3, #-16]
 800ce4e:	a804      	add	r0, sp, #16
 800ce50:	f001 f926 	bl	800e0a0 <pixel::pixel_get_map(char const*)>
 800ce54:	6823      	ldr	r3, [r4, #0]
 800ce56:	74e0      	strb	r0, [r4, #19]
 800ce58:	2806      	cmp	r0, #6
 800ce5a:	bf14      	ite	ne
 800ce5c:	f443 7300 	orrne.w	r3, r3, #512	@ 0x200
 800ce60:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 800ce64:	6023      	str	r3, [r4, #0]
 800ce66:	b008      	add	sp, #32
 800ce68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce6c:	4963      	ldr	r1, [pc, #396]	@ (800cffc <PixelDmxParams::callbackFunction(char const*)+0x244>)
 800ce6e:	aa01      	add	r2, sp, #4
 800ce70:	4628      	mov	r0, r5
 800ce72:	f006 fe04 	bl	8013a7e <Sscan::Float(char const*, char const*, float&)>
 800ce76:	b968      	cbnz	r0, 800ce94 <PixelDmxParams::callbackFunction(char const*)+0xdc>
 800ce78:	ed9d 0a01 	vldr	s0, [sp, #4]
 800ce7c:	f7ff fec6 	bl	800cc0c <pixel::pixel_convert_TxH(float)>
 800ce80:	6823      	ldr	r3, [r4, #0]
 800ce82:	b120      	cbz	r0, 800ce8e <PixelDmxParams::callbackFunction(char const*)+0xd6>
 800ce84:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800ce88:	6023      	str	r3, [r4, #0]
 800ce8a:	7520      	strb	r0, [r4, #20]
 800ce8c:	e7eb      	b.n	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ce8e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800ce92:	e7f9      	b.n	800ce88 <PixelDmxParams::callbackFunction(char const*)+0xd0>
 800ce94:	495a      	ldr	r1, [pc, #360]	@ (800d000 <PixelDmxParams::callbackFunction(char const*)+0x248>)
 800ce96:	aa01      	add	r2, sp, #4
 800ce98:	4628      	mov	r0, r5
 800ce9a:	f006 fdf0 	bl	8013a7e <Sscan::Float(char const*, char const*, float&)>
 800ce9e:	b968      	cbnz	r0, 800cebc <PixelDmxParams::callbackFunction(char const*)+0x104>
 800cea0:	ed9d 0a01 	vldr	s0, [sp, #4]
 800cea4:	f7ff feb2 	bl	800cc0c <pixel::pixel_convert_TxH(float)>
 800cea8:	6823      	ldr	r3, [r4, #0]
 800ceaa:	b120      	cbz	r0, 800ceb6 <PixelDmxParams::callbackFunction(char const*)+0xfe>
 800ceac:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800ceb0:	6023      	str	r3, [r4, #0]
 800ceb2:	7560      	strb	r0, [r4, #21]
 800ceb4:	e7d7      	b.n	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ceb6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800ceba:	e7f9      	b.n	800ceb0 <PixelDmxParams::callbackFunction(char const*)+0xf8>
 800cebc:	4951      	ldr	r1, [pc, #324]	@ (800d004 <PixelDmxParams::callbackFunction(char const*)+0x24c>)
 800cebe:	f10d 0202 	add.w	r2, sp, #2
 800cec2:	4628      	mov	r0, r5
 800cec4:	f006 fe6d 	bl	8013ba2 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cec8:	b998      	cbnz	r0, 800cef2 <PixelDmxParams::callbackFunction(char const*)+0x13a>
 800ceca:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800cece:	6823      	ldr	r3, [r4, #0]
 800ced0:	1e8a      	subs	r2, r1, #2
 800ced2:	b292      	uxth	r2, r2
 800ced4:	f240 25a6 	movw	r5, #678	@ 0x2a6
 800ced8:	42aa      	cmp	r2, r5
 800ceda:	bf81      	itttt	hi
 800cedc:	2201      	movhi	r2, #1
 800cede:	7462      	strbhi	r2, [r4, #17]
 800cee0:	74a0      	strbhi	r0, [r4, #18]
 800cee2:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 800cee6:	bf9c      	itt	ls
 800cee8:	f8a4 1011 	strhls.w	r1, [r4, #17]
 800ceec:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 800cef0:	e783      	b.n	800cdfa <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cef2:	4945      	ldr	r1, [pc, #276]	@ (800d008 <PixelDmxParams::callbackFunction(char const*)+0x250>)
 800cef4:	aa03      	add	r2, sp, #12
 800cef6:	4628      	mov	r0, r5
 800cef8:	f006 fe6f 	bl	8013bda <Sscan::Uint32(char const*, char const*, unsigned long&)>
 800cefc:	b960      	cbnz	r0, 800cf18 <PixelDmxParams::callbackFunction(char const*)+0x160>
 800cefe:	9a03      	ldr	r2, [sp, #12]
 800cf00:	4942      	ldr	r1, [pc, #264]	@ (800d00c <PixelDmxParams::callbackFunction(char const*)+0x254>)
 800cf02:	6823      	ldr	r3, [r4, #0]
 800cf04:	f8c4 200a 	str.w	r2, [r4, #10]
 800cf08:	428a      	cmp	r2, r1
 800cf0a:	bf14      	ite	ne
 800cf0c:	f043 0310 	orrne.w	r3, r3, #16
 800cf10:	f023 0310 	biceq.w	r3, r3, #16
 800cf14:	6023      	str	r3, [r4, #0]
 800cf16:	e7a6      	b.n	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cf18:	493d      	ldr	r1, [pc, #244]	@ (800d010 <PixelDmxParams::callbackFunction(char const*)+0x258>)
 800cf1a:	f10d 0201 	add.w	r2, sp, #1
 800cf1e:	4628      	mov	r0, r5
 800cf20:	f006 fe84 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cf24:	b988      	cbnz	r0, 800cf4a <PixelDmxParams::callbackFunction(char const*)+0x192>
 800cf26:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cf2a:	6823      	ldr	r3, [r4, #0]
 800cf2c:	1e4a      	subs	r2, r1, #1
 800cf2e:	b2d2      	uxtb	r2, r2
 800cf30:	2afd      	cmp	r2, #253	@ 0xfd
 800cf32:	bf89      	itett	hi
 800cf34:	f023 0320 	bichi.w	r3, r3, #32
 800cf38:	f043 0320 	orrls.w	r3, r3, #32
 800cf3c:	6023      	strhi	r3, [r4, #0]
 800cf3e:	23ff      	movhi	r3, #255	@ 0xff
 800cf40:	bf9a      	itte	ls
 800cf42:	6023      	strls	r3, [r4, #0]
 800cf44:	73a1      	strbls	r1, [r4, #14]
 800cf46:	73a3      	strbhi	r3, [r4, #14]
 800cf48:	e78d      	b.n	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cf4a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800d01c <PixelDmxParams::callbackFunction(char const*)+0x264>
 800cf4e:	2600      	movs	r6, #0
 800cf50:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 800cf54:	f10d 0202 	add.w	r2, sp, #2
 800cf58:	4641      	mov	r1, r8
 800cf5a:	4628      	mov	r0, r5
 800cf5c:	f006 fe21 	bl	8013ba2 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cf60:	b960      	cbnz	r0, 800cf7c <PixelDmxParams::callbackFunction(char const*)+0x1c4>
 800cf62:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800cf66:	6823      	ldr	r3, [r4, #0]
 800cf68:	fa07 f006 	lsl.w	r0, r7, r6
 800cf6c:	f106 0208 	add.w	r2, r6, #8
 800cf70:	b1f9      	cbz	r1, 800cfb2 <PixelDmxParams::callbackFunction(char const*)+0x1fa>
 800cf72:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800cf76:	4303      	orrs	r3, r0
 800cf78:	80d1      	strh	r1, [r2, #6]
 800cf7a:	6023      	str	r3, [r4, #0]
 800cf7c:	3601      	adds	r6, #1
 800cf7e:	2e08      	cmp	r6, #8
 800cf80:	f108 0814 	add.w	r8, r8, #20
 800cf84:	d1e6      	bne.n	800cf54 <PixelDmxParams::callbackFunction(char const*)+0x19c>
 800cf86:	4923      	ldr	r1, [pc, #140]	@ (800d014 <PixelDmxParams::callbackFunction(char const*)+0x25c>)
 800cf88:	f10d 0201 	add.w	r2, sp, #1
 800cf8c:	4628      	mov	r0, r5
 800cf8e:	f006 fe4d 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cf92:	b9b0      	cbnz	r0, 800cfc2 <PixelDmxParams::callbackFunction(char const*)+0x20a>
 800cf94:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cf98:	6823      	ldr	r3, [r4, #0]
 800cf9a:	1e91      	subs	r1, r2, #2
 800cf9c:	2906      	cmp	r1, #6
 800cf9e:	bf8d      	iteet	hi
 800cfa0:	2201      	movhi	r2, #1
 800cfa2:	73e2      	strbls	r2, [r4, #15]
 800cfa4:	f043 0340 	orrls.w	r3, r3, #64	@ 0x40
 800cfa8:	73e2      	strbhi	r2, [r4, #15]
 800cfaa:	bf88      	it	hi
 800cfac:	f023 0340 	bichi.w	r3, r3, #64	@ 0x40
 800cfb0:	e723      	b.n	800cdfa <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cfb2:	00b1      	lsls	r1, r6, #2
 800cfb4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800cfb8:	3101      	adds	r1, #1
 800cfba:	80d1      	strh	r1, [r2, #6]
 800cfbc:	ea23 0300 	bic.w	r3, r3, r0
 800cfc0:	e7db      	b.n	800cf7a <PixelDmxParams::callbackFunction(char const*)+0x1c2>
 800cfc2:	4915      	ldr	r1, [pc, #84]	@ (800d018 <PixelDmxParams::callbackFunction(char const*)+0x260>)
 800cfc4:	f10d 0201 	add.w	r2, sp, #1
 800cfc8:	4628      	mov	r0, r5
 800cfca:	f006 fe2f 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cfce:	2800      	cmp	r0, #0
 800cfd0:	f47f af49 	bne.w	800ce66 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cfd4:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cfd8:	6823      	ldr	r3, [r4, #0]
 800cfda:	1e51      	subs	r1, r2, #1
 800cfdc:	2904      	cmp	r1, #4
 800cfde:	bf99      	ittee	ls
 800cfe0:	7422      	strbls	r2, [r4, #16]
 800cfe2:	f043 0308 	orrls.w	r3, r3, #8
 800cfe6:	7420      	strbhi	r0, [r4, #16]
 800cfe8:	f023 0308 	bichi.w	r3, r3, #8
 800cfec:	e705      	b.n	800cdfa <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cfee:	bf00      	nop
 800cff0:	0801a52c 	stmdaeq	r1, {r2, r3, r5, r8, sl, sp, pc}
 800cff4:	0801a502 	stmdaeq	r1, {r1, r8, sl, sp, pc}
 800cff8:	0801a51c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, pc}
 800cffc:	0801a514 	stmdaeq	r1, {r2, r4, r8, sl, sp, pc}
 800d000:	0801a50c 	stmdaeq	r1, {r2, r3, r8, sl, sp, pc}
 800d004:	0801a4f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp, pc}
 800d008:	0801a4e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, sp, pc}
 800d00c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d010:	0801a4d1 	stmdaeq	r1, {r0, r4, r6, r7, sl, sp, pc}
 800d014:	0801a4c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, sp, pc}
 800d018:	0801a4b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp, pc}
 800d01c:	0801a541 	stmdaeq	r1, {r0, r6, r8, sl, sp, pc}

0800d020 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800d020:	f7ff beca 	b.w	800cdb8 <PixelDmxParams::callbackFunction(char const*)>

0800d024 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)>:
 800d024:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d026:	4604      	mov	r4, r0
 800d028:	b087      	sub	sp, #28
 800d02a:	4615      	mov	r5, r2
 800d02c:	461e      	mov	r6, r3
 800d02e:	2900      	cmp	r1, #0
 800d030:	f000 808d 	beq.w	800d14e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x12a>
 800d034:	2226      	movs	r2, #38	@ 0x26
 800d036:	f009 fbd0 	bl	80167da <memmove>
 800d03a:	4633      	mov	r3, r6
 800d03c:	4979      	ldr	r1, [pc, #484]	@ (800d224 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 800d03e:	462a      	mov	r2, r5
 800d040:	a803      	add	r0, sp, #12
 800d042:	f006 fbf3 	bl	801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800d046:	7920      	ldrb	r0, [r4, #4]
 800d048:	f000 fffa 	bl	800e040 <pixel::pixel_get_type(pixel::Type)>
 800d04c:	6823      	ldr	r3, [r4, #0]
 800d04e:	4976      	ldr	r1, [pc, #472]	@ (800d228 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 800d050:	4602      	mov	r2, r0
 800d052:	f003 0301 	and.w	r3, r3, #1
 800d056:	a803      	add	r0, sp, #12
 800d058:	f7ff fd6e 	bl	800cb38 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d05c:	6823      	ldr	r3, [r4, #0]
 800d05e:	f8b4 2005 	ldrh.w	r2, [r4, #5]
 800d062:	4972      	ldr	r1, [pc, #456]	@ (800d22c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 800d064:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d068:	a803      	add	r0, sp, #12
 800d06a:	f7ff fd3d 	bl	800cae8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d06e:	4970      	ldr	r1, [pc, #448]	@ (800d230 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 800d070:	a803      	add	r0, sp, #12
 800d072:	f006 fc97 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d076:	6823      	ldr	r3, [r4, #0]
 800d078:	059e      	lsls	r6, r3, #22
 800d07a:	d407      	bmi.n	800d08c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800d07c:	7923      	ldrb	r3, [r4, #4]
 800d07e:	3b01      	subs	r3, #1
 800d080:	2b09      	cmp	r3, #9
 800d082:	bf96      	itet	ls
 800d084:	4a6b      	ldrls	r2, [pc, #428]	@ (800d234 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 800d086:	2302      	movhi	r3, #2
 800d088:	56d3      	ldrsbls	r3, [r2, r3]
 800d08a:	74e3      	strb	r3, [r4, #19]
 800d08c:	7ce0      	ldrb	r0, [r4, #19]
 800d08e:	f001 f82f 	bl	800e0f0 <pixel::pixel_get_map(pixel::Map)>
 800d092:	6823      	ldr	r3, [r4, #0]
 800d094:	4968      	ldr	r1, [pc, #416]	@ (800d238 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 800d096:	4602      	mov	r2, r0
 800d098:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800d09c:	a803      	add	r0, sp, #12
 800d09e:	f7ff fd4b 	bl	800cb38 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d0a2:	6822      	ldr	r2, [r4, #0]
 800d0a4:	f402 6340 	and.w	r3, r2, #3072	@ 0xc00
 800d0a8:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800d0ac:	d00e      	beq.n	800d0cc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0xa8>
 800d0ae:	7923      	ldrb	r3, [r4, #4]
 800d0b0:	2b03      	cmp	r3, #3
 800d0b2:	d04f      	beq.n	800d154 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x130>
 800d0b4:	3b08      	subs	r3, #8
 800d0b6:	2b02      	cmp	r3, #2
 800d0b8:	bf8c      	ite	hi
 800d0ba:	23f0      	movhi	r3, #240	@ 0xf0
 800d0bc:	23fc      	movls	r3, #252	@ 0xfc
 800d0be:	0555      	lsls	r5, r2, #21
 800d0c0:	bf5c      	itt	pl
 800d0c2:	21c0      	movpl	r1, #192	@ 0xc0
 800d0c4:	7521      	strbpl	r1, [r4, #20]
 800d0c6:	0510      	lsls	r0, r2, #20
 800d0c8:	bf58      	it	pl
 800d0ca:	7563      	strbpl	r3, [r4, #21]
 800d0cc:	495b      	ldr	r1, [pc, #364]	@ (800d23c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 800d0ce:	a803      	add	r0, sp, #12
 800d0d0:	f006 fc68 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d0d4:	7d20      	ldrb	r0, [r4, #20]
 800d0d6:	f7fc fac1 	bl	800965c <pixel::pixel_convert_TxH(unsigned char)>
 800d0da:	6822      	ldr	r2, [r4, #0]
 800d0dc:	4958      	ldr	r1, [pc, #352]	@ (800d240 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 800d0de:	2302      	movs	r3, #2
 800d0e0:	f3c2 2280 	ubfx	r2, r2, #10, #1
 800d0e4:	a803      	add	r0, sp, #12
 800d0e6:	f7ff fd4f 	bl	800cb88 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>
 800d0ea:	7d60      	ldrb	r0, [r4, #21]
 800d0ec:	f7fc fab6 	bl	800965c <pixel::pixel_convert_TxH(unsigned char)>
 800d0f0:	6822      	ldr	r2, [r4, #0]
 800d0f2:	4954      	ldr	r1, [pc, #336]	@ (800d244 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 800d0f4:	2302      	movs	r3, #2
 800d0f6:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800d0fa:	a803      	add	r0, sp, #12
 800d0fc:	f7ff fd44 	bl	800cb88 <bool PropertiesBuilder::Add<float>(char const*, float, bool, int) [clone .isra.0]>
 800d100:	4951      	ldr	r1, [pc, #324]	@ (800d248 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 800d102:	a803      	add	r0, sp, #12
 800d104:	f006 fc4e 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d108:	6823      	ldr	r3, [r4, #0]
 800d10a:	f8b4 2011 	ldrh.w	r2, [r4, #17]
 800d10e:	494f      	ldr	r1, [pc, #316]	@ (800d24c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 800d110:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800d114:	a803      	add	r0, sp, #12
 800d116:	f7ff fce7 	bl	800cae8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d11a:	494d      	ldr	r1, [pc, #308]	@ (800d250 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 800d11c:	a803      	add	r0, sp, #12
 800d11e:	f006 fc41 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d122:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d126:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d12a:	f8d4 300a 	ldr.w	r3, [r4, #10]
 800d12e:	6821      	ldr	r1, [r4, #0]
 800d130:	42aa      	cmp	r2, r5
 800d132:	d220      	bcs.n	800d176 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x152>
 800d134:	9803      	ldr	r0, [sp, #12]
 800d136:	06c9      	lsls	r1, r1, #27
 800d138:	4410      	add	r0, r2
 800d13a:	eba5 0502 	sub.w	r5, r5, r2
 800d13e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d142:	d409      	bmi.n	800d158 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800d144:	b952      	cbnz	r2, 800d15c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800d146:	9300      	str	r3, [sp, #0]
 800d148:	4a42      	ldr	r2, [pc, #264]	@ (800d254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 800d14a:	4b43      	ldr	r3, [pc, #268]	@ (800d258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800d14c:	e009      	b.n	800d162 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x13e>
 800d14e:	f7ff fdb3 	bl	800ccb8 <PixelDmxParamsStore::Copy(pixeldmxparams::Params*)>
 800d152:	e772      	b.n	800d03a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x16>
 800d154:	23f8      	movs	r3, #248	@ 0xf8
 800d156:	e7b2      	b.n	800d0be <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x9a>
 800d158:	2a00      	cmp	r2, #0
 800d15a:	d05e      	beq.n	800d21a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x1f6>
 800d15c:	9300      	str	r3, [sp, #0]
 800d15e:	4a3f      	ldr	r2, [pc, #252]	@ (800d25c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 800d160:	4b3d      	ldr	r3, [pc, #244]	@ (800d258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800d162:	4629      	mov	r1, r5
 800d164:	f009 fe5c 	bl	8016e20 <snprintf>
 800d168:	4285      	cmp	r5, r0
 800d16a:	bfa2      	ittt	ge
 800d16c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d170:	18c0      	addge	r0, r0, r3
 800d172:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d176:	493a      	ldr	r1, [pc, #232]	@ (800d260 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x23c>)
 800d178:	4e3a      	ldr	r6, [pc, #232]	@ (800d264 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x240>)
 800d17a:	a803      	add	r0, sp, #12
 800d17c:	f006 fc12 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d180:	6823      	ldr	r3, [r4, #0]
 800d182:	7ba2      	ldrb	r2, [r4, #14]
 800d184:	4938      	ldr	r1, [pc, #224]	@ (800d268 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x244>)
 800d186:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800d18a:	a803      	add	r0, sp, #12
 800d18c:	f7ff fc84 	bl	800ca98 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d190:	2500      	movs	r5, #0
 800d192:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 800d196:	6822      	ldr	r2, [r4, #0]
 800d198:	fa07 f305 	lsl.w	r3, r7, r5
 800d19c:	4393      	bics	r3, r2
 800d19e:	f105 0208 	add.w	r2, r5, #8
 800d1a2:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800d1a6:	bf0c      	ite	eq
 800d1a8:	2301      	moveq	r3, #1
 800d1aa:	2300      	movne	r3, #0
 800d1ac:	4631      	mov	r1, r6
 800d1ae:	88d2      	ldrh	r2, [r2, #6]
 800d1b0:	a803      	add	r0, sp, #12
 800d1b2:	3501      	adds	r5, #1
 800d1b4:	f7ff fc98 	bl	800cae8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 800d1b8:	2d08      	cmp	r5, #8
 800d1ba:	f106 0614 	add.w	r6, r6, #20
 800d1be:	d1ea      	bne.n	800d196 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x172>
 800d1c0:	6823      	ldr	r3, [r4, #0]
 800d1c2:	7be2      	ldrb	r2, [r4, #15]
 800d1c4:	4929      	ldr	r1, [pc, #164]	@ (800d26c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x248>)
 800d1c6:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800d1ca:	a803      	add	r0, sp, #12
 800d1cc:	f7ff fc64 	bl	800ca98 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d1d0:	4927      	ldr	r1, [pc, #156]	@ (800d270 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x24c>)
 800d1d2:	a803      	add	r0, sp, #12
 800d1d4:	f006 fbe6 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 800d1d8:	6823      	ldr	r3, [r4, #0]
 800d1da:	7c22      	ldrb	r2, [r4, #16]
 800d1dc:	4925      	ldr	r1, [pc, #148]	@ (800d274 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x250>)
 800d1de:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d1e2:	a803      	add	r0, sp, #12
 800d1e4:	f7ff fc58 	bl	800ca98 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 800d1e8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d1ec:	b17b      	cbz	r3, 800d20e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x1ea>
 800d1ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d1f2:	9b03      	ldr	r3, [sp, #12]
 800d1f4:	4413      	add	r3, r2
 800d1f6:	227d      	movs	r2, #125	@ 0x7d
 800d1f8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d1fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d200:	9903      	ldr	r1, [sp, #12]
 800d202:	54ca      	strb	r2, [r1, r3]
 800d204:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d208:	3301      	adds	r3, #1
 800d20a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d20e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d214:	601a      	str	r2, [r3, #0]
 800d216:	b007      	add	sp, #28
 800d218:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d21a:	9300      	str	r3, [sp, #0]
 800d21c:	4a16      	ldr	r2, [pc, #88]	@ (800d278 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x254>)
 800d21e:	4b0e      	ldr	r3, [pc, #56]	@ (800d258 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 800d220:	e79f      	b.n	800d162 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned long, unsigned long&)+0x13e>
 800d222:	bf00      	nop
 800d224:	0801a535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, sp, pc}
 800d228:	0801a52c 	stmdaeq	r1, {r2, r3, r5, r8, sl, sp, pc}
 800d22c:	0801a502 	stmdaeq	r1, {r1, r8, sl, sp, pc}
 800d230:	08017b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp, lr}
 800d234:	08019f89 	stmdaeq	r1, {r0, r3, r7, r8, r9, sl, fp, ip, pc}
 800d238:	0801a51c 	stmdaeq	r1, {r2, r3, r4, r8, sl, sp, pc}
 800d23c:	08017b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, lr}
 800d240:	0801a514 	stmdaeq	r1, {r2, r4, r8, sl, sp, pc}
 800d244:	0801a50c 	stmdaeq	r1, {r2, r3, r8, sl, sp, pc}
 800d248:	08017b81 	stmdaeq	r1, {r0, r7, r8, r9, fp, ip, sp, lr}
 800d24c:	0801a4f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, sp, pc}
 800d250:	08017b8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, fp, ip, sp, lr}
 800d254:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 800d258:	0801a4e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, sp, pc}
 800d25c:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800d260:	08017b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, sp, lr}
 800d264:	0801a541 	stmdaeq	r1, {r0, r6, r8, sl, sp, pc}
 800d268:	0801a4d1 	stmdaeq	r1, {r0, r4, r6, r7, sl, sp, pc}
 800d26c:	0801a4c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, sp, pc}
 800d270:	08017baa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, fp, ip, sp, lr}
 800d274:	0801a4b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, sp, pc}
 800d278:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

0800d27c <PixelDmxParams::Set()>:
 800d27c:	4b1a      	ldr	r3, [pc, #104]	@ (800d2e8 <PixelDmxParams::Set()+0x6c>)
 800d27e:	681a      	ldr	r2, [r3, #0]
 800d280:	6803      	ldr	r3, [r0, #0]
 800d282:	07d9      	lsls	r1, r3, #31
 800d284:	bf44      	itt	mi
 800d286:	7901      	ldrbmi	r1, [r0, #4]
 800d288:	60d1      	strmi	r1, [r2, #12]
 800d28a:	0799      	lsls	r1, r3, #30
 800d28c:	d505      	bpl.n	800d29a <PixelDmxParams::Set()+0x1e>
 800d28e:	f8b0 1005 	ldrh.w	r1, [r0, #5]
 800d292:	2900      	cmp	r1, #0
 800d294:	bf08      	it	eq
 800d296:	21aa      	moveq	r1, #170	@ 0xaa
 800d298:	6011      	str	r1, [r2, #0]
 800d29a:	0599      	lsls	r1, r3, #22
 800d29c:	bf44      	itt	mi
 800d29e:	7cc1      	ldrbmi	r1, [r0, #19]
 800d2a0:	6111      	strmi	r1, [r2, #16]
 800d2a2:	0559      	lsls	r1, r3, #21
 800d2a4:	bf44      	itt	mi
 800d2a6:	7d01      	ldrbmi	r1, [r0, #20]
 800d2a8:	7551      	strbmi	r1, [r2, #21]
 800d2aa:	0519      	lsls	r1, r3, #20
 800d2ac:	bf44      	itt	mi
 800d2ae:	7d41      	ldrbmi	r1, [r0, #21]
 800d2b0:	7591      	strbmi	r1, [r2, #22]
 800d2b2:	06d9      	lsls	r1, r3, #27
 800d2b4:	bf44      	itt	mi
 800d2b6:	f8d0 100a 	ldrmi.w	r1, [r0, #10]
 800d2ba:	6051      	strmi	r1, [r2, #4]
 800d2bc:	0699      	lsls	r1, r3, #26
 800d2be:	bf44      	itt	mi
 800d2c0:	7b81      	ldrbmi	r1, [r0, #14]
 800d2c2:	75d1      	strbmi	r1, [r2, #23]
 800d2c4:	4a09      	ldr	r2, [pc, #36]	@ (800d2ec <PixelDmxParams::Set()+0x70>)
 800d2c6:	0759      	lsls	r1, r3, #29
 800d2c8:	6812      	ldr	r2, [r2, #0]
 800d2ca:	bf44      	itt	mi
 800d2cc:	f8b0 1007 	ldrhmi.w	r1, [r0, #7]
 800d2d0:	62d1      	strmi	r1, [r2, #44]	@ 0x2c
 800d2d2:	05d9      	lsls	r1, r3, #23
 800d2d4:	bf44      	itt	mi
 800d2d6:	f8b0 1011 	ldrhmi.w	r1, [r0, #17]
 800d2da:	6211      	strmi	r1, [r2, #32]
 800d2dc:	065b      	lsls	r3, r3, #25
 800d2de:	bf44      	itt	mi
 800d2e0:	7bc3      	ldrbmi	r3, [r0, #15]
 800d2e2:	61d3      	strmi	r3, [r2, #28]
 800d2e4:	4770      	bx	lr
 800d2e6:	bf00      	nop
 800d2e8:	20000078 	andcs	r0, r0, r8, ror r0
 800d2ec:	20000074 	andcs	r0, r0, r4, ror r0

0800d2f0 <LightSet::GetRefreshRate()>:
 800d2f0:	2000      	movs	r0, #0
 800d2f2:	4770      	bx	lr

0800d2f4 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 800d2f4:	2001      	movs	r0, #1
 800d2f6:	2300      	movs	r3, #0
 800d2f8:	7093      	strb	r3, [r2, #2]
 800d2fa:	8010      	strh	r0, [r2, #0]
 800d2fc:	4770      	bx	lr
 800d2fe:	bf00      	nop

0800d300 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800d300:	2000      	movs	r0, #0
 800d302:	4770      	bx	lr

0800d304 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800d304:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800d308:	4770      	bx	lr
 800d30a:	bf00      	nop

0800d30c <WS28xxDmxMulti::GetDmxFootprint()>:
 800d30c:	2000      	movs	r0, #0
 800d30e:	4770      	bx	lr

0800d310 <WS28xxDmxMulti::Start(unsigned long)>:
 800d310:	6882      	ldr	r2, [r0, #8]
 800d312:	b922      	cbnz	r2, 800d31e <WS28xxDmxMulti::Start(unsigned long)+0xe>
 800d314:	4b05      	ldr	r3, [pc, #20]	@ (800d32c <WS28xxDmxMulti::Start(unsigned long)+0x1c>)
 800d316:	2204      	movs	r2, #4
 800d318:	f8c3 2818 	str.w	r2, [r3, #2072]	@ 0x818
 800d31c:	6882      	ldr	r2, [r0, #8]
 800d31e:	f04f 0c01 	mov.w	ip, #1
 800d322:	fa0c f101 	lsl.w	r1, ip, r1
 800d326:	4311      	orrs	r1, r2
 800d328:	6081      	str	r1, [r0, #8]
 800d32a:	4770      	bx	lr
 800d32c:	40020000 	andmi	r0, r2, r0

0800d330 <WS28xxDmxMulti::Stop(unsigned long)>:
 800d330:	6883      	ldr	r3, [r0, #8]
 800d332:	2201      	movs	r2, #1
 800d334:	fa02 f101 	lsl.w	r1, r2, r1
 800d338:	420b      	tst	r3, r1
 800d33a:	bf1c      	itt	ne
 800d33c:	438b      	bicne	r3, r1
 800d33e:	6083      	strne	r3, [r0, #8]
 800d340:	b91b      	cbnz	r3, 800d34a <WS28xxDmxMulti::Stop(unsigned long)+0x1a>
 800d342:	4802      	ldr	r0, [pc, #8]	@ (800d34c <WS28xxDmxMulti::Stop(unsigned long)+0x1c>)
 800d344:	2204      	movs	r2, #4
 800d346:	f8c0 2828 	str.w	r2, [r0, #2088]	@ 0x828
 800d34a:	4770      	bx	lr
 800d34c:	40020000 	andmi	r0, r2, r0

0800d350 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800d350:	b538      	push	{r3, r4, r5, lr}
 800d352:	6845      	ldr	r5, [r0, #4]
 800d354:	4b06      	ldr	r3, [pc, #24]	@ (800d370 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x20>)
 800d356:	6003      	str	r3, [r0, #0]
 800d358:	4604      	mov	r4, r0
 800d35a:	b135      	cbz	r5, 800d36a <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1a>
 800d35c:	4628      	mov	r0, r5
 800d35e:	f001 fad9 	bl	800e914 <WS28xxMulti::~WS28xxMulti()>
 800d362:	2104      	movs	r1, #4
 800d364:	4628      	mov	r0, r5
 800d366:	f009 ff3f 	bl	80171e8 <operator delete(void*, unsigned int)>
 800d36a:	4620      	mov	r0, r4
 800d36c:	bd38      	pop	{r3, r4, r5, pc}
 800d36e:	bf00      	nop
 800d370:	08019fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip, pc}

0800d374 <WS28xxDmxMulti::Sync()>:
 800d374:	b510      	push	{r4, lr}
 800d376:	4604      	mov	r4, r0
 800d378:	6860      	ldr	r0, [r4, #4]
 800d37a:	f002 f8b9 	bl	800f4f0 <WS28xxMulti::IsUpdating()>
 800d37e:	2800      	cmp	r0, #0
 800d380:	d1fa      	bne.n	800d378 <WS28xxDmxMulti::Sync()+0x4>
 800d382:	6860      	ldr	r0, [r4, #4]
 800d384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d388:	f001 be00 	b.w	800ef8c <WS28xxMulti::Update()>

0800d38c <WS28xxDmxMulti::FullOn()>:
 800d38c:	b510      	push	{r4, lr}
 800d38e:	4604      	mov	r4, r0
 800d390:	6860      	ldr	r0, [r4, #4]
 800d392:	f002 f8ad 	bl	800f4f0 <WS28xxMulti::IsUpdating()>
 800d396:	2800      	cmp	r0, #0
 800d398:	d1fa      	bne.n	800d390 <WS28xxDmxMulti::FullOn()+0x4>
 800d39a:	6860      	ldr	r0, [r4, #4]
 800d39c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d3a0:	f001 bfb0 	b.w	800f304 <WS28xxMulti::FullOn()>

0800d3a4 <WS28xxDmxMulti::Print()>:
 800d3a4:	b510      	push	{r4, lr}
 800d3a6:	4b5e      	ldr	r3, [pc, #376]	@ (800d520 <WS28xxDmxMulti::Print()+0x17c>)
 800d3a8:	485e      	ldr	r0, [pc, #376]	@ (800d524 <WS28xxDmxMulti::Print()+0x180>)
 800d3aa:	681c      	ldr	r4, [r3, #0]
 800d3ac:	b082      	sub	sp, #8
 800d3ae:	f009 fd64 	bl	8016e7a <puts>
 800d3b2:	68e0      	ldr	r0, [r4, #12]
 800d3b4:	f000 fe44 	bl	800e040 <pixel::pixel_get_type(pixel::Type)>
 800d3b8:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800d3bc:	4601      	mov	r1, r0
 800d3be:	485a      	ldr	r0, [pc, #360]	@ (800d528 <WS28xxDmxMulti::Print()+0x184>)
 800d3c0:	f009 fd06 	bl	8016dd0 <printf>
 800d3c4:	4859      	ldr	r0, [pc, #356]	@ (800d52c <WS28xxDmxMulti::Print()+0x188>)
 800d3c6:	6821      	ldr	r1, [r4, #0]
 800d3c8:	f009 fd02 	bl	8016dd0 <printf>
 800d3cc:	7d20      	ldrb	r0, [r4, #20]
 800d3ce:	bb18      	cbnz	r0, 800d418 <WS28xxDmxMulti::Print()+0x74>
 800d3d0:	68e1      	ldr	r1, [r4, #12]
 800d3d2:	f1a1 020b 	sub.w	r2, r1, #11
 800d3d6:	2a01      	cmp	r2, #1
 800d3d8:	d942      	bls.n	800d460 <WS28xxDmxMulti::Print()+0xbc>
 800d3da:	6861      	ldr	r1, [r4, #4]
 800d3dc:	4854      	ldr	r0, [pc, #336]	@ (800d530 <WS28xxDmxMulti::Print()+0x18c>)
 800d3de:	f009 fcf7 	bl	8016dd0 <printf>
 800d3e2:	69a1      	ldr	r1, [r4, #24]
 800d3e4:	4853      	ldr	r0, [pc, #332]	@ (800d534 <WS28xxDmxMulti::Print()+0x190>)
 800d3e6:	f009 fcf3 	bl	8016dd0 <printf>
 800d3ea:	4853      	ldr	r0, [pc, #332]	@ (800d538 <WS28xxDmxMulti::Print()+0x194>)
 800d3ec:	f009 fd45 	bl	8016e7a <puts>
 800d3f0:	69e1      	ldr	r1, [r4, #28]
 800d3f2:	4852      	ldr	r0, [pc, #328]	@ (800d53c <WS28xxDmxMulti::Print()+0x198>)
 800d3f4:	f009 fcec 	bl	8016dd0 <printf>
 800d3f8:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800d3fc:	4850      	ldr	r0, [pc, #320]	@ (800d540 <WS28xxDmxMulti::Print()+0x19c>)
 800d3fe:	f009 fce7 	bl	8016dd0 <printf>
 800d402:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800d404:	484f      	ldr	r0, [pc, #316]	@ (800d544 <WS28xxDmxMulti::Print()+0x1a0>)
 800d406:	f009 fce3 	bl	8016dd0 <printf>
 800d40a:	484f      	ldr	r0, [pc, #316]	@ (800d548 <WS28xxDmxMulti::Print()+0x1a4>)
 800d40c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800d40e:	b002      	add	sp, #8
 800d410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d414:	f009 bcdc 	b.w	8016dd0 <printf>
 800d418:	6920      	ldr	r0, [r4, #16]
 800d41a:	f000 fe69 	bl	800e0f0 <pixel::pixel_get_map(pixel::Map)>
 800d41e:	6922      	ldr	r2, [r4, #16]
 800d420:	4601      	mov	r1, r0
 800d422:	484a      	ldr	r0, [pc, #296]	@ (800d54c <WS28xxDmxMulti::Print()+0x1a8>)
 800d424:	f009 fcd4 	bl	8016dd0 <printf>
 800d428:	7d61      	ldrb	r1, [r4, #21]
 800d42a:	29ff      	cmp	r1, #255	@ 0xff
 800d42c:	d01d      	beq.n	800d46a <WS28xxDmxMulti::Print()+0xc6>
 800d42e:	29df      	cmp	r1, #223	@ 0xdf
 800d430:	d94c      	bls.n	800d4cc <WS28xxDmxMulti::Print()+0x128>
 800d432:	f1a1 0ce0 	sub.w	ip, r1, #224	@ 0xe0
 800d436:	f1bc 0f1e 	cmp.w	ip, #30
 800d43a:	d816      	bhi.n	800d46a <WS28xxDmxMulti::Print()+0xc6>
 800d43c:	e8df f00c 	tbb	[pc, ip]
 800d440:	15151563 	ldrne	r1, [r5, #-1379]	@ 0xfffffa9d
 800d444:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d448:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d44c:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d450:	15151569 	ldrne	r1, [r5, #-1385]	@ 0xfffffa97
 800d454:	15151515 	ldrne	r1, [r5, #-1301]	@ 0xfffffaeb
 800d458:	15151551 	ldrne	r1, [r5, #-1361]	@ 0xfffffaaf
 800d45c:	004e1554 	subeq	r1, lr, r4, asr r5
 800d460:	7de1      	ldrb	r1, [r4, #23]
 800d462:	483b      	ldr	r0, [pc, #236]	@ (800d550 <WS28xxDmxMulti::Print()+0x1ac>)
 800d464:	f009 fcb4 	bl	8016dd0 <printf>
 800d468:	e7b7      	b.n	800d3da <WS28xxDmxMulti::Print()+0x36>
 800d46a:	2200      	movs	r2, #0
 800d46c:	2300      	movs	r3, #0
 800d46e:	9100      	str	r1, [sp, #0]
 800d470:	4838      	ldr	r0, [pc, #224]	@ (800d554 <WS28xxDmxMulti::Print()+0x1b0>)
 800d472:	f009 fcad 	bl	8016dd0 <printf>
 800d476:	7da1      	ldrb	r1, [r4, #22]
 800d478:	29ff      	cmp	r1, #255	@ 0xff
 800d47a:	d018      	beq.n	800d4ae <WS28xxDmxMulti::Print()+0x10a>
 800d47c:	29df      	cmp	r1, #223	@ 0xdf
 800d47e:	d91d      	bls.n	800d4bc <WS28xxDmxMulti::Print()+0x118>
 800d480:	f1a1 0ee0 	sub.w	lr, r1, #224	@ 0xe0
 800d484:	f1be 0f1e 	cmp.w	lr, #30
 800d488:	d811      	bhi.n	800d4ae <WS28xxDmxMulti::Print()+0x10a>
 800d48a:	e8df f00e 	tbb	[pc, lr]
 800d48e:	10101039 	andsne	r1, r0, r9, lsr r0
 800d492:	10101010 	andsne	r1, r0, r0, lsl r0
 800d496:	10101010 	andsne	r1, r0, r0, lsl r0
 800d49a:	10101010 	andsne	r1, r0, r0, lsl r0
 800d49e:	1010103f 	andsne	r1, r0, pc, lsr r0
 800d4a2:	10101010 	andsne	r1, r0, r0, lsl r0
 800d4a6:	10101036 	andsne	r1, r0, r6, lsr r0
 800d4aa:	00301033 	eorseq	r1, r0, r3, lsr r0
 800d4ae:	2200      	movs	r2, #0
 800d4b0:	2300      	movs	r3, #0
 800d4b2:	9100      	str	r1, [sp, #0]
 800d4b4:	4828      	ldr	r0, [pc, #160]	@ (800d558 <WS28xxDmxMulti::Print()+0x1b4>)
 800d4b6:	f009 fc8b 	bl	8016dd0 <printf>
 800d4ba:	e78e      	b.n	800d3da <WS28xxDmxMulti::Print()+0x36>
 800d4bc:	2980      	cmp	r1, #128	@ 0x80
 800d4be:	f04f 0200 	mov.w	r2, #0
 800d4c2:	d02b      	beq.n	800d51c <WS28xxDmxMulti::Print()+0x178>
 800d4c4:	29c0      	cmp	r1, #192	@ 0xc0
 800d4c6:	d1f3      	bne.n	800d4b0 <WS28xxDmxMulti::Print()+0x10c>
 800d4c8:	4b24      	ldr	r3, [pc, #144]	@ (800d55c <WS28xxDmxMulti::Print()+0x1b8>)
 800d4ca:	e7f2      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d4cc:	2980      	cmp	r1, #128	@ 0x80
 800d4ce:	f04f 0200 	mov.w	r2, #0
 800d4d2:	d021      	beq.n	800d518 <WS28xxDmxMulti::Print()+0x174>
 800d4d4:	29c0      	cmp	r1, #192	@ 0xc0
 800d4d6:	d1c9      	bne.n	800d46c <WS28xxDmxMulti::Print()+0xc8>
 800d4d8:	4b20      	ldr	r3, [pc, #128]	@ (800d55c <WS28xxDmxMulti::Print()+0x1b8>)
 800d4da:	e7c8      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d4dc:	4b20      	ldr	r3, [pc, #128]	@ (800d560 <WS28xxDmxMulti::Print()+0x1bc>)
 800d4de:	2200      	movs	r2, #0
 800d4e0:	e7c5      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d4e2:	4b20      	ldr	r3, [pc, #128]	@ (800d564 <WS28xxDmxMulti::Print()+0x1c0>)
 800d4e4:	2200      	movs	r2, #0
 800d4e6:	e7c2      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d4e8:	4b1f      	ldr	r3, [pc, #124]	@ (800d568 <WS28xxDmxMulti::Print()+0x1c4>)
 800d4ea:	2200      	movs	r2, #0
 800d4ec:	e7bf      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d4ee:	4b1c      	ldr	r3, [pc, #112]	@ (800d560 <WS28xxDmxMulti::Print()+0x1bc>)
 800d4f0:	2200      	movs	r2, #0
 800d4f2:	e7de      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d4f4:	4b1c      	ldr	r3, [pc, #112]	@ (800d568 <WS28xxDmxMulti::Print()+0x1c4>)
 800d4f6:	2200      	movs	r2, #0
 800d4f8:	e7db      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d4fa:	4b1a      	ldr	r3, [pc, #104]	@ (800d564 <WS28xxDmxMulti::Print()+0x1c0>)
 800d4fc:	2200      	movs	r2, #0
 800d4fe:	e7d8      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d500:	4b1a      	ldr	r3, [pc, #104]	@ (800d56c <WS28xxDmxMulti::Print()+0x1c8>)
 800d502:	2200      	movs	r2, #0
 800d504:	e7d5      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d506:	4b19      	ldr	r3, [pc, #100]	@ (800d56c <WS28xxDmxMulti::Print()+0x1c8>)
 800d508:	2200      	movs	r2, #0
 800d50a:	e7b0      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d50c:	4b18      	ldr	r3, [pc, #96]	@ (800d570 <WS28xxDmxMulti::Print()+0x1cc>)
 800d50e:	2200      	movs	r2, #0
 800d510:	e7cf      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d512:	4b17      	ldr	r3, [pc, #92]	@ (800d570 <WS28xxDmxMulti::Print()+0x1cc>)
 800d514:	2200      	movs	r2, #0
 800d516:	e7aa      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d518:	4b16      	ldr	r3, [pc, #88]	@ (800d574 <WS28xxDmxMulti::Print()+0x1d0>)
 800d51a:	e7a8      	b.n	800d46e <WS28xxDmxMulti::Print()+0xca>
 800d51c:	4b15      	ldr	r3, [pc, #84]	@ (800d574 <WS28xxDmxMulti::Print()+0x1d0>)
 800d51e:	e7c8      	b.n	800d4b2 <WS28xxDmxMulti::Print()+0x10e>
 800d520:	20000074 	andcs	r0, r0, r4, ror r0
 800d524:	080184f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, pc}
 800d528:	0801850c 	stmdaeq	r1, {r2, r3, r8, sl, pc}
 800d52c:	08018530 	stmdaeq	r1, {r4, r5, r8, sl, pc}
 800d530:	0801859c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, pc}
 800d534:	080185b0 	stmdaeq	r1, {r4, r5, r7, r8, sl, pc}
 800d538:	080185c4 	stmdaeq	r1, {r2, r6, r7, r8, sl, pc}
 800d53c:	080185dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, sl, pc}
 800d540:	080185f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, pc}
 800d544:	08018618 	stmdaeq	r1, {r3, r4, r9, sl, pc}
 800d548:	08018630 	stmdaeq	r1, {r4, r5, r9, sl, pc}
 800d54c:	08018540 	stmdaeq	r1, {r6, r8, sl, pc}
 800d550:	08018584 	stmdaeq	r1, {r2, r7, r8, sl, pc}
 800d554:	08018554 	stmdaeq	r1, {r2, r4, r6, r8, sl, pc}
 800d558:	0801856c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, pc}
 800d55c:	3fd40000 	svccc	0x00d40000
 800d560:	3ff18000 	svccc	0x00f18000
 800d564:	3fe90000 	svccc	0x00e90000
 800d568:	3fee0000 	svccc	0x00ee0000
 800d56c:	3fde0000 	svccc	0x00de0000
 800d570:	3fe40000 	svccc	0x00e40000
 800d574:	3fc40000 	svccc	0x00c40000

0800d578 <WS28xxDmxMulti::Blackout(bool)>:
 800d578:	b538      	push	{r3, r4, r5, lr}
 800d57a:	4604      	mov	r4, r0
 800d57c:	460d      	mov	r5, r1
 800d57e:	7301      	strb	r1, [r0, #12]
 800d580:	6860      	ldr	r0, [r4, #4]
 800d582:	f001 ffb5 	bl	800f4f0 <WS28xxMulti::IsUpdating()>
 800d586:	2800      	cmp	r0, #0
 800d588:	d1fa      	bne.n	800d580 <WS28xxDmxMulti::Blackout(bool)+0x8>
 800d58a:	6860      	ldr	r0, [r4, #4]
 800d58c:	b11d      	cbz	r5, 800d596 <WS28xxDmxMulti::Blackout(bool)+0x1e>
 800d58e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d592:	f001 bdc3 	b.w	800f11c <WS28xxMulti::Blackout()>
 800d596:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d59a:	f001 bcf7 	b.w	800ef8c <WS28xxMulti::Update()>
 800d59e:	bf00      	nop

0800d5a0 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800d5a0:	b538      	push	{r3, r4, r5, lr}
 800d5a2:	6845      	ldr	r5, [r0, #4]
 800d5a4:	4b08      	ldr	r3, [pc, #32]	@ (800d5c8 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x28>)
 800d5a6:	6003      	str	r3, [r0, #0]
 800d5a8:	4604      	mov	r4, r0
 800d5aa:	b135      	cbz	r5, 800d5ba <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1a>
 800d5ac:	4628      	mov	r0, r5
 800d5ae:	f001 f9b1 	bl	800e914 <WS28xxMulti::~WS28xxMulti()>
 800d5b2:	2104      	movs	r1, #4
 800d5b4:	4628      	mov	r0, r5
 800d5b6:	f009 fe17 	bl	80171e8 <operator delete(void*, unsigned int)>
 800d5ba:	4620      	mov	r0, r4
 800d5bc:	2110      	movs	r1, #16
 800d5be:	f009 fe13 	bl	80171e8 <operator delete(void*, unsigned int)>
 800d5c2:	4620      	mov	r0, r4
 800d5c4:	bd38      	pop	{r3, r4, r5, pc}
 800d5c6:	bf00      	nop
 800d5c8:	08019fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip, pc}

0800d5cc <WS28xxDmxMulti::WS28xxDmxMulti()>:
 800d5cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d5ce:	4ba6      	ldr	r3, [pc, #664]	@ (800d868 <WS28xxDmxMulti::WS28xxDmxMulti()+0x29c>)
 800d5d0:	4aa6      	ldr	r2, [pc, #664]	@ (800d86c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2a0>)
 800d5d2:	681b      	ldr	r3, [r3, #0]
 800d5d4:	68d9      	ldr	r1, [r3, #12]
 800d5d6:	691e      	ldr	r6, [r3, #16]
 800d5d8:	2500      	movs	r5, #0
 800d5da:	2907      	cmp	r1, #7
 800d5dc:	e9c0 2500 	strd	r2, r5, [r0]
 800d5e0:	4604      	mov	r4, r0
 800d5e2:	681a      	ldr	r2, [r3, #0]
 800d5e4:	6085      	str	r5, [r0, #8]
 800d5e6:	7305      	strb	r5, [r0, #12]
 800d5e8:	f000 80a6 	beq.w	800d738 <WS28xxDmxMulti::WS28xxDmxMulti()+0x16c>
 800d5ec:	f5b2 7f2a 	cmp.w	r2, #680	@ 0x2a8
 800d5f0:	f1a1 0c0b 	sub.w	ip, r1, #11
 800d5f4:	bf28      	it	cs
 800d5f6:	f44f 722a 	movcs.w	r2, #680	@ 0x2a8
 800d5fa:	2003      	movs	r0, #3
 800d5fc:	f1bc 0f01 	cmp.w	ip, #1
 800d600:	601a      	str	r2, [r3, #0]
 800d602:	6098      	str	r0, [r3, #8]
 800d604:	f200 80de 	bhi.w	800d7c4 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1f8>
 800d608:	7ddd      	ldrb	r5, [r3, #23]
 800d60a:	2d1f      	cmp	r5, #31
 800d60c:	bf8c      	ite	hi
 800d60e:	25ff      	movhi	r5, #255	@ 0xff
 800d610:	f065 051f 	ornls	r5, r5, #31
 800d614:	2000      	movs	r0, #0
 800d616:	2e06      	cmp	r6, #6
 800d618:	75dd      	strb	r5, [r3, #23]
 800d61a:	7518      	strb	r0, [r3, #20]
 800d61c:	f000 80ab 	beq.w	800d776 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1aa>
 800d620:	685f      	ldr	r7, [r3, #4]
 800d622:	2f00      	cmp	r7, #0
 800d624:	d06c      	beq.n	800d700 <WS28xxDmxMulti::WS28xxDmxMulti()+0x134>
 800d626:	4892      	ldr	r0, [pc, #584]	@ (800d870 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2a4>)
 800d628:	4287      	cmp	r7, r0
 800d62a:	bf9b      	ittet	ls
 800d62c:	4891      	ldrls	r0, [pc, #580]	@ (800d874 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2a8>)
 800d62e:	fbb0 f0f7 	udivls	r0, r0, r7
 800d632:	f04f 0c00 	movhi.w	ip, #0
 800d636:	4350      	mulls	r0, r2
 800d638:	4f8f      	ldr	r7, [pc, #572]	@ (800d878 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ac>)
 800d63a:	bf8a      	itet	hi
 800d63c:	6058      	strhi	r0, [r3, #4]
 800d63e:	eb00 0c40 	addls.w	ip, r0, r0, lsl #1
 800d642:	4660      	movhi	r0, ip
 800d644:	fbb7 f5fc 	udiv	r5, r7, ip
 800d648:	619d      	str	r5, [r3, #24]
 800d64a:	2900      	cmp	r1, #0
 800d64c:	d165      	bne.n	800d71a <WS28xxDmxMulti::WS28xxDmxMulti()+0x14e>
 800d64e:	601a      	str	r2, [r3, #0]
 800d650:	2103      	movs	r1, #3
 800d652:	6099      	str	r1, [r3, #8]
 800d654:	2500      	movs	r5, #0
 800d656:	2e06      	cmp	r6, #6
 800d658:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 800d65c:	4e86      	ldr	r6, [pc, #536]	@ (800d878 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ac>)
 800d65e:	751d      	strb	r5, [r3, #20]
 800d660:	fbb6 f7fc 	udiv	r7, r6, ip
 800d664:	bf08      	it	eq
 800d666:	611d      	streq	r5, [r3, #16]
 800d668:	2003      	movs	r0, #3
 800d66a:	f04f 0eaa 	mov.w	lr, #170	@ 0xaa
 800d66e:	f44f 7caa 	mov.w	ip, #340	@ 0x154
 800d672:	f44f 76ff 	mov.w	r6, #510	@ 0x1fe
 800d676:	25ab      	movs	r5, #171	@ 0xab
 800d678:	619f      	str	r7, [r3, #24]
 800d67a:	6a1f      	ldr	r7, [r3, #32]
 800d67c:	f8a3 e036 	strh.w	lr, [r3, #54]	@ 0x36
 800d680:	f04f 0e00 	mov.w	lr, #0
 800d684:	f8a3 c038 	strh.w	ip, [r3, #56]	@ 0x38
 800d688:	875e      	strh	r6, [r3, #58]	@ 0x3a
 800d68a:	f8a3 e034 	strh.w	lr, [r3, #52]	@ 0x34
 800d68e:	2f00      	cmp	r7, #0
 800d690:	d04c      	beq.n	800d72c <WS28xxDmxMulti::WS28xxDmxMulti()+0x160>
 800d692:	4297      	cmp	r7, r2
 800d694:	d84a      	bhi.n	800d72c <WS28xxDmxMulti::WS28xxDmxMulti()+0x160>
 800d696:	fbb2 f2f7 	udiv	r2, r2, r7
 800d69a:	fbb2 f6f5 	udiv	r6, r2, r5
 800d69e:	3601      	adds	r6, #1
 800d6a0:	fb02 f000 	mul.w	r0, r2, r0
 800d6a4:	fa1f fc86 	uxth.w	ip, r6
 800d6a8:	69dd      	ldr	r5, [r3, #28]
 800d6aa:	6318      	str	r0, [r3, #48]	@ 0x30
 800d6ac:	2d08      	cmp	r5, #8
 800d6ae:	bf28      	it	cs
 800d6b0:	2508      	movcs	r5, #8
 800d6b2:	fb15 f10c 	smulbb	r1, r5, ip
 800d6b6:	1e4f      	subs	r7, r1, #1
 800d6b8:	e9c3 2609 	strd	r2, r6, [r3, #36]	@ 0x24
 800d6bc:	61dd      	str	r5, [r3, #28]
 800d6be:	879f      	strh	r7, [r3, #60]	@ 0x3c
 800d6c0:	2004      	movs	r0, #4
 800d6c2:	f009 fd93 	bl	80171ec <operator new(unsigned int)>
 800d6c6:	4606      	mov	r6, r0
 800d6c8:	f001 fb58 	bl	800ed7c <WS28xxMulti::WS28xxMulti()>
 800d6cc:	4630      	mov	r0, r6
 800d6ce:	6066      	str	r6, [r4, #4]
 800d6d0:	f001 fd24 	bl	800f11c <WS28xxMulti::Blackout()>
 800d6d4:	f640 4002 	movw	r0, #3074	@ 0xc02
 800d6d8:	f007 fdf6 	bl	80152c8 <rcu_periph_clock_enable>
 800d6dc:	4867      	ldr	r0, [pc, #412]	@ (800d87c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2b0>)
 800d6de:	2304      	movs	r3, #4
 800d6e0:	2200      	movs	r2, #0
 800d6e2:	2101      	movs	r1, #1
 800d6e4:	f007 fd6e 	bl	80151c4 <gpio_mode_set>
 800d6e8:	4864      	ldr	r0, [pc, #400]	@ (800d87c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2b0>)
 800d6ea:	2304      	movs	r3, #4
 800d6ec:	2202      	movs	r2, #2
 800d6ee:	2100      	movs	r1, #0
 800d6f0:	f007 fd8a 	bl	8015208 <gpio_output_options_set>
 800d6f4:	4b62      	ldr	r3, [pc, #392]	@ (800d880 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2b4>)
 800d6f6:	2004      	movs	r0, #4
 800d6f8:	f8c3 0828 	str.w	r0, [r3, #2088]	@ 0x828
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d700:	4d60      	ldr	r5, [pc, #384]	@ (800d884 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2b8>)
 800d702:	4f5d      	ldr	r7, [pc, #372]	@ (800d878 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ac>)
 800d704:	605d      	str	r5, [r3, #4]
 800d706:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 800d70a:	ea4f 0c40 	mov.w	ip, r0, lsl #1
 800d70e:	0050      	lsls	r0, r2, #1
 800d710:	fbb7 f5fc 	udiv	r5, r7, ip
 800d714:	619d      	str	r5, [r3, #24]
 800d716:	2900      	cmp	r1, #0
 800d718:	d099      	beq.n	800d64e <WS28xxDmxMulti::WS28xxDmxMulti()+0x82>
 800d71a:	7ddd      	ldrb	r5, [r3, #23]
 800d71c:	601a      	str	r2, [r3, #0]
 800d71e:	2703      	movs	r7, #3
 800d720:	2d1f      	cmp	r5, #31
 800d722:	609f      	str	r7, [r3, #8]
 800d724:	d92a      	bls.n	800d77c <WS28xxDmxMulti::WS28xxDmxMulti()+0x1b0>
 800d726:	21ff      	movs	r1, #255	@ 0xff
 800d728:	75d9      	strb	r1, [r3, #23]
 800d72a:	e793      	b.n	800d654 <WS28xxDmxMulti::WS28xxDmxMulti()+0x88>
 800d72c:	f04f 0c01 	mov.w	ip, #1
 800d730:	621a      	str	r2, [r3, #32]
 800d732:	4666      	mov	r6, ip
 800d734:	4662      	mov	r2, ip
 800d736:	e7b7      	b.n	800d6a8 <WS28xxDmxMulti::WS28xxDmxMulti()+0xdc>
 800d738:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 800d73c:	bf28      	it	cs
 800d73e:	f44f 7200 	movcs.w	r2, #512	@ 0x200
 800d742:	2004      	movs	r0, #4
 800d744:	2701      	movs	r7, #1
 800d746:	2e06      	cmp	r6, #6
 800d748:	601a      	str	r2, [r3, #0]
 800d74a:	6098      	str	r0, [r3, #8]
 800d74c:	751f      	strb	r7, [r3, #20]
 800d74e:	f000 8085 	beq.w	800d85c <WS28xxDmxMulti::WS28xxDmxMulti()+0x290>
 800d752:	7d5e      	ldrb	r6, [r3, #21]
 800d754:	7d9f      	ldrb	r7, [r3, #22]
 800d756:	42b7      	cmp	r7, r6
 800d758:	d815      	bhi.n	800d786 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1ba>
 800d75a:	2500      	movs	r5, #0
 800d75c:	2903      	cmp	r1, #3
 800d75e:	f8a3 5015 	strh.w	r5, [r3, #21]
 800d762:	d041      	beq.n	800d7e8 <WS28xxDmxMulti::WS28xxDmxMulti()+0x21c>
 800d764:	f1a1 0708 	sub.w	r7, r1, #8
 800d768:	2f02      	cmp	r7, #2
 800d76a:	d874      	bhi.n	800d856 <WS28xxDmxMulti::WS28xxDmxMulti()+0x28a>
 800d76c:	25fc      	movs	r5, #252	@ 0xfc
 800d76e:	759d      	strb	r5, [r3, #22]
 800d770:	27c0      	movs	r7, #192	@ 0xc0
 800d772:	755f      	strb	r7, [r3, #21]
 800d774:	e009      	b.n	800d78a <WS28xxDmxMulti::WS28xxDmxMulti()+0x1be>
 800d776:	6118      	str	r0, [r3, #16]
 800d778:	4606      	mov	r6, r0
 800d77a:	e751      	b.n	800d620 <WS28xxDmxMulti::WS28xxDmxMulti()+0x54>
 800d77c:	f065 011f 	orn	r1, r5, #31
 800d780:	75d9      	strb	r1, [r3, #23]
 800d782:	e767      	b.n	800d654 <WS28xxDmxMulti::WS28xxDmxMulti()+0x88>
 800d784:	4601      	mov	r1, r0
 800d786:	2e00      	cmp	r6, #0
 800d788:	d0f2      	beq.n	800d770 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1a4>
 800d78a:	2907      	cmp	r1, #7
 800d78c:	fb02 f100 	mul.w	r1, r2, r0
 800d790:	4f3d      	ldr	r7, [pc, #244]	@ (800d888 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2bc>)
 800d792:	605f      	str	r7, [r3, #4]
 800d794:	eb01 0581 	add.w	r5, r1, r1, lsl #2
 800d798:	ea4f 0545 	mov.w	r5, r5, lsl #1
 800d79c:	4936      	ldr	r1, [pc, #216]	@ (800d878 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2ac>)
 800d79e:	fbb1 f7f5 	udiv	r7, r1, r5
 800d7a2:	bf0b      	itete	eq
 800d7a4:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 800d7a8:	f04f 0eaa 	movne.w	lr, #170	@ 0xaa
 800d7ac:	f44f 7c80 	moveq.w	ip, #256	@ 0x100
 800d7b0:	f44f 7caa 	movne.w	ip, #340	@ 0x154
 800d7b4:	bf0b      	itete	eq
 800d7b6:	f44f 76c0 	moveq.w	r6, #384	@ 0x180
 800d7ba:	f44f 76ff 	movne.w	r6, #510	@ 0x1fe
 800d7be:	2581      	moveq	r5, #129	@ 0x81
 800d7c0:	25ab      	movne	r5, #171	@ 0xab
 800d7c2:	e759      	b.n	800d678 <WS28xxDmxMulti::WS28xxDmxMulti()+0xac>
 800d7c4:	b1a1      	cbz	r1, 800d7f0 <WS28xxDmxMulti::WS28xxDmxMulti()+0x224>
 800d7c6:	290d      	cmp	r1, #13
 800d7c8:	d01d      	beq.n	800d806 <WS28xxDmxMulti::WS28xxDmxMulti()+0x23a>
 800d7ca:	2701      	movs	r7, #1
 800d7cc:	290e      	cmp	r1, #14
 800d7ce:	751f      	strb	r7, [r3, #20]
 800d7d0:	d132      	bne.n	800d838 <WS28xxDmxMulti::WS28xxDmxMulti()+0x26c>
 800d7d2:	2e06      	cmp	r6, #6
 800d7d4:	7d99      	ldrb	r1, [r3, #22]
 800d7d6:	7d5e      	ldrb	r6, [r3, #21]
 800d7d8:	60d8      	str	r0, [r3, #12]
 800d7da:	bf04      	itt	eq
 800d7dc:	2702      	moveq	r7, #2
 800d7de:	611f      	streq	r7, [r3, #16]
 800d7e0:	42b1      	cmp	r1, r6
 800d7e2:	d8cf      	bhi.n	800d784 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1b8>
 800d7e4:	f8a3 5015 	strh.w	r5, [r3, #21]
 800d7e8:	25f8      	movs	r5, #248	@ 0xf8
 800d7ea:	2103      	movs	r1, #3
 800d7ec:	759d      	strb	r5, [r3, #22]
 800d7ee:	e7bf      	b.n	800d770 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1a4>
 800d7f0:	2e06      	cmp	r6, #6
 800d7f2:	7519      	strb	r1, [r3, #20]
 800d7f4:	f47f af14 	bne.w	800d620 <WS28xxDmxMulti::WS28xxDmxMulti()+0x54>
 800d7f8:	685f      	ldr	r7, [r3, #4]
 800d7fa:	6119      	str	r1, [r3, #16]
 800d7fc:	460e      	mov	r6, r1
 800d7fe:	2f00      	cmp	r7, #0
 800d800:	f47f af11 	bne.w	800d626 <WS28xxDmxMulti::WS28xxDmxMulti()+0x5a>
 800d804:	e77c      	b.n	800d700 <WS28xxDmxMulti::WS28xxDmxMulti()+0x134>
 800d806:	2e06      	cmp	r6, #6
 800d808:	d013      	beq.n	800d832 <WS28xxDmxMulti::WS28xxDmxMulti()+0x266>
 800d80a:	685d      	ldr	r5, [r3, #4]
 800d80c:	b945      	cbnz	r5, 800d820 <WS28xxDmxMulti::WS28xxDmxMulti()+0x254>
 800d80e:	4f1d      	ldr	r7, [pc, #116]	@ (800d884 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2b8>)
 800d810:	605f      	str	r7, [r3, #4]
 800d812:	2002      	movs	r0, #2
 800d814:	2100      	movs	r1, #0
 800d816:	601a      	str	r2, [r3, #0]
 800d818:	fb02 f000 	mul.w	r0, r2, r0
 800d81c:	60d9      	str	r1, [r3, #12]
 800d81e:	e717      	b.n	800d650 <WS28xxDmxMulti::WS28xxDmxMulti()+0x84>
 800d820:	481a      	ldr	r0, [pc, #104]	@ (800d88c <WS28xxDmxMulti::WS28xxDmxMulti()+0x2c0>)
 800d822:	4285      	cmp	r5, r0
 800d824:	bf95      	itete	ls
 800d826:	4813      	ldrls	r0, [pc, #76]	@ (800d874 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2a8>)
 800d828:	6058      	strhi	r0, [r3, #4]
 800d82a:	fbb0 f0f5 	udivls	r0, r0, r5
 800d82e:	2000      	movhi	r0, #0
 800d830:	e7f0      	b.n	800d814 <WS28xxDmxMulti::WS28xxDmxMulti()+0x248>
 800d832:	611d      	str	r5, [r3, #16]
 800d834:	462e      	mov	r6, r5
 800d836:	e7e8      	b.n	800d80a <WS28xxDmxMulti::WS28xxDmxMulti()+0x23e>
 800d838:	2e06      	cmp	r6, #6
 800d83a:	d18a      	bne.n	800d752 <WS28xxDmxMulti::WS28xxDmxMulti()+0x186>
 800d83c:	1e4e      	subs	r6, r1, #1
 800d83e:	2e09      	cmp	r6, #9
 800d840:	d90c      	bls.n	800d85c <WS28xxDmxMulti::WS28xxDmxMulti()+0x290>
 800d842:	7d5e      	ldrb	r6, [r3, #21]
 800d844:	7d9f      	ldrb	r7, [r3, #22]
 800d846:	f04f 0c02 	mov.w	ip, #2
 800d84a:	42b7      	cmp	r7, r6
 800d84c:	f8c3 c010 	str.w	ip, [r3, #16]
 800d850:	d899      	bhi.n	800d786 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1ba>
 800d852:	f8a3 5015 	strh.w	r5, [r3, #21]
 800d856:	25f0      	movs	r5, #240	@ 0xf0
 800d858:	759d      	strb	r5, [r3, #22]
 800d85a:	e789      	b.n	800d770 <WS28xxDmxMulti::WS28xxDmxMulti()+0x1a4>
 800d85c:	4d0c      	ldr	r5, [pc, #48]	@ (800d890 <WS28xxDmxMulti::WS28xxDmxMulti()+0x2c4>)
 800d85e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800d862:	611e      	str	r6, [r3, #16]
 800d864:	e775      	b.n	800d752 <WS28xxDmxMulti::WS28xxDmxMulti()+0x186>
 800d866:	bf00      	nop
 800d868:	20000074 	andcs	r0, r0, r4, ror r0
 800d86c:	08019fc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip, pc}
 800d870:	017d7840 	cmneq	sp, r0, asr #16
 800d874:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 800d878:	000f4240 	andeq	r4, pc, r0, asr #4
 800d87c:	40020800 	andmi	r0, r2, r0, lsl #16
 800d880:	40020000 	andmi	r0, r2, r0
 800d884:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d888:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800d88c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800d890:	08019f94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, ip, pc}

0800d894 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>:
 800d894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d898:	4cb6      	ldr	r4, [pc, #728]	@ (800db74 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2e0>)
 800d89a:	b0a1      	sub	sp, #132	@ 0x84
 800d89c:	6826      	ldr	r6, [r4, #0]
 800d89e:	9305      	str	r3, [sp, #20]
 800d8a0:	461f      	mov	r7, r3
 800d8a2:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 800d8a4:	fbb1 f5f3 	udiv	r5, r1, r3
 800d8a8:	fb03 1115 	mls	r1, r3, r5, r1
 800d8ac:	4604      	mov	r4, r0
 800d8ae:	eb06 0041 	add.w	r0, r6, r1, lsl #1
 800d8b2:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 800d8b4:	f8b0 8034 	ldrh.w	r8, [r0, #52]	@ 0x34
 800d8b8:	68f0      	ldr	r0, [r6, #12]
 800d8ba:	f8d6 b020 	ldr.w	fp, [r6, #32]
 800d8be:	f896 9014 	ldrb.w	r9, [r6, #20]
 800d8c2:	9004      	str	r0, [sp, #16]
 800d8c4:	4692      	mov	sl, r2
 800d8c6:	4639      	mov	r1, r7
 800d8c8:	68b2      	ldr	r2, [r6, #8]
 800d8ca:	fbb7 f7f2 	udiv	r7, r7, r2
 800d8ce:	4447      	add	r7, r8
 800d8d0:	429f      	cmp	r7, r3
 800d8d2:	bf28      	it	cs
 800d8d4:	461f      	movcs	r7, r3
 800d8d6:	2a03      	cmp	r2, #3
 800d8d8:	f000 808b 	beq.w	800d9f2 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x15e>
 800d8dc:	45b8      	cmp	r8, r7
 800d8de:	f080 8085 	bcs.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800d8e2:	2900      	cmp	r1, #0
 800d8e4:	f000 8082 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800d8e8:	eba7 0c08 	sub.w	ip, r7, r8
 800d8ec:	f10c 32ff 	add.w	r2, ip, #4294967295	@ 0xffffffff
 800d8f0:	fb0b f808 	mul.w	r8, fp, r8
 800d8f4:	4656      	mov	r6, sl
 800d8f6:	9206      	str	r2, [sp, #24]
 800d8f8:	f04f 0900 	mov.w	r9, #0
 800d8fc:	f1bb 0f00 	cmp.w	fp, #0
 800d900:	d068      	beq.n	800d9d4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x140>
 800d902:	f01b 0303 	ands.w	r3, fp, #3
 800d906:	4647      	mov	r7, r8
 800d908:	eb0b 0a08 	add.w	sl, fp, r8
 800d90c:	d02d      	beq.n	800d96a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xd6>
 800d90e:	2b01      	cmp	r3, #1
 800d910:	d01c      	beq.n	800d94c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xb8>
 800d912:	2b02      	cmp	r3, #2
 800d914:	d00d      	beq.n	800d932 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x9e>
 800d916:	78f1      	ldrb	r1, [r6, #3]
 800d918:	9102      	str	r1, [sp, #8]
 800d91a:	78b7      	ldrb	r7, [r6, #2]
 800d91c:	9701      	str	r7, [sp, #4]
 800d91e:	7870      	ldrb	r0, [r6, #1]
 800d920:	9000      	str	r0, [sp, #0]
 800d922:	7833      	ldrb	r3, [r6, #0]
 800d924:	6860      	ldr	r0, [r4, #4]
 800d926:	4642      	mov	r2, r8
 800d928:	4629      	mov	r1, r5
 800d92a:	f002 f899 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d92e:	f108 0701 	add.w	r7, r8, #1
 800d932:	78f2      	ldrb	r2, [r6, #3]
 800d934:	9202      	str	r2, [sp, #8]
 800d936:	78b3      	ldrb	r3, [r6, #2]
 800d938:	9301      	str	r3, [sp, #4]
 800d93a:	7871      	ldrb	r1, [r6, #1]
 800d93c:	9100      	str	r1, [sp, #0]
 800d93e:	463a      	mov	r2, r7
 800d940:	7833      	ldrb	r3, [r6, #0]
 800d942:	6860      	ldr	r0, [r4, #4]
 800d944:	4629      	mov	r1, r5
 800d946:	f002 f88b 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d94a:	3701      	adds	r7, #1
 800d94c:	78f0      	ldrb	r0, [r6, #3]
 800d94e:	9002      	str	r0, [sp, #8]
 800d950:	78b2      	ldrb	r2, [r6, #2]
 800d952:	9201      	str	r2, [sp, #4]
 800d954:	7873      	ldrb	r3, [r6, #1]
 800d956:	9300      	str	r3, [sp, #0]
 800d958:	463a      	mov	r2, r7
 800d95a:	7833      	ldrb	r3, [r6, #0]
 800d95c:	6860      	ldr	r0, [r4, #4]
 800d95e:	4629      	mov	r1, r5
 800d960:	3701      	adds	r7, #1
 800d962:	f002 f87d 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d966:	4557      	cmp	r7, sl
 800d968:	d034      	beq.n	800d9d4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x140>
 800d96a:	78f0      	ldrb	r0, [r6, #3]
 800d96c:	9002      	str	r0, [sp, #8]
 800d96e:	78b2      	ldrb	r2, [r6, #2]
 800d970:	9201      	str	r2, [sp, #4]
 800d972:	7871      	ldrb	r1, [r6, #1]
 800d974:	7833      	ldrb	r3, [r6, #0]
 800d976:	9100      	str	r1, [sp, #0]
 800d978:	463a      	mov	r2, r7
 800d97a:	6860      	ldr	r0, [r4, #4]
 800d97c:	4629      	mov	r1, r5
 800d97e:	f002 f86f 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d982:	78f3      	ldrb	r3, [r6, #3]
 800d984:	9302      	str	r3, [sp, #8]
 800d986:	78b0      	ldrb	r0, [r6, #2]
 800d988:	9001      	str	r0, [sp, #4]
 800d98a:	7871      	ldrb	r1, [r6, #1]
 800d98c:	9100      	str	r1, [sp, #0]
 800d98e:	1c7a      	adds	r2, r7, #1
 800d990:	7833      	ldrb	r3, [r6, #0]
 800d992:	6860      	ldr	r0, [r4, #4]
 800d994:	9204      	str	r2, [sp, #16]
 800d996:	4629      	mov	r1, r5
 800d998:	f002 f862 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d99c:	78f2      	ldrb	r2, [r6, #3]
 800d99e:	9202      	str	r2, [sp, #8]
 800d9a0:	78b3      	ldrb	r3, [r6, #2]
 800d9a2:	9301      	str	r3, [sp, #4]
 800d9a4:	7870      	ldrb	r0, [r6, #1]
 800d9a6:	9a04      	ldr	r2, [sp, #16]
 800d9a8:	7833      	ldrb	r3, [r6, #0]
 800d9aa:	9000      	str	r0, [sp, #0]
 800d9ac:	6860      	ldr	r0, [r4, #4]
 800d9ae:	3201      	adds	r2, #1
 800d9b0:	4629      	mov	r1, r5
 800d9b2:	f002 f855 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d9b6:	78f1      	ldrb	r1, [r6, #3]
 800d9b8:	9102      	str	r1, [sp, #8]
 800d9ba:	78b2      	ldrb	r2, [r6, #2]
 800d9bc:	9201      	str	r2, [sp, #4]
 800d9be:	7870      	ldrb	r0, [r6, #1]
 800d9c0:	7833      	ldrb	r3, [r6, #0]
 800d9c2:	9000      	str	r0, [sp, #0]
 800d9c4:	1cfa      	adds	r2, r7, #3
 800d9c6:	6860      	ldr	r0, [r4, #4]
 800d9c8:	4629      	mov	r1, r5
 800d9ca:	3704      	adds	r7, #4
 800d9cc:	f002 f848 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d9d0:	4557      	cmp	r7, sl
 800d9d2:	d1ca      	bne.n	800d96a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0xd6>
 800d9d4:	9f06      	ldr	r7, [sp, #24]
 800d9d6:	45b9      	cmp	r9, r7
 800d9d8:	d008      	beq.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800d9da:	9905      	ldr	r1, [sp, #20]
 800d9dc:	f109 0901 	add.w	r9, r9, #1
 800d9e0:	ebb1 0f89 	cmp.w	r1, r9, lsl #2
 800d9e4:	44d8      	add	r8, fp
 800d9e6:	f106 0604 	add.w	r6, r6, #4
 800d9ea:	d887      	bhi.n	800d8fc <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x68>
 800d9ec:	b021      	add	sp, #132	@ 0x84
 800d9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9f2:	4961      	ldr	r1, [pc, #388]	@ (800db78 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2e4>)
 800d9f4:	2248      	movs	r2, #72	@ 0x48
 800d9f6:	a80e      	add	r0, sp, #56	@ 0x38
 800d9f8:	f008 fee4 	bl	80167c4 <memcpy>
 800d9fc:	6933      	ldr	r3, [r6, #16]
 800d9fe:	f1b9 0f00 	cmp.w	r9, #0
 800da02:	f040 80bb 	bne.w	800db7c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2e8>
 800da06:	45b8      	cmp	r8, r7
 800da08:	d2f0      	bcs.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800da0a:	9905      	ldr	r1, [sp, #20]
 800da0c:	2900      	cmp	r1, #0
 800da0e:	d0ed      	beq.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800da10:	9a04      	ldr	r2, [sp, #16]
 800da12:	2a00      	cmp	r2, #0
 800da14:	f000 816b 	beq.w	800dcee <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x45a>
 800da18:	f1a2 000b 	sub.w	r0, r2, #11
 800da1c:	eba7 0e08 	sub.w	lr, r7, r8
 800da20:	2801      	cmp	r0, #1
 800da22:	fb0b f808 	mul.w	r8, fp, r8
 800da26:	eb03 0743 	add.w	r7, r3, r3, lsl #1
 800da2a:	eb0e 0c4e 	add.w	ip, lr, lr, lsl #1
 800da2e:	f108 0301 	add.w	r3, r8, #1
 800da32:	f240 820b 	bls.w	800de4c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x5b8>
 800da36:	9306      	str	r3, [sp, #24]
 800da38:	f1ac 0603 	sub.w	r6, ip, #3
 800da3c:	00bb      	lsls	r3, r7, #2
 800da3e:	960a      	str	r6, [sp, #40]	@ 0x28
 800da40:	f8cd 9020 	str.w	r9, [sp, #32]
 800da44:	930b      	str	r3, [sp, #44]	@ 0x2c
 800da46:	f1bb 0f00 	cmp.w	fp, #0
 800da4a:	f000 8084 	beq.w	800db56 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x2c2>
 800da4e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800da50:	9e08      	ldr	r6, [sp, #32]
 800da52:	9a06      	ldr	r2, [sp, #24]
 800da54:	3780      	adds	r7, #128	@ 0x80
 800da56:	eb0d 0807 	add.w	r8, sp, r7
 800da5a:	e958 7311 	ldrd	r7, r3, [r8, #-68]	@ 0x44
 800da5e:	f858 1c48 	ldr.w	r1, [r8, #-72]
 800da62:	18f3      	adds	r3, r6, r3
 800da64:	1870      	adds	r0, r6, r1
 800da66:	eb06 0907 	add.w	r9, r6, r7
 800da6a:	f81a 1003 	ldrb.w	r1, [sl, r3]
 800da6e:	9309      	str	r3, [sp, #36]	@ 0x24
 800da70:	eb0a 0803 	add.w	r8, sl, r3
 800da74:	f01b 0f01 	tst.w	fp, #1
 800da78:	eb0b 0302 	add.w	r3, fp, r2
 800da7c:	f81a c000 	ldrb.w	ip, [sl, r0]
 800da80:	f81a e009 	ldrb.w	lr, [sl, r9]
 800da84:	9004      	str	r0, [sp, #16]
 800da86:	eb0a 0600 	add.w	r6, sl, r0
 800da8a:	eb0a 0709 	add.w	r7, sl, r9
 800da8e:	9307      	str	r3, [sp, #28]
 800da90:	d143      	bne.n	800db1a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x286>
 800da92:	43ca      	mvns	r2, r1
 800da94:	ea6f 000c 	mvn.w	r0, ip
 800da98:	9100      	str	r1, [sp, #0]
 800da9a:	0891      	lsrs	r1, r2, #2
 800da9c:	e9cd ec01 	strd	lr, ip, [sp, #4]
 800daa0:	f3c0 1281 	ubfx	r2, r0, #6, #2
 800daa4:	f001 0330 	and.w	r3, r1, #48	@ 0x30
 800daa8:	0900      	lsrs	r0, r0, #4
 800daaa:	f000 010c 	and.w	r1, r0, #12
 800daae:	4313      	orrs	r3, r2
 800dab0:	430b      	orrs	r3, r1
 800dab2:	6860      	ldr	r0, [r4, #4]
 800dab4:	9a06      	ldr	r2, [sp, #24]
 800dab6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800daba:	4629      	mov	r1, r5
 800dabc:	f001 ff54 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800dac0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dac2:	9b04      	ldr	r3, [sp, #16]
 800dac4:	9806      	ldr	r0, [sp, #24]
 800dac6:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800daca:	f81a c003 	ldrb.w	ip, [sl, r3]
 800dace:	f81a e009 	ldrb.w	lr, [sl, r9]
 800dad2:	1c42      	adds	r2, r0, #1
 800dad4:	e021      	b.n	800db1a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x286>
 800dad6:	f898 2000 	ldrb.w	r2, [r8]
 800dada:	7830      	ldrb	r0, [r6, #0]
 800dadc:	7839      	ldrb	r1, [r7, #0]
 800dade:	9101      	str	r1, [sp, #4]
 800dae0:	43d3      	mvns	r3, r2
 800dae2:	43c1      	mvns	r1, r0
 800dae4:	9002      	str	r0, [sp, #8]
 800dae6:	0898      	lsrs	r0, r3, #2
 800dae8:	f000 0330 	and.w	r3, r0, #48	@ 0x30
 800daec:	f3c1 1081 	ubfx	r0, r1, #6, #2
 800daf0:	0909      	lsrs	r1, r1, #4
 800daf2:	4303      	orrs	r3, r0
 800daf4:	f001 000c 	and.w	r0, r1, #12
 800daf8:	4303      	orrs	r3, r0
 800dafa:	4629      	mov	r1, r5
 800dafc:	6860      	ldr	r0, [r4, #4]
 800dafe:	9200      	str	r2, [sp, #0]
 800db00:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800db04:	464a      	mov	r2, r9
 800db06:	f001 ff2f 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800db0a:	f896 c000 	ldrb.w	ip, [r6]
 800db0e:	f897 e000 	ldrb.w	lr, [r7]
 800db12:	f898 1000 	ldrb.w	r1, [r8]
 800db16:	f109 0201 	add.w	r2, r9, #1
 800db1a:	43c8      	mvns	r0, r1
 800db1c:	ea6f 030c 	mvn.w	r3, ip
 800db20:	0880      	lsrs	r0, r0, #2
 800db22:	f000 0930 	and.w	r9, r0, #48	@ 0x30
 800db26:	f3c3 1081 	ubfx	r0, r3, #6, #2
 800db2a:	091b      	lsrs	r3, r3, #4
 800db2c:	ea49 0000 	orr.w	r0, r9, r0
 800db30:	f003 030c 	and.w	r3, r3, #12
 800db34:	4303      	orrs	r3, r0
 800db36:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800db3a:	6860      	ldr	r0, [r4, #4]
 800db3c:	9100      	str	r1, [sp, #0]
 800db3e:	e9cd ec01 	strd	lr, ip, [sp, #4]
 800db42:	4629      	mov	r1, r5
 800db44:	9204      	str	r2, [sp, #16]
 800db46:	f001 ff0f 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800db4a:	9a04      	ldr	r2, [sp, #16]
 800db4c:	9907      	ldr	r1, [sp, #28]
 800db4e:	f102 0901 	add.w	r9, r2, #1
 800db52:	4549      	cmp	r1, r9
 800db54:	d1bf      	bne.n	800dad6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x242>
 800db56:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800db58:	9f08      	ldr	r7, [sp, #32]
 800db5a:	42be      	cmp	r6, r7
 800db5c:	f43f af46 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800db60:	9806      	ldr	r0, [sp, #24]
 800db62:	9b05      	ldr	r3, [sp, #20]
 800db64:	3703      	adds	r7, #3
 800db66:	4458      	add	r0, fp
 800db68:	42bb      	cmp	r3, r7
 800db6a:	9708      	str	r7, [sp, #32]
 800db6c:	9006      	str	r0, [sp, #24]
 800db6e:	f63f af6a 	bhi.w	800da46 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x1b2>
 800db72:	e73b      	b.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800db74:	20000074 	andcs	r0, r0, r4, ror r0
 800db78:	080172b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, sp, lr}
 800db7c:	45b8      	cmp	r8, r7
 800db7e:	f4bf af35 	bcs.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800db82:	9e05      	ldr	r6, [sp, #20]
 800db84:	2e00      	cmp	r6, #0
 800db86:	f43f af31 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800db8a:	eba7 0c08 	sub.w	ip, r7, r8
 800db8e:	eb0c 0e4c 	add.w	lr, ip, ip, lsl #1
 800db92:	eb03 0743 	add.w	r7, r3, r3, lsl #1
 800db96:	fb0b f208 	mul.w	r2, fp, r8
 800db9a:	f1ae 0303 	sub.w	r3, lr, #3
 800db9e:	00b9      	lsls	r1, r7, #2
 800dba0:	2000      	movs	r0, #0
 800dba2:	9208      	str	r2, [sp, #32]
 800dba4:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dba6:	910c      	str	r1, [sp, #48]	@ 0x30
 800dba8:	9004      	str	r0, [sp, #16]
 800dbaa:	f1bb 0f00 	cmp.w	fp, #0
 800dbae:	f000 808e 	beq.w	800dcce <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x43a>
 800dbb2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800dbb4:	9904      	ldr	r1, [sp, #16]
 800dbb6:	f8dd c020 	ldr.w	ip, [sp, #32]
 800dbba:	3680      	adds	r6, #128	@ 0x80
 800dbbc:	eb0d 0806 	add.w	r8, sp, r6
 800dbc0:	e958 2311 	ldrd	r2, r3, [r8, #-68]	@ 0x44
 800dbc4:	f858 7c48 	ldr.w	r7, [r8, #-72]
 800dbc8:	19c8      	adds	r0, r1, r7
 800dbca:	9006      	str	r0, [sp, #24]
 800dbcc:	eb0a 0700 	add.w	r7, sl, r0
 800dbd0:	4660      	mov	r0, ip
 800dbd2:	188a      	adds	r2, r1, r2
 800dbd4:	4458      	add	r0, fp
 800dbd6:	4419      	add	r1, r3
 800dbd8:	f01b 0303 	ands.w	r3, fp, #3
 800dbdc:	4666      	mov	r6, ip
 800dbde:	9209      	str	r2, [sp, #36]	@ 0x24
 800dbe0:	910a      	str	r1, [sp, #40]	@ 0x28
 800dbe2:	eb0a 0802 	add.w	r8, sl, r2
 800dbe6:	eb0a 0901 	add.w	r9, sl, r1
 800dbea:	9007      	str	r0, [sp, #28]
 800dbec:	d039      	beq.n	800dc62 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x3ce>
 800dbee:	2b01      	cmp	r3, #1
 800dbf0:	d023      	beq.n	800dc3a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x3a6>
 800dbf2:	2b02      	cmp	r3, #2
 800dbf4:	d010      	beq.n	800dc18 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x384>
 800dbf6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800dbf8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800dbfa:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dbfe:	9101      	str	r1, [sp, #4]
 800dc00:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800dc04:	9a06      	ldr	r2, [sp, #24]
 800dc06:	9300      	str	r3, [sp, #0]
 800dc08:	f81a 3002 	ldrb.w	r3, [sl, r2]
 800dc0c:	6860      	ldr	r0, [r4, #4]
 800dc0e:	4662      	mov	r2, ip
 800dc10:	4629      	mov	r1, r5
 800dc12:	f001 fc75 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dc16:	3601      	adds	r6, #1
 800dc18:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dc1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dc1c:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800dc20:	9001      	str	r0, [sp, #4]
 800dc22:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800dc26:	9906      	ldr	r1, [sp, #24]
 800dc28:	9200      	str	r2, [sp, #0]
 800dc2a:	f81a 3001 	ldrb.w	r3, [sl, r1]
 800dc2e:	6860      	ldr	r0, [r4, #4]
 800dc30:	4632      	mov	r2, r6
 800dc32:	4629      	mov	r1, r5
 800dc34:	f001 fc64 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dc38:	3601      	adds	r6, #1
 800dc3a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800dc3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dc3e:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800dc42:	9301      	str	r3, [sp, #4]
 800dc44:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dc48:	9806      	ldr	r0, [sp, #24]
 800dc4a:	9100      	str	r1, [sp, #0]
 800dc4c:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800dc50:	6860      	ldr	r0, [r4, #4]
 800dc52:	4632      	mov	r2, r6
 800dc54:	4629      	mov	r1, r5
 800dc56:	f001 fc53 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dc5a:	9b07      	ldr	r3, [sp, #28]
 800dc5c:	3601      	adds	r6, #1
 800dc5e:	42b3      	cmp	r3, r6
 800dc60:	d035      	beq.n	800dcce <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x43a>
 800dc62:	f899 3000 	ldrb.w	r3, [r9]
 800dc66:	9301      	str	r3, [sp, #4]
 800dc68:	f898 1000 	ldrb.w	r1, [r8]
 800dc6c:	9100      	str	r1, [sp, #0]
 800dc6e:	4632      	mov	r2, r6
 800dc70:	783b      	ldrb	r3, [r7, #0]
 800dc72:	6860      	ldr	r0, [r4, #4]
 800dc74:	4629      	mov	r1, r5
 800dc76:	f001 fc43 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dc7a:	f899 2000 	ldrb.w	r2, [r9]
 800dc7e:	9201      	str	r2, [sp, #4]
 800dc80:	f898 0000 	ldrb.w	r0, [r8]
 800dc84:	9000      	str	r0, [sp, #0]
 800dc86:	1c72      	adds	r2, r6, #1
 800dc88:	783b      	ldrb	r3, [r7, #0]
 800dc8a:	6860      	ldr	r0, [r4, #4]
 800dc8c:	9206      	str	r2, [sp, #24]
 800dc8e:	4629      	mov	r1, r5
 800dc90:	f001 fc36 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dc94:	f899 3000 	ldrb.w	r3, [r9]
 800dc98:	9301      	str	r3, [sp, #4]
 800dc9a:	f898 1000 	ldrb.w	r1, [r8]
 800dc9e:	9a06      	ldr	r2, [sp, #24]
 800dca0:	9100      	str	r1, [sp, #0]
 800dca2:	783b      	ldrb	r3, [r7, #0]
 800dca4:	6860      	ldr	r0, [r4, #4]
 800dca6:	3201      	adds	r2, #1
 800dca8:	4629      	mov	r1, r5
 800dcaa:	f001 fc29 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dcae:	f899 2000 	ldrb.w	r2, [r9]
 800dcb2:	9201      	str	r2, [sp, #4]
 800dcb4:	f898 0000 	ldrb.w	r0, [r8]
 800dcb8:	9000      	str	r0, [sp, #0]
 800dcba:	783b      	ldrb	r3, [r7, #0]
 800dcbc:	6860      	ldr	r0, [r4, #4]
 800dcbe:	1cf2      	adds	r2, r6, #3
 800dcc0:	4629      	mov	r1, r5
 800dcc2:	f001 fc1d 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dcc6:	9b07      	ldr	r3, [sp, #28]
 800dcc8:	3604      	adds	r6, #4
 800dcca:	42b3      	cmp	r3, r6
 800dccc:	d1c9      	bne.n	800dc62 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x3ce>
 800dcce:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800dcd0:	9e04      	ldr	r6, [sp, #16]
 800dcd2:	42b7      	cmp	r7, r6
 800dcd4:	f43f ae8a 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800dcd8:	9a08      	ldr	r2, [sp, #32]
 800dcda:	9805      	ldr	r0, [sp, #20]
 800dcdc:	4631      	mov	r1, r6
 800dcde:	3103      	adds	r1, #3
 800dce0:	445a      	add	r2, fp
 800dce2:	4288      	cmp	r0, r1
 800dce4:	9104      	str	r1, [sp, #16]
 800dce6:	9208      	str	r2, [sp, #32]
 800dce8:	f63f af5f 	bhi.w	800dbaa <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x316>
 800dcec:	e67e      	b.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800dcee:	eba7 0e08 	sub.w	lr, r7, r8
 800dcf2:	eb0e 0c4e 	add.w	ip, lr, lr, lsl #1
 800dcf6:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800dcfa:	fb0b f708 	mul.w	r7, fp, r8
 800dcfe:	f1ac 0003 	sub.w	r0, ip, #3
 800dd02:	00b3      	lsls	r3, r6, #2
 800dd04:	9708      	str	r7, [sp, #32]
 800dd06:	900b      	str	r0, [sp, #44]	@ 0x2c
 800dd08:	930c      	str	r3, [sp, #48]	@ 0x30
 800dd0a:	f1bb 0f00 	cmp.w	fp, #0
 800dd0e:	f000 808e 	beq.w	800de2e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x59a>
 800dd12:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800dd14:	9f04      	ldr	r7, [sp, #16]
 800dd16:	f8dd e020 	ldr.w	lr, [sp, #32]
 800dd1a:	3180      	adds	r1, #128	@ 0x80
 800dd1c:	eb0d 0801 	add.w	r8, sp, r1
 800dd20:	e958 1311 	ldrd	r1, r3, [r8, #-68]	@ 0x44
 800dd24:	f858 2c48 	ldr.w	r2, [r8, #-72]
 800dd28:	18b8      	adds	r0, r7, r2
 800dd2a:	9006      	str	r0, [sp, #24]
 800dd2c:	187a      	adds	r2, r7, r1
 800dd2e:	18f9      	adds	r1, r7, r3
 800dd30:	eb0a 0700 	add.w	r7, sl, r0
 800dd34:	f01b 0303 	ands.w	r3, fp, #3
 800dd38:	eb0b 000e 	add.w	r0, fp, lr
 800dd3c:	4676      	mov	r6, lr
 800dd3e:	9209      	str	r2, [sp, #36]	@ 0x24
 800dd40:	910a      	str	r1, [sp, #40]	@ 0x28
 800dd42:	eb0a 0802 	add.w	r8, sl, r2
 800dd46:	eb0a 0901 	add.w	r9, sl, r1
 800dd4a:	9007      	str	r0, [sp, #28]
 800dd4c:	d039      	beq.n	800ddc2 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x52e>
 800dd4e:	2b01      	cmp	r3, #1
 800dd50:	d023      	beq.n	800dd9a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x506>
 800dd52:	2b02      	cmp	r3, #2
 800dd54:	d010      	beq.n	800dd78 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x4e4>
 800dd56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800dd58:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800dd5a:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dd5e:	9101      	str	r1, [sp, #4]
 800dd60:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800dd64:	9a06      	ldr	r2, [sp, #24]
 800dd66:	9300      	str	r3, [sp, #0]
 800dd68:	f81a 3002 	ldrb.w	r3, [sl, r2]
 800dd6c:	6860      	ldr	r0, [r4, #4]
 800dd6e:	4672      	mov	r2, lr
 800dd70:	4629      	mov	r1, r5
 800dd72:	f001 fce3 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dd76:	3601      	adds	r6, #1
 800dd78:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dd7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dd7c:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800dd80:	9001      	str	r0, [sp, #4]
 800dd82:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800dd86:	9906      	ldr	r1, [sp, #24]
 800dd88:	9200      	str	r2, [sp, #0]
 800dd8a:	f81a 3001 	ldrb.w	r3, [sl, r1]
 800dd8e:	6860      	ldr	r0, [r4, #4]
 800dd90:	4632      	mov	r2, r6
 800dd92:	4629      	mov	r1, r5
 800dd94:	f001 fcd2 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800dd98:	3601      	adds	r6, #1
 800dd9a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800dd9c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dd9e:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800dda2:	9301      	str	r3, [sp, #4]
 800dda4:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dda8:	9806      	ldr	r0, [sp, #24]
 800ddaa:	9100      	str	r1, [sp, #0]
 800ddac:	f81a 3000 	ldrb.w	r3, [sl, r0]
 800ddb0:	6860      	ldr	r0, [r4, #4]
 800ddb2:	4632      	mov	r2, r6
 800ddb4:	4629      	mov	r1, r5
 800ddb6:	f001 fcc1 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800ddba:	9b07      	ldr	r3, [sp, #28]
 800ddbc:	3601      	adds	r6, #1
 800ddbe:	429e      	cmp	r6, r3
 800ddc0:	d035      	beq.n	800de2e <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x59a>
 800ddc2:	f899 0000 	ldrb.w	r0, [r9]
 800ddc6:	9001      	str	r0, [sp, #4]
 800ddc8:	f898 3000 	ldrb.w	r3, [r8]
 800ddcc:	9300      	str	r3, [sp, #0]
 800ddce:	4632      	mov	r2, r6
 800ddd0:	783b      	ldrb	r3, [r7, #0]
 800ddd2:	6860      	ldr	r0, [r4, #4]
 800ddd4:	4629      	mov	r1, r5
 800ddd6:	f001 fcb1 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800ddda:	f899 2000 	ldrb.w	r2, [r9]
 800ddde:	9201      	str	r2, [sp, #4]
 800dde0:	f898 1000 	ldrb.w	r1, [r8]
 800dde4:	9100      	str	r1, [sp, #0]
 800dde6:	1c72      	adds	r2, r6, #1
 800dde8:	783b      	ldrb	r3, [r7, #0]
 800ddea:	6860      	ldr	r0, [r4, #4]
 800ddec:	9206      	str	r2, [sp, #24]
 800ddee:	4629      	mov	r1, r5
 800ddf0:	f001 fca4 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800ddf4:	f899 0000 	ldrb.w	r0, [r9]
 800ddf8:	9001      	str	r0, [sp, #4]
 800ddfa:	f898 3000 	ldrb.w	r3, [r8]
 800ddfe:	9a06      	ldr	r2, [sp, #24]
 800de00:	9300      	str	r3, [sp, #0]
 800de02:	783b      	ldrb	r3, [r7, #0]
 800de04:	6860      	ldr	r0, [r4, #4]
 800de06:	3201      	adds	r2, #1
 800de08:	4629      	mov	r1, r5
 800de0a:	f001 fc97 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800de0e:	f899 2000 	ldrb.w	r2, [r9]
 800de12:	9201      	str	r2, [sp, #4]
 800de14:	f898 1000 	ldrb.w	r1, [r8]
 800de18:	9100      	str	r1, [sp, #0]
 800de1a:	783b      	ldrb	r3, [r7, #0]
 800de1c:	6860      	ldr	r0, [r4, #4]
 800de1e:	1cf2      	adds	r2, r6, #3
 800de20:	4629      	mov	r1, r5
 800de22:	f001 fc8b 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800de26:	9b07      	ldr	r3, [sp, #28]
 800de28:	3604      	adds	r6, #4
 800de2a:	429e      	cmp	r6, r3
 800de2c:	d1c9      	bne.n	800ddc2 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x52e>
 800de2e:	9f04      	ldr	r7, [sp, #16]
 800de30:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800de32:	42b7      	cmp	r7, r6
 800de34:	f43f adda 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800de38:	9a08      	ldr	r2, [sp, #32]
 800de3a:	9905      	ldr	r1, [sp, #20]
 800de3c:	3703      	adds	r7, #3
 800de3e:	445a      	add	r2, fp
 800de40:	42b9      	cmp	r1, r7
 800de42:	9704      	str	r7, [sp, #16]
 800de44:	9208      	str	r2, [sp, #32]
 800de46:	f63f af60 	bhi.w	800dd0a <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x476>
 800de4a:	e5cf      	b.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800de4c:	f1ac 0203 	sub.w	r2, ip, #3
 800de50:	00b9      	lsls	r1, r7, #2
 800de52:	9308      	str	r3, [sp, #32]
 800de54:	920c      	str	r2, [sp, #48]	@ 0x30
 800de56:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 800de5a:	910d      	str	r1, [sp, #52]	@ 0x34
 800de5c:	f1bb 0f00 	cmp.w	fp, #0
 800de60:	f000 80a0 	beq.w	800dfa4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x710>
 800de64:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800de66:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800de68:	f8dd e020 	ldr.w	lr, [sp, #32]
 800de6c:	3080      	adds	r0, #128	@ 0x80
 800de6e:	eb0d 0900 	add.w	r9, sp, r0
 800de72:	4677      	mov	r7, lr
 800de74:	f859 3c48 	ldr.w	r3, [r9, #-72]
 800de78:	18c8      	adds	r0, r1, r3
 800de7a:	e959 2311 	ldrd	r2, r3, [r9, #-68]	@ 0x44
 800de7e:	188a      	adds	r2, r1, r2
 800de80:	4419      	add	r1, r3
 800de82:	eb0a 0301 	add.w	r3, sl, r1
 800de86:	920a      	str	r2, [sp, #40]	@ 0x28
 800de88:	910b      	str	r1, [sp, #44]	@ 0x2c
 800de8a:	eb0a 0902 	add.w	r9, sl, r2
 800de8e:	f01b 0103 	ands.w	r1, fp, #3
 800de92:	eb0b 020e 	add.w	r2, fp, lr
 800de96:	9006      	str	r0, [sp, #24]
 800de98:	eb0a 0800 	add.w	r8, sl, r0
 800de9c:	9304      	str	r3, [sp, #16]
 800de9e:	9207      	str	r2, [sp, #28]
 800dea0:	d03e      	beq.n	800df20 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x68c>
 800dea2:	2901      	cmp	r1, #1
 800dea4:	d026      	beq.n	800def4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x660>
 800dea6:	2902      	cmp	r1, #2
 800dea8:	d011      	beq.n	800dece <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x63a>
 800deaa:	f81a 2000 	ldrb.w	r2, [sl, r0]
 800deae:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800deb0:	7df3      	ldrb	r3, [r6, #23]
 800deb2:	9202      	str	r2, [sp, #8]
 800deb4:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800deb8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800deba:	9001      	str	r0, [sp, #4]
 800debc:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dec0:	9100      	str	r1, [sp, #0]
 800dec2:	6860      	ldr	r0, [r4, #4]
 800dec4:	4672      	mov	r2, lr
 800dec6:	4629      	mov	r1, r5
 800dec8:	f001 fd4e 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800decc:	3701      	adds	r7, #1
 800dece:	9806      	ldr	r0, [sp, #24]
 800ded0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800ded2:	f81a 2000 	ldrb.w	r2, [sl, r0]
 800ded6:	7df3      	ldrb	r3, [r6, #23]
 800ded8:	9202      	str	r2, [sp, #8]
 800deda:	f81a 0001 	ldrb.w	r0, [sl, r1]
 800dede:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dee0:	9001      	str	r0, [sp, #4]
 800dee2:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800dee6:	9100      	str	r1, [sp, #0]
 800dee8:	463a      	mov	r2, r7
 800deea:	6860      	ldr	r0, [r4, #4]
 800deec:	4629      	mov	r1, r5
 800deee:	f001 fd3b 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800def2:	3701      	adds	r7, #1
 800def4:	9b06      	ldr	r3, [sp, #24]
 800def6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800def8:	f81a e003 	ldrb.w	lr, [sl, r3]
 800defc:	f81a c000 	ldrb.w	ip, [sl, r0]
 800df00:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800df02:	7df3      	ldrb	r3, [r6, #23]
 800df04:	f81a 1002 	ldrb.w	r1, [sl, r2]
 800df08:	9100      	str	r1, [sp, #0]
 800df0a:	e9cd ce01 	strd	ip, lr, [sp, #4]
 800df0e:	463a      	mov	r2, r7
 800df10:	6860      	ldr	r0, [r4, #4]
 800df12:	4629      	mov	r1, r5
 800df14:	f001 fd28 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800df18:	9b07      	ldr	r3, [sp, #28]
 800df1a:	3701      	adds	r7, #1
 800df1c:	42bb      	cmp	r3, r7
 800df1e:	d041      	beq.n	800dfa4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x710>
 800df20:	f898 0000 	ldrb.w	r0, [r8]
 800df24:	7df3      	ldrb	r3, [r6, #23]
 800df26:	9002      	str	r0, [sp, #8]
 800df28:	f899 2000 	ldrb.w	r2, [r9]
 800df2c:	9904      	ldr	r1, [sp, #16]
 800df2e:	9201      	str	r2, [sp, #4]
 800df30:	7808      	ldrb	r0, [r1, #0]
 800df32:	9000      	str	r0, [sp, #0]
 800df34:	463a      	mov	r2, r7
 800df36:	6860      	ldr	r0, [r4, #4]
 800df38:	4629      	mov	r1, r5
 800df3a:	f001 fd15 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800df3e:	f898 2000 	ldrb.w	r2, [r8]
 800df42:	7df3      	ldrb	r3, [r6, #23]
 800df44:	9202      	str	r2, [sp, #8]
 800df46:	f899 1000 	ldrb.w	r1, [r9]
 800df4a:	9804      	ldr	r0, [sp, #16]
 800df4c:	9101      	str	r1, [sp, #4]
 800df4e:	7802      	ldrb	r2, [r0, #0]
 800df50:	9200      	str	r2, [sp, #0]
 800df52:	6860      	ldr	r0, [r4, #4]
 800df54:	1c7a      	adds	r2, r7, #1
 800df56:	4629      	mov	r1, r5
 800df58:	9206      	str	r2, [sp, #24]
 800df5a:	f001 fd05 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800df5e:	f898 1000 	ldrb.w	r1, [r8]
 800df62:	7df3      	ldrb	r3, [r6, #23]
 800df64:	9102      	str	r1, [sp, #8]
 800df66:	f899 0000 	ldrb.w	r0, [r9]
 800df6a:	9904      	ldr	r1, [sp, #16]
 800df6c:	9001      	str	r0, [sp, #4]
 800df6e:	7808      	ldrb	r0, [r1, #0]
 800df70:	9a06      	ldr	r2, [sp, #24]
 800df72:	9000      	str	r0, [sp, #0]
 800df74:	6860      	ldr	r0, [r4, #4]
 800df76:	3201      	adds	r2, #1
 800df78:	4629      	mov	r1, r5
 800df7a:	f001 fcf5 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800df7e:	f898 2000 	ldrb.w	r2, [r8]
 800df82:	7df3      	ldrb	r3, [r6, #23]
 800df84:	9202      	str	r2, [sp, #8]
 800df86:	f899 1000 	ldrb.w	r1, [r9]
 800df8a:	9804      	ldr	r0, [sp, #16]
 800df8c:	9101      	str	r1, [sp, #4]
 800df8e:	7802      	ldrb	r2, [r0, #0]
 800df90:	9200      	str	r2, [sp, #0]
 800df92:	6860      	ldr	r0, [r4, #4]
 800df94:	1cfa      	adds	r2, r7, #3
 800df96:	4629      	mov	r1, r5
 800df98:	f001 fce6 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800df9c:	9b07      	ldr	r3, [sp, #28]
 800df9e:	3704      	adds	r7, #4
 800dfa0:	42bb      	cmp	r3, r7
 800dfa2:	d1bd      	bne.n	800df20 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x68c>
 800dfa4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800dfa6:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800dfa8:	4287      	cmp	r7, r0
 800dfaa:	f43f ad1f 	beq.w	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800dfae:	9a08      	ldr	r2, [sp, #32]
 800dfb0:	9905      	ldr	r1, [sp, #20]
 800dfb2:	3703      	adds	r7, #3
 800dfb4:	445a      	add	r2, fp
 800dfb6:	42b9      	cmp	r1, r7
 800dfb8:	9709      	str	r7, [sp, #36]	@ 0x24
 800dfba:	9208      	str	r2, [sp, #32]
 800dfbc:	f63f af4e 	bhi.w	800de5c <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x5c8>
 800dfc0:	e514      	b.n	800d9ec <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)+0x158>
 800dfc2:	bf00      	nop

0800dfc4 <WS28xxDmxMulti::Sync(unsigned long)>:
 800dfc4:	4a06      	ldr	r2, [pc, #24]	@ (800dfe0 <WS28xxDmxMulti::Sync(unsigned long)+0x1c>)
 800dfc6:	f240 6304 	movw	r3, #1540	@ 0x604
 800dfca:	fb01 f303 	mul.w	r3, r1, r3
 800dfce:	eb02 0c03 	add.w	ip, r2, r3
 800dfd2:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800dfd6:	441a      	add	r2, r3
 800dfd8:	f8dc 3600 	ldr.w	r3, [ip, #1536]	@ 0x600
 800dfdc:	f7ff bc5a 	b.w	800d894 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>
 800dfe0:	2000064c 	andcs	r0, r0, ip, asr #12

0800dfe4 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)>:
 800dfe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfe6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800dfea:	b123      	cbz	r3, 800dff6 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x12>
 800dfec:	4a0d      	ldr	r2, [pc, #52]	@ (800e024 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x40>)
 800dfee:	6817      	ldr	r7, [r2, #0]
 800dff0:	8fbc      	ldrh	r4, [r7, #60]	@ 0x3c
 800dff2:	42a1      	cmp	r1, r4
 800dff4:	d000      	beq.n	800dff8 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x14>
 800dff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dff8:	4d0b      	ldr	r5, [pc, #44]	@ (800e028 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x44>)
 800dffa:	4606      	mov	r6, r0
 800dffc:	2400      	movs	r4, #0
 800dffe:	f8d5 3200 	ldr.w	r3, [r5, #512]	@ 0x200
 800e002:	462a      	mov	r2, r5
 800e004:	4621      	mov	r1, r4
 800e006:	4630      	mov	r0, r6
 800e008:	f7ff fc44 	bl	800d894 <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long)>
 800e00c:	8fb8      	ldrh	r0, [r7, #60]	@ 0x3c
 800e00e:	3401      	adds	r4, #1
 800e010:	4284      	cmp	r4, r0
 800e012:	f205 6504 	addw	r5, r5, #1540	@ 0x604
 800e016:	d9f2      	bls.n	800dffe <WS28xxDmxMulti::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x1a>
 800e018:	6870      	ldr	r0, [r6, #4]
 800e01a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e01e:	f000 bfb5 	b.w	800ef8c <WS28xxMulti::Update()>
 800e022:	bf00      	nop
 800e024:	20000074 	andcs	r0, r0, r4, ror r0
 800e028:	20000a4c 	andcs	r0, r0, ip, asr #20

0800e02c <remoteconfig::pixel::json_get_status(char*, unsigned long)>:
 800e02c:	4b02      	ldr	r3, [pc, #8]	@ (800e038 <remoteconfig::pixel::json_get_status(char*, unsigned long)+0xc>)
 800e02e:	4a03      	ldr	r2, [pc, #12]	@ (800e03c <remoteconfig::pixel::json_get_status(char*, unsigned long)+0x10>)
 800e030:	681b      	ldr	r3, [r3, #0]
 800e032:	699b      	ldr	r3, [r3, #24]
 800e034:	f008 bef4 	b.w	8016e20 <snprintf>
 800e038:	20000078 	andcs	r0, r0, r8, ror r0
 800e03c:	08017bb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, fp, ip, sp, lr}

0800e040 <pixel::pixel_get_type(pixel::Type)>:
 800e040:	280d      	cmp	r0, #13
 800e042:	bfda      	itte	le
 800e044:	4b02      	ldrle	r3, [pc, #8]	@ (800e050 <pixel::pixel_get_type(pixel::Type)+0x10>)
 800e046:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800e04a:	4802      	ldrgt	r0, [pc, #8]	@ (800e054 <pixel::pixel_get_type(pixel::Type)+0x14>)
 800e04c:	4770      	bx	lr
 800e04e:	bf00      	nop
 800e050:	0801a018 	stmdaeq	r1, {r3, r4, sp, pc}
 800e054:	08017bcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, lr}

0800e058 <pixel::pixel_get_type(char const*)>:
 800e058:	4910      	ldr	r1, [pc, #64]	@ (800e09c <pixel::pixel_get_type(char const*)+0x44>)
 800e05a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e05c:	4604      	mov	r4, r0
 800e05e:	2000      	movs	r0, #0
 800e060:	1e66      	subs	r6, r4, #1
 800e062:	1e4d      	subs	r5, r1, #1
 800e064:	e000      	b.n	800e068 <pixel::pixel_get_type(char const*)+0x10>
 800e066:	b1ba      	cbz	r2, 800e098 <pixel::pixel_get_type(char const*)+0x40>
 800e068:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800e06c:	f1a2 0341 	sub.w	r3, r2, #65	@ 0x41
 800e070:	2b19      	cmp	r3, #25
 800e072:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800e076:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800e07a:	4617      	mov	r7, r2
 800e07c:	bf98      	it	ls
 800e07e:	f102 0720 	addls.w	r7, r2, #32
 800e082:	f1bc 0f19 	cmp.w	ip, #25
 800e086:	bf98      	it	ls
 800e088:	3320      	addls	r3, #32
 800e08a:	42bb      	cmp	r3, r7
 800e08c:	d0eb      	beq.n	800e066 <pixel::pixel_get_type(char const*)+0xe>
 800e08e:	3001      	adds	r0, #1
 800e090:	280e      	cmp	r0, #14
 800e092:	f101 0108 	add.w	r1, r1, #8
 800e096:	d1e3      	bne.n	800e060 <pixel::pixel_get_type(char const*)+0x8>
 800e098:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e09a:	bf00      	nop
 800e09c:	0801a018 	stmdaeq	r1, {r3, r4, sp, pc}

0800e0a0 <pixel::pixel_get_map(char const*)>:
 800e0a0:	4b12      	ldr	r3, [pc, #72]	@ (800e0ec <pixel::pixel_get_map(char const*)+0x4c>)
 800e0a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0a4:	4605      	mov	r5, r0
 800e0a6:	2000      	movs	r0, #0
 800e0a8:	1e5c      	subs	r4, r3, #1
 800e0aa:	1e6e      	subs	r6, r5, #1
 800e0ac:	f103 0c02 	add.w	ip, r3, #2
 800e0b0:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800e0b4:	f1a2 0141 	sub.w	r1, r2, #65	@ 0x41
 800e0b8:	2919      	cmp	r1, #25
 800e0ba:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800e0be:	f1a1 0e41 	sub.w	lr, r1, #65	@ 0x41
 800e0c2:	4617      	mov	r7, r2
 800e0c4:	bf98      	it	ls
 800e0c6:	f102 0720 	addls.w	r7, r2, #32
 800e0ca:	f1be 0f19 	cmp.w	lr, #25
 800e0ce:	bf98      	it	ls
 800e0d0:	3120      	addls	r1, #32
 800e0d2:	42b9      	cmp	r1, r7
 800e0d4:	d005      	beq.n	800e0e2 <pixel::pixel_get_map(char const*)+0x42>
 800e0d6:	3001      	adds	r0, #1
 800e0d8:	2806      	cmp	r0, #6
 800e0da:	f103 0304 	add.w	r3, r3, #4
 800e0de:	d1e3      	bne.n	800e0a8 <pixel::pixel_get_map(char const*)+0x8>
 800e0e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0e2:	2a00      	cmp	r2, #0
 800e0e4:	d0fc      	beq.n	800e0e0 <pixel::pixel_get_map(char const*)+0x40>
 800e0e6:	4564      	cmp	r4, ip
 800e0e8:	d1e2      	bne.n	800e0b0 <pixel::pixel_get_map(char const*)+0x10>
 800e0ea:	e7f9      	b.n	800e0e0 <pixel::pixel_get_map(char const*)+0x40>
 800e0ec:	0801a000 	stmdaeq	r1, {sp, pc}

0800e0f0 <pixel::pixel_get_map(pixel::Map)>:
 800e0f0:	2805      	cmp	r0, #5
 800e0f2:	bfda      	itte	le
 800e0f4:	4b02      	ldrle	r3, [pc, #8]	@ (800e100 <pixel::pixel_get_map(pixel::Map)+0x10>)
 800e0f6:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800e0fa:	4802      	ldrgt	r0, [pc, #8]	@ (800e104 <pixel::pixel_get_map(pixel::Map)+0x14>)
 800e0fc:	4770      	bx	lr
 800e0fe:	bf00      	nop
 800e100:	0801a000 	stmdaeq	r1, {sp, pc}
 800e104:	08017bd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, fp, ip, sp, lr}

0800e108 <remoteconfig::pixel::json_get_types(char*, unsigned long)>:
 800e108:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e10c:	1e8f      	subs	r7, r1, #2
 800e10e:	4a10      	ldr	r2, [pc, #64]	@ (800e150 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x48>)
 800e110:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 800e154 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x4c>
 800e114:	f8df 9040 	ldr.w	r9, [pc, #64]	@ 800e158 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x50>
 800e118:	4639      	mov	r1, r7
 800e11a:	4605      	mov	r5, r0
 800e11c:	f008 fe80 	bl	8016e20 <snprintf>
 800e120:	2600      	movs	r6, #0
 800e122:	4604      	mov	r4, r0
 800e124:	eb06 0308 	add.w	r3, r6, r8
 800e128:	3608      	adds	r6, #8
 800e12a:	2e78      	cmp	r6, #120	@ 0x78
 800e12c:	eb05 0004 	add.w	r0, r5, r4
 800e130:	d107      	bne.n	800e142 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x3a>
 800e132:	235d      	movs	r3, #93	@ 0x5d
 800e134:	f800 3c01 	strb.w	r3, [r0, #-1]
 800e138:	237d      	movs	r3, #125	@ 0x7d
 800e13a:	552b      	strb	r3, [r5, r4]
 800e13c:	1c60      	adds	r0, r4, #1
 800e13e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e142:	1b39      	subs	r1, r7, r4
 800e144:	464a      	mov	r2, r9
 800e146:	f008 fe6b 	bl	8016e20 <snprintf>
 800e14a:	4404      	add	r4, r0
 800e14c:	e7ea      	b.n	800e124 <remoteconfig::pixel::json_get_types(char*, unsigned long)+0x1c>
 800e14e:	bf00      	nop
 800e150:	08017bdf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 800e154:	0801a018 	stmdaeq	r1, {r3, r4, sp, pc}
 800e158:	08017754 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, ip, sp, lr}

0800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>:
 800e15c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e15e:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e162:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800e166:	b2d4      	uxtb	r4, r2
 800e168:	4a27      	ldr	r2, [pc, #156]	@ (800e208 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xac>)
 800e16a:	4606      	mov	r6, r0
 800e16c:	6810      	ldr	r0, [r2, #0]
 800e16e:	4a27      	ldr	r2, [pc, #156]	@ (800e20c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0xb0>)
 800e170:	6812      	ldr	r2, [r2, #0]
 800e172:	68d2      	ldr	r2, [r2, #12]
 800e174:	b085      	sub	sp, #20
 800e176:	2a0d      	cmp	r2, #13
 800e178:	d83f      	bhi.n	800e1fa <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x9e>
 800e17a:	e8df f002 	tbb	[pc, r2]
 800e17e:	3e3e3e07 	cdpcc	14, 3, cr3, cr14, cr7, {0}
 800e182:	2b3e3e3e 	blcs	8f9da82 <_sidata+0xf8310e>
 800e186:	0f3e3e3e 	svceq	0x003e3e3e
 800e18a:	460a180f 	strmi	r1, [sl], -pc, lsl #16
 800e18e:	e9cd 7400 	strd	r7, r4, [sp]
 800e192:	4631      	mov	r1, r6
 800e194:	f001 fad2 	bl	800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e198:	b005      	add	sp, #20
 800e19a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e19c:	e9cd 7401 	strd	r7, r4, [sp, #4]
 800e1a0:	9300      	str	r3, [sp, #0]
 800e1a2:	23ff      	movs	r3, #255	@ 0xff
 800e1a4:	460a      	mov	r2, r1
 800e1a6:	4631      	mov	r1, r6
 800e1a8:	f001 fbde 	bl	800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e1ac:	e7f4      	b.n	800e198 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x3c>
 800e1ae:	ea6f 1513 	mvn.w	r5, r3, lsr #4
 800e1b2:	f083 02c0 	eor.w	r2, r3, #192	@ 0xc0
 800e1b6:	f005 050c 	and.w	r5, r5, #12
 800e1ba:	ea45 1592 	orr.w	r5, r5, r2, lsr #6
 800e1be:	ea6f 0294 	mvn.w	r2, r4, lsr #2
 800e1c2:	f002 0230 	and.w	r2, r2, #48	@ 0x30
 800e1c6:	4315      	orrs	r5, r2
 800e1c8:	e9cd 7301 	strd	r7, r3, [sp, #4]
 800e1cc:	9400      	str	r4, [sp, #0]
 800e1ce:	f045 03c0 	orr.w	r3, r5, #192	@ 0xc0
 800e1d2:	e7e7      	b.n	800e1a4 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x48>
 800e1d4:	42bb      	cmp	r3, r7
 800e1d6:	f04f 0200 	mov.w	r2, #0
 800e1da:	d10a      	bne.n	800e1f2 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x96>
 800e1dc:	42a3      	cmp	r3, r4
 800e1de:	d108      	bne.n	800e1f2 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x96>
 800e1e0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800e1e4:	9200      	str	r2, [sp, #0]
 800e1e6:	4613      	mov	r3, r2
 800e1e8:	460a      	mov	r2, r1
 800e1ea:	4631      	mov	r1, r6
 800e1ec:	f001 fc38 	bl	800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e1f0:	e7d2      	b.n	800e198 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x3c>
 800e1f2:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800e1f6:	9700      	str	r7, [sp, #0]
 800e1f8:	e7f6      	b.n	800e1e8 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x8c>
 800e1fa:	460a      	mov	r2, r1
 800e1fc:	e9cd 7400 	strd	r7, r4, [sp]
 800e200:	4631      	mov	r1, r6
 800e202:	f001 f97d 	bl	800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>
 800e206:	e7c7      	b.n	800e198 <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]+0x3c>
 800e208:	200098dc 	ldrdcs	r9, [r0], -ip
 800e20c:	20000078 	andcs	r0, r0, r8, ror r0

0800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>:
 800e210:	b570      	push	{r4, r5, r6, lr}
 800e212:	4e07      	ldr	r6, [pc, #28]	@ (800e230 <PixelPatterns::Clear(unsigned long) [clone .isra.0]+0x20>)
 800e214:	4605      	mov	r5, r0
 800e216:	2400      	movs	r4, #0
 800e218:	6833      	ldr	r3, [r6, #0]
 800e21a:	681b      	ldr	r3, [r3, #0]
 800e21c:	429c      	cmp	r4, r3
 800e21e:	d300      	bcc.n	800e222 <PixelPatterns::Clear(unsigned long) [clone .isra.0]+0x12>
 800e220:	bd70      	pop	{r4, r5, r6, pc}
 800e222:	4621      	mov	r1, r4
 800e224:	2200      	movs	r2, #0
 800e226:	4628      	mov	r0, r5
 800e228:	f7ff ff98 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e22c:	3401      	adds	r4, #1
 800e22e:	e7f3      	b.n	800e218 <PixelPatterns::Clear(unsigned long) [clone .isra.0]+0x8>
 800e230:	20000078 	andcs	r0, r0, r8, ror r0

0800e234 <PixelPatterns::PixelPatterns(unsigned long)>:
 800e234:	4b0b      	ldr	r3, [pc, #44]	@ (800e264 <PixelPatterns::PixelPatterns(unsigned long)+0x30>)
 800e236:	681a      	ldr	r2, [r3, #0]
 800e238:	4b0b      	ldr	r3, [pc, #44]	@ (800e268 <PixelPatterns::PixelPatterns(unsigned long)+0x34>)
 800e23a:	b510      	push	{r4, lr}
 800e23c:	2908      	cmp	r1, #8
 800e23e:	601a      	str	r2, [r3, #0]
 800e240:	4b0a      	ldr	r3, [pc, #40]	@ (800e26c <PixelPatterns::PixelPatterns(unsigned long)+0x38>)
 800e242:	bf28      	it	cs
 800e244:	2108      	movcs	r1, #8
 800e246:	6019      	str	r1, [r3, #0]
 800e248:	4b09      	ldr	r3, [pc, #36]	@ (800e270 <PixelPatterns::PixelPatterns(unsigned long)+0x3c>)
 800e24a:	2200      	movs	r2, #0
 800e24c:	681c      	ldr	r4, [r3, #0]
 800e24e:	4b09      	ldr	r3, [pc, #36]	@ (800e274 <PixelPatterns::PixelPatterns(unsigned long)+0x40>)
 800e250:	4611      	mov	r1, r2
 800e252:	3201      	adds	r2, #1
 800e254:	2a08      	cmp	r2, #8
 800e256:	61d9      	str	r1, [r3, #28]
 800e258:	601c      	str	r4, [r3, #0]
 800e25a:	6199      	str	r1, [r3, #24]
 800e25c:	f103 0320 	add.w	r3, r3, #32
 800e260:	d1f7      	bne.n	800e252 <PixelPatterns::PixelPatterns(unsigned long)+0x1e>
 800e262:	bd10      	pop	{r4, pc}
 800e264:	200098e4 	andcs	r9, r0, r4, ror #17
 800e268:	200098dc 	ldrdcs	r9, [r0], -ip
 800e26c:	200098d8 	ldrdcs	r9, [r0], -r8
 800e270:	200145c8 	andcs	r4, r1, r8, asr #11
 800e274:	200097d8 	ldrdcs	r9, [r0], -r8

0800e278 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800e278:	2805      	cmp	r0, #5
 800e27a:	bfdd      	ittte	le
 800e27c:	4b02      	ldrle	r3, [pc, #8]	@ (800e288 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800e27e:	220e      	movle	r2, #14
 800e280:	fb02 3000 	mlale	r0, r2, r0, r3
 800e284:	4801      	ldrgt	r0, [pc, #4]	@ (800e28c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800e286:	4770      	bx	lr
 800e288:	0801a088 	stmdaeq	r1, {r3, r7, sp, pc}
 800e28c:	08017bcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, lr}

0800e290 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)>:
 800e290:	b5e0      	push	{r5, r6, r7, lr}
 800e292:	4608      	mov	r0, r1
 800e294:	460d      	mov	r5, r1
 800e296:	4617      	mov	r7, r2
 800e298:	461e      	mov	r6, r3
 800e29a:	f7ff ffb9 	bl	800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800e29e:	4906      	ldr	r1, [pc, #24]	@ (800e2b8 <PixelPatterns::RainbowCycle(unsigned long, unsigned long, pixelpatterns::Direction)+0x28>)
 800e2a0:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800e2a4:	2301      	movs	r3, #1
 800e2a6:	61cb      	str	r3, [r1, #28]
 800e2a8:	22ff      	movs	r2, #255	@ 0xff
 800e2aa:	2300      	movs	r3, #0
 800e2ac:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800e2b0:	604f      	str	r7, [r1, #4]
 800e2b2:	618e      	str	r6, [r1, #24]
 800e2b4:	bde0      	pop	{r5, r6, r7, pc}
 800e2b6:	bf00      	nop
 800e2b8:	200097d8 	ldrdcs	r9, [r0], -r8

0800e2bc <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800e2bc:	b5e0      	push	{r5, r6, r7, lr}
 800e2be:	4608      	mov	r0, r1
 800e2c0:	460d      	mov	r5, r1
 800e2c2:	461e      	mov	r6, r3
 800e2c4:	4617      	mov	r7, r2
 800e2c6:	f7ff ffa3 	bl	800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800e2ca:	4909      	ldr	r1, [pc, #36]	@ (800e2f0 <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x34>)
 800e2cc:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800e2d0:	2302      	movs	r3, #2
 800e2d2:	61cb      	str	r3, [r1, #28]
 800e2d4:	9b04      	ldr	r3, [sp, #16]
 800e2d6:	604b      	str	r3, [r1, #4]
 800e2d8:	4b06      	ldr	r3, [pc, #24]	@ (800e2f4 <PixelPatterns::TheaterChase(unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x38>)
 800e2da:	681b      	ldr	r3, [r3, #0]
 800e2dc:	681b      	ldr	r3, [r3, #0]
 800e2de:	610b      	str	r3, [r1, #16]
 800e2e0:	2300      	movs	r3, #0
 800e2e2:	614b      	str	r3, [r1, #20]
 800e2e4:	9b05      	ldr	r3, [sp, #20]
 800e2e6:	618b      	str	r3, [r1, #24]
 800e2e8:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800e2ec:	bde0      	pop	{r5, r6, r7, pc}
 800e2ee:	bf00      	nop
 800e2f0:	200097d8 	ldrdcs	r9, [r0], -r8
 800e2f4:	20000078 	andcs	r0, r0, r8, ror r0

0800e2f8 <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800e2f8:	b5e0      	push	{r5, r6, r7, lr}
 800e2fa:	4608      	mov	r0, r1
 800e2fc:	460d      	mov	r5, r1
 800e2fe:	461f      	mov	r7, r3
 800e300:	4616      	mov	r6, r2
 800e302:	f7ff ff85 	bl	800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800e306:	4908      	ldr	r1, [pc, #32]	@ (800e328 <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x30>)
 800e308:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800e30c:	2303      	movs	r3, #3
 800e30e:	61cb      	str	r3, [r1, #28]
 800e310:	4b06      	ldr	r3, [pc, #24]	@ (800e32c <PixelPatterns::ColourWipe(unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x34>)
 800e312:	604f      	str	r7, [r1, #4]
 800e314:	681b      	ldr	r3, [r3, #0]
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	610b      	str	r3, [r1, #16]
 800e31a:	2300      	movs	r3, #0
 800e31c:	614b      	str	r3, [r1, #20]
 800e31e:	9b04      	ldr	r3, [sp, #16]
 800e320:	608e      	str	r6, [r1, #8]
 800e322:	618b      	str	r3, [r1, #24]
 800e324:	bde0      	pop	{r5, r6, r7, pc}
 800e326:	bf00      	nop
 800e328:	200097d8 	ldrdcs	r9, [r0], -r8
 800e32c:	20000078 	andcs	r0, r0, r8, ror r0

0800e330 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)>:
 800e330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e332:	4608      	mov	r0, r1
 800e334:	460d      	mov	r5, r1
 800e336:	4616      	mov	r6, r2
 800e338:	461f      	mov	r7, r3
 800e33a:	f7ff ff69 	bl	800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800e33e:	4b12      	ldr	r3, [pc, #72]	@ (800e388 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x58>)
 800e340:	4912      	ldr	r1, [pc, #72]	@ (800e38c <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x5c>)
 800e342:	681b      	ldr	r3, [r3, #0]
 800e344:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800e348:	6818      	ldr	r0, [r3, #0]
 800e34a:	608e      	str	r6, [r1, #8]
 800e34c:	2304      	movs	r3, #4
 800e34e:	4e10      	ldr	r6, [pc, #64]	@ (800e390 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x60>)
 800e350:	61cb      	str	r3, [r1, #28]
 800e352:	1e43      	subs	r3, r0, #1
 800e354:	005b      	lsls	r3, r3, #1
 800e356:	b29b      	uxth	r3, r3
 800e358:	6835      	ldr	r5, [r6, #0]
 800e35a:	610b      	str	r3, [r1, #16]
 800e35c:	2300      	movs	r3, #0
 800e35e:	604f      	str	r7, [r1, #4]
 800e360:	614b      	str	r3, [r1, #20]
 800e362:	b96d      	cbnz	r5, 800e380 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x50>
 800e364:	0084      	lsls	r4, r0, #2
 800e366:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
 800e36a:	4298      	cmp	r0, r3
 800e36c:	bf34      	ite	cc
 800e36e:	4620      	movcc	r0, r4
 800e370:	f04f 30ff 	movcs.w	r0, #4294967295	@ 0xffffffff
 800e374:	f008 ff3c 	bl	80171f0 <operator new[](unsigned int)>
 800e378:	6030      	str	r0, [r6, #0]
 800e37a:	4404      	add	r4, r0
 800e37c:	42a0      	cmp	r0, r4
 800e37e:	d100      	bne.n	800e382 <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x52>
 800e380:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e382:	f840 5b04 	str.w	r5, [r0], #4
 800e386:	e7f9      	b.n	800e37c <PixelPatterns::Scanner(unsigned long, unsigned long, unsigned long)+0x4c>
 800e388:	20000078 	andcs	r0, r0, r8, ror r0
 800e38c:	200097d8 	ldrdcs	r9, [r0], -r8
 800e390:	200097d4 	ldrdcs	r9, [r0], -r4

0800e394 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)>:
 800e394:	b5e0      	push	{r5, r6, r7, lr}
 800e396:	4608      	mov	r0, r1
 800e398:	460d      	mov	r5, r1
 800e39a:	461e      	mov	r6, r3
 800e39c:	4617      	mov	r7, r2
 800e39e:	f7ff ff37 	bl	800e210 <PixelPatterns::Clear(unsigned long) [clone .isra.0]>
 800e3a2:	4908      	ldr	r1, [pc, #32]	@ (800e3c4 <PixelPatterns::Fade(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, pixelpatterns::Direction)+0x30>)
 800e3a4:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800e3a8:	2305      	movs	r3, #5
 800e3aa:	61cb      	str	r3, [r1, #28]
 800e3ac:	9b05      	ldr	r3, [sp, #20]
 800e3ae:	604b      	str	r3, [r1, #4]
 800e3b0:	9b04      	ldr	r3, [sp, #16]
 800e3b2:	610b      	str	r3, [r1, #16]
 800e3b4:	2300      	movs	r3, #0
 800e3b6:	614b      	str	r3, [r1, #20]
 800e3b8:	9b06      	ldr	r3, [sp, #24]
 800e3ba:	618b      	str	r3, [r1, #24]
 800e3bc:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800e3c0:	bde0      	pop	{r5, r6, r7, pc}
 800e3c2:	bf00      	nop
 800e3c4:	200097d8 	ldrdcs	r9, [r0], -r8

0800e3c8 <PixelPatterns::Wheel(unsigned char)>:
 800e3c8:	43cb      	mvns	r3, r1
 800e3ca:	b2db      	uxtb	r3, r3
 800e3cc:	2b54      	cmp	r3, #84	@ 0x54
 800e3ce:	d807      	bhi.n	800e3e0 <PixelPatterns::Wheel(unsigned char)+0x18>
 800e3d0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e3d4:	b2db      	uxtb	r3, r3
 800e3d6:	0418      	lsls	r0, r3, #16
 800e3d8:	f480 007f 	eor.w	r0, r0, #16711680	@ 0xff0000
 800e3dc:	4318      	orrs	r0, r3
 800e3de:	4770      	bx	lr
 800e3e0:	2ba9      	cmp	r3, #169	@ 0xa9
 800e3e2:	d809      	bhi.n	800e3f8 <PixelPatterns::Wheel(unsigned char)+0x30>
 800e3e4:	f1c1 01aa 	rsb	r1, r1, #170	@ 0xaa
 800e3e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e3ec:	b2c9      	uxtb	r1, r1
 800e3ee:	43c8      	mvns	r0, r1
 800e3f0:	b2c0      	uxtb	r0, r0
 800e3f2:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800e3f6:	4770      	bx	lr
 800e3f8:	f1c1 0155 	rsb	r1, r1, #85	@ 0x55
 800e3fc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800e400:	b2c9      	uxtb	r1, r1
 800e402:	0208      	lsls	r0, r1, #8
 800e404:	f480 407f 	eor.w	r0, r0, #65280	@ 0xff00
 800e408:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800e40c:	4770      	bx	lr
	...

0800e410 <PixelPatterns::Increment(unsigned long)>:
 800e410:	4a0d      	ldr	r2, [pc, #52]	@ (800e448 <PixelPatterns::Increment(unsigned long)+0x38>)
 800e412:	b510      	push	{r4, lr}
 800e414:	014c      	lsls	r4, r1, #5
 800e416:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800e41a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800e41e:	b938      	cbnz	r0, 800e430 <PixelPatterns::Increment(unsigned long)+0x20>
 800e420:	690c      	ldr	r4, [r1, #16]
 800e422:	3301      	adds	r3, #1
 800e424:	42a3      	cmp	r3, r4
 800e426:	bf14      	ite	ne
 800e428:	461a      	movne	r2, r3
 800e42a:	4602      	moveq	r2, r0
 800e42c:	614a      	str	r2, [r1, #20]
 800e42e:	bd10      	pop	{r4, pc}
 800e430:	b92b      	cbnz	r3, 800e43e <PixelPatterns::Increment(unsigned long)+0x2e>
 800e432:	4422      	add	r2, r4
 800e434:	6913      	ldr	r3, [r2, #16]
 800e436:	3b01      	subs	r3, #1
 800e438:	b29b      	uxth	r3, r3
 800e43a:	6153      	str	r3, [r2, #20]
 800e43c:	e7f7      	b.n	800e42e <PixelPatterns::Increment(unsigned long)+0x1e>
 800e43e:	3b01      	subs	r3, #1
 800e440:	614b      	str	r3, [r1, #20]
 800e442:	2b00      	cmp	r3, #0
 800e444:	d1f3      	bne.n	800e42e <PixelPatterns::Increment(unsigned long)+0x1e>
 800e446:	e7f4      	b.n	800e432 <PixelPatterns::Increment(unsigned long)+0x22>
 800e448:	200097d8 	ldrdcs	r9, [r0], -r8

0800e44c <PixelPatterns::RainbowCycleUpdate(unsigned long)>:
 800e44c:	4b11      	ldr	r3, [pc, #68]	@ (800e494 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x48>)
 800e44e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800e452:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e456:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800e45a:	4f0f      	ldr	r7, [pc, #60]	@ (800e498 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x4c>)
 800e45c:	4606      	mov	r6, r0
 800e45e:	460c      	mov	r4, r1
 800e460:	2500      	movs	r5, #0
 800e462:	683b      	ldr	r3, [r7, #0]
 800e464:	681b      	ldr	r3, [r3, #0]
 800e466:	429d      	cmp	r5, r3
 800e468:	d305      	bcc.n	800e476 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x2a>
 800e46a:	4621      	mov	r1, r4
 800e46c:	4630      	mov	r0, r6
 800e46e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e472:	f7ff bfcd 	b.w	800e410 <PixelPatterns::Increment(unsigned long)>
 800e476:	0229      	lsls	r1, r5, #8
 800e478:	fbb1 f1f3 	udiv	r1, r1, r3
 800e47c:	4441      	add	r1, r8
 800e47e:	b2c9      	uxtb	r1, r1
 800e480:	4630      	mov	r0, r6
 800e482:	f7ff ffa1 	bl	800e3c8 <PixelPatterns::Wheel(unsigned char)>
 800e486:	4629      	mov	r1, r5
 800e488:	4602      	mov	r2, r0
 800e48a:	4620      	mov	r0, r4
 800e48c:	f7ff fe66 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e490:	3501      	adds	r5, #1
 800e492:	e7e6      	b.n	800e462 <PixelPatterns::RainbowCycleUpdate(unsigned long)+0x16>
 800e494:	200097d8 	ldrdcs	r9, [r0], -r8
 800e498:	20000078 	andcs	r0, r0, r8, ror r0

0800e49c <PixelPatterns::TheaterChaseUpdate(unsigned long)>:
 800e49c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4a0:	4b12      	ldr	r3, [pc, #72]	@ (800e4ec <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x50>)
 800e4a2:	4f13      	ldr	r7, [pc, #76]	@ (800e4f0 <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x54>)
 800e4a4:	f8df b04c 	ldr.w	fp, [pc, #76]	@ 800e4f4 <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x58>
 800e4a8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800e4ac:	e9d3 8902 	ldrd	r8, r9, [r3, #8]
 800e4b0:	f8d3 a014 	ldr.w	sl, [r3, #20]
 800e4b4:	4606      	mov	r6, r0
 800e4b6:	460c      	mov	r4, r1
 800e4b8:	2500      	movs	r5, #0
 800e4ba:	683b      	ldr	r3, [r7, #0]
 800e4bc:	681b      	ldr	r3, [r3, #0]
 800e4be:	429d      	cmp	r5, r3
 800e4c0:	d305      	bcc.n	800e4ce <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x32>
 800e4c2:	4621      	mov	r1, r4
 800e4c4:	4630      	mov	r0, r6
 800e4c6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4ca:	f7ff bfa1 	b.w	800e410 <PixelPatterns::Increment(unsigned long)>
 800e4ce:	eb05 030a 	add.w	r3, r5, sl
 800e4d2:	fb0b f303 	mul.w	r3, fp, r3
 800e4d6:	f1b3 3f55 	cmp.w	r3, #1431655765	@ 0x55555555
 800e4da:	4629      	mov	r1, r5
 800e4dc:	bf94      	ite	ls
 800e4de:	4642      	movls	r2, r8
 800e4e0:	464a      	movhi	r2, r9
 800e4e2:	4620      	mov	r0, r4
 800e4e4:	f7ff fe3a 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e4e8:	3501      	adds	r5, #1
 800e4ea:	e7e6      	b.n	800e4ba <PixelPatterns::TheaterChaseUpdate(unsigned long)+0x1e>
 800e4ec:	200097d8 	ldrdcs	r9, [r0], -r8
 800e4f0:	20000078 	andcs	r0, r0, r8, ror r0
 800e4f4:	aaaaaaab 	bge	6ab8fa8 <__stack_size+0x6ab0fa8>

0800e4f8 <PixelPatterns::ColourWipeUpdate(unsigned long)>:
 800e4f8:	b538      	push	{r3, r4, r5, lr}
 800e4fa:	4b08      	ldr	r3, [pc, #32]	@ (800e51c <PixelPatterns::ColourWipeUpdate(unsigned long)+0x24>)
 800e4fc:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800e500:	460c      	mov	r4, r1
 800e502:	4605      	mov	r5, r0
 800e504:	6959      	ldr	r1, [r3, #20]
 800e506:	689a      	ldr	r2, [r3, #8]
 800e508:	4620      	mov	r0, r4
 800e50a:	f7ff fe27 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e50e:	4621      	mov	r1, r4
 800e510:	4628      	mov	r0, r5
 800e512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e516:	f7ff bf7b 	b.w	800e410 <PixelPatterns::Increment(unsigned long)>
 800e51a:	bf00      	nop
 800e51c:	200097d8 	ldrdcs	r9, [r0], -r8

0800e520 <PixelPatterns::ScannerUpdate(unsigned long)>:
 800e520:	4b25      	ldr	r3, [pc, #148]	@ (800e5b8 <PixelPatterns::ScannerUpdate(unsigned long)+0x98>)
 800e522:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e526:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800e52a:	e9d3 2a04 	ldrd	r2, sl, [r3, #16]
 800e52e:	689e      	ldr	r6, [r3, #8]
 800e530:	f8df b08c 	ldr.w	fp, [pc, #140]	@ 800e5c0 <PixelPatterns::ScannerUpdate(unsigned long)+0xa0>
 800e534:	4f21      	ldr	r7, [pc, #132]	@ (800e5bc <PixelPatterns::ScannerUpdate(unsigned long)+0x9c>)
 800e536:	9000      	str	r0, [sp, #0]
 800e538:	460d      	mov	r5, r1
 800e53a:	2400      	movs	r4, #0
 800e53c:	eba2 080a 	sub.w	r8, r2, sl
 800e540:	f8db 3000 	ldr.w	r3, [fp]
 800e544:	681b      	ldr	r3, [r3, #0]
 800e546:	429c      	cmp	r4, r3
 800e548:	d306      	bcc.n	800e558 <PixelPatterns::ScannerUpdate(unsigned long)+0x38>
 800e54a:	9800      	ldr	r0, [sp, #0]
 800e54c:	4629      	mov	r1, r5
 800e54e:	b003      	add	sp, #12
 800e550:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e554:	f7ff bf5c 	b.w	800e410 <PixelPatterns::Increment(unsigned long)>
 800e558:	4554      	cmp	r4, sl
 800e55a:	ea4f 0984 	mov.w	r9, r4, lsl #2
 800e55e:	d109      	bne.n	800e574 <PixelPatterns::ScannerUpdate(unsigned long)+0x54>
 800e560:	4632      	mov	r2, r6
 800e562:	4621      	mov	r1, r4
 800e564:	4628      	mov	r0, r5
 800e566:	f7ff fdf9 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e56a:	683b      	ldr	r3, [r7, #0]
 800e56c:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800e570:	3401      	adds	r4, #1
 800e572:	e7e5      	b.n	800e540 <PixelPatterns::ScannerUpdate(unsigned long)+0x20>
 800e574:	45a0      	cmp	r8, r4
 800e576:	d108      	bne.n	800e58a <PixelPatterns::ScannerUpdate(unsigned long)+0x6a>
 800e578:	4632      	mov	r2, r6
 800e57a:	4641      	mov	r1, r8
 800e57c:	4628      	mov	r0, r5
 800e57e:	f7ff fded 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e582:	683a      	ldr	r2, [r7, #0]
 800e584:	f842 6009 	str.w	r6, [r2, r9]
 800e588:	e7f2      	b.n	800e570 <PixelPatterns::ScannerUpdate(unsigned long)+0x50>
 800e58a:	683a      	ldr	r2, [r7, #0]
 800e58c:	f852 1009 	ldr.w	r1, [r2, r9]
 800e590:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800e594:	f3c1 4046 	ubfx	r0, r1, #17, #7
 800e598:	0212      	lsls	r2, r2, #8
 800e59a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800e59e:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800e5a2:	430a      	orrs	r2, r1
 800e5a4:	4628      	mov	r0, r5
 800e5a6:	4621      	mov	r1, r4
 800e5a8:	9201      	str	r2, [sp, #4]
 800e5aa:	f7ff fdd7 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e5ae:	6839      	ldr	r1, [r7, #0]
 800e5b0:	9a01      	ldr	r2, [sp, #4]
 800e5b2:	f841 2009 	str.w	r2, [r1, r9]
 800e5b6:	e7db      	b.n	800e570 <PixelPatterns::ScannerUpdate(unsigned long)+0x50>
 800e5b8:	200097d8 	ldrdcs	r9, [r0], -r8
 800e5bc:	200097d4 	ldrdcs	r9, [r0], -r4
 800e5c0:	20000078 	andcs	r0, r0, r8, ror r0

0800e5c4 <PixelPatterns::FadeUpdate(unsigned long)>:
 800e5c4:	4a21      	ldr	r2, [pc, #132]	@ (800e64c <PixelPatterns::FadeUpdate(unsigned long)+0x88>)
 800e5c6:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800e5ca:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800e5ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5d2:	460e      	mov	r6, r1
 800e5d4:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800e5d8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e5dc:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800e5e0:	437a      	muls	r2, r7
 800e5e2:	4605      	mov	r5, r0
 800e5e4:	1bc8      	subs	r0, r1, r7
 800e5e6:	fb00 2204 	mla	r2, r0, r4, r2
 800e5ea:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800e5ee:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800e5f2:	437c      	muls	r4, r7
 800e5f4:	fb00 440e 	mla	r4, r0, lr, r4
 800e5f8:	b2db      	uxtb	r3, r3
 800e5fa:	fbb2 f2f1 	udiv	r2, r2, r1
 800e5fe:	fbb4 f4f1 	udiv	r4, r4, r1
 800e602:	0212      	lsls	r2, r2, #8
 800e604:	0424      	lsls	r4, r4, #16
 800e606:	437b      	muls	r3, r7
 800e608:	b292      	uxth	r2, r2
 800e60a:	f404 047f 	and.w	r4, r4, #16711680	@ 0xff0000
 800e60e:	fa5f fc8c 	uxtb.w	ip, ip
 800e612:	4314      	orrs	r4, r2
 800e614:	fb00 330c 	mla	r3, r0, ip, r3
 800e618:	f8df 8034 	ldr.w	r8, [pc, #52]	@ 800e650 <PixelPatterns::FadeUpdate(unsigned long)+0x8c>
 800e61c:	fbb3 f3f1 	udiv	r3, r3, r1
 800e620:	b2db      	uxtb	r3, r3
 800e622:	431c      	orrs	r4, r3
 800e624:	2700      	movs	r7, #0
 800e626:	f8d8 3000 	ldr.w	r3, [r8]
 800e62a:	681b      	ldr	r3, [r3, #0]
 800e62c:	429f      	cmp	r7, r3
 800e62e:	d305      	bcc.n	800e63c <PixelPatterns::FadeUpdate(unsigned long)+0x78>
 800e630:	4631      	mov	r1, r6
 800e632:	4628      	mov	r0, r5
 800e634:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e638:	f7ff beea 	b.w	800e410 <PixelPatterns::Increment(unsigned long)>
 800e63c:	4639      	mov	r1, r7
 800e63e:	4622      	mov	r2, r4
 800e640:	4630      	mov	r0, r6
 800e642:	f7ff fd8b 	bl	800e15c <PixelPatterns::SetPixelColour(unsigned long, unsigned long, unsigned long) [clone .isra.0]>
 800e646:	3701      	adds	r7, #1
 800e648:	e7ed      	b.n	800e626 <PixelPatterns::FadeUpdate(unsigned long)+0x62>
 800e64a:	bf00      	nop
 800e64c:	200097d8 	ldrdcs	r9, [r0], -r8
 800e650:	20000078 	andcs	r0, r0, r8, ror r0

0800e654 <PixelPatterns::PortUpdate(unsigned long, unsigned long)>:
 800e654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e656:	4b12      	ldr	r3, [pc, #72]	@ (800e6a0 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x4c>)
 800e658:	014e      	lsls	r6, r1, #5
 800e65a:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800e65e:	599c      	ldr	r4, [r3, r6]
 800e660:	686f      	ldr	r7, [r5, #4]
 800e662:	1b14      	subs	r4, r2, r4
 800e664:	42bc      	cmp	r4, r7
 800e666:	d309      	bcc.n	800e67c <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x28>
 800e668:	519a      	str	r2, [r3, r6]
 800e66a:	69eb      	ldr	r3, [r5, #28]
 800e66c:	3b01      	subs	r3, #1
 800e66e:	2b04      	cmp	r3, #4
 800e670:	d804      	bhi.n	800e67c <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x28>
 800e672:	e8df f003 	tbb	[pc, r3]
 800e676:	0f0c0905 	svceq	0x000c0905
 800e67a:	20000012 	andcs	r0, r0, r2, lsl r0
 800e67e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e680:	f7ff fee4 	bl	800e44c <PixelPatterns::RainbowCycleUpdate(unsigned long)>
 800e684:	2001      	movs	r0, #1
 800e686:	e7fa      	b.n	800e67e <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x2a>
 800e688:	f7ff ff08 	bl	800e49c <PixelPatterns::TheaterChaseUpdate(unsigned long)>
 800e68c:	e7fa      	b.n	800e684 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800e68e:	f7ff ff33 	bl	800e4f8 <PixelPatterns::ColourWipeUpdate(unsigned long)>
 800e692:	e7f7      	b.n	800e684 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800e694:	f7ff ff44 	bl	800e520 <PixelPatterns::ScannerUpdate(unsigned long)>
 800e698:	e7f4      	b.n	800e684 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800e69a:	f7ff ff93 	bl	800e5c4 <PixelPatterns::FadeUpdate(unsigned long)>
 800e69e:	e7f1      	b.n	800e684 <PixelPatterns::PortUpdate(unsigned long, unsigned long)+0x30>
 800e6a0:	200097d8 	ldrdcs	r9, [r0], -r8

0800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800e6a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e6a6:	4c41      	ldr	r4, [pc, #260]	@ (800e7ac <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x108>)
 800e6a8:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e6ac:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 800e6b0:	f101 7788 	add.w	r7, r1, #17825792	@ 0x1100000
 800e6b4:	3006      	adds	r0, #6
 800e6b6:	3730      	adds	r7, #48	@ 0x30
 800e6b8:	b2c0      	uxtb	r0, r0
 800e6ba:	eb00 06c7 	add.w	r6, r0, r7, lsl #3
 800e6be:	3680      	adds	r6, #128	@ 0x80
 800e6c0:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
 800e6c4:	00b6      	lsls	r6, r6, #2
 800e6c6:	eba6 0c80 	sub.w	ip, r6, r0, lsl #2
 800e6ca:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800e6ce:	ea4f 0180 	mov.w	r1, r0, lsl #2
 800e6d2:	f04f 0700 	mov.w	r7, #0
 800e6d6:	f04f 0080 	mov.w	r0, #128	@ 0x80
 800e6da:	f04f 0401 	mov.w	r4, #1
 800e6de:	d039      	beq.n	800e754 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0xb0>
 800e6e0:	f5a1 60c0 	sub.w	r0, r1, #1536	@ 0x600
 800e6e4:	f5a1 6c80 	sub.w	ip, r1, #1024	@ 0x400
 800e6e8:	6004      	str	r4, [r0, #0]
 800e6ea:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800e6ee:	f5a1 7000 	sub.w	r0, r1, #512	@ 0x200
 800e6f2:	bf0c      	ite	eq
 800e6f4:	f8cc 7000 	streq.w	r7, [ip]
 800e6f8:	f8cc 4000 	strne.w	r4, [ip]
 800e6fc:	f013 0c80 	ands.w	ip, r3, #128	@ 0x80
 800e700:	bf0c      	ite	eq
 800e702:	f8c0 c000 	streq.w	ip, [r0]
 800e706:	6004      	strne	r4, [r0, #0]
 800e708:	f015 0080 	ands.w	r0, r5, #128	@ 0x80
 800e70c:	bf0c      	ite	eq
 800e70e:	6008      	streq	r0, [r1, #0]
 800e710:	600c      	strne	r4, [r1, #0]
 800e712:	2040      	movs	r0, #64	@ 0x40
 800e714:	3140      	adds	r1, #64	@ 0x40
 800e716:	e01b      	b.n	800e750 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0xac>
 800e718:	f5a1 60b8 	sub.w	r0, r1, #1472	@ 0x5c0
 800e71c:	6004      	str	r4, [r0, #0]
 800e71e:	f5ae 6180 	sub.w	r1, lr, #1024	@ 0x400
 800e722:	ea12 000c 	ands.w	r0, r2, ip
 800e726:	bf0c      	ite	eq
 800e728:	6008      	streq	r0, [r1, #0]
 800e72a:	600c      	strne	r4, [r1, #0]
 800e72c:	f5ae 7100 	sub.w	r1, lr, #512	@ 0x200
 800e730:	ea13 000c 	ands.w	r0, r3, ip
 800e734:	bf0c      	ite	eq
 800e736:	6008      	streq	r0, [r1, #0]
 800e738:	600c      	strne	r4, [r1, #0]
 800e73a:	ea15 010c 	ands.w	r1, r5, ip
 800e73e:	bf0c      	ite	eq
 800e740:	f8ce 1000 	streq.w	r1, [lr]
 800e744:	f8ce 4000 	strne.w	r4, [lr]
 800e748:	f10e 0140 	add.w	r1, lr, #64	@ 0x40
 800e74c:	ea4f 005c 	mov.w	r0, ip, lsr #1
 800e750:	42b1      	cmp	r1, r6
 800e752:	d029      	beq.n	800e7a8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x104>
 800e754:	f5a1 6ec0 	sub.w	lr, r1, #1536	@ 0x600
 800e758:	281f      	cmp	r0, #31
 800e75a:	f5a1 6c80 	sub.w	ip, r1, #1024	@ 0x400
 800e75e:	bf8c      	ite	hi
 800e760:	f8ce 4000 	strhi.w	r4, [lr]
 800e764:	f8ce 7000 	strls.w	r7, [lr]
 800e768:	ea12 0e00 	ands.w	lr, r2, r0
 800e76c:	bf14      	ite	ne
 800e76e:	f8cc 4000 	strne.w	r4, [ip]
 800e772:	f8cc e000 	streq.w	lr, [ip]
 800e776:	f5a1 7c00 	sub.w	ip, r1, #512	@ 0x200
 800e77a:	ea13 0e00 	ands.w	lr, r3, r0
 800e77e:	bf0c      	ite	eq
 800e780:	f8cc e000 	streq.w	lr, [ip]
 800e784:	f8cc 4000 	strne.w	r4, [ip]
 800e788:	ea15 0c00 	ands.w	ip, r5, r0
 800e78c:	bf0c      	ite	eq
 800e78e:	f8c1 c000 	streq.w	ip, [r1]
 800e792:	600c      	strne	r4, [r1, #0]
 800e794:	283f      	cmp	r0, #63	@ 0x3f
 800e796:	ea4f 0c50 	mov.w	ip, r0, lsr #1
 800e79a:	f101 0e40 	add.w	lr, r1, #64	@ 0x40
 800e79e:	d8bb      	bhi.n	800e718 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x74>
 800e7a0:	f5a1 61b8 	sub.w	r1, r1, #1472	@ 0x5c0
 800e7a4:	600f      	str	r7, [r1, #0]
 800e7a6:	e7ba      	b.n	800e71e <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x7a>
 800e7a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e7aa:	bf00      	nop
 800e7ac:	20020000 	andcs	r0, r2, r0

0800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>:
 800e7b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7b2:	4c3e      	ldr	r4, [pc, #248]	@ (800e8ac <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0xfc>)
 800e7b4:	f89d c014 	ldrb.w	ip, [sp, #20]
 800e7b8:	eb04 1181 	add.w	r1, r4, r1, lsl #6
 800e7bc:	f101 7588 	add.w	r5, r1, #17825792	@ 0x1100000
 800e7c0:	3006      	adds	r0, #6
 800e7c2:	b2c0      	uxtb	r0, r0
 800e7c4:	3530      	adds	r5, #48	@ 0x30
 800e7c6:	eb00 07c5 	add.w	r7, r0, r5, lsl #3
 800e7ca:	3780      	adds	r7, #128	@ 0x80
 800e7cc:	eb00 06c5 	add.w	r6, r0, r5, lsl #3
 800e7d0:	00bf      	lsls	r7, r7, #2
 800e7d2:	eba7 0486 	sub.w	r4, r7, r6, lsl #2
 800e7d6:	0664      	lsls	r4, r4, #25
 800e7d8:	ea4f 0186 	mov.w	r1, r6, lsl #2
 800e7dc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e7e0:	f04f 0080 	mov.w	r0, #128	@ 0x80
 800e7e4:	f04f 0601 	mov.w	r6, #1
 800e7e8:	d537      	bpl.n	800e85a <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0xaa>
 800e7ea:	f5a1 60c0 	sub.w	r0, r1, #1536	@ 0x600
 800e7ee:	f012 0480 	ands.w	r4, r2, #128	@ 0x80
 800e7f2:	bf0c      	ite	eq
 800e7f4:	6004      	streq	r4, [r0, #0]
 800e7f6:	6006      	strne	r6, [r0, #0]
 800e7f8:	f5a1 6080 	sub.w	r0, r1, #1024	@ 0x400
 800e7fc:	f013 0480 	ands.w	r4, r3, #128	@ 0x80
 800e800:	bf0c      	ite	eq
 800e802:	6004      	streq	r4, [r0, #0]
 800e804:	6006      	strne	r6, [r0, #0]
 800e806:	f5a1 7000 	sub.w	r0, r1, #512	@ 0x200
 800e80a:	f01c 0480 	ands.w	r4, ip, #128	@ 0x80
 800e80e:	bf0c      	ite	eq
 800e810:	6004      	streq	r4, [r0, #0]
 800e812:	6006      	strne	r6, [r0, #0]
 800e814:	f015 0080 	ands.w	r0, r5, #128	@ 0x80
 800e818:	bf0c      	ite	eq
 800e81a:	6008      	streq	r0, [r1, #0]
 800e81c:	600e      	strne	r6, [r1, #0]
 800e81e:	2040      	movs	r0, #64	@ 0x40
 800e820:	3140      	adds	r1, #64	@ 0x40
 800e822:	e018      	b.n	800e856 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0xa6>
 800e824:	600e      	str	r6, [r1, #0]
 800e826:	f5ae 6180 	sub.w	r1, lr, #1024	@ 0x400
 800e82a:	ea13 0004 	ands.w	r0, r3, r4
 800e82e:	bf0c      	ite	eq
 800e830:	6008      	streq	r0, [r1, #0]
 800e832:	600e      	strne	r6, [r1, #0]
 800e834:	f5ae 7100 	sub.w	r1, lr, #512	@ 0x200
 800e838:	ea1c 0004 	ands.w	r0, ip, r4
 800e83c:	bf0c      	ite	eq
 800e83e:	6008      	streq	r0, [r1, #0]
 800e840:	600e      	strne	r6, [r1, #0]
 800e842:	ea15 0104 	ands.w	r1, r5, r4
 800e846:	bf0c      	ite	eq
 800e848:	f8ce 1000 	streq.w	r1, [lr]
 800e84c:	f8ce 6000 	strne.w	r6, [lr]
 800e850:	f10e 0140 	add.w	r1, lr, #64	@ 0x40
 800e854:	0860      	lsrs	r0, r4, #1
 800e856:	42b9      	cmp	r1, r7
 800e858:	d026      	beq.n	800e8a8 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0xf8>
 800e85a:	f5a1 64c0 	sub.w	r4, r1, #1536	@ 0x600
 800e85e:	ea12 0e00 	ands.w	lr, r2, r0
 800e862:	bf14      	ite	ne
 800e864:	6026      	strne	r6, [r4, #0]
 800e866:	f8c4 e000 	streq.w	lr, [r4]
 800e86a:	f5a1 6480 	sub.w	r4, r1, #1024	@ 0x400
 800e86e:	ea13 0e00 	ands.w	lr, r3, r0
 800e872:	bf14      	ite	ne
 800e874:	6026      	strne	r6, [r4, #0]
 800e876:	f8c4 e000 	streq.w	lr, [r4]
 800e87a:	f5a1 7400 	sub.w	r4, r1, #512	@ 0x200
 800e87e:	ea1c 0e00 	ands.w	lr, ip, r0
 800e882:	bf0c      	ite	eq
 800e884:	f8c4 e000 	streq.w	lr, [r4]
 800e888:	6026      	strne	r6, [r4, #0]
 800e88a:	ea15 0400 	ands.w	r4, r5, r0
 800e88e:	bf0c      	ite	eq
 800e890:	600c      	streq	r4, [r1, #0]
 800e892:	600e      	strne	r6, [r1, #0]
 800e894:	0844      	lsrs	r4, r0, #1
 800e896:	ea12 0050 	ands.w	r0, r2, r0, lsr #1
 800e89a:	f101 0e40 	add.w	lr, r1, #64	@ 0x40
 800e89e:	f5a1 61b8 	sub.w	r1, r1, #1472	@ 0x5c0
 800e8a2:	d1bf      	bne.n	800e824 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0x74>
 800e8a4:	6008      	str	r0, [r1, #0]
 800e8a6:	e7be      	b.n	800e826 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]+0x76>
 800e8a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8aa:	bf00      	nop
 800e8ac:	20020000 	andcs	r0, r2, r0

0800e8b0 <TIMER3_IRQHandler>:
 800e8b0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e8b4:	f8d3 2810 	ldr.w	r2, [r3, #2064]	@ 0x810
 800e8b8:	0791      	lsls	r1, r2, #30
 800e8ba:	d522      	bpl.n	800e902 <TIMER3_IRQHandler+0x52>
 800e8bc:	f8d3 1400 	ldr.w	r1, [r3, #1024]	@ 0x400
 800e8c0:	4813      	ldr	r0, [pc, #76]	@ (800e910 <TIMER3_IRQHandler+0x60>)
 800e8c2:	f021 0101 	bic.w	r1, r1, #1
 800e8c6:	f8c3 1400 	str.w	r1, [r3, #1024]	@ 0x400
 800e8ca:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800e8ce:	f421 7100 	bic.w	r1, r1, #512	@ 0x200
 800e8d2:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800e8d6:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800e8da:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 800e8de:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800e8e2:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 800e8e6:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 800e8ea:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 800e8ee:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 800e8f2:	f04f 0c00 	mov.w	ip, #0
 800e8f6:	f44f 517f 	mov.w	r1, #16320	@ 0x3fc0
 800e8fa:	f880 c000 	strb.w	ip, [r0]
 800e8fe:	f8c3 1828 	str.w	r1, [r3, #2088]	@ 0x828
 800e902:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800e906:	43d2      	mvns	r2, r2
 800e908:	f8c0 2810 	str.w	r2, [r0, #2064]	@ 0x810
 800e90c:	4770      	bx	lr
 800e90e:	bf00      	nop
 800e910:	200098e8 	andcs	r9, r0, r8, ror #17

0800e914 <WS28xxMulti::~WS28xxMulti()>:
 800e914:	4b01      	ldr	r3, [pc, #4]	@ (800e91c <WS28xxMulti::~WS28xxMulti()+0x8>)
 800e916:	2200      	movs	r2, #0
 800e918:	601a      	str	r2, [r3, #0]
 800e91a:	4770      	bx	lr
 800e91c:	200098e4 	andcs	r9, r0, r4, ror #17

0800e920 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800e920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e924:	4680      	mov	r8, r0
 800e926:	b08e      	sub	sp, #56	@ 0x38
 800e928:	4608      	mov	r0, r1
 800e92a:	4614      	mov	r4, r2
 800e92c:	f008 fcae 	bl	801728c <__popcountsi2>
 800e930:	4607      	mov	r7, r0
 800e932:	4620      	mov	r0, r4
 800e934:	f008 fcaa 	bl	801728c <__popcountsi2>
 800e938:	4d70      	ldr	r5, [pc, #448]	@ (800eafc <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1dc>)
 800e93a:	4606      	mov	r6, r0
 800e93c:	f241 0001 	movw	r0, #4097	@ 0x1001
 800e940:	f006 fcc2 	bl	80152c8 <rcu_periph_clock_enable>
 800e944:	4628      	mov	r0, r5
 800e946:	f006 fd7b 	bl	8015440 <timer_deinit>
 800e94a:	2400      	movs	r4, #0
 800e94c:	f240 132b 	movw	r3, #299	@ 0x12b
 800e950:	a901      	add	r1, sp, #4
 800e952:	4628      	mov	r0, r5
 800e954:	9303      	str	r3, [sp, #12]
 800e956:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800e95a:	f006 fe1f 	bl	801559c <timer_init>
 800e95e:	4628      	mov	r0, r5
 800e960:	2101      	movs	r1, #1
 800e962:	f006 ffb5 	bl	80158d0 <timer_master_slave_mode_config>
 800e966:	4628      	mov	r0, r5
 800e968:	2130      	movs	r1, #48	@ 0x30
 800e96a:	f006 ffa1 	bl	80158b0 <timer_master_output_trigger_source_select>
 800e96e:	4621      	mov	r1, r4
 800e970:	4628      	mov	r0, r5
 800e972:	2210      	movs	r2, #16
 800e974:	f006 ff3a 	bl	80157ec <timer_channel_output_mode_config>
 800e978:	4628      	mov	r0, r5
 800e97a:	2210      	movs	r2, #16
 800e97c:	2102      	movs	r1, #2
 800e97e:	f006 ff35 	bl	80157ec <timer_channel_output_mode_config>
 800e982:	4628      	mov	r0, r5
 800e984:	2210      	movs	r2, #16
 800e986:	2103      	movs	r1, #3
 800e988:	f006 ff30 	bl	80157ec <timer_channel_output_mode_config>
 800e98c:	f44f 7996 	mov.w	r9, #300	@ 0x12c
 800e990:	4621      	mov	r1, r4
 800e992:	4628      	mov	r0, r5
 800e994:	2201      	movs	r2, #1
 800e996:	f006 ff4f 	bl	8015838 <timer_channel_output_pulse_value_config>
 800e99a:	fb09 f207 	mul.w	r2, r9, r7
 800e99e:	4628      	mov	r0, r5
 800e9a0:	08d2      	lsrs	r2, r2, #3
 800e9a2:	2102      	movs	r1, #2
 800e9a4:	f006 ff48 	bl	8015838 <timer_channel_output_pulse_value_config>
 800e9a8:	fb09 f006 	mul.w	r0, r9, r6
 800e9ac:	08c2      	lsrs	r2, r0, #3
 800e9ae:	2103      	movs	r1, #3
 800e9b0:	4628      	mov	r0, r5
 800e9b2:	f006 ff41 	bl	8015838 <timer_channel_output_pulse_value_config>
 800e9b6:	f505 6a80 	add.w	sl, r5, #1024	@ 0x400
 800e9ba:	f241 0002 	movw	r0, #4098	@ 0x1002
 800e9be:	f006 fc83 	bl	80152c8 <rcu_periph_clock_enable>
 800e9c2:	4650      	mov	r0, sl
 800e9c4:	f006 fd3c 	bl	8015440 <timer_deinit>
 800e9c8:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800e9cc:	a901      	add	r1, sp, #4
 800e9ce:	4650      	mov	r0, sl
 800e9d0:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800e9d4:	9703      	str	r7, [sp, #12]
 800e9d6:	f006 fde1 	bl	801559c <timer_init>
 800e9da:	4650      	mov	r0, sl
 800e9dc:	2101      	movs	r1, #1
 800e9de:	f006 ff77 	bl	80158d0 <timer_master_slave_mode_config>
 800e9e2:	4650      	mov	r0, sl
 800e9e4:	2107      	movs	r1, #7
 800e9e6:	f006 ff6b 	bl	80158c0 <timer_slave_mode_select>
 800e9ea:	4650      	mov	r0, sl
 800e9ec:	2120      	movs	r1, #32
 800e9ee:	f006 ff57 	bl	80158a0 <timer_input_trigger_source_select>
 800e9f2:	4621      	mov	r1, r4
 800e9f4:	4650      	mov	r0, sl
 800e9f6:	2210      	movs	r2, #16
 800e9f8:	f006 fef8 	bl	80157ec <timer_channel_output_mode_config>
 800e9fc:	f8d8 6000 	ldr.w	r6, [r8]
 800ea00:	3601      	adds	r6, #1
 800ea02:	4621      	mov	r1, r4
 800ea04:	b2b2      	uxth	r2, r6
 800ea06:	4650      	mov	r0, sl
 800ea08:	f006 ff16 	bl	8015838 <timer_channel_output_pulse_value_config>
 800ea0c:	2102      	movs	r1, #2
 800ea0e:	4650      	mov	r0, sl
 800ea10:	f006 ff6a 	bl	80158e8 <timer_interrupt_enable>
 800ea14:	493a      	ldr	r1, [pc, #232]	@ (800eb00 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e0>)
 800ea16:	f881 431e 	strb.w	r4, [r1, #798]	@ 0x31e
 800ea1a:	f04f 4580 	mov.w	r5, #1073741824	@ 0x40000000
 800ea1e:	600d      	str	r5, [r1, #0]
 800ea20:	f640 4015 	movw	r0, #3093	@ 0xc15
 800ea24:	f50a 3516 	add.w	r5, sl, #153600	@ 0x25800
 800ea28:	f006 fc4e 	bl	80152c8 <rcu_periph_clock_enable>
 800ea2c:	2104      	movs	r1, #4
 800ea2e:	4628      	mov	r0, r5
 800ea30:	f006 f82e 	bl	8014a90 <dma_deinit>
 800ea34:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800eb0c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1ec>
 800ea38:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 800eb10 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f0>
 800ea3c:	a805      	add	r0, sp, #20
 800ea3e:	f006 f853 	bl	8014ae8 <dma_single_data_para_struct_init>
 800ea42:	2601      	movs	r6, #1
 800ea44:	4b2f      	ldr	r3, [pc, #188]	@ (800eb04 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e4>)
 800ea46:	9305      	str	r3, [sp, #20]
 800ea48:	f04f 0840 	mov.w	r8, #64	@ 0x40
 800ea4c:	f44f 6700 	mov.w	r7, #2048	@ 0x800
 800ea50:	aa05      	add	r2, sp, #20
 800ea52:	4628      	mov	r0, r5
 800ea54:	2104      	movs	r1, #4
 800ea56:	e9cd a607 	strd	sl, r6, [sp, #28]
 800ea5a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800ea5e:	9606      	str	r6, [sp, #24]
 800ea60:	940d      	str	r4, [sp, #52]	@ 0x34
 800ea62:	9709      	str	r7, [sp, #36]	@ 0x24
 800ea64:	f006 f84c 	bl	8014b00 <dma_single_data_mode_init>
 800ea68:	4628      	mov	r0, r5
 800ea6a:	2104      	movs	r1, #4
 800ea6c:	f006 f8ce 	bl	8014c0c <dma_circulation_disable>
 800ea70:	2205      	movs	r2, #5
 800ea72:	4628      	mov	r0, r5
 800ea74:	2104      	movs	r1, #4
 800ea76:	f006 f8d1 	bl	8014c1c <dma_channel_subperipheral_select>
 800ea7a:	2107      	movs	r1, #7
 800ea7c:	4628      	mov	r0, r5
 800ea7e:	f006 f807 	bl	8014a90 <dma_deinit>
 800ea82:	a805      	add	r0, sp, #20
 800ea84:	f006 f830 	bl	8014ae8 <dma_single_data_para_struct_init>
 800ea88:	4a1f      	ldr	r2, [pc, #124]	@ (800eb08 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1e8>)
 800ea8a:	9207      	str	r2, [sp, #28]
 800ea8c:	4628      	mov	r0, r5
 800ea8e:	aa05      	add	r2, sp, #20
 800ea90:	2107      	movs	r1, #7
 800ea92:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800ea96:	9408      	str	r4, [sp, #32]
 800ea98:	9606      	str	r6, [sp, #24]
 800ea9a:	9709      	str	r7, [sp, #36]	@ 0x24
 800ea9c:	940d      	str	r4, [sp, #52]	@ 0x34
 800ea9e:	f8cd 9014 	str.w	r9, [sp, #20]
 800eaa2:	f006 f82d 	bl	8014b00 <dma_single_data_mode_init>
 800eaa6:	4628      	mov	r0, r5
 800eaa8:	2107      	movs	r1, #7
 800eaaa:	f006 f8af 	bl	8014c0c <dma_circulation_disable>
 800eaae:	2205      	movs	r2, #5
 800eab0:	4628      	mov	r0, r5
 800eab2:	2107      	movs	r1, #7
 800eab4:	f006 f8b2 	bl	8014c1c <dma_channel_subperipheral_select>
 800eab8:	2102      	movs	r1, #2
 800eaba:	4628      	mov	r0, r5
 800eabc:	f005 ffe8 	bl	8014a90 <dma_deinit>
 800eac0:	a805      	add	r0, sp, #20
 800eac2:	f006 f811 	bl	8014ae8 <dma_single_data_para_struct_init>
 800eac6:	aa05      	add	r2, sp, #20
 800eac8:	4628      	mov	r0, r5
 800eaca:	2102      	movs	r1, #2
 800eacc:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 800ead0:	f8cd a01c 	str.w	sl, [sp, #28]
 800ead4:	f8cd 9014 	str.w	r9, [sp, #20]
 800ead8:	9608      	str	r6, [sp, #32]
 800eada:	9606      	str	r6, [sp, #24]
 800eadc:	9709      	str	r7, [sp, #36]	@ 0x24
 800eade:	940d      	str	r4, [sp, #52]	@ 0x34
 800eae0:	f006 f80e 	bl	8014b00 <dma_single_data_mode_init>
 800eae4:	4628      	mov	r0, r5
 800eae6:	2102      	movs	r1, #2
 800eae8:	f006 f890 	bl	8014c0c <dma_circulation_disable>
 800eaec:	2205      	movs	r2, #5
 800eaee:	2102      	movs	r1, #2
 800eaf0:	4628      	mov	r0, r5
 800eaf2:	f006 f893 	bl	8014c1c <dma_channel_subperipheral_select>
 800eaf6:	b00e      	add	sp, #56	@ 0x38
 800eaf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eafc:	40000400 	andmi	r0, r0, r0, lsl #8
 800eb00:	e000e100 	and	lr, r0, r0, lsl #2
 800eb04:	40020818 	andmi	r0, r2, r8, lsl r8
 800eb08:	20020000 	andcs	r0, r2, r0
 800eb0c:	0801a104 	stmdaeq	r1, {r2, r8, sp, pc}
 800eb10:	40020828 	andmi	r0, r2, r8, lsr #16

0800eb14 <WS28xxMulti::Setup(unsigned long)>:
 800eb14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb18:	4680      	mov	r8, r0
 800eb1a:	b092      	sub	sp, #72	@ 0x48
 800eb1c:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 800eb20:	460c      	mov	r4, r1
 800eb22:	f006 fbd1 	bl	80152c8 <rcu_periph_clock_enable>
 800eb26:	488a      	ldr	r0, [pc, #552]	@ (800ed50 <WS28xxMulti::Setup(unsigned long)+0x23c>)
 800eb28:	4d8a      	ldr	r5, [pc, #552]	@ (800ed54 <WS28xxMulti::Setup(unsigned long)+0x240>)
 800eb2a:	2340      	movs	r3, #64	@ 0x40
 800eb2c:	2200      	movs	r2, #0
 800eb2e:	2102      	movs	r1, #2
 800eb30:	f006 fb48 	bl	80151c4 <gpio_mode_set>
 800eb34:	2340      	movs	r3, #64	@ 0x40
 800eb36:	4886      	ldr	r0, [pc, #536]	@ (800ed50 <WS28xxMulti::Setup(unsigned long)+0x23c>)
 800eb38:	2202      	movs	r2, #2
 800eb3a:	2100      	movs	r1, #0
 800eb3c:	f006 fb64 	bl	8015208 <gpio_output_options_set>
 800eb40:	2240      	movs	r2, #64	@ 0x40
 800eb42:	2102      	movs	r1, #2
 800eb44:	4882      	ldr	r0, [pc, #520]	@ (800ed50 <WS28xxMulti::Setup(unsigned long)+0x23c>)
 800eb46:	f006 fb7b 	bl	8015240 <gpio_af_set>
 800eb4a:	fbb5 f5f4 	udiv	r5, r5, r4
 800eb4e:	f241 0001 	movw	r0, #4097	@ 0x1001
 800eb52:	2d0c      	cmp	r5, #12
 800eb54:	bf38      	it	cc
 800eb56:	250c      	movcc	r5, #12
 800eb58:	f006 fbb6 	bl	80152c8 <rcu_periph_clock_enable>
 800eb5c:	487e      	ldr	r0, [pc, #504]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800eb5e:	2400      	movs	r4, #0
 800eb60:	f006 fc6e 	bl	8015440 <timer_deinit>
 800eb64:	1e6b      	subs	r3, r5, #1
 800eb66:	a905      	add	r1, sp, #20
 800eb68:	487b      	ldr	r0, [pc, #492]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800eb6a:	9307      	str	r3, [sp, #28]
 800eb6c:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800eb70:	f88d 4020 	strb.w	r4, [sp, #32]
 800eb74:	f006 fd12 	bl	801559c <timer_init>
 800eb78:	f44f 7080 	mov.w	r0, #256	@ 0x100
 800eb7c:	2701      	movs	r7, #1
 800eb7e:	2602      	movs	r6, #2
 800eb80:	9004      	str	r0, [sp, #16]
 800eb82:	aa02      	add	r2, sp, #8
 800eb84:	4621      	mov	r1, r4
 800eb86:	4874      	ldr	r0, [pc, #464]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800eb88:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800eb8c:	f006 fd46 	bl	801561c <timer_channel_output_config>
 800eb90:	fa25 f207 	lsr.w	r2, r5, r7
 800eb94:	1e51      	subs	r1, r2, #1
 800eb96:	b28a      	uxth	r2, r1
 800eb98:	486f      	ldr	r0, [pc, #444]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800eb9a:	4621      	mov	r1, r4
 800eb9c:	f006 fe4c 	bl	8015838 <timer_channel_output_pulse_value_config>
 800eba0:	4621      	mov	r1, r4
 800eba2:	486d      	ldr	r0, [pc, #436]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800eba4:	2260      	movs	r2, #96	@ 0x60
 800eba6:	f006 fe21 	bl	80157ec <timer_channel_output_mode_config>
 800ebaa:	4622      	mov	r2, r4
 800ebac:	4621      	mov	r1, r4
 800ebae:	486a      	ldr	r0, [pc, #424]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebb0:	f006 fe50 	bl	8015854 <timer_channel_output_shadow_config>
 800ebb4:	4631      	mov	r1, r6
 800ebb6:	4868      	ldr	r0, [pc, #416]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebb8:	2210      	movs	r2, #16
 800ebba:	f006 fe17 	bl	80157ec <timer_channel_output_mode_config>
 800ebbe:	4866      	ldr	r0, [pc, #408]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebc0:	2210      	movs	r2, #16
 800ebc2:	2103      	movs	r1, #3
 800ebc4:	f006 fe12 	bl	80157ec <timer_channel_output_mode_config>
 800ebc8:	40f5      	lsrs	r5, r6
 800ebca:	463a      	mov	r2, r7
 800ebcc:	4631      	mov	r1, r6
 800ebce:	4862      	ldr	r0, [pc, #392]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebd0:	f006 fe32 	bl	8015838 <timer_channel_output_pulse_value_config>
 800ebd4:	1e6b      	subs	r3, r5, #1
 800ebd6:	b29a      	uxth	r2, r3
 800ebd8:	485f      	ldr	r0, [pc, #380]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebda:	2103      	movs	r1, #3
 800ebdc:	f006 fe2c 	bl	8015838 <timer_channel_output_pulse_value_config>
 800ebe0:	4639      	mov	r1, r7
 800ebe2:	485d      	ldr	r0, [pc, #372]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebe4:	f006 fe74 	bl	80158d0 <timer_master_slave_mode_config>
 800ebe8:	2130      	movs	r1, #48	@ 0x30
 800ebea:	485b      	ldr	r0, [pc, #364]	@ (800ed58 <WS28xxMulti::Setup(unsigned long)+0x244>)
 800ebec:	f006 fe60 	bl	80158b0 <timer_master_output_trigger_source_select>
 800ebf0:	f241 0002 	movw	r0, #4098	@ 0x1002
 800ebf4:	f006 fb68 	bl	80152c8 <rcu_periph_clock_enable>
 800ebf8:	4858      	ldr	r0, [pc, #352]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ebfa:	f006 fc21 	bl	8015440 <timer_deinit>
 800ebfe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800ec02:	a905      	add	r1, sp, #20
 800ec04:	9007      	str	r0, [sp, #28]
 800ec06:	4855      	ldr	r0, [pc, #340]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec08:	e9cd 4405 	strd	r4, r4, [sp, #20]
 800ec0c:	f006 fcc6 	bl	801559c <timer_init>
 800ec10:	4639      	mov	r1, r7
 800ec12:	4852      	ldr	r0, [pc, #328]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec14:	f006 fe5c 	bl	80158d0 <timer_master_slave_mode_config>
 800ec18:	4850      	ldr	r0, [pc, #320]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec1a:	2107      	movs	r1, #7
 800ec1c:	f006 fe50 	bl	80158c0 <timer_slave_mode_select>
 800ec20:	484e      	ldr	r0, [pc, #312]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec22:	2120      	movs	r1, #32
 800ec24:	f006 fe3c 	bl	80158a0 <timer_input_trigger_source_select>
 800ec28:	4621      	mov	r1, r4
 800ec2a:	484c      	ldr	r0, [pc, #304]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec2c:	2210      	movs	r2, #16
 800ec2e:	f006 fddd 	bl	80157ec <timer_channel_output_mode_config>
 800ec32:	f8b8 2000 	ldrh.w	r2, [r8]
 800ec36:	4849      	ldr	r0, [pc, #292]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec38:	4621      	mov	r1, r4
 800ec3a:	f006 fdfd 	bl	8015838 <timer_channel_output_pulse_value_config>
 800ec3e:	4631      	mov	r1, r6
 800ec40:	4846      	ldr	r0, [pc, #280]	@ (800ed5c <WS28xxMulti::Setup(unsigned long)+0x248>)
 800ec42:	f006 fe51 	bl	80158e8 <timer_interrupt_enable>
 800ec46:	4946      	ldr	r1, [pc, #280]	@ (800ed60 <WS28xxMulti::Setup(unsigned long)+0x24c>)
 800ec48:	f881 431e 	strb.w	r4, [r1, #798]	@ 0x31e
 800ec4c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800ec50:	600a      	str	r2, [r1, #0]
 800ec52:	f640 4015 	movw	r0, #3093	@ 0xc15
 800ec56:	f006 fb37 	bl	80152c8 <rcu_periph_clock_enable>
 800ec5a:	2107      	movs	r1, #7
 800ec5c:	4841      	ldr	r0, [pc, #260]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ec5e:	4d42      	ldr	r5, [pc, #264]	@ (800ed68 <WS28xxMulti::Setup(unsigned long)+0x254>)
 800ec60:	f005 ff16 	bl	8014a90 <dma_deinit>
 800ec64:	a809      	add	r0, sp, #36	@ 0x24
 800ec66:	f005 ff3f 	bl	8014ae8 <dma_single_data_para_struct_init>
 800ec6a:	f04f 0840 	mov.w	r8, #64	@ 0x40
 800ec6e:	4b3f      	ldr	r3, [pc, #252]	@ (800ed6c <WS28xxMulti::Setup(unsigned long)+0x258>)
 800ec70:	483c      	ldr	r0, [pc, #240]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ec72:	950b      	str	r5, [sp, #44]	@ 0x2c
 800ec74:	aa09      	add	r2, sp, #36	@ 0x24
 800ec76:	f44f 6500 	mov.w	r5, #2048	@ 0x800
 800ec7a:	2107      	movs	r1, #7
 800ec7c:	9309      	str	r3, [sp, #36]	@ 0x24
 800ec7e:	970c      	str	r7, [sp, #48]	@ 0x30
 800ec80:	970a      	str	r7, [sp, #40]	@ 0x28
 800ec82:	950d      	str	r5, [sp, #52]	@ 0x34
 800ec84:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 800ec88:	9411      	str	r4, [sp, #68]	@ 0x44
 800ec8a:	f005 ff39 	bl	8014b00 <dma_single_data_mode_init>
 800ec8e:	4835      	ldr	r0, [pc, #212]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ec90:	2107      	movs	r1, #7
 800ec92:	f005 ffbb 	bl	8014c0c <dma_circulation_disable>
 800ec96:	2205      	movs	r2, #5
 800ec98:	4832      	ldr	r0, [pc, #200]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ec9a:	2107      	movs	r1, #7
 800ec9c:	f005 ffbe 	bl	8014c1c <dma_channel_subperipheral_select>
 800eca0:	4631      	mov	r1, r6
 800eca2:	4830      	ldr	r0, [pc, #192]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800eca4:	f005 fef4 	bl	8014a90 <dma_deinit>
 800eca8:	a809      	add	r0, sp, #36	@ 0x24
 800ecaa:	f005 ff1d 	bl	8014ae8 <dma_single_data_para_struct_init>
 800ecae:	4b30      	ldr	r3, [pc, #192]	@ (800ed70 <WS28xxMulti::Setup(unsigned long)+0x25c>)
 800ecb0:	482c      	ldr	r0, [pc, #176]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ecb2:	970a      	str	r7, [sp, #40]	@ 0x28
 800ecb4:	aa09      	add	r2, sp, #36	@ 0x24
 800ecb6:	4631      	mov	r1, r6
 800ecb8:	4f2e      	ldr	r7, [pc, #184]	@ (800ed74 <WS28xxMulti::Setup(unsigned long)+0x260>)
 800ecba:	9309      	str	r3, [sp, #36]	@ 0x24
 800ecbc:	e9cd 450c 	strd	r4, r5, [sp, #48]	@ 0x30
 800ecc0:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 800ecc4:	9411      	str	r4, [sp, #68]	@ 0x44
 800ecc6:	970b      	str	r7, [sp, #44]	@ 0x2c
 800ecc8:	f005 ff1a 	bl	8014b00 <dma_single_data_mode_init>
 800eccc:	4825      	ldr	r0, [pc, #148]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ecce:	4631      	mov	r1, r6
 800ecd0:	f005 ff9c 	bl	8014c0c <dma_circulation_disable>
 800ecd4:	4823      	ldr	r0, [pc, #140]	@ (800ed64 <WS28xxMulti::Setup(unsigned long)+0x250>)
 800ecd6:	2205      	movs	r2, #5
 800ecd8:	4631      	mov	r1, r6
 800ecda:	f005 ff9f 	bl	8014c1c <dma_channel_subperipheral_select>
 800ecde:	4826      	ldr	r0, [pc, #152]	@ (800ed78 <WS28xxMulti::Setup(unsigned long)+0x264>)
 800ece0:	6801      	ldr	r1, [r0, #0]
 800ece2:	68ca      	ldr	r2, [r1, #12]
 800ece4:	f1a2 050b 	sub.w	r5, r2, #11
 800ece8:	42b5      	cmp	r5, r6
 800ecea:	d819      	bhi.n	800ed20 <WS28xxMulti::Setup(unsigned long)+0x20c>
 800ecec:	680f      	ldr	r7, [r1, #0]
 800ecee:	f107 0701 	add.w	r7, r7, #1
 800ecf2:	d018      	beq.n	800ed26 <WS28xxMulti::Setup(unsigned long)+0x212>
 800ecf4:	4626      	mov	r6, r4
 800ecf6:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 800ecfa:	2300      	movs	r3, #0
 800ecfc:	461a      	mov	r2, r3
 800ecfe:	4619      	mov	r1, r3
 800ed00:	4620      	mov	r0, r4
 800ed02:	e9cd 6600 	strd	r6, r6, [sp]
 800ed06:	f7ff fd53 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800ed0a:	23ff      	movs	r3, #255	@ 0xff
 800ed0c:	4620      	mov	r0, r4
 800ed0e:	e9cd 8800 	strd	r8, r8, [sp]
 800ed12:	461a      	mov	r2, r3
 800ed14:	4639      	mov	r1, r7
 800ed16:	3401      	adds	r4, #1
 800ed18:	f7ff fd4a 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800ed1c:	2c08      	cmp	r4, #8
 800ed1e:	d1ec      	bne.n	800ecfa <WS28xxMulti::Setup(unsigned long)+0x1e6>
 800ed20:	b012      	add	sp, #72	@ 0x48
 800ed22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed26:	4625      	mov	r5, r4
 800ed28:	2300      	movs	r3, #0
 800ed2a:	4620      	mov	r0, r4
 800ed2c:	461a      	mov	r2, r3
 800ed2e:	4619      	mov	r1, r3
 800ed30:	e9cd 5500 	strd	r5, r5, [sp]
 800ed34:	f7ff fd3c 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800ed38:	4620      	mov	r0, r4
 800ed3a:	e9cd 5500 	strd	r5, r5, [sp]
 800ed3e:	4639      	mov	r1, r7
 800ed40:	3401      	adds	r4, #1
 800ed42:	f7ff fd35 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800ed46:	2c08      	cmp	r4, #8
 800ed48:	d1ee      	bne.n	800ed28 <WS28xxMulti::Setup(unsigned long)+0x214>
 800ed4a:	b012      	add	sp, #72	@ 0x48
 800ed4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed50:	40020000 	andmi	r0, r2, r0
 800ed54:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}
 800ed58:	40000400 	andmi	r0, r0, r0, lsl #8
 800ed5c:	40000800 	andmi	r0, r0, r0, lsl #16
 800ed60:	e000e100 	and	lr, r0, r0, lsl #2
 800ed64:	40026000 	andmi	r6, r2, r0
 800ed68:	0801a104 	stmdaeq	r1, {r2, r8, sp, pc}
 800ed6c:	40020828 	andmi	r0, r2, r8, lsr #16
 800ed70:	40020818 	andmi	r0, r2, r8, lsl r8
 800ed74:	20020000 	andcs	r0, r2, r0
 800ed78:	20000078 	andcs	r0, r0, r8, ror r0

0800ed7c <WS28xxMulti::WS28xxMulti()>:
 800ed7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed7e:	4b78      	ldr	r3, [pc, #480]	@ (800ef60 <WS28xxMulti::WS28xxMulti()+0x1e4>)
 800ed80:	4a78      	ldr	r2, [pc, #480]	@ (800ef64 <WS28xxMulti::WS28xxMulti()+0x1e8>)
 800ed82:	681c      	ldr	r4, [r3, #0]
 800ed84:	6010      	str	r0, [r2, #0]
 800ed86:	68e7      	ldr	r7, [r4, #12]
 800ed88:	6826      	ldr	r6, [r4, #0]
 800ed8a:	6922      	ldr	r2, [r4, #16]
 800ed8c:	2100      	movs	r1, #0
 800ed8e:	2f07      	cmp	r7, #7
 800ed90:	4605      	mov	r5, r0
 800ed92:	6001      	str	r1, [r0, #0]
 800ed94:	46be      	mov	lr, r7
 800ed96:	d077      	beq.n	800ee88 <WS28xxMulti::WS28xxMulti()+0x10c>
 800ed98:	f5b6 7f2a 	cmp.w	r6, #680	@ 0x2a8
 800ed9c:	f1a7 0c0b 	sub.w	ip, r7, #11
 800eda0:	bf28      	it	cs
 800eda2:	f44f 762a 	movcs.w	r6, #680	@ 0x2a8
 800eda6:	2003      	movs	r0, #3
 800eda8:	f1bc 0f01 	cmp.w	ip, #1
 800edac:	6026      	str	r6, [r4, #0]
 800edae:	60a0      	str	r0, [r4, #8]
 800edb0:	d854      	bhi.n	800ee5c <WS28xxMulti::WS28xxMulti()+0xe0>
 800edb2:	7de0      	ldrb	r0, [r4, #23]
 800edb4:	281f      	cmp	r0, #31
 800edb6:	bf8c      	ite	hi
 800edb8:	20ff      	movhi	r0, #255	@ 0xff
 800edba:	f060 001f 	ornls	r0, r0, #31
 800edbe:	2700      	movs	r7, #0
 800edc0:	2a06      	cmp	r2, #6
 800edc2:	75e0      	strb	r0, [r4, #23]
 800edc4:	7527      	strb	r7, [r4, #20]
 800edc6:	d07f      	beq.n	800eec8 <WS28xxMulti::WS28xxMulti()+0x14c>
 800edc8:	6863      	ldr	r3, [r4, #4]
 800edca:	2b00      	cmp	r3, #0
 800edcc:	d038      	beq.n	800ee40 <WS28xxMulti::WS28xxMulti()+0xc4>
 800edce:	4866      	ldr	r0, [pc, #408]	@ (800ef68 <WS28xxMulti::WS28xxMulti()+0x1ec>)
 800edd0:	4283      	cmp	r3, r0
 800edd2:	bf97      	itett	ls
 800edd4:	4965      	ldrls	r1, [pc, #404]	@ (800ef6c <WS28xxMulti::WS28xxMulti()+0x1f0>)
 800edd6:	6060      	strhi	r0, [r4, #4]
 800edd8:	eb06 0046 	addls.w	r0, r6, r6, lsl #1
 800eddc:	fbb1 f1f3 	udivls	r1, r1, r3
 800ede0:	bf8a      	itet	hi
 800ede2:	eb06 0046 	addhi.w	r0, r6, r6, lsl #1
 800ede6:	4341      	mulls	r1, r0
 800ede8:	2100      	movhi	r1, #0
 800edea:	f1bc 0f02 	cmp.w	ip, #2
 800edee:	4a60      	ldr	r2, [pc, #384]	@ (800ef70 <WS28xxMulti::WS28xxMulti()+0x1f4>)
 800edf0:	fbb2 f7f1 	udiv	r7, r2, r1
 800edf4:	61a7      	str	r7, [r4, #24]
 800edf6:	d944      	bls.n	800ee82 <WS28xxMulti::WS28xxMulti()+0x106>
 800edf8:	00c0      	lsls	r0, r0, #3
 800edfa:	6028      	str	r0, [r5, #0]
 800edfc:	f640 4002 	movw	r0, #3074	@ 0xc02
 800ee00:	f006 fa62 	bl	80152c8 <rcu_periph_clock_enable>
 800ee04:	485b      	ldr	r0, [pc, #364]	@ (800ef74 <WS28xxMulti::WS28xxMulti()+0x1f8>)
 800ee06:	4e5c      	ldr	r6, [pc, #368]	@ (800ef78 <WS28xxMulti::WS28xxMulti()+0x1fc>)
 800ee08:	f44f 537f 	mov.w	r3, #16320	@ 0x3fc0
 800ee0c:	2202      	movs	r2, #2
 800ee0e:	2101      	movs	r1, #1
 800ee10:	f006 f9d8 	bl	80151c4 <gpio_mode_set>
 800ee14:	f44f 537f 	mov.w	r3, #16320	@ 0x3fc0
 800ee18:	2100      	movs	r1, #0
 800ee1a:	4856      	ldr	r0, [pc, #344]	@ (800ef74 <WS28xxMulti::WS28xxMulti()+0x1f8>)
 800ee1c:	2202      	movs	r2, #2
 800ee1e:	f006 f9f3 	bl	8015208 <gpio_output_options_set>
 800ee22:	7d23      	ldrb	r3, [r4, #20]
 800ee24:	f44f 517f 	mov.w	r1, #16320	@ 0x3fc0
 800ee28:	f8c6 1828 	str.w	r1, [r6, #2088]	@ 0x828
 800ee2c:	b173      	cbz	r3, 800ee4c <WS28xxMulti::WS28xxMulti()+0xd0>
 800ee2e:	4628      	mov	r0, r5
 800ee30:	7da2      	ldrb	r2, [r4, #22]
 800ee32:	7d61      	ldrb	r1, [r4, #21]
 800ee34:	f7ff fd74 	bl	800e920 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800ee38:	f006 fe7a 	bl	8015b30 <dma::memcpy32_init()>
 800ee3c:	4628      	mov	r0, r5
 800ee3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee40:	494e      	ldr	r1, [pc, #312]	@ (800ef7c <WS28xxMulti::WS28xxMulti()+0x200>)
 800ee42:	6061      	str	r1, [r4, #4]
 800ee44:	eb06 0046 	add.w	r0, r6, r6, lsl #1
 800ee48:	0041      	lsls	r1, r0, #1
 800ee4a:	e7ce      	b.n	800edea <WS28xxMulti::WS28xxMulti()+0x6e>
 800ee4c:	4628      	mov	r0, r5
 800ee4e:	6861      	ldr	r1, [r4, #4]
 800ee50:	f7ff fe60 	bl	800eb14 <WS28xxMulti::Setup(unsigned long)>
 800ee54:	f006 fe6c 	bl	8015b30 <dma::memcpy32_init()>
 800ee58:	4628      	mov	r0, r5
 800ee5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee5c:	2f00      	cmp	r7, #0
 800ee5e:	d043      	beq.n	800eee8 <WS28xxMulti::WS28xxMulti()+0x16c>
 800ee60:	2f0d      	cmp	r7, #13
 800ee62:	d15f      	bne.n	800ef24 <WS28xxMulti::WS28xxMulti()+0x1a8>
 800ee64:	2a06      	cmp	r2, #6
 800ee66:	7521      	strb	r1, [r4, #20]
 800ee68:	d05a      	beq.n	800ef20 <WS28xxMulti::WS28xxMulti()+0x1a4>
 800ee6a:	6863      	ldr	r3, [r4, #4]
 800ee6c:	eb06 0046 	add.w	r0, r6, r6, lsl #1
 800ee70:	2b00      	cmp	r3, #0
 800ee72:	d143      	bne.n	800eefc <WS28xxMulti::WS28xxMulti()+0x180>
 800ee74:	4b41      	ldr	r3, [pc, #260]	@ (800ef7c <WS28xxMulti::WS28xxMulti()+0x200>)
 800ee76:	4f3e      	ldr	r7, [pc, #248]	@ (800ef70 <WS28xxMulti::WS28xxMulti()+0x1f4>)
 800ee78:	6063      	str	r3, [r4, #4]
 800ee7a:	0041      	lsls	r1, r0, #1
 800ee7c:	fbb7 f2f1 	udiv	r2, r7, r1
 800ee80:	61a2      	str	r2, [r4, #24]
 800ee82:	4430      	add	r0, r6
 800ee84:	3008      	adds	r0, #8
 800ee86:	e7b7      	b.n	800edf8 <WS28xxMulti::WS28xxMulti()+0x7c>
 800ee88:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 800ee8c:	bf28      	it	cs
 800ee8e:	f44f 7600 	movcs.w	r6, #512	@ 0x200
 800ee92:	2004      	movs	r0, #4
 800ee94:	2301      	movs	r3, #1
 800ee96:	2a06      	cmp	r2, #6
 800ee98:	6026      	str	r6, [r4, #0]
 800ee9a:	60a0      	str	r0, [r4, #8]
 800ee9c:	7523      	strb	r3, [r4, #20]
 800ee9e:	d05b      	beq.n	800ef58 <WS28xxMulti::WS28xxMulti()+0x1dc>
 800eea0:	7d62      	ldrb	r2, [r4, #21]
 800eea2:	7da3      	ldrb	r3, [r4, #22]
 800eea4:	4293      	cmp	r3, r2
 800eea6:	d811      	bhi.n	800eecc <WS28xxMulti::WS28xxMulti()+0x150>
 800eea8:	f04f 0c00 	mov.w	ip, #0
 800eeac:	2f03      	cmp	r7, #3
 800eeae:	f8a4 c015 	strh.w	ip, [r4, #21]
 800eeb2:	d044      	beq.n	800ef3e <WS28xxMulti::WS28xxMulti()+0x1c2>
 800eeb4:	f1ae 0208 	sub.w	r2, lr, #8
 800eeb8:	2a03      	cmp	r2, #3
 800eeba:	bf34      	ite	cc
 800eebc:	22fc      	movcc	r2, #252	@ 0xfc
 800eebe:	22f0      	movcs	r2, #240	@ 0xf0
 800eec0:	75a2      	strb	r2, [r4, #22]
 800eec2:	27c0      	movs	r7, #192	@ 0xc0
 800eec4:	7567      	strb	r7, [r4, #21]
 800eec6:	e003      	b.n	800eed0 <WS28xxMulti::WS28xxMulti()+0x154>
 800eec8:	6127      	str	r7, [r4, #16]
 800eeca:	e77d      	b.n	800edc8 <WS28xxMulti::WS28xxMulti()+0x4c>
 800eecc:	2a00      	cmp	r2, #0
 800eece:	d0f8      	beq.n	800eec2 <WS28xxMulti::WS28xxMulti()+0x146>
 800eed0:	fb06 f000 	mul.w	r0, r6, r0
 800eed4:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 800eed8:	4e29      	ldr	r6, [pc, #164]	@ (800ef80 <WS28xxMulti::WS28xxMulti()+0x204>)
 800eeda:	4a25      	ldr	r2, [pc, #148]	@ (800ef70 <WS28xxMulti::WS28xxMulti()+0x1f4>)
 800eedc:	6066      	str	r6, [r4, #4]
 800eede:	004b      	lsls	r3, r1, #1
 800eee0:	fbb2 f7f3 	udiv	r7, r2, r3
 800eee4:	61a7      	str	r7, [r4, #24]
 800eee6:	e787      	b.n	800edf8 <WS28xxMulti::WS28xxMulti()+0x7c>
 800eee8:	2a06      	cmp	r2, #6
 800eeea:	7527      	strb	r7, [r4, #20]
 800eeec:	f47f af6c 	bne.w	800edc8 <WS28xxMulti::WS28xxMulti()+0x4c>
 800eef0:	6863      	ldr	r3, [r4, #4]
 800eef2:	6127      	str	r7, [r4, #16]
 800eef4:	2b00      	cmp	r3, #0
 800eef6:	f47f af6a 	bne.w	800edce <WS28xxMulti::WS28xxMulti()+0x52>
 800eefa:	e7a1      	b.n	800ee40 <WS28xxMulti::WS28xxMulti()+0xc4>
 800eefc:	4a21      	ldr	r2, [pc, #132]	@ (800ef84 <WS28xxMulti::WS28xxMulti()+0x208>)
 800eefe:	4293      	cmp	r3, r2
 800ef00:	d80a      	bhi.n	800ef18 <WS28xxMulti::WS28xxMulti()+0x19c>
 800ef02:	4f1a      	ldr	r7, [pc, #104]	@ (800ef6c <WS28xxMulti::WS28xxMulti()+0x1f0>)
 800ef04:	fbb7 f1f3 	udiv	r1, r7, r3
 800ef08:	fb06 f101 	mul.w	r1, r6, r1
 800ef0c:	4a18      	ldr	r2, [pc, #96]	@ (800ef70 <WS28xxMulti::WS28xxMulti()+0x1f4>)
 800ef0e:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800ef12:	fbb2 f2f3 	udiv	r2, r2, r3
 800ef16:	e7b3      	b.n	800ee80 <WS28xxMulti::WS28xxMulti()+0x104>
 800ef18:	4f15      	ldr	r7, [pc, #84]	@ (800ef70 <WS28xxMulti::WS28xxMulti()+0x1f4>)
 800ef1a:	6062      	str	r2, [r4, #4]
 800ef1c:	2100      	movs	r1, #0
 800ef1e:	e7ad      	b.n	800ee7c <WS28xxMulti::WS28xxMulti()+0x100>
 800ef20:	6121      	str	r1, [r4, #16]
 800ef22:	e7a2      	b.n	800ee6a <WS28xxMulti::WS28xxMulti()+0xee>
 800ef24:	2301      	movs	r3, #1
 800ef26:	2f0e      	cmp	r7, #14
 800ef28:	7523      	strb	r3, [r4, #20]
 800ef2a:	d110      	bne.n	800ef4e <WS28xxMulti::WS28xxMulti()+0x1d2>
 800ef2c:	2a06      	cmp	r2, #6
 800ef2e:	60e0      	str	r0, [r4, #12]
 800ef30:	d008      	beq.n	800ef44 <WS28xxMulti::WS28xxMulti()+0x1c8>
 800ef32:	7d62      	ldrb	r2, [r4, #21]
 800ef34:	7da7      	ldrb	r7, [r4, #22]
 800ef36:	4297      	cmp	r7, r2
 800ef38:	d8c8      	bhi.n	800eecc <WS28xxMulti::WS28xxMulti()+0x150>
 800ef3a:	f8a4 1015 	strh.w	r1, [r4, #21]
 800ef3e:	22f8      	movs	r2, #248	@ 0xf8
 800ef40:	75a2      	strb	r2, [r4, #22]
 800ef42:	e7be      	b.n	800eec2 <WS28xxMulti::WS28xxMulti()+0x146>
 800ef44:	4686      	mov	lr, r0
 800ef46:	4607      	mov	r7, r0
 800ef48:	2102      	movs	r1, #2
 800ef4a:	6121      	str	r1, [r4, #16]
 800ef4c:	e7a8      	b.n	800eea0 <WS28xxMulti::WS28xxMulti()+0x124>
 800ef4e:	2a06      	cmp	r2, #6
 800ef50:	d1a6      	bne.n	800eea0 <WS28xxMulti::WS28xxMulti()+0x124>
 800ef52:	1e7a      	subs	r2, r7, #1
 800ef54:	2a09      	cmp	r2, #9
 800ef56:	d8f7      	bhi.n	800ef48 <WS28xxMulti::WS28xxMulti()+0x1cc>
 800ef58:	490b      	ldr	r1, [pc, #44]	@ (800ef88 <WS28xxMulti::WS28xxMulti()+0x20c>)
 800ef5a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800ef5e:	e7f4      	b.n	800ef4a <WS28xxMulti::WS28xxMulti()+0x1ce>
 800ef60:	20000078 	andcs	r0, r0, r8, ror r0
 800ef64:	200098e4 	andcs	r9, r0, r4, ror #17
 800ef68:	017d7840 	cmneq	sp, r0, asr #16
 800ef6c:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 800ef70:	000f4240 	andeq	r4, pc, r0, asr #4
 800ef74:	40020800 	andmi	r0, r2, r0, lsl #16
 800ef78:	40020000 	andmi	r0, r2, r0
 800ef7c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800ef80:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800ef84:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800ef88:	0801a0dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sp, pc}

0800ef8c <WS28xxMulti::Update()>:
 800ef8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ef8e:	4c5d      	ldr	r4, [pc, #372]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800ef90:	f8d4 3410 	ldr.w	r3, [r4, #1040]	@ 0x410
 800ef94:	4605      	mov	r5, r0
 800ef96:	f023 0001 	bic.w	r0, r3, #1
 800ef9a:	682a      	ldr	r2, [r5, #0]
 800ef9c:	f8c4 0410 	str.w	r0, [r4, #1040]	@ 0x410
 800efa0:	f8d4 1408 	ldr.w	r1, [r4, #1032]	@ 0x408
 800efa4:	f041 063d 	orr.w	r6, r1, #61	@ 0x3d
 800efa8:	f8c4 6408 	str.w	r6, [r4, #1032]	@ 0x408
 800efac:	4e56      	ldr	r6, [pc, #344]	@ (800f108 <WS28xxMulti::Update()+0x17c>)
 800efae:	f8c4 641c 	str.w	r6, [r4, #1052]	@ 0x41c
 800efb2:	f040 0301 	orr.w	r3, r0, #1
 800efb6:	0857      	lsrs	r7, r2, #1
 800efb8:	f506 4000 	add.w	r0, r6, #32768	@ 0x8000
 800efbc:	f8c4 0418 	str.w	r0, [r4, #1048]	@ 0x418
 800efc0:	f8c4 7414 	str.w	r7, [r4, #1044]	@ 0x414
 800efc4:	f8c4 3410 	str.w	r3, [r4, #1040]	@ 0x410
 800efc8:	f8d4 7414 	ldr.w	r7, [r4, #1044]	@ 0x414
 800efcc:	2f00      	cmp	r7, #0
 800efce:	d1fb      	bne.n	800efc8 <WS28xxMulti::Update()+0x3c>
 800efd0:	4b4e      	ldr	r3, [pc, #312]	@ (800f10c <WS28xxMulti::Update()+0x180>)
 800efd2:	f04f 4c80 	mov.w	ip, #1073741824	@ 0x40000000
 800efd6:	2201      	movs	r2, #1
 800efd8:	701a      	strb	r2, [r3, #0]
 800efda:	f8dc 1800 	ldr.w	r1, [ip, #2048]	@ 0x800
 800efde:	f021 0001 	bic.w	r0, r1, #1
 800efe2:	494b      	ldr	r1, [pc, #300]	@ (800f110 <WS28xxMulti::Update()+0x184>)
 800efe4:	f8cc 0800 	str.w	r0, [ip, #2048]	@ 0x800
 800efe8:	f8cc 7824 	str.w	r7, [ip, #2084]	@ 0x824
 800efec:	f8dc 3400 	ldr.w	r3, [ip, #1024]	@ 0x400
 800eff0:	6808      	ldr	r0, [r1, #0]
 800eff2:	f023 0201 	bic.w	r2, r3, #1
 800eff6:	7d03      	ldrb	r3, [r0, #20]
 800eff8:	f8cc 2400 	str.w	r2, [ip, #1024]	@ 0x400
 800effc:	f8cc 7424 	str.w	r7, [ip, #1060]	@ 0x424
 800f000:	4f44      	ldr	r7, [pc, #272]	@ (800f114 <WS28xxMulti::Update()+0x188>)
 800f002:	2b00      	cmp	r3, #0
 800f004:	d053      	beq.n	800f0ae <WS28xxMulti::Update()+0x122>
 800f006:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800f008:	f020 0301 	bic.w	r3, r0, #1
 800f00c:	6723      	str	r3, [r4, #112]	@ 0x70
 800f00e:	483d      	ldr	r0, [pc, #244]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800f010:	2220      	movs	r2, #32
 800f012:	2104      	movs	r1, #4
 800f014:	f005 fe27 	bl	8014c66 <dma_interrupt_flag_clear>
 800f018:	67e7      	str	r7, [r4, #124]	@ 0x7c
 800f01a:	8829      	ldrh	r1, [r5, #0]
 800f01c:	6761      	str	r1, [r4, #116]	@ 0x74
 800f01e:	6f22      	ldr	r2, [r4, #112]	@ 0x70
 800f020:	f042 0001 	orr.w	r0, r2, #1
 800f024:	6720      	str	r0, [r4, #112]	@ 0x70
 800f026:	f8d4 30b8 	ldr.w	r3, [r4, #184]	@ 0xb8
 800f02a:	4836      	ldr	r0, [pc, #216]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800f02c:	f023 0101 	bic.w	r1, r3, #1
 800f030:	f8c4 10b8 	str.w	r1, [r4, #184]	@ 0xb8
 800f034:	2220      	movs	r2, #32
 800f036:	2107      	movs	r1, #7
 800f038:	f005 fe15 	bl	8014c66 <dma_interrupt_flag_clear>
 800f03c:	f8c4 60c4 	str.w	r6, [r4, #196]	@ 0xc4
 800f040:	882e      	ldrh	r6, [r5, #0]
 800f042:	f8c4 60bc 	str.w	r6, [r4, #188]	@ 0xbc
 800f046:	f8d4 00b8 	ldr.w	r0, [r4, #184]	@ 0xb8
 800f04a:	f040 0301 	orr.w	r3, r0, #1
 800f04e:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800f052:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800f054:	482b      	ldr	r0, [pc, #172]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800f056:	f021 0601 	bic.w	r6, r1, #1
 800f05a:	2220      	movs	r2, #32
 800f05c:	2102      	movs	r1, #2
 800f05e:	6426      	str	r6, [r4, #64]	@ 0x40
 800f060:	f005 fe01 	bl	8014c66 <dma_interrupt_flag_clear>
 800f064:	64e7      	str	r7, [r4, #76]	@ 0x4c
 800f066:	882f      	ldrh	r7, [r5, #0]
 800f068:	6467      	str	r7, [r4, #68]	@ 0x44
 800f06a:	6c25      	ldr	r5, [r4, #64]	@ 0x40
 800f06c:	482a      	ldr	r0, [pc, #168]	@ (800f118 <WS28xxMulti::Update()+0x18c>)
 800f06e:	f045 0201 	orr.w	r2, r5, #1
 800f072:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800f076:	6422      	str	r2, [r4, #64]	@ 0x40
 800f078:	f006 facb 	bl	8015612 <timer_dma_enable>
 800f07c:	4826      	ldr	r0, [pc, #152]	@ (800f118 <WS28xxMulti::Update()+0x18c>)
 800f07e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800f082:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 800f086:	f006 fac4 	bl	8015612 <timer_dma_enable>
 800f08a:	4823      	ldr	r0, [pc, #140]	@ (800f118 <WS28xxMulti::Update()+0x18c>)
 800f08c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800f090:	f006 fabf 	bl	8015612 <timer_dma_enable>
 800f094:	f8d4 0800 	ldr.w	r0, [r4, #2048]	@ 0x800
 800f098:	f040 0301 	orr.w	r3, r0, #1
 800f09c:	f8c4 3800 	str.w	r3, [r4, #2048]	@ 0x800
 800f0a0:	f8d4 1400 	ldr.w	r1, [r4, #1024]	@ 0x400
 800f0a4:	f041 0601 	orr.w	r6, r1, #1
 800f0a8:	f8c4 6400 	str.w	r6, [r4, #1024]	@ 0x400
 800f0ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f0ae:	f8d4 20b8 	ldr.w	r2, [r4, #184]	@ 0xb8
 800f0b2:	4814      	ldr	r0, [pc, #80]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800f0b4:	f022 0101 	bic.w	r1, r2, #1
 800f0b8:	f8c4 10b8 	str.w	r1, [r4, #184]	@ 0xb8
 800f0bc:	2220      	movs	r2, #32
 800f0be:	2107      	movs	r1, #7
 800f0c0:	f005 fdd1 	bl	8014c66 <dma_interrupt_flag_clear>
 800f0c4:	f8c4 70c4 	str.w	r7, [r4, #196]	@ 0xc4
 800f0c8:	882f      	ldrh	r7, [r5, #0]
 800f0ca:	f8c4 70bc 	str.w	r7, [r4, #188]	@ 0xbc
 800f0ce:	f8d4 00b8 	ldr.w	r0, [r4, #184]	@ 0xb8
 800f0d2:	f040 0301 	orr.w	r3, r0, #1
 800f0d6:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800f0da:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800f0dc:	4809      	ldr	r0, [pc, #36]	@ (800f104 <WS28xxMulti::Update()+0x178>)
 800f0de:	f021 0701 	bic.w	r7, r1, #1
 800f0e2:	2220      	movs	r2, #32
 800f0e4:	2102      	movs	r1, #2
 800f0e6:	6427      	str	r7, [r4, #64]	@ 0x40
 800f0e8:	f005 fdbd 	bl	8014c66 <dma_interrupt_flag_clear>
 800f0ec:	64e6      	str	r6, [r4, #76]	@ 0x4c
 800f0ee:	882d      	ldrh	r5, [r5, #0]
 800f0f0:	6465      	str	r5, [r4, #68]	@ 0x44
 800f0f2:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 800f0f4:	4808      	ldr	r0, [pc, #32]	@ (800f118 <WS28xxMulti::Update()+0x18c>)
 800f0f6:	f046 0201 	orr.w	r2, r6, #1
 800f0fa:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800f0fe:	6422      	str	r2, [r4, #64]	@ 0x40
 800f100:	e7bf      	b.n	800f082 <WS28xxMulti::Update()+0xf6>
 800f102:	bf00      	nop
 800f104:	40026000 	andmi	r6, r2, r0
 800f108:	20020000 	andcs	r0, r2, r0
 800f10c:	200098e8 	andcs	r9, r0, r8, ror #17
 800f110:	20000078 	andcs	r0, r0, r8, ror r0
 800f114:	0801a104 	stmdaeq	r1, {r2, r8, sp, pc}
 800f118:	40000400 	andmi	r0, r0, r0, lsl #8

0800f11c <WS28xxMulti::Blackout()>:
 800f11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f120:	b085      	sub	sp, #20
 800f122:	4f74      	ldr	r7, [pc, #464]	@ (800f2f4 <WS28xxMulti::Blackout()+0x1d8>)
 800f124:	9003      	str	r0, [sp, #12]
 800f126:	f3bf 8f5f 	dmb	sy
 800f12a:	783b      	ldrb	r3, [r7, #0]
 800f12c:	2b00      	cmp	r3, #0
 800f12e:	d1fa      	bne.n	800f126 <WS28xxMulti::Blackout()+0xa>
 800f130:	4871      	ldr	r0, [pc, #452]	@ (800f2f8 <WS28xxMulti::Blackout()+0x1dc>)
 800f132:	6804      	ldr	r4, [r0, #0]
 800f134:	7d21      	ldrb	r1, [r4, #20]
 800f136:	b309      	cbz	r1, 800f17c <WS28xxMulti::Blackout()+0x60>
 800f138:	4b70      	ldr	r3, [pc, #448]	@ (800f2fc <WS28xxMulti::Blackout()+0x1e0>)
 800f13a:	4a71      	ldr	r2, [pc, #452]	@ (800f300 <WS28xxMulti::Blackout()+0x1e4>)
 800f13c:	f503 3580 	add.w	r5, r3, #65536	@ 0x10000
 800f140:	e9c3 2200 	strd	r2, r2, [r3]
 800f144:	e9c3 2202 	strd	r2, r2, [r3, #8]
 800f148:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800f14c:	3340      	adds	r3, #64	@ 0x40
 800f14e:	429d      	cmp	r5, r3
 800f150:	e943 220a 	strd	r2, r2, [r3, #-40]	@ 0x28
 800f154:	e943 2208 	strd	r2, r2, [r3, #-32]
 800f158:	e943 2206 	strd	r2, r2, [r3, #-24]
 800f15c:	e943 2204 	strd	r2, r2, [r3, #-16]
 800f160:	e943 2202 	strd	r2, r2, [r3, #-8]
 800f164:	d1ec      	bne.n	800f140 <WS28xxMulti::Blackout()+0x24>
 800f166:	9803      	ldr	r0, [sp, #12]
 800f168:	f7ff ff10 	bl	800ef8c <WS28xxMulti::Update()>
 800f16c:	f3bf 8f5f 	dmb	sy
 800f170:	783e      	ldrb	r6, [r7, #0]
 800f172:	2e00      	cmp	r6, #0
 800f174:	d1fa      	bne.n	800f16c <WS28xxMulti::Blackout()+0x50>
 800f176:	b005      	add	sp, #20
 800f178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f17c:	68e2      	ldr	r2, [r4, #12]
 800f17e:	f1a2 0a0b 	sub.w	sl, r2, #11
 800f182:	f1ba 0f02 	cmp.w	sl, #2
 800f186:	f200 80a4 	bhi.w	800f2d2 <WS28xxMulti::Blackout()+0x1b6>
 800f18a:	f8d4 9000 	ldr.w	r9, [r4]
 800f18e:	460d      	mov	r5, r1
 800f190:	f109 0101 	add.w	r1, r9, #1
 800f194:	9102      	str	r1, [sp, #8]
 800f196:	462e      	mov	r6, r5
 800f198:	f04f 0bff 	mov.w	fp, #255	@ 0xff
 800f19c:	2300      	movs	r3, #0
 800f19e:	e9cd 6600 	strd	r6, r6, [sp]
 800f1a2:	461a      	mov	r2, r3
 800f1a4:	4619      	mov	r1, r3
 800f1a6:	4628      	mov	r0, r5
 800f1a8:	f7ff fb02 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800f1ac:	f1b9 0f00 	cmp.w	r9, #0
 800f1b0:	d07f      	beq.n	800f2b2 <WS28xxMulti::Blackout()+0x196>
 800f1b2:	f109 30ff 	add.w	r0, r9, #4294967295	@ 0xffffffff
 800f1b6:	9600      	str	r6, [sp, #0]
 800f1b8:	f000 0807 	and.w	r8, r0, #7
 800f1bc:	2101      	movs	r1, #1
 800f1be:	4628      	mov	r0, r5
 800f1c0:	2402      	movs	r4, #2
 800f1c2:	f7ff fa6f 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f1c6:	45a1      	cmp	r9, r4
 800f1c8:	d373      	bcc.n	800f2b2 <WS28xxMulti::Blackout()+0x196>
 800f1ca:	f1b8 0f00 	cmp.w	r8, #0
 800f1ce:	d043      	beq.n	800f258 <WS28xxMulti::Blackout()+0x13c>
 800f1d0:	f1b8 0f01 	cmp.w	r8, #1
 800f1d4:	d036      	beq.n	800f244 <WS28xxMulti::Blackout()+0x128>
 800f1d6:	f1b8 0f02 	cmp.w	r8, #2
 800f1da:	d02b      	beq.n	800f234 <WS28xxMulti::Blackout()+0x118>
 800f1dc:	f1b8 0f03 	cmp.w	r8, #3
 800f1e0:	d020      	beq.n	800f224 <WS28xxMulti::Blackout()+0x108>
 800f1e2:	f1b8 0f04 	cmp.w	r8, #4
 800f1e6:	d015      	beq.n	800f214 <WS28xxMulti::Blackout()+0xf8>
 800f1e8:	f1b8 0f05 	cmp.w	r8, #5
 800f1ec:	d00a      	beq.n	800f204 <WS28xxMulti::Blackout()+0xe8>
 800f1ee:	f1b8 0f06 	cmp.w	r8, #6
 800f1f2:	d178      	bne.n	800f2e6 <WS28xxMulti::Blackout()+0x1ca>
 800f1f4:	2300      	movs	r3, #0
 800f1f6:	4621      	mov	r1, r4
 800f1f8:	9600      	str	r6, [sp, #0]
 800f1fa:	461a      	mov	r2, r3
 800f1fc:	4628      	mov	r0, r5
 800f1fe:	f7ff fa51 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f202:	3401      	adds	r4, #1
 800f204:	2300      	movs	r3, #0
 800f206:	4621      	mov	r1, r4
 800f208:	9600      	str	r6, [sp, #0]
 800f20a:	461a      	mov	r2, r3
 800f20c:	4628      	mov	r0, r5
 800f20e:	f7ff fa49 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f212:	3401      	adds	r4, #1
 800f214:	2300      	movs	r3, #0
 800f216:	4621      	mov	r1, r4
 800f218:	9600      	str	r6, [sp, #0]
 800f21a:	461a      	mov	r2, r3
 800f21c:	4628      	mov	r0, r5
 800f21e:	f7ff fa41 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f222:	3401      	adds	r4, #1
 800f224:	2300      	movs	r3, #0
 800f226:	4621      	mov	r1, r4
 800f228:	9600      	str	r6, [sp, #0]
 800f22a:	461a      	mov	r2, r3
 800f22c:	4628      	mov	r0, r5
 800f22e:	f7ff fa39 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f232:	3401      	adds	r4, #1
 800f234:	2300      	movs	r3, #0
 800f236:	4621      	mov	r1, r4
 800f238:	9600      	str	r6, [sp, #0]
 800f23a:	461a      	mov	r2, r3
 800f23c:	4628      	mov	r0, r5
 800f23e:	f7ff fa31 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f242:	3401      	adds	r4, #1
 800f244:	2300      	movs	r3, #0
 800f246:	4621      	mov	r1, r4
 800f248:	9600      	str	r6, [sp, #0]
 800f24a:	461a      	mov	r2, r3
 800f24c:	4628      	mov	r0, r5
 800f24e:	3401      	adds	r4, #1
 800f250:	f7ff fa28 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f254:	45a1      	cmp	r9, r4
 800f256:	d32c      	bcc.n	800f2b2 <WS28xxMulti::Blackout()+0x196>
 800f258:	2300      	movs	r3, #0
 800f25a:	461a      	mov	r2, r3
 800f25c:	4621      	mov	r1, r4
 800f25e:	4628      	mov	r0, r5
 800f260:	9600      	str	r6, [sp, #0]
 800f262:	f7ff fa1f 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f266:	1c61      	adds	r1, r4, #1
 800f268:	4628      	mov	r0, r5
 800f26a:	9600      	str	r6, [sp, #0]
 800f26c:	f7ff fa1a 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f270:	1ca1      	adds	r1, r4, #2
 800f272:	4628      	mov	r0, r5
 800f274:	9600      	str	r6, [sp, #0]
 800f276:	f7ff fa15 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f27a:	1ce1      	adds	r1, r4, #3
 800f27c:	4628      	mov	r0, r5
 800f27e:	9600      	str	r6, [sp, #0]
 800f280:	f7ff fa10 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f284:	1d21      	adds	r1, r4, #4
 800f286:	4628      	mov	r0, r5
 800f288:	9600      	str	r6, [sp, #0]
 800f28a:	f7ff fa0b 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f28e:	1d61      	adds	r1, r4, #5
 800f290:	4628      	mov	r0, r5
 800f292:	9600      	str	r6, [sp, #0]
 800f294:	f7ff fa06 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f298:	1da1      	adds	r1, r4, #6
 800f29a:	4628      	mov	r0, r5
 800f29c:	9600      	str	r6, [sp, #0]
 800f29e:	f7ff fa01 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f2a2:	1de1      	adds	r1, r4, #7
 800f2a4:	9600      	str	r6, [sp, #0]
 800f2a6:	4628      	mov	r0, r5
 800f2a8:	3408      	adds	r4, #8
 800f2aa:	f7ff f9fb 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f2ae:	45a1      	cmp	r9, r4
 800f2b0:	d2d2      	bcs.n	800f258 <WS28xxMulti::Blackout()+0x13c>
 800f2b2:	f1ba 0f02 	cmp.w	sl, #2
 800f2b6:	d012      	beq.n	800f2de <WS28xxMulti::Blackout()+0x1c2>
 800f2b8:	e9cd bb00 	strd	fp, fp, [sp]
 800f2bc:	23ff      	movs	r3, #255	@ 0xff
 800f2be:	4628      	mov	r0, r5
 800f2c0:	9902      	ldr	r1, [sp, #8]
 800f2c2:	461a      	mov	r2, r3
 800f2c4:	3501      	adds	r5, #1
 800f2c6:	f7ff fa73 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800f2ca:	2d08      	cmp	r5, #8
 800f2cc:	f47f af66 	bne.w	800f19c <WS28xxMulti::Blackout()+0x80>
 800f2d0:	e749      	b.n	800f166 <WS28xxMulti::Blackout()+0x4a>
 800f2d2:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800f2d6:	4809      	ldr	r0, [pc, #36]	@ (800f2fc <WS28xxMulti::Blackout()+0x1e0>)
 800f2d8:	f007 fa96 	bl	8016808 <memset>
 800f2dc:	e743      	b.n	800f166 <WS28xxMulti::Blackout()+0x4a>
 800f2de:	e9cd 6600 	strd	r6, r6, [sp]
 800f2e2:	2300      	movs	r3, #0
 800f2e4:	e7eb      	b.n	800f2be <WS28xxMulti::Blackout()+0x1a2>
 800f2e6:	4621      	mov	r1, r4
 800f2e8:	9600      	str	r6, [sp, #0]
 800f2ea:	4628      	mov	r0, r5
 800f2ec:	f7ff f9da 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f2f0:	2403      	movs	r4, #3
 800f2f2:	e77f      	b.n	800f1f4 <WS28xxMulti::Blackout()+0xd8>
 800f2f4:	200098e8 	andcs	r9, r0, r8, ror #17
 800f2f8:	20000078 	andcs	r0, r0, r8, ror r0
 800f2fc:	20020000 	andcs	r0, r2, r0
 800f300:	3fc03fc0 	svccc	0x00c03fc0

0800f304 <WS28xxMulti::FullOn()>:
 800f304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f308:	b085      	sub	sp, #20
 800f30a:	4f76      	ldr	r7, [pc, #472]	@ (800f4e4 <WS28xxMulti::FullOn()+0x1e0>)
 800f30c:	9003      	str	r0, [sp, #12]
 800f30e:	f3bf 8f5f 	dmb	sy
 800f312:	783b      	ldrb	r3, [r7, #0]
 800f314:	f003 01ff 	and.w	r1, r3, #255	@ 0xff
 800f318:	2b00      	cmp	r3, #0
 800f31a:	d1f8      	bne.n	800f30e <WS28xxMulti::FullOn()+0xa>
 800f31c:	4872      	ldr	r0, [pc, #456]	@ (800f4e8 <WS28xxMulti::FullOn()+0x1e4>)
 800f31e:	6804      	ldr	r4, [r0, #0]
 800f320:	7d25      	ldrb	r5, [r4, #20]
 800f322:	b17d      	cbz	r5, 800f344 <WS28xxMulti::FullOn()+0x40>
 800f324:	4871      	ldr	r0, [pc, #452]	@ (800f4ec <WS28xxMulti::FullOn()+0x1e8>)
 800f326:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800f32a:	f007 fa6d 	bl	8016808 <memset>
 800f32e:	9803      	ldr	r0, [sp, #12]
 800f330:	f7ff fe2c 	bl	800ef8c <WS28xxMulti::Update()>
 800f334:	f3bf 8f5f 	dmb	sy
 800f338:	783d      	ldrb	r5, [r7, #0]
 800f33a:	2d00      	cmp	r5, #0
 800f33c:	d1fa      	bne.n	800f334 <WS28xxMulti::FullOn()+0x30>
 800f33e:	b005      	add	sp, #20
 800f340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f344:	68e2      	ldr	r2, [r4, #12]
 800f346:	f1a2 0b0b 	sub.w	fp, r2, #11
 800f34a:	f1bb 0f02 	cmp.w	fp, #2
 800f34e:	f200 80a6 	bhi.w	800f49e <WS28xxMulti::FullOn()+0x19a>
 800f352:	f8d4 9000 	ldr.w	r9, [r4]
 800f356:	f109 0001 	add.w	r0, r9, #1
 800f35a:	9002      	str	r0, [sp, #8]
 800f35c:	46aa      	mov	sl, r5
 800f35e:	26ff      	movs	r6, #255	@ 0xff
 800f360:	2300      	movs	r3, #0
 800f362:	e9cd aa00 	strd	sl, sl, [sp]
 800f366:	461a      	mov	r2, r3
 800f368:	4619      	mov	r1, r3
 800f36a:	4628      	mov	r0, r5
 800f36c:	f7ff fa20 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800f370:	f1b9 0f00 	cmp.w	r9, #0
 800f374:	f000 8083 	beq.w	800f47e <WS28xxMulti::FullOn()+0x17a>
 800f378:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
 800f37c:	23ff      	movs	r3, #255	@ 0xff
 800f37e:	9600      	str	r6, [sp, #0]
 800f380:	f004 0807 	and.w	r8, r4, #7
 800f384:	461a      	mov	r2, r3
 800f386:	2101      	movs	r1, #1
 800f388:	4628      	mov	r0, r5
 800f38a:	2402      	movs	r4, #2
 800f38c:	f7ff f98a 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f390:	45a1      	cmp	r9, r4
 800f392:	d374      	bcc.n	800f47e <WS28xxMulti::FullOn()+0x17a>
 800f394:	f1b8 0f00 	cmp.w	r8, #0
 800f398:	d044      	beq.n	800f424 <WS28xxMulti::FullOn()+0x120>
 800f39a:	f1b8 0f01 	cmp.w	r8, #1
 800f39e:	d037      	beq.n	800f410 <WS28xxMulti::FullOn()+0x10c>
 800f3a0:	f1b8 0f02 	cmp.w	r8, #2
 800f3a4:	d02c      	beq.n	800f400 <WS28xxMulti::FullOn()+0xfc>
 800f3a6:	f1b8 0f03 	cmp.w	r8, #3
 800f3aa:	d021      	beq.n	800f3f0 <WS28xxMulti::FullOn()+0xec>
 800f3ac:	f1b8 0f04 	cmp.w	r8, #4
 800f3b0:	d016      	beq.n	800f3e0 <WS28xxMulti::FullOn()+0xdc>
 800f3b2:	f1b8 0f05 	cmp.w	r8, #5
 800f3b6:	d00b      	beq.n	800f3d0 <WS28xxMulti::FullOn()+0xcc>
 800f3b8:	f1b8 0f06 	cmp.w	r8, #6
 800f3bc:	f040 808b 	bne.w	800f4d6 <WS28xxMulti::FullOn()+0x1d2>
 800f3c0:	23ff      	movs	r3, #255	@ 0xff
 800f3c2:	4621      	mov	r1, r4
 800f3c4:	9600      	str	r6, [sp, #0]
 800f3c6:	461a      	mov	r2, r3
 800f3c8:	4628      	mov	r0, r5
 800f3ca:	f7ff f96b 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f3ce:	3401      	adds	r4, #1
 800f3d0:	23ff      	movs	r3, #255	@ 0xff
 800f3d2:	4621      	mov	r1, r4
 800f3d4:	9600      	str	r6, [sp, #0]
 800f3d6:	461a      	mov	r2, r3
 800f3d8:	4628      	mov	r0, r5
 800f3da:	f7ff f963 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f3de:	3401      	adds	r4, #1
 800f3e0:	23ff      	movs	r3, #255	@ 0xff
 800f3e2:	4621      	mov	r1, r4
 800f3e4:	9600      	str	r6, [sp, #0]
 800f3e6:	461a      	mov	r2, r3
 800f3e8:	4628      	mov	r0, r5
 800f3ea:	f7ff f95b 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f3ee:	3401      	adds	r4, #1
 800f3f0:	23ff      	movs	r3, #255	@ 0xff
 800f3f2:	4621      	mov	r1, r4
 800f3f4:	9600      	str	r6, [sp, #0]
 800f3f6:	461a      	mov	r2, r3
 800f3f8:	4628      	mov	r0, r5
 800f3fa:	f7ff f953 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f3fe:	3401      	adds	r4, #1
 800f400:	23ff      	movs	r3, #255	@ 0xff
 800f402:	4621      	mov	r1, r4
 800f404:	9600      	str	r6, [sp, #0]
 800f406:	461a      	mov	r2, r3
 800f408:	4628      	mov	r0, r5
 800f40a:	f7ff f94b 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f40e:	3401      	adds	r4, #1
 800f410:	23ff      	movs	r3, #255	@ 0xff
 800f412:	4621      	mov	r1, r4
 800f414:	9600      	str	r6, [sp, #0]
 800f416:	461a      	mov	r2, r3
 800f418:	4628      	mov	r0, r5
 800f41a:	3401      	adds	r4, #1
 800f41c:	f7ff f942 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f420:	45a1      	cmp	r9, r4
 800f422:	d32c      	bcc.n	800f47e <WS28xxMulti::FullOn()+0x17a>
 800f424:	23ff      	movs	r3, #255	@ 0xff
 800f426:	461a      	mov	r2, r3
 800f428:	4621      	mov	r1, r4
 800f42a:	4628      	mov	r0, r5
 800f42c:	9600      	str	r6, [sp, #0]
 800f42e:	f7ff f939 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f432:	1c61      	adds	r1, r4, #1
 800f434:	4628      	mov	r0, r5
 800f436:	9600      	str	r6, [sp, #0]
 800f438:	f7ff f934 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f43c:	1ca1      	adds	r1, r4, #2
 800f43e:	4628      	mov	r0, r5
 800f440:	9600      	str	r6, [sp, #0]
 800f442:	f7ff f92f 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f446:	1ce1      	adds	r1, r4, #3
 800f448:	4628      	mov	r0, r5
 800f44a:	9600      	str	r6, [sp, #0]
 800f44c:	f7ff f92a 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f450:	1d21      	adds	r1, r4, #4
 800f452:	4628      	mov	r0, r5
 800f454:	9600      	str	r6, [sp, #0]
 800f456:	f7ff f925 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f45a:	1d61      	adds	r1, r4, #5
 800f45c:	4628      	mov	r0, r5
 800f45e:	9600      	str	r6, [sp, #0]
 800f460:	f7ff f920 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f464:	1da1      	adds	r1, r4, #6
 800f466:	4628      	mov	r0, r5
 800f468:	9600      	str	r6, [sp, #0]
 800f46a:	f7ff f91b 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f46e:	1de1      	adds	r1, r4, #7
 800f470:	9600      	str	r6, [sp, #0]
 800f472:	4628      	mov	r0, r5
 800f474:	3408      	adds	r4, #8
 800f476:	f7ff f915 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f47a:	45a1      	cmp	r9, r4
 800f47c:	d2d2      	bcs.n	800f424 <WS28xxMulti::FullOn()+0x120>
 800f47e:	f1bb 0f02 	cmp.w	fp, #2
 800f482:	d024      	beq.n	800f4ce <WS28xxMulti::FullOn()+0x1ca>
 800f484:	e9cd 6600 	strd	r6, r6, [sp]
 800f488:	23ff      	movs	r3, #255	@ 0xff
 800f48a:	4628      	mov	r0, r5
 800f48c:	9902      	ldr	r1, [sp, #8]
 800f48e:	461a      	mov	r2, r3
 800f490:	3501      	adds	r5, #1
 800f492:	f7ff f98d 	bl	800e7b0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.1]>
 800f496:	2d08      	cmp	r5, #8
 800f498:	f47f af62 	bne.w	800f360 <WS28xxMulti::FullOn()+0x5c>
 800f49c:	e747      	b.n	800f32e <WS28xxMulti::FullOn()+0x2a>
 800f49e:	4913      	ldr	r1, [pc, #76]	@ (800f4ec <WS28xxMulti::FullOn()+0x1e8>)
 800f4a0:	26ff      	movs	r6, #255	@ 0xff
 800f4a2:	f501 3380 	add.w	r3, r1, #65536	@ 0x10000
 800f4a6:	e9c1 6600 	strd	r6, r6, [r1]
 800f4aa:	e9c1 6602 	strd	r6, r6, [r1, #8]
 800f4ae:	e9c1 6604 	strd	r6, r6, [r1, #16]
 800f4b2:	3140      	adds	r1, #64	@ 0x40
 800f4b4:	428b      	cmp	r3, r1
 800f4b6:	e941 660a 	strd	r6, r6, [r1, #-40]	@ 0x28
 800f4ba:	e941 6608 	strd	r6, r6, [r1, #-32]
 800f4be:	e941 6606 	strd	r6, r6, [r1, #-24]
 800f4c2:	e941 6604 	strd	r6, r6, [r1, #-16]
 800f4c6:	e941 6602 	strd	r6, r6, [r1, #-8]
 800f4ca:	d1ec      	bne.n	800f4a6 <WS28xxMulti::FullOn()+0x1a2>
 800f4cc:	e72f      	b.n	800f32e <WS28xxMulti::FullOn()+0x2a>
 800f4ce:	e9cd aa00 	strd	sl, sl, [sp]
 800f4d2:	2300      	movs	r3, #0
 800f4d4:	e7d9      	b.n	800f48a <WS28xxMulti::FullOn()+0x186>
 800f4d6:	4621      	mov	r1, r4
 800f4d8:	9600      	str	r6, [sp, #0]
 800f4da:	4628      	mov	r0, r5
 800f4dc:	f7ff f8e2 	bl	800e6a4 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f4e0:	2403      	movs	r4, #3
 800f4e2:	e76d      	b.n	800f3c0 <WS28xxMulti::FullOn()+0xbc>
 800f4e4:	200098e8 	andcs	r9, r0, r8, ror #17
 800f4e8:	20000078 	andcs	r0, r0, r8, ror r0
 800f4ec:	20020000 	andcs	r0, r2, r0

0800f4f0 <WS28xxMulti::IsUpdating()>:
 800f4f0:	f3bf 8f5f 	dmb	sy
 800f4f4:	4b01      	ldr	r3, [pc, #4]	@ (800f4fc <WS28xxMulti::IsUpdating()+0xc>)
 800f4f6:	7818      	ldrb	r0, [r3, #0]
 800f4f8:	4770      	bx	lr
 800f4fa:	bf00      	nop
 800f4fc:	200098e8 	andcs	r9, r0, r8, ror #17

0800f500 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
 800f500:	b510      	push	{r4, lr}
 800f502:	eb02 0442 	add.w	r4, r2, r2, lsl #1
 800f506:	4a8c      	ldr	r2, [pc, #560]	@ (800f738 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x238>)
 800f508:	f89d 000c 	ldrb.w	r0, [sp, #12]
 800f50c:	f89d c008 	ldrb.w	ip, [sp, #8]
 800f510:	eb02 1e04 	add.w	lr, r2, r4, lsl #4
 800f514:	3106      	adds	r1, #6
 800f516:	b2c9      	uxtb	r1, r1
 800f518:	f10e 7488 	add.w	r4, lr, #17825792	@ 0x1100000
 800f51c:	eb01 0ec4 	add.w	lr, r1, r4, lsl #3
 800f520:	00e2      	lsls	r2, r4, #3
 800f522:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f526:	061c      	lsls	r4, r3, #24
 800f528:	bf4c      	ite	mi
 800f52a:	2400      	movmi	r4, #0
 800f52c:	2401      	movpl	r4, #1
 800f52e:	f8ce 4000 	str.w	r4, [lr]
 800f532:	f102 0e80 	add.w	lr, r2, #128	@ 0x80
 800f536:	448e      	add	lr, r1
 800f538:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800f53c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f540:	bf14      	ite	ne
 800f542:	2400      	movne	r4, #0
 800f544:	2401      	moveq	r4, #1
 800f546:	f8ce 4000 	str.w	r4, [lr]
 800f54a:	f502 7480 	add.w	r4, r2, #256	@ 0x100
 800f54e:	440c      	add	r4, r1
 800f550:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f554:	0604      	lsls	r4, r0, #24
 800f556:	bf4c      	ite	mi
 800f558:	2400      	movmi	r4, #0
 800f55a:	2401      	movpl	r4, #1
 800f55c:	f8ce 4000 	str.w	r4, [lr]
 800f560:	f102 0e10 	add.w	lr, r2, #16
 800f564:	448e      	add	lr, r1
 800f566:	065c      	lsls	r4, r3, #25
 800f568:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f56c:	bf4c      	ite	mi
 800f56e:	2400      	movmi	r4, #0
 800f570:	2401      	movpl	r4, #1
 800f572:	f8ce 4000 	str.w	r4, [lr]
 800f576:	f102 0e90 	add.w	lr, r2, #144	@ 0x90
 800f57a:	448e      	add	lr, r1
 800f57c:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f580:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f584:	bf14      	ite	ne
 800f586:	2400      	movne	r4, #0
 800f588:	2401      	moveq	r4, #1
 800f58a:	f8ce 4000 	str.w	r4, [lr]
 800f58e:	f502 7488 	add.w	r4, r2, #272	@ 0x110
 800f592:	440c      	add	r4, r1
 800f594:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f598:	0644      	lsls	r4, r0, #25
 800f59a:	bf4c      	ite	mi
 800f59c:	2400      	movmi	r4, #0
 800f59e:	2401      	movpl	r4, #1
 800f5a0:	f8ce 4000 	str.w	r4, [lr]
 800f5a4:	f102 0e20 	add.w	lr, r2, #32
 800f5a8:	448e      	add	lr, r1
 800f5aa:	069c      	lsls	r4, r3, #26
 800f5ac:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f5b0:	bf4c      	ite	mi
 800f5b2:	2400      	movmi	r4, #0
 800f5b4:	2401      	movpl	r4, #1
 800f5b6:	f8ce 4000 	str.w	r4, [lr]
 800f5ba:	f102 0ea0 	add.w	lr, r2, #160	@ 0xa0
 800f5be:	448e      	add	lr, r1
 800f5c0:	f01c 0f20 	tst.w	ip, #32
 800f5c4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f5c8:	bf14      	ite	ne
 800f5ca:	2400      	movne	r4, #0
 800f5cc:	2401      	moveq	r4, #1
 800f5ce:	f8ce 4000 	str.w	r4, [lr]
 800f5d2:	f502 7490 	add.w	r4, r2, #288	@ 0x120
 800f5d6:	440c      	add	r4, r1
 800f5d8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f5dc:	0684      	lsls	r4, r0, #26
 800f5de:	bf4c      	ite	mi
 800f5e0:	2400      	movmi	r4, #0
 800f5e2:	2401      	movpl	r4, #1
 800f5e4:	f8ce 4000 	str.w	r4, [lr]
 800f5e8:	f102 0e30 	add.w	lr, r2, #48	@ 0x30
 800f5ec:	448e      	add	lr, r1
 800f5ee:	06dc      	lsls	r4, r3, #27
 800f5f0:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f5f4:	bf4c      	ite	mi
 800f5f6:	2400      	movmi	r4, #0
 800f5f8:	2401      	movpl	r4, #1
 800f5fa:	f8ce 4000 	str.w	r4, [lr]
 800f5fe:	f102 0eb0 	add.w	lr, r2, #176	@ 0xb0
 800f602:	448e      	add	lr, r1
 800f604:	f01c 0f10 	tst.w	ip, #16
 800f608:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f60c:	bf14      	ite	ne
 800f60e:	2400      	movne	r4, #0
 800f610:	2401      	moveq	r4, #1
 800f612:	f8ce 4000 	str.w	r4, [lr]
 800f616:	f502 7498 	add.w	r4, r2, #304	@ 0x130
 800f61a:	440c      	add	r4, r1
 800f61c:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f620:	06c4      	lsls	r4, r0, #27
 800f622:	bf4c      	ite	mi
 800f624:	2400      	movmi	r4, #0
 800f626:	2401      	movpl	r4, #1
 800f628:	f8ce 4000 	str.w	r4, [lr]
 800f62c:	f102 0e40 	add.w	lr, r2, #64	@ 0x40
 800f630:	448e      	add	lr, r1
 800f632:	071c      	lsls	r4, r3, #28
 800f634:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f638:	bf4c      	ite	mi
 800f63a:	2400      	movmi	r4, #0
 800f63c:	2401      	movpl	r4, #1
 800f63e:	f8ce 4000 	str.w	r4, [lr]
 800f642:	f102 0ec0 	add.w	lr, r2, #192	@ 0xc0
 800f646:	448e      	add	lr, r1
 800f648:	f01c 0f08 	tst.w	ip, #8
 800f64c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f650:	bf14      	ite	ne
 800f652:	2400      	movne	r4, #0
 800f654:	2401      	moveq	r4, #1
 800f656:	f8ce 4000 	str.w	r4, [lr]
 800f65a:	f502 74a0 	add.w	r4, r2, #320	@ 0x140
 800f65e:	440c      	add	r4, r1
 800f660:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f664:	0704      	lsls	r4, r0, #28
 800f666:	bf4c      	ite	mi
 800f668:	2400      	movmi	r4, #0
 800f66a:	2401      	movpl	r4, #1
 800f66c:	f8ce 4000 	str.w	r4, [lr]
 800f670:	f102 0e50 	add.w	lr, r2, #80	@ 0x50
 800f674:	448e      	add	lr, r1
 800f676:	075c      	lsls	r4, r3, #29
 800f678:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f67c:	bf4c      	ite	mi
 800f67e:	2400      	movmi	r4, #0
 800f680:	2401      	movpl	r4, #1
 800f682:	f8ce 4000 	str.w	r4, [lr]
 800f686:	f102 0ed0 	add.w	lr, r2, #208	@ 0xd0
 800f68a:	448e      	add	lr, r1
 800f68c:	f01c 0f04 	tst.w	ip, #4
 800f690:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f694:	bf14      	ite	ne
 800f696:	2400      	movne	r4, #0
 800f698:	2401      	moveq	r4, #1
 800f69a:	f8ce 4000 	str.w	r4, [lr]
 800f69e:	f502 74a8 	add.w	r4, r2, #336	@ 0x150
 800f6a2:	440c      	add	r4, r1
 800f6a4:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f6a8:	0744      	lsls	r4, r0, #29
 800f6aa:	bf4c      	ite	mi
 800f6ac:	2400      	movmi	r4, #0
 800f6ae:	2401      	movpl	r4, #1
 800f6b0:	f8ce 4000 	str.w	r4, [lr]
 800f6b4:	f102 0e60 	add.w	lr, r2, #96	@ 0x60
 800f6b8:	448e      	add	lr, r1
 800f6ba:	079c      	lsls	r4, r3, #30
 800f6bc:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f6c0:	bf4c      	ite	mi
 800f6c2:	2400      	movmi	r4, #0
 800f6c4:	2401      	movpl	r4, #1
 800f6c6:	f8ce 4000 	str.w	r4, [lr]
 800f6ca:	f102 0ee0 	add.w	lr, r2, #224	@ 0xe0
 800f6ce:	448e      	add	lr, r1
 800f6d0:	f01c 0f02 	tst.w	ip, #2
 800f6d4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f6d8:	bf14      	ite	ne
 800f6da:	2400      	movne	r4, #0
 800f6dc:	2401      	moveq	r4, #1
 800f6de:	f8ce 4000 	str.w	r4, [lr]
 800f6e2:	f502 74b0 	add.w	r4, r2, #352	@ 0x160
 800f6e6:	440c      	add	r4, r1
 800f6e8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f6ec:	0784      	lsls	r4, r0, #30
 800f6ee:	bf4c      	ite	mi
 800f6f0:	2400      	movmi	r4, #0
 800f6f2:	2401      	movpl	r4, #1
 800f6f4:	f8ce 4000 	str.w	r4, [lr]
 800f6f8:	f102 0e70 	add.w	lr, r2, #112	@ 0x70
 800f6fc:	448e      	add	lr, r1
 800f6fe:	07dc      	lsls	r4, r3, #31
 800f700:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f704:	bf54      	ite	pl
 800f706:	2301      	movpl	r3, #1
 800f708:	2300      	movmi	r3, #0
 800f70a:	f8ce 3000 	str.w	r3, [lr]
 800f70e:	f102 03f0 	add.w	r3, r2, #240	@ 0xf0
 800f712:	f502 72b8 	add.w	r2, r2, #368	@ 0x170
 800f716:	f01c 0f01 	tst.w	ip, #1
 800f71a:	440b      	add	r3, r1
 800f71c:	440a      	add	r2, r1
 800f71e:	bf0c      	ite	eq
 800f720:	2401      	moveq	r4, #1
 800f722:	2400      	movne	r4, #0
 800f724:	009b      	lsls	r3, r3, #2
 800f726:	07c0      	lsls	r0, r0, #31
 800f728:	ea4f 0182 	mov.w	r1, r2, lsl #2
 800f72c:	bf54      	ite	pl
 800f72e:	2001      	movpl	r0, #1
 800f730:	2000      	movmi	r0, #0
 800f732:	601c      	str	r4, [r3, #0]
 800f734:	6008      	str	r0, [r1, #0]
 800f736:	bd10      	pop	{r4, pc}
 800f738:	20028000 	andcs	r8, r2, r0

0800f73c <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)>:
 800f73c:	b510      	push	{r4, lr}
 800f73e:	eb02 0442 	add.w	r4, r2, r2, lsl #1
 800f742:	4a88      	ldr	r2, [pc, #544]	@ (800f964 <WS28xxMulti::SetColourWS2801(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char)+0x228>)
 800f744:	f89d c00c 	ldrb.w	ip, [sp, #12]
 800f748:	eb02 1e04 	add.w	lr, r2, r4, lsl #4
 800f74c:	1d88      	adds	r0, r1, #6
 800f74e:	b2c0      	uxtb	r0, r0
 800f750:	f10e 7488 	add.w	r4, lr, #17825792	@ 0x1100000
 800f754:	eb00 0ec4 	add.w	lr, r0, r4, lsl #3
 800f758:	00e2      	lsls	r2, r4, #3
 800f75a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f75e:	061c      	lsls	r4, r3, #24
 800f760:	bf54      	ite	pl
 800f762:	2400      	movpl	r4, #0
 800f764:	2401      	movmi	r4, #1
 800f766:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800f76a:	f8ce 4000 	str.w	r4, [lr]
 800f76e:	f102 0e80 	add.w	lr, r2, #128	@ 0x80
 800f772:	4486      	add	lr, r0
 800f774:	060c      	lsls	r4, r1, #24
 800f776:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f77a:	bf54      	ite	pl
 800f77c:	2400      	movpl	r4, #0
 800f77e:	2401      	movmi	r4, #1
 800f780:	f8ce 4000 	str.w	r4, [lr]
 800f784:	f502 7e80 	add.w	lr, r2, #256	@ 0x100
 800f788:	4486      	add	lr, r0
 800f78a:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800f78e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f792:	bf0c      	ite	eq
 800f794:	2400      	moveq	r4, #0
 800f796:	2401      	movne	r4, #1
 800f798:	f8ce 4000 	str.w	r4, [lr]
 800f79c:	f102 0410 	add.w	r4, r2, #16
 800f7a0:	4404      	add	r4, r0
 800f7a2:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800f7a6:	f013 0440 	ands.w	r4, r3, #64	@ 0x40
 800f7aa:	bf18      	it	ne
 800f7ac:	2401      	movne	r4, #1
 800f7ae:	f8ce 4000 	str.w	r4, [lr]
 800f7b2:	f102 0e90 	add.w	lr, r2, #144	@ 0x90
 800f7b6:	4486      	add	lr, r0
 800f7b8:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
 800f7bc:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f7c0:	bf18      	it	ne
 800f7c2:	2401      	movne	r4, #1
 800f7c4:	f8ce 4000 	str.w	r4, [lr]
 800f7c8:	f502 7e88 	add.w	lr, r2, #272	@ 0x110
 800f7cc:	4486      	add	lr, r0
 800f7ce:	f01c 0440 	ands.w	r4, ip, #64	@ 0x40
 800f7d2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f7d6:	bf18      	it	ne
 800f7d8:	2401      	movne	r4, #1
 800f7da:	f8ce 4000 	str.w	r4, [lr]
 800f7de:	f102 0e20 	add.w	lr, r2, #32
 800f7e2:	4486      	add	lr, r0
 800f7e4:	f013 0420 	ands.w	r4, r3, #32
 800f7e8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f7ec:	bf18      	it	ne
 800f7ee:	2401      	movne	r4, #1
 800f7f0:	f8ce 4000 	str.w	r4, [lr]
 800f7f4:	f102 0ea0 	add.w	lr, r2, #160	@ 0xa0
 800f7f8:	4486      	add	lr, r0
 800f7fa:	f011 0420 	ands.w	r4, r1, #32
 800f7fe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f802:	bf18      	it	ne
 800f804:	2401      	movne	r4, #1
 800f806:	f8ce 4000 	str.w	r4, [lr]
 800f80a:	f502 7e90 	add.w	lr, r2, #288	@ 0x120
 800f80e:	4486      	add	lr, r0
 800f810:	f01c 0420 	ands.w	r4, ip, #32
 800f814:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f818:	bf18      	it	ne
 800f81a:	2401      	movne	r4, #1
 800f81c:	f8ce 4000 	str.w	r4, [lr]
 800f820:	f102 0e30 	add.w	lr, r2, #48	@ 0x30
 800f824:	4486      	add	lr, r0
 800f826:	f013 0410 	ands.w	r4, r3, #16
 800f82a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f82e:	bf18      	it	ne
 800f830:	2401      	movne	r4, #1
 800f832:	f8ce 4000 	str.w	r4, [lr]
 800f836:	f102 0eb0 	add.w	lr, r2, #176	@ 0xb0
 800f83a:	4486      	add	lr, r0
 800f83c:	f011 0410 	ands.w	r4, r1, #16
 800f840:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f844:	bf18      	it	ne
 800f846:	2401      	movne	r4, #1
 800f848:	f8ce 4000 	str.w	r4, [lr]
 800f84c:	f502 7e98 	add.w	lr, r2, #304	@ 0x130
 800f850:	4486      	add	lr, r0
 800f852:	f01c 0410 	ands.w	r4, ip, #16
 800f856:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f85a:	bf18      	it	ne
 800f85c:	2401      	movne	r4, #1
 800f85e:	f8ce 4000 	str.w	r4, [lr]
 800f862:	f102 0e40 	add.w	lr, r2, #64	@ 0x40
 800f866:	4486      	add	lr, r0
 800f868:	f013 0408 	ands.w	r4, r3, #8
 800f86c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f870:	bf18      	it	ne
 800f872:	2401      	movne	r4, #1
 800f874:	f8ce 4000 	str.w	r4, [lr]
 800f878:	f102 0ec0 	add.w	lr, r2, #192	@ 0xc0
 800f87c:	4486      	add	lr, r0
 800f87e:	f011 0408 	ands.w	r4, r1, #8
 800f882:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f886:	bf18      	it	ne
 800f888:	2401      	movne	r4, #1
 800f88a:	f8ce 4000 	str.w	r4, [lr]
 800f88e:	f502 7ea0 	add.w	lr, r2, #320	@ 0x140
 800f892:	4486      	add	lr, r0
 800f894:	f01c 0408 	ands.w	r4, ip, #8
 800f898:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f89c:	bf18      	it	ne
 800f89e:	2401      	movne	r4, #1
 800f8a0:	f8ce 4000 	str.w	r4, [lr]
 800f8a4:	f102 0e50 	add.w	lr, r2, #80	@ 0x50
 800f8a8:	4486      	add	lr, r0
 800f8aa:	f013 0404 	ands.w	r4, r3, #4
 800f8ae:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f8b2:	bf18      	it	ne
 800f8b4:	2401      	movne	r4, #1
 800f8b6:	f8ce 4000 	str.w	r4, [lr]
 800f8ba:	f102 0ed0 	add.w	lr, r2, #208	@ 0xd0
 800f8be:	4486      	add	lr, r0
 800f8c0:	f011 0404 	ands.w	r4, r1, #4
 800f8c4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f8c8:	bf18      	it	ne
 800f8ca:	2401      	movne	r4, #1
 800f8cc:	f8ce 4000 	str.w	r4, [lr]
 800f8d0:	f502 7ea8 	add.w	lr, r2, #336	@ 0x150
 800f8d4:	4486      	add	lr, r0
 800f8d6:	f01c 0404 	ands.w	r4, ip, #4
 800f8da:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f8de:	bf18      	it	ne
 800f8e0:	2401      	movne	r4, #1
 800f8e2:	f8ce 4000 	str.w	r4, [lr]
 800f8e6:	f102 0e60 	add.w	lr, r2, #96	@ 0x60
 800f8ea:	4486      	add	lr, r0
 800f8ec:	f013 0402 	ands.w	r4, r3, #2
 800f8f0:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f8f4:	bf18      	it	ne
 800f8f6:	2401      	movne	r4, #1
 800f8f8:	f8ce 4000 	str.w	r4, [lr]
 800f8fc:	f102 0ee0 	add.w	lr, r2, #224	@ 0xe0
 800f900:	4486      	add	lr, r0
 800f902:	f011 0402 	ands.w	r4, r1, #2
 800f906:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f90a:	bf18      	it	ne
 800f90c:	2401      	movne	r4, #1
 800f90e:	f8ce 4000 	str.w	r4, [lr]
 800f912:	f502 7eb0 	add.w	lr, r2, #352	@ 0x160
 800f916:	4486      	add	lr, r0
 800f918:	f01c 0402 	ands.w	r4, ip, #2
 800f91c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f920:	bf18      	it	ne
 800f922:	2401      	movne	r4, #1
 800f924:	f8ce 4000 	str.w	r4, [lr]
 800f928:	f102 0e70 	add.w	lr, r2, #112	@ 0x70
 800f92c:	4486      	add	lr, r0
 800f92e:	f013 0301 	ands.w	r3, r3, #1
 800f932:	f102 04f0 	add.w	r4, r2, #240	@ 0xf0
 800f936:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800f93a:	f502 72b8 	add.w	r2, r2, #368	@ 0x170
 800f93e:	bf18      	it	ne
 800f940:	2301      	movne	r3, #1
 800f942:	4404      	add	r4, r0
 800f944:	f011 0101 	ands.w	r1, r1, #1
 800f948:	4402      	add	r2, r0
 800f94a:	f8ce 3000 	str.w	r3, [lr]
 800f94e:	bf18      	it	ne
 800f950:	2101      	movne	r1, #1
 800f952:	00a3      	lsls	r3, r4, #2
 800f954:	0090      	lsls	r0, r2, #2
 800f956:	f01c 0401 	ands.w	r4, ip, #1
 800f95a:	bf18      	it	ne
 800f95c:	2401      	movne	r4, #1
 800f95e:	6019      	str	r1, [r3, #0]
 800f960:	6004      	str	r4, [r0, #0]
 800f962:	bd10      	pop	{r4, pc}
 800f964:	20020000 	andcs	r0, r2, r0

0800f968 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800f968:	483c      	ldr	r0, [pc, #240]	@ (800fa5c <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xf4>)
 800f96a:	eb00 1282 	add.w	r2, r0, r2, lsl #6
 800f96e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f970:	3106      	adds	r1, #6
 800f972:	f102 7488 	add.w	r4, r2, #17825792	@ 0x1100000
 800f976:	b2c9      	uxtb	r1, r1
 800f978:	3430      	adds	r4, #48	@ 0x30
 800f97a:	eb01 07c4 	add.w	r7, r1, r4, lsl #3
 800f97e:	3780      	adds	r7, #128	@ 0x80
 800f980:	eb01 05c4 	add.w	r5, r1, r4, lsl #3
 800f984:	00bf      	lsls	r7, r7, #2
 800f986:	eba7 0085 	sub.w	r0, r7, r5, lsl #2
 800f98a:	0640      	lsls	r0, r0, #25
 800f98c:	ea4f 0285 	mov.w	r2, r5, lsl #2
 800f990:	f89d c014 	ldrb.w	ip, [sp, #20]
 800f994:	f89d e018 	ldrb.w	lr, [sp, #24]
 800f998:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800f99c:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800f9a0:	f04f 0601 	mov.w	r6, #1
 800f9a4:	d535      	bpl.n	800fa12 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xaa>
 800f9a6:	f5a2 61c0 	sub.w	r1, r2, #1536	@ 0x600
 800f9aa:	f013 0480 	ands.w	r4, r3, #128	@ 0x80
 800f9ae:	bf0c      	ite	eq
 800f9b0:	600c      	streq	r4, [r1, #0]
 800f9b2:	600e      	strne	r6, [r1, #0]
 800f9b4:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 800f9b8:	f01c 0080 	ands.w	r0, ip, #128	@ 0x80
 800f9bc:	f5a2 7400 	sub.w	r4, r2, #512	@ 0x200
 800f9c0:	bf0c      	ite	eq
 800f9c2:	6008      	streq	r0, [r1, #0]
 800f9c4:	600e      	strne	r6, [r1, #0]
 800f9c6:	f01e 0180 	ands.w	r1, lr, #128	@ 0x80
 800f9ca:	bf0c      	ite	eq
 800f9cc:	6021      	streq	r1, [r4, #0]
 800f9ce:	6026      	strne	r6, [r4, #0]
 800f9d0:	f015 0080 	ands.w	r0, r5, #128	@ 0x80
 800f9d4:	bf0c      	ite	eq
 800f9d6:	6010      	streq	r0, [r2, #0]
 800f9d8:	6016      	strne	r6, [r2, #0]
 800f9da:	2140      	movs	r1, #64	@ 0x40
 800f9dc:	3240      	adds	r2, #64	@ 0x40
 800f9de:	e016      	b.n	800fa0e <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa6>
 800f9e0:	6016      	str	r6, [r2, #0]
 800f9e2:	f5a4 6280 	sub.w	r2, r4, #1024	@ 0x400
 800f9e6:	ea1c 0100 	ands.w	r1, ip, r0
 800f9ea:	bf0c      	ite	eq
 800f9ec:	6011      	streq	r1, [r2, #0]
 800f9ee:	6016      	strne	r6, [r2, #0]
 800f9f0:	f5a4 7200 	sub.w	r2, r4, #512	@ 0x200
 800f9f4:	ea1e 0100 	ands.w	r1, lr, r0
 800f9f8:	bf0c      	ite	eq
 800f9fa:	6011      	streq	r1, [r2, #0]
 800f9fc:	6016      	strne	r6, [r2, #0]
 800f9fe:	ea15 0200 	ands.w	r2, r5, r0
 800fa02:	bf0c      	ite	eq
 800fa04:	6022      	streq	r2, [r4, #0]
 800fa06:	6026      	strne	r6, [r4, #0]
 800fa08:	f104 0240 	add.w	r2, r4, #64	@ 0x40
 800fa0c:	0841      	lsrs	r1, r0, #1
 800fa0e:	42ba      	cmp	r2, r7
 800fa10:	d023      	beq.n	800fa5a <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xf2>
 800fa12:	f5a2 60c0 	sub.w	r0, r2, #1536	@ 0x600
 800fa16:	ea13 0401 	ands.w	r4, r3, r1
 800fa1a:	bf14      	ite	ne
 800fa1c:	6006      	strne	r6, [r0, #0]
 800fa1e:	6004      	streq	r4, [r0, #0]
 800fa20:	f5a2 6080 	sub.w	r0, r2, #1024	@ 0x400
 800fa24:	ea1c 0401 	ands.w	r4, ip, r1
 800fa28:	bf14      	ite	ne
 800fa2a:	6006      	strne	r6, [r0, #0]
 800fa2c:	6004      	streq	r4, [r0, #0]
 800fa2e:	f5a2 7000 	sub.w	r0, r2, #512	@ 0x200
 800fa32:	ea1e 0401 	ands.w	r4, lr, r1
 800fa36:	bf0c      	ite	eq
 800fa38:	6004      	streq	r4, [r0, #0]
 800fa3a:	6006      	strne	r6, [r0, #0]
 800fa3c:	ea15 0001 	ands.w	r0, r5, r1
 800fa40:	bf0c      	ite	eq
 800fa42:	6010      	streq	r0, [r2, #0]
 800fa44:	6016      	strne	r6, [r2, #0]
 800fa46:	0848      	lsrs	r0, r1, #1
 800fa48:	ea13 0151 	ands.w	r1, r3, r1, lsr #1
 800fa4c:	f102 0440 	add.w	r4, r2, #64	@ 0x40
 800fa50:	f5a2 62b8 	sub.w	r2, r2, #1472	@ 0x5c0
 800fa54:	d1c4      	bne.n	800f9e0 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x78>
 800fa56:	6011      	str	r1, [r2, #0]
 800fa58:	e7c3      	b.n	800f9e2 <WS28xxMulti::SetPixel4Bytes(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x7a>
 800fa5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa5c:	20020000 	andcs	r0, r2, r0

0800fa60 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800fa60:	483d      	ldr	r0, [pc, #244]	@ (800fb58 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xf8>)
 800fa62:	eb00 1282 	add.w	r2, r0, r2, lsl #6
 800fa66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa6a:	3106      	adds	r1, #6
 800fa6c:	f102 7488 	add.w	r4, r2, #17825792	@ 0x1100000
 800fa70:	b2c9      	uxtb	r1, r1
 800fa72:	3430      	adds	r4, #48	@ 0x30
 800fa74:	eb01 07c4 	add.w	r7, r1, r4, lsl #3
 800fa78:	3780      	adds	r7, #128	@ 0x80
 800fa7a:	eb01 05c4 	add.w	r5, r1, r4, lsl #3
 800fa7e:	00bf      	lsls	r7, r7, #2
 800fa80:	eba7 0085 	sub.w	r0, r7, r5, lsl #2
 800fa84:	0644      	lsls	r4, r0, #25
 800fa86:	ea4f 0285 	mov.w	r2, r5, lsl #2
 800fa8a:	f89d c018 	ldrb.w	ip, [sp, #24]
 800fa8e:	f89d e01c 	ldrb.w	lr, [sp, #28]
 800fa92:	f89d 8020 	ldrb.w	r8, [sp, #32]
 800fa96:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800fa9a:	f04f 0500 	mov.w	r5, #0
 800fa9e:	f04f 0601 	mov.w	r6, #1
 800faa2:	d533      	bpl.n	800fb0c <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xac>
 800faa4:	f5a2 61c0 	sub.w	r1, r2, #1536	@ 0x600
 800faa8:	f01c 0f80 	tst.w	ip, #128	@ 0x80
 800faac:	f5a2 6480 	sub.w	r4, r2, #1024	@ 0x400
 800fab0:	bf14      	ite	ne
 800fab2:	600d      	strne	r5, [r1, #0]
 800fab4:	600e      	streq	r6, [r1, #0]
 800fab6:	0618      	lsls	r0, r3, #24
 800fab8:	f5a2 7000 	sub.w	r0, r2, #512	@ 0x200
 800fabc:	bf4c      	ite	mi
 800fabe:	6025      	strmi	r5, [r4, #0]
 800fac0:	6026      	strpl	r6, [r4, #0]
 800fac2:	f01e 0f80 	tst.w	lr, #128	@ 0x80
 800fac6:	bf14      	ite	ne
 800fac8:	6005      	strne	r5, [r0, #0]
 800faca:	6006      	streq	r6, [r0, #0]
 800facc:	f018 0f80 	tst.w	r8, #128	@ 0x80
 800fad0:	bf14      	ite	ne
 800fad2:	6015      	strne	r5, [r2, #0]
 800fad4:	6016      	streq	r6, [r2, #0]
 800fad6:	2140      	movs	r1, #64	@ 0x40
 800fad8:	3240      	adds	r2, #64	@ 0x40
 800fada:	e015      	b.n	800fb08 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xa8>
 800fadc:	6016      	str	r6, [r2, #0]
 800fade:	f5a4 6180 	sub.w	r1, r4, #1024	@ 0x400
 800fae2:	4203      	tst	r3, r0
 800fae4:	f5a4 7200 	sub.w	r2, r4, #512	@ 0x200
 800fae8:	bf14      	ite	ne
 800faea:	600d      	strne	r5, [r1, #0]
 800faec:	600e      	streq	r6, [r1, #0]
 800faee:	ea1e 0f00 	tst.w	lr, r0
 800faf2:	bf14      	ite	ne
 800faf4:	6015      	strne	r5, [r2, #0]
 800faf6:	6016      	streq	r6, [r2, #0]
 800faf8:	ea18 0f00 	tst.w	r8, r0
 800fafc:	bf14      	ite	ne
 800fafe:	6025      	strne	r5, [r4, #0]
 800fb00:	6026      	streq	r6, [r4, #0]
 800fb02:	f104 0240 	add.w	r2, r4, #64	@ 0x40
 800fb06:	0841      	lsrs	r1, r0, #1
 800fb08:	42ba      	cmp	r2, r7
 800fb0a:	d022      	beq.n	800fb52 <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0xf2>
 800fb0c:	f5a2 64c0 	sub.w	r4, r2, #1536	@ 0x600
 800fb10:	ea1c 0f01 	tst.w	ip, r1
 800fb14:	f5a2 6080 	sub.w	r0, r2, #1024	@ 0x400
 800fb18:	bf0c      	ite	eq
 800fb1a:	6026      	streq	r6, [r4, #0]
 800fb1c:	6025      	strne	r5, [r4, #0]
 800fb1e:	420b      	tst	r3, r1
 800fb20:	f5a2 7400 	sub.w	r4, r2, #512	@ 0x200
 800fb24:	bf0c      	ite	eq
 800fb26:	6006      	streq	r6, [r0, #0]
 800fb28:	6005      	strne	r5, [r0, #0]
 800fb2a:	ea1e 0f01 	tst.w	lr, r1
 800fb2e:	bf0c      	ite	eq
 800fb30:	6026      	streq	r6, [r4, #0]
 800fb32:	6025      	strne	r5, [r4, #0]
 800fb34:	ea18 0f01 	tst.w	r8, r1
 800fb38:	bf0c      	ite	eq
 800fb3a:	6016      	streq	r6, [r2, #0]
 800fb3c:	6015      	strne	r5, [r2, #0]
 800fb3e:	0848      	lsrs	r0, r1, #1
 800fb40:	ea1c 0151 	ands.w	r1, ip, r1, lsr #1
 800fb44:	f102 0440 	add.w	r4, r2, #64	@ 0x40
 800fb48:	f5a2 62b8 	sub.w	r2, r2, #1472	@ 0x5c0
 800fb4c:	d0c6      	beq.n	800fadc <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x7c>
 800fb4e:	6015      	str	r5, [r2, #0]
 800fb50:	e7c5      	b.n	800fade <WS28xxMulti::SetColourRTZ(unsigned long, unsigned long, unsigned char, unsigned char, unsigned char, unsigned char)+0x7e>
 800fb52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb56:	bf00      	nop
 800fb58:	20020000 	andcs	r0, r2, r0

0800fb5c <memcpy.isra.0>:
 800fb5c:	440a      	add	r2, r1
 800fb5e:	4291      	cmp	r1, r2
 800fb60:	d100      	bne.n	800fb64 <memcpy.isra.0+0x8>
 800fb62:	4770      	bx	lr
 800fb64:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fb68:	f800 3b01 	strb.w	r3, [r0], #1
 800fb6c:	e7f7      	b.n	800fb5e <memcpy.isra.0+0x2>

0800fb6e <strlen>:
 800fb6e:	4603      	mov	r3, r0
 800fb70:	461a      	mov	r2, r3
 800fb72:	3301      	adds	r3, #1
 800fb74:	7811      	ldrb	r1, [r2, #0]
 800fb76:	2900      	cmp	r1, #0
 800fb78:	d1fa      	bne.n	800fb70 <strlen+0x2>
 800fb7a:	1a10      	subs	r0, r2, r0
 800fb7c:	4770      	bx	lr
	...

0800fb80 <mdns::Domain::AddDotLocal()>:
 800fb80:	b510      	push	{r4, lr}
 800fb82:	4604      	mov	r4, r0
 800fb84:	f8b0 0100 	ldrh.w	r0, [r0, #256]	@ 0x100
 800fb88:	4905      	ldr	r1, [pc, #20]	@ (800fba0 <mdns::Domain::AddDotLocal()+0x20>)
 800fb8a:	2207      	movs	r2, #7
 800fb8c:	4420      	add	r0, r4
 800fb8e:	f7ff ffe5 	bl	800fb5c <memcpy.isra.0>
 800fb92:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800fb96:	3307      	adds	r3, #7
 800fb98:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800fb9c:	bd10      	pop	{r4, pc}
 800fb9e:	bf00      	nop
 800fba0:	0801a302 	stmdaeq	r1, {r1, r8, r9, sp, pc}

0800fba4 <create_host_domain(mdns::Domain&)>:
 800fba4:	2300      	movs	r3, #0
 800fba6:	b570      	push	{r4, r5, r6, lr}
 800fba8:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800fbac:	4b0c      	ldr	r3, [pc, #48]	@ (800fbe0 <create_host_domain(mdns::Domain&)+0x3c>)
 800fbae:	681e      	ldr	r6, [r3, #0]
 800fbb0:	3616      	adds	r6, #22
 800fbb2:	4604      	mov	r4, r0
 800fbb4:	4630      	mov	r0, r6
 800fbb6:	f7ff ffda 	bl	800fb6e <strlen>
 800fbba:	2301      	movs	r3, #1
 800fbbc:	7020      	strb	r0, [r4, #0]
 800fbbe:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800fbc2:	4602      	mov	r2, r0
 800fbc4:	4605      	mov	r5, r0
 800fbc6:	4631      	mov	r1, r6
 800fbc8:	18e0      	adds	r0, r4, r3
 800fbca:	f7ff ffc7 	bl	800fb5c <memcpy.isra.0>
 800fbce:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800fbd2:	441d      	add	r5, r3
 800fbd4:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800fbd8:	4620      	mov	r0, r4
 800fbda:	f7ff ffd1 	bl	800fb80 <mdns::Domain::AddDotLocal()>
 800fbde:	bd70      	pop	{r4, r5, r6, pc}
 800fbe0:	20009b30 	andcs	r9, r0, r0, lsr fp

0800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
 800fbe4:	2300      	movs	r3, #0
 800fbe6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbea:	4604      	mov	r4, r0
 800fbec:	460e      	mov	r6, r1
 800fbee:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 800fbf2:	b1aa      	cbz	r2, 800fc20 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x3c>
 800fbf4:	680f      	ldr	r7, [r1, #0]
 800fbf6:	f100 0801 	add.w	r8, r0, #1
 800fbfa:	b3b7      	cbz	r7, 800fc6a <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x86>
 800fbfc:	4638      	mov	r0, r7
 800fbfe:	f7ff ffb6 	bl	800fb6e <strlen>
 800fc02:	2301      	movs	r3, #1
 800fc04:	4605      	mov	r5, r0
 800fc06:	7020      	strb	r0, [r4, #0]
 800fc08:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800fc0c:	4602      	mov	r2, r0
 800fc0e:	4639      	mov	r1, r7
 800fc10:	4640      	mov	r0, r8
 800fc12:	f7ff ffa3 	bl	800fb5c <memcpy.isra.0>
 800fc16:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800fc1a:	441d      	add	r5, r3
 800fc1c:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 800fc20:	4b15      	ldr	r3, [pc, #84]	@ (800fc78 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x94>)
 800fc22:	68f6      	ldr	r6, [r6, #12]
 800fc24:	f8b4 0100 	ldrh.w	r0, [r4, #256]	@ 0x100
 800fc28:	0131      	lsls	r1, r6, #4
 800fc2a:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 800fc2e:	5859      	ldr	r1, [r3, r1]
 800fc30:	88b5      	ldrh	r5, [r6, #4]
 800fc32:	4420      	add	r0, r4
 800fc34:	462a      	mov	r2, r5
 800fc36:	f7ff ff91 	bl	800fb5c <memcpy.isra.0>
 800fc3a:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800fc3e:	18e8      	adds	r0, r5, r3
 800fc40:	68b3      	ldr	r3, [r6, #8]
 800fc42:	b280      	uxth	r0, r0
 800fc44:	f8a4 0100 	strh.w	r0, [r4, #256]	@ 0x100
 800fc48:	2205      	movs	r2, #5
 800fc4a:	4420      	add	r0, r4
 800fc4c:	b98b      	cbnz	r3, 800fc72 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x8e>
 800fc4e:	490b      	ldr	r1, [pc, #44]	@ (800fc7c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x98>)
 800fc50:	f7ff ff84 	bl	800fb5c <memcpy.isra.0>
 800fc54:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 800fc58:	3305      	adds	r3, #5
 800fc5a:	b29b      	uxth	r3, r3
 800fc5c:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 800fc60:	4620      	mov	r0, r4
 800fc62:	f7ff ff8d 	bl	800fb80 <mdns::Domain::AddDotLocal()>
 800fc66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc6a:	4b05      	ldr	r3, [pc, #20]	@ (800fc80 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x9c>)
 800fc6c:	681f      	ldr	r7, [r3, #0]
 800fc6e:	3716      	adds	r7, #22
 800fc70:	e7c4      	b.n	800fbfc <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x18>
 800fc72:	4904      	ldr	r1, [pc, #16]	@ (800fc84 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xa0>)
 800fc74:	e7ec      	b.n	800fc50 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x6c>
 800fc76:	bf00      	nop
 800fc78:	0801a228 	stmdaeq	r1, {r3, r5, r9, sp, pc}
 800fc7c:	0801a2fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sp, pc}
 800fc80:	20009b30 	andcs	r9, r0, r0, lsr fp
 800fc84:	0801a2f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sp, pc}

0800fc88 <mdns::Domain::Print(bool)>:
 800fc88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc8c:	4605      	mov	r5, r0
 800fc8e:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 800fccc <mdns::Domain::Print(bool)+0x44>
 800fc92:	2020      	movs	r0, #32
 800fc94:	460e      	mov	r6, r1
 800fc96:	f007 f8eb 	bl	8016e70 <putchar>
 800fc9a:	462a      	mov	r2, r5
 800fc9c:	7817      	ldrb	r7, [r2, #0]
 800fc9e:	b92f      	cbnz	r7, 800fcac <mdns::Domain::Print(bool)+0x24>
 800fca0:	b18e      	cbz	r6, 800fcc6 <mdns::Domain::Print(bool)+0x3e>
 800fca2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fca6:	200a      	movs	r0, #10
 800fca8:	f007 b8e2 	b.w	8016e70 <putchar>
 800fcac:	f8b5 3100 	ldrh.w	r3, [r5, #256]	@ 0x100
 800fcb0:	442b      	add	r3, r5
 800fcb2:	429a      	cmp	r2, r3
 800fcb4:	d2f4      	bcs.n	800fca0 <mdns::Domain::Print(bool)+0x18>
 800fcb6:	1c54      	adds	r4, r2, #1
 800fcb8:	4622      	mov	r2, r4
 800fcba:	4639      	mov	r1, r7
 800fcbc:	4640      	mov	r0, r8
 800fcbe:	f007 f887 	bl	8016dd0 <printf>
 800fcc2:	19e2      	adds	r2, r4, r7
 800fcc4:	e7ea      	b.n	800fc9c <mdns::Domain::Print(bool)+0x14>
 800fcc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fcca:	bf00      	nop
 800fccc:	08017bea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}

0800fcd0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
 800fcd0:	f8b0 2100 	ldrh.w	r2, [r0, #256]	@ 0x100
 800fcd4:	f8b1 3100 	ldrh.w	r3, [r1, #256]	@ 0x100
 800fcd8:	4293      	cmp	r3, r2
 800fcda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fcde:	d127      	bne.n	800fd30 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800fce0:	18c2      	adds	r2, r0, r3
 800fce2:	7803      	ldrb	r3, [r0, #0]
 800fce4:	b11b      	cbz	r3, 800fcee <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800fce6:	780c      	ldrb	r4, [r1, #0]
 800fce8:	b10c      	cbz	r4, 800fcee <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 800fcea:	4290      	cmp	r0, r2
 800fcec:	d301      	bcc.n	800fcf2 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x22>
 800fcee:	2001      	movs	r0, #1
 800fcf0:	e01f      	b.n	800fd32 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x62>
 800fcf2:	42a3      	cmp	r3, r4
 800fcf4:	d11c      	bne.n	800fd30 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800fcf6:	4684      	mov	ip, r0
 800fcf8:	460f      	mov	r7, r1
 800fcfa:	461e      	mov	r6, r3
 800fcfc:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 800fd00:	f1a4 0541 	sub.w	r5, r4, #65	@ 0x41
 800fd04:	2d19      	cmp	r5, #25
 800fd06:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800fd0a:	f1a5 0841 	sub.w	r8, r5, #65	@ 0x41
 800fd0e:	46a6      	mov	lr, r4
 800fd10:	bf98      	it	ls
 800fd12:	f104 0e20 	addls.w	lr, r4, #32
 800fd16:	f1b8 0f19 	cmp.w	r8, #25
 800fd1a:	bf98      	it	ls
 800fd1c:	3520      	addls	r5, #32
 800fd1e:	4575      	cmp	r5, lr
 800fd20:	d106      	bne.n	800fd30 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 800fd22:	b10c      	cbz	r4, 800fd28 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x58>
 800fd24:	3e01      	subs	r6, #1
 800fd26:	d1e9      	bne.n	800fcfc <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x2c>
 800fd28:	3301      	adds	r3, #1
 800fd2a:	4418      	add	r0, r3
 800fd2c:	4419      	add	r1, r3
 800fd2e:	e7d8      	b.n	800fce2 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x12>
 800fd30:	2000      	movs	r0, #0
 800fd32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fd36 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
 800fd36:	f892 c000 	ldrb.w	ip, [r2]
 800fd3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd3e:	ea6f 050c 	mvn.w	r5, ip
 800fd42:	4606      	mov	r6, r0
 800fd44:	440d      	add	r5, r1
 800fd46:	42b5      	cmp	r5, r6
 800fd48:	4628      	mov	r0, r5
 800fd4a:	d201      	bcs.n	800fd50 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x1a>
 800fd4c:	2000      	movs	r0, #0
 800fd4e:	e040      	b.n	800fdd2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x9c>
 800fd50:	7803      	ldrb	r3, [r0, #0]
 800fd52:	4563      	cmp	r3, ip
 800fd54:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 800fd58:	d1f5      	bne.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd5a:	78ac      	ldrb	r4, [r5, #2]
 800fd5c:	7853      	ldrb	r3, [r2, #1]
 800fd5e:	429c      	cmp	r4, r3
 800fd60:	d1f1      	bne.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd62:	4604      	mov	r4, r0
 800fd64:	4617      	mov	r7, r2
 800fd66:	e018      	b.n	800fd9a <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800fd68:	4573      	cmp	r3, lr
 800fd6a:	db27      	blt.n	800fdbc <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x86>
 800fd6c:	e7eb      	b.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd6e:	2b3f      	cmp	r3, #63	@ 0x3f
 800fd70:	d913      	bls.n	800fd9a <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 800fd72:	2bbf      	cmp	r3, #191	@ 0xbf
 800fd74:	d9e7      	bls.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd76:	f104 0e01 	add.w	lr, r4, #1
 800fd7a:	4571      	cmp	r1, lr
 800fd7c:	d9e3      	bls.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd7e:	f894 e001 	ldrb.w	lr, [r4, #1]
 800fd82:	021b      	lsls	r3, r3, #8
 800fd84:	f403 537c 	and.w	r3, r3, #16128	@ 0x3f00
 800fd88:	4473      	add	r3, lr
 800fd8a:	eb06 0e03 	add.w	lr, r6, r3
 800fd8e:	4574      	cmp	r4, lr
 800fd90:	d3d9      	bcc.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd92:	5cf3      	ldrb	r3, [r6, r3]
 800fd94:	2b3f      	cmp	r3, #63	@ 0x3f
 800fd96:	d8d6      	bhi.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fd98:	4674      	mov	r4, lr
 800fd9a:	783b      	ldrb	r3, [r7, #0]
 800fd9c:	eb04 0e03 	add.w	lr, r4, r3
 800fda0:	4571      	cmp	r1, lr
 800fda2:	d9d0      	bls.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fda4:	f04f 0e00 	mov.w	lr, #0
 800fda8:	f814 900e 	ldrb.w	r9, [r4, lr]
 800fdac:	f817 800e 	ldrb.w	r8, [r7, lr]
 800fdb0:	45c1      	cmp	r9, r8
 800fdb2:	d1d9      	bne.n	800fd68 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x32>
 800fdb4:	f10e 0e01 	add.w	lr, lr, #1
 800fdb8:	4573      	cmp	r3, lr
 800fdba:	daf5      	bge.n	800fda8 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x72>
 800fdbc:	3301      	adds	r3, #1
 800fdbe:	441f      	add	r7, r3
 800fdc0:	441c      	add	r4, r3
 800fdc2:	f897 e000 	ldrb.w	lr, [r7]
 800fdc6:	7823      	ldrb	r3, [r4, #0]
 800fdc8:	f1be 0f00 	cmp.w	lr, #0
 800fdcc:	d1cf      	bne.n	800fd6e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x38>
 800fdce:	2b00      	cmp	r3, #0
 800fdd0:	d1b9      	bne.n	800fd46 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 800fdd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
 800fdd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdda:	460a      	mov	r2, r1
 800fddc:	4606      	mov	r6, r0
 800fdde:	4605      	mov	r5, r0
 800fde0:	7814      	ldrb	r4, [r2, #0]
 800fde2:	b91c      	cbnz	r4, 800fdec <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x14>
 800fde4:	4628      	mov	r0, r5
 800fde6:	f800 4b01 	strb.w	r4, [r0], #1
 800fdea:	e00e      	b.n	800fe0a <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x32>
 800fdec:	4810      	ldr	r0, [pc, #64]	@ (800fe30 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800fdee:	4631      	mov	r1, r6
 800fdf0:	f7ff ffa1 	bl	800fd36 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
 800fdf4:	b150      	cbz	r0, 800fe0c <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x34>
 800fdf6:	4b0e      	ldr	r3, [pc, #56]	@ (800fe30 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 800fdf8:	1ac3      	subs	r3, r0, r3
 800fdfa:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800fdfe:	4628      	mov	r0, r5
 800fe00:	f062 023f 	orn	r2, r2, #63	@ 0x3f
 800fe04:	f800 2b02 	strb.w	r2, [r0], #2
 800fe08:	706b      	strb	r3, [r5, #1]
 800fe0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe0c:	462b      	mov	r3, r5
 800fe0e:	3201      	adds	r2, #1
 800fe10:	f803 4b01 	strb.w	r4, [r3], #1
 800fe14:	4617      	mov	r7, r2
 800fe16:	4618      	mov	r0, r3
 800fe18:	f817 1b01 	ldrb.w	r1, [r7], #1
 800fe1c:	f800 1b01 	strb.w	r1, [r0], #1
 800fe20:	1b41      	subs	r1, r0, r5
 800fe22:	3901      	subs	r1, #1
 800fe24:	42a1      	cmp	r1, r4
 800fe26:	d3f7      	bcc.n	800fe18 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x40>
 800fe28:	4422      	add	r2, r4
 800fe2a:	191d      	adds	r5, r3, r4
 800fe2c:	e7d8      	b.n	800fde0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x8>
 800fe2e:	bf00      	nop
 800fe30:	20009905 	andcs	r9, r0, r5, lsl #18

0800fe34 <add_answer_a(unsigned char*, unsigned long)>:
 800fe34:	b530      	push	{r4, r5, lr}
 800fe36:	b0c3      	sub	sp, #268	@ 0x10c
 800fe38:	4605      	mov	r5, r0
 800fe3a:	a801      	add	r0, sp, #4
 800fe3c:	460c      	mov	r4, r1
 800fe3e:	f7ff feb1 	bl	800fba4 <create_host_domain(mdns::Domain&)>
 800fe42:	a901      	add	r1, sp, #4
 800fe44:	4628      	mov	r0, r5
 800fe46:	f7ff ffc7 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fe4a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800fe4e:	8003      	strh	r3, [r0, #0]
 800fe50:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800fe54:	8043      	strh	r3, [r0, #2]
 800fe56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800fe5a:	8103      	strh	r3, [r0, #8]
 800fe5c:	4b04      	ldr	r3, [pc, #16]	@ (800fe70 <add_answer_a(unsigned char*, unsigned long)+0x3c>)
 800fe5e:	ba24      	rev	r4, r4
 800fe60:	681b      	ldr	r3, [r3, #0]
 800fe62:	6044      	str	r4, [r0, #4]
 800fe64:	f8c0 300a 	str.w	r3, [r0, #10]
 800fe68:	300e      	adds	r0, #14
 800fe6a:	1b40      	subs	r0, r0, r5
 800fe6c:	b043      	add	sp, #268	@ 0x10c
 800fe6e:	bd30      	pop	{r4, r5, pc}
 800fe70:	20009b50 	andcs	r9, r0, r0, asr fp

0800fe74 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
 800fe74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe76:	4e11      	ldr	r6, [pc, #68]	@ (800febc <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x48>)
 800fe78:	b0c3      	sub	sp, #268	@ 0x10c
 800fe7a:	4607      	mov	r7, r0
 800fe7c:	460d      	mov	r5, r1
 800fe7e:	4630      	mov	r0, r6
 800fe80:	490f      	ldr	r1, [pc, #60]	@ (800fec0 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x4c>)
 800fe82:	f7ff ffa9 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fe86:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800fe8a:	8003      	strh	r3, [r0, #0]
 800fe8c:	ba2d      	rev	r5, r5
 800fe8e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800fe92:	8043      	strh	r3, [r0, #2]
 800fe94:	4604      	mov	r4, r0
 800fe96:	6045      	str	r5, [r0, #4]
 800fe98:	2200      	movs	r2, #0
 800fe9a:	f100 050a 	add.w	r5, r0, #10
 800fe9e:	4639      	mov	r1, r7
 800fea0:	a801      	add	r0, sp, #4
 800fea2:	f7ff fe9f 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fea6:	a901      	add	r1, sp, #4
 800fea8:	4628      	mov	r0, r5
 800feaa:	f7ff ff95 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800feae:	1b45      	subs	r5, r0, r5
 800feb0:	ba6d      	rev16	r5, r5
 800feb2:	1b80      	subs	r0, r0, r6
 800feb4:	8125      	strh	r5, [r4, #8]
 800feb6:	b043      	add	sp, #268	@ 0x10c
 800feb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800feba:	bf00      	nop
 800febc:	20009911 	andcs	r9, r0, r1, lsl r9
 800fec0:	0801a124 	stmdaeq	r1, {r2, r5, r8, sp, pc}

0800fec4 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800fec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fec6:	b0c3      	sub	sp, #268	@ 0x10c
 800fec8:	460e      	mov	r6, r1
 800feca:	4607      	mov	r7, r0
 800fecc:	4601      	mov	r1, r0
 800fece:	4615      	mov	r5, r2
 800fed0:	a801      	add	r0, sp, #4
 800fed2:	2201      	movs	r2, #1
 800fed4:	f7ff fe86 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800fed8:	a901      	add	r1, sp, #4
 800feda:	4630      	mov	r0, r6
 800fedc:	f7ff ff7c 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800fee0:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 800fee4:	8003      	strh	r3, [r0, #0]
 800fee6:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 800feea:	8043      	strh	r3, [r0, #2]
 800feec:	2300      	movs	r3, #0
 800feee:	f8c0 300a 	str.w	r3, [r0, #10]
 800fef2:	ba2d      	rev	r5, r5
 800fef4:	897b      	ldrh	r3, [r7, #10]
 800fef6:	81c3      	strh	r3, [r0, #14]
 800fef8:	4604      	mov	r4, r0
 800fefa:	6045      	str	r5, [r0, #4]
 800fefc:	f100 0510 	add.w	r5, r0, #16
 800ff00:	a801      	add	r0, sp, #4
 800ff02:	f7ff fe4f 	bl	800fba4 <create_host_domain(mdns::Domain&)>
 800ff06:	a901      	add	r1, sp, #4
 800ff08:	4628      	mov	r0, r5
 800ff0a:	f7ff ff65 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800ff0e:	1d83      	adds	r3, r0, #6
 800ff10:	1b5b      	subs	r3, r3, r5
 800ff12:	ba5b      	rev16	r3, r3
 800ff14:	1b80      	subs	r0, r0, r6
 800ff16:	8123      	strh	r3, [r4, #8]
 800ff18:	b043      	add	sp, #268	@ 0x10c
 800ff1a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ff1c <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800ff1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff1e:	b0c3      	sub	sp, #268	@ 0x10c
 800ff20:	460e      	mov	r6, r1
 800ff22:	4607      	mov	r7, r0
 800ff24:	4601      	mov	r1, r0
 800ff26:	4615      	mov	r5, r2
 800ff28:	a801      	add	r0, sp, #4
 800ff2a:	2200      	movs	r2, #0
 800ff2c:	f7ff fe5a 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800ff30:	a901      	add	r1, sp, #4
 800ff32:	4630      	mov	r0, r6
 800ff34:	f7ff ff50 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800ff38:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800ff3c:	8003      	strh	r3, [r0, #0]
 800ff3e:	ba2d      	rev	r5, r5
 800ff40:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800ff44:	8043      	strh	r3, [r0, #2]
 800ff46:	4604      	mov	r4, r0
 800ff48:	6045      	str	r5, [r0, #4]
 800ff4a:	2201      	movs	r2, #1
 800ff4c:	f100 050a 	add.w	r5, r0, #10
 800ff50:	4639      	mov	r1, r7
 800ff52:	a801      	add	r0, sp, #4
 800ff54:	f7ff fe46 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800ff58:	a901      	add	r1, sp, #4
 800ff5a:	4628      	mov	r0, r5
 800ff5c:	f7ff ff3c 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800ff60:	1b45      	subs	r5, r0, r5
 800ff62:	ba6d      	rev16	r5, r5
 800ff64:	1b80      	subs	r0, r0, r6
 800ff66:	8125      	strh	r5, [r4, #8]
 800ff68:	b043      	add	sp, #268	@ 0x10c
 800ff6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ff6c <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 800ff6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff6e:	b0c3      	sub	sp, #268	@ 0x10c
 800ff70:	4604      	mov	r4, r0
 800ff72:	460e      	mov	r6, r1
 800ff74:	4615      	mov	r5, r2
 800ff76:	4601      	mov	r1, r0
 800ff78:	2201      	movs	r2, #1
 800ff7a:	a801      	add	r0, sp, #4
 800ff7c:	f7ff fe32 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 800ff80:	a901      	add	r1, sp, #4
 800ff82:	4630      	mov	r0, r6
 800ff84:	f7ff ff28 	bl	800fdd8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 800ff88:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800ff8c:	8002      	strh	r2, [r0, #0]
 800ff8e:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 800ff92:	8042      	strh	r2, [r0, #2]
 800ff94:	6862      	ldr	r2, [r4, #4]
 800ff96:	ba2d      	rev	r5, r5
 800ff98:	6045      	str	r5, [r0, #4]
 800ff9a:	f100 050b 	add.w	r5, r0, #11
 800ff9e:	b932      	cbnz	r2, 800ffae <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x42>
 800ffa0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800ffa4:	8101      	strh	r1, [r0, #8]
 800ffa6:	7282      	strb	r2, [r0, #10]
 800ffa8:	1ba8      	subs	r0, r5, r6
 800ffaa:	b043      	add	sp, #268	@ 0x10c
 800ffac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffae:	8927      	ldrh	r7, [r4, #8]
 800ffb0:	7287      	strb	r7, [r0, #10]
 800ffb2:	1c7a      	adds	r2, r7, #1
 800ffb4:	ba52      	rev16	r2, r2
 800ffb6:	8102      	strh	r2, [r0, #8]
 800ffb8:	8922      	ldrh	r2, [r4, #8]
 800ffba:	6861      	ldr	r1, [r4, #4]
 800ffbc:	4628      	mov	r0, r5
 800ffbe:	f7ff fdcd 	bl	800fb5c <memcpy.isra.0>
 800ffc2:	443d      	add	r5, r7
 800ffc4:	e7f0      	b.n	800ffa8 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x3c>

0800ffc6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
 800ffc6:	4281      	cmp	r1, r0
 800ffc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffcc:	4606      	mov	r6, r0
 800ffce:	d310      	bcc.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800ffd0:	4291      	cmp	r1, r2
 800ffd2:	d20e      	bcs.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800ffd4:	2500      	movs	r5, #0
 800ffd6:	f503 7c80 	add.w	ip, r3, #256	@ 0x100
 800ffda:	701d      	strb	r5, [r3, #0]
 800ffdc:	4608      	mov	r0, r1
 800ffde:	4607      	mov	r7, r0
 800ffe0:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ffe4:	b38c      	cbz	r4, 801004a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
 800ffe6:	f004 01c0 	and.w	r1, r4, #192	@ 0xc0
 800ffea:	2980      	cmp	r1, #128	@ 0x80
 800ffec:	d001      	beq.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 800ffee:	d803      	bhi.n	800fff8 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x32>
 800fff0:	b199      	cbz	r1, 801001a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x54>
 800fff2:	2000      	movs	r0, #0
 800fff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fff8:	29c0      	cmp	r1, #192	@ 0xc0
 800fffa:	d1f0      	bne.n	800ffde <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x18>
 800fffc:	7800      	ldrb	r0, [r0, #0]
 800fffe:	0224      	lsls	r4, r4, #8
 8010000:	f404 547c 	and.w	r4, r4, #16128	@ 0x3f00
 8010004:	4320      	orrs	r0, r4
 8010006:	b905      	cbnz	r5, 801000a <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x44>
 8010008:	1cbd      	adds	r5, r7, #2
 801000a:	1831      	adds	r1, r6, r0
 801000c:	d2f1      	bcs.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 801000e:	428a      	cmp	r2, r1
 8010010:	d9ef      	bls.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010012:	5c30      	ldrb	r0, [r6, r0]
 8010014:	283f      	cmp	r0, #63	@ 0x3f
 8010016:	d9e1      	bls.n	800ffdc <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 8010018:	e7eb      	b.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 801001a:	1901      	adds	r1, r0, r4
 801001c:	4291      	cmp	r1, r2
 801001e:	d2e8      	bcs.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010020:	1c67      	adds	r7, r4, #1
 8010022:	441f      	add	r7, r3
 8010024:	4567      	cmp	r7, ip
 8010026:	d2e4      	bcs.n	800fff2 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8010028:	469e      	mov	lr, r3
 801002a:	f80e 4b01 	strb.w	r4, [lr], #1
 801002e:	f810 8b01 	ldrb.w	r8, [r0], #1
 8010032:	f80e 8b01 	strb.w	r8, [lr], #1
 8010036:	ebae 0803 	sub.w	r8, lr, r3
 801003a:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 801003e:	4544      	cmp	r4, r8
 8010040:	dcf5      	bgt.n	801002e <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x68>
 8010042:	2300      	movs	r3, #0
 8010044:	703b      	strb	r3, [r7, #0]
 8010046:	463b      	mov	r3, r7
 8010048:	e7c8      	b.n	800ffdc <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 801004a:	2d00      	cmp	r5, #0
 801004c:	bf18      	it	ne
 801004e:	4628      	movne	r0, r5
 8010050:	e7d0      	b.n	800fff4 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2e>
	...

08010054 <MDNS::SendTo(unsigned long)>:
 8010054:	4b0d      	ldr	r3, [pc, #52]	@ (801008c <MDNS::SendTo(unsigned long)+0x38>)
 8010056:	b513      	push	{r0, r1, r4, lr}
 8010058:	6818      	ldr	r0, [r3, #0]
 801005a:	4b0d      	ldr	r3, [pc, #52]	@ (8010090 <MDNS::SendTo(unsigned long)+0x3c>)
 801005c:	460a      	mov	r2, r1
 801005e:	6819      	ldr	r1, [r3, #0]
 8010060:	4b0c      	ldr	r3, [pc, #48]	@ (8010094 <MDNS::SendTo(unsigned long)+0x40>)
 8010062:	781b      	ldrb	r3, [r3, #0]
 8010064:	b94b      	cbnz	r3, 801007a <MDNS::SendTo(unsigned long)+0x26>
 8010066:	b131      	cbz	r1, 8010076 <MDNS::SendTo(unsigned long)+0x22>
 8010068:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 801006c:	9300      	str	r3, [sp, #0]
 801006e:	4b0a      	ldr	r3, [pc, #40]	@ (8010098 <MDNS::SendTo(unsigned long)+0x44>)
 8010070:	490a      	ldr	r1, [pc, #40]	@ (801009c <MDNS::SendTo(unsigned long)+0x48>)
 8010072:	f001 fdc5 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010076:	b002      	add	sp, #8
 8010078:	bd10      	pop	{r4, pc}
 801007a:	4b09      	ldr	r3, [pc, #36]	@ (80100a0 <MDNS::SendTo(unsigned long)+0x4c>)
 801007c:	4c09      	ldr	r4, [pc, #36]	@ (80100a4 <MDNS::SendTo(unsigned long)+0x50>)
 801007e:	681b      	ldr	r3, [r3, #0]
 8010080:	8824      	ldrh	r4, [r4, #0]
 8010082:	2900      	cmp	r1, #0
 8010084:	d0f7      	beq.n	8010076 <MDNS::SendTo(unsigned long)+0x22>
 8010086:	9400      	str	r4, [sp, #0]
 8010088:	e7f2      	b.n	8010070 <MDNS::SendTo(unsigned long)+0x1c>
 801008a:	bf00      	nop
 801008c:	20009900 	andcs	r9, r0, r0, lsl #18
 8010090:	20009b50 	andcs	r9, r0, r0, asr fp
 8010094:	20009904 	andcs	r9, r0, r4, lsl #18
 8010098:	fb0000e0 	blx	8010422 <MDNS::HandleQuestions(unsigned long)+0x8a>
 801009c:	20009905 	andcs	r9, r0, r5, lsl #18
 80100a0:	200098fc 	strdcs	r9, [r0], -ip
 80100a4:	200098f8 	strdcs	r9, [r0], -r8

080100a8 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>:
 80100a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100aa:	4b11      	ldr	r3, [pc, #68]	@ (80100f0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x48>)
 80100ac:	4c11      	ldr	r4, [pc, #68]	@ (80100f4 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x4c>)
 80100ae:	681d      	ldr	r5, [r3, #0]
 80100b0:	f015 0501 	ands.w	r5, r5, #1
 80100b4:	460f      	mov	r7, r1
 80100b6:	4606      	mov	r6, r0
 80100b8:	4611      	mov	r1, r2
 80100ba:	d003      	beq.n	80100c4 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x1c>
 80100bc:	4620      	mov	r0, r4
 80100be:	f7ff feb9 	bl	800fe34 <add_answer_a(unsigned char*, unsigned long)>
 80100c2:	4404      	add	r4, r0
 80100c4:	4b0c      	ldr	r3, [pc, #48]	@ (80100f8 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x50>)
 80100c6:	2284      	movs	r2, #132	@ 0x84
 80100c8:	709a      	strb	r2, [r3, #2]
 80100ca:	2200      	movs	r2, #0
 80100cc:	ba6d      	rev16	r5, r5
 80100ce:	1ae4      	subs	r4, r4, r3
 80100d0:	70da      	strb	r2, [r3, #3]
 80100d2:	801f      	strh	r7, [r3, #0]
 80100d4:	711a      	strb	r2, [r3, #4]
 80100d6:	715a      	strb	r2, [r3, #5]
 80100d8:	80dd      	strh	r5, [r3, #6]
 80100da:	721a      	strb	r2, [r3, #8]
 80100dc:	725a      	strb	r2, [r3, #9]
 80100de:	729a      	strb	r2, [r3, #10]
 80100e0:	72da      	strb	r2, [r3, #11]
 80100e2:	b2a1      	uxth	r1, r4
 80100e4:	4630      	mov	r0, r6
 80100e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80100ea:	f7ff bfb3 	b.w	8010054 <MDNS::SendTo(unsigned long)>
 80100ee:	bf00      	nop
 80100f0:	20009b0c 	andcs	r9, r0, ip, lsl #22
 80100f4:	20009911 	andcs	r9, r0, r1, lsl r9
 80100f8:	20009905 	andcs	r9, r0, r5, lsl #18

080100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
 80100fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010100:	461e      	mov	r6, r3
 8010102:	4b25      	ldr	r3, [pc, #148]	@ (8010198 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x9c>)
 8010104:	4c25      	ldr	r4, [pc, #148]	@ (801019c <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa0>)
 8010106:	f8d3 9000 	ldr.w	r9, [r3]
 801010a:	f019 0510 	ands.w	r5, r9, #16
 801010e:	4607      	mov	r7, r0
 8010110:	4688      	mov	r8, r1
 8010112:	4692      	mov	sl, r2
 8010114:	d005      	beq.n	8010122 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x26>
 8010116:	4631      	mov	r1, r6
 8010118:	4640      	mov	r0, r8
 801011a:	f7ff feab 	bl	800fe74 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
 801011e:	2501      	movs	r5, #1
 8010120:	4404      	add	r4, r0
 8010122:	f019 0f20 	tst.w	r9, #32
 8010126:	d006      	beq.n	8010136 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x3a>
 8010128:	4621      	mov	r1, r4
 801012a:	4632      	mov	r2, r6
 801012c:	4640      	mov	r0, r8
 801012e:	f7ff fef5 	bl	800ff1c <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8010132:	3501      	adds	r5, #1
 8010134:	4404      	add	r4, r0
 8010136:	f019 0f40 	tst.w	r9, #64	@ 0x40
 801013a:	d006      	beq.n	801014a <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x4e>
 801013c:	4621      	mov	r1, r4
 801013e:	4632      	mov	r2, r6
 8010140:	4640      	mov	r0, r8
 8010142:	f7ff febf 	bl	800fec4 <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8010146:	3501      	adds	r5, #1
 8010148:	4404      	add	r4, r0
 801014a:	f019 0f80 	tst.w	r9, #128	@ 0x80
 801014e:	d006      	beq.n	801015e <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x62>
 8010150:	4621      	mov	r1, r4
 8010152:	4632      	mov	r2, r6
 8010154:	4640      	mov	r0, r8
 8010156:	f7ff ff09 	bl	800ff6c <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 801015a:	3501      	adds	r5, #1
 801015c:	4404      	add	r4, r0
 801015e:	4631      	mov	r1, r6
 8010160:	4620      	mov	r0, r4
 8010162:	f7ff fe67 	bl	800fe34 <add_answer_a(unsigned char*, unsigned long)>
 8010166:	4b0e      	ldr	r3, [pc, #56]	@ (80101a0 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa4>)
 8010168:	2284      	movs	r2, #132	@ 0x84
 801016a:	2101      	movs	r1, #1
 801016c:	709a      	strb	r2, [r3, #2]
 801016e:	7259      	strb	r1, [r3, #9]
 8010170:	2200      	movs	r2, #0
 8010172:	1821      	adds	r1, r4, r0
 8010174:	ba6d      	rev16	r5, r5
 8010176:	70da      	strb	r2, [r3, #3]
 8010178:	1ac9      	subs	r1, r1, r3
 801017a:	f8a3 a000 	strh.w	sl, [r3]
 801017e:	80dd      	strh	r5, [r3, #6]
 8010180:	4638      	mov	r0, r7
 8010182:	b289      	uxth	r1, r1
 8010184:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010188:	711a      	strb	r2, [r3, #4]
 801018a:	715a      	strb	r2, [r3, #5]
 801018c:	721a      	strb	r2, [r3, #8]
 801018e:	729a      	strb	r2, [r3, #10]
 8010190:	72da      	strb	r2, [r3, #11]
 8010192:	f7ff bf5f 	b.w	8010054 <MDNS::SendTo(unsigned long)>
 8010196:	bf00      	nop
 8010198:	20009b08 	andcs	r9, r0, r8, lsl #22
 801019c:	20009911 	andcs	r9, r0, r1, lsl r9
 80101a0:	20009905 	andcs	r9, r0, r5, lsl #18

080101a4 <MDNS::SendAnnouncement(unsigned long)>:
 80101a4:	4b14      	ldr	r3, [pc, #80]	@ (80101f8 <MDNS::SendAnnouncement(unsigned long)+0x54>)
 80101a6:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 80101aa:	b570      	push	{r4, r5, r6, lr}
 80101ac:	801a      	strh	r2, [r3, #0]
 80101ae:	4b13      	ldr	r3, [pc, #76]	@ (80101fc <MDNS::SendAnnouncement(unsigned long)+0x58>)
 80101b0:	4e13      	ldr	r6, [pc, #76]	@ (8010200 <MDNS::SendAnnouncement(unsigned long)+0x5c>)
 80101b2:	2201      	movs	r2, #1
 80101b4:	601a      	str	r2, [r3, #0]
 80101b6:	460c      	mov	r4, r1
 80101b8:	460a      	mov	r2, r1
 80101ba:	2100      	movs	r1, #0
 80101bc:	4605      	mov	r5, r0
 80101be:	f7ff ff73 	bl	80100a8 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 80101c2:	68f3      	ldr	r3, [r6, #12]
 80101c4:	2b08      	cmp	r3, #8
 80101c6:	dc08      	bgt.n	80101da <MDNS::SendAnnouncement(unsigned long)+0x36>
 80101c8:	4b0e      	ldr	r3, [pc, #56]	@ (8010204 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 80101ca:	22f0      	movs	r2, #240	@ 0xf0
 80101cc:	601a      	str	r2, [r3, #0]
 80101ce:	4631      	mov	r1, r6
 80101d0:	4623      	mov	r3, r4
 80101d2:	2200      	movs	r2, #0
 80101d4:	4628      	mov	r0, r5
 80101d6:	f7ff ff91 	bl	80100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80101da:	69f3      	ldr	r3, [r6, #28]
 80101dc:	2b08      	cmp	r3, #8
 80101de:	dc0a      	bgt.n	80101f6 <MDNS::SendAnnouncement(unsigned long)+0x52>
 80101e0:	4b08      	ldr	r3, [pc, #32]	@ (8010204 <MDNS::SendAnnouncement(unsigned long)+0x60>)
 80101e2:	4909      	ldr	r1, [pc, #36]	@ (8010208 <MDNS::SendAnnouncement(unsigned long)+0x64>)
 80101e4:	22f0      	movs	r2, #240	@ 0xf0
 80101e6:	601a      	str	r2, [r3, #0]
 80101e8:	4628      	mov	r0, r5
 80101ea:	4623      	mov	r3, r4
 80101ec:	2200      	movs	r2, #0
 80101ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80101f2:	f7ff bf83 	b.w	80100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80101f6:	bd70      	pop	{r4, r5, r6, pc}
 80101f8:	200098f8 	strdcs	r9, [r0], -r8
 80101fc:	20009b0c 	andcs	r9, r0, ip, lsl #22
 8010200:	20009b10 	andcs	r9, r0, r0, lsl fp
 8010204:	20009b08 	andcs	r9, r0, r8, lsl #22
 8010208:	20009b20 	andcs	r9, r0, r0, lsr #22

0801020c <network::mdns_announcement()>:
 801020c:	4b02      	ldr	r3, [pc, #8]	@ (8010218 <network::mdns_announcement()+0xc>)
 801020e:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8010212:	6818      	ldr	r0, [r3, #0]
 8010214:	f7ff bfc6 	b.w	80101a4 <MDNS::SendAnnouncement(unsigned long)>
 8010218:	200098ec 	andcs	r9, r0, ip, ror #17

0801021c <network::mdns_shutdown()>:
 801021c:	4b02      	ldr	r3, [pc, #8]	@ (8010228 <network::mdns_shutdown()+0xc>)
 801021e:	2100      	movs	r1, #0
 8010220:	6818      	ldr	r0, [r3, #0]
 8010222:	f7ff bfbf 	b.w	80101a4 <MDNS::SendAnnouncement(unsigned long)>
 8010226:	bf00      	nop
 8010228:	200098ec 	andcs	r9, r0, ip, ror #17

0801022c <MDNS::MDNS()>:
 801022c:	b538      	push	{r3, r4, r5, lr}
 801022e:	4b16      	ldr	r3, [pc, #88]	@ (8010288 <MDNS::MDNS()+0x5c>)
 8010230:	4d16      	ldr	r5, [pc, #88]	@ (801028c <MDNS::MDNS()+0x60>)
 8010232:	6018      	str	r0, [r3, #0]
 8010234:	4b16      	ldr	r3, [pc, #88]	@ (8010290 <MDNS::MDNS()+0x64>)
 8010236:	2209      	movs	r2, #9
 8010238:	4604      	mov	r4, r0
 801023a:	f241 40e9 	movw	r0, #5353	@ 0x14e9
 801023e:	60da      	str	r2, [r3, #12]
 8010240:	61da      	str	r2, [r3, #28]
 8010242:	f001 fc85 	bl	8011b50 <net::udp_begin(unsigned short)>
 8010246:	4b13      	ldr	r3, [pc, #76]	@ (8010294 <MDNS::MDNS()+0x68>)
 8010248:	6018      	str	r0, [r3, #0]
 801024a:	4813      	ldr	r0, [pc, #76]	@ (8010298 <MDNS::MDNS()+0x6c>)
 801024c:	f001 f868 	bl	8011320 <net::igmp_join(unsigned long)>
 8010250:	4b12      	ldr	r3, [pc, #72]	@ (801029c <MDNS::MDNS()+0x70>)
 8010252:	6819      	ldr	r1, [r3, #0]
 8010254:	233f      	movs	r3, #63	@ 0x3f
 8010256:	f101 0256 	add.w	r2, r1, #86	@ 0x56
 801025a:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 801025e:	b118      	cbz	r0, 8010268 <MDNS::MDNS()+0x3c>
 8010260:	3b01      	subs	r3, #1
 8010262:	f802 0b01 	strb.w	r0, [r2], #1
 8010266:	d1f8      	bne.n	801025a <MDNS::MDNS()+0x2e>
 8010268:	4413      	add	r3, r2
 801026a:	2000      	movs	r0, #0
 801026c:	429a      	cmp	r2, r3
 801026e:	d108      	bne.n	8010282 <MDNS::MDNS()+0x56>
 8010270:	f881 0095 	strb.w	r0, [r1, #149]	@ 0x95
 8010274:	4620      	mov	r0, r4
 8010276:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 801027a:	f7ff ff93 	bl	80101a4 <MDNS::SendAnnouncement(unsigned long)>
 801027e:	4620      	mov	r0, r4
 8010280:	bd38      	pop	{r3, r4, r5, pc}
 8010282:	f802 0b01 	strb.w	r0, [r2], #1
 8010286:	e7f1      	b.n	801026c <MDNS::MDNS()+0x40>
 8010288:	200098ec 	andcs	r9, r0, ip, ror #17
 801028c:	0801a302 	stmdaeq	r1, {r1, r8, r9, sp, pc}
 8010290:	20009b10 	andcs	r9, r0, r0, lsl fp
 8010294:	20009900 	andcs	r9, r0, r0, lsl #18
 8010298:	fb0000e0 	blx	8010622 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x3a>
 801029c:	20009b30 	andcs	r9, r0, r0, lsr fp

080102a0 <MDNS::ServiceRecordDelete(mdns::Services)>:
 80102a0:	b510      	push	{r4, lr}
 80102a2:	4c0c      	ldr	r4, [pc, #48]	@ (80102d4 <MDNS::ServiceRecordDelete(mdns::Services)+0x34>)
 80102a4:	68e3      	ldr	r3, [r4, #12]
 80102a6:	4299      	cmp	r1, r3
 80102a8:	d003      	beq.n	80102b2 <MDNS::ServiceRecordDelete(mdns::Services)+0x12>
 80102aa:	69e3      	ldr	r3, [r4, #28]
 80102ac:	4299      	cmp	r1, r3
 80102ae:	d10f      	bne.n	80102d0 <MDNS::ServiceRecordDelete(mdns::Services)+0x30>
 80102b0:	3410      	adds	r4, #16
 80102b2:	2300      	movs	r3, #0
 80102b4:	461a      	mov	r2, r3
 80102b6:	4621      	mov	r1, r4
 80102b8:	f7ff ff20 	bl	80100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80102bc:	6820      	ldr	r0, [r4, #0]
 80102be:	b108      	cbz	r0, 80102c4 <MDNS::ServiceRecordDelete(mdns::Services)+0x24>
 80102c0:	f006 ff90 	bl	80171e4 <operator delete[](void*)>
 80102c4:	6860      	ldr	r0, [r4, #4]
 80102c6:	b108      	cbz	r0, 80102cc <MDNS::ServiceRecordDelete(mdns::Services)+0x2c>
 80102c8:	f006 ff8c 	bl	80171e4 <operator delete[](void*)>
 80102cc:	2001      	movs	r0, #1
 80102ce:	bd10      	pop	{r4, pc}
 80102d0:	2000      	movs	r0, #0
 80102d2:	e7fc      	b.n	80102ce <MDNS::ServiceRecordDelete(mdns::Services)+0x2e>
 80102d4:	20009b10 	andcs	r9, r0, r0, lsl fp

080102d8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>:
 80102d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80102dc:	4d2a      	ldr	r5, [pc, #168]	@ (8010388 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb0>)
 80102de:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 80102e2:	461f      	mov	r7, r3
 80102e4:	68eb      	ldr	r3, [r5, #12]
 80102e6:	2b09      	cmp	r3, #9
 80102e8:	4680      	mov	r8, r0
 80102ea:	4689      	mov	r9, r1
 80102ec:	4692      	mov	sl, r2
 80102ee:	d003      	beq.n	80102f8 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x20>
 80102f0:	69eb      	ldr	r3, [r5, #28]
 80102f2:	2b09      	cmp	r3, #9
 80102f4:	d145      	bne.n	8010382 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xaa>
 80102f6:	3510      	adds	r5, #16
 80102f8:	f1b9 0f00 	cmp.w	r9, #0
 80102fc:	d012      	beq.n	8010324 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x4c>
 80102fe:	4648      	mov	r0, r9
 8010300:	f7ff fc35 	bl	800fb6e <strlen>
 8010304:	283f      	cmp	r0, #63	@ 0x3f
 8010306:	4604      	mov	r4, r0
 8010308:	d839      	bhi.n	801037e <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa6>
 801030a:	2800      	cmp	r0, #0
 801030c:	d035      	beq.n	801037a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 801030e:	1c60      	adds	r0, r4, #1
 8010310:	f006 ff6e 	bl	80171f0 <operator new[](unsigned int)>
 8010314:	4622      	mov	r2, r4
 8010316:	6028      	str	r0, [r5, #0]
 8010318:	4649      	mov	r1, r9
 801031a:	f7ff fc1f 	bl	800fb5c <memcpy.isra.0>
 801031e:	682b      	ldr	r3, [r5, #0]
 8010320:	2200      	movs	r2, #0
 8010322:	551a      	strb	r2, [r3, r4]
 8010324:	f8c5 a00c 	str.w	sl, [r5, #12]
 8010328:	b91e      	cbnz	r6, 8010332 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x5a>
 801032a:	4b18      	ldr	r3, [pc, #96]	@ (801038c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb4>)
 801032c:	eb03 130a 	add.w	r3, r3, sl, lsl #4
 8010330:	899e      	ldrh	r6, [r3, #12]
 8010332:	ba76      	rev16	r6, r6
 8010334:	b2b6      	uxth	r6, r6
 8010336:	816e      	strh	r6, [r5, #10]
 8010338:	b187      	cbz	r7, 801035c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x84>
 801033a:	4638      	mov	r0, r7
 801033c:	f7ff fc17 	bl	800fb6e <strlen>
 8010340:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8010344:	bf28      	it	cs
 8010346:	f44f 7080 	movcs.w	r0, #256	@ 0x100
 801034a:	4604      	mov	r4, r0
 801034c:	f006 ff50 	bl	80171f0 <operator new[](unsigned int)>
 8010350:	4622      	mov	r2, r4
 8010352:	6068      	str	r0, [r5, #4]
 8010354:	4639      	mov	r1, r7
 8010356:	f7ff fc01 	bl	800fb5c <memcpy.isra.0>
 801035a:	812c      	strh	r4, [r5, #8]
 801035c:	4b0c      	ldr	r3, [pc, #48]	@ (8010390 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb8>)
 801035e:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 8010362:	801a      	strh	r2, [r3, #0]
 8010364:	4b0b      	ldr	r3, [pc, #44]	@ (8010394 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xbc>)
 8010366:	22f0      	movs	r2, #240	@ 0xf0
 8010368:	601a      	str	r2, [r3, #0]
 801036a:	4640      	mov	r0, r8
 801036c:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8010370:	2200      	movs	r2, #0
 8010372:	4629      	mov	r1, r5
 8010374:	f7ff fec2 	bl	80100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8010378:	2001      	movs	r0, #1
 801037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801037e:	243f      	movs	r4, #63	@ 0x3f
 8010380:	e7c5      	b.n	801030e <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x36>
 8010382:	2000      	movs	r0, #0
 8010384:	e7f9      	b.n	801037a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 8010386:	bf00      	nop
 8010388:	20009b10 	andcs	r9, r0, r0, lsl fp
 801038c:	0801a228 	stmdaeq	r1, {r3, r5, r9, sp, pc}
 8010390:	200098f8 	strdcs	r9, [r0], -r8
 8010394:	20009b08 	andcs	r9, r0, r8, lsl #22

08010398 <MDNS::HandleQuestions(unsigned long)>:
 8010398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801039c:	4b5c      	ldr	r3, [pc, #368]	@ (8010510 <MDNS::HandleQuestions(unsigned long)+0x178>)
 801039e:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 8010530 <MDNS::HandleQuestions(unsigned long)+0x198>
 80103a2:	881a      	ldrh	r2, [r3, #0]
 80103a4:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 80103a8:	429a      	cmp	r2, r3
 80103aa:	f04f 0500 	mov.w	r5, #0
 80103ae:	4b59      	ldr	r3, [pc, #356]	@ (8010514 <MDNS::HandleQuestions(unsigned long)+0x17c>)
 80103b0:	f8c9 5000 	str.w	r5, [r9]
 80103b4:	f5ad 7d47 	sub.w	sp, sp, #796	@ 0x31c
 80103b8:	bf14      	ite	ne
 80103ba:	2201      	movne	r2, #1
 80103bc:	462a      	moveq	r2, r5
 80103be:	9001      	str	r0, [sp, #4]
 80103c0:	4688      	mov	r8, r1
 80103c2:	701a      	strb	r2, [r3, #0]
 80103c4:	d004      	beq.n	80103d0 <MDNS::HandleQuestions(unsigned long)+0x38>
 80103c6:	2901      	cmp	r1, #1
 80103c8:	bf02      	ittt	eq
 80103ca:	4b53      	ldreq	r3, [pc, #332]	@ (8010518 <MDNS::HandleQuestions(unsigned long)+0x180>)
 80103cc:	681b      	ldreq	r3, [r3, #0]
 80103ce:	881d      	ldrheq	r5, [r3, #0]
 80103d0:	4c52      	ldr	r4, [pc, #328]	@ (801051c <MDNS::HandleQuestions(unsigned long)+0x184>)
 80103d2:	f04f 0b00 	mov.w	fp, #0
 80103d6:	f04f 0a0c 	mov.w	sl, #12
 80103da:	45c3      	cmp	fp, r8
 80103dc:	d10e      	bne.n	80103fc <MDNS::HandleQuestions(unsigned long)+0x64>
 80103de:	f8d9 3000 	ldr.w	r3, [r9]
 80103e2:	2b00      	cmp	r3, #0
 80103e4:	f000 808f 	beq.w	8010506 <MDNS::HandleQuestions(unsigned long)+0x16e>
 80103e8:	9801      	ldr	r0, [sp, #4]
 80103ea:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 80103ee:	4629      	mov	r1, r5
 80103f0:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 80103f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103f8:	f7ff be56 	b.w	80100a8 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 80103fc:	4b48      	ldr	r3, [pc, #288]	@ (8010520 <MDNS::HandleQuestions(unsigned long)+0x188>)
 80103fe:	4e46      	ldr	r6, [pc, #280]	@ (8010518 <MDNS::HandleQuestions(unsigned long)+0x180>)
 8010400:	681a      	ldr	r2, [r3, #0]
 8010402:	6830      	ldr	r0, [r6, #0]
 8010404:	ab03      	add	r3, sp, #12
 8010406:	4402      	add	r2, r0
 8010408:	eb00 010a 	add.w	r1, r0, sl
 801040c:	f7ff fddb 	bl	800ffc6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
 8010410:	2800      	cmp	r0, #0
 8010412:	d078      	beq.n	8010506 <MDNS::HandleQuestions(unsigned long)+0x16e>
 8010414:	6833      	ldr	r3, [r6, #0]
 8010416:	eb03 020a 	add.w	r2, r3, sl
 801041a:	1a80      	subs	r0, r0, r2
 801041c:	f8ad 010c 	strh.w	r0, [sp, #268]	@ 0x10c
 8010420:	fa1a f080 	uxtah	r0, sl, r0
 8010424:	181a      	adds	r2, r3, r0
 8010426:	f100 0a04 	add.w	sl, r0, #4
 801042a:	8852      	ldrh	r2, [r2, #2]
 801042c:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 8010430:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8010434:	d002      	beq.n	801043c <MDNS::HandleQuestions(unsigned long)+0xa4>
 8010436:	f10b 0b01 	add.w	fp, fp, #1
 801043a:	e7ce      	b.n	80103da <MDNS::HandleQuestions(unsigned long)+0x42>
 801043c:	5a1e      	ldrh	r6, [r3, r0]
 801043e:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 8010442:	d002      	beq.n	801044a <MDNS::HandleQuestions(unsigned long)+0xb2>
 8010444:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8010448:	d10d      	bne.n	8010466 <MDNS::HandleQuestions(unsigned long)+0xce>
 801044a:	a844      	add	r0, sp, #272	@ 0x110
 801044c:	f7ff fbaa 	bl	800fba4 <create_host_domain(mdns::Domain&)>
 8010450:	a903      	add	r1, sp, #12
 8010452:	a844      	add	r0, sp, #272	@ 0x110
 8010454:	f7ff fc3c 	bl	800fcd0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8010458:	b128      	cbz	r0, 8010466 <MDNS::HandleQuestions(unsigned long)+0xce>
 801045a:	f8d9 3000 	ldr.w	r3, [r9]
 801045e:	f043 0301 	orr.w	r3, r3, #1
 8010462:	f8c9 3000 	str.w	r3, [r9]
 8010466:	4f2f      	ldr	r7, [pc, #188]	@ (8010524 <MDNS::HandleQuestions(unsigned long)+0x18c>)
 8010468:	68fb      	ldr	r3, [r7, #12]
 801046a:	2b08      	cmp	r3, #8
 801046c:	dc46      	bgt.n	80104fc <MDNS::HandleQuestions(unsigned long)+0x164>
 801046e:	2300      	movs	r3, #0
 8010470:	f5b6 6f40 	cmp.w	r6, #3072	@ 0xc00
 8010474:	6023      	str	r3, [r4, #0]
 8010476:	d002      	beq.n	801047e <MDNS::HandleQuestions(unsigned long)+0xe6>
 8010478:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 801047c:	d115      	bne.n	80104aa <MDNS::HandleQuestions(unsigned long)+0x112>
 801047e:	482a      	ldr	r0, [pc, #168]	@ (8010528 <MDNS::HandleQuestions(unsigned long)+0x190>)
 8010480:	a903      	add	r1, sp, #12
 8010482:	f7ff fc25 	bl	800fcd0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8010486:	b108      	cbz	r0, 801048c <MDNS::HandleQuestions(unsigned long)+0xf4>
 8010488:	2310      	movs	r3, #16
 801048a:	6023      	str	r3, [r4, #0]
 801048c:	2200      	movs	r2, #0
 801048e:	4639      	mov	r1, r7
 8010490:	a885      	add	r0, sp, #532	@ 0x214
 8010492:	f7ff fba7 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010496:	a903      	add	r1, sp, #12
 8010498:	a885      	add	r0, sp, #532	@ 0x214
 801049a:	f7ff fc19 	bl	800fcd0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 801049e:	6823      	ldr	r3, [r4, #0]
 80104a0:	b118      	cbz	r0, 80104aa <MDNS::HandleQuestions(unsigned long)+0x112>
 80104a2:	f043 0320 	orr.w	r3, r3, #32
 80104a6:	b2db      	uxtb	r3, r3
 80104a8:	6023      	str	r3, [r4, #0]
 80104aa:	4639      	mov	r1, r7
 80104ac:	a885      	add	r0, sp, #532	@ 0x214
 80104ae:	2201      	movs	r2, #1
 80104b0:	f7ff fb98 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 80104b4:	a903      	add	r1, sp, #12
 80104b6:	a885      	add	r0, sp, #532	@ 0x214
 80104b8:	f7ff fc0a 	bl	800fcd0 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 80104bc:	b1d8      	cbz	r0, 80104f6 <MDNS::HandleQuestions(unsigned long)+0x15e>
 80104be:	f5b6 5f04 	cmp.w	r6, #8448	@ 0x2100
 80104c2:	d002      	beq.n	80104ca <MDNS::HandleQuestions(unsigned long)+0x132>
 80104c4:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80104c8:	d112      	bne.n	80104f0 <MDNS::HandleQuestions(unsigned long)+0x158>
 80104ca:	7823      	ldrb	r3, [r4, #0]
 80104cc:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80104d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80104d4:	6023      	str	r3, [r4, #0]
 80104d6:	d103      	bne.n	80104e0 <MDNS::HandleQuestions(unsigned long)+0x148>
 80104d8:	7823      	ldrb	r3, [r4, #0]
 80104da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80104de:	6023      	str	r3, [r4, #0]
 80104e0:	9801      	ldr	r0, [sp, #4]
 80104e2:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80104e6:	462a      	mov	r2, r5
 80104e8:	4639      	mov	r1, r7
 80104ea:	f7ff fe07 	bl	80100fc <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80104ee:	e005      	b.n	80104fc <MDNS::HandleQuestions(unsigned long)+0x164>
 80104f0:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
 80104f4:	d0f0      	beq.n	80104d8 <MDNS::HandleQuestions(unsigned long)+0x140>
 80104f6:	6823      	ldr	r3, [r4, #0]
 80104f8:	2b00      	cmp	r3, #0
 80104fa:	d1f1      	bne.n	80104e0 <MDNS::HandleQuestions(unsigned long)+0x148>
 80104fc:	4b0b      	ldr	r3, [pc, #44]	@ (801052c <MDNS::HandleQuestions(unsigned long)+0x194>)
 80104fe:	3710      	adds	r7, #16
 8010500:	429f      	cmp	r7, r3
 8010502:	d1b1      	bne.n	8010468 <MDNS::HandleQuestions(unsigned long)+0xd0>
 8010504:	e797      	b.n	8010436 <MDNS::HandleQuestions(unsigned long)+0x9e>
 8010506:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 801050a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801050e:	bf00      	nop
 8010510:	200098f8 	strdcs	r9, [r0], -r8
 8010514:	20009904 	andcs	r9, r0, r4, lsl #18
 8010518:	200098f0 	strdcs	r9, [r0], -r0
 801051c:	20009b08 	andcs	r9, r0, r8, lsl #22
 8010520:	200098f4 	strdcs	r9, [r0], -r4
 8010524:	20009b10 	andcs	r9, r0, r0, lsl fp
 8010528:	0801a124 	stmdaeq	r1, {r2, r5, r8, sp, pc}
 801052c:	20009b30 	andcs	r9, r0, r0, lsr fp
 8010530:	20009b0c 	andcs	r9, r0, ip, lsl #22

08010534 <MDNS::Print()>:
 8010534:	b530      	push	{r4, r5, lr}
 8010536:	4815      	ldr	r0, [pc, #84]	@ (801058c <MDNS::Print()+0x58>)
 8010538:	4c15      	ldr	r4, [pc, #84]	@ (8010590 <MDNS::Print()+0x5c>)
 801053a:	b0c3      	sub	sp, #268	@ 0x10c
 801053c:	f006 fc48 	bl	8016dd0 <printf>
 8010540:	a801      	add	r0, sp, #4
 8010542:	f7ff fb2f 	bl	800fba4 <create_host_domain(mdns::Domain&)>
 8010546:	2101      	movs	r1, #1
 8010548:	a801      	add	r0, sp, #4
 801054a:	f7ff fb9d 	bl	800fc88 <mdns::Domain::Print(bool)>
 801054e:	2503      	movs	r5, #3
 8010550:	3d01      	subs	r5, #1
 8010552:	d101      	bne.n	8010558 <MDNS::Print()+0x24>
 8010554:	b043      	add	sp, #268	@ 0x10c
 8010556:	bd30      	pop	{r4, r5, pc}
 8010558:	68e3      	ldr	r3, [r4, #12]
 801055a:	2b08      	cmp	r3, #8
 801055c:	dc14      	bgt.n	8010588 <MDNS::Print()+0x54>
 801055e:	2200      	movs	r2, #0
 8010560:	4621      	mov	r1, r4
 8010562:	a801      	add	r0, sp, #4
 8010564:	f7ff fb3e 	bl	800fbe4 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8010568:	2100      	movs	r1, #0
 801056a:	a801      	add	r0, sp, #4
 801056c:	f7ff fb8c 	bl	800fc88 <mdns::Domain::Print(bool)>
 8010570:	8961      	ldrh	r1, [r4, #10]
 8010572:	4a08      	ldr	r2, [pc, #32]	@ (8010594 <MDNS::Print()+0x60>)
 8010574:	6863      	ldr	r3, [r4, #4]
 8010576:	4808      	ldr	r0, [pc, #32]	@ (8010598 <MDNS::Print()+0x64>)
 8010578:	ba49      	rev16	r1, r1
 801057a:	2b00      	cmp	r3, #0
 801057c:	bf08      	it	eq
 801057e:	4613      	moveq	r3, r2
 8010580:	b289      	uxth	r1, r1
 8010582:	8922      	ldrh	r2, [r4, #8]
 8010584:	f006 fc24 	bl	8016dd0 <printf>
 8010588:	3410      	adds	r4, #16
 801058a:	e7e1      	b.n	8010550 <MDNS::Print()+0x1c>
 801058c:	08017bf0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 8010590:	20009b10 	andcs	r9, r0, r0, lsl fp
 8010594:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 8010598:	08017bf6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}

0801059c <strncpy.isra.0>:
 801059c:	3901      	subs	r1, #1
 801059e:	b112      	cbz	r2, 80105a6 <strncpy.isra.0+0xa>
 80105a0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80105a4:	b913      	cbnz	r3, 80105ac <strncpy.isra.0+0x10>
 80105a6:	4402      	add	r2, r0
 80105a8:	2300      	movs	r3, #0
 80105aa:	e005      	b.n	80105b8 <strncpy.isra.0+0x1c>
 80105ac:	f800 3b01 	strb.w	r3, [r0], #1
 80105b0:	3a01      	subs	r2, #1
 80105b2:	e7f4      	b.n	801059e <strncpy.isra.0+0x2>
 80105b4:	f800 3b01 	strb.w	r3, [r0], #1
 80105b8:	4290      	cmp	r0, r2
 80105ba:	d1fb      	bne.n	80105b4 <strncpy.isra.0+0x18>
 80105bc:	4770      	bx	lr
	...

080105c0 <NetworkStore::SaveDhcp(bool)>:
 80105c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80105c2:	2301      	movs	r3, #1
 80105c4:	2100      	movs	r1, #0
 80105c6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80105ca:	f88d 0017 	strb.w	r0, [sp, #23]
 80105ce:	4805      	ldr	r0, [pc, #20]	@ (80105e4 <NetworkStore::SaveDhcp(bool)+0x24>)
 80105d0:	9300      	str	r3, [sp, #0]
 80105d2:	6800      	ldr	r0, [r0, #0]
 80105d4:	f10d 0317 	add.w	r3, sp, #23
 80105d8:	2214      	movs	r2, #20
 80105da:	f002 fefd 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80105de:	b007      	add	sp, #28
 80105e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80105e4:	20009bfc 	strdcs	r9, [r0], -ip

080105e8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 80105e8:	b530      	push	{r4, r5, lr}
 80105ea:	4605      	mov	r5, r0
 80105ec:	06e8      	lsls	r0, r5, #27
 80105ee:	b087      	sub	sp, #28
 80105f0:	460c      	mov	r4, r1
 80105f2:	d51a      	bpl.n	801062a <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x42>
 80105f4:	f002 fdf6 	bl	80131e4 <net::display_ip()>
 80105f8:	f7ff fe08 	bl	801020c <network::mdns_announcement()>
 80105fc:	4b2e      	ldr	r3, [pc, #184]	@ (80106b8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 80105fe:	6821      	ldr	r1, [r4, #0]
 8010600:	681b      	ldr	r3, [r3, #0]
 8010602:	482e      	ldr	r0, [pc, #184]	@ (80106bc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd4>)
 8010604:	0e1a      	lsrs	r2, r3, #24
 8010606:	9204      	str	r2, [sp, #16]
 8010608:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801060c:	9203      	str	r2, [sp, #12]
 801060e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010612:	b2db      	uxtb	r3, r3
 8010614:	9301      	str	r3, [sp, #4]
 8010616:	0e0b      	lsrs	r3, r1, #24
 8010618:	9202      	str	r2, [sp, #8]
 801061a:	9300      	str	r3, [sp, #0]
 801061c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010620:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010624:	b2c9      	uxtb	r1, r1
 8010626:	f006 fbd3 	bl	8016dd0 <printf>
 801062a:	0669      	lsls	r1, r5, #25
 801062c:	d518      	bpl.n	8010660 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x78>
 801062e:	f002 fde1 	bl	80131f4 <net::display_netmask()>
 8010632:	4b21      	ldr	r3, [pc, #132]	@ (80106b8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 8010634:	6861      	ldr	r1, [r4, #4]
 8010636:	685b      	ldr	r3, [r3, #4]
 8010638:	4821      	ldr	r0, [pc, #132]	@ (80106c0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd8>)
 801063a:	0e1a      	lsrs	r2, r3, #24
 801063c:	9204      	str	r2, [sp, #16]
 801063e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010642:	9203      	str	r2, [sp, #12]
 8010644:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010648:	b2db      	uxtb	r3, r3
 801064a:	9301      	str	r3, [sp, #4]
 801064c:	0e0b      	lsrs	r3, r1, #24
 801064e:	9202      	str	r2, [sp, #8]
 8010650:	9300      	str	r3, [sp, #0]
 8010652:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010656:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801065a:	b2c9      	uxtb	r1, r1
 801065c:	f006 fbb8 	bl	8016dd0 <printf>
 8010660:	06aa      	lsls	r2, r5, #26
 8010662:	d518      	bpl.n	8010696 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xae>
 8010664:	f002 fde8 	bl	8013238 <net::display_gateway()>
 8010668:	4b13      	ldr	r3, [pc, #76]	@ (80106b8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 801066a:	68a1      	ldr	r1, [r4, #8]
 801066c:	689b      	ldr	r3, [r3, #8]
 801066e:	4815      	ldr	r0, [pc, #84]	@ (80106c4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xdc>)
 8010670:	0e1a      	lsrs	r2, r3, #24
 8010672:	9204      	str	r2, [sp, #16]
 8010674:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8010678:	9203      	str	r2, [sp, #12]
 801067a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801067e:	b2db      	uxtb	r3, r3
 8010680:	9301      	str	r3, [sp, #4]
 8010682:	0e0b      	lsrs	r3, r1, #24
 8010684:	9202      	str	r2, [sp, #8]
 8010686:	9300      	str	r3, [sp, #0]
 8010688:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801068c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010690:	b2c9      	uxtb	r1, r1
 8010692:	f006 fb9d 	bl	8016dd0 <printf>
 8010696:	076b      	lsls	r3, r5, #29
 8010698:	d50c      	bpl.n	80106b4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 801069a:	7823      	ldrb	r3, [r4, #0]
 801069c:	b953      	cbnz	r3, 80106b4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 801069e:	f7ff fdbd 	bl	801021c <network::mdns_shutdown()>
 80106a2:	f001 f98f 	bl	80119c4 <net::tcp_shutdown()>
 80106a6:	f7f7 fdf7 	bl	8008298 <net::igmp_shutdown()>
 80106aa:	b007      	add	sp, #28
 80106ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80106b0:	f000 bc7a 	b.w	8010fa8 <net::dhcp_release_and_stop()>
 80106b4:	b007      	add	sp, #28
 80106b6:	bd30      	pop	{r4, r5, pc}
 80106b8:	20009b50 	andcs	r9, r0, r0, asr fp
 80106bc:	08017c00 	stmdaeq	r1, {sl, fp, ip, sp, lr}
 80106c0:	08017c20 	stmdaeq	r1, {r5, sl, fp, ip, sp, lr}
 80106c4:	08017c45 	stmdaeq	r1, {r0, r2, r6, sl, fp, ip, sp, lr}

080106c8 <Network::Network()>:
 80106c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106ca:	2300      	movs	r3, #0
 80106cc:	f240 1201 	movw	r2, #257	@ 0x101
 80106d0:	6003      	str	r3, [r0, #0]
 80106d2:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 80106d6:	4b53      	ldr	r3, [pc, #332]	@ (8010824 <Network::Network()+0x15c>)
 80106d8:	8082      	strh	r2, [r0, #4]
 80106da:	4a53      	ldr	r2, [pc, #332]	@ (8010828 <Network::Network()+0x160>)
 80106dc:	6018      	str	r0, [r3, #0]
 80106de:	b09f      	sub	sp, #124	@ 0x7c
 80106e0:	4604      	mov	r4, r0
 80106e2:	1d83      	adds	r3, r0, #6
 80106e4:	f812 6b01 	ldrb.w	r6, [r2], #1
 80106e8:	f803 6b01 	strb.w	r6, [r3], #1
 80106ec:	2e00      	cmp	r6, #0
 80106ee:	d1f9      	bne.n	80106e4 <Network::Network()+0x1c>
 80106f0:	f884 6056 	strb.w	r6, [r4, #86]	@ 0x56
 80106f4:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80106f8:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
 80106fc:	f803 6b01 	strb.w	r6, [r3], #1
 8010700:	4293      	cmp	r3, r2
 8010702:	d1fb      	bne.n	80106fc <Network::Network()+0x34>
 8010704:	4d49      	ldr	r5, [pc, #292]	@ (801082c <Network::Network()+0x164>)
 8010706:	f002 fd2d 	bl	8013164 <net::display_emac_config()>
 801070a:	f7f7 fe49 	bl	80083a0 <emac_config()>
 801070e:	f002 fd3b 	bl	8013188 <net::display_emac_start()>
 8010712:	4847      	ldr	r0, [pc, #284]	@ (8010830 <Network::Network()+0x168>)
 8010714:	4621      	mov	r1, r4
 8010716:	f7f7 fe67 	bl	80083e8 <emac_start(unsigned char*, net::Link&)>
 801071a:	7e6b      	ldrb	r3, [r5, #25]
 801071c:	9302      	str	r3, [sp, #8]
 801071e:	7e2b      	ldrb	r3, [r5, #24]
 8010720:	9301      	str	r3, [sp, #4]
 8010722:	7deb      	ldrb	r3, [r5, #23]
 8010724:	9300      	str	r3, [sp, #0]
 8010726:	7dab      	ldrb	r3, [r5, #22]
 8010728:	7d6a      	ldrb	r2, [r5, #21]
 801072a:	7d29      	ldrb	r1, [r5, #20]
 801072c:	4841      	ldr	r0, [pc, #260]	@ (8010834 <Network::Network()+0x16c>)
 801072e:	f006 fb4f 	bl	8016dd0 <printf>
 8010732:	f001 fd08 	bl	8012146 <net::phy_customized_timing()>
 8010736:	f001 fd05 	bl	8012144 <net::phy_customized_led()>
 801073a:	f000 ff17 	bl	801156c <net::netif_init()>
 801073e:	483e      	ldr	r0, [pc, #248]	@ (8010838 <Network::Network()+0x170>)
 8010740:	f000 ffb4 	bl	80116ac <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
 8010744:	a806      	add	r0, sp, #24
 8010746:	f001 faf3 	bl	8011d30 <NetworkParams::NetworkParams()>
 801074a:	a806      	add	r0, sp, #24
 801074c:	f001 fafa 	bl	8011d44 <NetworkParams::Load()>
 8010750:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
 8010754:	2b00      	cmp	r3, #0
 8010756:	d15b      	bne.n	8010810 <Network::Network()+0x148>
 8010758:	4a38      	ldr	r2, [pc, #224]	@ (801083c <Network::Network()+0x174>)
 801075a:	f104 0315 	add.w	r3, r4, #21
 801075e:	f104 0120 	add.w	r1, r4, #32
 8010762:	f812 0b01 	ldrb.w	r0, [r2], #1
 8010766:	f803 0f01 	strb.w	r0, [r3, #1]!
 801076a:	428b      	cmp	r3, r1
 801076c:	d1f9      	bne.n	8010762 <Network::Network()+0x9a>
 801076e:	7deb      	ldrb	r3, [r5, #23]
 8010770:	091a      	lsrs	r2, r3, #4
 8010772:	2b9f      	cmp	r3, #159	@ 0x9f
 8010774:	f003 030f 	and.w	r3, r3, #15
 8010778:	bf94      	ite	ls
 801077a:	3230      	addls	r2, #48	@ 0x30
 801077c:	3237      	addhi	r2, #55	@ 0x37
 801077e:	2b09      	cmp	r3, #9
 8010780:	bf94      	ite	ls
 8010782:	3330      	addls	r3, #48	@ 0x30
 8010784:	3337      	addhi	r3, #55	@ 0x37
 8010786:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 801078a:	7e2b      	ldrb	r3, [r5, #24]
 801078c:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8010790:	2b9f      	cmp	r3, #159	@ 0x9f
 8010792:	ea4f 1213 	mov.w	r2, r3, lsr #4
 8010796:	f003 030f 	and.w	r3, r3, #15
 801079a:	bf94      	ite	ls
 801079c:	3230      	addls	r2, #48	@ 0x30
 801079e:	3237      	addhi	r2, #55	@ 0x37
 80107a0:	2b09      	cmp	r3, #9
 80107a2:	bf94      	ite	ls
 80107a4:	3330      	addls	r3, #48	@ 0x30
 80107a6:	3337      	addhi	r3, #55	@ 0x37
 80107a8:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 80107ac:	7e6b      	ldrb	r3, [r5, #25]
 80107ae:	f884 2023 	strb.w	r2, [r4, #35]	@ 0x23
 80107b2:	2b9f      	cmp	r3, #159	@ 0x9f
 80107b4:	ea4f 1213 	mov.w	r2, r3, lsr #4
 80107b8:	f003 030f 	and.w	r3, r3, #15
 80107bc:	bf94      	ite	ls
 80107be:	3230      	addls	r2, #48	@ 0x30
 80107c0:	3237      	addhi	r2, #55	@ 0x37
 80107c2:	2b09      	cmp	r3, #9
 80107c4:	bf94      	ite	ls
 80107c6:	3330      	addls	r3, #48	@ 0x30
 80107c8:	3337      	addhi	r3, #55	@ 0x37
 80107ca:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 80107ce:	2300      	movs	r3, #0
 80107d0:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 80107d4:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 80107d8:	6820      	ldr	r0, [r4, #0]
 80107da:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80107dc:	f104 0316 	add.w	r3, r4, #22
 80107e0:	61eb      	str	r3, [r5, #28]
 80107e2:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 80107e6:	f88d 3017 	strb.w	r3, [sp, #23]
 80107ea:	1e43      	subs	r3, r0, #1
 80107ec:	4258      	negs	r0, r3
 80107ee:	4158      	adcs	r0, r3
 80107f0:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80107f4:	f002 fcda 	bl	80131ac <net::display_emac_status(bool)>
 80107f8:	f10d 0317 	add.w	r3, sp, #23
 80107fc:	9300      	str	r3, [sp, #0]
 80107fe:	6820      	ldr	r0, [r4, #0]
 8010800:	463b      	mov	r3, r7
 8010802:	4632      	mov	r2, r6
 8010804:	4629      	mov	r1, r5
 8010806:	f7f7 fd55 	bl	80082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
 801080a:	4620      	mov	r0, r4
 801080c:	b01f      	add	sp, #124	@ 0x7c
 801080e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010810:	223f      	movs	r2, #63	@ 0x3f
 8010812:	f10d 012d 	add.w	r1, sp, #45	@ 0x2d
 8010816:	f104 0016 	add.w	r0, r4, #22
 801081a:	f7ff febf 	bl	801059c <strncpy.isra.0>
 801081e:	f884 6055 	strb.w	r6, [r4, #85]	@ 0x55
 8010822:	e7d9      	b.n	80107d8 <Network::Network()+0x110>
 8010824:	20009b30 	andcs	r9, r0, r0, lsr fp
 8010828:	08017c65 	stmdaeq	r1, {r0, r2, r5, r6, sl, fp, ip, sp, lr}
 801082c:	20009b50 	andcs	r9, r0, r0, asr fp
 8010830:	20009b64 	andcs	r9, r0, r4, ror #22
 8010834:	08017c6a 	stmdaeq	r1, {r1, r3, r5, r6, sl, fp, ip, sp, lr}
 8010838:	080105e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl}
 801083c:	08017c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, ip, sp, lr}

08010840 <Network::SetIp(unsigned long)>:
 8010840:	b510      	push	{r4, lr}
 8010842:	4b0d      	ldr	r3, [pc, #52]	@ (8010878 <Network::SetIp(unsigned long)+0x38>)
 8010844:	681b      	ldr	r3, [r3, #0]
 8010846:	428b      	cmp	r3, r1
 8010848:	b086      	sub	sp, #24
 801084a:	460c      	mov	r4, r1
 801084c:	d012      	beq.n	8010874 <Network::SetIp(unsigned long)+0x34>
 801084e:	4608      	mov	r0, r1
 8010850:	f000 fe04 	bl	801145c <net::net_set_primary_ip(net::ip_addr)>
 8010854:	9405      	str	r4, [sp, #20]
 8010856:	2302      	movs	r3, #2
 8010858:	2400      	movs	r4, #0
 801085a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801085e:	2204      	movs	r2, #4
 8010860:	4806      	ldr	r0, [pc, #24]	@ (801087c <Network::SetIp(unsigned long)+0x3c>)
 8010862:	9200      	str	r2, [sp, #0]
 8010864:	6800      	ldr	r0, [r0, #0]
 8010866:	ab05      	add	r3, sp, #20
 8010868:	4621      	mov	r1, r4
 801086a:	f002 fdb5 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 801086e:	4620      	mov	r0, r4
 8010870:	f7ff fea6 	bl	80105c0 <NetworkStore::SaveDhcp(bool)>
 8010874:	b006      	add	sp, #24
 8010876:	bd10      	pop	{r4, pc}
 8010878:	20009b50 	andcs	r9, r0, r0, asr fp
 801087c:	20009bfc 	strdcs	r9, [r0], -ip

08010880 <Network::SetNetmask(unsigned long)>:
 8010880:	b510      	push	{r4, lr}
 8010882:	4b0b      	ldr	r3, [pc, #44]	@ (80108b0 <Network::SetNetmask(unsigned long)+0x30>)
 8010884:	685b      	ldr	r3, [r3, #4]
 8010886:	428b      	cmp	r3, r1
 8010888:	b086      	sub	sp, #24
 801088a:	460c      	mov	r4, r1
 801088c:	d00e      	beq.n	80108ac <Network::SetNetmask(unsigned long)+0x2c>
 801088e:	4608      	mov	r0, r1
 8010890:	f000 fe9e 	bl	80115d0 <net::netif_set_netmask(net::ip_addr)>
 8010894:	2304      	movs	r3, #4
 8010896:	2100      	movs	r1, #0
 8010898:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801089c:	4805      	ldr	r0, [pc, #20]	@ (80108b4 <Network::SetNetmask(unsigned long)+0x34>)
 801089e:	9300      	str	r3, [sp, #0]
 80108a0:	6800      	ldr	r0, [r0, #0]
 80108a2:	9405      	str	r4, [sp, #20]
 80108a4:	ab05      	add	r3, sp, #20
 80108a6:	2208      	movs	r2, #8
 80108a8:	f002 fd96 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80108ac:	b006      	add	sp, #24
 80108ae:	bd10      	pop	{r4, pc}
 80108b0:	20009b50 	andcs	r9, r0, r0, asr fp
 80108b4:	20009bfc 	strdcs	r9, [r0], -ip

080108b8 <Network::SetGatewayIp(unsigned long)>:
 80108b8:	b510      	push	{r4, lr}
 80108ba:	4b0c      	ldr	r3, [pc, #48]	@ (80108ec <Network::SetGatewayIp(unsigned long)+0x34>)
 80108bc:	689b      	ldr	r3, [r3, #8]
 80108be:	428b      	cmp	r3, r1
 80108c0:	b086      	sub	sp, #24
 80108c2:	460c      	mov	r4, r1
 80108c4:	d00f      	beq.n	80108e6 <Network::SetGatewayIp(unsigned long)+0x2e>
 80108c6:	4608      	mov	r0, r1
 80108c8:	f000 fe96 	bl	80115f8 <net::netif_set_gw(net::ip_addr)>
 80108cc:	2308      	movs	r3, #8
 80108ce:	2100      	movs	r1, #0
 80108d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80108d4:	4806      	ldr	r0, [pc, #24]	@ (80108f0 <Network::SetGatewayIp(unsigned long)+0x38>)
 80108d6:	9405      	str	r4, [sp, #20]
 80108d8:	2304      	movs	r3, #4
 80108da:	9300      	str	r3, [sp, #0]
 80108dc:	6800      	ldr	r0, [r0, #0]
 80108de:	ab05      	add	r3, sp, #20
 80108e0:	220c      	movs	r2, #12
 80108e2:	f002 fd79 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80108e6:	b006      	add	sp, #24
 80108e8:	bd10      	pop	{r4, pc}
 80108ea:	bf00      	nop
 80108ec:	20009b50 	andcs	r9, r0, r0, asr fp
 80108f0:	20009bfc 	strdcs	r9, [r0], -ip

080108f4 <Network::SetHostName(char const*)>:
 80108f4:	b530      	push	{r4, r5, lr}
 80108f6:	f100 0416 	add.w	r4, r0, #22
 80108fa:	4605      	mov	r5, r0
 80108fc:	b085      	sub	sp, #20
 80108fe:	223f      	movs	r2, #63	@ 0x3f
 8010900:	4620      	mov	r0, r4
 8010902:	f7ff fe4b 	bl	801059c <strncpy.isra.0>
 8010906:	2300      	movs	r3, #0
 8010908:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801090c:	4623      	mov	r3, r4
 801090e:	461a      	mov	r2, r3
 8010910:	3301      	adds	r3, #1
 8010912:	7811      	ldrb	r1, [r2, #0]
 8010914:	2900      	cmp	r1, #0
 8010916:	d1fa      	bne.n	801090e <Network::SetHostName(char const*)+0x1a>
 8010918:	1b12      	subs	r2, r2, r4
 801091a:	2a40      	cmp	r2, #64	@ 0x40
 801091c:	bf28      	it	cs
 801091e:	2240      	movcs	r2, #64	@ 0x40
 8010920:	2320      	movs	r3, #32
 8010922:	4808      	ldr	r0, [pc, #32]	@ (8010944 <Network::SetHostName(char const*)+0x50>)
 8010924:	9102      	str	r1, [sp, #8]
 8010926:	9301      	str	r3, [sp, #4]
 8010928:	9200      	str	r2, [sp, #0]
 801092a:	6800      	ldr	r0, [r0, #0]
 801092c:	4623      	mov	r3, r4
 801092e:	2215      	movs	r2, #21
 8010930:	f002 fd52 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8010934:	f7ff fc6a 	bl	801020c <network::mdns_announcement()>
 8010938:	b005      	add	sp, #20
 801093a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801093e:	f002 bc9b 	b.w	8013278 <net::display_hostname()>
 8010942:	bf00      	nop
 8010944:	20009bfc 	strdcs	r9, [r0], -ip

08010948 <Network::SetZeroconf()>:
 8010948:	b508      	push	{r3, lr}
 801094a:	f000 f869 	bl	8010a20 <net::autoip_start()>
 801094e:	2000      	movs	r0, #0
 8010950:	f7ff fe36 	bl	80105c0 <NetworkStore::SaveDhcp(bool)>
 8010954:	bd08      	pop	{r3, pc}

08010956 <Network::EnableDhcp()>:
 8010956:	b508      	push	{r3, lr}
 8010958:	f000 fada 	bl	8010f10 <net::dhcp_start()>
 801095c:	2001      	movs	r0, #1
 801095e:	f7ff fe2f 	bl	80105c0 <NetworkStore::SaveDhcp(bool)>
 8010962:	bd08      	pop	{r3, pc}

08010964 <Network::SetQueuedStaticIp(unsigned long, unsigned long)>:
 8010964:	b909      	cbnz	r1, 801096a <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x6>
 8010966:	4b08      	ldr	r3, [pc, #32]	@ (8010988 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 8010968:	6819      	ldr	r1, [r3, #0]
 801096a:	f8c0 10a8 	str.w	r1, [r0, #168]	@ 0xa8
 801096e:	b90a      	cbnz	r2, 8010974 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x10>
 8010970:	4b05      	ldr	r3, [pc, #20]	@ (8010988 <Network::SetQueuedStaticIp(unsigned long, unsigned long)+0x24>)
 8010972:	685a      	ldr	r2, [r3, #4]
 8010974:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8010978:	f8c0 20ac 	str.w	r2, [r0, #172]	@ 0xac
 801097c:	f043 0303 	orr.w	r3, r3, #3
 8010980:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 8010984:	4770      	bx	lr
 8010986:	bf00      	nop
 8010988:	20009b50 	andcs	r9, r0, r0, asr fp

0801098c <Network::SetQueuedDefaultRoute(unsigned long)>:
 801098c:	b909      	cbnz	r1, 8010992 <Network::SetQueuedDefaultRoute(unsigned long)+0x6>
 801098e:	4b05      	ldr	r3, [pc, #20]	@ (80109a4 <Network::SetQueuedDefaultRoute(unsigned long)+0x18>)
 8010990:	6899      	ldr	r1, [r3, #8]
 8010992:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8010996:	f8c0 10b0 	str.w	r1, [r0, #176]	@ 0xb0
 801099a:	f043 0304 	orr.w	r3, r3, #4
 801099e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 80109a2:	4770      	bx	lr
 80109a4:	20009b50 	andcs	r9, r0, r0, asr fp

080109a8 <Network::ApplyQueuedConfig()>:
 80109a8:	b538      	push	{r3, r4, r5, lr}
 80109aa:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80109ae:	4604      	mov	r4, r0
 80109b0:	b3a3      	cbz	r3, 8010a1c <Network::ApplyQueuedConfig()+0x74>
 80109b2:	07d9      	lsls	r1, r3, #31
 80109b4:	d40f      	bmi.n	80109d6 <Network::ApplyQueuedConfig()+0x2e>
 80109b6:	f013 0f06 	tst.w	r3, #6
 80109ba:	d110      	bne.n	80109de <Network::ApplyQueuedConfig()+0x36>
 80109bc:	f013 0508 	ands.w	r5, r3, #8
 80109c0:	d024      	beq.n	8010a0c <Network::ApplyQueuedConfig()+0x64>
 80109c2:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
 80109c6:	2b01      	cmp	r3, #1
 80109c8:	d101      	bne.n	80109ce <Network::ApplyQueuedConfig()+0x26>
 80109ca:	f7ff ffc4 	bl	8010956 <Network::EnableDhcp()>
 80109ce:	2302      	movs	r3, #2
 80109d0:	f884 30b4 	strb.w	r3, [r4, #180]	@ 0xb4
 80109d4:	e015      	b.n	8010a02 <Network::ApplyQueuedConfig()+0x5a>
 80109d6:	f8d0 10a8 	ldr.w	r1, [r0, #168]	@ 0xa8
 80109da:	f7ff ff31 	bl	8010840 <Network::SetIp(unsigned long)>
 80109de:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80109e2:	079a      	lsls	r2, r3, #30
 80109e4:	d504      	bpl.n	80109f0 <Network::ApplyQueuedConfig()+0x48>
 80109e6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
 80109ea:	4620      	mov	r0, r4
 80109ec:	f7ff ff48 	bl	8010880 <Network::SetNetmask(unsigned long)>
 80109f0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80109f4:	075b      	lsls	r3, r3, #29
 80109f6:	d504      	bpl.n	8010a02 <Network::ApplyQueuedConfig()+0x5a>
 80109f8:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
 80109fc:	4620      	mov	r0, r4
 80109fe:	f7ff ff5b 	bl	80108b8 <Network::SetGatewayIp(unsigned long)>
 8010a02:	2300      	movs	r3, #0
 8010a04:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 8010a08:	2001      	movs	r0, #1
 8010a0a:	bd38      	pop	{r3, r4, r5, pc}
 8010a0c:	f013 0310 	ands.w	r3, r3, #16
 8010a10:	d004      	beq.n	8010a1c <Network::ApplyQueuedConfig()+0x74>
 8010a12:	f7ff ff99 	bl	8010948 <Network::SetZeroconf()>
 8010a16:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8010a1a:	e7f5      	b.n	8010a08 <Network::ApplyQueuedConfig()+0x60>
 8010a1c:	4618      	mov	r0, r3
 8010a1e:	e7f4      	b.n	8010a0a <Network::ApplyQueuedConfig()+0x62>

08010a20 <net::autoip_start()>:
 8010a20:	b570      	push	{r4, r5, r6, lr}
 8010a22:	4e21      	ldr	r6, [pc, #132]	@ (8010aa8 <net::autoip_start()+0x88>)
 8010a24:	6ab4      	ldr	r4, [r6, #40]	@ 0x28
 8010a26:	b95c      	cbnz	r4, 8010a40 <net::autoip_start()+0x20>
 8010a28:	201c      	movs	r0, #28
 8010a2a:	f006 fbdf 	bl	80171ec <operator new(unsigned int)>
 8010a2e:	2100      	movs	r1, #0
 8010a30:	4604      	mov	r4, r0
 8010a32:	f100 021c 	add.w	r2, r0, #28
 8010a36:	4603      	mov	r3, r0
 8010a38:	f803 1b01 	strb.w	r1, [r3], #1
 8010a3c:	4293      	cmp	r3, r2
 8010a3e:	d1fb      	bne.n	8010a38 <net::autoip_start()+0x18>
 8010a40:	6863      	ldr	r3, [r4, #4]
 8010a42:	bb7b      	cbnz	r3, 8010aa4 <net::autoip_start()+0x84>
 8010a44:	f104 050c 	add.w	r5, r4, #12
 8010a48:	4918      	ldr	r1, [pc, #96]	@ (8010aac <net::autoip_start()+0x8c>)
 8010a4a:	4628      	mov	r0, r5
 8010a4c:	f001 fec2 	bl	80127d4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 8010a50:	8822      	ldrh	r2, [r4, #0]
 8010a52:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8010a56:	429a      	cmp	r2, r3
 8010a58:	d01c      	beq.n	8010a94 <net::autoip_start()+0x74>
 8010a5a:	f8b6 3017 	ldrh.w	r3, [r6, #23]
 8010a5e:	4a14      	ldr	r2, [pc, #80]	@ (8010ab0 <net::autoip_start()+0x90>)
 8010a60:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8010a64:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 8010a66:	7a1b      	ldrb	r3, [r3, #8]
 8010a68:	ba12      	rev	r2, r2
 8010a6a:	4413      	add	r3, r2
 8010a6c:	b29b      	uxth	r3, r3
 8010a6e:	4a11      	ldr	r2, [pc, #68]	@ (8010ab4 <net::autoip_start()+0x94>)
 8010a70:	f043 4329 	orr.w	r3, r3, #2835349504	@ 0xa9000000
 8010a74:	f443 037e 	orr.w	r3, r3, #16646144	@ 0xfe0000
 8010a78:	4293      	cmp	r3, r2
 8010a7a:	4a0f      	ldr	r2, [pc, #60]	@ (8010ab8 <net::autoip_start()+0x98>)
 8010a7c:	bf98      	it	ls
 8010a7e:	f503 437e 	addls.w	r3, r3, #65024	@ 0xfe00
 8010a82:	4293      	cmp	r3, r2
 8010a84:	6023      	str	r3, [r4, #0]
 8010a86:	bf84      	itt	hi
 8010a88:	f5a3 437e 	subhi.w	r3, r3, #65024	@ 0xfe00
 8010a8c:	6023      	strhi	r3, [r4, #0]
 8010a8e:	6823      	ldr	r3, [r4, #0]
 8010a90:	ba1b      	rev	r3, r3
 8010a92:	6023      	str	r3, [r4, #0]
 8010a94:	2301      	movs	r3, #1
 8010a96:	6821      	ldr	r1, [r4, #0]
 8010a98:	6063      	str	r3, [r4, #4]
 8010a9a:	4628      	mov	r0, r5
 8010a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aa0:	f001 bd62 	b.w	8012568 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8010aa4:	bd70      	pop	{r4, r5, r6, pc}
 8010aa6:	bf00      	nop
 8010aa8:	20009b50 	andcs	r9, r0, r0, asr fp
 8010aac:	08010ae1 	stmdaeq	r1, {r0, r5, r6, r7, r9, fp}
 8010ab0:	0001fea9 	andeq	pc, r1, r9, lsr #29
 8010ab4:	a9fe00ff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7}^
 8010ab8:	a9fefeff 	ldmibge	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}^

08010abc <net::autoip_stop()>:
 8010abc:	4b07      	ldr	r3, [pc, #28]	@ (8010adc <net::autoip_stop()+0x20>)
 8010abe:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 8010ac0:	b151      	cbz	r1, 8010ad8 <net::autoip_stop()+0x1c>
 8010ac2:	2200      	movs	r2, #0
 8010ac4:	604a      	str	r2, [r1, #4]
 8010ac6:	8819      	ldrh	r1, [r3, #0]
 8010ac8:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8010acc:	4299      	cmp	r1, r3
 8010ace:	d103      	bne.n	8010ad8 <net::autoip_stop()+0x1c>
 8010ad0:	4611      	mov	r1, r2
 8010ad2:	4610      	mov	r0, r2
 8010ad4:	f000 bda4 	b.w	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010ad8:	4770      	bx	lr
 8010ada:	bf00      	nop
 8010adc:	20009b50 	andcs	r9, r0, r0, asr fp

08010ae0 <net::autoip_conflict_callback(net::acd::Callback)>:
 8010ae0:	b510      	push	{r4, lr}
 8010ae2:	4c11      	ldr	r4, [pc, #68]	@ (8010b28 <net::autoip_conflict_callback(net::acd::Callback)+0x48>)
 8010ae4:	2801      	cmp	r0, #1
 8010ae6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010ae8:	4602      	mov	r2, r0
 8010aea:	d00e      	beq.n	8010b0a <net::autoip_conflict_callback(net::acd::Callback)+0x2a>
 8010aec:	2802      	cmp	r0, #2
 8010aee:	d013      	beq.n	8010b18 <net::autoip_conflict_callback(net::acd::Callback)+0x38>
 8010af0:	b950      	cbnz	r0, 8010b08 <net::autoip_conflict_callback(net::acd::Callback)+0x28>
 8010af2:	2102      	movs	r1, #2
 8010af4:	6059      	str	r1, [r3, #4]
 8010af6:	6818      	ldr	r0, [r3, #0]
 8010af8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010afc:	f000 fd90 	bl	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010b00:	7ea3      	ldrb	r3, [r4, #26]
 8010b02:	f043 0304 	orr.w	r3, r3, #4
 8010b06:	76a3      	strb	r3, [r4, #26]
 8010b08:	bd10      	pop	{r4, pc}
 8010b0a:	7a1a      	ldrb	r2, [r3, #8]
 8010b0c:	3201      	adds	r2, #1
 8010b0e:	721a      	strb	r2, [r3, #8]
 8010b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b14:	f7ff bf84 	b.w	8010a20 <net::autoip_start()>
 8010b18:	2200      	movs	r2, #0
 8010b1a:	601a      	str	r2, [r3, #0]
 8010b1c:	f7ff ffce 	bl	8010abc <net::autoip_stop()>
 8010b20:	7ea3      	ldrb	r3, [r4, #26]
 8010b22:	f023 0304 	bic.w	r3, r3, #4
 8010b26:	e7ee      	b.n	8010b06 <net::autoip_conflict_callback(net::acd::Callback)+0x26>
 8010b28:	20009b50 	andcs	r9, r0, r0, asr fp

08010b2c <net::dhcp_bind()>:
 8010b2c:	4833      	ldr	r0, [pc, #204]	@ (8010bfc <net::dhcp_bind()+0xd0>)
 8010b2e:	6a03      	ldr	r3, [r0, #32]
 8010b30:	2200      	movs	r2, #0
 8010b32:	b410      	push	{r4}
 8010b34:	82da      	strh	r2, [r3, #22]
 8010b36:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8010b38:	1c51      	adds	r1, r2, #1
 8010b3a:	d009      	beq.n	8010b50 <net::dhcp_bind()+0x24>
 8010b3c:	321e      	adds	r2, #30
 8010b3e:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8010b42:	d23f      	bcs.n	8010bc4 <net::dhcp_bind()+0x98>
 8010b44:	2a3b      	cmp	r2, #59	@ 0x3b
 8010b46:	d940      	bls.n	8010bca <net::dhcp_bind()+0x9e>
 8010b48:	213c      	movs	r1, #60	@ 0x3c
 8010b4a:	fbb2 f2f1 	udiv	r2, r2, r1
 8010b4e:	831a      	strh	r2, [r3, #24]
 8010b50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010b52:	1c54      	adds	r4, r2, #1
 8010b54:	d00b      	beq.n	8010b6e <net::dhcp_bind()+0x42>
 8010b56:	321e      	adds	r2, #30
 8010b58:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8010b5c:	d237      	bcs.n	8010bce <net::dhcp_bind()+0xa2>
 8010b5e:	2a3b      	cmp	r2, #59	@ 0x3b
 8010b60:	d938      	bls.n	8010bd4 <net::dhcp_bind()+0xa8>
 8010b62:	213c      	movs	r1, #60	@ 0x3c
 8010b64:	fbb2 f2f1 	udiv	r2, r2, r1
 8010b68:	b292      	uxth	r2, r2
 8010b6a:	81da      	strh	r2, [r3, #14]
 8010b6c:	825a      	strh	r2, [r3, #18]
 8010b6e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8010b70:	1c51      	adds	r1, r2, #1
 8010b72:	d00b      	beq.n	8010b8c <net::dhcp_bind()+0x60>
 8010b74:	321e      	adds	r2, #30
 8010b76:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8010b7a:	d22d      	bcs.n	8010bd8 <net::dhcp_bind()+0xac>
 8010b7c:	2a3b      	cmp	r2, #59	@ 0x3b
 8010b7e:	d92e      	bls.n	8010bde <net::dhcp_bind()+0xb2>
 8010b80:	213c      	movs	r1, #60	@ 0x3c
 8010b82:	fbb2 f2f1 	udiv	r2, r2, r1
 8010b86:	b292      	uxth	r2, r2
 8010b88:	821a      	strh	r2, [r3, #16]
 8010b8a:	829a      	strh	r2, [r3, #20]
 8010b8c:	8a1a      	ldrh	r2, [r3, #16]
 8010b8e:	89d9      	ldrh	r1, [r3, #14]
 8010b90:	4291      	cmp	r1, r2
 8010b92:	d302      	bcc.n	8010b9a <net::dhcp_bind()+0x6e>
 8010b94:	b10a      	cbz	r2, 8010b9a <net::dhcp_bind()+0x6e>
 8010b96:	2200      	movs	r2, #0
 8010b98:	81da      	strh	r2, [r3, #14]
 8010b9a:	7a9a      	ldrb	r2, [r3, #10]
 8010b9c:	07d4      	lsls	r4, r2, #31
 8010b9e:	d520      	bpl.n	8010be2 <net::dhcp_bind()+0xb6>
 8010ba0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8010ba2:	7a1c      	ldrb	r4, [r3, #8]
 8010ba4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8010ba6:	2c0a      	cmp	r4, #10
 8010ba8:	bf1f      	itttt	ne
 8010baa:	240a      	movne	r4, #10
 8010bac:	811c      	strhne	r4, [r3, #8]
 8010bae:	2400      	movne	r4, #0
 8010bb0:	819c      	strhne	r4, [r3, #12]
 8010bb2:	7e84      	ldrb	r4, [r0, #26]
 8010bb4:	f044 0402 	orr.w	r4, r4, #2
 8010bb8:	7684      	strb	r4, [r0, #26]
 8010bba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bbe:	6a18      	ldr	r0, [r3, #32]
 8010bc0:	f000 bd2e 	b.w	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8010bc4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010bc8:	e7c1      	b.n	8010b4e <net::dhcp_bind()+0x22>
 8010bca:	2201      	movs	r2, #1
 8010bcc:	e7bf      	b.n	8010b4e <net::dhcp_bind()+0x22>
 8010bce:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010bd2:	e7c9      	b.n	8010b68 <net::dhcp_bind()+0x3c>
 8010bd4:	2201      	movs	r2, #1
 8010bd6:	e7c7      	b.n	8010b68 <net::dhcp_bind()+0x3c>
 8010bd8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010bdc:	e7d3      	b.n	8010b86 <net::dhcp_bind()+0x5a>
 8010bde:	2201      	movs	r2, #1
 8010be0:	e7d1      	b.n	8010b86 <net::dhcp_bind()+0x5a>
 8010be2:	6a1a      	ldr	r2, [r3, #32]
 8010be4:	0611      	lsls	r1, r2, #24
 8010be6:	d507      	bpl.n	8010bf8 <net::dhcp_bind()+0xcc>
 8010be8:	b2d2      	uxtb	r2, r2
 8010bea:	2abf      	cmp	r2, #191	@ 0xbf
 8010bec:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010bf0:	bf88      	it	hi
 8010bf2:	f06f 417f 	mvnhi.w	r1, #4278190080	@ 0xff000000
 8010bf6:	e7d4      	b.n	8010ba2 <net::dhcp_bind()+0x76>
 8010bf8:	21ff      	movs	r1, #255	@ 0xff
 8010bfa:	e7d2      	b.n	8010ba2 <net::dhcp_bind()+0x76>
 8010bfc:	20009b50 	andcs	r9, r0, r0, asr fp

08010c00 <net::message_init()>:
 8010c00:	b508      	push	{r3, lr}
 8010c02:	4b0c      	ldr	r3, [pc, #48]	@ (8010c34 <net::message_init()+0x34>)
 8010c04:	f44f 7209 	mov.w	r2, #548	@ 0x224
 8010c08:	2100      	movs	r1, #0
 8010c0a:	4618      	mov	r0, r3
 8010c0c:	f005 fdfc 	bl	8016808 <memset>
 8010c10:	f240 1201 	movw	r2, #257	@ 0x101
 8010c14:	8002      	strh	r2, [r0, #0]
 8010c16:	2206      	movs	r2, #6
 8010c18:	7082      	strb	r2, [r0, #2]
 8010c1a:	4a07      	ldr	r2, [pc, #28]	@ (8010c38 <net::message_init()+0x38>)
 8010c1c:	6951      	ldr	r1, [r2, #20]
 8010c1e:	8b12      	ldrh	r2, [r2, #24]
 8010c20:	8402      	strh	r2, [r0, #32]
 8010c22:	4a06      	ldr	r2, [pc, #24]	@ (8010c3c <net::message_init()+0x3c>)
 8010c24:	f8c0 20ec 	str.w	r2, [r0, #236]	@ 0xec
 8010c28:	f240 1235 	movw	r2, #309	@ 0x135
 8010c2c:	f8a0 20f0 	strh.w	r2, [r0, #240]	@ 0xf0
 8010c30:	61c1      	str	r1, [r0, #28]
 8010c32:	bd08      	pop	{r3, pc}
 8010c34:	10008000 	andne	r8, r0, r0
 8010c38:	20009b50 	andcs	r9, r0, r0, asr fp
 8010c3c:	63538263 	cmpvs	r3, #805306374	@ 0x30000006

08010c40 <net::dhcp_discover()>:
 8010c40:	4a27      	ldr	r2, [pc, #156]	@ (8010ce0 <net::dhcp_discover()+0xa0>)
 8010c42:	b513      	push	{r0, r1, r4, lr}
 8010c44:	6a14      	ldr	r4, [r2, #32]
 8010c46:	7a21      	ldrb	r1, [r4, #8]
 8010c48:	2906      	cmp	r1, #6
 8010c4a:	bf1c      	itt	ne
 8010c4c:	2106      	movne	r1, #6
 8010c4e:	8121      	strhne	r1, [r4, #8]
 8010c50:	f04f 0300 	mov.w	r3, #0
 8010c54:	6a10      	ldr	r0, [r2, #32]
 8010c56:	6223      	str	r3, [r4, #32]
 8010c58:	bf18      	it	ne
 8010c5a:	81a3      	strhne	r3, [r4, #12]
 8010c5c:	7a43      	ldrb	r3, [r0, #9]
 8010c5e:	b923      	cbnz	r3, 8010c6a <net::dhcp_discover()+0x2a>
 8010c60:	6843      	ldr	r3, [r0, #4]
 8010c62:	ba1b      	rev	r3, r3
 8010c64:	3301      	adds	r3, #1
 8010c66:	ba1b      	rev	r3, r3
 8010c68:	6043      	str	r3, [r0, #4]
 8010c6a:	491e      	ldr	r1, [pc, #120]	@ (8010ce4 <net::dhcp_discover()+0xa4>)
 8010c6c:	6843      	ldr	r3, [r0, #4]
 8010c6e:	604b      	str	r3, [r1, #4]
 8010c70:	f643 5301 	movw	r3, #15617	@ 0x3d01
 8010c74:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8010c78:	f240 1307 	movw	r3, #263	@ 0x107
 8010c7c:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8010c80:	8a93      	ldrh	r3, [r2, #20]
 8010c82:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8010c86:	8ad3      	ldrh	r3, [r2, #22]
 8010c88:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8010c8c:	8b13      	ldrh	r3, [r2, #24]
 8010c8e:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8010c92:	4a15      	ldr	r2, [pc, #84]	@ (8010ce8 <net::dhcp_discover()+0xa8>)
 8010c94:	4b15      	ldr	r3, [pc, #84]	@ (8010cec <net::dhcp_discover()+0xac>)
 8010c96:	e9c1 233f 	strd	r2, r3, [r1, #252]	@ 0xfc
 8010c9a:	23ff      	movs	r3, #255	@ 0xff
 8010c9c:	f881 3104 	strb.w	r3, [r1, #260]	@ 0x104
 8010ca0:	2343      	movs	r3, #67	@ 0x43
 8010ca2:	9300      	str	r3, [sp, #0]
 8010ca4:	6800      	ldr	r0, [r0, #0]
 8010ca6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010caa:	f240 1205 	movw	r2, #261	@ 0x105
 8010cae:	f000 ffa7 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010cb2:	7a63      	ldrb	r3, [r4, #9]
 8010cb4:	2bff      	cmp	r3, #255	@ 0xff
 8010cb6:	bf1c      	itt	ne
 8010cb8:	3301      	addne	r3, #1
 8010cba:	7263      	strbne	r3, [r4, #9]
 8010cbc:	7a62      	ldrb	r2, [r4, #9]
 8010cbe:	2a05      	cmp	r2, #5
 8010cc0:	bf9a      	itte	ls
 8010cc2:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8010cc6:	4093      	lslls	r3, r2
 8010cc8:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8010ccc:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010cd0:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010cd4:	fbb3 f3f2 	udiv	r3, r3, r2
 8010cd8:	81a3      	strh	r3, [r4, #12]
 8010cda:	b002      	add	sp, #8
 8010cdc:	bd10      	pop	{r4, pc}
 8010cde:	bf00      	nop
 8010ce0:	20009b50 	andcs	r9, r0, r0, asr fp
 8010ce4:	10008000 	andne	r8, r0, r0
 8010ce8:	03010637 	movweq	r0, #5687	@ 0x1637
 8010cec:	3b3a330f 	blcc	8e9d930 <_sidata+0xe82fbc>

08010cf0 <net::memcpy_ip(unsigned char*, unsigned long)>:
 8010cf0:	6001      	str	r1, [r0, #0]
 8010cf2:	4770      	bx	lr

08010cf4 <net::send_request()>:
 8010cf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010cf6:	4c31      	ldr	r4, [pc, #196]	@ (8010dbc <net::send_request()+0xc8>)
 8010cf8:	4d31      	ldr	r5, [pc, #196]	@ (8010dc0 <net::send_request()+0xcc>)
 8010cfa:	f643 5303 	movw	r3, #15619	@ 0x3d03
 8010cfe:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8010d02:	f240 1307 	movw	r3, #263	@ 0x107
 8010d06:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 8010d0a:	8aab      	ldrh	r3, [r5, #20]
 8010d0c:	f8a4 30f6 	strh.w	r3, [r4, #246]	@ 0xf6
 8010d10:	8aeb      	ldrh	r3, [r5, #22]
 8010d12:	f8a4 30f8 	strh.w	r3, [r4, #248]	@ 0xf8
 8010d16:	8b2b      	ldrh	r3, [r5, #24]
 8010d18:	6a2e      	ldr	r6, [r5, #32]
 8010d1a:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
 8010d1e:	f240 4332 	movw	r3, #1074	@ 0x432
 8010d22:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
 8010d26:	6a31      	ldr	r1, [r6, #32]
 8010d28:	f104 00fe 	add.w	r0, r4, #254	@ 0xfe
 8010d2c:	f7ff ffe0 	bl	8010cf0 <net::memcpy_ip(unsigned char*, unsigned long)>
 8010d30:	f240 4336 	movw	r3, #1078	@ 0x436
 8010d34:	f8a4 3102 	strh.w	r3, [r4, #258]	@ 0x102
 8010d38:	69f1      	ldr	r1, [r6, #28]
 8010d3a:	f504 7082 	add.w	r0, r4, #260	@ 0x104
 8010d3e:	f7ff ffd7 	bl	8010cf0 <net::memcpy_ip(unsigned char*, unsigned long)>
 8010d42:	230c      	movs	r3, #12
 8010d44:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
 8010d48:	69eb      	ldr	r3, [r5, #28]
 8010d4a:	221e      	movs	r2, #30
 8010d4c:	3b01      	subs	r3, #1
 8010d4e:	f204 1509 	addw	r5, r4, #265	@ 0x109
 8010d52:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010d56:	1c51      	adds	r1, r2, #1
 8010d58:	bb58      	cbnz	r0, 8010db2 <net::send_request()+0xbe>
 8010d5a:	f1a2 031e 	sub.w	r3, r2, #30
 8010d5e:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 8010d62:	18a3      	adds	r3, r4, r2
 8010d64:	440c      	add	r4, r1
 8010d66:	2037      	movs	r0, #55	@ 0x37
 8010d68:	2106      	movs	r1, #6
 8010d6a:	f883 00ec 	strb.w	r0, [r3, #236]	@ 0xec
 8010d6e:	f884 10ec 	strb.w	r1, [r4, #236]	@ 0xec
 8010d72:	f883 10f0 	strb.w	r1, [r3, #240]	@ 0xf0
 8010d76:	210f      	movs	r1, #15
 8010d78:	f883 10f1 	strb.w	r1, [r3, #241]	@ 0xf1
 8010d7c:	213a      	movs	r1, #58	@ 0x3a
 8010d7e:	f883 10f2 	strb.w	r1, [r3, #242]	@ 0xf2
 8010d82:	2001      	movs	r0, #1
 8010d84:	213b      	movs	r1, #59	@ 0x3b
 8010d86:	f883 00ee 	strb.w	r0, [r3, #238]	@ 0xee
 8010d8a:	f883 10f3 	strb.w	r1, [r3, #243]	@ 0xf3
 8010d8e:	2003      	movs	r0, #3
 8010d90:	21ff      	movs	r1, #255	@ 0xff
 8010d92:	f883 10f4 	strb.w	r1, [r3, #244]	@ 0xf4
 8010d96:	f883 00ef 	strb.w	r0, [r3, #239]	@ 0xef
 8010d9a:	2343      	movs	r3, #67	@ 0x43
 8010d9c:	9300      	str	r3, [sp, #0]
 8010d9e:	32f5      	adds	r2, #245	@ 0xf5
 8010da0:	4906      	ldr	r1, [pc, #24]	@ (8010dbc <net::send_request()+0xc8>)
 8010da2:	6830      	ldr	r0, [r6, #0]
 8010da4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010da8:	b292      	uxth	r2, r2
 8010daa:	f000 ff29 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010dae:	b002      	add	sp, #8
 8010db0:	bd70      	pop	{r4, r5, r6, pc}
 8010db2:	f805 0f01 	strb.w	r0, [r5, #1]!
 8010db6:	460a      	mov	r2, r1
 8010db8:	e7cb      	b.n	8010d52 <net::send_request()+0x5e>
 8010dba:	bf00      	nop
 8010dbc:	10008000 	andne	r8, r0, r0
 8010dc0:	20009b50 	andcs	r9, r0, r0, asr fp

08010dc4 <net::dhcp_select()>:
 8010dc4:	4b11      	ldr	r3, [pc, #68]	@ (8010e0c <net::dhcp_select()+0x48>)
 8010dc6:	b510      	push	{r4, lr}
 8010dc8:	6a1c      	ldr	r4, [r3, #32]
 8010dca:	7a23      	ldrb	r3, [r4, #8]
 8010dcc:	2b01      	cmp	r3, #1
 8010dce:	bf1f      	itttt	ne
 8010dd0:	2301      	movne	r3, #1
 8010dd2:	8123      	strhne	r3, [r4, #8]
 8010dd4:	2300      	movne	r3, #0
 8010dd6:	81a3      	strhne	r3, [r4, #12]
 8010dd8:	f7ff ff8c 	bl	8010cf4 <net::send_request()>
 8010ddc:	7a63      	ldrb	r3, [r4, #9]
 8010dde:	2bff      	cmp	r3, #255	@ 0xff
 8010de0:	bf1c      	itt	ne
 8010de2:	3301      	addne	r3, #1
 8010de4:	7263      	strbne	r3, [r4, #9]
 8010de6:	7a62      	ldrb	r2, [r4, #9]
 8010de8:	2a05      	cmp	r2, #5
 8010dea:	bf9d      	ittte	ls
 8010dec:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8010df0:	4093      	lslls	r3, r2
 8010df2:	b29b      	uxthls	r3, r3
 8010df4:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8010df8:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010dfc:	b29b      	uxth	r3, r3
 8010dfe:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010e02:	fbb3 f3f2 	udiv	r3, r3, r2
 8010e06:	81a3      	strh	r3, [r4, #12]
 8010e08:	bd10      	pop	{r4, pc}
 8010e0a:	bf00      	nop
 8010e0c:	20009b50 	andcs	r9, r0, r0, asr fp

08010e10 <net::dhcp_reboot()>:
 8010e10:	4b12      	ldr	r3, [pc, #72]	@ (8010e5c <net::dhcp_reboot()+0x4c>)
 8010e12:	b510      	push	{r4, lr}
 8010e14:	6a1c      	ldr	r4, [r3, #32]
 8010e16:	7a23      	ldrb	r3, [r4, #8]
 8010e18:	2b03      	cmp	r3, #3
 8010e1a:	bf1f      	itttt	ne
 8010e1c:	2303      	movne	r3, #3
 8010e1e:	8123      	strhne	r3, [r4, #8]
 8010e20:	2300      	movne	r3, #0
 8010e22:	81a3      	strhne	r3, [r4, #12]
 8010e24:	f7ff ff66 	bl	8010cf4 <net::send_request()>
 8010e28:	7a63      	ldrb	r3, [r4, #9]
 8010e2a:	2bff      	cmp	r3, #255	@ 0xff
 8010e2c:	bf1c      	itt	ne
 8010e2e:	3301      	addne	r3, #1
 8010e30:	7263      	strbne	r3, [r4, #9]
 8010e32:	7a63      	ldrb	r3, [r4, #9]
 8010e34:	2b09      	cmp	r3, #9
 8010e36:	bf9f      	itttt	ls
 8010e38:	ebc3 1243 	rsbls	r2, r3, r3, lsl #5
 8010e3c:	eb03 0382 	addls.w	r3, r3, r2, lsl #2
 8010e40:	00db      	lslls	r3, r3, #3
 8010e42:	b29b      	uxthls	r3, r3
 8010e44:	bf88      	it	hi
 8010e46:	f242 7310 	movwhi	r3, #10000	@ 0x2710
 8010e4a:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8010e4e:	b29b      	uxth	r3, r3
 8010e50:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010e54:	fbb3 f3f2 	udiv	r3, r3, r2
 8010e58:	81a3      	strh	r3, [r4, #12]
 8010e5a:	bd10      	pop	{r4, pc}
 8010e5c:	20009b50 	andcs	r9, r0, r0, asr fp

08010e60 <net::memcpy_ip(unsigned char const*)>:
 8010e60:	6800      	ldr	r0, [r0, #0]
 8010e62:	4770      	bx	lr

08010e64 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
 8010e64:	4b0e      	ldr	r3, [pc, #56]	@ (8010ea0 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x3c>)
 8010e66:	b510      	push	{r4, lr}
 8010e68:	6a1c      	ldr	r4, [r3, #32]
 8010e6a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010e6c:	b913      	cbnz	r3, 8010e74 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x10>
 8010e6e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010e70:	085b      	lsrs	r3, r3, #1
 8010e72:	6323      	str	r3, [r4, #48]	@ 0x30
 8010e74:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8010e76:	b923      	cbnz	r3, 8010e82 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x1e>
 8010e78:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010e7a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8010e7e:	08db      	lsrs	r3, r3, #3
 8010e80:	6363      	str	r3, [r4, #52]	@ 0x34
 8010e82:	3010      	adds	r0, #16
 8010e84:	f7ff ffec 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 8010e88:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8010e8a:	7aa3      	ldrb	r3, [r4, #10]
 8010e8c:	6220      	str	r0, [r4, #32]
 8010e8e:	b11a      	cbz	r2, 8010e98 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x34>
 8010e90:	f043 0301 	orr.w	r3, r3, #1
 8010e94:	72a3      	strb	r3, [r4, #10]
 8010e96:	bd10      	pop	{r4, pc}
 8010e98:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8010e9c:	e7fa      	b.n	8010e94 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x30>
 8010e9e:	bf00      	nop
 8010ea0:	20009b50 	andcs	r9, r0, r0, asr fp

08010ea4 <net::dhcp_inform()>:
 8010ea4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ea6:	2044      	movs	r0, #68	@ 0x44
 8010ea8:	f000 fe52 	bl	8011b50 <net::udp_begin(unsigned short)>
 8010eac:	4c16      	ldr	r4, [pc, #88]	@ (8010f08 <net::dhcp_inform()+0x64>)
 8010eae:	4d17      	ldr	r5, [pc, #92]	@ (8010f0c <net::dhcp_inform()+0x68>)
 8010eb0:	4606      	mov	r6, r0
 8010eb2:	f7ff fea5 	bl	8010c00 <net::message_init()>
 8010eb6:	6829      	ldr	r1, [r5, #0]
 8010eb8:	4620      	mov	r0, r4
 8010eba:	f7ff ff19 	bl	8010cf0 <net::memcpy_ip(unsigned char*, unsigned long)>
 8010ebe:	f1a4 010c 	sub.w	r1, r4, #12
 8010ec2:	f643 5308 	movw	r3, #15624	@ 0x3d08
 8010ec6:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8010eca:	f240 1307 	movw	r3, #263	@ 0x107
 8010ece:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8010ed2:	8aab      	ldrh	r3, [r5, #20]
 8010ed4:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8010ed8:	8aeb      	ldrh	r3, [r5, #22]
 8010eda:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8010ede:	8b2b      	ldrh	r3, [r5, #24]
 8010ee0:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8010ee4:	23ff      	movs	r3, #255	@ 0xff
 8010ee6:	f881 30fc 	strb.w	r3, [r1, #252]	@ 0xfc
 8010eea:	2343      	movs	r3, #67	@ 0x43
 8010eec:	9300      	str	r3, [sp, #0]
 8010eee:	4630      	mov	r0, r6
 8010ef0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010ef4:	22fd      	movs	r2, #253	@ 0xfd
 8010ef6:	f000 fe83 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010efa:	2044      	movs	r0, #68	@ 0x44
 8010efc:	b002      	add	sp, #8
 8010efe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f02:	f000 be3b 	b.w	8011b7c <net::udp_end(unsigned short)>
 8010f06:	bf00      	nop
 8010f08:	1000800c 	andne	r8, r0, ip
 8010f0c:	20009b50 	andcs	r9, r0, r0, asr fp

08010f10 <net::dhcp_start()>:
 8010f10:	b570      	push	{r4, r5, r6, lr}
 8010f12:	4d20      	ldr	r5, [pc, #128]	@ (8010f94 <net::dhcp_start()+0x84>)
 8010f14:	6a2c      	ldr	r4, [r5, #32]
 8010f16:	b96c      	cbnz	r4, 8010f34 <net::dhcp_start()+0x24>
 8010f18:	2048      	movs	r0, #72	@ 0x48
 8010f1a:	f006 f967 	bl	80171ec <operator new(unsigned int)>
 8010f1e:	4b1e      	ldr	r3, [pc, #120]	@ (8010f98 <net::dhcp_start()+0x88>)
 8010f20:	6228      	str	r0, [r5, #32]
 8010f22:	681b      	ldr	r3, [r3, #0]
 8010f24:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 8010f28:	2907      	cmp	r1, #7
 8010f2a:	4604      	mov	r4, r0
 8010f2c:	d919      	bls.n	8010f62 <net::dhcp_start()+0x52>
 8010f2e:	481b      	ldr	r0, [pc, #108]	@ (8010f9c <net::dhcp_start()+0x8c>)
 8010f30:	f003 fcaa 	bl	8014888 <console_error>
 8010f34:	2248      	movs	r2, #72	@ 0x48
 8010f36:	2100      	movs	r1, #0
 8010f38:	4620      	mov	r0, r4
 8010f3a:	f005 fc65 	bl	8016808 <memset>
 8010f3e:	2044      	movs	r0, #68	@ 0x44
 8010f40:	f000 fe06 	bl	8011b50 <net::udp_begin(unsigned short)>
 8010f44:	6020      	str	r0, [r4, #0]
 8010f46:	f7ff fe5b 	bl	8010c00 <net::message_init()>
 8010f4a:	7ead      	ldrb	r5, [r5, #26]
 8010f4c:	f015 0501 	ands.w	r5, r5, #1
 8010f50:	d11d      	bne.n	8010f8e <net::dhcp_start()+0x7e>
 8010f52:	7a23      	ldrb	r3, [r4, #8]
 8010f54:	2b02      	cmp	r3, #2
 8010f56:	d002      	beq.n	8010f5e <net::dhcp_start()+0x4e>
 8010f58:	2302      	movs	r3, #2
 8010f5a:	8123      	strh	r3, [r4, #8]
 8010f5c:	81a5      	strh	r5, [r4, #12]
 8010f5e:	4628      	mov	r0, r5
 8010f60:	bd70      	pop	{r4, r5, r6, pc}
 8010f62:	f8d3 00a4 	ldr.w	r0, [r3, #164]	@ 0xa4
 8010f66:	4a0e      	ldr	r2, [pc, #56]	@ (8010fa0 <net::dhcp_start()+0x90>)
 8010f68:	1c46      	adds	r6, r0, #1
 8010f6a:	f8c3 60a4 	str.w	r6, [r3, #164]	@ 0xa4
 8010f6e:	6812      	ldr	r2, [r2, #0]
 8010f70:	1c4e      	adds	r6, r1, #1
 8010f72:	f8c3 60a0 	str.w	r6, [r3, #160]	@ 0xa0
 8010f76:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8010f7a:	f502 72fa 	add.w	r2, r2, #500	@ 0x1f4
 8010f7e:	621a      	str	r2, [r3, #32]
 8010f80:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8010f84:	e9c3 2009 	strd	r2, r0, [r3, #36]	@ 0x24
 8010f88:	4a06      	ldr	r2, [pc, #24]	@ (8010fa4 <net::dhcp_start()+0x94>)
 8010f8a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8010f8c:	e7d2      	b.n	8010f34 <net::dhcp_start()+0x24>
 8010f8e:	f7ff fe57 	bl	8010c40 <net::dhcp_discover()>
 8010f92:	e7e4      	b.n	8010f5e <net::dhcp_start()+0x4e>
 8010f94:	20009b50 	andcs	r9, r0, r0, asr fp
 8010f98:	20009d00 	andcs	r9, r0, r0, lsl #26
 8010f9c:	08017c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr}
 8010fa0:	200145c8 	andcs	r4, r1, r8, asr #11
 8010fa4:	0801104d 	stmdaeq	r1, {r0, r2, r3, r6, ip}

08010fa8 <net::dhcp_release_and_stop()>:
 8010fa8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010fac:	4d25      	ldr	r5, [pc, #148]	@ (8011044 <net::dhcp_release_and_stop()+0x9c>)
 8010fae:	6a2c      	ldr	r4, [r5, #32]
 8010fb0:	2c00      	cmp	r4, #0
 8010fb2:	d044      	beq.n	801103e <net::dhcp_release_and_stop()+0x96>
 8010fb4:	7a23      	ldrb	r3, [r4, #8]
 8010fb6:	2b00      	cmp	r3, #0
 8010fb8:	d041      	beq.n	801103e <net::dhcp_release_and_stop()+0x96>
 8010fba:	2600      	movs	r6, #0
 8010fbc:	69e7      	ldr	r7, [r4, #28]
 8010fbe:	61e6      	str	r6, [r4, #28]
 8010fc0:	2218      	movs	r2, #24
 8010fc2:	4631      	mov	r1, r6
 8010fc4:	f104 0020 	add.w	r0, r4, #32
 8010fc8:	f005 fc1e 	bl	8016808 <memset>
 8010fcc:	6a2b      	ldr	r3, [r5, #32]
 8010fce:	8266      	strh	r6, [r4, #18]
 8010fd0:	6166      	str	r6, [r4, #20]
 8010fd2:	8326      	strh	r6, [r4, #24]
 8010fd4:	b363      	cbz	r3, 8011030 <net::dhcp_release_and_stop()+0x88>
 8010fd6:	7a1b      	ldrb	r3, [r3, #8]
 8010fd8:	2b0a      	cmp	r3, #10
 8010fda:	d002      	beq.n	8010fe2 <net::dhcp_release_and_stop()+0x3a>
 8010fdc:	3b04      	subs	r3, #4
 8010fde:	2b01      	cmp	r3, #1
 8010fe0:	d826      	bhi.n	8011030 <net::dhcp_release_and_stop()+0x88>
 8010fe2:	2600      	movs	r6, #0
 8010fe4:	8126      	strh	r6, [r4, #8]
 8010fe6:	81a6      	strh	r6, [r4, #12]
 8010fe8:	4c17      	ldr	r4, [pc, #92]	@ (8011048 <net::dhcp_release_and_stop()+0xa0>)
 8010fea:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8010fee:	f243 6307 	movw	r3, #13831	@ 0x3607
 8010ff2:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8010ff6:	2304      	movs	r3, #4
 8010ff8:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 8010ffc:	f8d8 101c 	ldr.w	r1, [r8, #28]
 8011000:	f104 00f5 	add.w	r0, r4, #245	@ 0xf5
 8011004:	f7ff fe74 	bl	8010cf0 <net::memcpy_ip(unsigned char*, unsigned long)>
 8011008:	23ff      	movs	r3, #255	@ 0xff
 801100a:	f884 30f9 	strb.w	r3, [r4, #249]	@ 0xf9
 801100e:	2343      	movs	r3, #67	@ 0x43
 8011010:	9300      	str	r3, [sp, #0]
 8011012:	22fa      	movs	r2, #250	@ 0xfa
 8011014:	4621      	mov	r1, r4
 8011016:	f8d8 0000 	ldr.w	r0, [r8]
 801101a:	463b      	mov	r3, r7
 801101c:	f000 fdf0 	bl	8011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8011020:	2044      	movs	r0, #68	@ 0x44
 8011022:	f000 fdab 	bl	8011b7c <net::udp_end(unsigned short)>
 8011026:	4632      	mov	r2, r6
 8011028:	4631      	mov	r1, r6
 801102a:	4630      	mov	r0, r6
 801102c:	f000 faf8 	bl	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011030:	6a28      	ldr	r0, [r5, #32]
 8011032:	b110      	cbz	r0, 801103a <net::dhcp_release_and_stop()+0x92>
 8011034:	2148      	movs	r1, #72	@ 0x48
 8011036:	f006 f8d7 	bl	80171e8 <operator delete(void*, unsigned int)>
 801103a:	2300      	movs	r3, #0
 801103c:	622b      	str	r3, [r5, #32]
 801103e:	b002      	add	sp, #8
 8011040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011044:	20009b50 	andcs	r9, r0, r0, asr fp
 8011048:	10008000 	andne	r8, r0, r0

0801104c <net::dhcp_fine_tmr()>:
 801104c:	b508      	push	{r3, lr}
 801104e:	4b21      	ldr	r3, [pc, #132]	@ (80110d4 <net::dhcp_fine_tmr()+0x88>)
 8011050:	6a1b      	ldr	r3, [r3, #32]
 8011052:	b123      	cbz	r3, 801105e <net::dhcp_fine_tmr()+0x12>
 8011054:	899a      	ldrh	r2, [r3, #12]
 8011056:	2a01      	cmp	r2, #1
 8011058:	d902      	bls.n	8011060 <net::dhcp_fine_tmr()+0x14>
 801105a:	3a01      	subs	r2, #1
 801105c:	819a      	strh	r2, [r3, #12]
 801105e:	bd08      	pop	{r3, pc}
 8011060:	d1fd      	bne.n	801105e <net::dhcp_fine_tmr()+0x12>
 8011062:	2200      	movs	r2, #0
 8011064:	819a      	strh	r2, [r3, #12]
 8011066:	7a1a      	ldrb	r2, [r3, #8]
 8011068:	3a01      	subs	r2, #1
 801106a:	2a0b      	cmp	r2, #11
 801106c:	d8f7      	bhi.n	801105e <net::dhcp_fine_tmr()+0x12>
 801106e:	a101      	add	r1, pc, #4	@ (adr r1, 8011074 <net::dhcp_fine_tmr()+0x28>)
 8011070:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8011074:	080110a5 	stmdaeq	r1, {r0, r2, r5, r7, ip}
 8011078:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 801107c:	080110bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, ip}
 8011080:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 8011084:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 8011088:	080110cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, ip}
 801108c:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 8011090:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 8011094:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 8011098:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 801109c:	0801105f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, ip}
 80110a0:	080110cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, ip}
 80110a4:	7a5b      	ldrb	r3, [r3, #9]
 80110a6:	2b05      	cmp	r3, #5
 80110a8:	d803      	bhi.n	80110b2 <net::dhcp_fine_tmr()+0x66>
 80110aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80110ae:	f7ff be89 	b.w	8010dc4 <net::dhcp_select()>
 80110b2:	f7ff ff79 	bl	8010fa8 <net::dhcp_release_and_stop()>
 80110b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80110ba:	f7ff bf29 	b.w	8010f10 <net::dhcp_start()>
 80110be:	7a5b      	ldrb	r3, [r3, #9]
 80110c0:	2b01      	cmp	r3, #1
 80110c2:	d803      	bhi.n	80110cc <net::dhcp_fine_tmr()+0x80>
 80110c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80110c8:	f7ff bea2 	b.w	8010e10 <net::dhcp_reboot()>
 80110cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80110d0:	f7ff bdb6 	b.w	8010c40 <net::dhcp_discover()>
 80110d4:	20009b50 	andcs	r9, r0, r0, asr fp

080110d8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
 80110d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80110dc:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 8011230 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x158>
 80110e0:	f8d8 5020 	ldr.w	r5, [r8, #32]
 80110e4:	4606      	mov	r6, r0
 80110e6:	4689      	mov	r9, r1
 80110e8:	2218      	movs	r2, #24
 80110ea:	2100      	movs	r1, #0
 80110ec:	f105 0020 	add.w	r0, r5, #32
 80110f0:	2700      	movs	r7, #0
 80110f2:	f106 04f0 	add.w	r4, r6, #240	@ 0xf0
 80110f6:	f005 fb87 	bl	8016808 <memset>
 80110fa:	44a1      	add	r9, r4
 80110fc:	61ef      	str	r7, [r5, #28]
 80110fe:	454c      	cmp	r4, r9
 8011100:	d318      	bcc.n	8011134 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x5c>
 8011102:	2f02      	cmp	r7, #2
 8011104:	d167      	bne.n	80111d6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xfe>
 8011106:	3610      	adds	r6, #16
 8011108:	4630      	mov	r0, r6
 801110a:	f7ff fea9 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 801110e:	7a2b      	ldrb	r3, [r5, #8]
 8011110:	6228      	str	r0, [r5, #32]
 8011112:	2b06      	cmp	r3, #6
 8011114:	d170      	bne.n	80111f8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011116:	f8d8 4020 	ldr.w	r4, [r8, #32]
 801111a:	69e3      	ldr	r3, [r4, #28]
 801111c:	2b00      	cmp	r3, #0
 801111e:	d06b      	beq.n	80111f8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011120:	2300      	movs	r3, #0
 8011122:	81a3      	strh	r3, [r4, #12]
 8011124:	4630      	mov	r0, r6
 8011126:	f7ff fe9b 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 801112a:	6220      	str	r0, [r4, #32]
 801112c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011130:	f7ff be48 	b.w	8010dc4 <net::dhcp_select()>
 8011134:	7823      	ldrb	r3, [r4, #0]
 8011136:	2b3b      	cmp	r3, #59	@ 0x3b
 8011138:	d822      	bhi.n	8011180 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xa8>
 801113a:	2b32      	cmp	r3, #50	@ 0x32
 801113c:	d808      	bhi.n	8011150 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x78>
 801113e:	2b01      	cmp	r3, #1
 8011140:	d027      	beq.n	8011192 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xba>
 8011142:	2b03      	cmp	r3, #3
 8011144:	d02b      	beq.n	801119e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc6>
 8011146:	b1fb      	cbz	r3, 8011188 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb0>
 8011148:	7863      	ldrb	r3, [r4, #1]
 801114a:	3302      	adds	r3, #2
 801114c:	441c      	add	r4, r3
 801114e:	e7d6      	b.n	80110fe <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011150:	3b33      	subs	r3, #51	@ 0x33
 8011152:	2b08      	cmp	r3, #8
 8011154:	d8f8      	bhi.n	8011148 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8011156:	a201      	add	r2, pc, #4	@ (adr r2, 801115c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x84>)
 8011158:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801115c:	080111b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, ip}
 8011160:	08011149 	stmdaeq	r1, {r0, r3, r6, r8, ip}
 8011164:	0801118d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip}
 8011168:	080111a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, ip}
 801116c:	08011149 	stmdaeq	r1, {r0, r3, r6, r8, ip}
 8011170:	08011149 	stmdaeq	r1, {r0, r3, r6, r8, ip}
 8011174:	08011149 	stmdaeq	r1, {r0, r3, r6, r8, ip}
 8011178:	080111bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, ip}
 801117c:	080111cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, ip}
 8011180:	2bff      	cmp	r3, #255	@ 0xff
 8011182:	d1e1      	bne.n	8011148 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8011184:	464c      	mov	r4, r9
 8011186:	e7ba      	b.n	80110fe <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011188:	3401      	adds	r4, #1
 801118a:	e7b8      	b.n	80110fe <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 801118c:	78a7      	ldrb	r7, [r4, #2]
 801118e:	3403      	adds	r4, #3
 8011190:	e7b5      	b.n	80110fe <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8011192:	1ca0      	adds	r0, r4, #2
 8011194:	f7ff fe64 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 8011198:	6268      	str	r0, [r5, #36]	@ 0x24
 801119a:	3406      	adds	r4, #6
 801119c:	e7af      	b.n	80110fe <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 801119e:	1ca0      	adds	r0, r4, #2
 80111a0:	f7ff fe5e 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 80111a4:	62a8      	str	r0, [r5, #40]	@ 0x28
 80111a6:	e7f8      	b.n	801119a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 80111a8:	1ca0      	adds	r0, r4, #2
 80111aa:	f7ff fe59 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 80111ae:	61e8      	str	r0, [r5, #28]
 80111b0:	e7f3      	b.n	801119a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 80111b2:	1ca0      	adds	r0, r4, #2
 80111b4:	f7ff fe54 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 80111b8:	ba00      	rev	r0, r0
 80111ba:	62e8      	str	r0, [r5, #44]	@ 0x2c
 80111bc:	e7ed      	b.n	801119a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 80111be:	1ca0      	adds	r0, r4, #2
 80111c0:	f7ff fe4e 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 80111c4:	ba00      	rev	r0, r0
 80111c6:	6328      	str	r0, [r5, #48]	@ 0x30
 80111c8:	e7e7      	b.n	801119a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 80111ca:	1ca0      	adds	r0, r4, #2
 80111cc:	f7ff fe48 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 80111d0:	ba00      	rev	r0, r0
 80111d2:	6368      	str	r0, [r5, #52]	@ 0x34
 80111d4:	e7e1      	b.n	801119a <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 80111d6:	2f05      	cmp	r7, #5
 80111d8:	d110      	bne.n	80111fc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x124>
 80111da:	7a2b      	ldrb	r3, [r5, #8]
 80111dc:	f003 02fd 	and.w	r2, r3, #253	@ 0xfd
 80111e0:	2a01      	cmp	r2, #1
 80111e2:	d106      	bne.n	80111f2 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x11a>
 80111e4:	4630      	mov	r0, r6
 80111e6:	f7ff fe3d 	bl	8010e64 <net::dhcp_handle_ack(net::dhcp::Message const*)>
 80111ea:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80111ee:	f7ff bc9d 	b.w	8010b2c <net::dhcp_bind()>
 80111f2:	3b04      	subs	r3, #4
 80111f4:	2b01      	cmp	r3, #1
 80111f6:	d9f5      	bls.n	80111e4 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x10c>
 80111f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80111fc:	2f06      	cmp	r7, #6
 80111fe:	d1fb      	bne.n	80111f8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8011200:	7a2b      	ldrb	r3, [r5, #8]
 8011202:	1eda      	subs	r2, r3, #3
 8011204:	2a02      	cmp	r2, #2
 8011206:	d901      	bls.n	801120c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x134>
 8011208:	2b01      	cmp	r3, #1
 801120a:	d1f5      	bne.n	80111f8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 801120c:	f8d8 3020 	ldr.w	r3, [r8, #32]
 8011210:	7a1a      	ldrb	r2, [r3, #8]
 8011212:	2a0c      	cmp	r2, #12
 8011214:	bf1f      	itttt	ne
 8011216:	220c      	movne	r2, #12
 8011218:	811a      	strhne	r2, [r3, #8]
 801121a:	2200      	movne	r2, #0
 801121c:	819a      	strhne	r2, [r3, #12]
 801121e:	2200      	movs	r2, #0
 8011220:	4611      	mov	r1, r2
 8011222:	4610      	mov	r0, r2
 8011224:	f000 f9fc 	bl	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011228:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801122c:	f7ff bd08 	b.w	8010c40 <net::dhcp_discover()>
 8011230:	20009b50 	andcs	r9, r0, r0, asr fp

08011234 <net::igmp_send_report(unsigned long)>:
 8011234:	4a19      	ldr	r2, [pc, #100]	@ (801129c <net::igmp_send_report(unsigned long)+0x68>)
 8011236:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011238:	f3c0 2106 	ubfx	r1, r0, #8, #7
 801123c:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8011240:	4c17      	ldr	r4, [pc, #92]	@ (80112a0 <net::igmp_send_report(unsigned long)+0x6c>)
 8011242:	70d1      	strb	r1, [r2, #3]
 8011244:	7113      	strb	r3, [r2, #4]
 8011246:	f3c0 6107 	ubfx	r1, r0, #24, #8
 801124a:	4613      	mov	r3, r2
 801124c:	7151      	strb	r1, [r2, #5]
 801124e:	4605      	mov	r5, r0
 8011250:	4622      	mov	r2, r4
 8011252:	f103 0c06 	add.w	ip, r3, #6
 8011256:	f813 1b01 	ldrb.w	r1, [r3], #1
 801125a:	f802 1b01 	strb.w	r1, [r2], #1
 801125e:	4563      	cmp	r3, ip
 8011260:	d1f9      	bne.n	8011256 <net::igmp_send_report(unsigned long)+0x22>
 8011262:	4e10      	ldr	r6, [pc, #64]	@ (80112a4 <net::igmp_send_report(unsigned long)+0x70>)
 8011264:	4810      	ldr	r0, [pc, #64]	@ (80112a8 <net::igmp_send_report(unsigned long)+0x74>)
 8011266:	8833      	ldrh	r3, [r6, #0]
 8011268:	8263      	strh	r3, [r4, #18]
 801126a:	2700      	movs	r7, #0
 801126c:	2118      	movs	r1, #24
 801126e:	f8c4 501e 	str.w	r5, [r4, #30]
 8011272:	8327      	strh	r7, [r4, #24]
 8011274:	f000 f90e 	bl	8011494 <net::net_chksum(void const*, unsigned long)>
 8011278:	2120      	movs	r1, #32
 801127a:	8320      	strh	r0, [r4, #24]
 801127c:	480a      	ldr	r0, [pc, #40]	@ (80112a8 <net::igmp_send_report(unsigned long)+0x74>)
 801127e:	f8c4 502a 	str.w	r5, [r4, #42]	@ 0x2a
 8011282:	8527      	strh	r7, [r4, #40]	@ 0x28
 8011284:	f000 f906 	bl	8011494 <net::net_chksum(void const*, unsigned long)>
 8011288:	212e      	movs	r1, #46	@ 0x2e
 801128a:	4603      	mov	r3, r0
 801128c:	4804      	ldr	r0, [pc, #16]	@ (80112a0 <net::igmp_send_report(unsigned long)+0x6c>)
 801128e:	8523      	strh	r3, [r4, #40]	@ 0x28
 8011290:	f001 f924 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 8011294:	8833      	ldrh	r3, [r6, #0]
 8011296:	3301      	adds	r3, #1
 8011298:	8033      	strh	r3, [r6, #0]
 801129a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801129c:	10008348 	andne	r8, r0, r8, asr #6
 80112a0:	10008380 	andne	r8, r0, r0, lsl #7
 80112a4:	10008224 	andne	r8, r0, r4, lsr #4
 80112a8:	1000838e 	andne	r8, r0, lr, lsl #7

080112ac <net::igmp_timer()>:
 80112ac:	b570      	push	{r4, r5, r6, lr}
 80112ae:	4c12      	ldr	r4, [pc, #72]	@ (80112f8 <net::igmp_timer()+0x4c>)
 80112b0:	4e12      	ldr	r6, [pc, #72]	@ (80112fc <net::igmp_timer()+0x50>)
 80112b2:	f504 7590 	add.w	r5, r4, #288	@ 0x120
 80112b6:	e002      	b.n	80112be <net::igmp_timer()+0x12>
 80112b8:	3408      	adds	r4, #8
 80112ba:	42ac      	cmp	r4, r5
 80112bc:	d01a      	beq.n	80112f4 <net::igmp_timer()+0x48>
 80112be:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80112c2:	1e53      	subs	r3, r2, #1
 80112c4:	b29b      	uxth	r3, r3
 80112c6:	2a00      	cmp	r2, #0
 80112c8:	d0f6      	beq.n	80112b8 <net::igmp_timer()+0xc>
 80112ca:	f824 3c04 	strh.w	r3, [r4, #-4]
 80112ce:	2b00      	cmp	r3, #0
 80112d0:	d1f2      	bne.n	80112b8 <net::igmp_timer()+0xc>
 80112d2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80112d6:	2b01      	cmp	r3, #1
 80112d8:	d1ee      	bne.n	80112b8 <net::igmp_timer()+0xc>
 80112da:	f854 0c08 	ldr.w	r0, [r4, #-8]
 80112de:	42b0      	cmp	r0, r6
 80112e0:	f04f 0302 	mov.w	r3, #2
 80112e4:	d0e8      	beq.n	80112b8 <net::igmp_timer()+0xc>
 80112e6:	f804 3c02 	strb.w	r3, [r4, #-2]
 80112ea:	3408      	adds	r4, #8
 80112ec:	f7ff ffa2 	bl	8011234 <net::igmp_send_report(unsigned long)>
 80112f0:	42ac      	cmp	r4, r5
 80112f2:	d1e4      	bne.n	80112be <net::igmp_timer()+0x12>
 80112f4:	bd70      	pop	{r4, r5, r6, pc}
 80112f6:	bf00      	nop
 80112f8:	10008230 	andne	r8, r0, r0, lsr r2
 80112fc:	010000e0 	smlatteq	r0, r0, r0, r0

08011300 <net::igmp_set_ip()>:
 8011300:	4b04      	ldr	r3, [pc, #16]	@ (8011314 <net::igmp_set_ip()+0x14>)
 8011302:	4905      	ldr	r1, [pc, #20]	@ (8011318 <net::igmp_set_ip()+0x18>)
 8011304:	4a05      	ldr	r2, [pc, #20]	@ (801131c <net::igmp_set_ip()+0x1c>)
 8011306:	681b      	ldr	r3, [r3, #0]
 8011308:	f8c1 301a 	str.w	r3, [r1, #26]
 801130c:	f8c2 301a 	str.w	r3, [r2, #26]
 8011310:	4770      	bx	lr
 8011312:	bf00      	nop
 8011314:	20009b50 	andcs	r9, r0, r0, asr fp
 8011318:	10008380 	andne	r8, r0, r0, lsl #7
 801131c:	10008350 	andne	r8, r0, r0, asr r3

08011320 <net::igmp_join(unsigned long)>:
 8011320:	f000 03e0 	and.w	r3, r0, #224	@ 0xe0
 8011324:	2be0      	cmp	r3, #224	@ 0xe0
 8011326:	d10c      	bne.n	8011342 <net::igmp_join(unsigned long)+0x22>
 8011328:	490b      	ldr	r1, [pc, #44]	@ (8011358 <net::igmp_join(unsigned long)+0x38>)
 801132a:	2300      	movs	r3, #0
 801132c:	e003      	b.n	8011336 <net::igmp_join(unsigned long)+0x16>
 801132e:	b14a      	cbz	r2, 8011344 <net::igmp_join(unsigned long)+0x24>
 8011330:	3301      	adds	r3, #1
 8011332:	2b24      	cmp	r3, #36	@ 0x24
 8011334:	d005      	beq.n	8011342 <net::igmp_join(unsigned long)+0x22>
 8011336:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 801133a:	4282      	cmp	r2, r0
 801133c:	eb01 0cc3 	add.w	ip, r1, r3, lsl #3
 8011340:	d1f5      	bne.n	801132e <net::igmp_join(unsigned long)+0xe>
 8011342:	4770      	bx	lr
 8011344:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
 8011348:	2201      	movs	r2, #1
 801134a:	2302      	movs	r3, #2
 801134c:	f88c 2006 	strb.w	r2, [ip, #6]
 8011350:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011354:	f7ff bf6e 	b.w	8011234 <net::igmp_send_report(unsigned long)>
 8011358:	10008228 	andne	r8, r0, r8, lsr #4

0801135c <net::igmp_leave(unsigned long)>:
 801135c:	b570      	push	{r4, r5, r6, lr}
 801135e:	4c0f      	ldr	r4, [pc, #60]	@ (801139c <net::igmp_leave(unsigned long)+0x40>)
 8011360:	4602      	mov	r2, r0
 8011362:	f504 7190 	add.w	r1, r4, #288	@ 0x120
 8011366:	e002      	b.n	801136e <net::igmp_leave(unsigned long)+0x12>
 8011368:	3408      	adds	r4, #8
 801136a:	428c      	cmp	r4, r1
 801136c:	d014      	beq.n	8011398 <net::igmp_leave(unsigned long)+0x3c>
 801136e:	6823      	ldr	r3, [r4, #0]
 8011370:	4293      	cmp	r3, r2
 8011372:	d1f9      	bne.n	8011368 <net::igmp_leave(unsigned long)+0xc>
 8011374:	4e0a      	ldr	r6, [pc, #40]	@ (80113a0 <net::igmp_leave(unsigned long)+0x44>)
 8011376:	480b      	ldr	r0, [pc, #44]	@ (80113a4 <net::igmp_leave(unsigned long)+0x48>)
 8011378:	8833      	ldrh	r3, [r6, #0]
 801137a:	8243      	strh	r3, [r0, #18]
 801137c:	2500      	movs	r5, #0
 801137e:	212e      	movs	r1, #46	@ 0x2e
 8011380:	f8c0 202a 	str.w	r2, [r0, #42]	@ 0x2a
 8011384:	8305      	strh	r5, [r0, #24]
 8011386:	8505      	strh	r5, [r0, #40]	@ 0x28
 8011388:	f001 f8a8 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 801138c:	8833      	ldrh	r3, [r6, #0]
 801138e:	6025      	str	r5, [r4, #0]
 8011390:	3301      	adds	r3, #1
 8011392:	8033      	strh	r3, [r6, #0]
 8011394:	71a5      	strb	r5, [r4, #6]
 8011396:	80a5      	strh	r5, [r4, #4]
 8011398:	bd70      	pop	{r4, r5, r6, pc}
 801139a:	bf00      	nop
 801139c:	10008228 	andne	r8, r0, r8, lsr #4
 80113a0:	10008224 	andne	r8, r0, r4, lsr #4
 80113a4:	10008350 	andne	r8, r0, r0, asr r3

080113a8 <net::igmp_report_groups()>:
 80113a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80113aa:	4c14      	ldr	r4, [pc, #80]	@ (80113fc <net::igmp_report_groups()+0x54>)
 80113ac:	4d14      	ldr	r5, [pc, #80]	@ (8011400 <net::igmp_report_groups()+0x58>)
 80113ae:	f504 7790 	add.w	r7, r4, #288	@ 0x120
 80113b2:	2601      	movs	r6, #1
 80113b4:	e002      	b.n	80113bc <net::igmp_report_groups()+0x14>
 80113b6:	3408      	adds	r4, #8
 80113b8:	42bc      	cmp	r4, r7
 80113ba:	d01e      	beq.n	80113fa <net::igmp_report_groups()+0x52>
 80113bc:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80113c0:	2b02      	cmp	r3, #2
 80113c2:	d007      	beq.n	80113d4 <net::igmp_report_groups()+0x2c>
 80113c4:	2b01      	cmp	r3, #1
 80113c6:	d1f6      	bne.n	80113b6 <net::igmp_report_groups()+0xe>
 80113c8:	f834 3c04 	ldrh.w	r3, [r4, #-4]
 80113cc:	3b01      	subs	r3, #1
 80113ce:	b29b      	uxth	r3, r3
 80113d0:	2b04      	cmp	r3, #4
 80113d2:	d9f0      	bls.n	80113b6 <net::igmp_report_groups()+0xe>
 80113d4:	f005 fd5a 	bl	8016e8c <random>
 80113d8:	fba5 3200 	umull	r3, r2, r5, r0
 80113dc:	f022 0303 	bic.w	r3, r2, #3
 80113e0:	eb03 0392 	add.w	r3, r3, r2, lsr #2
 80113e4:	1ac0      	subs	r0, r0, r3
 80113e6:	2801      	cmp	r0, #1
 80113e8:	bf38      	it	cc
 80113ea:	2001      	movcc	r0, #1
 80113ec:	f824 0c04 	strh.w	r0, [r4, #-4]
 80113f0:	f804 6c02 	strb.w	r6, [r4, #-2]
 80113f4:	3408      	adds	r4, #8
 80113f6:	42bc      	cmp	r4, r7
 80113f8:	d1e0      	bne.n	80113bc <net::igmp_report_groups()+0x14>
 80113fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80113fc:	10008230 	andne	r8, r0, r0, lsr r2
 8011400:	cccccccd 	stclgt	12, cr12, [ip], {205}	@ 0xcd

08011404 <net::primary_ip_conflict_callback(net::acd::Callback)>:
 8011404:	b140      	cbz	r0, 8011418 <net::primary_ip_conflict_callback(net::acd::Callback)+0x14>
 8011406:	2802      	cmp	r0, #2
 8011408:	d000      	beq.n	801140c <net::primary_ip_conflict_callback(net::acd::Callback)+0x8>
 801140a:	4770      	bx	lr
 801140c:	4a10      	ldr	r2, [pc, #64]	@ (8011450 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 801140e:	7e93      	ldrb	r3, [r2, #26]
 8011410:	f023 0308 	bic.w	r3, r3, #8
 8011414:	7693      	strb	r3, [r2, #26]
 8011416:	4770      	bx	lr
 8011418:	4b0e      	ldr	r3, [pc, #56]	@ (8011454 <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>)
 801141a:	b510      	push	{r4, lr}
 801141c:	4c0c      	ldr	r4, [pc, #48]	@ (8011450 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 801141e:	6818      	ldr	r0, [r3, #0]
 8011420:	6923      	ldr	r3, [r4, #16]
 8011422:	4298      	cmp	r0, r3
 8011424:	d008      	beq.n	8011438 <net::primary_ip_conflict_callback(net::acd::Callback)+0x34>
 8011426:	f000 f8c1 	bl	80115ac <net::netif_set_ipaddr(net::ip_addr)>
 801142a:	f7ff fd3b 	bl	8010ea4 <net::dhcp_inform()>
 801142e:	7ea3      	ldrb	r3, [r4, #26]
 8011430:	f043 0308 	orr.w	r3, r3, #8
 8011434:	76a3      	strb	r3, [r4, #26]
 8011436:	bd10      	pop	{r4, pc}
 8011438:	4602      	mov	r2, r0
 801143a:	21ff      	movs	r1, #255	@ 0xff
 801143c:	f000 f8f0 	bl	8011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8011440:	f7ff fd30 	bl	8010ea4 <net::dhcp_inform()>
 8011444:	7ea3      	ldrb	r3, [r4, #26]
 8011446:	f043 0308 	orr.w	r3, r3, #8
 801144a:	76a3      	strb	r3, [r4, #26]
 801144c:	bd10      	pop	{r4, pc}
 801144e:	bf00      	nop
 8011450:	20009b50 	andcs	r9, r0, r0, asr fp
 8011454:	20009b3c 	andcs	r9, r0, ip, lsr fp

08011458 <net::net_shutdown()>:
 8011458:	f000 b92e 	b.w	80116b8 <net::netif_set_link_down()>

0801145c <net::net_set_primary_ip(net::ip_addr)>:
 801145c:	b510      	push	{r4, lr}
 801145e:	4604      	mov	r4, r0
 8011460:	f7ff fda2 	bl	8010fa8 <net::dhcp_release_and_stop()>
 8011464:	4908      	ldr	r1, [pc, #32]	@ (8011488 <net::net_set_primary_ip(net::ip_addr)+0x2c>)
 8011466:	4809      	ldr	r0, [pc, #36]	@ (801148c <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8011468:	f001 f9b4 	bl	80127d4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 801146c:	b934      	cbnz	r4, 801147c <net::net_set_primary_ip(net::ip_addr)+0x20>
 801146e:	4b08      	ldr	r3, [pc, #32]	@ (8011490 <net::net_set_primary_ip(net::ip_addr)+0x34>)
 8011470:	4806      	ldr	r0, [pc, #24]	@ (801148c <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8011472:	6919      	ldr	r1, [r3, #16]
 8011474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011478:	f001 b876 	b.w	8012568 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 801147c:	4621      	mov	r1, r4
 801147e:	4803      	ldr	r0, [pc, #12]	@ (801148c <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8011480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011484:	f001 b870 	b.w	8012568 <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8011488:	08011405 	stmdaeq	r1, {r0, r2, sl, ip}
 801148c:	20009b3c 	andcs	r9, r0, ip, lsr fp
 8011490:	20009b50 	andcs	r9, r0, r0, asr fp

08011494 <net::net_chksum(void const*, unsigned long)>:
 8011494:	2901      	cmp	r1, #1
 8011496:	d91f      	bls.n	80114d8 <net::net_chksum(void const*, unsigned long)+0x44>
 8011498:	f1a1 0c02 	sub.w	ip, r1, #2
 801149c:	f02c 0c01 	bic.w	ip, ip, #1
 80114a0:	f10c 0c02 	add.w	ip, ip, #2
 80114a4:	4484      	add	ip, r0
 80114a6:	2300      	movs	r3, #0
 80114a8:	f830 2b02 	ldrh.w	r2, [r0], #2
 80114ac:	4560      	cmp	r0, ip
 80114ae:	4413      	add	r3, r2
 80114b0:	d1fa      	bne.n	80114a8 <net::net_chksum(void const*, unsigned long)+0x14>
 80114b2:	07ca      	lsls	r2, r1, #31
 80114b4:	d40a      	bmi.n	80114cc <net::net_chksum(void const*, unsigned long)+0x38>
 80114b6:	0c1a      	lsrs	r2, r3, #16
 80114b8:	d005      	beq.n	80114c6 <net::net_chksum(void const*, unsigned long)+0x32>
 80114ba:	fa12 f383 	uxtah	r3, r2, r3
 80114be:	0c1a      	lsrs	r2, r3, #16
 80114c0:	bf1c      	itt	ne
 80114c2:	b29b      	uxthne	r3, r3
 80114c4:	3301      	addne	r3, #1
 80114c6:	43db      	mvns	r3, r3
 80114c8:	b298      	uxth	r0, r3
 80114ca:	4770      	bx	lr
 80114cc:	7802      	ldrb	r2, [r0, #0]
 80114ce:	0212      	lsls	r2, r2, #8
 80114d0:	ba52      	rev16	r2, r2
 80114d2:	fa13 f382 	uxtah	r3, r3, r2
 80114d6:	e7ee      	b.n	80114b6 <net::net_chksum(void const*, unsigned long)+0x22>
 80114d8:	b121      	cbz	r1, 80114e4 <net::net_chksum(void const*, unsigned long)+0x50>
 80114da:	7803      	ldrb	r3, [r0, #0]
 80114dc:	021b      	lsls	r3, r3, #8
 80114de:	ba5b      	rev16	r3, r3
 80114e0:	b29b      	uxth	r3, r3
 80114e2:	e7f0      	b.n	80114c6 <net::net_chksum(void const*, unsigned long)+0x32>
 80114e4:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80114e8:	4770      	bx	lr
 80114ea:	bf00      	nop

080114ec <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 80114ec:	4770      	bx	lr
	...

080114f0 <net::netif_do_update_globals()>:
 80114f0:	4908      	ldr	r1, [pc, #32]	@ (8011514 <net::netif_do_update_globals()+0x24>)
 80114f2:	e9d1 3200 	ldrd	r3, r2, [r1]
 80114f6:	b410      	push	{r4}
 80114f8:	ea63 0402 	orn	r4, r3, r2
 80114fc:	43d0      	mvns	r0, r2
 80114fe:	60cc      	str	r4, [r1, #12]
 8011500:	4013      	ands	r3, r2
 8011502:	4905      	ldr	r1, [pc, #20]	@ (8011518 <net::netif_do_update_globals()+0x28>)
 8011504:	4a05      	ldr	r2, [pc, #20]	@ (801151c <net::netif_do_update_globals()+0x2c>)
 8011506:	f85d 4b04 	ldr.w	r4, [sp], #4
 801150a:	6008      	str	r0, [r1, #0]
 801150c:	6013      	str	r3, [r2, #0]
 801150e:	f001 bab7 	b.w	8012a80 <net::ip_set_ip()>
 8011512:	bf00      	nop
 8011514:	20009b50 	andcs	r9, r0, r0, asr fp
 8011518:	20009b38 	andcs	r9, r0, r8, lsr fp
 801151c:	20009b34 	andcs	r9, r0, r4, lsr fp

08011520 <net::netif_issue_reports()>:
 8011520:	4b04      	ldr	r3, [pc, #16]	@ (8011534 <net::netif_issue_reports()+0x14>)
 8011522:	7e9a      	ldrb	r2, [r3, #26]
 8011524:	07d2      	lsls	r2, r2, #31
 8011526:	d503      	bpl.n	8011530 <net::netif_issue_reports()+0x10>
 8011528:	681b      	ldr	r3, [r3, #0]
 801152a:	b10b      	cbz	r3, 8011530 <net::netif_issue_reports()+0x10>
 801152c:	f7ff bf3c 	b.w	80113a8 <net::igmp_report_groups()>
 8011530:	4770      	bx	lr
 8011532:	bf00      	nop
 8011534:	20009b50 	andcs	r9, r0, r0, asr fp

08011538 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
 8011538:	b570      	push	{r4, r5, r6, lr}
 801153a:	4e0b      	ldr	r6, [pc, #44]	@ (8011568 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x30>)
 801153c:	6833      	ldr	r3, [r6, #0]
 801153e:	4283      	cmp	r3, r0
 8011540:	4604      	mov	r4, r0
 8011542:	460d      	mov	r5, r1
 8011544:	d00d      	beq.n	8011562 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x2a>
 8011546:	600b      	str	r3, [r1, #0]
 8011548:	f001 fa9a 	bl	8012a80 <net::ip_set_ip()>
 801154c:	6828      	ldr	r0, [r5, #0]
 801154e:	4621      	mov	r1, r4
 8011550:	f001 f946 	bl	80127e0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
 8011554:	6034      	str	r4, [r6, #0]
 8011556:	f7ff ffcb 	bl	80114f0 <net::netif_do_update_globals()>
 801155a:	f7ff ffe1 	bl	8011520 <net::netif_issue_reports()>
 801155e:	2001      	movs	r0, #1
 8011560:	bd70      	pop	{r4, r5, r6, pc}
 8011562:	2000      	movs	r0, #0
 8011564:	e7fc      	b.n	8011560 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x28>
 8011566:	bf00      	nop
 8011568:	20009b50 	andcs	r9, r0, r0, asr fp

0801156c <net::netif_init()>:
 801156c:	4b0c      	ldr	r3, [pc, #48]	@ (80115a0 <net::netif_init()+0x34>)
 801156e:	7e1a      	ldrb	r2, [r3, #24]
 8011570:	7dd8      	ldrb	r0, [r3, #23]
 8011572:	0412      	lsls	r2, r2, #16
 8011574:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 8011578:	7e58      	ldrb	r0, [r3, #25]
 801157a:	3202      	adds	r2, #2
 801157c:	2100      	movs	r1, #0
 801157e:	eb02 6200 	add.w	r2, r2, r0, lsl #24
 8011582:	e9c3 1100 	strd	r1, r1, [r3]
 8011586:	611a      	str	r2, [r3, #16]
 8011588:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801158c:	e9c3 1108 	strd	r1, r1, [r3, #32]
 8011590:	7699      	strb	r1, [r3, #26]
 8011592:	6299      	str	r1, [r3, #40]	@ 0x28
 8011594:	4b03      	ldr	r3, [pc, #12]	@ (80115a4 <net::netif_init()+0x38>)
 8011596:	4a04      	ldr	r2, [pc, #16]	@ (80115a8 <net::netif_init()+0x3c>)
 8011598:	601a      	str	r2, [r3, #0]
 801159a:	f7f6 bf55 	b.w	8008448 <net::arp_init()>
 801159e:	bf00      	nop
 80115a0:	20009b50 	andcs	r9, r0, r0, asr fp
 80115a4:	20009b4c 	andcs	r9, r0, ip, asr #22
 80115a8:	080114ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl, ip}

080115ac <net::netif_set_ipaddr(net::ip_addr)>:
 80115ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80115ae:	4669      	mov	r1, sp
 80115b0:	f7ff ffc2 	bl	8011538 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 80115b4:	b130      	cbz	r0, 80115c4 <net::netif_set_ipaddr(net::ip_addr)+0x18>
 80115b6:	9b00      	ldr	r3, [sp, #0]
 80115b8:	9301      	str	r3, [sp, #4]
 80115ba:	4b04      	ldr	r3, [pc, #16]	@ (80115cc <net::netif_set_ipaddr(net::ip_addr)+0x20>)
 80115bc:	a901      	add	r1, sp, #4
 80115be:	681b      	ldr	r3, [r3, #0]
 80115c0:	2010      	movs	r0, #16
 80115c2:	4798      	blx	r3
 80115c4:	b005      	add	sp, #20
 80115c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80115ca:	bf00      	nop
 80115cc:	20009b4c 	andcs	r9, r0, ip, asr #22

080115d0 <net::netif_set_netmask(net::ip_addr)>:
 80115d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80115d2:	4b07      	ldr	r3, [pc, #28]	@ (80115f0 <net::netif_set_netmask(net::ip_addr)+0x20>)
 80115d4:	685c      	ldr	r4, [r3, #4]
 80115d6:	42a0      	cmp	r0, r4
 80115d8:	d008      	beq.n	80115ec <net::netif_set_netmask(net::ip_addr)+0x1c>
 80115da:	6058      	str	r0, [r3, #4]
 80115dc:	f7ff ff88 	bl	80114f0 <net::netif_do_update_globals()>
 80115e0:	4b04      	ldr	r3, [pc, #16]	@ (80115f4 <net::netif_set_netmask(net::ip_addr)+0x24>)
 80115e2:	9402      	str	r4, [sp, #8]
 80115e4:	681b      	ldr	r3, [r3, #0]
 80115e6:	a901      	add	r1, sp, #4
 80115e8:	2040      	movs	r0, #64	@ 0x40
 80115ea:	4798      	blx	r3
 80115ec:	b004      	add	sp, #16
 80115ee:	bd10      	pop	{r4, pc}
 80115f0:	20009b50 	andcs	r9, r0, r0, asr fp
 80115f4:	20009b4c 	andcs	r9, r0, ip, asr #22

080115f8 <net::netif_set_gw(net::ip_addr)>:
 80115f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80115fa:	4a07      	ldr	r2, [pc, #28]	@ (8011618 <net::netif_set_gw(net::ip_addr)+0x20>)
 80115fc:	6893      	ldr	r3, [r2, #8]
 80115fe:	4298      	cmp	r0, r3
 8011600:	d006      	beq.n	8011610 <net::netif_set_gw(net::ip_addr)+0x18>
 8011602:	9303      	str	r3, [sp, #12]
 8011604:	4b05      	ldr	r3, [pc, #20]	@ (801161c <net::netif_set_gw(net::ip_addr)+0x24>)
 8011606:	6090      	str	r0, [r2, #8]
 8011608:	681b      	ldr	r3, [r3, #0]
 801160a:	a901      	add	r1, sp, #4
 801160c:	2020      	movs	r0, #32
 801160e:	4798      	blx	r3
 8011610:	b005      	add	sp, #20
 8011612:	f85d fb04 	ldr.w	pc, [sp], #4
 8011616:	bf00      	nop
 8011618:	20009b50 	andcs	r9, r0, r0, asr fp
 801161c:	20009b4c 	andcs	r9, r0, ip, asr #22

08011620 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
 8011620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011624:	4688      	mov	r8, r1
 8011626:	b085      	sub	sp, #20
 8011628:	4617      	mov	r7, r2
 801162a:	4605      	mov	r5, r0
 801162c:	b348      	cbz	r0, 8011682 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x62>
 801162e:	2400      	movs	r4, #0
 8011630:	4e1c      	ldr	r6, [pc, #112]	@ (80116a4 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>)
 8011632:	f8d6 9004 	ldr.w	r9, [r6, #4]
 8011636:	45c8      	cmp	r8, r9
 8011638:	d007      	beq.n	801164a <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x2a>
 801163a:	f8c6 8004 	str.w	r8, [r6, #4]
 801163e:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
 8011642:	f7ff ff55 	bl	80114f0 <net::netif_do_update_globals()>
 8011646:	f8cd 9008 	str.w	r9, [sp, #8]
 801164a:	68b3      	ldr	r3, [r6, #8]
 801164c:	429f      	cmp	r7, r3
 801164e:	bf1e      	ittt	ne
 8011650:	60b7      	strne	r7, [r6, #8]
 8011652:	f044 0420 	orrne.w	r4, r4, #32
 8011656:	9303      	strne	r3, [sp, #12]
 8011658:	b30d      	cbz	r5, 801169e <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x7e>
 801165a:	4669      	mov	r1, sp
 801165c:	4628      	mov	r0, r5
 801165e:	f7ff ff6b 	bl	8011538 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8011662:	b1b8      	cbz	r0, 8011694 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x74>
 8011664:	9b00      	ldr	r3, [sp, #0]
 8011666:	9301      	str	r3, [sp, #4]
 8011668:	f044 0410 	orr.w	r4, r4, #16
 801166c:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 8011670:	b995      	cbnz	r5, 8011698 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x78>
 8011672:	4b0d      	ldr	r3, [pc, #52]	@ (80116a8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x88>)
 8011674:	a901      	add	r1, sp, #4
 8011676:	681b      	ldr	r3, [r3, #0]
 8011678:	4620      	mov	r0, r4
 801167a:	4798      	blx	r3
 801167c:	b005      	add	sp, #20
 801167e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011682:	4669      	mov	r1, sp
 8011684:	f7ff ff58 	bl	8011538 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8011688:	2800      	cmp	r0, #0
 801168a:	d0d0      	beq.n	801162e <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe>
 801168c:	9b00      	ldr	r3, [sp, #0]
 801168e:	9301      	str	r3, [sp, #4]
 8011690:	2410      	movs	r4, #16
 8011692:	e7cd      	b.n	8011630 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x10>
 8011694:	2c00      	cmp	r4, #0
 8011696:	d1e9      	bne.n	801166c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 8011698:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 801169c:	e7e9      	b.n	8011672 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x52>
 801169e:	2c00      	cmp	r4, #0
 80116a0:	d1e4      	bne.n	801166c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 80116a2:	e7eb      	b.n	801167c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
 80116a4:	20009b50 	andcs	r9, r0, r0, asr fp
 80116a8:	20009b4c 	andcs	r9, r0, ip, asr #22

080116ac <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
 80116ac:	4b01      	ldr	r3, [pc, #4]	@ (80116b4 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0x8>)
 80116ae:	6018      	str	r0, [r3, #0]
 80116b0:	4770      	bx	lr
 80116b2:	bf00      	nop
 80116b4:	20009b4c 	andcs	r9, r0, ip, asr #22

080116b8 <net::netif_set_link_down()>:
 80116b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80116ba:	4a0d      	ldr	r2, [pc, #52]	@ (80116f0 <net::netif_set_link_down()+0x38>)
 80116bc:	7e93      	ldrb	r3, [r2, #26]
 80116be:	07d9      	lsls	r1, r3, #31
 80116c0:	d512      	bpl.n	80116e8 <net::netif_set_link_down()+0x30>
 80116c2:	f023 0301 	bic.w	r3, r3, #1
 80116c6:	7693      	strb	r3, [r2, #26]
 80116c8:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80116ca:	b11b      	cbz	r3, 80116d4 <net::netif_set_link_down()+0x1c>
 80116cc:	685b      	ldr	r3, [r3, #4]
 80116ce:	b10b      	cbz	r3, 80116d4 <net::netif_set_link_down()+0x1c>
 80116d0:	f7ff f9f4 	bl	8010abc <net::autoip_stop()>
 80116d4:	f001 f822 	bl	801271c <net::acd_network_changed_link_down()>
 80116d8:	2300      	movs	r3, #0
 80116da:	f88d 3004 	strb.w	r3, [sp, #4]
 80116de:	4b05      	ldr	r3, [pc, #20]	@ (80116f4 <net::netif_set_link_down()+0x3c>)
 80116e0:	a901      	add	r1, sp, #4
 80116e2:	681b      	ldr	r3, [r3, #0]
 80116e4:	2004      	movs	r0, #4
 80116e6:	4798      	blx	r3
 80116e8:	b005      	add	sp, #20
 80116ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80116ee:	bf00      	nop
 80116f0:	20009b50 	andcs	r9, r0, r0, asr fp
 80116f4:	20009b4c 	andcs	r9, r0, ip, asr #22

080116f8 <net::_bswap32(t_tcp*)>:
 80116f8:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
 80116fc:	079a      	lsls	r2, r3, #30
 80116fe:	bf0b      	itete	eq
 8011700:	f8d0 302a 	ldreq.w	r3, [r0, #42]	@ 0x2a
 8011704:	f8d0 302a 	ldrne.w	r3, [r0, #42]	@ 0x2a
 8011708:	ba1b      	reveq	r3, r3
 801170a:	ba1b      	revne	r3, r3
 801170c:	bf0c      	ite	eq
 801170e:	f8c0 302a 	streq.w	r3, [r0, #42]	@ 0x2a
 8011712:	f8c0 302a 	strne.w	r3, [r0, #42]	@ 0x2a
 8011716:	f100 0326 	add.w	r3, r0, #38	@ 0x26
 801171a:	079b      	lsls	r3, r3, #30
 801171c:	bf0b      	itete	eq
 801171e:	f8d0 3026 	ldreq.w	r3, [r0, #38]	@ 0x26
 8011722:	f8d0 3026 	ldrne.w	r3, [r0, #38]	@ 0x26
 8011726:	ba1b      	reveq	r3, r3
 8011728:	ba1b      	revne	r3, r3
 801172a:	bf0c      	ite	eq
 801172c:	f8c0 3026 	streq.w	r3, [r0, #38]	@ 0x26
 8011730:	f8c0 3026 	strne.w	r3, [r0, #38]	@ 0x26
 8011734:	4770      	bx	lr
 8011736:	bf00      	nop

08011738 <net::send_package(net::tcb const*, net::SendInfo const&)>:
 8011738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801173c:	7a0b      	ldrb	r3, [r1, #8]
 801173e:	8f86      	ldrh	r6, [r0, #60]	@ 0x3c
 8011740:	4c52      	ldr	r4, [pc, #328]	@ (801188c <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8011742:	f003 0302 	and.w	r3, r3, #2
 8011746:	2b00      	cmp	r3, #0
 8011748:	bf14      	ite	ne
 801174a:	2324      	movne	r3, #36	@ 0x24
 801174c:	2320      	moveq	r3, #32
 801174e:	441e      	add	r6, r3
 8011750:	b084      	sub	sp, #16
 8011752:	4605      	mov	r5, r0
 8011754:	bf14      	ite	ne
 8011756:	f04f 0e90 	movne.w	lr, #144	@ 0x90
 801175a:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 801175e:	f100 030c 	add.w	r3, r0, #12
 8011762:	f100 0c12 	add.w	ip, r0, #18
 8011766:	4622      	mov	r2, r4
 8011768:	f813 0b01 	ldrb.w	r0, [r3], #1
 801176c:	f802 0b01 	strb.w	r0, [r2], #1
 8011770:	459c      	cmp	ip, r3
 8011772:	d1f9      	bne.n	8011768 <net::send_package(net::tcb const*, net::SendInfo const&)+0x30>
 8011774:	b2b7      	uxth	r7, r6
 8011776:	4a46      	ldr	r2, [pc, #280]	@ (8011890 <net::send_package(net::tcb const*, net::SendInfo const&)+0x158>)
 8011778:	f107 0314 	add.w	r3, r7, #20
 801177c:	ba5b      	rev16	r3, r3
 801177e:	8223      	strh	r3, [r4, #16]
 8011780:	8813      	ldrh	r3, [r2, #0]
 8011782:	8263      	strh	r3, [r4, #18]
 8011784:	3301      	adds	r3, #1
 8011786:	8013      	strh	r3, [r2, #0]
 8011788:	682b      	ldr	r3, [r5, #0]
 801178a:	f8c4 301a 	str.w	r3, [r4, #26]
 801178e:	686b      	ldr	r3, [r5, #4]
 8011790:	f8c4 301e 	str.w	r3, [r4, #30]
 8011794:	2300      	movs	r3, #0
 8011796:	8323      	strh	r3, [r4, #24]
 8011798:	892a      	ldrh	r2, [r5, #8]
 801179a:	8462      	strh	r2, [r4, #34]	@ 0x22
 801179c:	680a      	ldr	r2, [r1, #0]
 801179e:	8968      	ldrh	r0, [r5, #10]
 80117a0:	f8c4 2026 	str.w	r2, [r4, #38]	@ 0x26
 80117a4:	684a      	ldr	r2, [r1, #4]
 80117a6:	84a0      	strh	r0, [r4, #36]	@ 0x24
 80117a8:	f884 e02e 	strb.w	lr, [r4, #46]	@ 0x2e
 80117ac:	f8c4 202a 	str.w	r2, [r4, #42]	@ 0x2a
 80117b0:	7a0a      	ldrb	r2, [r1, #8]
 80117b2:	f884 202f 	strb.w	r2, [r4, #47]	@ 0x2f
 80117b6:	f8b5 2044 	ldrh.w	r2, [r5, #68]	@ 0x44
 80117ba:	8622      	strh	r2, [r4, #48]	@ 0x30
 80117bc:	8c2a      	ldrh	r2, [r5, #32]
 80117be:	86a2      	strh	r2, [r4, #52]	@ 0x34
 80117c0:	8663      	strh	r3, [r4, #50]	@ 0x32
 80117c2:	7a0b      	ldrb	r3, [r1, #8]
 80117c4:	079b      	lsls	r3, r3, #30
 80117c6:	bf41      	itttt	mi
 80117c8:	f240 4302 	movwmi	r3, #1026	@ 0x402
 80117cc:	86e3      	strhmi	r3, [r4, #54]	@ 0x36
 80117ce:	f648 4305 	movwmi	r3, #35845	@ 0x8c05
 80117d2:	8723      	strhmi	r3, [r4, #56]	@ 0x38
 80117d4:	4b2f      	ldr	r3, [pc, #188]	@ (8011894 <net::send_package(net::tcb const*, net::SendInfo const&)+0x15c>)
 80117d6:	bf48      	it	mi
 80117d8:	4a2f      	ldrmi	r2, [pc, #188]	@ (8011898 <net::send_package(net::tcb const*, net::SendInfo const&)+0x160>)
 80117da:	681b      	ldr	r3, [r3, #0]
 80117dc:	bf58      	it	pl
 80117de:	4a2f      	ldrpl	r2, [pc, #188]	@ (801189c <net::send_package(net::tcb const*, net::SendInfo const&)+0x164>)
 80117e0:	ba1b      	rev	r3, r3
 80117e2:	6053      	str	r3, [r2, #4]
 80117e4:	4b2e      	ldr	r3, [pc, #184]	@ (80118a0 <net::send_package(net::tcb const*, net::SendInfo const&)+0x168>)
 80117e6:	6013      	str	r3, [r2, #0]
 80117e8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80117ea:	6093      	str	r3, [r2, #8]
 80117ec:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80117ee:	b18b      	cbz	r3, 8011814 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80117f0:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 80117f2:	b179      	cbz	r1, 8011814 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80117f4:	781b      	ldrb	r3, [r3, #0]
 80117f6:	7313      	strb	r3, [r2, #12]
 80117f8:	8fab      	ldrh	r3, [r5, #60]	@ 0x3c
 80117fa:	2b01      	cmp	r3, #1
 80117fc:	f102 020d 	add.w	r2, r2, #13
 8011800:	d908      	bls.n	8011814 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 8011802:	2301      	movs	r3, #1
 8011804:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 8011806:	5cc9      	ldrb	r1, [r1, r3]
 8011808:	f802 1b01 	strb.w	r1, [r2], #1
 801180c:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 801180e:	3301      	adds	r3, #1
 8011810:	4299      	cmp	r1, r3
 8011812:	dcf7      	bgt.n	8011804 <net::send_package(net::tcb const*, net::SendInfo const&)+0xcc>
 8011814:	8c63      	ldrh	r3, [r4, #34]	@ 0x22
 8011816:	481d      	ldr	r0, [pc, #116]	@ (801188c <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8011818:	ba5b      	rev16	r3, r3
 801181a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801181c:	8ca3      	ldrh	r3, [r4, #36]	@ 0x24
 801181e:	ba5b      	rev16	r3, r3
 8011820:	84a3      	strh	r3, [r4, #36]	@ 0x24
 8011822:	f7ff ff69 	bl	80116f8 <net::_bswap32(t_tcp*)>
 8011826:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 8011828:	ba5b      	rev16	r3, r3
 801182a:	8623      	strh	r3, [r4, #48]	@ 0x30
 801182c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801182e:	f100 0816 	add.w	r8, r0, #22
 8011832:	ba5b      	rev16	r3, r3
 8011834:	86a3      	strh	r3, [r4, #52]	@ 0x34
 8011836:	4642      	mov	r2, r8
 8011838:	ab01      	add	r3, sp, #4
 801183a:	f852 1b04 	ldr.w	r1, [r2], #4
 801183e:	f843 1b04 	str.w	r1, [r3], #4
 8011842:	a904      	add	r1, sp, #16
 8011844:	428b      	cmp	r3, r1
 8011846:	d1f8      	bne.n	801183a <net::send_package(net::tcb const*, net::SendInfo const&)+0x102>
 8011848:	682b      	ldr	r3, [r5, #0]
 801184a:	f8c4 3016 	str.w	r3, [r4, #22]
 801184e:	686b      	ldr	r3, [r5, #4]
 8011850:	f8c4 301a 	str.w	r3, [r4, #26]
 8011854:	b2b1      	uxth	r1, r6
 8011856:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 801185a:	4812      	ldr	r0, [pc, #72]	@ (80118a4 <net::send_package(net::tcb const*, net::SendInfo const&)+0x16c>)
 801185c:	83e3      	strh	r3, [r4, #30]
 801185e:	ba7f      	rev16	r7, r7
 8011860:	310c      	adds	r1, #12
 8011862:	8427      	strh	r7, [r4, #32]
 8011864:	f7ff fe16 	bl	8011494 <net::net_chksum(void const*, unsigned long)>
 8011868:	ab01      	add	r3, sp, #4
 801186a:	4605      	mov	r5, r0
 801186c:	f853 2b04 	ldr.w	r2, [r3], #4
 8011870:	f848 2b04 	str.w	r2, [r8], #4
 8011874:	aa04      	add	r2, sp, #16
 8011876:	4293      	cmp	r3, r2
 8011878:	d1f8      	bne.n	801186c <net::send_package(net::tcb const*, net::SendInfo const&)+0x134>
 801187a:	4804      	ldr	r0, [pc, #16]	@ (801188c <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 801187c:	8665      	strh	r5, [r4, #50]	@ 0x32
 801187e:	f106 0122 	add.w	r1, r6, #34	@ 0x22
 8011882:	b004      	add	sp, #16
 8011884:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011888:	f000 be28 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 801188c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8011890:	1000899c 	mulne	r0, ip, r9
 8011894:	200145c8 	andcs	r4, r1, r8, asr #11
 8011898:	100083ea 	andne	r8, r0, sl, ror #7
 801189c:	100083e6 	andne	r8, r0, r6, ror #7
 80118a0:	0a080101 	beq	8211cac <_sidata+0x1f7338>
 80118a4:	100083c6 	andne	r8, r0, r6, asr #7

080118a8 <net::send_reset(t_tcp*, net::tcb const*)>:
 80118a8:	f890 202f 	ldrb.w	r2, [r0, #47]	@ 0x2f
 80118ac:	0753      	lsls	r3, r2, #29
 80118ae:	d42d      	bmi.n	801190c <net::send_reset(t_tcp*, net::tcb const*)+0x64>
 80118b0:	b500      	push	{lr}
 80118b2:	b085      	sub	sp, #20
 80118b4:	4603      	mov	r3, r0
 80118b6:	4608      	mov	r0, r1
 80118b8:	2104      	movs	r1, #4
 80118ba:	f88d 100c 	strb.w	r1, [sp, #12]
 80118be:	f012 0110 	ands.w	r1, r2, #16
 80118c2:	d119      	bne.n	80118f8 <net::send_reset(t_tcp*, net::tcb const*)+0x50>
 80118c4:	f04f 0c14 	mov.w	ip, #20
 80118c8:	9101      	str	r1, [sp, #4]
 80118ca:	f88d c00c 	strb.w	ip, [sp, #12]
 80118ce:	f3c2 0140 	ubfx	r1, r2, #1, #1
 80118d2:	07d2      	lsls	r2, r2, #31
 80118d4:	f103 0226 	add.w	r2, r3, #38	@ 0x26
 80118d8:	bf48      	it	mi
 80118da:	3101      	addmi	r1, #1
 80118dc:	0792      	lsls	r2, r2, #30
 80118de:	bf0c      	ite	eq
 80118e0:	f8d3 3026 	ldreq.w	r3, [r3, #38]	@ 0x26
 80118e4:	f8d3 3026 	ldrne.w	r3, [r3, #38]	@ 0x26
 80118e8:	440b      	add	r3, r1
 80118ea:	a901      	add	r1, sp, #4
 80118ec:	9302      	str	r3, [sp, #8]
 80118ee:	f7ff ff23 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 80118f2:	b005      	add	sp, #20
 80118f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80118f8:	f103 012a 	add.w	r1, r3, #42	@ 0x2a
 80118fc:	0789      	lsls	r1, r1, #30
 80118fe:	bf0c      	ite	eq
 8011900:	f8d3 102a 	ldreq.w	r1, [r3, #42]	@ 0x2a
 8011904:	f8d3 102a 	ldrne.w	r1, [r3, #42]	@ 0x2a
 8011908:	9101      	str	r1, [sp, #4]
 801190a:	e7e0      	b.n	80118ce <net::send_reset(t_tcp*, net::tcb const*)+0x26>
 801190c:	4770      	bx	lr
 801190e:	bf00      	nop

08011910 <net::scan_options(t_tcp*, net::tcb*, long)>:
 8011910:	f100 0322 	add.w	r3, r0, #34	@ 0x22
 8011914:	441a      	add	r2, r3
 8011916:	f100 0c3c 	add.w	ip, r0, #60	@ 0x3c
 801191a:	4562      	cmp	r2, ip
 801191c:	d349      	bcc.n	80119b2 <net::scan_options(t_tcp*, net::tcb*, long)+0xa2>
 801191e:	b530      	push	{r4, r5, lr}
 8011920:	f100 0336 	add.w	r3, r0, #54	@ 0x36
 8011924:	f893 c000 	ldrb.w	ip, [r3]
 8011928:	f1bc 0f08 	cmp.w	ip, #8
 801192c:	d820      	bhi.n	8011970 <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 801192e:	e8df f00c 	tbb	[pc, ip]
 8011932:	1f052726 	svcne	0x00052726
 8011936:	1f1f1f1f 	svcne	0x001f1f1f
 801193a:	f8930029 			@ <UNDEFINED> instruction: 0xf8930029
 801193e:	c001      	stmia	r0!, {r0}
 8011940:	f1bc 0f04 	cmp.w	ip, #4
 8011944:	d116      	bne.n	8011974 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8011946:	f103 0e04 	add.w	lr, r3, #4
 801194a:	4572      	cmp	r2, lr
 801194c:	d312      	bcc.n	8011974 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801194e:	f8b3 c002 	ldrh.w	ip, [r3, #2]
 8011952:	fa9c fc9c 	rev16.w	ip, ip
 8011956:	fa1f fc8c 	uxth.w	ip, ip
 801195a:	f10c 0c14 	add.w	ip, ip, #20
 801195e:	f240 5e8c 	movw	lr, #1420	@ 0x58c
 8011962:	45f4      	cmp	ip, lr
 8011964:	bfa8      	it	ge
 8011966:	46f4      	movge	ip, lr
 8011968:	f1ac 0c14 	sub.w	ip, ip, #20
 801196c:	f8a1 c034 	strh.w	ip, [r1, #52]	@ 0x34
 8011970:	f893 c001 	ldrb.w	ip, [r3, #1]
 8011974:	4463      	add	r3, ip
 8011976:	f103 0c06 	add.w	ip, r3, #6
 801197a:	4562      	cmp	r2, ip
 801197c:	d2d2      	bcs.n	8011924 <net::scan_options(t_tcp*, net::tcb*, long)+0x14>
 801197e:	bd30      	pop	{r4, r5, pc}
 8011980:	3301      	adds	r3, #1
 8011982:	e7f8      	b.n	8011976 <net::scan_options(t_tcp*, net::tcb*, long)+0x66>
 8011984:	f893 c001 	ldrb.w	ip, [r3, #1]
 8011988:	f1bc 0f0a 	cmp.w	ip, #10
 801198c:	d1f2      	bne.n	8011974 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801198e:	f103 0e0a 	add.w	lr, r3, #10
 8011992:	4572      	cmp	r2, lr
 8011994:	d3ee      	bcc.n	8011974 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8011996:	1c9c      	adds	r4, r3, #2
 8011998:	f890 e02f 	ldrb.w	lr, [r0, #47]	@ 0x2f
 801199c:	07a4      	lsls	r4, r4, #30
 801199e:	bf0c      	ite	eq
 80119a0:	f8d3 4002 	ldreq.w	r4, [r3, #2]
 80119a4:	f8d3 4002 	ldrne.w	r4, [r3, #2]
 80119a8:	f01e 0f02 	tst.w	lr, #2
 80119ac:	d002      	beq.n	80119b4 <net::scan_options(t_tcp*, net::tcb*, long)+0xa4>
 80119ae:	630c      	str	r4, [r1, #48]	@ 0x30
 80119b0:	e7de      	b.n	8011970 <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 80119b2:	4770      	bx	lr
 80119b4:	6b0d      	ldr	r5, [r1, #48]	@ 0x30
 80119b6:	fa95 fe85 	rev.w	lr, r5
 80119ba:	ba25      	rev	r5, r4
 80119bc:	4575      	cmp	r5, lr
 80119be:	d9d9      	bls.n	8011974 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80119c0:	e7f5      	b.n	80119ae <net::scan_options(t_tcp*, net::tcb*, long)+0x9e>
 80119c2:	bf00      	nop

080119c4 <net::tcp_shutdown()>:
 80119c4:	4770      	bx	lr
 80119c6:	bf00      	nop

080119c8 <net::tcp_begin(unsigned short)>:
 80119c8:	4b16      	ldr	r3, [pc, #88]	@ (8011a24 <net::tcp_begin(unsigned short)+0x5c>)
 80119ca:	f8b3 1d04 	ldrh.w	r1, [r3, #3332]	@ 0xd04
 80119ce:	4281      	cmp	r1, r0
 80119d0:	d025      	beq.n	8011a1e <net::tcp_begin(unsigned short)+0x56>
 80119d2:	bb09      	cbnz	r1, 8011a18 <net::tcp_begin(unsigned short)+0x50>
 80119d4:	b530      	push	{r4, r5, lr}
 80119d6:	4d14      	ldr	r5, [pc, #80]	@ (8011a28 <net::tcp_begin(unsigned short)+0x60>)
 80119d8:	f8a3 0d04 	strh.w	r0, [r3, #3332]	@ 0xd04
 80119dc:	f103 0250 	add.w	r2, r3, #80	@ 0x50
 80119e0:	f503 7c0c 	add.w	ip, r3, #560	@ 0x230
 80119e4:	f640 3418 	movw	r4, #2840	@ 0xb18
 80119e8:	f04f 0e01 	mov.w	lr, #1
 80119ec:	f1a2 0350 	sub.w	r3, r2, #80	@ 0x50
 80119f0:	f843 1b04 	str.w	r1, [r3], #4
 80119f4:	4293      	cmp	r3, r2
 80119f6:	d1fb      	bne.n	80119f0 <net::tcp_begin(unsigned short)+0x28>
 80119f8:	682b      	ldr	r3, [r5, #0]
 80119fa:	f822 0c48 	strh.w	r0, [r2, #-72]
 80119fe:	f822 4c0c 	strh.w	r4, [r2, #-12]
 8011a02:	f802 ec04 	strb.w	lr, [r2, #-4]
 8011a06:	e942 330f 	strd	r3, r3, [r2, #-60]	@ 0x3c
 8011a0a:	e942 330a 	strd	r3, r3, [r2, #-40]	@ 0x28
 8011a0e:	3250      	adds	r2, #80	@ 0x50
 8011a10:	4562      	cmp	r2, ip
 8011a12:	d1eb      	bne.n	80119ec <net::tcp_begin(unsigned short)+0x24>
 8011a14:	2000      	movs	r0, #0
 8011a16:	bd30      	pop	{r4, r5, pc}
 8011a18:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011a1c:	4770      	bx	lr
 8011a1e:	2000      	movs	r0, #0
 8011a20:	4770      	bx	lr
 8011a22:	bf00      	nop
 8011a24:	100089a0 	andne	r8, r0, r0, lsr #19
 8011a28:	200145c8 	andcs	r4, r1, r8, asr #11

08011a2c <net::tcp_read(long, unsigned char const**, unsigned long&)>:
 8011a2c:	b570      	push	{r4, r5, r6, lr}
 8011a2e:	4b1a      	ldr	r3, [pc, #104]	@ (8011a98 <net::tcp_read(long, unsigned char const**, unsigned long&)+0x6c>)
 8011a30:	f640 5408 	movw	r4, #3336	@ 0xd08
 8011a34:	fb04 f000 	mul.w	r0, r4, r0
 8011a38:	eb03 0c00 	add.w	ip, r3, r0
 8011a3c:	f8bc e1e2 	ldrh.w	lr, [ip, #482]	@ 0x1e2
 8011a40:	f8bc 41e0 	ldrh.w	r4, [ip, #480]	@ 0x1e0
 8011a44:	4574      	cmp	r4, lr
 8011a46:	bf08      	it	eq
 8011a48:	2000      	moveq	r0, #0
 8011a4a:	d100      	bne.n	8011a4e <net::tcp_read(long, unsigned char const**, unsigned long&)+0x22>
 8011a4c:	bd70      	pop	{r4, r5, r6, pc}
 8011a4e:	f44f 64b2 	mov.w	r4, #1424	@ 0x590
 8011a52:	fb04 fe0e 	mul.w	lr, r4, lr
 8011a56:	eb0e 0500 	add.w	r5, lr, r0
 8011a5a:	441d      	add	r5, r3
 8011a5c:	f500 76f2 	add.w	r6, r0, #484	@ 0x1e4
 8011a60:	f8b5 4772 	ldrh.w	r4, [r5, #1906]	@ 0x772
 8011a64:	6014      	str	r4, [r2, #0]
 8011a66:	4476      	add	r6, lr
 8011a68:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8011a6c:	441e      	add	r6, r3
 8011a6e:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 8011a72:	600e      	str	r6, [r1, #0]
 8011a74:	4403      	add	r3, r0
 8011a76:	f8bc 21e2 	ldrh.w	r2, [ip, #482]	@ 0x1e2
 8011a7a:	f8b3 1044 	ldrh.w	r1, [r3, #68]	@ 0x44
 8011a7e:	f8b5 0770 	ldrh.w	r0, [r5, #1904]	@ 0x770
 8011a82:	3201      	adds	r2, #1
 8011a84:	f201 518c 	addw	r1, r1, #1420	@ 0x58c
 8011a88:	f002 0201 	and.w	r2, r2, #1
 8011a8c:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 8011a90:	f8ac 21e2 	strh.w	r2, [ip, #482]	@ 0x1e2
 8011a94:	bd70      	pop	{r4, r5, r6, pc}
 8011a96:	bf00      	nop
 8011a98:	100089a0 	andne	r8, r0, r0, lsr #19

08011a9c <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
 8011a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011aa0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011aa4:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 8011b38 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x9c>
 8011aa8:	f640 5408 	movw	r4, #3336	@ 0xd08
 8011aac:	011b      	lsls	r3, r3, #4
 8011aae:	fb04 3700 	mla	r7, r4, r0, r3
 8011ab2:	b085      	sub	sp, #20
 8011ab4:	eb08 0907 	add.w	r9, r8, r7
 8011ab8:	2a00      	cmp	r2, #0
 8011aba:	d038      	beq.n	8011b2e <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 8011abc:	f107 0b10 	add.w	fp, r7, #16
 8011ac0:	468a      	mov	sl, r1
 8011ac2:	4616      	mov	r6, r2
 8011ac4:	44c3      	add	fp, r8
 8011ac6:	e01e      	b.n	8011b06 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 8011ac8:	f8c5 a038 	str.w	sl, [r5, #56]	@ 0x38
 8011acc:	87ac      	strh	r4, [r5, #60]	@ 0x3c
 8011ace:	f8db 3008 	ldr.w	r3, [fp, #8]
 8011ad2:	f8db 2030 	ldr.w	r2, [fp, #48]	@ 0x30
 8011ad6:	4566      	cmp	r6, ip
 8011ad8:	bf8c      	ite	hi
 8011ada:	f04f 0c10 	movhi.w	ip, #16
 8011ade:	f04f 0c18 	movls.w	ip, #24
 8011ae2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011ae6:	f88d c00c 	strb.w	ip, [sp, #12]
 8011aea:	f7ff fe25 	bl	8011738 <net::send_package(net::tcb const*, net::SendInfo const&)>
 8011aee:	e9d5 2306 	ldrd	r2, r3, [r5, #24]
 8011af2:	2100      	movs	r1, #0
 8011af4:	4422      	add	r2, r4
 8011af6:	1b1b      	subs	r3, r3, r4
 8011af8:	1b36      	subs	r6, r6, r4
 8011afa:	e9c5 2306 	strd	r2, r3, [r5, #24]
 8011afe:	63a9      	str	r1, [r5, #56]	@ 0x38
 8011b00:	87a9      	strh	r1, [r5, #60]	@ 0x3c
 8011b02:	44a2      	add	sl, r4
 8011b04:	d013      	beq.n	8011b2e <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 8011b06:	eb08 0507 	add.w	r5, r8, r7
 8011b0a:	f240 548c 	movw	r4, #1420	@ 0x58c
 8011b0e:	42b4      	cmp	r4, r6
 8011b10:	69eb      	ldr	r3, [r5, #28]
 8011b12:	bf28      	it	cs
 8011b14:	4634      	movcs	r4, r6
 8011b16:	429c      	cmp	r4, r3
 8011b18:	f240 5c8b 	movw	ip, #1419	@ 0x58b
 8011b1c:	a901      	add	r1, sp, #4
 8011b1e:	4648      	mov	r0, r9
 8011b20:	d9d2      	bls.n	8011ac8 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x2c>
 8011b22:	4804      	ldr	r0, [pc, #16]	@ (8011b34 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x98>)
 8011b24:	f002 feb0 	bl	8014888 <console_error>
 8011b28:	1b36      	subs	r6, r6, r4
 8011b2a:	44a2      	add	sl, r4
 8011b2c:	d1eb      	bne.n	8011b06 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 8011b2e:	b005      	add	sp, #20
 8011b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b34:	0801865c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, pc}
 8011b38:	100089a0 	andne	r8, r0, r0, lsr #19

08011b3c <net::udp_set_ip()>:
 8011b3c:	4a02      	ldr	r2, [pc, #8]	@ (8011b48 <net::udp_set_ip()+0xc>)
 8011b3e:	4b03      	ldr	r3, [pc, #12]	@ (8011b4c <net::udp_set_ip()+0x10>)
 8011b40:	6812      	ldr	r2, [r2, #0]
 8011b42:	f8c3 201a 	str.w	r2, [r3, #26]
 8011b46:	4770      	bx	lr
 8011b48:	20009b50 	andcs	r9, r0, r0, asr fp
 8011b4c:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4

08011b50 <net::udp_begin(unsigned short)>:
 8011b50:	4a08      	ldr	r2, [pc, #32]	@ (8011b74 <net::udp_begin(unsigned short)+0x24>)
 8011b52:	4601      	mov	r1, r0
 8011b54:	2000      	movs	r0, #0
 8011b56:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8011b5a:	428b      	cmp	r3, r1
 8011b5c:	d005      	beq.n	8011b6a <net::udp_begin(unsigned short)+0x1a>
 8011b5e:	b12b      	cbz	r3, 8011b6c <net::udp_begin(unsigned short)+0x1c>
 8011b60:	3001      	adds	r0, #1
 8011b62:	2808      	cmp	r0, #8
 8011b64:	d1f7      	bne.n	8011b56 <net::udp_begin(unsigned short)+0x6>
 8011b66:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011b6a:	4770      	bx	lr
 8011b6c:	4b02      	ldr	r3, [pc, #8]	@ (8011b78 <net::udp_begin(unsigned short)+0x28>)
 8011b6e:	f823 1010 	strh.w	r1, [r3, r0, lsl #1]
 8011b72:	4770      	bx	lr
 8011b74:	1000cafe 	strdne	ip, [r0], -lr
 8011b78:	1000cb00 	andne	ip, r0, r0, lsl #22

08011b7c <net::udp_end(unsigned short)>:
 8011b7c:	4a0d      	ldr	r2, [pc, #52]	@ (8011bb4 <net::udp_end(unsigned short)+0x38>)
 8011b7e:	b508      	push	{r3, lr}
 8011b80:	2300      	movs	r3, #0
 8011b82:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8011b86:	4281      	cmp	r1, r0
 8011b88:	d008      	beq.n	8011b9c <net::udp_end(unsigned short)+0x20>
 8011b8a:	3301      	adds	r3, #1
 8011b8c:	2b08      	cmp	r3, #8
 8011b8e:	d1f8      	bne.n	8011b82 <net::udp_end(unsigned short)+0x6>
 8011b90:	4809      	ldr	r0, [pc, #36]	@ (8011bb8 <net::udp_end(unsigned short)+0x3c>)
 8011b92:	f002 fe79 	bl	8014888 <console_error>
 8011b96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011b9a:	bd08      	pop	{r3, pc}
 8011b9c:	4a07      	ldr	r2, [pc, #28]	@ (8011bbc <net::udp_end(unsigned short)+0x40>)
 8011b9e:	4908      	ldr	r1, [pc, #32]	@ (8011bc0 <net::udp_end(unsigned short)+0x44>)
 8011ba0:	f240 50cc 	movw	r0, #1484	@ 0x5cc
 8011ba4:	fb00 2203 	mla	r2, r0, r3, r2
 8011ba8:	2000      	movs	r0, #0
 8011baa:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
 8011bae:	6050      	str	r0, [r2, #4]
 8011bb0:	bd08      	pop	{r3, pc}
 8011bb2:	bf00      	nop
 8011bb4:	1000cafe 	strdne	ip, [r0], -lr
 8011bb8:	0801868c 	stmdaeq	r1, {r2, r3, r7, r9, sl, pc}
 8011bbc:	10009ca0 	andne	r9, r0, r0, lsr #25
 8011bc0:	1000cb00 	andne	ip, r0, r0, lsl #22

08011bc4 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>:
 8011bc4:	b510      	push	{r4, lr}
 8011bc6:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 8011bca:	4c0c      	ldr	r4, [pc, #48]	@ (8011bfc <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x38>)
 8011bcc:	fb0c fc00 	mul.w	ip, ip, r0
 8011bd0:	eb04 0e0c 	add.w	lr, r4, ip
 8011bd4:	f8de 0004 	ldr.w	r0, [lr, #4]
 8011bd8:	b900      	cbnz	r0, 8011bdc <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x18>
 8011bda:	bd10      	pop	{r4, pc}
 8011bdc:	f10c 000a 	add.w	r0, ip, #10
 8011be0:	4420      	add	r0, r4
 8011be2:	6008      	str	r0, [r1, #0]
 8011be4:	f854 100c 	ldr.w	r1, [r4, ip]
 8011be8:	6011      	str	r1, [r2, #0]
 8011bea:	f8be 2008 	ldrh.w	r2, [lr, #8]
 8011bee:	801a      	strh	r2, [r3, #0]
 8011bf0:	2300      	movs	r3, #0
 8011bf2:	f8de 0004 	ldr.w	r0, [lr, #4]
 8011bf6:	f8ce 3004 	str.w	r3, [lr, #4]
 8011bfa:	bd10      	pop	{r4, pc}
 8011bfc:	10009ca0 	andne	r9, r0, r0, lsr #25

08011c00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
 8011c00:	b570      	push	{r4, r5, r6, lr}
 8011c02:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8011c06:	4e3d      	ldr	r6, [pc, #244]	@ (8011cfc <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>)
 8011c08:	fa94 fe94 	rev16.w	lr, r4
 8011c0c:	4c3c      	ldr	r4, [pc, #240]	@ (8011d00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>)
 8011c0e:	f8b6 c000 	ldrh.w	ip, [r6]
 8011c12:	f834 5010 	ldrh.w	r5, [r4, r0, lsl #1]
 8011c16:	4c3b      	ldr	r4, [pc, #236]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011c18:	b290      	uxth	r0, r2
 8011c1a:	f8a4 c012 	strh.w	ip, [r4, #18]
 8011c1e:	f10c 0c01 	add.w	ip, ip, #1
 8011c22:	f8a6 c000 	strh.w	ip, [r6]
 8011c26:	f100 0c1c 	add.w	ip, r0, #28
 8011c2a:	3008      	adds	r0, #8
 8011c2c:	ba40      	rev16	r0, r0
 8011c2e:	ba6d      	rev16	r5, r5
 8011c30:	fa9c fc9c 	rev16.w	ip, ip
 8011c34:	84e0      	strh	r0, [r4, #38]	@ 0x26
 8011c36:	f5b2 6fb8 	cmp.w	r2, #1472	@ 0x5c0
 8011c3a:	f04f 0000 	mov.w	r0, #0
 8011c3e:	8465      	strh	r5, [r4, #34]	@ 0x22
 8011c40:	f8a4 e024 	strh.w	lr, [r4, #36]	@ 0x24
 8011c44:	4615      	mov	r5, r2
 8011c46:	f8a4 c010 	strh.w	ip, [r4, #16]
 8011c4a:	bf28      	it	cs
 8011c4c:	f44f 65b8 	movcs.w	r5, #1472	@ 0x5c0
 8011c50:	8320      	strh	r0, [r4, #24]
 8011c52:	b14a      	cbz	r2, 8011c68 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
 8011c54:	eb01 0e05 	add.w	lr, r1, r5
 8011c58:	f104 002a 	add.w	r0, r4, #42	@ 0x2a
 8011c5c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8011c60:	f800 cb01 	strb.w	ip, [r0], #1
 8011c64:	4571      	cmp	r1, lr
 8011c66:	d1f9      	bne.n	8011c5c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5c>
 8011c68:	1c5a      	adds	r2, r3, #1
 8011c6a:	f105 012a 	add.w	r1, r5, #42	@ 0x2a
 8011c6e:	d02e      	beq.n	8011cce <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce>
 8011c70:	4a25      	ldr	r2, [pc, #148]	@ (8011d08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x108>)
 8011c72:	6812      	ldr	r2, [r2, #0]
 8011c74:	439a      	bics	r2, r3
 8011c76:	d01c      	beq.n	8011cb2 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb2>
 8011c78:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8011c7c:	2ae0      	cmp	r2, #224	@ 0xe0
 8011c7e:	d136      	bne.n	8011cee <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee>
 8011c80:	4822      	ldr	r0, [pc, #136]	@ (8011d0c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x10c>)
 8011c82:	f3c3 2206 	ubfx	r2, r3, #8, #7
 8011c86:	70c2      	strb	r2, [r0, #3]
 8011c88:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011c8c:	7102      	strb	r2, [r0, #4]
 8011c8e:	f3c3 6207 	ubfx	r2, r3, #24, #8
 8011c92:	7142      	strb	r2, [r0, #5]
 8011c94:	4a1b      	ldr	r2, [pc, #108]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011c96:	1d85      	adds	r5, r0, #6
 8011c98:	f810 cb01 	ldrb.w	ip, [r0], #1
 8011c9c:	f802 cb01 	strb.w	ip, [r2], #1
 8011ca0:	42a8      	cmp	r0, r5
 8011ca2:	d1f9      	bne.n	8011c98 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
 8011ca4:	f8c4 301e 	str.w	r3, [r4, #30]
 8011ca8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cac:	4815      	ldr	r0, [pc, #84]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cae:	f000 bc15 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8011cb2:	4a14      	ldr	r2, [pc, #80]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cb4:	25ff      	movs	r5, #255	@ 0xff
 8011cb6:	1d90      	adds	r0, r2, #6
 8011cb8:	f802 5b01 	strb.w	r5, [r2], #1
 8011cbc:	4282      	cmp	r2, r0
 8011cbe:	d1fb      	bne.n	8011cb8 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
 8011cc0:	f8c4 301e 	str.w	r3, [r4, #30]
 8011cc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cc8:	480e      	ldr	r0, [pc, #56]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cca:	f000 bc07 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8011cce:	4b0d      	ldr	r3, [pc, #52]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cd0:	22ff      	movs	r2, #255	@ 0xff
 8011cd2:	1d98      	adds	r0, r3, #6
 8011cd4:	f803 2b01 	strb.w	r2, [r3], #1
 8011cd8:	4283      	cmp	r3, r0
 8011cda:	d1fb      	bne.n	8011cd4 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
 8011cdc:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8011ce0:	f8c4 301e 	str.w	r3, [r4, #30]
 8011ce4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ce8:	4806      	ldr	r0, [pc, #24]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cea:	f000 bbf7 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8011cee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cf2:	4804      	ldr	r0, [pc, #16]	@ (8011d04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8011cf4:	461a      	mov	r2, r3
 8011cf6:	f000 be27 	b.w	8012948 <net::arp_send(t_udp*, unsigned long, unsigned long)>
 8011cfa:	bf00      	nop
 8011cfc:	100096b0 			@ <UNDEFINED> instruction: 0x100096b0
 8011d00:	1000cb00 	andne	ip, r0, r0, lsl #22
 8011d04:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8011d08:	20009b38 	andcs	r9, r0, r8, lsr fp
 8011d0c:	100096a8 	andne	r9, r0, r8, lsr #13

08011d10 <NetworkParamsStore::Copy(networkparams::Params*)>:
 8011d10:	b507      	push	{r0, r1, r2, lr}
 8011d12:	2301      	movs	r3, #1
 8011d14:	2100      	movs	r1, #0
 8011d16:	e9cd 1300 	strd	r1, r3, [sp]
 8011d1a:	4602      	mov	r2, r0
 8011d1c:	4803      	ldr	r0, [pc, #12]	@ (8011d2c <NetworkParamsStore::Copy(networkparams::Params*)+0x1c>)
 8011d1e:	235e      	movs	r3, #94	@ 0x5e
 8011d20:	6800      	ldr	r0, [r0, #0]
 8011d22:	f001 fb7f 	bl	8013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8011d26:	b003      	add	sp, #12
 8011d28:	f85d fb04 	ldr.w	pc, [sp], #4
 8011d2c:	20009bfc 	strdcs	r9, [r0], -ip

08011d30 <NetworkParams::NetworkParams()>:
 8011d30:	b510      	push	{r4, lr}
 8011d32:	225e      	movs	r2, #94	@ 0x5e
 8011d34:	4604      	mov	r4, r0
 8011d36:	2100      	movs	r1, #0
 8011d38:	f004 fd66 	bl	8016808 <memset>
 8011d3c:	2301      	movs	r3, #1
 8011d3e:	7523      	strb	r3, [r4, #20]
 8011d40:	4620      	mov	r0, r4
 8011d42:	bd10      	pop	{r4, pc}

08011d44 <NetworkParams::Load()>:
 8011d44:	b508      	push	{r3, lr}
 8011d46:	2200      	movs	r2, #0
 8011d48:	7002      	strb	r2, [r0, #0]
 8011d4a:	7042      	strb	r2, [r0, #1]
 8011d4c:	7082      	strb	r2, [r0, #2]
 8011d4e:	70c2      	strb	r2, [r0, #3]
 8011d50:	f7ff ffde 	bl	8011d10 <NetworkParamsStore::Copy(networkparams::Params*)>
 8011d54:	bd08      	pop	{r3, pc}
	...

08011d58 <NetworkParams::Load(char const*, unsigned long)>:
 8011d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d5a:	2500      	movs	r5, #0
 8011d5c:	b087      	sub	sp, #28
 8011d5e:	4604      	mov	r4, r0
 8011d60:	460e      	mov	r6, r1
 8011d62:	4617      	mov	r7, r2
 8011d64:	7005      	strb	r5, [r0, #0]
 8011d66:	7045      	strb	r5, [r0, #1]
 8011d68:	7085      	strb	r5, [r0, #2]
 8011d6a:	70c5      	strb	r5, [r0, #3]
 8011d6c:	4602      	mov	r2, r0
 8011d6e:	490c      	ldr	r1, [pc, #48]	@ (8011da0 <NetworkParams::Load(char const*, unsigned long)+0x48>)
 8011d70:	a804      	add	r0, sp, #16
 8011d72:	f001 fe31 	bl	80139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011d76:	463a      	mov	r2, r7
 8011d78:	4631      	mov	r1, r6
 8011d7a:	a804      	add	r0, sp, #16
 8011d7c:	f001 fe30 	bl	80139e0 <ReadConfigFile::Read(char const*, unsigned int)>
 8011d80:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8011d84:	235e      	movs	r3, #94	@ 0x5e
 8011d86:	4807      	ldr	r0, [pc, #28]	@ (8011da4 <NetworkParams::Load(char const*, unsigned long)+0x4c>)
 8011d88:	9300      	str	r3, [sp, #0]
 8011d8a:	462a      	mov	r2, r5
 8011d8c:	4623      	mov	r3, r4
 8011d8e:	4629      	mov	r1, r5
 8011d90:	6800      	ldr	r0, [r0, #0]
 8011d92:	f001 fb21 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8011d96:	a804      	add	r0, sp, #16
 8011d98:	f001 fe21 	bl	80139de <ReadConfigFile::~ReadConfigFile()>
 8011d9c:	b007      	add	sp, #28
 8011d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011da0:	08011f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip}
 8011da4:	20009bfc 	strdcs	r9, [r0], -ip

08011da8 <NetworkParams::callbackFunction(char const*)>:
 8011da8:	b530      	push	{r4, r5, lr}
 8011daa:	460d      	mov	r5, r1
 8011dac:	b085      	sub	sp, #20
 8011dae:	4604      	mov	r4, r0
 8011db0:	494d      	ldr	r1, [pc, #308]	@ (8011ee8 <NetworkParams::callbackFunction(char const*)+0x140>)
 8011db2:	f10d 0207 	add.w	r2, sp, #7
 8011db6:	4628      	mov	r0, r5
 8011db8:	f001 ff38 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011dbc:	b978      	cbnz	r0, 8011dde <NetworkParams::callbackFunction(char const*)+0x36>
 8011dbe:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011dc2:	6823      	ldr	r3, [r4, #0]
 8011dc4:	b142      	cbz	r2, 8011dd8 <NetworkParams::callbackFunction(char const*)+0x30>
 8011dc6:	f023 0301 	bic.w	r3, r3, #1
 8011dca:	3a00      	subs	r2, #0
 8011dcc:	bf18      	it	ne
 8011dce:	2201      	movne	r2, #1
 8011dd0:	6023      	str	r3, [r4, #0]
 8011dd2:	7522      	strb	r2, [r4, #20]
 8011dd4:	b005      	add	sp, #20
 8011dd6:	bd30      	pop	{r4, r5, pc}
 8011dd8:	f043 0301 	orr.w	r3, r3, #1
 8011ddc:	e7f5      	b.n	8011dca <NetworkParams::callbackFunction(char const*)+0x22>
 8011dde:	4943      	ldr	r1, [pc, #268]	@ (8011eec <NetworkParams::callbackFunction(char const*)+0x144>)
 8011de0:	f10d 0207 	add.w	r2, sp, #7
 8011de4:	4628      	mov	r0, r5
 8011de6:	f001 ff21 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011dea:	b980      	cbnz	r0, 8011e0e <NetworkParams::callbackFunction(char const*)+0x66>
 8011dec:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011df0:	6823      	ldr	r3, [r4, #0]
 8011df2:	1e51      	subs	r1, r2, #1
 8011df4:	2904      	cmp	r1, #4
 8011df6:	bf97      	itett	ls
 8011df8:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 8011dfc:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 8011e00:	6023      	strls	r3, [r4, #0]
 8011e02:	f884 205d 	strbls.w	r2, [r4, #93]	@ 0x5d
 8011e06:	bf84      	itt	hi
 8011e08:	6023      	strhi	r3, [r4, #0]
 8011e0a:	f884 005d 	strbhi.w	r0, [r4, #93]	@ 0x5d
 8011e0e:	4938      	ldr	r1, [pc, #224]	@ (8011ef0 <NetworkParams::callbackFunction(char const*)+0x148>)
 8011e10:	aa02      	add	r2, sp, #8
 8011e12:	4628      	mov	r0, r5
 8011e14:	f001 fe85 	bl	8013b22 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011e18:	b9d8      	cbnz	r0, 8011e52 <NetworkParams::callbackFunction(char const*)+0xaa>
 8011e1a:	9a02      	ldr	r2, [sp, #8]
 8011e1c:	6823      	ldr	r3, [r4, #0]
 8011e1e:	b2d1      	uxtb	r1, r2
 8011e20:	29ac      	cmp	r1, #172	@ 0xac
 8011e22:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8011e26:	d007      	beq.n	8011e38 <NetworkParams::callbackFunction(char const*)+0x90>
 8011e28:	29c0      	cmp	r1, #192	@ 0xc0
 8011e2a:	d00c      	beq.n	8011e46 <NetworkParams::callbackFunction(char const*)+0x9e>
 8011e2c:	290a      	cmp	r1, #10
 8011e2e:	d006      	beq.n	8011e3e <NetworkParams::callbackFunction(char const*)+0x96>
 8011e30:	2902      	cmp	r1, #2
 8011e32:	d004      	beq.n	8011e3e <NetworkParams::callbackFunction(char const*)+0x96>
 8011e34:	b11a      	cbz	r2, 8011e3e <NetworkParams::callbackFunction(char const*)+0x96>
 8011e36:	e008      	b.n	8011e4a <NetworkParams::callbackFunction(char const*)+0xa2>
 8011e38:	3810      	subs	r0, #16
 8011e3a:	280f      	cmp	r0, #15
 8011e3c:	d805      	bhi.n	8011e4a <NetworkParams::callbackFunction(char const*)+0xa2>
 8011e3e:	6062      	str	r2, [r4, #4]
 8011e40:	f043 0302 	orr.w	r3, r3, #2
 8011e44:	e003      	b.n	8011e4e <NetworkParams::callbackFunction(char const*)+0xa6>
 8011e46:	28a8      	cmp	r0, #168	@ 0xa8
 8011e48:	d0f9      	beq.n	8011e3e <NetworkParams::callbackFunction(char const*)+0x96>
 8011e4a:	f023 0302 	bic.w	r3, r3, #2
 8011e4e:	6023      	str	r3, [r4, #0]
 8011e50:	e7c0      	b.n	8011dd4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011e52:	4928      	ldr	r1, [pc, #160]	@ (8011ef4 <NetworkParams::callbackFunction(char const*)+0x14c>)
 8011e54:	aa02      	add	r2, sp, #8
 8011e56:	4628      	mov	r0, r5
 8011e58:	f001 fe63 	bl	8013b22 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011e5c:	b970      	cbnz	r0, 8011e7c <NetworkParams::callbackFunction(char const*)+0xd4>
 8011e5e:	9a02      	ldr	r2, [sp, #8]
 8011e60:	6823      	ldr	r3, [r4, #0]
 8011e62:	b142      	cbz	r2, 8011e76 <NetworkParams::callbackFunction(char const*)+0xce>
 8011e64:	ba11      	rev	r1, r2
 8011e66:	43c8      	mvns	r0, r1
 8011e68:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8011e6c:	d103      	bne.n	8011e76 <NetworkParams::callbackFunction(char const*)+0xce>
 8011e6e:	60a2      	str	r2, [r4, #8]
 8011e70:	f043 0304 	orr.w	r3, r3, #4
 8011e74:	e7eb      	b.n	8011e4e <NetworkParams::callbackFunction(char const*)+0xa6>
 8011e76:	f023 0304 	bic.w	r3, r3, #4
 8011e7a:	e7e8      	b.n	8011e4e <NetworkParams::callbackFunction(char const*)+0xa6>
 8011e7c:	491e      	ldr	r1, [pc, #120]	@ (8011ef8 <NetworkParams::callbackFunction(char const*)+0x150>)
 8011e7e:	aa02      	add	r2, sp, #8
 8011e80:	4628      	mov	r0, r5
 8011e82:	f001 fe4e 	bl	8013b22 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011e86:	b950      	cbnz	r0, 8011e9e <NetworkParams::callbackFunction(char const*)+0xf6>
 8011e88:	9a02      	ldr	r2, [sp, #8]
 8011e8a:	6823      	ldr	r3, [r4, #0]
 8011e8c:	b122      	cbz	r2, 8011e98 <NetworkParams::callbackFunction(char const*)+0xf0>
 8011e8e:	f043 0308 	orr.w	r3, r3, #8
 8011e92:	6023      	str	r3, [r4, #0]
 8011e94:	60e2      	str	r2, [r4, #12]
 8011e96:	e79d      	b.n	8011dd4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011e98:	f023 0308 	bic.w	r3, r3, #8
 8011e9c:	e7d7      	b.n	8011e4e <NetworkParams::callbackFunction(char const*)+0xa6>
 8011e9e:	233f      	movs	r3, #63	@ 0x3f
 8011ea0:	9303      	str	r3, [sp, #12]
 8011ea2:	4916      	ldr	r1, [pc, #88]	@ (8011efc <NetworkParams::callbackFunction(char const*)+0x154>)
 8011ea4:	ab03      	add	r3, sp, #12
 8011ea6:	f104 0215 	add.w	r2, r4, #21
 8011eaa:	4628      	mov	r0, r5
 8011eac:	f001 fdce 	bl	8013a4c <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8011eb0:	b930      	cbnz	r0, 8011ec0 <NetworkParams::callbackFunction(char const*)+0x118>
 8011eb2:	9b03      	ldr	r3, [sp, #12]
 8011eb4:	4423      	add	r3, r4
 8011eb6:	7558      	strb	r0, [r3, #21]
 8011eb8:	6823      	ldr	r3, [r4, #0]
 8011eba:	f043 0320 	orr.w	r3, r3, #32
 8011ebe:	e7c6      	b.n	8011e4e <NetworkParams::callbackFunction(char const*)+0xa6>
 8011ec0:	490f      	ldr	r1, [pc, #60]	@ (8011f00 <NetworkParams::callbackFunction(char const*)+0x158>)
 8011ec2:	aa02      	add	r2, sp, #8
 8011ec4:	4628      	mov	r0, r5
 8011ec6:	f001 fe2c 	bl	8013b22 <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8011eca:	2800      	cmp	r0, #0
 8011ecc:	d182      	bne.n	8011dd4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011ece:	9a02      	ldr	r2, [sp, #8]
 8011ed0:	6823      	ldr	r3, [r4, #0]
 8011ed2:	b12a      	cbz	r2, 8011ee0 <NetworkParams::callbackFunction(char const*)+0x138>
 8011ed4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011ed8:	6023      	str	r3, [r4, #0]
 8011eda:	f8c4 2055 	str.w	r2, [r4, #85]	@ 0x55
 8011ede:	e779      	b.n	8011dd4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011ee0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011ee4:	e7f8      	b.n	8011ed8 <NetworkParams::callbackFunction(char const*)+0x130>
 8011ee6:	bf00      	nop
 8011ee8:	0801a351 	stmdaeq	r1, {r0, r4, r6, r8, r9, sp, pc}
 8011eec:	0801a341 	stmdaeq	r1, {r0, r6, r8, r9, sp, pc}
 8011ef0:	0801a336 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sp, pc}
 8011ef4:	0801a32d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sp, pc}
 8011ef8:	0801a31d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sp, pc}
 8011efc:	0801a314 	stmdaeq	r1, {r2, r4, r8, r9, sp, pc}
 8011f00:	0801a309 	stmdaeq	r1, {r0, r3, r8, r9, sp, pc}

08011f04 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8011f04:	f7ff bf50 	b.w	8011da8 <NetworkParams::callbackFunction(char const*)>

08011f08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
 8011f08:	b570      	push	{r4, r5, r6, lr}
 8011f0a:	4604      	mov	r4, r0
 8011f0c:	b086      	sub	sp, #24
 8011f0e:	4615      	mov	r5, r2
 8011f10:	461e      	mov	r6, r3
 8011f12:	2900      	cmp	r1, #0
 8011f14:	d046      	beq.n	8011fa4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 8011f16:	225e      	movs	r2, #94	@ 0x5e
 8011f18:	f004 fc5f 	bl	80167da <memmove>
 8011f1c:	462a      	mov	r2, r5
 8011f1e:	4d76      	ldr	r5, [pc, #472]	@ (80120f8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>)
 8011f20:	4976      	ldr	r1, [pc, #472]	@ (80120fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f4>)
 8011f22:	4633      	mov	r3, r6
 8011f24:	a803      	add	r0, sp, #12
 8011f26:	f001 fc81 	bl	801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8011f2a:	692a      	ldr	r2, [r5, #16]
 8011f2c:	4974      	ldr	r1, [pc, #464]	@ (8012100 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>)
 8011f2e:	2300      	movs	r3, #0
 8011f30:	a803      	add	r0, sp, #12
 8011f32:	f001 fcbd 	bl	80138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8011f36:	6823      	ldr	r3, [r4, #0]
 8011f38:	0799      	lsls	r1, r3, #30
 8011f3a:	bf5c      	itt	pl
 8011f3c:	682a      	ldrpl	r2, [r5, #0]
 8011f3e:	6062      	strpl	r2, [r4, #4]
 8011f40:	075a      	lsls	r2, r3, #29
 8011f42:	bf5c      	itt	pl
 8011f44:	686a      	ldrpl	r2, [r5, #4]
 8011f46:	60a2      	strpl	r2, [r4, #8]
 8011f48:	071e      	lsls	r6, r3, #28
 8011f4a:	bf5c      	itt	pl
 8011f4c:	68aa      	ldrpl	r2, [r5, #8]
 8011f4e:	60e2      	strpl	r2, [r4, #12]
 8011f50:	0698      	lsls	r0, r3, #26
 8011f52:	d412      	bmi.n	8011f7a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x72>
 8011f54:	4b6b      	ldr	r3, [pc, #428]	@ (8012104 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1fc>)
 8011f56:	681b      	ldr	r3, [r3, #0]
 8011f58:	f104 0015 	add.w	r0, r4, #21
 8011f5c:	3315      	adds	r3, #21
 8011f5e:	223f      	movs	r2, #63	@ 0x3f
 8011f60:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011f64:	b119      	cbz	r1, 8011f6e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x66>
 8011f66:	3a01      	subs	r2, #1
 8011f68:	f800 1b01 	strb.w	r1, [r0], #1
 8011f6c:	d1f8      	bne.n	8011f60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x58>
 8011f6e:	2100      	movs	r1, #0
 8011f70:	f004 fc4a 	bl	8016808 <memset>
 8011f74:	2300      	movs	r3, #0
 8011f76:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011f7a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011f7e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011f82:	7d23      	ldrb	r3, [r4, #20]
 8011f84:	6821      	ldr	r1, [r4, #0]
 8011f86:	42aa      	cmp	r2, r5
 8011f88:	d21d      	bcs.n	8011fc6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 8011f8a:	9803      	ldr	r0, [sp, #12]
 8011f8c:	07c9      	lsls	r1, r1, #31
 8011f8e:	4410      	add	r0, r2
 8011f90:	eba5 0502 	sub.w	r5, r5, r2
 8011f94:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011f98:	d407      	bmi.n	8011faa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8011f9a:	b93a      	cbnz	r2, 8011fac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
 8011f9c:	9300      	str	r3, [sp, #0]
 8011f9e:	4a5a      	ldr	r2, [pc, #360]	@ (8012108 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8011fa0:	4b5a      	ldr	r3, [pc, #360]	@ (801210c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011fa2:	e006      	b.n	8011fb2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8011fa4:	f7ff feb4 	bl	8011d10 <NetworkParamsStore::Copy(networkparams::Params*)>
 8011fa8:	e7b8      	b.n	8011f1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8011faa:	b312      	cbz	r2, 8011ff2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 8011fac:	9300      	str	r3, [sp, #0]
 8011fae:	4a58      	ldr	r2, [pc, #352]	@ (8012110 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8011fb0:	4b56      	ldr	r3, [pc, #344]	@ (801210c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011fb2:	4629      	mov	r1, r5
 8011fb4:	f004 ff34 	bl	8016e20 <snprintf>
 8011fb8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011fbc:	4285      	cmp	r5, r0
 8011fbe:	bfa4      	itt	ge
 8011fc0:	181b      	addge	r3, r3, r0
 8011fc2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011fc6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011fca:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011fce:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8011fd2:	6821      	ldr	r1, [r4, #0]
 8011fd4:	42aa      	cmp	r2, r5
 8011fd6:	d21f      	bcs.n	8012018 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
 8011fd8:	9803      	ldr	r0, [sp, #12]
 8011fda:	05ce      	lsls	r6, r1, #23
 8011fdc:	4410      	add	r0, r2
 8011fde:	eba5 0502 	sub.w	r5, r5, r2
 8011fe2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011fe6:	d408      	bmi.n	8011ffa <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf2>
 8011fe8:	b94a      	cbnz	r2, 8011ffe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf6>
 8011fea:	9300      	str	r3, [sp, #0]
 8011fec:	4a46      	ldr	r2, [pc, #280]	@ (8012108 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8011fee:	4b49      	ldr	r3, [pc, #292]	@ (8012114 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8011ff0:	e008      	b.n	8012004 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8011ff2:	9300      	str	r3, [sp, #0]
 8011ff4:	4a48      	ldr	r2, [pc, #288]	@ (8012118 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8011ff6:	4b45      	ldr	r3, [pc, #276]	@ (801210c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8011ff8:	e7db      	b.n	8011fb2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8011ffa:	2a00      	cmp	r2, #0
 8011ffc:	d03e      	beq.n	801207c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x174>
 8011ffe:	9300      	str	r3, [sp, #0]
 8012000:	4a43      	ldr	r2, [pc, #268]	@ (8012110 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8012002:	4b44      	ldr	r3, [pc, #272]	@ (8012114 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8012004:	4629      	mov	r1, r5
 8012006:	f004 ff0b 	bl	8016e20 <snprintf>
 801200a:	4285      	cmp	r5, r0
 801200c:	bfa2      	ittt	ge
 801200e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012012:	18c0      	addge	r0, r0, r3
 8012014:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8012018:	4940      	ldr	r1, [pc, #256]	@ (801211c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 801201a:	a803      	add	r0, sp, #12
 801201c:	f001 fcc2 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 8012020:	6823      	ldr	r3, [r4, #0]
 8012022:	6862      	ldr	r2, [r4, #4]
 8012024:	493e      	ldr	r1, [pc, #248]	@ (8012120 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 8012026:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801202a:	a803      	add	r0, sp, #12
 801202c:	f001 fc40 	bl	80138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012030:	6823      	ldr	r3, [r4, #0]
 8012032:	68a2      	ldr	r2, [r4, #8]
 8012034:	493b      	ldr	r1, [pc, #236]	@ (8012124 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 8012036:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801203a:	a803      	add	r0, sp, #12
 801203c:	f001 fc38 	bl	80138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012040:	6823      	ldr	r3, [r4, #0]
 8012042:	68e2      	ldr	r2, [r4, #12]
 8012044:	4938      	ldr	r1, [pc, #224]	@ (8012128 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 8012046:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 801204a:	a803      	add	r0, sp, #12
 801204c:	f001 fc30 	bl	80138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8012050:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012054:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012058:	6821      	ldr	r1, [r4, #0]
 801205a:	42aa      	cmp	r2, r5
 801205c:	d221      	bcs.n	80120a2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x19a>
 801205e:	9803      	ldr	r0, [sp, #12]
 8012060:	0689      	lsls	r1, r1, #26
 8012062:	4410      	add	r0, r2
 8012064:	eba5 0502 	sub.w	r5, r5, r2
 8012068:	f104 0315 	add.w	r3, r4, #21
 801206c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012070:	d408      	bmi.n	8012084 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
 8012072:	b94a      	cbnz	r2, 8012088 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x180>
 8012074:	9300      	str	r3, [sp, #0]
 8012076:	4a2d      	ldr	r2, [pc, #180]	@ (801212c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 8012078:	4b2d      	ldr	r3, [pc, #180]	@ (8012130 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 801207a:	e008      	b.n	801208e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 801207c:	9300      	str	r3, [sp, #0]
 801207e:	4a26      	ldr	r2, [pc, #152]	@ (8012118 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8012080:	4b24      	ldr	r3, [pc, #144]	@ (8012114 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8012082:	e7bf      	b.n	8012004 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8012084:	2a00      	cmp	r2, #0
 8012086:	d032      	beq.n	80120ee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1e6>
 8012088:	9300      	str	r3, [sp, #0]
 801208a:	4a2a      	ldr	r2, [pc, #168]	@ (8012134 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 801208c:	4b28      	ldr	r3, [pc, #160]	@ (8012130 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 801208e:	4629      	mov	r1, r5
 8012090:	f004 fec6 	bl	8016e20 <snprintf>
 8012094:	4285      	cmp	r5, r0
 8012096:	bfa2      	ittt	ge
 8012098:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801209c:	18c0      	addge	r0, r0, r3
 801209e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80120a2:	4925      	ldr	r1, [pc, #148]	@ (8012138 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 80120a4:	a803      	add	r0, sp, #12
 80120a6:	f001 fc7d 	bl	80139a4 <PropertiesBuilder::AddComment(char const*)>
 80120aa:	6823      	ldr	r3, [r4, #0]
 80120ac:	f8d4 2055 	ldr.w	r2, [r4, #85]	@ 0x55
 80120b0:	4922      	ldr	r1, [pc, #136]	@ (801213c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 80120b2:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80120b6:	a803      	add	r0, sp, #12
 80120b8:	f001 fbfa 	bl	80138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 80120bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80120c0:	b17b      	cbz	r3, 80120e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1da>
 80120c2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80120c6:	9b03      	ldr	r3, [sp, #12]
 80120c8:	4413      	add	r3, r2
 80120ca:	227d      	movs	r2, #125	@ 0x7d
 80120cc:	f803 2c01 	strb.w	r2, [r3, #-1]
 80120d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80120d4:	9903      	ldr	r1, [sp, #12]
 80120d6:	54ca      	strb	r2, [r1, r3]
 80120d8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80120dc:	3301      	adds	r3, #1
 80120de:	f8ad 3012 	strh.w	r3, [sp, #18]
 80120e2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80120e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80120e8:	601a      	str	r2, [r3, #0]
 80120ea:	b006      	add	sp, #24
 80120ec:	bd70      	pop	{r4, r5, r6, pc}
 80120ee:	9300      	str	r3, [sp, #0]
 80120f0:	4a13      	ldr	r2, [pc, #76]	@ (8012140 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 80120f2:	4b0f      	ldr	r3, [pc, #60]	@ (8012130 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 80120f4:	e7cb      	b.n	801208e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 80120f6:	bf00      	nop
 80120f8:	20009b50 	andcs	r9, r0, r0, asr fp
 80120fc:	0801a35a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sp, pc}
 8012100:	08017ca7 	stmdaeq	r1, {r0, r1, r2, r5, r7, sl, fp, ip, sp, lr}
 8012104:	20009b30 	andcs	r9, r0, r0, lsr fp
 8012108:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 801210c:	0801a351 	stmdaeq	r1, {r0, r4, r6, r8, r9, sp, pc}
 8012110:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 8012114:	0801a341 	stmdaeq	r1, {r0, r6, r8, r9, sp, pc}
 8012118:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}
 801211c:	08017cb4 	stmdaeq	r1, {r2, r4, r5, r7, sl, fp, ip, sp, lr}
 8012120:	0801a336 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sp, pc}
 8012124:	0801a32d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sp, pc}
 8012128:	0801a31d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sp, pc}
 801212c:	0801775a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 8012130:	0801a314 	stmdaeq	r1, {r2, r4, r8, r9, sp, pc}
 8012134:	0801774f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp, lr}
 8012138:	08017cbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, sl, fp, ip, sp, lr}
 801213c:	0801a309 	stmdaeq	r1, {r0, r3, r8, r9, sp, pc}
 8012140:	0801775b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}

08012144 <net::phy_customized_led()>:
 8012144:	4770      	bx	lr

08012146 <net::phy_customized_timing()>:
 8012146:	4770      	bx	lr

08012148 <emac_adjust_link(net::PhyStatus)>:
 8012148:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801214a:	ac04      	add	r4, sp, #16
 801214c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8012150:	460c      	mov	r4, r1
 8012152:	4b14      	ldr	r3, [pc, #80]	@ (80121a4 <emac_adjust_link(net::PhyStatus)+0x5c>)
 8012154:	4914      	ldr	r1, [pc, #80]	@ (80121a8 <emac_adjust_link(net::PhyStatus)+0x60>)
 8012156:	2a00      	cmp	r2, #0
 8012158:	4615      	mov	r5, r2
 801215a:	4606      	mov	r6, r0
 801215c:	bf14      	ite	ne
 801215e:	2264      	movne	r2, #100	@ 0x64
 8012160:	220a      	moveq	r2, #10
 8012162:	4812      	ldr	r0, [pc, #72]	@ (80121ac <emac_adjust_link(net::PhyStatus)+0x64>)
 8012164:	2c00      	cmp	r4, #0
 8012166:	bf18      	it	ne
 8012168:	460b      	movne	r3, r1
 801216a:	4911      	ldr	r1, [pc, #68]	@ (80121b0 <emac_adjust_link(net::PhyStatus)+0x68>)
 801216c:	2e01      	cmp	r6, #1
 801216e:	bf08      	it	eq
 8012170:	4601      	moveq	r1, r0
 8012172:	4810      	ldr	r0, [pc, #64]	@ (80121b4 <emac_adjust_link(net::PhyStatus)+0x6c>)
 8012174:	f004 fe2c 	bl	8016dd0 <printf>
 8012178:	2d01      	cmp	r5, #1
 801217a:	d10d      	bne.n	8012198 <emac_adjust_link(net::PhyStatus)+0x50>
 801217c:	2c01      	cmp	r4, #1
 801217e:	bf14      	ite	ne
 8012180:	f44f 4080 	movne.w	r0, #16384	@ 0x4000
 8012184:	f44f 4090 	moveq.w	r0, #18432	@ 0x4800
 8012188:	2210      	movs	r2, #16
 801218a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801218e:	b004      	add	sp, #16
 8012190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012194:	f002 be0e 	b.w	8014db4 <enet_init>
 8012198:	1e63      	subs	r3, r4, #1
 801219a:	4258      	negs	r0, r3
 801219c:	4158      	adcs	r0, r3
 801219e:	02c0      	lsls	r0, r0, #11
 80121a0:	e7f2      	b.n	8012188 <emac_adjust_link(net::PhyStatus)+0x40>
 80121a2:	bf00      	nop
 80121a4:	08017cf6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, sl, fp, ip, sp, lr}
 80121a8:	08017cfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, fp, ip, sp, lr}
 80121ac:	08017cee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, fp, ip, sp, lr}
 80121b0:	08017cf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, fp, ip, sp, lr}
 80121b4:	08017d00 	stmdaeq	r1, {r8, sl, fp, ip, sp, lr}

080121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
 80121b8:	b508      	push	{r3, lr}
 80121ba:	4613      	mov	r3, r2
 80121bc:	b28a      	uxth	r2, r1
 80121be:	b281      	uxth	r1, r0
 80121c0:	2000      	movs	r0, #0
 80121c2:	f002 fdcd 	bl	8014d60 <enet_phy_write_read>
 80121c6:	1e43      	subs	r3, r0, #1
 80121c8:	4258      	negs	r0, r3
 80121ca:	4158      	adcs	r0, r3
 80121cc:	bd08      	pop	{r3, pc}

080121ce <net::phy_write(unsigned long, unsigned long, unsigned short)>:
 80121ce:	b507      	push	{r0, r1, r2, lr}
 80121d0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80121d4:	f10d 0306 	add.w	r3, sp, #6
 80121d8:	b28a      	uxth	r2, r1
 80121da:	b281      	uxth	r1, r0
 80121dc:	2002      	movs	r0, #2
 80121de:	f002 fdbf 	bl	8014d60 <enet_phy_write_read>
 80121e2:	1e43      	subs	r3, r0, #1
 80121e4:	4258      	negs	r0, r3
 80121e6:	4158      	adcs	r0, r3
 80121e8:	b003      	add	sp, #12
 80121ea:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080121f0 <net::phy_config(unsigned long)>:
 80121f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80121f2:	4e28      	ldr	r6, [pc, #160]	@ (8012294 <net::phy_config(unsigned long)+0xa4>)
 80121f4:	4605      	mov	r5, r0
 80121f6:	2001      	movs	r0, #1
 80121f8:	6934      	ldr	r4, [r6, #16]
 80121fa:	f003 f8a1 	bl	8015340 <rcu_clock_freq_get>
 80121fe:	4b26      	ldr	r3, [pc, #152]	@ (8012298 <net::phy_config(unsigned long)+0xa8>)
 8012200:	4a26      	ldr	r2, [pc, #152]	@ (801229c <net::phy_config(unsigned long)+0xac>)
 8012202:	4403      	add	r3, r0
 8012204:	4293      	cmp	r3, r2
 8012206:	f024 041c 	bic.w	r4, r4, #28
 801220a:	d216      	bcs.n	801223a <net::phy_config(unsigned long)+0x4a>
 801220c:	f044 0408 	orr.w	r4, r4, #8
 8012210:	6134      	str	r4, [r6, #16]
 8012212:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8012216:	2100      	movs	r1, #0
 8012218:	4628      	mov	r0, r5
 801221a:	f7ff ffd8 	bl	80121ce <net::phy_write(unsigned long, unsigned long, unsigned short)>
 801221e:	b330      	cbz	r0, 801226e <net::phy_config(unsigned long)+0x7e>
 8012220:	4c1f      	ldr	r4, [pc, #124]	@ (80122a0 <net::phy_config(unsigned long)+0xb0>)
 8012222:	6826      	ldr	r6, [r4, #0]
 8012224:	6823      	ldr	r3, [r4, #0]
 8012226:	1b9b      	subs	r3, r3, r6
 8012228:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 801222c:	d325      	bcc.n	801227a <net::phy_config(unsigned long)+0x8a>
 801222e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012232:	43c0      	mvns	r0, r0
 8012234:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012238:	e01a      	b.n	8012270 <net::phy_config(unsigned long)+0x80>
 801223a:	4b1a      	ldr	r3, [pc, #104]	@ (80122a4 <net::phy_config(unsigned long)+0xb4>)
 801223c:	4a1a      	ldr	r2, [pc, #104]	@ (80122a8 <net::phy_config(unsigned long)+0xb8>)
 801223e:	4403      	add	r3, r0
 8012240:	4293      	cmp	r3, r2
 8012242:	d802      	bhi.n	801224a <net::phy_config(unsigned long)+0x5a>
 8012244:	f044 040c 	orr.w	r4, r4, #12
 8012248:	e7e2      	b.n	8012210 <net::phy_config(unsigned long)+0x20>
 801224a:	4b18      	ldr	r3, [pc, #96]	@ (80122ac <net::phy_config(unsigned long)+0xbc>)
 801224c:	4a18      	ldr	r2, [pc, #96]	@ (80122b0 <net::phy_config(unsigned long)+0xc0>)
 801224e:	4403      	add	r3, r0
 8012250:	4293      	cmp	r3, r2
 8012252:	d3dd      	bcc.n	8012210 <net::phy_config(unsigned long)+0x20>
 8012254:	4b17      	ldr	r3, [pc, #92]	@ (80122b4 <net::phy_config(unsigned long)+0xc4>)
 8012256:	4a18      	ldr	r2, [pc, #96]	@ (80122b8 <net::phy_config(unsigned long)+0xc8>)
 8012258:	4403      	add	r3, r0
 801225a:	4293      	cmp	r3, r2
 801225c:	d802      	bhi.n	8012264 <net::phy_config(unsigned long)+0x74>
 801225e:	f044 0404 	orr.w	r4, r4, #4
 8012262:	e7d5      	b.n	8012210 <net::phy_config(unsigned long)+0x20>
 8012264:	4b15      	ldr	r3, [pc, #84]	@ (80122bc <net::phy_config(unsigned long)+0xcc>)
 8012266:	4a16      	ldr	r2, [pc, #88]	@ (80122c0 <net::phy_config(unsigned long)+0xd0>)
 8012268:	4403      	add	r3, r0
 801226a:	4293      	cmp	r3, r2
 801226c:	d902      	bls.n	8012274 <net::phy_config(unsigned long)+0x84>
 801226e:	2000      	movs	r0, #0
 8012270:	b002      	add	sp, #8
 8012272:	bd70      	pop	{r4, r5, r6, pc}
 8012274:	f044 0410 	orr.w	r4, r4, #16
 8012278:	e7ca      	b.n	8012210 <net::phy_config(unsigned long)+0x20>
 801227a:	f10d 0206 	add.w	r2, sp, #6
 801227e:	2100      	movs	r1, #0
 8012280:	4628      	mov	r0, r5
 8012282:	f7ff ff99 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012286:	2800      	cmp	r0, #0
 8012288:	d0f1      	beq.n	801226e <net::phy_config(unsigned long)+0x7e>
 801228a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801228e:	2b00      	cmp	r3, #0
 8012290:	dbc8      	blt.n	8012224 <net::phy_config(unsigned long)+0x34>
 8012292:	e7ed      	b.n	8012270 <net::phy_config(unsigned long)+0x80>
 8012294:	40028000 	andmi	r8, r2, r0
 8012298:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 801229c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80122a0:	200145c8 	andcs	r4, r1, r8, asr #11
 80122a4:	fde9f140 	stc2l	1, cr15, [r9, #256]!	@ 0x100
 80122a8:	017d783f 	cmneq	sp, pc, lsr r8
 80122ac:	fc6c7900 	stc2l	9, cr7, [ip], #-0	@ <UNPREDICTABLE>
 80122b0:	02625a00 	rsbeq	r5, r2, #0, 20
 80122b4:	fa0a1f00 	blx	8299ebc <_sidata+0x27f548>
 80122b8:	02faf07f 	rscseq	pc, sl, #127	@ 0x7f
 80122bc:	f70f2e80 			@ <UNDEFINED> instruction: 0xf70f2e80
 80122c0:	055d4a80 	ldrbeq	r4, [sp, #-2688]	@ 0xfffff580

080122c4 <enet_gpio_config()>:
 80122c4:	b510      	push	{r4, lr}
 80122c6:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80122ca:	f002 fffd 	bl	80152c8 <rcu_periph_clock_enable>
 80122ce:	f640 4001 	movw	r0, #3073	@ 0xc01
 80122d2:	4c68      	ldr	r4, [pc, #416]	@ (8012474 <enet_gpio_config()+0x1b0>)
 80122d4:	f002 fff8 	bl	80152c8 <rcu_periph_clock_enable>
 80122d8:	f640 4002 	movw	r0, #3074	@ 0xc02
 80122dc:	f002 fff4 	bl	80152c8 <rcu_periph_clock_enable>
 80122e0:	f241 100e 	movw	r0, #4366	@ 0x110e
 80122e4:	f002 fff0 	bl	80152c8 <rcu_periph_clock_enable>
 80122e8:	4620      	mov	r0, r4
 80122ea:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80122ee:	2100      	movs	r1, #0
 80122f0:	f002 ffa6 	bl	8015240 <gpio_af_set>
 80122f4:	4620      	mov	r0, r4
 80122f6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80122fa:	2200      	movs	r2, #0
 80122fc:	2102      	movs	r1, #2
 80122fe:	f002 ff61 	bl	80151c4 <gpio_mode_set>
 8012302:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012306:	2203      	movs	r2, #3
 8012308:	4620      	mov	r0, r4
 801230a:	2100      	movs	r1, #0
 801230c:	f002 ff7c 	bl	8015208 <gpio_output_options_set>
 8012310:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 8012314:	f44f 00c0 	mov.w	r0, #6291456	@ 0x600000
 8012318:	f002 fff6 	bl	8015308 <rcu_ckout0_config>
 801231c:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8012320:	f003 f882 	bl	8015428 <syscfg_enet_phy_interface_config>
 8012324:	2302      	movs	r3, #2
 8012326:	4619      	mov	r1, r3
 8012328:	4620      	mov	r0, r4
 801232a:	2200      	movs	r2, #0
 801232c:	f002 ff4a 	bl	80151c4 <gpio_mode_set>
 8012330:	4620      	mov	r0, r4
 8012332:	2302      	movs	r3, #2
 8012334:	2203      	movs	r2, #3
 8012336:	2100      	movs	r1, #0
 8012338:	f002 ff66 	bl	8015208 <gpio_output_options_set>
 801233c:	4620      	mov	r0, r4
 801233e:	2304      	movs	r3, #4
 8012340:	2200      	movs	r2, #0
 8012342:	2102      	movs	r1, #2
 8012344:	f002 ff3e 	bl	80151c4 <gpio_mode_set>
 8012348:	4620      	mov	r0, r4
 801234a:	2304      	movs	r3, #4
 801234c:	2203      	movs	r2, #3
 801234e:	2100      	movs	r1, #0
 8012350:	f002 ff5a 	bl	8015208 <gpio_output_options_set>
 8012354:	4620      	mov	r0, r4
 8012356:	2380      	movs	r3, #128	@ 0x80
 8012358:	2200      	movs	r2, #0
 801235a:	2102      	movs	r1, #2
 801235c:	f002 ff32 	bl	80151c4 <gpio_mode_set>
 8012360:	2380      	movs	r3, #128	@ 0x80
 8012362:	4620      	mov	r0, r4
 8012364:	2203      	movs	r2, #3
 8012366:	2100      	movs	r1, #0
 8012368:	f002 ff4e 	bl	8015208 <gpio_output_options_set>
 801236c:	4620      	mov	r0, r4
 801236e:	2202      	movs	r2, #2
 8012370:	210b      	movs	r1, #11
 8012372:	f002 ff65 	bl	8015240 <gpio_af_set>
 8012376:	4620      	mov	r0, r4
 8012378:	2204      	movs	r2, #4
 801237a:	210b      	movs	r1, #11
 801237c:	f002 ff60 	bl	8015240 <gpio_af_set>
 8012380:	4620      	mov	r0, r4
 8012382:	2280      	movs	r2, #128	@ 0x80
 8012384:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8012388:	210b      	movs	r1, #11
 801238a:	f002 ff59 	bl	8015240 <gpio_af_set>
 801238e:	4620      	mov	r0, r4
 8012390:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012394:	2200      	movs	r2, #0
 8012396:	2102      	movs	r1, #2
 8012398:	f002 ff14 	bl	80151c4 <gpio_mode_set>
 801239c:	4620      	mov	r0, r4
 801239e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80123a2:	2203      	movs	r2, #3
 80123a4:	2100      	movs	r1, #0
 80123a6:	f002 ff2f 	bl	8015208 <gpio_output_options_set>
 80123aa:	4620      	mov	r0, r4
 80123ac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80123b0:	2200      	movs	r2, #0
 80123b2:	2102      	movs	r1, #2
 80123b4:	f002 ff06 	bl	80151c4 <gpio_mode_set>
 80123b8:	4620      	mov	r0, r4
 80123ba:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80123be:	2203      	movs	r2, #3
 80123c0:	2100      	movs	r1, #0
 80123c2:	f002 ff21 	bl	8015208 <gpio_output_options_set>
 80123c6:	4620      	mov	r0, r4
 80123c8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80123cc:	2200      	movs	r2, #0
 80123ce:	2102      	movs	r1, #2
 80123d0:	f002 fef8 	bl	80151c4 <gpio_mode_set>
 80123d4:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80123d8:	4620      	mov	r0, r4
 80123da:	2203      	movs	r2, #3
 80123dc:	2100      	movs	r1, #0
 80123de:	f002 ff13 	bl	8015208 <gpio_output_options_set>
 80123e2:	4620      	mov	r0, r4
 80123e4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80123e8:	210b      	movs	r1, #11
 80123ea:	f002 ff29 	bl	8015240 <gpio_af_set>
 80123ee:	4620      	mov	r0, r4
 80123f0:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80123f4:	210b      	movs	r1, #11
 80123f6:	f002 ff23 	bl	8015240 <gpio_af_set>
 80123fa:	4620      	mov	r0, r4
 80123fc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8012400:	210b      	movs	r1, #11
 8012402:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8012406:	f002 ff1b 	bl	8015240 <gpio_af_set>
 801240a:	2302      	movs	r3, #2
 801240c:	4619      	mov	r1, r3
 801240e:	4620      	mov	r0, r4
 8012410:	2200      	movs	r2, #0
 8012412:	f002 fed7 	bl	80151c4 <gpio_mode_set>
 8012416:	4620      	mov	r0, r4
 8012418:	2302      	movs	r3, #2
 801241a:	2203      	movs	r2, #3
 801241c:	2100      	movs	r1, #0
 801241e:	f002 fef3 	bl	8015208 <gpio_output_options_set>
 8012422:	4620      	mov	r0, r4
 8012424:	2310      	movs	r3, #16
 8012426:	2200      	movs	r2, #0
 8012428:	2102      	movs	r1, #2
 801242a:	f002 fecb 	bl	80151c4 <gpio_mode_set>
 801242e:	4620      	mov	r0, r4
 8012430:	2310      	movs	r3, #16
 8012432:	2203      	movs	r2, #3
 8012434:	2100      	movs	r1, #0
 8012436:	f002 fee7 	bl	8015208 <gpio_output_options_set>
 801243a:	4620      	mov	r0, r4
 801243c:	2320      	movs	r3, #32
 801243e:	2200      	movs	r2, #0
 8012440:	2102      	movs	r1, #2
 8012442:	f002 febf 	bl	80151c4 <gpio_mode_set>
 8012446:	2320      	movs	r3, #32
 8012448:	4620      	mov	r0, r4
 801244a:	2203      	movs	r2, #3
 801244c:	2100      	movs	r1, #0
 801244e:	f002 fedb 	bl	8015208 <gpio_output_options_set>
 8012452:	4620      	mov	r0, r4
 8012454:	2202      	movs	r2, #2
 8012456:	210b      	movs	r1, #11
 8012458:	f002 fef2 	bl	8015240 <gpio_af_set>
 801245c:	4620      	mov	r0, r4
 801245e:	2210      	movs	r2, #16
 8012460:	210b      	movs	r1, #11
 8012462:	f002 feed 	bl	8015240 <gpio_af_set>
 8012466:	4620      	mov	r0, r4
 8012468:	2220      	movs	r2, #32
 801246a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801246e:	210b      	movs	r1, #11
 8012470:	f002 bee6 	b.w	8015240 <gpio_af_set>
 8012474:	40020000 	andmi	r0, r2, r0

08012478 <emac_eth_recv(unsigned char**)>:
 8012478:	b538      	push	{r3, r4, r5, lr}
 801247a:	4d07      	ldr	r5, [pc, #28]	@ (8012498 <emac_eth_recv(unsigned char**)+0x20>)
 801247c:	4604      	mov	r4, r0
 801247e:	2102      	movs	r1, #2
 8012480:	6828      	ldr	r0, [r5, #0]
 8012482:	f002 fe19 	bl	80150b8 <enet_desc_information_get>
 8012486:	b118      	cbz	r0, 8012490 <emac_eth_recv(unsigned char**)+0x18>
 8012488:	682b      	ldr	r3, [r5, #0]
 801248a:	689b      	ldr	r3, [r3, #8]
 801248c:	6023      	str	r3, [r4, #0]
 801248e:	bd38      	pop	{r3, r4, r5, pc}
 8012490:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8012494:	bd38      	pop	{r3, r4, r5, pc}
 8012496:	bf00      	nop
 8012498:	20009d48 	andcs	r9, r0, r8, asr #26

0801249c <emac_free_pkt()>:
 801249c:	490d      	ldr	r1, [pc, #52]	@ (80124d4 <emac_free_pkt()+0x38>)
 801249e:	e001      	b.n	80124a4 <emac_free_pkt()+0x8>
 80124a0:	f3bf 8f5f 	dmb	sy
 80124a4:	680b      	ldr	r3, [r1, #0]
 80124a6:	681a      	ldr	r2, [r3, #0]
 80124a8:	2a00      	cmp	r2, #0
 80124aa:	dbf9      	blt.n	80124a0 <emac_free_pkt()+0x4>
 80124ac:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 80124b0:	4a09      	ldr	r2, [pc, #36]	@ (80124d8 <emac_free_pkt()+0x3c>)
 80124b2:	6018      	str	r0, [r3, #0]
 80124b4:	6950      	ldr	r0, [r2, #20]
 80124b6:	0600      	lsls	r0, r0, #24
 80124b8:	d509      	bpl.n	80124ce <emac_free_pkt()+0x32>
 80124ba:	b410      	push	{r4}
 80124bc:	2000      	movs	r0, #0
 80124be:	2480      	movs	r4, #128	@ 0x80
 80124c0:	6154      	str	r4, [r2, #20]
 80124c2:	6090      	str	r0, [r2, #8]
 80124c4:	68db      	ldr	r3, [r3, #12]
 80124c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80124ca:	600b      	str	r3, [r1, #0]
 80124cc:	4770      	bx	lr
 80124ce:	68db      	ldr	r3, [r3, #12]
 80124d0:	600b      	str	r3, [r1, #0]
 80124d2:	4770      	bx	lr
 80124d4:	20009d48 	andcs	r9, r0, r8, asr #26
 80124d8:	40029000 	andmi	r9, r2, r0

080124dc <emac_eth_send(void*, unsigned long)>:
 80124dc:	b570      	push	{r4, r5, r6, lr}
 80124de:	4c20      	ldr	r4, [pc, #128]	@ (8012560 <emac_eth_send(void*, unsigned long)+0x84>)
 80124e0:	e001      	b.n	80124e6 <emac_eth_send(void*, unsigned long)+0xa>
 80124e2:	f3bf 8f5f 	dmb	sy
 80124e6:	6823      	ldr	r3, [r4, #0]
 80124e8:	681a      	ldr	r2, [r3, #0]
 80124ea:	2a00      	cmp	r2, #0
 80124ec:	dbf9      	blt.n	80124e2 <emac_eth_send(void*, unsigned long)+0x6>
 80124ee:	689b      	ldr	r3, [r3, #8]
 80124f0:	ea43 0200 	orr.w	r2, r3, r0
 80124f4:	0792      	lsls	r2, r2, #30
 80124f6:	d01e      	beq.n	8012536 <emac_eth_send(void*, unsigned long)+0x5a>
 80124f8:	460a      	mov	r2, r1
 80124fa:	eb00 0c02 	add.w	ip, r0, r2
 80124fe:	b12a      	cbz	r2, 801250c <emac_eth_send(void*, unsigned long)+0x30>
 8012500:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012504:	f803 2b01 	strb.w	r2, [r3], #1
 8012508:	4584      	cmp	ip, r0
 801250a:	d1f9      	bne.n	8012500 <emac_eth_send(void*, unsigned long)+0x24>
 801250c:	6822      	ldr	r2, [r4, #0]
 801250e:	4815      	ldr	r0, [pc, #84]	@ (8012564 <emac_eth_send(void*, unsigned long)+0x88>)
 8012510:	6813      	ldr	r3, [r2, #0]
 8012512:	6051      	str	r1, [r2, #4]
 8012514:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 8012518:	6013      	str	r3, [r2, #0]
 801251a:	6943      	ldr	r3, [r0, #20]
 801251c:	6941      	ldr	r1, [r0, #20]
 801251e:	f003 0304 	and.w	r3, r3, #4
 8012522:	f001 0120 	and.w	r1, r1, #32
 8012526:	430b      	orrs	r3, r1
 8012528:	d002      	beq.n	8012530 <emac_eth_send(void*, unsigned long)+0x54>
 801252a:	2100      	movs	r1, #0
 801252c:	6143      	str	r3, [r0, #20]
 801252e:	6041      	str	r1, [r0, #4]
 8012530:	68d3      	ldr	r3, [r2, #12]
 8012532:	6023      	str	r3, [r4, #0]
 8012534:	bd70      	pop	{r4, r5, r6, pc}
 8012536:	2903      	cmp	r1, #3
 8012538:	d9de      	bls.n	80124f8 <emac_eth_send(void*, unsigned long)+0x1c>
 801253a:	1f0e      	subs	r6, r1, #4
 801253c:	f026 0603 	bic.w	r6, r6, #3
 8012540:	3604      	adds	r6, #4
 8012542:	eb00 0c06 	add.w	ip, r0, r6
 8012546:	eba3 0e00 	sub.w	lr, r3, r0
 801254a:	eb00 020e 	add.w	r2, r0, lr
 801254e:	f850 5b04 	ldr.w	r5, [r0], #4
 8012552:	6015      	str	r5, [r2, #0]
 8012554:	4560      	cmp	r0, ip
 8012556:	d1f8      	bne.n	801254a <emac_eth_send(void*, unsigned long)+0x6e>
 8012558:	4433      	add	r3, r6
 801255a:	f001 0203 	and.w	r2, r1, #3
 801255e:	e7cc      	b.n	80124fa <emac_eth_send(void*, unsigned long)+0x1e>
 8012560:	20009d4c 	andcs	r9, r0, ip, asr #26
 8012564:	40029000 	andmi	r9, r2, r0

08012568 <net::acd_start(net::acd::Acd*, net::ip_addr)>:
 8012568:	2301      	movs	r3, #1
 801256a:	b510      	push	{r4, lr}
 801256c:	7103      	strb	r3, [r0, #4]
 801256e:	6001      	str	r1, [r0, #0]
 8012570:	4604      	mov	r4, r0
 8012572:	f004 fc8b 	bl	8016e8c <random>
 8012576:	230a      	movs	r3, #10
 8012578:	fbb0 f2f3 	udiv	r2, r0, r3
 801257c:	fb02 0013 	mls	r0, r2, r3, r0
 8012580:	4b11      	ldr	r3, [pc, #68]	@ (80125c8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x60>)
 8012582:	81a0      	strh	r0, [r4, #12]
 8012584:	681b      	ldr	r3, [r3, #0]
 8012586:	f8d3 00a0 	ldr.w	r0, [r3, #160]	@ 0xa0
 801258a:	2807      	cmp	r0, #7
 801258c:	d907      	bls.n	801259e <net::acd_start(net::acd::Acd*, net::ip_addr)+0x36>
 801258e:	480f      	ldr	r0, [pc, #60]	@ (80125cc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x64>)
 8012590:	f002 f97a 	bl	8014888 <console_error>
 8012594:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8012598:	4b0d      	ldr	r3, [pc, #52]	@ (80125d0 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x68>)
 801259a:	601a      	str	r2, [r3, #0]
 801259c:	bd10      	pop	{r4, pc}
 801259e:	4a0d      	ldr	r2, [pc, #52]	@ (80125d4 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x6c>)
 80125a0:	6811      	ldr	r1, [r2, #0]
 80125a2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80125a6:	1c54      	adds	r4, r2, #1
 80125a8:	f8c3 40a4 	str.w	r4, [r3, #164]	@ 0xa4
 80125ac:	1c44      	adds	r4, r0, #1
 80125ae:	f8c3 40a0 	str.w	r4, [r3, #160]	@ 0xa0
 80125b2:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 80125b6:	3164      	adds	r1, #100	@ 0x64
 80125b8:	6219      	str	r1, [r3, #32]
 80125ba:	2164      	movs	r1, #100	@ 0x64
 80125bc:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80125c0:	4905      	ldr	r1, [pc, #20]	@ (80125d8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x70>)
 80125c2:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80125c4:	e7e8      	b.n	8012598 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x30>
 80125c6:	bf00      	nop
 80125c8:	20009d00 	andcs	r9, r0, r0, lsl #26
 80125cc:	08017c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr}
 80125d0:	20009b7c 	andcs	r9, r0, ip, ror fp
 80125d4:	200145c8 	andcs	r4, r1, r8, asr #11
 80125d8:	08012635 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, sp}

080125dc <net::acd_stop(net::acd::Acd*)>:
 80125dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80125de:	4e13      	ldr	r6, [pc, #76]	@ (801262c <net::acd_stop(net::acd::Acd*)+0x50>)
 80125e0:	6832      	ldr	r2, [r6, #0]
 80125e2:	2300      	movs	r3, #0
 80125e4:	429a      	cmp	r2, r3
 80125e6:	7103      	strb	r3, [r0, #4]
 80125e8:	db1a      	blt.n	8012620 <net::acd_stop(net::acd::Acd*)+0x44>
 80125ea:	4911      	ldr	r1, [pc, #68]	@ (8012630 <net::acd_stop(net::acd::Acd*)+0x54>)
 80125ec:	680d      	ldr	r5, [r1, #0]
 80125ee:	f8d5 40a0 	ldr.w	r4, [r5, #160]	@ 0xa0
 80125f2:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 80125f6:	42a3      	cmp	r3, r4
 80125f8:	d012      	beq.n	8012620 <net::acd_stop(net::acd::Acd*)+0x44>
 80125fa:	0118      	lsls	r0, r3, #4
 80125fc:	580f      	ldr	r7, [r1, r0]
 80125fe:	42ba      	cmp	r2, r7
 8012600:	d112      	bne.n	8012628 <net::acd_stop(net::acd::Acd*)+0x4c>
 8012602:	3c01      	subs	r4, #1
 8012604:	1ae2      	subs	r2, r4, r3
 8012606:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 801260a:	0112      	lsls	r2, r2, #4
 801260c:	3020      	adds	r0, #32
 801260e:	42a3      	cmp	r3, r4
 8012610:	bf88      	it	hi
 8012612:	2200      	movhi	r2, #0
 8012614:	4429      	add	r1, r5
 8012616:	4428      	add	r0, r5
 8012618:	f004 f8df 	bl	80167da <memmove>
 801261c:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
 8012620:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8012624:	6033      	str	r3, [r6, #0]
 8012626:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012628:	3301      	adds	r3, #1
 801262a:	e7e4      	b.n	80125f6 <net::acd_stop(net::acd::Acd*)+0x1a>
 801262c:	20009b7c 	andcs	r9, r0, ip, ror fp
 8012630:	20009d00 	andcs	r9, r0, r0, lsl #26

08012634 <net::acd_timer()>:
 8012634:	b510      	push	{r4, lr}
 8012636:	4b2b      	ldr	r3, [pc, #172]	@ (80126e4 <net::acd_timer()+0xb0>)
 8012638:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 801263a:	79a3      	ldrb	r3, [r4, #6]
 801263c:	b10b      	cbz	r3, 8012642 <net::acd_timer()+0xe>
 801263e:	3b01      	subs	r3, #1
 8012640:	71a3      	strb	r3, [r4, #6]
 8012642:	89a3      	ldrh	r3, [r4, #12]
 8012644:	b10b      	cbz	r3, 801264a <net::acd_timer()+0x16>
 8012646:	3b01      	subs	r3, #1
 8012648:	81a3      	strh	r3, [r4, #12]
 801264a:	7923      	ldrb	r3, [r4, #4]
 801264c:	2b04      	cmp	r3, #4
 801264e:	d805      	bhi.n	801265c <net::acd_timer()+0x28>
 8012650:	2b02      	cmp	r3, #2
 8012652:	d82b      	bhi.n	80126ac <net::acd_timer()+0x78>
 8012654:	3b01      	subs	r3, #1
 8012656:	2b01      	cmp	r3, #1
 8012658:	d90b      	bls.n	8012672 <net::acd_timer()+0x3e>
 801265a:	bd10      	pop	{r4, pc}
 801265c:	2b07      	cmp	r3, #7
 801265e:	d1fc      	bne.n	801265a <net::acd_timer()+0x26>
 8012660:	89a3      	ldrh	r3, [r4, #12]
 8012662:	2b00      	cmp	r3, #0
 8012664:	d1f9      	bne.n	801265a <net::acd_timer()+0x26>
 8012666:	4620      	mov	r0, r4
 8012668:	f7ff ffb8 	bl	80125dc <net::acd_stop(net::acd::Acd*)>
 801266c:	68a3      	ldr	r3, [r4, #8]
 801266e:	2001      	movs	r0, #1
 8012670:	e034      	b.n	80126dc <net::acd_timer()+0xa8>
 8012672:	89a3      	ldrh	r3, [r4, #12]
 8012674:	2b00      	cmp	r3, #0
 8012676:	d1f0      	bne.n	801265a <net::acd_timer()+0x26>
 8012678:	2302      	movs	r3, #2
 801267a:	7123      	strb	r3, [r4, #4]
 801267c:	6820      	ldr	r0, [r4, #0]
 801267e:	f000 f9df 	bl	8012a40 <net::arp_acd_probe(net::ip_addr)>
 8012682:	7963      	ldrb	r3, [r4, #5]
 8012684:	3301      	adds	r3, #1
 8012686:	b2db      	uxtb	r3, r3
 8012688:	2b02      	cmp	r3, #2
 801268a:	7163      	strb	r3, [r4, #5]
 801268c:	d904      	bls.n	8012698 <net::acd_timer()+0x64>
 801268e:	2303      	movs	r3, #3
 8012690:	80a3      	strh	r3, [r4, #4]
 8012692:	2314      	movs	r3, #20
 8012694:	81a3      	strh	r3, [r4, #12]
 8012696:	e7e0      	b.n	801265a <net::acd_timer()+0x26>
 8012698:	f004 fbf8 	bl	8016e8c <random>
 801269c:	230a      	movs	r3, #10
 801269e:	fbb0 f2f3 	udiv	r2, r0, r3
 80126a2:	fb02 0013 	mls	r0, r2, r3, r0
 80126a6:	4418      	add	r0, r3
 80126a8:	81a0      	strh	r0, [r4, #12]
 80126aa:	e7d6      	b.n	801265a <net::acd_timer()+0x26>
 80126ac:	89a3      	ldrh	r3, [r4, #12]
 80126ae:	2b00      	cmp	r3, #0
 80126b0:	d1d3      	bne.n	801265a <net::acd_timer()+0x26>
 80126b2:	7963      	ldrb	r3, [r4, #5]
 80126b4:	b913      	cbnz	r3, 80126bc <net::acd_timer()+0x88>
 80126b6:	2204      	movs	r2, #4
 80126b8:	7122      	strb	r2, [r4, #4]
 80126ba:	71e3      	strb	r3, [r4, #7]
 80126bc:	6820      	ldr	r0, [r4, #0]
 80126be:	f000 f9d3 	bl	8012a68 <net::arp_acd_send_announcement(net::ip_addr)>
 80126c2:	2314      	movs	r3, #20
 80126c4:	81a3      	strh	r3, [r4, #12]
 80126c6:	7963      	ldrb	r3, [r4, #5]
 80126c8:	3301      	adds	r3, #1
 80126ca:	b2db      	uxtb	r3, r3
 80126cc:	2b01      	cmp	r3, #1
 80126ce:	7163      	strb	r3, [r4, #5]
 80126d0:	d9c3      	bls.n	801265a <net::acd_timer()+0x26>
 80126d2:	2305      	movs	r3, #5
 80126d4:	80a3      	strh	r3, [r4, #4]
 80126d6:	2000      	movs	r0, #0
 80126d8:	68a3      	ldr	r3, [r4, #8]
 80126da:	81a0      	strh	r0, [r4, #12]
 80126dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126e0:	4718      	bx	r3
 80126e2:	bf00      	nop
 80126e4:	20009b50 	andcs	r9, r0, r0, asr fp

080126e8 <net::acd_restart(net::acd::Acd*)>:
 80126e8:	b510      	push	{r4, lr}
 80126ea:	79c3      	ldrb	r3, [r0, #7]
 80126ec:	4604      	mov	r4, r0
 80126ee:	3301      	adds	r3, #1
 80126f0:	71c3      	strb	r3, [r0, #7]
 80126f2:	6883      	ldr	r3, [r0, #8]
 80126f4:	2002      	movs	r0, #2
 80126f6:	4798      	blx	r3
 80126f8:	79e3      	ldrb	r3, [r4, #7]
 80126fa:	2b09      	cmp	r3, #9
 80126fc:	d905      	bls.n	801270a <net::acd_restart(net::acd::Acd*)+0x22>
 80126fe:	2307      	movs	r3, #7
 8012700:	7123      	strb	r3, [r4, #4]
 8012702:	f44f 7316 	mov.w	r3, #600	@ 0x258
 8012706:	81a3      	strh	r3, [r4, #12]
 8012708:	bd10      	pop	{r4, pc}
 801270a:	4620      	mov	r0, r4
 801270c:	f7ff ff66 	bl	80125dc <net::acd_stop(net::acd::Acd*)>
 8012710:	68a3      	ldr	r3, [r4, #8]
 8012712:	2001      	movs	r0, #1
 8012714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012718:	4718      	bx	r3
	...

0801271c <net::acd_network_changed_link_down()>:
 801271c:	4b01      	ldr	r3, [pc, #4]	@ (8012724 <net::acd_network_changed_link_down()+0x8>)
 801271e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8012720:	f7ff bf5c 	b.w	80125dc <net::acd_stop(net::acd::Acd*)>
 8012724:	20009b50 	andcs	r9, r0, r0, asr fp

08012728 <net::acd_arp_reply(t_arp*)>:
 8012728:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801272c:	4e28      	ldr	r6, [pc, #160]	@ (80127d0 <net::acd_arp_reply(t_arp*)+0xa8>)
 801272e:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 8012730:	792f      	ldrb	r7, [r5, #4]
 8012732:	2f03      	cmp	r7, #3
 8012734:	4604      	mov	r4, r0
 8012736:	d802      	bhi.n	801273e <net::acd_arp_reply(t_arp*)+0x16>
 8012738:	b9bf      	cbnz	r7, 801276a <net::acd_arp_reply(t_arp*)+0x42>
 801273a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801273e:	1f3b      	subs	r3, r7, #4
 8012740:	2b02      	cmp	r3, #2
 8012742:	d8fa      	bhi.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 8012744:	301c      	adds	r0, #28
 8012746:	f7fe fb8b 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 801274a:	682b      	ldr	r3, [r5, #0]
 801274c:	4298      	cmp	r0, r3
 801274e:	d1f4      	bne.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 8012750:	f104 0315 	add.w	r3, r4, #21
 8012754:	3613      	adds	r6, #19
 8012756:	341b      	adds	r4, #27
 8012758:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801275c:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8012760:	4291      	cmp	r1, r2
 8012762:	d121      	bne.n	80127a8 <net::acd_arp_reply(t_arp*)+0x80>
 8012764:	42a3      	cmp	r3, r4
 8012766:	d1f7      	bne.n	8012758 <net::acd_arp_reply(t_arp*)+0x30>
 8012768:	e7e7      	b.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 801276a:	301c      	adds	r0, #28
 801276c:	f7fe fb78 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 8012770:	682f      	ldr	r7, [r5, #0]
 8012772:	42b8      	cmp	r0, r7
 8012774:	d013      	beq.n	801279e <net::acd_arp_reply(t_arp*)+0x76>
 8012776:	2800      	cmp	r0, #0
 8012778:	d0df      	beq.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 801277a:	f104 0026 	add.w	r0, r4, #38	@ 0x26
 801277e:	f7fe fb6f 	bl	8010e60 <net::memcpy_ip(unsigned char const*)>
 8012782:	4287      	cmp	r7, r0
 8012784:	d1d9      	bne.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 8012786:	f104 0315 	add.w	r3, r4, #21
 801278a:	3613      	adds	r6, #19
 801278c:	341b      	adds	r4, #27
 801278e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8012792:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8012796:	4291      	cmp	r1, r2
 8012798:	d1cf      	bne.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 801279a:	42a3      	cmp	r3, r4
 801279c:	d1f7      	bne.n	801278e <net::acd_arp_reply(t_arp*)+0x66>
 801279e:	4628      	mov	r0, r5
 80127a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80127a4:	f7ff bfa0 	b.w	80126e8 <net::acd_restart(net::acd::Acd*)>
 80127a8:	2f06      	cmp	r7, #6
 80127aa:	d107      	bne.n	80127bc <net::acd_arp_reply(t_arp*)+0x94>
 80127ac:	4628      	mov	r0, r5
 80127ae:	f7ff ff15 	bl	80125dc <net::acd_stop(net::acd::Acd*)>
 80127b2:	68ab      	ldr	r3, [r5, #8]
 80127b4:	2002      	movs	r0, #2
 80127b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80127ba:	4718      	bx	r3
 80127bc:	79ab      	ldrb	r3, [r5, #6]
 80127be:	2b00      	cmp	r3, #0
 80127c0:	d1ed      	bne.n	801279e <net::acd_arp_reply(t_arp*)+0x76>
 80127c2:	6828      	ldr	r0, [r5, #0]
 80127c4:	f000 f950 	bl	8012a68 <net::arp_acd_send_announcement(net::ip_addr)>
 80127c8:	2364      	movs	r3, #100	@ 0x64
 80127ca:	71ab      	strb	r3, [r5, #6]
 80127cc:	e7b5      	b.n	801273a <net::acd_arp_reply(t_arp*)+0x12>
 80127ce:	bf00      	nop
 80127d0:	20009b50 	andcs	r9, r0, r0, asr fp

080127d4 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
 80127d4:	4b01      	ldr	r3, [pc, #4]	@ (80127dc <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x8>)
 80127d6:	6081      	str	r1, [r0, #8]
 80127d8:	6258      	str	r0, [r3, #36]	@ 0x24
 80127da:	4770      	bx	lr
 80127dc:	20009b50 	andcs	r9, r0, r0, asr fp

080127e0 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
 80127e0:	b320      	cbz	r0, 801282c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80127e2:	b319      	cbz	r1, 801282c <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80127e4:	4b12      	ldr	r3, [pc, #72]	@ (8012830 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x50>)
 80127e6:	b510      	push	{r4, lr}
 80127e8:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80127ea:	6823      	ldr	r3, [r4, #0]
 80127ec:	4283      	cmp	r3, r0
 80127ee:	d119      	bne.n	8012824 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80127f0:	b29b      	uxth	r3, r3
 80127f2:	f64a 12fe 	movw	r2, #43518	@ 0xa9fe
 80127f6:	4293      	cmp	r3, r2
 80127f8:	d114      	bne.n	8012824 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80127fa:	b289      	uxth	r1, r1
 80127fc:	4299      	cmp	r1, r3
 80127fe:	d011      	beq.n	8012824 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8012800:	7923      	ldrb	r3, [r4, #4]
 8012802:	2b05      	cmp	r3, #5
 8012804:	d80c      	bhi.n	8012820 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x40>
 8012806:	2b03      	cmp	r3, #3
 8012808:	d80d      	bhi.n	8012826 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x46>
 801280a:	3b01      	subs	r3, #1
 801280c:	2b02      	cmp	r3, #2
 801280e:	d809      	bhi.n	8012824 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8012810:	4620      	mov	r0, r4
 8012812:	f7ff fee3 	bl	80125dc <net::acd_stop(net::acd::Acd*)>
 8012816:	68a3      	ldr	r3, [r4, #8]
 8012818:	2002      	movs	r0, #2
 801281a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801281e:	4718      	bx	r3
 8012820:	2b07      	cmp	r3, #7
 8012822:	d0f5      	beq.n	8012810 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x30>
 8012824:	bd10      	pop	{r4, pc}
 8012826:	2306      	movs	r3, #6
 8012828:	7123      	strb	r3, [r4, #4]
 801282a:	e7fb      	b.n	8012824 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 801282c:	4770      	bx	lr
 801282e:	bf00      	nop
 8012830:	20009b50 	andcs	r9, r0, r0, asr fp

08012834 <net::arp_find_record(unsigned long, net::arp::Flags)>:
 8012834:	4b17      	ldr	r3, [pc, #92]	@ (8012894 <net::arp_find_record(unsigned long, net::arp::Flags)+0x60>)
 8012836:	b570      	push	{r4, r5, r6, lr}
 8012838:	f04f 0e00 	mov.w	lr, #0
 801283c:	4604      	mov	r4, r0
 801283e:	f503 7cc0 	add.w	ip, r3, #384	@ 0x180
 8012842:	4676      	mov	r6, lr
 8012844:	4675      	mov	r5, lr
 8012846:	4670      	mov	r0, lr
 8012848:	e004      	b.n	8012854 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801284a:	2a03      	cmp	r2, #3
 801284c:	d019      	beq.n	8012882 <net::arp_find_record(unsigned long, net::arp::Flags)+0x4e>
 801284e:	3318      	adds	r3, #24
 8012850:	4563      	cmp	r3, ip
 8012852:	d012      	beq.n	801287a <net::arp_find_record(unsigned long, net::arp::Flags)+0x46>
 8012854:	681a      	ldr	r2, [r3, #0]
 8012856:	42a2      	cmp	r2, r4
 8012858:	d01a      	beq.n	8012890 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5c>
 801285a:	2901      	cmp	r1, #1
 801285c:	d0f7      	beq.n	801284e <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 801285e:	695a      	ldr	r2, [r3, #20]
 8012860:	b1aa      	cbz	r2, 801288e <net::arp_find_record(unsigned long, net::arp::Flags)+0x5a>
 8012862:	2a02      	cmp	r2, #2
 8012864:	d1f1      	bne.n	801284a <net::arp_find_record(unsigned long, net::arp::Flags)+0x16>
 8012866:	8a5a      	ldrh	r2, [r3, #18]
 8012868:	4572      	cmp	r2, lr
 801286a:	bf88      	it	hi
 801286c:	461d      	movhi	r5, r3
 801286e:	f103 0318 	add.w	r3, r3, #24
 8012872:	bf88      	it	hi
 8012874:	4696      	movhi	lr, r2
 8012876:	4563      	cmp	r3, ip
 8012878:	d1ec      	bne.n	8012854 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801287a:	2800      	cmp	r0, #0
 801287c:	bf08      	it	eq
 801287e:	4628      	moveq	r0, r5
 8012880:	bd70      	pop	{r4, r5, r6, pc}
 8012882:	8a5a      	ldrh	r2, [r3, #18]
 8012884:	42b2      	cmp	r2, r6
 8012886:	bf84      	itt	hi
 8012888:	4616      	movhi	r6, r2
 801288a:	4618      	movhi	r0, r3
 801288c:	e7df      	b.n	801284e <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 801288e:	601c      	str	r4, [r3, #0]
 8012890:	4618      	mov	r0, r3
 8012892:	bd70      	pop	{r4, r5, r6, pc}
 8012894:	1000cb10 	andne	ip, r0, r0, lsl fp

08012898 <net::arp_timer()>:
 8012898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801289c:	4c28      	ldr	r4, [pc, #160]	@ (8012940 <net::arp_timer()+0xa8>)
 801289e:	2703      	movs	r7, #3
 80128a0:	f504 76c0 	add.w	r6, r4, #384	@ 0x180
 80128a4:	f04f 0800 	mov.w	r8, #0
 80128a8:	e006      	b.n	80128b8 <net::arp_timer()+0x20>
 80128aa:	2a01      	cmp	r2, #1
 80128ac:	d101      	bne.n	80128b2 <net::arp_timer()+0x1a>
 80128ae:	2b02      	cmp	r3, #2
 80128b0:	d839      	bhi.n	8012926 <net::arp_timer()+0x8e>
 80128b2:	3418      	adds	r4, #24
 80128b4:	42a6      	cmp	r6, r4
 80128b6:	d02c      	beq.n	8012912 <net::arp_timer()+0x7a>
 80128b8:	f854 2c04 	ldr.w	r2, [r4, #-4]
 80128bc:	2a00      	cmp	r2, #0
 80128be:	d0f8      	beq.n	80128b2 <net::arp_timer()+0x1a>
 80128c0:	f834 3c06 	ldrh.w	r3, [r4, #-6]
 80128c4:	3301      	adds	r3, #1
 80128c6:	b29b      	uxth	r3, r3
 80128c8:	2a02      	cmp	r2, #2
 80128ca:	f824 3c06 	strh.w	r3, [r4, #-6]
 80128ce:	d022      	beq.n	8012916 <net::arp_timer()+0x7e>
 80128d0:	2a03      	cmp	r2, #3
 80128d2:	d1ea      	bne.n	80128aa <net::arp_timer()+0x12>
 80128d4:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 80128d8:	d9eb      	bls.n	80128b2 <net::arp_timer()+0x1a>
 80128da:	4d1a      	ldr	r5, [pc, #104]	@ (8012944 <net::arp_timer()+0xac>)
 80128dc:	2301      	movs	r3, #1
 80128de:	f844 3c04 	str.w	r3, [r4, #-4]
 80128e2:	f854 3c18 	ldr.w	r3, [r4, #-24]
 80128e6:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 80128ea:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80128ee:	602b      	str	r3, [r5, #0]
 80128f0:	4628      	mov	r0, r5
 80128f2:	f834 3c08 	ldrh.w	r3, [r4, #-8]
 80128f6:	80ab      	strh	r3, [r5, #4]
 80128f8:	213c      	movs	r1, #60	@ 0x3c
 80128fa:	f7ff fdef 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 80128fe:	4628      	mov	r0, r5
 8012900:	1dab      	adds	r3, r5, #6
 8012902:	22ff      	movs	r2, #255	@ 0xff
 8012904:	f800 2b01 	strb.w	r2, [r0], #1
 8012908:	4298      	cmp	r0, r3
 801290a:	d1fb      	bne.n	8012904 <net::arp_timer()+0x6c>
 801290c:	3418      	adds	r4, #24
 801290e:	42a6      	cmp	r6, r4
 8012910:	d1d2      	bne.n	80128b8 <net::arp_timer()+0x20>
 8012912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012916:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 801291a:	d9ca      	bls.n	80128b2 <net::arp_timer()+0x1a>
 801291c:	f844 7c04 	str.w	r7, [r4, #-4]
 8012920:	f824 8c06 	strh.w	r8, [r4, #-6]
 8012924:	e7c5      	b.n	80128b2 <net::arp_timer()+0x1a>
 8012926:	f854 0c14 	ldr.w	r0, [r4, #-20]
 801292a:	b108      	cbz	r0, 8012930 <net::arp_timer()+0x98>
 801292c:	f004 fc5a 	bl	80171e4 <operator delete[](void*)>
 8012930:	f1a4 0318 	sub.w	r3, r4, #24
 8012934:	2200      	movs	r2, #0
 8012936:	f843 2b04 	str.w	r2, [r3], #4
 801293a:	42a3      	cmp	r3, r4
 801293c:	d1fb      	bne.n	8012936 <net::arp_timer()+0x9e>
 801293e:	e7b8      	b.n	80128b2 <net::arp_timer()+0x1a>
 8012940:	1000cb28 	andne	ip, r0, r8, lsr #22
 8012944:	20009bbc 			@ <UNDEFINED> instruction: 0x20009bbc

08012948 <net::arp_send(t_udp*, unsigned long, unsigned long)>:
 8012948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801294a:	4b39      	ldr	r3, [pc, #228]	@ (8012a30 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>)
 801294c:	681b      	ldr	r3, [r3, #0]
 801294e:	4604      	mov	r4, r0
 8012950:	4393      	bics	r3, r2
 8012952:	f04f 0000 	mov.w	r0, #0
 8012956:	4615      	mov	r5, r2
 8012958:	f8c4 201e 	str.w	r2, [r4, #30]
 801295c:	7620      	strb	r0, [r4, #24]
 801295e:	7660      	strb	r0, [r4, #25]
 8012960:	460e      	mov	r6, r1
 8012962:	d15c      	bne.n	8012a1e <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd6>
 8012964:	4b33      	ldr	r3, [pc, #204]	@ (8012a34 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xec>)
 8012966:	f503 72c0 	add.w	r2, r3, #384	@ 0x180
 801296a:	6959      	ldr	r1, [r3, #20]
 801296c:	2901      	cmp	r1, #1
 801296e:	dd02      	ble.n	8012976 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2e>
 8012970:	6819      	ldr	r1, [r3, #0]
 8012972:	42a9      	cmp	r1, r5
 8012974:	d031      	beq.n	80129da <net::arp_send(t_udp*, unsigned long, unsigned long)+0x92>
 8012976:	3318      	adds	r3, #24
 8012978:	4293      	cmp	r3, r2
 801297a:	d1f6      	bne.n	801296a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x22>
 801297c:	2100      	movs	r1, #0
 801297e:	4628      	mov	r0, r5
 8012980:	f7ff ff58 	bl	8012834 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8012984:	6943      	ldr	r3, [r0, #20]
 8012986:	4607      	mov	r7, r0
 8012988:	b1d3      	cbz	r3, 80129c0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x78>
 801298a:	2b01      	cmp	r3, #1
 801298c:	d000      	beq.n	8012990 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 801298e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012990:	6878      	ldr	r0, [r7, #4]
 8012992:	b108      	cbz	r0, 8012998 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x50>
 8012994:	f004 fc26 	bl	80171e4 <operator delete[](void*)>
 8012998:	4630      	mov	r0, r6
 801299a:	f004 fc29 	bl	80171f0 <operator new[](unsigned int)>
 801299e:	ea44 0200 	orr.w	r2, r4, r0
 80129a2:	0792      	lsls	r2, r2, #30
 80129a4:	4603      	mov	r3, r0
 80129a6:	6078      	str	r0, [r7, #4]
 80129a8:	d027      	beq.n	80129fa <net::arp_send(t_udp*, unsigned long, unsigned long)+0xb2>
 80129aa:	4631      	mov	r1, r6
 80129ac:	b131      	cbz	r1, 80129bc <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
 80129ae:	4421      	add	r1, r4
 80129b0:	f814 2b01 	ldrb.w	r2, [r4], #1
 80129b4:	f803 2b01 	strb.w	r2, [r3], #1
 80129b8:	428c      	cmp	r4, r1
 80129ba:	d1f9      	bne.n	80129b0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
 80129bc:	60be      	str	r6, [r7, #8]
 80129be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80129c0:	8243      	strh	r3, [r0, #18]
 80129c2:	2301      	movs	r3, #1
 80129c4:	481c      	ldr	r0, [pc, #112]	@ (8012a38 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf0>)
 80129c6:	617b      	str	r3, [r7, #20]
 80129c8:	213c      	movs	r1, #60	@ 0x3c
 80129ca:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 80129ce:	f7ff fd85 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 80129d2:	697b      	ldr	r3, [r7, #20]
 80129d4:	2b01      	cmp	r3, #1
 80129d6:	d1da      	bne.n	801298e <net::arp_send(t_udp*, unsigned long, unsigned long)+0x46>
 80129d8:	e7da      	b.n	8012990 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 80129da:	f103 020c 	add.w	r2, r3, #12
 80129de:	4621      	mov	r1, r4
 80129e0:	3312      	adds	r3, #18
 80129e2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80129e6:	f801 0b01 	strb.w	r0, [r1], #1
 80129ea:	429a      	cmp	r2, r3
 80129ec:	d1f9      	bne.n	80129e2 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x9a>
 80129ee:	4631      	mov	r1, r6
 80129f0:	4620      	mov	r0, r4
 80129f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80129f6:	f7ff bd71 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 80129fa:	2e03      	cmp	r6, #3
 80129fc:	d9d5      	bls.n	80129aa <net::arp_send(t_udp*, unsigned long, unsigned long)+0x62>
 80129fe:	1f35      	subs	r5, r6, #4
 8012a00:	f025 0503 	bic.w	r5, r5, #3
 8012a04:	3504      	adds	r5, #4
 8012a06:	1960      	adds	r0, r4, r5
 8012a08:	461a      	mov	r2, r3
 8012a0a:	f854 1b04 	ldr.w	r1, [r4], #4
 8012a0e:	f842 1b04 	str.w	r1, [r2], #4
 8012a12:	4284      	cmp	r4, r0
 8012a14:	d1f9      	bne.n	8012a0a <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc2>
 8012a16:	442b      	add	r3, r5
 8012a18:	f006 0103 	and.w	r1, r6, #3
 8012a1c:	e7c6      	b.n	80129ac <net::arp_send(t_udp*, unsigned long, unsigned long)+0x64>
 8012a1e:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8012a22:	b292      	uxth	r2, r2
 8012a24:	429a      	cmp	r2, r3
 8012a26:	bf1c      	itt	ne
 8012a28:	4b04      	ldrne	r3, [pc, #16]	@ (8012a3c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf4>)
 8012a2a:	689d      	ldrne	r5, [r3, #8]
 8012a2c:	e79a      	b.n	8012964 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c>
 8012a2e:	bf00      	nop
 8012a30:	20009b34 	andcs	r9, r0, r4, lsr fp
 8012a34:	1000cb10 	andne	ip, r0, r0, lsl fp
 8012a38:	20009bbc 			@ <UNDEFINED> instruction: 0x20009bbc
 8012a3c:	20009b50 	andcs	r9, r0, r0, asr fp

08012a40 <net::arp_acd_probe(net::ip_addr)>:
 8012a40:	b510      	push	{r4, lr}
 8012a42:	4c07      	ldr	r4, [pc, #28]	@ (8012a60 <net::arp_acd_probe(net::ip_addr)+0x20>)
 8012a44:	4603      	mov	r3, r0
 8012a46:	2200      	movs	r2, #0
 8012a48:	213c      	movs	r1, #60	@ 0x3c
 8012a4a:	4620      	mov	r0, r4
 8012a4c:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8012a50:	61e2      	str	r2, [r4, #28]
 8012a52:	f7ff fd43 	bl	80124dc <emac_eth_send(void*, unsigned long)>
 8012a56:	4b03      	ldr	r3, [pc, #12]	@ (8012a64 <net::arp_acd_probe(net::ip_addr)+0x24>)
 8012a58:	681b      	ldr	r3, [r3, #0]
 8012a5a:	61e3      	str	r3, [r4, #28]
 8012a5c:	bd10      	pop	{r4, pc}
 8012a5e:	bf00      	nop
 8012a60:	20009bbc 			@ <UNDEFINED> instruction: 0x20009bbc
 8012a64:	20009b50 	andcs	r9, r0, r0, asr fp

08012a68 <net::arp_acd_send_announcement(net::ip_addr)>:
 8012a68:	4a04      	ldr	r2, [pc, #16]	@ (8012a7c <net::arp_acd_send_announcement(net::ip_addr)+0x14>)
 8012a6a:	4603      	mov	r3, r0
 8012a6c:	213c      	movs	r1, #60	@ 0x3c
 8012a6e:	4610      	mov	r0, r2
 8012a70:	f8c2 3026 	str.w	r3, [r2, #38]	@ 0x26
 8012a74:	61d3      	str	r3, [r2, #28]
 8012a76:	f7ff bd31 	b.w	80124dc <emac_eth_send(void*, unsigned long)>
 8012a7a:	bf00      	nop
 8012a7c:	20009bbc 			@ <UNDEFINED> instruction: 0x20009bbc

08012a80 <net::ip_set_ip()>:
 8012a80:	b508      	push	{r3, lr}
 8012a82:	f7ff f85b 	bl	8011b3c <net::udp_set_ip()>
 8012a86:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012a8a:	f7fe bc39 	b.w	8011300 <net::igmp_set_ip()>
 8012a8e:	bf00      	nop

08012a90 <net::phy_get_link(unsigned long)>:
 8012a90:	b507      	push	{r0, r1, r2, lr}
 8012a92:	2300      	movs	r3, #0
 8012a94:	f10d 0206 	add.w	r2, sp, #6
 8012a98:	2101      	movs	r1, #1
 8012a9a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012a9e:	f7ff fb8b 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012aa2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012aa6:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012aaa:	b003      	add	sp, #12
 8012aac:	f85d fb04 	ldr.w	pc, [sp], #4

08012ab0 <net::phy_start(unsigned long, net::PhyStatus&)>:
 8012ab0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012ab4:	460d      	mov	r5, r1
 8012ab6:	f10d 0206 	add.w	r2, sp, #6
 8012aba:	2104      	movs	r1, #4
 8012abc:	4604      	mov	r4, r0
 8012abe:	f7ff fb7b 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012ac2:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8012ac6:	f240 1241 	movw	r2, #321	@ 0x141
 8012aca:	f401 637e 	and.w	r3, r1, #4064	@ 0xfe0
 8012ace:	4313      	orrs	r3, r2
 8012ad0:	f411 616a 	ands.w	r1, r1, #3744	@ 0xea0
 8012ad4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012ad8:	d10a      	bne.n	8012af0 <net::phy_start(unsigned long, net::PhyStatus&)+0x40>
 8012ada:	f10d 0206 	add.w	r2, sp, #6
 8012ade:	4620      	mov	r0, r4
 8012ae0:	f7ff fb6a 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012ae4:	b9f8      	cbnz	r0, 8012b26 <net::phy_start(unsigned long, net::PhyStatus&)+0x76>
 8012ae6:	2600      	movs	r6, #0
 8012ae8:	4630      	mov	r0, r6
 8012aea:	b003      	add	sp, #12
 8012aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012af0:	2104      	movs	r1, #4
 8012af2:	4620      	mov	r0, r4
 8012af4:	f7ff fb6b 	bl	80121ce <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8012af8:	2800      	cmp	r0, #0
 8012afa:	d0f4      	beq.n	8012ae6 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8012afc:	f10d 0206 	add.w	r2, sp, #6
 8012b00:	2100      	movs	r1, #0
 8012b02:	4620      	mov	r0, r4
 8012b04:	f7ff fb58 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012b08:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012b0c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8012b10:	f442 5290 	orr.w	r2, r2, #4608	@ 0x1200
 8012b14:	b292      	uxth	r2, r2
 8012b16:	2100      	movs	r1, #0
 8012b18:	4620      	mov	r0, r4
 8012b1a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012b1e:	f7ff fb56 	bl	80121ce <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8012b22:	b938      	cbnz	r0, 8012b34 <net::phy_start(unsigned long, net::PhyStatus&)+0x84>
 8012b24:	e7df      	b.n	8012ae6 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8012b26:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012b2a:	f403 53a0 	and.w	r3, r3, #5120	@ 0x1400
 8012b2e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8012b32:	d1e3      	bne.n	8012afc <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
 8012b34:	f10d 0206 	add.w	r2, sp, #6
 8012b38:	2101      	movs	r1, #1
 8012b3a:	4620      	mov	r0, r4
 8012b3c:	f7ff fb3c 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012b40:	4606      	mov	r6, r0
 8012b42:	2800      	cmp	r0, #0
 8012b44:	d0cf      	beq.n	8012ae6 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8012b46:	682a      	ldr	r2, [r5, #0]
 8012b48:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012b4c:	b90a      	cbnz	r2, 8012b52 <net::phy_start(unsigned long, net::PhyStatus&)+0xa2>
 8012b4e:	0759      	lsls	r1, r3, #29
 8012b50:	d40f      	bmi.n	8012b72 <net::phy_start(unsigned long, net::PhyStatus&)+0xc2>
 8012b52:	069a      	lsls	r2, r3, #26
 8012b54:	d43b      	bmi.n	8012bce <net::phy_start(unsigned long, net::PhyStatus&)+0x11e>
 8012b56:	4f25      	ldr	r7, [pc, #148]	@ (8012bec <net::phy_start(unsigned long, net::PhyStatus&)+0x13c>)
 8012b58:	4825      	ldr	r0, [pc, #148]	@ (8012bf0 <net::phy_start(unsigned long, net::PhyStatus&)+0x140>)
 8012b5a:	f004 f98e 	bl	8016e7a <puts>
 8012b5e:	f8d7 8000 	ldr.w	r8, [r7]
 8012b62:	f241 3988 	movw	r9, #5000	@ 0x1388
 8012b66:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012b6a:	069b      	lsls	r3, r3, #26
 8012b6c:	d523      	bpl.n	8012bb6 <net::phy_start(unsigned long, net::PhyStatus&)+0x106>
 8012b6e:	2301      	movs	r3, #1
 8012b70:	602b      	str	r3, [r5, #0]
 8012b72:	2300      	movs	r3, #0
 8012b74:	e9c5 3301 	strd	r3, r3, [r5, #4]
 8012b78:	aa01      	add	r2, sp, #4
 8012b7a:	2104      	movs	r1, #4
 8012b7c:	4620      	mov	r0, r4
 8012b7e:	f7ff fb1b 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012b82:	f10d 0206 	add.w	r2, sp, #6
 8012b86:	2105      	movs	r1, #5
 8012b88:	4620      	mov	r0, r4
 8012b8a:	f7ff fb15 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012b8e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8012b92:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012b96:	4013      	ands	r3, r2
 8012b98:	f413 7fc0 	tst.w	r3, #384	@ 0x180
 8012b9c:	d022      	beq.n	8012be4 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
 8012b9e:	2201      	movs	r2, #1
 8012ba0:	60aa      	str	r2, [r5, #8]
 8012ba2:	f413 7f80 	tst.w	r3, #256	@ 0x100
 8012ba6:	d001      	beq.n	8012bac <net::phy_start(unsigned long, net::PhyStatus&)+0xfc>
 8012ba8:	2301      	movs	r3, #1
 8012baa:	606b      	str	r3, [r5, #4]
 8012bac:	4620      	mov	r0, r4
 8012bae:	f7ff ff6f 	bl	8012a90 <net::phy_get_link(unsigned long)>
 8012bb2:	6028      	str	r0, [r5, #0]
 8012bb4:	e798      	b.n	8012ae8 <net::phy_start(unsigned long, net::PhyStatus&)+0x38>
 8012bb6:	683b      	ldr	r3, [r7, #0]
 8012bb8:	eba3 0308 	sub.w	r3, r3, r8
 8012bbc:	454b      	cmp	r3, r9
 8012bbe:	d892      	bhi.n	8012ae6 <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8012bc0:	f10d 0206 	add.w	r2, sp, #6
 8012bc4:	2101      	movs	r1, #1
 8012bc6:	4620      	mov	r0, r4
 8012bc8:	f7ff faf6 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012bcc:	e7cb      	b.n	8012b66 <net::phy_start(unsigned long, net::PhyStatus&)+0xb6>
 8012bce:	f10d 0206 	add.w	r2, sp, #6
 8012bd2:	2101      	movs	r1, #1
 8012bd4:	4620      	mov	r0, r4
 8012bd6:	f7ff faef 	bl	80121b8 <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8012bda:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012bde:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8012be2:	e7c5      	b.n	8012b70 <net::phy_start(unsigned long, net::PhyStatus&)+0xc0>
 8012be4:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8012be8:	e7dd      	b.n	8012ba6 <net::phy_start(unsigned long, net::PhyStatus&)+0xf6>
 8012bea:	bf00      	nop
 8012bec:	200145c8 	andcs	r4, r1, r8, asr #11
 8012bf0:	08017d11 	stmdaeq	r1, {r0, r4, r8, sl, fp, ip, sp, lr}

08012bf4 <Display::ClearEndOfLine() [clone .isra.0]>:
 8012bf4:	b108      	cbz	r0, 8012bfa <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 8012bf6:	2301      	movs	r3, #1
 8012bf8:	7303      	strb	r3, [r0, #12]
 8012bfa:	4770      	bx	lr

08012bfc <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8012bfc:	b430      	push	{r4, r5}
 8012bfe:	b160      	cbz	r0, 8012c1a <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8012c00:	6845      	ldr	r5, [r0, #4]
 8012c02:	2300      	movs	r3, #0
 8012c04:	5cd4      	ldrb	r4, [r2, r3]
 8012c06:	b11c      	cbz	r4, 8012c10 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8012c08:	1c5c      	adds	r4, r3, #1
 8012c0a:	429d      	cmp	r5, r3
 8012c0c:	4623      	mov	r3, r4
 8012c0e:	d8f9      	bhi.n	8012c04 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8012c10:	6804      	ldr	r4, [r0, #0]
 8012c12:	69e4      	ldr	r4, [r4, #28]
 8012c14:	46a4      	mov	ip, r4
 8012c16:	bc30      	pop	{r4, r5}
 8012c18:	4760      	bx	ip
 8012c1a:	bc30      	pop	{r4, r5}
 8012c1c:	4770      	bx	lr
	...

08012c20 <DisplayUdf::ShowIpAddress()>:
 8012c20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c24:	4e16      	ldr	r6, [pc, #88]	@ (8012c80 <DisplayUdf::ShowIpAddress()+0x60>)
 8012c26:	b086      	sub	sp, #24
 8012c28:	4605      	mov	r5, r0
 8012c2a:	6980      	ldr	r0, [r0, #24]
 8012c2c:	f7ff ffe2 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012c30:	6870      	ldr	r0, [r6, #4]
 8012c32:	6834      	ldr	r4, [r6, #0]
 8012c34:	f895 703e 	ldrb.w	r7, [r5, #62]	@ 0x3e
 8012c38:	f004 fb28 	bl	801728c <__popcountsi2>
 8012c3c:	7eb3      	ldrb	r3, [r6, #26]
 8012c3e:	075a      	lsls	r2, r3, #29
 8012c40:	fa5f f884 	uxtb.w	r8, r4
 8012c44:	f3c4 2907 	ubfx	r9, r4, #8, #8
 8012c48:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 8012c4c:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8012c50:	d413      	bmi.n	8012c7a <DisplayUdf::ShowIpAddress()+0x5a>
 8012c52:	f013 0f02 	tst.w	r3, #2
 8012c56:	bf0c      	ite	eq
 8012c58:	2253      	moveq	r2, #83	@ 0x53
 8012c5a:	2244      	movne	r2, #68	@ 0x44
 8012c5c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8012c60:	e9cd a401 	strd	sl, r4, [sp, #4]
 8012c64:	4a07      	ldr	r2, [pc, #28]	@ (8012c84 <DisplayUdf::ShowIpAddress()+0x64>)
 8012c66:	f8cd 9000 	str.w	r9, [sp]
 8012c6a:	4643      	mov	r3, r8
 8012c6c:	4639      	mov	r1, r7
 8012c6e:	4628      	mov	r0, r5
 8012c70:	f7f6 fc70 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8012c74:	b006      	add	sp, #24
 8012c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012c7a:	225a      	movs	r2, #90	@ 0x5a
 8012c7c:	e7ee      	b.n	8012c5c <DisplayUdf::ShowIpAddress()+0x3c>
 8012c7e:	bf00      	nop
 8012c80:	20009b50 	andcs	r9, r0, r0, asr fp
 8012c84:	08017d3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, sl, fp, ip, sp, lr}

08012c88 <DisplayUdf::DisplayUdf()>:
 8012c88:	b510      	push	{r4, lr}
 8012c8a:	4604      	mov	r4, r0
 8012c8c:	f001 f896 	bl	8013dbc <Display::Display()>
 8012c90:	4b05      	ldr	r3, [pc, #20]	@ (8012ca8 <DisplayUdf::DisplayUdf()+0x20>)
 8012c92:	f104 023b 	add.w	r2, r4, #59	@ 0x3b
 8012c96:	601c      	str	r4, [r3, #0]
 8012c98:	2301      	movs	r3, #1
 8012c9a:	f802 3f01 	strb.w	r3, [r2, #1]!
 8012c9e:	3301      	adds	r3, #1
 8012ca0:	2b15      	cmp	r3, #21
 8012ca2:	d1fa      	bne.n	8012c9a <DisplayUdf::DisplayUdf()+0x12>
 8012ca4:	4620      	mov	r0, r4
 8012ca6:	bd10      	pop	{r4, pc}
 8012ca8:	20009bf8 	strdcs	r9, [r0], -r8

08012cac <DisplayUdf::SetTitle(char const*, ...)>:
 8012cac:	b40e      	push	{r1, r2, r3}
 8012cae:	b517      	push	{r0, r1, r2, r4, lr}
 8012cb0:	ab05      	add	r3, sp, #20
 8012cb2:	4604      	mov	r4, r0
 8012cb4:	f853 2b04 	ldr.w	r2, [r3], #4
 8012cb8:	9301      	str	r3, [sp, #4]
 8012cba:	211f      	movs	r1, #31
 8012cbc:	301c      	adds	r0, #28
 8012cbe:	f004 f8c7 	bl	8016e50 <vsnprintf>
 8012cc2:	4404      	add	r4, r0
 8012cc4:	2300      	movs	r3, #0
 8012cc6:	7723      	strb	r3, [r4, #28]
 8012cc8:	b003      	add	sp, #12
 8012cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012cce:	b003      	add	sp, #12
 8012cd0:	4770      	bx	lr

08012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>:
 8012cd2:	1e4b      	subs	r3, r1, #1
 8012cd4:	2b05      	cmp	r3, #5
 8012cd6:	b530      	push	{r4, r5, lr}
 8012cd8:	d810      	bhi.n	8012cfc <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2a>
 8012cda:	f100 043b 	add.w	r4, r0, #59	@ 0x3b
 8012cde:	2300      	movs	r3, #0
 8012ce0:	b2c9      	uxtb	r1, r1
 8012ce2:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8012ce6:	428d      	cmp	r5, r1
 8012ce8:	d109      	bne.n	8012cfe <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2c>
 8012cea:	1884      	adds	r4, r0, r2
 8012cec:	4403      	add	r3, r0
 8012cee:	f894 403c 	ldrb.w	r4, [r4, #60]	@ 0x3c
 8012cf2:	f883 403c 	strb.w	r4, [r3, #60]	@ 0x3c
 8012cf6:	4410      	add	r0, r2
 8012cf8:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 8012cfc:	bd30      	pop	{r4, r5, pc}
 8012cfe:	3301      	adds	r3, #1
 8012d00:	2b14      	cmp	r3, #20
 8012d02:	d1ee      	bne.n	8012ce2 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x10>
 8012d04:	e7f7      	b.n	8012cf6 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x24>
	...

08012d08 <DisplayUdf::Show()>:
 8012d08:	b530      	push	{r4, r5, lr}
 8012d0a:	f100 033b 	add.w	r3, r0, #59	@ 0x3b
 8012d0e:	b085      	sub	sp, #20
 8012d10:	4604      	mov	r4, r0
 8012d12:	f100 024f 	add.w	r2, r0, #79	@ 0x4f
 8012d16:	21ff      	movs	r1, #255	@ 0xff
 8012d18:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012d1c:	2806      	cmp	r0, #6
 8012d1e:	bf88      	it	hi
 8012d20:	7019      	strbhi	r1, [r3, #0]
 8012d22:	4293      	cmp	r3, r2
 8012d24:	d1f8      	bne.n	8012d18 <DisplayUdf::Show()+0x10>
 8012d26:	69a0      	ldr	r0, [r4, #24]
 8012d28:	4d2a      	ldr	r5, [pc, #168]	@ (8012dd4 <DisplayUdf::Show()+0xcc>)
 8012d2a:	f7ff ff63 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012d2e:	f104 021c 	add.w	r2, r4, #28
 8012d32:	f894 103c 	ldrb.w	r1, [r4, #60]	@ 0x3c
 8012d36:	f7ff ff61 	bl	8012bfc <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8012d3a:	69a0      	ldr	r0, [r4, #24]
 8012d3c:	4a26      	ldr	r2, [pc, #152]	@ (8012dd8 <DisplayUdf::Show()+0xd0>)
 8012d3e:	f7ff ff59 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012d42:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 8012d46:	f7ff ff59 	bl	8012bfc <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8012d4a:	69a0      	ldr	r0, [r4, #24]
 8012d4c:	4a23      	ldr	r2, [pc, #140]	@ (8012ddc <DisplayUdf::Show()+0xd4>)
 8012d4e:	f7ff ff51 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012d52:	4b23      	ldr	r3, [pc, #140]	@ (8012de0 <DisplayUdf::Show()+0xd8>)
 8012d54:	9300      	str	r3, [sp, #0]
 8012d56:	f894 103f 	ldrb.w	r1, [r4, #63]	@ 0x3f
 8012d5a:	2303      	movs	r3, #3
 8012d5c:	4620      	mov	r0, r4
 8012d5e:	f7f6 fbf9 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8012d62:	4620      	mov	r0, r4
 8012d64:	f7ff ff5c 	bl	8012c20 <DisplayUdf::ShowIpAddress()>
 8012d68:	69a0      	ldr	r0, [r4, #24]
 8012d6a:	f7ff ff43 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012d6e:	68ab      	ldr	r3, [r5, #8]
 8012d70:	0e1a      	lsrs	r2, r3, #24
 8012d72:	9202      	str	r2, [sp, #8]
 8012d74:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012d78:	9201      	str	r2, [sp, #4]
 8012d7a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012d7e:	9200      	str	r2, [sp, #0]
 8012d80:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 8012d84:	4a17      	ldr	r2, [pc, #92]	@ (8012de4 <DisplayUdf::Show()+0xdc>)
 8012d86:	b2db      	uxtb	r3, r3
 8012d88:	4620      	mov	r0, r4
 8012d8a:	f7f6 fbe3 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8012d8e:	69a0      	ldr	r0, [r4, #24]
 8012d90:	f7ff ff30 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012d94:	686b      	ldr	r3, [r5, #4]
 8012d96:	0e1a      	lsrs	r2, r3, #24
 8012d98:	9202      	str	r2, [sp, #8]
 8012d9a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012d9e:	9201      	str	r2, [sp, #4]
 8012da0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012da4:	9200      	str	r2, [sp, #0]
 8012da6:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8012daa:	4a0f      	ldr	r2, [pc, #60]	@ (8012de8 <DisplayUdf::Show()+0xe0>)
 8012dac:	b2db      	uxtb	r3, r3
 8012dae:	4620      	mov	r0, r4
 8012db0:	f7f6 fbd0 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8012db4:	4620      	mov	r0, r4
 8012db6:	f7ff ff33 	bl	8012c20 <DisplayUdf::ShowIpAddress()>
 8012dba:	69a0      	ldr	r0, [r4, #24]
 8012dbc:	f7ff ff1a 	bl	8012bf4 <Display::ClearEndOfLine() [clone .isra.0]>
 8012dc0:	4b0a      	ldr	r3, [pc, #40]	@ (8012dec <DisplayUdf::Show()+0xe4>)
 8012dc2:	f894 1043 	ldrb.w	r1, [r4, #67]	@ 0x43
 8012dc6:	681a      	ldr	r2, [r3, #0]
 8012dc8:	3216      	adds	r2, #22
 8012dca:	b005      	add	sp, #20
 8012dcc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012dd0:	f7ff bf14 	b.w	8012bfc <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8012dd4:	20009b50 	andcs	r9, r0, r0, asr fp
 8012dd8:	0801785f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
 8012ddc:	08017d50 	stmdaeq	r1, {r4, r6, r8, sl, fp, ip, sp, lr}
 8012de0:	20009ce8 	andcs	r9, r0, r8, ror #25
 8012de4:	08017d5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, ip, sp, lr}
 8012de8:	08017d6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, fp, ip, sp, lr}
 8012dec:	20009b30 	andcs	r9, r0, r0, lsr fp

08012df0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 8012df0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012df2:	88c6      	ldrh	r6, [r0, #6]
 8012df4:	8885      	ldrh	r5, [r0, #4]
 8012df6:	42ae      	cmp	r6, r5
 8012df8:	d216      	bcs.n	8012e28 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 8012dfa:	4604      	mov	r4, r0
 8012dfc:	6800      	ldr	r0, [r0, #0]
 8012dfe:	1bad      	subs	r5, r5, r6
 8012e00:	4430      	add	r0, r6
 8012e02:	7a26      	ldrb	r6, [r4, #8]
 8012e04:	b923      	cbnz	r3, 8012e10 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 8012e06:	b926      	cbnz	r6, 8012e12 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 8012e08:	9200      	str	r2, [sp, #0]
 8012e0a:	460b      	mov	r3, r1
 8012e0c:	4a09      	ldr	r2, [pc, #36]	@ (8012e34 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 8012e0e:	e003      	b.n	8012e18 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8012e10:	b166      	cbz	r6, 8012e2c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 8012e12:	9200      	str	r2, [sp, #0]
 8012e14:	4a08      	ldr	r2, [pc, #32]	@ (8012e38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 8012e16:	460b      	mov	r3, r1
 8012e18:	4629      	mov	r1, r5
 8012e1a:	f004 f801 	bl	8016e20 <snprintf>
 8012e1e:	4285      	cmp	r5, r0
 8012e20:	bfa2      	ittt	ge
 8012e22:	88e3      	ldrhge	r3, [r4, #6]
 8012e24:	181b      	addge	r3, r3, r0
 8012e26:	80e3      	strhge	r3, [r4, #6]
 8012e28:	b002      	add	sp, #8
 8012e2a:	bd70      	pop	{r4, r5, r6, pc}
 8012e2c:	9200      	str	r2, [sp, #0]
 8012e2e:	460b      	mov	r3, r1
 8012e30:	4a02      	ldr	r2, [pc, #8]	@ (8012e3c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 8012e32:	e7f1      	b.n	8012e18 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8012e34:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 8012e38:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 8012e3c:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

08012e40 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>:
 8012e40:	b507      	push	{r0, r1, r2, lr}
 8012e42:	2300      	movs	r3, #0
 8012e44:	2101      	movs	r1, #1
 8012e46:	e9cd 3100 	strd	r3, r1, [sp]
 8012e4a:	4602      	mov	r2, r0
 8012e4c:	4804      	ldr	r0, [pc, #16]	@ (8012e60 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)+0x20>)
 8012e4e:	2322      	movs	r3, #34	@ 0x22
 8012e50:	6800      	ldr	r0, [r0, #0]
 8012e52:	210d      	movs	r1, #13
 8012e54:	f000 fae6 	bl	8013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8012e58:	b003      	add	sp, #12
 8012e5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8012e5e:	bf00      	nop
 8012e60:	20009bfc 	strdcs	r9, [r0], -ip

08012e64 <DisplayUdfParams::DisplayUdfParams()>:
 8012e64:	b510      	push	{r4, lr}
 8012e66:	2220      	movs	r2, #32
 8012e68:	4604      	mov	r4, r0
 8012e6a:	2100      	movs	r1, #0
 8012e6c:	f003 fccc 	bl	8016808 <memset>
 8012e70:	2305      	movs	r3, #5
 8012e72:	f884 3020 	strb.w	r3, [r4, #32]
 8012e76:	237f      	movs	r3, #127	@ 0x7f
 8012e78:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8012e7c:	4620      	mov	r0, r4
 8012e7e:	bd10      	pop	{r4, pc}

08012e80 <DisplayUdfParams::Load()>:
 8012e80:	b508      	push	{r3, lr}
 8012e82:	2200      	movs	r2, #0
 8012e84:	7002      	strb	r2, [r0, #0]
 8012e86:	7042      	strb	r2, [r0, #1]
 8012e88:	7082      	strb	r2, [r0, #2]
 8012e8a:	70c2      	strb	r2, [r0, #3]
 8012e8c:	f7ff ffd8 	bl	8012e40 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8012e90:	bd08      	pop	{r3, pc}
	...

08012e94 <DisplayUdfParams::Load(char const*, unsigned long)>:
 8012e94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e96:	2500      	movs	r5, #0
 8012e98:	b087      	sub	sp, #28
 8012e9a:	4604      	mov	r4, r0
 8012e9c:	460e      	mov	r6, r1
 8012e9e:	4617      	mov	r7, r2
 8012ea0:	7005      	strb	r5, [r0, #0]
 8012ea2:	7045      	strb	r5, [r0, #1]
 8012ea4:	7085      	strb	r5, [r0, #2]
 8012ea6:	70c5      	strb	r5, [r0, #3]
 8012ea8:	4602      	mov	r2, r0
 8012eaa:	490c      	ldr	r1, [pc, #48]	@ (8012edc <DisplayUdfParams::Load(char const*, unsigned long)+0x48>)
 8012eac:	a804      	add	r0, sp, #16
 8012eae:	f000 fd93 	bl	80139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012eb2:	463a      	mov	r2, r7
 8012eb4:	4631      	mov	r1, r6
 8012eb6:	a804      	add	r0, sp, #16
 8012eb8:	f000 fd92 	bl	80139e0 <ReadConfigFile::Read(char const*, unsigned int)>
 8012ebc:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8012ec0:	2322      	movs	r3, #34	@ 0x22
 8012ec2:	4807      	ldr	r0, [pc, #28]	@ (8012ee0 <DisplayUdfParams::Load(char const*, unsigned long)+0x4c>)
 8012ec4:	9300      	str	r3, [sp, #0]
 8012ec6:	462a      	mov	r2, r5
 8012ec8:	4623      	mov	r3, r4
 8012eca:	210d      	movs	r1, #13
 8012ecc:	6800      	ldr	r0, [r0, #0]
 8012ece:	f000 fa83 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8012ed2:	a804      	add	r0, sp, #16
 8012ed4:	f000 fd83 	bl	80139de <ReadConfigFile::~ReadConfigFile()>
 8012ed8:	b007      	add	sp, #28
 8012eda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012edc:	08012fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp, sp}
 8012ee0:	20009bfc 	strdcs	r9, [r0], -ip

08012ee4 <DisplayUdfParams::callbackFunction(char const*)>:
 8012ee4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012ee6:	460e      	mov	r6, r1
 8012ee8:	4604      	mov	r4, r0
 8012eea:	492a      	ldr	r1, [pc, #168]	@ (8012f94 <DisplayUdfParams::callbackFunction(char const*)+0xb0>)
 8012eec:	f10d 0207 	add.w	r2, sp, #7
 8012ef0:	4630      	mov	r0, r6
 8012ef2:	f000 fe9b 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012ef6:	b968      	cbnz	r0, 8012f14 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012ef8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012efc:	6823      	ldr	r3, [r4, #0]
 8012efe:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8012f02:	2a7f      	cmp	r2, #127	@ 0x7f
 8012f04:	bf14      	ite	ne
 8012f06:	f043 5300 	orrne.w	r3, r3, #536870912	@ 0x20000000
 8012f0a:	f023 5300 	biceq.w	r3, r3, #536870912	@ 0x20000000
 8012f0e:	6023      	str	r3, [r4, #0]
 8012f10:	b003      	add	sp, #12
 8012f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f14:	4920      	ldr	r1, [pc, #128]	@ (8012f98 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8012f16:	f10d 0207 	add.w	r2, sp, #7
 8012f1a:	4630      	mov	r0, r6
 8012f1c:	f000 fe86 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012f20:	b958      	cbnz	r0, 8012f3a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8012f22:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012f26:	6823      	ldr	r3, [r4, #0]
 8012f28:	f884 2020 	strb.w	r2, [r4, #32]
 8012f2c:	2a05      	cmp	r2, #5
 8012f2e:	bf14      	ite	ne
 8012f30:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8012f34:	f023 5380 	biceq.w	r3, r3, #268435456	@ 0x10000000
 8012f38:	e7e9      	b.n	8012f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012f3a:	4918      	ldr	r1, [pc, #96]	@ (8012f9c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8012f3c:	f10d 0207 	add.w	r2, sp, #7
 8012f40:	4630      	mov	r0, r6
 8012f42:	f000 fe73 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012f46:	b948      	cbnz	r0, 8012f5c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012f48:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012f4c:	6823      	ldr	r3, [r4, #0]
 8012f4e:	b112      	cbz	r2, 8012f56 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8012f50:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012f54:	e7db      	b.n	8012f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012f56:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8012f5a:	e7d8      	b.n	8012f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012f5c:	4f10      	ldr	r7, [pc, #64]	@ (8012fa0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8012f5e:	2500      	movs	r5, #0
 8012f60:	f857 1b04 	ldr.w	r1, [r7], #4
 8012f64:	f10d 0207 	add.w	r2, sp, #7
 8012f68:	4630      	mov	r0, r6
 8012f6a:	f000 fe5f 	bl	8013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012f6e:	b968      	cbnz	r0, 8012f8c <DisplayUdfParams::callbackFunction(char const*)+0xa8>
 8012f70:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012f74:	6823      	ldr	r3, [r4, #0]
 8012f76:	2201      	movs	r2, #1
 8012f78:	40aa      	lsls	r2, r5
 8012f7a:	1e4e      	subs	r6, r1, #1
 8012f7c:	4425      	add	r5, r4
 8012f7e:	2e05      	cmp	r6, #5
 8012f80:	bf99      	ittee	ls
 8012f82:	7129      	strbls	r1, [r5, #4]
 8012f84:	4313      	orrls	r3, r2
 8012f86:	7128      	strbhi	r0, [r5, #4]
 8012f88:	4393      	bichi	r3, r2
 8012f8a:	e7c0      	b.n	8012f0e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012f8c:	3501      	adds	r5, #1
 8012f8e:	2d14      	cmp	r5, #20
 8012f90:	d1e6      	bne.n	8012f60 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8012f92:	e7bd      	b.n	8012f10 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012f94:	0801a40a 	stmdaeq	r1, {r1, r3, sl, sp, pc}
 8012f98:	0801a3fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sp, pc}
 8012f9c:	0801a3ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sp, pc}
 8012fa0:	0801a368 	stmdaeq	r1, {r3, r5, r6, r8, r9, sp, pc}

08012fa4 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8012fa4:	f7ff bf9e 	b.w	8012ee4 <DisplayUdfParams::callbackFunction(char const*)>

08012fa8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>:
 8012fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fac:	4604      	mov	r4, r0
 8012fae:	b086      	sub	sp, #24
 8012fb0:	4615      	mov	r5, r2
 8012fb2:	461e      	mov	r6, r3
 8012fb4:	b379      	cbz	r1, 8013016 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 8012fb6:	2222      	movs	r2, #34	@ 0x22
 8012fb8:	f003 fc0f 	bl	80167da <memmove>
 8012fbc:	462a      	mov	r2, r5
 8012fbe:	493c      	ldr	r1, [pc, #240]	@ (80130b0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x108>)
 8012fc0:	4633      	mov	r3, r6
 8012fc2:	a803      	add	r0, sp, #12
 8012fc4:	f000 fc32 	bl	801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8012fc8:	6823      	ldr	r3, [r4, #0]
 8012fca:	f894 2021 	ldrb.w	r2, [r4, #33]	@ 0x21
 8012fce:	4939      	ldr	r1, [pc, #228]	@ (80130b4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x10c>)
 8012fd0:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8012fd4:	a803      	add	r0, sp, #12
 8012fd6:	f7ff ff0b 	bl	8012df0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8012fda:	6823      	ldr	r3, [r4, #0]
 8012fdc:	f894 2020 	ldrb.w	r2, [r4, #32]
 8012fe0:	4935      	ldr	r1, [pc, #212]	@ (80130b8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x110>)
 8012fe2:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8012fe6:	a803      	add	r0, sp, #12
 8012fe8:	f7ff ff02 	bl	8012df0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8012fec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012ff0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012ff4:	6823      	ldr	r3, [r4, #0]
 8012ff6:	42aa      	cmp	r2, r5
 8012ff8:	d222      	bcs.n	8013040 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x98>
 8012ffa:	9803      	ldr	r0, [sp, #12]
 8012ffc:	f013 4380 	ands.w	r3, r3, #1073741824	@ 0x40000000
 8013000:	4410      	add	r0, r2
 8013002:	eba5 0502 	sub.w	r5, r5, r2
 8013006:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801300a:	d107      	bne.n	801301c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x74>
 801300c:	b942      	cbnz	r2, 8013020 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x78>
 801300e:	9200      	str	r2, [sp, #0]
 8013010:	4b2a      	ldr	r3, [pc, #168]	@ (80130bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8013012:	4a2b      	ldr	r2, [pc, #172]	@ (80130c0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 8013014:	e00a      	b.n	801302c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8013016:	f7ff ff13 	bl	8012e40 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 801301a:	e7cf      	b.n	8012fbc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 801301c:	2a00      	cmp	r2, #0
 801301e:	d042      	beq.n	80130a6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xfe>
 8013020:	3b00      	subs	r3, #0
 8013022:	bf18      	it	ne
 8013024:	2301      	movne	r3, #1
 8013026:	9300      	str	r3, [sp, #0]
 8013028:	4a26      	ldr	r2, [pc, #152]	@ (80130c4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 801302a:	4b24      	ldr	r3, [pc, #144]	@ (80130bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 801302c:	4629      	mov	r1, r5
 801302e:	f003 fef7 	bl	8016e20 <snprintf>
 8013032:	4285      	cmp	r5, r0
 8013034:	bfa2      	ittt	ge
 8013036:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801303a:	18c0      	addge	r0, r0, r3
 801303c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8013040:	4e21      	ldr	r6, [pc, #132]	@ (80130c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 8013042:	2500      	movs	r5, #0
 8013044:	2701      	movs	r7, #1
 8013046:	f104 0804 	add.w	r8, r4, #4
 801304a:	f856 1b04 	ldr.w	r1, [r6], #4
 801304e:	780b      	ldrb	r3, [r1, #0]
 8013050:	b163      	cbz	r3, 801306c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 8013052:	6822      	ldr	r2, [r4, #0]
 8013054:	fa07 f305 	lsl.w	r3, r7, r5
 8013058:	4393      	bics	r3, r2
 801305a:	bf08      	it	eq
 801305c:	2301      	moveq	r3, #1
 801305e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8013062:	bf18      	it	ne
 8013064:	2300      	movne	r3, #0
 8013066:	a803      	add	r0, sp, #12
 8013068:	f7ff fec2 	bl	8012df0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 801306c:	3501      	adds	r5, #1
 801306e:	2d14      	cmp	r5, #20
 8013070:	d1eb      	bne.n	801304a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8013072:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013076:	b17b      	cbz	r3, 8013098 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
 8013078:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801307c:	9b03      	ldr	r3, [sp, #12]
 801307e:	4413      	add	r3, r2
 8013080:	227d      	movs	r2, #125	@ 0x7d
 8013082:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013086:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801308a:	9903      	ldr	r1, [sp, #12]
 801308c:	54ca      	strb	r2, [r1, r3]
 801308e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013092:	3301      	adds	r3, #1
 8013094:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013098:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801309c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801309e:	601a      	str	r2, [r3, #0]
 80130a0:	b006      	add	sp, #24
 80130a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130a6:	2301      	movs	r3, #1
 80130a8:	9300      	str	r3, [sp, #0]
 80130aa:	4a08      	ldr	r2, [pc, #32]	@ (80130cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 80130ac:	4b03      	ldr	r3, [pc, #12]	@ (80130bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 80130ae:	e7bd      	b.n	801302c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 80130b0:	0801a414 	stmdaeq	r1, {r2, r4, sl, sp, pc}
 80130b4:	0801a40a 	stmdaeq	r1, {r1, r3, sl, sp, pc}
 80130b8:	0801a3fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sp, pc}
 80130bc:	0801a3ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sp, pc}
 80130c0:	08017747 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, ip, sp, lr}
 80130c4:	0801773e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 80130c8:	0801a368 	stmdaeq	r1, {r3, r5, r6, r8, r9, sp, pc}
 80130cc:	08017748 	stmdaeq	r1, {r3, r6, r8, r9, sl, ip, sp, lr}

080130d0 <DisplayUdfParams::Set(DisplayUdf*)>:
 80130d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130d4:	4604      	mov	r4, r0
 80130d6:	460d      	mov	r5, r1
 80130d8:	6823      	ldr	r3, [r4, #0]
 80130da:	6988      	ldr	r0, [r1, #24]
 80130dc:	009a      	lsls	r2, r3, #2
 80130de:	d506      	bpl.n	80130ee <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 80130e0:	f894 1021 	ldrb.w	r1, [r4, #33]	@ 0x21
 80130e4:	7529      	strb	r1, [r5, #20]
 80130e6:	b110      	cbz	r0, 80130ee <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 80130e8:	6803      	ldr	r3, [r0, #0]
 80130ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80130ec:	4798      	blx	r3
 80130ee:	6823      	ldr	r3, [r4, #0]
 80130f0:	69a8      	ldr	r0, [r5, #24]
 80130f2:	00db      	lsls	r3, r3, #3
 80130f4:	bf41      	itttt	mi
 80130f6:	f894 3020 	ldrbmi.w	r3, [r4, #32]
 80130fa:	f64e 2260 	movwmi	r2, #60000	@ 0xea60
 80130fe:	4353      	mulmi	r3, r2
 8013100:	612b      	strmi	r3, [r5, #16]
 8013102:	6821      	ldr	r1, [r4, #0]
 8013104:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8013108:	75a9      	strb	r1, [r5, #22]
 801310a:	b110      	cbz	r0, 8013112 <DisplayUdfParams::Set(DisplayUdf*)+0x42>
 801310c:	6803      	ldr	r3, [r0, #0]
 801310e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013110:	4798      	blx	r3
 8013112:	2600      	movs	r6, #0
 8013114:	2701      	movs	r7, #1
 8013116:	f104 0804 	add.w	r8, r4, #4
 801311a:	6822      	ldr	r2, [r4, #0]
 801311c:	fa07 f306 	lsl.w	r3, r7, r6
 8013120:	4393      	bics	r3, r2
 8013122:	d105      	bne.n	8013130 <DisplayUdfParams::Set(DisplayUdf*)+0x60>
 8013124:	f818 1006 	ldrb.w	r1, [r8, r6]
 8013128:	4632      	mov	r2, r6
 801312a:	4628      	mov	r0, r5
 801312c:	f7ff fdd1 	bl	8012cd2 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8013130:	3601      	adds	r6, #1
 8013132:	2e14      	cmp	r6, #20
 8013134:	d1f1      	bne.n	801311a <DisplayUdfParams::Set(DisplayUdf*)+0x4a>
 8013136:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801313a <Display::ClearEndOfLine() [clone .isra.0]>:
 801313a:	b108      	cbz	r0, 8013140 <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 801313c:	2301      	movs	r3, #1
 801313e:	7303      	strb	r3, [r0, #12]
 8013140:	4770      	bx	lr

08013142 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8013142:	b430      	push	{r4, r5}
 8013144:	b160      	cbz	r0, 8013160 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8013146:	6845      	ldr	r5, [r0, #4]
 8013148:	2300      	movs	r3, #0
 801314a:	5cd4      	ldrb	r4, [r2, r3]
 801314c:	b11c      	cbz	r4, 8013156 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 801314e:	1c5c      	adds	r4, r3, #1
 8013150:	429d      	cmp	r5, r3
 8013152:	4623      	mov	r3, r4
 8013154:	d8f9      	bhi.n	801314a <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8013156:	6804      	ldr	r4, [r0, #0]
 8013158:	69e4      	ldr	r4, [r4, #28]
 801315a:	46a4      	mov	ip, r4
 801315c:	bc30      	pop	{r4, r5}
 801315e:	4760      	bx	ip
 8013160:	bc30      	pop	{r4, r5}
 8013162:	4770      	bx	lr

08013164 <net::display_emac_config()>:
 8013164:	4b06      	ldr	r3, [pc, #24]	@ (8013180 <net::display_emac_config()+0x1c>)
 8013166:	4a07      	ldr	r2, [pc, #28]	@ (8013184 <net::display_emac_config()+0x20>)
 8013168:	b510      	push	{r4, lr}
 801316a:	681c      	ldr	r4, [r3, #0]
 801316c:	69a0      	ldr	r0, [r4, #24]
 801316e:	f7ff ffe4 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 8013172:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8013176:	4620      	mov	r0, r4
 8013178:	f7f6 f9ec 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 801317c:	bd10      	pop	{r4, pc}
 801317e:	bf00      	nop
 8013180:	20009bf8 	strdcs	r9, [r0], -r8
 8013184:	08017d7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr}

08013188 <net::display_emac_start()>:
 8013188:	4b06      	ldr	r3, [pc, #24]	@ (80131a4 <net::display_emac_start()+0x1c>)
 801318a:	4a07      	ldr	r2, [pc, #28]	@ (80131a8 <net::display_emac_start()+0x20>)
 801318c:	b510      	push	{r4, lr}
 801318e:	681c      	ldr	r4, [r3, #0]
 8013190:	69a0      	ldr	r0, [r4, #24]
 8013192:	f7ff ffd2 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 8013196:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 801319a:	4620      	mov	r0, r4
 801319c:	f7f6 f9da 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 80131a0:	bd10      	pop	{r4, pc}
 80131a2:	bf00      	nop
 80131a4:	20009bf8 	strdcs	r9, [r0], -r8
 80131a8:	08017d8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sl, fp, ip, sp, lr}

080131ac <net::display_emac_status(bool)>:
 80131ac:	4b09      	ldr	r3, [pc, #36]	@ (80131d4 <net::display_emac_status(bool)+0x28>)
 80131ae:	490a      	ldr	r1, [pc, #40]	@ (80131d8 <net::display_emac_status(bool)+0x2c>)
 80131b0:	b510      	push	{r4, lr}
 80131b2:	681c      	ldr	r4, [r3, #0]
 80131b4:	4602      	mov	r2, r0
 80131b6:	69a0      	ldr	r0, [r4, #24]
 80131b8:	f7ff ffbf 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 80131bc:	4b07      	ldr	r3, [pc, #28]	@ (80131dc <net::display_emac_status(bool)+0x30>)
 80131be:	4620      	mov	r0, r4
 80131c0:	2a00      	cmp	r2, #0
 80131c2:	bf08      	it	eq
 80131c4:	460b      	moveq	r3, r1
 80131c6:	4a06      	ldr	r2, [pc, #24]	@ (80131e0 <net::display_emac_status(bool)+0x34>)
 80131c8:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 80131cc:	f7f6 f9c2 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 80131d0:	bd10      	pop	{r4, pc}
 80131d2:	bf00      	nop
 80131d4:	20009bf8 	strdcs	r9, [r0], -r8
 80131d8:	08017d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, sp, lr}
 80131dc:	08017d9a 	stmdaeq	r1, {r1, r3, r4, r7, r8, sl, fp, ip, sp, lr}
 80131e0:	08017da2 	stmdaeq	r1, {r1, r5, r7, r8, sl, fp, ip, sp, lr}

080131e4 <net::display_ip()>:
 80131e4:	b508      	push	{r3, lr}
 80131e6:	4b02      	ldr	r3, [pc, #8]	@ (80131f0 <net::display_ip()+0xc>)
 80131e8:	6818      	ldr	r0, [r3, #0]
 80131ea:	f7ff fd19 	bl	8012c20 <DisplayUdf::ShowIpAddress()>
 80131ee:	bd08      	pop	{r3, pc}
 80131f0:	20009bf8 	strdcs	r9, [r0], -r8

080131f4 <net::display_netmask()>:
 80131f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80131f6:	4b0d      	ldr	r3, [pc, #52]	@ (801322c <net::display_netmask()+0x38>)
 80131f8:	681c      	ldr	r4, [r3, #0]
 80131fa:	69a0      	ldr	r0, [r4, #24]
 80131fc:	f7ff ff9d 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 8013200:	4b0b      	ldr	r3, [pc, #44]	@ (8013230 <net::display_netmask()+0x3c>)
 8013202:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8013206:	685b      	ldr	r3, [r3, #4]
 8013208:	0e1a      	lsrs	r2, r3, #24
 801320a:	9202      	str	r2, [sp, #8]
 801320c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013210:	9201      	str	r2, [sp, #4]
 8013212:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013216:	9200      	str	r2, [sp, #0]
 8013218:	b2db      	uxtb	r3, r3
 801321a:	4a06      	ldr	r2, [pc, #24]	@ (8013234 <net::display_netmask()+0x40>)
 801321c:	4620      	mov	r0, r4
 801321e:	f7f6 f999 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8013222:	4620      	mov	r0, r4
 8013224:	f7ff fcfc 	bl	8012c20 <DisplayUdf::ShowIpAddress()>
 8013228:	b004      	add	sp, #16
 801322a:	bd10      	pop	{r4, pc}
 801322c:	20009bf8 	strdcs	r9, [r0], -r8
 8013230:	20009b50 	andcs	r9, r0, r0, asr fp
 8013234:	08017d6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, fp, ip, sp, lr}

08013238 <net::display_gateway()>:
 8013238:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801323a:	4b0c      	ldr	r3, [pc, #48]	@ (801326c <net::display_gateway()+0x34>)
 801323c:	681c      	ldr	r4, [r3, #0]
 801323e:	69a0      	ldr	r0, [r4, #24]
 8013240:	f7ff ff7b 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 8013244:	4b0a      	ldr	r3, [pc, #40]	@ (8013270 <net::display_gateway()+0x38>)
 8013246:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 801324a:	689b      	ldr	r3, [r3, #8]
 801324c:	0e1a      	lsrs	r2, r3, #24
 801324e:	9202      	str	r2, [sp, #8]
 8013250:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013254:	9201      	str	r2, [sp, #4]
 8013256:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801325a:	9200      	str	r2, [sp, #0]
 801325c:	b2db      	uxtb	r3, r3
 801325e:	4a05      	ldr	r2, [pc, #20]	@ (8013274 <net::display_gateway()+0x3c>)
 8013260:	4620      	mov	r0, r4
 8013262:	f7f6 f977 	bl	8009554 <Display::Printf(unsigned long, char const*, ...)>
 8013266:	b004      	add	sp, #16
 8013268:	bd10      	pop	{r4, pc}
 801326a:	bf00      	nop
 801326c:	20009bf8 	strdcs	r9, [r0], -r8
 8013270:	20009b50 	andcs	r9, r0, r0, asr fp
 8013274:	08017d5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, ip, sp, lr}

08013278 <net::display_hostname()>:
 8013278:	b508      	push	{r3, lr}
 801327a:	4b07      	ldr	r3, [pc, #28]	@ (8013298 <net::display_hostname()+0x20>)
 801327c:	6819      	ldr	r1, [r3, #0]
 801327e:	6988      	ldr	r0, [r1, #24]
 8013280:	f7ff ff5b 	bl	801313a <Display::ClearEndOfLine() [clone .isra.0]>
 8013284:	4b05      	ldr	r3, [pc, #20]	@ (801329c <net::display_hostname()+0x24>)
 8013286:	f891 1043 	ldrb.w	r1, [r1, #67]	@ 0x43
 801328a:	681a      	ldr	r2, [r3, #0]
 801328c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013290:	3216      	adds	r2, #22
 8013292:	f7ff bf56 	b.w	8013142 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8013296:	bf00      	nop
 8013298:	20009bf8 	strdcs	r9, [r0], -r8
 801329c:	20009b30 	andcs	r9, r0, r0, lsr fp

080132a0 <ConfigStore::GetStoreOffset(configstore::Store)>:
 80132a0:	b510      	push	{r4, lr}
 80132a2:	4a05      	ldr	r2, [pc, #20]	@ (80132b8 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 80132a4:	2300      	movs	r3, #0
 80132a6:	2020      	movs	r0, #32
 80132a8:	428b      	cmp	r3, r1
 80132aa:	d100      	bne.n	80132ae <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 80132ac:	bd10      	pop	{r4, pc}
 80132ae:	f852 4b04 	ldr.w	r4, [r2], #4
 80132b2:	3301      	adds	r3, #1
 80132b4:	4420      	add	r0, r4
 80132b6:	e7f7      	b.n	80132a8 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 80132b8:	0801a420 	stmdaeq	r1, {r5, sl, sp, pc}

080132bc <ConfigStore::ConfigStore()>:
 80132bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80132c0:	b085      	sub	sp, #20
 80132c2:	4605      	mov	r5, r0
 80132c4:	f000 f9e4 	bl	8013690 <StoreDevice::StoreDevice()>
 80132c8:	4b30      	ldr	r3, [pc, #192]	@ (801338c <ConfigStore::ConfigStore()+0xd0>)
 80132ca:	4c31      	ldr	r4, [pc, #196]	@ (8013390 <ConfigStore::ConfigStore()+0xd4>)
 80132cc:	601d      	str	r5, [r3, #0]
 80132ce:	4b31      	ldr	r3, [pc, #196]	@ (8013394 <ConfigStore::ConfigStore()+0xd8>)
 80132d0:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80133b0 <ConfigStore::ConfigStore()+0xf4>
 80132d4:	601c      	str	r4, [r3, #0]
 80132d6:	4628      	mov	r0, r5
 80132d8:	782b      	ldrb	r3, [r5, #0]
 80132da:	f888 3000 	strb.w	r3, [r8]
 80132de:	f000 f9e8 	bl	80136b2 <StoreDevice::GetSectorSize() const>
 80132e2:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 80132e6:	4606      	mov	r6, r0
 80132e8:	fbb7 f9f0 	udiv	r9, r7, r0
 80132ec:	4628      	mov	r0, r5
 80132ee:	f000 f9dd 	bl	80136ac <StoreDevice::GetSize() const>
 80132f2:	4b29      	ldr	r3, [pc, #164]	@ (8013398 <ConfigStore::ConfigStore()+0xdc>)
 80132f4:	fb09 0116 	mls	r1, r9, r6, r0
 80132f8:	6019      	str	r1, [r3, #0]
 80132fa:	f898 3000 	ldrb.w	r3, [r8]
 80132fe:	3c10      	subs	r4, #16
 8013300:	b133      	cbz	r3, 8013310 <ConfigStore::ConfigStore()+0x54>
 8013302:	ab03      	add	r3, sp, #12
 8013304:	9300      	str	r3, [sp, #0]
 8013306:	463a      	mov	r2, r7
 8013308:	4623      	mov	r3, r4
 801330a:	4628      	mov	r0, r5
 801330c:	f000 f9d4 	bl	80136b8 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 8013310:	4822      	ldr	r0, [pc, #136]	@ (801339c <ConfigStore::ConfigStore()+0xe0>)
 8013312:	4b23      	ldr	r3, [pc, #140]	@ (80133a0 <ConfigStore::ConfigStore()+0xe4>)
 8013314:	2104      	movs	r1, #4
 8013316:	2201      	movs	r2, #1
 8013318:	f810 6b01 	ldrb.w	r6, [r0], #1
 801331c:	f813 7b01 	ldrb.w	r7, [r3], #1
 8013320:	42be      	cmp	r6, r7
 8013322:	bf1c      	itt	ne
 8013324:	f803 6c01 	strbne.w	r6, [r3, #-1]
 8013328:	2200      	movne	r2, #0
 801332a:	3901      	subs	r1, #1
 801332c:	d1f4      	bne.n	8013318 <ConfigStore::ConfigStore()+0x5c>
 801332e:	b952      	cbnz	r2, 8013346 <ConfigStore::ConfigStore()+0x8a>
 8013330:	4a17      	ldr	r2, [pc, #92]	@ (8013390 <ConfigStore::ConfigStore()+0xd4>)
 8013332:	f44f 637f 	mov.w	r3, #4080	@ 0xff0
 8013336:	4608      	mov	r0, r1
 8013338:	3b01      	subs	r3, #1
 801333a:	f802 0b01 	strb.w	r0, [r2], #1
 801333e:	d1fb      	bne.n	8013338 <ConfigStore::ConfigStore()+0x7c>
 8013340:	4b18      	ldr	r3, [pc, #96]	@ (80133a4 <ConfigStore::ConfigStore()+0xe8>)
 8013342:	2201      	movs	r2, #1
 8013344:	601a      	str	r2, [r3, #0]
 8013346:	4818      	ldr	r0, [pc, #96]	@ (80133a8 <ConfigStore::ConfigStore()+0xec>)
 8013348:	2200      	movs	r2, #0
 801334a:	2320      	movs	r3, #32
 801334c:	f850 6b04 	ldr.w	r6, [r0], #4
 8013350:	3201      	adds	r2, #1
 8013352:	2a1b      	cmp	r2, #27
 8013354:	4433      	add	r3, r6
 8013356:	d1f9      	bne.n	801334c <ConfigStore::ConfigStore()+0x90>
 8013358:	4a14      	ldr	r2, [pc, #80]	@ (80133ac <ConfigStore::ConfigStore()+0xf0>)
 801335a:	2600      	movs	r6, #0
 801335c:	6013      	str	r3, [r2, #0]
 801335e:	4628      	mov	r0, r5
 8013360:	f7ff ff9e 	bl	80132a0 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013364:	5823      	ldr	r3, [r4, r0]
 8013366:	3101      	adds	r1, #1
 8013368:	3301      	adds	r3, #1
 801336a:	bf08      	it	eq
 801336c:	5026      	streq	r6, [r4, r0]
 801336e:	291b      	cmp	r1, #27
 8013370:	d1f5      	bne.n	801335e <ConfigStore::ConfigStore()+0xa2>
 8013372:	6923      	ldr	r3, [r4, #16]
 8013374:	3301      	adds	r3, #1
 8013376:	d104      	bne.n	8013382 <ConfigStore::ConfigStore()+0xc6>
 8013378:	2300      	movs	r3, #0
 801337a:	7423      	strb	r3, [r4, #16]
 801337c:	7463      	strb	r3, [r4, #17]
 801337e:	74a3      	strb	r3, [r4, #18]
 8013380:	74e3      	strb	r3, [r4, #19]
 8013382:	4628      	mov	r0, r5
 8013384:	b005      	add	sp, #20
 8013386:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801338a:	bf00      	nop
 801338c:	20009bfc 	strdcs	r9, [r0], -ip
 8013390:	40024010 	andmi	r4, r2, r0, lsl r0
 8013394:	200145fc 	strdcs	r4, [r1], -ip
 8013398:	20009c08 	andcs	r9, r0, r8, lsl #24
 801339c:	0801a48c 	stmdaeq	r1, {r2, r3, r7, sl, sp, pc}
 80133a0:	40024000 	andmi	r4, r2, r0
 80133a4:	20009c0c 	andcs	r9, r0, ip, lsl #24
 80133a8:	0801a420 	stmdaeq	r1, {r5, sl, sp, pc}
 80133ac:	20009c04 	andcs	r9, r0, r4, lsl #24
 80133b0:	20009c10 	andcs	r9, r0, r0, lsl ip

080133b4 <ConfigStore::ResetSetList(configstore::Store)>:
 80133b4:	b508      	push	{r3, lr}
 80133b6:	f7ff ff73 	bl	80132a0 <ConfigStore::GetStoreOffset(configstore::Store)>
 80133ba:	4905      	ldr	r1, [pc, #20]	@ (80133d0 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 80133bc:	1842      	adds	r2, r0, r1
 80133be:	2300      	movs	r3, #0
 80133c0:	540b      	strb	r3, [r1, r0]
 80133c2:	7053      	strb	r3, [r2, #1]
 80133c4:	7093      	strb	r3, [r2, #2]
 80133c6:	70d3      	strb	r3, [r2, #3]
 80133c8:	4b02      	ldr	r3, [pc, #8]	@ (80133d4 <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 80133ca:	2201      	movs	r2, #1
 80133cc:	601a      	str	r2, [r3, #0]
 80133ce:	bd08      	pop	{r3, pc}
 80133d0:	40024000 	andmi	r4, r2, r0
 80133d4:	20009c0c 	andcs	r9, r0, ip, lsl #24

080133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 80133d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80133da:	4614      	mov	r4, r2
 80133dc:	461d      	mov	r5, r3
 80133de:	f7ff ff5f 	bl	80132a0 <ConfigStore::GetStoreOffset(configstore::Store)>
 80133e2:	490e      	ldr	r1, [pc, #56]	@ (801341c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x44>)
 80133e4:	1902      	adds	r2, r0, r4
 80133e6:	9c06      	ldr	r4, [sp, #24]
 80133e8:	440a      	add	r2, r1
 80133ea:	1e6b      	subs	r3, r5, #1
 80133ec:	4414      	add	r4, r2
 80133ee:	2500      	movs	r5, #0
 80133f0:	42a2      	cmp	r2, r4
 80133f2:	d10a      	bne.n	801340a <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x32>
 80133f4:	b145      	cbz	r5, 8013408 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x30>
 80133f6:	9b08      	ldr	r3, [sp, #32]
 80133f8:	9a07      	ldr	r2, [sp, #28]
 80133fa:	4418      	add	r0, r3
 80133fc:	580b      	ldr	r3, [r1, r0]
 80133fe:	4313      	orrs	r3, r2
 8013400:	500b      	str	r3, [r1, r0]
 8013402:	4b07      	ldr	r3, [pc, #28]	@ (8013420 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x48>)
 8013404:	2201      	movs	r2, #1
 8013406:	601a      	str	r2, [r3, #0]
 8013408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801340a:	7817      	ldrb	r7, [r2, #0]
 801340c:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8013410:	42b7      	cmp	r7, r6
 8013412:	bf1c      	itt	ne
 8013414:	7016      	strbne	r6, [r2, #0]
 8013416:	2501      	movne	r5, #1
 8013418:	3201      	adds	r2, #1
 801341a:	e7e9      	b.n	80133f0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x18>
 801341c:	40024000 	andmi	r4, r2, r0
 8013420:	20009c0c 	andcs	r9, r0, ip, lsl #24

08013424 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
 8013424:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013428:	b085      	sub	sp, #20
 801342a:	461e      	mov	r6, r3
 801342c:	4615      	mov	r5, r2
 801342e:	4607      	mov	r7, r0
 8013430:	f7ff ff36 	bl	80132a0 <ConfigStore::GetStoreOffset(configstore::Store)>
 8013434:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013436:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801343a:	18c4      	adds	r4, r0, r3
 801343c:	4b10      	ldr	r3, [pc, #64]	@ (8013480 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>)
 801343e:	441c      	add	r4, r3
 8013440:	4688      	mov	r8, r1
 8013442:	4623      	mov	r3, r4
 8013444:	1932      	adds	r2, r6, r4
 8013446:	4293      	cmp	r3, r2
 8013448:	d10c      	bne.n	8013464 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x40>
 801344a:	f1b9 0f00 	cmp.w	r9, #0
 801344e:	d00f      	beq.n	8013470 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8013450:	2200      	movs	r2, #0
 8013452:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8013456:	9600      	str	r6, [sp, #0]
 8013458:	462b      	mov	r3, r5
 801345a:	4641      	mov	r1, r8
 801345c:	4638      	mov	r0, r7
 801345e:	f7ff ffbb 	bl	80133d8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8013462:	e005      	b.n	8013470 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8013464:	f813 1b01 	ldrb.w	r1, [r3], #1
 8013468:	2900      	cmp	r1, #0
 801346a:	d0ec      	beq.n	8013446 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x22>
 801346c:	4294      	cmp	r4, r2
 801346e:	d102      	bne.n	8013476 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x52>
 8013470:	b005      	add	sp, #20
 8013472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013476:	f814 3b01 	ldrb.w	r3, [r4], #1
 801347a:	f805 3b01 	strb.w	r3, [r5], #1
 801347e:	e7f5      	b.n	801346c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
 8013480:	40024000 	andmi	r4, r2, r0

08013484 <ConfigStore::Flash()>:
 8013484:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013486:	4c24      	ldr	r4, [pc, #144]	@ (8013518 <ConfigStore::Flash()+0x94>)
 8013488:	6823      	ldr	r3, [r4, #0]
 801348a:	2b00      	cmp	r3, #0
 801348c:	d041      	beq.n	8013512 <ConfigStore::Flash()+0x8e>
 801348e:	3b01      	subs	r3, #1
 8013490:	2b05      	cmp	r3, #5
 8013492:	d82f      	bhi.n	80134f4 <ConfigStore::Flash()+0x70>
 8013494:	e8df f003 	tbb	[pc, r3]
 8013498:	2c140b03 			@ <UNDEFINED> instruction: 0x2c140b03
 801349c:	4b1f2e23 	blmi	87ded30 <_sidata+0x7c43bc>
 80134a0:	681a      	ldr	r2, [r3, #0]
 80134a2:	4b1f      	ldr	r3, [pc, #124]	@ (8013520 <ConfigStore::Flash()+0x9c>)
 80134a4:	601a      	str	r2, [r3, #0]
 80134a6:	2302      	movs	r3, #2
 80134a8:	6023      	str	r3, [r4, #0]
 80134aa:	2001      	movs	r0, #1
 80134ac:	e02f      	b.n	801350e <ConfigStore::Flash()+0x8a>
 80134ae:	4b1b      	ldr	r3, [pc, #108]	@ (801351c <ConfigStore::Flash()+0x98>)
 80134b0:	4a1b      	ldr	r2, [pc, #108]	@ (8013520 <ConfigStore::Flash()+0x9c>)
 80134b2:	681b      	ldr	r3, [r3, #0]
 80134b4:	6812      	ldr	r2, [r2, #0]
 80134b6:	1a9b      	subs	r3, r3, r2
 80134b8:	2b63      	cmp	r3, #99	@ 0x63
 80134ba:	d9f6      	bls.n	80134aa <ConfigStore::Flash()+0x26>
 80134bc:	2303      	movs	r3, #3
 80134be:	e7f3      	b.n	80134a8 <ConfigStore::Flash()+0x24>
 80134c0:	4918      	ldr	r1, [pc, #96]	@ (8013524 <ConfigStore::Flash()+0xa0>)
 80134c2:	ab03      	add	r3, sp, #12
 80134c4:	6809      	ldr	r1, [r1, #0]
 80134c6:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80134ca:	f000 f8fa 	bl	80136c2 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 80134ce:	2800      	cmp	r0, #0
 80134d0:	d0eb      	beq.n	80134aa <ConfigStore::Flash()+0x26>
 80134d2:	4b12      	ldr	r3, [pc, #72]	@ (801351c <ConfigStore::Flash()+0x98>)
 80134d4:	681a      	ldr	r2, [r3, #0]
 80134d6:	4b12      	ldr	r3, [pc, #72]	@ (8013520 <ConfigStore::Flash()+0x9c>)
 80134d8:	601a      	str	r2, [r3, #0]
 80134da:	2305      	movs	r3, #5
 80134dc:	e7e4      	b.n	80134a8 <ConfigStore::Flash()+0x24>
 80134de:	4b0f      	ldr	r3, [pc, #60]	@ (801351c <ConfigStore::Flash()+0x98>)
 80134e0:	4a0f      	ldr	r2, [pc, #60]	@ (8013520 <ConfigStore::Flash()+0x9c>)
 80134e2:	681b      	ldr	r3, [r3, #0]
 80134e4:	6812      	ldr	r2, [r2, #0]
 80134e6:	1a9b      	subs	r3, r3, r2
 80134e8:	2b63      	cmp	r3, #99	@ 0x63
 80134ea:	d9de      	bls.n	80134aa <ConfigStore::Flash()+0x26>
 80134ec:	2304      	movs	r3, #4
 80134ee:	e7db      	b.n	80134a8 <ConfigStore::Flash()+0x24>
 80134f0:	2306      	movs	r3, #6
 80134f2:	e7d9      	b.n	80134a8 <ConfigStore::Flash()+0x24>
 80134f4:	ab03      	add	r3, sp, #12
 80134f6:	4a0c      	ldr	r2, [pc, #48]	@ (8013528 <ConfigStore::Flash()+0xa4>)
 80134f8:	490a      	ldr	r1, [pc, #40]	@ (8013524 <ConfigStore::Flash()+0xa0>)
 80134fa:	9300      	str	r3, [sp, #0]
 80134fc:	6812      	ldr	r2, [r2, #0]
 80134fe:	4b0b      	ldr	r3, [pc, #44]	@ (801352c <ConfigStore::Flash()+0xa8>)
 8013500:	6809      	ldr	r1, [r1, #0]
 8013502:	f000 f8e2 	bl	80136ca <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 8013506:	2800      	cmp	r0, #0
 8013508:	d0cf      	beq.n	80134aa <ConfigStore::Flash()+0x26>
 801350a:	2000      	movs	r0, #0
 801350c:	6020      	str	r0, [r4, #0]
 801350e:	b004      	add	sp, #16
 8013510:	bd10      	pop	{r4, pc}
 8013512:	4618      	mov	r0, r3
 8013514:	e7fb      	b.n	801350e <ConfigStore::Flash()+0x8a>
 8013516:	bf00      	nop
 8013518:	20009c0c 	andcs	r9, r0, ip, lsl #24
 801351c:	200145c8 	andcs	r4, r1, r8, asr #11
 8013520:	20009c00 	andcs	r9, r0, r0, lsl #24
 8013524:	20009c08 	andcs	r9, r0, r8, lsl #24
 8013528:	20009c04 	andcs	r9, r0, r4, lsl #24
 801352c:	40024000 	andmi	r4, r2, r0

08013530 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
 8013530:	b510      	push	{r4, lr}
 8013532:	4a0d      	ldr	r2, [pc, #52]	@ (8013568 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x38>)
 8013534:	f44f 6461 	mov.w	r4, #3600	@ 0xe10
 8013538:	6913      	ldr	r3, [r2, #16]
 801353a:	fb93 f3f4 	sdiv	r3, r3, r4
 801353e:	b25b      	sxtb	r3, r3
 8013540:	7003      	strb	r3, [r0, #0]
 8013542:	2b00      	cmp	r3, #0
 8013544:	6912      	ldr	r2, [r2, #16]
 8013546:	dd08      	ble.n	801355a <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x2a>
 8013548:	4808      	ldr	r0, [pc, #32]	@ (801356c <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x3c>)
 801354a:	fb00 2203 	mla	r2, r0, r3, r2
 801354e:	233c      	movs	r3, #60	@ 0x3c
 8013550:	fbb2 f2f3 	udiv	r2, r2, r3
 8013554:	b2d3      	uxtb	r3, r2
 8013556:	700b      	strb	r3, [r1, #0]
 8013558:	bd10      	pop	{r4, pc}
 801355a:	4363      	muls	r3, r4
 801355c:	1a9b      	subs	r3, r3, r2
 801355e:	223c      	movs	r2, #60	@ 0x3c
 8013560:	fbb3 f3f2 	udiv	r3, r3, r2
 8013564:	b2db      	uxtb	r3, r3
 8013566:	e7f6      	b.n	8013556 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x26>
 8013568:	40024000 	andmi	r4, r2, r0
 801356c:	fffff1f0 			@ <UNDEFINED> instruction: 0xfffff1f0

08013570 <EnvParams::EnvParams()>:
 8013570:	4770      	bx	lr
	...

08013574 <EnvParams::LoadAndSet(char const*, unsigned long)>:
 8013574:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013576:	460c      	mov	r4, r1
 8013578:	4615      	mov	r5, r2
 801357a:	4907      	ldr	r1, [pc, #28]	@ (8013598 <EnvParams::LoadAndSet(char const*, unsigned long)+0x24>)
 801357c:	4602      	mov	r2, r0
 801357e:	4668      	mov	r0, sp
 8013580:	f000 fa2a 	bl	80139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8013584:	462a      	mov	r2, r5
 8013586:	4621      	mov	r1, r4
 8013588:	4668      	mov	r0, sp
 801358a:	f000 fa29 	bl	80139e0 <ReadConfigFile::Read(char const*, unsigned int)>
 801358e:	4668      	mov	r0, sp
 8013590:	f000 fa25 	bl	80139de <ReadConfigFile::~ReadConfigFile()>
 8013594:	b003      	add	sp, #12
 8013596:	bd30      	pop	{r4, r5, pc}
 8013598:	08013629 	stmdaeq	r1, {r0, r3, r5, r9, sl, ip, sp}

0801359c <EnvParams::callbackFunction(char const*)>:
 801359c:	b513      	push	{r0, r1, r4, lr}
 801359e:	4608      	mov	r0, r1
 80135a0:	f10d 0307 	add.w	r3, sp, #7
 80135a4:	491c      	ldr	r1, [pc, #112]	@ (8013618 <EnvParams::callbackFunction(char const*)+0x7c>)
 80135a6:	f10d 0206 	add.w	r2, sp, #6
 80135aa:	f000 fb5a 	bl	8013c62 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
 80135ae:	bb70      	cbnz	r0, 801360e <EnvParams::callbackFunction(char const*)+0x72>
 80135b0:	f99d 1006 	ldrsb.w	r1, [sp, #6]
 80135b4:	f101 030c 	add.w	r3, r1, #12
 80135b8:	b2db      	uxtb	r3, r3
 80135ba:	2b1a      	cmp	r3, #26
 80135bc:	d827      	bhi.n	801360e <EnvParams::callbackFunction(char const*)+0x72>
 80135be:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80135c2:	bb32      	cbnz	r2, 8013612 <EnvParams::callbackFunction(char const*)+0x76>
 80135c4:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80135c8:	434b      	muls	r3, r1
 80135ca:	4a14      	ldr	r2, [pc, #80]	@ (801361c <EnvParams::callbackFunction(char const*)+0x80>)
 80135cc:	6911      	ldr	r1, [r2, #16]
 80135ce:	4299      	cmp	r1, r3
 80135d0:	bf1f      	itttt	ne
 80135d2:	6113      	strne	r3, [r2, #16]
 80135d4:	4b12      	ldrne	r3, [pc, #72]	@ (8013620 <EnvParams::callbackFunction(char const*)+0x84>)
 80135d6:	2201      	movne	r2, #1
 80135d8:	601a      	strne	r2, [r3, #0]
 80135da:	e018      	b.n	801360e <EnvParams::callbackFunction(char const*)+0x72>
 80135dc:	f993 4000 	ldrsb.w	r4, [r3]
 80135e0:	428c      	cmp	r4, r1
 80135e2:	d111      	bne.n	8013608 <EnvParams::callbackFunction(char const*)+0x6c>
 80135e4:	785c      	ldrb	r4, [r3, #1]
 80135e6:	4294      	cmp	r4, r2
 80135e8:	d10e      	bne.n	8013608 <EnvParams::callbackFunction(char const*)+0x6c>
 80135ea:	2900      	cmp	r1, #0
 80135ec:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80135f0:	fb01 f303 	mul.w	r3, r1, r3
 80135f4:	bfcb      	itete	gt
 80135f6:	ebc2 1202 	rsbgt	r2, r2, r2, lsl #4
 80135fa:	f06f 013b 	mvnle.w	r1, #59	@ 0x3b
 80135fe:	eb03 0382 	addgt.w	r3, r3, r2, lsl #2
 8013602:	fb01 3302 	mlale	r3, r1, r2, r3
 8013606:	e7e0      	b.n	80135ca <EnvParams::callbackFunction(char const*)+0x2e>
 8013608:	3302      	adds	r3, #2
 801360a:	3801      	subs	r0, #1
 801360c:	d1e6      	bne.n	80135dc <EnvParams::callbackFunction(char const*)+0x40>
 801360e:	b002      	add	sp, #8
 8013610:	bd10      	pop	{r4, pc}
 8013612:	4b04      	ldr	r3, [pc, #16]	@ (8013624 <EnvParams::callbackFunction(char const*)+0x88>)
 8013614:	200c      	movs	r0, #12
 8013616:	e7f8      	b.n	801360a <EnvParams::callbackFunction(char const*)+0x6e>
 8013618:	0801a4a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, sp, pc}
 801361c:	40024000 	andmi	r4, r2, r0
 8013620:	20009c0c 	andcs	r9, r0, ip, lsl #24
 8013624:	0801a490 	stmdaeq	r1, {r4, r7, sl, sp, pc}

08013628 <EnvParams::staticCallbackFunction(void*, char const*)>:
 8013628:	f7ff bfb8 	b.w	801359c <EnvParams::callbackFunction(char const*)>

0801362c <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
 801362c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801362e:	461c      	mov	r4, r3
 8013630:	a801      	add	r0, sp, #4
 8013632:	4613      	mov	r3, r2
 8013634:	460a      	mov	r2, r1
 8013636:	4914      	ldr	r1, [pc, #80]	@ (8013688 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x5c>)
 8013638:	f000 f8f8 	bl	801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 801363c:	f10d 0103 	add.w	r1, sp, #3
 8013640:	f10d 0002 	add.w	r0, sp, #2
 8013644:	f7ff ff74 	bl	8013530 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
 8013648:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801364c:	f99d 2002 	ldrsb.w	r2, [sp, #2]
 8013650:	490e      	ldr	r1, [pc, #56]	@ (801368c <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x60>)
 8013652:	a801      	add	r0, sp, #4
 8013654:	f000 f970 	bl	8013938 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
 8013658:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801365c:	b17b      	cbz	r3, 801367e <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x52>
 801365e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013662:	9b01      	ldr	r3, [sp, #4]
 8013664:	4413      	add	r3, r2
 8013666:	227d      	movs	r2, #125	@ 0x7d
 8013668:	f803 2c01 	strb.w	r2, [r3, #-1]
 801366c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013670:	9901      	ldr	r1, [sp, #4]
 8013672:	54ca      	strb	r2, [r1, r3]
 8013674:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013678:	3301      	adds	r3, #1
 801367a:	f8ad 300a 	strh.w	r3, [sp, #10]
 801367e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013682:	6023      	str	r3, [r4, #0]
 8013684:	b004      	add	sp, #16
 8013686:	bd10      	pop	{r4, pc}
 8013688:	0801a4b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, sp, pc}
 801368c:	0801a4a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, sp, pc}

08013690 <StoreDevice::StoreDevice()>:
 8013690:	b510      	push	{r4, lr}
 8013692:	2301      	movs	r3, #1
 8013694:	4604      	mov	r4, r0
 8013696:	7003      	strb	r3, [r0, #0]
 8013698:	2204      	movs	r2, #4
 801369a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 801369e:	4802      	ldr	r0, [pc, #8]	@ (80136a8 <StoreDevice::StoreDevice()+0x18>)
 80136a0:	f003 fb96 	bl	8016dd0 <printf>
 80136a4:	4620      	mov	r0, r4
 80136a6:	bd10      	pop	{r4, pc}
 80136a8:	08017db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, ip, sp, lr}

080136ac <StoreDevice::GetSize() const>:
 80136ac:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80136b0:	4770      	bx	lr

080136b2 <StoreDevice::GetSectorSize() const>:
 80136b2:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80136b6:	4770      	bx	lr

080136b8 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 80136b8:	9b00      	ldr	r3, [sp, #0]
 80136ba:	2200      	movs	r2, #0
 80136bc:	601a      	str	r2, [r3, #0]
 80136be:	2001      	movs	r0, #1
 80136c0:	4770      	bx	lr

080136c2 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 80136c2:	2200      	movs	r2, #0
 80136c4:	601a      	str	r2, [r3, #0]
 80136c6:	2001      	movs	r0, #1
 80136c8:	4770      	bx	lr

080136ca <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 80136ca:	9b00      	ldr	r3, [sp, #0]
 80136cc:	2200      	movs	r2, #0
 80136ce:	601a      	str	r2, [r3, #0]
 80136d0:	2001      	movs	r0, #1
 80136d2:	4770      	bx	lr

080136d4 <properties::convert_json_file(char*, unsigned long, bool)>:
 80136d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80136d8:	7803      	ldrb	r3, [r0, #0]
 80136da:	2b7b      	cmp	r3, #123	@ 0x7b
 80136dc:	4604      	mov	r4, r0
 80136de:	f040 80a2 	bne.w	8013826 <properties::convert_json_file(char*, unsigned long, bool)+0x152>
 80136e2:	b172      	cbz	r2, 8013702 <properties::convert_json_file(char*, unsigned long, bool)+0x2e>
 80136e4:	2501      	movs	r5, #1
 80136e6:	4603      	mov	r3, r0
 80136e8:	4628      	mov	r0, r5
 80136ea:	f04f 0c3d 	mov.w	ip, #61	@ 0x3d
 80136ee:	f04f 0e0a 	mov.w	lr, #10
 80136f2:	428d      	cmp	r5, r1
 80136f4:	d377      	bcc.n	80137e6 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 80136f6:	b102      	cbz	r2, 80136fa <properties::convert_json_file(char*, unsigned long, bool)+0x26>
 80136f8:	3801      	subs	r0, #1
 80136fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80136fe:	4635      	mov	r5, r6
 8013700:	e7f3      	b.n	80136ea <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 8013702:	4605      	mov	r5, r0
 8013704:	2323      	movs	r3, #35	@ 0x23
 8013706:	f805 3b01 	strb.w	r3, [r5], #1
 801370a:	2601      	movs	r6, #1
 801370c:	462f      	mov	r7, r5
 801370e:	428e      	cmp	r6, r1
 8013710:	d317      	bcc.n	8013742 <properties::convert_json_file(char*, unsigned long, bool)+0x6e>
 8013712:	1c6b      	adds	r3, r5, #1
 8013714:	428e      	cmp	r6, r1
 8013716:	eba3 0004 	sub.w	r0, r3, r4
 801371a:	d205      	bcs.n	8013728 <properties::convert_json_file(char*, unsigned long, bool)+0x54>
 801371c:	46bc      	mov	ip, r7
 801371e:	f81c eb01 	ldrb.w	lr, [ip], #1
 8013722:	f1be 0f22 	cmp.w	lr, #34	@ 0x22
 8013726:	d112      	bne.n	801374e <properties::convert_json_file(char*, unsigned long, bool)+0x7a>
 8013728:	240a      	movs	r4, #10
 801372a:	702c      	strb	r4, [r5, #0]
 801372c:	463c      	mov	r4, r7
 801372e:	3701      	adds	r7, #1
 8013730:	7825      	ldrb	r5, [r4, #0]
 8013732:	2d7b      	cmp	r5, #123	@ 0x7b
 8013734:	d0e3      	beq.n	80136fe <properties::convert_json_file(char*, unsigned long, bool)+0x2a>
 8013736:	428e      	cmp	r6, r1
 8013738:	f106 0501 	add.w	r5, r6, #1
 801373c:	d2d5      	bcs.n	80136ea <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 801373e:	462e      	mov	r6, r5
 8013740:	e7f4      	b.n	801372c <properties::convert_json_file(char*, unsigned long, bool)+0x58>
 8013742:	f817 3b01 	ldrb.w	r3, [r7], #1
 8013746:	2b22      	cmp	r3, #34	@ 0x22
 8013748:	d0e3      	beq.n	8013712 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 801374a:	3601      	adds	r6, #1
 801374c:	e7df      	b.n	801370e <properties::convert_json_file(char*, unsigned long, bool)+0x3a>
 801374e:	f803 ec01 	strb.w	lr, [r3, #-1]
 8013752:	3601      	adds	r6, #1
 8013754:	4667      	mov	r7, ip
 8013756:	461d      	mov	r5, r3
 8013758:	e7db      	b.n	8013712 <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 801375a:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 801375e:	d142      	bne.n	80137e6 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 8013760:	eba0 0904 	sub.w	r9, r0, r4
 8013764:	f894 8000 	ldrb.w	r8, [r4]
 8013768:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 801376c:	eb04 0009 	add.w	r0, r4, r9
 8013770:	4626      	mov	r6, r4
 8013772:	f105 0701 	add.w	r7, r5, #1
 8013776:	f104 0401 	add.w	r4, r4, #1
 801377a:	d13f      	bne.n	80137fc <properties::convert_json_file(char*, unsigned long, bool)+0x128>
 801377c:	f803 cb01 	strb.w	ip, [r3], #1
 8013780:	3001      	adds	r0, #1
 8013782:	462f      	mov	r7, r5
 8013784:	428f      	cmp	r7, r1
 8013786:	f896 8000 	ldrb.w	r8, [r6]
 801378a:	4634      	mov	r4, r6
 801378c:	f107 0701 	add.w	r7, r7, #1
 8013790:	f106 0601 	add.w	r6, r6, #1
 8013794:	d338      	bcc.n	8013808 <properties::convert_json_file(char*, unsigned long, bool)+0x134>
 8013796:	7825      	ldrb	r5, [r4, #0]
 8013798:	2d20      	cmp	r5, #32
 801379a:	4626      	mov	r6, r4
 801379c:	46b8      	mov	r8, r7
 801379e:	f104 0401 	add.w	r4, r4, #1
 80137a2:	f107 0701 	add.w	r7, r7, #1
 80137a6:	d134      	bne.n	8013812 <properties::convert_json_file(char*, unsigned long, bool)+0x13e>
 80137a8:	4588      	cmp	r8, r1
 80137aa:	d3f4      	bcc.n	8013796 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 80137ac:	46b8      	mov	r8, r7
 80137ae:	7834      	ldrb	r4, [r6, #0]
 80137b0:	2c22      	cmp	r4, #34	@ 0x22
 80137b2:	d100      	bne.n	80137b6 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 80137b4:	3601      	adds	r6, #1
 80137b6:	4634      	mov	r4, r6
 80137b8:	f108 0501 	add.w	r5, r8, #1
 80137bc:	f814 7b01 	ldrb.w	r7, [r4], #1
 80137c0:	2f22      	cmp	r7, #34	@ 0x22
 80137c2:	d02a      	beq.n	801381a <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80137c4:	2f2c      	cmp	r7, #44	@ 0x2c
 80137c6:	d028      	beq.n	801381a <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80137c8:	2f7d      	cmp	r7, #125	@ 0x7d
 80137ca:	d026      	beq.n	801381a <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 80137cc:	4588      	cmp	r8, r1
 80137ce:	d228      	bcs.n	8013822 <properties::convert_json_file(char*, unsigned long, bool)+0x14e>
 80137d0:	f1a7 0820 	sub.w	r8, r7, #32
 80137d4:	f1b8 0f5a 	cmp.w	r8, #90	@ 0x5a
 80137d8:	d803      	bhi.n	80137e2 <properties::convert_json_file(char*, unsigned long, bool)+0x10e>
 80137da:	f803 7b01 	strb.w	r7, [r3], #1
 80137de:	3001      	adds	r0, #1
 80137e0:	4626      	mov	r6, r4
 80137e2:	46a8      	mov	r8, r5
 80137e4:	e7e7      	b.n	80137b6 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 80137e6:	428d      	cmp	r5, r1
 80137e8:	f894 8000 	ldrb.w	r8, [r4]
 80137ec:	4627      	mov	r7, r4
 80137ee:	f105 0501 	add.w	r5, r5, #1
 80137f2:	f104 0401 	add.w	r4, r4, #1
 80137f6:	d3b0      	bcc.n	801375a <properties::convert_json_file(char*, unsigned long, bool)+0x86>
 80137f8:	463c      	mov	r4, r7
 80137fa:	e7b1      	b.n	8013760 <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
 80137fc:	428d      	cmp	r5, r1
 80137fe:	d2c1      	bcs.n	8013784 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 8013800:	f803 8b01 	strb.w	r8, [r3], #1
 8013804:	463d      	mov	r5, r7
 8013806:	e7ad      	b.n	8013764 <properties::convert_json_file(char*, unsigned long, bool)+0x90>
 8013808:	f1b8 0f3a 	cmp.w	r8, #58	@ 0x3a
 801380c:	d1ba      	bne.n	8013784 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 801380e:	4634      	mov	r4, r6
 8013810:	e7c1      	b.n	8013796 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 8013812:	2d22      	cmp	r5, #34	@ 0x22
 8013814:	bf08      	it	eq
 8013816:	4626      	moveq	r6, r4
 8013818:	e7c9      	b.n	80137ae <properties::convert_json_file(char*, unsigned long, bool)+0xda>
 801381a:	f803 eb01 	strb.w	lr, [r3], #1
 801381e:	3001      	adds	r0, #1
 8013820:	4645      	mov	r5, r8
 8013822:	3501      	adds	r5, #1
 8013824:	e765      	b.n	80136f2 <properties::convert_json_file(char*, unsigned long, bool)+0x1e>
 8013826:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801382a:	e766      	b.n	80136fa <properties::convert_json_file(char*, unsigned long, bool)+0x26>

0801382c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
 801382c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013830:	6002      	str	r2, [r0, #0]
 8013832:	4614      	mov	r4, r2
 8013834:	2200      	movs	r2, #0
 8013836:	80c2      	strh	r2, [r0, #6]
 8013838:	4a1c      	ldr	r2, [pc, #112]	@ (80138ac <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x80>)
 801383a:	8083      	strh	r3, [r0, #4]
 801383c:	7812      	ldrb	r2, [r2, #0]
 801383e:	f002 0201 	and.w	r2, r2, #1
 8013842:	4606      	mov	r6, r0
 8013844:	7202      	strb	r2, [r0, #8]
 8013846:	4608      	mov	r0, r1
 8013848:	4605      	mov	r5, r0
 801384a:	3001      	adds	r0, #1
 801384c:	782f      	ldrb	r7, [r5, #0]
 801384e:	2f00      	cmp	r7, #0
 8013850:	d1fa      	bne.n	8013848 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x1c>
 8013852:	1a6d      	subs	r5, r5, r1
 8013854:	b29b      	uxth	r3, r3
 8013856:	b1d2      	cbz	r2, 801388e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x62>
 8013858:	1d2f      	adds	r7, r5, #4
 801385a:	429f      	cmp	r7, r3
 801385c:	d814      	bhi.n	8013888 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 801385e:	f04f 087b 	mov.w	r8, #123	@ 0x7b
 8013862:	f04f 0922 	mov.w	r9, #34	@ 0x22
 8013866:	462a      	mov	r2, r5
 8013868:	f884 8000 	strb.w	r8, [r4]
 801386c:	f884 9001 	strb.w	r9, [r4, #1]
 8013870:	1ca0      	adds	r0, r4, #2
 8013872:	f002 ffb2 	bl	80167da <memmove>
 8013876:	1963      	adds	r3, r4, r5
 8013878:	223a      	movs	r2, #58	@ 0x3a
 801387a:	f883 9002 	strb.w	r9, [r3, #2]
 801387e:	70da      	strb	r2, [r3, #3]
 8013880:	3505      	adds	r5, #5
 8013882:	f804 8007 	strb.w	r8, [r4, r7]
 8013886:	80f5      	strh	r5, [r6, #6]
 8013888:	4630      	mov	r0, r6
 801388a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801388e:	1caf      	adds	r7, r5, #2
 8013890:	42bb      	cmp	r3, r7
 8013892:	d3f9      	bcc.n	8013888 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8013894:	4620      	mov	r0, r4
 8013896:	2323      	movs	r3, #35	@ 0x23
 8013898:	f800 3b01 	strb.w	r3, [r0], #1
 801389c:	462a      	mov	r2, r5
 801389e:	442c      	add	r4, r5
 80138a0:	f002 ff9b 	bl	80167da <memmove>
 80138a4:	230a      	movs	r3, #10
 80138a6:	7063      	strb	r3, [r4, #1]
 80138a8:	80f7      	strh	r7, [r6, #6]
 80138aa:	e7ed      	b.n	8013888 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 80138ac:	20009c11 	andcs	r9, r0, r1, lsl ip

080138b0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
 80138b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138b2:	469c      	mov	ip, r3
 80138b4:	8885      	ldrh	r5, [r0, #4]
 80138b6:	88c3      	ldrh	r3, [r0, #6]
 80138b8:	42ab      	cmp	r3, r5
 80138ba:	b085      	sub	sp, #20
 80138bc:	d302      	bcc.n	80138c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x14>
 80138be:	2000      	movs	r0, #0
 80138c0:	b005      	add	sp, #20
 80138c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138c4:	4604      	mov	r4, r0
 80138c6:	6800      	ldr	r0, [r0, #0]
 80138c8:	f894 e008 	ldrb.w	lr, [r4, #8]
 80138cc:	4418      	add	r0, r3
 80138ce:	1aed      	subs	r5, r5, r3
 80138d0:	b2d6      	uxtb	r6, r2
 80138d2:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80138d6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80138da:	0e12      	lsrs	r2, r2, #24
 80138dc:	f1bc 0f00 	cmp.w	ip, #0
 80138e0:	d109      	bne.n	80138f6 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x46>
 80138e2:	f1be 0f00 	cmp.w	lr, #0
 80138e6:	d109      	bne.n	80138fc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x4c>
 80138e8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80138ec:	e9cd 6700 	strd	r6, r7, [sp]
 80138f0:	4a0e      	ldr	r2, [pc, #56]	@ (801392c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x7c>)
 80138f2:	460b      	mov	r3, r1
 80138f4:	e008      	b.n	8013908 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 80138f6:	f1be 0f00 	cmp.w	lr, #0
 80138fa:	d00f      	beq.n	801391c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x6c>
 80138fc:	e9cd 6700 	strd	r6, r7, [sp]
 8013900:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013904:	4a0a      	ldr	r2, [pc, #40]	@ (8013930 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x80>)
 8013906:	460b      	mov	r3, r1
 8013908:	4629      	mov	r1, r5
 801390a:	f003 fa89 	bl	8016e20 <snprintf>
 801390e:	4285      	cmp	r5, r0
 8013910:	dbd5      	blt.n	80138be <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xe>
 8013912:	88e3      	ldrh	r3, [r4, #6]
 8013914:	4403      	add	r3, r0
 8013916:	80e3      	strh	r3, [r4, #6]
 8013918:	2001      	movs	r0, #1
 801391a:	e7d1      	b.n	80138c0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x10>
 801391c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013920:	e9cd 6700 	strd	r6, r7, [sp]
 8013924:	4a03      	ldr	r2, [pc, #12]	@ (8013934 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x84>)
 8013926:	460b      	mov	r3, r1
 8013928:	e7ee      	b.n	8013908 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 801392a:	bf00      	nop
 801392c:	08017df7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8013930:	08017de3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8013934:	08017df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}

08013938 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
 8013938:	b5f0      	push	{r4, r5, r6, r7, lr}
 801393a:	88c6      	ldrh	r6, [r0, #6]
 801393c:	8885      	ldrh	r5, [r0, #4]
 801393e:	42ae      	cmp	r6, r5
 8013940:	b085      	sub	sp, #20
 8013942:	d302      	bcc.n	801394a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x12>
 8013944:	2000      	movs	r0, #0
 8013946:	b005      	add	sp, #20
 8013948:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801394a:	4604      	mov	r4, r0
 801394c:	6800      	ldr	r0, [r0, #0]
 801394e:	1bad      	subs	r5, r5, r6
 8013950:	4430      	add	r0, r6
 8013952:	7a26      	ldrb	r6, [r4, #8]
 8013954:	b19e      	cbz	r6, 801397e <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x46>
 8013956:	4e0f      	ldr	r6, [pc, #60]	@ (8013994 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8013958:	4f0f      	ldr	r7, [pc, #60]	@ (8013998 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 801395a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801395e:	2a00      	cmp	r2, #0
 8013960:	bfc8      	it	gt
 8013962:	463e      	movgt	r6, r7
 8013964:	4a0d      	ldr	r2, [pc, #52]	@ (801399c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x64>)
 8013966:	9600      	str	r6, [sp, #0]
 8013968:	460b      	mov	r3, r1
 801396a:	4629      	mov	r1, r5
 801396c:	f003 fa58 	bl	8016e20 <snprintf>
 8013970:	4285      	cmp	r5, r0
 8013972:	dbe7      	blt.n	8013944 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xc>
 8013974:	88e3      	ldrh	r3, [r4, #6]
 8013976:	4403      	add	r3, r0
 8013978:	80e3      	strh	r3, [r4, #6]
 801397a:	2001      	movs	r0, #1
 801397c:	e7e3      	b.n	8013946 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xe>
 801397e:	4e05      	ldr	r6, [pc, #20]	@ (8013994 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8013980:	4f05      	ldr	r7, [pc, #20]	@ (8013998 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 8013982:	2a00      	cmp	r2, #0
 8013984:	bfc8      	it	gt
 8013986:	463e      	movgt	r6, r7
 8013988:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801398c:	9600      	str	r6, [sp, #0]
 801398e:	4a04      	ldr	r2, [pc, #16]	@ (80139a0 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x68>)
 8013990:	460b      	mov	r3, r1
 8013992:	e7ea      	b.n	801396a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x32>
 8013994:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 8013998:	08017e08 	stmdaeq	r1, {r3, r9, sl, fp, ip, sp, lr}
 801399c:	08017e0a 	stmdaeq	r1, {r1, r3, r9, sl, fp, ip, sp, lr}
 80139a0:	08017e1e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, fp, ip, sp, lr}

080139a4 <PropertiesBuilder::AddComment(char const*)>:
 80139a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80139a6:	7a06      	ldrb	r6, [r0, #8]
 80139a8:	b98e      	cbnz	r6, 80139ce <PropertiesBuilder::AddComment(char const*)+0x2a>
 80139aa:	4604      	mov	r4, r0
 80139ac:	88c0      	ldrh	r0, [r0, #6]
 80139ae:	88a5      	ldrh	r5, [r4, #4]
 80139b0:	42a8      	cmp	r0, r5
 80139b2:	d20d      	bcs.n	80139d0 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80139b4:	6827      	ldr	r7, [r4, #0]
 80139b6:	4a07      	ldr	r2, [pc, #28]	@ (80139d4 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80139b8:	1a2d      	subs	r5, r5, r0
 80139ba:	460b      	mov	r3, r1
 80139bc:	4438      	add	r0, r7
 80139be:	4629      	mov	r1, r5
 80139c0:	f003 fa2e 	bl	8016e20 <snprintf>
 80139c4:	4285      	cmp	r5, r0
 80139c6:	db03      	blt.n	80139d0 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80139c8:	88e3      	ldrh	r3, [r4, #6]
 80139ca:	4418      	add	r0, r3
 80139cc:	80e0      	strh	r0, [r4, #6]
 80139ce:	2601      	movs	r6, #1
 80139d0:	4630      	mov	r0, r6
 80139d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80139d4:	08017e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, sp, lr}

080139d8 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80139d8:	e9c0 1200 	strd	r1, r2, [r0]
 80139dc:	4770      	bx	lr

080139de <ReadConfigFile::~ReadConfigFile()>:
 80139de:	4770      	bx	lr

080139e0 <ReadConfigFile::Read(char const*, unsigned int)>:
 80139e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80139e4:	b0a0      	sub	sp, #128	@ 0x80
 80139e6:	230a      	movs	r3, #10
 80139e8:	4607      	mov	r7, r0
 80139ea:	460d      	mov	r5, r1
 80139ec:	4614      	mov	r4, r2
 80139ee:	f88d 3000 	strb.w	r3, [sp]
 80139f2:	f04f 0800 	mov.w	r8, #0
 80139f6:	b334      	cbz	r4, 8013a46 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 80139f8:	466e      	mov	r6, sp
 80139fa:	462a      	mov	r2, r5
 80139fc:	4631      	mov	r1, r6
 80139fe:	7810      	ldrb	r0, [r2, #0]
 8013a00:	280d      	cmp	r0, #13
 8013a02:	4613      	mov	r3, r2
 8013a04:	f102 0201 	add.w	r2, r2, #1
 8013a08:	d009      	beq.n	8013a1e <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8013a0a:	280a      	cmp	r0, #10
 8013a0c:	d007      	beq.n	8013a1e <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8013a0e:	f806 0b01 	strb.w	r0, [r6], #1
 8013a12:	1a73      	subs	r3, r6, r1
 8013a14:	2b7f      	cmp	r3, #127	@ 0x7f
 8013a16:	dc16      	bgt.n	8013a46 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 8013a18:	3c01      	subs	r4, #1
 8013a1a:	d1f0      	bne.n	80139fe <ReadConfigFile::Read(char const*, unsigned int)+0x1e>
 8013a1c:	4613      	mov	r3, r2
 8013a1e:	461d      	mov	r5, r3
 8013a20:	b12c      	cbz	r4, 8013a2e <ReadConfigFile::Read(char const*, unsigned int)+0x4e>
 8013a22:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013a26:	2a0d      	cmp	r2, #13
 8013a28:	d00b      	beq.n	8013a42 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8013a2a:	2a0a      	cmp	r2, #10
 8013a2c:	d009      	beq.n	8013a42 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8013a2e:	f89d 3000 	ldrb.w	r3, [sp]
 8013a32:	2b2f      	cmp	r3, #47	@ 0x2f
 8013a34:	d9df      	bls.n	80139f6 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 8013a36:	e9d7 3000 	ldrd	r3, r0, [r7]
 8013a3a:	f886 8000 	strb.w	r8, [r6]
 8013a3e:	4798      	blx	r3
 8013a40:	e7d9      	b.n	80139f6 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 8013a42:	3c01      	subs	r4, #1
 8013a44:	e7eb      	b.n	8013a1e <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8013a46:	b020      	add	sp, #128	@ 0x80
 8013a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013a4c <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
 8013a4c:	b570      	push	{r4, r5, r6, lr}
 8013a4e:	4615      	mov	r5, r2
 8013a50:	461c      	mov	r4, r3
 8013a52:	f000 f950 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013a56:	b170      	cbz	r0, 8013a76 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2a>
 8013a58:	2100      	movs	r1, #0
 8013a5a:	5c43      	ldrb	r3, [r0, r1]
 8013a5c:	6826      	ldr	r6, [r4, #0]
 8013a5e:	b28a      	uxth	r2, r1
 8013a60:	b11b      	cbz	r3, 8013a6a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1e>
 8013a62:	4296      	cmp	r6, r2
 8013a64:	d804      	bhi.n	8013a70 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x24>
 8013a66:	2b0a      	cmp	r3, #10
 8013a68:	d107      	bne.n	8013a7a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2e>
 8013a6a:	6022      	str	r2, [r4, #0]
 8013a6c:	2000      	movs	r0, #0
 8013a6e:	bd70      	pop	{r4, r5, r6, pc}
 8013a70:	546b      	strb	r3, [r5, r1]
 8013a72:	3101      	adds	r1, #1
 8013a74:	e7f1      	b.n	8013a5a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0xe>
 8013a76:	2001      	movs	r0, #1
 8013a78:	e7f9      	b.n	8013a6e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>
 8013a7a:	2002      	movs	r0, #2
 8013a7c:	e7f7      	b.n	8013a6e <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>

08013a7e <Sscan::Float(char const*, char const*, float&)>:
 8013a7e:	b570      	push	{r4, r5, r6, lr}
 8013a80:	4614      	mov	r4, r2
 8013a82:	f000 f938 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013a86:	2800      	cmp	r0, #0
 8013a88:	d049      	beq.n	8013b1e <Sscan::Float(char const*, char const*, float&)+0xa0>
 8013a8a:	7803      	ldrb	r3, [r0, #0]
 8013a8c:	2b2d      	cmp	r3, #45	@ 0x2d
 8013a8e:	bf04      	itt	eq
 8013a90:	3001      	addeq	r0, #1
 8013a92:	2501      	moveq	r5, #1
 8013a94:	7803      	ldrb	r3, [r0, #0]
 8013a96:	bf18      	it	ne
 8013a98:	2500      	movne	r5, #0
 8013a9a:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 8013a9e:	d101      	bne.n	8013aa4 <Sscan::Float(char const*, char const*, float&)+0x26>
 8013aa0:	2002      	movs	r0, #2
 8013aa2:	bd70      	pop	{r4, r5, r6, pc}
 8013aa4:	2300      	movs	r3, #0
 8013aa6:	7802      	ldrb	r2, [r0, #0]
 8013aa8:	3a30      	subs	r2, #48	@ 0x30
 8013aaa:	2a09      	cmp	r2, #9
 8013aac:	d8f8      	bhi.n	8013aa0 <Sscan::Float(char const*, char const*, float&)+0x22>
 8013aae:	210a      	movs	r1, #10
 8013ab0:	fb01 2303 	mla	r3, r1, r3, r2
 8013ab4:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8013ab8:	2a2e      	cmp	r2, #46	@ 0x2e
 8013aba:	d002      	beq.n	8013ac2 <Sscan::Float(char const*, char const*, float&)+0x44>
 8013abc:	f012 0fdf 	tst.w	r2, #223	@ 0xdf
 8013ac0:	d1f1      	bne.n	8013aa6 <Sscan::Float(char const*, char const*, float&)+0x28>
 8013ac2:	ee07 3a90 	vmov	s15, r3
 8013ac6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8013aca:	edc4 7a00 	vstr	s15, [r4]
 8013ace:	7803      	ldrb	r3, [r0, #0]
 8013ad0:	2b2e      	cmp	r3, #46	@ 0x2e
 8013ad2:	d006      	beq.n	8013ae2 <Sscan::Float(char const*, char const*, float&)+0x64>
 8013ad4:	b11d      	cbz	r5, 8013ade <Sscan::Float(char const*, char const*, float&)+0x60>
 8013ad6:	eef1 7a67 	vneg.f32	s15, s15
 8013ada:	edc4 7a00 	vstr	s15, [r4]
 8013ade:	2000      	movs	r0, #0
 8013ae0:	e7df      	b.n	8013aa2 <Sscan::Float(char const*, char const*, float&)+0x24>
 8013ae2:	2301      	movs	r3, #1
 8013ae4:	2200      	movs	r2, #0
 8013ae6:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 8013aea:	f011 0fdf 	tst.w	r1, #223	@ 0xdf
 8013aee:	d10e      	bne.n	8013b0e <Sscan::Float(char const*, char const*, float&)+0x90>
 8013af0:	ee07 2a10 	vmov	s14, r2
 8013af4:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 8013af8:	ee07 3a10 	vmov	s14, r3
 8013afc:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8013b00:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8013b04:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b08:	2d00      	cmp	r5, #0
 8013b0a:	d1e4      	bne.n	8013ad6 <Sscan::Float(char const*, char const*, float&)+0x58>
 8013b0c:	e7e5      	b.n	8013ada <Sscan::Float(char const*, char const*, float&)+0x5c>
 8013b0e:	3930      	subs	r1, #48	@ 0x30
 8013b10:	2909      	cmp	r1, #9
 8013b12:	d8c5      	bhi.n	8013aa0 <Sscan::Float(char const*, char const*, float&)+0x22>
 8013b14:	260a      	movs	r6, #10
 8013b16:	fb06 1202 	mla	r2, r6, r2, r1
 8013b1a:	4373      	muls	r3, r6
 8013b1c:	e7e3      	b.n	8013ae6 <Sscan::Float(char const*, char const*, float&)+0x68>
 8013b1e:	2001      	movs	r0, #1
 8013b20:	e7bf      	b.n	8013aa2 <Sscan::Float(char const*, char const*, float&)+0x24>

08013b22 <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
 8013b22:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013b24:	4615      	mov	r5, r2
 8013b26:	f000 f8e6 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013b2a:	bb60      	cbnz	r0, 8013b86 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x64>
 8013b2c:	2001      	movs	r0, #1
 8013b2e:	e028      	b.n	8013b82 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8013b30:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8013b34:	2b09      	cmp	r3, #9
 8013b36:	d823      	bhi.n	8013b80 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013b38:	230a      	movs	r3, #10
 8013b3a:	fb03 2101 	mla	r1, r3, r1, r2
 8013b3e:	3930      	subs	r1, #48	@ 0x30
 8013b40:	4603      	mov	r3, r0
 8013b42:	4618      	mov	r0, r3
 8013b44:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013b48:	2a2e      	cmp	r2, #46	@ 0x2e
 8013b4a:	d115      	bne.n	8013b78 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x56>
 8013b4c:	29ff      	cmp	r1, #255	@ 0xff
 8013b4e:	d817      	bhi.n	8013b80 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013b50:	3401      	adds	r4, #1
 8013b52:	2c03      	cmp	r4, #3
 8013b54:	f806 1b01 	strb.w	r1, [r6], #1
 8013b58:	d117      	bne.n	8013b8a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x68>
 8013b5a:	1d1a      	adds	r2, r3, #4
 8013b5c:	2400      	movs	r4, #0
 8013b5e:	260a      	movs	r6, #10
 8013b60:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013b64:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 8013b68:	d113      	bne.n	8013b92 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x70>
 8013b6a:	2cff      	cmp	r4, #255	@ 0xff
 8013b6c:	d808      	bhi.n	8013b80 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013b6e:	f88d 4007 	strb.w	r4, [sp, #7]
 8013b72:	9b01      	ldr	r3, [sp, #4]
 8013b74:	602b      	str	r3, [r5, #0]
 8013b76:	e004      	b.n	8013b82 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8013b78:	2a00      	cmp	r2, #0
 8013b7a:	d0e7      	beq.n	8013b4c <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x2a>
 8013b7c:	42b8      	cmp	r0, r7
 8013b7e:	d1d7      	bne.n	8013b30 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xe>
 8013b80:	2002      	movs	r0, #2
 8013b82:	b003      	add	sp, #12
 8013b84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013b86:	ae01      	add	r6, sp, #4
 8013b88:	2400      	movs	r4, #0
 8013b8a:	4603      	mov	r3, r0
 8013b8c:	1d07      	adds	r7, r0, #4
 8013b8e:	2100      	movs	r1, #0
 8013b90:	e7d7      	b.n	8013b42 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x20>
 8013b92:	4293      	cmp	r3, r2
 8013b94:	d0f4      	beq.n	8013b80 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013b96:	3930      	subs	r1, #48	@ 0x30
 8013b98:	2909      	cmp	r1, #9
 8013b9a:	d8f1      	bhi.n	8013b80 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8013b9c:	fb06 1404 	mla	r4, r6, r4, r1
 8013ba0:	e7de      	b.n	8013b60 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x3e>

08013ba2 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8013ba2:	b538      	push	{r3, r4, r5, lr}
 8013ba4:	4615      	mov	r5, r2
 8013ba6:	f000 f8a6 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013baa:	b190      	cbz	r0, 8013bd2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x30>
 8013bac:	4601      	mov	r1, r0
 8013bae:	2400      	movs	r4, #0
 8013bb0:	780b      	ldrb	r3, [r1, #0]
 8013bb2:	3b30      	subs	r3, #48	@ 0x30
 8013bb4:	2b09      	cmp	r3, #9
 8013bb6:	d80e      	bhi.n	8013bd6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8013bb8:	220a      	movs	r2, #10
 8013bba:	fb02 3404 	mla	r4, r2, r4, r3
 8013bbe:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8013bc2:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8013bc6:	d1f3      	bne.n	8013bb0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8013bc8:	f5b4 3f80 	cmp.w	r4, #65536	@ 0x10000
 8013bcc:	d203      	bcs.n	8013bd6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8013bce:	802c      	strh	r4, [r5, #0]
 8013bd0:	bd38      	pop	{r3, r4, r5, pc}
 8013bd2:	2001      	movs	r0, #1
 8013bd4:	e7fc      	b.n	8013bd0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>
 8013bd6:	2002      	movs	r0, #2
 8013bd8:	e7fa      	b.n	8013bd0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>

08013bda <Sscan::Uint32(char const*, char const*, unsigned long&)>:
 8013bda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013bdc:	4616      	mov	r6, r2
 8013bde:	f000 f88a 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013be2:	b1f8      	cbz	r0, 8013c24 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4a>
 8013be4:	2300      	movs	r3, #0
 8013be6:	4605      	mov	r5, r0
 8013be8:	461c      	mov	r4, r3
 8013bea:	782a      	ldrb	r2, [r5, #0]
 8013bec:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8013bf0:	2909      	cmp	r1, #9
 8013bf2:	d819      	bhi.n	8013c28 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4e>
 8013bf4:	200a      	movs	r0, #10
 8013bf6:	fba3 3700 	umull	r3, r7, r3, r0
 8013bfa:	3a30      	subs	r2, #48	@ 0x30
 8013bfc:	eb62 0202 	sbc.w	r2, r2, r2
 8013c00:	18cb      	adds	r3, r1, r3
 8013c02:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 8013c06:	fb00 7404 	mla	r4, r0, r4, r7
 8013c0a:	eb44 0402 	adc.w	r4, r4, r2
 8013c0e:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 8013c12:	d1ea      	bne.n	8013bea <Sscan::Uint32(char const*, char const*, unsigned long&)+0x10>
 8013c14:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8013c18:	429a      	cmp	r2, r3
 8013c1a:	eb70 0404 	sbcs.w	r4, r0, r4
 8013c1e:	d303      	bcc.n	8013c28 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x4e>
 8013c20:	6033      	str	r3, [r6, #0]
 8013c22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013c24:	2001      	movs	r0, #1
 8013c26:	e7fc      	b.n	8013c22 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x48>
 8013c28:	2002      	movs	r0, #2
 8013c2a:	e7fa      	b.n	8013c22 <Sscan::Uint32(char const*, char const*, unsigned long&)+0x48>

08013c2c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8013c2c:	b538      	push	{r3, r4, r5, lr}
 8013c2e:	4615      	mov	r5, r2
 8013c30:	f000 f861 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013c34:	b188      	cbz	r0, 8013c5a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2e>
 8013c36:	4601      	mov	r1, r0
 8013c38:	2400      	movs	r4, #0
 8013c3a:	780b      	ldrb	r3, [r1, #0]
 8013c3c:	3b30      	subs	r3, #48	@ 0x30
 8013c3e:	2b09      	cmp	r3, #9
 8013c40:	d80d      	bhi.n	8013c5e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8013c42:	220a      	movs	r2, #10
 8013c44:	fb02 3404 	mla	r4, r2, r4, r3
 8013c48:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8013c4c:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8013c50:	d1f3      	bne.n	8013c3a <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8013c52:	2cff      	cmp	r4, #255	@ 0xff
 8013c54:	d803      	bhi.n	8013c5e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8013c56:	702c      	strb	r4, [r5, #0]
 8013c58:	bd38      	pop	{r3, r4, r5, pc}
 8013c5a:	2001      	movs	r0, #1
 8013c5c:	e7fc      	b.n	8013c58 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>
 8013c5e:	2002      	movs	r0, #2
 8013c60:	e7fa      	b.n	8013c58 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>

08013c62 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
 8013c62:	b570      	push	{r4, r5, r6, lr}
 8013c64:	4615      	mov	r5, r2
 8013c66:	461e      	mov	r6, r3
 8013c68:	f000 f845 	bl	8013cf6 <Sscan::checkName(char const*, char const*)>
 8013c6c:	2800      	cmp	r0, #0
 8013c6e:	d040      	beq.n	8013cf2 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x90>
 8013c70:	7803      	ldrb	r3, [r0, #0]
 8013c72:	2b2d      	cmp	r3, #45	@ 0x2d
 8013c74:	4601      	mov	r1, r0
 8013c76:	d107      	bne.n	8013c88 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x26>
 8013c78:	3101      	adds	r1, #1
 8013c7a:	2201      	movs	r2, #1
 8013c7c:	780b      	ldrb	r3, [r1, #0]
 8013c7e:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 8013c82:	d106      	bne.n	8013c92 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x30>
 8013c84:	2002      	movs	r0, #2
 8013c86:	bd70      	pop	{r4, r5, r6, pc}
 8013c88:	2b2b      	cmp	r3, #43	@ 0x2b
 8013c8a:	bf08      	it	eq
 8013c8c:	3101      	addeq	r1, #1
 8013c8e:	2200      	movs	r2, #0
 8013c90:	e7f4      	b.n	8013c7c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x1a>
 8013c92:	2300      	movs	r3, #0
 8013c94:	702b      	strb	r3, [r5, #0]
 8013c96:	780b      	ldrb	r3, [r1, #0]
 8013c98:	f1a3 0030 	sub.w	r0, r3, #48	@ 0x30
 8013c9c:	2801      	cmp	r0, #1
 8013c9e:	d8f1      	bhi.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013ca0:	2b31      	cmp	r3, #49	@ 0x31
 8013ca2:	bf14      	ite	ne
 8013ca4:	2300      	movne	r3, #0
 8013ca6:	230a      	moveq	r3, #10
 8013ca8:	702b      	strb	r3, [r5, #0]
 8013caa:	7848      	ldrb	r0, [r1, #1]
 8013cac:	3830      	subs	r0, #48	@ 0x30
 8013cae:	2809      	cmp	r0, #9
 8013cb0:	d8e8      	bhi.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013cb2:	4403      	add	r3, r0
 8013cb4:	702b      	strb	r3, [r5, #0]
 8013cb6:	788b      	ldrb	r3, [r1, #2]
 8013cb8:	2b3a      	cmp	r3, #58	@ 0x3a
 8013cba:	d1e3      	bne.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013cbc:	78cc      	ldrb	r4, [r1, #3]
 8013cbe:	3c30      	subs	r4, #48	@ 0x30
 8013cc0:	2c09      	cmp	r4, #9
 8013cc2:	d8df      	bhi.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013cc4:	790b      	ldrb	r3, [r1, #4]
 8013cc6:	3b30      	subs	r3, #48	@ 0x30
 8013cc8:	2b09      	cmp	r3, #9
 8013cca:	d8db      	bhi.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013ccc:	7948      	ldrb	r0, [r1, #5]
 8013cce:	f010 00df 	ands.w	r0, r0, #223	@ 0xdf
 8013cd2:	d1d7      	bne.n	8013c84 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8013cd4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8013cd8:	0064      	lsls	r4, r4, #1
 8013cda:	b2e4      	uxtb	r4, r4
 8013cdc:	7034      	strb	r4, [r6, #0]
 8013cde:	790b      	ldrb	r3, [r1, #4]
 8013ce0:	3b30      	subs	r3, #48	@ 0x30
 8013ce2:	441c      	add	r4, r3
 8013ce4:	7034      	strb	r4, [r6, #0]
 8013ce6:	2a00      	cmp	r2, #0
 8013ce8:	d0cd      	beq.n	8013c86 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8013cea:	782b      	ldrb	r3, [r5, #0]
 8013cec:	425b      	negs	r3, r3
 8013cee:	702b      	strb	r3, [r5, #0]
 8013cf0:	e7c9      	b.n	8013c86 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8013cf2:	2001      	movs	r0, #1
 8013cf4:	e7c7      	b.n	8013c86 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>

08013cf6 <Sscan::checkName(char const*, char const*)>:
 8013cf6:	3901      	subs	r1, #1
 8013cf8:	4602      	mov	r2, r0
 8013cfa:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013cfe:	b130      	cbz	r0, 8013d0e <Sscan::checkName(char const*, char const*)+0x18>
 8013d00:	f812 3b01 	ldrb.w	r3, [r2], #1
 8013d04:	b10b      	cbz	r3, 8013d0a <Sscan::checkName(char const*, char const*)+0x14>
 8013d06:	4298      	cmp	r0, r3
 8013d08:	d0f7      	beq.n	8013cfa <Sscan::checkName(char const*, char const*)+0x4>
 8013d0a:	2000      	movs	r0, #0
 8013d0c:	4770      	bx	lr
 8013d0e:	7813      	ldrb	r3, [r2, #0]
 8013d10:	2b3d      	cmp	r3, #61	@ 0x3d
 8013d12:	d1fb      	bne.n	8013d0c <Sscan::checkName(char const*, char const*)+0x16>
 8013d14:	7853      	ldrb	r3, [r2, #1]
 8013d16:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8013d1a:	d0f7      	beq.n	8013d0c <Sscan::checkName(char const*, char const*)+0x16>
 8013d1c:	1c50      	adds	r0, r2, #1
 8013d1e:	4770      	bx	lr

08013d20 <Display::PrintInfo() [clone .isra.0]>:
 8013d20:	b910      	cbnz	r0, 8013d28 <Display::PrintInfo() [clone .isra.0]+0x8>
 8013d22:	4803      	ldr	r0, [pc, #12]	@ (8013d30 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8013d24:	f003 b8a9 	b.w	8016e7a <puts>
 8013d28:	6803      	ldr	r3, [r0, #0]
 8013d2a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8013d2c:	4718      	bx	r3
 8013d2e:	bf00      	nop
 8013d30:	08017e35 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, fp, ip, sp, lr}

08013d34 <display::timeout::gpio_init()>:
 8013d34:	b510      	push	{r4, lr}
 8013d36:	4c0a      	ldr	r4, [pc, #40]	@ (8013d60 <display::timeout::gpio_init()+0x2c>)
 8013d38:	f640 4002 	movw	r0, #3074	@ 0xc02
 8013d3c:	f001 fac4 	bl	80152c8 <rcu_periph_clock_enable>
 8013d40:	4620      	mov	r0, r4
 8013d42:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8013d46:	2201      	movs	r2, #1
 8013d48:	2100      	movs	r1, #0
 8013d4a:	f001 fa3b 	bl	80151c4 <gpio_mode_set>
 8013d4e:	4620      	mov	r0, r4
 8013d50:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8013d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d58:	2201      	movs	r2, #1
 8013d5a:	2100      	movs	r1, #0
 8013d5c:	f001 ba32 	b.w	80151c4 <gpio_mode_set>
 8013d60:	40020800 	andmi	r0, r2, r0, lsl #16

08013d64 <Display::Detect(display::Type)>:
 8013d64:	2902      	cmp	r1, #2
 8013d66:	b538      	push	{r3, r4, r5, lr}
 8013d68:	4604      	mov	r4, r0
 8013d6a:	d014      	beq.n	8013d96 <Display::Detect(display::Type)+0x32>
 8013d6c:	2904      	cmp	r1, #4
 8013d6e:	d01b      	beq.n	8013da8 <Display::Detect(display::Type)+0x44>
 8013d70:	69a0      	ldr	r0, [r4, #24]
 8013d72:	b168      	cbz	r0, 8013d90 <Display::Detect(display::Type)+0x2c>
 8013d74:	6803      	ldr	r3, [r0, #0]
 8013d76:	689b      	ldr	r3, [r3, #8]
 8013d78:	4798      	blx	r3
 8013d7a:	4603      	mov	r3, r0
 8013d7c:	69a0      	ldr	r0, [r4, #24]
 8013d7e:	b9ab      	cbnz	r3, 8013dac <Display::Detect(display::Type)+0x48>
 8013d80:	b110      	cbz	r0, 8013d88 <Display::Detect(display::Type)+0x24>
 8013d82:	6803      	ldr	r3, [r0, #0]
 8013d84:	685b      	ldr	r3, [r3, #4]
 8013d86:	4798      	blx	r3
 8013d88:	2300      	movs	r3, #0
 8013d8a:	61a3      	str	r3, [r4, #24]
 8013d8c:	2304      	movs	r3, #4
 8013d8e:	6023      	str	r3, [r4, #0]
 8013d90:	2300      	movs	r3, #0
 8013d92:	6123      	str	r3, [r4, #16]
 8013d94:	e010      	b.n	8013db8 <Display::Detect(display::Type)+0x54>
 8013d96:	2020      	movs	r0, #32
 8013d98:	f003 fa28 	bl	80171ec <operator new(unsigned int)>
 8013d9c:	2100      	movs	r1, #0
 8013d9e:	4605      	mov	r5, r0
 8013da0:	f000 f8bc 	bl	8013f1c <Ssd1306::Ssd1306(TOledPanel)>
 8013da4:	61a5      	str	r5, [r4, #24]
 8013da6:	e7e3      	b.n	8013d70 <Display::Detect(display::Type)+0xc>
 8013da8:	6001      	str	r1, [r0, #0]
 8013daa:	e7e1      	b.n	8013d70 <Display::Detect(display::Type)+0xc>
 8013dac:	6803      	ldr	r3, [r0, #0]
 8013dae:	68db      	ldr	r3, [r3, #12]
 8013db0:	4798      	blx	r3
 8013db2:	69a3      	ldr	r3, [r4, #24]
 8013db4:	2b00      	cmp	r3, #0
 8013db6:	d0eb      	beq.n	8013d90 <Display::Detect(display::Type)+0x2c>
 8013db8:	bd38      	pop	{r3, r4, r5, pc}
	...

08013dbc <Display::Display()>:
 8013dbc:	2304      	movs	r3, #4
 8013dbe:	b510      	push	{r4, lr}
 8013dc0:	6003      	str	r3, [r0, #0]
 8013dc2:	4b0e      	ldr	r3, [pc, #56]	@ (8013dfc <Display::Display()+0x40>)
 8013dc4:	4a0e      	ldr	r2, [pc, #56]	@ (8013e00 <Display::Display()+0x44>)
 8013dc6:	681b      	ldr	r3, [r3, #0]
 8013dc8:	6043      	str	r3, [r0, #4]
 8013dca:	2321      	movs	r3, #33	@ 0x21
 8013dcc:	7203      	strb	r3, [r0, #8]
 8013dce:	4b0d      	ldr	r3, [pc, #52]	@ (8013e04 <Display::Display()+0x48>)
 8013dd0:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8013dd4:	237f      	movs	r3, #127	@ 0x7f
 8013dd6:	8283      	strh	r3, [r0, #20]
 8013dd8:	2300      	movs	r3, #0
 8013dda:	4604      	mov	r4, r0
 8013ddc:	7583      	strb	r3, [r0, #22]
 8013dde:	6183      	str	r3, [r0, #24]
 8013de0:	4b09      	ldr	r3, [pc, #36]	@ (8013e08 <Display::Display()+0x4c>)
 8013de2:	2102      	movs	r1, #2
 8013de4:	6018      	str	r0, [r3, #0]
 8013de6:	f7ff ffbd 	bl	8013d64 <Display::Detect(display::Type)>
 8013dea:	69a3      	ldr	r3, [r4, #24]
 8013dec:	b10b      	cbz	r3, 8013df2 <Display::Display()+0x36>
 8013dee:	f7ff ffa1 	bl	8013d34 <display::timeout::gpio_init()>
 8013df2:	69a0      	ldr	r0, [r4, #24]
 8013df4:	f7ff ff94 	bl	8013d20 <Display::PrintInfo() [clone .isra.0]>
 8013df8:	4620      	mov	r0, r4
 8013dfa:	bd10      	pop	{r4, pc}
 8013dfc:	200145c8 	andcs	r4, r1, r8, asr #11
 8013e00:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013e04:	000493e0 	andeq	r9, r4, r0, ror #7
 8013e08:	20009c14 	andcs	r9, r0, r4, lsl ip

08013e0c <Ssd1306::~Ssd1306()>:
 8013e0c:	4770      	bx	lr

08013e0e <Ssd1306::SetCursor(unsigned long)>:
 8013e0e:	4770      	bx	lr

08013e10 <Ssd1306::PrintInfo()>:
 8013e10:	b410      	push	{r4}
 8013e12:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8013e16:	7e44      	ldrb	r4, [r0, #25]
 8013e18:	4904      	ldr	r1, [pc, #16]	@ (8013e2c <Ssd1306::PrintInfo()+0x1c>)
 8013e1a:	4805      	ldr	r0, [pc, #20]	@ (8013e30 <Ssd1306::PrintInfo()+0x20>)
 8013e1c:	2c00      	cmp	r4, #0
 8013e1e:	bf18      	it	ne
 8013e20:	4601      	movne	r1, r0
 8013e22:	4804      	ldr	r0, [pc, #16]	@ (8013e34 <Ssd1306::PrintInfo()+0x24>)
 8013e24:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013e28:	f002 bfd2 	b.w	8016dd0 <printf>
 8013e2c:	08017e4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, fp, ip, sp, lr}
 8013e30:	08017e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, ip, sp, lr}
 8013e34:	08017e55 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, fp, ip, sp, lr}

08013e38 <Ssd1306::~Ssd1306()>:
 8013e38:	b510      	push	{r4, lr}
 8013e3a:	2120      	movs	r1, #32
 8013e3c:	4604      	mov	r4, r0
 8013e3e:	f003 f9d3 	bl	80171e8 <operator delete(void*, unsigned int)>
 8013e42:	4620      	mov	r0, r4
 8013e44:	bd10      	pop	{r4, pc}

08013e46 <HAL_I2C::Setup()>:
 8013e46:	b510      	push	{r4, lr}
 8013e48:	4604      	mov	r4, r0
 8013e4a:	7800      	ldrb	r0, [r0, #0]
 8013e4c:	f001 ff02 	bl	8015c54 <gd32_i2c_set_address>
 8013e50:	6860      	ldr	r0, [r4, #4]
 8013e52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e56:	f001 bef5 	b.w	8015c44 <gd32_i2c_set_baudrate>
	...

08013e5c <Ssd1306::PutChar(int)>:
 8013e5c:	b510      	push	{r4, lr}
 8013e5e:	f1a1 0420 	sub.w	r4, r1, #32
 8013e62:	2c5f      	cmp	r4, #95	@ 0x5f
 8013e64:	f100 0010 	add.w	r0, r0, #16
 8013e68:	bf88      	it	hi
 8013e6a:	2400      	movhi	r4, #0
 8013e6c:	f7ff ffeb 	bl	8013e46 <HAL_I2C::Setup()>
 8013e70:	4804      	ldr	r0, [pc, #16]	@ (8013e84 <Ssd1306::PutChar(int)+0x28>)
 8013e72:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013e76:	4420      	add	r0, r4
 8013e78:	2107      	movs	r1, #7
 8013e7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e7e:	f001 beef 	b.w	8015c60 <gd32_i2c_write>
 8013e82:	bf00      	nop
 8013e84:	0801a6a4 	stmdaeq	r1, {r2, r5, r7, r9, sl, sp, pc}

08013e88 <Ssd1306::PutString(char const*)>:
 8013e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013e8a:	4604      	mov	r4, r0
 8013e8c:	460e      	mov	r6, r1
 8013e8e:	460f      	mov	r7, r1
 8013e90:	463d      	mov	r5, r7
 8013e92:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013e96:	b939      	cbnz	r1, 8013ea8 <Ssd1306::PutString(char const*)+0x20>
 8013e98:	7b23      	ldrb	r3, [r4, #12]
 8013e9a:	b123      	cbz	r3, 8013ea6 <Ssd1306::PutString(char const*)+0x1e>
 8013e9c:	7321      	strb	r1, [r4, #12]
 8013e9e:	1bad      	subs	r5, r5, r6
 8013ea0:	6863      	ldr	r3, [r4, #4]
 8013ea2:	42ab      	cmp	r3, r5
 8013ea4:	d804      	bhi.n	8013eb0 <Ssd1306::PutString(char const*)+0x28>
 8013ea6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013ea8:	4620      	mov	r0, r4
 8013eaa:	f7ff ffd7 	bl	8013e5c <Ssd1306::PutChar(int)>
 8013eae:	e7ef      	b.n	8013e90 <Ssd1306::PutString(char const*)+0x8>
 8013eb0:	2120      	movs	r1, #32
 8013eb2:	4620      	mov	r0, r4
 8013eb4:	f7ff ffd2 	bl	8013e5c <Ssd1306::PutChar(int)>
 8013eb8:	3501      	adds	r5, #1
 8013eba:	e7f1      	b.n	8013ea0 <Ssd1306::PutString(char const*)+0x18>

08013ebc <Ssd1306::Text(char const*, unsigned long)>:
 8013ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013ebe:	6843      	ldr	r3, [r0, #4]
 8013ec0:	429a      	cmp	r2, r3
 8013ec2:	bf28      	it	cs
 8013ec4:	461a      	movcs	r2, r3
 8013ec6:	4604      	mov	r4, r0
 8013ec8:	4615      	mov	r5, r2
 8013eca:	460e      	mov	r6, r1
 8013ecc:	188f      	adds	r7, r1, r2
 8013ece:	42be      	cmp	r6, r7
 8013ed0:	d107      	bne.n	8013ee2 <Ssd1306::Text(char const*, unsigned long)+0x26>
 8013ed2:	7b23      	ldrb	r3, [r4, #12]
 8013ed4:	b123      	cbz	r3, 8013ee0 <Ssd1306::Text(char const*, unsigned long)+0x24>
 8013ed6:	2300      	movs	r3, #0
 8013ed8:	7323      	strb	r3, [r4, #12]
 8013eda:	6863      	ldr	r3, [r4, #4]
 8013edc:	42ab      	cmp	r3, r5
 8013ede:	d806      	bhi.n	8013eee <Ssd1306::Text(char const*, unsigned long)+0x32>
 8013ee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013ee2:	f816 1b01 	ldrb.w	r1, [r6], #1
 8013ee6:	4620      	mov	r0, r4
 8013ee8:	f7ff ffb8 	bl	8013e5c <Ssd1306::PutChar(int)>
 8013eec:	e7ef      	b.n	8013ece <Ssd1306::Text(char const*, unsigned long)+0x12>
 8013eee:	2120      	movs	r1, #32
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	f7ff ffb3 	bl	8013e5c <Ssd1306::PutChar(int)>
 8013ef6:	3501      	adds	r5, #1
 8013ef8:	e7ef      	b.n	8013eda <Ssd1306::Text(char const*, unsigned long)+0x1e>

08013efa <Ssd1306::InitMembers()>:
 8013efa:	2315      	movs	r3, #21
 8013efc:	6043      	str	r3, [r0, #4]
 8013efe:	7e03      	ldrb	r3, [r0, #24]
 8013f00:	b12b      	cbz	r3, 8013f0e <Ssd1306::InitMembers()+0x14>
 8013f02:	3b01      	subs	r3, #1
 8013f04:	2b01      	cmp	r3, #1
 8013f06:	d807      	bhi.n	8013f18 <Ssd1306::InitMembers()+0x1e>
 8013f08:	2304      	movs	r3, #4
 8013f0a:	2204      	movs	r2, #4
 8013f0c:	e001      	b.n	8013f12 <Ssd1306::InitMembers()+0x18>
 8013f0e:	2308      	movs	r3, #8
 8013f10:	461a      	mov	r2, r3
 8013f12:	6083      	str	r3, [r0, #8]
 8013f14:	61c2      	str	r2, [r0, #28]
 8013f16:	4770      	bx	lr
 8013f18:	2308      	movs	r3, #8
 8013f1a:	e7f6      	b.n	8013f0a <Ssd1306::InitMembers()+0x10>

08013f1c <Ssd1306::Ssd1306(TOledPanel)>:
 8013f1c:	b510      	push	{r4, lr}
 8013f1e:	4c07      	ldr	r4, [pc, #28]	@ (8013f3c <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8013f20:	6004      	str	r4, [r0, #0]
 8013f22:	2200      	movs	r2, #0
 8013f24:	243c      	movs	r4, #60	@ 0x3c
 8013f26:	7302      	strb	r2, [r0, #12]
 8013f28:	7404      	strb	r4, [r0, #16]
 8013f2a:	7642      	strb	r2, [r0, #25]
 8013f2c:	4c04      	ldr	r4, [pc, #16]	@ (8013f40 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8013f2e:	4a05      	ldr	r2, [pc, #20]	@ (8013f44 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8013f30:	6144      	str	r4, [r0, #20]
 8013f32:	7601      	strb	r1, [r0, #24]
 8013f34:	6010      	str	r0, [r2, #0]
 8013f36:	f7ff ffe0 	bl	8013efa <Ssd1306::InitMembers()>
 8013f3a:	bd10      	pop	{r4, pc}
 8013f3c:	0801a63c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, sp, pc}
 8013f40:	00061a80 	andeq	r1, r6, r0, lsl #21
 8013f44:	20009c18 	andcs	r9, r0, r8, lsl ip

08013f48 <Ssd1306::SendCommand(unsigned char)>:
 8013f48:	b507      	push	{r0, r1, r2, lr}
 8013f4a:	2300      	movs	r3, #0
 8013f4c:	3010      	adds	r0, #16
 8013f4e:	f88d 3004 	strb.w	r3, [sp, #4]
 8013f52:	f88d 1005 	strb.w	r1, [sp, #5]
 8013f56:	f7ff ff76 	bl	8013e46 <HAL_I2C::Setup()>
 8013f5a:	2102      	movs	r1, #2
 8013f5c:	a801      	add	r0, sp, #4
 8013f5e:	f001 fe7f 	bl	8015c60 <gd32_i2c_write>
 8013f62:	b003      	add	sp, #12
 8013f64:	f85d fb04 	ldr.w	pc, [sp], #4

08013f68 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 8013f68:	2914      	cmp	r1, #20
 8013f6a:	b570      	push	{r4, r5, r6, lr}
 8013f6c:	4605      	mov	r5, r0
 8013f6e:	4616      	mov	r6, r2
 8013f70:	d81d      	bhi.n	8013fae <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8013f72:	6883      	ldr	r3, [r0, #8]
 8013f74:	4293      	cmp	r3, r2
 8013f76:	d91a      	bls.n	8013fae <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8013f78:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013f7c:	7e43      	ldrb	r3, [r0, #25]
 8013f7e:	004c      	lsls	r4, r1, #1
 8013f80:	b2e4      	uxtb	r4, r4
 8013f82:	b10b      	cbz	r3, 8013f88 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 8013f84:	3404      	adds	r4, #4
 8013f86:	b2e4      	uxtb	r4, r4
 8013f88:	f004 010e 	and.w	r1, r4, #14
 8013f8c:	4628      	mov	r0, r5
 8013f8e:	f7ff ffdb 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8013f92:	0921      	lsrs	r1, r4, #4
 8013f94:	4628      	mov	r0, r5
 8013f96:	f041 0110 	orr.w	r1, r1, #16
 8013f9a:	f7ff ffd5 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8013f9e:	f066 014f 	orn	r1, r6, #79	@ 0x4f
 8013fa2:	4628      	mov	r0, r5
 8013fa4:	b2c9      	uxtb	r1, r1
 8013fa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013faa:	f7ff bfcd 	b.w	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8013fae:	bd70      	pop	{r4, r5, r6, pc}

08013fb0 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 8013fb0:	b570      	push	{r4, r5, r6, lr}
 8013fb2:	461e      	mov	r6, r3
 8013fb4:	6883      	ldr	r3, [r0, #8]
 8013fb6:	428b      	cmp	r3, r1
 8013fb8:	4604      	mov	r4, r0
 8013fba:	4615      	mov	r5, r2
 8013fbc:	d30b      	bcc.n	8013fd6 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 8013fbe:	3901      	subs	r1, #1
 8013fc0:	b2ca      	uxtb	r2, r1
 8013fc2:	2100      	movs	r1, #0
 8013fc4:	f7ff ffd0 	bl	8013f68 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8013fc8:	4632      	mov	r2, r6
 8013fca:	4629      	mov	r1, r5
 8013fcc:	4620      	mov	r0, r4
 8013fce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013fd2:	f7ff bf73 	b.w	8013ebc <Ssd1306::Text(char const*, unsigned long)>
 8013fd6:	bd70      	pop	{r4, r5, r6, pc}

08013fd8 <Ssd1306::ClearLine(unsigned long)>:
 8013fd8:	b538      	push	{r3, r4, r5, lr}
 8013fda:	6883      	ldr	r3, [r0, #8]
 8013fdc:	428b      	cmp	r3, r1
 8013fde:	4605      	mov	r5, r0
 8013fe0:	d314      	bcc.n	801400c <Ssd1306::ClearLine(unsigned long)+0x34>
 8013fe2:	3901      	subs	r1, #1
 8013fe4:	b2cc      	uxtb	r4, r1
 8013fe6:	4622      	mov	r2, r4
 8013fe8:	2100      	movs	r1, #0
 8013fea:	f7ff ffbd 	bl	8013f68 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8013fee:	f105 0010 	add.w	r0, r5, #16
 8013ff2:	f7ff ff28 	bl	8013e46 <HAL_I2C::Setup()>
 8013ff6:	2181      	movs	r1, #129	@ 0x81
 8013ff8:	4805      	ldr	r0, [pc, #20]	@ (8014010 <Ssd1306::ClearLine(unsigned long)+0x38>)
 8013ffa:	f001 fe31 	bl	8015c60 <gd32_i2c_write>
 8013ffe:	4622      	mov	r2, r4
 8014000:	4628      	mov	r0, r5
 8014002:	2100      	movs	r1, #0
 8014004:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014008:	f7ff bfae 	b.w	8013f68 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 801400c:	bd38      	pop	{r3, r4, r5, pc}
 801400e:	bf00      	nop
 8014010:	20009c1c 	andcs	r9, r0, ip, lsl ip

08014014 <Ssd1306::SetSleep(bool)>:
 8014014:	b111      	cbz	r1, 801401c <Ssd1306::SetSleep(bool)+0x8>
 8014016:	21ae      	movs	r1, #174	@ 0xae
 8014018:	f7ff bf96 	b.w	8013f48 <Ssd1306::SendCommand(unsigned char)>
 801401c:	21af      	movs	r1, #175	@ 0xaf
 801401e:	e7fb      	b.n	8014018 <Ssd1306::SetSleep(bool)+0x4>

08014020 <Ssd1306::SetContrast(unsigned char)>:
 8014020:	b538      	push	{r3, r4, r5, lr}
 8014022:	4604      	mov	r4, r0
 8014024:	460d      	mov	r5, r1
 8014026:	2181      	movs	r1, #129	@ 0x81
 8014028:	f7ff ff8e 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 801402c:	4629      	mov	r1, r5
 801402e:	4620      	mov	r0, r4
 8014030:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014034:	f7ff bf88 	b.w	8013f48 <Ssd1306::SendCommand(unsigned char)>

08014038 <Ssd1306::SetFlipVertically(bool)>:
 8014038:	b510      	push	{r4, lr}
 801403a:	4604      	mov	r4, r0
 801403c:	b141      	cbz	r1, 8014050 <Ssd1306::SetFlipVertically(bool)+0x18>
 801403e:	21a0      	movs	r1, #160	@ 0xa0
 8014040:	f7ff ff82 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014044:	21c0      	movs	r1, #192	@ 0xc0
 8014046:	4620      	mov	r0, r4
 8014048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801404c:	f7ff bf7c 	b.w	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014050:	21a1      	movs	r1, #161	@ 0xa1
 8014052:	f7ff ff79 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014056:	21c8      	movs	r1, #200	@ 0xc8
 8014058:	e7f5      	b.n	8014046 <Ssd1306::SetFlipVertically(bool)+0xe>
	...

0801405c <Ssd1306::CheckSH1106()>:
 801405c:	b530      	push	{r4, r5, lr}
 801405e:	2100      	movs	r1, #0
 8014060:	b087      	sub	sp, #28
 8014062:	4604      	mov	r4, r0
 8014064:	f7ff ff70 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014068:	2190      	movs	r1, #144	@ 0x90
 801406a:	4620      	mov	r0, r4
 801406c:	f7ff ff6c 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014070:	21b0      	movs	r1, #176	@ 0xb0
 8014072:	4620      	mov	r0, r4
 8014074:	f7ff ff68 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014078:	4b21      	ldr	r3, [pc, #132]	@ (8014100 <Ssd1306::CheckSH1106()+0xa4>)
 801407a:	f104 0510 	add.w	r5, r4, #16
 801407e:	6818      	ldr	r0, [r3, #0]
 8014080:	9002      	str	r0, [sp, #8]
 8014082:	791b      	ldrb	r3, [r3, #4]
 8014084:	f88d 300c 	strb.w	r3, [sp, #12]
 8014088:	4628      	mov	r0, r5
 801408a:	f7ff fedc 	bl	8013e46 <HAL_I2C::Setup()>
 801408e:	2105      	movs	r1, #5
 8014090:	a802      	add	r0, sp, #8
 8014092:	f001 fde5 	bl	8015c60 <gd32_i2c_write>
 8014096:	2100      	movs	r1, #0
 8014098:	4620      	mov	r0, r4
 801409a:	f7ff ff55 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 801409e:	2190      	movs	r1, #144	@ 0x90
 80140a0:	4620      	mov	r0, r4
 80140a2:	f7ff ff51 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 80140a6:	21b0      	movs	r1, #176	@ 0xb0
 80140a8:	4620      	mov	r0, r4
 80140aa:	f7ff ff4d 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 80140ae:	2300      	movs	r3, #0
 80140b0:	4628      	mov	r0, r5
 80140b2:	9304      	str	r3, [sp, #16]
 80140b4:	f88d 3014 	strb.w	r3, [sp, #20]
 80140b8:	f7ff fec5 	bl	8013e46 <HAL_I2C::Setup()>
 80140bc:	2340      	movs	r3, #64	@ 0x40
 80140be:	2101      	movs	r1, #1
 80140c0:	a801      	add	r0, sp, #4
 80140c2:	f88d 3004 	strb.w	r3, [sp, #4]
 80140c6:	f001 fdcb 	bl	8015c60 <gd32_i2c_write>
 80140ca:	4628      	mov	r0, r5
 80140cc:	f7ff febb 	bl	8013e46 <HAL_I2C::Setup()>
 80140d0:	2105      	movs	r1, #5
 80140d2:	a804      	add	r0, sp, #16
 80140d4:	f001 fe2a 	bl	8015d2c <gd32_i2c_read>
 80140d8:	a902      	add	r1, sp, #8
 80140da:	aa04      	add	r2, sp, #16
 80140dc:	2003      	movs	r0, #3
 80140de:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80140e2:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80140e6:	42ab      	cmp	r3, r5
 80140e8:	d006      	beq.n	80140f8 <Ssd1306::CheckSH1106()+0x9c>
 80140ea:	1b5b      	subs	r3, r3, r5
 80140ec:	fab3 f383 	clz	r3, r3
 80140f0:	095b      	lsrs	r3, r3, #5
 80140f2:	7663      	strb	r3, [r4, #25]
 80140f4:	b007      	add	sp, #28
 80140f6:	bd30      	pop	{r4, r5, pc}
 80140f8:	3801      	subs	r0, #1
 80140fa:	d2f0      	bcs.n	80140de <Ssd1306::CheckSH1106()+0x82>
 80140fc:	2300      	movs	r3, #0
 80140fe:	e7f5      	b.n	80140ec <Ssd1306::CheckSH1106()+0x90>
 8014100:	08017e61 	stmdaeq	r1, {r0, r5, r6, r9, sl, fp, ip, sp, lr}

08014104 <Ssd1306::Cls()>:
 8014104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014108:	7e46      	ldrb	r6, [r0, #25]
 801410a:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 801416c <Ssd1306::Cls()+0x68>
 801410e:	00b6      	lsls	r6, r6, #2
 8014110:	b2f7      	uxtb	r7, r6
 8014112:	4604      	mov	r4, r0
 8014114:	2500      	movs	r5, #0
 8014116:	f047 0810 	orr.w	r8, r7, #16
 801411a:	69e3      	ldr	r3, [r4, #28]
 801411c:	42ab      	cmp	r3, r5
 801411e:	4639      	mov	r1, r7
 8014120:	4620      	mov	r0, r4
 8014122:	d80b      	bhi.n	801413c <Ssd1306::Cls()+0x38>
 8014124:	f7ff ff10 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014128:	4641      	mov	r1, r8
 801412a:	4620      	mov	r0, r4
 801412c:	f7ff ff0c 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014130:	4620      	mov	r0, r4
 8014132:	21b0      	movs	r1, #176	@ 0xb0
 8014134:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014138:	f7ff bf06 	b.w	8013f48 <Ssd1306::SendCommand(unsigned char)>
 801413c:	f7ff ff04 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014140:	4641      	mov	r1, r8
 8014142:	4620      	mov	r0, r4
 8014144:	f7ff ff00 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014148:	f065 014f 	orn	r1, r5, #79	@ 0x4f
 801414c:	b2c9      	uxtb	r1, r1
 801414e:	4620      	mov	r0, r4
 8014150:	f7ff fefa 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 8014154:	f104 0010 	add.w	r0, r4, #16
 8014158:	f7ff fe75 	bl	8013e46 <HAL_I2C::Setup()>
 801415c:	f106 0181 	add.w	r1, r6, #129	@ 0x81
 8014160:	4648      	mov	r0, r9
 8014162:	f001 fd7d 	bl	8015c60 <gd32_i2c_write>
 8014166:	3501      	adds	r5, #1
 8014168:	e7d7      	b.n	801411a <Ssd1306::Cls()+0x16>
 801416a:	bf00      	nop
 801416c:	20009c1c 	andcs	r9, r0, ip, lsl ip

08014170 <Ssd1306::Start()>:
 8014170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014172:	7c04      	ldrb	r4, [r0, #16]
 8014174:	6946      	ldr	r6, [r0, #20]
 8014176:	4605      	mov	r5, r0
 8014178:	4620      	mov	r0, r4
 801417a:	f001 fd6b 	bl	8015c54 <gd32_i2c_set_address>
 801417e:	4630      	mov	r0, r6
 8014180:	f001 fd60 	bl	8015c44 <gd32_i2c_set_baudrate>
 8014184:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8014188:	2b07      	cmp	r3, #7
 801418a:	d902      	bls.n	8014192 <Ssd1306::Start()+0x22>
 801418c:	3c50      	subs	r4, #80	@ 0x50
 801418e:	2c0f      	cmp	r4, #15
 8014190:	d80f      	bhi.n	80141b2 <Ssd1306::Start()+0x42>
 8014192:	2101      	movs	r1, #1
 8014194:	f10d 0007 	add.w	r0, sp, #7
 8014198:	f001 fdc8 	bl	8015d2c <gd32_i2c_read>
 801419c:	fab0 f480 	clz	r4, r0
 80141a0:	0964      	lsrs	r4, r4, #5
 80141a2:	b34c      	cbz	r4, 80141f8 <Ssd1306::Start()+0x88>
 80141a4:	7e2e      	ldrb	r6, [r5, #24]
 80141a6:	b14e      	cbz	r6, 80141bc <Ssd1306::Start()+0x4c>
 80141a8:	3e01      	subs	r6, #1
 80141aa:	2e01      	cmp	r6, #1
 80141ac:	d927      	bls.n	80141fe <Ssd1306::Start()+0x8e>
 80141ae:	2400      	movs	r4, #0
 80141b0:	e022      	b.n	80141f8 <Ssd1306::Start()+0x88>
 80141b2:	2100      	movs	r1, #0
 80141b4:	4608      	mov	r0, r1
 80141b6:	f001 fd53 	bl	8015c60 <gd32_i2c_write>
 80141ba:	e7ef      	b.n	801419c <Ssd1306::Start()+0x2c>
 80141bc:	4f15      	ldr	r7, [pc, #84]	@ (8014214 <Ssd1306::Start()+0xa4>)
 80141be:	f817 1b01 	ldrb.w	r1, [r7], #1
 80141c2:	4628      	mov	r0, r5
 80141c4:	3601      	adds	r6, #1
 80141c6:	f7ff febf 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 80141ca:	2e18      	cmp	r6, #24
 80141cc:	d1f7      	bne.n	80141be <Ssd1306::Start()+0x4e>
 80141ce:	4a12      	ldr	r2, [pc, #72]	@ (8014218 <Ssd1306::Start()+0xa8>)
 80141d0:	2300      	movs	r3, #0
 80141d2:	4611      	mov	r1, r2
 80141d4:	4618      	mov	r0, r3
 80141d6:	3301      	adds	r3, #1
 80141d8:	2b86      	cmp	r3, #134	@ 0x86
 80141da:	f802 0b01 	strb.w	r0, [r2], #1
 80141de:	d1fa      	bne.n	80141d6 <Ssd1306::Start()+0x66>
 80141e0:	2340      	movs	r3, #64	@ 0x40
 80141e2:	4628      	mov	r0, r5
 80141e4:	700b      	strb	r3, [r1, #0]
 80141e6:	f7ff ff39 	bl	801405c <Ssd1306::CheckSH1106()>
 80141ea:	4628      	mov	r0, r5
 80141ec:	f7ff ff8a 	bl	8014104 <Ssd1306::Cls()>
 80141f0:	21af      	movs	r1, #175	@ 0xaf
 80141f2:	4628      	mov	r0, r5
 80141f4:	f7ff fea8 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 80141f8:	4620      	mov	r0, r4
 80141fa:	b003      	add	sp, #12
 80141fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80141fe:	4f07      	ldr	r7, [pc, #28]	@ (801421c <Ssd1306::Start()+0xac>)
 8014200:	2600      	movs	r6, #0
 8014202:	f817 1b01 	ldrb.w	r1, [r7], #1
 8014206:	4628      	mov	r0, r5
 8014208:	3601      	adds	r6, #1
 801420a:	f7ff fe9d 	bl	8013f48 <Ssd1306::SendCommand(unsigned char)>
 801420e:	2e18      	cmp	r6, #24
 8014210:	d1f7      	bne.n	8014202 <Ssd1306::Start()+0x92>
 8014212:	e7dc      	b.n	80141ce <Ssd1306::Start()+0x5e>
 8014214:	0801a68c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp, pc}
 8014218:	20009c1c 	andcs	r9, r0, ip, lsl ip
 801421c:	0801a674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, sp, pc}

08014220 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8014220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014224:	4d15      	ldr	r5, [pc, #84]	@ (801427c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8014226:	461e      	mov	r6, r3
 8014228:	4b15      	ldr	r3, [pc, #84]	@ (8014280 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801422a:	b086      	sub	sp, #24
 801422c:	6018      	str	r0, [r3, #0]
 801422e:	4604      	mov	r4, r0
 8014230:	4617      	mov	r7, r2
 8014232:	f105 0803 	add.w	r8, r5, #3
 8014236:	2203      	movs	r2, #3
 8014238:	4628      	mov	r0, r5
 801423a:	f002 face 	bl	80167da <memmove>
 801423e:	4639      	mov	r1, r7
 8014240:	220b      	movs	r2, #11
 8014242:	4640      	mov	r0, r8
 8014244:	f002 fac9 	bl	80167da <memmove>
 8014248:	f105 030e 	add.w	r3, r5, #14
 801424c:	4631      	mov	r1, r6
 801424e:	2208      	movs	r2, #8
 8014250:	4618      	mov	r0, r3
 8014252:	f002 fac2 	bl	80167da <memmove>
 8014256:	2308      	movs	r3, #8
 8014258:	e9cd 8303 	strd	r8, r3, [sp, #12]
 801425c:	230b      	movs	r3, #11
 801425e:	9302      	str	r3, [sp, #8]
 8014260:	4b08      	ldr	r3, [pc, #32]	@ (8014284 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8014262:	9005      	str	r0, [sp, #20]
 8014264:	e9cd 5300 	strd	r5, r3, [sp]
 8014268:	4a07      	ldr	r2, [pc, #28]	@ (8014288 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801426a:	4808      	ldr	r0, [pc, #32]	@ (801428c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 801426c:	2303      	movs	r3, #3
 801426e:	213f      	movs	r1, #63	@ 0x3f
 8014270:	f002 fdd6 	bl	8016e20 <snprintf>
 8014274:	4620      	mov	r0, r4
 8014276:	b006      	add	sp, #24
 8014278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801427c:	20009ce8 	andcs	r9, r0, r8, ror #25
 8014280:	20009ca4 	andcs	r9, r0, r4, lsr #25
 8014284:	0801785f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
 8014288:	08017e67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, fp, ip, sp, lr}
 801428c:	20009ca8 	andcs	r9, r0, r8, lsr #25

08014290 <Hardware::ledblink()>:
 8014290:	4b02      	ldr	r3, [pc, #8]	@ (801429c <Hardware::ledblink()+0xc>)
 8014292:	2210      	movs	r2, #16
 8014294:	f8c3 2c2c 	str.w	r2, [r3, #3116]	@ 0xc2c
 8014298:	4770      	bx	lr
 801429a:	bf00      	nop
 801429c:	40020000 	andmi	r0, r2, r0

080142a0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 80142a0:	2900      	cmp	r1, #0
 80142a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142a4:	db10      	blt.n	80142c8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80142a6:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 80142aa:	2300      	movs	r3, #0
 80142ac:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 80142b0:	42ab      	cmp	r3, r5
 80142b2:	d009      	beq.n	80142c8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80142b4:	011c      	lsls	r4, r3, #4
 80142b6:	5937      	ldr	r7, [r6, r4]
 80142b8:	42b9      	cmp	r1, r7
 80142ba:	d106      	bne.n	80142ca <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 80142bc:	4b04      	ldr	r3, [pc, #16]	@ (80142d0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 80142be:	681b      	ldr	r3, [r3, #0]
 80142c0:	4420      	add	r0, r4
 80142c2:	4413      	add	r3, r2
 80142c4:	e9c0 3208 	strd	r3, r2, [r0, #32]
 80142c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80142ca:	3301      	adds	r3, #1
 80142cc:	e7f0      	b.n	80142b0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 80142ce:	bf00      	nop
 80142d0:	200145c8 	andcs	r4, r1, r8, asr #11

080142d4 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>:
 80142d4:	680a      	ldr	r2, [r1, #0]
 80142d6:	2a00      	cmp	r2, #0
 80142d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142da:	4606      	mov	r6, r0
 80142dc:	468e      	mov	lr, r1
 80142de:	db17      	blt.n	8014310 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80142e0:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80142e4:	2400      	movs	r4, #0
 80142e6:	f100 0128 	add.w	r1, r0, #40	@ 0x28
 80142ea:	429c      	cmp	r4, r3
 80142ec:	d010      	beq.n	8014310 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80142ee:	0125      	lsls	r5, r4, #4
 80142f0:	5948      	ldr	r0, [r1, r5]
 80142f2:	4282      	cmp	r2, r0
 80142f4:	d116      	bne.n	8014324 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x50>
 80142f6:	4435      	add	r5, r6
 80142f8:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
 80142fc:	4564      	cmp	r4, ip
 80142fe:	f105 0510 	add.w	r5, r5, #16
 8014302:	d306      	bcc.n	8014312 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3e>
 8014304:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8014308:	f8c6 c0a0 	str.w	ip, [r6, #160]	@ 0xa0
 801430c:	f8ce 3000 	str.w	r3, [lr]
 8014310:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014312:	f105 0320 	add.w	r3, r5, #32
 8014316:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8014318:	f105 0710 	add.w	r7, r5, #16
 801431c:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8014320:	3401      	adds	r4, #1
 8014322:	e7eb      	b.n	80142fc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x28>
 8014324:	3401      	adds	r4, #1
 8014326:	e7e0      	b.n	80142ea <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x16>

08014328 <Hardware::SetFrequency(unsigned long)>:
 8014328:	460a      	mov	r2, r1
 801432a:	69c1      	ldr	r1, [r0, #28]
 801432c:	2900      	cmp	r1, #0
 801432e:	b538      	push	{r3, r4, r5, lr}
 8014330:	4604      	mov	r4, r0
 8014332:	da21      	bge.n	8014378 <Hardware::SetFrequency(unsigned long)+0x50>
 8014334:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8014338:	2b07      	cmp	r3, #7
 801433a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 801433e:	fbb1 f1f2 	udiv	r1, r1, r2
 8014342:	d906      	bls.n	8014352 <Hardware::SetFrequency(unsigned long)+0x2a>
 8014344:	4825      	ldr	r0, [pc, #148]	@ (80143dc <Hardware::SetFrequency(unsigned long)+0xb4>)
 8014346:	f000 fa9f 	bl	8014888 <console_error>
 801434a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 801434e:	61e2      	str	r2, [r4, #28]
 8014350:	bd38      	pop	{r3, r4, r5, pc}
 8014352:	4a23      	ldr	r2, [pc, #140]	@ (80143e0 <Hardware::SetFrequency(unsigned long)+0xb8>)
 8014354:	6810      	ldr	r0, [r2, #0]
 8014356:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 801435a:	1c55      	adds	r5, r2, #1
 801435c:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8014360:	4408      	add	r0, r1
 8014362:	1c5d      	adds	r5, r3, #1
 8014364:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8014368:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 801436c:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8014370:	491c      	ldr	r1, [pc, #112]	@ (80143e4 <Hardware::SetFrequency(unsigned long)+0xbc>)
 8014372:	629a      	str	r2, [r3, #40]	@ 0x28
 8014374:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8014376:	e7ea      	b.n	801434e <Hardware::SetFrequency(unsigned long)+0x26>
 8014378:	2a08      	cmp	r2, #8
 801437a:	d808      	bhi.n	801438e <Hardware::SetFrequency(unsigned long)+0x66>
 801437c:	2a08      	cmp	r2, #8
 801437e:	d808      	bhi.n	8014392 <Hardware::SetFrequency(unsigned long)+0x6a>
 8014380:	e8df f002 	tbb	[pc, r2]
 8014384:	1c07150c 	cfstr32ne	mvfx1, [r7], {12}
 8014388:	07071f07 	streq	r1, [r7, -r7, lsl #30]
 801438c:	2aff0021 	bcs	7fd4418 <__stack_size+0x7fcc418>
 8014390:	d01b      	beq.n	80143ca <Hardware::SetFrequency(unsigned long)+0xa2>
 8014392:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8014396:	fbb3 f2f2 	udiv	r2, r3, r2
 801439a:	e00a      	b.n	80143b2 <Hardware::SetFrequency(unsigned long)+0x8a>
 801439c:	f100 011c 	add.w	r1, r0, #28
 80143a0:	f7ff ff98 	bl	80142d4 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80143a4:	4b10      	ldr	r3, [pc, #64]	@ (80143e8 <Hardware::SetFrequency(unsigned long)+0xc0>)
 80143a6:	2210      	movs	r2, #16
 80143a8:	f8c3 2c28 	str.w	r2, [r3, #3112]	@ 0xc28
 80143ac:	e7d0      	b.n	8014350 <Hardware::SetFrequency(unsigned long)+0x28>
 80143ae:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80143b2:	4620      	mov	r0, r4
 80143b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80143b8:	f7ff bf72 	b.w	80142a0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80143bc:	f240 124d 	movw	r2, #333	@ 0x14d
 80143c0:	e7f7      	b.n	80143b2 <Hardware::SetFrequency(unsigned long)+0x8a>
 80143c2:	22c8      	movs	r2, #200	@ 0xc8
 80143c4:	e7f5      	b.n	80143b2 <Hardware::SetFrequency(unsigned long)+0x8a>
 80143c6:	227d      	movs	r2, #125	@ 0x7d
 80143c8:	e7f3      	b.n	80143b2 <Hardware::SetFrequency(unsigned long)+0x8a>
 80143ca:	f100 011c 	add.w	r1, r0, #28
 80143ce:	f7ff ff81 	bl	80142d4 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80143d2:	4b05      	ldr	r3, [pc, #20]	@ (80143e8 <Hardware::SetFrequency(unsigned long)+0xc0>)
 80143d4:	2210      	movs	r2, #16
 80143d6:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 80143da:	e7b9      	b.n	8014350 <Hardware::SetFrequency(unsigned long)+0x28>
 80143dc:	08017c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr}
 80143e0:	200145c8 	andcs	r4, r1, r8, asr #11
 80143e4:	08014291 	stmdaeq	r1, {r0, r4, r7, r9, lr}
 80143e8:	40020000 	andmi	r0, r2, r0

080143ec <Hardware::SetMode(hardware::ledblink::Mode)>:
 80143ec:	7e03      	ldrb	r3, [r0, #24]
 80143ee:	b510      	push	{r4, lr}
 80143f0:	4604      	mov	r4, r0
 80143f2:	b993      	cbnz	r3, 801441a <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80143f4:	6943      	ldr	r3, [r0, #20]
 80143f6:	428b      	cmp	r3, r1
 80143f8:	d00f      	beq.n	801441a <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80143fa:	6141      	str	r1, [r0, #20]
 80143fc:	3901      	subs	r1, #1
 80143fe:	2904      	cmp	r1, #4
 8014400:	d804      	bhi.n	801440c <Hardware::SetMode(hardware::ledblink::Mode)+0x20>
 8014402:	e8df f001 	tbb	[pc, r1]
 8014406:	110f0d0b 	tstne	pc, fp, lsl #26
 801440a:	21000013 	tstcs	r0, r3, lsl r0
 801440e:	4620      	mov	r0, r4
 8014410:	f7ff ff8a 	bl	8014328 <Hardware::SetFrequency(unsigned long)>
 8014414:	6960      	ldr	r0, [r4, #20]
 8014416:	f7f5 f901 	bl	800961c <hardware::ledblink::display(unsigned long)>
 801441a:	bd10      	pop	{r4, pc}
 801441c:	21ff      	movs	r1, #255	@ 0xff
 801441e:	e7f6      	b.n	801440e <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8014420:	2101      	movs	r1, #1
 8014422:	e7f4      	b.n	801440e <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8014424:	2103      	movs	r1, #3
 8014426:	e7f2      	b.n	801440e <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8014428:	2105      	movs	r1, #5
 801442a:	e7f0      	b.n	801440e <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 801442c:	2108      	movs	r1, #8
 801442e:	e7ee      	b.n	801440e <Hardware::SetMode(hardware::ledblink::Mode)+0x22>

08014430 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
 8014430:	b538      	push	{r3, r4, r5, lr}
 8014432:	4604      	mov	r4, r0
 8014434:	2300      	movs	r3, #0
 8014436:	4615      	mov	r5, r2
 8014438:	7603      	strb	r3, [r0, #24]
 801443a:	f7ff ffd7 	bl	80143ec <Hardware::SetMode(hardware::ledblink::Mode)>
 801443e:	7625      	strb	r5, [r4, #24]
 8014440:	bd38      	pop	{r3, r4, r5, pc}

08014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>:
 8014442:	b530      	push	{r4, r5, lr}
 8014444:	4603      	mov	r3, r0
 8014446:	4401      	add	r1, r0
 8014448:	250a      	movs	r5, #10
 801444a:	2000      	movs	r0, #0
 801444c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014450:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 8014454:	2c09      	cmp	r4, #9
 8014456:	d805      	bhi.n	8014464 <remoteconfig::timedate::atoi(char const*, unsigned long)+0x22>
 8014458:	fb05 2000 	mla	r0, r5, r0, r2
 801445c:	428b      	cmp	r3, r1
 801445e:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 8014462:	d1f3      	bne.n	801444c <remoteconfig::timedate::atoi(char const*, unsigned long)+0xa>
 8014464:	bd30      	pop	{r4, r5, pc}
	...

08014468 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
 8014468:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801446c:	b08a      	sub	sp, #40	@ 0x28
 801446e:	4605      	mov	r5, r0
 8014470:	460e      	mov	r6, r1
 8014472:	a808      	add	r0, sp, #32
 8014474:	2100      	movs	r1, #0
 8014476:	f002 fe6d 	bl	8017154 <gettimeofday>
 801447a:	2800      	cmp	r0, #0
 801447c:	db52      	blt.n	8014524 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xbc>
 801447e:	a808      	add	r0, sp, #32
 8014480:	f002 fdf0 	bl	8017064 <localtime>
 8014484:	4b28      	ldr	r3, [pc, #160]	@ (8014528 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc0>)
 8014486:	4604      	mov	r4, r0
 8014488:	6919      	ldr	r1, [r3, #16]
 801448a:	6827      	ldr	r7, [r4, #0]
 801448c:	6963      	ldr	r3, [r4, #20]
 801448e:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 8014492:	fb91 fcf2 	sdiv	ip, r1, r2
 8014496:	fa4f f08c 	sxtb.w	r0, ip
 801449a:	2800      	cmp	r0, #0
 801449c:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 80144a0:	dd21      	ble.n	80144e6 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x7e>
 80144a2:	f5a2 52e1 	sub.w	r2, r2, #7200	@ 0x1c20
 80144a6:	fb02 1100 	mla	r1, r2, r0, r1
 80144aa:	fbb1 f1fe 	udiv	r1, r1, lr
 80144ae:	b2ca      	uxtb	r2, r1
 80144b0:	e9d4 8e02 	ldrd	r8, lr, [r4, #8]
 80144b4:	6921      	ldr	r1, [r4, #16]
 80144b6:	6864      	ldr	r4, [r4, #4]
 80144b8:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 8014538 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xd0>
 80144bc:	9403      	str	r4, [sp, #12]
 80144be:	4c1b      	ldr	r4, [pc, #108]	@ (801452c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>)
 80144c0:	3101      	adds	r1, #1
 80144c2:	2800      	cmp	r0, #0
 80144c4:	bfd8      	it	le
 80144c6:	4664      	movle	r4, ip
 80144c8:	e9cd 0206 	strd	r0, r2, [sp, #24]
 80144cc:	9100      	str	r1, [sp, #0]
 80144ce:	e9cd 7404 	strd	r7, r4, [sp, #16]
 80144d2:	e9cd e801 	strd	lr, r8, [sp, #4]
 80144d6:	4a16      	ldr	r2, [pc, #88]	@ (8014530 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc8>)
 80144d8:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 80144dc:	4631      	mov	r1, r6
 80144de:	4628      	mov	r0, r5
 80144e0:	f002 fc9e 	bl	8016e20 <snprintf>
 80144e4:	e01b      	b.n	801451e <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 80144e6:	4342      	muls	r2, r0
 80144e8:	1a52      	subs	r2, r2, r1
 80144ea:	fbb2 f2fe 	udiv	r2, r2, lr
 80144ee:	b2d2      	uxtb	r2, r2
 80144f0:	ea42 0c0c 	orr.w	ip, r2, ip
 80144f4:	fa5f f18c 	uxtb.w	r1, ip
 80144f8:	2900      	cmp	r1, #0
 80144fa:	d1d9      	bne.n	80144b0 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x48>
 80144fc:	9704      	str	r7, [sp, #16]
 80144fe:	6862      	ldr	r2, [r4, #4]
 8014500:	9203      	str	r2, [sp, #12]
 8014502:	68a2      	ldr	r2, [r4, #8]
 8014504:	9202      	str	r2, [sp, #8]
 8014506:	68e2      	ldr	r2, [r4, #12]
 8014508:	9201      	str	r2, [sp, #4]
 801450a:	6922      	ldr	r2, [r4, #16]
 801450c:	3201      	adds	r2, #1
 801450e:	9200      	str	r2, [sp, #0]
 8014510:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 8014514:	4a07      	ldr	r2, [pc, #28]	@ (8014534 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xcc>)
 8014516:	4631      	mov	r1, r6
 8014518:	4628      	mov	r0, r5
 801451a:	f002 fc81 	bl	8016e20 <snprintf>
 801451e:	b00a      	add	sp, #40	@ 0x28
 8014520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014524:	2000      	movs	r0, #0
 8014526:	e7fa      	b.n	801451e <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 8014528:	40024000 	andmi	r4, r2, r0
 801452c:	08017e08 	stmdaeq	r1, {r3, r9, sl, fp, ip, sp, lr}
 8014530:	08017eb4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sl, fp, ip, sp, lr}
 8014534:	08017e8b 	stmdaeq	r1, {r0, r1, r3, r7, r9, sl, fp, ip, sp, lr}
 8014538:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}

0801453c <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
 801453c:	b570      	push	{r4, r5, r6, lr}
 801453e:	291a      	cmp	r1, #26
 8014540:	b08c      	sub	sp, #48	@ 0x30
 8014542:	4606      	mov	r6, r0
 8014544:	460c      	mov	r4, r1
 8014546:	d001      	beq.n	801454c <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10>
 8014548:	291f      	cmp	r1, #31
 801454a:	d174      	bne.n	8014636 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfa>
 801454c:	2104      	movs	r1, #4
 801454e:	1d70      	adds	r0, r6, #5
 8014550:	f7ff ff77 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014554:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 8014558:	9008      	str	r0, [sp, #32]
 801455a:	2102      	movs	r1, #2
 801455c:	f106 000a 	add.w	r0, r6, #10
 8014560:	f7ff ff6f 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014564:	3801      	subs	r0, #1
 8014566:	9007      	str	r0, [sp, #28]
 8014568:	2102      	movs	r1, #2
 801456a:	f106 000d 	add.w	r0, r6, #13
 801456e:	f7ff ff68 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014572:	2102      	movs	r1, #2
 8014574:	9006      	str	r0, [sp, #24]
 8014576:	f106 0010 	add.w	r0, r6, #16
 801457a:	f7ff ff62 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801457e:	2102      	movs	r1, #2
 8014580:	9005      	str	r0, [sp, #20]
 8014582:	f106 0013 	add.w	r0, r6, #19
 8014586:	f7ff ff5c 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801458a:	2102      	movs	r1, #2
 801458c:	9004      	str	r0, [sp, #16]
 801458e:	f106 0016 	add.w	r0, r6, #22
 8014592:	f7ff ff56 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8014596:	9003      	str	r0, [sp, #12]
 8014598:	a803      	add	r0, sp, #12
 801459a:	f002 fd73 	bl	8017084 <mktime>
 801459e:	2300      	movs	r3, #0
 80145a0:	2c1a      	cmp	r4, #26
 80145a2:	4605      	mov	r5, r0
 80145a4:	9001      	str	r0, [sp, #4]
 80145a6:	9302      	str	r3, [sp, #8]
 80145a8:	d041      	beq.n	801462e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xf2>
 80145aa:	7e33      	ldrb	r3, [r6, #24]
 80145ac:	2102      	movs	r1, #2
 80145ae:	2b2d      	cmp	r3, #45	@ 0x2d
 80145b0:	f106 0019 	add.w	r0, r6, #25
 80145b4:	bf14      	ite	ne
 80145b6:	2401      	movne	r4, #1
 80145b8:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
 80145bc:	f7ff ff41 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80145c0:	4344      	muls	r4, r0
 80145c2:	f004 04ff 	and.w	r4, r4, #255	@ 0xff
 80145c6:	f104 030c 	add.w	r3, r4, #12
 80145ca:	b2db      	uxtb	r3, r3
 80145cc:	2b1a      	cmp	r3, #26
 80145ce:	d82a      	bhi.n	8014626 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80145d0:	2102      	movs	r1, #2
 80145d2:	f106 001c 	add.w	r0, r6, #28
 80145d6:	f7ff ff34 	bl	8014442 <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80145da:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
 80145de:	b264      	sxtb	r4, r4
 80145e0:	d12b      	bne.n	801463a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfe>
 80145e2:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80145e6:	4363      	muls	r3, r4
 80145e8:	4a15      	ldr	r2, [pc, #84]	@ (8014640 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 80145ea:	6911      	ldr	r1, [r2, #16]
 80145ec:	4299      	cmp	r1, r3
 80145ee:	bf1f      	itttt	ne
 80145f0:	6113      	strne	r3, [r2, #16]
 80145f2:	4b14      	ldrne	r3, [pc, #80]	@ (8014644 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x108>)
 80145f4:	2201      	movne	r2, #1
 80145f6:	601a      	strne	r2, [r3, #0]
 80145f8:	e015      	b.n	8014626 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80145fa:	f993 1000 	ldrsb.w	r1, [r3]
 80145fe:	42a1      	cmp	r1, r4
 8014600:	d10e      	bne.n	8014620 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 8014602:	7859      	ldrb	r1, [r3, #1]
 8014604:	4281      	cmp	r1, r0
 8014606:	d10b      	bne.n	8014620 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 8014608:	2c00      	cmp	r4, #0
 801460a:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 801460e:	fb04 f303 	mul.w	r3, r4, r3
 8014612:	bfcc      	ite	gt
 8014614:	223c      	movgt	r2, #60	@ 0x3c
 8014616:	f06f 023b 	mvnle.w	r2, #59	@ 0x3b
 801461a:	fb02 3300 	mla	r3, r2, r0, r3
 801461e:	e7e3      	b.n	80145e8 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xac>
 8014620:	3302      	adds	r3, #2
 8014622:	3a01      	subs	r2, #1
 8014624:	d1e9      	bne.n	80145fa <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xbe>
 8014626:	4b06      	ldr	r3, [pc, #24]	@ (8014640 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 8014628:	691b      	ldr	r3, [r3, #16]
 801462a:	1aed      	subs	r5, r5, r3
 801462c:	9501      	str	r5, [sp, #4]
 801462e:	2100      	movs	r1, #0
 8014630:	a801      	add	r0, sp, #4
 8014632:	f002 fdc1 	bl	80171b8 <settimeofday>
 8014636:	b00c      	add	sp, #48	@ 0x30
 8014638:	bd70      	pop	{r4, r5, r6, pc}
 801463a:	4b03      	ldr	r3, [pc, #12]	@ (8014648 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10c>)
 801463c:	220c      	movs	r2, #12
 801463e:	e7f0      	b.n	8014622 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe6>
 8014640:	40024000 	andmi	r4, r2, r0
 8014644:	20009c0c 	andcs	r9, r0, ip, lsl #24
 8014648:	0801a490 	stmdaeq	r1, {r4, r7, sl, sp, pc}

0801464c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 801464c:	2900      	cmp	r1, #0
 801464e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014650:	db10      	blt.n	8014674 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8014652:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 8014656:	2300      	movs	r3, #0
 8014658:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 801465c:	42ab      	cmp	r3, r5
 801465e:	d009      	beq.n	8014674 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8014660:	011c      	lsls	r4, r3, #4
 8014662:	5937      	ldr	r7, [r6, r4]
 8014664:	42b9      	cmp	r1, r7
 8014666:	d106      	bne.n	8014676 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 8014668:	4b04      	ldr	r3, [pc, #16]	@ (801467c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 801466a:	681b      	ldr	r3, [r3, #0]
 801466c:	4420      	add	r0, r4
 801466e:	4413      	add	r3, r2
 8014670:	e9c0 3208 	strd	r3, r2, [r0, #32]
 8014674:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014676:	3301      	adds	r3, #1
 8014678:	e7f0      	b.n	801465c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 801467a:	bf00      	nop
 801467c:	200145c8 	andcs	r4, r1, r8, asr #11

08014680 <Hardware::Hardware()>:
 8014680:	b570      	push	{r4, r5, r6, lr}
 8014682:	2306      	movs	r3, #6
 8014684:	6143      	str	r3, [r0, #20]
 8014686:	2500      	movs	r5, #0
 8014688:	4b5c      	ldr	r3, [pc, #368]	@ (80147fc <Hardware::Hardware()+0x17c>)
 801468a:	7405      	strb	r5, [r0, #16]
 801468c:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8014690:	b090      	sub	sp, #64	@ 0x40
 8014692:	e9c0 5528 	strd	r5, r5, [r0, #160]	@ 0xa0
 8014696:	4604      	mov	r4, r0
 8014698:	7605      	strb	r5, [r0, #24]
 801469a:	61c6      	str	r6, [r0, #28]
 801469c:	6018      	str	r0, [r3, #0]
 801469e:	f7f3 ff7b 	bl	8008598 <console_init()>
 80146a2:	f001 f96b 	bl	801597c <timer6_config()>
 80146a6:	f001 f9cf 	bl	8015a48 <systick_config>
 80146aa:	f001 f9a1 	bl	80159f0 <udelay_init()>
 80146ae:	4620      	mov	r0, r4
 80146b0:	f002 fd34 	bl	801711c <hal::uuid_init(unsigned char*)>
 80146b4:	f001 f9ee 	bl	8015a94 <gd32_adc_init()>
 80146b8:	f001 fa78 	bl	8015bac <gd32_i2c_begin>
 80146bc:	f241 0004 	movw	r0, #4100	@ 0x1004
 80146c0:	f000 fe02 	bl	80152c8 <rcu_periph_clock_enable>
 80146c4:	484e      	ldr	r0, [pc, #312]	@ (8014800 <Hardware::Hardware()+0x180>)
 80146c6:	f000 febb 	bl	8015440 <timer_deinit>
 80146ca:	a803      	add	r0, sp, #12
 80146cc:	f000 ff5e 	bl	801558c <timer_struct_para_init>
 80146d0:	23ef      	movs	r3, #239	@ 0xef
 80146d2:	a903      	add	r1, sp, #12
 80146d4:	484a      	ldr	r0, [pc, #296]	@ (8014800 <Hardware::Hardware()+0x180>)
 80146d6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80146da:	9605      	str	r6, [sp, #20]
 80146dc:	f000 ff5e 	bl	801559c <timer_init>
 80146e0:	4847      	ldr	r0, [pc, #284]	@ (8014800 <Hardware::Hardware()+0x180>)
 80146e2:	f000 ff8f 	bl	8015604 <timer_enable>
 80146e6:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 80146ea:	f000 fe19 	bl	8015320 <rcu_timer_clock_prescaler_config>
 80146ee:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 80146f2:	f000 fde9 	bl	80152c8 <rcu_periph_clock_enable>
 80146f6:	f241 001c 	movw	r0, #4124	@ 0x101c
 80146fa:	f000 fde5 	bl	80152c8 <rcu_periph_clock_enable>
 80146fe:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8014702:	f000 fdcd 	bl	80152a0 <pmu_backup_ldo_config>
 8014706:	f640 4012 	movw	r0, #3090	@ 0xc12
 801470a:	f000 fddd 	bl	80152c8 <rcu_periph_clock_enable>
 801470e:	f000 fdd3 	bl	80152b8 <pmu_backup_write_enable>
 8014712:	4629      	mov	r1, r5
 8014714:	2001      	movs	r0, #1
 8014716:	f001 f8ef 	bl	80158f8 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 801471a:	4a3a      	ldr	r2, [pc, #232]	@ (8014804 <Hardware::Hardware()+0x184>)
 801471c:	4b3a      	ldr	r3, [pc, #232]	@ (8014808 <Hardware::Hardware()+0x188>)
 801471e:	1a9b      	subs	r3, r3, r2
 8014720:	3b01      	subs	r3, #1
 8014722:	d245      	bcs.n	80147b0 <Hardware::Hardware()+0x130>
 8014724:	4a39      	ldr	r2, [pc, #228]	@ (801480c <Hardware::Hardware()+0x18c>)
 8014726:	4b3a      	ldr	r3, [pc, #232]	@ (8014810 <Hardware::Hardware()+0x190>)
 8014728:	2100      	movs	r1, #0
 801472a:	1a9b      	subs	r3, r3, r2
 801472c:	3b01      	subs	r3, #1
 801472e:	d242      	bcs.n	80147b6 <Hardware::Hardware()+0x136>
 8014730:	4a38      	ldr	r2, [pc, #224]	@ (8014814 <Hardware::Hardware()+0x194>)
 8014732:	4b39      	ldr	r3, [pc, #228]	@ (8014818 <Hardware::Hardware()+0x198>)
 8014734:	2100      	movs	r1, #0
 8014736:	1a9b      	subs	r3, r3, r2
 8014738:	3b01      	subs	r3, #1
 801473a:	d23f      	bcs.n	80147bc <Hardware::Hardware()+0x13c>
 801473c:	ab07      	add	r3, sp, #28
 801473e:	2524      	movs	r5, #36	@ 0x24
 8014740:	4618      	mov	r0, r3
 8014742:	2200      	movs	r2, #0
 8014744:	3d01      	subs	r5, #1
 8014746:	f803 2b01 	strb.w	r2, [r3], #1
 801474a:	d1fb      	bne.n	8014744 <Hardware::Hardware()+0xc4>
 801474c:	2212      	movs	r2, #18
 801474e:	2308      	movs	r3, #8
 8014750:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 8014754:	237c      	movs	r3, #124	@ 0x7c
 8014756:	930c      	str	r3, [sp, #48]	@ 0x30
 8014758:	f002 fc94 	bl	8017084 <mktime>
 801475c:	4629      	mov	r1, r5
 801475e:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8014762:	a801      	add	r0, sp, #4
 8014764:	f002 fd28 	bl	80171b8 <settimeofday>
 8014768:	f640 4003 	movw	r0, #3075	@ 0xc03
 801476c:	f000 fdac 	bl	80152c8 <rcu_periph_clock_enable>
 8014770:	482a      	ldr	r0, [pc, #168]	@ (801481c <Hardware::Hardware()+0x19c>)
 8014772:	2310      	movs	r3, #16
 8014774:	462a      	mov	r2, r5
 8014776:	2101      	movs	r1, #1
 8014778:	f000 fd24 	bl	80151c4 <gpio_mode_set>
 801477c:	2310      	movs	r3, #16
 801477e:	2202      	movs	r2, #2
 8014780:	4629      	mov	r1, r5
 8014782:	4826      	ldr	r0, [pc, #152]	@ (801481c <Hardware::Hardware()+0x19c>)
 8014784:	f000 fd40 	bl	8015208 <gpio_output_options_set>
 8014788:	4b25      	ldr	r3, [pc, #148]	@ (8014820 <Hardware::Hardware()+0x1a0>)
 801478a:	2210      	movs	r2, #16
 801478c:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 8014790:	69e1      	ldr	r1, [r4, #28]
 8014792:	2900      	cmp	r1, #0
 8014794:	da2b      	bge.n	80147ee <Hardware::Hardware()+0x16e>
 8014796:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 801479a:	2b07      	cmp	r3, #7
 801479c:	d911      	bls.n	80147c2 <Hardware::Hardware()+0x142>
 801479e:	4821      	ldr	r0, [pc, #132]	@ (8014824 <Hardware::Hardware()+0x1a4>)
 80147a0:	f000 f872 	bl	8014888 <console_error>
 80147a4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80147a8:	61e2      	str	r2, [r4, #28]
 80147aa:	4620      	mov	r0, r4
 80147ac:	b010      	add	sp, #64	@ 0x40
 80147ae:	bd70      	pop	{r4, r5, r6, pc}
 80147b0:	f802 5b01 	strb.w	r5, [r2], #1
 80147b4:	e7b4      	b.n	8014720 <Hardware::Hardware()+0xa0>
 80147b6:	f802 1b01 	strb.w	r1, [r2], #1
 80147ba:	e7b7      	b.n	801472c <Hardware::Hardware()+0xac>
 80147bc:	f802 1b01 	strb.w	r1, [r2], #1
 80147c0:	e7ba      	b.n	8014738 <Hardware::Hardware()+0xb8>
 80147c2:	4a19      	ldr	r2, [pc, #100]	@ (8014828 <Hardware::Hardware()+0x1a8>)
 80147c4:	6811      	ldr	r1, [r2, #0]
 80147c6:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 80147ca:	1c50      	adds	r0, r2, #1
 80147cc:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
 80147d0:	1c58      	adds	r0, r3, #1
 80147d2:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 80147d6:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 80147da:	f8c4 00a0 	str.w	r0, [r4, #160]	@ 0xa0
 80147de:	6219      	str	r1, [r3, #32]
 80147e0:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80147e4:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80147e8:	4910      	ldr	r1, [pc, #64]	@ (801482c <Hardware::Hardware()+0x1ac>)
 80147ea:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80147ec:	e7dc      	b.n	80147a8 <Hardware::Hardware()+0x128>
 80147ee:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80147f2:	4620      	mov	r0, r4
 80147f4:	f7ff ff2a 	bl	801464c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80147f8:	e7d7      	b.n	80147aa <Hardware::Hardware()+0x12a>
 80147fa:	bf00      	nop
 80147fc:	20009d00 	andcs	r9, r0, r0, lsl #26
 8014800:	40001000 	andmi	r1, r0, r0
 8014804:	2001c000 	andcs	ip, r1, r0
 8014808:	2001c000 	andcs	ip, r1, r0
 801480c:	10008000 	andne	r8, r0, r0
 8014810:	1000cc90 	mulne	r0, r0, ip
 8014814:	20020000 	andcs	r0, r2, r0
 8014818:	20030000 	andcs	r0, r3, r0
 801481c:	40020c00 	andmi	r0, r2, r0, lsl #24
 8014820:	40020000 	andmi	r0, r2, r0
 8014824:	08017c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr}
 8014828:	200145c8 	andcs	r4, r1, r8, asr #11
 801482c:	08014291 	stmdaeq	r1, {r0, r4, r7, r9, lr}

08014830 <Hardware::Reboot()>:
 8014830:	4604      	mov	r4, r0
 8014832:	b508      	push	{r3, lr}
 8014834:	2500      	movs	r5, #0
 8014836:	480f      	ldr	r0, [pc, #60]	@ (8014874 <Hardware::Reboot()+0x44>)
 8014838:	f002 fb1f 	bl	8016e7a <puts>
 801483c:	2104      	movs	r1, #4
 801483e:	7425      	strb	r5, [r4, #16]
 8014840:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8014844:	f000 fc94 	bl	8015170 <fwdgt_config>
 8014848:	4620      	mov	r0, r4
 801484a:	f7f5 f835 	bl	80098b8 <Hardware::RebootHandler()>
 801484e:	f7fc fe03 	bl	8011458 <net::net_shutdown()>
 8014852:	4629      	mov	r1, r5
 8014854:	4620      	mov	r0, r4
 8014856:	f7ff fdc9 	bl	80143ec <Hardware::SetMode(hardware::ledblink::Mode)>
 801485a:	f3bf 8f4f 	dsb	sy
 801485e:	4906      	ldr	r1, [pc, #24]	@ (8014878 <Hardware::Reboot()+0x48>)
 8014860:	4b06      	ldr	r3, [pc, #24]	@ (801487c <Hardware::Reboot()+0x4c>)
 8014862:	68ca      	ldr	r2, [r1, #12]
 8014864:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8014868:	4313      	orrs	r3, r2
 801486a:	60cb      	str	r3, [r1, #12]
 801486c:	f3bf 8f4f 	dsb	sy
 8014870:	bf00      	nop
 8014872:	e7fd      	b.n	8014870 <Hardware::Reboot()+0x40>
 8014874:	08017762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip, sp, lr}
 8014878:	e000ed00 	and	lr, r0, r0, lsl #26
 801487c:	05fa0004 	ldrbeq	r0, [sl, #4]!

08014880 <console_putc>:
 8014880:	f001 bb0a 	b.w	8015e98 <uart0_putc>

08014884 <console_puts>:
 8014884:	f001 bb22 	b.w	8015ecc <uart0_puts>

08014888 <console_error>:
 8014888:	b510      	push	{r4, lr}
 801488a:	4604      	mov	r4, r0
 801488c:	4805      	ldr	r0, [pc, #20]	@ (80148a4 <console_error+0x1c>)
 801488e:	f001 fb1d 	bl	8015ecc <uart0_puts>
 8014892:	4620      	mov	r0, r4
 8014894:	f001 fb1a 	bl	8015ecc <uart0_puts>
 8014898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801489c:	4802      	ldr	r0, [pc, #8]	@ (80148a8 <console_error+0x20>)
 801489e:	f001 bb15 	b.w	8015ecc <uart0_puts>
 80148a2:	bf00      	nop
 80148a4:	08017ee7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148a8:	08017eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}

080148ac <console_set_fg_color>:
 80148ac:	2807      	cmp	r0, #7
 80148ae:	d810      	bhi.n	80148d2 <console_set_fg_color+0x26>
 80148b0:	e8df f000 	tbb	[pc, r0]
 80148b4:	0b090704 	bleq	82564cc <_sidata+0x23bb58>
 80148b8:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	@ 8014884 <console_puts>
 80148bc:	4806      	ldr	r0, [pc, #24]	@ (80148d8 <console_set_fg_color+0x2c>)
 80148be:	f001 bb05 	b.w	8015ecc <uart0_puts>
 80148c2:	4806      	ldr	r0, [pc, #24]	@ (80148dc <console_set_fg_color+0x30>)
 80148c4:	e7fb      	b.n	80148be <console_set_fg_color+0x12>
 80148c6:	4806      	ldr	r0, [pc, #24]	@ (80148e0 <console_set_fg_color+0x34>)
 80148c8:	e7f9      	b.n	80148be <console_set_fg_color+0x12>
 80148ca:	4806      	ldr	r0, [pc, #24]	@ (80148e4 <console_set_fg_color+0x38>)
 80148cc:	e7f7      	b.n	80148be <console_set_fg_color+0x12>
 80148ce:	4806      	ldr	r0, [pc, #24]	@ (80148e8 <console_set_fg_color+0x3c>)
 80148d0:	e7f5      	b.n	80148be <console_set_fg_color+0x12>
 80148d2:	4806      	ldr	r0, [pc, #24]	@ (80148ec <console_set_fg_color+0x40>)
 80148d4:	e7f3      	b.n	80148be <console_set_fg_color+0x12>
 80148d6:	bf00      	nop
 80148d8:	08017ef3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148dc:	08017ee7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148e0:	08017ef9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148e4:	08017eff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148e8:	08017eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 80148ec:	08017f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip, sp, lr}

080148f0 <console_status>:
 80148f0:	b510      	push	{r4, lr}
 80148f2:	b280      	uxth	r0, r0
 80148f4:	460c      	mov	r4, r1
 80148f6:	f7ff ffd9 	bl	80148ac <console_set_fg_color>
 80148fa:	4807      	ldr	r0, [pc, #28]	@ (8014918 <console_status+0x28>)
 80148fc:	f001 fae6 	bl	8015ecc <uart0_puts>
 8014900:	4620      	mov	r0, r4
 8014902:	f001 fae3 	bl	8015ecc <uart0_puts>
 8014906:	200a      	movs	r0, #10
 8014908:	f001 fac6 	bl	8015e98 <uart0_putc>
 801490c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014910:	4802      	ldr	r0, [pc, #8]	@ (801491c <console_status+0x2c>)
 8014912:	f001 badb 	b.w	8015ecc <uart0_puts>
 8014916:	bf00      	nop
 8014918:	08017f0b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, fp, ip, sp, lr}
 801491c:	08017eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}

08014920 <SystemInit>:
 8014920:	4a56      	ldr	r2, [pc, #344]	@ (8014a7c <SystemInit+0x15c>)
 8014922:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8014926:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 801492a:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 801492e:	4b54      	ldr	r3, [pc, #336]	@ (8014a80 <SystemInit+0x160>)
 8014930:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014934:	f042 0201 	orr.w	r2, r2, #1
 8014938:	b082      	sub	sp, #8
 801493a:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 801493e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014942:	0790      	lsls	r0, r2, #30
 8014944:	d5fb      	bpl.n	801493e <SystemInit+0x1e>
 8014946:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 801494a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801494e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014952:	2300      	movs	r3, #0
 8014954:	9301      	str	r3, [sp, #4]
 8014956:	9b01      	ldr	r3, [sp, #4]
 8014958:	2b4f      	cmp	r3, #79	@ 0x4f
 801495a:	d93d      	bls.n	80149d8 <SystemInit+0xb8>
 801495c:	4b48      	ldr	r3, [pc, #288]	@ (8014a80 <SystemInit+0x160>)
 801495e:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8014962:	f042 0290 	orr.w	r2, r2, #144	@ 0x90
 8014966:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 801496a:	2200      	movs	r2, #0
 801496c:	9201      	str	r2, [sp, #4]
 801496e:	9a01      	ldr	r2, [sp, #4]
 8014970:	2a4f      	cmp	r2, #79	@ 0x4f
 8014972:	d934      	bls.n	80149de <SystemInit+0xbe>
 8014974:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8014978:	f022 0203 	bic.w	r2, r2, #3
 801497c:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014980:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014984:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8014988:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 801498c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8014990:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8014994:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8014998:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 801499c:	2200      	movs	r2, #0
 801499e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 80149a2:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 80149a6:	4937      	ldr	r1, [pc, #220]	@ (8014a84 <SystemInit+0x164>)
 80149a8:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 80149ac:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 80149b0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80149b4:	f042 0201 	orr.w	r2, r2, #1
 80149b8:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 80149bc:	4b30      	ldr	r3, [pc, #192]	@ (8014a80 <SystemInit+0x160>)
 80149be:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 80149c2:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 80149c6:	0789      	lsls	r1, r1, #30
 80149c8:	d401      	bmi.n	80149ce <SystemInit+0xae>
 80149ca:	3a01      	subs	r2, #1
 80149cc:	d1f9      	bne.n	80149c2 <SystemInit+0xa2>
 80149ce:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80149d2:	0792      	lsls	r2, r2, #30
 80149d4:	d406      	bmi.n	80149e4 <SystemInit+0xc4>
 80149d6:	e7fe      	b.n	80149d6 <SystemInit+0xb6>
 80149d8:	9b01      	ldr	r3, [sp, #4]
 80149da:	3301      	adds	r3, #1
 80149dc:	e7ba      	b.n	8014954 <SystemInit+0x34>
 80149de:	9a01      	ldr	r2, [sp, #4]
 80149e0:	3201      	adds	r2, #1
 80149e2:	e7c3      	b.n	801496c <SystemInit+0x4c>
 80149e4:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 80149e8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80149ec:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 80149f0:	4a25      	ldr	r2, [pc, #148]	@ (8014a88 <SystemInit+0x168>)
 80149f2:	6811      	ldr	r1, [r2, #0]
 80149f4:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 80149f8:	6011      	str	r1, [r2, #0]
 80149fa:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 80149fe:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8014a02:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8014a06:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8014a0a:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8014a0e:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8014a12:	f441 51a0 	orr.w	r1, r1, #5120	@ 0x1400
 8014a16:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8014a1a:	491c      	ldr	r1, [pc, #112]	@ (8014a8c <SystemInit+0x16c>)
 8014a1c:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8014a20:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 8014a24:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 8014a28:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
 8014a2c:	4914      	ldr	r1, [pc, #80]	@ (8014a80 <SystemInit+0x160>)
 8014a2e:	f8d1 3800 	ldr.w	r3, [r1, #2048]	@ 0x800
 8014a32:	019b      	lsls	r3, r3, #6
 8014a34:	d5fb      	bpl.n	8014a2e <SystemInit+0x10e>
 8014a36:	6813      	ldr	r3, [r2, #0]
 8014a38:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8014a3c:	6013      	str	r3, [r2, #0]
 8014a3e:	4b12      	ldr	r3, [pc, #72]	@ (8014a88 <SystemInit+0x168>)
 8014a40:	685a      	ldr	r2, [r3, #4]
 8014a42:	03d0      	lsls	r0, r2, #15
 8014a44:	d5fc      	bpl.n	8014a40 <SystemInit+0x120>
 8014a46:	681a      	ldr	r2, [r3, #0]
 8014a48:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8014a4c:	601a      	str	r2, [r3, #0]
 8014a4e:	685a      	ldr	r2, [r3, #4]
 8014a50:	0391      	lsls	r1, r2, #14
 8014a52:	d5fc      	bpl.n	8014a4e <SystemInit+0x12e>
 8014a54:	4b0a      	ldr	r3, [pc, #40]	@ (8014a80 <SystemInit+0x160>)
 8014a56:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8014a5a:	f022 0203 	bic.w	r2, r2, #3
 8014a5e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014a62:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8014a66:	f042 0202 	orr.w	r2, r2, #2
 8014a6a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8014a6e:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8014a72:	0712      	lsls	r2, r2, #28
 8014a74:	d5fb      	bpl.n	8014a6e <SystemInit+0x14e>
 8014a76:	b002      	add	sp, #8
 8014a78:	4770      	bx	lr
 8014a7a:	bf00      	nop
 8014a7c:	e000ed00 	and	lr, r0, r0, lsl #26
 8014a80:	40023000 	andmi	r3, r2, r0
 8014a84:	24003010 	strcs	r3, [r0], #-16
 8014a88:	40007000 	andmi	r7, r0, r0
 8014a8c:	0a007810 	beq	8032ad4 <_sidata+0x18160>

08014a90 <dma_deinit>:
 8014a90:	2318      	movs	r3, #24
 8014a92:	fb03 0301 	mla	r3, r3, r1, r0
 8014a96:	b510      	push	{r4, lr}
 8014a98:	691a      	ldr	r2, [r3, #16]
 8014a9a:	f022 0201 	bic.w	r2, r2, #1
 8014a9e:	611a      	str	r2, [r3, #16]
 8014aa0:	2200      	movs	r2, #0
 8014aa2:	611a      	str	r2, [r3, #16]
 8014aa4:	2903      	cmp	r1, #3
 8014aa6:	615a      	str	r2, [r3, #20]
 8014aa8:	619a      	str	r2, [r3, #24]
 8014aaa:	61da      	str	r2, [r3, #28]
 8014aac:	621a      	str	r2, [r3, #32]
 8014aae:	f04f 0221 	mov.w	r2, #33	@ 0x21
 8014ab2:	625a      	str	r2, [r3, #36]	@ 0x24
 8014ab4:	d80a      	bhi.n	8014acc <dma_deinit+0x3c>
 8014ab6:	2406      	movs	r4, #6
 8014ab8:	084b      	lsrs	r3, r1, #1
 8014aba:	4361      	muls	r1, r4
 8014abc:	6882      	ldr	r2, [r0, #8]
 8014abe:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014ac2:	233d      	movs	r3, #61	@ 0x3d
 8014ac4:	408b      	lsls	r3, r1
 8014ac6:	4313      	orrs	r3, r2
 8014ac8:	6083      	str	r3, [r0, #8]
 8014aca:	bd10      	pop	{r4, pc}
 8014acc:	3904      	subs	r1, #4
 8014ace:	b2ca      	uxtb	r2, r1
 8014ad0:	2306      	movs	r3, #6
 8014ad2:	435a      	muls	r2, r3
 8014ad4:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8014ad8:	68c4      	ldr	r4, [r0, #12]
 8014ada:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8014ade:	233d      	movs	r3, #61	@ 0x3d
 8014ae0:	4093      	lsls	r3, r2
 8014ae2:	4323      	orrs	r3, r4
 8014ae4:	60c3      	str	r3, [r0, #12]
 8014ae6:	e7f0      	b.n	8014aca <dma_deinit+0x3a>

08014ae8 <dma_single_data_para_struct_init>:
 8014ae8:	2300      	movs	r3, #0
 8014aea:	2201      	movs	r2, #1
 8014aec:	e9c0 3200 	strd	r3, r2, [r0]
 8014af0:	e9c0 3202 	strd	r3, r2, [r0, #8]
 8014af4:	e9c0 3204 	strd	r3, r2, [r0, #16]
 8014af8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8014afc:	6203      	str	r3, [r0, #32]
 8014afe:	4770      	bx	lr

08014b00 <dma_single_data_mode_init>:
 8014b00:	2318      	movs	r3, #24
 8014b02:	fb03 0101 	mla	r1, r3, r1, r0
 8014b06:	b530      	push	{r4, r5, lr}
 8014b08:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8014b0a:	f023 0304 	bic.w	r3, r3, #4
 8014b0e:	624b      	str	r3, [r1, #36]	@ 0x24
 8014b10:	6813      	ldr	r3, [r2, #0]
 8014b12:	618b      	str	r3, [r1, #24]
 8014b14:	6893      	ldr	r3, [r2, #8]
 8014b16:	61cb      	str	r3, [r1, #28]
 8014b18:	69d3      	ldr	r3, [r2, #28]
 8014b1a:	614b      	str	r3, [r1, #20]
 8014b1c:	6914      	ldr	r4, [r2, #16]
 8014b1e:	6a13      	ldr	r3, [r2, #32]
 8014b20:	6908      	ldr	r0, [r1, #16]
 8014b22:	6995      	ldr	r5, [r2, #24]
 8014b24:	4323      	orrs	r3, r4
 8014b26:	f420 305e 	bic.w	r0, r0, #227328	@ 0x37800
 8014b2a:	432b      	orrs	r3, r5
 8014b2c:	f020 00c0 	bic.w	r0, r0, #192	@ 0xc0
 8014b30:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 8014b34:	4303      	orrs	r3, r0
 8014b36:	610b      	str	r3, [r1, #16]
 8014b38:	6853      	ldr	r3, [r2, #4]
 8014b3a:	b983      	cbnz	r3, 8014b5e <dma_single_data_mode_init+0x5e>
 8014b3c:	690b      	ldr	r3, [r1, #16]
 8014b3e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8014b42:	610b      	str	r3, [r1, #16]
 8014b44:	68d3      	ldr	r3, [r2, #12]
 8014b46:	b993      	cbnz	r3, 8014b6e <dma_single_data_mode_init+0x6e>
 8014b48:	690b      	ldr	r3, [r1, #16]
 8014b4a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8014b4e:	610b      	str	r3, [r1, #16]
 8014b50:	6953      	ldr	r3, [r2, #20]
 8014b52:	b983      	cbnz	r3, 8014b76 <dma_single_data_mode_init+0x76>
 8014b54:	690b      	ldr	r3, [r1, #16]
 8014b56:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8014b5a:	610b      	str	r3, [r1, #16]
 8014b5c:	bd30      	pop	{r4, r5, pc}
 8014b5e:	2b01      	cmp	r3, #1
 8014b60:	690b      	ldr	r3, [r1, #16]
 8014b62:	bf0c      	ite	eq
 8014b64:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 8014b68:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 8014b6c:	e7e9      	b.n	8014b42 <dma_single_data_mode_init+0x42>
 8014b6e:	690b      	ldr	r3, [r1, #16]
 8014b70:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8014b74:	e7eb      	b.n	8014b4e <dma_single_data_mode_init+0x4e>
 8014b76:	690b      	ldr	r3, [r1, #16]
 8014b78:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8014b7c:	e7ed      	b.n	8014b5a <dma_single_data_mode_init+0x5a>
	...

08014b80 <dma_multi_data_mode_init>:
 8014b80:	2318      	movs	r3, #24
 8014b82:	fb03 0101 	mla	r1, r3, r1, r0
 8014b86:	6a10      	ldr	r0, [r2, #32]
 8014b88:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8014b8a:	4303      	orrs	r3, r0
 8014b8c:	f043 0304 	orr.w	r3, r3, #4
 8014b90:	b510      	push	{r4, lr}
 8014b92:	624b      	str	r3, [r1, #36]	@ 0x24
 8014b94:	6813      	ldr	r3, [r2, #0]
 8014b96:	618b      	str	r3, [r1, #24]
 8014b98:	68d3      	ldr	r3, [r2, #12]
 8014b9a:	61cb      	str	r3, [r1, #28]
 8014b9c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 8014b9e:	614b      	str	r3, [r1, #20]
 8014ba0:	690b      	ldr	r3, [r1, #16]
 8014ba2:	4819      	ldr	r0, [pc, #100]	@ (8014c08 <dma_multi_data_mode_init+0x88>)
 8014ba4:	6914      	ldr	r4, [r2, #16]
 8014ba6:	4018      	ands	r0, r3
 8014ba8:	6853      	ldr	r3, [r2, #4]
 8014baa:	4323      	orrs	r3, r4
 8014bac:	6b14      	ldr	r4, [r2, #48]	@ 0x30
 8014bae:	4323      	orrs	r3, r4
 8014bb0:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8014bb2:	4323      	orrs	r3, r4
 8014bb4:	6994      	ldr	r4, [r2, #24]
 8014bb6:	4323      	orrs	r3, r4
 8014bb8:	69d4      	ldr	r4, [r2, #28]
 8014bba:	4323      	orrs	r3, r4
 8014bbc:	4303      	orrs	r3, r0
 8014bbe:	610b      	str	r3, [r1, #16]
 8014bc0:	6893      	ldr	r3, [r2, #8]
 8014bc2:	b983      	cbnz	r3, 8014be6 <dma_multi_data_mode_init+0x66>
 8014bc4:	690b      	ldr	r3, [r1, #16]
 8014bc6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8014bca:	610b      	str	r3, [r1, #16]
 8014bcc:	6953      	ldr	r3, [r2, #20]
 8014bce:	b993      	cbnz	r3, 8014bf6 <dma_multi_data_mode_init+0x76>
 8014bd0:	690b      	ldr	r3, [r1, #16]
 8014bd2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8014bd6:	610b      	str	r3, [r1, #16]
 8014bd8:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8014bda:	b983      	cbnz	r3, 8014bfe <dma_multi_data_mode_init+0x7e>
 8014bdc:	690b      	ldr	r3, [r1, #16]
 8014bde:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8014be2:	610b      	str	r3, [r1, #16]
 8014be4:	bd10      	pop	{r4, pc}
 8014be6:	2b01      	cmp	r3, #1
 8014be8:	690b      	ldr	r3, [r1, #16]
 8014bea:	bf0c      	ite	eq
 8014bec:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 8014bf0:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 8014bf4:	e7e9      	b.n	8014bca <dma_multi_data_mode_init+0x4a>
 8014bf6:	690b      	ldr	r3, [r1, #16]
 8014bf8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8014bfc:	e7eb      	b.n	8014bd6 <dma_multi_data_mode_init+0x56>
 8014bfe:	690b      	ldr	r3, [r1, #16]
 8014c00:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8014c04:	e7ed      	b.n	8014be2 <dma_multi_data_mode_init+0x62>
 8014c06:	bf00      	nop
 8014c08:	fe1c873f 	mrc2	7, 0, r8, cr12, cr15, {1}

08014c0c <dma_circulation_disable>:
 8014c0c:	2318      	movs	r3, #24
 8014c0e:	4359      	muls	r1, r3
 8014c10:	3010      	adds	r0, #16
 8014c12:	580b      	ldr	r3, [r1, r0]
 8014c14:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8014c18:	500b      	str	r3, [r1, r0]
 8014c1a:	4770      	bx	lr

08014c1c <dma_channel_subperipheral_select>:
 8014c1c:	2318      	movs	r3, #24
 8014c1e:	4359      	muls	r1, r3
 8014c20:	3010      	adds	r0, #16
 8014c22:	580b      	ldr	r3, [r1, r0]
 8014c24:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8014c28:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8014c2c:	500b      	str	r3, [r1, r0]
 8014c2e:	4770      	bx	lr

08014c30 <dma_flag_clear>:
 8014c30:	2903      	cmp	r1, #3
 8014c32:	b530      	push	{r4, r5, lr}
 8014c34:	d80a      	bhi.n	8014c4c <dma_flag_clear+0x1c>
 8014c36:	2506      	movs	r5, #6
 8014c38:	084c      	lsrs	r4, r1, #1
 8014c3a:	4369      	muls	r1, r5
 8014c3c:	6883      	ldr	r3, [r0, #8]
 8014c3e:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8014c42:	fa02 f101 	lsl.w	r1, r2, r1
 8014c46:	4319      	orrs	r1, r3
 8014c48:	6081      	str	r1, [r0, #8]
 8014c4a:	bd30      	pop	{r4, r5, pc}
 8014c4c:	3904      	subs	r1, #4
 8014c4e:	b2cb      	uxtb	r3, r1
 8014c50:	2506      	movs	r5, #6
 8014c52:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8014c56:	436b      	muls	r3, r5
 8014c58:	68c4      	ldr	r4, [r0, #12]
 8014c5a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8014c5e:	409a      	lsls	r2, r3
 8014c60:	4322      	orrs	r2, r4
 8014c62:	60c2      	str	r2, [r0, #12]
 8014c64:	e7f1      	b.n	8014c4a <dma_flag_clear+0x1a>

08014c66 <dma_interrupt_flag_clear>:
 8014c66:	f7ff bfe3 	b.w	8014c30 <dma_flag_clear>
	...

08014c6c <enet_software_reset>:
 8014c6c:	4b07      	ldr	r3, [pc, #28]	@ (8014c8c <enet_software_reset+0x20>)
 8014c6e:	681a      	ldr	r2, [r3, #0]
 8014c70:	f042 0201 	orr.w	r2, r2, #1
 8014c74:	601a      	str	r2, [r3, #0]
 8014c76:	4a06      	ldr	r2, [pc, #24]	@ (8014c90 <enet_software_reset+0x24>)
 8014c78:	6819      	ldr	r1, [r3, #0]
 8014c7a:	07c9      	lsls	r1, r1, #31
 8014c7c:	d501      	bpl.n	8014c82 <enet_software_reset+0x16>
 8014c7e:	3a01      	subs	r2, #1
 8014c80:	d1fa      	bne.n	8014c78 <enet_software_reset+0xc>
 8014c82:	6818      	ldr	r0, [r3, #0]
 8014c84:	43c0      	mvns	r0, r0
 8014c86:	f000 0001 	and.w	r0, r0, #1
 8014c8a:	4770      	bx	lr
 8014c8c:	40029000 	andmi	r9, r2, r0
 8014c90:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08014c94 <enet_descriptors_chain_init>:
 8014c94:	f5b0 0fe0 	cmp.w	r0, #7340032	@ 0x700000
 8014c98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c9a:	4a19      	ldr	r2, [pc, #100]	@ (8014d00 <enet_descriptors_chain_init+0x6c>)
 8014c9c:	d125      	bne.n	8014cea <enet_descriptors_chain_init+0x56>
 8014c9e:	4b19      	ldr	r3, [pc, #100]	@ (8014d04 <enet_descriptors_chain_init+0x70>)
 8014ca0:	6113      	str	r3, [r2, #16]
 8014ca2:	4a19      	ldr	r2, [pc, #100]	@ (8014d08 <enet_descriptors_chain_init+0x74>)
 8014ca4:	4c19      	ldr	r4, [pc, #100]	@ (8014d0c <enet_descriptors_chain_init+0x78>)
 8014ca6:	6013      	str	r3, [r2, #0]
 8014ca8:	2500      	movs	r5, #0
 8014caa:	f44f 1680 	mov.w	r6, #1048576	@ 0x100000
 8014cae:	2002      	movs	r0, #2
 8014cb0:	4917      	ldr	r1, [pc, #92]	@ (8014d10 <enet_descriptors_chain_init+0x7c>)
 8014cb2:	2200      	movs	r2, #0
 8014cb4:	600a      	str	r2, [r1, #0]
 8014cb6:	4917      	ldr	r1, [pc, #92]	@ (8014d14 <enet_descriptors_chain_init+0x80>)
 8014cb8:	f240 5ef4 	movw	lr, #1524	@ 0x5f4
 8014cbc:	600a      	str	r2, [r1, #0]
 8014cbe:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8014cc2:	f103 0110 	add.w	r1, r3, #16
 8014cc6:	fb0e 4702 	mla	r7, lr, r2, r4
 8014cca:	f841 7c08 	str.w	r7, [r1, #-8]
 8014cce:	4594      	cmp	ip, r2
 8014cd0:	bf94      	ite	ls
 8014cd2:	461f      	movls	r7, r3
 8014cd4:	460f      	movhi	r7, r1
 8014cd6:	3201      	adds	r2, #1
 8014cd8:	4290      	cmp	r0, r2
 8014cda:	e941 6504 	strd	r6, r5, [r1, #-16]
 8014cde:	f841 7c04 	str.w	r7, [r1, #-4]
 8014ce2:	f101 0110 	add.w	r1, r1, #16
 8014ce6:	d1ee      	bne.n	8014cc6 <enet_descriptors_chain_init+0x32>
 8014ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014cea:	4b0b      	ldr	r3, [pc, #44]	@ (8014d18 <enet_descriptors_chain_init+0x84>)
 8014cec:	60d3      	str	r3, [r2, #12]
 8014cee:	4a0b      	ldr	r2, [pc, #44]	@ (8014d1c <enet_descriptors_chain_init+0x88>)
 8014cf0:	4c0b      	ldr	r4, [pc, #44]	@ (8014d20 <enet_descriptors_chain_init+0x8c>)
 8014cf2:	6013      	str	r3, [r2, #0]
 8014cf4:	f244 55f4 	movw	r5, #17908	@ 0x45f4
 8014cf8:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 8014cfc:	201a      	movs	r0, #26
 8014cfe:	e7d7      	b.n	8014cb0 <enet_descriptors_chain_init+0x1c>
 8014d00:	40029000 	andmi	r9, r2, r0
 8014d04:	20014400 	andcs	r4, r1, r0, lsl #8
 8014d08:	20009d4c 	andcs	r9, r0, ip, asr #26
 8014d0c:	20009d50 	andcs	r9, r0, r0, asr sp
 8014d10:	20009d40 	andcs	r9, r0, r0, asr #26
 8014d14:	20009d44 	andcs	r9, r0, r4, asr #26
 8014d18:	20014420 	andcs	r4, r1, r0, lsr #8
 8014d1c:	20009d48 	andcs	r9, r0, r8, asr #26
 8014d20:	2000a938 	andcs	sl, r0, r8, lsr r9

08014d24 <enet_transmit_checksum_config>:
 8014d24:	6803      	ldr	r3, [r0, #0]
 8014d26:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8014d2a:	430b      	orrs	r3, r1
 8014d2c:	6003      	str	r3, [r0, #0]
 8014d2e:	4770      	bx	lr

08014d30 <enet_mac_address_set>:
 8014d30:	4b03      	ldr	r3, [pc, #12]	@ (8014d40 <enet_mac_address_set+0x10>)
 8014d32:	888a      	ldrh	r2, [r1, #4]
 8014d34:	50c2      	str	r2, [r0, r3]
 8014d36:	3304      	adds	r3, #4
 8014d38:	680a      	ldr	r2, [r1, #0]
 8014d3a:	50c2      	str	r2, [r0, r3]
 8014d3c:	4770      	bx	lr
 8014d3e:	bf00      	nop
 8014d40:	40028040 	andmi	r8, r2, r0, asr #32

08014d44 <enet_rx_enable>:
 8014d44:	4a05      	ldr	r2, [pc, #20]	@ (8014d5c <enet_rx_enable+0x18>)
 8014d46:	6813      	ldr	r3, [r2, #0]
 8014d48:	f043 0304 	orr.w	r3, r3, #4
 8014d4c:	6013      	str	r3, [r2, #0]
 8014d4e:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8014d52:	6993      	ldr	r3, [r2, #24]
 8014d54:	f043 0302 	orr.w	r3, r3, #2
 8014d58:	6193      	str	r3, [r2, #24]
 8014d5a:	4770      	bx	lr
 8014d5c:	40028000 	andmi	r8, r2, r0

08014d60 <enet_phy_write_read>:
 8014d60:	b530      	push	{r4, r5, lr}
 8014d62:	4d12      	ldr	r5, [pc, #72]	@ (8014dac <enet_phy_write_read+0x4c>)
 8014d64:	4604      	mov	r4, r0
 8014d66:	6928      	ldr	r0, [r5, #16]
 8014d68:	0192      	lsls	r2, r2, #6
 8014d6a:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8014d6e:	f402 62f8 	and.w	r2, r2, #1984	@ 0x7c0
 8014d72:	f020 00c3 	bic.w	r0, r0, #195	@ 0xc3
 8014d76:	4302      	orrs	r2, r0
 8014d78:	02c9      	lsls	r1, r1, #11
 8014d7a:	b289      	uxth	r1, r1
 8014d7c:	4322      	orrs	r2, r4
 8014d7e:	430a      	orrs	r2, r1
 8014d80:	2c02      	cmp	r4, #2
 8014d82:	bf04      	itt	eq
 8014d84:	8819      	ldrheq	r1, [r3, #0]
 8014d86:	6169      	streq	r1, [r5, #20]
 8014d88:	f042 0201 	orr.w	r2, r2, #1
 8014d8c:	612a      	str	r2, [r5, #16]
 8014d8e:	4907      	ldr	r1, [pc, #28]	@ (8014dac <enet_phy_write_read+0x4c>)
 8014d90:	4a07      	ldr	r2, [pc, #28]	@ (8014db0 <enet_phy_write_read+0x50>)
 8014d92:	6908      	ldr	r0, [r1, #16]
 8014d94:	07c0      	lsls	r0, r0, #31
 8014d96:	d501      	bpl.n	8014d9c <enet_phy_write_read+0x3c>
 8014d98:	3a01      	subs	r2, #1
 8014d9a:	d1fa      	bne.n	8014d92 <enet_phy_write_read+0x32>
 8014d9c:	690a      	ldr	r2, [r1, #16]
 8014d9e:	43d2      	mvns	r2, r2
 8014da0:	f002 0001 	and.w	r0, r2, #1
 8014da4:	b90c      	cbnz	r4, 8014daa <enet_phy_write_read+0x4a>
 8014da6:	694a      	ldr	r2, [r1, #20]
 8014da8:	801a      	strh	r2, [r3, #0]
 8014daa:	bd30      	pop	{r4, r5, pc}
 8014dac:	40028000 	andmi	r8, r2, r0
 8014db0:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08014db4 <enet_init>:
 8014db4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014db6:	4616      	mov	r6, r2
 8014db8:	4a9d      	ldr	r2, [pc, #628]	@ (8015030 <enet_init+0x27c>)
 8014dba:	460d      	mov	r5, r1
 8014dbc:	6814      	ldr	r4, [r2, #0]
 8014dbe:	499d      	ldr	r1, [pc, #628]	@ (8015034 <enet_init+0x280>)
 8014dc0:	2300      	movs	r3, #0
 8014dc2:	4021      	ands	r1, r4
 8014dc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014dc8:	6011      	str	r1, [r2, #0]
 8014dca:	6053      	str	r3, [r2, #4]
 8014dcc:	6093      	str	r3, [r2, #8]
 8014dce:	60d3      	str	r3, [r2, #12]
 8014dd0:	6991      	ldr	r1, [r2, #24]
 8014dd2:	f021 01be 	bic.w	r1, r1, #190	@ 0xbe
 8014dd6:	0409      	lsls	r1, r1, #16
 8014dd8:	0c09      	lsrs	r1, r1, #16
 8014dda:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 8014dde:	6191      	str	r1, [r2, #24]
 8014de0:	4995      	ldr	r1, [pc, #596]	@ (8015038 <enet_init+0x284>)
 8014de2:	61d3      	str	r3, [r2, #28]
 8014de4:	698c      	ldr	r4, [r1, #24]
 8014de6:	4a95      	ldr	r2, [pc, #596]	@ (801503c <enet_init+0x288>)
 8014de8:	4022      	ands	r2, r4
 8014dea:	f042 7208 	orr.w	r2, r2, #35651584	@ 0x2200000
 8014dee:	618a      	str	r2, [r1, #24]
 8014df0:	680a      	ldr	r2, [r1, #0]
 8014df2:	4a93      	ldr	r2, [pc, #588]	@ (8015040 <enet_init+0x28c>)
 8014df4:	600a      	str	r2, [r1, #0]
 8014df6:	2801      	cmp	r0, #1
 8014df8:	d146      	bne.n	8014e88 <enet_init+0xd4>
 8014dfa:	4f92      	ldr	r7, [pc, #584]	@ (8015044 <enet_init+0x290>)
 8014dfc:	461c      	mov	r4, r3
 8014dfe:	2201      	movs	r2, #1
 8014e00:	4611      	mov	r1, r2
 8014e02:	f10d 0306 	add.w	r3, sp, #6
 8014e06:	2000      	movs	r0, #0
 8014e08:	f7ff ffaa 	bl	8014d60 <enet_phy_write_read>
 8014e0c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014e10:	f002 0204 	and.w	r2, r2, #4
 8014e14:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014e18:	3401      	adds	r4, #1
 8014e1a:	b922      	cbnz	r2, 8014e26 <enet_init+0x72>
 8014e1c:	42bc      	cmp	r4, r7
 8014e1e:	d1ee      	bne.n	8014dfe <enet_init+0x4a>
 8014e20:	2000      	movs	r0, #0
 8014e22:	b003      	add	sp, #12
 8014e24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014e26:	42bc      	cmp	r4, r7
 8014e28:	d0fa      	beq.n	8014e20 <enet_init+0x6c>
 8014e2a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8014e2e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014e32:	2101      	movs	r1, #1
 8014e34:	2200      	movs	r2, #0
 8014e36:	2002      	movs	r0, #2
 8014e38:	f7ff ff92 	bl	8014d60 <enet_phy_write_read>
 8014e3c:	2800      	cmp	r0, #0
 8014e3e:	d0ef      	beq.n	8014e20 <enet_init+0x6c>
 8014e40:	4f80      	ldr	r7, [pc, #512]	@ (8015044 <enet_init+0x290>)
 8014e42:	2400      	movs	r4, #0
 8014e44:	2201      	movs	r2, #1
 8014e46:	4611      	mov	r1, r2
 8014e48:	f10d 0306 	add.w	r3, sp, #6
 8014e4c:	2000      	movs	r0, #0
 8014e4e:	f7ff ff87 	bl	8014d60 <enet_phy_write_read>
 8014e52:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014e56:	f002 0220 	and.w	r2, r2, #32
 8014e5a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014e5e:	3401      	adds	r4, #1
 8014e60:	b912      	cbnz	r2, 8014e68 <enet_init+0xb4>
 8014e62:	42bc      	cmp	r4, r7
 8014e64:	d1ee      	bne.n	8014e44 <enet_init+0x90>
 8014e66:	e7db      	b.n	8014e20 <enet_init+0x6c>
 8014e68:	42bc      	cmp	r4, r7
 8014e6a:	d0d9      	beq.n	8014e20 <enet_init+0x6c>
 8014e6c:	2101      	movs	r1, #1
 8014e6e:	2210      	movs	r2, #16
 8014e70:	2000      	movs	r0, #0
 8014e72:	f7ff ff75 	bl	8014d60 <enet_phy_write_read>
 8014e76:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8014e7a:	f3c3 0080 	ubfx	r0, r3, #2, #1
 8014e7e:	02c0      	lsls	r0, r0, #11
 8014e80:	0799      	lsls	r1, r3, #30
 8014e82:	bf58      	it	pl
 8014e84:	f440 4080 	orrpl.w	r0, r0, #16384	@ 0x4000
 8014e88:	4b69      	ldr	r3, [pc, #420]	@ (8015030 <enet_init+0x27c>)
 8014e8a:	681a      	ldr	r2, [r3, #0]
 8014e8c:	f422 42b0 	bic.w	r2, r2, #22528	@ 0x5800
 8014e90:	4310      	orrs	r0, r2
 8014e92:	056a      	lsls	r2, r5, #21
 8014e94:	6018      	str	r0, [r3, #0]
 8014e96:	d50b      	bpl.n	8014eb0 <enet_init+0xfc>
 8014e98:	681a      	ldr	r2, [r3, #0]
 8014e9a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8014e9e:	601a      	str	r2, [r3, #0]
 8014ea0:	4a65      	ldr	r2, [pc, #404]	@ (8015038 <enet_init+0x284>)
 8014ea2:	6993      	ldr	r3, [r2, #24]
 8014ea4:	f005 6580 	and.w	r5, r5, #67108864	@ 0x4000000
 8014ea8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8014eac:	431d      	orrs	r5, r3
 8014eae:	6195      	str	r5, [r2, #24]
 8014eb0:	485f      	ldr	r0, [pc, #380]	@ (8015030 <enet_init+0x27c>)
 8014eb2:	6843      	ldr	r3, [r0, #4]
 8014eb4:	431e      	orrs	r6, r3
 8014eb6:	4b64      	ldr	r3, [pc, #400]	@ (8015048 <enet_init+0x294>)
 8014eb8:	6046      	str	r6, [r0, #4]
 8014eba:	681a      	ldr	r2, [r3, #0]
 8014ebc:	07d7      	lsls	r7, r2, #31
 8014ebe:	d513      	bpl.n	8014ee8 <enet_init+0x134>
 8014ec0:	6801      	ldr	r1, [r0, #0]
 8014ec2:	685a      	ldr	r2, [r3, #4]
 8014ec4:	4c61      	ldr	r4, [pc, #388]	@ (801504c <enet_init+0x298>)
 8014ec6:	f021 7100 	bic.w	r1, r1, #33554432	@ 0x2000000
 8014eca:	4014      	ands	r4, r2
 8014ecc:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8014ed0:	4321      	orrs	r1, r4
 8014ed2:	6001      	str	r1, [r0, #0]
 8014ed4:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8014ed8:	0892      	lsrs	r2, r2, #2
 8014eda:	6981      	ldr	r1, [r0, #24]
 8014edc:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
 8014ee0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8014ee4:	430a      	orrs	r2, r1
 8014ee6:	6182      	str	r2, [r0, #24]
 8014ee8:	681a      	ldr	r2, [r3, #0]
 8014eea:	0796      	lsls	r6, r2, #30
 8014eec:	d508      	bpl.n	8014f00 <enet_init+0x14c>
 8014eee:	4952      	ldr	r1, [pc, #328]	@ (8015038 <enet_init+0x284>)
 8014ef0:	6898      	ldr	r0, [r3, #8]
 8014ef2:	680a      	ldr	r2, [r1, #0]
 8014ef4:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8014ef8:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8014efc:	4302      	orrs	r2, r0
 8014efe:	600a      	str	r2, [r1, #0]
 8014f00:	681a      	ldr	r2, [r3, #0]
 8014f02:	0755      	lsls	r5, r2, #29
 8014f04:	d508      	bpl.n	8014f18 <enet_init+0x164>
 8014f06:	494c      	ldr	r1, [pc, #304]	@ (8015038 <enet_init+0x284>)
 8014f08:	68d8      	ldr	r0, [r3, #12]
 8014f0a:	680a      	ldr	r2, [r1, #0]
 8014f0c:	f422 027e 	bic.w	r2, r2, #16646144	@ 0xfe0000
 8014f10:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 8014f14:	4302      	orrs	r2, r0
 8014f16:	600a      	str	r2, [r1, #0]
 8014f18:	681a      	ldr	r2, [r3, #0]
 8014f1a:	0714      	lsls	r4, r2, #28
 8014f1c:	d508      	bpl.n	8014f30 <enet_init+0x17c>
 8014f1e:	4946      	ldr	r1, [pc, #280]	@ (8015038 <enet_init+0x284>)
 8014f20:	6918      	ldr	r0, [r3, #16]
 8014f22:	680a      	ldr	r2, [r1, #0]
 8014f24:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8014f28:	f022 0202 	bic.w	r2, r2, #2
 8014f2c:	4302      	orrs	r2, r0
 8014f2e:	600a      	str	r2, [r1, #0]
 8014f30:	681a      	ldr	r2, [r3, #0]
 8014f32:	06d0      	lsls	r0, r2, #27
 8014f34:	d506      	bpl.n	8014f44 <enet_init+0x190>
 8014f36:	4940      	ldr	r1, [pc, #256]	@ (8015038 <enet_init+0x284>)
 8014f38:	4a45      	ldr	r2, [pc, #276]	@ (8015050 <enet_init+0x29c>)
 8014f3a:	6988      	ldr	r0, [r1, #24]
 8014f3c:	4002      	ands	r2, r0
 8014f3e:	6958      	ldr	r0, [r3, #20]
 8014f40:	4302      	orrs	r2, r0
 8014f42:	618a      	str	r2, [r1, #24]
 8014f44:	681a      	ldr	r2, [r3, #0]
 8014f46:	0691      	lsls	r1, r2, #26
 8014f48:	d511      	bpl.n	8014f6e <enet_init+0x1ba>
 8014f4a:	483b      	ldr	r0, [pc, #236]	@ (8015038 <enet_init+0x284>)
 8014f4c:	699a      	ldr	r2, [r3, #24]
 8014f4e:	6981      	ldr	r1, [r0, #24]
 8014f50:	4c40      	ldr	r4, [pc, #256]	@ (8015054 <enet_init+0x2a0>)
 8014f52:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8014f56:	4014      	ands	r4, r2
 8014f58:	f021 0104 	bic.w	r1, r1, #4
 8014f5c:	4321      	orrs	r1, r4
 8014f5e:	6181      	str	r1, [r0, #24]
 8014f60:	6801      	ldr	r1, [r0, #0]
 8014f62:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8014f66:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8014f6a:	430a      	orrs	r2, r1
 8014f6c:	6002      	str	r2, [r0, #0]
 8014f6e:	681a      	ldr	r2, [r3, #0]
 8014f70:	0652      	lsls	r2, r2, #25
 8014f72:	d506      	bpl.n	8014f82 <enet_init+0x1ce>
 8014f74:	492e      	ldr	r1, [pc, #184]	@ (8015030 <enet_init+0x27c>)
 8014f76:	69d8      	ldr	r0, [r3, #28]
 8014f78:	69ca      	ldr	r2, [r1, #28]
 8014f7a:	f36f 0210 	bfc	r2, #0, #17
 8014f7e:	4302      	orrs	r2, r0
 8014f80:	61ca      	str	r2, [r1, #28]
 8014f82:	681a      	ldr	r2, [r3, #0]
 8014f84:	0617      	lsls	r7, r2, #24
 8014f86:	d517      	bpl.n	8014fb8 <enet_init+0x204>
 8014f88:	4c29      	ldr	r4, [pc, #164]	@ (8015030 <enet_init+0x27c>)
 8014f8a:	6a1a      	ldr	r2, [r3, #32]
 8014f8c:	69a0      	ldr	r0, [r4, #24]
 8014f8e:	f020 00be 	bic.w	r0, r0, #190	@ 0xbe
 8014f92:	f422 417f 	bic.w	r1, r2, #65280	@ 0xff00
 8014f96:	0400      	lsls	r0, r0, #16
 8014f98:	0c00      	lsrs	r0, r0, #16
 8014f9a:	f021 0141 	bic.w	r1, r1, #65	@ 0x41
 8014f9e:	4301      	orrs	r1, r0
 8014fa0:	4825      	ldr	r0, [pc, #148]	@ (8015038 <enet_init+0x284>)
 8014fa2:	61a1      	str	r1, [r4, #24]
 8014fa4:	f8d0 1080 	ldr.w	r1, [r0, #128]	@ 0x80
 8014fa8:	0a12      	lsrs	r2, r2, #8
 8014faa:	f021 0177 	bic.w	r1, r1, #119	@ 0x77
 8014fae:	f002 0277 	and.w	r2, r2, #119	@ 0x77
 8014fb2:	430a      	orrs	r2, r1
 8014fb4:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 8014fb8:	681a      	ldr	r2, [r3, #0]
 8014fba:	05d6      	lsls	r6, r2, #23
 8014fbc:	bf42      	ittt	mi
 8014fbe:	4a1c      	ldrmi	r2, [pc, #112]	@ (8015030 <enet_init+0x27c>)
 8014fc0:	6a59      	ldrmi	r1, [r3, #36]	@ 0x24
 8014fc2:	6091      	strmi	r1, [r2, #8]
 8014fc4:	681a      	ldr	r2, [r3, #0]
 8014fc6:	0595      	lsls	r5, r2, #22
 8014fc8:	bf42      	ittt	mi
 8014fca:	4a19      	ldrmi	r2, [pc, #100]	@ (8015030 <enet_init+0x27c>)
 8014fcc:	6a99      	ldrmi	r1, [r3, #40]	@ 0x28
 8014fce:	60d1      	strmi	r1, [r2, #12]
 8014fd0:	681a      	ldr	r2, [r3, #0]
 8014fd2:	0554      	lsls	r4, r2, #21
 8014fd4:	d508      	bpl.n	8014fe8 <enet_init+0x234>
 8014fd6:	4916      	ldr	r1, [pc, #88]	@ (8015030 <enet_init+0x27c>)
 8014fd8:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8014fda:	684a      	ldr	r2, [r1, #4]
 8014fdc:	f422 62fb 	bic.w	r2, r2, #2008	@ 0x7d8
 8014fe0:	f022 0206 	bic.w	r2, r2, #6
 8014fe4:	4302      	orrs	r2, r0
 8014fe6:	604a      	str	r2, [r1, #4]
 8014fe8:	681a      	ldr	r2, [r3, #0]
 8014fea:	0510      	lsls	r0, r2, #20
 8014fec:	d508      	bpl.n	8015000 <enet_init+0x24c>
 8014fee:	4910      	ldr	r1, [pc, #64]	@ (8015030 <enet_init+0x27c>)
 8014ff0:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8014ff2:	680a      	ldr	r2, [r1, #0]
 8014ff4:	f422 3291 	bic.w	r2, r2, #74240	@ 0x12200
 8014ff8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8014ffc:	4302      	orrs	r2, r0
 8014ffe:	600a      	str	r2, [r1, #0]
 8015000:	681a      	ldr	r2, [r3, #0]
 8015002:	04d1      	lsls	r1, r2, #19
 8015004:	d506      	bpl.n	8015014 <enet_init+0x260>
 8015006:	490a      	ldr	r1, [pc, #40]	@ (8015030 <enet_init+0x27c>)
 8015008:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 801500a:	680a      	ldr	r2, [r1, #0]
 801500c:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8015010:	4302      	orrs	r2, r0
 8015012:	600a      	str	r2, [r1, #0]
 8015014:	681a      	ldr	r2, [r3, #0]
 8015016:	0492      	lsls	r2, r2, #18
 8015018:	d401      	bmi.n	801501e <enet_init+0x26a>
 801501a:	2001      	movs	r0, #1
 801501c:	e701      	b.n	8014e22 <enet_init+0x6e>
 801501e:	4904      	ldr	r1, [pc, #16]	@ (8015030 <enet_init+0x27c>)
 8015020:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015022:	680a      	ldr	r2, [r1, #0]
 8015024:	f422 2260 	bic.w	r2, r2, #917504	@ 0xe0000
 8015028:	4313      	orrs	r3, r2
 801502a:	600b      	str	r3, [r1, #0]
 801502c:	e7f5      	b.n	801501a <enet_init+0x266>
 801502e:	bf00      	nop
 8015030:	40028000 	andmi	r8, r2, r0
 8015034:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	@ 0xffffffc4
 8015038:	40029000 	andmi	r9, r2, r0
 801503c:	f8de3f23 			@ <UNDEFINED> instruction: 0xf8de3f23
 8015040:	02c16000 	sbceq	r6, r1, #0
 8015044:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>
 8015048:	20009d04 	andcs	r9, r0, r4, lsl #26
 801504c:	02000080 	andeq	r0, r0, #128	@ 0x80
 8015050:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	@ 0x39c
 8015054:	01000004 	tsteq	r0, r4

08015058 <enet_txfifo_flush>:
 8015058:	4a08      	ldr	r2, [pc, #32]	@ (801507c <enet_txfifo_flush+0x24>)
 801505a:	6993      	ldr	r3, [r2, #24]
 801505c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8015060:	6193      	str	r3, [r2, #24]
 8015062:	4b07      	ldr	r3, [pc, #28]	@ (8015080 <enet_txfifo_flush+0x28>)
 8015064:	6990      	ldr	r0, [r2, #24]
 8015066:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
 801506a:	d003      	beq.n	8015074 <enet_txfifo_flush+0x1c>
 801506c:	3b01      	subs	r3, #1
 801506e:	d1f9      	bne.n	8015064 <enet_txfifo_flush+0xc>
 8015070:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8015074:	fab0 f080 	clz	r0, r0
 8015078:	0940      	lsrs	r0, r0, #5
 801507a:	4770      	bx	lr
 801507c:	40029000 	andmi	r9, r2, r0
 8015080:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08015084 <enet_tx_enable>:
 8015084:	4a06      	ldr	r2, [pc, #24]	@ (80150a0 <enet_tx_enable+0x1c>)
 8015086:	b508      	push	{r3, lr}
 8015088:	6813      	ldr	r3, [r2, #0]
 801508a:	f043 0308 	orr.w	r3, r3, #8
 801508e:	6013      	str	r3, [r2, #0]
 8015090:	f7ff ffe2 	bl	8015058 <enet_txfifo_flush>
 8015094:	4a03      	ldr	r2, [pc, #12]	@ (80150a4 <enet_tx_enable+0x20>)
 8015096:	6993      	ldr	r3, [r2, #24]
 8015098:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801509c:	6193      	str	r3, [r2, #24]
 801509e:	bd08      	pop	{r3, pc}
 80150a0:	40028000 	andmi	r8, r2, r0
 80150a4:	40029000 	andmi	r9, r2, r0

080150a8 <enet_enable>:
 80150a8:	b508      	push	{r3, lr}
 80150aa:	f7ff ffeb 	bl	8015084 <enet_tx_enable>
 80150ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80150b2:	f7ff be47 	b.w	8014d44 <enet_rx_enable>
	...

080150b8 <enet_desc_information_get>:
 80150b8:	2905      	cmp	r1, #5
 80150ba:	d820      	bhi.n	80150fe <enet_desc_information_get+0x46>
 80150bc:	e8df f001 	tbb	[pc, r1]
 80150c0:	0309191b 	movweq	r1, #39195	@ 0x991b
 80150c4:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 80150c8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80150cc:	4770      	bx	lr
 80150ce:	88c0      	ldrh	r0, [r0, #6]
 80150d0:	e7fa      	b.n	80150c8 <enet_desc_information_get+0x10>
 80150d2:	6802      	ldr	r2, [r0, #0]
 80150d4:	f3c2 430d 	ubfx	r3, r2, #16, #14
 80150d8:	2b04      	cmp	r3, #4
 80150da:	d913      	bls.n	8015104 <enet_desc_information_get+0x4c>
 80150dc:	490a      	ldr	r1, [pc, #40]	@ (8015108 <enet_desc_information_get+0x50>)
 80150de:	6809      	ldr	r1, [r1, #0]
 80150e0:	0189      	lsls	r1, r1, #6
 80150e2:	f1a3 0004 	sub.w	r0, r3, #4
 80150e6:	d50e      	bpl.n	8015106 <enet_desc_information_get+0x4e>
 80150e8:	f012 0f20 	tst.w	r2, #32
 80150ec:	bf18      	it	ne
 80150ee:	4618      	movne	r0, r3
 80150f0:	4770      	bx	lr
 80150f2:	6880      	ldr	r0, [r0, #8]
 80150f4:	4770      	bx	lr
 80150f6:	6800      	ldr	r0, [r0, #0]
 80150f8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80150fc:	4770      	bx	lr
 80150fe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8015102:	4770      	bx	lr
 8015104:	2000      	movs	r0, #0
 8015106:	4770      	bx	lr
 8015108:	40028000 	andmi	r8, r2, r0

0801510c <enet_initpara_reset>:
 801510c:	4b08      	ldr	r3, [pc, #32]	@ (8015130 <enet_initpara_reset+0x24>)
 801510e:	2200      	movs	r2, #0
 8015110:	e9c3 2200 	strd	r2, r2, [r3]
 8015114:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8015118:	e9c3 2204 	strd	r2, r2, [r3, #16]
 801511c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8015120:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8015124:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
 8015128:	e9c3 220c 	strd	r2, r2, [r3, #48]	@ 0x30
 801512c:	639a      	str	r2, [r3, #56]	@ 0x38
 801512e:	4770      	bx	lr
 8015130:	20009d04 	andcs	r9, r0, r4, lsl #26

08015134 <enet_deinit>:
 8015134:	b508      	push	{r3, lr}
 8015136:	f240 4019 	movw	r0, #1049	@ 0x419
 801513a:	f000 f8e0 	bl	80152fe <rcu_periph_reset_enable>
 801513e:	f240 4019 	movw	r0, #1049	@ 0x419
 8015142:	f000 f8de 	bl	8015302 <rcu_periph_reset_disable>
 8015146:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801514a:	f7ff bfdf 	b.w	801510c <enet_initpara_reset>
	...

08015150 <fwdgt_enable>:
 8015150:	4b02      	ldr	r3, [pc, #8]	@ (801515c <fwdgt_enable+0xc>)
 8015152:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
 8015156:	601a      	str	r2, [r3, #0]
 8015158:	4770      	bx	lr
 801515a:	bf00      	nop
 801515c:	40003000 	andmi	r3, r0, r0

08015160 <fwdgt_counter_reload>:
 8015160:	4b02      	ldr	r3, [pc, #8]	@ (801516c <fwdgt_counter_reload+0xc>)
 8015162:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
 8015166:	601a      	str	r2, [r3, #0]
 8015168:	4770      	bx	lr
 801516a:	bf00      	nop
 801516c:	40003000 	andmi	r3, r0, r0

08015170 <fwdgt_config>:
 8015170:	4a12      	ldr	r2, [pc, #72]	@ (80151bc <fwdgt_config+0x4c>)
 8015172:	b510      	push	{r4, lr}
 8015174:	f245 5355 	movw	r3, #21845	@ 0x5555
 8015178:	4c11      	ldr	r4, [pc, #68]	@ (80151c0 <fwdgt_config+0x50>)
 801517a:	6013      	str	r3, [r2, #0]
 801517c:	68d3      	ldr	r3, [r2, #12]
 801517e:	3c01      	subs	r4, #1
 8015180:	f003 0301 	and.w	r3, r3, #1
 8015184:	d013      	beq.n	80151ae <fwdgt_config+0x3e>
 8015186:	2b00      	cmp	r3, #0
 8015188:	d1f8      	bne.n	801517c <fwdgt_config+0xc>
 801518a:	6051      	str	r1, [r2, #4]
 801518c:	490c      	ldr	r1, [pc, #48]	@ (80151c0 <fwdgt_config+0x50>)
 801518e:	4a0b      	ldr	r2, [pc, #44]	@ (80151bc <fwdgt_config+0x4c>)
 8015190:	68d3      	ldr	r3, [r2, #12]
 8015192:	3901      	subs	r1, #1
 8015194:	f003 0302 	and.w	r3, r3, #2
 8015198:	d00d      	beq.n	80151b6 <fwdgt_config+0x46>
 801519a:	2b00      	cmp	r3, #0
 801519c:	d1f8      	bne.n	8015190 <fwdgt_config+0x20>
 801519e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80151a2:	f64a 23aa 	movw	r3, #43690	@ 0xaaaa
 80151a6:	6090      	str	r0, [r2, #8]
 80151a8:	6013      	str	r3, [r2, #0]
 80151aa:	2001      	movs	r0, #1
 80151ac:	e002      	b.n	80151b4 <fwdgt_config+0x44>
 80151ae:	2b00      	cmp	r3, #0
 80151b0:	d0eb      	beq.n	801518a <fwdgt_config+0x1a>
 80151b2:	2000      	movs	r0, #0
 80151b4:	bd10      	pop	{r4, pc}
 80151b6:	2b00      	cmp	r3, #0
 80151b8:	d1fb      	bne.n	80151b2 <fwdgt_config+0x42>
 80151ba:	e7f0      	b.n	801519e <fwdgt_config+0x2e>
 80151bc:	40003000 	andmi	r3, r0, r0
 80151c0:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

080151c4 <gpio_mode_set>:
 80151c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80151c8:	6805      	ldr	r5, [r0, #0]
 80151ca:	68c4      	ldr	r4, [r0, #12]
 80151cc:	2600      	movs	r6, #0
 80151ce:	f04f 0e01 	mov.w	lr, #1
 80151d2:	f04f 0803 	mov.w	r8, #3
 80151d6:	fa0e f706 	lsl.w	r7, lr, r6
 80151da:	421f      	tst	r7, r3
 80151dc:	d00d      	beq.n	80151fa <gpio_mode_set+0x36>
 80151de:	0077      	lsls	r7, r6, #1
 80151e0:	fa08 fc07 	lsl.w	ip, r8, r7
 80151e4:	fa01 f907 	lsl.w	r9, r1, r7
 80151e8:	ea25 050c 	bic.w	r5, r5, ip
 80151ec:	ea24 040c 	bic.w	r4, r4, ip
 80151f0:	fa02 f707 	lsl.w	r7, r2, r7
 80151f4:	ea49 0505 	orr.w	r5, r9, r5
 80151f8:	433c      	orrs	r4, r7
 80151fa:	3601      	adds	r6, #1
 80151fc:	2e10      	cmp	r6, #16
 80151fe:	d1ea      	bne.n	80151d6 <gpio_mode_set+0x12>
 8015200:	6005      	str	r5, [r0, #0]
 8015202:	60c4      	str	r4, [r0, #12]
 8015204:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015208 <gpio_output_options_set>:
 8015208:	2901      	cmp	r1, #1
 801520a:	6841      	ldr	r1, [r0, #4]
 801520c:	bf0c      	ite	eq
 801520e:	4319      	orreq	r1, r3
 8015210:	4399      	bicne	r1, r3
 8015212:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015214:	6041      	str	r1, [r0, #4]
 8015216:	6881      	ldr	r1, [r0, #8]
 8015218:	2400      	movs	r4, #0
 801521a:	2601      	movs	r6, #1
 801521c:	2703      	movs	r7, #3
 801521e:	fa06 f504 	lsl.w	r5, r6, r4
 8015222:	421d      	tst	r5, r3
 8015224:	d007      	beq.n	8015236 <gpio_output_options_set+0x2e>
 8015226:	0065      	lsls	r5, r4, #1
 8015228:	fa07 fc05 	lsl.w	ip, r7, r5
 801522c:	ea21 010c 	bic.w	r1, r1, ip
 8015230:	fa02 f505 	lsl.w	r5, r2, r5
 8015234:	4329      	orrs	r1, r5
 8015236:	3401      	adds	r4, #1
 8015238:	2c10      	cmp	r4, #16
 801523a:	d1f0      	bne.n	801521e <gpio_output_options_set+0x16>
 801523c:	6081      	str	r1, [r0, #8]
 801523e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015240 <gpio_af_set>:
 8015240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015242:	6a06      	ldr	r6, [r0, #32]
 8015244:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 8015246:	2300      	movs	r3, #0
 8015248:	f04f 0c01 	mov.w	ip, #1
 801524c:	f04f 0e0f 	mov.w	lr, #15
 8015250:	fa0c f403 	lsl.w	r4, ip, r3
 8015254:	4214      	tst	r4, r2
 8015256:	d007      	beq.n	8015268 <gpio_af_set+0x28>
 8015258:	009c      	lsls	r4, r3, #2
 801525a:	fa0e f704 	lsl.w	r7, lr, r4
 801525e:	ea26 0607 	bic.w	r6, r6, r7
 8015262:	fa01 f404 	lsl.w	r4, r1, r4
 8015266:	4326      	orrs	r6, r4
 8015268:	3301      	adds	r3, #1
 801526a:	2b08      	cmp	r3, #8
 801526c:	d1f0      	bne.n	8015250 <gpio_af_set+0x10>
 801526e:	2300      	movs	r3, #0
 8015270:	f04f 0c01 	mov.w	ip, #1
 8015274:	f04f 0e0f 	mov.w	lr, #15
 8015278:	f103 0408 	add.w	r4, r3, #8
 801527c:	fa0c f404 	lsl.w	r4, ip, r4
 8015280:	4214      	tst	r4, r2
 8015282:	d007      	beq.n	8015294 <gpio_af_set+0x54>
 8015284:	009c      	lsls	r4, r3, #2
 8015286:	fa0e f704 	lsl.w	r7, lr, r4
 801528a:	ea25 0507 	bic.w	r5, r5, r7
 801528e:	fa01 f404 	lsl.w	r4, r1, r4
 8015292:	4325      	orrs	r5, r4
 8015294:	3301      	adds	r3, #1
 8015296:	2b08      	cmp	r3, #8
 8015298:	d1ee      	bne.n	8015278 <gpio_af_set+0x38>
 801529a:	6206      	str	r6, [r0, #32]
 801529c:	6245      	str	r5, [r0, #36]	@ 0x24
 801529e:	bdf0      	pop	{r4, r5, r6, r7, pc}

080152a0 <pmu_backup_ldo_config>:
 80152a0:	4b04      	ldr	r3, [pc, #16]	@ (80152b4 <pmu_backup_ldo_config+0x14>)
 80152a2:	685a      	ldr	r2, [r3, #4]
 80152a4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80152a8:	605a      	str	r2, [r3, #4]
 80152aa:	685a      	ldr	r2, [r3, #4]
 80152ac:	4302      	orrs	r2, r0
 80152ae:	605a      	str	r2, [r3, #4]
 80152b0:	4770      	bx	lr
 80152b2:	bf00      	nop
 80152b4:	40007000 	andmi	r7, r0, r0

080152b8 <pmu_backup_write_enable>:
 80152b8:	4a02      	ldr	r2, [pc, #8]	@ (80152c4 <pmu_backup_write_enable+0xc>)
 80152ba:	6813      	ldr	r3, [r2, #0]
 80152bc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80152c0:	6013      	str	r3, [r2, #0]
 80152c2:	4770      	bx	lr
 80152c4:	40007000 	andmi	r7, r0, r0

080152c8 <rcu_periph_clock_enable>:
 80152c8:	0983      	lsrs	r3, r0, #6
 80152ca:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80152ce:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 80152d2:	f000 001f 	and.w	r0, r0, #31
 80152d6:	6819      	ldr	r1, [r3, #0]
 80152d8:	2201      	movs	r2, #1
 80152da:	4082      	lsls	r2, r0
 80152dc:	430a      	orrs	r2, r1
 80152de:	601a      	str	r2, [r3, #0]
 80152e0:	4770      	bx	lr

080152e2 <rcu_periph_clock_disable>:
 80152e2:	0983      	lsrs	r3, r0, #6
 80152e4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80152e8:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 80152ec:	f000 001f 	and.w	r0, r0, #31
 80152f0:	681a      	ldr	r2, [r3, #0]
 80152f2:	2101      	movs	r1, #1
 80152f4:	4081      	lsls	r1, r0
 80152f6:	ea22 0201 	bic.w	r2, r2, r1
 80152fa:	601a      	str	r2, [r3, #0]
 80152fc:	4770      	bx	lr

080152fe <rcu_periph_reset_enable>:
 80152fe:	f7ff bfe3 	b.w	80152c8 <rcu_periph_clock_enable>

08015302 <rcu_periph_reset_disable>:
 8015302:	f7ff bfee 	b.w	80152e2 <rcu_periph_clock_disable>
	...

08015308 <rcu_ckout0_config>:
 8015308:	4a04      	ldr	r2, [pc, #16]	@ (801531c <rcu_ckout0_config+0x14>)
 801530a:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 801530e:	f023 63ec 	bic.w	r3, r3, #123731968	@ 0x7600000
 8015312:	430b      	orrs	r3, r1
 8015314:	4303      	orrs	r3, r0
 8015316:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 801531a:	4770      	bx	lr
 801531c:	40023000 	andmi	r3, r2, r0

08015320 <rcu_timer_clock_prescaler_config>:
 8015320:	f06f 7380 	mvn.w	r3, #16777216	@ 0x1000000
 8015324:	4298      	cmp	r0, r3
 8015326:	4b05      	ldr	r3, [pc, #20]	@ (801533c <rcu_timer_clock_prescaler_config+0x1c>)
 8015328:	f8d3 288c 	ldr.w	r2, [r3, #2188]	@ 0x88c
 801532c:	bf0c      	ite	eq
 801532e:	f022 7280 	biceq.w	r2, r2, #16777216	@ 0x1000000
 8015332:	4302      	orrne	r2, r0
 8015334:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
 8015338:	4770      	bx	lr
 801533a:	bf00      	nop
 801533c:	40023000 	andmi	r3, r2, r0

08015340 <rcu_clock_freq_get>:
 8015340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015342:	4b35      	ldr	r3, [pc, #212]	@ (8015418 <rcu_clock_freq_get+0xd8>)
 8015344:	b089      	sub	sp, #36	@ 0x24
 8015346:	4604      	mov	r4, r0
 8015348:	ad04      	add	r5, sp, #16
 801534a:	f103 0610 	add.w	r6, r3, #16
 801534e:	461f      	mov	r7, r3
 8015350:	6818      	ldr	r0, [r3, #0]
 8015352:	6859      	ldr	r1, [r3, #4]
 8015354:	462a      	mov	r2, r5
 8015356:	c203      	stmia	r2!, {r0, r1}
 8015358:	3308      	adds	r3, #8
 801535a:	42b3      	cmp	r3, r6
 801535c:	4615      	mov	r5, r2
 801535e:	d1f7      	bne.n	8015350 <rcu_clock_freq_get+0x10>
 8015360:	6938      	ldr	r0, [r7, #16]
 8015362:	6871      	ldr	r1, [r6, #4]
 8015364:	4a2d      	ldr	r2, [pc, #180]	@ (801541c <rcu_clock_freq_get+0xdc>)
 8015366:	466b      	mov	r3, sp
 8015368:	c303      	stmia	r3!, {r0, r1}
 801536a:	c303      	stmia	r3!, {r0, r1}
 801536c:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8015370:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015374:	2b01      	cmp	r3, #1
 8015376:	d03f      	beq.n	80153f8 <rcu_clock_freq_get+0xb8>
 8015378:	2b02      	cmp	r3, #2
 801537a:	d13f      	bne.n	80153fc <rcu_clock_freq_get+0xbc>
 801537c:	f8d2 0804 	ldr.w	r0, [r2, #2052]	@ 0x804
 8015380:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804
 8015384:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 8015388:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 801538c:	4d24      	ldr	r5, [pc, #144]	@ (8015420 <rcu_clock_freq_get+0xe0>)
 801538e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8015392:	f412 0f80 	tst.w	r2, #4194304	@ 0x400000
 8015396:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801539a:	f103 0301 	add.w	r3, r3, #1
 801539e:	4a21      	ldr	r2, [pc, #132]	@ (8015424 <rcu_clock_freq_get+0xe4>)
 80153a0:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80153a4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80153a8:	bf18      	it	ne
 80153aa:	462a      	movne	r2, r5
 80153ac:	fbb2 f2f0 	udiv	r2, r2, r0
 80153b0:	434a      	muls	r2, r1
 80153b2:	fbb2 f0f3 	udiv	r0, r2, r3
 80153b6:	4919      	ldr	r1, [pc, #100]	@ (801541c <rcu_clock_freq_get+0xdc>)
 80153b8:	f8d1 3808 	ldr.w	r3, [r1, #2056]	@ 0x808
 80153bc:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 80153c0:	f3c2 2282 	ubfx	r2, r2, #10, #3
 80153c4:	3220      	adds	r2, #32
 80153c6:	446a      	add	r2, sp
 80153c8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80153cc:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80153d0:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 80153d4:	3320      	adds	r3, #32
 80153d6:	446b      	add	r3, sp
 80153d8:	f3c2 3242 	ubfx	r2, r2, #13, #3
 80153dc:	3220      	adds	r2, #32
 80153de:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80153e2:	446a      	add	r2, sp
 80153e4:	fa20 f303 	lsr.w	r3, r0, r3
 80153e8:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80153ec:	2c03      	cmp	r4, #3
 80153ee:	d807      	bhi.n	8015400 <rcu_clock_freq_get+0xc0>
 80153f0:	e8df f004 	tbb	[pc, r4]
 80153f4:	0e0b0907 	vmlaeq.f16	s0, s22, s14	@ <UNPREDICTABLE>
 80153f8:	4809      	ldr	r0, [pc, #36]	@ (8015420 <rcu_clock_freq_get+0xe0>)
 80153fa:	e7dc      	b.n	80153b6 <rcu_clock_freq_get+0x76>
 80153fc:	4809      	ldr	r0, [pc, #36]	@ (8015424 <rcu_clock_freq_get+0xe4>)
 80153fe:	e7da      	b.n	80153b6 <rcu_clock_freq_get+0x76>
 8015400:	2000      	movs	r0, #0
 8015402:	b009      	add	sp, #36	@ 0x24
 8015404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015406:	4618      	mov	r0, r3
 8015408:	e7fb      	b.n	8015402 <rcu_clock_freq_get+0xc2>
 801540a:	fa23 f005 	lsr.w	r0, r3, r5
 801540e:	e7f8      	b.n	8015402 <rcu_clock_freq_get+0xc2>
 8015410:	fa23 f002 	lsr.w	r0, r3, r2
 8015414:	e7f5      	b.n	8015402 <rcu_clock_freq_get+0xc2>
 8015416:	bf00      	nop
 8015418:	080172fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 801541c:	40023000 	andmi	r3, r2, r0
 8015420:	017d7840 	cmneq	sp, r0, asr #16
 8015424:	00f42400 	rscseq	r2, r4, r0, lsl #8

08015428 <syscfg_enet_phy_interface_config>:
 8015428:	4a04      	ldr	r2, [pc, #16]	@ (801543c <syscfg_enet_phy_interface_config+0x14>)
 801542a:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 801542e:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8015432:	4303      	orrs	r3, r0
 8015434:	f8c2 3804 	str.w	r3, [r2, #2052]	@ 0x804
 8015438:	4770      	bx	lr
 801543a:	bf00      	nop
 801543c:	40013000 	andmi	r3, r1, r0

08015440 <timer_deinit>:
 8015440:	b508      	push	{r3, lr}
 8015442:	4b4e      	ldr	r3, [pc, #312]	@ (801557c <timer_deinit+0x13c>)
 8015444:	4298      	cmp	r0, r3
 8015446:	f000 8092 	beq.w	801556e <timer_deinit+0x12e>
 801544a:	d822      	bhi.n	8015492 <timer_deinit+0x52>
 801544c:	f5a3 5380 	sub.w	r3, r3, #4096	@ 0x1000
 8015450:	4298      	cmp	r0, r3
 8015452:	d062      	beq.n	801551a <timer_deinit+0xda>
 8015454:	d80b      	bhi.n	801546e <timer_deinit+0x2e>
 8015456:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 801545a:	4298      	cmp	r0, r3
 801545c:	d04f      	beq.n	80154fe <timer_deinit+0xbe>
 801545e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8015462:	4298      	cmp	r0, r3
 8015464:	d052      	beq.n	801550c <timer_deinit+0xcc>
 8015466:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 801546a:	d041      	beq.n	80154f0 <timer_deinit+0xb0>
 801546c:	bd08      	pop	{r3, pc}
 801546e:	4b44      	ldr	r3, [pc, #272]	@ (8015580 <timer_deinit+0x140>)
 8015470:	4298      	cmp	r0, r3
 8015472:	d059      	beq.n	8015528 <timer_deinit+0xe8>
 8015474:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8015478:	4298      	cmp	r0, r3
 801547a:	d071      	beq.n	8015560 <timer_deinit+0x120>
 801547c:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8015480:	4298      	cmp	r0, r3
 8015482:	d1f3      	bne.n	801546c <timer_deinit+0x2c>
 8015484:	f640 0004 	movw	r0, #2052	@ 0x804
 8015488:	f7ff ff39 	bl	80152fe <rcu_periph_reset_enable>
 801548c:	f640 0004 	movw	r0, #2052	@ 0x804
 8015490:	e02a      	b.n	80154e8 <timer_deinit+0xa8>
 8015492:	4b3c      	ldr	r3, [pc, #240]	@ (8015584 <timer_deinit+0x144>)
 8015494:	4298      	cmp	r0, r3
 8015496:	d055      	beq.n	8015544 <timer_deinit+0x104>
 8015498:	d812      	bhi.n	80154c0 <timer_deinit+0x80>
 801549a:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 801549e:	4298      	cmp	r0, r3
 80154a0:	d01c      	beq.n	80154dc <timer_deinit+0x9c>
 80154a2:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80154a6:	4298      	cmp	r0, r3
 80154a8:	d045      	beq.n	8015536 <timer_deinit+0xf6>
 80154aa:	f5a3 4364 	sub.w	r3, r3, #58368	@ 0xe400
 80154ae:	4298      	cmp	r0, r3
 80154b0:	d1dc      	bne.n	801546c <timer_deinit+0x2c>
 80154b2:	f640 0008 	movw	r0, #2056	@ 0x808
 80154b6:	f7ff ff22 	bl	80152fe <rcu_periph_reset_enable>
 80154ba:	f640 0008 	movw	r0, #2056	@ 0x808
 80154be:	e013      	b.n	80154e8 <timer_deinit+0xa8>
 80154c0:	4b31      	ldr	r3, [pc, #196]	@ (8015588 <timer_deinit+0x148>)
 80154c2:	4298      	cmp	r0, r3
 80154c4:	d045      	beq.n	8015552 <timer_deinit+0x112>
 80154c6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80154ca:	4298      	cmp	r0, r3
 80154cc:	d1ce      	bne.n	801546c <timer_deinit+0x2c>
 80154ce:	f640 1012 	movw	r0, #2322	@ 0x912
 80154d2:	f7ff ff14 	bl	80152fe <rcu_periph_reset_enable>
 80154d6:	f640 1012 	movw	r0, #2322	@ 0x912
 80154da:	e005      	b.n	80154e8 <timer_deinit+0xa8>
 80154dc:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80154e0:	f7ff ff0d 	bl	80152fe <rcu_periph_reset_enable>
 80154e4:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80154e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80154ec:	f7ff bf09 	b.w	8015302 <rcu_periph_reset_disable>
 80154f0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80154f4:	f7ff ff03 	bl	80152fe <rcu_periph_reset_enable>
 80154f8:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80154fc:	e7f4      	b.n	80154e8 <timer_deinit+0xa8>
 80154fe:	f640 0001 	movw	r0, #2049	@ 0x801
 8015502:	f7ff fefc 	bl	80152fe <rcu_periph_reset_enable>
 8015506:	f640 0001 	movw	r0, #2049	@ 0x801
 801550a:	e7ed      	b.n	80154e8 <timer_deinit+0xa8>
 801550c:	f640 0002 	movw	r0, #2050	@ 0x802
 8015510:	f7ff fef5 	bl	80152fe <rcu_periph_reset_enable>
 8015514:	f640 0002 	movw	r0, #2050	@ 0x802
 8015518:	e7e6      	b.n	80154e8 <timer_deinit+0xa8>
 801551a:	f640 0003 	movw	r0, #2051	@ 0x803
 801551e:	f7ff feee 	bl	80152fe <rcu_periph_reset_enable>
 8015522:	f640 0003 	movw	r0, #2051	@ 0x803
 8015526:	e7df      	b.n	80154e8 <timer_deinit+0xa8>
 8015528:	f640 0005 	movw	r0, #2053	@ 0x805
 801552c:	f7ff fee7 	bl	80152fe <rcu_periph_reset_enable>
 8015530:	f640 0005 	movw	r0, #2053	@ 0x805
 8015534:	e7d8      	b.n	80154e8 <timer_deinit+0xa8>
 8015536:	f640 1001 	movw	r0, #2305	@ 0x901
 801553a:	f7ff fee0 	bl	80152fe <rcu_periph_reset_enable>
 801553e:	f640 1001 	movw	r0, #2305	@ 0x901
 8015542:	e7d1      	b.n	80154e8 <timer_deinit+0xa8>
 8015544:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8015548:	f7ff fed9 	bl	80152fe <rcu_periph_reset_enable>
 801554c:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8015550:	e7ca      	b.n	80154e8 <timer_deinit+0xa8>
 8015552:	f640 1011 	movw	r0, #2321	@ 0x911
 8015556:	f7ff fed2 	bl	80152fe <rcu_periph_reset_enable>
 801555a:	f640 1011 	movw	r0, #2321	@ 0x911
 801555e:	e7c3      	b.n	80154e8 <timer_deinit+0xa8>
 8015560:	f640 0006 	movw	r0, #2054	@ 0x806
 8015564:	f7ff fecb 	bl	80152fe <rcu_periph_reset_enable>
 8015568:	f640 0006 	movw	r0, #2054	@ 0x806
 801556c:	e7bc      	b.n	80154e8 <timer_deinit+0xa8>
 801556e:	f640 0007 	movw	r0, #2055	@ 0x807
 8015572:	f7ff fec4 	bl	80152fe <rcu_periph_reset_enable>
 8015576:	f640 0007 	movw	r0, #2055	@ 0x807
 801557a:	e7b5      	b.n	80154e8 <timer_deinit+0xa8>
 801557c:	40001c00 	andmi	r1, r0, r0, lsl #24
 8015580:	40001400 	andmi	r1, r0, r0, lsl #8
 8015584:	40014000 	andmi	r4, r1, r0
 8015588:	40014400 	andmi	r4, r1, r0, lsl #8

0801558c <timer_struct_para_init>:
 801558c:	2300      	movs	r3, #0
 801558e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8015592:	e9c0 3300 	strd	r3, r3, [r0]
 8015596:	6082      	str	r2, [r0, #8]
 8015598:	7303      	strb	r3, [r0, #12]
 801559a:	4770      	bx	lr

0801559c <timer_init>:
 801559c:	880b      	ldrh	r3, [r1, #0]
 801559e:	4a17      	ldr	r2, [pc, #92]	@ (80155fc <timer_init+0x60>)
 80155a0:	b510      	push	{r4, lr}
 80155a2:	6283      	str	r3, [r0, #40]	@ 0x28
 80155a4:	f420 6380 	bic.w	r3, r0, #1024	@ 0x400
 80155a8:	4293      	cmp	r3, r2
 80155aa:	d004      	beq.n	80155b6 <timer_init+0x1a>
 80155ac:	f420 6240 	bic.w	r2, r0, #3072	@ 0xc00
 80155b0:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 80155b4:	d10b      	bne.n	80155ce <timer_init+0x32>
 80155b6:	6802      	ldr	r2, [r0, #0]
 80155b8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80155bc:	6002      	str	r2, [r0, #0]
 80155be:	6804      	ldr	r4, [r0, #0]
 80155c0:	884a      	ldrh	r2, [r1, #2]
 80155c2:	4322      	orrs	r2, r4
 80155c4:	6002      	str	r2, [r0, #0]
 80155c6:	6804      	ldr	r4, [r0, #0]
 80155c8:	888a      	ldrh	r2, [r1, #4]
 80155ca:	4322      	orrs	r2, r4
 80155cc:	6002      	str	r2, [r0, #0]
 80155ce:	688a      	ldr	r2, [r1, #8]
 80155d0:	62c2      	str	r2, [r0, #44]	@ 0x2c
 80155d2:	4a0b      	ldr	r2, [pc, #44]	@ (8015600 <timer_init+0x64>)
 80155d4:	4293      	cmp	r3, r2
 80155d6:	d00c      	beq.n	80155f2 <timer_init+0x56>
 80155d8:	6802      	ldr	r2, [r0, #0]
 80155da:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80155de:	6002      	str	r2, [r0, #0]
 80155e0:	6804      	ldr	r4, [r0, #0]
 80155e2:	88ca      	ldrh	r2, [r1, #6]
 80155e4:	4322      	orrs	r2, r4
 80155e6:	6002      	str	r2, [r0, #0]
 80155e8:	4a04      	ldr	r2, [pc, #16]	@ (80155fc <timer_init+0x60>)
 80155ea:	4293      	cmp	r3, r2
 80155ec:	bf04      	itt	eq
 80155ee:	7b0b      	ldrbeq	r3, [r1, #12]
 80155f0:	6303      	streq	r3, [r0, #48]	@ 0x30
 80155f2:	6943      	ldr	r3, [r0, #20]
 80155f4:	f043 0301 	orr.w	r3, r3, #1
 80155f8:	6143      	str	r3, [r0, #20]
 80155fa:	bd10      	pop	{r4, pc}
 80155fc:	40010000 	andmi	r0, r1, r0
 8015600:	40001000 	andmi	r1, r0, r0

08015604 <timer_enable>:
 8015604:	6803      	ldr	r3, [r0, #0]
 8015606:	f043 0301 	orr.w	r3, r3, #1
 801560a:	6003      	str	r3, [r0, #0]
 801560c:	4770      	bx	lr

0801560e <timer_counter_value_config>:
 801560e:	6241      	str	r1, [r0, #36]	@ 0x24
 8015610:	4770      	bx	lr

08015612 <timer_dma_enable>:
 8015612:	68c3      	ldr	r3, [r0, #12]
 8015614:	4319      	orrs	r1, r3
 8015616:	60c1      	str	r1, [r0, #12]
 8015618:	4770      	bx	lr
	...

0801561c <timer_channel_output_config>:
 801561c:	2903      	cmp	r1, #3
 801561e:	d83e      	bhi.n	801569e <timer_channel_output_config+0x82>
 8015620:	e8df f011 	tbh	[pc, r1, lsl #1]
 8015624:	003e0004 	eorseq	r0, lr, r4
 8015628:	00bc007d 	adcseq	r0, ip, sp, ror r0
 801562c:	6a03      	ldr	r3, [r0, #32]
 801562e:	f023 0301 	bic.w	r3, r3, #1
 8015632:	6203      	str	r3, [r0, #32]
 8015634:	6983      	ldr	r3, [r0, #24]
 8015636:	f023 0303 	bic.w	r3, r3, #3
 801563a:	6183      	str	r3, [r0, #24]
 801563c:	6a01      	ldr	r1, [r0, #32]
 801563e:	8813      	ldrh	r3, [r2, #0]
 8015640:	430b      	orrs	r3, r1
 8015642:	6203      	str	r3, [r0, #32]
 8015644:	6a03      	ldr	r3, [r0, #32]
 8015646:	f023 0302 	bic.w	r3, r3, #2
 801564a:	6203      	str	r3, [r0, #32]
 801564c:	6a01      	ldr	r1, [r0, #32]
 801564e:	8893      	ldrh	r3, [r2, #4]
 8015650:	430b      	orrs	r3, r1
 8015652:	6203      	str	r3, [r0, #32]
 8015654:	4b64      	ldr	r3, [pc, #400]	@ (80157e8 <timer_channel_output_config+0x1cc>)
 8015656:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 801565a:	4299      	cmp	r1, r3
 801565c:	d11f      	bne.n	801569e <timer_channel_output_config+0x82>
 801565e:	6a03      	ldr	r3, [r0, #32]
 8015660:	f023 0304 	bic.w	r3, r3, #4
 8015664:	6203      	str	r3, [r0, #32]
 8015666:	6a01      	ldr	r1, [r0, #32]
 8015668:	8853      	ldrh	r3, [r2, #2]
 801566a:	430b      	orrs	r3, r1
 801566c:	6203      	str	r3, [r0, #32]
 801566e:	6a03      	ldr	r3, [r0, #32]
 8015670:	f023 0308 	bic.w	r3, r3, #8
 8015674:	6203      	str	r3, [r0, #32]
 8015676:	6a01      	ldr	r1, [r0, #32]
 8015678:	88d3      	ldrh	r3, [r2, #6]
 801567a:	430b      	orrs	r3, r1
 801567c:	6203      	str	r3, [r0, #32]
 801567e:	6843      	ldr	r3, [r0, #4]
 8015680:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015684:	6043      	str	r3, [r0, #4]
 8015686:	6841      	ldr	r1, [r0, #4]
 8015688:	8913      	ldrh	r3, [r2, #8]
 801568a:	430b      	orrs	r3, r1
 801568c:	6043      	str	r3, [r0, #4]
 801568e:	6843      	ldr	r3, [r0, #4]
 8015690:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8015694:	6043      	str	r3, [r0, #4]
 8015696:	6841      	ldr	r1, [r0, #4]
 8015698:	8953      	ldrh	r3, [r2, #10]
 801569a:	430b      	orrs	r3, r1
 801569c:	6043      	str	r3, [r0, #4]
 801569e:	4770      	bx	lr
 80156a0:	6a03      	ldr	r3, [r0, #32]
 80156a2:	8811      	ldrh	r1, [r2, #0]
 80156a4:	f023 0310 	bic.w	r3, r3, #16
 80156a8:	6203      	str	r3, [r0, #32]
 80156aa:	6983      	ldr	r3, [r0, #24]
 80156ac:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80156b0:	6183      	str	r3, [r0, #24]
 80156b2:	6a03      	ldr	r3, [r0, #32]
 80156b4:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156b8:	6203      	str	r3, [r0, #32]
 80156ba:	6a03      	ldr	r3, [r0, #32]
 80156bc:	8891      	ldrh	r1, [r2, #4]
 80156be:	f023 0320 	bic.w	r3, r3, #32
 80156c2:	6203      	str	r3, [r0, #32]
 80156c4:	6a03      	ldr	r3, [r0, #32]
 80156c6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156ca:	6203      	str	r3, [r0, #32]
 80156cc:	4b46      	ldr	r3, [pc, #280]	@ (80157e8 <timer_channel_output_config+0x1cc>)
 80156ce:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 80156d2:	4299      	cmp	r1, r3
 80156d4:	d1e3      	bne.n	801569e <timer_channel_output_config+0x82>
 80156d6:	6a03      	ldr	r3, [r0, #32]
 80156d8:	8851      	ldrh	r1, [r2, #2]
 80156da:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80156de:	6203      	str	r3, [r0, #32]
 80156e0:	6a03      	ldr	r3, [r0, #32]
 80156e2:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156e6:	6203      	str	r3, [r0, #32]
 80156e8:	6a03      	ldr	r3, [r0, #32]
 80156ea:	88d1      	ldrh	r1, [r2, #6]
 80156ec:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80156f0:	6203      	str	r3, [r0, #32]
 80156f2:	6a03      	ldr	r3, [r0, #32]
 80156f4:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80156f8:	6203      	str	r3, [r0, #32]
 80156fa:	6843      	ldr	r3, [r0, #4]
 80156fc:	8911      	ldrh	r1, [r2, #8]
 80156fe:	8952      	ldrh	r2, [r2, #10]
 8015700:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8015704:	6043      	str	r3, [r0, #4]
 8015706:	6843      	ldr	r3, [r0, #4]
 8015708:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 801570c:	6043      	str	r3, [r0, #4]
 801570e:	6843      	ldr	r3, [r0, #4]
 8015710:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8015714:	6043      	str	r3, [r0, #4]
 8015716:	6843      	ldr	r3, [r0, #4]
 8015718:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 801571c:	e7be      	b.n	801569c <timer_channel_output_config+0x80>
 801571e:	6a03      	ldr	r3, [r0, #32]
 8015720:	8811      	ldrh	r1, [r2, #0]
 8015722:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015726:	6203      	str	r3, [r0, #32]
 8015728:	69c3      	ldr	r3, [r0, #28]
 801572a:	f023 0303 	bic.w	r3, r3, #3
 801572e:	61c3      	str	r3, [r0, #28]
 8015730:	6a03      	ldr	r3, [r0, #32]
 8015732:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015736:	6203      	str	r3, [r0, #32]
 8015738:	6a03      	ldr	r3, [r0, #32]
 801573a:	8891      	ldrh	r1, [r2, #4]
 801573c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8015740:	6203      	str	r3, [r0, #32]
 8015742:	6a03      	ldr	r3, [r0, #32]
 8015744:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015748:	6203      	str	r3, [r0, #32]
 801574a:	4b27      	ldr	r3, [pc, #156]	@ (80157e8 <timer_channel_output_config+0x1cc>)
 801574c:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 8015750:	4299      	cmp	r1, r3
 8015752:	d1a4      	bne.n	801569e <timer_channel_output_config+0x82>
 8015754:	6a03      	ldr	r3, [r0, #32]
 8015756:	8851      	ldrh	r1, [r2, #2]
 8015758:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801575c:	6203      	str	r3, [r0, #32]
 801575e:	6a03      	ldr	r3, [r0, #32]
 8015760:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015764:	6203      	str	r3, [r0, #32]
 8015766:	6a03      	ldr	r3, [r0, #32]
 8015768:	88d1      	ldrh	r1, [r2, #6]
 801576a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 801576e:	6203      	str	r3, [r0, #32]
 8015770:	6a03      	ldr	r3, [r0, #32]
 8015772:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8015776:	6203      	str	r3, [r0, #32]
 8015778:	6843      	ldr	r3, [r0, #4]
 801577a:	8911      	ldrh	r1, [r2, #8]
 801577c:	8952      	ldrh	r2, [r2, #10]
 801577e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8015782:	6043      	str	r3, [r0, #4]
 8015784:	6843      	ldr	r3, [r0, #4]
 8015786:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 801578a:	6043      	str	r3, [r0, #4]
 801578c:	6843      	ldr	r3, [r0, #4]
 801578e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8015792:	6043      	str	r3, [r0, #4]
 8015794:	6843      	ldr	r3, [r0, #4]
 8015796:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 801579a:	e77f      	b.n	801569c <timer_channel_output_config+0x80>
 801579c:	6a03      	ldr	r3, [r0, #32]
 801579e:	8811      	ldrh	r1, [r2, #0]
 80157a0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80157a4:	6203      	str	r3, [r0, #32]
 80157a6:	69c3      	ldr	r3, [r0, #28]
 80157a8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80157ac:	61c3      	str	r3, [r0, #28]
 80157ae:	6a03      	ldr	r3, [r0, #32]
 80157b0:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80157b4:	6203      	str	r3, [r0, #32]
 80157b6:	6a03      	ldr	r3, [r0, #32]
 80157b8:	8891      	ldrh	r1, [r2, #4]
 80157ba:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80157be:	6203      	str	r3, [r0, #32]
 80157c0:	6a03      	ldr	r3, [r0, #32]
 80157c2:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80157c6:	6203      	str	r3, [r0, #32]
 80157c8:	4b07      	ldr	r3, [pc, #28]	@ (80157e8 <timer_channel_output_config+0x1cc>)
 80157ca:	f420 6180 	bic.w	r1, r0, #1024	@ 0x400
 80157ce:	4299      	cmp	r1, r3
 80157d0:	f47f af65 	bne.w	801569e <timer_channel_output_config+0x82>
 80157d4:	6843      	ldr	r3, [r0, #4]
 80157d6:	8912      	ldrh	r2, [r2, #8]
 80157d8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80157dc:	6043      	str	r3, [r0, #4]
 80157de:	6843      	ldr	r3, [r0, #4]
 80157e0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80157e4:	e75a      	b.n	801569c <timer_channel_output_config+0x80>
 80157e6:	bf00      	nop
 80157e8:	40010000 	andmi	r0, r1, r0

080157ec <timer_channel_output_mode_config>:
 80157ec:	2903      	cmp	r1, #3
 80157ee:	d81a      	bhi.n	8015826 <timer_channel_output_mode_config+0x3a>
 80157f0:	e8df f001 	tbb	[pc, r1]
 80157f4:	1a120a02 	bne	8498004 <_sidata+0x47d690>
 80157f8:	6983      	ldr	r3, [r0, #24]
 80157fa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80157fe:	6183      	str	r3, [r0, #24]
 8015800:	6983      	ldr	r3, [r0, #24]
 8015802:	4313      	orrs	r3, r2
 8015804:	6183      	str	r3, [r0, #24]
 8015806:	4770      	bx	lr
 8015808:	6983      	ldr	r3, [r0, #24]
 801580a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801580e:	6183      	str	r3, [r0, #24]
 8015810:	6983      	ldr	r3, [r0, #24]
 8015812:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015816:	e7f5      	b.n	8015804 <timer_channel_output_mode_config+0x18>
 8015818:	69c3      	ldr	r3, [r0, #28]
 801581a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801581e:	61c3      	str	r3, [r0, #28]
 8015820:	69c3      	ldr	r3, [r0, #28]
 8015822:	4313      	orrs	r3, r2
 8015824:	61c3      	str	r3, [r0, #28]
 8015826:	4770      	bx	lr
 8015828:	69c3      	ldr	r3, [r0, #28]
 801582a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801582e:	61c3      	str	r3, [r0, #28]
 8015830:	69c3      	ldr	r3, [r0, #28]
 8015832:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8015836:	e7f5      	b.n	8015824 <timer_channel_output_mode_config+0x38>

08015838 <timer_channel_output_pulse_value_config>:
 8015838:	2903      	cmp	r1, #3
 801583a:	d80a      	bhi.n	8015852 <timer_channel_output_pulse_value_config+0x1a>
 801583c:	e8df f001 	tbb	[pc, r1]
 8015840:	08060402 	stmdaeq	r6, {r1, sl}
 8015844:	6342      	str	r2, [r0, #52]	@ 0x34
 8015846:	4770      	bx	lr
 8015848:	6382      	str	r2, [r0, #56]	@ 0x38
 801584a:	4770      	bx	lr
 801584c:	63c2      	str	r2, [r0, #60]	@ 0x3c
 801584e:	4770      	bx	lr
 8015850:	6402      	str	r2, [r0, #64]	@ 0x40
 8015852:	4770      	bx	lr

08015854 <timer_channel_output_shadow_config>:
 8015854:	2903      	cmp	r1, #3
 8015856:	d81a      	bhi.n	801588e <timer_channel_output_shadow_config+0x3a>
 8015858:	e8df f001 	tbb	[pc, r1]
 801585c:	1a120a02 	bne	849806c <_sidata+0x47d6f8>
 8015860:	6983      	ldr	r3, [r0, #24]
 8015862:	f023 0308 	bic.w	r3, r3, #8
 8015866:	6183      	str	r3, [r0, #24]
 8015868:	6983      	ldr	r3, [r0, #24]
 801586a:	4313      	orrs	r3, r2
 801586c:	6183      	str	r3, [r0, #24]
 801586e:	4770      	bx	lr
 8015870:	6983      	ldr	r3, [r0, #24]
 8015872:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8015876:	6183      	str	r3, [r0, #24]
 8015878:	6983      	ldr	r3, [r0, #24]
 801587a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801587e:	e7f5      	b.n	801586c <timer_channel_output_shadow_config+0x18>
 8015880:	69c3      	ldr	r3, [r0, #28]
 8015882:	f023 0308 	bic.w	r3, r3, #8
 8015886:	61c3      	str	r3, [r0, #28]
 8015888:	69c3      	ldr	r3, [r0, #28]
 801588a:	4313      	orrs	r3, r2
 801588c:	61c3      	str	r3, [r0, #28]
 801588e:	4770      	bx	lr
 8015890:	69c3      	ldr	r3, [r0, #28]
 8015892:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8015896:	61c3      	str	r3, [r0, #28]
 8015898:	69c3      	ldr	r3, [r0, #28]
 801589a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801589e:	e7f5      	b.n	801588c <timer_channel_output_shadow_config+0x38>

080158a0 <timer_input_trigger_source_select>:
 80158a0:	6883      	ldr	r3, [r0, #8]
 80158a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80158a6:	6083      	str	r3, [r0, #8]
 80158a8:	6883      	ldr	r3, [r0, #8]
 80158aa:	430b      	orrs	r3, r1
 80158ac:	6083      	str	r3, [r0, #8]
 80158ae:	4770      	bx	lr

080158b0 <timer_master_output_trigger_source_select>:
 80158b0:	6843      	ldr	r3, [r0, #4]
 80158b2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80158b6:	6043      	str	r3, [r0, #4]
 80158b8:	6843      	ldr	r3, [r0, #4]
 80158ba:	430b      	orrs	r3, r1
 80158bc:	6043      	str	r3, [r0, #4]
 80158be:	4770      	bx	lr

080158c0 <timer_slave_mode_select>:
 80158c0:	6883      	ldr	r3, [r0, #8]
 80158c2:	f023 0307 	bic.w	r3, r3, #7
 80158c6:	6083      	str	r3, [r0, #8]
 80158c8:	6883      	ldr	r3, [r0, #8]
 80158ca:	430b      	orrs	r3, r1
 80158cc:	6083      	str	r3, [r0, #8]
 80158ce:	4770      	bx	lr

080158d0 <timer_master_slave_mode_config>:
 80158d0:	b921      	cbnz	r1, 80158dc <timer_master_slave_mode_config+0xc>
 80158d2:	6883      	ldr	r3, [r0, #8]
 80158d4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80158d8:	6083      	str	r3, [r0, #8]
 80158da:	4770      	bx	lr
 80158dc:	2901      	cmp	r1, #1
 80158de:	d1fc      	bne.n	80158da <timer_master_slave_mode_config+0xa>
 80158e0:	6883      	ldr	r3, [r0, #8]
 80158e2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80158e6:	e7f7      	b.n	80158d8 <timer_master_slave_mode_config+0x8>

080158e8 <timer_interrupt_enable>:
 80158e8:	68c3      	ldr	r3, [r0, #12]
 80158ea:	430b      	orrs	r3, r1
 80158ec:	60c3      	str	r3, [r0, #12]
 80158ee:	4770      	bx	lr

080158f0 <timer_interrupt_flag_clear>:
 80158f0:	43c9      	mvns	r1, r1
 80158f2:	6101      	str	r1, [r0, #16]
 80158f4:	4770      	bx	lr
	...

080158f8 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 80158f8:	b110      	cbz	r0, 8015900 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x8>
 80158fa:	2801      	cmp	r0, #1
 80158fc:	d004      	beq.n	8015908 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x10>
 80158fe:	4770      	bx	lr
 8015900:	4b03      	ldr	r3, [pc, #12]	@ (8015910 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 8015902:	f8c3 1850 	str.w	r1, [r3, #2128]	@ 0x850
 8015906:	4770      	bx	lr
 8015908:	4b01      	ldr	r3, [pc, #4]	@ (8015910 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 801590a:	f8c3 1854 	str.w	r1, [r3, #2132]	@ 0x854
 801590e:	4770      	bx	lr
 8015910:	40002000 	andmi	r2, r0, r0

08015914 <bkp_data_read(bkp_data_register_enum)>:
 8015914:	b118      	cbz	r0, 801591e <bkp_data_read(bkp_data_register_enum)+0xa>
 8015916:	2801      	cmp	r0, #1
 8015918:	d006      	beq.n	8015928 <bkp_data_read(bkp_data_register_enum)+0x14>
 801591a:	2000      	movs	r0, #0
 801591c:	4770      	bx	lr
 801591e:	4b04      	ldr	r3, [pc, #16]	@ (8015930 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8015920:	f8d3 0850 	ldr.w	r0, [r3, #2128]	@ 0x850
 8015924:	b280      	uxth	r0, r0
 8015926:	4770      	bx	lr
 8015928:	4b01      	ldr	r3, [pc, #4]	@ (8015930 <bkp_data_read(bkp_data_register_enum)+0x1c>)
 801592a:	f8d3 0854 	ldr.w	r0, [r3, #2132]	@ 0x854
 801592e:	e7f9      	b.n	8015924 <bkp_data_read(bkp_data_register_enum)+0x10>
 8015930:	40002000 	andmi	r2, r0, r0

08015934 <mac_address_get(unsigned char*)>:
 8015934:	4a07      	ldr	r2, [pc, #28]	@ (8015954 <mac_address_get(unsigned char*)+0x20>)
 8015936:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 801593a:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	@ 0xa14
 801593e:	7042      	strb	r2, [r0, #1]
 8015940:	0e1a      	lsrs	r2, r3, #24
 8015942:	7082      	strb	r2, [r0, #2]
 8015944:	0c1a      	lsrs	r2, r3, #16
 8015946:	2102      	movs	r1, #2
 8015948:	70c2      	strb	r2, [r0, #3]
 801594a:	0a1a      	lsrs	r2, r3, #8
 801594c:	7001      	strb	r1, [r0, #0]
 801594e:	7102      	strb	r2, [r0, #4]
 8015950:	7143      	strb	r3, [r0, #5]
 8015952:	4770      	bx	lr
 8015954:	1fff7000 	svcne	0x00ff7000

08015958 <TIMER6_IRQHandler>:
 8015958:	4b06      	ldr	r3, [pc, #24]	@ (8015974 <TIMER6_IRQHandler+0x1c>)
 801595a:	f8d3 3410 	ldr.w	r3, [r3, #1040]	@ 0x410
 801595e:	07da      	lsls	r2, r3, #31
 8015960:	bf41      	itttt	mi
 8015962:	4905      	ldrmi	r1, [pc, #20]	@ (8015978 <TIMER6_IRQHandler+0x20>)
 8015964:	684a      	ldrmi	r2, [r1, #4]
 8015966:	3201      	addmi	r2, #1
 8015968:	604a      	strmi	r2, [r1, #4]
 801596a:	4a02      	ldr	r2, [pc, #8]	@ (8015974 <TIMER6_IRQHandler+0x1c>)
 801596c:	43db      	mvns	r3, r3
 801596e:	f8c2 3410 	str.w	r3, [r2, #1040]	@ 0x410
 8015972:	4770      	bx	lr
 8015974:	40001000 	andmi	r1, r0, r0
 8015978:	200145c0 	andcs	r4, r1, r0, asr #11

0801597c <timer6_config()>:
 801597c:	b530      	push	{r4, r5, lr}
 801597e:	4b19      	ldr	r3, [pc, #100]	@ (80159e4 <timer6_config()+0x68>)
 8015980:	4c19      	ldr	r4, [pc, #100]	@ (80159e8 <timer6_config()+0x6c>)
 8015982:	b085      	sub	sp, #20
 8015984:	2500      	movs	r5, #0
 8015986:	f241 0005 	movw	r0, #4101	@ 0x1005
 801598a:	605d      	str	r5, [r3, #4]
 801598c:	f7ff fc9c 	bl	80152c8 <rcu_periph_clock_enable>
 8015990:	4620      	mov	r0, r4
 8015992:	f7ff fd55 	bl	8015440 <timer_deinit>
 8015996:	4668      	mov	r0, sp
 8015998:	f7ff fdf8 	bl	801558c <timer_struct_para_init>
 801599c:	f645 52bf 	movw	r2, #23999	@ 0x5dbf
 80159a0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80159a4:	4669      	mov	r1, sp
 80159a6:	4620      	mov	r0, r4
 80159a8:	f8ad 2000 	strh.w	r2, [sp]
 80159ac:	9302      	str	r3, [sp, #8]
 80159ae:	f7ff fdf5 	bl	801559c <timer_init>
 80159b2:	4629      	mov	r1, r5
 80159b4:	4620      	mov	r0, r4
 80159b6:	f7ff fe2a 	bl	801560e <timer_counter_value_config>
 80159ba:	4620      	mov	r0, r4
 80159bc:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80159c0:	f7ff ff96 	bl	80158f0 <timer_interrupt_flag_clear>
 80159c4:	2101      	movs	r1, #1
 80159c6:	4620      	mov	r0, r4
 80159c8:	f7ff ff8e 	bl	80158e8 <timer_interrupt_enable>
 80159cc:	4b07      	ldr	r3, [pc, #28]	@ (80159ec <timer6_config()+0x70>)
 80159ce:	22f0      	movs	r2, #240	@ 0xf0
 80159d0:	f883 2337 	strb.w	r2, [r3, #823]	@ 0x337
 80159d4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 80159d8:	605a      	str	r2, [r3, #4]
 80159da:	4620      	mov	r0, r4
 80159dc:	f7ff fe12 	bl	8015604 <timer_enable>
 80159e0:	b005      	add	sp, #20
 80159e2:	bd30      	pop	{r4, r5, pc}
 80159e4:	200145c0 	andcs	r4, r1, r0, asr #11
 80159e8:	40001400 	andmi	r1, r0, r0, lsl #8
 80159ec:	e000e100 	and	lr, r0, r0, lsl #2

080159f0 <udelay_init()>:
 80159f0:	4a07      	ldr	r2, [pc, #28]	@ (8015a10 <udelay_init()+0x20>)
 80159f2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 80159f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80159fa:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
 80159fe:	4b05      	ldr	r3, [pc, #20]	@ (8015a14 <udelay_init()+0x24>)
 8015a00:	2200      	movs	r2, #0
 8015a02:	605a      	str	r2, [r3, #4]
 8015a04:	681a      	ldr	r2, [r3, #0]
 8015a06:	f042 0201 	orr.w	r2, r2, #1
 8015a0a:	601a      	str	r2, [r3, #0]
 8015a0c:	4770      	bx	lr
 8015a0e:	bf00      	nop
 8015a10:	e000ed00 	and	lr, r0, r0, lsl #26
 8015a14:	e0001000 	and	r1, r0, r0

08015a18 <udelay(unsigned long, unsigned long)>:
 8015a18:	23f0      	movs	r3, #240	@ 0xf0
 8015a1a:	b530      	push	{r4, r5, lr}
 8015a1c:	4358      	muls	r0, r3
 8015a1e:	b909      	cbnz	r1, 8015a24 <udelay(unsigned long, unsigned long)+0xc>
 8015a20:	4b08      	ldr	r3, [pc, #32]	@ (8015a44 <udelay(unsigned long, unsigned long)+0x2c>)
 8015a22:	6859      	ldr	r1, [r3, #4]
 8015a24:	4c07      	ldr	r4, [pc, #28]	@ (8015a44 <udelay(unsigned long, unsigned long)+0x2c>)
 8015a26:	2300      	movs	r3, #0
 8015a28:	6862      	ldr	r2, [r4, #4]
 8015a2a:	4291      	cmp	r1, r2
 8015a2c:	d0fc      	beq.n	8015a28 <udelay(unsigned long, unsigned long)+0x10>
 8015a2e:	bf2a      	itet	cs
 8015a30:	f102 35ff 	addcs.w	r5, r2, #4294967295	@ 0xffffffff
 8015a34:	189b      	addcc	r3, r3, r2
 8015a36:	195b      	addcs	r3, r3, r5
 8015a38:	1a5b      	subs	r3, r3, r1
 8015a3a:	4283      	cmp	r3, r0
 8015a3c:	d300      	bcc.n	8015a40 <udelay(unsigned long, unsigned long)+0x28>
 8015a3e:	bd30      	pop	{r4, r5, pc}
 8015a40:	4611      	mov	r1, r2
 8015a42:	e7f1      	b.n	8015a28 <udelay(unsigned long, unsigned long)+0x10>
 8015a44:	e0001000 	and	r1, r0, r0

08015a48 <systick_config>:
 8015a48:	4b0c      	ldr	r3, [pc, #48]	@ (8015a7c <systick_config+0x34>)
 8015a4a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8015a4e:	681b      	ldr	r3, [r3, #0]
 8015a50:	fbb3 f3f2 	udiv	r3, r3, r2
 8015a54:	3b01      	subs	r3, #1
 8015a56:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8015a5a:	d20d      	bcs.n	8015a78 <systick_config+0x30>
 8015a5c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8015a60:	21f0      	movs	r1, #240	@ 0xf0
 8015a62:	6153      	str	r3, [r2, #20]
 8015a64:	4b06      	ldr	r3, [pc, #24]	@ (8015a80 <systick_config+0x38>)
 8015a66:	2000      	movs	r0, #0
 8015a68:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8015a6c:	6190      	str	r0, [r2, #24]
 8015a6e:	2007      	movs	r0, #7
 8015a70:	6110      	str	r0, [r2, #16]
 8015a72:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8015a76:	4770      	bx	lr
 8015a78:	e7fe      	b.n	8015a78 <systick_config+0x30>
 8015a7a:	bf00      	nop
 8015a7c:	20000000 	andcs	r0, r0, r0
 8015a80:	e000ed00 	and	lr, r0, r0, lsl #26

08015a84 <SysTick_Handler>:
 8015a84:	4a02      	ldr	r2, [pc, #8]	@ (8015a90 <SysTick_Handler+0xc>)
 8015a86:	6813      	ldr	r3, [r2, #0]
 8015a88:	3301      	adds	r3, #1
 8015a8a:	6013      	str	r3, [r2, #0]
 8015a8c:	4770      	bx	lr
 8015a8e:	bf00      	nop
 8015a90:	200145c8 	andcs	r4, r1, r8, asr #11

08015a94 <gd32_adc_init()>:
 8015a94:	b510      	push	{r4, lr}
 8015a96:	f241 1008 	movw	r0, #4360	@ 0x1108
 8015a9a:	4c24      	ldr	r4, [pc, #144]	@ (8015b2c <gd32_adc_init()+0x98>)
 8015a9c:	f7ff fc14 	bl	80152c8 <rcu_periph_clock_enable>
 8015aa0:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 8015aa4:	f000 fa22 	bl	8015eec <adc_clock_config>
 8015aa8:	4620      	mov	r0, r4
 8015aaa:	2203      	movs	r2, #3
 8015aac:	2102      	movs	r1, #2
 8015aae:	f000 fa9f 	bl	8015ff0 <adc_channel_length_config>
 8015ab2:	4620      	mov	r0, r4
 8015ab4:	2306      	movs	r3, #6
 8015ab6:	2210      	movs	r2, #16
 8015ab8:	2100      	movs	r1, #0
 8015aba:	f000 fab6 	bl	801602a <adc_inserted_channel_config>
 8015abe:	4620      	mov	r0, r4
 8015ac0:	2306      	movs	r3, #6
 8015ac2:	2211      	movs	r2, #17
 8015ac4:	2101      	movs	r1, #1
 8015ac6:	f000 fab0 	bl	801602a <adc_inserted_channel_config>
 8015aca:	2306      	movs	r3, #6
 8015acc:	4620      	mov	r0, r4
 8015ace:	2212      	movs	r2, #18
 8015ad0:	2102      	movs	r1, #2
 8015ad2:	f000 faaa 	bl	801602a <adc_inserted_channel_config>
 8015ad6:	2200      	movs	r2, #0
 8015ad8:	4620      	mov	r0, r4
 8015ada:	2102      	movs	r1, #2
 8015adc:	f000 fad5 	bl	801608a <adc_external_trigger_config>
 8015ae0:	4620      	mov	r0, r4
 8015ae2:	2100      	movs	r1, #0
 8015ae4:	f000 fa3a 	bl	8015f5c <adc_data_alignment_config>
 8015ae8:	2201      	movs	r2, #1
 8015aea:	4620      	mov	r0, r4
 8015aec:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8015af0:	f000 fa0c 	bl	8015f0c <adc_special_function_config>
 8015af4:	2101      	movs	r1, #1
 8015af6:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 8015afa:	f000 fa51 	bl	8015fa0 <adc_channel_16_to_18>
 8015afe:	2101      	movs	r1, #1
 8015b00:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8015b04:	f000 fa4c 	bl	8015fa0 <adc_channel_16_to_18>
 8015b08:	4620      	mov	r0, r4
 8015b0a:	f000 fa30 	bl	8015f6e <adc_enable>
 8015b0e:	2100      	movs	r1, #0
 8015b10:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8015b14:	f7ff ff80 	bl	8015a18 <udelay(unsigned long, unsigned long)>
 8015b18:	4620      	mov	r0, r4
 8015b1a:	f000 fa30 	bl	8015f7e <adc_calibration_enable>
 8015b1e:	4620      	mov	r0, r4
 8015b20:	2102      	movs	r1, #2
 8015b22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b26:	f000 bac6 	b.w	80160b6 <adc_software_trigger_enable>
 8015b2a:	bf00      	nop
 8015b2c:	40012000 	andmi	r2, r1, r0

08015b30 <dma::memcpy32_init()>:
 8015b30:	b510      	push	{r4, lr}
 8015b32:	4c14      	ldr	r4, [pc, #80]	@ (8015b84 <dma::memcpy32_init()+0x54>)
 8015b34:	b08e      	sub	sp, #56	@ 0x38
 8015b36:	f640 4016 	movw	r0, #3094	@ 0xc16
 8015b3a:	f7ff fbc5 	bl	80152c8 <rcu_periph_clock_enable>
 8015b3e:	4620      	mov	r0, r4
 8015b40:	2100      	movs	r1, #0
 8015b42:	f7fe ffa5 	bl	8014a90 <dma_deinit>
 8015b46:	2100      	movs	r1, #0
 8015b48:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8015b4c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8015b50:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8015b54:	e9cd 3105 	strd	r3, r1, [sp, #20]
 8015b58:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8015b5c:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 8015b60:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015b64:	2003      	movs	r0, #3
 8015b66:	2301      	movs	r3, #1
 8015b68:	e9cd 0309 	strd	r0, r3, [sp, #36]	@ 0x24
 8015b6c:	2380      	movs	r3, #128	@ 0x80
 8015b6e:	e9cd 310b 	strd	r3, r1, [sp, #44]	@ 0x2c
 8015b72:	aa01      	add	r2, sp, #4
 8015b74:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8015b78:	4620      	mov	r0, r4
 8015b7a:	930d      	str	r3, [sp, #52]	@ 0x34
 8015b7c:	f7ff f800 	bl	8014b80 <dma_multi_data_mode_init>
 8015b80:	b00e      	add	sp, #56	@ 0x38
 8015b82:	bd10      	pop	{r4, pc}
 8015b84:	40026400 	andmi	r6, r2, r0, lsl #8

08015b88 <send_stop() [clone .isra.0]>:
 8015b88:	b508      	push	{r3, lr}
 8015b8a:	4806      	ldr	r0, [pc, #24]	@ (8015ba4 <send_stop() [clone .isra.0]+0x1c>)
 8015b8c:	f000 fb22 	bl	80161d4 <i2c_stop_on_bus>
 8015b90:	4905      	ldr	r1, [pc, #20]	@ (8015ba8 <send_stop() [clone .isra.0]+0x20>)
 8015b92:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8015b96:	f8d1 2400 	ldr.w	r2, [r1, #1024]	@ 0x400
 8015b9a:	0592      	lsls	r2, r2, #22
 8015b9c:	d501      	bpl.n	8015ba2 <send_stop() [clone .isra.0]+0x1a>
 8015b9e:	3b01      	subs	r3, #1
 8015ba0:	d1f9      	bne.n	8015b96 <send_stop() [clone .isra.0]+0xe>
 8015ba2:	bd08      	pop	{r3, pc}
 8015ba4:	40005400 	andmi	r5, r0, r0, lsl #8
 8015ba8:	40005000 	andmi	r5, r0, r0

08015bac <gd32_i2c_begin>:
 8015bac:	b510      	push	{r4, lr}
 8015bae:	f241 0015 	movw	r0, #4117	@ 0x1015
 8015bb2:	4c22      	ldr	r4, [pc, #136]	@ (8015c3c <gd32_i2c_begin+0x90>)
 8015bb4:	f7ff fb88 	bl	80152c8 <rcu_periph_clock_enable>
 8015bb8:	f640 4001 	movw	r0, #3073	@ 0xc01
 8015bbc:	f7ff fb84 	bl	80152c8 <rcu_periph_clock_enable>
 8015bc0:	f640 4001 	movw	r0, #3073	@ 0xc01
 8015bc4:	f7ff fb80 	bl	80152c8 <rcu_periph_clock_enable>
 8015bc8:	4620      	mov	r0, r4
 8015bca:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015bce:	2104      	movs	r1, #4
 8015bd0:	f7ff fb36 	bl	8015240 <gpio_af_set>
 8015bd4:	4620      	mov	r0, r4
 8015bd6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8015bda:	2201      	movs	r2, #1
 8015bdc:	2102      	movs	r1, #2
 8015bde:	f7ff faf1 	bl	80151c4 <gpio_mode_set>
 8015be2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8015be6:	4620      	mov	r0, r4
 8015be8:	2202      	movs	r2, #2
 8015bea:	2101      	movs	r1, #1
 8015bec:	f7ff fb0c 	bl	8015208 <gpio_output_options_set>
 8015bf0:	4620      	mov	r0, r4
 8015bf2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8015bf6:	2104      	movs	r1, #4
 8015bf8:	f7ff fb22 	bl	8015240 <gpio_af_set>
 8015bfc:	4620      	mov	r0, r4
 8015bfe:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015c02:	2201      	movs	r2, #1
 8015c04:	2102      	movs	r1, #2
 8015c06:	f7ff fadd 	bl	80151c4 <gpio_mode_set>
 8015c0a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015c0e:	4620      	mov	r0, r4
 8015c10:	2202      	movs	r2, #2
 8015c12:	f5a4 34d8 	sub.w	r4, r4, #110592	@ 0x1b000
 8015c16:	2101      	movs	r1, #1
 8015c18:	f7ff faf6 	bl	8015208 <gpio_output_options_set>
 8015c1c:	4908      	ldr	r1, [pc, #32]	@ (8015c40 <gd32_i2c_begin+0x94>)
 8015c1e:	4620      	mov	r0, r4
 8015c20:	2200      	movs	r2, #0
 8015c22:	f000 fa57 	bl	80160d4 <i2c_clock_config>
 8015c26:	4620      	mov	r0, r4
 8015c28:	f000 faca 	bl	80161c0 <i2c_enable>
 8015c2c:	4620      	mov	r0, r4
 8015c2e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8015c32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c36:	f000 baaf 	b.w	8016198 <i2c_ack_config>
 8015c3a:	bf00      	nop
 8015c3c:	40020400 	andmi	r0, r2, r0, lsl #8
 8015c40:	00061a80 	andeq	r1, r6, r0, lsl #21

08015c44 <gd32_i2c_set_baudrate>:
 8015c44:	4601      	mov	r1, r0
 8015c46:	2200      	movs	r2, #0
 8015c48:	4801      	ldr	r0, [pc, #4]	@ (8015c50 <gd32_i2c_set_baudrate+0xc>)
 8015c4a:	f000 ba43 	b.w	80160d4 <i2c_clock_config>
 8015c4e:	bf00      	nop
 8015c50:	40005400 	andmi	r5, r0, r0, lsl #8

08015c54 <gd32_i2c_set_address>:
 8015c54:	4b01      	ldr	r3, [pc, #4]	@ (8015c5c <gd32_i2c_set_address+0x8>)
 8015c56:	0040      	lsls	r0, r0, #1
 8015c58:	7018      	strb	r0, [r3, #0]
 8015c5a:	4770      	bx	lr
 8015c5c:	200145cc 	andcs	r4, r1, ip, asr #11

08015c60 <gd32_i2c_write>:
 8015c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c62:	4f30      	ldr	r7, [pc, #192]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015c64:	4604      	mov	r4, r0
 8015c66:	460d      	mov	r5, r1
 8015c68:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015c6c:	f240 6101 	movw	r1, #1537	@ 0x601
 8015c70:	4638      	mov	r0, r7
 8015c72:	f000 fab9 	bl	80161e8 <i2c_flag_get>
 8015c76:	bb90      	cbnz	r0, 8015cde <gd32_i2c_write+0x7e>
 8015c78:	482a      	ldr	r0, [pc, #168]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015c7a:	4f2a      	ldr	r7, [pc, #168]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015c7c:	f000 faa5 	bl	80161ca <i2c_start_on_bus>
 8015c80:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015c84:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8015c88:	4638      	mov	r0, r7
 8015c8a:	f000 faad 	bl	80161e8 <i2c_flag_get>
 8015c8e:	b370      	cbz	r0, 8015cee <gd32_i2c_write+0x8e>
 8015c90:	4b25      	ldr	r3, [pc, #148]	@ (8015d28 <gd32_i2c_write+0xc8>)
 8015c92:	4824      	ldr	r0, [pc, #144]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015c94:	7819      	ldrb	r1, [r3, #0]
 8015c96:	4f23      	ldr	r7, [pc, #140]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015c98:	f06f 0201 	mvn.w	r2, #1
 8015c9c:	f000 fa88 	bl	80161b0 <i2c_master_addressing>
 8015ca0:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015ca4:	f240 5101 	movw	r1, #1281	@ 0x501
 8015ca8:	4638      	mov	r0, r7
 8015caa:	f000 fa9d 	bl	80161e8 <i2c_flag_get>
 8015cae:	b308      	cbz	r0, 8015cf4 <gd32_i2c_write+0x94>
 8015cb0:	481c      	ldr	r0, [pc, #112]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015cb2:	4f1c      	ldr	r7, [pc, #112]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015cb4:	f240 5101 	movw	r1, #1281	@ 0x501
 8015cb8:	f000 fa9e 	bl	80161f8 <i2c_flag_clear>
 8015cbc:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015cc0:	f240 5107 	movw	r1, #1287	@ 0x507
 8015cc4:	4638      	mov	r0, r7
 8015cc6:	f000 fa8f 	bl	80161e8 <i2c_flag_get>
 8015cca:	2801      	cmp	r0, #1
 8015ccc:	d115      	bne.n	8015cfa <gd32_i2c_write+0x9a>
 8015cce:	4f15      	ldr	r7, [pc, #84]	@ (8015d24 <gd32_i2c_write+0xc4>)
 8015cd0:	4425      	add	r5, r4
 8015cd2:	42ac      	cmp	r4, r5
 8015cd4:	d114      	bne.n	8015d00 <gd32_i2c_write+0xa0>
 8015cd6:	f7ff ff57 	bl	8015b88 <send_stop() [clone .isra.0]>
 8015cda:	2000      	movs	r0, #0
 8015cdc:	e005      	b.n	8015cea <gd32_i2c_write+0x8a>
 8015cde:	3e01      	subs	r6, #1
 8015ce0:	d1c4      	bne.n	8015c6c <gd32_i2c_write+0xc>
 8015ce2:	f7ff ff51 	bl	8015b88 <send_stop() [clone .isra.0]>
 8015ce6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8015cea:	4240      	negs	r0, r0
 8015cec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cee:	3e01      	subs	r6, #1
 8015cf0:	d1c8      	bne.n	8015c84 <gd32_i2c_write+0x24>
 8015cf2:	e7f6      	b.n	8015ce2 <gd32_i2c_write+0x82>
 8015cf4:	3e01      	subs	r6, #1
 8015cf6:	d1d5      	bne.n	8015ca4 <gd32_i2c_write+0x44>
 8015cf8:	e7f3      	b.n	8015ce2 <gd32_i2c_write+0x82>
 8015cfa:	3e01      	subs	r6, #1
 8015cfc:	d1e0      	bne.n	8015cc0 <gd32_i2c_write+0x60>
 8015cfe:	e7f0      	b.n	8015ce2 <gd32_i2c_write+0x82>
 8015d00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015d04:	4638      	mov	r0, r7
 8015d06:	f000 fa6a 	bl	80161de <i2c_data_transmit>
 8015d0a:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8015d0e:	f240 5102 	movw	r1, #1282	@ 0x502
 8015d12:	4638      	mov	r0, r7
 8015d14:	f000 fa68 	bl	80161e8 <i2c_flag_get>
 8015d18:	2800      	cmp	r0, #0
 8015d1a:	d1da      	bne.n	8015cd2 <gd32_i2c_write+0x72>
 8015d1c:	3e01      	subs	r6, #1
 8015d1e:	d1f6      	bne.n	8015d0e <gd32_i2c_write+0xae>
 8015d20:	e7df      	b.n	8015ce2 <gd32_i2c_write+0x82>
 8015d22:	bf00      	nop
 8015d24:	40005400 	andmi	r5, r0, r0, lsl #8
 8015d28:	200145cc 	andcs	r4, r1, ip, asr #11

08015d2c <gd32_i2c_read>:
 8015d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015d30:	4f4e      	ldr	r7, [pc, #312]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d32:	4680      	mov	r8, r0
 8015d34:	460c      	mov	r4, r1
 8015d36:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015d3a:	f240 6101 	movw	r1, #1537	@ 0x601
 8015d3e:	4638      	mov	r0, r7
 8015d40:	f000 fa52 	bl	80161e8 <i2c_flag_get>
 8015d44:	4606      	mov	r6, r0
 8015d46:	bb10      	cbnz	r0, 8015d8e <gd32_i2c_read+0x62>
 8015d48:	2c02      	cmp	r4, #2
 8015d4a:	d104      	bne.n	8015d56 <gd32_i2c_read+0x2a>
 8015d4c:	4847      	ldr	r0, [pc, #284]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d4e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8015d52:	f000 fa27 	bl	80161a4 <i2c_ackpos_config>
 8015d56:	4845      	ldr	r0, [pc, #276]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d58:	4f44      	ldr	r7, [pc, #272]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d5a:	f000 fa36 	bl	80161ca <i2c_start_on_bus>
 8015d5e:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015d62:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8015d66:	4638      	mov	r0, r7
 8015d68:	f000 fa3e 	bl	80161e8 <i2c_flag_get>
 8015d6c:	b1b8      	cbz	r0, 8015d9e <gd32_i2c_read+0x72>
 8015d6e:	4b40      	ldr	r3, [pc, #256]	@ (8015e70 <gd32_i2c_read+0x144>)
 8015d70:	483e      	ldr	r0, [pc, #248]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d72:	7819      	ldrb	r1, [r3, #0]
 8015d74:	2201      	movs	r2, #1
 8015d76:	f000 fa1b 	bl	80161b0 <i2c_master_addressing>
 8015d7a:	2c02      	cmp	r4, #2
 8015d7c:	d803      	bhi.n	8015d86 <gd32_i2c_read+0x5a>
 8015d7e:	483b      	ldr	r0, [pc, #236]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d80:	2100      	movs	r1, #0
 8015d82:	f000 fa09 	bl	8016198 <i2c_ack_config>
 8015d86:	4f39      	ldr	r7, [pc, #228]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015d88:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8015d8c:	e00c      	b.n	8015da8 <gd32_i2c_read+0x7c>
 8015d8e:	3d01      	subs	r5, #1
 8015d90:	d1d3      	bne.n	8015d3a <gd32_i2c_read+0xe>
 8015d92:	f7ff fef9 	bl	8015b88 <send_stop() [clone .isra.0]>
 8015d96:	2604      	movs	r6, #4
 8015d98:	4630      	mov	r0, r6
 8015d9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015d9e:	3d01      	subs	r5, #1
 8015da0:	d1df      	bne.n	8015d62 <gd32_i2c_read+0x36>
 8015da2:	e7f6      	b.n	8015d92 <gd32_i2c_read+0x66>
 8015da4:	3d01      	subs	r5, #1
 8015da6:	d0f4      	beq.n	8015d92 <gd32_i2c_read+0x66>
 8015da8:	f240 5101 	movw	r1, #1281	@ 0x501
 8015dac:	4638      	mov	r0, r7
 8015dae:	f000 fa1b 	bl	80161e8 <i2c_flag_get>
 8015db2:	2800      	cmp	r0, #0
 8015db4:	d0f6      	beq.n	8015da4 <gd32_i2c_read+0x78>
 8015db6:	482d      	ldr	r0, [pc, #180]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015db8:	f240 5101 	movw	r1, #1281	@ 0x501
 8015dbc:	f000 fa1c 	bl	80161f8 <i2c_flag_clear>
 8015dc0:	2c01      	cmp	r4, #1
 8015dc2:	d102      	bne.n	8015dca <gd32_i2c_read+0x9e>
 8015dc4:	4829      	ldr	r0, [pc, #164]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015dc6:	f000 fa05 	bl	80161d4 <i2c_stop_on_bus>
 8015dca:	4d28      	ldr	r5, [pc, #160]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015dcc:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8015dd0:	e022      	b.n	8015e18 <gd32_i2c_read+0xec>
 8015dd2:	2c03      	cmp	r4, #3
 8015dd4:	d134      	bne.n	8015e40 <gd32_i2c_read+0x114>
 8015dd6:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8015dda:	e002      	b.n	8015de2 <gd32_i2c_read+0xb6>
 8015ddc:	f1b9 0901 	subs.w	r9, r9, #1
 8015de0:	d0d7      	beq.n	8015d92 <gd32_i2c_read+0x66>
 8015de2:	f240 5102 	movw	r1, #1282	@ 0x502
 8015de6:	4628      	mov	r0, r5
 8015de8:	f000 f9fe 	bl	80161e8 <i2c_flag_get>
 8015dec:	2800      	cmp	r0, #0
 8015dee:	d0f5      	beq.n	8015ddc <gd32_i2c_read+0xb0>
 8015df0:	2100      	movs	r1, #0
 8015df2:	4628      	mov	r0, r5
 8015df4:	f000 f9d0 	bl	8016198 <i2c_ack_config>
 8015df8:	f240 5106 	movw	r1, #1286	@ 0x506
 8015dfc:	4628      	mov	r0, r5
 8015dfe:	f000 f9f3 	bl	80161e8 <i2c_flag_get>
 8015e02:	b138      	cbz	r0, 8015e14 <gd32_i2c_read+0xe8>
 8015e04:	4628      	mov	r0, r5
 8015e06:	f000 f9ec 	bl	80161e2 <i2c_data_receive>
 8015e0a:	f808 0b01 	strb.w	r0, [r8], #1
 8015e0e:	3c01      	subs	r4, #1
 8015e10:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8015e14:	3f01      	subs	r7, #1
 8015e16:	d0bc      	beq.n	8015d92 <gd32_i2c_read+0x66>
 8015e18:	2c00      	cmp	r4, #0
 8015e1a:	d1da      	bne.n	8015dd2 <gd32_i2c_read+0xa6>
 8015e1c:	4a15      	ldr	r2, [pc, #84]	@ (8015e74 <gd32_i2c_read+0x148>)
 8015e1e:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8015e22:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 8015e26:	f414 7400 	ands.w	r4, r4, #512	@ 0x200
 8015e2a:	d11c      	bne.n	8015e66 <gd32_i2c_read+0x13a>
 8015e2c:	480f      	ldr	r0, [pc, #60]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015e2e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8015e32:	f000 f9b1 	bl	8016198 <i2c_ack_config>
 8015e36:	480d      	ldr	r0, [pc, #52]	@ (8015e6c <gd32_i2c_read+0x140>)
 8015e38:	4621      	mov	r1, r4
 8015e3a:	f000 f9b3 	bl	80161a4 <i2c_ackpos_config>
 8015e3e:	e7ab      	b.n	8015d98 <gd32_i2c_read+0x6c>
 8015e40:	2c02      	cmp	r4, #2
 8015e42:	d1d9      	bne.n	8015df8 <gd32_i2c_read+0xcc>
 8015e44:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8015e48:	e002      	b.n	8015e50 <gd32_i2c_read+0x124>
 8015e4a:	f1b9 0901 	subs.w	r9, r9, #1
 8015e4e:	d0a0      	beq.n	8015d92 <gd32_i2c_read+0x66>
 8015e50:	f240 5102 	movw	r1, #1282	@ 0x502
 8015e54:	4628      	mov	r0, r5
 8015e56:	f000 f9c7 	bl	80161e8 <i2c_flag_get>
 8015e5a:	2800      	cmp	r0, #0
 8015e5c:	d0f5      	beq.n	8015e4a <gd32_i2c_read+0x11e>
 8015e5e:	4628      	mov	r0, r5
 8015e60:	f000 f9b8 	bl	80161d4 <i2c_stop_on_bus>
 8015e64:	e7c8      	b.n	8015df8 <gd32_i2c_read+0xcc>
 8015e66:	3b01      	subs	r3, #1
 8015e68:	d1db      	bne.n	8015e22 <gd32_i2c_read+0xf6>
 8015e6a:	e794      	b.n	8015d96 <gd32_i2c_read+0x6a>
 8015e6c:	40005400 	andmi	r5, r0, r0, lsl #8
 8015e70:	200145cc 	andcs	r4, r1, ip, asr #11
 8015e74:	40005000 	andmi	r5, r0, r0

08015e78 <uart0_init>:
 8015e78:	b507      	push	{r0, r1, r2, lr}
 8015e7a:	2301      	movs	r3, #1
 8015e7c:	9300      	str	r3, [sp, #0]
 8015e7e:	4805      	ldr	r0, [pc, #20]	@ (8015e94 <uart0_init+0x1c>)
 8015e80:	2300      	movs	r3, #0
 8015e82:	2208      	movs	r2, #8
 8015e84:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8015e88:	f000 faae 	bl	80163e8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 8015e8c:	b003      	add	sp, #12
 8015e8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8015e92:	bf00      	nop
 8015e94:	40011000 	andmi	r1, r1, r0

08015e98 <uart0_putc>:
 8015e98:	280a      	cmp	r0, #10
 8015e9a:	b570      	push	{r4, r5, r6, lr}
 8015e9c:	4d0a      	ldr	r5, [pc, #40]	@ (8015ec8 <uart0_putc+0x30>)
 8015e9e:	4604      	mov	r4, r0
 8015ea0:	d107      	bne.n	8015eb2 <uart0_putc+0x1a>
 8015ea2:	2107      	movs	r1, #7
 8015ea4:	4628      	mov	r0, r5
 8015ea6:	f000 fa97 	bl	80163d8 <usart_flag_get>
 8015eaa:	2800      	cmp	r0, #0
 8015eac:	d0f9      	beq.n	8015ea2 <uart0_putc+0xa>
 8015eae:	230d      	movs	r3, #13
 8015eb0:	606b      	str	r3, [r5, #4]
 8015eb2:	4e05      	ldr	r6, [pc, #20]	@ (8015ec8 <uart0_putc+0x30>)
 8015eb4:	2107      	movs	r1, #7
 8015eb6:	4630      	mov	r0, r6
 8015eb8:	f000 fa8e 	bl	80163d8 <usart_flag_get>
 8015ebc:	2800      	cmp	r0, #0
 8015ebe:	d0f9      	beq.n	8015eb4 <uart0_putc+0x1c>
 8015ec0:	b2e4      	uxtb	r4, r4
 8015ec2:	606c      	str	r4, [r5, #4]
 8015ec4:	bd70      	pop	{r4, r5, r6, pc}
 8015ec6:	bf00      	nop
 8015ec8:	40011000 	andmi	r1, r1, r0

08015ecc <uart0_puts>:
 8015ecc:	b510      	push	{r4, lr}
 8015ece:	1e44      	subs	r4, r0, #1
 8015ed0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8015ed4:	b903      	cbnz	r3, 8015ed8 <uart0_puts+0xc>
 8015ed6:	bd10      	pop	{r4, pc}
 8015ed8:	2b0a      	cmp	r3, #10
 8015eda:	d102      	bne.n	8015ee2 <uart0_puts+0x16>
 8015edc:	200d      	movs	r0, #13
 8015ede:	f7ff ffdb 	bl	8015e98 <uart0_putc>
 8015ee2:	7820      	ldrb	r0, [r4, #0]
 8015ee4:	f7ff ffd8 	bl	8015e98 <uart0_putc>
 8015ee8:	e7f2      	b.n	8015ed0 <uart0_puts+0x4>
	...

08015eec <adc_clock_config>:
 8015eec:	4b06      	ldr	r3, [pc, #24]	@ (8015f08 <adc_clock_config+0x1c>)
 8015eee:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8015ef2:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8015ef6:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8015efa:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8015efe:	4302      	orrs	r2, r0
 8015f00:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8015f04:	4770      	bx	lr
 8015f06:	bf00      	nop
 8015f08:	40012000 	andmi	r2, r1, r0

08015f0c <adc_special_function_config>:
 8015f0c:	b510      	push	{r4, lr}
 8015f0e:	f401 7380 	and.w	r3, r1, #256	@ 0x100
 8015f12:	f401 6480 	and.w	r4, r1, #1024	@ 0x400
 8015f16:	f001 0102 	and.w	r1, r1, #2
 8015f1a:	b17a      	cbz	r2, 8015f3c <adc_special_function_config+0x30>
 8015f1c:	b11b      	cbz	r3, 8015f26 <adc_special_function_config+0x1a>
 8015f1e:	6843      	ldr	r3, [r0, #4]
 8015f20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8015f24:	6043      	str	r3, [r0, #4]
 8015f26:	b11c      	cbz	r4, 8015f30 <adc_special_function_config+0x24>
 8015f28:	6843      	ldr	r3, [r0, #4]
 8015f2a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8015f2e:	6043      	str	r3, [r0, #4]
 8015f30:	b119      	cbz	r1, 8015f3a <adc_special_function_config+0x2e>
 8015f32:	6883      	ldr	r3, [r0, #8]
 8015f34:	f043 0302 	orr.w	r3, r3, #2
 8015f38:	6083      	str	r3, [r0, #8]
 8015f3a:	bd10      	pop	{r4, pc}
 8015f3c:	b11b      	cbz	r3, 8015f46 <adc_special_function_config+0x3a>
 8015f3e:	6843      	ldr	r3, [r0, #4]
 8015f40:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015f44:	6043      	str	r3, [r0, #4]
 8015f46:	b11c      	cbz	r4, 8015f50 <adc_special_function_config+0x44>
 8015f48:	6843      	ldr	r3, [r0, #4]
 8015f4a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8015f4e:	6043      	str	r3, [r0, #4]
 8015f50:	2900      	cmp	r1, #0
 8015f52:	d0f2      	beq.n	8015f3a <adc_special_function_config+0x2e>
 8015f54:	6883      	ldr	r3, [r0, #8]
 8015f56:	f023 0302 	bic.w	r3, r3, #2
 8015f5a:	e7ed      	b.n	8015f38 <adc_special_function_config+0x2c>

08015f5c <adc_data_alignment_config>:
 8015f5c:	6883      	ldr	r3, [r0, #8]
 8015f5e:	b119      	cbz	r1, 8015f68 <adc_data_alignment_config+0xc>
 8015f60:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8015f64:	6083      	str	r3, [r0, #8]
 8015f66:	4770      	bx	lr
 8015f68:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8015f6c:	e7fa      	b.n	8015f64 <adc_data_alignment_config+0x8>

08015f6e <adc_enable>:
 8015f6e:	6883      	ldr	r3, [r0, #8]
 8015f70:	07db      	lsls	r3, r3, #31
 8015f72:	bf5e      	ittt	pl
 8015f74:	6883      	ldrpl	r3, [r0, #8]
 8015f76:	f043 0301 	orrpl.w	r3, r3, #1
 8015f7a:	6083      	strpl	r3, [r0, #8]
 8015f7c:	4770      	bx	lr

08015f7e <adc_calibration_enable>:
 8015f7e:	6883      	ldr	r3, [r0, #8]
 8015f80:	f043 0308 	orr.w	r3, r3, #8
 8015f84:	f100 0208 	add.w	r2, r0, #8
 8015f88:	6083      	str	r3, [r0, #8]
 8015f8a:	6813      	ldr	r3, [r2, #0]
 8015f8c:	0719      	lsls	r1, r3, #28
 8015f8e:	d4fc      	bmi.n	8015f8a <adc_calibration_enable+0xc>
 8015f90:	6883      	ldr	r3, [r0, #8]
 8015f92:	f043 0304 	orr.w	r3, r3, #4
 8015f96:	6083      	str	r3, [r0, #8]
 8015f98:	6813      	ldr	r3, [r2, #0]
 8015f9a:	075b      	lsls	r3, r3, #29
 8015f9c:	d4fc      	bmi.n	8015f98 <adc_calibration_enable+0x1a>
 8015f9e:	4770      	bx	lr

08015fa0 <adc_channel_16_to_18>:
 8015fa0:	f400 0380 	and.w	r3, r0, #4194304	@ 0x400000
 8015fa4:	f400 0000 	and.w	r0, r0, #8388608	@ 0x800000
 8015fa8:	b181      	cbz	r1, 8015fcc <adc_channel_16_to_18+0x2c>
 8015faa:	b133      	cbz	r3, 8015fba <adc_channel_16_to_18+0x1a>
 8015fac:	4a0f      	ldr	r2, [pc, #60]	@ (8015fec <adc_channel_16_to_18+0x4c>)
 8015fae:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015fb2:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8015fb6:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015fba:	b130      	cbz	r0, 8015fca <adc_channel_16_to_18+0x2a>
 8015fbc:	4a0b      	ldr	r2, [pc, #44]	@ (8015fec <adc_channel_16_to_18+0x4c>)
 8015fbe:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015fc2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8015fc6:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015fca:	4770      	bx	lr
 8015fcc:	b133      	cbz	r3, 8015fdc <adc_channel_16_to_18+0x3c>
 8015fce:	4a07      	ldr	r2, [pc, #28]	@ (8015fec <adc_channel_16_to_18+0x4c>)
 8015fd0:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015fd4:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8015fd8:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 8015fdc:	2800      	cmp	r0, #0
 8015fde:	d0f4      	beq.n	8015fca <adc_channel_16_to_18+0x2a>
 8015fe0:	4a02      	ldr	r2, [pc, #8]	@ (8015fec <adc_channel_16_to_18+0x4c>)
 8015fe2:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8015fe6:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8015fea:	e7ec      	b.n	8015fc6 <adc_channel_16_to_18+0x26>
 8015fec:	40012000 	andmi	r2, r1, r0

08015ff0 <adc_channel_length_config>:
 8015ff0:	2901      	cmp	r1, #1
 8015ff2:	d002      	beq.n	8015ffa <adc_channel_length_config+0xa>
 8015ff4:	2902      	cmp	r1, #2
 8015ff6:	d00c      	beq.n	8016012 <adc_channel_length_config+0x22>
 8015ff8:	4770      	bx	lr
 8015ffa:	3a01      	subs	r2, #1
 8015ffc:	2a0f      	cmp	r2, #15
 8015ffe:	d813      	bhi.n	8016028 <adc_channel_length_config+0x38>
 8016000:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8016002:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8016006:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8016008:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801600a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801600e:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8016010:	4770      	bx	lr
 8016012:	3a01      	subs	r2, #1
 8016014:	2a03      	cmp	r2, #3
 8016016:	d807      	bhi.n	8016028 <adc_channel_length_config+0x38>
 8016018:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801601a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 801601e:	6383      	str	r3, [r0, #56]	@ 0x38
 8016020:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8016022:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8016026:	6383      	str	r3, [r0, #56]	@ 0x38
 8016028:	4770      	bx	lr

0801602a <adc_inserted_channel_config>:
 801602a:	2903      	cmp	r1, #3
 801602c:	b530      	push	{r4, r5, lr}
 801602e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8016030:	d80f      	bhi.n	8016052 <adc_inserted_channel_config+0x28>
 8016032:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8016036:	1a61      	subs	r1, r4, r1
 8016038:	f06f 0404 	mvn.w	r4, #4
 801603c:	4361      	muls	r1, r4
 801603e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8016040:	310f      	adds	r1, #15
 8016042:	241f      	movs	r4, #31
 8016044:	408c      	lsls	r4, r1
 8016046:	ea25 0404 	bic.w	r4, r5, r4
 801604a:	fa02 f101 	lsl.w	r1, r2, r1
 801604e:	4321      	orrs	r1, r4
 8016050:	6381      	str	r1, [r0, #56]	@ 0x38
 8016052:	2a09      	cmp	r2, #9
 8016054:	d80b      	bhi.n	801606e <adc_inserted_channel_config+0x44>
 8016056:	6901      	ldr	r1, [r0, #16]
 8016058:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801605c:	2407      	movs	r4, #7
 801605e:	4094      	lsls	r4, r2
 8016060:	ea21 0104 	bic.w	r1, r1, r4
 8016064:	fa03 f202 	lsl.w	r2, r3, r2
 8016068:	430a      	orrs	r2, r1
 801606a:	6102      	str	r2, [r0, #16]
 801606c:	bd30      	pop	{r4, r5, pc}
 801606e:	2a12      	cmp	r2, #18
 8016070:	d8fc      	bhi.n	801606c <adc_inserted_channel_config+0x42>
 8016072:	3a0a      	subs	r2, #10
 8016074:	68c1      	ldr	r1, [r0, #12]
 8016076:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801607a:	2407      	movs	r4, #7
 801607c:	4094      	lsls	r4, r2
 801607e:	ea21 0104 	bic.w	r1, r1, r4
 8016082:	4093      	lsls	r3, r2
 8016084:	430b      	orrs	r3, r1
 8016086:	60c3      	str	r3, [r0, #12]
 8016088:	e7f0      	b.n	801606c <adc_inserted_channel_config+0x42>

0801608a <adc_external_trigger_config>:
 801608a:	2901      	cmp	r1, #1
 801608c:	d002      	beq.n	8016094 <adc_external_trigger_config+0xa>
 801608e:	2902      	cmp	r1, #2
 8016090:	d009      	beq.n	80160a6 <adc_external_trigger_config+0x1c>
 8016092:	4770      	bx	lr
 8016094:	6883      	ldr	r3, [r0, #8]
 8016096:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 801609a:	6083      	str	r3, [r0, #8]
 801609c:	6883      	ldr	r3, [r0, #8]
 801609e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80160a2:	6083      	str	r3, [r0, #8]
 80160a4:	4770      	bx	lr
 80160a6:	6883      	ldr	r3, [r0, #8]
 80160a8:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80160ac:	6083      	str	r3, [r0, #8]
 80160ae:	6883      	ldr	r3, [r0, #8]
 80160b0:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80160b4:	e7f5      	b.n	80160a2 <adc_external_trigger_config+0x18>

080160b6 <adc_software_trigger_enable>:
 80160b6:	2901      	cmp	r1, #1
 80160b8:	d002      	beq.n	80160c0 <adc_software_trigger_enable+0xa>
 80160ba:	2902      	cmp	r1, #2
 80160bc:	d005      	beq.n	80160ca <adc_software_trigger_enable+0x14>
 80160be:	4770      	bx	lr
 80160c0:	6883      	ldr	r3, [r0, #8]
 80160c2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80160c6:	6083      	str	r3, [r0, #8]
 80160c8:	4770      	bx	lr
 80160ca:	6883      	ldr	r3, [r0, #8]
 80160cc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80160d0:	e7f9      	b.n	80160c6 <adc_software_trigger_enable+0x10>
	...

080160d4 <i2c_clock_config>:
 80160d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80160d6:	4605      	mov	r5, r0
 80160d8:	2002      	movs	r0, #2
 80160da:	460c      	mov	r4, r1
 80160dc:	4617      	mov	r7, r2
 80160de:	f7ff f92f 	bl	8015340 <rcu_clock_freq_get>
 80160e2:	4a29      	ldr	r2, [pc, #164]	@ (8016188 <i2c_clock_config+0xb4>)
 80160e4:	686e      	ldr	r6, [r5, #4]
 80160e6:	4603      	mov	r3, r0
 80160e8:	4828      	ldr	r0, [pc, #160]	@ (801618c <i2c_clock_config+0xb8>)
 80160ea:	fbb3 f0f0 	udiv	r0, r3, r0
 80160ee:	4293      	cmp	r3, r2
 80160f0:	bf34      	ite	cc
 80160f2:	4601      	movcc	r1, r0
 80160f4:	213c      	movcs	r1, #60	@ 0x3c
 80160f6:	4a26      	ldr	r2, [pc, #152]	@ (8016190 <i2c_clock_config+0xbc>)
 80160f8:	f026 063f 	bic.w	r6, r6, #63	@ 0x3f
 80160fc:	430e      	orrs	r6, r1
 80160fe:	4294      	cmp	r4, r2
 8016100:	606e      	str	r6, [r5, #4]
 8016102:	d816      	bhi.n	8016132 <i2c_clock_config+0x5e>
 8016104:	3001      	adds	r0, #1
 8016106:	283b      	cmp	r0, #59	@ 0x3b
 8016108:	d90d      	bls.n	8016126 <i2c_clock_config+0x52>
 801610a:	223c      	movs	r2, #60	@ 0x3c
 801610c:	622a      	str	r2, [r5, #32]
 801610e:	0064      	lsls	r4, r4, #1
 8016110:	fbb3 f4f4 	udiv	r4, r3, r4
 8016114:	2c04      	cmp	r4, #4
 8016116:	69ea      	ldr	r2, [r5, #28]
 8016118:	bf38      	it	cc
 801611a:	2404      	movcc	r4, #4
 801611c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8016120:	4314      	orrs	r4, r2
 8016122:	61ec      	str	r4, [r5, #28]
 8016124:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016126:	2802      	cmp	r0, #2
 8016128:	d801      	bhi.n	801612e <i2c_clock_config+0x5a>
 801612a:	2202      	movs	r2, #2
 801612c:	e7ee      	b.n	801610c <i2c_clock_config+0x38>
 801612e:	6228      	str	r0, [r5, #32]
 8016130:	e7ed      	b.n	801610e <i2c_clock_config+0x3a>
 8016132:	4a18      	ldr	r2, [pc, #96]	@ (8016194 <i2c_clock_config+0xc0>)
 8016134:	4294      	cmp	r4, r2
 8016136:	d8f5      	bhi.n	8016124 <i2c_clock_config+0x50>
 8016138:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 801613c:	4351      	muls	r1, r2
 801613e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8016142:	fbb1 f1f2 	udiv	r1, r1, r2
 8016146:	3101      	adds	r1, #1
 8016148:	6229      	str	r1, [r5, #32]
 801614a:	b9a7      	cbnz	r7, 8016176 <i2c_clock_config+0xa2>
 801614c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016150:	fbb3 f4f4 	udiv	r4, r3, r4
 8016154:	69eb      	ldr	r3, [r5, #28]
 8016156:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 801615a:	61eb      	str	r3, [r5, #28]
 801615c:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8016160:	b90b      	cbnz	r3, 8016166 <i2c_clock_config+0x92>
 8016162:	f044 0401 	orr.w	r4, r4, #1
 8016166:	69eb      	ldr	r3, [r5, #28]
 8016168:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801616c:	61eb      	str	r3, [r5, #28]
 801616e:	69eb      	ldr	r3, [r5, #28]
 8016170:	4323      	orrs	r3, r4
 8016172:	61eb      	str	r3, [r5, #28]
 8016174:	e7d6      	b.n	8016124 <i2c_clock_config+0x50>
 8016176:	2219      	movs	r2, #25
 8016178:	4354      	muls	r4, r2
 801617a:	fbb3 f4f4 	udiv	r4, r3, r4
 801617e:	69eb      	ldr	r3, [r5, #28]
 8016180:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8016184:	e7e9      	b.n	801615a <i2c_clock_config+0x86>
 8016186:	bf00      	nop
 8016188:	03938700 	orrseq	r8, r3, #0, 14
 801618c:	000f4240 	andeq	r4, pc, r0, asr #4
 8016190:	000186a0 	andeq	r8, r1, r0, lsr #13
 8016194:	00061a80 	andeq	r1, r6, r0, lsl #21

08016198 <i2c_ack_config>:
 8016198:	6803      	ldr	r3, [r0, #0]
 801619a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801619e:	430b      	orrs	r3, r1
 80161a0:	6003      	str	r3, [r0, #0]
 80161a2:	4770      	bx	lr

080161a4 <i2c_ackpos_config>:
 80161a4:	6803      	ldr	r3, [r0, #0]
 80161a6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80161aa:	430b      	orrs	r3, r1
 80161ac:	6003      	str	r3, [r0, #0]
 80161ae:	4770      	bx	lr

080161b0 <i2c_master_addressing>:
 80161b0:	3202      	adds	r2, #2
 80161b2:	bf0c      	ite	eq
 80161b4:	f021 0101 	biceq.w	r1, r1, #1
 80161b8:	f041 0101 	orrne.w	r1, r1, #1
 80161bc:	6101      	str	r1, [r0, #16]
 80161be:	4770      	bx	lr

080161c0 <i2c_enable>:
 80161c0:	6803      	ldr	r3, [r0, #0]
 80161c2:	f043 0301 	orr.w	r3, r3, #1
 80161c6:	6003      	str	r3, [r0, #0]
 80161c8:	4770      	bx	lr

080161ca <i2c_start_on_bus>:
 80161ca:	6803      	ldr	r3, [r0, #0]
 80161cc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80161d0:	6003      	str	r3, [r0, #0]
 80161d2:	4770      	bx	lr

080161d4 <i2c_stop_on_bus>:
 80161d4:	6803      	ldr	r3, [r0, #0]
 80161d6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80161da:	6003      	str	r3, [r0, #0]
 80161dc:	4770      	bx	lr

080161de <i2c_data_transmit>:
 80161de:	6101      	str	r1, [r0, #16]
 80161e0:	4770      	bx	lr

080161e2 <i2c_data_receive>:
 80161e2:	6900      	ldr	r0, [r0, #16]
 80161e4:	b2c0      	uxtb	r0, r0
 80161e6:	4770      	bx	lr

080161e8 <i2c_flag_get>:
 80161e8:	098b      	lsrs	r3, r1, #6
 80161ea:	f001 011f 	and.w	r1, r1, #31
 80161ee:	5818      	ldr	r0, [r3, r0]
 80161f0:	40c8      	lsrs	r0, r1
 80161f2:	f000 0001 	and.w	r0, r0, #1
 80161f6:	4770      	bx	lr

080161f8 <i2c_flag_clear>:
 80161f8:	f240 5301 	movw	r3, #1281	@ 0x501
 80161fc:	4299      	cmp	r1, r3
 80161fe:	b510      	push	{r4, lr}
 8016200:	d102      	bne.n	8016208 <i2c_flag_clear+0x10>
 8016202:	6943      	ldr	r3, [r0, #20]
 8016204:	6983      	ldr	r3, [r0, #24]
 8016206:	bd10      	pop	{r4, pc}
 8016208:	098c      	lsrs	r4, r1, #6
 801620a:	2201      	movs	r2, #1
 801620c:	5823      	ldr	r3, [r4, r0]
 801620e:	f001 011f 	and.w	r1, r1, #31
 8016212:	408a      	lsls	r2, r1
 8016214:	ea23 0302 	bic.w	r3, r3, r2
 8016218:	5023      	str	r3, [r4, r0]
 801621a:	e7f4      	b.n	8016206 <i2c_flag_clear+0xe>

0801621c <usart_deinit>:
 801621c:	b508      	push	{r3, lr}
 801621e:	4b2d      	ldr	r3, [pc, #180]	@ (80162d4 <usart_deinit+0xb8>)
 8016220:	4298      	cmp	r0, r3
 8016222:	d050      	beq.n	80162c6 <usart_deinit+0xaa>
 8016224:	d817      	bhi.n	8016256 <usart_deinit+0x3a>
 8016226:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 801622a:	4298      	cmp	r0, r3
 801622c:	d044      	beq.n	80162b8 <usart_deinit+0x9c>
 801622e:	d808      	bhi.n	8016242 <usart_deinit+0x26>
 8016230:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8016234:	4298      	cmp	r0, r3
 8016236:	d02a      	beq.n	801628e <usart_deinit+0x72>
 8016238:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801623c:	4298      	cmp	r0, r3
 801623e:	d02d      	beq.n	801629c <usart_deinit+0x80>
 8016240:	bd08      	pop	{r3, pc}
 8016242:	4b25      	ldr	r3, [pc, #148]	@ (80162d8 <usart_deinit+0xbc>)
 8016244:	4298      	cmp	r0, r3
 8016246:	d1fb      	bne.n	8016240 <usart_deinit+0x24>
 8016248:	f640 0014 	movw	r0, #2068	@ 0x814
 801624c:	f7ff f857 	bl	80152fe <rcu_periph_reset_enable>
 8016250:	f640 0014 	movw	r0, #2068	@ 0x814
 8016254:	e017      	b.n	8016286 <usart_deinit+0x6a>
 8016256:	4b21      	ldr	r3, [pc, #132]	@ (80162dc <usart_deinit+0xc0>)
 8016258:	4298      	cmp	r0, r3
 801625a:	d00e      	beq.n	801627a <usart_deinit+0x5e>
 801625c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8016260:	4298      	cmp	r0, r3
 8016262:	d022      	beq.n	80162aa <usart_deinit+0x8e>
 8016264:	f5a3 4318 	sub.w	r3, r3, #38912	@ 0x9800
 8016268:	4298      	cmp	r0, r3
 801626a:	d1e9      	bne.n	8016240 <usart_deinit+0x24>
 801626c:	f640 001f 	movw	r0, #2079	@ 0x81f
 8016270:	f7ff f845 	bl	80152fe <rcu_periph_reset_enable>
 8016274:	f640 001f 	movw	r0, #2079	@ 0x81f
 8016278:	e005      	b.n	8016286 <usart_deinit+0x6a>
 801627a:	f640 1004 	movw	r0, #2308	@ 0x904
 801627e:	f7ff f83e 	bl	80152fe <rcu_periph_reset_enable>
 8016282:	f640 1004 	movw	r0, #2308	@ 0x904
 8016286:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801628a:	f7ff b83a 	b.w	8015302 <rcu_periph_reset_disable>
 801628e:	f640 0011 	movw	r0, #2065	@ 0x811
 8016292:	f7ff f834 	bl	80152fe <rcu_periph_reset_enable>
 8016296:	f640 0011 	movw	r0, #2065	@ 0x811
 801629a:	e7f4      	b.n	8016286 <usart_deinit+0x6a>
 801629c:	f640 0012 	movw	r0, #2066	@ 0x812
 80162a0:	f7ff f82d 	bl	80152fe <rcu_periph_reset_enable>
 80162a4:	f640 0012 	movw	r0, #2066	@ 0x812
 80162a8:	e7ed      	b.n	8016286 <usart_deinit+0x6a>
 80162aa:	f640 1005 	movw	r0, #2309	@ 0x905
 80162ae:	f7ff f826 	bl	80152fe <rcu_periph_reset_enable>
 80162b2:	f640 1005 	movw	r0, #2309	@ 0x905
 80162b6:	e7e6      	b.n	8016286 <usart_deinit+0x6a>
 80162b8:	f640 0013 	movw	r0, #2067	@ 0x813
 80162bc:	f7ff f81f 	bl	80152fe <rcu_periph_reset_enable>
 80162c0:	f640 0013 	movw	r0, #2067	@ 0x813
 80162c4:	e7df      	b.n	8016286 <usart_deinit+0x6a>
 80162c6:	f640 001e 	movw	r0, #2078	@ 0x81e
 80162ca:	f7ff f818 	bl	80152fe <rcu_periph_reset_enable>
 80162ce:	f640 001e 	movw	r0, #2078	@ 0x81e
 80162d2:	e7d8      	b.n	8016286 <usart_deinit+0x6a>
 80162d4:	40007800 	andmi	r7, r0, r0, lsl #16
 80162d8:	40005000 	andmi	r5, r0, r0
 80162dc:	40011000 	andmi	r1, r1, r0

080162e0 <usart_baudrate_set>:
 80162e0:	b538      	push	{r3, r4, r5, lr}
 80162e2:	4b1e      	ldr	r3, [pc, #120]	@ (801635c <usart_baudrate_set+0x7c>)
 80162e4:	4298      	cmp	r0, r3
 80162e6:	4604      	mov	r4, r0
 80162e8:	460d      	mov	r5, r1
 80162ea:	d02e      	beq.n	801634a <usart_baudrate_set+0x6a>
 80162ec:	d821      	bhi.n	8016332 <usart_baudrate_set+0x52>
 80162ee:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 80162f2:	4298      	cmp	r0, r3
 80162f4:	d029      	beq.n	801634a <usart_baudrate_set+0x6a>
 80162f6:	d81a      	bhi.n	801632e <usart_baudrate_set+0x4e>
 80162f8:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80162fc:	4298      	cmp	r0, r3
 80162fe:	d024      	beq.n	801634a <usart_baudrate_set+0x6a>
 8016300:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8016304:	429c      	cmp	r4, r3
 8016306:	d020      	beq.n	801634a <usart_baudrate_set+0x6a>
 8016308:	2000      	movs	r0, #0
 801630a:	68e2      	ldr	r2, [r4, #12]
 801630c:	0412      	lsls	r2, r2, #16
 801630e:	ea4f 0355 	mov.w	r3, r5, lsr #1
 8016312:	d51c      	bpl.n	801634e <usart_baudrate_set+0x6e>
 8016314:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8016318:	fbb3 f1f5 	udiv	r1, r3, r5
 801631c:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8016320:	f021 010f 	bic.w	r1, r1, #15
 8016324:	0409      	lsls	r1, r1, #16
 8016326:	0c09      	lsrs	r1, r1, #16
 8016328:	430b      	orrs	r3, r1
 801632a:	60a3      	str	r3, [r4, #8]
 801632c:	bd38      	pop	{r3, r4, r5, pc}
 801632e:	4b0c      	ldr	r3, [pc, #48]	@ (8016360 <usart_baudrate_set+0x80>)
 8016330:	e7e8      	b.n	8016304 <usart_baudrate_set+0x24>
 8016332:	4b0c      	ldr	r3, [pc, #48]	@ (8016364 <usart_baudrate_set+0x84>)
 8016334:	f420 6280 	bic.w	r2, r0, #1024	@ 0x400
 8016338:	429a      	cmp	r2, r3
 801633a:	d002      	beq.n	8016342 <usart_baudrate_set+0x62>
 801633c:	f5a3 4314 	sub.w	r3, r3, #37888	@ 0x9400
 8016340:	e7e0      	b.n	8016304 <usart_baudrate_set+0x24>
 8016342:	2003      	movs	r0, #3
 8016344:	f7fe fffc 	bl	8015340 <rcu_clock_freq_get>
 8016348:	e7df      	b.n	801630a <usart_baudrate_set+0x2a>
 801634a:	2002      	movs	r0, #2
 801634c:	e7fa      	b.n	8016344 <usart_baudrate_set+0x64>
 801634e:	18c1      	adds	r1, r0, r3
 8016350:	fbb1 f1f5 	udiv	r1, r1, r5
 8016354:	b289      	uxth	r1, r1
 8016356:	60a1      	str	r1, [r4, #8]
 8016358:	e7e8      	b.n	801632c <usart_baudrate_set+0x4c>
 801635a:	bf00      	nop
 801635c:	40007800 	andmi	r7, r0, r0, lsl #16
 8016360:	40005000 	andmi	r5, r0, r0
 8016364:	40011000 	andmi	r1, r1, r0

08016368 <usart_parity_config>:
 8016368:	68c3      	ldr	r3, [r0, #12]
 801636a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 801636e:	60c3      	str	r3, [r0, #12]
 8016370:	68c3      	ldr	r3, [r0, #12]
 8016372:	430b      	orrs	r3, r1
 8016374:	60c3      	str	r3, [r0, #12]
 8016376:	4770      	bx	lr

08016378 <usart_word_length_set>:
 8016378:	68c3      	ldr	r3, [r0, #12]
 801637a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801637e:	60c3      	str	r3, [r0, #12]
 8016380:	68c3      	ldr	r3, [r0, #12]
 8016382:	430b      	orrs	r3, r1
 8016384:	60c3      	str	r3, [r0, #12]
 8016386:	4770      	bx	lr

08016388 <usart_stop_bit_set>:
 8016388:	6903      	ldr	r3, [r0, #16]
 801638a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 801638e:	6103      	str	r3, [r0, #16]
 8016390:	6903      	ldr	r3, [r0, #16]
 8016392:	430b      	orrs	r3, r1
 8016394:	6103      	str	r3, [r0, #16]
 8016396:	4770      	bx	lr

08016398 <usart_transmit_config>:
 8016398:	68c3      	ldr	r3, [r0, #12]
 801639a:	f023 0308 	bic.w	r3, r3, #8
 801639e:	430b      	orrs	r3, r1
 80163a0:	60c3      	str	r3, [r0, #12]
 80163a2:	4770      	bx	lr

080163a4 <usart_receive_config>:
 80163a4:	68c3      	ldr	r3, [r0, #12]
 80163a6:	f023 0304 	bic.w	r3, r3, #4
 80163aa:	430b      	orrs	r3, r1
 80163ac:	60c3      	str	r3, [r0, #12]
 80163ae:	4770      	bx	lr

080163b0 <usart_hardware_flow_rts_config>:
 80163b0:	6943      	ldr	r3, [r0, #20]
 80163b2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80163b6:	6143      	str	r3, [r0, #20]
 80163b8:	6943      	ldr	r3, [r0, #20]
 80163ba:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80163be:	4319      	orrs	r1, r3
 80163c0:	6141      	str	r1, [r0, #20]
 80163c2:	4770      	bx	lr

080163c4 <usart_hardware_flow_cts_config>:
 80163c4:	6943      	ldr	r3, [r0, #20]
 80163c6:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80163ca:	6143      	str	r3, [r0, #20]
 80163cc:	6943      	ldr	r3, [r0, #20]
 80163ce:	f401 7100 	and.w	r1, r1, #512	@ 0x200
 80163d2:	4319      	orrs	r1, r3
 80163d4:	6141      	str	r1, [r0, #20]
 80163d6:	4770      	bx	lr

080163d8 <usart_flag_get>:
 80163d8:	098b      	lsrs	r3, r1, #6
 80163da:	f001 011f 	and.w	r1, r1, #31
 80163de:	5818      	ldr	r0, [r3, r0]
 80163e0:	40c8      	lsrs	r0, r1
 80163e2:	f000 0001 	and.w	r0, r0, #1
 80163e6:	4770      	bx	lr

080163e8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
 80163e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163ea:	461e      	mov	r6, r3
 80163ec:	4bc3      	ldr	r3, [pc, #780]	@ (80166fc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x314>)
 80163ee:	4298      	cmp	r0, r3
 80163f0:	4604      	mov	r4, r0
 80163f2:	460f      	mov	r7, r1
 80163f4:	4615      	mov	r5, r2
 80163f6:	f000 818f 	beq.w	8016718 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x330>
 80163fa:	d83a      	bhi.n	8016472 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x8a>
 80163fc:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8016400:	4298      	cmp	r0, r3
 8016402:	f000 80f5 	beq.w	80165f0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x208>
 8016406:	f200 8122 	bhi.w	801664e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x266>
 801640a:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 801640e:	4298      	cmp	r0, r3
 8016410:	f000 80c8 	beq.w	80165a4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x1bc>
 8016414:	f241 0012 	movw	r0, #4114	@ 0x1012
 8016418:	f7fe ff56 	bl	80152c8 <rcu_periph_clock_enable>
 801641c:	f640 4001 	movw	r0, #3073	@ 0xc01
 8016420:	f7fe ff52 	bl	80152c8 <rcu_periph_clock_enable>
 8016424:	48b6      	ldr	r0, [pc, #728]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8016426:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801642a:	2107      	movs	r1, #7
 801642c:	f7fe ff08 	bl	8015240 <gpio_af_set>
 8016430:	48b3      	ldr	r0, [pc, #716]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8016432:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8016436:	2201      	movs	r2, #1
 8016438:	2102      	movs	r1, #2
 801643a:	f7fe fec3 	bl	80151c4 <gpio_mode_set>
 801643e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8016442:	48af      	ldr	r0, [pc, #700]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8016444:	2202      	movs	r2, #2
 8016446:	2100      	movs	r1, #0
 8016448:	f7fe fede 	bl	8015208 <gpio_output_options_set>
 801644c:	48ac      	ldr	r0, [pc, #688]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 801644e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8016452:	2107      	movs	r1, #7
 8016454:	f7fe fef4 	bl	8015240 <gpio_af_set>
 8016458:	48a9      	ldr	r0, [pc, #676]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 801645a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801645e:	2201      	movs	r2, #1
 8016460:	2102      	movs	r1, #2
 8016462:	f7fe feaf 	bl	80151c4 <gpio_mode_set>
 8016466:	48a6      	ldr	r0, [pc, #664]	@ (8016700 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8016468:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801646c:	2202      	movs	r2, #2
 801646e:	2100      	movs	r1, #0
 8016470:	e05b      	b.n	801652a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8016472:	4ba4      	ldr	r3, [pc, #656]	@ (8016704 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x31c>)
 8016474:	4298      	cmp	r0, r3
 8016476:	d02a      	beq.n	80164ce <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0xe6>
 8016478:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801647c:	4298      	cmp	r0, r3
 801647e:	f000 8116 	beq.w	80166ae <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x2c6>
 8016482:	f241 001f 	movw	r0, #4127	@ 0x101f
 8016486:	f7fe ff1f 	bl	80152c8 <rcu_periph_clock_enable>
 801648a:	f640 4004 	movw	r0, #3076	@ 0xc04
 801648e:	f7fe ff1b 	bl	80152c8 <rcu_periph_clock_enable>
 8016492:	489d      	ldr	r0, [pc, #628]	@ (8016708 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8016494:	2202      	movs	r2, #2
 8016496:	2108      	movs	r1, #8
 8016498:	f7fe fed2 	bl	8015240 <gpio_af_set>
 801649c:	2302      	movs	r3, #2
 801649e:	4619      	mov	r1, r3
 80164a0:	4899      	ldr	r0, [pc, #612]	@ (8016708 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80164a2:	2201      	movs	r2, #1
 80164a4:	f7fe fe8e 	bl	80151c4 <gpio_mode_set>
 80164a8:	2302      	movs	r3, #2
 80164aa:	461a      	mov	r2, r3
 80164ac:	4896      	ldr	r0, [pc, #600]	@ (8016708 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80164ae:	2100      	movs	r1, #0
 80164b0:	f7fe feaa 	bl	8015208 <gpio_output_options_set>
 80164b4:	4894      	ldr	r0, [pc, #592]	@ (8016708 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80164b6:	2201      	movs	r2, #1
 80164b8:	2108      	movs	r1, #8
 80164ba:	f7fe fec1 	bl	8015240 <gpio_af_set>
 80164be:	2301      	movs	r3, #1
 80164c0:	461a      	mov	r2, r3
 80164c2:	4891      	ldr	r0, [pc, #580]	@ (8016708 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 80164c4:	2102      	movs	r1, #2
 80164c6:	f7fe fe7d 	bl	80151c4 <gpio_mode_set>
 80164ca:	2301      	movs	r3, #1
 80164cc:	e14c      	b.n	8016768 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x380>
 80164ce:	f241 1004 	movw	r0, #4356	@ 0x1104
 80164d2:	f7fe fef9 	bl	80152c8 <rcu_periph_clock_enable>
 80164d6:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80164da:	f7fe fef5 	bl	80152c8 <rcu_periph_clock_enable>
 80164de:	488b      	ldr	r0, [pc, #556]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80164e0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80164e4:	2107      	movs	r1, #7
 80164e6:	f7fe feab 	bl	8015240 <gpio_af_set>
 80164ea:	4888      	ldr	r0, [pc, #544]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80164ec:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80164f0:	2201      	movs	r2, #1
 80164f2:	2102      	movs	r1, #2
 80164f4:	f7fe fe66 	bl	80151c4 <gpio_mode_set>
 80164f8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80164fc:	4883      	ldr	r0, [pc, #524]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80164fe:	2202      	movs	r2, #2
 8016500:	2100      	movs	r1, #0
 8016502:	f7fe fe81 	bl	8015208 <gpio_output_options_set>
 8016506:	4881      	ldr	r0, [pc, #516]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8016508:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801650c:	2107      	movs	r1, #7
 801650e:	f7fe fe97 	bl	8015240 <gpio_af_set>
 8016512:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8016516:	487d      	ldr	r0, [pc, #500]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8016518:	2201      	movs	r2, #1
 801651a:	2102      	movs	r1, #2
 801651c:	f7fe fe52 	bl	80151c4 <gpio_mode_set>
 8016520:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8016524:	4879      	ldr	r0, [pc, #484]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8016526:	2202      	movs	r2, #2
 8016528:	2100      	movs	r1, #0
 801652a:	f7fe fe6d 	bl	8015208 <gpio_output_options_set>
 801652e:	4620      	mov	r0, r4
 8016530:	f7ff fe74 	bl	801621c <usart_deinit>
 8016534:	68e3      	ldr	r3, [r4, #12]
 8016536:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801653a:	60e3      	str	r3, [r4, #12]
 801653c:	4639      	mov	r1, r7
 801653e:	4620      	mov	r0, r4
 8016540:	f7ff fece 	bl	80162e0 <usart_baudrate_set>
 8016544:	f1a5 0309 	sub.w	r3, r5, #9
 8016548:	4259      	negs	r1, r3
 801654a:	4159      	adcs	r1, r3
 801654c:	0309      	lsls	r1, r1, #12
 801654e:	4620      	mov	r0, r4
 8016550:	f7ff ff12 	bl	8016378 <usart_word_length_set>
 8016554:	9906      	ldr	r1, [sp, #24]
 8016556:	1e8a      	subs	r2, r1, #2
 8016558:	4251      	negs	r1, r2
 801655a:	4151      	adcs	r1, r2
 801655c:	0349      	lsls	r1, r1, #13
 801655e:	4620      	mov	r0, r4
 8016560:	f7ff ff12 	bl	8016388 <usart_stop_bit_set>
 8016564:	2e01      	cmp	r6, #1
 8016566:	f000 8103 	beq.w	8016770 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x388>
 801656a:	2e02      	cmp	r6, #2
 801656c:	f040 8103 	bne.w	8016776 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x38e>
 8016570:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8016574:	4620      	mov	r0, r4
 8016576:	f7ff fef7 	bl	8016368 <usart_parity_config>
 801657a:	2100      	movs	r1, #0
 801657c:	4620      	mov	r0, r4
 801657e:	f7ff ff17 	bl	80163b0 <usart_hardware_flow_rts_config>
 8016582:	2100      	movs	r1, #0
 8016584:	4620      	mov	r0, r4
 8016586:	f7ff ff1d 	bl	80163c4 <usart_hardware_flow_cts_config>
 801658a:	2104      	movs	r1, #4
 801658c:	4620      	mov	r0, r4
 801658e:	f7ff ff09 	bl	80163a4 <usart_receive_config>
 8016592:	2108      	movs	r1, #8
 8016594:	4620      	mov	r0, r4
 8016596:	f7ff feff 	bl	8016398 <usart_transmit_config>
 801659a:	68e3      	ldr	r3, [r4, #12]
 801659c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80165a0:	60e3      	str	r3, [r4, #12]
 80165a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80165a4:	f241 0011 	movw	r0, #4113	@ 0x1011
 80165a8:	f7fe fe8e 	bl	80152c8 <rcu_periph_clock_enable>
 80165ac:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80165b0:	f7fe fe8a 	bl	80152c8 <rcu_periph_clock_enable>
 80165b4:	4855      	ldr	r0, [pc, #340]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80165b6:	2204      	movs	r2, #4
 80165b8:	2107      	movs	r1, #7
 80165ba:	f7fe fe41 	bl	8015240 <gpio_af_set>
 80165be:	4853      	ldr	r0, [pc, #332]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80165c0:	2304      	movs	r3, #4
 80165c2:	2201      	movs	r2, #1
 80165c4:	2102      	movs	r1, #2
 80165c6:	f7fe fdfd 	bl	80151c4 <gpio_mode_set>
 80165ca:	2304      	movs	r3, #4
 80165cc:	484f      	ldr	r0, [pc, #316]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80165ce:	2202      	movs	r2, #2
 80165d0:	2100      	movs	r1, #0
 80165d2:	f7fe fe19 	bl	8015208 <gpio_output_options_set>
 80165d6:	484d      	ldr	r0, [pc, #308]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80165d8:	2208      	movs	r2, #8
 80165da:	2107      	movs	r1, #7
 80165dc:	f7fe fe30 	bl	8015240 <gpio_af_set>
 80165e0:	2308      	movs	r3, #8
 80165e2:	484a      	ldr	r0, [pc, #296]	@ (801670c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 80165e4:	2201      	movs	r2, #1
 80165e6:	2102      	movs	r1, #2
 80165e8:	f7fe fdec 	bl	80151c4 <gpio_mode_set>
 80165ec:	2308      	movs	r3, #8
 80165ee:	e799      	b.n	8016524 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x13c>
 80165f0:	f241 0013 	movw	r0, #4115	@ 0x1013
 80165f4:	f7fe fe68 	bl	80152c8 <rcu_periph_clock_enable>
 80165f8:	f640 4002 	movw	r0, #3074	@ 0xc02
 80165fc:	f7fe fe64 	bl	80152c8 <rcu_periph_clock_enable>
 8016600:	4843      	ldr	r0, [pc, #268]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016602:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8016606:	2108      	movs	r1, #8
 8016608:	f7fe fe1a 	bl	8015240 <gpio_af_set>
 801660c:	4840      	ldr	r0, [pc, #256]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801660e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8016612:	2201      	movs	r2, #1
 8016614:	2102      	movs	r1, #2
 8016616:	f7fe fdd5 	bl	80151c4 <gpio_mode_set>
 801661a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801661e:	483c      	ldr	r0, [pc, #240]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016620:	2202      	movs	r2, #2
 8016622:	2100      	movs	r1, #0
 8016624:	f7fe fdf0 	bl	8015208 <gpio_output_options_set>
 8016628:	4839      	ldr	r0, [pc, #228]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801662a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 801662e:	2108      	movs	r1, #8
 8016630:	f7fe fe06 	bl	8015240 <gpio_af_set>
 8016634:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8016638:	4835      	ldr	r0, [pc, #212]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 801663a:	2201      	movs	r2, #1
 801663c:	2102      	movs	r1, #2
 801663e:	f7fe fdc1 	bl	80151c4 <gpio_mode_set>
 8016642:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8016646:	4832      	ldr	r0, [pc, #200]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016648:	2202      	movs	r2, #2
 801664a:	2100      	movs	r1, #0
 801664c:	e76d      	b.n	801652a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 801664e:	f241 0014 	movw	r0, #4116	@ 0x1014
 8016652:	f7fe fe39 	bl	80152c8 <rcu_periph_clock_enable>
 8016656:	f640 4002 	movw	r0, #3074	@ 0xc02
 801665a:	f7fe fe35 	bl	80152c8 <rcu_periph_clock_enable>
 801665e:	f640 4003 	movw	r0, #3075	@ 0xc03
 8016662:	f7fe fe31 	bl	80152c8 <rcu_periph_clock_enable>
 8016666:	482a      	ldr	r0, [pc, #168]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016668:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 801666c:	2108      	movs	r1, #8
 801666e:	f7fe fde7 	bl	8015240 <gpio_af_set>
 8016672:	4827      	ldr	r0, [pc, #156]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016674:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8016678:	2201      	movs	r2, #1
 801667a:	2102      	movs	r1, #2
 801667c:	f7fe fda2 	bl	80151c4 <gpio_mode_set>
 8016680:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8016684:	4822      	ldr	r0, [pc, #136]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8016686:	2202      	movs	r2, #2
 8016688:	2100      	movs	r1, #0
 801668a:	f7fe fdbd 	bl	8015208 <gpio_output_options_set>
 801668e:	4821      	ldr	r0, [pc, #132]	@ (8016714 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8016690:	2204      	movs	r2, #4
 8016692:	2108      	movs	r1, #8
 8016694:	f7fe fdd4 	bl	8015240 <gpio_af_set>
 8016698:	481e      	ldr	r0, [pc, #120]	@ (8016714 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 801669a:	2304      	movs	r3, #4
 801669c:	2201      	movs	r2, #1
 801669e:	2102      	movs	r1, #2
 80166a0:	f7fe fd90 	bl	80151c4 <gpio_mode_set>
 80166a4:	481b      	ldr	r0, [pc, #108]	@ (8016714 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 80166a6:	2304      	movs	r3, #4
 80166a8:	2202      	movs	r2, #2
 80166aa:	2100      	movs	r1, #0
 80166ac:	e73d      	b.n	801652a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 80166ae:	f241 1005 	movw	r0, #4357	@ 0x1105
 80166b2:	f7fe fe09 	bl	80152c8 <rcu_periph_clock_enable>
 80166b6:	f640 4002 	movw	r0, #3074	@ 0xc02
 80166ba:	f7fe fe05 	bl	80152c8 <rcu_periph_clock_enable>
 80166be:	4814      	ldr	r0, [pc, #80]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80166c0:	2240      	movs	r2, #64	@ 0x40
 80166c2:	2108      	movs	r1, #8
 80166c4:	f7fe fdbc 	bl	8015240 <gpio_af_set>
 80166c8:	4811      	ldr	r0, [pc, #68]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80166ca:	2340      	movs	r3, #64	@ 0x40
 80166cc:	2201      	movs	r2, #1
 80166ce:	2102      	movs	r1, #2
 80166d0:	f7fe fd78 	bl	80151c4 <gpio_mode_set>
 80166d4:	2340      	movs	r3, #64	@ 0x40
 80166d6:	480e      	ldr	r0, [pc, #56]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80166d8:	2202      	movs	r2, #2
 80166da:	2100      	movs	r1, #0
 80166dc:	f7fe fd94 	bl	8015208 <gpio_output_options_set>
 80166e0:	480b      	ldr	r0, [pc, #44]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80166e2:	2280      	movs	r2, #128	@ 0x80
 80166e4:	2108      	movs	r1, #8
 80166e6:	f7fe fdab 	bl	8015240 <gpio_af_set>
 80166ea:	2380      	movs	r3, #128	@ 0x80
 80166ec:	4808      	ldr	r0, [pc, #32]	@ (8016710 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 80166ee:	2201      	movs	r2, #1
 80166f0:	2102      	movs	r1, #2
 80166f2:	f7fe fd67 	bl	80151c4 <gpio_mode_set>
 80166f6:	2380      	movs	r3, #128	@ 0x80
 80166f8:	e7a5      	b.n	8016646 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x25e>
 80166fa:	bf00      	nop
 80166fc:	40007800 	andmi	r7, r0, r0, lsl #16
 8016700:	40020400 	andmi	r0, r2, r0, lsl #8
 8016704:	40011000 	andmi	r1, r1, r0
 8016708:	40021000 	andmi	r1, r2, r0
 801670c:	40020000 	andmi	r0, r2, r0
 8016710:	40020800 	andmi	r0, r2, r0, lsl #16
 8016714:	40020c00 	andmi	r0, r2, r0, lsl #24
 8016718:	f241 001e 	movw	r0, #4126	@ 0x101e
 801671c:	f7fe fdd4 	bl	80152c8 <rcu_periph_clock_enable>
 8016720:	f640 4004 	movw	r0, #3076	@ 0xc04
 8016724:	f7fe fdd0 	bl	80152c8 <rcu_periph_clock_enable>
 8016728:	4814      	ldr	r0, [pc, #80]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801672a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801672e:	2108      	movs	r1, #8
 8016730:	f7fe fd86 	bl	8015240 <gpio_af_set>
 8016734:	4811      	ldr	r0, [pc, #68]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8016736:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801673a:	2201      	movs	r2, #1
 801673c:	2102      	movs	r1, #2
 801673e:	f7fe fd41 	bl	80151c4 <gpio_mode_set>
 8016742:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8016746:	480d      	ldr	r0, [pc, #52]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8016748:	2202      	movs	r2, #2
 801674a:	2100      	movs	r1, #0
 801674c:	f7fe fd5c 	bl	8015208 <gpio_output_options_set>
 8016750:	480a      	ldr	r0, [pc, #40]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8016752:	2280      	movs	r2, #128	@ 0x80
 8016754:	2108      	movs	r1, #8
 8016756:	f7fe fd73 	bl	8015240 <gpio_af_set>
 801675a:	2380      	movs	r3, #128	@ 0x80
 801675c:	4807      	ldr	r0, [pc, #28]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801675e:	2201      	movs	r2, #1
 8016760:	2102      	movs	r1, #2
 8016762:	f7fe fd2f 	bl	80151c4 <gpio_mode_set>
 8016766:	2380      	movs	r3, #128	@ 0x80
 8016768:	4804      	ldr	r0, [pc, #16]	@ (801677c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 801676a:	2202      	movs	r2, #2
 801676c:	2100      	movs	r1, #0
 801676e:	e6dc      	b.n	801652a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8016770:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8016774:	e6fe      	b.n	8016574 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8016776:	2100      	movs	r1, #0
 8016778:	e6fc      	b.n	8016574 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 801677a:	bf00      	nop
 801677c:	40021000 	andmi	r1, r2, r0

08016780 <__libc_init_array>:
 8016780:	b570      	push	{r4, r5, r6, lr}
 8016782:	4d0c      	ldr	r5, [pc, #48]	@ (80167b4 <__libc_init_array+0x34>)
 8016784:	4c0c      	ldr	r4, [pc, #48]	@ (80167b8 <__libc_init_array+0x38>)
 8016786:	1b64      	subs	r4, r4, r5
 8016788:	10a4      	asrs	r4, r4, #2
 801678a:	2600      	movs	r6, #0
 801678c:	42a6      	cmp	r6, r4
 801678e:	d107      	bne.n	80167a0 <__libc_init_array+0x20>
 8016790:	4d0a      	ldr	r5, [pc, #40]	@ (80167bc <__libc_init_array+0x3c>)
 8016792:	4c0b      	ldr	r4, [pc, #44]	@ (80167c0 <__libc_init_array+0x40>)
 8016794:	1b64      	subs	r4, r4, r5
 8016796:	10a4      	asrs	r4, r4, #2
 8016798:	2600      	movs	r6, #0
 801679a:	42a6      	cmp	r6, r4
 801679c:	d105      	bne.n	80167aa <__libc_init_array+0x2a>
 801679e:	bd70      	pop	{r4, r5, r6, pc}
 80167a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80167a4:	4798      	blx	r3
 80167a6:	3601      	adds	r6, #1
 80167a8:	e7f0      	b.n	801678c <__libc_init_array+0xc>
 80167aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80167ae:	4798      	blx	r3
 80167b0:	3601      	adds	r6, #1
 80167b2:	e7f2      	b.n	801679a <__libc_init_array+0x1a>
 80167b4:	0801a974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, sp, pc}
 80167b8:	0801a974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, sp, pc}
 80167bc:	0801a974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, sp, pc}
 80167c0:	0801a974 	stmdaeq	r1, {r2, r4, r5, r6, r8, fp, sp, pc}

080167c4 <memcpy>:
 80167c4:	b510      	push	{r4, lr}
 80167c6:	1e43      	subs	r3, r0, #1
 80167c8:	440a      	add	r2, r1
 80167ca:	4291      	cmp	r1, r2
 80167cc:	d100      	bne.n	80167d0 <memcpy+0xc>
 80167ce:	bd10      	pop	{r4, pc}
 80167d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80167d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80167d8:	e7f7      	b.n	80167ca <memcpy+0x6>

080167da <memmove>:
 80167da:	4288      	cmp	r0, r1
 80167dc:	b510      	push	{r4, lr}
 80167de:	eb01 0302 	add.w	r3, r1, r2
 80167e2:	d208      	bcs.n	80167f6 <memmove+0x1c>
 80167e4:	1e42      	subs	r2, r0, #1
 80167e6:	4299      	cmp	r1, r3
 80167e8:	d100      	bne.n	80167ec <memmove+0x12>
 80167ea:	bd10      	pop	{r4, pc}
 80167ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 80167f0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80167f4:	e7f7      	b.n	80167e6 <memmove+0xc>
 80167f6:	4402      	add	r2, r0
 80167f8:	4601      	mov	r1, r0
 80167fa:	428a      	cmp	r2, r1
 80167fc:	d0f5      	beq.n	80167ea <memmove+0x10>
 80167fe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8016802:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8016806:	e7f8      	b.n	80167fa <memmove+0x20>

08016808 <memset>:
 8016808:	b570      	push	{r4, r5, r6, lr}
 801680a:	b1ca      	cbz	r2, 8016840 <memset+0x38>
 801680c:	b2c9      	uxtb	r1, r1
 801680e:	4603      	mov	r3, r0
 8016810:	075c      	lsls	r4, r3, #29
 8016812:	d111      	bne.n	8016838 <memset+0x30>
 8016814:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
 8016818:	fba1 5605 	umull	r5, r6, r1, r5
 801681c:	f022 0407 	bic.w	r4, r2, #7
 8016820:	442e      	add	r6, r5
 8016822:	441c      	add	r4, r3
 8016824:	42a3      	cmp	r3, r4
 8016826:	d10c      	bne.n	8016842 <memset+0x3a>
 8016828:	f002 0207 	and.w	r2, r2, #7
 801682c:	4422      	add	r2, r4
 801682e:	4294      	cmp	r4, r2
 8016830:	d006      	beq.n	8016840 <memset+0x38>
 8016832:	f804 1b01 	strb.w	r1, [r4], #1
 8016836:	e7fa      	b.n	801682e <memset+0x26>
 8016838:	3a01      	subs	r2, #1
 801683a:	f803 1b01 	strb.w	r1, [r3], #1
 801683e:	d1e7      	bne.n	8016810 <memset+0x8>
 8016840:	bd70      	pop	{r4, r5, r6, pc}
 8016842:	f843 5b08 	str.w	r5, [r3], #8
 8016846:	f843 6c04 	str.w	r6, [r3, #-4]
 801684a:	e7eb      	b.n	8016824 <memset+0x1c>

0801684c <_itostr>:
 801684c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801684e:	0fc7      	lsrs	r7, r0, #31
 8016850:	b091      	sub	sp, #68	@ 0x44
 8016852:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 8016856:	d01b      	beq.n	8016890 <_itostr+0x44>
 8016858:	4240      	negs	r0, r0
 801685a:	4623      	mov	r3, r4
 801685c:	250a      	movs	r5, #10
 801685e:	46ec      	mov	ip, sp
 8016860:	fb90 f6f5 	sdiv	r6, r0, r5
 8016864:	fb05 0016 	mls	r0, r5, r6, r0
 8016868:	3030      	adds	r0, #48	@ 0x30
 801686a:	f803 0901 	strb.w	r0, [r3], #-1
 801686e:	4630      	mov	r0, r6
 8016870:	b10e      	cbz	r6, 8016876 <_itostr+0x2a>
 8016872:	4563      	cmp	r3, ip
 8016874:	d1f4      	bne.n	8016860 <_itostr+0x14>
 8016876:	b132      	cbz	r2, 8016886 <_itostr+0x3a>
 8016878:	4668      	mov	r0, sp
 801687a:	2530      	movs	r5, #48	@ 0x30
 801687c:	1ae6      	subs	r6, r4, r3
 801687e:	4296      	cmp	r6, r2
 8016880:	da01      	bge.n	8016886 <_itostr+0x3a>
 8016882:	4283      	cmp	r3, r0
 8016884:	d816      	bhi.n	80168b4 <_itostr+0x68>
 8016886:	b167      	cbz	r7, 80168a2 <_itostr+0x56>
 8016888:	222d      	movs	r2, #45	@ 0x2d
 801688a:	f803 2901 	strb.w	r2, [r3], #-1
 801688e:	e008      	b.n	80168a2 <_itostr+0x56>
 8016890:	2800      	cmp	r0, #0
 8016892:	d1e2      	bne.n	801685a <_itostr+0xe>
 8016894:	2330      	movs	r3, #48	@ 0x30
 8016896:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 801689a:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801689e:	2a00      	cmp	r2, #0
 80168a0:	d1ea      	bne.n	8016878 <_itostr+0x2c>
 80168a2:	3301      	adds	r3, #1
 80168a4:	1ae0      	subs	r0, r4, r3
 80168a6:	3901      	subs	r1, #1
 80168a8:	aa10      	add	r2, sp, #64	@ 0x40
 80168aa:	4293      	cmp	r3, r2
 80168ac:	d305      	bcc.n	80168ba <_itostr+0x6e>
 80168ae:	3001      	adds	r0, #1
 80168b0:	b011      	add	sp, #68	@ 0x44
 80168b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168b4:	f803 5901 	strb.w	r5, [r3], #-1
 80168b8:	e7e0      	b.n	801687c <_itostr+0x30>
 80168ba:	f813 2b01 	ldrb.w	r2, [r3], #1
 80168be:	f801 2f01 	strb.w	r2, [r1, #1]!
 80168c2:	e7f1      	b.n	80168a8 <_itostr+0x5c>

080168c4 <_xputch>:
 80168c4:	4603      	mov	r3, r0
 80168c6:	b410      	push	{r4}
 80168c8:	4c09      	ldr	r4, [pc, #36]	@ (80168f0 <_xputch+0x2c>)
 80168ca:	68da      	ldr	r2, [r3, #12]
 80168cc:	4608      	mov	r0, r1
 80168ce:	6821      	ldr	r1, [r4, #0]
 80168d0:	3201      	adds	r2, #1
 80168d2:	60da      	str	r2, [r3, #12]
 80168d4:	b141      	cbz	r1, 80168e8 <_xputch+0x24>
 80168d6:	691b      	ldr	r3, [r3, #16]
 80168d8:	429a      	cmp	r2, r3
 80168da:	da02      	bge.n	80168e2 <_xputch+0x1e>
 80168dc:	1c4b      	adds	r3, r1, #1
 80168de:	6023      	str	r3, [r4, #0]
 80168e0:	7008      	strb	r0, [r1, #0]
 80168e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80168e6:	4770      	bx	lr
 80168e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80168ec:	f7fd bfc8 	b.w	8014880 <console_putc>
 80168f0:	200145d0 	ldrdcs	r4, [r1], -r0

080168f4 <_format_int>:
 80168f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168f6:	b091      	sub	sp, #68	@ 0x44
 80168f8:	4606      	mov	r6, r0
 80168fa:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 80168fe:	bb91      	cbnz	r1, 8016966 <_format_int+0x72>
 8016900:	2330      	movs	r3, #48	@ 0x30
 8016902:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8016906:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 801690a:	6832      	ldr	r2, [r6, #0]
 801690c:	07d5      	lsls	r5, r2, #31
 801690e:	d507      	bpl.n	8016920 <_format_int+0x2c>
 8016910:	6870      	ldr	r0, [r6, #4]
 8016912:	4669      	mov	r1, sp
 8016914:	2530      	movs	r5, #48	@ 0x30
 8016916:	1ae7      	subs	r7, r4, r3
 8016918:	4287      	cmp	r7, r0
 801691a:	da01      	bge.n	8016920 <_format_int+0x2c>
 801691c:	428b      	cmp	r3, r1
 801691e:	d833      	bhi.n	8016988 <_format_int+0x94>
 8016920:	0690      	lsls	r0, r2, #26
 8016922:	d507      	bpl.n	8016934 <_format_int+0x40>
 8016924:	68b0      	ldr	r0, [r6, #8]
 8016926:	4669      	mov	r1, sp
 8016928:	2530      	movs	r5, #48	@ 0x30
 801692a:	1ae7      	subs	r7, r4, r3
 801692c:	4287      	cmp	r7, r0
 801692e:	da01      	bge.n	8016934 <_format_int+0x40>
 8016930:	428b      	cmp	r3, r1
 8016932:	d82c      	bhi.n	801698e <_format_int+0x9a>
 8016934:	0711      	lsls	r1, r2, #28
 8016936:	bf44      	itt	mi
 8016938:	212d      	movmi	r1, #45	@ 0x2d
 801693a:	f803 1901 	strbmi.w	r1, [r3], #-1
 801693e:	0652      	lsls	r2, r2, #25
 8016940:	d407      	bmi.n	8016952 <_format_int+0x5e>
 8016942:	68b1      	ldr	r1, [r6, #8]
 8016944:	466a      	mov	r2, sp
 8016946:	2020      	movs	r0, #32
 8016948:	1ae5      	subs	r5, r4, r3
 801694a:	428d      	cmp	r5, r1
 801694c:	da01      	bge.n	8016952 <_format_int+0x5e>
 801694e:	4293      	cmp	r3, r2
 8016950:	d820      	bhi.n	8016994 <_format_int+0xa0>
 8016952:	1ae5      	subs	r5, r4, r3
 8016954:	1c5c      	adds	r4, r3, #1
 8016956:	ab10      	add	r3, sp, #64	@ 0x40
 8016958:	429c      	cmp	r4, r3
 801695a:	d31e      	bcc.n	801699a <_format_int+0xa6>
 801695c:	68b3      	ldr	r3, [r6, #8]
 801695e:	42ab      	cmp	r3, r5
 8016960:	dc21      	bgt.n	80169a6 <_format_int+0xb2>
 8016962:	b011      	add	sp, #68	@ 0x44
 8016964:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016966:	4623      	mov	r3, r4
 8016968:	200a      	movs	r0, #10
 801696a:	466f      	mov	r7, sp
 801696c:	fbb1 f5f0 	udiv	r5, r1, r0
 8016970:	fb00 1215 	mls	r2, r0, r5, r1
 8016974:	3230      	adds	r2, #48	@ 0x30
 8016976:	f803 2901 	strb.w	r2, [r3], #-1
 801697a:	460a      	mov	r2, r1
 801697c:	2a09      	cmp	r2, #9
 801697e:	4629      	mov	r1, r5
 8016980:	d9c3      	bls.n	801690a <_format_int+0x16>
 8016982:	42bb      	cmp	r3, r7
 8016984:	d1f2      	bne.n	801696c <_format_int+0x78>
 8016986:	e7c0      	b.n	801690a <_format_int+0x16>
 8016988:	f803 5901 	strb.w	r5, [r3], #-1
 801698c:	e7c3      	b.n	8016916 <_format_int+0x22>
 801698e:	f803 5901 	strb.w	r5, [r3], #-1
 8016992:	e7ca      	b.n	801692a <_format_int+0x36>
 8016994:	f803 0901 	strb.w	r0, [r3], #-1
 8016998:	e7d6      	b.n	8016948 <_format_int+0x54>
 801699a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801699e:	4630      	mov	r0, r6
 80169a0:	f7ff ff90 	bl	80168c4 <_xputch>
 80169a4:	e7d7      	b.n	8016956 <_format_int+0x62>
 80169a6:	2120      	movs	r1, #32
 80169a8:	4630      	mov	r0, r6
 80169aa:	f7ff ff8b 	bl	80168c4 <_xputch>
 80169ae:	3501      	adds	r5, #1
 80169b0:	e7d4      	b.n	801695c <_format_int+0x68>

080169b2 <_format_hex>:
 80169b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80169b4:	b091      	sub	sp, #68	@ 0x44
 80169b6:	6804      	ldr	r4, [r0, #0]
 80169b8:	4606      	mov	r6, r0
 80169ba:	f10d 023f 	add.w	r2, sp, #63	@ 0x3f
 80169be:	bb61      	cbnz	r1, 8016a1a <_format_hex+0x68>
 80169c0:	2330      	movs	r3, #48	@ 0x30
 80169c2:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 80169c6:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 80169ca:	07e5      	lsls	r5, r4, #31
 80169cc:	d507      	bpl.n	80169de <_format_hex+0x2c>
 80169ce:	6870      	ldr	r0, [r6, #4]
 80169d0:	4669      	mov	r1, sp
 80169d2:	2530      	movs	r5, #48	@ 0x30
 80169d4:	1ad7      	subs	r7, r2, r3
 80169d6:	4287      	cmp	r7, r0
 80169d8:	da01      	bge.n	80169de <_format_hex+0x2c>
 80169da:	428b      	cmp	r3, r1
 80169dc:	d831      	bhi.n	8016a42 <_format_hex+0x90>
 80169de:	06a0      	lsls	r0, r4, #26
 80169e0:	d507      	bpl.n	80169f2 <_format_hex+0x40>
 80169e2:	68b0      	ldr	r0, [r6, #8]
 80169e4:	4669      	mov	r1, sp
 80169e6:	2530      	movs	r5, #48	@ 0x30
 80169e8:	1ad7      	subs	r7, r2, r3
 80169ea:	4287      	cmp	r7, r0
 80169ec:	da01      	bge.n	80169f2 <_format_hex+0x40>
 80169ee:	428b      	cmp	r3, r1
 80169f0:	d82a      	bhi.n	8016a48 <_format_hex+0x96>
 80169f2:	0661      	lsls	r1, r4, #25
 80169f4:	d407      	bmi.n	8016a06 <_format_hex+0x54>
 80169f6:	68b0      	ldr	r0, [r6, #8]
 80169f8:	4669      	mov	r1, sp
 80169fa:	2420      	movs	r4, #32
 80169fc:	1ad5      	subs	r5, r2, r3
 80169fe:	4285      	cmp	r5, r0
 8016a00:	da01      	bge.n	8016a06 <_format_hex+0x54>
 8016a02:	428b      	cmp	r3, r1
 8016a04:	d823      	bhi.n	8016a4e <_format_hex+0x9c>
 8016a06:	1ad5      	subs	r5, r2, r3
 8016a08:	1c5c      	adds	r4, r3, #1
 8016a0a:	ab10      	add	r3, sp, #64	@ 0x40
 8016a0c:	429c      	cmp	r4, r3
 8016a0e:	d321      	bcc.n	8016a54 <_format_hex+0xa2>
 8016a10:	68b3      	ldr	r3, [r6, #8]
 8016a12:	42ab      	cmp	r3, r5
 8016a14:	dc24      	bgt.n	8016a60 <_format_hex+0xae>
 8016a16:	b011      	add	sp, #68	@ 0x44
 8016a18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016a1a:	f014 0f02 	tst.w	r4, #2
 8016a1e:	bf0c      	ite	eq
 8016a20:	2757      	moveq	r7, #87	@ 0x57
 8016a22:	2737      	movne	r7, #55	@ 0x37
 8016a24:	4613      	mov	r3, r2
 8016a26:	466d      	mov	r5, sp
 8016a28:	f001 000f 	and.w	r0, r1, #15
 8016a2c:	2809      	cmp	r0, #9
 8016a2e:	bf94      	ite	ls
 8016a30:	3030      	addls	r0, #48	@ 0x30
 8016a32:	19c0      	addhi	r0, r0, r7
 8016a34:	0909      	lsrs	r1, r1, #4
 8016a36:	f803 0901 	strb.w	r0, [r3], #-1
 8016a3a:	d0c6      	beq.n	80169ca <_format_hex+0x18>
 8016a3c:	42ab      	cmp	r3, r5
 8016a3e:	d1f3      	bne.n	8016a28 <_format_hex+0x76>
 8016a40:	e7c3      	b.n	80169ca <_format_hex+0x18>
 8016a42:	f803 5901 	strb.w	r5, [r3], #-1
 8016a46:	e7c5      	b.n	80169d4 <_format_hex+0x22>
 8016a48:	f803 5901 	strb.w	r5, [r3], #-1
 8016a4c:	e7cc      	b.n	80169e8 <_format_hex+0x36>
 8016a4e:	f803 4901 	strb.w	r4, [r3], #-1
 8016a52:	e7d3      	b.n	80169fc <_format_hex+0x4a>
 8016a54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8016a58:	4630      	mov	r0, r6
 8016a5a:	f7ff ff33 	bl	80168c4 <_xputch>
 8016a5e:	e7d4      	b.n	8016a0a <_format_hex+0x58>
 8016a60:	2120      	movs	r1, #32
 8016a62:	4630      	mov	r0, r6
 8016a64:	f7ff ff2e 	bl	80168c4 <_xputch>
 8016a68:	3501      	adds	r5, #1
 8016a6a:	e7d1      	b.n	8016a10 <_format_hex+0x5e>

08016a6c <_vprintf>:
 8016a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016a70:	2700      	movs	r7, #0
 8016a72:	b096      	sub	sp, #88	@ 0x58
 8016a74:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8016a78:	460b      	mov	r3, r1
 8016a7a:	4614      	mov	r4, r2
 8016a7c:	f04f 080a 	mov.w	r8, #10
 8016a80:	7819      	ldrb	r1, [r3, #0]
 8016a82:	b919      	cbnz	r1, 8016a8c <_vprintf+0x20>
 8016a84:	9804      	ldr	r0, [sp, #16]
 8016a86:	b016      	add	sp, #88	@ 0x58
 8016a88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016a8c:	2925      	cmp	r1, #37	@ 0x25
 8016a8e:	f103 0501 	add.w	r5, r3, #1
 8016a92:	d004      	beq.n	8016a9e <_vprintf+0x32>
 8016a94:	a801      	add	r0, sp, #4
 8016a96:	f7ff ff15 	bl	80168c4 <_xputch>
 8016a9a:	462b      	mov	r3, r5
 8016a9c:	e7f0      	b.n	8016a80 <_vprintf+0x14>
 8016a9e:	785a      	ldrb	r2, [r3, #1]
 8016aa0:	9703      	str	r7, [sp, #12]
 8016aa2:	2a30      	cmp	r2, #48	@ 0x30
 8016aa4:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8016aa8:	d127      	bne.n	8016afa <_vprintf+0x8e>
 8016aaa:	2220      	movs	r2, #32
 8016aac:	9201      	str	r2, [sp, #4]
 8016aae:	1c9d      	adds	r5, r3, #2
 8016ab0:	2200      	movs	r2, #0
 8016ab2:	462e      	mov	r6, r5
 8016ab4:	4613      	mov	r3, r2
 8016ab6:	7831      	ldrb	r1, [r6, #0]
 8016ab8:	f1a1 0030 	sub.w	r0, r1, #48	@ 0x30
 8016abc:	2809      	cmp	r0, #9
 8016abe:	4635      	mov	r5, r6
 8016ac0:	f106 0601 	add.w	r6, r6, #1
 8016ac4:	d91d      	bls.n	8016b02 <_vprintf+0x96>
 8016ac6:	b12a      	cbz	r2, 8016ad4 <_vprintf+0x68>
 8016ac8:	9303      	str	r3, [sp, #12]
 8016aca:	b11b      	cbz	r3, 8016ad4 <_vprintf+0x68>
 8016acc:	9b01      	ldr	r3, [sp, #4]
 8016ace:	f043 0310 	orr.w	r3, r3, #16
 8016ad2:	9301      	str	r3, [sp, #4]
 8016ad4:	292e      	cmp	r1, #46	@ 0x2e
 8016ad6:	d123      	bne.n	8016b20 <_vprintf+0xb4>
 8016ad8:	786b      	ldrb	r3, [r5, #1]
 8016ada:	2b2a      	cmp	r3, #42	@ 0x2a
 8016adc:	d015      	beq.n	8016b0a <_vprintf+0x9e>
 8016ade:	2100      	movs	r1, #0
 8016ae0:	1c68      	adds	r0, r5, #1
 8016ae2:	460a      	mov	r2, r1
 8016ae4:	260a      	movs	r6, #10
 8016ae6:	7803      	ldrb	r3, [r0, #0]
 8016ae8:	3b30      	subs	r3, #48	@ 0x30
 8016aea:	2b09      	cmp	r3, #9
 8016aec:	4605      	mov	r5, r0
 8016aee:	f100 0001 	add.w	r0, r0, #1
 8016af2:	d959      	bls.n	8016ba8 <_vprintf+0x13c>
 8016af4:	b181      	cbz	r1, 8016b18 <_vprintf+0xac>
 8016af6:	9202      	str	r2, [sp, #8]
 8016af8:	e00e      	b.n	8016b18 <_vprintf+0xac>
 8016afa:	2a2d      	cmp	r2, #45	@ 0x2d
 8016afc:	d1d8      	bne.n	8016ab0 <_vprintf+0x44>
 8016afe:	2240      	movs	r2, #64	@ 0x40
 8016b00:	e7d4      	b.n	8016aac <_vprintf+0x40>
 8016b02:	fb08 0303 	mla	r3, r8, r3, r0
 8016b06:	2201      	movs	r2, #1
 8016b08:	e7d5      	b.n	8016ab6 <_vprintf+0x4a>
 8016b0a:	f854 3b04 	ldr.w	r3, [r4], #4
 8016b0e:	2b00      	cmp	r3, #0
 8016b10:	bfb8      	it	lt
 8016b12:	425b      	neglt	r3, r3
 8016b14:	3502      	adds	r5, #2
 8016b16:	9302      	str	r3, [sp, #8]
 8016b18:	9b01      	ldr	r3, [sp, #4]
 8016b1a:	f043 0301 	orr.w	r3, r3, #1
 8016b1e:	9301      	str	r3, [sp, #4]
 8016b20:	782b      	ldrb	r3, [r5, #0]
 8016b22:	2b6c      	cmp	r3, #108	@ 0x6c
 8016b24:	bf04      	itt	eq
 8016b26:	3501      	addeq	r5, #1
 8016b28:	9b01      	ldreq	r3, [sp, #4]
 8016b2a:	7829      	ldrb	r1, [r5, #0]
 8016b2c:	bf04      	itt	eq
 8016b2e:	f043 0304 	orreq.w	r3, r3, #4
 8016b32:	9301      	streq	r3, [sp, #4]
 8016b34:	2958      	cmp	r1, #88	@ 0x58
 8016b36:	f000 8143 	beq.w	8016dc0 <_vprintf+0x354>
 8016b3a:	f1a1 0363 	sub.w	r3, r1, #99	@ 0x63
 8016b3e:	b2da      	uxtb	r2, r3
 8016b40:	2a15      	cmp	r2, #21
 8016b42:	d8a7      	bhi.n	8016a94 <_vprintf+0x28>
 8016b44:	2b15      	cmp	r3, #21
 8016b46:	d8a5      	bhi.n	8016a94 <_vprintf+0x28>
 8016b48:	a201      	add	r2, pc, #4	@ (adr r2, 8016b50 <_vprintf+0xe4>)
 8016b4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016b4e:	bf00      	nop
 8016b50:	08016bb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, fp, sp, lr}
 8016b54:	08016bbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, fp, sp, lr}
 8016b58:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b5c:	08016bd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, fp, sp, lr}
 8016b60:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b64:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b68:	08016bbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, fp, sp, lr}
 8016b6c:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b70:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b74:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b78:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b7c:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b80:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b84:	08016d21 	stmdaeq	r1, {r0, r5, r8, sl, fp, sp, lr}
 8016b88:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b8c:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b90:	08016d47 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, fp, sp, lr}
 8016b94:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016b98:	08016dbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, fp, sp, lr}
 8016b9c:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016ba0:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 8016ba4:	08016dc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, fp, sp, lr}
 8016ba8:	fb06 3202 	mla	r2, r6, r2, r3
 8016bac:	2101      	movs	r1, #1
 8016bae:	e79a      	b.n	8016ae6 <_vprintf+0x7a>
 8016bb0:	f854 1b04 	ldr.w	r1, [r4], #4
 8016bb4:	a801      	add	r0, sp, #4
 8016bb6:	f7ff fe85 	bl	80168c4 <_xputch>
 8016bba:	3501      	adds	r5, #1
 8016bbc:	e76d      	b.n	8016a9a <_vprintf+0x2e>
 8016bbe:	f854 1b04 	ldr.w	r1, [r4], #4
 8016bc2:	9b01      	ldr	r3, [sp, #4]
 8016bc4:	2900      	cmp	r1, #0
 8016bc6:	da03      	bge.n	8016bd0 <_vprintf+0x164>
 8016bc8:	f043 0308 	orr.w	r3, r3, #8
 8016bcc:	9301      	str	r3, [sp, #4]
 8016bce:	4249      	negs	r1, r1
 8016bd0:	a801      	add	r0, sp, #4
 8016bd2:	f7ff fe8f 	bl	80168f4 <_format_int>
 8016bd6:	e7f0      	b.n	8016bba <_vprintf+0x14e>
 8016bd8:	3407      	adds	r4, #7
 8016bda:	f024 0407 	bic.w	r4, r4, #7
 8016bde:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8016be2:	f7f2 fb83 	bl	80092ec <__aeabi_d2f>
 8016be6:	9b01      	ldr	r3, [sp, #4]
 8016be8:	ee07 0a90 	vmov	s15, r0
 8016bec:	07de      	lsls	r6, r3, #31
 8016bee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016bf2:	bf4c      	ite	mi
 8016bf4:	9e02      	ldrmi	r6, [sp, #8]
 8016bf6:	2606      	movpl	r6, #6
 8016bf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bfc:	bf48      	it	mi
 8016bfe:	eef1 7a67 	vnegmi.f32	s15, s15
 8016c02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8016c06:	bf4a      	itet	mi
 8016c08:	f10d 0a19 	addmi.w	sl, sp, #25
 8016c0c:	f10d 0a18 	addpl.w	sl, sp, #24
 8016c10:	232d      	movmi	r3, #45	@ 0x2d
 8016c12:	ee17 0a10 	vmov	r0, s14
 8016c16:	f04f 0200 	mov.w	r2, #0
 8016c1a:	4651      	mov	r1, sl
 8016c1c:	bf48      	it	mi
 8016c1e:	f88d 3018 	strbmi.w	r3, [sp, #24]
 8016c22:	f7ff fe13 	bl	801684c <_itostr>
 8016c26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016c2a:	232e      	movs	r3, #46	@ 0x2e
 8016c2c:	f80a 3000 	strb.w	r3, [sl, r0]
 8016c30:	eb0a 0900 	add.w	r9, sl, r0
 8016c34:	230a      	movs	r3, #10
 8016c36:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016c3a:	1c72      	adds	r2, r6, #1
 8016c3c:	f109 0901 	add.w	r9, r9, #1
 8016c40:	4619      	mov	r1, r3
 8016c42:	2e00      	cmp	r6, #0
 8016c44:	dc41      	bgt.n	8016cca <_vprintf+0x25e>
 8016c46:	ee07 3a10 	vmov	s14, r3
 8016c4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016c4e:	4649      	mov	r1, r9
 8016c50:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016c54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c58:	ee17 0a90 	vmov	r0, s15
 8016c5c:	f7ff fdf6 	bl	801684c <_itostr>
 8016c60:	4448      	add	r0, r9
 8016c62:	f10d 0918 	add.w	r9, sp, #24
 8016c66:	eba0 0009 	sub.w	r0, r0, r9
 8016c6a:	1e46      	subs	r6, r0, #1
 8016c6c:	eb09 0206 	add.w	r2, r9, r6
 8016c70:	f819 3006 	ldrb.w	r3, [r9, r6]
 8016c74:	2b34      	cmp	r3, #52	@ 0x34
 8016c76:	d911      	bls.n	8016c9c <_vprintf+0x230>
 8016c78:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8016c7c:	292e      	cmp	r1, #46	@ 0x2e
 8016c7e:	f102 33ff 	add.w	r3, r2, #4294967295	@ 0xffffffff
 8016c82:	d028      	beq.n	8016cd6 <_vprintf+0x26a>
 8016c84:	469c      	mov	ip, r3
 8016c86:	f04f 0e30 	mov.w	lr, #48	@ 0x30
 8016c8a:	4663      	mov	r3, ip
 8016c8c:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8016c90:	2939      	cmp	r1, #57	@ 0x39
 8016c92:	d01d      	beq.n	8016cd0 <_vprintf+0x264>
 8016c94:	292e      	cmp	r1, #46	@ 0x2e
 8016c96:	d01e      	beq.n	8016cd6 <_vprintf+0x26a>
 8016c98:	3101      	adds	r1, #1
 8016c9a:	7019      	strb	r1, [r3, #0]
 8016c9c:	f106 0358 	add.w	r3, r6, #88	@ 0x58
 8016ca0:	446b      	add	r3, sp
 8016ca2:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8016ca6:	2b2e      	cmp	r3, #46	@ 0x2e
 8016ca8:	bf08      	it	eq
 8016caa:	f106 36ff 	addeq.w	r6, r6, #4294967295	@ 0xffffffff
 8016cae:	46b2      	mov	sl, r6
 8016cb0:	9b03      	ldr	r3, [sp, #12]
 8016cb2:	4553      	cmp	r3, sl
 8016cb4:	dc2d      	bgt.n	8016d12 <_vprintf+0x2a6>
 8016cb6:	2e00      	cmp	r6, #0
 8016cb8:	f77f af7f 	ble.w	8016bba <_vprintf+0x14e>
 8016cbc:	f819 1b01 	ldrb.w	r1, [r9], #1
 8016cc0:	a801      	add	r0, sp, #4
 8016cc2:	f7ff fdff 	bl	80168c4 <_xputch>
 8016cc6:	3e01      	subs	r6, #1
 8016cc8:	e7f5      	b.n	8016cb6 <_vprintf+0x24a>
 8016cca:	434b      	muls	r3, r1
 8016ccc:	3e01      	subs	r6, #1
 8016cce:	e7b8      	b.n	8016c42 <_vprintf+0x1d6>
 8016cd0:	f88c e001 	strb.w	lr, [ip, #1]
 8016cd4:	e7d9      	b.n	8016c8a <_vprintf+0x21e>
 8016cd6:	3b01      	subs	r3, #1
 8016cd8:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 8016cdc:	7819      	ldrb	r1, [r3, #0]
 8016cde:	2939      	cmp	r1, #57	@ 0x39
 8016ce0:	d10d      	bne.n	8016cfe <_vprintf+0x292>
 8016ce2:	454b      	cmp	r3, r9
 8016ce4:	d208      	bcs.n	8016cf8 <_vprintf+0x28c>
 8016ce6:	1c51      	adds	r1, r2, #1
 8016ce8:	1c9e      	adds	r6, r3, #2
 8016cea:	3202      	adds	r2, #2
 8016cec:	4296      	cmp	r6, r2
 8016cee:	d10b      	bne.n	8016d08 <_vprintf+0x29c>
 8016cf0:	2231      	movs	r2, #49	@ 0x31
 8016cf2:	705a      	strb	r2, [r3, #1]
 8016cf4:	4606      	mov	r6, r0
 8016cf6:	e7d1      	b.n	8016c9c <_vprintf+0x230>
 8016cf8:	f803 c901 	strb.w	ip, [r3], #-1
 8016cfc:	e7ee      	b.n	8016cdc <_vprintf+0x270>
 8016cfe:	454b      	cmp	r3, r9
 8016d00:	d3f1      	bcc.n	8016ce6 <_vprintf+0x27a>
 8016d02:	292d      	cmp	r1, #45	@ 0x2d
 8016d04:	d1c8      	bne.n	8016c98 <_vprintf+0x22c>
 8016d06:	e7ee      	b.n	8016ce6 <_vprintf+0x27a>
 8016d08:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8016d0c:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8016d10:	e7ec      	b.n	8016cec <_vprintf+0x280>
 8016d12:	2120      	movs	r1, #32
 8016d14:	a801      	add	r0, sp, #4
 8016d16:	f7ff fdd5 	bl	80168c4 <_xputch>
 8016d1a:	f10a 0a01 	add.w	sl, sl, #1
 8016d1e:	e7c7      	b.n	8016cb0 <_vprintf+0x244>
 8016d20:	2308      	movs	r3, #8
 8016d22:	f854 6b04 	ldr.w	r6, [r4], #4
 8016d26:	9303      	str	r3, [sp, #12]
 8016d28:	2130      	movs	r1, #48	@ 0x30
 8016d2a:	2320      	movs	r3, #32
 8016d2c:	a801      	add	r0, sp, #4
 8016d2e:	9301      	str	r3, [sp, #4]
 8016d30:	f7ff fdc8 	bl	80168c4 <_xputch>
 8016d34:	2178      	movs	r1, #120	@ 0x78
 8016d36:	a801      	add	r0, sp, #4
 8016d38:	f7ff fdc4 	bl	80168c4 <_xputch>
 8016d3c:	4631      	mov	r1, r6
 8016d3e:	a801      	add	r0, sp, #4
 8016d40:	f7ff fe37 	bl	80169b2 <_format_hex>
 8016d44:	e739      	b.n	8016bba <_vprintf+0x14e>
 8016d46:	f854 9b04 	ldr.w	r9, [r4], #4
 8016d4a:	2600      	movs	r6, #0
 8016d4c:	f819 3006 	ldrb.w	r3, [r9, r6]
 8016d50:	b993      	cbnz	r3, 8016d78 <_vprintf+0x30c>
 8016d52:	9b01      	ldr	r3, [sp, #4]
 8016d54:	07d9      	lsls	r1, r3, #31
 8016d56:	d503      	bpl.n	8016d60 <_vprintf+0x2f4>
 8016d58:	9b02      	ldr	r3, [sp, #8]
 8016d5a:	429e      	cmp	r6, r3
 8016d5c:	bfa8      	it	ge
 8016d5e:	461e      	movge	r6, r3
 8016d60:	9b01      	ldr	r3, [sp, #4]
 8016d62:	065a      	lsls	r2, r3, #25
 8016d64:	f106 0a01 	add.w	sl, r6, #1
 8016d68:	d403      	bmi.n	8016d72 <_vprintf+0x306>
 8016d6a:	9b03      	ldr	r3, [sp, #12]
 8016d6c:	429e      	cmp	r6, r3
 8016d6e:	db05      	blt.n	8016d7c <_vprintf+0x310>
 8016d70:	4656      	mov	r6, sl
 8016d72:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8016d76:	e00d      	b.n	8016d94 <_vprintf+0x328>
 8016d78:	3601      	adds	r6, #1
 8016d7a:	e7e7      	b.n	8016d4c <_vprintf+0x2e0>
 8016d7c:	2120      	movs	r1, #32
 8016d7e:	a801      	add	r0, sp, #4
 8016d80:	f7ff fda0 	bl	80168c4 <_xputch>
 8016d84:	4656      	mov	r6, sl
 8016d86:	e7eb      	b.n	8016d60 <_vprintf+0x2f4>
 8016d88:	a801      	add	r0, sp, #4
 8016d8a:	f7ff fd9b 	bl	80168c4 <_xputch>
 8016d8e:	9b02      	ldr	r3, [sp, #8]
 8016d90:	3b01      	subs	r3, #1
 8016d92:	9302      	str	r3, [sp, #8]
 8016d94:	9b01      	ldr	r3, [sp, #4]
 8016d96:	07db      	lsls	r3, r3, #31
 8016d98:	d501      	bpl.n	8016d9e <_vprintf+0x332>
 8016d9a:	9b02      	ldr	r3, [sp, #8]
 8016d9c:	b11b      	cbz	r3, 8016da6 <_vprintf+0x33a>
 8016d9e:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8016da2:	2900      	cmp	r1, #0
 8016da4:	d1f0      	bne.n	8016d88 <_vprintf+0x31c>
 8016da6:	9b03      	ldr	r3, [sp, #12]
 8016da8:	42b3      	cmp	r3, r6
 8016daa:	f77f af06 	ble.w	8016bba <_vprintf+0x14e>
 8016dae:	2120      	movs	r1, #32
 8016db0:	a801      	add	r0, sp, #4
 8016db2:	f7ff fd87 	bl	80168c4 <_xputch>
 8016db6:	3601      	adds	r6, #1
 8016db8:	e7f5      	b.n	8016da6 <_vprintf+0x33a>
 8016dba:	f854 1b04 	ldr.w	r1, [r4], #4
 8016dbe:	e707      	b.n	8016bd0 <_vprintf+0x164>
 8016dc0:	9b01      	ldr	r3, [sp, #4]
 8016dc2:	f043 0302 	orr.w	r3, r3, #2
 8016dc6:	9301      	str	r3, [sp, #4]
 8016dc8:	f854 1b04 	ldr.w	r1, [r4], #4
 8016dcc:	e7b7      	b.n	8016d3e <_vprintf+0x2d2>
 8016dce:	bf00      	nop

08016dd0 <printf>:
 8016dd0:	b40f      	push	{r0, r1, r2, r3}
 8016dd2:	b507      	push	{r0, r1, r2, lr}
 8016dd4:	aa04      	add	r2, sp, #16
 8016dd6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8016dda:	f852 1b04 	ldr.w	r1, [r2], #4
 8016dde:	9201      	str	r2, [sp, #4]
 8016de0:	f7ff fe44 	bl	8016a6c <_vprintf>
 8016de4:	b003      	add	sp, #12
 8016de6:	f85d eb04 	ldr.w	lr, [sp], #4
 8016dea:	b004      	add	sp, #16
 8016dec:	4770      	bx	lr
	...

08016df0 <sprintf>:
 8016df0:	b40e      	push	{r1, r2, r3}
 8016df2:	b517      	push	{r0, r1, r2, r4, lr}
 8016df4:	4c09      	ldr	r4, [pc, #36]	@ (8016e1c <sprintf+0x2c>)
 8016df6:	aa05      	add	r2, sp, #20
 8016df8:	6020      	str	r0, [r4, #0]
 8016dfa:	f852 1b04 	ldr.w	r1, [r2], #4
 8016dfe:	9201      	str	r2, [sp, #4]
 8016e00:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8016e04:	f7ff fe32 	bl	8016a6c <_vprintf>
 8016e08:	6822      	ldr	r2, [r4, #0]
 8016e0a:	2300      	movs	r3, #0
 8016e0c:	7013      	strb	r3, [r2, #0]
 8016e0e:	6023      	str	r3, [r4, #0]
 8016e10:	b003      	add	sp, #12
 8016e12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016e16:	b003      	add	sp, #12
 8016e18:	4770      	bx	lr
 8016e1a:	bf00      	nop
 8016e1c:	200145d0 	ldrdcs	r4, [r1], -r0

08016e20 <snprintf>:
 8016e20:	b40c      	push	{r2, r3}
 8016e22:	b513      	push	{r0, r1, r4, lr}
 8016e24:	4c09      	ldr	r4, [pc, #36]	@ (8016e4c <snprintf+0x2c>)
 8016e26:	aa04      	add	r2, sp, #16
 8016e28:	460b      	mov	r3, r1
 8016e2a:	6020      	str	r0, [r4, #0]
 8016e2c:	f852 1b04 	ldr.w	r1, [r2], #4
 8016e30:	9201      	str	r2, [sp, #4]
 8016e32:	4618      	mov	r0, r3
 8016e34:	f7ff fe1a 	bl	8016a6c <_vprintf>
 8016e38:	6822      	ldr	r2, [r4, #0]
 8016e3a:	2300      	movs	r3, #0
 8016e3c:	7013      	strb	r3, [r2, #0]
 8016e3e:	6023      	str	r3, [r4, #0]
 8016e40:	b002      	add	sp, #8
 8016e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016e46:	b002      	add	sp, #8
 8016e48:	4770      	bx	lr
 8016e4a:	bf00      	nop
 8016e4c:	200145d0 	ldrdcs	r4, [r1], -r0

08016e50 <vsnprintf>:
 8016e50:	b538      	push	{r3, r4, r5, lr}
 8016e52:	4c06      	ldr	r4, [pc, #24]	@ (8016e6c <vsnprintf+0x1c>)
 8016e54:	4605      	mov	r5, r0
 8016e56:	4608      	mov	r0, r1
 8016e58:	4611      	mov	r1, r2
 8016e5a:	461a      	mov	r2, r3
 8016e5c:	6025      	str	r5, [r4, #0]
 8016e5e:	f7ff fe05 	bl	8016a6c <_vprintf>
 8016e62:	6822      	ldr	r2, [r4, #0]
 8016e64:	2300      	movs	r3, #0
 8016e66:	7013      	strb	r3, [r2, #0]
 8016e68:	6023      	str	r3, [r4, #0]
 8016e6a:	bd38      	pop	{r3, r4, r5, pc}
 8016e6c:	200145d0 	ldrdcs	r4, [r1], -r0

08016e70 <putchar>:
 8016e70:	b508      	push	{r3, lr}
 8016e72:	f7fd fd05 	bl	8014880 <console_putc>
 8016e76:	2001      	movs	r0, #1
 8016e78:	bd08      	pop	{r3, pc}

08016e7a <puts>:
 8016e7a:	b508      	push	{r3, lr}
 8016e7c:	f7fd fd02 	bl	8014884 <console_puts>
 8016e80:	200a      	movs	r0, #10
 8016e82:	f7fd fcfd 	bl	8014880 <console_putc>
 8016e86:	2001      	movs	r0, #1
 8016e88:	bd08      	pop	{r3, pc}
	...

08016e8c <random>:
 8016e8c:	4a06      	ldr	r2, [pc, #24]	@ (8016ea8 <random+0x1c>)
 8016e8e:	6813      	ldr	r3, [r2, #0]
 8016e90:	10d8      	asrs	r0, r3, #3
 8016e92:	ea80 00a3 	eor.w	r0, r0, r3, asr #2
 8016e96:	4058      	eors	r0, r3
 8016e98:	ea80 1063 	eor.w	r0, r0, r3, asr #5
 8016e9c:	03c0      	lsls	r0, r0, #15
 8016e9e:	b280      	uxth	r0, r0
 8016ea0:	ea40 0063 	orr.w	r0, r0, r3, asr #1
 8016ea4:	6010      	str	r0, [r2, #0]
 8016ea6:	4770      	bx	lr
 8016ea8:	20000004 	andcs	r0, r0, r4

08016eac <strtok>:
 8016eac:	b570      	push	{r4, r5, r6, lr}
 8016eae:	4603      	mov	r3, r0
 8016eb0:	b910      	cbnz	r0, 8016eb8 <strtok+0xc>
 8016eb2:	4b12      	ldr	r3, [pc, #72]	@ (8016efc <strtok+0x50>)
 8016eb4:	681b      	ldr	r3, [r3, #0]
 8016eb6:	b14b      	cbz	r3, 8016ecc <strtok+0x20>
 8016eb8:	4618      	mov	r0, r3
 8016eba:	f813 2b01 	ldrb.w	r2, [r3], #1
 8016ebe:	460d      	mov	r5, r1
 8016ec0:	f815 4b01 	ldrb.w	r4, [r5], #1
 8016ec4:	b924      	cbnz	r4, 8016ed0 <strtok+0x24>
 8016ec6:	b94a      	cbnz	r2, 8016edc <strtok+0x30>
 8016ec8:	4b0c      	ldr	r3, [pc, #48]	@ (8016efc <strtok+0x50>)
 8016eca:	601a      	str	r2, [r3, #0]
 8016ecc:	2000      	movs	r0, #0
 8016ece:	bd70      	pop	{r4, r5, r6, pc}
 8016ed0:	42a2      	cmp	r2, r4
 8016ed2:	d1f5      	bne.n	8016ec0 <strtok+0x14>
 8016ed4:	e7f0      	b.n	8016eb8 <strtok+0xc>
 8016ed6:	4613      	mov	r3, r2
 8016ed8:	e00c      	b.n	8016ef4 <strtok+0x48>
 8016eda:	b91c      	cbnz	r4, 8016ee4 <strtok+0x38>
 8016edc:	461e      	mov	r6, r3
 8016ede:	f813 2b01 	ldrb.w	r2, [r3], #1
 8016ee2:	460d      	mov	r5, r1
 8016ee4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8016ee8:	42a2      	cmp	r2, r4
 8016eea:	d1f6      	bne.n	8016eda <strtok+0x2e>
 8016eec:	2a00      	cmp	r2, #0
 8016eee:	d0f2      	beq.n	8016ed6 <strtok+0x2a>
 8016ef0:	2200      	movs	r2, #0
 8016ef2:	7032      	strb	r2, [r6, #0]
 8016ef4:	4a01      	ldr	r2, [pc, #4]	@ (8016efc <strtok+0x50>)
 8016ef6:	6013      	str	r3, [r2, #0]
 8016ef8:	e7e9      	b.n	8016ece <strtok+0x22>
 8016efa:	bf00      	nop
 8016efc:	200145d4 	ldrdcs	r4, [r1], -r4	@ <UNPREDICTABLE>

08016f00 <uuid_unparse_x>:
 8016f00:	b530      	push	{r4, r5, lr}
 8016f02:	4603      	mov	r3, r0
 8016f04:	4608      	mov	r0, r1
 8016f06:	4611      	mov	r1, r2
 8016f08:	681a      	ldr	r2, [r3, #0]
 8016f0a:	891c      	ldrh	r4, [r3, #8]
 8016f0c:	b08f      	sub	sp, #60	@ 0x3c
 8016f0e:	ba12      	rev	r2, r2
 8016f10:	920a      	str	r2, [sp, #40]	@ 0x28
 8016f12:	889a      	ldrh	r2, [r3, #4]
 8016f14:	ba52      	rev16	r2, r2
 8016f16:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8016f1a:	88da      	ldrh	r2, [r3, #6]
 8016f1c:	ba64      	rev16	r4, r4
 8016f1e:	ba52      	rev16	r2, r2
 8016f20:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8016f24:	f8ad 4030 	strh.w	r4, [sp, #48]	@ 0x30
 8016f28:	f103 020a 	add.w	r2, r3, #10
 8016f2c:	f10d 0431 	add.w	r4, sp, #49	@ 0x31
 8016f30:	3310      	adds	r3, #16
 8016f32:	f812 5b01 	ldrb.w	r5, [r2], #1
 8016f36:	f804 5f01 	strb.w	r5, [r4, #1]!
 8016f3a:	4293      	cmp	r3, r2
 8016f3c:	d1f9      	bne.n	8016f32 <uuid_unparse_x+0x32>
 8016f3e:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
 8016f42:	9208      	str	r2, [sp, #32]
 8016f44:	f89d 2036 	ldrb.w	r2, [sp, #54]	@ 0x36
 8016f48:	9207      	str	r2, [sp, #28]
 8016f4a:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
 8016f4e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8016f52:	9206      	str	r2, [sp, #24]
 8016f54:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
 8016f58:	9205      	str	r2, [sp, #20]
 8016f5a:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
 8016f5e:	9204      	str	r2, [sp, #16]
 8016f60:	0a1b      	lsrs	r3, r3, #8
 8016f62:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
 8016f66:	9203      	str	r2, [sp, #12]
 8016f68:	9301      	str	r3, [sp, #4]
 8016f6a:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
 8016f6e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8016f72:	9202      	str	r2, [sp, #8]
 8016f74:	9300      	str	r3, [sp, #0]
 8016f76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016f78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8016f7c:	f7ff ff38 	bl	8016df0 <sprintf>
 8016f80:	b00f      	add	sp, #60	@ 0x3c
 8016f82:	bd30      	pop	{r4, r5, pc}

08016f84 <uuid_unparse>:
 8016f84:	4a01      	ldr	r2, [pc, #4]	@ (8016f8c <uuid_unparse+0x8>)
 8016f86:	f7ff bfbb 	b.w	8016f00 <uuid_unparse_x>
 8016f8a:	bf00      	nop
 8016f8c:	08017f23 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, fp, ip, sp, lr}

08016f90 <isleapyear(int)>:
 8016f90:	2264      	movs	r2, #100	@ 0x64
 8016f92:	fb90 f3f2 	sdiv	r3, r0, r2
 8016f96:	fb02 0313 	mls	r3, r2, r3, r0
 8016f9a:	b94b      	cbnz	r3, 8016fb0 <isleapyear(int)+0x20>
 8016f9c:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8016fa0:	fb90 f2f3 	sdiv	r2, r0, r3
 8016fa4:	fb03 0012 	mls	r0, r3, r2, r0
 8016fa8:	fab0 f080 	clz	r0, r0
 8016fac:	0940      	lsrs	r0, r0, #5
 8016fae:	4770      	bx	lr
 8016fb0:	f010 0f03 	tst.w	r0, #3
 8016fb4:	bf0c      	ite	eq
 8016fb6:	2001      	moveq	r0, #1
 8016fb8:	2000      	movne	r0, #0
 8016fba:	4770      	bx	lr

08016fbc <getdaysofmonth(int, int)>:
 8016fbc:	b510      	push	{r4, lr}
 8016fbe:	4604      	mov	r4, r0
 8016fc0:	2c01      	cmp	r4, #1
 8016fc2:	4608      	mov	r0, r1
 8016fc4:	d102      	bne.n	8016fcc <getdaysofmonth(int, int)+0x10>
 8016fc6:	f7ff ffe3 	bl	8016f90 <isleapyear(int)>
 8016fca:	b918      	cbnz	r0, 8016fd4 <getdaysofmonth(int, int)+0x18>
 8016fcc:	4b02      	ldr	r3, [pc, #8]	@ (8016fd8 <getdaysofmonth(int, int)+0x1c>)
 8016fce:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8016fd2:	bd10      	pop	{r4, pc}
 8016fd4:	201d      	movs	r0, #29
 8016fd6:	e7fc      	b.n	8016fd2 <getdaysofmonth(int, int)+0x16>
 8016fd8:	0801a944 	stmdaeq	r1, {r2, r6, r8, fp, sp, pc}

08016fdc <gmtime>:
 8016fdc:	b570      	push	{r4, r5, r6, lr}
 8016fde:	2800      	cmp	r0, #0
 8016fe0:	d03c      	beq.n	801705c <gmtime+0x80>
 8016fe2:	6803      	ldr	r3, [r0, #0]
 8016fe4:	4d1e      	ldr	r5, [pc, #120]	@ (8017060 <gmtime+0x84>)
 8016fe6:	213c      	movs	r1, #60	@ 0x3c
 8016fe8:	fb93 f2f1 	sdiv	r2, r3, r1
 8016fec:	fb01 3312 	mls	r3, r1, r2, r3
 8016ff0:	602b      	str	r3, [r5, #0]
 8016ff2:	fb92 f3f1 	sdiv	r3, r2, r1
 8016ff6:	fb01 2213 	mls	r2, r1, r3, r2
 8016ffa:	606a      	str	r2, [r5, #4]
 8016ffc:	2218      	movs	r2, #24
 8016ffe:	fb93 f4f2 	sdiv	r4, r3, r2
 8017002:	fb02 3314 	mls	r3, r2, r4, r3
 8017006:	60ab      	str	r3, [r5, #8]
 8017008:	1d22      	adds	r2, r4, #4
 801700a:	2307      	movs	r3, #7
 801700c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017010:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8017014:	1ad2      	subs	r2, r2, r3
 8017016:	61aa      	str	r2, [r5, #24]
 8017018:	f240 71b2 	movw	r1, #1970	@ 0x7b2
 801701c:	f240 166d 	movw	r6, #365	@ 0x16d
 8017020:	4608      	mov	r0, r1
 8017022:	f7ff ffb5 	bl	8016f90 <isleapyear(int)>
 8017026:	2800      	cmp	r0, #0
 8017028:	bf0c      	ite	eq
 801702a:	4633      	moveq	r3, r6
 801702c:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8017030:	429c      	cmp	r4, r3
 8017032:	db02      	blt.n	801703a <gmtime+0x5e>
 8017034:	1ae4      	subs	r4, r4, r3
 8017036:	3101      	adds	r1, #1
 8017038:	e7f2      	b.n	8017020 <gmtime+0x44>
 801703a:	f2a1 736c 	subw	r3, r1, #1900	@ 0x76c
 801703e:	616b      	str	r3, [r5, #20]
 8017040:	61ec      	str	r4, [r5, #28]
 8017042:	2600      	movs	r6, #0
 8017044:	4630      	mov	r0, r6
 8017046:	f7ff ffb9 	bl	8016fbc <getdaysofmonth(int, int)>
 801704a:	4284      	cmp	r4, r0
 801704c:	db02      	blt.n	8017054 <gmtime+0x78>
 801704e:	1a24      	subs	r4, r4, r0
 8017050:	3601      	adds	r6, #1
 8017052:	e7f7      	b.n	8017044 <gmtime+0x68>
 8017054:	3401      	adds	r4, #1
 8017056:	4802      	ldr	r0, [pc, #8]	@ (8017060 <gmtime+0x84>)
 8017058:	612e      	str	r6, [r5, #16]
 801705a:	60ec      	str	r4, [r5, #12]
 801705c:	bd70      	pop	{r4, r5, r6, pc}
 801705e:	bf00      	nop
 8017060:	200145d8 	ldrdcs	r4, [r1], -r8

08017064 <localtime>:
 8017064:	b507      	push	{r0, r1, r2, lr}
 8017066:	b140      	cbz	r0, 801707a <localtime+0x16>
 8017068:	4b05      	ldr	r3, [pc, #20]	@ (8017080 <localtime+0x1c>)
 801706a:	6802      	ldr	r2, [r0, #0]
 801706c:	681b      	ldr	r3, [r3, #0]
 801706e:	681b      	ldr	r3, [r3, #0]
 8017070:	a801      	add	r0, sp, #4
 8017072:	4413      	add	r3, r2
 8017074:	9301      	str	r3, [sp, #4]
 8017076:	f7ff ffb1 	bl	8016fdc <gmtime>
 801707a:	b003      	add	sp, #12
 801707c:	f85d fb04 	ldr.w	pc, [sp], #4
 8017080:	200145fc 	strdcs	r4, [r1], -ip

08017084 <mktime>:
 8017084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017088:	4604      	mov	r4, r0
 801708a:	2800      	cmp	r0, #0
 801708c:	d043      	beq.n	8017116 <mktime+0x92>
 801708e:	6941      	ldr	r1, [r0, #20]
 8017090:	f1a1 0346 	sub.w	r3, r1, #70	@ 0x46
 8017094:	2b45      	cmp	r3, #69	@ 0x45
 8017096:	d83e      	bhi.n	8017116 <mktime+0x92>
 8017098:	f240 75b2 	movw	r5, #1970	@ 0x7b2
 801709c:	2600      	movs	r6, #0
 801709e:	f201 776b 	addw	r7, r1, #1899	@ 0x76b
 80170a2:	f240 186d 	movw	r8, #365	@ 0x16d
 80170a6:	42af      	cmp	r7, r5
 80170a8:	da24      	bge.n	80170f4 <mktime+0x70>
 80170aa:	6927      	ldr	r7, [r4, #16]
 80170ac:	2f0b      	cmp	r7, #11
 80170ae:	d832      	bhi.n	8017116 <mktime+0x92>
 80170b0:	2500      	movs	r5, #0
 80170b2:	42af      	cmp	r7, r5
 80170b4:	d129      	bne.n	801710a <mktime+0x86>
 80170b6:	68e5      	ldr	r5, [r4, #12]
 80170b8:	2d00      	cmp	r5, #0
 80170ba:	dd2c      	ble.n	8017116 <mktime+0x92>
 80170bc:	4638      	mov	r0, r7
 80170be:	f7ff ff7d 	bl	8016fbc <getdaysofmonth(int, int)>
 80170c2:	4285      	cmp	r5, r0
 80170c4:	dc27      	bgt.n	8017116 <mktime+0x92>
 80170c6:	3d01      	subs	r5, #1
 80170c8:	2318      	movs	r3, #24
 80170ca:	4435      	add	r5, r6
 80170cc:	435d      	muls	r5, r3
 80170ce:	68a3      	ldr	r3, [r4, #8]
 80170d0:	2b17      	cmp	r3, #23
 80170d2:	d820      	bhi.n	8017116 <mktime+0x92>
 80170d4:	442b      	add	r3, r5
 80170d6:	213c      	movs	r1, #60	@ 0x3c
 80170d8:	fb01 f203 	mul.w	r2, r1, r3
 80170dc:	6863      	ldr	r3, [r4, #4]
 80170de:	2b3b      	cmp	r3, #59	@ 0x3b
 80170e0:	d819      	bhi.n	8017116 <mktime+0x92>
 80170e2:	6820      	ldr	r0, [r4, #0]
 80170e4:	4413      	add	r3, r2
 80170e6:	283b      	cmp	r0, #59	@ 0x3b
 80170e8:	fb01 f303 	mul.w	r3, r1, r3
 80170ec:	d813      	bhi.n	8017116 <mktime+0x92>
 80170ee:	4418      	add	r0, r3
 80170f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80170f4:	4628      	mov	r0, r5
 80170f6:	f7ff ff4b 	bl	8016f90 <isleapyear(int)>
 80170fa:	2800      	cmp	r0, #0
 80170fc:	bf0c      	ite	eq
 80170fe:	4643      	moveq	r3, r8
 8017100:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 8017104:	441e      	add	r6, r3
 8017106:	3501      	adds	r5, #1
 8017108:	e7cd      	b.n	80170a6 <mktime+0x22>
 801710a:	4628      	mov	r0, r5
 801710c:	f7ff ff56 	bl	8016fbc <getdaysofmonth(int, int)>
 8017110:	3501      	adds	r5, #1
 8017112:	4406      	add	r6, r0
 8017114:	e7cd      	b.n	80170b2 <mktime+0x2e>
 8017116:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801711a:	e7e9      	b.n	80170f0 <mktime+0x6c>

0801711c <hal::uuid_init(unsigned char*)>:
 801711c:	4a0c      	ldr	r2, [pc, #48]	@ (8017150 <hal::uuid_init(unsigned char*)+0x34>)
 801711e:	b084      	sub	sp, #16
 8017120:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8017124:	9300      	str	r3, [sp, #0]
 8017126:	f8d2 1a14 	ldr.w	r1, [r2, #2580]	@ 0xa14
 801712a:	9101      	str	r1, [sp, #4]
 801712c:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	@ 0xa18
 8017130:	9202      	str	r2, [sp, #8]
 8017132:	440b      	add	r3, r1
 8017134:	4413      	add	r3, r2
 8017136:	9303      	str	r3, [sp, #12]
 8017138:	f100 0210 	add.w	r2, r0, #16
 801713c:	466b      	mov	r3, sp
 801713e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8017142:	f800 1b01 	strb.w	r1, [r0], #1
 8017146:	4282      	cmp	r2, r0
 8017148:	d1f9      	bne.n	801713e <hal::uuid_init(unsigned char*)+0x22>
 801714a:	b004      	add	sp, #16
 801714c:	4770      	bx	lr
 801714e:	bf00      	nop
 8017150:	1fff7000 	svcne	0x00ff7000

08017154 <gettimeofday>:
 8017154:	4b13      	ldr	r3, [pc, #76]	@ (80171a4 <gettimeofday+0x50>)
 8017156:	4a14      	ldr	r2, [pc, #80]	@ (80171a8 <gettimeofday+0x54>)
 8017158:	6819      	ldr	r1, [r3, #0]
 801715a:	6812      	ldr	r2, [r2, #0]
 801715c:	b510      	push	{r4, lr}
 801715e:	4c13      	ldr	r4, [pc, #76]	@ (80171ac <gettimeofday+0x58>)
 8017160:	601a      	str	r2, [r3, #0]
 8017162:	4b13      	ldr	r3, [pc, #76]	@ (80171b0 <gettimeofday+0x5c>)
 8017164:	1a51      	subs	r1, r2, r1
 8017166:	fba3 2301 	umull	r2, r3, r3, r1
 801716a:	6822      	ldr	r2, [r4, #0]
 801716c:	ea4f 1e93 	mov.w	lr, r3, lsr #6
 8017170:	eb02 1293 	add.w	r2, r2, r3, lsr #6
 8017174:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 8017178:	6863      	ldr	r3, [r4, #4]
 801717a:	6022      	str	r2, [r4, #0]
 801717c:	fb0c 111e 	mls	r1, ip, lr, r1
 8017180:	fb0c 3301 	mla	r3, ip, r1, r3
 8017184:	490b      	ldr	r1, [pc, #44]	@ (80171b4 <gettimeofday+0x60>)
 8017186:	6063      	str	r3, [r4, #4]
 8017188:	428b      	cmp	r3, r1
 801718a:	bfc2      	ittt	gt
 801718c:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 8017190:	3201      	addgt	r2, #1
 8017192:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 8017196:	e9c0 2300 	strd	r2, r3, [r0]
 801719a:	bfc8      	it	gt
 801719c:	e9c4 2300 	strdgt	r2, r3, [r4]
 80171a0:	2000      	movs	r0, #0
 80171a2:	bd10      	pop	{r4, pc}
 80171a4:	20014608 	andcs	r4, r1, r8, lsl #12
 80171a8:	200145c8 	andcs	r4, r1, r8, asr #11
 80171ac:	20014600 	andcs	r4, r1, r0, lsl #12
 80171b0:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 80171b4:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

080171b8 <settimeofday>:
 80171b8:	4a07      	ldr	r2, [pc, #28]	@ (80171d8 <settimeofday+0x20>)
 80171ba:	4b08      	ldr	r3, [pc, #32]	@ (80171dc <settimeofday+0x24>)
 80171bc:	4908      	ldr	r1, [pc, #32]	@ (80171e0 <settimeofday+0x28>)
 80171be:	b410      	push	{r4}
 80171c0:	6814      	ldr	r4, [r2, #0]
 80171c2:	6844      	ldr	r4, [r0, #4]
 80171c4:	6812      	ldr	r2, [r2, #0]
 80171c6:	6800      	ldr	r0, [r0, #0]
 80171c8:	605c      	str	r4, [r3, #4]
 80171ca:	6018      	str	r0, [r3, #0]
 80171cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80171d0:	600a      	str	r2, [r1, #0]
 80171d2:	2000      	movs	r0, #0
 80171d4:	4770      	bx	lr
 80171d6:	bf00      	nop
 80171d8:	200145c8 	andcs	r4, r1, r8, asr #11
 80171dc:	20014600 	andcs	r4, r1, r0, lsl #12
 80171e0:	20014608 	andcs	r4, r1, r8, lsl #12

080171e4 <operator delete[](void*)>:
 80171e4:	f000 b838 	b.w	8017258 <free>

080171e8 <operator delete(void*, unsigned int)>:
 80171e8:	f000 b836 	b.w	8017258 <free>

080171ec <operator new(unsigned int)>:
 80171ec:	f000 b802 	b.w	80171f4 <malloc>

080171f0 <operator new[](unsigned int)>:
 80171f0:	f000 b800 	b.w	80171f4 <malloc>

080171f4 <malloc>:
 80171f4:	b510      	push	{r4, lr}
 80171f6:	b180      	cbz	r0, 801721a <malloc+0x26>
 80171f8:	4b12      	ldr	r3, [pc, #72]	@ (8017244 <malloc+0x50>)
 80171fa:	681a      	ldr	r2, [r3, #0]
 80171fc:	b97a      	cbnz	r2, 801721e <malloc+0x2a>
 80171fe:	4602      	mov	r2, r0
 8017200:	4911      	ldr	r1, [pc, #68]	@ (8017248 <malloc+0x54>)
 8017202:	4c12      	ldr	r4, [pc, #72]	@ (801724c <malloc+0x58>)
 8017204:	6808      	ldr	r0, [r1, #0]
 8017206:	f102 031b 	add.w	r3, r2, #27
 801720a:	f023 030f 	bic.w	r3, r3, #15
 801720e:	4403      	add	r3, r0
 8017210:	42a3      	cmp	r3, r4
 8017212:	d911      	bls.n	8017238 <malloc+0x44>
 8017214:	480e      	ldr	r0, [pc, #56]	@ (8017250 <malloc+0x5c>)
 8017216:	f7fd fb37 	bl	8014888 <console_error>
 801721a:	2000      	movs	r0, #0
 801721c:	bd10      	pop	{r4, pc}
 801721e:	4282      	cmp	r2, r0
 8017220:	d201      	bcs.n	8017226 <malloc+0x32>
 8017222:	3308      	adds	r3, #8
 8017224:	e7e9      	b.n	80171fa <malloc+0x6>
 8017226:	6858      	ldr	r0, [r3, #4]
 8017228:	2800      	cmp	r0, #0
 801722a:	d0e9      	beq.n	8017200 <malloc+0xc>
 801722c:	6882      	ldr	r2, [r0, #8]
 801722e:	605a      	str	r2, [r3, #4]
 8017230:	2300      	movs	r3, #0
 8017232:	6083      	str	r3, [r0, #8]
 8017234:	300c      	adds	r0, #12
 8017236:	e7f1      	b.n	801721c <malloc+0x28>
 8017238:	600b      	str	r3, [r1, #0]
 801723a:	4b06      	ldr	r3, [pc, #24]	@ (8017254 <malloc+0x60>)
 801723c:	e9c0 3200 	strd	r3, r2, [r0]
 8017240:	e7f6      	b.n	8017230 <malloc+0x3c>
 8017242:	bf00      	nop
 8017244:	20000008 	andcs	r0, r0, r8
 8017248:	20000070 	andcs	r0, r0, r0, ror r0
 801724c:	1000ec90 	mulne	r0, r0, ip
 8017250:	08017f54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp, ip, sp, lr}
 8017254:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0

08017258 <free>:
 8017258:	b138      	cbz	r0, 801726a <free+0x12>
 801725a:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 801725e:	4b09      	ldr	r3, [pc, #36]	@ (8017284 <free+0x2c>)
 8017260:	429a      	cmp	r2, r3
 8017262:	d102      	bne.n	801726a <free+0x12>
 8017264:	4b08      	ldr	r3, [pc, #32]	@ (8017288 <free+0x30>)
 8017266:	681a      	ldr	r2, [r3, #0]
 8017268:	b902      	cbnz	r2, 801726c <free+0x14>
 801726a:	4770      	bx	lr
 801726c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8017270:	4291      	cmp	r1, r2
 8017272:	d105      	bne.n	8017280 <free+0x28>
 8017274:	685a      	ldr	r2, [r3, #4]
 8017276:	f840 2c04 	str.w	r2, [r0, #-4]
 801727a:	380c      	subs	r0, #12
 801727c:	6058      	str	r0, [r3, #4]
 801727e:	4770      	bx	lr
 8017280:	3308      	adds	r3, #8
 8017282:	e7f0      	b.n	8017266 <free+0xe>
 8017284:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0
 8017288:	20000008 	andcs	r0, r0, r8

0801728c <__popcountsi2>:
 801728c:	0843      	lsrs	r3, r0, #1
 801728e:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
 8017292:	1ac0      	subs	r0, r0, r3
 8017294:	0883      	lsrs	r3, r0, #2
 8017296:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
 801729a:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
 801729e:	4418      	add	r0, r3
 80172a0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 80172a4:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
 80172a8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 80172ac:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 80172b0:	0e00      	lsrs	r0, r0, #24
 80172b2:	4770      	bx	lr

Disassembly of section .rodata:

080172b4 <CSWTCH.77-0xcb4>:
 80172b4:	00000000 	andeq	r0, r0, r0
 80172b8:	00000001 	andeq	r0, r0, r1
 80172bc:	00000002 	andeq	r0, r0, r2
 80172c0:	00000000 	andeq	r0, r0, r0
 80172c4:	00000002 	andeq	r0, r0, r2
 80172c8:	00000001 	andeq	r0, r0, r1
 80172cc:	00000001 	andeq	r0, r0, r1
 80172d0:	00000000 	andeq	r0, r0, r0
 80172d4:	00000002 	andeq	r0, r0, r2
 80172d8:	00000002 	andeq	r0, r0, r2
 80172dc:	00000000 	andeq	r0, r0, r0
 80172e0:	00000001 	andeq	r0, r0, r1
 80172e4:	00000001 	andeq	r0, r0, r1
 80172e8:	00000002 	andeq	r0, r0, r2
 80172ec:	00000000 	andeq	r0, r0, r0
 80172f0:	00000002 	andeq	r0, r0, r2
 80172f4:	00000001 	andeq	r0, r0, r1
	...
 8017304:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8017308:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801730c:	00000000 	andeq	r0, r0, r0
 8017310:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 8017314:	7261485b 	rsbvc	r4, r1, #5963776	@ 0x5b0000
 8017318:	75614664 	strbvc	r4, [r1, #-1636]!	@ 0xfffff99c
 801731c:	0a5d746c 	beq	97744d4 <__init_array_end+0x1759b60>
 8017320:	53202d00 	noppl	{0}	@ <UNPREDICTABLE>
 8017324:	6b636174 	blvs	98ef8fc <__init_array_end+0x18d4f88>
 8017328:	61726620 	cmnvs	r2, r0, lsr #12
 801732c:	0a3a656d 	beq	8eb08e8 <__init_array_end+0xe95f74>
 8017330:	30522000 	subscc	r2, r2, r0
 8017334:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8017338:	000a7825 	andeq	r7, sl, r5, lsr #16
 801733c:	20315220 	eorscs	r5, r1, r0, lsr #4
 8017340:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8017344:	20000a78 	andcs	r0, r0, r8, ror sl
 8017348:	20203252 	eorcs	r3, r0, r2, asr r2
 801734c:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 8017350:	5220000a 	eorpl	r0, r0, #10
 8017354:	3d202033 	stccc	0, cr2, [r0, #-204]!	@ 0xffffff34
 8017358:	0a782520 	beq	9e207e0 <__init_array_end+0x1e05e6c>
 801735c:	31522000 	cmpcc	r2, r0
 8017360:	203d2032 	eorscs	r2, sp, r2, lsr r0
 8017364:	000a7825 	andeq	r7, sl, r5, lsr #16
 8017368:	20524c20 	subscs	r4, r2, r0, lsr #24
 801736c:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 8017370:	20000a78 	andcs	r0, r0, r8, ror sl
 8017374:	20204350 	eorcs	r4, r0, r0, asr r3
 8017378:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801737c:	5020000a 	eorpl	r0, r0, sl
 8017380:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 8017384:	0a782520 	beq	9e2080c <__init_array_end+0x1e05e98>
 8017388:	46202d00 	strtmi	r2, [r0], -r0, lsl #26
 801738c:	462f5253 			@ <UNDEFINED> instruction: 0x462f5253
 8017390:	0a3a5241 	beq	8eabc9c <__init_array_end+0xe91328>
 8017394:	46432000 	strbmi	r2, [r3], -r0
 8017398:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801739c:	0a782520 	beq	9e20824 <__init_array_end+0x1e05eb0>
 80173a0:	46482000 	strbmi	r2, [r8], -r0
 80173a4:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 80173a8:	0a782520 	beq	9e20830 <__init_array_end+0x1e05ebc>
 80173ac:	46442000 	strbmi	r2, [r4], -r0
 80173b0:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 80173b4:	0a782520 	beq	9e2083c <__init_array_end+0x1e05ec8>
 80173b8:	46412000 	strbmi	r2, [r1], -r0
 80173bc:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 80173c0:	0a782520 	beq	9e20848 <__init_array_end+0x1e05ed4>
 80173c4:	4d4d2000 	stclmi	0, cr2, [sp, #-0]
 80173c8:	20524146 	subscs	r4, r2, r6, asr #2
 80173cc:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 80173d0:	4220000a 	eormi	r0, r0, #10
 80173d4:	20524146 	subscs	r4, r2, r6, asr #2
 80173d8:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 80173dc:	202d000a 	eorcs	r0, sp, sl
 80173e0:	6373694d 	cmnvs	r3, #1261568	@ 0x134000
 80173e4:	4c20000a 	stcmi	0, cr0, [r0], #-40	@ 0xffffffd8
 80173e8:	58452f52 	stmdapl	r5, {r1, r4, r6, r8, r9, sl, fp, sp}^
 80173ec:	45525f43 	ldrbmi	r5, [r2, #-3907]	@ 0xfffff0bd
 80173f0:	4e525554 	mrcmi	5, 2, r5, cr2, cr4, {2}
 80173f4:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 80173f8:	6950000a 	ldmdbvs	r0, {r1, r3}^
 80173fc:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8017400:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8017404:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 8017408:	6f697461 	svcvs	0x00697461
 801740c:	5420006e 	strtpl	r0, [r0], #-110	@ 0xffffff92
 8017410:	20657079 	rsbcs	r7, r5, r9, ror r0
 8017414:	3a202020 	bcc	881f49c <__init_array_end+0x804b28>
 8017418:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801741c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	@ 0xfffffe94
 8017420:	64253c20 	strtvs	r3, [r5], #-3104	@ 0xfffff3e0
 8017424:	64656c20 	strbtvs	r6, [r5], #-3104	@ 0xfffff3e0
 8017428:	69702f73 	ldmdbvs	r0!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 801742c:	3e6c6578 	mcrcc	5, 3, r6, cr12, cr8, {3}
 8017430:	4320000a 			@ <UNDEFINED> instruction: 0x4320000a
 8017434:	746e756f 	strbtvc	r7, [lr], #-1391	@ 0xfffffa91
 8017438:	3a202020 	bcc	881f4c0 <__init_array_end+0x804b4c>
 801743c:	0a642520 	beq	99208c4 <__init_array_end+0x1905f50>
 8017440:	614d2000 	mrsvs	r2, (UNDEF: 77)
 8017444:	6e697070 	mcrvs	0, 3, r7, cr9, cr0, {3}
 8017448:	203a2067 	eorscs	r2, sl, r7, rrx
 801744c:	5b207325 	blpl	88340e8 <__init_array_end+0x819774>
 8017450:	0a5d6425 	beq	97704ec <__init_array_end+0x1755b78>
 8017454:	30542000 	subscc	r2, r4, r0
 8017458:	20202048 	eorcs	r2, r0, r8, asr #32
 801745c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017460:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 8017464:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8017468:	0a5d5825 	beq	976d504 <__init_array_end+0x1752b90>
 801746c:	31542000 	cmpcc	r4, r0
 8017470:	20202048 	eorcs	r2, r0, r8, asr #32
 8017474:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017478:	66322e25 	ldrtvs	r2, [r2], -r5, lsr #28
 801747c:	78305b20 	ldmdavc	r0!, {r5, r8, r9, fp, ip, lr}
 8017480:	0a5d5825 	beq	976d51c <__init_array_end+0x1752ba8>
 8017484:	6c472000 	marvs	acc0, r2, r7
 8017488:	6c61626f 	sfmvs	f6, 2, [r1], #-444	@ 0xfffffe44
 801748c:	67697242 	strbvs	r7, [r9, -r2, asr #4]!
 8017490:	656e7468 	strbvs	r7, [lr, #-1128]!	@ 0xfffffb98
 8017494:	203a7373 	eorscs	r7, sl, r3, ror r3
 8017498:	000a7525 	andeq	r7, sl, r5, lsr #10
 801749c:	6f6c4320 	svcvs	0x006c4320
 80174a0:	20206b63 	eorcs	r6, r0, r3, ror #22
 80174a4:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80174a8:	7a482075 	bvc	921f684 <__init_array_end+0x1204d10>
 80174ac:	5220000a 	eorpl	r0, r0, #10
 80174b0:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 80174b4:	3a206873 	bcc	8831688 <__init_array_end+0x816d14>
 80174b8:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80174bc:	000a7a48 	andeq	r7, sl, r8, asr #20
 80174c0:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80174c4:	000a7465 	andeq	r7, sl, r5, ror #8
 80174c8:	44494320 	strbmi	r4, [r9], #-800	@ 0xfffffce0
 80174cc:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80174d0:	4c000a73 			@ <UNDEFINED> instruction: 0x4c000a73
 80174d4:	2050524c 	subscs	r5, r0, ip, asr #4
 80174d8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80174dc:	000a6563 	andeq	r6, sl, r3, ror #10
 80174e0:	726f5020 	rsbvc	r5, pc, #32
 80174e4:	44552074 	ldrbmi	r2, [r5], #-116	@ 0xffffff8c
 80174e8:	20202050 	eorcs	r2, r0, r0, asr r0
 80174ec:	20202020 	eorcs	r2, r0, r0, lsr #32
 80174f0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80174f4:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 80174f8:	4a20000a 	bmi	8817528 <__init_array_end+0x7fcbb4>
 80174fc:	206e696f 	rsbcs	r6, lr, pc, ror #18
 8017500:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 8017504:	20747365 	rsbscs	r7, r4, r5, ror #6
 8017508:	20202020 	eorcs	r2, r0, r0, lsr #32
 801750c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017510:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017514:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017518:	0a64252e 	beq	99209d8 <__init_array_end+0x1906064>
 801751c:	754d2000 	strbvc	r2, [sp, #-0]
 8017520:	6369746c 	cmnvs	r9, #108, 8	@ 0x6c000000
 8017524:	20747361 	rsbscs	r7, r4, r1, ror #6
 8017528:	70736552 	rsbsvc	r6, r3, r2, asr r5
 801752c:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 8017530:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017534:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017538:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801753c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8017540:	303a3032 	eorscc	r3, sl, r2, lsr r0
 8017544:	33333a36 	teqcc	r3, #221184	@ 0x36000
 8017548:	70655300 	rsbvc	r5, r5, r0, lsl #6
 801754c:	20383120 	eorscs	r3, r8, r0, lsr #2
 8017550:	34323032 	ldrtcc	r3, [r2], #-50	@ 0xffffffce
 8017554:	78695000 	stmdavc	r9!, {ip, lr}^
 8017558:	75506c65 	ldrbvc	r6, [r0, #-3173]	@ 0xfffff39b
 801755c:	72656873 	rsbvc	r6, r5, #7536640	@ 0x730000
 8017560:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8017564:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	@ 801739c <_etext+0xe8>
 8017568:	2072656c 	rsbscs	r6, r2, ip, ror #10
 801756c:	2078387b 	rsbscs	r3, r8, fp, ror r8
 8017570:	6e552034 	mrcvs	0, 2, r2, cr5, cr4, {1}
 8017574:	72657669 	rsbvc	r7, r5, #110100480	@ 0x6900000
 8017578:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801757c:	335b1b00 	cmpcc	fp, #0, 22
 8017580:	73256d32 			@ <UNDEFINED> instruction: 0x73256d32
 8017584:	6d305b1b 	fldmdbxvs	r0!, {d5-d17}	@ Deprecated
 8017588:	6950000a 	ldmdbvs	r0, {r1, r3}^
 801758c:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8017590:	20584d44 	subscs	r4, r8, r4, asr #26
 8017594:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8017598:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 801759c:	6f697461 	svcvs	0x00697461
 80175a0:	4f20006e 	svcmi	0x0020006e
 80175a4:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
 80175a8:	20207374 	eorcs	r7, r0, r4, ror r3
 80175ac:	20202020 	eorcs	r2, r0, r0, lsr #32
 80175b0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80175b4:	000a7525 	andeq	r7, sl, r5, lsr #10
 80175b8:	6f724720 	svcvs	0x00724720
 80175bc:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 80175c0:	6f632067 	svcvs	0x00632067
 80175c4:	20746e75 	rsbscs	r6, r4, r5, ror lr
 80175c8:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80175cc:	72475b20 	subvc	r5, r7, #32, 22	@ 0x8000
 80175d0:	7370756f 	cmnvc	r0, #465567744	@ 0x1bc00000
 80175d4:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80175d8:	000a5d75 	andeq	r5, sl, r5, ror sp
 80175dc:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80175e0:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 80175e4:	20207365 	eorcs	r7, r0, r5, ror #6
 80175e8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80175ec:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80175f0:	4420000a 	strtmi	r0, [r0], #-10
 80175f4:	6f46786d 	svcvs	0x0046786d
 80175f8:	7270746f 	rsbsvc	r7, r0, #1862270976	@ 0x6f000000
 80175fc:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8017600:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017604:	000a7525 	andeq	r7, sl, r5, lsr #10
 8017608:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 801760c:	7375506c 	cmnvc	r5, #108	@ 0x6c
 8017610:	20726568 	rsbscs	r6, r2, r8, ror #10
 8017614:	252d7525 	strcs	r7, [sp, #-1317]!	@ 0xfffffadb
 8017618:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 801761c:	33444700 	movtcc	r4, #18176	@ 0x4700
 8017620:	37344632 			@ <UNDEFINED> instruction: 0x37344632
 8017624:	455f5a30 	ldrbmi	r5, [pc, #-2608]	@ 8016bfc <_vprintf+0x190>
 8017628:	204c4156 	subcs	r4, ip, r6, asr r1
 801762c:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8017630:	7375506c 	cmnvc	r5, #108	@ 0x6c
 8017634:	00726568 	rsbseq	r6, r2, r8, ror #10
 8017638:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 801763c:	7375506c 	cmnvc	r5, #108	@ 0x6c
 8017640:	20726568 	rsbscs	r6, r2, r8, ror #10
 8017644:	25006425 	strcs	r6, [r0, #-1061]	@ 0xfffffbdb
 8017648:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 801764c:	64254720 	strtvs	r4, [r5], #-1824	@ 0xfffff8e0
 8017650:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8017654:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 8017658:	74530075 	ldrbvc	r0, [r3], #-117	@ 0xffffff8b
 801765c:	69747261 	ldmdbvs	r4!, {r0, r5, r6, r9, ip, sp, lr}^
 8017660:	5020676e 	eorpl	r6, r0, lr, ror #14
 8017664:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8017668:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 801766c:	50007265 	andpl	r7, r0, r5, ror #4
 8017670:	6c657869 	stclvs	8, cr7, [r5], #-420	@ 0xfffffe5c
 8017674:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 8017678:	53207265 			@ <UNDEFINED> instruction: 0x53207265
 801767c:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
 8017680:	4f006465 	svcmi	0x00006465
 8017684:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
 8017688:	616c7073 	smcvs	50947	@ 0xc703
 801768c:	73253a79 			@ <UNDEFINED> instruction: 0x73253a79
 8017690:	7075000a 	rsbsvc	r0, r5, sl
 8017694:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8017698:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801769c:	76000a73 			@ <UNDEFINED> instruction: 0x76000a73
 80176a0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80176a4:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	@ 0xfffff191
 80176a8:	66740073 			@ <UNDEFINED> instruction: 0x66740073
 80176ac:	253a7074 	ldrcs	r7, [sl, #-116]!	@ 0xffffff8c
 80176b0:	25000a73 	strcs	r0, [r0, #-2675]	@ 0xfffff58d
 80176b4:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80176b8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80176bc:	252c6425 	strcs	r6, [ip, #-1061]!	@ 0xfffffbdb
 80176c0:	73252c73 			@ <UNDEFINED> instruction: 0x73252c73
 80176c4:	2c75252c 	cfldr64cs	mvdx2, [r5], #-176	@ 0xffffff50
 80176c8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80176cc:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80176d0:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80176d4:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	@ 0xffffff48
 80176d8:	252c7325 	strcs	r7, [ip, #-805]!	@ 0xfffffcdb
 80176dc:	75252c73 	strvc	r2, [r5, #-3187]!	@ 0xfffff38d
 80176e0:	5245000a 	subpl	r0, r5, #10
 80176e4:	23524f52 	cmpcs	r2, #328	@ 0x148
 80176e8:	7465673f 	strbtvc	r6, [r5], #-1855	@ 0xfffff8c1
 80176ec:	5245000a 	subpl	r0, r5, #10
 80176f0:	23524f52 	cmpcs	r2, #328	@ 0x148
 80176f4:	74000a3f 	strvc	r0, [r0], #-2623	@ 0xfffff5c1
 80176f8:	23707466 	cmncs	r0, #1711276032	@ 0x66000000
 80176fc:	73696400 	cmnvc	r9, #0, 8
 8017700:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017704:	52450023 	subpl	r0, r5, #35	@ 0x23
 8017708:	23524f52 	cmpcs	r2, #328	@ 0x148
 801770c:	72000a21 	andvc	r0, r0, #135168	@ 0x21000
 8017710:	6f6f6265 	svcvs	0x006f6265
 8017714:	00232374 	eoreq	r2, r3, r4, ror r3
 8017718:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801771c:	65760023 	ldrbvs	r0, [r6, #-35]!	@ 0xffffffdd
 8017720:	6f697372 	svcvs	0x00697372
 8017724:	7500236e 	strvc	r2, [r0, #-878]	@ 0xfffffc92
 8017728:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 801772c:	67002365 	strvs	r2, [r0, -r5, ror #6]
 8017730:	00237465 	eoreq	r7, r3, r5, ror #8
 8017734:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 8017738:	2379726f 	cmncs	r9, #-268435450	@ 0xf0000006
 801773c:	25220023 	strcs	r0, [r2, #-35]!	@ 0xffffffdd
 8017740:	253a2273 	ldrcs	r2, [sl, #-627]!	@ 0xfffffd8d
 8017744:	23002c64 	movwcs	r2, #3172	@ 0xc64
 8017748:	253d7325 	ldrcs	r7, [sp, #-805]!	@ 0xfffffcdb
 801774c:	22000a64 	andcs	r0, r0, #100, 20	@ 0x64000
 8017750:	3a227325 	bcc	88b43ec <__init_array_end+0x899a78>
 8017754:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 8017758:	2523002c 	strcs	r0, [r3, #-44]!	@ 0xffffffd4
 801775c:	73253d73 			@ <UNDEFINED> instruction: 0x73253d73
 8017760:	6552000a 	ldrbvs	r0, [r2, #-10]
 8017764:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801776c <_etext+0x4b8>
 8017768:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801776c:	002e2e2e 	eoreq	r2, lr, lr, lsr #28
 8017770:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8017774:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 8017778:	00747874 	rsbseq	r7, r4, r4, ror r8
 801777c:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 8017780:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017784:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8017788:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801778c:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017790:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017794:	2e79616c 	rpwcsez	f6, f1, #4.0
 8017798:	00747874 	rsbseq	r7, r4, r4, ror r8
 801779c:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80177a0:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80177a4:	00747874 	rsbseq	r7, r4, r4, ror r8
 80177a8:	50544654 	subspl	r4, r4, r4, asr r6
 80177ac:	206e4f20 	rsbcs	r4, lr, r0, lsr #30
 80177b0:	54465400 	strbpl	r5, [r6], #-1024	@ 0xfffffc00
 80177b4:	664f2050 			@ <UNDEFINED> instruction: 0x664f2050
 80177b8:	227b0066 	rsbscs	r0, fp, #102	@ 0x66
 80177bc:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 80177c0:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 80177c4:	3a227069 	bcc	88b3970 <__init_array_end+0x898ffc>
 80177c8:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 80177cc:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 80177d0:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 80177d4:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80177d8:	22656d61 	rsbcs	r6, r5, #6208	@ 0x1840
 80177dc:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 80177e0:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80177e4:	2265646f 	rsbcs	r6, r5, #1862270976	@ 0x6f000000
 80177e8:	74227b3a 	strtvc	r7, [r2], #-2874	@ 0xfffff4c6
 80177ec:	22657079 	rsbcs	r7, r5, #121	@ 0x79
 80177f0:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 80177f4:	70222c22 	eorvc	r2, r2, r2, lsr #24
 80177f8:	2274726f 	rsbscs	r7, r4, #-268435450	@ 0xf0000006
 80177fc:	74227b3a 	strtvc	r7, [r2], #-2874	@ 0xfffff4c6
 8017800:	22657079 	rsbcs	r7, r5, #121	@ 0x79
 8017804:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 8017808:	63222c22 			@ <UNDEFINED> instruction: 0x63222c22
 801780c:	746e756f 	strbtvc	r7, [lr], #-1391	@ 0xfffffa91
 8017810:	64253a22 	strtvs	r3, [r5], #-2594	@ 0xfffff5de
 8017814:	7d7d7d7d 	ldclvc	13, cr7, [sp, #-500]!	@ 0xfffffe0c
 8017818:	76227b00 	strtvc	r7, [r2], -r0, lsl #22
 801781c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017820:	3a226e6f 	bcc	88b31e4 <__init_array_end+0x898870>
 8017824:	2a2e2522 	bcs	8ba0cb4 <__init_array_end+0xb86340>
 8017828:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 801782c:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 8017830:	223a2264 	eorscs	r2, sl, #100, 4	@ 0x40000006
 8017834:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 8017838:	69756222 	ldmdbvs	r5!, {r1, r5, r9, sp, lr}^
 801783c:	3a22646c 	bcc	88b09f4 <__init_array_end+0x896080>
 8017840:	6164227b 	smcvs	16939	@ 0x422b
 8017844:	3a226574 	bcc	88b0e1c <__init_array_end+0x8964a8>
 8017848:	2a2e2522 	bcs	8ba0cd8 <__init_array_end+0xb86364>
 801784c:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 8017850:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8017854:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 8017858:	22732a2e 	rsbscs	r2, r3, #188416	@ 0x2e000
 801785c:	47007d7d 	smlsdxmi	r0, sp, sp, r7
 8017860:	46323344 	ldrtmi	r3, [r2], -r4, asr #6
 8017864:	5a303734 	bpl	8c2553c <__init_array_end+0xc0abc8>
 8017868:	4156455f 	cmpmi	r6, pc, asr r5
 801786c:	227b004c 	rsbscs	r0, fp, #76	@ 0x4c
 8017870:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 8017874:	3a22656d 	bcc	88b0e30 <__init_array_end+0x8964bc>
 8017878:	0a7d7525 	beq	9f74d14 <__init_array_end+0x1f5a3a0>
 801787c:	64227b00 	strtvs	r7, [r2], #-2816	@ 0xfffff500
 8017880:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 8017884:	3a227961 	bcc	88b5e10 <__init_array_end+0x89b49c>
 8017888:	007d6425 	rsbseq	r6, sp, r5, lsr #8
 801788c:	6966227b 	stmdbvs	r6!, {r0, r1, r3, r4, r5, r6, r9, sp}^
 8017890:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 8017894:	64227b3a 	strtvs	r7, [r2], #-2874	@ 0xfffff4c6
 8017898:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801789c:	742e7365 	strtvc	r7, [lr], #-869	@ 0xfffffc9b
 80178a0:	3a227478 	bcc	88b4a88 <__init_array_end+0x89a114>
 80178a4:	584d4422 	stmdapl	sp, {r1, r5, sl, lr}^
 80178a8:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 80178ac:	2c226c65 	stccs	12, cr6, [r2], #-404	@ 0xfffffe6c
 80178b0:	73696422 	cmnvc	r9, #570425344	@ 0x22000000
 80178b4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80178b8:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80178bc:	44223a22 	strtmi	r3, [r2], #-2594	@ 0xfffff5de
 80178c0:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 80178c4:	55207961 	strpl	r7, [r0, #-2401]!	@ 0xfffff69f
 80178c8:	2c224644 	stccs	6, cr4, [r2], #-272	@ 0xfffffef0
 80178cc:	74656e22 	strbtvc	r6, [r5], #-3618	@ 0xfffff1de
 80178d0:	6b726f77 	blvs	9cb36b4 <__init_array_end+0x1c98d40>
 80178d4:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80178d8:	4e223a22 	vmulmi.f32	s6, s4, s5
 80178dc:	6f777465 	svcvs	0x00777465
 80178e0:	2c226b72 			@ <UNDEFINED> instruction: 0x2c226b72
 80178e4:	766e6522 	strbtvc	r6, [lr], -r2, lsr #10
 80178e8:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80178ec:	45223a22 	strmi	r3, [r2, #-2594]!	@ 0xfffff5de
 80178f0:	7269766e 	rsbvc	r7, r9, #115343360	@ 0x6e00000
 80178f4:	656d6e6f 	strbvs	r6, [sp, #-3695]!	@ 0xfffff191
 80178f8:	2c22746e 	cfstrscs	mvf7, [r2], #-440	@ 0xfffffe48
 80178fc:	6f637222 	svcvs	0x00637222
 8017900:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017904:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 8017908:	52223a22 	eorpl	r3, r2, #139264	@ 0x22000
 801790c:	746f6d65 	strbtvc	r6, [pc], #-3429	@ 8017914 <_etext+0x660>
 8017910:	6f632065 	svcvs	0x00632065
 8017914:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017918:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 801791c:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 8017920:	73007d7d 	movwvc	r7, #3453	@ 0xd7d
 8017924:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 8017928:	736a2e63 	cmnvc	sl, #1584	@ 0x630
 801792c:	79747300 	ldmdbvc	r4!, {r8, r9, ip, sp, lr}^
 8017930:	2e73656c 	cdpcs	5, 7, cr6, cr3, cr12, {3}
 8017934:	00737363 	rsbseq	r7, r3, r3, ror #6
 8017938:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801793c:	736a2e78 	cmnvc	sl, #120, 28	@ 0x780
 8017940:	74616400 	strbtvc	r6, [r1], #-1024	@ 0xfffffc00
 8017944:	736a2e65 	cmnvc	sl, #1616	@ 0x650
 8017948:	66656400 	strbtvs	r6, [r5], -r0, lsl #8
 801794c:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 8017950:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 8017954:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 8017958:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 801795c:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 8017960:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 8017964:	74006c6d 	strvc	r6, [r0], #-3181	@ 0xfffff393
 8017968:	2e656d69 	cdpcs	13, 6, cr6, cr5, cr9, {3}
 801796c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 8017970:	6f432000 	svcvs	0x00432000
 8017974:	20746e75 	rsbscs	r6, r4, r5, ror lr
 8017978:	20202020 	eorcs	r2, r0, r0, lsr #32
 801797c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017980:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017984:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8017988:	4320000a 			@ <UNDEFINED> instruction: 0x4320000a
 801798c:	6e6e6168 	powvsez	f6, f6, #0.0
 8017990:	20736c65 	rsbscs	r6, r3, r5, ror #24
 8017994:	20726570 	rsbscs	r6, r2, r0, ror r5
 8017998:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 801799c:	25203a6c 	strcs	r3, [r0, #-2668]!	@ 0xfffff594
 80179a0:	20000a75 	andcs	r0, r0, r5, ror sl
 80179a4:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
 80179a8:	70206576 	eorvc	r6, r0, r6, ror r5
 80179ac:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
 80179b0:	20202020 	eorcs	r2, r0, r0, lsr #32
 80179b4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80179b8:	000a7525 	andeq	r7, sl, r5, lsr #10
 80179bc:	204d4452 	subcs	r4, sp, r2, asr r4
 80179c0:	70736552 	rsbsvc	r6, r3, r2, asr r5
 80179c4:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80179c8:	6f632072 	svcvs	0x00632072
 80179cc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80179d0:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 80179d4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 80179d8:	6f725020 	svcvs	0x00725020
 80179dc:	6f636f74 	svcvs	0x00636f74
 80179e0:	6556206c 	ldrbvs	r2, [r6, #-108]	@ 0xffffff94
 80179e4:	6f697372 	svcvs	0x00697372
 80179e8:	6425206e 	strtvs	r2, [r5], #-110	@ 0xffffff92
 80179ec:	0a64252e 	beq	9920eac <__init_array_end+0x1906538>
 80179f0:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80179f4:	64412058 	strbvs	r2, [r1], #-88	@ 0xffffffa8
 80179f8:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 80179fc:	20202073 	eorcs	r2, r0, r3, ror r0
 8017a00:	3a202020 	bcc	881fa88 <__init_array_end+0x805114>
 8017a04:	0a642520 	beq	9920e8c <__init_array_end+0x1906518>
 8017a08:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8017a0c:	6f462058 	svcvs	0x00462058
 8017a10:	7270746f 	rsbsvc	r7, r0, #1862270976	@ 0x6f000000
 8017a14:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8017a18:	3a202020 	bcc	881faa0 <__init_array_end+0x80512c>
 8017a1c:	0a642520 	beq	9920ea4 <__init_array_end+0x1906530>
 8017a20:	65502000 	ldrbvs	r2, [r0, #-0]
 8017a24:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8017a28:	74696c61 	strbtvc	r6, [r9], #-3169	@ 0xfffff39f
 8017a2c:	64252079 	strtvs	r2, [r5], #-121	@ 0xffffff87
 8017a30:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8017a34:	5b206425 	blpl	8830ad0 <__init_array_end+0x81615c>
 8017a38:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 8017a3c:	20000a5d 	andcs	r0, r0, sp, asr sl
 8017a40:	20627553 	rsbcs	r7, r2, r3, asr r5
 8017a44:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8017a48:	20736563 	rsbscs	r6, r3, r3, ror #10
 8017a4c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a50:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017a54:	20000a64 	andcs	r0, r0, r4, ror #20
 8017a58:	736e6553 	cmnvc	lr, #348127232	@ 0x14c00000
 8017a5c:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8017a60:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a64:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a68:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017a6c:	52000a64 	andpl	r0, r0, #100, 20	@ 0x64000
 8017a70:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 8017a74:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8017a78:	6f632065 	svcvs	0x00632065
 8017a7c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017a80:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8017a84:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 8017a88:	6e614d20 	cdpvs	13, 6, cr4, cr1, cr0, {1}
 8017a8c:	63616675 	cmnvs	r1, #122683392	@ 0x7500000
 8017a90:	65727574 	ldrbvs	r7, [r2, #-1396]!	@ 0xfffffa8c
 8017a94:	614e2072 	hvcvs	57858	@ 0xe202
 8017a98:	3a20656d 	bcc	8831054 <__init_array_end+0x8166e0>
 8017a9c:	2a2e2520 	bcs	8ba0f24 <__init_array_end+0xb865b0>
 8017aa0:	20000a73 	andcs	r0, r0, r3, ror sl
 8017aa4:	756e614d 	strbvc	r6, [lr, #-333]!	@ 0xfffffeb3
 8017aa8:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 8017aac:	72657275 	rsbvc	r7, r5, #1342177287	@ 0x50000007
 8017ab0:	20444920 	subcs	r4, r4, r0, lsr #18
 8017ab4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017ab8:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017abc:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017ac0:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 8017ac4:	61697265 	cmnvs	r9, r5, ror #4
 8017ac8:	754e206c 	strbvc	r2, [lr, #-108]	@ 0xffffff94
 8017acc:	7265626d 	rsbvc	r6, r5, #-805306362	@ 0xd0000006
 8017ad0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017ad4:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8017ad8:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8017adc:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8017ae0:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 8017ae4:	0a58322e 	beq	96243a4 <__init_array_end+0x1609a30>
 8017ae8:	6f522000 	svcvs	0x00522000
 8017aec:	6c20746f 	cfstrsvs	mvf7, [r0], #-444	@ 0xfffffe44
 8017af0:	6c656261 	sfmvs	f6, 2, [r5], #-388	@ 0xfffffe7c
 8017af4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017af8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017afc:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017b00:	000a732a 	andeq	r7, sl, sl, lsr #6
 8017b04:	6f725020 	svcvs	0x00725020
 8017b08:	74637564 	strbtvc	r7, [r3], #-1380	@ 0xfffffa9c
 8017b0c:	74614320 	strbtvc	r4, [r1], #-800	@ 0xfffffce0
 8017b10:	726f6765 	rsbvc	r6, pc, #26476544	@ 0x1940000
 8017b14:	3a202079 	bcc	881fd00 <__init_array_end+0x80538c>
 8017b18:	322e2520 	eorcc	r2, lr, #32, 10	@ 0x8000000
 8017b1c:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 8017b20:	20000a58 	andcs	r0, r0, r8, asr sl
 8017b24:	646f7250 	strbtvs	r7, [pc], #-592	@ 8017b2c <_etext+0x878>
 8017b28:	20746375 	rsbscs	r6, r4, r5, ror r3
 8017b2c:	61746544 	cmnvs	r4, r4, asr #10
 8017b30:	20206c69 	eorcs	r6, r0, r9, ror #24
 8017b34:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017b38:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017b3c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017b40:	2522000a 	strcs	r0, [r2, #-10]!
 8017b44:	253a2273 	ldrcs	r2, [sl, #-627]!	@ 0xfffffd8d
 8017b48:	2c662a2e 			@ <UNDEFINED> instruction: 0x2c662a2e
 8017b4c:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 8017b50:	2a2e253d 	bcs	8ba104c <__init_array_end+0xb866d8>
 8017b54:	4f000a66 	svcmi	0x00000a66
 8017b58:	77726576 			@ <UNDEFINED> instruction: 0x77726576
 8017b5c:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
 8017b60:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8017b64:	65687361 	strbvs	r7, [r8, #-865]!	@ 0xfffffc9f
 8017b68:	4f007465 	svcmi	0x00007465
 8017b6c:	77726576 			@ <UNDEFINED> instruction: 0x77726576
 8017b70:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
 8017b74:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	@ 0xffffff80
 8017b78:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8017b7c:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8017b80:	6f724700 	svcvs	0x00724700
 8017b84:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8017b88:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8017b8c:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8017b90:	65736162 	ldrbvs	r6, [r3, #-354]!	@ 0xfffffe9e
 8017b94:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8017b98:	00737069 	rsbseq	r7, r3, r9, rrx
 8017b9c:	31415041 	cmpcc	r1, r1, asr #32
 8017ba0:	532f3230 			@ <UNDEFINED> instruction: 0x532f3230
 8017ba4:	3238394b 	eorscc	r3, r8, #1228800	@ 0x12c000
 8017ba8:	65540032 	ldrbvs	r0, [r4, #-50]	@ 0xffffffce
 8017bac:	70207473 	eorvc	r7, r0, r3, ror r4
 8017bb0:	65747461 	ldrbvs	r7, [r4, #-1121]!	@ 0xfffffb9f
 8017bb4:	7b006e72 	blvc	8033584 <__init_array_end+0x18c10>
 8017bb8:	66657222 	strbtvs	r7, [r5], -r2, lsr #4
 8017bbc:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8017bc0:	7461725f 	strbtvc	r7, [r1], #-607	@ 0xfffffda1
 8017bc4:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8017bc8:	7d227525 	cfstr32vc	mvfx7, [r2, #-148]!	@ 0xffffff6c
 8017bcc:	6b6e5500 	blvs	9bacfd4 <__init_array_end+0x1b92660>
 8017bd0:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
 8017bd4:	646e5500 	strbtvs	r5, [lr], #-1280	@ 0xfffffb00
 8017bd8:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
 8017bdc:	7b006465 	blvc	8030d78 <__init_array_end+0x16404>
 8017be0:	70797422 	rsbsvc	r7, r9, r2, lsr #8
 8017be4:	3a227365 	bcc	88b4980 <__init_array_end+0x89a00c>
 8017be8:	2e25005b 	mcrcs	0, 1, r0, cr5, cr11, {2}
 8017bec:	002e732a 	eoreq	r7, lr, sl, lsr #6
 8017bf0:	534e446d 	movtpl	r4, #58477	@ 0xe46d
 8017bf4:	2520000a 	strcs	r0, [r0, #-10]!
 8017bf8:	2e252064 	cdpcs	0, 2, cr2, cr5, cr4, {3}
 8017bfc:	000a732a 	andeq	r7, sl, sl, lsr #6
 8017c00:	203a7069 	eorscs	r7, sl, r9, rrx
 8017c04:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017c08:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c0c:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 8017c10:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 8017c14:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c18:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017c1c:	000a6425 	andeq	r6, sl, r5, lsr #8
 8017c20:	6d74656e 	cfldr64vs	mvdx6, [r4, #-440]!	@ 0xfffffe48
 8017c24:	3a6b7361 	bcc	9af49b0 <__init_array_end+0x1ada03c>
 8017c28:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017c2c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017c30:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c34:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8017c38:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017c3c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c40:	0a64252e 	beq	9921100 <__init_array_end+0x190678c>
 8017c44:	3a776700 	bcc	9df184c <__init_array_end+0x1dd6ed8>
 8017c48:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017c4c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017c50:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c54:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8017c58:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017c5c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017c60:	0a64252e 	beq	9921120 <__init_array_end+0x19067ac>
 8017c64:	68746500 	ldmdavs	r4!, {r8, sl, sp, lr}^
 8017c68:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8017c6c:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 8017c70:	3a78322e 	bcc	9e24530 <__init_array_end+0x1e09bbc>
 8017c74:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017c78:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 8017c7c:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 8017c80:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 8017c84:	0a78322e 	beq	9e24544 <__init_array_end+0x1e09bd0>
 8017c88:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017c8c:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8017c90:	5f656369 	svcpl	0x00656369
 8017c94:	666f5300 	strbtvs	r5, [pc], -r0, lsl #6
 8017c98:	72617774 	rsbvc	r7, r1, #116, 14	@ 0x1d00000
 8017c9c:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 8017ca0:	64417265 	strbvs	r7, [r1], #-613	@ 0xfffffd9b
 8017ca4:	73000a64 	movwvc	r0, #2660	@ 0xa64
 8017ca8:	6e6f6365 	cdpvs	3, 6, cr6, cr15, cr5, {3}
 8017cac:	79726164 	ldmdbvc	r2!, {r2, r5, r6, r8, sp, lr}^
 8017cb0:	0070695f 	rsbseq	r6, r0, pc, asr r9
 8017cb4:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 8017cb8:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8017cbc:	544e0050 	strbpl	r0, [lr], #-80	@ 0xffffffb0
 8017cc0:	65532050 	ldrbvs	r2, [r3, #-80]	@ 0xffffffb0
 8017cc4:	72657672 	rsbvc	r7, r5, #119537664	@ 0x7200000
 8017cc8:	38504400 	ldmdacc	r0, {sl, lr}^
 8017ccc:	38343833 	ldmdacc	r4!, {r0, r1, r4, r5, fp, ip, sp}
 8017cd0:	74656e00 	strbtvc	r6, [r5], #-3584	@ 0xfffff200
 8017cd4:	68703a3a 	ldmdavs	r0!, {r1, r3, r4, r5, r9, fp, ip, sp}^
 8017cd8:	6f635f79 	svcvs	0x00635f79
 8017cdc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017ce0:	59485028 	stmdbpl	r8, {r3, r5, ip, lr}^
 8017ce4:	4444415f 	strbmi	r4, [r4], #-351	@ 0xfffffea1
 8017ce8:	53534552 	cmppl	r3, #343932928	@ 0x14800000
 8017cec:	70550029 	subsvc	r0, r5, r9, lsr #32
 8017cf0:	776f4400 	strbvc	r4, [pc, -r0, lsl #8]!
 8017cf4:	4148006e 	cmpmi	r8, lr, rrx
 8017cf8:	4600464c 	strmi	r4, [r0], -ip, asr #12
 8017cfc:	004c4c55 	subeq	r4, ip, r5, asr ip
 8017d00:	6b6e694c 	blvs	9bb2238 <__init_array_end+0x1b978c4>
 8017d04:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 8017d08:	2c642520 	cfstr64cs	mvdx2, [r4], #-128	@ 0xffffff80
 8017d0c:	0a732520 	beq	9ce1194 <__init_array_end+0x1cc6820>
 8017d10:	69615700 	stmdbvs	r1!, {r8, r9, sl, ip, lr}^
 8017d14:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 8017d18:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8017d1c:	59485020 	stmdbpl	r8, {r5, ip, lr}^
 8017d20:	74756120 	ldrbtvc	r6, [r5], #-288	@ 0xfffffee0
 8017d24:	656e206f 	strbvs	r2, [lr, #-111]!	@ 0xffffff91
 8017d28:	69746f67 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017d2c:	6f697461 	svcvs	0x00697461
 8017d30:	6f74206e 	svcvs	0x0074206e
 8017d34:	6d6f6320 	stclvs	3, cr6, [pc, #-128]!	@ 8017cbc <_etext+0xa08>
 8017d38:	74656c70 	strbtvc	r6, [r5], #-3184	@ 0xfffff390
 8017d3c:	64250065 	strtvs	r0, [r5], #-101	@ 0xffffff9b
 8017d40:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017d44:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017d48:	64252f64 	strtvs	r2, [r5], #-3940	@ 0xfffff09c
 8017d4c:	00632520 	rsbeq	r2, r3, r0, lsr #10
 8017d50:	6d726946 			@ <UNDEFINED> instruction: 0x6d726946
 8017d54:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 8017d58:	2e255620 	cfmadda32cs	mvax1, mvax5, mvfx5, mvfx0
 8017d5c:	4700732a 	strmi	r7, [r0, -sl, lsr #6]
 8017d60:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 8017d64:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017d68:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017d6c:	3a4e0064 	bcc	9397f04 <__init_array_end+0x137d590>
 8017d70:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017d74:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017d78:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017d7c:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 8017d80:	656e7265 	strbvs	r7, [lr, #-613]!	@ 0xfffffd9b
 8017d84:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
 8017d88:	45007469 	strmi	r7, [r0, #-1129]	@ 0xfffffb97
 8017d8c:	72656874 	rsbvc	r6, r5, #116, 16	@ 0x740000
 8017d90:	2074656e 	rsbscs	r6, r4, lr, ror #10
 8017d94:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 8017d98:	50550074 	subspl	r0, r5, r4, ror r0
 8017d9c:	574f4400 	strbpl	r4, [pc, -r0, lsl #8]
 8017da0:	7445004e 	strbvc	r0, [r5], #-78	@ 0xffffffb2
 8017da4:	6e726568 	cdpvs	5, 7, cr6, cr2, cr8, {3}
 8017da8:	4c207465 	cfstrsmi	mvf7, [r0], #-404	@ 0xfffffe6c
 8017dac:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 8017db0:	53007325 	movwpl	r7, #805	@ 0x325
 8017db4:	65726f74 	ldrbvs	r6, [r2, #-3956]!	@ 0xfffff08c
 8017db8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8017dbc:	203a6563 	eorscs	r6, sl, r3, ror #10
 8017dc0:	41525342 	cmpmi	r2, r2, asr #6
 8017dc4:	6977204d 	ldmdbvs	r7!, {r0, r2, r3, r6, sp}^
 8017dc8:	74206874 	strtvc	r6, [r0], #-2164	@ 0xfffff78c
 8017dcc:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	@ 0xfffffe44
 8017dd0:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8017dd4:	65747962 	ldrbvs	r7, [r4, #-2402]!	@ 0xfffff69e
 8017dd8:	255b2073 	ldrbcs	r2, [fp, #-115]	@ 0xffffff8d
 8017ddc:	426b2064 	rsbmi	r2, fp, #100	@ 0x64
 8017de0:	22000a5d 	andcs	r0, r0, #380928	@ 0x5d000
 8017de4:	3a227325 	bcc	88b4a80 <__init_array_end+0x89a10c>
 8017de8:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 8017dec:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 8017df0:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017df4:	23002c22 	movwcs	r2, #3106	@ 0xc22
 8017df8:	253d7325 	ldrcs	r7, [sp, #-805]!	@ 0xfffffcdb
 8017dfc:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 8017e00:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017e04:	000a6425 	andeq	r6, sl, r5, lsr #8
 8017e08:	2522002b 	strcs	r0, [r2, #-43]!	@ 0xffffffd5
 8017e0c:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 8017e10:	2e257325 	cdpcs	3, 2, cr7, cr5, cr5, {1}
 8017e14:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8017e18:	2275322e 	rsbscs	r3, r5, #-536870910	@ 0xe0000002
 8017e1c:	7325002c 			@ <UNDEFINED> instruction: 0x7325002c
 8017e20:	2573253d 	ldrbcs	r2, [r3, #-1341]!	@ 0xfffffac3
 8017e24:	3a64322e 	bcc	99246e4 <__init_array_end+0x1909d70>
 8017e28:	75322e25 	ldrvc	r2, [r2, #-3621]!	@ 0xfffff1db
 8017e2c:	25202300 	strcs	r2, [r0, #-768]!	@ 0xfffffd00
 8017e30:	0a232073 	beq	88e0004 <__init_array_end+0x8c5690>
 8017e34:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8017e38:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017e3c:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8017e40:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8017e44:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8017e48:	36303131 			@ <UNDEFINED> instruction: 0x36303131
 8017e4c:	44535300 	ldrbmi	r5, [r3], #-768	@ 0xfffffd00
 8017e50:	36303331 			@ <UNDEFINED> instruction: 0x36303331
 8017e54:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8017e58:	2c752528 	cfldr64cs	mvdx2, [r5], #-160	@ 0xffffff60
 8017e5c:	0a297525 	beq	8a752f8 <__init_array_end+0xa5a984>
 8017e60:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8017e64:	5b00eeaa 	blpl	8053914 <__init_array_end+0x38fa0>
 8017e68:	2a2e2556 	bcs	8ba13c8 <__init_array_end+0xb86a54>
 8017e6c:	25205d73 	strcs	r5, [r0, #-3443]!	@ 0xfffff28d
 8017e70:	6f432073 	svcvs	0x00432073
 8017e74:	6c69706d 	stclvs	0, cr7, [r9], #-436	@ 0xfffffe4c
 8017e78:	6f206465 	svcvs	0x00206465
 8017e7c:	2e25206e 	cdpcs	0, 2, cr2, cr5, cr14, {3}
 8017e80:	6120732a 			@ <UNDEFINED> instruction: 0x6120732a
 8017e84:	2e252074 	mcrcs	0, 1, r2, cr5, cr4, {3}
 8017e88:	7b00732a 	blvc	8034b38 <__init_array_end+0x1a1c4>
 8017e8c:	74616422 	strbtvc	r6, [r1], #-1058	@ 0xfffffbde
 8017e90:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 8017e94:	252d6425 	strcs	r6, [sp, #-1061]!	@ 0xfffffbdb
 8017e98:	2d64322e 	sfmcs	f3, 2, [r4, #-184]!	@ 0xffffff48
 8017e9c:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017ea0:	322e2554 	eorcc	r2, lr, #84, 10	@ 0x15000000
 8017ea4:	2e253a64 	vnmulcs.f32	s6, s10, s9
 8017ea8:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8017eac:	5a64322e 	bpl	992476c <__init_array_end+0x1909df8>
 8017eb0:	000a7d22 	andeq	r7, sl, r2, lsr #26
 8017eb4:	6164227b 	smcvs	16939	@ 0x422b
 8017eb8:	3a226574 	bcc	88b1490 <__init_array_end+0x896b1c>
 8017ebc:	2d642522 	cfstr64cs	mvdx2, [r4, #-136]!	@ 0xffffff78
 8017ec0:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017ec4:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 8017ec8:	2e255464 	cdpcs	4, 2, cr5, cr5, cr4, {3}
 8017ecc:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8017ed0:	3a64322e 	bcc	9924790 <__init_array_end+0x1909e1c>
 8017ed4:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 8017ed8:	2e257325 	cdpcs	3, 2, cr7, cr5, cr5, {1}
 8017edc:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 8017ee0:	2275322e 	rsbscs	r3, r5, #-536870910	@ 0xe0000002
 8017ee4:	1b000a7d 	blne	801a8e0 <_OledFont8x6+0x23c>
 8017ee8:	6d31335b 	ldcvs	3, cr3, [r1, #-364]!	@ 0xfffffe94
 8017eec:	335b1b00 	cmpcc	fp, #0, 22
 8017ef0:	1b006d37 	blne	80333d4 <__init_array_end+0x18a60>
 8017ef4:	6d30335b 	ldcvs	3, cr3, [r0, #-364]!	@ 0xfffffe94
 8017ef8:	335b1b00 	cmpcc	fp, #0, 22
 8017efc:	1b006d32 	blne	80333cc <__init_array_end+0x18a58>
 8017f00:	6d33335b 	ldcvs	3, cr3, [r3, #-364]!	@ 0xfffffe94
 8017f04:	335b1b00 	cmpcc	fp, #0, 22
 8017f08:	1b006d39 	blne	80333f4 <__init_array_end+0x18a80>
 8017f0c:	6d30345b 	cfldrsvs	mvf3, [r0, #-364]!	@ 0xfffffe94
 8017f10:	345b1b00 	ldrbcc	r1, [fp], #-2816	@ 0xfffff500
 8017f14:	1b006d31 	blne	80333e0 <__init_array_end+0x18a6c>
 8017f18:	6d37345b 	cfldrsvs	mvf3, [r7, #-364]!	@ 0xfffffe94
 8017f1c:	345b1b00 	ldrbcc	r1, [fp], #-2816	@ 0xfffff500
 8017f20:	25006d39 	strcs	r6, [r0, #-3385]	@ 0xfffff2c7
 8017f24:	2d783830 	ldclcs	8, cr3, [r8, #-192]!	@ 0xffffff40
 8017f28:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8017f2c:	3430252d 	ldrtcc	r2, [r0], #-1325	@ 0xfffffad3
 8017f30:	30252d78 	eorcc	r2, r5, r8, ror sp
 8017f34:	30257832 	eorcc	r7, r5, r2, lsr r8
 8017f38:	252d7832 	strcs	r7, [sp, #-2098]!	@ 0xfffff7ce
 8017f3c:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 8017f40:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 8017f44:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 8017f48:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 8017f4c:	25783230 	ldrbcs	r3, [r8, #-560]!	@ 0xfffffdd0
 8017f50:	00783230 	rsbseq	r3, r8, r0, lsr r2
 8017f54:	7478656e 	ldrbtvc	r6, [r8], #-1390	@ 0xfffffa92
 8017f58:	62203e20 	eorvs	r3, r0, #32, 28	@ 0x200
 8017f5c:	6b636f6c 	blvs	98f3d14 <__init_array_end+0x18d93a0>
 8017f60:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	@ 0xfffffe84
 8017f64:	000a7469 	andeq	r7, sl, r9, ror #8

08017f68 <CSWTCH.77>:
 8017f68:	444e4f4f 	strbmi	r4, [lr], #-3919	@ 0xfffff0b1
 8017f6c:	00005246 	andeq	r5, r0, r6, asr #4

08017f70 <vtable for RDMNetDevice>:
	...
 8017f78:	080097d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 8017f7c:	08009801 	stmdaeq	r0, {r0, fp, ip, pc}
 8017f80:	0800b845 	stmdaeq	r0, {r0, r2, r6, fp, ip, sp, pc}
 8017f84:	0800b847 	stmdaeq	r0, {r0, r1, r2, r6, fp, ip, sp, pc}

08017f88 <SOFTWARE_VERSION>:
 8017f88:	00342e31 	eorseq	r2, r4, r1, lsr lr

08017f8c <SOFTWARE_VERSION>:
 8017f8c:	00342e31 	eorseq	r2, r4, r1, lsr lr

08017f90 <s_Output>:
 8017f90:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8017f9c:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8017fa8:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8017fac:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8017fb0:	00000000 	andeq	r0, r0, r0
 8017fb4:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 8017fb8:	0000006c 	andeq	r0, r0, ip, rrx
 8017fbc:	00000000 	andeq	r0, r0, r0
 8017fc0:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8017fc4:	65646f43 	strbvs	r6, [r4, #-3907]!	@ 0xfffff0bd
 8017fc8:	00000000 	andeq	r0, r0, r0
 8017fcc:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8017fd8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8017fdc:	00006769 	andeq	r6, r0, r9, ror #14
 8017fe0:	00000000 	andeq	r0, r0, r0
 8017fe4:	70657453 	rsbvc	r7, r5, r3, asr r4
 8017fe8:	00726570 	rsbseq	r6, r2, r0, ror r5
 8017fec:	00000000 	andeq	r0, r0, r0
 8017ff0:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8017ff4:	00007265 	andeq	r7, r0, r5, ror #4
 8017ff8:	00000000 	andeq	r0, r0, r0
 8017ffc:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 8018000:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018004:	00000000 	andeq	r0, r0, r0
 8018008:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801800c:	00006c61 	andeq	r6, r0, r1, ror #24
 8018010:	00000000 	andeq	r0, r0, r0
 8018014:	20424752 	subcs	r4, r2, r2, asr r7
 8018018:	656e6150 	strbvs	r6, [lr, #-336]!	@ 0xfffffeb0
 801801c:	0000006c 	andeq	r0, r0, ip, rrx
 8018020:	004d5750 	subeq	r5, sp, r0, asr r7
	...

0801802c <s_Node>:
 801802c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 8018030:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801803c:	41730000 	cmnmi	r3, r0
 8018040:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 8018044:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8018050:	2043534f 	subcs	r5, r3, pc, asr #6
 8018054:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 8018058:	00007265 	andeq	r7, r0, r5, ror #4
 801805c:	00000000 	andeq	r0, r0, r0
 8018060:	544c0000 	strbpl	r0, [ip], #-0
 8018064:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8018074:	2043534f 	subcs	r5, r3, pc, asr #6
 8018078:	65696c43 	strbvs	r6, [r9, #-3139]!	@ 0xfffff3bd
 801807c:	0000746e 	andeq	r7, r0, lr, ror #8
 8018080:	00000000 	andeq	r0, r0, r0
 8018084:	44520000 	ldrbmi	r0, [r2], #-0
 8018088:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 801808c:	524c4c20 	subpl	r4, ip, #32, 24	@ 0x2000
 8018090:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8018094:	0000796c 	andeq	r7, r0, ip, ror #18
 8018098:	776f6853 			@ <UNDEFINED> instruction: 0x776f6853
 801809c:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
	...
 80180a8:	494d0000 	stmdbmi	sp, {}^	@ <UNPREDICTABLE>
 80180ac:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80180bc:	00504444 	subseq	r4, r0, r4, asr #8
	...
 80180cc:	69500000 	ldmdbvs	r0, {}^	@ <UNPREDICTABLE>
 80180d0:	506c6578 	rsbpl	r6, ip, r8, ror r5
 80180d4:	65687375 	strbvs	r7, [r8, #-885]!	@ 0xfffffc8b
 80180d8:	00000072 	andeq	r0, r0, r2, ror r0
 80180dc:	00000000 	andeq	r0, r0, r0
 80180e0:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
	...
 80180f0:	6f420000 	svcvs	0x00420000
 80180f4:	6f6c746f 	svcvs	0x006c746f
 80180f8:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 80180fc:	54465420 	strbpl	r5, [r6], #-1056	@ 0xfffffbe0
 8018100:	00000050 	andeq	r0, r0, r0, asr r0
 8018104:	204d4452 	subcs	r4, sp, r2, asr r4
 8018108:	70736552 	rsbsvc	r6, r3, r2, asr r5
 801810c:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8018110:	00000072 	andeq	r0, r0, r2, ror r0
 8018114:	00000000 	andeq	r0, r0, r0

08018118 <RemoteConfig::s_SET>:
 8018118:	0800a1ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sp, pc}
 801811c:	00000000 	andeq	r0, r0, r0
 8018120:	080176f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 8018124:	00010005 	andeq	r0, r1, r5
 8018128:	0800a185 	stmdaeq	r0, {r0, r2, r7, r8, sp, pc}
 801812c:	00000000 	andeq	r0, r0, r0
 8018130:	080176fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 8018134:	00010008 	andeq	r0, r1, r8

08018138 <RemoteConfig::s_GET>:
 8018138:	0800a9f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, sp, pc}
 801813c:	00000000 	andeq	r0, r0, r0
 8018140:	0801770f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, ip, sp, lr}
 8018144:	00000008 	andeq	r0, r0, r8
 8018148:	0800a0d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sp, pc}
 801814c:	00000000 	andeq	r0, r0, r0
 8018150:	08017718 	stmdaeq	r1, {r3, r4, r8, r9, sl, ip, sp, lr}
 8018154:	00000005 	andeq	r0, r0, r5
 8018158:	0800a051 	stmdaeq	r0, {r0, r4, r6, sp, pc}
 801815c:	00000000 	andeq	r0, r0, r0
 8018160:	0801771e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, ip, sp, lr}
 8018164:	00000008 	andeq	r0, r0, r8
 8018168:	08009fc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl, fp, ip, pc}
 801816c:	00000000 	andeq	r0, r0, r0
 8018170:	080176fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 8018174:	00000008 	andeq	r0, r0, r8
 8018178:	0800a011 	stmdaeq	r0, {r0, r4, sp, pc}
 801817c:	00000000 	andeq	r0, r0, r0
 8018180:	08017727 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, ip, sp, lr}
 8018184:	00000007 	andeq	r0, r0, r7
 8018188:	0800a3c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sp, pc}
 801818c:	00000000 	andeq	r0, r0, r0
 8018190:	0801772f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, ip, sp, lr}
 8018194:	00010004 	andeq	r0, r1, r4
 8018198:	0800a089 	stmdaeq	r0, {r0, r3, r7, sp, pc}
 801819c:	00000000 	andeq	r0, r0, r0
 80181a0:	080176f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 80181a4:	00000005 	andeq	r0, r0, r5
 80181a8:	0800a6e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, sp, pc}
 80181ac:	00000000 	andeq	r0, r0, r0
 80181b0:	08017734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, ip, sp, lr}
 80181b4:	00000009 	andeq	r0, r0, r9

080181b8 <paramMasks>:
 80181b8:	0801877a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, pc}
 80181bc:	00000001 	andeq	r0, r0, r1
 80181c0:	0801876c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, sl, pc}
 80181c4:	00000002 	andeq	r0, r0, r2
 80181c8:	0801875e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, sl, pc}
 80181cc:	00000004 	andeq	r0, r0, r4
 80181d0:	08018750 	stmdaeq	r1, {r4, r6, r8, r9, sl, pc}
 80181d4:	00000008 	andeq	r0, r0, r8
 80181d8:	08018741 	stmdaeq	r1, {r0, r6, r8, r9, sl, pc}
 80181dc:	00000020 	andeq	r0, r0, r0, lsr #32

080181e0 <RemoteConfig::s_TXT>:
 80181e0:	0800a3d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sp, pc}
 80181e4:	00000000 	andeq	r0, r0, r0
 80181e8:	0800a639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, sp, pc}
 80181ec:	00000000 	andeq	r0, r0, r0
 80181f0:	08017770 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, ip, sp, lr}
 80181f4:	0000000b 	andeq	r0, r0, fp
 80181f8:	0800a3f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sp, pc}
 80181fc:	00000000 	andeq	r0, r0, r0
 8018200:	0800a661 	stmdaeq	r0, {r0, r5, r6, r9, sl, sp, pc}
 8018204:	00000000 	andeq	r0, r0, r0
 8018208:	0801777c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 801820c:	00000007 	andeq	r0, r0, r7
 8018210:	0800a41d 	stmdaeq	r0, {r0, r2, r3, r4, sl, sp, pc}
 8018214:	00000000 	andeq	r0, r0, r0
 8018218:	0800a681 	stmdaeq	r0, {r0, r7, r9, sl, sp, pc}
 801821c:	00000000 	andeq	r0, r0, r0
 8018220:	08017784 	stmdaeq	r1, {r2, r7, r8, r9, sl, ip, sp, lr}
 8018224:	0000000b 	andeq	r0, r0, fp
 8018228:	0800a46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, sp, pc}
 801822c:	00000000 	andeq	r0, r0, r0
 8018230:	0800a6c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, sp, pc}
 8018234:	00000000 	andeq	r0, r0, r0
 8018238:	08017790 	stmdaeq	r1, {r4, r7, r8, r9, sl, ip, sp, lr}
 801823c:	0000000b 	andeq	r0, r0, fp
 8018240:	0800a445 	stmdaeq	r0, {r0, r2, r6, sl, sp, pc}
 8018244:	00000000 	andeq	r0, r0, r0
 8018248:	0800a6a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, sp, pc}
 801824c:	00000000 	andeq	r0, r0, r0
 8018250:	0801779c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 8018254:	0000000b 	andeq	r0, r0, fp
 8018258:	00000020 	andeq	r0, r0, r0, lsr #32
 801825c:	00544547 	subseq	r4, r4, r7, asr #10
 8018260:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 8018264:	00000000 	andeq	r0, r0, r0
 8018268:	0000002f 	andeq	r0, r0, pc, lsr #32
 801826c:	50545448 	subspl	r5, r4, r8, asr #8
 8018270:	00000000 	andeq	r0, r0, r0
 8018274:	00000a20 	andeq	r0, r0, r0, lsr #20
 8018278:	00312e31 	eorseq	r2, r1, r1, lsr lr
 801827c:	0000003a 	andeq	r0, r0, sl, lsr r0
 8018280:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8018284:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8018288:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 801828c:	00000000 	andeq	r0, r0, r0
 8018290:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8018294:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8018298:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801829c:	00006874 	andeq	r6, r0, r4, ror r8
 80182a0:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 80182a4:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80182a8:	2f6e6f69 	svccs	0x006e6f69
 80182ac:	00000000 	andeq	r0, r0, r0
 80182b0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80182b4:	00000000 	andeq	r0, r0, r0
 80182b8:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 80182bc:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 80182c0:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
 80182c4:	00000000 	andeq	r0, r0, r0
 80182c8:	00003b20 	andeq	r3, r0, r0, lsr #22
 80182cc:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 80182d0:	00000000 	andeq	r0, r0, r0
 80182d4:	6f736a2f 	svcvs	0x00736a2f
 80182d8:	00002f6e 	andeq	r2, r0, lr, ror #30
 80182dc:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 80182e0:	00002f6c 	andeq	r2, r0, ip, ror #30
 80182e4:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 80182e8:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 80182ec:	00006c6d 	andeq	r6, r0, sp, ror #24
 80182f0:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	@ 0xffffff44
 80182f4:	00000065 	andeq	r0, r0, r5, rrx
 80182f8:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80182fc:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 8018300:	0000006c 	andeq	r0, r0, ip, rrx
 8018304:	6f736a2f 	svcvs	0x00736a2f
 8018308:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 801830c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018310:	00000000 	andeq	r0, r0, r0
 8018314:	6f736a2f 	svcvs	0x00736a2f
 8018318:	0000006e 	andeq	r0, r0, lr, rrx
 801831c:	6f626572 	svcvs	0x00626572
 8018320:	0000746f 	andeq	r7, r0, pc, ror #8
 8018324:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018328:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801832c:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8018330:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8018334:	00000000 	andeq	r0, r0, r0
 8018338:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801833c:	0000003d 	andeq	r0, r0, sp, lsr r0
 8018340:	4f44213c 	svcmi	0x0044213c
 8018344:	50595443 	subspl	r5, r9, r3, asr #8
 8018348:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801834c:	0a3e6c6d 	beq	8fb3508 <__init_array_end+0xf98b94>
 8018350:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018354:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8018358:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801835c:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018360:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018364:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	@ 0xfffffeb4
 8018368:	2f3c7469 	svccs	0x003c7469
 801836c:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 8018370:	2f3c3e65 	svccs	0x003c3e65
 8018374:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018378:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801837c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018380:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8018384:	2f3c4b4f 	svccs	0x003c4b4f
 8018388:	3c3e3168 	ldfccs	f3, [lr], #-416	@ 0xfffffe60
 801838c:	646f622f 	strbtvs	r6, [pc], #-559	@ 8018394 <RemoteConfig::s_TXT+0x1b4>
 8018390:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 8018394:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 8018398:	000a3e6c 	andeq	r3, sl, ip, ror #28
 801839c:	20646142 	rsbcs	r6, r4, r2, asr #2
 80183a0:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80183a4:	00747365 	rsbseq	r7, r4, r5, ror #6
 80183a8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80183ac:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80183b0:	6f727245 	svcvs	0x00727245
 80183b4:	00000072 	andeq	r0, r0, r2, ror r0
 80183b8:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80183bc:	20747365 	rsbscs	r7, r4, r5, ror #6
 80183c0:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 80183c4:	54207974 	strtpl	r7, [r0], #-2420	@ 0xfffff68c
 80183c8:	4c206f6f 	stcmi	15, cr6, [r0], #-444	@ 0xfffffe44
 80183cc:	65677261 	strbvs	r7, [r7, #-609]!	@ 0xfffffd9f
 80183d0:	00000000 	andeq	r0, r0, r0
 80183d4:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 80183d8:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	@ 0xfffffe6c
 80183dc:	20495255 	subcs	r5, r9, r5, asr r2
 80183e0:	206f6f54 	rsbcs	r6, pc, r4, asr pc	@ <UNPREDICTABLE>
 80183e4:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80183e8:	00000000 	andeq	r0, r0, r0
 80183ec:	65746e49 	ldrbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 80183f0:	6c616e72 	stclvs	14, cr6, [r1], #-456	@ 0xfffffe38
 80183f4:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 80183f8:	20726576 	rsbscs	r6, r2, r6, ror r5
 80183fc:	6f727245 	svcvs	0x00727245
 8018400:	00000072 	andeq	r0, r0, r2, ror r0
 8018404:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
 8018408:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
 801840c:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 8018410:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
 8018414:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8018418:	00006465 	andeq	r6, r0, r5, ror #8
 801841c:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 8018420:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8018424:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018428:	70707553 	rsbsvc	r7, r0, r3, asr r5
 801842c:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8018430:	00000064 	andeq	r0, r0, r4, rrx
 8018434:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018438:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 801843c:	00000064 	andeq	r0, r0, r4, rrx
 8018440:	00004b4f 	andeq	r4, r0, pc, asr #22
 8018444:	4f44213c 	svcmi	0x0044213c
 8018448:	50595443 	subspl	r5, r9, r3, asr #8
 801844c:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8018450:	0a3e6c6d 	beq	8fb360c <__init_array_end+0xf98c98>
 8018454:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018458:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801845c:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018460:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018464:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018468:	25207525 	strcs	r7, [r0, #-1317]!	@ 0xfffffadb
 801846c:	742f3c73 	strtvc	r3, [pc], #-3187	@ 8018474 <RemoteConfig::s_TXT+0x294>
 8018470:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8018474:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8018478:	3e646165 	powccsz	f6, f4, f5
 801847c:	6f623c0a 	svcvs	0x00623c0a
 8018480:	3c3e7964 			@ <UNDEFINED> instruction: 0x3c3e7964
 8018484:	253e3168 	ldrcs	r3, [lr, #-360]!	@ 0xfffffe98
 8018488:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 801848c:	2f3c3e31 	svccs	0x003c3e31
 8018490:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018494:	2f3c0a3e 	svccs	0x003c0a3e
 8018498:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801849c:	00000a3e 	andeq	r0, r0, lr, lsr sl
 80184a0:	50545448 	subspl	r5, r4, r8, asr #8
 80184a4:	312e312f 			@ <UNDEFINED> instruction: 0x312e312f
 80184a8:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80184ac:	0a0d7325 	beq	8375148 <__init_array_end+0x35a7d4>
 80184b0:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 80184b4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80184b8:	0a0d7325 	beq	8375154 <__init_array_end+0x35a7e0>
 80184bc:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 80184c0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 80184c4:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 80184c8:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 80184cc:	6f430a0d 	svcvs	0x00430a0d
 80184d0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80184d4:	654c2d74 	strbvs	r2, [ip, #-3444]	@ 0xfffff28c
 80184d8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80184dc:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80184e0:	6f430a0d 	svcvs	0x00430a0d
 80184e4:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 80184e8:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 80184ec:	6c63203a 	stclvs	0, cr2, [r3], #-232	@ 0xffffff18
 80184f0:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	@ 0xfffffe44
 80184f4:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 80184f8:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 80184fc:	6f63206c 	svcvs	0x0063206c
 8018500:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018504:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 8018508:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801850c:	70795420 	rsbsvc	r5, r9, r0, lsr #8
 8018510:	20202065 	eorcs	r2, r0, r5, rrx
 8018514:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018518:	255b2073 	ldrbcs	r2, [fp, #-115]	@ 0xffffff8d
 801851c:	3c205d64 	stccc	13, cr5, [r0], #-400	@ 0xfffffe70
 8018520:	6c206425 	cfstrsvs	mvf6, [r0], #-148	@ 0xffffff6c
 8018524:	2f736465 	svccs	0x00736465
 8018528:	65786970 	ldrbvs	r6, [r8, #-2416]!	@ 0xfffff690
 801852c:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8018530:	756f4320 	strbvc	r4, [pc, #-800]!	@ 8018218 <RemoteConfig::s_TXT+0x38>
 8018534:	2020746e 	eorcs	r7, r0, lr, ror #8
 8018538:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 801853c:	00000a64 	andeq	r0, r0, r4, ror #20
 8018540:	70614d20 	rsbvc	r4, r1, r0, lsr #26
 8018544:	676e6970 			@ <UNDEFINED> instruction: 0x676e6970
 8018548:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 801854c:	255b2073 	ldrbcs	r2, [fp, #-115]	@ 0xffffff8d
 8018550:	000a5d64 	andeq	r5, sl, r4, ror #26
 8018554:	48305420 	ldmdami	r0!, {r5, sl, ip, lr}
 8018558:	20202020 	eorcs	r2, r0, r0, lsr #32
 801855c:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018560:	2066322e 	rsbcs	r3, r6, lr, lsr #4
 8018564:	2578305b 	ldrbcs	r3, [r8, #-91]!	@ 0xffffffa5
 8018568:	000a5d58 	andeq	r5, sl, r8, asr sp
 801856c:	48315420 	ldmdami	r1!, {r5, sl, ip, lr}
 8018570:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018574:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018578:	2066322e 	rsbcs	r3, r6, lr, lsr #4
 801857c:	2578305b 	ldrbcs	r3, [r8, #-91]!	@ 0xffffffa5
 8018580:	000a5d58 	andeq	r5, sl, r8, asr sp
 8018584:	6f6c4720 	svcvs	0x006c4720
 8018588:	426c6162 	rsbmi	r6, ip, #-2147483624	@ 0x80000018
 801858c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8018590:	73656e74 	cmnvc	r5, #116, 28	@ 0x740
 8018594:	25203a73 	strcs	r3, [r0, #-2675]!	@ 0xfffff58d
 8018598:	00000a75 	andeq	r0, r0, r5, ror sl
 801859c:	6f6c4320 	svcvs	0x006c4320
 80185a0:	20206b63 	eorcs	r6, r0, r3, ror #22
 80185a4:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80185a8:	7a482075 	bvc	9220784 <__init_array_end+0x1205e10>
 80185ac:	0000000a 	andeq	r0, r0, sl
 80185b0:	66655220 	strbtvs	r5, [r5], -r0, lsr #4
 80185b4:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 80185b8:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 80185bc:	7a482075 	bvc	9220798 <__init_array_end+0x1205e24>
 80185c0:	0000000a 	andeq	r0, r0, sl
 80185c4:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 80185c8:	4d44206c 	stclmi	0, cr2, [r4, #-432]	@ 0xfffffe50
 80185cc:	6f632058 	svcvs	0x00632058
 80185d0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80185d4:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 80185d8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 80185dc:	74754f20 	ldrbtvc	r4, [r5], #-3872	@ 0xfffff0e0
 80185e0:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 80185e4:	20202020 	eorcs	r2, r0, r0, lsr #32
 80185e8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80185ec:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 80185f0:	0000000a 	andeq	r0, r0, sl
 80185f4:	6f724720 	svcvs	0x00724720
 80185f8:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 80185fc:	6f632067 	svcvs	0x00632067
 8018600:	20746e75 	rsbscs	r6, r4, r5, ror lr
 8018604:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8018608:	72475b20 	subvc	r5, r7, #32, 22	@ 0x8000
 801860c:	7370756f 	cmnvc	r0, #465567744	@ 0x1bc00000
 8018610:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 8018614:	000a5d75 	andeq	r5, sl, r5, ror sp
 8018618:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 801861c:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 8018620:	20207365 	eorcs	r7, r0, r5, ror #6
 8018624:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018628:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801862c:	0000000a 	andeq	r0, r0, sl
 8018630:	786d4420 	stmdavc	sp!, {r5, sl, lr}^
 8018634:	746f6f46 	strbtvc	r6, [pc], #-3910	@ 801863c <RemoteConfig::s_TXT+0x45c>
 8018638:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 801863c:	20202074 	eorcs	r2, r0, r4, ror r0
 8018640:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 8018644:	0000000a 	andeq	r0, r0, sl
 8018648:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 801864c:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 8018650:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8018654:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 8018658:	0000000a 	andeq	r0, r0, sl
 801865c:	72746552 	rsbsvc	r6, r4, #343932928	@ 0x14800000
 8018660:	726f2079 	rsbvc	r2, pc, #121	@ 0x79
 8018664:	65757120 	ldrbvs	r7, [r5, #-288]!	@ 0xfffffee0
 8018668:	74206575 	strtvc	r6, [r0], #-1397	@ 0xfffffa8b
 801866c:	64206568 	strtvs	r6, [r0], #-1384	@ 0xfffffa98
 8018670:	20617461 	rsbcs	r7, r1, r1, ror #8
 8018674:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8018678:	6574616c 	ldrbvs	r6, [r4, #-364]!	@ 0xfffffe94
 801867c:	72742072 	rsbsvc	r2, r4, #114	@ 0x72
 8018680:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	@ 0xfffffe7c
 8018684:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 8018688:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801868c:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 8018690:	000a646e 	andeq	r6, sl, lr, ror #8

08018694 <s_contentType>:
 8018694:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 8018698:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 801869c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80186b4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 80186b8:	7373632f 	cmnvc	r3, #-1140850688	@ 0xbc000000
	...
 80186d4:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 80186d8:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80186dc:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 80186e0:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80186f4:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 80186f8:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 80186fc:	2f6e6f69 	svccs	0x006e6f69
 8018700:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
 8018714:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8018718:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801871c:	2f6e6f69 	svccs	0x006e6f69
 8018720:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 8018724:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 8018728:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
	...

08018734 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8018734:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018738:	5f79616c 	svcpl	0x0079616c
 801873c:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

08018741 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8018741:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8018745:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8018749:	6f746361 	svcvs	0x00746361
 801874d:	 	strvs	r7, [r0, #-2418]	@ 0xfffff68e

08018750 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8018750:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8018754:	755f656c 	ldrbvc	r6, [pc, #-1388]	@ 80181f0 <RemoteConfig::s_TXT+0x10>
 8018758:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 801875c:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801875e <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801875e:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 8018762:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 8018766:	6f6f6265 	svcvs	0x006f6265
 801876a:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

0801876c <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801876c:	61736964 	cmnvs	r3, r4, ror #18
 8018770:	5f656c62 	svcpl	0x00656c62
 8018774:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 8018778:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

0801877a <RemoteConfigConst::PARAMS_DISABLE>:
 801877a:	61736964 	cmnvs	r3, r4, ror #18
 801877e:	00656c62 	rsbeq	r6, r5, r2, ror #24

08018782 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8018782:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8018786:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 801878a:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

08018790 <HttpContent>:
 8018790:	08017923 	stmdaeq	r1, {r0, r1, r5, r8, fp, ip, sp, lr}
 8018794:	08019868 	stmdaeq	r1, {r3, r5, r6, fp, ip, pc}
 8018798:	000004c3 	andeq	r0, r0, r3, asr #9
 801879c:	00000002 	andeq	r0, r0, r2
 80187a0:	0801792d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip, sp, lr}
 80187a4:	080196ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, ip, pc}
 80187a8:	00000199 	muleq	r0, r9, r1
 80187ac:	00000001 	andeq	r0, r0, r1
 80187b0:	08017938 	stmdaeq	r1, {r3, r4, r5, r8, fp, ip, sp, lr}
 80187b4:	08019259 	stmdaeq	r1, {r0, r3, r4, r6, r9, ip, pc}
 80187b8:	00000474 	andeq	r0, r0, r4, ror r4
 80187bc:	00000002 	andeq	r0, r0, r2
 80187c0:	08017941 	stmdaeq	r1, {r0, r6, r8, fp, ip, sp, lr}
 80187c4:	08018f8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, fp, pc}
 80187c8:	000002cc 	andeq	r0, r0, ip, asr #5
 80187cc:	00000002 	andeq	r0, r0, r2
 80187d0:	08017949 	stmdaeq	r1, {r0, r3, r6, r8, fp, ip, sp, lr}
 80187d4:	08018e8d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, fp, pc}
 80187d8:	000000fe 	strdeq	r0, [r0], -lr
 80187dc:	00000002 	andeq	r0, r0, r2
 80187e0:	08017954 	stmdaeq	r1, {r2, r4, r6, r8, fp, ip, sp, lr}
 80187e4:	08018d06 	stmdaeq	r1, {r1, r2, r8, sl, fp, pc}
 80187e8:	00000186 	andeq	r0, r0, r6, lsl #3
 80187ec:	00000002 	andeq	r0, r0, r2
 80187f0:	0801795c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, ip, sp, lr}
 80187f4:	08018a68 	stmdaeq	r1, {r3, r5, r6, r9, fp, pc}
 80187f8:	0000029d 	muleq	r0, sp, r2
 80187fc:	00000000 	andeq	r0, r0, r0
 8018800:	08017967 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, fp, ip, sp, lr}
 8018804:	08018810 	stmdaeq	r1, {r4, fp, pc}
 8018808:	00000257 	andeq	r0, r0, r7, asr r2
 801880c:	00000000 	andeq	r0, r0, r0

08018810 <time_html>:
 8018810:	4f44213c 	svcmi	0x0044213c
 8018814:	50595443 	subspl	r5, r9, r3, asr #8
 8018818:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801881c:	0a3e6c6d 	beq	8fb39d8 <__init_array_end+0xf99064>
 8018820:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018824:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8018828:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801882c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018830:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 8018834:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 8018838:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801883c:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 8018840:	20227465 	eorcs	r7, r2, r5, ror #8
 8018844:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 8018848:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801884c:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 8018850:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 8018854:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 8018858:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 801885c:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
 8018860:	2065646f 	rsbcs	r6, r5, pc, ror #8
 8018864:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8018868:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801886c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018870:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 8018874:	0a3e6461 	beq	8fb1a00 <__init_array_end+0xf9708c>
 8018878:	646f623c 	strbtvs	r6, [pc], #-572	@ 8018880 <time_html+0x70>
 801887c:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 8018880:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018884:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 8018888:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801888c:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018890:	73694c64 	cmnvc	r9, #100, 24	@ 0x6400
 8018894:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 8018898:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 801889c:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 80188a0:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 80188a4:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 80188a8:	75623c3e 	strbvc	r3, [r2, #-3134]!	@ 0xfffff3c2
 80188ac:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80188b0:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 80188b4:	6b63696c 	blvs	98f2e6c <__init_array_end+0x18d84f8>
 80188b8:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 80188bc:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 80188c0:	22292868 	eorcs	r2, r9, #104, 16	@ 0x680000
 80188c4:	6665523e 			@ <UNDEFINED> instruction: 0x6665523e
 80188c8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 80188cc:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 80188d0:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80188d4:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	@ <UNPREDICTABLE>
 80188d8:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 80188dc:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 80188e0:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 80188e8 <time_html+0xd8>
 80188e4:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 80188e8:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
 80188ec:	2065646f 	rsbcs	r6, r5, pc, ror #8
 80188f0:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 80188f4:	6c697720 	stclvs	7, cr7, [r9], #-128	@ 0xffffff80
 80188f8:	6562206c 	strbvs	r2, [r2, #-108]!	@ 0xffffff94
 80188fc:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 8018900:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018904:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 8018908:	3c657265 	sfmcc	f7, 2, [r5], #-404	@ 0xfffffe6c
 801890c:	0a3e702f 	beq	8fb49d0 <__init_array_end+0xf9a05c>
 8018910:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 8018914:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8018918:	6f206e6f 	svcvs	0x00206e6f
 801891c:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018920:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 8018924:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 8018928:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
 801892c:	61636f4c 	cmnvs	r3, ip, asr #30
 8018930:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	@ 0xfffffe50
 8018934:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 8018938:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
 801893c:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
 8018940:	4c206874 	stcmi	8, cr6, [r0], #-464	@ 0xfffffe30
 8018944:	6c61636f 	stclvs	3, cr6, [r1], #-444	@ 0xfffffe44
 8018948:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 801894c:	622f3c65 	eorvs	r3, pc, #25856	@ 0x6500
 8018950:	6f747475 	svcvs	0x00747475
 8018954:	2f3c3e6e 	svccs	0x003c3e6e
 8018958:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 801895c:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 8018964 <time_html+0x154>
 8018960:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 8018964:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 8018968:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801896c:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 8018970:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018974:	2f3c3e22 	svccs	0x003c3e22
 8018978:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 801897c:	6f6f662f 	svcvs	0x006f662f
 8018980:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 8018984:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 8018988:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801898c:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8018990:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 8018994:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 8018998:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801899c:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 80189a0:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 80189a4:	2f747865 	svccs	0x00747865
 80189a8:	6176616a 	cmnvs	r6, sl, ror #2
 80189ac:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 80189b0:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 80189b4:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 80189b8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80189bc:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 80189c0:	70697263 	rsbvc	r7, r9, r3, ror #4
 80189c4:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 80189c8:	64223d63 	strtvs	r3, [r2], #-3427	@ 0xfffff29d
 80189cc:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 80189d0:	2022736a 	eorcs	r7, r2, sl, ror #6
 80189d4:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 80189d8:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 80189dc:	6a2f7478 	bvs	8bf5bc4 <__init_array_end+0xbdb250>
 80189e0:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 80189e4:	70697263 	rsbvc	r7, r9, r3, ror #4
 80189e8:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 80189ec:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 80189f0:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80189f4:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 80189f8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 80189fc:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 8018a00:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
 8018a04:	6a2e656d 	bvs	8bb1fc0 <__init_array_end+0xb9764c>
 8018a08:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018a0c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018a10:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8018a14:	616a2f74 	smcvs	41716	@ 0xa2f4
 8018a18:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018a1c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018a20:	2f3c3e22 	svccs	0x003c3e22
 8018a24:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018a28:	0a3e7470 	beq	8fb5bf0 <__init_array_end+0xf9b27c>
 8018a2c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018a30:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8018a34:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 8018a38:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
 8018a3c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018a40:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8018a44:	6665723b 			@ <UNDEFINED> instruction: 0x6665723b
 8018a48:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8018a4c:	2f3c2928 	svccs	0x003c2928
 8018a50:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018a54:	0a3e7470 	beq	8fb5c1c <__init_array_end+0xf9b2a8>
 8018a58:	6f622f3c 	svcvs	0x00622f3c
 8018a5c:	0a3e7964 	beq	8fb6ff4 <__init_array_end+0xf9c680>
 8018a60:	74682f3c 	strbtvc	r2, [r8], #-3900	@ 0xfffff0c4
 8018a64:	003e6c6d 	eorseq	r6, lr, sp, ror #24

08018a68 <index_html>:
 8018a68:	4f44213c 	svcmi	0x0044213c
 8018a6c:	50595443 	subspl	r5, r9, r3, asr #8
 8018a70:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 8018a74:	0a3e6c6d 	beq	8fb3c30 <__init_array_end+0xf992bc>
 8018a78:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 8018a7c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 8018a80:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018a84:	6c3c0a3e 			@ <UNDEFINED> instruction: 0x6c3c0a3e
 8018a88:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 8018a8c:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	@ 0xfffffe38
 8018a90:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
 8018a94:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 8018a98:	22746565 	rsbscs	r6, r4, #423624704	@ 0x19400000
 8018a9c:	65726820 	ldrbvs	r6, [r2, #-2080]!	@ 0xfffff7e0
 8018aa0:	73223d66 			@ <UNDEFINED> instruction: 0x73223d66
 8018aa4:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 8018aa8:	73632e73 	cmnvc	r3, #1840	@ 0x730
 8018aac:	2f202273 	svccs	0x00202273
 8018ab0:	743c0a3e 	ldrtvc	r0, [ip], #-2622	@ 0xfffff5c2
 8018ab4:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8018ab8:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 8018ac0 <index_html+0x58>
 8018abc:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 8018ac0:	2f3c0a3e 	svccs	0x003c0a3e
 8018ac4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018ac8:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 8018acc:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018ad0:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 8018ad4:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8018ad8:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 8018adc:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 8018ae0:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 8018ae4:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 8018ae8:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 8017eb2 <_etext+0xbfe>
 8018aec:	2f3c3e6c 	svccs	0x003c3e6c
 8018af0:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8018af4:	0a3e7265 	beq	8fb5490 <__init_array_end+0xf9ab1c>
 8018af8:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 8018afc:	656c6573 	strbvs	r6, [ip, #-1395]!	@ 0xfffffa8d
 8018b00:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8018b04:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018b08:	72694464 	rsbvc	r4, r9, #100, 8	@ 0x64000000
 8018b0c:	6f746365 	svcvs	0x00746365
 8018b10:	20227972 	eorcs	r7, r2, r2, ror r9
 8018b14:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018b18:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
 8018b1c:	6567223d 	strbvs	r2, [r7, #-573]!	@ 0xfffffdc3
 8018b20:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018b24:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8018b28:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8018b2c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 8018b30:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	@ 0xffffff5c
 8018b34:	6c65732f 	stclvs	3, cr7, [r5], #-188	@ 0xffffff44
 8018b38:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8018b3c:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8018b40:	61743c0a 	cmnvs	r4, sl, lsl #24
 8018b44:	20656c62 	rsbcs	r6, r5, r2, ror #24
 8018b48:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 8018b4c:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8018b50:	62202274 	eorvs	r2, r0, #116, 4	@ 0x40000007
 8018b54:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 8018b58:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 8018b5c:	2f3c3e27 	svccs	0x003c3e27
 8018b60:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 8018b64:	3c0a3e65 	stccc	14, cr3, [sl], {101}	@ 0x65
 8018b68:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 8018b70 <index_html+0x108>
 8018b6c:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 8018b70:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 8018b74:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018b78:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 8018b7c:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018b80:	2f3c3e22 	svccs	0x003c3e22
 8018b84:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 8018b88:	6f6f662f 	svcvs	0x006f662f
 8018b8c:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 8018b90:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 8018b94:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8018b98:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8018b9c:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8018ba0:	6c223d64 	stcvs	13, cr3, [r2], #-400	@ 0xfffffe70
 8018ba4:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8018ba8:	74754265 	ldrbtvc	r4, [r5], #-613	@ 0xfffffd9b
 8018bac:	226e6f74 	rsbcs	r6, lr, #116, 30	@ 0x1d0
 8018bb0:	616c6320 	cmnvs	ip, r0, lsr #6
 8018bb4:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 8018bb8:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8018bbc:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8018bc0:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
 8018bc4:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 8018bc8:	6c223d6b 	stcvs	13, cr3, [r2], #-428	@ 0xfffffe54
 8018bcc:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 8018bd0:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 8018bd4:	636f4c3e 	cmnvs	pc, #15872	@ 0x3e00
 8018bd8:	20657461 	rsbcs	r7, r5, r1, ror #8
 8018bdc:	3c66664f 	stclcc	6, cr6, [r6], #-316	@ 0xfffffec4
 8018be0:	7475622f 	ldrbtvc	r6, [r5], #-559	@ 0xfffffdd1
 8018be4:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
 8018be8:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 8018bec:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8018bf0:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 8018bf4:	6b63696c 	blvs	98f31ac <__init_array_end+0x18d8838>
 8018bf8:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 8018bfc:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8018c04 <index_html+0x19c>
 8018c00:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 8018c04:	6f626552 	svcvs	0x00626552
 8018c08:	2f3c746f 	svccs	0x003c746f
 8018c0c:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8018c10:	0a3e6e6f 	beq	8fb45d4 <__init_array_end+0xf99c60>
 8018c14:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018c18:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 8018c1c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018c20:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 8018c24:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 8018c28:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 8018c2c:	6a2e6369 	bvs	8bb19d8 <__init_array_end+0xb97064>
 8018c30:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018c34:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018c38:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8018c3c:	616a2f74 	smcvs	41716	@ 0xa2f4
 8018c40:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018c44:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018c48:	2f3c3e22 	svccs	0x003c3e22
 8018c4c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018c50:	0a3e7470 	beq	8fb5e18 <__init_array_end+0xf9b4a4>
 8018c54:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018c58:	20747069 	rsbscs	r7, r4, r9, rrx
 8018c5c:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8018c60:	646e6922 	strbtvs	r6, [lr], #-2338	@ 0xfffff6de
 8018c64:	6a2e7865 	bvs	8bb6e00 <__init_array_end+0xb9c48c>
 8018c68:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 8018c6c:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 8018c70:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 8018c74:	616a2f74 	smcvs	41716	@ 0xa2f4
 8018c78:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 8018c7c:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018c80:	2f3c3e22 	svccs	0x003c3e22
 8018c84:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018c88:	0a3e7470 	beq	8fb5e50 <__init_array_end+0xf9b4dc>
 8018c8c:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 8018c90:	20747069 	rsbscs	r7, r4, r9, rrx
 8018c94:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 8018c98:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
 8018c9c:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 8018ca0:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 8018ca4:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 8018ca8:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8018cac:	2f747865 	svccs	0x00747865
 8018cb0:	6176616a 	cmnvs	r6, sl, ror #2
 8018cb4:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 8018cb8:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 8018cbc:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 8018cc0:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 8018cc4:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 8018cc8:	70697263 	rsbvc	r7, r9, r3, ror #4
 8018ccc:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 8018cd0:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8018cd4:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 8018cd8:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 8018cdc:	643b2928 	ldrtvs	r2, [fp], #-2344	@ 0xfffff6d8
 8018ce0:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 8018ce4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018ce8:	3c3b2928 			@ <UNDEFINED> instruction: 0x3c3b2928
 8018cec:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 8018cf0:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8018cf4:	622f3c0a 	eorvs	r3, pc, #2560	@ 0xa00
 8018cf8:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018cfc:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 8018d00:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018d04:	 	cmnvc	r1, #10

08018d06 <time_js>:
 8018d06:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018d0a:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8018d0e:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018d12:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 8018d16:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8018d1a:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8018d1e:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 8018d22:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 8018d26:	20617461 	rsbcs	r7, r1, r1, ror #8
 8018d2a:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 8018d2e:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018d32:	4a746567 	bmi	9d322d6 <__init_array_end+0x1d17962>
 8018d36:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 8018d3a:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 8018d3e:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 8018d42:	0a292765 	beq	8a62ade <__init_array_end+0xa4816a>
 8018d46:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018d4a:	6f6e2074 	svcvs	0x006e2074
 8018d4e:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 8018d52:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8018d56:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 8018d5a:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8018d5e:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8018d62:	2077656e 	rsbscs	r6, r7, lr, ror #10
 8018d66:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 8018d6a:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018d6e:	61642e61 	cmnvs	r4, r1, ror #28
 8018d72:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
 8018d76:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 8018d7a:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8018d7e:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8018d82:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8018d86:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8018d8a:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8018d8e:	6f6e2728 	svcvs	0x006e2728
 8018d92:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
 8018d96:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 8018d9a:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
 8018d9e:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
 8018da2:	746e6574 	strbtvc	r6, [lr], #-1396	@ 0xfffffa8c
 8018da6:	60203d20 	eorvs	r3, r0, r0, lsr #26
 8018daa:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 8018dae:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 8018db2:	24203a65 	strtcs	r3, [r0], #-2661	@ 0xfffff59b
 8018db6:	646f6e7b 	strbtvs	r6, [pc], #-3707	@ 8018dbe <time_js+0xb8>
 8018dba:	0a607d65 	beq	9838356 <__init_array_end+0x181d9e2>
 8018dbe:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 8018dc2:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8018dc6:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018dca:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018dce:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
 8018dd2:	74695763 	strbtvc	r5, [r9], #-1891	@ 0xfffff89d
 8018dd6:	636f4c68 	cmnvs	pc, #104, 24	@ 0x6800
 8018dda:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
 8018dde:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 8018de2:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8018de6:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8018dea:	646f6e20 	strbtvs	r6, [pc], #-3616	@ 8018df2 <time_js+0xec>
 8018dee:	203d2065 	eorscs	r2, sp, r5, rrx
 8018df2:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 8018df6:	61447461 	cmpvs	r4, r1, ror #8
 8018dfa:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
 8018dfe:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
 8018e02:	44207765 	strtmi	r7, [r0], #-1893	@ 0xfffff89b
 8018e06:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 8018e0a:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 8018e0e:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8018e12:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8018e16:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8018e1a:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8018e1e:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8018e22:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 8018e26:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 8018e2a:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 8018e2e:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 8018e32:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 8018e36:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8018e3a:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 8018e3e:	6f4e6020 	svcvs	0x004e6020
 8018e42:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 8018e46:	3a656d69 	bcc	99743f2 <__init_array_end+0x1959a7e>
 8018e4a:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 8018e4e:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 8018e52:	6f630a60 	svcvs	0x00630a60
 8018e56:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8018e5a:	61746164 	cmnvs	r4, r4, ror #2
 8018e5e:	7b203d20 	blvc	88282e6 <__init_array_end+0x80d972>
 8018e62:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8018e66:	6e203a65 	vnmulvs.f32	s6, s0, s11
 8018e6a:	2065646f 	rsbcs	r6, r5, pc, ror #8
 8018e6e:	77610a7d 			@ <UNDEFINED> instruction: 0x77610a7d
 8018e72:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018e76:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 8018e7a:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018e7e:	720a2961 	andvc	r2, sl, #1589248	@ 0x184000
 8018e82:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 8018e86:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 8018e8a:	 	strvs	r7, [r0], -sl, lsl #26

08018e8d <default_js>:
 8018e8d:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018e91:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018e95:	73657220 	cmnvc	r5, #32, 4
 8018e99:	73287465 			@ <UNDEFINED> instruction: 0x73287465
 8018e9d:	20296c65 	eorcs	r6, r9, r5, ror #24
 8018ea1:	61760a7b 	cmnvs	r6, fp, ror sl
 8018ea5:	20642072 	rsbcs	r2, r4, r2, ror r0
 8018ea9:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	@ 0xffffff0c
 8018ead:	61760a3b 	cmnvs	r6, fp, lsr sl
 8018eb1:	756f2072 	strbvc	r2, [pc, #-114]!	@ 8018e47 <time_js+0x141>
 8018eb5:	203d2074 	eorscs	r2, sp, r4, ror r0
 8018eb9:	0a3b7d7b 	beq	8ef84ad <__init_array_end+0xeddb39>
 8018ebd:	5b74756f 	blpl	9d36481 <__init_array_end+0x1d1bb0d>
 8018ec1:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 8018ec5:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 8018ec9:	61760a3b 	cmnvs	r6, fp, lsr sl
 8018ecd:	61702072 	cmnvs	r0, r2, ror r0
 8018ed1:	616f6c79 	smcvs	63177	@ 0xf6c9
 8018ed5:	203d2064 	eorscs	r2, sp, r4, rrx
 8018ed9:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8018edd:	7274732e 	rsbsvc	r7, r4, #-1207959552	@ 0xb8000000
 8018ee1:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 8018ee5:	6f287966 	svcvs	0x00287966
 8018ee9:	3b297475 	blcc	8a760c5 <__init_array_end+0xa5b751>
 8018eed:	7465660a 	strbtvc	r6, [r5], #-1546	@ 0xfffff9f6
 8018ef1:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8018ef5:	6f736a2f 	svcvs	0x00736a2f
 8018ef9:	202c276e 	eorcs	r2, ip, lr, ror #14
 8018efd:	656d0a7b 	strbvs	r0, [sp, #-2683]!	@ 0xfffff585
 8018f01:	646f6874 	strbtvs	r6, [pc], #-2164	@ 8018f09 <default_js+0x7c>
 8018f05:	5027203a 	eorpl	r2, r7, sl, lsr r0
 8018f09:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
 8018f0d:	65680a2c 	strbvs	r0, [r8, #-2604]!	@ 0xfffff5d4
 8018f11:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 8018f15:	7b203a73 	blvc	88278e9 <__init_array_end+0x80cf75>
 8018f19:	6f43270a 	svcvs	0x0043270a
 8018f1d:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8018f21:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8018f25:	3a276570 	bcc	89f24ed <__init_array_end+0x9d7b79>
 8018f29:	70612720 	rsbvc	r2, r1, r0, lsr #14
 8018f2d:	63696c70 	cmnvs	r9, #112, 24	@ 0x7000
 8018f31:	6f697461 	svcvs	0x00697461
 8018f35:	736a2f6e 	cmnvc	sl, #440	@ 0x1b8
 8018f39:	0a276e6f 	beq	89f48fd <__init_array_end+0x9d9f89>
 8018f3d:	620a2c7d 	andvs	r2, sl, #32000	@ 0x7d00
 8018f41:	3a79646f 	bcc	9e72105 <__init_array_end+0x1e57791>
 8018f45:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
 8018f49:	64616f6c 	strbtvs	r6, [r1], #-3948	@ 0xfffff094
 8018f4d:	20297d0a 	eorcs	r7, r9, sl, lsl #26
 8018f51:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 8018f55:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 8018f59:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8018f5d:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	@ 0xfffffe34
 8018f61:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
 8018f65:	72282066 	eorvc	r2, r8, #102	@ 0x66
 8018f69:	6f707365 	svcvs	0x00707365
 8018f6d:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
 8018f71:	20296b6f 	eorcs	r6, r9, pc, ror #22
 8018f75:	6567207b 	strbvs	r2, [r7, #-123]!	@ 0xffffff85
 8018f79:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018f7d:	65732874 	ldrbvs	r2, [r3, #-2164]!	@ 0xfffff78c
 8018f81:	203b296c 	eorscs	r2, fp, ip, ror #18
 8018f85:	3b297d7d 	blcc	8a78581 <__init_array_end+0xa5dc0d>
 8018f89:	 	strvs	r7, [r0], -sl, lsl #26

08018f8c <date_js>:
 8018f8c:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8018f90:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8018f94:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 8018f98:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 8018f9c:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 8018fa0:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 8018fa4:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8018fa8:	0a7b2029 	beq	9ee1054 <__init_array_end+0x1ec66e0>
 8018fac:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8018fb0:	65792074 	ldrbvs	r2, [r9, #-116]!	@ 0xffffff8c
 8018fb4:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	@ 0xfffffe7c
 8018fb8:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8018fbc:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8018fc0:	6c754674 	ldclvs	6, cr4, [r5], #-464	@ 0xfffffe30
 8018fc4:	6165596c 	cmnvs	r5, ip, ror #18
 8018fc8:	3b292872 	blcc	8a63198 <__init_array_end+0xa48824>
 8018fcc:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8018fd0:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	@ 0xfffffe34
 8018fd4:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	@ 0xfffffe44
 8018fd8:	30272820 	eorcc	r2, r7, r0, lsr #16
 8018fdc:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018fe0:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 8018fe4:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 8018fe8:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
 8018fec:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
 8018ff0:	31202b20 			@ <UNDEFINED> instruction: 0x31202b20
 8018ff4:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 8018ff8:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8018ffc:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 8019000:	6f630a3b 	svcvs	0x00630a3b
 8019004:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8019008:	20796164 	rsbscs	r6, r9, r4, ror #2
 801900c:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8019010:	2b202730 	blcs	8822cd8 <__init_array_end+0x808364>
 8019014:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 8019018:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801901c:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 8019020:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
 8019024:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8019028:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801902c:	0a3b2932 	beq	8ee34fc <__init_array_end+0xec8b88>
 8019030:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8019034:	6f682074 	svcvs	0x00682074
 8019038:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	@ 0xfffffe2c
 801903c:	30272820 	eorcc	r2, r7, r0, lsr #16
 8019040:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8019044:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 8019048:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801904c:	72756f48 	rsbsvc	r6, r5, #72, 30	@ 0x120
 8019050:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
 8019054:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 8019058:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801905c:	0a3b2932 	beq	8ee352c <__init_array_end+0xec8bb8>
 8019060:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 8019064:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
 8019068:	203d206e 	eorscs	r2, sp, lr, rrx
 801906c:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
 8019070:	64202b20 	strtvs	r2, [r0], #-2848	@ 0xfffff4e0
 8019074:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 8019078:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	@ 0xfffffe64
 801907c:	74756e69 	ldrbtvc	r6, [r5], #-3689	@ 0xfffff197
 8019080:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 8019084:	6c732e29 	ldclvs	14, cr2, [r3], #-164	@ 0xffffff5c
 8019088:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 801908c:	3b29322d 	blcc	8a65948 <__init_array_end+0xa4afd4>
 8019090:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8019094:	73207473 			@ <UNDEFINED> instruction: 0x73207473
 8019098:	3d206365 	stccc	3, cr6, [r0, #-404]!	@ 0xfffffe6c
 801909c:	30272820 	eorcc	r2, r7, r0, lsr #16
 80190a0:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80190a4:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 80190a8:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 80190ac:	6f636553 	svcvs	0x00636553
 80190b0:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 80190b4:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 80190b8:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 80190bc:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 80190c0:	6f630a3b 	svcvs	0x00630a3b
 80190c4:	2074736e 	rsbscs	r7, r4, lr, ror #6
 80190c8:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 80190cc:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	@ 0xfffffe6c
 80190d0:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 80190d4:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 80190d8:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	@ 0xfffffe30
 80190dc:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
 80190e0:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
 80190e4:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80190e8:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 80190ec:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 80190f0:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 80190f4:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80190f8:	2072756f 	rsbscs	r7, r2, pc, ror #10
 80190fc:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 8019100:	2b202730 	blcs	8822dc8 <__init_array_end+0x808454>
 8019104:	74614d20 	strbtvc	r4, [r1], #-3360	@ 0xfffff2e0
 8019108:	6c662e68 	stclvs	14, cr2, [r6], #-416	@ 0xfffffe60
 801910c:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019110:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 8019114:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 8019118:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801911c:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8019120:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
 8019124:	2e292930 			@ <UNDEFINED> instruction: 0x2e292930
 8019128:	63696c73 	cmnvs	r9, #29440	@ 0x7300
 801912c:	322d2865 	eorcc	r2, sp, #6619136	@ 0x650000
 8019130:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 8019134:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 8019138:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801913c:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	@ 0xfffffe34
 8019140:	3d206e69 	stccc	14, cr6, [r0, #-420]!	@ 0xfffffe5c
 8019144:	30272820 	eorcc	r2, r7, r0, lsr #16
 8019148:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801914c:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 8019150:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 8019154:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 8019158:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801915c:	36202520 	strtcc	r2, [r0], -r0, lsr #10
 8019160:	732e2930 			@ <UNDEFINED> instruction: 0x732e2930
 8019164:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 8019168:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801916c:	6f630a3b 	svcvs	0x00630a3b
 8019170:	2074736e 	rsbscs	r7, r4, lr, ror #6
 8019174:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
 8019178:	6f203d20 	svcvs	0x00203d20
 801917c:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 8019180:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	@ 0xfffffe30
 8019184:	3f203020 	svccc	0x00203020
 8019188:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
 801918c:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
 8019190:	0a3b272d 	beq	8ee2e4c <__init_array_end+0xec84d8>
 8019194:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 8019198:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801919c:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80191a0:	2072756f 	rsbscs	r7, r2, pc, ror #10
 80191a4:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 80191a8:	26262029 	strtcs	r2, [r6], -r9, lsr #32
 80191ac:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
 80191b0:	74657366 	strbtvc	r7, [r5], #-870	@ 0xfffffc9a
 80191b4:	206e694d 	rsbcs	r6, lr, sp, asr #18
 80191b8:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 80191bc:	7b202929 	blvc	8823668 <__init_array_end+0x808cf4>
 80191c0:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 80191c4:	206e7275 	rsbcs	r7, lr, r5, ror r2
 80191c8:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 80191cc:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 80191d0:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 80191d4:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 80191d8:	61647b24 	cmnvs	r4, r4, lsr #22
 80191dc:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 80191e0:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 801896d <time_html+0x15d>
 80191e4:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 80191e8:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 80191ec:	7b243a7d 	blvc	8927be8 <__init_array_end+0x90d274>
 80191f0:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 80191f4:	203b605a 	eorscs	r6, fp, sl, asr r0
 80191f8:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
 80191fc:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8019200:	206e7275 	rsbcs	r7, lr, r5, ror r2
 8019204:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 8019208:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 801920c:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 8019210:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 8019214:	61647b24 	cmnvs	r4, r4, lsr #22
 8019218:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 801921c:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 80189a9 <time_html+0x199>
 8019220:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 8019224:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 8019228:	7b243a7d 	blvc	8927c24 <__init_array_end+0x90d2b0>
 801922c:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 8019230:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
 8019234:	247d6e67 	ldrbtcs	r6, [sp], #-3687	@ 0xfffff199
 8019238:	66666f7b 	uqsub16vs	r6, r6, fp
 801923c:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 8019240:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	@ 0xfffffe44
 8019244:	6f7b243a 	svcvs	0x007b243a
 8019248:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 801924c:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
 8019250:	203b607d 	eorscs	r6, fp, sp, ror r0
 8019254:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	@ 0xffffff80
	...

08019259 <index_js>:
 8019259:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801925d:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8019261:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019265:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 8019269:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 801926d:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019271:	7b202928 	blvc	8823719 <__init_array_end+0x808da5>
 8019275:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 8019279:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801927d:	61776120 	cmnvs	r7, r0, lsr #2
 8019281:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019285:	534a7465 	movtpl	r7, #42085	@ 0xa465
 8019289:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801928d:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 8019291:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 8019295:	0a292779 	beq	8a63081 <__init_array_end+0xa4870d>
 8019299:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801929d:	203d2068 	eorscs	r2, sp, r8, rrx
 80192a1:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	@ 0x22
 80192a5:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80192a9:	4f203d20 	svcmi	0x00203d20
 80192ad:	63656a62 	cmnvs	r5, #401408	@ 0x62000
 80192b1:	656b2e74 	strbvs	r2, [fp, #-3700]!	@ 0xfffff18c
 80192b5:	64287379 	strtvs	r7, [r8], #-889	@ 0xfffffc87
 80192b9:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
 80192bd:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 80192c1:	660a295d 			@ <UNDEFINED> instruction: 0x660a295d
 80192c5:	726f662e 	rsbvc	r6, pc, #48234496	@ 0x2e00000
 80192c9:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
 80192cd:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
 80192d1:	6f697463 	svcvs	0x00697463
 80192d5:	656b286e 	strbvs	r2, [fp, #-2158]!	@ 0xfffff792
 80192d9:	7b202979 	blvc	88238c5 <__init_array_end+0x808f51>
 80192dd:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 80192e1:	3d207620 	stccc	6, cr7, [r0, #-128]!	@ 0xffffff80
 80192e5:	225b6420 	subscs	r6, fp, #32, 8	@ 0x20000000
 80192e9:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 80192ed:	5b5d2273 	blpl	9761cc1 <__init_array_end+0x174734d>
 80192f1:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	@ 0xfffffe54
 80192f5:	2b20680a 	blcs	8833325 <__init_array_end+0x8189b1>
 80192f9:	3c22203d 	stccc	0, cr2, [r2], #-244	@ 0xffffff0c
 80192fd:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 8019301:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
 8019305:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 8019309:	6b2b223d 	blvs	8ae1c05 <__init_array_end+0xac7291>
 801930d:	222b7965 	eorcs	r7, fp, #1654784	@ 0x194000
 8019311:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 8019315:	2f3c222b 	svccs	0x003c222b
 8019319:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 801931d:	223e6e6f 	eorscs	r6, lr, #1776	@ 0x6f0
 8019321:	3b297d0a 	blcc	8a78751 <__init_array_end+0xa5dddd>
 8019325:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 8019329:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801932d:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 8019331:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8019335:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8019339:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801933d:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 8019341:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 8019345:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 8019349:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
 801934d:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8019351:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 8019355:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019359:	65670a68 	strbvs	r0, [r7, #-2664]!	@ 0xfffff598
 801935d:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8019361:	5b662874 	blpl	99a3539 <__init_array_end+0x1988bc5>
 8019365:	0a295d30 	beq	8a7082d <__init_array_end+0xa55eb9>
 8019369:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 801936d:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8019371:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8019375:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019379:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 801937d:	7478745f 	ldrbtvc	r7, [r8], #-1119	@ 0xfffffba1
 8019381:	6c657328 	stclvs	3, cr7, [r5], #-160	@ 0xffffff60
 8019385:	0a7b2029 	beq	9ee1431 <__init_array_end+0x1ec6abd>
 8019389:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801938d:	20747874 	rsbscs	r7, r4, r4, ror r8
 8019391:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 8019395:	20746961 	rsbscs	r6, r4, r1, ror #18
 8019399:	4a746567 	bmi	9d3293d <__init_array_end+0x1d17fc9>
 801939d:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 80193a1:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 80193a5:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 80193a9:	3d206820 	stccc	8, cr6, [r0, #-128]!	@ 0xffffff80
 80193ad:	0a222220 	beq	88a1c35 <__init_array_end+0x8872c1>
 80193b1:	656a624f 	strbvs	r6, [sl, #-591]!	@ 0xfffffdb1
 80193b5:	6b2e7463 	blvs	8bb6549 <__init_array_end+0xb9bbd5>
 80193b9:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
 80193bd:	5b747874 	blpl	9d37595 <__init_array_end+0x1d1cc21>
 80193c1:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 80193c5:	6f662e29 	svcvs	0x00662e29
 80193c9:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 80193cd:	75662868 	strbvc	r2, [r6, #-2152]!	@ 0xfffff798
 80193d1:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80193d5:	6b286e6f 	blvs	8a34d99 <__init_array_end+0xa1a425>
 80193d9:	20297965 	eorcs	r7, r9, r5, ror #18
 80193dd:	61760a7b 	cmnvs	r6, fp, ror sl
 80193e1:	20762072 	rsbscs	r2, r6, r2, ror r0
 80193e5:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80193e9:	65735b74 	ldrbvs	r5, [r3, #-2932]!	@ 0xfffff48c
 80193ed:	6b5b5d6c 	blvs	96f09a5 <__init_array_end+0x16d6031>
 80193f1:	0a5d7965 	beq	977798d <__init_array_end+0x175d019>
 80193f5:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 80193f9:	743c2220 	ldrtvc	r2, [ip], #-544	@ 0xfffffde0
 80193fd:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 8019401:	2b223e64 	blcs	88a8d99 <__init_array_end+0x88e425>
 8019405:	2b79656b 	blcs	9e729b9 <__init_array_end+0x1e58045>
 8019409:	742f3c27 	strtvc	r3, [pc], #-3111	@ 8019411 <index_js+0x1b8>
 801940d:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 8019411:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
 8019415:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 8019419:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801941d:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 8019421:	22747865 	rsbscs	r7, r4, #6619136	@ 0x650000
 8019425:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 8019429:	223d6575 	eorscs	r6, sp, #490733568	@ 0x1d400000
 801942d:	2b762b27 	blcs	9da40d1 <__init_array_end+0x1d8975d>
 8019431:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
 8019435:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
 8019439:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801943d:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
 8019441:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 8019445:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801944d <index_js+0x1f4>
 8019449:	0a273e72 	beq	89e8e19 <__init_array_end+0x9ce4a5>
 801944d:	0a3b297d 	beq	8ee3a49 <__init_array_end+0xec90d5>
 8019451:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 8019455:	743c2720 	ldrtvc	r2, [ip], #-1824	@ 0xfffff8e0
 8019459:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801945d:	6f632064 	svcvs	0x00632064
 8019461:	6170736c 	cmnvs	r0, ip, ror #6
 8019465:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 8019469:	623c3e22 	eorsvs	r3, ip, #544	@ 0x220
 801946d:	6f747475 	svcvs	0x00747475
 8019471:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
 8019475:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 8019479:	73223d6b 			@ <UNDEFINED> instruction: 0x73223d6b
 801947d:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
 8019481:	2b27275c 	blcs	89e31f9 <__init_array_end+0x9c8885>
 8019485:	2b6c6573 	blcs	9b32a59 <__init_array_end+0x1b180e5>
 8019489:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
 801948d:	61533e22 	cmpvs	r3, r2, lsr #28
 8019491:	2f3c6576 	svccs	0x003c6576
 8019495:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 8019499:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
 801949d:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
 80194a1:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
 80194a5:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 80194a9:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 80194ad:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 80194b1:	62223d73 	eorvs	r3, r2, #7360	@ 0x1cc0
 80194b5:	20226e74 	eorcs	r6, r2, r4, ror lr
 80194b9:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 80194bd:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 80194c1:	73657222 	cmnvc	r5, #536870914	@ 0x20000002
 80194c5:	5c287465 	cfstrspl	mvf7, [r8], #-404	@ 0xfffffe6c
 80194c9:	732b2727 			@ <UNDEFINED> instruction: 0x732b2727
 80194cd:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
 80194d1:	2229275c 	eorcs	r2, r9, #92, 14	@ 0x1700000
 80194d5:	6665443e 			@ <UNDEFINED> instruction: 0x6665443e
 80194d9:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 80194dd:	622f3c73 	eorvs	r3, pc, #29440	@ 0x7300
 80194e1:	6f747475 	svcvs	0x00747475
 80194e5:	2f3c3e6e 	svccs	0x003c3e6e
 80194e9:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 80194ed:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 80194f1:	640a3b27 	strvs	r3, [sl], #-2855	@ 0xfffff4d9
 80194f5:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 80194f9:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80194fd:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019501:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019505:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019509:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801950d:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8019511:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8019515:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8019519:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801951d:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019521:	0a7d0a68 	beq	9f5bec9 <__init_array_end+0x1f41555>
 8019525:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 8019529:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801952d:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
 8019531:	65732865 	ldrbvs	r2, [r3, #-2149]!	@ 0xfffff79b
 8019535:	7b20296c 	blvc	8823aed <__init_array_end+0x809179>
 8019539:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 801953d:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 8019541:	0a7d7b20 	beq	9f781c9 <__init_array_end+0x1f5d855>
 8019545:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019549:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801954d:	3d207374 	stccc	3, cr7, [r0, #-464]!	@ 0xfffffe30
 8019551:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 8019555:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8019559:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801955d:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8019561:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 8019565:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 8019569:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801956d:	22747854 	rsbscs	r7, r4, #84, 16	@ 0x540000
 8019571:	65672e29 	strbvs	r2, [r7, #-3625]!	@ 0xfffff1d7
 8019575:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 8019579:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801957d:	54794273 	ldrbtpl	r4, [r9], #-627	@ 0xfffffd8d
 8019581:	614e6761 	cmpvs	lr, r1, ror #14
 8019585:	2228656d 	eorcs	r6, r8, #457179136	@ 0x1b400000
 8019589:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801958d:	0a292274 	beq	8a61f65 <__init_array_end+0xa475f1>
 8019591:	20726f66 	rsbscs	r6, r2, r6, ror #30
 8019595:	72617628 	rsbvc	r7, r1, #40, 12	@ 0x2800000
 8019599:	3d206920 			@ <UNDEFINED> instruction: 0x3d206920
 801959d:	203b3020 	eorscs	r3, fp, r0, lsr #32
 80195a1:	203c2069 	eorscs	r2, ip, r9, rrx
 80195a5:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 80195a9:	6c2e7374 	stcvs	3, cr7, [lr], #-464	@ 0xfffffe30
 80195ad:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 80195b1:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
 80195b5:	20292b2b 	eorcs	r2, r9, fp, lsr #22
 80195b9:	61760a7b 	cmnvs	r6, fp, ror sl
 80195bd:	206b2072 	rsbcs	r2, fp, r2, ror r0
 80195c1:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
 80195c5:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 80195c9:	2e5d695b 			@ <UNDEFINED> instruction: 0x2e5d695b
 80195cd:	760a6469 	strvc	r6, [sl], -r9, ror #8
 80195d1:	76207261 	strtvc	r7, [r0], -r1, ror #4
 80195d5:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
 80195d9:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 80195dd:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	@ Deprecated
 80195e1:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 80195e5:	640a6575 	strvs	r6, [sl], #-1397	@ 0xfffffa8b
 80195e9:	205d6b5b 	subscs	r6, sp, fp, asr fp
 80195ed:	0a76203d 	beq	9da16e9 <__init_array_end+0x1d86d75>
 80195f1:	61760a7d 	cmnvs	r6, sp, ror sl
 80195f5:	756f2072 	strbvc	r2, [pc, #-114]!	@ 801958b <index_js+0x332>
 80195f9:	203d2074 	eorscs	r2, sp, r4, ror r0
 80195fd:	6f0a7d7b 	svcvs	0x000a7d7b
 8019601:	735b7475 	cmpvc	fp, #1962934272	@ 0x75000000
 8019605:	205d6c65 	subscs	r6, sp, r5, ror #24
 8019609:	0a64203d 	beq	9921705 <__init_array_end+0x1906d91>
 801960d:	20726176 	rsbscs	r6, r2, r6, ror r1
 8019611:	6c796170 	ldfvse	f6, [r9], #-448	@ 0xfffffe40
 8019615:	2064616f 	rsbcs	r6, r4, pc, ror #2
 8019619:	534a203d 	movtpl	r2, #41021	@ 0xa03d
 801961d:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 8019621:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 8019625:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 8019629:	74756f28 	ldrbtvc	r6, [r5], #-3880	@ 0xfffff0d8
 801962d:	65660a29 	strbvs	r0, [r6, #-2601]!	@ 0xfffff5d7
 8019631:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
 8019635:	736a2f27 	cmnvc	sl, #39, 30	@ 0x9c
 8019639:	2c276e6f 	stccs	14, cr6, [r7], #-444	@ 0xfffffe44
 801963d:	6d0a7b20 	vstrvs	d7, [sl, #-128]	@ 0xffffff80
 8019641:	6f687465 	svcvs	0x00687465
 8019645:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
 8019649:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 801964d:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 8019651:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 8019655:	203a7372 	eorscs	r7, sl, r2, ror r3
 8019659:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 801965d:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8019661:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 8019665:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 8019669:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 801966d:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8019671:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8019675:	6a2f6e6f 	bvs	8bf5039 <__init_array_end+0xbda6c5>
 8019679:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 801967d:	0a2c7d0a 	beq	8b38aad <__init_array_end+0xb1e139>
 8019681:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019685:	6170203a 	cmnvs	r0, sl, lsr r0
 8019689:	616f6c79 	smcvs	63177	@ 0xf6c9
 801968d:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
 8019691:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
 8019695:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 8019699:	6f707365 	svcvs	0x00707365
 801969d:	2065736e 	rsbcs	r7, r5, lr, ror #6
 80196a1:	7b203e3d 	blvc	8828f9d <__init_array_end+0x80e629>
 80196a5:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 80196a9:	70736572 	rsbsvc	r6, r3, r2, ror r5
 80196ad:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 80196b1:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 80196b5:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
 80196b9:	745f7465 	ldrbvc	r7, [pc], #-1125	@ 80196c1 <index_js+0x468>
 80196bd:	73287478 			@ <UNDEFINED> instruction: 0x73287478
 80196c1:	3b296c65 	blcc	8a7485d <__init_array_end+0xa59ee9>
 80196c5:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
 80196c9:	0a7d0a3b 	beq	9f5bfbd <__init_array_end+0x1f41649>
	...

080196ce <styles_css>:
 80196ce:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80196d2:	620a7b20 	andvs	r7, sl, #32, 22	@ 0x8000
 80196d6:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
 80196da:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
 80196de:	6f632d64 	svcvs	0x00632d64
 80196e2:	3a726f6c 	bcc	9cb549a <__init_array_end+0x1c9ab26>
 80196e6:	62677220 	rsbvs	r7, r7, #32, 4
 80196ea:	2c303228 	lfmcs	f3, 4, [r0], #-160	@ 0xffffff60
 80196ee:	322c3032 	eorcc	r3, ip, #50	@ 0x32
 80196f2:	0a3b2930 	beq	8ee3bba <__init_array_end+0xec9246>
 80196f6:	6f6c6f63 	svcvs	0x006c6f63
 80196fa:	72203a72 	eorvc	r3, r0, #466944	@ 0x72000
 80196fe:	32286267 	eorcc	r6, r8, #1879048198	@ 0x70000006
 8019702:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8019706:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	@ 0xffffff38
 801970a:	35353220 	ldrcc	r3, [r5, #-544]!	@ 0xfffffde0
 801970e:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 8019712:	206c750a 	rsbcs	r7, ip, sl, lsl #10
 8019716:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801971a:	616c7073 	smcvs	50947	@ 0xc703
 801971e:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 8019722:	3b78656c 	blcc	9e32cda <__init_array_end+0x1e18366>
 8019726:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
 801972a:	0a7b2069 	beq	9ee18d6 <__init_array_end+0x1ec6f62>
 801972e:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 8019732:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
 8019736:	203a656c 	eorscs	r6, sl, ip, ror #10
 801973a:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
 801973e:	616d0a3b 	cmnvs	sp, fp, lsr sl
 8019742:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8019746:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 801974a:	70352078 	eorsvc	r2, r5, r8, ror r0
 801974e:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 8019752:	6165680a 	cmnvs	r5, sl, lsl #16
 8019756:	20726564 	rsbscs	r6, r2, r4, ror #10
 801975a:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801975e:	616c7073 	smcvs	50947	@ 0xc703
 8019762:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 8019766:	3b78656c 	blcc	9e32d1e <__init_array_end+0x1e183aa>
 801976a:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801976e:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	@ 0xfffffe70
 8019772:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8019776:	203a7375 	eorscs	r7, sl, r5, ror r3
 801977a:	3b787034 	blcc	9e35852 <__init_array_end+0x1e1aede>
 801977e:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 8019782:	3a726564 	bcc	9cb2d1a <__init_array_end+0x1c983a6>
 8019786:	6c6f7320 	stclvs	3, cr7, [pc], #-128	@ 801970c <styles_css+0x3e>
 801978a:	67206469 	strvs	r6, [r0, -r9, ror #8]!
 801978e:	20796572 	rsbscs	r6, r9, r2, ror r5
 8019792:	3b787031 	blcc	9e3585e <__init_array_end+0x1e1aeea>
 8019796:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 801979a:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 801979e:	0a7b2072 	beq	9ee196e <__init_array_end+0x1ec6ffa>
 80197a2:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80197a6:	3a79616c 	bcc	9e71d5e <__init_array_end+0x1e573ea>
 80197aa:	656c6620 	strbvs	r6, [ip, #-1568]!	@ 0xfffff9e0
 80197ae:	6a0a3b78 	bvs	82a8596 <__init_array_end+0x28dc22>
 80197b2:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80197b6:	632d7966 			@ <UNDEFINED> instruction: 0x632d7966
 80197ba:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 80197be:	203a746e 	eorscs	r7, sl, lr, ror #8
 80197c2:	746e6563 	strbtvc	r6, [lr], #-1379	@ 0xfffffa9d
 80197c6:	0a3b7265 	beq	8ef6162 <__init_array_end+0xedb7ee>
 80197ca:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 80197ce:	722d7265 	eorvc	r7, sp, #1342177286	@ 0x50000006
 80197d2:	75696461 	strbvc	r6, [r9, #-1121]!	@ 0xfffffb9f
 80197d6:	34203a73 	strtcc	r3, [r0], #-2675	@ 0xfffff58d
 80197da:	0a3b7870 	beq	8ef79a2 <__init_array_end+0xedd02e>
 80197de:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 80197e2:	203a7265 	eorscs	r7, sl, r5, ror #4
 80197e6:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80197ea:	72672064 	rsbvc	r2, r7, #100	@ 0x64
 80197ee:	31207965 			@ <UNDEFINED> instruction: 0x31207965
 80197f2:	0a3b7870 	beq	8ef79ba <__init_array_end+0xedd046>
 80197f6:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 80197fa:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 80197fe:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8019802:	6f737275 	svcvs	0x00737275
 8019806:	70203a72 	eorvc	r3, r0, r2, ror sl
 801980a:	746e696f 	strbtvc	r6, [lr], #-2415	@ 0xfffff691
 801980e:	0a3b7265 	beq	8ef61aa <__init_array_end+0xedb836>
 8019812:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 8019816:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801981a:	7463613a 	strbtvc	r6, [r3], #-314	@ 0xfffffec6
 801981e:	20657669 	rsbcs	r7, r5, r9, ror #12
 8019822:	61620a7b 	smcvs	8363	@ 0x20ab
 8019826:	72676b63 	rsbvc	r6, r7, #101376	@ 0x18c00
 801982a:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 801982e:	6c6f632d 	stclvs	3, cr6, [pc], #-180	@ 8019780 <styles_css+0xb2>
 8019832:	203a726f 	eorscs	r7, sl, pc, ror #4
 8019836:	30303023 	eorscc	r3, r0, r3, lsr #32
 801983a:	6f630a3b 	svcvs	0x00630a3b
 801983e:	3a726f6c 	bcc	9cb55f6 <__init_array_end+0x1c9ac82>
 8019842:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
 8019846:	7d0a3b66 	vstrvc	d3, [sl, #-408]	@ 0xfffffe68
 801984a:	74622e0a 	strbtvc	r2, [r2], #-3594	@ 0xfffff1f6
 801984e:	0a7b206e 	beq	9ee1a0e <__init_array_end+0x1ec709a>
 8019852:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
 8019856:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	@ 0xfffffe5c
 801985a:	3a746665 	bcc	9d331f6 <__init_array_end+0x1d18882>
 801985e:	70303520 	eorsvc	r3, r0, r0, lsr #10
 8019862:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 8019866:	 	cmnvc	r1, #10

08019868 <static_js>:
 8019868:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801986c:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 8019870:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019874:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8019878:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801987c:	6a284e4f 	bvs	8a2d1c0 <__init_array_end+0xa1284c>
 8019880:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019884:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 8019888:	7b207972 	blvc	8837e58 <__init_array_end+0x81d4e4>
 801988c:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 8019890:	72207473 	eorvc	r7, r0, #1929379840	@ 0x73000000
 8019894:	61203d20 			@ <UNDEFINED> instruction: 0x61203d20
 8019898:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 801989c:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 80198a0:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 80198a4:	6f736a2f 	svcvs	0x00736a2f
 80198a8:	2b272f6e 	blcs	89e5668 <__init_array_end+0x9cacf4>
 80198ac:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80198b0:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
 80198b4:	72212820 	eorvc	r2, r1, #32, 16	@ 0x200000
 80198b8:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 80198bc:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 80198c0:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
 80198c4:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
 80198c8:	72724520 	rsbsvc	r4, r2, #32, 10	@ 0x8000000
 80198cc:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
 80198d0:	6f727245 	svcvs	0x00727245
 80198d4:	0a292772 	beq	8a636a4 <__init_array_end+0xa48d30>
 80198d8:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	@ 0xfffff583
 80198dc:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 80198e0:	6a2e7220 	bvs	8bb6168 <__init_array_end+0xb9b7f4>
 80198e4:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80198e8:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
 80198ec:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 80198f0:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 80198f4:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 80198f8:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	@ 0xffffff5c
 80198fc:	610a7d0a 	tstvs	sl, sl, lsl #26
 8019900:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 8019904:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 8019908:	6f697463 	svcvs	0x00697463
 801990c:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
 8019910:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8019914:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 8019918:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801991c:	3d206c20 	stccc	12, cr6, [r0, #-128]!	@ 0xffffff80
 8019920:	61776120 	cmnvs	r7, r0, lsr #2
 8019924:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8019928:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801992c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8019930:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 8019934:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 8019938:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801993c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019940:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019944:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019948:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801994c:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 8019950:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8019954:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8019958:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801995c:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 8019960:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 8019964:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	@ 0xffffff80
 8019968:	2b223e69 	blcs	88a9314 <__init_array_end+0x88e9a0>
 801996c:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 8019970:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8019974:	2b656d61 	blcs	9974f00 <__init_array_end+0x195a58c>
 8019978:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 80198f8 <static_js+0x90>
 801997c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 8019980:	2b223e69 	blcs	88a932c <__init_array_end+0x88e9b8>
 8019984:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 8019988:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801998c:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
 8019990:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 8019994:	2f3c222b 	svccs	0x003c222b
 8019998:	3c3e696c 			@ <UNDEFINED> instruction: 0x3c3e696c
 801999c:	223e696c 	eorscs	r6, lr, #108, 18	@ 0x1b0000
 80199a0:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	@ 0xffffff54
 80199a4:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 80199a8:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 80199ac:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 80199b0:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80199b4:	222b6570 	eorcs	r6, fp, #112, 10	@ 0x1c000000
 80199b8:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80199bc:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	@ 0xffffff08
 80199c0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80199c4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80199c8:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 80199cc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80199d0:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 80199d4:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80199d8:	0a7b2029 	beq	9ee1a84 <__init_array_end+0x1ec7110>
 80199dc:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 80199e0:	20762074 	rsbscs	r2, r6, r4, ror r0
 80199e4:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 80199e8:	20746961 	rsbscs	r6, r4, r1, ror #18
 80199ec:	4a746567 	bmi	9d32f90 <__init_array_end+0x1d1861c>
 80199f0:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 80199f4:	72657627 	rsbvc	r7, r5, #40894464	@ 0x2700000
 80199f8:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 80199fc:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 8019a00:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8019a04:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019a08:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019a0c:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019a10:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019a14:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 8019a18:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 8019a1c:	6f697372 	svcvs	0x00697372
 8019a20:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
 8019a24:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 8019a28:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 8019a2c:	203d204c 	eorscs	r2, sp, ip, asr #32
 8019a30:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8019a34:	2b22563e 	blcs	88af334 <__init_array_end+0x8949c0>
 8019a38:	65762e76 	ldrbvs	r2, [r6, #-3702]!	@ 0xfffff18a
 8019a3c:	6f697372 	svcvs	0x00697372
 8019a40:	3c222b6e 			@ <UNDEFINED> instruction: 0x3c222b6e
 8019a44:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8019a48:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8019a4c:	2e762b22 	vaddcs.f64	d18, d6, d18
 8019a50:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 8019a54:	61642e64 	cmnvs	r4, r4, ror #28
 8019a58:	222b6574 	eorcs	r6, fp, #116, 10	@ 0x1d000000
 8019a5c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8019a60:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8019a64:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 8019a68:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
 8019a6c:	742e646c 	strtvc	r6, [lr], #-1132	@ 0xfffffb94
 8019a70:	2b656d69 	blcs	997501c <__init_array_end+0x195a6a8>
 8019a74:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 80199f4 <static_js+0x18c>
 8019a78:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 8019a7c:	2b223e69 	blcs	88a9428 <__init_array_end+0x88eab4>
 8019a80:	6f622e76 	svcvs	0x00622e76
 8019a84:	2b647261 	blcs	9936410 <__init_array_end+0x191ba9c>
 8019a88:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 8019a08 <static_js+0x1a0>
 8019a8c:	0a223e69 	beq	88a9438 <__init_array_end+0x88eac4>
 8019a90:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 8019a94:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019a98:	70206e6f 	eorvc	r6, r0, pc, ror #28
 8019a9c:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8019aa0:	7b202973 	blvc	8824074 <__init_array_end+0x809700>
 8019aa4:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 8019aa8:	206e7275 	rsbcs	r7, lr, r5, ror r2
 8019aac:	63746566 	cmnvs	r4, #427819008	@ 0x19800000
 8019ab0:	2f272868 	svccs	0x00272868
 8019ab4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8019ab8:	7463612f 	strbtvc	r6, [r3], #-303	@ 0xfffffed1
 8019abc:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8019ac0:	0a7b202c 	beq	9ee1b78 <__init_array_end+0x1ec7204>
 8019ac4:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 8019ac8:	203a646f 	eorscs	r6, sl, pc, ror #8
 8019acc:	534f5027 	movtpl	r5, #61479	@ 0xf027
 8019ad0:	0a2c2754 	beq	8b23828 <__init_array_end+0xb08eb4>
 8019ad4:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 8019ad8:	3a737265 	bcc	9cf6474 <__init_array_end+0x1cdbb00>
 8019adc:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
 8019ae0:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 8019ae4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 8019ae8:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 8019aec:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
 8019af0:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 8019af4:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 8019af8:	2f6e6f69 	svccs	0x006e6f69
 8019afc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8019b00:	2c7d0a27 			@ <UNDEFINED> instruction: 0x2c7d0a27
 8019b04:	646f620a 	strbtvs	r6, [pc], #-522	@ 8019b0c <static_js+0x2a4>
 8019b08:	4a203a79 	bmi	88284f4 <__init_array_end+0x80db80>
 8019b0c:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
 8019b10:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 8019b14:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
 8019b18:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
 8019b1c:	0a297d0a 	beq	8a78f4c <__init_array_end+0xa5e5d8>
 8019b20:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 8019b24:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019b28:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 8019b2c:	74656c65 	strbtvc	r6, [r5], #-3173	@ 0xfffff39b
 8019b30:	20297328 	eorcs	r7, r9, r8, lsr #6
 8019b34:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 8019b38:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8019b3c:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 8019b40:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 8019b44:	6f736a2f 	svcvs	0x00736a2f
 8019b48:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 8019b4c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 8019b50:	7b202c27 	blvc	8824bf4 <__init_array_end+0x80a280>
 8019b54:	74656d0a 	strbtvc	r6, [r5], #-3338	@ 0xfffff2f6
 8019b58:	3a646f68 	bcc	9935900 <__init_array_end+0x191af8c>
 8019b5c:	45442720 	strbmi	r2, [r4, #-1824]	@ 0xfffff8e0
 8019b60:	4554454c 	ldrbmi	r4, [r4, #-1356]	@ 0xfffffab4
 8019b64:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 8019b68:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 8019b6c:	203a7372 	eorscs	r7, sl, r2, ror r3
 8019b70:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 8019b74:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 8019b78:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 8019b7c:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 8019b80:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 8019b84:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8019b88:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8019b8c:	6a2f6e6f 	bvs	8bf5550 <__init_array_end+0xbdabdc>
 8019b90:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 8019b94:	0a2c7d0a 	beq	8b38fc4 <__init_array_end+0xb1e650>
 8019b98:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8019b9c:	534a203a 	movtpl	r2, #41018	@ 0xa03a
 8019ba0:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 8019ba4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 8019ba8:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 8019bac:	0a297328 	beq	8a76854 <__init_array_end+0xa5bee0>
 8019bb0:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	@ 0xffffff06	@ <UNPREDICTABLE>
 8019bb4:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
 8019bb8:	6f697463 	svcvs	0x00697463
 8019bbc:	6572206e 	ldrbvs	r2, [r2, #-110]!	@ 0xffffff92
 8019bc0:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 8019bc8 <static_js+0x360>
 8019bc4:	7b202928 	blvc	882406c <__init_array_end+0x8096f8>
 8019bc8:	736f700a 	cmnvc	pc, #10
 8019bcc:	207b2874 	rsbscs	r2, fp, r4, ror r8
 8019bd0:	6f626572 	svcvs	0x00626572
 8019bd4:	203a746f 	eorscs	r7, sl, pc, ror #8
 8019bd8:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 8019bdc:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 8019be0:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 8019be4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8019be8:	61636f6c 	cmnvs	r3, ip, ror #30
 8019bec:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 8019bf0:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
 8019bf4:	62207261 	eorvs	r7, r0, #268435462	@ 0x10000006
 8019bf8:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 8019bfc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 8019c00:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019c04:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 8019c08:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 8019c0c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019c10:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 8019c14:	61636f6c 	cmnvs	r3, ip, ror #30
 8019c18:	75426574 	strbvc	r6, [r2, #-1396]	@ 0xfffffa8c
 8019c1c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 8019c20:	0a3b2927 	beq	8ee40c4 <__init_array_end+0xec9750>
 8019c24:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 8019c28:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 8019c2c:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 8019c30:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8019c34:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 8019c38:	736e6961 	cmnvc	lr, #1589248	@ 0x184000
 8019c3c:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
 8019c40:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019c44:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8019c48:	0a7b2029 	beq	9ee1cf4 <__init_array_end+0x1ec7380>
 8019c4c:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 8019c50:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 8019c54:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 8019c58:	6f6d6572 	svcvs	0x006d6572
 8019c5c:	27286576 			@ <UNDEFINED> instruction: 0x27286576
 8019c60:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8019c64:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019c68:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019c6c:	616c632e 	cmnvs	ip, lr, lsr #6
 8019c70:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 8019c74:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 8019c78:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 8019c7c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8019c80:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8019c84:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
 8019c88:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 8019c8c:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 8019c90:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
 8019c94:	61636f4c 	cmnvs	r3, ip, asr #30
 8019c98:	4f206574 	svcmi	0x00206574
 8019c9c:	700a276e 	andvc	r2, sl, lr, ror #14
 8019ca0:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 8019ca4:	6469207b 	strbtvs	r2, [r9], #-123	@ 0xffffff85
 8019ca8:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8019cac:	203a7966 	eorscs	r7, sl, r6, ror #18
 8019cb0:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 8019cb4:	65207d0a 	strvs	r7, [r0, #-3338]!	@ 0xfffff2f6
 8019cb8:	2065736c 	rsbcs	r7, r5, ip, ror #6
 8019cbc:	2e620a7b 			@ <UNDEFINED> instruction: 0x2e620a7b
 8019cc0:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 8019cc4:	73694c73 	cmnvc	r9, #29440	@ 0x7300
 8019cc8:	65722e74 	ldrbvs	r2, [r2, #-3700]!	@ 0xfffff18c
 8019ccc:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
 8019cd0:	63612728 	cmnvs	r1, #40, 14	@ 0xa00000
 8019cd4:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019cd8:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019cdc:	616c632e 	cmnvs	ip, lr, lsr #6
 8019ce0:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 8019ce4:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 8019ce8:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 8019cec:	63616e69 	cmnvs	r1, #1680	@ 0x690
 8019cf0:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 8019cf4:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 8019cf8:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 8019cfc:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 8019d00:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 8019d04:	6f4c2720 	svcvs	0x004c2720
 8019d08:	65746163 	ldrbvs	r6, [r4, #-355]!	@ 0xfffffe9d
 8019d0c:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 8019d10:	6f700a27 	svcvs	0x00700a27
 8019d14:	7b287473 	blvc	8a36ee8 <__init_array_end+0xa1c574>
 8019d18:	65646920 	strbvs	r6, [r4, #-2336]!	@ 0xfffff6e0
 8019d1c:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
 8019d20:	30203a79 	eorcc	r3, r0, r9, ror sl
 8019d24:	0a297d20 	beq	8a791ac <__init_array_end+0xa5e838>
 8019d28:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

08019d2c <COMMAND_MAGIC>:
 8019d2c:	a62d0940 	strtge	r0, [sp], -r0, asr #18
 8019d30:	e5dda515 	ldrb	sl, [sp, #1301]	@ 0x515
 8019d34:	5a4d9d6a 	bpl	93812e4 <__init_array_end+0x1366970>
 8019d38:	50af09cf 	adcpl	r0, pc, pc, asr #19

08019d3c <pp::configuration::UNIVERSE_MAX_LENGTH>:
 8019d3c:	000001fe 	strdeq	r0, [r0], -lr

08019d40 <vtable for RDMDeviceResponder>:
	...
 8019d48:	08009775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, ip, pc}
 8019d4c:	08009815 	stmdaeq	r0, {r0, r2, r4, fp, ip, pc}
 8019d50:	0800b845 	stmdaeq	r0, {r0, r2, r6, fp, ip, sp, pc}
 8019d54:	0800b847 	stmdaeq	r0, {r0, r1, r2, r6, fp, ip, sp, pc}

08019d58 <RDMHandler::PID_DEFINITIONS>:
 8019d58:	00000060 	andeq	r0, r0, r0, rrx
 8019d5c:	0800bd85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, ip, sp, pc}
	...
 8019d6c:	01010000 	mrseq	r0, (UNDEF: 1)
 8019d70:	00000080 	andeq	r0, r0, r0, lsl #1
 8019d74:	0800bebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, pc}
	...
 8019d84:	01010100 	mrseq	r0, (UNDEF: 17)
 8019d88:	00000081 	andeq	r0, r0, r1, lsl #1
 8019d8c:	0800bf29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, pc}
	...
 8019d9c:	01010100 	mrseq	r0, (UNDEF: 17)
 8019da0:	00000082 	andeq	r0, r0, r2, lsl #1
 8019da4:	0800bed9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 8019da8:	00000000 	andeq	r0, r0, r0
 8019dac:	0800c059 	stmdaeq	r0, {r0, r3, r4, r6, lr, pc}
 8019db0:	00000000 	andeq	r0, r0, r0
 8019db4:	01010100 	mrseq	r0, (UNDEF: 17)
 8019db8:	00000090 	muleq	r0, r0, r0
 8019dbc:	0800bdfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 8019dc0:	00000000 	andeq	r0, r0, r0
 8019dc4:	0800c025 	stmdaeq	r0, {r0, r2, r5, lr, pc}
 8019dc8:	00000000 	andeq	r0, r0, r0
 8019dcc:	01010100 	mrseq	r0, (UNDEF: 17)
 8019dd0:	00001000 	andeq	r1, r0, r0
 8019dd4:	0800bf15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, ip, sp, pc}
 8019dd8:	00000000 	andeq	r0, r0, r0
 8019ddc:	0800bfa9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8019de0:	00000000 	andeq	r0, r0, r0
 8019de4:	01010000 	mrseq	r0, (UNDEF: 1)
 8019de8:	00001001 	andeq	r1, r0, r1
	...
 8019df4:	0800bf61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8019df8:	00000000 	andeq	r0, r0, r0
 8019dfc:	01010100 	mrseq	r0, (UNDEF: 17)
 8019e00:	00000700 	andeq	r0, r0, r0, lsl #14
 8019e04:	0800c533 	stmdaeq	r0, {r0, r1, r4, r5, r8, sl, lr, pc}
	...
 8019e14:	01000000 	mrseq	r0, (UNDEF: 0)
 8019e18:	00000701 	andeq	r0, r0, r1, lsl #14
 8019e1c:	0800c54d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, lr, pc}
	...
 8019e2c:	01000004 	tsteq	r0, r4
 8019e30:	00000702 	andeq	r0, r0, r2, lsl #14
 8019e34:	0800c59d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, lr, pc}
	...
 8019e44:	01000004 	tsteq	r0, r4
 8019e48:	00000703 	andeq	r0, r0, r3, lsl #14
 8019e4c:	0800c5d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, lr, pc}
 8019e50:	00000000 	andeq	r0, r0, r0
 8019e54:	0800c601 	stmdaeq	r0, {r0, r9, sl, lr, pc}
 8019e58:	00000000 	andeq	r0, r0, r0
 8019e5c:	01000004 	tsteq	r0, r4
 8019e60:	00000704 	andeq	r0, r0, r4, lsl #14
 8019e64:	0800c681 	stmdaeq	r0, {r0, r7, r9, sl, lr, pc}
 8019e68:	00000000 	andeq	r0, r0, r0
 8019e6c:	0800c6bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, lr, pc}
 8019e70:	00000000 	andeq	r0, r0, r0
 8019e74:	01000004 	tsteq	r0, r4
 8019e78:	00000705 	andeq	r0, r0, r5, lsl #14
 8019e7c:	0800c735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, lr, pc}
	...
 8019e8c:	01000004 	tsteq	r0, r4
 8019e90:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8019e9c:	0800c705 	stmdaeq	r0, {r0, r2, r8, r9, sl, lr, pc}
 8019ea0:	00000000 	andeq	r0, r0, r0
 8019ea4:	01000004 	tsteq	r0, r4
 8019ea8:	00000706 	andeq	r0, r0, r6, lsl #14
 8019eac:	0800c785 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, lr, pc}
 8019eb0:	00000000 	andeq	r0, r0, r0
 8019eb4:	0800c7cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, lr, pc}
 8019eb8:	00000000 	andeq	r0, r0, r0
 8019ebc:	01000004 	tsteq	r0, r4
 8019ec0:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8019ecc:	0800c81d 	stmdaeq	r0, {r0, r2, r3, r4, fp, lr, pc}
 8019ed0:	00000000 	andeq	r0, r0, r0
 8019ed4:	01000004 	tsteq	r0, r4
 8019ed8:	0000070b 	andeq	r0, r0, fp, lsl #14
 8019edc:	0800c635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, lr, pc}
	...
 8019eec:	01000001 	tsteq	r0, r1
 8019ef0:	0000070a 	andeq	r0, r0, sl, lsl #14
 8019ef4:	0800c845 	stmdaeq	r0, {r0, r2, r6, fp, lr, pc}
 8019ef8:	00000000 	andeq	r0, r0, r0
 8019efc:	0800c881 	stmdaeq	r0, {r0, r7, fp, lr, pc}
 8019f00:	00000000 	andeq	r0, r0, r0
 8019f04:	01000004 	tsteq	r0, r4
 8019f08:	0000070c 	andeq	r0, r0, ip, lsl #14
 8019f0c:	0800c8c1 	stmdaeq	r0, {r0, r6, r7, fp, lr, pc}
 8019f10:	00000000 	andeq	r0, r0, r0
 8019f14:	0800c8ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, fp, lr, pc}
 8019f18:	00000000 	andeq	r0, r0, r0
 8019f1c:	01000000 	mrseq	r0, (UNDEF: 0)
 8019f20:	0000070d 	andeq	r0, r0, sp, lsl #14
 8019f24:	0800c921 	stmdaeq	r0, {r0, r5, r8, fp, lr, pc}
 8019f28:	00000000 	andeq	r0, r0, r0
 8019f2c:	0800c94d 	stmdaeq	r0, {r0, r2, r3, r6, r8, fp, lr, pc}
 8019f30:	00000000 	andeq	r0, r0, r0
 8019f34:	01000000 	mrseq	r0, (UNDEF: 0)

08019f38 <UID_ALL>:
 8019f38:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 8019f3c:	 	svcvs	0x0043ffff

08019f3e <RDMNetConst::MSG_CONFIG>:
 8019f3e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019f42:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 8019f46:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019f4a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8019f4e:	 	andpl	r7, r0, r5, ror #8

08019f51 <RDMConst::MANUFACTURER_ID>:
 8019f51:	 	strbtvc	r0, [r8], #-80	@ 0xffffffb0

08019f53 <RDMConst::MANUFACTURER_NAME>:
 8019f53:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019f57:	772f2f3a 			@ <UNDEFINED> instruction: 0x772f2f3a
 8019f5b:	6f2e7777 	svcvs	0x002e7777
 8019f5f:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 8019f63:	2d697065 	stclcs	0, cr7, [r9, #-404]!	@ 0xfffffe6c
 8019f67:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8019f6b:	0067726f 	rsbeq	r7, r7, pc, ror #4

08019f6f <DEVICE_LABEL>:
 8019f6f:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 8019f73:	30373446 	eorscc	r3, r7, r6, asr #8
 8019f77:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 8019f7b:	52204c41 	eorpl	r4, r0, #16640	@ 0x4100
 8019f7f:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 8019f83:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 8019f87:	 	andeq	r0, r0, #101	@ 0x65

08019f89 <CSWTCH.79>:
 8019f89:	02020200 	andeq	r0, r2, #0, 4
 8019f8d:	04020202 	streq	r0, [r2], #-514	@ 0xfffffdfe
 8019f91:	 	andeq	r0, r0, r0, lsl #10

08019f94 <CSWTCH.48>:
 8019f94:	00000000 	andeq	r0, r0, r0
 8019f98:	00000002 	andeq	r0, r0, r2
 8019f9c:	00000002 	andeq	r0, r0, r2
 8019fa0:	00000002 	andeq	r0, r0, r2
 8019fa4:	00000002 	andeq	r0, r0, r2
 8019fa8:	00000002 	andeq	r0, r0, r2
 8019fac:	00000002 	andeq	r0, r0, r2
 8019fb0:	00000004 	andeq	r0, r0, r4
 8019fb4:	00000000 	andeq	r0, r0, r0
 8019fb8:	00000005 	andeq	r0, r0, r5

08019fbc <vtable for WS28xxDmxMulti>:
	...
 8019fc4:	0800d351 	stmdaeq	r0, {r0, r4, r6, r8, r9, ip, lr, pc}
 8019fc8:	0800d5a1 	stmdaeq	r0, {r0, r5, r7, r8, sl, ip, lr, pc}
 8019fcc:	0800d311 	stmdaeq	r0, {r0, r4, r8, r9, ip, lr, pc}
 8019fd0:	0800d331 	stmdaeq	r0, {r0, r4, r5, r8, r9, ip, lr, pc}
 8019fd4:	0800dfe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8019fd8:	0800dfc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8019fdc:	0800d375 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, ip, lr, pc}
 8019fe0:	0800d2f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, lr, pc}
 8019fe4:	0800d579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip, lr, pc}
 8019fe8:	0800d38d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, ip, lr, pc}
 8019fec:	0800d3a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip, lr, pc}
 8019ff0:	0800d301 	stmdaeq	r0, {r0, r8, r9, ip, lr, pc}
 8019ff4:	0800d305 	stmdaeq	r0, {r0, r2, r8, r9, ip, lr, pc}
 8019ff8:	0800d30d 	stmdaeq	r0, {r0, r2, r3, r8, r9, ip, lr, pc}
 8019ffc:	0800d2f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, ip, lr, pc}

0801a000 <pixel::MAPS>:
 801a000:	00424752 	subeq	r4, r2, r2, asr r7
 801a004:	00474252 	subeq	r4, r7, r2, asr r2
 801a008:	00425247 	subeq	r5, r2, r7, asr #4
 801a00c:	00524247 	subseq	r4, r2, r7, asr #4
 801a010:	00475242 	subeq	r5, r7, r2, asr #4
 801a014:	00524742 	subseq	r4, r2, r2, asr #14

0801a018 <pixel::TYPES>:
 801a018:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a01c:	00003130 	andeq	r3, r0, r0, lsr r1
 801a020:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a024:	00003131 	andeq	r3, r0, r1, lsr r1
 801a028:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a02c:	00003231 	andeq	r3, r0, r1, lsr r2
 801a030:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a034:	00423231 	subeq	r3, r2, r1, lsr r2
 801a038:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a03c:	00003331 	andeq	r3, r0, r1, lsr r3
 801a040:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801a044:	00003531 	andeq	r3, r0, r1, lsr r5
 801a048:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a04c:	00003231 	andeq	r3, r0, r1, lsr r2
 801a050:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a054:	00573231 	subseq	r3, r7, r1, lsr r2
 801a058:	31534355 	cmpcc	r3, r5, asr r3
 801a05c:	00333039 	eorseq	r3, r3, r9, lsr r0
 801a060:	32534355 	subscc	r4, r3, #1409286145	@ 0x54000001
 801a064:	00333039 	eorseq	r3, r3, r9, lsr r0
 801a068:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801a06c:	00003231 	andeq	r3, r0, r1, lsr r2
 801a070:	31415041 	cmpcc	r1, r1, asr #32
 801a074:	00003230 	andeq	r3, r0, r0, lsr r2
 801a078:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801a07c:	00003232 	andeq	r3, r0, r2, lsr r2
 801a080:	31383950 	teqcc	r8, r0, asr r9
 801a084:	00000033 	andeq	r0, r0, r3, lsr r0

0801a088 <s_patternName>:
 801a088:	656e6f4e 	strbvs	r6, [lr, #-3918]!	@ 0xfffff0b2
	...
 801a094:	61520000 	cmpvs	r2, r0
 801a098:	6f626e69 	svcvs	0x00626e69
 801a09c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 801a0a0:	00656c63 	rsbeq	r6, r5, r3, ror #24
 801a0a4:	61656854 	cmnvs	r5, r4, asr r8
 801a0a8:	20726574 	rsbscs	r6, r2, r4, ror r5
 801a0ac:	73616863 	cmnvc	r1, #6488064	@ 0x630000
 801a0b0:	6f430065 	svcvs	0x00430065
 801a0b4:	72756f6c 	rsbsvc	r6, r5, #108, 30	@ 0x1b0
 801a0b8:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801a0bc:	00000065 	andeq	r0, r0, r5, rrx
 801a0c0:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 801a0c4:	0072656e 	rsbseq	r6, r2, lr, ror #10
 801a0c8:	00000000 	andeq	r0, r0, r0
 801a0cc:	61460000 	mrsvs	r0, (UNDEF: 70)
 801a0d0:	00006564 	andeq	r6, r0, r4, ror #10
	...

0801a0dc <CSWTCH.64>:
 801a0dc:	00000000 	andeq	r0, r0, r0
 801a0e0:	00000002 	andeq	r0, r0, r2
 801a0e4:	00000002 	andeq	r0, r0, r2
 801a0e8:	00000002 	andeq	r0, r0, r2
 801a0ec:	00000002 	andeq	r0, r0, r2
 801a0f0:	00000002 	andeq	r0, r0, r2
 801a0f4:	00000002 	andeq	r0, r0, r2
 801a0f8:	00000004 	andeq	r0, r0, r4
 801a0fc:	00000000 	andeq	r0, r0, r0
 801a100:	00000005 	andeq	r0, r0, r5

0801a104 <pixel::s_GPIO_PINs>:
 801a104:	 	strbvs	r3, [lr, #-4032]	@ 0xfffff040

0801a106 <NetworkConst::MSG_NETWORK_STARTED>:
 801a106:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801a10a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801a10e:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a112:	00646574 	rsbeq	r6, r4, r4, ror r5

0801a116 <NetworkConst::MSG_NETWORK_INIT>:
 801a116:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801a11a:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801a11e:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
	...

0801a124 <mdns::DOMAIN_DNSSD>:
 801a124:	65735f09 	ldrbvs	r5, [r3, #-3849]!	@ 0xfffff0f7
 801a128:	63697672 	cmnvs	r9, #119537664	@ 0x7200000
 801a12c:	5f077365 	svcpl	0x00077365
 801a130:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	@ 0xfffffe70
 801a134:	5f046473 	svcpl	0x00046473
 801a138:	05706475 	ldrbeq	r6, [r0, #-1141]!	@ 0xfffffb8b
 801a13c:	61636f6c 	cmnvs	r3, ip, ror #30
 801a140:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801a224:	0000001e 	andeq	r0, r0, lr, lsl r0

0801a228 <mdns::s_Services>:
 801a228:	0801a2f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sp, pc}
 801a22c:	00000008 	andeq	r0, r0, r8
 801a230:	00000000 	andeq	r0, r0, r0
 801a234:	00002905 	andeq	r2, r0, r5, lsl #18
 801a238:	0801a2ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sp, pc}
 801a23c:	00000006 	andeq	r0, r0, r6
 801a240:	00000000 	andeq	r0, r0, r0
 801a244:	00000045 	andeq	r0, r0, r5, asr #32
 801a248:	0801a2e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sp, pc}
 801a24c:	00000006 	andeq	r0, r0, r6
 801a250:	00000001 	andeq	r0, r0, r1
 801a254:	00000050 	andeq	r0, r0, r0, asr r0
 801a258:	0801a2d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sp, pc}
 801a25c:	0000000d 	andeq	r0, r0, sp
 801a260:	00000000 	andeq	r0, r0, r0
 801a264:	000015c1 	andeq	r1, r0, r1, asr #11
 801a268:	0801a2d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, sp, pc}
 801a26c:	00000005 	andeq	r0, r0, r5
 801a270:	00000000 	andeq	r0, r0, r0
 801a274:	0000007b 	andeq	r0, r0, fp, ror r0
 801a278:	0801a2c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sp, pc}
 801a27c:	0000000c 	andeq	r0, r0, ip
 801a280:	00000000 	andeq	r0, r0, r0
 801a284:	0000138c 	andeq	r1, r0, ip, lsl #7
 801a288:	0801a2c1 	stmdaeq	r1, {r0, r6, r7, r9, sp, pc}
 801a28c:	00000005 	andeq	r0, r0, r5
	...
 801a298:	0801a2bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sp, pc}
 801a29c:	00000005 	andeq	r0, r0, r5
 801a2a0:	00000000 	andeq	r0, r0, r0
 801a2a4:	00000fd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 801a2a8:	0801a2b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sp, pc}
 801a2ac:	00000004 	andeq	r0, r0, r4
 801a2b0:	00000000 	andeq	r0, r0, r0
 801a2b4:	000013d6 	ldrdeq	r1, [r0], -r6

0801a2b8 <mdns::DOMAIN_PP>:
 801a2b8:	70705f03 	rsbsvc	r5, r0, r3, lsl #30

0801a2bc <mdns::DOMAIN_DDP>:
 801a2bc:	64645f04 	strbtvs	r5, [r4], #-3844	@ 0xfffff0fc
 801a2c0:	 	svcvs	0x005f0470

0801a2c1 <mdns::DOMAIN_OSC>:
 801a2c1:	736f5f04 	cmnvc	pc, #4, 30
 801a2c5:	 	cmpvs	pc, r3, ror #22

0801a2c6 <mdns::DOMAIN_MIDI>:
 801a2c6:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
 801a2ca:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	@ 0xfffffe40
 801a2ce:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

0801a2d2 <mdns::DOMAIN_NTP>:
 801a2d2:	746e5f04 	strbtvc	r5, [lr], #-3844	@ 0xfffff0fc
 801a2d6:	 	subsvc	r0, pc, #112, 24	@ 0x7000

0801a2d7 <mdns::DOMAIN_RDMNET_LLRP>:
 801a2d7:	64725f0c 	ldrbtvs	r5, [r2], #-3852	@ 0xfffff0f4
 801a2db:	74656e6d 	strbtvc	r6, [r5], #-3693	@ 0xfffff193
 801a2df:	726c6c2d 	rsbvc	r6, ip, #11520	@ 0x2d00
 801a2e3:	 	ldmdavs	pc, {r4, r5, r6, r8, sl}^	@ <UNPREDICTABLE>

0801a2e4 <mdns::DOMAIN_HTTP>:
 801a2e4:	74685f05 	strbtvc	r5, [r8], #-3845	@ 0xfffff0fb
 801a2e8:	 	svcpl	0x00057074

0801a2ea <mdns::DOMAIN_TFTP>:
 801a2ea:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
 801a2ee:	 	svcpl	0x00077074

0801a2f0 <mdns::DOMAIN_CONFIG>:
 801a2f0:	6f635f07 	svcvs	0x00635f07
 801a2f4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

0801a2f8 <mdns::DOMAIN_TCP>:
 801a2f8:	63745f04 	cmnvs	r4, #4, 30
 801a2fc:	 	ldrbvc	r0, [pc, #-1136]	@ 8019e94 <RDMHandler::PID_DEFINITIONS+0x13c>

0801a2fd <mdns::DOMAIN_UDP>:
 801a2fd:	64755f04 	ldrbtvs	r5, [r5], #-3844	@ 0xfffff0fc
 801a301:	 	svcvs	0x006c0570

0801a302 <mdns::DOMAIN_LOCAL>:
 801a302:	636f6c05 	cmnvs	pc, #1280	@ 0x500
 801a306:	 	cdpvs	12, 0, cr6, cr0, cr1, {3}

0801a309 <NetworkParamsConst::NTP_SERVER>:
 801a309:	5f70746e 	svcpl	0x0070746e
 801a30d:	76726573 			@ <UNDEFINED> instruction: 0x76726573
 801a311:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

0801a314 <NetworkParamsConst::HOSTNAME>:
 801a314:	74736f68 	ldrbtvc	r6, [r3], #-3944	@ 0xfffff098
 801a318:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801a31d <NetworkParamsConst::DEFAULT_GATEWAY>:
 801a31d:	61666564 	cmnvs	r6, r4, ror #10
 801a321:	5f746c75 	svcpl	0x00746c75
 801a325:	65746167 	ldrbvs	r6, [r4, #-359]!	@ 0xfffffe99
 801a329:	00796177 	rsbseq	r6, r9, r7, ror r1

0801a32d <NetworkParamsConst::NET_MASK>:
 801a32d:	5f74656e 	svcpl	0x0074656e
 801a331:	6b73616d 	blvs	9cf28ed <__init_array_end+0x1cd7f79>
	...

0801a336 <NetworkParamsConst::IP_ADDRESS>:
 801a336:	615f7069 	cmpvs	pc, r9, rrx
 801a33a:	65726464 	ldrbvs	r6, [r2, #-1124]!	@ 0xfffffb9c
 801a33e:	 	strvs	r7, [r0], #-883	@ 0xfffffc8d

0801a341 <NetworkParamsConst::DHCP_RETRY_TIME>:
 801a341:	70636864 	rsbvc	r6, r3, r4, ror #16
 801a345:	7465725f 	strbtvc	r7, [r5], #-607	@ 0xfffffda1
 801a349:	745f7972 	ldrbvc	r7, [pc], #-2418	@ 801a351 <NetworkParamsConst::USE_DHCP>
 801a34d:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801a351 <NetworkParamsConst::USE_DHCP>:
 801a351:	5f657375 	svcpl	0x00657375
 801a355:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801a35a <NetworkParamsConst::FILE_NAME>:
 801a35a:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801a35e:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801a362:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801a368 <pArray>:
 801a368:	0801a3e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sp, pc}
 801a36c:	0801a3db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sp, pc}
 801a370:	0801a336 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sp, pc}
 801a374:	0801a3d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sp, pc}
 801a378:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a37c:	0801a3c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sp, pc}
 801a380:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a384:	0801a314 	stmdaeq	r1, {r2, r4, r8, r9, sp, pc}
 801a388:	0801a5f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, sl, sp, pc}
 801a38c:	0801a603 	stmdaeq	r1, {r0, r1, r9, sl, sp, pc}
 801a390:	0801a613 	stmdaeq	r1, {r0, r1, r4, r9, sl, sp, pc}
 801a394:	0801a623 	stmdaeq	r1, {r0, r1, r5, r9, sl, sp, pc}
 801a398:	0801a32d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sp, pc}
 801a39c:	0801a5e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, sp, pc}
 801a3a0:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a3a4:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a3a8:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a3ac:	0801770e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, ip, sp, lr}
 801a3b0:	0801a31d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sp, pc}
 801a3b4:	0801a3b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sp, pc}

0801a3b8 <DisplayUdfParamsConst::DMX_DIRECTION>:
 801a3b8:	5f786d64 	svcpl	0x00786d64
 801a3bc:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801a3c0:	6f697463 	svcvs	0x00697463
 801a3c4:	 	cmnvs	r1, #110	@ 0x6e

0801a3c6 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801a3c6:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a3ca:	705f6576 	subsvc	r6, pc, r6, ror r5	@ <UNPREDICTABLE>
 801a3ce:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
	...

0801a3d3 <DisplayUdfParamsConst::VERSION>:
 801a3d3:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801a3d7:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801a3db <DisplayUdfParamsConst::BOARD_NAME>:
 801a3db:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 801a3df:	616e5f64 	cmnvs	lr, r4, ror #30
 801a3e3:	 	strvc	r6, [r0], #-1389	@ 0xfffffa93

0801a3e6 <DisplayUdfParamsConst::TITLE>:
 801a3e6:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801a3ea:	 	stclvs	0, cr0, [r6], #-404	@ 0xfffffe6c

0801a3ec <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801a3ec:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801a3f0:	7265765f 	rsbvc	r7, r5, #99614720	@ 0x5f00000
 801a3f4:	61636974 	smcvs	13972	@ 0x3694
 801a3f8:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801a3fc <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801a3fc:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
 801a400:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a404:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 8019e9f <RDMHandler::PID_DEFINITIONS+0x147>
 801a408:	 	mcrvs	0, 3, r0, cr9, cr4, {3}

0801a40a <DisplayUdfParamsConst::INTENSITY>:
 801a40a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801a40e:	7469736e 	strbtvc	r7, [r9], #-878	@ 0xfffffc92
 801a412:	 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^

0801a414 <DisplayUdfParamsConst::FILE_NAME>:
 801a414:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a418:	2e79616c 	rpwcsez	f6, f1, #4.0
 801a41c:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a420 <s_aStorSize>:
 801a420:	00000060 	andeq	r0, r0, r0, rrx
 801a424:	00000020 	andeq	r0, r0, r0, lsr #32
 801a428:	00000040 	andeq	r0, r0, r0, asr #32
 801a42c:	00000040 	andeq	r0, r0, r0, asr #32
 801a430:	00000020 	andeq	r0, r0, r0, lsr #32
 801a434:	00000020 	andeq	r0, r0, r0, lsr #32
 801a438:	000001e0 	andeq	r0, r0, r0, ror #3
 801a43c:	00000040 	andeq	r0, r0, r0, asr #32
 801a440:	00000020 	andeq	r0, r0, r0, lsr #32
 801a444:	00000060 	andeq	r0, r0, r0, rrx
 801a448:	00000030 	andeq	r0, r0, r0, lsr r0
 801a44c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a450:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
 801a454:	00000030 	andeq	r0, r0, r0, lsr r0
 801a458:	00000040 	andeq	r0, r0, r0, asr #32
 801a45c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a460:	00000060 	andeq	r0, r0, r0, rrx
 801a464:	00000020 	andeq	r0, r0, r0, lsr #32
 801a468:	00000400 	andeq	r0, r0, r0, lsl #8
 801a46c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a470:	00000020 	andeq	r0, r0, r0, lsr #32
 801a474:	00000040 	andeq	r0, r0, r0, asr #32
 801a478:	00000060 	andeq	r0, r0, r0, rrx
 801a47c:	00000020 	andeq	r0, r0, r0, lsr #32
 801a480:	00000020 	andeq	r0, r0, r0, lsr #32
 801a484:	00000140 	andeq	r0, r0, r0, asr #2
 801a488:	00000020 	andeq	r0, r0, r0, lsr #32

0801a48c <s_aSignature>:
 801a48c:	01567641 	cmpeq	r6, r1, asr #12

0801a490 <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
 801a490:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
 801a494:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
 801a498:	2d051e05 	stccs	14, cr1, [r5, #-20]	@ 0xffffffec
 801a49c:	2d081e06 	stccs	14, cr1, [r8, #-24]	@ 0xffffffe8
 801a4a0:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
 801a4a4:	 	ldrbtvc	r2, [r5], #-3340	@ 0xfffff2f4

0801a4a6 <EnvParamsConst::UTC_OFFSET>:
 801a4a6:	5f637475 	svcpl	0x00637475
 801a4aa:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801a4ae:	 	strvs	r7, [r0, #-1125]	@ 0xfffffb9b

0801a4b1 <EnvParamsConst::FILE_NAME>:
 801a4b1:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 801a4b5:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a4b9 <DevicesParamsConst::TEST_PATTERN>:
 801a4b9:	74736574 	ldrbtvc	r6, [r3], #-1396	@ 0xfffffa8c
 801a4bd:	7461705f 	strbtvc	r7, [r1], #-95	@ 0xffffffa1
 801a4c1:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801a4c6 <DevicesParamsConst::ACTIVE_OUT>:
 801a4c6:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a4ca:	6f5f6576 	svcvs	0x005f6576
 801a4ce:	 	smlsdxvs	r0, r5, r4, r7

0801a4d1 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801a4d1:	626f6c67 	rsbvs	r6, pc, #26368	@ 0x6700
 801a4d5:	625f6c61 	subsvs	r6, pc, #24832	@ 0x6100
 801a4d9:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801a4dd:	73656e74 	cmnvc	r5, #116, 28	@ 0x740
 801a4e1:	 	stclvs	0, cr0, [r3], #-460	@ 0xfffffe34

0801a4e3 <DevicesParamsConst::SPI_SPEED_HZ>:
 801a4e3:	636f6c63 	cmnvs	pc, #25344	@ 0x6300
 801a4e7:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801a4eb:	5f646565 	svcpl	0x00646565
 801a4ef:	 			@ <UNDEFINED> instruction: 0x6c007a68

0801a4f2 <DevicesParamsConst::GROUPING_COUNT>:
 801a4f2:	5f64656c 	svcpl	0x0064656c
 801a4f6:	756f7267 	strbvc	r7, [pc, #-615]!	@ 801a297 <mdns::s_Services+0x6f>
 801a4fa:	6f635f70 	svcvs	0x00635f70
 801a4fe:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a502 <DevicesParamsConst::COUNT>:
 801a502:	5f64656c 	svcpl	0x0064656c
 801a506:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801a50a:	 	strbvs	r0, [ip, #-116]!	@ 0xffffff8c

0801a50c <DevicesParamsConst::LED_T1H>:
 801a50c:	5f64656c 	svcpl	0x0064656c
 801a510:	00683174 	rsbeq	r3, r8, r4, ror r1

0801a514 <DevicesParamsConst::LED_T0H>:
 801a514:	5f64656c 	svcpl	0x0064656c
 801a518:	00683074 	rsbeq	r3, r8, r4, ror r0

0801a51c <DevicesParamsConst::MAP>:
 801a51c:	5f64656c 	svcpl	0x0064656c
 801a520:	5f626772 	svcpl	0x00626772
 801a524:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801a528:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801a52c <DevicesParamsConst::TYPE>:
 801a52c:	5f64656c 	svcpl	0x0064656c
 801a530:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
	...

0801a535 <DevicesParamsConst::FILE_NAME>:
 801a535:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801a539:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801a53d:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a541 <LightSetParamsConst::START_UNI_PORT>:
 801a541:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a545:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a549:	6f705f69 	svcvs	0x00705f69
 801a54d:	315f7472 	cmpcc	pc, r2, ror r4	@ <UNPREDICTABLE>
 801a551:	00000000 	andeq	r0, r0, r0
 801a555:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a559:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a55d:	6f705f69 	svcvs	0x00705f69
 801a561:	325f7472 	subscc	r7, pc, #1912602624	@ 0x72000000
 801a565:	00000000 	andeq	r0, r0, r0
 801a569:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a56d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a571:	6f705f69 	svcvs	0x00705f69
 801a575:	335f7472 	cmpcc	pc, #1912602624	@ 0x72000000
 801a579:	00000000 	andeq	r0, r0, r0
 801a57d:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a581:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a585:	6f705f69 	svcvs	0x00705f69
 801a589:	345f7472 	ldrbcc	r7, [pc], #-1138	@ 801a591 <LightSetParamsConst::START_UNI_PORT+0x50>
 801a58d:	00000000 	andeq	r0, r0, r0
 801a591:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a595:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a599:	6f705f69 	svcvs	0x00705f69
 801a59d:	355f7472 	ldrbcc	r7, [pc, #-1138]	@ 801a133 <mdns::DOMAIN_DNSSD+0xf>
 801a5a1:	00000000 	andeq	r0, r0, r0
 801a5a5:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a5a9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a5ad:	6f705f69 	svcvs	0x00705f69
 801a5b1:	365f7472 			@ <UNDEFINED> instruction: 0x365f7472
 801a5b5:	00000000 	andeq	r0, r0, r0
 801a5b9:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a5bd:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a5c1:	6f705f69 	svcvs	0x00705f69
 801a5c5:	375f7472 			@ <UNDEFINED> instruction: 0x375f7472
 801a5c9:	00000000 	andeq	r0, r0, r0
 801a5cd:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a5d1:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a5d5:	6f705f69 	svcvs	0x00705f69
 801a5d9:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 801a5dd:	00000000 	andeq	r0, r0, r0

0801a5e1 <LightSetParamsConst::DMX_START_ADDRESS>:
 801a5e1:	5f786d64 	svcpl	0x00786d64
 801a5e5:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801a5e9:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 801a5ed:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 801a5f1:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

0801a5f3 <LightSetParamsConst::UNIVERSE_PORT>:
 801a5f3:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a5f7:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a5fb:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a5ff:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801a603:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a607:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a60b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a60f:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a613:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a617:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a61b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a61f:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801a623:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801a627:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801a62b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801a62f:	00645f74 	rsbeq	r5, r4, r4, ror pc
	...

0801a634 <vtable for Ssd1306>:
	...
 801a63c:	08013e0d 	stmdaeq	r1, {r0, r2, r3, r9, sl, fp, ip, sp}
 801a640:	08013e39 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, fp, ip, sp}
 801a644:	08014171 	stmdaeq	r1, {r0, r4, r5, r6, r8, lr}
 801a648:	08014105 	stmdaeq	r1, {r0, r2, r8, lr}
 801a64c:	08013fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp}
 801a650:	08013e5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, sl, fp, ip, sp}
 801a654:	08013e89 	stmdaeq	r1, {r0, r3, r7, r9, sl, fp, ip, sp}
 801a658:	08013fb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 801a65c:	08013f69 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp}
 801a660:	08013e0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, sl, fp, ip, sp}
 801a664:	08014015 	stmdaeq	r1, {r0, r2, r4, lr}
 801a668:	08014021 	stmdaeq	r1, {r0, r5, lr}
 801a66c:	08014039 	stmdaeq	r1, {r0, r3, r4, r5, lr}
 801a670:	08013e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, ip, sp}

0801a674 <oled_128x32_init>:
 801a674:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801a678:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801a67c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801a680:	02dac8a1 	sbcseq	ip, sl, #10551296	@ 0xa10000
 801a684:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801a688:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801a68c <oled_128x64_init>:
 801a68c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801a690:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801a694:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801a698:	12dac8a1 	sbcsne	ip, sl, #10551296	@ 0xa10000
 801a69c:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801a6a0:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801a6a4 <_OledFont8x6>:
 801a6a4:	00000040 	andeq	r0, r0, r0, asr #32
 801a6a8:	40000000 	andmi	r0, r0, r0
 801a6ac:	005f0000 	subseq	r0, pc, r0
 801a6b0:	00400000 	subeq	r0, r0, r0
 801a6b4:	00070007 	andeq	r0, r7, r7
 801a6b8:	7f144000 	svcvc	0x00144000
 801a6bc:	00147f14 	andseq	r7, r4, r4, lsl pc
 801a6c0:	7f2a2440 	svcvc	0x002a2440
 801a6c4:	4000122a 	andmi	r1, r0, sl, lsr #4
 801a6c8:	64081323 	strvs	r1, [r8], #-803	@ 0xfffffcdd
 801a6cc:	36400062 	strbcc	r0, [r0], -r2, rrx
 801a6d0:	50205649 	eorpl	r5, r0, r9, asr #12
 801a6d4:	08004000 	stmdaeq	r0, {lr}
 801a6d8:	00000307 	andeq	r0, r0, r7, lsl #6
 801a6dc:	221c0040 	andscs	r0, ip, #64	@ 0x40
 801a6e0:	40000041 	andmi	r0, r0, r1, asr #32
 801a6e4:	1c224100 	stfnes	f4, [r2], #-0
 801a6e8:	2a400000 	bcs	901a6f0 <__init_array_end+0xfffd7c>
 801a6ec:	2a1c7f1c 	bcs	873a364 <__init_array_end+0x71f9f0>
 801a6f0:	08084000 	stmdaeq	r8, {lr}
 801a6f4:	0008083e 	andeq	r0, r8, lr, lsr r8
 801a6f8:	70800040 	addvc	r0, r0, r0, asr #32
 801a6fc:	40000030 	andmi	r0, r0, r0, lsr r0
 801a700:	08080808 	stmdaeq	r8, {r3, fp}
 801a704:	00400008 	subeq	r0, r0, r8
 801a708:	00606000 	rsbeq	r6, r0, r0
 801a70c:	10204000 	eorne	r4, r0, r0
 801a710:	00020408 	andeq	r0, r2, r8, lsl #8
 801a714:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801a718:	40003e45 	andmi	r3, r0, r5, asr #28
 801a71c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801a720:	72400000 	subvc	r0, r0, #0
 801a724:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801a728:	41214000 			@ <UNDEFINED> instruction: 0x41214000
 801a72c:	00334d49 	eorseq	r4, r3, r9, asr #26
 801a730:	12141840 	andsne	r1, r4, #64, 16	@ 0x400000
 801a734:	4000107f 	andmi	r1, r0, pc, ror r0
 801a738:	45454527 	strbmi	r4, [r5, #-1319]	@ 0xfffffad9
 801a73c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801a740:	3149494a 	cmpcc	r9, sl, asr #18
 801a744:	21414000 	mrscs	r4, (UNDEF: 65)
 801a748:	00070911 	andeq	r0, r7, r1, lsl r9
 801a74c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801a750:	40003649 	andmi	r3, r0, r9, asr #12
 801a754:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801a758:	0040001e 	subeq	r0, r0, lr, lsl r0
 801a75c:	00001400 	andeq	r1, r0, r0, lsl #8
 801a760:	40004000 	andmi	r4, r0, r0
 801a764:	00000034 	andeq	r0, r0, r4, lsr r0
 801a768:	14080040 	strne	r0, [r8], #-64	@ 0xffffffc0
 801a76c:	40004122 	andmi	r4, r0, r2, lsr #2
 801a770:	14141414 	ldrne	r1, [r4], #-1044	@ 0xfffffbec
 801a774:	00400014 	subeq	r0, r0, r4, lsl r0
 801a778:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801a77c:	01024000 	mrseq	r4, (UNDEF: 2)
 801a780:	00060959 	andeq	r0, r6, r9, asr r9
 801a784:	5d413e40 	stclpl	14, cr3, [r1, #-256]	@ 0xffffff00
 801a788:	40004e59 	andmi	r4, r0, r9, asr lr
 801a78c:	1211127c 	andsne	r1, r1, #124, 4	@ 0xc0000007
 801a790:	7f40007c 	svcvc	0x0040007c
 801a794:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801a798:	413e4000 	teqmi	lr, r0
 801a79c:	00224141 	eoreq	r4, r2, r1, asr #2
 801a7a0:	41417f40 	cmpmi	r1, r0, asr #30
 801a7a4:	40003e41 	andmi	r3, r0, r1, asr #28
 801a7a8:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801a7ac:	7f400041 	svcvc	0x00400041
 801a7b0:	01090909 	tsteq	r9, r9, lsl #18
 801a7b4:	413e4000 	teqmi	lr, r0
 801a7b8:	00735141 	rsbseq	r5, r3, r1, asr #2
 801a7bc:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801a7c0:	40007f08 	andmi	r7, r0, r8, lsl #30
 801a7c4:	417f4100 	cmnmi	pc, r0, lsl #2
 801a7c8:	20400000 	subcs	r0, r0, r0
 801a7cc:	013f4140 	teqeq	pc, r0, asr #2
 801a7d0:	087f4000 	ldmdaeq	pc!, {lr}^	@ <UNPREDICTABLE>
 801a7d4:	00412214 	subeq	r2, r1, r4, lsl r2
 801a7d8:	40407f40 	submi	r7, r0, r0, asr #30
 801a7dc:	40004040 	andmi	r4, r0, r0, asr #32
 801a7e0:	021c027f 	andseq	r0, ip, #-268435449	@ 0xf0000007
 801a7e4:	7f40007f 	svcvc	0x0040007f
 801a7e8:	7f100804 	svcvc	0x00100804
 801a7ec:	413e4000 	teqmi	lr, r0
 801a7f0:	003e4141 	eorseq	r4, lr, r1, asr #2
 801a7f4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801a7f8:	40000609 	andmi	r0, r0, r9, lsl #12
 801a7fc:	2151413e 	cmpcs	r1, lr, lsr r1
 801a800:	7f40005e 	svcvc	0x0040005e
 801a804:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801a808:	49264000 	stmdbmi	r6!, {lr}
 801a80c:	00324949 	eorseq	r4, r2, r9, asr #18
 801a810:	7f010340 	svcvc	0x00010340
 801a814:	40000301 	andmi	r0, r0, r1, lsl #6
 801a818:	4040403f 	submi	r4, r0, pc, lsr r0
 801a81c:	1f40003f 	svcne	0x0040003f
 801a820:	1f204020 	svcne	0x00204020
 801a824:	403f4000 	eorsmi	r4, pc, r0
 801a828:	003f4038 	eorseq	r4, pc, r8, lsr r0	@ <UNPREDICTABLE>
 801a82c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801a830:	40006314 	andmi	r6, r0, r4, lsl r3
 801a834:	04780403 	ldrbteq	r0, [r8], #-1027	@ 0xfffffbfd
 801a838:	61400003 	cmpvs	r0, r3
 801a83c:	434d4959 	movtmi	r4, #55641	@ 0xd959
 801a840:	7f004000 	svcvc	0x00004000
 801a844:	00414141 	subeq	r4, r1, r1, asr #2
 801a848:	08040240 	stmdaeq	r4, {r6, r9}
 801a84c:	40002010 	andmi	r2, r0, r0, lsl r0
 801a850:	41414100 	mrsmi	r4, (UNDEF: 81)
 801a854:	0440007f 	strbeq	r0, [r0], #-127	@ 0xffffff81
 801a858:	04020102 	streq	r0, [r2], #-258	@ 0xfffffefe
 801a85c:	40404000 	submi	r4, r0, r0
 801a860:	00404040 	subeq	r4, r0, r0, asr #32
 801a864:	07030040 	streq	r0, [r3, -r0, asr #32]
 801a868:	40000008 	andmi	r0, r0, r8
 801a86c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801a870:	7f400040 	svcvc	0x00400040
 801a874:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801a878:	44384000 	ldrtmi	r4, [r8], #-0
 801a87c:	00284444 	eoreq	r4, r8, r4, asr #8
 801a880:	44443840 	strbmi	r3, [r4], #-2112	@ 0xfffff7c0
 801a884:	40007f28 	andmi	r7, r0, r8, lsr #30
 801a888:	54545438 	ldrbpl	r5, [r4], #-1080	@ 0xfffffbc8
 801a88c:	00400018 	subeq	r0, r0, r8, lsl r0
 801a890:	02097e08 	andeq	r7, r9, #8, 28	@ 0x80
 801a894:	a4184000 	ldrge	r4, [r8], #-0
 801a898:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801a89c:	04087f40 	streq	r7, [r8], #-3904	@ 0xfffff0c0
 801a8a0:	40007804 	andmi	r7, r0, r4, lsl #16
 801a8a4:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801a8a8:	20400000 	subcs	r0, r0, r0
 801a8ac:	003d4040 	eorseq	r4, sp, r0, asr #32
 801a8b0:	107f4000 	rsbsne	r4, pc, r0
 801a8b4:	00004428 	andeq	r4, r0, r8, lsr #8
 801a8b8:	7f410040 	svcvc	0x00410040
 801a8bc:	40000040 	andmi	r0, r0, r0, asr #32
 801a8c0:	0478047c 	ldrbteq	r0, [r8], #-1148	@ 0xfffffb84
 801a8c4:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801a8c8:	78040408 	stmdavc	r4, {r3, sl}
 801a8cc:	44384000 	ldrtmi	r4, [r8], #-0
 801a8d0:	00384444 	eorseq	r4, r8, r4, asr #8
 801a8d4:	2418fc40 	ldrcs	pc, [r8], #-3136	@ 0xfffff3c0
 801a8d8:	40001824 	andmi	r1, r0, r4, lsr #16
 801a8dc:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801a8e0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801a8e4:	08040408 	stmdaeq	r4, {r3, sl}
 801a8e8:	54484000 	strbpl	r4, [r8], #-0
 801a8ec:	00245454 	eoreq	r5, r4, r4, asr r4
 801a8f0:	3f040440 	svccc	0x00040440
 801a8f4:	40002444 	andmi	r2, r0, r4, asr #8
 801a8f8:	2040403c 	subcs	r4, r0, ip, lsr r0
 801a8fc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801a900:	1c204020 	stcne	0, cr4, [r0], #-128	@ 0xffffff80
 801a904:	403c4000 	eorsmi	r4, ip, r0
 801a908:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801a90c:	10284440 	eorne	r4, r8, r0, asr #8
 801a910:	40004428 	andmi	r4, r0, r8, lsr #8
 801a914:	9090904c 	addsls	r9, r0, ip, asr #32
 801a918:	4440007c 	strbmi	r0, [r0], #-124	@ 0xffffff84
 801a91c:	444c5464 	strbmi	r5, [ip], #-1124	@ 0xfffffb9c
 801a920:	08004000 	stmdaeq	r0, {lr}
 801a924:	00004136 	andeq	r4, r0, r6, lsr r1
 801a928:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801a92c:	40000000 	andmi	r0, r0, r0
 801a930:	08364100 	ldmdaeq	r6!, {r8, lr}
 801a934:	02400000 	subeq	r0, r0, #0
 801a938:	02040201 	andeq	r0, r4, #268435456	@ 0x10000000
 801a93c:	263c4000 	ldrtcs	r4, [ip], -r0
 801a940:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801a944 <days_of_month>:
 801a944:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a948:	0000001c 	andeq	r0, r0, ip, lsl r0
 801a94c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a950:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a954:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a958:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a95c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a960:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a964:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a968:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a96c:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a970:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .tcmsram:

10008000 <net::s_dhcp_message>:
	...

10008224 <net::s_id>:
10008224:	00000000 	andeq	r0, r0, r0

10008228 <net::s_groups>:
	...

10008348 <net::s_multicast_mac>:
	...

10008350 <net::s_leave>:
	...

10008380 <net::s_report>:
	...

100083b0 <net::s_tcp>:
	...

1000899c <net::s_id>:
1000899c:	00000000 	andeq	r0, r0, r0

100089a0 <net::s_Port>:
	...

100096a8 <net::s_multicast_mac>:
	...

100096b0 <net::s_id>:
100096b0:	00000000 	andeq	r0, r0, r0

100096b4 <net::s_send_packet>:
	...

10009ca0 <net::s_data>:
	...

1000cb00 <net::s_Port>:
	...

1000cb10 <net::s_ArpRecords>:
	...

Disassembly of section .data:

20000000 <SystemCoreClock>:
20000000:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}

20000004 <lfsr>:
20000004:	0000ace1 	andeq	sl, r0, r1, ror #25

20000008 <s_block_bucket>:
20000008:	00000010 	andeq	r0, r0, r0, lsl r0
2000000c:	00000000 	andeq	r0, r0, r0
20000010:	00000020 	andeq	r0, r0, r0, lsr #32
20000014:	00000000 	andeq	r0, r0, r0
20000018:	00000040 	andeq	r0, r0, r0, asr #32
2000001c:	00000000 	andeq	r0, r0, r0
20000020:	00000060 	andeq	r0, r0, r0, rrx
20000024:	00000000 	andeq	r0, r0, r0
20000028:	00000080 	andeq	r0, r0, r0, lsl #1
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000100 	andeq	r0, r0, r0, lsl #2
20000034:	00000000 	andeq	r0, r0, r0
20000038:	00000140 	andeq	r0, r0, r0, asr #2
2000003c:	00000000 	andeq	r0, r0, r0
20000040:	00000180 	andeq	r0, r0, r0, lsl #3
20000044:	00000000 	andeq	r0, r0, r0
20000048:	00000200 	andeq	r0, r0, r0, lsl #4
2000004c:	00000000 	andeq	r0, r0, r0
20000050:	00000300 	andeq	r0, r0, r0, lsl #6
20000054:	00000000 	andeq	r0, r0, r0
20000058:	00000400 	andeq	r0, r0, r0, lsl #8
2000005c:	00000000 	andeq	r0, r0, r0
20000060:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000070 <next_block>:
20000070:	1000cc90 	mulne	r0, r0, ip

Disassembly of section .sram2:

20020000 <pixel::s_DmaBuffer>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
