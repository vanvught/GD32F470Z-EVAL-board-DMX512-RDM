
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08008000 <__gVectors>:
 8008000:	10008000 	andne	r8, r0, r0
 8008004:	08009015 	stmdaeq	r0, {r0, r2, r4, ip, pc}
 8008008:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800800c:	0800906b 	stmdaeq	r0, {r0, r1, r3, r5, r6, ip, pc}
 8008010:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008014:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008018:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
	...
 800802c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008030:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008034:	00000000 	andeq	r0, r0, r0
 8008038:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800803c:	08019055 	stmdaeq	r1, {r0, r2, r4, r6, ip, pc}
 8008040:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008044:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008048:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800804c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008050:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008054:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008058:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800805c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008060:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008064:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008068:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800806c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008070:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008074:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008078:	08011a9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, fp, ip}
 800807c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008080:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008084:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008088:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800808c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008090:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008094:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008098:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800809c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ac:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b0:	08011821 	stmdaeq	r1, {r0, r5, fp, ip}
 80080b4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080b8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080bc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080c8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080cc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080d8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080dc:	08011521 	stmdaeq	r1, {r0, r5, r8, sl, ip}
 80080e0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080e8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080ec:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080f8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80080fc:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008100:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008104:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008108:	08011925 	stmdaeq	r1, {r0, r2, r5, r8, fp, ip}
 800810c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008110:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008114:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008118:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800811c:	08011a49 	stmdaeq	r1, {r0, r3, r6, r9, fp, ip}
 8008120:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008124:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008128:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800812c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008130:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008134:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008138:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800813c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008140:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008144:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008148:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800814c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008150:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008154:	08011b0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, fp, ip}
 8008158:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800815c:	0801169d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, ip}
 8008160:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008164:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008168:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800816c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008170:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008174:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008178:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800817c:	00000000 	andeq	r0, r0, r0
 8008180:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008184:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008188:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800818c:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008190:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008194:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 8008198:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 800819c:	00000000 	andeq	r0, r0, r0
 80081a0:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a4:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}
 80081a8:	08009069 	stmdaeq	r0, {r0, r3, r5, r6, ip, pc}

Disassembly of section .text:

080081ac <net::igmp_init()>:
 80081ac:	b538      	push	{r3, r4, r5, lr}
 80081ae:	f00b ffa9 	bl	8014104 <net::igmp_set_ip()>
 80081b2:	492c      	ldr	r1, [pc, #176]	@ (8008264 <net::igmp_init()+0xb8>)
 80081b4:	4b2c      	ldr	r3, [pc, #176]	@ (8008268 <net::igmp_init()+0xbc>)
 80081b6:	4a2d      	ldr	r2, [pc, #180]	@ (800826c <net::igmp_init()+0xc0>)
 80081b8:	2401      	movs	r4, #1
 80081ba:	205e      	movs	r0, #94	@ 0x5e
 80081bc:	800c      	strh	r4, [r1, #0]
 80081be:	7088      	strb	r0, [r1, #2]
 80081c0:	2106      	movs	r1, #6
 80081c2:	f812 0b01 	ldrb.w	r0, [r2], #1
 80081c6:	f803 0b01 	strb.w	r0, [r3], #1
 80081ca:	3901      	subs	r1, #1
 80081cc:	d1f9      	bne.n	80081c2 <net::igmp_init()+0x16>
 80081ce:	4a28      	ldr	r2, [pc, #160]	@ (8008270 <net::igmp_init()+0xc4>)
 80081d0:	4828      	ldr	r0, [pc, #160]	@ (8008274 <net::igmp_init()+0xc8>)
 80081d2:	60d0      	str	r0, [r2, #12]
 80081d4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80081d8:	4b27      	ldr	r3, [pc, #156]	@ (8008278 <net::igmp_init()+0xcc>)
 80081da:	8210      	strh	r0, [r2, #16]
 80081dc:	f240 4094 	movw	r0, #1172	@ 0x494
 80081e0:	8450      	strh	r0, [r2, #34]	@ 0x22
 80081e2:	4c26      	ldr	r4, [pc, #152]	@ (800827c <net::igmp_init()+0xd0>)
 80081e4:	4826      	ldr	r0, [pc, #152]	@ (8008280 <net::igmp_init()+0xd4>)
 80081e6:	8491      	strh	r1, [r2, #36]	@ 0x24
 80081e8:	2516      	movs	r5, #22
 80081ea:	6154      	str	r4, [r2, #20]
 80081ec:	84d5      	strh	r5, [r2, #38]	@ 0x26
 80081ee:	6018      	str	r0, [r3, #0]
 80081f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80081f4:	2006      	movs	r0, #6
 80081f6:	491d      	ldr	r1, [pc, #116]	@ (800826c <net::igmp_init()+0xc0>)
 80081f8:	809a      	strh	r2, [r3, #4]
 80081fa:	181a      	adds	r2, r3, r0
 80081fc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8008200:	f802 5b01 	strb.w	r5, [r2], #1
 8008204:	3801      	subs	r0, #1
 8008206:	d1f9      	bne.n	80081fc <net::igmp_init()+0x50>
 8008208:	4a1e      	ldr	r2, [pc, #120]	@ (8008284 <net::igmp_init()+0xd8>)
 800820a:	615c      	str	r4, [r3, #20]
 800820c:	6811      	ldr	r1, [r2, #0]
 800820e:	4c1e      	ldr	r4, [pc, #120]	@ (8008288 <net::igmp_init()+0xdc>)
 8008210:	f8d1 20a0 	ldr.w	r2, [r1, #160]	@ 0xa0
 8008214:	8498      	strh	r0, [r3, #36]	@ 0x24
 8008216:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800821a:	4d16      	ldr	r5, [pc, #88]	@ (8008274 <net::igmp_init()+0xc8>)
 800821c:	f8c3 401e 	str.w	r4, [r3, #30]
 8008220:	8218      	strh	r0, [r3, #16]
 8008222:	2417      	movs	r4, #23
 8008224:	f240 4094 	movw	r0, #1172	@ 0x494
 8008228:	2a07      	cmp	r2, #7
 800822a:	84dc      	strh	r4, [r3, #38]	@ 0x26
 800822c:	60dd      	str	r5, [r3, #12]
 800822e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8008230:	d904      	bls.n	800823c <net::igmp_init()+0x90>
 8008232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008236:	4815      	ldr	r0, [pc, #84]	@ (800828c <net::igmp_init()+0xe0>)
 8008238:	f00f bcaa 	b.w	8017b90 <console_error>
 800823c:	4b14      	ldr	r3, [pc, #80]	@ (8008290 <net::igmp_init()+0xe4>)
 800823e:	f8d1 40a4 	ldr.w	r4, [r1, #164]	@ 0xa4
 8008242:	6818      	ldr	r0, [r3, #0]
 8008244:	1c55      	adds	r5, r2, #1
 8008246:	1c63      	adds	r3, r4, #1
 8008248:	f8c1 30a4 	str.w	r3, [r1, #164]	@ 0xa4
 800824c:	f8c1 50a0 	str.w	r5, [r1, #160]	@ 0xa0
 8008250:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8008254:	3064      	adds	r0, #100	@ 0x64
 8008256:	2164      	movs	r1, #100	@ 0x64
 8008258:	e9c3 0108 	strd	r0, r1, [r3, #32]
 800825c:	4a0d      	ldr	r2, [pc, #52]	@ (8008294 <net::igmp_init()+0xe8>)
 800825e:	e9c3 420a 	strd	r4, r2, [r3, #40]	@ 0x28
 8008262:	bd38      	pop	{r3, r4, r5, pc}
 8008264:	10008348 	andne	r8, r0, r8, asr #6
 8008268:	10008386 	andne	r8, r0, r6, lsl #7
 800826c:	20002968 	andcs	r2, r0, r8, ror #18
 8008270:	10008380 	andne	r8, r0, r0, lsl #7
 8008274:	00460008 	subeq	r0, r6, r8
 8008278:	10008350 	andne	r8, r0, r0, asr r3
 800827c:	02010040 	andeq	r0, r1, #64	@ 0x40
 8008280:	005e0001 	subseq	r0, lr, r1
 8008284:	20002b04 	andcs	r2, r0, r4, lsl #22
 8008288:	020000e0 	andeq	r0, r0, #224	@ 0xe0
 800828c:	0801bfb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8008290:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8008294:	080140b1 	stmdaeq	r1, {r0, r4, r5, r7, lr}

08008298 <net::igmp_shutdown()>:
 8008298:	b538      	push	{r3, r4, r5, lr}
 800829a:	4d05      	ldr	r5, [pc, #20]	@ (80082b0 <net::igmp_shutdown()+0x18>)
 800829c:	2400      	movs	r4, #0
 800829e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 80082a2:	b108      	cbz	r0, 80082a8 <net::igmp_shutdown()+0x10>
 80082a4:	f00b ff5c 	bl	8014160 <net::igmp_leave(unsigned long)>
 80082a8:	3401      	adds	r4, #1
 80082aa:	2c24      	cmp	r4, #36	@ 0x24
 80082ac:	d1f7      	bne.n	800829e <net::igmp_shutdown()+0x6>
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	10008228 	andne	r8, r0, r8, lsr #4

080082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>:
 80082b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082b8:	4d19      	ldr	r5, [pc, #100]	@ (8008320 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x6c>)
 80082ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80082be:	7e2c      	ldrb	r4, [r5, #24]
 80082c0:	461f      	mov	r7, r3
 80082c2:	7deb      	ldrb	r3, [r5, #23]
 80082c4:	0424      	lsls	r4, r4, #16
 80082c6:	eb04 2403 	add.w	r4, r4, r3, lsl #8
 80082ca:	7e6b      	ldrb	r3, [r5, #25]
 80082cc:	3402      	adds	r4, #2
 80082ce:	eb04 6403 	add.w	r4, r4, r3, lsl #24
 80082d2:	4682      	mov	sl, r0
 80082d4:	460e      	mov	r6, r1
 80082d6:	4690      	mov	r8, r2
 80082d8:	612c      	str	r4, [r5, #16]
 80082da:	f000 f8b5 	bl	8008448 <net::arp_init()>
 80082de:	f000 f951 	bl	8008584 <net::ip_init()>
 80082e2:	f1ba 0f01 	cmp.w	sl, #1
 80082e6:	7eab      	ldrb	r3, [r5, #26]
 80082e8:	d115      	bne.n	8008316 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x62>
 80082ea:	f043 0301 	orr.w	r3, r3, #1
 80082ee:	76ab      	strb	r3, [r5, #26]
 80082f0:	f899 3000 	ldrb.w	r3, [r9]
 80082f4:	b11b      	cbz	r3, 80082fe <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x4a>
 80082f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082fa:	f00b bd0b 	b.w	8013d14 <net::dhcp_start()>
 80082fe:	b12e      	cbz	r6, 800830c <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)+0x58>
 8008300:	4640      	mov	r0, r8
 8008302:	f00c f867 	bl	80143d4 <net::netif_set_netmask(net::ip_addr)>
 8008306:	4638      	mov	r0, r7
 8008308:	f00c f878 	bl	80143fc <net::netif_set_gw(net::ip_addr)>
 800830c:	4630      	mov	r0, r6
 800830e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008312:	f00b bfa5 	b.w	8014260 <net::net_set_primary_ip(net::ip_addr)>
 8008316:	f023 0301 	bic.w	r3, r3, #1
 800831a:	76ab      	strb	r3, [r5, #26]
 800831c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008320:	20002954 	andcs	r2, r0, r4, asr r9

08008324 <net::tcp_init()>:
 8008324:	4a07      	ldr	r2, [pc, #28]	@ (8008344 <net::tcp_init()+0x20>)
 8008326:	4908      	ldr	r1, [pc, #32]	@ (8008348 <net::tcp_init()+0x24>)
 8008328:	2306      	movs	r3, #6
 800832a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800832e:	f802 0b01 	strb.w	r0, [r2], #1
 8008332:	3b01      	subs	r3, #1
 8008334:	d1f9      	bne.n	800832a <net::tcp_init()+0x6>
 8008336:	4b05      	ldr	r3, [pc, #20]	@ (800834c <net::tcp_init()+0x28>)
 8008338:	4905      	ldr	r1, [pc, #20]	@ (8008350 <net::tcp_init()+0x2c>)
 800833a:	4a06      	ldr	r2, [pc, #24]	@ (8008354 <net::tcp_init()+0x30>)
 800833c:	60d9      	str	r1, [r3, #12]
 800833e:	615a      	str	r2, [r3, #20]
 8008340:	4770      	bx	lr
 8008342:	bf00      	nop
 8008344:	100083b6 			@ <UNDEFINED> instruction: 0x100083b6
 8008348:	20002968 	andcs	r2, r0, r8, ror #18
 800834c:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8008350:	00450008 	subeq	r0, r5, r8
 8008354:	06400040 	strbeq	r0, [r0], -r0, asr #32

08008358 <net::udp_init()>:
 8008358:	490b      	ldr	r1, [pc, #44]	@ (8008388 <net::udp_init()+0x30>)
 800835a:	4b0c      	ldr	r3, [pc, #48]	@ (800838c <net::udp_init()+0x34>)
 800835c:	4a0c      	ldr	r2, [pc, #48]	@ (8008390 <net::udp_init()+0x38>)
 800835e:	b510      	push	{r4, lr}
 8008360:	205e      	movs	r0, #94	@ 0x5e
 8008362:	2401      	movs	r4, #1
 8008364:	800c      	strh	r4, [r1, #0]
 8008366:	7088      	strb	r0, [r1, #2]
 8008368:	2106      	movs	r1, #6
 800836a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800836e:	f803 0b01 	strb.w	r0, [r3], #1
 8008372:	3901      	subs	r1, #1
 8008374:	d1f9      	bne.n	800836a <net::udp_init()+0x12>
 8008376:	4807      	ldr	r0, [pc, #28]	@ (8008394 <net::udp_init()+0x3c>)
 8008378:	4a07      	ldr	r2, [pc, #28]	@ (8008398 <net::udp_init()+0x40>)
 800837a:	4b08      	ldr	r3, [pc, #32]	@ (800839c <net::udp_init()+0x44>)
 800837c:	60c2      	str	r2, [r0, #12]
 800837e:	6143      	str	r3, [r0, #20]
 8008380:	f00c fade 	bl	8014940 <net::udp_set_ip()>
 8008384:	8501      	strh	r1, [r0, #40]	@ 0x28
 8008386:	bd10      	pop	{r4, pc}
 8008388:	100096a8 	andne	r9, r0, r8, lsr #13
 800838c:	100096ba 			@ <UNDEFINED> instruction: 0x100096ba
 8008390:	20002968 	andcs	r2, r0, r8, ror #18
 8008394:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8008398:	00450008 	subeq	r0, r5, r8
 800839c:	11400040 	cmpne	r0, r0, asr #32

080083a0 <emac_config()>:
 80083a0:	b508      	push	{r3, lr}
 80083a2:	480f      	ldr	r0, [pc, #60]	@ (80083e0 <emac_config()+0x40>)
 80083a4:	f011 feed 	bl	801a182 <puts>
 80083a8:	f00c fe8e 	bl	80150c8 <enet_gpio_config()>
 80083ac:	f640 4019 	movw	r0, #3097	@ 0xc19
 80083b0:	f010 f906 	bl	80185c0 <rcu_periph_clock_enable>
 80083b4:	f640 401a 	movw	r0, #3098	@ 0xc1a
 80083b8:	f010 f902 	bl	80185c0 <rcu_periph_clock_enable>
 80083bc:	f640 401b 	movw	r0, #3099	@ 0xc1b
 80083c0:	f010 f8fe 	bl	80185c0 <rcu_periph_clock_enable>
 80083c4:	f010 f82e 	bl	8018424 <enet_deinit>
 80083c8:	f00f fdc8 	bl	8017f5c <enet_software_reset>
 80083cc:	2001      	movs	r0, #1
 80083ce:	f00c fe11 	bl	8014ff4 <net::phy_config(unsigned long)>
 80083d2:	b920      	cbnz	r0, 80083de <emac_config()+0x3e>
 80083d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083d8:	4802      	ldr	r0, [pc, #8]	@ (80083e4 <emac_config()+0x44>)
 80083da:	f00f bbd9 	b.w	8017b90 <console_error>
 80083de:	bd08      	pop	{r3, pc}
 80083e0:	0801b4c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, ip, sp, pc}
 80083e4:	0801b4cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, ip, sp, pc}

080083e8 <emac_start(unsigned char*, net::Link&)>:
 80083e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80083ea:	466c      	mov	r4, sp
 80083ec:	4605      	mov	r5, r0
 80083ee:	460e      	mov	r6, r1
 80083f0:	2001      	movs	r0, #1
 80083f2:	4621      	mov	r1, r4
 80083f4:	f00d fa5e 	bl	80158b4 <net::phy_start(unsigned long, net::PhyStatus&)>
 80083f8:	9b00      	ldr	r3, [sp, #0]
 80083fa:	6033      	str	r3, [r6, #0]
 80083fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8008400:	f00c fda4 	bl	8014f4c <emac_adjust_link(net::PhyStatus)>
 8008404:	4628      	mov	r0, r5
 8008406:	f010 fd8f 	bl	8018f28 <mac_address_get(unsigned char*)>
 800840a:	4629      	mov	r1, r5
 800840c:	2000      	movs	r0, #0
 800840e:	f00f fe07 	bl	8018020 <enet_mac_address_set>
 8008412:	f44f 00e0 	mov.w	r0, #7340032	@ 0x700000
 8008416:	f00f fdb5 	bl	8017f84 <enet_descriptors_chain_init>
 800841a:	f44f 2060 	mov.w	r0, #917504	@ 0xe0000
 800841e:	f00f fdb1 	bl	8017f84 <enet_descriptors_chain_init>
 8008422:	4d08      	ldr	r5, [pc, #32]	@ (8008444 <emac_start(unsigned char*, net::Link&)+0x5c>)
 8008424:	2400      	movs	r4, #0
 8008426:	4628      	mov	r0, r5
 8008428:	f44f 0140 	mov.w	r1, #12582912	@ 0xc00000
 800842c:	3401      	adds	r4, #1
 800842e:	f00f fdf1 	bl	8018014 <enet_transmit_checksum_config>
 8008432:	2c04      	cmp	r4, #4
 8008434:	f105 0510 	add.w	r5, r5, #16
 8008438:	d1f5      	bne.n	8008426 <emac_start(unsigned char*, net::Link&)+0x3e>
 800843a:	f00f ffad 	bl	8018398 <enet_enable>
 800843e:	b004      	add	sp, #16
 8008440:	bd70      	pop	{r4, r5, r6, pc}
 8008442:	bf00      	nop
 8008444:	2000a26c 	andcs	sl, r0, ip, ror #4

08008448 <net::arp_init()>:
 8008448:	b410      	push	{r4}
 800844a:	4b3e      	ldr	r3, [pc, #248]	@ (8008544 <net::arp_init()+0xfc>)
 800844c:	b083      	sub	sp, #12
 800844e:	2210      	movs	r2, #16
 8008450:	2000      	movs	r0, #0
 8008452:	f103 0118 	add.w	r1, r3, #24
 8008456:	f803 0b01 	strb.w	r0, [r3], #1
 800845a:	428b      	cmp	r3, r1
 800845c:	d1fb      	bne.n	8008456 <net::arp_init()+0xe>
 800845e:	3a01      	subs	r2, #1
 8008460:	d1f7      	bne.n	8008452 <net::arp_init()+0xa>
 8008462:	4a39      	ldr	r2, [pc, #228]	@ (8008548 <net::arp_init()+0x100>)
 8008464:	4939      	ldr	r1, [pc, #228]	@ (800854c <net::arp_init()+0x104>)
 8008466:	2306      	movs	r3, #6
 8008468:	f811 0b01 	ldrb.w	r0, [r1], #1
 800846c:	f802 0b01 	strb.w	r0, [r2], #1
 8008470:	3b01      	subs	r3, #1
 8008472:	d1f9      	bne.n	8008468 <net::arp_init()+0x20>
 8008474:	4936      	ldr	r1, [pc, #216]	@ (8008550 <net::arp_init()+0x108>)
 8008476:	2206      	movs	r2, #6
 8008478:	460b      	mov	r3, r1
 800847a:	20ff      	movs	r0, #255	@ 0xff
 800847c:	3a01      	subs	r2, #1
 800847e:	f801 0b01 	strb.w	r0, [r1], #1
 8008482:	d1fb      	bne.n	800847c <net::arp_init()+0x34>
 8008484:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8008488:	4c32      	ldr	r4, [pc, #200]	@ (8008554 <net::arp_init()+0x10c>)
 800848a:	4933      	ldr	r1, [pc, #204]	@ (8008558 <net::arp_init()+0x110>)
 800848c:	8298      	strh	r0, [r3, #20]
 800848e:	4a33      	ldr	r2, [pc, #204]	@ (800855c <net::arp_init()+0x114>)
 8008490:	482e      	ldr	r0, [pc, #184]	@ (800854c <net::arp_init()+0x104>)
 8008492:	e9c3 4103 	strd	r4, r1, [r3, #12]
 8008496:	2306      	movs	r3, #6
 8008498:	f810 4b01 	ldrb.w	r4, [r0], #1
 800849c:	f802 4b01 	strb.w	r4, [r2], #1
 80084a0:	3b01      	subs	r3, #1
 80084a2:	d1f9      	bne.n	8008498 <net::arp_init()+0x50>
 80084a4:	4b2e      	ldr	r3, [pc, #184]	@ (8008560 <net::arp_init()+0x118>)
 80084a6:	4a2f      	ldr	r2, [pc, #188]	@ (8008564 <net::arp_init()+0x11c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	9301      	str	r3, [sp, #4]
 80084ac:	a801      	add	r0, sp, #4
 80084ae:	2304      	movs	r3, #4
 80084b0:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084b4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80084b8:	3b01      	subs	r3, #1
 80084ba:	d1f9      	bne.n	80084b0 <net::arp_init()+0x68>
 80084bc:	482a      	ldr	r0, [pc, #168]	@ (8008568 <net::arp_init()+0x120>)
 80084be:	2206      	movs	r2, #6
 80084c0:	3a01      	subs	r2, #1
 80084c2:	f800 3b01 	strb.w	r3, [r0], #1
 80084c6:	d1fb      	bne.n	80084c0 <net::arp_init()+0x78>
 80084c8:	4a28      	ldr	r2, [pc, #160]	@ (800856c <net::arp_init()+0x124>)
 80084ca:	4820      	ldr	r0, [pc, #128]	@ (800854c <net::arp_init()+0x104>)
 80084cc:	2306      	movs	r3, #6
 80084ce:	f810 4b01 	ldrb.w	r4, [r0], #1
 80084d2:	f802 4b01 	strb.w	r4, [r2], #1
 80084d6:	3b01      	subs	r3, #1
 80084d8:	d1f9      	bne.n	80084ce <net::arp_init()+0x86>
 80084da:	4b25      	ldr	r3, [pc, #148]	@ (8008570 <net::arp_init()+0x128>)
 80084dc:	481d      	ldr	r0, [pc, #116]	@ (8008554 <net::arp_init()+0x10c>)
 80084de:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80084e2:	e9c3 0103 	strd	r0, r1, [r3, #12]
 80084e6:	4919      	ldr	r1, [pc, #100]	@ (800854c <net::arp_init()+0x104>)
 80084e8:	829a      	strh	r2, [r3, #20]
 80084ea:	2206      	movs	r2, #6
 80084ec:	3316      	adds	r3, #22
 80084ee:	f811 0b01 	ldrb.w	r0, [r1], #1
 80084f2:	f803 0b01 	strb.w	r0, [r3], #1
 80084f6:	3a01      	subs	r2, #1
 80084f8:	d1f9      	bne.n	80084ee <net::arp_init()+0xa6>
 80084fa:	4b1e      	ldr	r3, [pc, #120]	@ (8008574 <net::arp_init()+0x12c>)
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8008502:	2b07      	cmp	r3, #7
 8008504:	d905      	bls.n	8008512 <net::arp_init()+0xca>
 8008506:	481c      	ldr	r0, [pc, #112]	@ (8008578 <net::arp_init()+0x130>)
 8008508:	b003      	add	sp, #12
 800850a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800850e:	f00f bb3f 	b.w	8017b90 <console_error>
 8008512:	f8d2 00a4 	ldr.w	r0, [r2, #164]	@ 0xa4
 8008516:	4919      	ldr	r1, [pc, #100]	@ (800857c <net::arp_init()+0x134>)
 8008518:	1c44      	adds	r4, r0, #1
 800851a:	f8c2 40a4 	str.w	r4, [r2, #164]	@ 0xa4
 800851e:	6809      	ldr	r1, [r1, #0]
 8008520:	1c5c      	adds	r4, r3, #1
 8008522:	f8c2 40a0 	str.w	r4, [r2, #160]	@ 0xa0
 8008526:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800852a:	4a15      	ldr	r2, [pc, #84]	@ (8008580 <net::arp_init()+0x138>)
 800852c:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8008530:	f44f 747a 	mov.w	r4, #1000	@ 0x3e8
 8008534:	e9c3 1408 	strd	r1, r4, [r3, #32]
 8008538:	e9c3 020a 	strd	r0, r2, [r3, #40]	@ 0x28
 800853c:	b003      	add	sp, #12
 800853e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	1000cb10 	andne	ip, r0, r0, lsl fp
 8008548:	200029c6 	andcs	r2, r0, r6, asr #19
 800854c:	20002968 	andcs	r2, r0, r8, ror #18
 8008550:	200029c0 	andcs	r2, r0, r0, asr #19
 8008554:	01000608 	tsteq	r0, r8, lsl #12
 8008558:	04060008 	streq	r0, [r6], #-8
 800855c:	200029d6 	ldrdcs	r2, [r0], -r6
 8008560:	20002954 	andcs	r2, r0, r4, asr r9
 8008564:	200029db 	ldrdcs	r2, [r0], -fp
 8008568:	200029e0 	andcs	r2, r0, r0, ror #19
 800856c:	2000298a 	andcs	r2, r0, sl, lsl #19
 8008570:	20002984 	andcs	r2, r0, r4, lsl #19
 8008574:	20002b04 	andcs	r2, r0, r4, lsl #22
 8008578:	0801bfb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 800857c:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8008580:	0801569d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sl, ip, lr}

08008584 <net::ip_init()>:
 8008584:	b508      	push	{r3, lr}
 8008586:	f7ff fee7 	bl	8008358 <net::udp_init()>
 800858a:	f7ff fe0f 	bl	80081ac <net::igmp_init()>
 800858e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008592:	f7ff bec7 	b.w	8008324 <net::tcp_init()>
	...

08008598 <console_init()>:
 8008598:	b508      	push	{r3, lr}
 800859a:	f011 f82d 	bl	80195f8 <uart0_init>
 800859e:	4804      	ldr	r0, [pc, #16]	@ (80085b0 <console_init()+0x18>)
 80085a0:	f011 f854 	bl	801964c <uart0_puts>
 80085a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80085a8:	4802      	ldr	r0, [pc, #8]	@ (80085b4 <console_init()+0x1c>)
 80085aa:	f011 b84f 	b.w	801964c <uart0_puts>
 80085ae:	bf00      	nop
 80085b0:	0801b81a 	stmdaeq	r1, {r1, r3, r4, fp, ip, sp, pc}
 80085b4:	0801b838 	stmdaeq	r1, {r3, r4, r5, fp, ip, sp, pc}

080085b8 <net::igmp_handle(t_igmp*)>:
 80085b8:	7b83      	ldrb	r3, [r0, #14]
 80085ba:	2b45      	cmp	r3, #69	@ 0x45
 80085bc:	d000      	beq.n	80085c0 <net::igmp_handle(t_igmp*)+0x8>
 80085be:	4770      	bx	lr
 80085c0:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 80085c4:	2b11      	cmp	r3, #17
 80085c6:	d1fa      	bne.n	80085be <net::igmp_handle(t_igmp*)+0x6>
 80085c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085cc:	b082      	sub	sp, #8
 80085ce:	4b23      	ldr	r3, [pc, #140]	@ (800865c <net::igmp_handle(t_igmp*)+0xa4>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f100 081d 	add.w	r8, r0, #29
 80085d6:	466a      	mov	r2, sp
 80085d8:	f100 0421 	add.w	r4, r0, #33	@ 0x21
 80085dc:	4643      	mov	r3, r8
 80085de:	e001      	b.n	80085e4 <net::igmp_handle(t_igmp*)+0x2c>
 80085e0:	42a3      	cmp	r3, r4
 80085e2:	d038      	beq.n	8008656 <net::igmp_handle(t_igmp*)+0x9e>
 80085e4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 80085e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085ec:	428d      	cmp	r5, r1
 80085ee:	d0f7      	beq.n	80085e0 <net::igmp_handle(t_igmp*)+0x28>
 80085f0:	1a6d      	subs	r5, r5, r1
 80085f2:	4b1b      	ldr	r3, [pc, #108]	@ (8008660 <net::igmp_handle(t_igmp*)+0xa8>)
 80085f4:	2701      	movs	r7, #1
 80085f6:	f503 7690 	add.w	r6, r3, #288	@ 0x120
 80085fa:	e00a      	b.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 80085fc:	f803 7c02 	strb.w	r7, [r3, #-2]
 8008600:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 8008604:	0852      	lsrs	r2, r2, #1
 8008606:	3201      	adds	r2, #1
 8008608:	f823 2c04 	strh.w	r2, [r3, #-4]
 800860c:	3308      	adds	r3, #8
 800860e:	42b3      	cmp	r3, r6
 8008610:	d012      	beq.n	8008638 <net::igmp_handle(t_igmp*)+0x80>
 8008612:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8008616:	2a00      	cmp	r2, #0
 8008618:	d0f8      	beq.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 800861a:	9201      	str	r2, [sp, #4]
 800861c:	b97d      	cbnz	r5, 800863e <net::igmp_handle(t_igmp*)+0x86>
 800861e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8008622:	2a01      	cmp	r2, #1
 8008624:	d1ea      	bne.n	80085fc <net::igmp_handle(t_igmp*)+0x44>
 8008626:	f890 2023 	ldrb.w	r2, [r0, #35]	@ 0x23
 800862a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800862e:	428a      	cmp	r2, r1
 8008630:	dbe8      	blt.n	8008604 <net::igmp_handle(t_igmp*)+0x4c>
 8008632:	3308      	adds	r3, #8
 8008634:	42b3      	cmp	r3, r6
 8008636:	d1ec      	bne.n	8008612 <net::igmp_handle(t_igmp*)+0x5a>
 8008638:	b002      	add	sp, #8
 800863a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800863e:	a901      	add	r1, sp, #4
 8008640:	4642      	mov	r2, r8
 8008642:	e001      	b.n	8008648 <net::igmp_handle(t_igmp*)+0x90>
 8008644:	42a2      	cmp	r2, r4
 8008646:	d0ea      	beq.n	800861e <net::igmp_handle(t_igmp*)+0x66>
 8008648:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 800864c:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008650:	45e6      	cmp	lr, ip
 8008652:	d0f7      	beq.n	8008644 <net::igmp_handle(t_igmp*)+0x8c>
 8008654:	e7da      	b.n	800860c <net::igmp_handle(t_igmp*)+0x54>
 8008656:	2500      	movs	r5, #0
 8008658:	e7cb      	b.n	80085f2 <net::igmp_handle(t_igmp*)+0x3a>
 800865a:	bf00      	nop
 800865c:	010000e0 	smlatteq	r0, r0, r0, r0
 8008660:	10008230 	andne	r8, r0, r0, lsr r2

08008664 <net::net_handle()>:
 8008664:	b500      	push	{lr}
 8008666:	b083      	sub	sp, #12
 8008668:	a801      	add	r0, sp, #4
 800866a:	f00c fe07 	bl	801527c <emac_eth_recv(unsigned char**)>
 800866e:	2800      	cmp	r0, #0
 8008670:	dc02      	bgt.n	8008678 <net::net_handle()+0x14>
 8008672:	b003      	add	sp, #12
 8008674:	f85d fb04 	ldr.w	pc, [sp], #4
 8008678:	9801      	ldr	r0, [sp, #4]
 800867a:	8983      	ldrh	r3, [r0, #12]
 800867c:	2b08      	cmp	r3, #8
 800867e:	d007      	beq.n	8008690 <net::net_handle()+0x2c>
 8008680:	f5b3 6fc1 	cmp.w	r3, #1544	@ 0x608
 8008684:	d007      	beq.n	8008696 <net::net_handle()+0x32>
 8008686:	f00c fe0b 	bl	80152a0 <emac_free_pkt()>
 800868a:	b003      	add	sp, #12
 800868c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008690:	f000 fc06 	bl	8008ea0 <net::ip_handle(t_ip4*)>
 8008694:	e7f7      	b.n	8008686 <net::net_handle()+0x22>
 8008696:	f000 fb79 	bl	8008d8c <net::arp_handle(t_arp*)>
 800869a:	e7f4      	b.n	8008686 <net::net_handle()+0x22>

0800869c <net::tcp_run()>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	4c11      	ldr	r4, [pc, #68]	@ (80086e4 <net::tcp_run()+0x48>)
 80086a0:	b085      	sub	sp, #20
 80086a2:	2711      	movs	r7, #17
 80086a4:	f504 75f0 	add.w	r5, r4, #480	@ 0x1e0
 80086a8:	2609      	movs	r6, #9
 80086aa:	e002      	b.n	80086b2 <net::tcp_run()+0x16>
 80086ac:	3450      	adds	r4, #80	@ 0x50
 80086ae:	42ac      	cmp	r4, r5
 80086b0:	d015      	beq.n	80086de <net::tcp_run()+0x42>
 80086b2:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 80086b6:	2b07      	cmp	r3, #7
 80086b8:	d1f8      	bne.n	80086ac <net::tcp_run()+0x10>
 80086ba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086bc:	69a2      	ldr	r2, [r4, #24]
 80086be:	f88d 700c 	strb.w	r7, [sp, #12]
 80086c2:	4620      	mov	r0, r4
 80086c4:	a901      	add	r1, sp, #4
 80086c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80086ca:	f00b ff37 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 80086ce:	69a3      	ldr	r3, [r4, #24]
 80086d0:	f884 604c 	strb.w	r6, [r4, #76]	@ 0x4c
 80086d4:	3301      	adds	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	3450      	adds	r4, #80	@ 0x50
 80086da:	42ac      	cmp	r4, r5
 80086dc:	d1e9      	bne.n	80086b2 <net::tcp_run()+0x16>
 80086de:	b005      	add	sp, #20
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086e2:	bf00      	nop
 80086e4:	100089a0 	andne	r8, r0, r0, lsr #19

080086e8 <net::tcp_handle(t_tcp*)>:
 80086e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086ec:	4605      	mov	r5, r0
 80086ee:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80086f0:	8ca9      	ldrh	r1, [r5, #36]	@ 0x24
 80086f2:	4fb3      	ldr	r7, [pc, #716]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 80086f4:	f8b5 9010 	ldrh.w	r9, [r5, #16]
 80086f8:	ba49      	rev16	r1, r1
 80086fa:	ba40      	rev16	r0, r0
 80086fc:	8468      	strh	r0, [r5, #34]	@ 0x22
 80086fe:	84a9      	strh	r1, [r5, #36]	@ 0x24
 8008700:	f8b7 2d04 	ldrh.w	r2, [r7, #3332]	@ 0xd04
 8008704:	b28b      	uxth	r3, r1
 8008706:	429a      	cmp	r2, r3
 8008708:	b099      	sub	sp, #100	@ 0x64
 800870a:	d029      	beq.n	8008760 <net::tcp_handle(t_tcp*)+0x78>
 800870c:	f895 602e 	ldrb.w	r6, [r5, #46]	@ 0x2e
 8008710:	ab04      	add	r3, sp, #16
 8008712:	2400      	movs	r4, #0
 8008714:	f843 4b04 	str.w	r4, [r3], #4
 8008718:	aa18      	add	r2, sp, #96	@ 0x60
 800871a:	4293      	cmp	r3, r2
 800871c:	d1fa      	bne.n	8008714 <net::tcp_handle(t_tcp*)+0x2c>
 800871e:	f8d5 301a 	ldr.w	r3, [r5, #26]
 8008722:	f8d5 201e 	ldr.w	r2, [r5, #30]
 8008726:	f8ad 1018 	strh.w	r1, [sp, #24]
 800872a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800872e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008732:	1dab      	adds	r3, r5, #6
 8008734:	f105 040c 	add.w	r4, r5, #12
 8008738:	a907      	add	r1, sp, #28
 800873a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800873e:	f801 0b01 	strb.w	r0, [r1], #1
 8008742:	42a3      	cmp	r3, r4
 8008744:	d1f9      	bne.n	800873a <net::tcp_handle(t_tcp*)+0x52>
 8008746:	4628      	mov	r0, r5
 8008748:	f00b fed8 	bl	80144fc <net::_bswap32(t_tcp*)>
 800874c:	0932      	lsrs	r2, r6, #4
 800874e:	0092      	lsls	r2, r2, #2
 8008750:	a904      	add	r1, sp, #16
 8008752:	f00b ffdf 	bl	8014714 <net::scan_options(t_tcp*, net::tcb*, long)>
 8008756:	f00b ffa9 	bl	80146ac <net::send_reset(t_tcp*, net::tcb const*)>
 800875a:	b019      	add	sp, #100	@ 0x64
 800875c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008760:	f107 0a04 	add.w	sl, r7, #4
 8008764:	fa1f fe80 	uxth.w	lr, r0
 8008768:	4653      	mov	r3, sl
 800876a:	2400      	movs	r4, #0
 800876c:	e005      	b.n	800877a <net::tcp_handle(t_tcp*)+0x92>
 800876e:	3401      	adds	r4, #1
 8008770:	2c06      	cmp	r4, #6
 8008772:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 8008776:	f000 8088 	beq.w	800888a <net::tcp_handle(t_tcp*)+0x1a2>
 800877a:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800877e:	2a01      	cmp	r2, #1
 8008780:	d0f5      	beq.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008782:	88da      	ldrh	r2, [r3, #6]
 8008784:	4572      	cmp	r2, lr
 8008786:	d1f2      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 8008788:	1e5a      	subs	r2, r3, #1
 800878a:	f105 0119 	add.w	r1, r5, #25
 800878e:	f103 0c03 	add.w	ip, r3, #3
 8008792:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8008796:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800879a:	4286      	cmp	r6, r0
 800879c:	d1e7      	bne.n	800876e <net::tcp_handle(t_tcp*)+0x86>
 800879e:	4562      	cmp	r2, ip
 80087a0:	d1f7      	bne.n	8008792 <net::tcp_handle(t_tcp*)+0xaa>
 80087a2:	f895 802e 	ldrb.w	r8, [r5, #46]	@ 0x2e
 80087a6:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80087aa:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80087ae:	4628      	mov	r0, r5
 80087b0:	9300      	str	r3, [sp, #0]
 80087b2:	f00b fea3 	bl	80144fc <net::_bswap32(t_tcp*)>
 80087b6:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80087b8:	9a00      	ldr	r2, [sp, #0]
 80087ba:	ba5b      	rev16	r3, r3
 80087bc:	862b      	strh	r3, [r5, #48]	@ 0x30
 80087be:	b29b      	uxth	r3, r3
 80087c0:	9303      	str	r3, [sp, #12]
 80087c2:	8eab      	ldrh	r3, [r5, #52]	@ 0x34
 80087c4:	ba5b      	rev16	r3, r3
 80087c6:	86ab      	strh	r3, [r5, #52]	@ 0x34
 80087c8:	f105 032a 	add.w	r3, r5, #42	@ 0x2a
 80087cc:	079b      	lsls	r3, r3, #30
 80087ce:	bf0c      	ite	eq
 80087d0:	f8d5 302a 	ldreq.w	r3, [r5, #42]	@ 0x2a
 80087d4:	f8d5 302a 	ldrne.w	r3, [r5, #42]	@ 0x2a
 80087d8:	9301      	str	r3, [sp, #4]
 80087da:	f105 0326 	add.w	r3, r5, #38	@ 0x26
 80087de:	079e      	lsls	r6, r3, #30
 80087e0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 80087e4:	eb07 1603 	add.w	r6, r7, r3, lsl #4
 80087e8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80087ec:	4631      	mov	r1, r6
 80087ee:	ea4f 0384 	mov.w	r3, r4, lsl #2
 80087f2:	bf0c      	ite	eq
 80087f4:	f8d5 b026 	ldreq.w	fp, [r5, #38]	@ 0x26
 80087f8:	f8d5 b026 	ldrne.w	fp, [r5, #38]	@ 0x26
 80087fc:	9302      	str	r3, [sp, #8]
 80087fe:	f00b ff89 	bl	8014714 <net::scan_options(t_tcp*, net::tcb*, long)>
 8008802:	f896 204c 	ldrb.w	r2, [r6, #76]	@ 0x4c
 8008806:	2a01      	cmp	r2, #1
 8008808:	d04c      	beq.n	80088a4 <net::tcp_handle(t_tcp*)+0x1bc>
 800880a:	1ed3      	subs	r3, r2, #3
 800880c:	2b07      	cmp	r3, #7
 800880e:	d8a4      	bhi.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008810:	9b00      	ldr	r3, [sp, #0]
 8008812:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 8008816:	33ec      	adds	r3, #236	@ 0xec
 8008818:	fa99 f999 	rev16.w	r9, r9
 800881c:	fa13 f989 	uxtah	r9, r3, r9
 8008820:	f8b6 3044 	ldrh.w	r3, [r6, #68]	@ 0x44
 8008824:	fa1f f989 	uxth.w	r9, r9
 8008828:	2b00      	cmp	r3, #0
 800882a:	d077      	beq.n	800891c <net::tcp_handle(t_tcp*)+0x234>
 800882c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 800882e:	eba1 000b 	sub.w	r0, r1, fp
 8008832:	f1b9 0f00 	cmp.w	r9, #0
 8008836:	f040 8085 	bne.w	8008944 <net::tcp_handle(t_tcp*)+0x25c>
 800883a:	2800      	cmp	r0, #0
 800883c:	f340 80b8 	ble.w	80089b0 <net::tcp_handle(t_tcp*)+0x2c8>
 8008840:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 8008844:	f013 0f04 	tst.w	r3, #4
 8008848:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800884c:	4423      	add	r3, r4
 800884e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008852:	d06a      	beq.n	800892a <net::tcp_handle(t_tcp*)+0x242>
 8008854:	891d      	ldrh	r5, [r3, #8]
 8008856:	2200      	movs	r2, #0
 8008858:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 800885c:	f846 2b04 	str.w	r2, [r6], #4
 8008860:	42b3      	cmp	r3, r6
 8008862:	d1fb      	bne.n	800885c <net::tcp_handle(t_tcp*)+0x174>
 8008864:	9b02      	ldr	r3, [sp, #8]
 8008866:	4a57      	ldr	r2, [pc, #348]	@ (80089c4 <net::tcp_handle(t_tcp*)+0x2dc>)
 8008868:	4423      	add	r3, r4
 800886a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800886e:	6812      	ldr	r2, [r2, #0]
 8008870:	811d      	strh	r5, [r3, #8]
 8008872:	f640 3018 	movw	r0, #2840	@ 0xb18
 8008876:	2101      	movs	r1, #1
 8008878:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800887c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800887e:	f8a3 0044 	strh.w	r0, [r3, #68]	@ 0x44
 8008882:	629a      	str	r2, [r3, #40]	@ 0x28
 8008884:	f883 104c 	strb.w	r1, [r3, #76]	@ 0x4c
 8008888:	e767      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800888a:	4b4d      	ldr	r3, [pc, #308]	@ (80089c0 <net::tcp_handle(t_tcp*)+0x2d8>)
 800888c:	2400      	movs	r4, #0
 800888e:	e002      	b.n	8008896 <net::tcp_handle(t_tcp*)+0x1ae>
 8008890:	3401      	adds	r4, #1
 8008892:	2c06      	cmp	r4, #6
 8008894:	d085      	beq.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 8008896:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
 800889a:	2a01      	cmp	r2, #1
 800889c:	f103 0350 	add.w	r3, r3, #80	@ 0x50
 80088a0:	d1f6      	bne.n	8008890 <net::tcp_handle(t_tcp*)+0x1a8>
 80088a2:	e77e      	b.n	80087a2 <net::tcp_handle(t_tcp*)+0xba>
 80088a4:	f8d5 201e 	ldr.w	r2, [r5, #30]
 80088a8:	f847 2008 	str.w	r2, [r7, r8]
 80088ac:	8c69      	ldrh	r1, [r5, #34]	@ 0x22
 80088ae:	8171      	strh	r1, [r6, #10]
 80088b0:	f8d5 101a 	ldr.w	r1, [r5, #26]
 80088b4:	f84a 1008 	str.w	r1, [sl, r8]
 80088b8:	f108 020c 	add.w	r2, r8, #12
 80088bc:	443a      	add	r2, r7
 80088be:	1dab      	adds	r3, r5, #6
 80088c0:	f105 000c 	add.w	r0, r5, #12
 80088c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 80088c8:	f802 1b01 	strb.w	r1, [r2], #1
 80088cc:	4283      	cmp	r3, r0
 80088ce:	d1f9      	bne.n	80088c4 <net::tcp_handle(t_tcp*)+0x1dc>
 80088d0:	f895 302f 	ldrb.w	r3, [r5, #47]	@ 0x2f
 80088d4:	0758      	lsls	r0, r3, #29
 80088d6:	f53f af40 	bmi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088da:	06d9      	lsls	r1, r3, #27
 80088dc:	f100 8135 	bmi.w	8008b4a <net::tcp_handle(t_tcp*)+0x462>
 80088e0:	079a      	lsls	r2, r3, #30
 80088e2:	f57f af3a 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 80088e6:	9b02      	ldr	r3, [sp, #8]
 80088e8:	4423      	add	r3, r4
 80088ea:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 80088ee:	2212      	movs	r2, #18
 80088f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088f2:	9104      	str	r1, [sp, #16]
 80088f4:	f10b 0301 	add.w	r3, fp, #1
 80088f8:	4630      	mov	r0, r6
 80088fa:	a904      	add	r1, sp, #16
 80088fc:	6423      	str	r3, [r4, #64]	@ 0x40
 80088fe:	9305      	str	r3, [sp, #20]
 8008900:	f88d 2018 	strb.w	r2, [sp, #24]
 8008904:	f8c4 b048 	str.w	fp, [r4, #72]	@ 0x48
 8008908:	f00b fe18 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 800890c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800890e:	6163      	str	r3, [r4, #20]
 8008910:	2203      	movs	r2, #3
 8008912:	3301      	adds	r3, #1
 8008914:	61a3      	str	r3, [r4, #24]
 8008916:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
 800891a:	e71e      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 800891c:	f1b9 0f00 	cmp.w	r9, #0
 8008920:	d18e      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008922:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8008924:	455b      	cmp	r3, fp
 8008926:	d18b      	bne.n	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008928:	e01f      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 800892a:	6999      	ldr	r1, [r3, #24]
 800892c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800892e:	9305      	str	r3, [sp, #20]
 8008930:	2210      	movs	r2, #16
 8008932:	9104      	str	r1, [sp, #16]
 8008934:	4630      	mov	r0, r6
 8008936:	eb0d 0102 	add.w	r1, sp, r2
 800893a:	f88d 2018 	strb.w	r2, [sp, #24]
 800893e:	f00b fdfd 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008942:	e70a      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008944:	2800      	cmp	r0, #0
 8008946:	440b      	add	r3, r1
 8008948:	dd0b      	ble.n	8008962 <net::tcp_handle(t_tcp*)+0x27a>
 800894a:	f10b 30ff 	add.w	r0, fp, #4294967295	@ 0xffffffff
 800894e:	4448      	add	r0, r9
 8008950:	1a09      	subs	r1, r1, r0
 8008952:	2900      	cmp	r1, #0
 8008954:	f73f af74 	bgt.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008958:	1ac0      	subs	r0, r0, r3
 800895a:	2800      	cmp	r0, #0
 800895c:	f6bf af70 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 8008960:	e003      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 8008962:	ebab 0003 	sub.w	r0, fp, r3
 8008966:	2800      	cmp	r0, #0
 8008968:	daef      	bge.n	800894a <net::tcp_handle(t_tcp*)+0x262>
 800896a:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800896e:	f011 0004 	ands.w	r0, r1, #4
 8008972:	f040 80f1 	bne.w	8008b58 <net::tcp_handle(t_tcp*)+0x470>
 8008976:	078b      	lsls	r3, r1, #30
 8008978:	d508      	bpl.n	800898c <net::tcp_handle(t_tcp*)+0x2a4>
 800897a:	2a03      	cmp	r2, #3
 800897c:	f000 811f 	beq.w	8008bbe <net::tcp_handle(t_tcp*)+0x4d6>
 8008980:	4631      	mov	r1, r6
 8008982:	4628      	mov	r0, r5
 8008984:	f00b fe92 	bl	80146ac <net::send_reset(t_tcp*, net::tcb const*)>
 8008988:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 800898c:	06c8      	lsls	r0, r1, #27
 800898e:	f57f aee4 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008992:	00a3      	lsls	r3, r4, #2
 8008994:	4423      	add	r3, r4
 8008996:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 800899a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 800899e:	1eda      	subs	r2, r3, #3
 80089a0:	2a07      	cmp	r2, #7
 80089a2:	d87f      	bhi.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 80089a4:	e8df f002 	tbb	[pc, r2]
 80089a8:	10101066 	andsne	r1, r0, r6, rrx
 80089ac:	b8a71010 	stmialt	r7!, {r4, ip}
 80089b0:	440b      	add	r3, r1
 80089b2:	ebab 0303 	sub.w	r3, fp, r3
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	f6bf af42 	bge.w	8008840 <net::tcp_handle(t_tcp*)+0x158>
 80089bc:	e7d5      	b.n	800896a <net::tcp_handle(t_tcp*)+0x282>
 80089be:	bf00      	nop
 80089c0:	100089a0 	andne	r8, r0, r0, lsr #19
 80089c4:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80089c8:	00a2      	lsls	r2, r4, #2
 80089ca:	1911      	adds	r1, r2, r4
 80089cc:	eb07 1101 	add.w	r1, r7, r1, lsl #4
 80089d0:	e9d1 c205 	ldrd	ip, r2, [r1, #20]
 80089d4:	9801      	ldr	r0, [sp, #4]
 80089d6:	ebbc 0e00 	subs.w	lr, ip, r0
 80089da:	f100 80fc 	bmi.w	8008bd6 <net::tcp_handle(t_tcp*)+0x4ee>
 80089de:	9801      	ldr	r0, [sp, #4]
 80089e0:	eba0 0c0c 	sub.w	ip, r0, ip
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	f340 810d 	ble.w	8008c06 <net::tcp_handle(t_tcp*)+0x51e>
 80089ec:	9901      	ldr	r1, [sp, #4]
 80089ee:	1a89      	subs	r1, r1, r2
 80089f0:	2900      	cmp	r1, #0
 80089f2:	f300 80fa 	bgt.w	8008bea <net::tcp_handle(t_tcp*)+0x502>
 80089f6:	3b04      	subs	r3, #4
 80089f8:	2b02      	cmp	r3, #2
 80089fa:	d856      	bhi.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 80089fc:	f1b9 0f00 	cmp.w	r9, #0
 8008a00:	d053      	beq.n	8008aaa <net::tcp_handle(t_tcp*)+0x3c2>
 8008a02:	00a3      	lsls	r3, r4, #2
 8008a04:	4423      	add	r3, r4
 8008a06:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a0a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8008a0c:	455a      	cmp	r2, fp
 8008a0e:	f040 816c 	bne.w	8008cea <net::tcp_handle(t_tcp*)+0x602>
 8008a12:	f8b7 01e0 	ldrh.w	r0, [r7, #480]	@ 0x1e0
 8008a16:	9900      	ldr	r1, [sp, #0]
 8008a18:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008a1c:	fb00 f303 	mul.w	r3, r0, r3
 8008a20:	18fa      	adds	r2, r7, r3
 8008a22:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8008a26:	f8a2 4772 	strh.w	r4, [r2, #1906]	@ 0x772
 8008a2a:	19da      	adds	r2, r3, r7
 8008a2c:	f105 0322 	add.w	r3, r5, #34	@ 0x22
 8008a30:	4419      	add	r1, r3
 8008a32:	079b      	lsls	r3, r3, #30
 8008a34:	4688      	mov	r8, r1
 8008a36:	f040 8122 	bne.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a3a:	f1b9 0f03 	cmp.w	r9, #3
 8008a3e:	f240 811e 	bls.w	8008c7e <net::tcp_handle(t_tcp*)+0x596>
 8008a42:	f1a9 0304 	sub.w	r3, r9, #4
 8008a46:	089b      	lsrs	r3, r3, #2
 8008a48:	1c59      	adds	r1, r3, #1
 8008a4a:	ea4f 0a81 	mov.w	sl, r1, lsl #2
 8008a4e:	4694      	mov	ip, r2
 8008a50:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8008a54:	f858 eb04 	ldr.w	lr, [r8], #4
 8008a58:	f84c eb04 	str.w	lr, [ip], #4
 8008a5c:	4588      	cmp	r8, r1
 8008a5e:	d1f9      	bne.n	8008a54 <net::tcp_handle(t_tcp*)+0x36c>
 8008a60:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 8008a64:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8008a68:	2b04      	cmp	r3, #4
 8008a6a:	f000 8112 	beq.w	8008c92 <net::tcp_handle(t_tcp*)+0x5aa>
 8008a6e:	4452      	add	r2, sl
 8008a70:	3b05      	subs	r3, #5
 8008a72:	e106      	b.n	8008c82 <net::tcp_handle(t_tcp*)+0x59a>
 8008a74:	00a3      	lsls	r3, r4, #2
 8008a76:	4423      	add	r3, r4
 8008a78:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a7c:	9801      	ldr	r0, [sp, #4]
 8008a7e:	695a      	ldr	r2, [r3, #20]
 8008a80:	1a11      	subs	r1, r2, r0
 8008a82:	2900      	cmp	r1, #0
 8008a84:	699a      	ldr	r2, [r3, #24]
 8008a86:	f340 80eb 	ble.w	8008c60 <net::tcp_handle(t_tcp*)+0x578>
 8008a8a:	4631      	mov	r1, r6
 8008a8c:	4628      	mov	r0, r5
 8008a8e:	f00b fe0d 	bl	80146ac <net::send_reset(t_tcp*, net::tcb const*)>
 8008a92:	00a3      	lsls	r3, r4, #2
 8008a94:	4423      	add	r3, r4
 8008a96:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008a9a:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8008a9e:	1f1a      	subs	r2, r3, #4
 8008aa0:	2a02      	cmp	r2, #2
 8008aa2:	d9ab      	bls.n	80089fc <net::tcp_handle(t_tcp*)+0x314>
 8008aa4:	2b02      	cmp	r3, #2
 8008aa6:	f67f ae58 	bls.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aaa:	f895 102f 	ldrb.w	r1, [r5, #47]	@ 0x2f
 8008aae:	07ca      	lsls	r2, r1, #31
 8008ab0:	f57f ae53 	bpl.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	4423      	add	r3, r4
 8008ab8:	eb07 1403 	add.w	r4, r7, r3, lsl #4
 8008abc:	4630      	mov	r0, r6
 8008abe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ac0:	69a2      	ldr	r2, [r4, #24]
 8008ac2:	9204      	str	r2, [sp, #16]
 8008ac4:	2210      	movs	r2, #16
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	eb0d 0102 	add.w	r1, sp, r2
 8008acc:	6423      	str	r3, [r4, #64]	@ 0x40
 8008ace:	9305      	str	r3, [sp, #20]
 8008ad0:	f88d 2018 	strb.w	r2, [sp, #24]
 8008ad4:	f00b fd32 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008ad8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 8008adc:	2b05      	cmp	r3, #5
 8008ade:	f000 80b9 	beq.w	8008c54 <net::tcp_handle(t_tcp*)+0x56c>
 8008ae2:	f200 80b2 	bhi.w	8008c4a <net::tcp_handle(t_tcp*)+0x562>
 8008ae6:	3b03      	subs	r3, #3
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	f63f ae36 	bhi.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008aee:	2307      	movs	r3, #7
 8008af0:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 8008af4:	e631      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008af6:	00a3      	lsls	r3, r4, #2
 8008af8:	4423      	add	r3, r4
 8008afa:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008afe:	9801      	ldr	r0, [sp, #4]
 8008b00:	699a      	ldr	r2, [r3, #24]
 8008b02:	4282      	cmp	r2, r0
 8008b04:	d1d3      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b06:	891d      	ldrh	r5, [r3, #8]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b0e:	f846 2b04 	str.w	r2, [r6], #4
 8008b12:	42b3      	cmp	r3, r6
 8008b14:	d1fb      	bne.n	8008b0e <net::tcp_handle(t_tcp*)+0x426>
 8008b16:	e6a5      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008b18:	00a3      	lsls	r3, r4, #2
 8008b1a:	eb03 0a04 	add.w	sl, r3, r4
 8008b1e:	eb07 1a0a 	add.w	sl, r7, sl, lsl #4
 8008b22:	9a01      	ldr	r2, [sp, #4]
 8008b24:	f8da 3018 	ldr.w	r3, [sl, #24]
 8008b28:	4293      	cmp	r3, r2
 8008b2a:	d1c0      	bne.n	8008aae <net::tcp_handle(t_tcp*)+0x3c6>
 8008b2c:	f8da 3040 	ldr.w	r3, [sl, #64]	@ 0x40
 8008b30:	9305      	str	r3, [sp, #20]
 8008b32:	2310      	movs	r3, #16
 8008b34:	eb0d 0103 	add.w	r1, sp, r3
 8008b38:	4630      	mov	r0, r6
 8008b3a:	f88d 3018 	strb.w	r3, [sp, #24]
 8008b3e:	9204      	str	r2, [sp, #16]
 8008b40:	f00b fcfc 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008b44:	f89a 304c 	ldrb.w	r3, [sl, #76]	@ 0x4c
 8008b48:	e7a9      	b.n	8008a9e <net::tcp_handle(t_tcp*)+0x3b6>
 8008b4a:	4631      	mov	r1, r6
 8008b4c:	4628      	mov	r0, r5
 8008b4e:	b019      	add	sp, #100	@ 0x64
 8008b50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b54:	f00b bdaa 	b.w	80146ac <net::send_reset(t_tcp*, net::tcb const*)>
 8008b58:	00a3      	lsls	r3, r4, #2
 8008b5a:	4423      	add	r3, r4
 8008b5c:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b60:	2a07      	cmp	r2, #7
 8008b62:	8919      	ldrh	r1, [r3, #8]
 8008b64:	d81b      	bhi.n	8008b9e <net::tcp_handle(t_tcp*)+0x4b6>
 8008b66:	2a03      	cmp	r2, #3
 8008b68:	d021      	beq.n	8008bae <net::tcp_handle(t_tcp*)+0x4c6>
 8008b6a:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008b6e:	2200      	movs	r2, #0
 8008b70:	f846 2b04 	str.w	r2, [r6], #4
 8008b74:	42b3      	cmp	r3, r6
 8008b76:	d1fb      	bne.n	8008b70 <net::tcp_handle(t_tcp*)+0x488>
 8008b78:	9b02      	ldr	r3, [sp, #8]
 8008b7a:	4a62      	ldr	r2, [pc, #392]	@ (8008d04 <net::tcp_handle(t_tcp*)+0x61c>)
 8008b7c:	4423      	add	r3, r4
 8008b7e:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008b82:	6812      	ldr	r2, [r2, #0]
 8008b84:	8119      	strh	r1, [r3, #8]
 8008b86:	f640 3418 	movw	r4, #2840	@ 0xb18
 8008b8a:	2001      	movs	r0, #1
 8008b8c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008b90:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008b92:	f8a3 4044 	strh.w	r4, [r3, #68]	@ 0x44
 8008b96:	629a      	str	r2, [r3, #40]	@ 0x28
 8008b98:	f883 004c 	strb.w	r0, [r3, #76]	@ 0x4c
 8008b9c:	e5dd      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008b9e:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f846 2b04 	str.w	r2, [r6], #4
 8008ba8:	429e      	cmp	r6, r3
 8008baa:	d1fb      	bne.n	8008ba4 <net::tcp_handle(t_tcp*)+0x4bc>
 8008bac:	e7e4      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bae:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	f846 2b04 	str.w	r2, [r6], #4
 8008bb8:	42b3      	cmp	r3, r6
 8008bba:	d1fb      	bne.n	8008bb4 <net::tcp_handle(t_tcp*)+0x4cc>
 8008bbc:	e7dc      	b.n	8008b78 <net::tcp_handle(t_tcp*)+0x490>
 8008bbe:	00a3      	lsls	r3, r4, #2
 8008bc0:	4423      	add	r3, r4
 8008bc2:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bc6:	891d      	ldrh	r5, [r3, #8]
 8008bc8:	f106 0350 	add.w	r3, r6, #80	@ 0x50
 8008bcc:	f846 0b04 	str.w	r0, [r6], #4
 8008bd0:	429e      	cmp	r6, r3
 8008bd2:	d1fb      	bne.n	8008bcc <net::tcp_handle(t_tcp*)+0x4e4>
 8008bd4:	e646      	b.n	8008864 <net::tcp_handle(t_tcp*)+0x17c>
 8008bd6:	1a80      	subs	r0, r0, r2
 8008bd8:	2800      	cmp	r0, #0
 8008bda:	f340 8090 	ble.w	8008cfe <net::tcp_handle(t_tcp*)+0x616>
 8008bde:	9801      	ldr	r0, [sp, #4]
 8008be0:	eba0 010c 	sub.w	r1, r0, ip
 8008be4:	2900      	cmp	r1, #0
 8008be6:	f77f af06 	ble.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008bea:	00a3      	lsls	r3, r4, #2
 8008bec:	4423      	add	r3, r4
 8008bee:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8008bf2:	2410      	movs	r4, #16
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008bf6:	f88d 4018 	strb.w	r4, [sp, #24]
 8008bfa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008bfe:	eb0d 0104 	add.w	r1, sp, r4
 8008c02:	4630      	mov	r0, r6
 8008c04:	e69b      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008c06:	f1be 0f00 	cmp.w	lr, #0
 8008c0a:	f47f aef4 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c0e:	9801      	ldr	r0, [sp, #4]
 8008c10:	1a82      	subs	r2, r0, r2
 8008c12:	2a00      	cmp	r2, #0
 8008c14:	f73f aeef 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c18:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8008c1a:	eba2 000b 	sub.w	r0, r2, fp
 8008c1e:	2800      	cmp	r0, #0
 8008c20:	db08      	blt.n	8008c34 <net::tcp_handle(t_tcp*)+0x54c>
 8008c22:	455a      	cmp	r2, fp
 8008c24:	f47f aee7 	bne.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c28:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 8008c2a:	9901      	ldr	r1, [sp, #4]
 8008c2c:	1a52      	subs	r2, r2, r1
 8008c2e:	2a00      	cmp	r2, #0
 8008c30:	f73f aee1 	bgt.w	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c34:	00a2      	lsls	r2, r4, #2
 8008c36:	4422      	add	r2, r4
 8008c38:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008c3c:	9903      	ldr	r1, [sp, #12]
 8008c3e:	61d1      	str	r1, [r2, #28]
 8008c40:	9901      	ldr	r1, [sp, #4]
 8008c42:	f8c2 b024 	str.w	fp, [r2, #36]	@ 0x24
 8008c46:	6291      	str	r1, [r2, #40]	@ 0x28
 8008c48:	e6d5      	b.n	80089f6 <net::tcp_handle(t_tcp*)+0x30e>
 8008c4a:	2b06      	cmp	r3, #6
 8008c4c:	f47f ad85 	bne.w	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c50:	230a      	movs	r3, #10
 8008c52:	e74d      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c54:	69a3      	ldr	r3, [r4, #24]
 8008c56:	9a01      	ldr	r2, [sp, #4]
 8008c58:	4293      	cmp	r3, r2
 8008c5a:	d0f9      	beq.n	8008c50 <net::tcp_handle(t_tcp*)+0x568>
 8008c5c:	2308      	movs	r3, #8
 8008c5e:	e747      	b.n	8008af0 <net::tcp_handle(t_tcp*)+0x408>
 8008c60:	1a82      	subs	r2, r0, r2
 8008c62:	2a00      	cmp	r2, #0
 8008c64:	f73f af11 	bgt.w	8008a8a <net::tcp_handle(t_tcp*)+0x3a2>
 8008c68:	9903      	ldr	r1, [sp, #12]
 8008c6a:	61d9      	str	r1, [r3, #28]
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	9901      	ldr	r1, [sp, #4]
 8008c70:	f8c3 b024 	str.w	fp, [r3, #36]	@ 0x24
 8008c74:	6299      	str	r1, [r3, #40]	@ 0x28
 8008c76:	6159      	str	r1, [r3, #20]
 8008c78:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008c7c:	e56d      	b.n	800875a <net::tcp_handle(t_tcp*)+0x72>
 8008c7e:	f109 33ff 	add.w	r3, r9, #4294967295	@ 0xffffffff
 8008c82:	3301      	adds	r3, #1
 8008c84:	4443      	add	r3, r8
 8008c86:	f818 1b01 	ldrb.w	r1, [r8], #1
 8008c8a:	f802 1b01 	strb.w	r1, [r2], #1
 8008c8e:	4543      	cmp	r3, r8
 8008c90:	d1f9      	bne.n	8008c86 <net::tcp_handle(t_tcp*)+0x59e>
 8008c92:	9b02      	ldr	r3, [sp, #8]
 8008c94:	eb03 0804 	add.w	r8, r3, r4
 8008c98:	f44f 63b2 	mov.w	r3, #1424	@ 0x590
 8008c9c:	eb07 1808 	add.w	r8, r7, r8, lsl #4
 8008ca0:	fb03 7300 	mla	r3, r3, r0, r7
 8008ca4:	4630      	mov	r0, r6
 8008ca6:	f8a3 9770 	strh.w	r9, [r3, #1904]	@ 0x770
 8008caa:	f8d8 3040 	ldr.w	r3, [r8, #64]	@ 0x40
 8008cae:	444b      	add	r3, r9
 8008cb0:	f8c8 3040 	str.w	r3, [r8, #64]	@ 0x40
 8008cb4:	9305      	str	r3, [sp, #20]
 8008cb6:	f8b8 3044 	ldrh.w	r3, [r8, #68]	@ 0x44
 8008cba:	f2a3 538c 	subw	r3, r3, #1420	@ 0x58c
 8008cbe:	f8a8 3044 	strh.w	r3, [r8, #68]	@ 0x44
 8008cc2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8008cc6:	9304      	str	r3, [sp, #16]
 8008cc8:	2310      	movs	r3, #16
 8008cca:	eb0d 0103 	add.w	r1, sp, r3
 8008cce:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cd2:	f00b fc33 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 8008cd6:	f8b7 21e0 	ldrh.w	r2, [r7, #480]	@ 0x1e0
 8008cda:	f898 304c 	ldrb.w	r3, [r8, #76]	@ 0x4c
 8008cde:	3201      	adds	r2, #1
 8008ce0:	f002 0201 	and.w	r2, r2, #1
 8008ce4:	f8a7 21e0 	strh.w	r2, [r7, #480]	@ 0x1e0
 8008ce8:	e6dc      	b.n	8008aa4 <net::tcp_handle(t_tcp*)+0x3bc>
 8008cea:	699c      	ldr	r4, [r3, #24]
 8008cec:	2310      	movs	r3, #16
 8008cee:	e9cd 4204 	strd	r4, r2, [sp, #16]
 8008cf2:	eb0d 0103 	add.w	r1, sp, r3
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f88d 3018 	strb.w	r3, [sp, #24]
 8008cfc:	e61f      	b.n	800893e <net::tcp_handle(t_tcp*)+0x256>
 8008cfe:	9a01      	ldr	r2, [sp, #4]
 8008d00:	614a      	str	r2, [r1, #20]
 8008d02:	e789      	b.n	8008c18 <net::tcp_handle(t_tcp*)+0x530>
 8008d04:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

08008d08 <net::udp_handle(t_udp*)>:
 8008d08:	f8b0 c024 	ldrh.w	ip, [r0, #36]	@ 0x24
 8008d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8008d84 <net::udp_handle(t_udp*)+0x7c>)
 8008d0e:	fa9c fc9c 	rev16.w	ip, ip
 8008d12:	2300      	movs	r3, #0
 8008d14:	fa1f fc8c 	uxth.w	ip, ip
 8008d18:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 8008d1c:	4561      	cmp	r1, ip
 8008d1e:	d003      	beq.n	8008d28 <net::udp_handle(t_udp*)+0x20>
 8008d20:	3301      	adds	r3, #1
 8008d22:	2b08      	cmp	r3, #8
 8008d24:	d1f8      	bne.n	8008d18 <net::udp_handle(t_udp*)+0x10>
 8008d26:	4770      	bx	lr
 8008d28:	8cc1      	ldrh	r1, [r0, #38]	@ 0x26
 8008d2a:	b530      	push	{r4, r5, lr}
 8008d2c:	ba4c      	rev16	r4, r1
 8008d2e:	3c08      	subs	r4, #8
 8008d30:	b2a4      	uxth	r4, r4
 8008d32:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d36:	fa1f fc81 	uxth.w	ip, r1
 8008d3a:	f5b4 6fb8 	cmp.w	r4, #1472	@ 0x5c0
 8008d3e:	4d12      	ldr	r5, [pc, #72]	@ (8008d88 <net::udp_handle(t_udp*)+0x80>)
 8008d40:	fb03 f202 	mul.w	r2, r3, r2
 8008d44:	f102 020a 	add.w	r2, r2, #10
 8008d48:	bf28      	it	cs
 8008d4a:	f44f 64b8 	movcs.w	r4, #1472	@ 0x5c0
 8008d4e:	f5bc 6f00 	cmp.w	ip, #2048	@ 0x800
 8008d52:	442a      	add	r2, r5
 8008d54:	f100 012a 	add.w	r1, r0, #42	@ 0x2a
 8008d58:	d007      	beq.n	8008d6a <net::udp_handle(t_udp*)+0x62>
 8008d5a:	eb02 0e04 	add.w	lr, r2, r4
 8008d5e:	f811 cb01 	ldrb.w	ip, [r1], #1
 8008d62:	f802 cb01 	strb.w	ip, [r2], #1
 8008d66:	4572      	cmp	r2, lr
 8008d68:	d1f9      	bne.n	8008d5e <net::udp_handle(t_udp*)+0x56>
 8008d6a:	f240 52cc 	movw	r2, #1484	@ 0x5cc
 8008d6e:	fb02 f303 	mul.w	r3, r2, r3
 8008d72:	f8d0 101a 	ldr.w	r1, [r0, #26]
 8008d76:	50e9      	str	r1, [r5, r3]
 8008d78:	18ea      	adds	r2, r5, r3
 8008d7a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
 8008d7c:	6054      	str	r4, [r2, #4]
 8008d7e:	ba5b      	rev16	r3, r3
 8008d80:	8113      	strh	r3, [r2, #8]
 8008d82:	bd30      	pop	{r4, r5, pc}
 8008d84:	1000cafe 	strdne	ip, [r0], -lr
 8008d88:	10009ca0 	andne	r9, r0, r0, lsr #25

08008d8c <net::arp_handle(t_arp*)>:
 8008d8c:	89c3      	ldrh	r3, [r0, #14]
 8008d8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008d92:	d17e      	bne.n	8008e92 <net::arp_handle(t_arp*)+0x106>
 8008d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d98:	8a03      	ldrh	r3, [r0, #16]
 8008d9a:	2b08      	cmp	r3, #8
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	d172      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da0:	7c83      	ldrb	r3, [r0, #18]
 8008da2:	2b06      	cmp	r3, #6
 8008da4:	d16f      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008da6:	7cc3      	ldrb	r3, [r0, #19]
 8008da8:	2b04      	cmp	r3, #4
 8008daa:	d16c      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008dac:	f00c fbbe 	bl	801552c <net::acd_arp_reply(t_arp*)>
 8008db0:	4a38      	ldr	r2, [pc, #224]	@ (8008e94 <net::arp_handle(t_arp*)+0x108>)
 8008db2:	f8d4 3026 	ldr.w	r3, [r4, #38]	@ 0x26
 8008db6:	6817      	ldr	r7, [r2, #0]
 8008db8:	429f      	cmp	r7, r3
 8008dba:	d066      	beq.n	8008e8a <net::arp_handle(t_arp*)+0xfe>
 8008dbc:	6912      	ldr	r2, [r2, #16]
 8008dbe:	429a      	cmp	r2, r3
 8008dc0:	bf0d      	iteet	eq
 8008dc2:	f04f 0801 	moveq.w	r8, #1
 8008dc6:	f04f 0800 	movne.w	r8, #0
 8008dca:	2101      	movne	r1, #1
 8008dcc:	2100      	moveq	r1, #0
 8008dce:	69e6      	ldr	r6, [r4, #28]
 8008dd0:	4630      	mov	r0, r6
 8008dd2:	f00c fc31 	bl	8015638 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8008dd6:	f104 091c 	add.w	r9, r4, #28
 8008dda:	f104 0a16 	add.w	sl, r4, #22
 8008dde:	4605      	mov	r5, r0
 8008de0:	b350      	cbz	r0, 8008e38 <net::arp_handle(t_arp*)+0xac>
 8008de2:	2302      	movs	r3, #2
 8008de4:	6143      	str	r3, [r0, #20]
 8008de6:	f100 020c 	add.w	r2, r0, #12
 8008dea:	2300      	movs	r3, #0
 8008dec:	8243      	strh	r3, [r0, #18]
 8008dee:	4611      	mov	r1, r2
 8008df0:	4653      	mov	r3, sl
 8008df2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008df6:	f801 0b01 	strb.w	r0, [r1], #1
 8008dfa:	4599      	cmp	r9, r3
 8008dfc:	d1f9      	bne.n	8008df2 <net::arp_handle(t_arp*)+0x66>
 8008dfe:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008e02:	f1bc 0f00 	cmp.w	ip, #0
 8008e06:	d017      	beq.n	8008e38 <net::arp_handle(t_arp*)+0xac>
 8008e08:	4663      	mov	r3, ip
 8008e0a:	f105 0012 	add.w	r0, r5, #18
 8008e0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008e12:	f803 1b01 	strb.w	r1, [r3], #1
 8008e16:	4282      	cmp	r2, r0
 8008e18:	d1f9      	bne.n	8008e0e <net::arp_handle(t_arp*)+0x82>
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	e9d5 0101 	ldrd	r0, r1, [r5, #4]
 8008e20:	f88c 3018 	strb.w	r3, [ip, #24]
 8008e24:	f88c 3019 	strb.w	r3, [ip, #25]
 8008e28:	f00c fa5a 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 8008e2c:	6868      	ldr	r0, [r5, #4]
 8008e2e:	b108      	cbz	r0, 8008e34 <net::arp_handle(t_arp*)+0xa8>
 8008e30:	f011 fba4 	bl	801a57c <operator delete[](void*)>
 8008e34:	2300      	movs	r3, #0
 8008e36:	606b      	str	r3, [r5, #4]
 8008e38:	8aa3      	ldrh	r3, [r4, #20]
 8008e3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e3e:	d122      	bne.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e40:	f1b8 0f00 	cmp.w	r8, #0
 8008e44:	d01f      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e46:	42b7      	cmp	r7, r6
 8008e48:	d01d      	beq.n	8008e86 <net::arp_handle(t_arp*)+0xfa>
 8008e4a:	4d13      	ldr	r5, [pc, #76]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e4c:	1da3      	adds	r3, r4, #6
 8008e4e:	f104 000c 	add.w	r0, r4, #12
 8008e52:	462a      	mov	r2, r5
 8008e54:	f813 1b01 	ldrb.w	r1, [r3], #1
 8008e58:	f802 1b01 	strb.w	r1, [r2], #1
 8008e5c:	4283      	cmp	r3, r0
 8008e5e:	d1f9      	bne.n	8008e54 <net::arp_handle(t_arp*)+0xc8>
 8008e60:	f8d4 6026 	ldr.w	r6, [r4, #38]	@ 0x26
 8008e64:	4b0d      	ldr	r3, [pc, #52]	@ (8008e9c <net::arp_handle(t_arp*)+0x110>)
 8008e66:	f81a 2b01 	ldrb.w	r2, [sl], #1
 8008e6a:	f803 2b01 	strb.w	r2, [r3], #1
 8008e6e:	45d1      	cmp	r9, sl
 8008e70:	d1f9      	bne.n	8008e66 <net::arp_handle(t_arp*)+0xda>
 8008e72:	69e3      	ldr	r3, [r4, #28]
 8008e74:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 8008e78:	61ee      	str	r6, [r5, #28]
 8008e7a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008e7e:	4806      	ldr	r0, [pc, #24]	@ (8008e98 <net::arp_handle(t_arp*)+0x10c>)
 8008e80:	213c      	movs	r1, #60	@ 0x3c
 8008e82:	f00c ba2d 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8008e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	f04f 0801 	mov.w	r8, #1
 8008e90:	e79d      	b.n	8008dce <net::arp_handle(t_arp*)+0x42>
 8008e92:	4770      	bx	lr
 8008e94:	20002954 	andcs	r2, r0, r4, asr r9
 8008e98:	20002984 	andcs	r2, r0, r4, lsl #19
 8008e9c:	200029a4 	andcs	r2, r0, r4, lsr #19

08008ea0 <net::ip_handle(t_ip4*)>:
 8008ea0:	7b81      	ldrb	r1, [r0, #14]
 8008ea2:	7dc2      	ldrb	r2, [r0, #23]
 8008ea4:	2945      	cmp	r1, #69	@ 0x45
 8008ea6:	d121      	bne.n	8008eec <net::ip_handle(t_ip4*)+0x4c>
 8008ea8:	3a01      	subs	r2, #1
 8008eaa:	b508      	push	{r3, lr}
 8008eac:	2a10      	cmp	r2, #16
 8008eae:	d80a      	bhi.n	8008ec6 <net::ip_handle(t_ip4*)+0x26>
 8008eb0:	e8df f002 	tbb	[pc, r2]
 8008eb4:	0909120e 	stmdbeq	r9, {r1, r2, r3, r9, ip}
 8008eb8:	09091609 	stmdbeq	r9, {r0, r3, r9, sl, ip}
 8008ebc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec0:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8008ec4:	bd08000a 	stclt	0, cr0, [r8, #-40]	@ 0xffffffd8
 8008ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ecc:	f7ff bf1c 	b.w	8008d08 <net::udp_handle(t_udp*)>
 8008ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ed4:	f000 b80e 	b.w	8008ef4 <net::icmp_handle(t_icmp*)>
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008edc:	f7ff bb6c 	b.w	80085b8 <net::igmp_handle(t_igmp*)>
 8008ee0:	f7ff fc02 	bl	80086e8 <net::tcp_handle(t_tcp*)>
 8008ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008ee8:	f7ff bbd8 	b.w	800869c <net::tcp_run()>
 8008eec:	2a02      	cmp	r2, #2
 8008eee:	d0f5      	beq.n	8008edc <net::ip_handle(t_ip4*)+0x3c>
 8008ef0:	4770      	bx	lr
 8008ef2:	bf00      	nop

08008ef4 <net::icmp_handle(t_icmp*)>:
 8008ef4:	f890 3022 	ldrb.w	r3, [r0, #34]	@ 0x22
 8008ef8:	2b08      	cmp	r3, #8
 8008efa:	d000      	beq.n	8008efe <net::icmp_handle(t_icmp*)+0xa>
 8008efc:	4770      	bx	lr
 8008efe:	f890 3023 	ldrb.w	r3, [r0, #35]	@ 0x23
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1fa      	bne.n	8008efc <net::icmp_handle(t_icmp*)+0x8>
 8008f06:	f100 0c06 	add.w	ip, r0, #6
 8008f0a:	4603      	mov	r3, r0
 8008f0c:	4662      	mov	r2, ip
 8008f0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	459c      	cmp	ip, r3
 8008f18:	d1f9      	bne.n	8008f0e <net::icmp_handle(t_icmp*)+0x1a>
 8008f1a:	4a14      	ldr	r2, [pc, #80]	@ (8008f6c <net::icmp_handle(t_icmp*)+0x78>)
 8008f1c:	f100 0c0c 	add.w	ip, r0, #12
 8008f20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008f24:	f803 1b01 	strb.w	r1, [r3], #1
 8008f28:	4563      	cmp	r3, ip
 8008f2a:	d1f9      	bne.n	8008f20 <net::icmp_handle(t_icmp*)+0x2c>
 8008f2c:	8a43      	ldrh	r3, [r0, #18]
 8008f2e:	4a10      	ldr	r2, [pc, #64]	@ (8008f70 <net::icmp_handle(t_icmp*)+0x7c>)
 8008f30:	f8d0 101e 	ldr.w	r1, [r0, #30]
 8008f34:	f8d0 c01a 	ldr.w	ip, [r0, #26]
 8008f38:	f8c0 c01e 	str.w	ip, [r0, #30]
 8008f3c:	43db      	mvns	r3, r3
 8008f3e:	8243      	strh	r3, [r0, #18]
 8008f40:	6913      	ldr	r3, [r2, #16]
 8008f42:	428b      	cmp	r3, r1
 8008f44:	8a01      	ldrh	r1, [r0, #16]
 8008f46:	bf18      	it	ne
 8008f48:	6813      	ldrne	r3, [r2, #0]
 8008f4a:	f8c0 301a 	str.w	r3, [r0, #26]
 8008f4e:	ba49      	rev16	r1, r1
 8008f50:	2300      	movs	r3, #0
 8008f52:	b289      	uxth	r1, r1
 8008f54:	7603      	strb	r3, [r0, #24]
 8008f56:	7643      	strb	r3, [r0, #25]
 8008f58:	f880 3022 	strb.w	r3, [r0, #34]	@ 0x22
 8008f5c:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8008f60:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
 8008f64:	310e      	adds	r1, #14
 8008f66:	f00c b9bb 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8008f6a:	bf00      	nop
 8008f6c:	20002968 	andcs	r2, r0, r8, ror #18
 8008f70:	20002954 	andcs	r2, r0, r4, asr r9

08008f74 <__aeabi_d2f>:
 8008f74:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8008f78:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8008f7c:	bf24      	itt	cs
 8008f7e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8008f82:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8008f86:	d90d      	bls.n	8008fa4 <__aeabi_d2f+0x30>
 8008f88:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8008f8c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8008f90:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8008f94:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8008f98:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8008f9c:	bf08      	it	eq
 8008f9e:	f020 0001 	biceq.w	r0, r0, #1
 8008fa2:	4770      	bx	lr
 8008fa4:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8008fa8:	d121      	bne.n	8008fee <__aeabi_d2f+0x7a>
 8008faa:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8008fae:	bfbc      	itt	lt
 8008fb0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8008fb4:	4770      	bxlt	lr
 8008fb6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8008fba:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8008fbe:	f1c2 0218 	rsb	r2, r2, #24
 8008fc2:	f1c2 0c20 	rsb	ip, r2, #32
 8008fc6:	fa10 f30c 	lsls.w	r3, r0, ip
 8008fca:	fa20 f002 	lsr.w	r0, r0, r2
 8008fce:	bf18      	it	ne
 8008fd0:	f040 0001 	orrne.w	r0, r0, #1
 8008fd4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8008fd8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8008fdc:	fa03 fc0c 	lsl.w	ip, r3, ip
 8008fe0:	ea40 000c 	orr.w	r0, r0, ip
 8008fe4:	fa23 f302 	lsr.w	r3, r3, r2
 8008fe8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8008fec:	e7cc      	b.n	8008f88 <__aeabi_d2f+0x14>
 8008fee:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8008ff2:	d107      	bne.n	8009004 <__aeabi_d2f+0x90>
 8008ff4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8008ff8:	bf1e      	ittt	ne
 8008ffa:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8008ffe:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8009002:	4770      	bxne	lr
 8009004:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8009008:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800900c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8009010:	4770      	bx	lr
 8009012:	bf00      	nop

08009014 <Reset_Handler>:
 8009014:	490f      	ldr	r1, [pc, #60]	@ (8009054 <ZeroBSSLoop+0x1e>)
 8009016:	4a10      	ldr	r2, [pc, #64]	@ (8009058 <ZeroBSSLoop+0x22>)
 8009018:	4b10      	ldr	r3, [pc, #64]	@ (800905c <ZeroBSSLoop+0x26>)
 800901a:	1a5b      	subs	r3, r3, r1
 800901c:	d005      	beq.n	800902a <ZeroBSS>

0800901e <CopyDataLoop>:
 800901e:	f812 4b01 	ldrb.w	r4, [r2], #1
 8009022:	f801 4b01 	strb.w	r4, [r1], #1
 8009026:	3b01      	subs	r3, #1
 8009028:	dcf9      	bgt.n	800901e <CopyDataLoop>

0800902a <ZeroBSS>:
 800902a:	4a0d      	ldr	r2, [pc, #52]	@ (8009060 <ZeroBSSLoop+0x2a>)
 800902c:	4b0d      	ldr	r3, [pc, #52]	@ (8009064 <ZeroBSSLoop+0x2e>)
 800902e:	eba3 0302 	sub.w	r3, r3, r2
 8009032:	f04f 0400 	mov.w	r4, #0

08009036 <ZeroBSSLoop>:
 8009036:	f842 4b04 	str.w	r4, [r2], #4
 800903a:	3b04      	subs	r3, #4
 800903c:	dcfb      	bgt.n	8009036 <ZeroBSSLoop>
 800903e:	f00e fdf3 	bl	8017c28 <stack_debug_init>
 8009042:	f00e fe55 	bl	8017cf0 <SystemInit>
 8009046:	f010 fd1f 	bl	8019a88 <__libc_init_array>
 800904a:	f000 fd91 	bl	8009b70 <main>
 800904e:	4770      	bx	lr
 8009050:	bf00      	nop
 8009052:	00000000 	andeq	r0, r0, r0
 8009056:	f1c82000 			@ <UNDEFINED> instruction: 0xf1c82000
 800905a:	00880801 	addeq	r0, r8, r1, lsl #16
 800905e:	00882000 	addeq	r2, r8, r0
 8009062:	a3f82000 	mvnsge	r2, #0
 8009066:	 	ldrb	r2, [lr, r0]!

08009068 <ADC_IRQHandler>:
 8009068:	e7fe      	b.n	8009068 <ADC_IRQHandler>

0800906a <HardFault_Handler>:
 800906a:	f01e 0f04 	tst.w	lr, #4
 800906e:	bf0c      	ite	eq
 8009070:	f3ef 8008 	mrseq	r0, MSP
 8009074:	f3ef 8009 	mrsne	r0, PSP
 8009078:	4671      	mov	r1, lr
 800907a:	f000 b801 	b.w	8009080 <hardfault_handler>
 800907e:	4770      	bx	lr

08009080 <hardfault_handler>:
 8009080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009084:	4d2f      	ldr	r5, [pc, #188]	@ (8009144 <hardfault_handler+0xc4>)
 8009086:	b087      	sub	sp, #28
 8009088:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 800908a:	9301      	str	r3, [sp, #4]
 800908c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800908e:	9302      	str	r3, [sp, #8]
 8009090:	e9d0 9303 	ldrd	r9, r3, [r0, #12]
 8009094:	6aac      	ldr	r4, [r5, #40]	@ 0x28
 8009096:	9303      	str	r3, [sp, #12]
 8009098:	e9d0 ba01 	ldrd	fp, sl, [r0, #4]
 800909c:	69c3      	ldr	r3, [r0, #28]
 800909e:	9304      	str	r3, [sp, #16]
 80090a0:	e9d0 7605 	ldrd	r7, r6, [r0, #20]
 80090a4:	4688      	mov	r8, r1
 80090a6:	6801      	ldr	r1, [r0, #0]
 80090a8:	4827      	ldr	r0, [pc, #156]	@ (8009148 <hardfault_handler+0xc8>)
 80090aa:	9105      	str	r1, [sp, #20]
 80090ac:	f011 f814 	bl	801a0d8 <printf>
 80090b0:	4826      	ldr	r0, [pc, #152]	@ (800914c <hardfault_handler+0xcc>)
 80090b2:	f011 f811 	bl	801a0d8 <printf>
 80090b6:	9905      	ldr	r1, [sp, #20]
 80090b8:	4825      	ldr	r0, [pc, #148]	@ (8009150 <hardfault_handler+0xd0>)
 80090ba:	f011 f80d 	bl	801a0d8 <printf>
 80090be:	4659      	mov	r1, fp
 80090c0:	4824      	ldr	r0, [pc, #144]	@ (8009154 <hardfault_handler+0xd4>)
 80090c2:	f011 f809 	bl	801a0d8 <printf>
 80090c6:	4651      	mov	r1, sl
 80090c8:	4823      	ldr	r0, [pc, #140]	@ (8009158 <hardfault_handler+0xd8>)
 80090ca:	f011 f805 	bl	801a0d8 <printf>
 80090ce:	4649      	mov	r1, r9
 80090d0:	4822      	ldr	r0, [pc, #136]	@ (800915c <hardfault_handler+0xdc>)
 80090d2:	f011 f801 	bl	801a0d8 <printf>
 80090d6:	9903      	ldr	r1, [sp, #12]
 80090d8:	4821      	ldr	r0, [pc, #132]	@ (8009160 <hardfault_handler+0xe0>)
 80090da:	f010 fffd 	bl	801a0d8 <printf>
 80090de:	4639      	mov	r1, r7
 80090e0:	4820      	ldr	r0, [pc, #128]	@ (8009164 <hardfault_handler+0xe4>)
 80090e2:	f010 fff9 	bl	801a0d8 <printf>
 80090e6:	4631      	mov	r1, r6
 80090e8:	481f      	ldr	r0, [pc, #124]	@ (8009168 <hardfault_handler+0xe8>)
 80090ea:	f010 fff5 	bl	801a0d8 <printf>
 80090ee:	9904      	ldr	r1, [sp, #16]
 80090f0:	481e      	ldr	r0, [pc, #120]	@ (800916c <hardfault_handler+0xec>)
 80090f2:	f010 fff1 	bl	801a0d8 <printf>
 80090f6:	481e      	ldr	r0, [pc, #120]	@ (8009170 <hardfault_handler+0xf0>)
 80090f8:	f010 ffee 	bl	801a0d8 <printf>
 80090fc:	4621      	mov	r1, r4
 80090fe:	481d      	ldr	r0, [pc, #116]	@ (8009174 <hardfault_handler+0xf4>)
 8009100:	f010 ffea 	bl	801a0d8 <printf>
 8009104:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 8009106:	481c      	ldr	r0, [pc, #112]	@ (8009178 <hardfault_handler+0xf8>)
 8009108:	f010 ffe6 	bl	801a0d8 <printf>
 800910c:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 800910e:	481b      	ldr	r0, [pc, #108]	@ (800917c <hardfault_handler+0xfc>)
 8009110:	f010 ffe2 	bl	801a0d8 <printf>
 8009114:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
 8009116:	481a      	ldr	r0, [pc, #104]	@ (8009180 <hardfault_handler+0x100>)
 8009118:	f010 ffde 	bl	801a0d8 <printf>
 800911c:	0622      	lsls	r2, r4, #24
 800911e:	d503      	bpl.n	8009128 <hardfault_handler+0xa8>
 8009120:	9902      	ldr	r1, [sp, #8]
 8009122:	4818      	ldr	r0, [pc, #96]	@ (8009184 <hardfault_handler+0x104>)
 8009124:	f010 ffd8 	bl	801a0d8 <printf>
 8009128:	0423      	lsls	r3, r4, #16
 800912a:	d503      	bpl.n	8009134 <hardfault_handler+0xb4>
 800912c:	9901      	ldr	r1, [sp, #4]
 800912e:	4816      	ldr	r0, [pc, #88]	@ (8009188 <hardfault_handler+0x108>)
 8009130:	f010 ffd2 	bl	801a0d8 <printf>
 8009134:	4815      	ldr	r0, [pc, #84]	@ (800918c <hardfault_handler+0x10c>)
 8009136:	f010 ffcf 	bl	801a0d8 <printf>
 800913a:	4815      	ldr	r0, [pc, #84]	@ (8009190 <hardfault_handler+0x110>)
 800913c:	4641      	mov	r1, r8
 800913e:	f010 ffcb 	bl	801a0d8 <printf>
 8009142:	e7fe      	b.n	8009142 <hardfault_handler+0xc2>
 8009144:	e000ed00 	and	lr, r0, r0, lsl #26
 8009148:	0801a664 	stmdaeq	r1, {r2, r5, r6, r9, sl, sp, pc}
 800914c:	0801a671 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, sp, pc}
 8009150:	0801a681 	stmdaeq	r1, {r0, r7, r9, sl, sp, pc}
 8009154:	0801a68c 	stmdaeq	r1, {r2, r3, r7, r9, sl, sp, pc}
 8009158:	0801a697 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, sp, pc}
 800915c:	0801a6a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, sp, pc}
 8009160:	0801a6ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, sp, pc}
 8009164:	0801a6b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, sp, pc}
 8009168:	0801a6c3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, sp, pc}
 800916c:	0801a6ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, sp, pc}
 8009170:	0801a6d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, sp, pc}
 8009174:	0801a6e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, sp, pc}
 8009178:	0801a6f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sl, sp, pc}
 800917c:	0801a6fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, sl, sp, pc}
 8009180:	0801a709 	stmdaeq	r1, {r0, r3, r8, r9, sl, sp, pc}
 8009184:	0801a715 	stmdaeq	r1, {r0, r2, r4, r8, r9, sl, sp, pc}
 8009188:	0801a722 	stmdaeq	r1, {r1, r5, r8, r9, sl, sp, pc}
 800918c:	0801a72e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, sp, pc}
 8009190:	0801a736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, sp, pc}

08009194 <LightSet::SetDmxStartAddress(unsigned short)>:
 8009194:	2000      	movs	r0, #0
 8009196:	4770      	bx	lr

08009198 <LightSet::GetDmxStartAddress()>:
 8009198:	2001      	movs	r0, #1
 800919a:	4770      	bx	lr

0800919c <LightSet::GetDmxFootprint()>:
 800919c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80091a0:	4770      	bx	lr

080091a2 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 80091a2:	2300      	movs	r3, #0
 80091a4:	2001      	movs	r0, #1
 80091a6:	7093      	strb	r3, [r2, #2]
 80091a8:	8010      	strh	r0, [r2, #0]
 80091aa:	4770      	bx	lr

080091ac <DmxSend::GetRefreshRate()>:
 80091ac:	4b03      	ldr	r3, [pc, #12]	@ (80091bc <DmxSend::GetRefreshRate()+0x10>)
 80091ae:	4804      	ldr	r0, [pc, #16]	@ (80091c0 <DmxSend::GetRefreshRate()+0x14>)
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	681b      	ldr	r3, [r3, #0]
 80091b4:	fbb0 f0f3 	udiv	r0, r0, r3
 80091b8:	4770      	bx	lr
 80091ba:	bf00      	nop
 80091bc:	20001c4c 	andcs	r1, r0, ip, asr #24
 80091c0:	000f4240 	andeq	r4, pc, r0, asr #4

080091c4 <DmxSend::~DmxSend()>:
 80091c4:	4770      	bx	lr
	...

080091c8 <DmxSend::Blackout(bool)>:
 80091c8:	4b01      	ldr	r3, [pc, #4]	@ (80091d0 <DmxSend::Blackout(bool)+0x8>)
 80091ca:	6818      	ldr	r0, [r3, #0]
 80091cc:	f009 b8c4 	b.w	8012358 <Dmx::Blackout()>
 80091d0:	20001c4c 	andcs	r1, r0, ip, asr #24

080091d4 <DmxSend::FullOn()>:
 80091d4:	4b01      	ldr	r3, [pc, #4]	@ (80091dc <DmxSend::FullOn()+0x8>)
 80091d6:	6818      	ldr	r0, [r3, #0]
 80091d8:	f009 b924 	b.w	8012424 <Dmx::FullOn()>
 80091dc:	20001c4c 	andcs	r1, r0, ip, asr #24

080091e0 <DmxSend::GetOutputStyle(unsigned long) const>:
 80091e0:	b508      	push	{r3, lr}
 80091e2:	4b04      	ldr	r3, [pc, #16]	@ (80091f4 <DmxSend::GetOutputStyle(unsigned long) const+0x14>)
 80091e4:	6818      	ldr	r0, [r3, #0]
 80091e6:	f009 f85d 	bl	80122a4 <Dmx::GetOutputStyle(unsigned long) const>
 80091ea:	1e43      	subs	r3, r0, #1
 80091ec:	4258      	negs	r0, r3
 80091ee:	4158      	adcs	r0, r3
 80091f0:	bd08      	pop	{r3, pc}
 80091f2:	bf00      	nop
 80091f4:	20001c4c 	andcs	r1, r0, ip, asr #24

080091f8 <DmxSend::SetOutputStyle(unsigned long, lightset::OutputStyle)>:
 80091f8:	1e53      	subs	r3, r2, #1
 80091fa:	425a      	negs	r2, r3
 80091fc:	415a      	adcs	r2, r3
 80091fe:	4b02      	ldr	r3, [pc, #8]	@ (8009208 <DmxSend::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x10>)
 8009200:	6818      	ldr	r0, [r3, #0]
 8009202:	f008 bfe9 	b.w	80121d8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>
 8009206:	bf00      	nop
 8009208:	20001c4c 	andcs	r1, r0, ip, asr #24

0800920c <DmxSend::Sync(unsigned long)>:
 800920c:	b570      	push	{r4, r5, r6, lr}
 800920e:	4d14      	ldr	r5, [pc, #80]	@ (8009260 <DmxSend::Sync(unsigned long)+0x54>)
 8009210:	f240 6304 	movw	r3, #1540	@ 0x604
 8009214:	fb03 5301 	mla	r3, r3, r1, r5
 8009218:	460c      	mov	r4, r1
 800921a:	f8d3 3600 	ldr.w	r3, [r3, #1536]	@ 0x600
 800921e:	b92b      	cbnz	r3, 800922c <DmxSend::Sync(unsigned long)+0x20>
 8009220:	4b10      	ldr	r3, [pc, #64]	@ (8009264 <DmxSend::Sync(unsigned long)+0x58>)
 8009222:	4a11      	ldr	r2, [pc, #68]	@ (8009268 <DmxSend::Sync(unsigned long)+0x5c>)
 8009224:	4811      	ldr	r0, [pc, #68]	@ (800926c <DmxSend::Sync(unsigned long)+0x60>)
 8009226:	2163      	movs	r1, #99	@ 0x63
 8009228:	f011 f836 	bl	801a298 <__assert_func>
 800922c:	4b10      	ldr	r3, [pc, #64]	@ (8009270 <DmxSend::Sync(unsigned long)+0x64>)
 800922e:	2c01      	cmp	r4, #1
 8009230:	681e      	ldr	r6, [r3, #0]
 8009232:	d905      	bls.n	8009240 <DmxSend::Sync(unsigned long)+0x34>
 8009234:	4b0f      	ldr	r3, [pc, #60]	@ (8009274 <DmxSend::Sync(unsigned long)+0x68>)
 8009236:	4a10      	ldr	r2, [pc, #64]	@ (8009278 <DmxSend::Sync(unsigned long)+0x6c>)
 8009238:	4810      	ldr	r0, [pc, #64]	@ (800927c <DmxSend::Sync(unsigned long)+0x70>)
 800923a:	21b5      	movs	r1, #181	@ 0xb5
 800923c:	f011 f82c 	bl	801a298 <__assert_func>
 8009240:	f240 6204 	movw	r2, #1540	@ 0x604
 8009244:	4362      	muls	r2, r4
 8009246:	18ab      	adds	r3, r5, r2
 8009248:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800924c:	442a      	add	r2, r5
 800924e:	4621      	mov	r1, r4
 8009250:	4630      	mov	r0, r6
 8009252:	f8d3 3600 	ldr.w	r3, [r3, #1536]	@ 0x600
 8009256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800925a:	f009 b82d 	b.w	80122b8 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>
 800925e:	bf00      	nop
 8009260:	2000008c 	andcs	r0, r0, ip, lsl #1
 8009264:	0801a74a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sl, sp, pc}
 8009268:	0801a775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
 800926c:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 8009270:	20001c4c 	andcs	r1, r0, ip, asr #24
 8009274:	0801a797 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, sl, sp, pc}
 8009278:	0801a7aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, sp, pc}
 800927c:	0801a7b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, sp, pc}

08009280 <DmxSend::~DmxSend()>:
 8009280:	b510      	push	{r4, lr}
 8009282:	2108      	movs	r1, #8
 8009284:	4604      	mov	r4, r0
 8009286:	f011 f97b 	bl	801a580 <operator delete(void*, unsigned int)>
 800928a:	4620      	mov	r0, r4
 800928c:	bd10      	pop	{r4, pc}
	...

08009290 <DmxSend::Print()>:
 8009290:	b510      	push	{r4, lr}
 8009292:	4c10      	ldr	r4, [pc, #64]	@ (80092d4 <DmxSend::Print()+0x44>)
 8009294:	4810      	ldr	r0, [pc, #64]	@ (80092d8 <DmxSend::Print()+0x48>)
 8009296:	f010 ff74 	bl	801a182 <puts>
 800929a:	6820      	ldr	r0, [r4, #0]
 800929c:	f008 fef8 	bl	8012090 <Dmx::GetDmxBreakTime() const>
 80092a0:	4601      	mov	r1, r0
 80092a2:	480e      	ldr	r0, [pc, #56]	@ (80092dc <DmxSend::Print()+0x4c>)
 80092a4:	f010 ff18 	bl	801a0d8 <printf>
 80092a8:	6820      	ldr	r0, [r4, #0]
 80092aa:	f008 ff27 	bl	80120fc <Dmx::GetDmxMabTime() const>
 80092ae:	4601      	mov	r1, r0
 80092b0:	480b      	ldr	r0, [pc, #44]	@ (80092e0 <DmxSend::Print()+0x50>)
 80092b2:	f010 ff11 	bl	801a0d8 <printf>
 80092b6:	6823      	ldr	r3, [r4, #0]
 80092b8:	490a      	ldr	r1, [pc, #40]	@ (80092e4 <DmxSend::Print()+0x54>)
 80092ba:	681b      	ldr	r3, [r3, #0]
 80092bc:	480a      	ldr	r0, [pc, #40]	@ (80092e8 <DmxSend::Print()+0x58>)
 80092be:	fbb1 f1f3 	udiv	r1, r1, r3
 80092c2:	f010 ff09 	bl	801a0d8 <printf>
 80092c6:	6823      	ldr	r3, [r4, #0]
 80092c8:	4808      	ldr	r0, [pc, #32]	@ (80092ec <DmxSend::Print()+0x5c>)
 80092ca:	8a19      	ldrh	r1, [r3, #16]
 80092cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80092d0:	f010 bf02 	b.w	801a0d8 <printf>
 80092d4:	20001c4c 	andcs	r1, r0, ip, asr #24
 80092d8:	0801a7d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, sp, pc}
 80092dc:	0801a7e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, sp, pc}
 80092e0:	0801a7f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, sp, pc}
 80092e4:	000f4240 	andeq	r4, pc, r0, asr #4
 80092e8:	0801a80a 	stmdaeq	r1, {r1, r3, fp, sp, pc}
 80092ec:	0801a81e 	stmdaeq	r1, {r1, r2, r3, r4, fp, sp, pc}

080092f0 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)>:
 80092f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092f2:	2907      	cmp	r1, #7
 80092f4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80092f8:	460c      	mov	r4, r1
 80092fa:	4615      	mov	r5, r2
 80092fc:	461e      	mov	r6, r3
 80092fe:	d905      	bls.n	800930c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x1c>
 8009300:	4b11      	ldr	r3, [pc, #68]	@ (8009348 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x58>)
 8009302:	4a12      	ldr	r2, [pc, #72]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009304:	4812      	ldr	r0, [pc, #72]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009306:	2157      	movs	r1, #87	@ 0x57
 8009308:	f010 ffc6 	bl	801a298 <__assert_func>
 800930c:	b92d      	cbnz	r5, 800931a <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x2a>
 800930e:	4b11      	ldr	r3, [pc, #68]	@ (8009354 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x64>)
 8009310:	4a0e      	ldr	r2, [pc, #56]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009312:	480f      	ldr	r0, [pc, #60]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009314:	2158      	movs	r1, #88	@ 0x58
 8009316:	f010 ffbf 	bl	801a298 <__assert_func>
 800931a:	b92e      	cbnz	r6, 8009328 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x38>
 800931c:	4b0e      	ldr	r3, [pc, #56]	@ (8009358 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x68>)
 800931e:	4a0b      	ldr	r2, [pc, #44]	@ (800934c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x5c>)
 8009320:	480b      	ldr	r0, [pc, #44]	@ (8009350 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x60>)
 8009322:	2159      	movs	r1, #89	@ 0x59
 8009324:	f010 ffb8 	bl	801a298 <__assert_func>
 8009328:	b167      	cbz	r7, 8009344 <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x54>
 800932a:	4f0c      	ldr	r7, [pc, #48]	@ (800935c <DmxSend::SetData(unsigned long, unsigned char const*, unsigned long, bool)+0x6c>)
 800932c:	4621      	mov	r1, r4
 800932e:	6838      	ldr	r0, [r7, #0]
 8009330:	4633      	mov	r3, r6
 8009332:	462a      	mov	r2, r5
 8009334:	f008 ffc0 	bl	80122b8 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>
 8009338:	6838      	ldr	r0, [r7, #0]
 800933a:	4621      	mov	r1, r4
 800933c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009340:	f009 b8d8 	b.w	80124f4 <Dmx::StartOutput(unsigned long)>
 8009344:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009346:	bf00      	nop
 8009348:	0801a832 	stmdaeq	r1, {r1, r4, r5, fp, sp, pc}
 800934c:	0801a848 	stmdaeq	r1, {r3, r6, fp, sp, pc}
 8009350:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 8009354:	0801a850 	stmdaeq	r1, {r4, r6, fp, sp, pc}
 8009358:	0801a861 	stmdaeq	r1, {r0, r5, r6, fp, sp, pc}
 800935c:	20001c4c 	andcs	r1, r0, ip, asr #24

08009360 <DmxSend::Stop(unsigned long)>:
 8009360:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009362:	2343      	movs	r3, #67	@ 0x43
 8009364:	460c      	mov	r4, r1
 8009366:	4a1c      	ldr	r2, [pc, #112]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 8009368:	491c      	ldr	r1, [pc, #112]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800936a:	4605      	mov	r5, r0
 800936c:	481c      	ldr	r0, [pc, #112]	@ (80093e0 <DmxSend::Stop(unsigned long)+0x80>)
 800936e:	f010 feb3 	bl	801a0d8 <printf>
 8009372:	b2e2      	uxtb	r2, r4
 8009374:	2301      	movs	r3, #1
 8009376:	4093      	lsls	r3, r2
 8009378:	792a      	ldrb	r2, [r5, #4]
 800937a:	4917      	ldr	r1, [pc, #92]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 800937c:	4819      	ldr	r0, [pc, #100]	@ (80093e4 <DmxSend::Stop(unsigned long)+0x84>)
 800937e:	4393      	bics	r3, r2
 8009380:	bf0c      	ite	eq
 8009382:	2301      	moveq	r3, #1
 8009384:	2300      	movne	r3, #0
 8009386:	e9cd 4300 	strd	r4, r3, [sp]
 800938a:	4a14      	ldr	r2, [pc, #80]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800938c:	2344      	movs	r3, #68	@ 0x44
 800938e:	f010 fea3 	bl	801a0d8 <printf>
 8009392:	2c07      	cmp	r4, #7
 8009394:	d905      	bls.n	80093a2 <DmxSend::Stop(unsigned long)+0x42>
 8009396:	4b14      	ldr	r3, [pc, #80]	@ (80093e8 <DmxSend::Stop(unsigned long)+0x88>)
 8009398:	4a0f      	ldr	r2, [pc, #60]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 800939a:	4810      	ldr	r0, [pc, #64]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 800939c:	2146      	movs	r1, #70	@ 0x46
 800939e:	f010 ff7b 	bl	801a298 <__assert_func>
 80093a2:	792b      	ldrb	r3, [r5, #4]
 80093a4:	2201      	movs	r2, #1
 80093a6:	40a2      	lsls	r2, r4
 80093a8:	ea32 0103 	bics.w	r1, r2, r3
 80093ac:	d008      	beq.n	80093c0 <DmxSend::Stop(unsigned long)+0x60>
 80093ae:	2349      	movs	r3, #73	@ 0x49
 80093b0:	4a09      	ldr	r2, [pc, #36]	@ (80093d8 <DmxSend::Stop(unsigned long)+0x78>)
 80093b2:	490a      	ldr	r1, [pc, #40]	@ (80093dc <DmxSend::Stop(unsigned long)+0x7c>)
 80093b4:	480d      	ldr	r0, [pc, #52]	@ (80093ec <DmxSend::Stop(unsigned long)+0x8c>)
 80093b6:	b003      	add	sp, #12
 80093b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80093bc:	f010 be8c 	b.w	801a0d8 <printf>
 80093c0:	ea23 0302 	bic.w	r3, r3, r2
 80093c4:	480a      	ldr	r0, [pc, #40]	@ (80093f0 <DmxSend::Stop(unsigned long)+0x90>)
 80093c6:	712b      	strb	r3, [r5, #4]
 80093c8:	2300      	movs	r3, #0
 80093ca:	461a      	mov	r2, r3
 80093cc:	6800      	ldr	r0, [r0, #0]
 80093ce:	4621      	mov	r1, r4
 80093d0:	f008 fd50 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80093d4:	2353      	movs	r3, #83	@ 0x53
 80093d6:	e7eb      	b.n	80093b0 <DmxSend::Stop(unsigned long)+0x50>
 80093d8:	0801a86e 	stmdaeq	r1, {r1, r2, r3, r5, r6, fp, sp, pc}
 80093dc:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 80093e0:	0801a873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, sp, pc}
 80093e4:	0801a881 	stmdaeq	r1, {r0, r7, fp, sp, pc}
 80093e8:	0801a832 	stmdaeq	r1, {r1, r4, r5, fp, sp, pc}
 80093ec:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}
 80093f0:	20001c4c 	andcs	r1, r0, ip, asr #24

080093f4 <DmxSend::Start(unsigned long)>:
 80093f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093f6:	232d      	movs	r3, #45	@ 0x2d
 80093f8:	460c      	mov	r4, r1
 80093fa:	4a19      	ldr	r2, [pc, #100]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 80093fc:	4919      	ldr	r1, [pc, #100]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 80093fe:	4605      	mov	r5, r0
 8009400:	4819      	ldr	r0, [pc, #100]	@ (8009468 <DmxSend::Start(unsigned long)+0x74>)
 8009402:	f010 fe69 	bl	801a0d8 <printf>
 8009406:	4a17      	ldr	r2, [pc, #92]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 8009408:	4915      	ldr	r1, [pc, #84]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 800940a:	4818      	ldr	r0, [pc, #96]	@ (800946c <DmxSend::Start(unsigned long)+0x78>)
 800940c:	9400      	str	r4, [sp, #0]
 800940e:	232e      	movs	r3, #46	@ 0x2e
 8009410:	f010 fe62 	bl	801a0d8 <printf>
 8009414:	2c07      	cmp	r4, #7
 8009416:	d905      	bls.n	8009424 <DmxSend::Start(unsigned long)+0x30>
 8009418:	4b15      	ldr	r3, [pc, #84]	@ (8009470 <DmxSend::Start(unsigned long)+0x7c>)
 800941a:	4a11      	ldr	r2, [pc, #68]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 800941c:	4811      	ldr	r0, [pc, #68]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 800941e:	2130      	movs	r1, #48	@ 0x30
 8009420:	f010 ff3a 	bl	801a298 <__assert_func>
 8009424:	792a      	ldrb	r2, [r5, #4]
 8009426:	2301      	movs	r3, #1
 8009428:	fa03 f104 	lsl.w	r1, r3, r4
 800942c:	ea31 0002 	bics.w	r0, r1, r2
 8009430:	d108      	bne.n	8009444 <DmxSend::Start(unsigned long)+0x50>
 8009432:	2333      	movs	r3, #51	@ 0x33
 8009434:	4a0a      	ldr	r2, [pc, #40]	@ (8009460 <DmxSend::Start(unsigned long)+0x6c>)
 8009436:	490b      	ldr	r1, [pc, #44]	@ (8009464 <DmxSend::Start(unsigned long)+0x70>)
 8009438:	480e      	ldr	r0, [pc, #56]	@ (8009474 <DmxSend::Start(unsigned long)+0x80>)
 800943a:	b003      	add	sp, #12
 800943c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009440:	f010 be4a 	b.w	801a0d8 <printf>
 8009444:	430a      	orrs	r2, r1
 8009446:	712a      	strb	r2, [r5, #4]
 8009448:	4d0b      	ldr	r5, [pc, #44]	@ (8009478 <DmxSend::Start(unsigned long)+0x84>)
 800944a:	2200      	movs	r2, #0
 800944c:	6828      	ldr	r0, [r5, #0]
 800944e:	4621      	mov	r1, r4
 8009450:	f008 fd10 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8009454:	6828      	ldr	r0, [r5, #0]
 8009456:	4621      	mov	r1, r4
 8009458:	f008 ff24 	bl	80122a4 <Dmx::GetOutputStyle(unsigned long) const>
 800945c:	233f      	movs	r3, #63	@ 0x3f
 800945e:	e7e9      	b.n	8009434 <DmxSend::Start(unsigned long)+0x40>
 8009460:	0801ab17 	stmdaeq	r1, {r0, r1, r2, r4, r8, r9, fp, sp, pc}
 8009464:	0801a77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, sp, pc}
 8009468:	0801a873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, sp, pc}
 800946c:	0801a8b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, fp, sp, pc}
 8009470:	0801a832 	stmdaeq	r1, {r1, r4, r5, fp, sp, pc}
 8009474:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}
 8009478:	20001c4c 	andcs	r1, r0, ip, asr #24

0800947c <DmxSend::Sync()>:
 800947c:	b538      	push	{r3, r4, r5, lr}
 800947e:	4b10      	ldr	r3, [pc, #64]	@ (80094c0 <DmxSend::Sync()+0x44>)
 8009480:	4d10      	ldr	r5, [pc, #64]	@ (80094c4 <DmxSend::Sync()+0x48>)
 8009482:	4604      	mov	r4, r0
 8009484:	6818      	ldr	r0, [r3, #0]
 8009486:	f009 f84f 	bl	8012528 <Dmx::Sync()>
 800948a:	f8d5 3600 	ldr.w	r3, [r5, #1536]	@ 0x600
 800948e:	b14b      	cbz	r3, 80094a4 <DmxSend::Sync()+0x28>
 8009490:	2300      	movs	r3, #0
 8009492:	f8c5 3600 	str.w	r3, [r5, #1536]	@ 0x600
 8009496:	7921      	ldrb	r1, [r4, #4]
 8009498:	f011 0101 	ands.w	r1, r1, #1
 800949c:	d102      	bne.n	80094a4 <DmxSend::Sync()+0x28>
 800949e:	4620      	mov	r0, r4
 80094a0:	f7ff ffa8 	bl	80093f4 <DmxSend::Start(unsigned long)>
 80094a4:	f8d5 3c04 	ldr.w	r3, [r5, #3076]	@ 0xc04
 80094a8:	b14b      	cbz	r3, 80094be <DmxSend::Sync()+0x42>
 80094aa:	2300      	movs	r3, #0
 80094ac:	f8c5 3c04 	str.w	r3, [r5, #3076]	@ 0xc04
 80094b0:	7923      	ldrb	r3, [r4, #4]
 80094b2:	079b      	lsls	r3, r3, #30
 80094b4:	d403      	bmi.n	80094be <DmxSend::Sync()+0x42>
 80094b6:	2101      	movs	r1, #1
 80094b8:	4620      	mov	r0, r4
 80094ba:	f7ff ff9b 	bl	80093f4 <DmxSend::Start(unsigned long)>
 80094be:	bd38      	pop	{r3, r4, r5, pc}
 80094c0:	20001c4c 	andcs	r1, r0, ip, asr #24
 80094c4:	2000008c 	andcs	r0, r0, ip, lsl #1

080094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>:
 80094c8:	b110      	cbz	r0, 80094d0 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]+0x8>
 80094ca:	6803      	ldr	r3, [r0, #0]
 80094cc:	6a1b      	ldr	r3, [r3, #32]
 80094ce:	4718      	bx	r3
 80094d0:	4770      	bx	lr

080094d2 <Display::PutChar(int) [clone .isra.0]>:
 80094d2:	b110      	cbz	r0, 80094da <Display::PutChar(int) [clone .isra.0]+0x8>
 80094d4:	6803      	ldr	r3, [r0, #0]
 80094d6:	695b      	ldr	r3, [r3, #20]
 80094d8:	4718      	bx	r3
 80094da:	4770      	bx	lr

080094dc <net::dhcp_run()>:
 80094dc:	b510      	push	{r4, lr}
 80094de:	4b11      	ldr	r3, [pc, #68]	@ (8009524 <net::dhcp_run()+0x48>)
 80094e0:	6a1c      	ldr	r4, [r3, #32]
 80094e2:	b086      	sub	sp, #24
 80094e4:	b1cc      	cbz	r4, 800951a <net::dhcp_run()+0x3e>
 80094e6:	a904      	add	r1, sp, #16
 80094e8:	6820      	ldr	r0, [r4, #0]
 80094ea:	f10d 030e 	add.w	r3, sp, #14
 80094ee:	aa05      	add	r2, sp, #20
 80094f0:	f00b fa6a 	bl	80149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 80094f4:	4601      	mov	r1, r0
 80094f6:	b180      	cbz	r0, 800951a <net::dhcp_run()+0x3e>
 80094f8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80094fc:	2b43      	cmp	r3, #67	@ 0x43
 80094fe:	d10c      	bne.n	800951a <net::dhcp_run()+0x3e>
 8009500:	9804      	ldr	r0, [sp, #16]
 8009502:	6862      	ldr	r2, [r4, #4]
 8009504:	6843      	ldr	r3, [r0, #4]
 8009506:	4293      	cmp	r3, r2
 8009508:	d009      	beq.n	800951e <net::dhcp_run()+0x42>
 800950a:	e9cd 3200 	strd	r3, r2, [sp]
 800950e:	4906      	ldr	r1, [pc, #24]	@ (8009528 <net::dhcp_run()+0x4c>)
 8009510:	4a06      	ldr	r2, [pc, #24]	@ (800952c <net::dhcp_run()+0x50>)
 8009512:	4807      	ldr	r0, [pc, #28]	@ (8009530 <net::dhcp_run()+0x54>)
 8009514:	2379      	movs	r3, #121	@ 0x79
 8009516:	f010 fddf 	bl	801a0d8 <printf>
 800951a:	b006      	add	sp, #24
 800951c:	bd10      	pop	{r4, pc}
 800951e:	f00a fcdd 	bl	8013edc <net::dhcp_process(net::dhcp::Message const*, unsigned long)>
 8009522:	e7fa      	b.n	800951a <net::dhcp_run()+0x3e>
 8009524:	20002954 	andcs	r2, r0, r4, asr r9
 8009528:	0801a8f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, fp, sp, pc}
 800952c:	0801a8d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, fp, sp, pc}
 8009530:	0801a902 	stmdaeq	r1, {r1, r8, fp, sp, pc}

08009534 <Display::TextStatus(char const*)>:
 8009534:	6983      	ldr	r3, [r0, #24]
 8009536:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800953a:	4604      	mov	r4, r0
 800953c:	460d      	mov	r5, r1
 800953e:	2b00      	cmp	r3, #0
 8009540:	d038      	beq.n	80095b4 <Display::TextStatus(char const*)+0x80>
 8009542:	e9d3 6701 	ldrd	r6, r7, [r3, #4]
 8009546:	b92e      	cbnz	r6, 8009554 <Display::TextStatus(char const*)+0x20>
 8009548:	4b1b      	ldr	r3, [pc, #108]	@ (80095b8 <Display::TextStatus(char const*)+0x84>)
 800954a:	4a1c      	ldr	r2, [pc, #112]	@ (80095bc <Display::TextStatus(char const*)+0x88>)
 800954c:	481c      	ldr	r0, [pc, #112]	@ (80095c0 <Display::TextStatus(char const*)+0x8c>)
 800954e:	21ae      	movs	r1, #174	@ 0xae
 8009550:	f010 fea2 	bl	801a298 <__assert_func>
 8009554:	b92f      	cbnz	r7, 8009562 <Display::TextStatus(char const*)+0x2e>
 8009556:	4b1b      	ldr	r3, [pc, #108]	@ (80095c4 <Display::TextStatus(char const*)+0x90>)
 8009558:	4a18      	ldr	r2, [pc, #96]	@ (80095bc <Display::TextStatus(char const*)+0x88>)
 800955a:	4819      	ldr	r0, [pc, #100]	@ (80095c0 <Display::TextStatus(char const*)+0x8c>)
 800955c:	21af      	movs	r1, #175	@ 0xaf
 800955e:	f010 fe9b 	bl	801a298 <__assert_func>
 8009562:	f107 39ff 	add.w	r9, r7, #4294967295	@ 0xffffffff
 8009566:	69a0      	ldr	r0, [r4, #24]
 8009568:	464a      	mov	r2, r9
 800956a:	2100      	movs	r1, #0
 800956c:	f7ff ffac 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009570:	f04f 0800 	mov.w	r8, #0
 8009574:	3e01      	subs	r6, #1
 8009576:	4546      	cmp	r6, r8
 8009578:	69a0      	ldr	r0, [r4, #24]
 800957a:	d815      	bhi.n	80095a8 <Display::TextStatus(char const*)+0x74>
 800957c:	464a      	mov	r2, r9
 800957e:	2100      	movs	r1, #0
 8009580:	f7ff ffa2 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009584:	69a0      	ldr	r0, [r4, #24]
 8009586:	b1a8      	cbz	r0, 80095b4 <Display::TextStatus(char const*)+0x80>
 8009588:	6841      	ldr	r1, [r0, #4]
 800958a:	2300      	movs	r3, #0
 800958c:	5cea      	ldrb	r2, [r5, r3]
 800958e:	b11a      	cbz	r2, 8009598 <Display::TextStatus(char const*)+0x64>
 8009590:	1c5a      	adds	r2, r3, #1
 8009592:	4299      	cmp	r1, r3
 8009594:	4613      	mov	r3, r2
 8009596:	d8f9      	bhi.n	800958c <Display::TextStatus(char const*)+0x58>
 8009598:	6802      	ldr	r2, [r0, #0]
 800959a:	69d4      	ldr	r4, [r2, #28]
 800959c:	4639      	mov	r1, r7
 800959e:	462a      	mov	r2, r5
 80095a0:	46a4      	mov	ip, r4
 80095a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095a6:	4760      	bx	ip
 80095a8:	2120      	movs	r1, #32
 80095aa:	f7ff ff92 	bl	80094d2 <Display::PutChar(int) [clone .isra.0]>
 80095ae:	f108 0801 	add.w	r8, r8, #1
 80095b2:	e7e0      	b.n	8009576 <Display::TextStatus(char const*)+0x42>
 80095b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80095b8:	0801a938 	stmdaeq	r1, {r3, r4, r5, r8, fp, sp, pc}
 80095bc:	0801a946 	stmdaeq	r1, {r1, r2, r6, r8, fp, sp, pc}
 80095c0:	0801a951 	stmdaeq	r1, {r0, r4, r6, r8, fp, sp, pc}
 80095c4:	0801a976 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, fp, sp, pc}

080095c8 <Display::SetSleep(bool)>:
 80095c8:	b538      	push	{r3, r4, r5, lr}
 80095ca:	4604      	mov	r4, r0
 80095cc:	6980      	ldr	r0, [r0, #24]
 80095ce:	460d      	mov	r5, r1
 80095d0:	b138      	cbz	r0, 80095e2 <Display::SetSleep(bool)+0x1a>
 80095d2:	6803      	ldr	r3, [r0, #0]
 80095d4:	7561      	strb	r1, [r4, #21]
 80095d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80095d8:	4798      	blx	r3
 80095da:	b915      	cbnz	r5, 80095e2 <Display::SetSleep(bool)+0x1a>
 80095dc:	4b01      	ldr	r3, [pc, #4]	@ (80095e4 <Display::SetSleep(bool)+0x1c>)
 80095de:	681b      	ldr	r3, [r3, #0]
 80095e0:	6063      	str	r3, [r4, #4]
 80095e2:	bd38      	pop	{r3, r4, r5, pc}
 80095e4:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

080095e8 <RDMDevice::Init()>:
 80095e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095ea:	f890 3052 	ldrb.w	r3, [r0, #82]	@ 0x52
 80095ee:	b087      	sub	sp, #28
 80095f0:	4604      	mov	r4, r0
 80095f2:	b12b      	cbz	r3, 8009600 <RDMDevice::Init()+0x18>
 80095f4:	4b2c      	ldr	r3, [pc, #176]	@ (80096a8 <RDMDevice::Init()+0xc0>)
 80095f6:	4a2d      	ldr	r2, [pc, #180]	@ (80096ac <RDMDevice::Init()+0xc4>)
 80095f8:	482d      	ldr	r0, [pc, #180]	@ (80096b0 <RDMDevice::Init()+0xc8>)
 80095fa:	2132      	movs	r1, #50	@ 0x32
 80095fc:	f010 fe4c 	bl	801a298 <__assert_func>
 8009600:	2301      	movs	r3, #1
 8009602:	4a2c      	ldr	r2, [pc, #176]	@ (80096b4 <RDMDevice::Init()+0xcc>)
 8009604:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 8009608:	4929      	ldr	r1, [pc, #164]	@ (80096b0 <RDMDevice::Init()+0xc8>)
 800960a:	482b      	ldr	r0, [pc, #172]	@ (80096b8 <RDMDevice::Init()+0xd0>)
 800960c:	233b      	movs	r3, #59	@ 0x3b
 800960e:	f010 fd63 	bl	801a0d8 <printf>
 8009612:	f894 2051 	ldrb.w	r2, [r4, #81]	@ 0x51
 8009616:	f894 3052 	ldrb.w	r3, [r4, #82]	@ 0x52
 800961a:	2a20      	cmp	r2, #32
 800961c:	bf28      	it	cs
 800961e:	2220      	movcs	r2, #32
 8009620:	2b00      	cmp	r3, #0
 8009622:	d039      	beq.n	8009698 <RDMDevice::Init()+0xb0>
 8009624:	4621      	mov	r1, r4
 8009626:	f104 0320 	add.w	r3, r4, #32
 800962a:	18a0      	adds	r0, r4, r2
 800962c:	4281      	cmp	r1, r0
 800962e:	d12f      	bne.n	8009690 <RDMDevice::Init()+0xa8>
 8009630:	2501      	movs	r5, #1
 8009632:	2700      	movs	r7, #0
 8009634:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
 8009638:	e9cd 5701 	strd	r5, r7, [sp, #4]
 800963c:	4e1f      	ldr	r6, [pc, #124]	@ (80096bc <RDMDevice::Init()+0xd4>)
 800963e:	9200      	str	r2, [sp, #0]
 8009640:	6830      	ldr	r0, [r6, #0]
 8009642:	f88d 2017 	strb.w	r2, [sp, #23]
 8009646:	2109      	movs	r1, #9
 8009648:	2204      	movs	r2, #4
 800964a:	f00c fec1 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800964e:	e9cd 5701 	strd	r5, r7, [sp, #4]
 8009652:	9500      	str	r5, [sp, #0]
 8009654:	6830      	ldr	r0, [r6, #0]
 8009656:	f10d 0317 	add.w	r3, sp, #23
 800965a:	2224      	movs	r2, #36	@ 0x24
 800965c:	2109      	movs	r1, #9
 800965e:	f00c feb7 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8009662:	f06f 051e 	mvn.w	r5, #30
 8009666:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800966a:	f894 0050 	ldrb.w	r0, [r4, #80]	@ 0x50
 800966e:	f104 021f 	add.w	r2, r4, #31
 8009672:	1b2d      	subs	r5, r5, r4
 8009674:	18a9      	adds	r1, r5, r2
 8009676:	4288      	cmp	r0, r1
 8009678:	d811      	bhi.n	800969e <RDMDevice::Init()+0xb6>
 800967a:	4a0e      	ldr	r2, [pc, #56]	@ (80096b4 <RDMDevice::Init()+0xcc>)
 800967c:	490c      	ldr	r1, [pc, #48]	@ (80096b0 <RDMDevice::Init()+0xc8>)
 800967e:	4810      	ldr	r0, [pc, #64]	@ (80096c0 <RDMDevice::Init()+0xd8>)
 8009680:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
 8009684:	2341      	movs	r3, #65	@ 0x41
 8009686:	b007      	add	sp, #28
 8009688:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800968c:	f010 bd24 	b.w	801a0d8 <printf>
 8009690:	f811 5b01 	ldrb.w	r5, [r1], #1
 8009694:	77cd      	strb	r5, [r1, #31]
 8009696:	e7c9      	b.n	800962c <RDMDevice::Init()+0x44>
 8009698:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
 800969c:	e7e1      	b.n	8009662 <RDMDevice::Init()+0x7a>
 800969e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 80096a2:	440b      	add	r3, r1
 80096a4:	b29b      	uxth	r3, r3
 80096a6:	e7e5      	b.n	8009674 <RDMDevice::Init()+0x8c>
 80096a8:	0801a981 	stmdaeq	r1, {r0, r7, r8, fp, sp, pc}
 80096ac:	0801a986 	stmdaeq	r1, {r1, r2, r7, r8, fp, sp, pc}
 80096b0:	0801a98b 	stmdaeq	r1, {r0, r1, r3, r7, r8, fp, sp, pc}
 80096b4:	0801a9aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp, pc}
 80096b8:	0801a873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, sp, pc}
 80096bc:	20002a00 	andcs	r2, r0, r0, lsl #20
 80096c0:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}

080096c4 <ArtNetRdmController::ArtNetRdmController()>:
 80096c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80096c8:	4f15      	ldr	r7, [pc, #84]	@ (8009720 <ArtNetRdmController::ArtNetRdmController()+0x5c>)
 80096ca:	4e16      	ldr	r6, [pc, #88]	@ (8009724 <ArtNetRdmController::ArtNetRdmController()+0x60>)
 80096cc:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 8009734 <ArtNetRdmController::ArtNetRdmController()+0x70>
 80096d0:	4d15      	ldr	r5, [pc, #84]	@ (8009728 <ArtNetRdmController::ArtNetRdmController()+0x64>)
 80096d2:	4604      	mov	r4, r0
 80096d4:	f006 fe56 	bl	8010384 <RDMDevice::RDMDevice()>
 80096d8:	463a      	mov	r2, r7
 80096da:	4631      	mov	r1, r6
 80096dc:	2324      	movs	r3, #36	@ 0x24
 80096de:	4640      	mov	r0, r8
 80096e0:	f010 fcfa 	bl	801a0d8 <printf>
 80096e4:	463a      	mov	r2, r7
 80096e6:	2325      	movs	r3, #37	@ 0x25
 80096e8:	4f10      	ldr	r7, [pc, #64]	@ (800972c <ArtNetRdmController::ArtNetRdmController()+0x68>)
 80096ea:	4631      	mov	r1, r6
 80096ec:	4628      	mov	r0, r5
 80096ee:	4e10      	ldr	r6, [pc, #64]	@ (8009730 <ArtNetRdmController::ArtNetRdmController()+0x6c>)
 80096f0:	f010 fcf2 	bl	801a0d8 <printf>
 80096f4:	f104 0146 	add.w	r1, r4, #70	@ 0x46
 80096f8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80096fc:	f007 f802 	bl	8010704 <RDMDiscovery::RDMDiscovery(unsigned char const*)>
 8009700:	463a      	mov	r2, r7
 8009702:	4631      	mov	r1, r6
 8009704:	232c      	movs	r3, #44	@ 0x2c
 8009706:	4640      	mov	r0, r8
 8009708:	f010 fce6 	bl	801a0d8 <printf>
 800970c:	232d      	movs	r3, #45	@ 0x2d
 800970e:	463a      	mov	r2, r7
 8009710:	4631      	mov	r1, r6
 8009712:	4628      	mov	r0, r5
 8009714:	f010 fce0 	bl	801a0d8 <printf>
 8009718:	4620      	mov	r0, r4
 800971a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800971e:	bf00      	nop
 8009720:	0801a9bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, fp, sp, pc}
 8009724:	0801a9d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, fp, sp, pc}
 8009728:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}
 800972c:	0801a9fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, fp, sp, pc}
 8009730:	0801aa0e 	stmdaeq	r1, {r1, r2, r3, r9, fp, sp, pc}
 8009734:	0801a873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, sp, pc}

08009738 <E131Bridge::Run()>:
 8009738:	b513      	push	{r0, r1, r4, lr}
 800973a:	f100 02f0 	add.w	r2, r0, #240	@ 0xf0
 800973e:	4604      	mov	r4, r0
 8009740:	f10d 0306 	add.w	r3, sp, #6
 8009744:	f100 01ec 	add.w	r1, r0, #236	@ 0xec
 8009748:	6800      	ldr	r0, [r0, #0]
 800974a:	f00b f93d 	bl	80149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 800974e:	4b23      	ldr	r3, [pc, #140]	@ (80097dc <E131Bridge::Run()+0xa4>)
 8009750:	681b      	ldr	r3, [r3, #0]
 8009752:	6063      	str	r3, [r4, #4]
 8009754:	2800      	cmp	r0, #0
 8009756:	d138      	bne.n	80097ca <E131Bridge::Run()+0x92>
 8009758:	7fe2      	ldrb	r2, [r4, #31]
 800975a:	b172      	cbz	r2, 800977a <E131Bridge::Run()+0x42>
 800975c:	68a2      	ldr	r2, [r4, #8]
 800975e:	1a9b      	subs	r3, r3, r2
 8009760:	f640 12c3 	movw	r2, #2499	@ 0x9c3
 8009764:	4293      	cmp	r3, r2
 8009766:	d927      	bls.n	80097b8 <E131Bridge::Run()+0x80>
 8009768:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 800976c:	b9db      	cbnz	r3, 80097a6 <E131Bridge::Run()+0x6e>
 800976e:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 8009772:	f023 0302 	bic.w	r3, r3, #2
 8009776:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800977a:	4620      	mov	r0, r4
 800977c:	f006 fd0e 	bl	801019c <E131Bridge::HandleDmxIn()>
 8009780:	4620      	mov	r0, r4
 8009782:	f006 fc93 	bl	80100ac <E131Bridge::SendDiscoveryPacket()>
 8009786:	f894 30e8 	ldrb.w	r3, [r4, #232]	@ 0xe8
 800978a:	b153      	cbz	r3, 80097a2 <E131Bridge::Run()+0x6a>
 800978c:	4b14      	ldr	r3, [pc, #80]	@ (80097e0 <E131Bridge::Run()+0xa8>)
 800978e:	6818      	ldr	r0, [r3, #0]
 8009790:	6943      	ldr	r3, [r0, #20]
 8009792:	2b04      	cmp	r3, #4
 8009794:	d005      	beq.n	80097a2 <E131Bridge::Run()+0x6a>
 8009796:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800979a:	b1a3      	cbz	r3, 80097c6 <E131Bridge::Run()+0x8e>
 800979c:	2103      	movs	r1, #3
 800979e:	f00d ffa9 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 80097a2:	b002      	add	sp, #8
 80097a4:	bd10      	pop	{r4, pc}
 80097a6:	f894 3029 	ldrb.w	r3, [r4, #41]	@ 0x29
 80097aa:	2b00      	cmp	r3, #0
 80097ac:	d1df      	bne.n	800976e <E131Bridge::Run()+0x36>
 80097ae:	2201      	movs	r2, #1
 80097b0:	4611      	mov	r1, r2
 80097b2:	4620      	mov	r0, r4
 80097b4:	f005 ff28 	bl	800f608 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 80097b8:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 80097bc:	1a9b      	subs	r3, r3, r2
 80097be:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80097c2:	d3da      	bcc.n	800977a <E131Bridge::Run()+0x42>
 80097c4:	e7d3      	b.n	800976e <E131Bridge::Run()+0x36>
 80097c6:	2102      	movs	r1, #2
 80097c8:	e7e9      	b.n	800979e <E131Bridge::Run()+0x66>
 80097ca:	4620      	mov	r0, r4
 80097cc:	f006 face 	bl	800fd6c <E131Bridge::IsValidRoot()>
 80097d0:	2800      	cmp	r0, #0
 80097d2:	d0e6      	beq.n	80097a2 <E131Bridge::Run()+0x6a>
 80097d4:	4620      	mov	r0, r4
 80097d6:	f006 faf1 	bl	800fdbc <E131Bridge::Process()>
 80097da:	e7e2      	b.n	80097a2 <E131Bridge::Run()+0x6a>
 80097dc:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80097e0:	20002b04 	andcs	r2, r0, r4, lsl #22

080097e4 <ArtNetNode::RdmDiscoveryRun()>:
 80097e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80097e6:	f8d0 5920 	ldr.w	r5, [r0, #2336]	@ 0x920
 80097ea:	2d01      	cmp	r5, #1
 80097ec:	4604      	mov	r4, r0
 80097ee:	d906      	bls.n	80097fe <ArtNetNode::RdmDiscoveryRun()+0x1a>
 80097f0:	4b62      	ldr	r3, [pc, #392]	@ (800997c <ArtNetNode::RdmDiscoveryRun()+0x198>)
 80097f2:	4a63      	ldr	r2, [pc, #396]	@ (8009980 <ArtNetNode::RdmDiscoveryRun()+0x19c>)
 80097f4:	4863      	ldr	r0, [pc, #396]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 80097f6:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 80097fa:	f010 fd4d 	bl	801a298 <__assert_func>
 80097fe:	2328      	movs	r3, #40	@ 0x28
 8009800:	fb03 4505 	mla	r5, r3, r5, r4
 8009804:	f8d4 6920 	ldr.w	r6, [r4, #2336]	@ 0x920
 8009808:	f8d5 3874 	ldr.w	r3, [r5, #2164]	@ 0x874
 800980c:	2b01      	cmp	r3, #1
 800980e:	d16d      	bne.n	80098ec <ArtNetNode::RdmDiscoveryRun()+0x108>
 8009810:	2e01      	cmp	r6, #1
 8009812:	d906      	bls.n	8009822 <ArtNetNode::RdmDiscoveryRun()+0x3e>
 8009814:	4b59      	ldr	r3, [pc, #356]	@ (800997c <ArtNetNode::RdmDiscoveryRun()+0x198>)
 8009816:	4a5c      	ldr	r2, [pc, #368]	@ (8009988 <ArtNetNode::RdmDiscoveryRun()+0x1a4>)
 8009818:	485a      	ldr	r0, [pc, #360]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 800981a:	f44f 71c5 	mov.w	r1, #394	@ 0x18a
 800981e:	f010 fd3b 	bl	801a298 <__assert_func>
 8009822:	2324      	movs	r3, #36	@ 0x24
 8009824:	fb03 4606 	mla	r6, r3, r6, r4
 8009828:	f8d4 5920 	ldr.w	r5, [r4, #2336]	@ 0x920
 800982c:	f996 3945 	ldrsb.w	r3, [r6, #2373]	@ 0x945
 8009830:	2b00      	cmp	r3, #0
 8009832:	db5b      	blt.n	80098ec <ArtNetNode::RdmDiscoveryRun()+0x108>
 8009834:	2d01      	cmp	r5, #1
 8009836:	d906      	bls.n	8009846 <ArtNetNode::RdmDiscoveryRun()+0x62>
 8009838:	4b50      	ldr	r3, [pc, #320]	@ (800997c <ArtNetNode::RdmDiscoveryRun()+0x198>)
 800983a:	4a54      	ldr	r2, [pc, #336]	@ (800998c <ArtNetNode::RdmDiscoveryRun()+0x1a8>)
 800983c:	4851      	ldr	r0, [pc, #324]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 800983e:	f44f 71c8 	mov.w	r1, #400	@ 0x190
 8009842:	f010 fd29 	bl	801a298 <__assert_func>
 8009846:	2324      	movs	r3, #36	@ 0x24
 8009848:	fb03 4505 	mla	r5, r3, r5, r4
 800984c:	f895 3945 	ldrb.w	r3, [r5, #2373]	@ 0x945
 8009850:	f013 0210 	ands.w	r2, r3, #16
 8009854:	d14a      	bne.n	80098ec <ArtNetNode::RdmDiscoveryRun()+0x108>
 8009856:	f504 5680 	add.w	r6, r4, #4096	@ 0x1000
 800985a:	f8d6 3158 	ldr.w	r3, [r6, #344]	@ 0x158
 800985e:	f893 1170 	ldrb.w	r1, [r3, #368]	@ 0x170
 8009862:	f8d3 5168 	ldr.w	r5, [r3, #360]	@ 0x168
 8009866:	2900      	cmp	r1, #0
 8009868:	d04a      	beq.n	8009900 <ArtNetNode::RdmDiscoveryRun()+0x11c>
 800986a:	f883 2170 	strb.w	r2, [r3, #368]	@ 0x170
 800986e:	f8d4 3920 	ldr.w	r3, [r4, #2336]	@ 0x920
 8009872:	42ab      	cmp	r3, r5
 8009874:	d006      	beq.n	8009884 <ArtNetNode::RdmDiscoveryRun()+0xa0>
 8009876:	4b46      	ldr	r3, [pc, #280]	@ (8009990 <ArtNetNode::RdmDiscoveryRun()+0x1ac>)
 8009878:	4a46      	ldr	r2, [pc, #280]	@ (8009994 <ArtNetNode::RdmDiscoveryRun()+0x1b0>)
 800987a:	4842      	ldr	r0, [pc, #264]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 800987c:	f240 2192 	movw	r1, #658	@ 0x292
 8009880:	f010 fd0a 	bl	801a298 <__assert_func>
 8009884:	4629      	mov	r1, r5
 8009886:	4620      	mov	r0, r4
 8009888:	f004 ffc8 	bl	800e81c <ArtNetNode::SendTod(unsigned long)>
 800988c:	4b42      	ldr	r3, [pc, #264]	@ (8009998 <ArtNetNode::RdmDiscoveryRun()+0x1b4>)
 800988e:	9300      	str	r3, [sp, #0]
 8009890:	4a3c      	ldr	r2, [pc, #240]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 8009892:	4940      	ldr	r1, [pc, #256]	@ (8009994 <ArtNetNode::RdmDiscoveryRun()+0x1b0>)
 8009894:	4841      	ldr	r0, [pc, #260]	@ (800999c <ArtNetNode::RdmDiscoveryRun()+0x1b8>)
 8009896:	f240 2396 	movw	r3, #662	@ 0x296
 800989a:	f010 fc1d 	bl	801a0d8 <printf>
 800989e:	2324      	movs	r3, #36	@ 0x24
 80098a0:	fb03 4305 	mla	r3, r3, r5, r4
 80098a4:	f893 3947 	ldrb.w	r3, [r3, #2375]	@ 0x947
 80098a8:	b1a3      	cbz	r3, 80098d4 <ArtNetNode::RdmDiscoveryRun()+0xf0>
 80098aa:	4b3d      	ldr	r3, [pc, #244]	@ (80099a0 <ArtNetNode::RdmDiscoveryRun()+0x1bc>)
 80098ac:	4a35      	ldr	r2, [pc, #212]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 80098ae:	4939      	ldr	r1, [pc, #228]	@ (8009994 <ArtNetNode::RdmDiscoveryRun()+0x1b0>)
 80098b0:	9300      	str	r3, [sp, #0]
 80098b2:	483a      	ldr	r0, [pc, #232]	@ (800999c <ArtNetNode::RdmDiscoveryRun()+0x1b8>)
 80098b4:	f240 2399 	movw	r3, #665	@ 0x299
 80098b8:	f010 fc0e 	bl	801a0d8 <printf>
 80098bc:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 80098c0:	6803      	ldr	r3, [r0, #0]
 80098c2:	4629      	mov	r1, r5
 80098c4:	68db      	ldr	r3, [r3, #12]
 80098c6:	4798      	blx	r3
 80098c8:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 80098cc:	6803      	ldr	r3, [r0, #0]
 80098ce:	4629      	mov	r1, r5
 80098d0:	689b      	ldr	r3, [r3, #8]
 80098d2:	4798      	blx	r3
 80098d4:	f8d4 0920 	ldr.w	r0, [r4, #2336]	@ 0x920
 80098d8:	2324      	movs	r3, #36	@ 0x24
 80098da:	fb03 4300 	mla	r3, r3, r0, r4
 80098de:	f893 2945 	ldrb.w	r2, [r3, #2373]	@ 0x945
 80098e2:	f042 0220 	orr.w	r2, r2, #32
 80098e6:	f883 2945 	strb.w	r2, [r3, #2373]	@ 0x945
 80098ea:	e001      	b.n	80098f0 <ArtNetNode::RdmDiscoveryRun()+0x10c>
 80098ec:	f8d4 0920 	ldr.w	r0, [r4, #2336]	@ 0x920
 80098f0:	3001      	adds	r0, #1
 80098f2:	f8c4 0920 	str.w	r0, [r4, #2336]	@ 0x920
 80098f6:	3802      	subs	r0, #2
 80098f8:	bf18      	it	ne
 80098fa:	2001      	movne	r0, #1
 80098fc:	b002      	add	sp, #8
 80098fe:	bd70      	pop	{r4, r5, r6, pc}
 8009900:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 8009904:	2b00      	cmp	r3, #0
 8009906:	d136      	bne.n	8009976 <ArtNetNode::RdmDiscoveryRun()+0x192>
 8009908:	f8d4 3920 	ldr.w	r3, [r4, #2336]	@ 0x920
 800990c:	4a1d      	ldr	r2, [pc, #116]	@ (8009984 <ArtNetNode::RdmDiscoveryRun()+0x1a0>)
 800990e:	4921      	ldr	r1, [pc, #132]	@ (8009994 <ArtNetNode::RdmDiscoveryRun()+0x1b0>)
 8009910:	9300      	str	r3, [sp, #0]
 8009912:	4824      	ldr	r0, [pc, #144]	@ (80099a4 <ArtNetNode::RdmDiscoveryRun()+0x1c0>)
 8009914:	f240 23a5 	movw	r3, #677	@ 0x2a5
 8009918:	f010 fbde 	bl	801a0d8 <printf>
 800991c:	f8d4 5920 	ldr.w	r5, [r4, #2336]	@ 0x920
 8009920:	4a21      	ldr	r2, [pc, #132]	@ (80099a8 <ArtNetNode::RdmDiscoveryRun()+0x1c4>)
 8009922:	4922      	ldr	r1, [pc, #136]	@ (80099ac <ArtNetNode::RdmDiscoveryRun()+0x1c8>)
 8009924:	4822      	ldr	r0, [pc, #136]	@ (80099b0 <ArtNetNode::RdmDiscoveryRun()+0x1cc>)
 8009926:	f8d6 6158 	ldr.w	r6, [r6, #344]	@ 0x158
 800992a:	233a      	movs	r3, #58	@ 0x3a
 800992c:	f010 fbd4 	bl	801a0d8 <printf>
 8009930:	2d01      	cmp	r5, #1
 8009932:	d905      	bls.n	8009940 <ArtNetNode::RdmDiscoveryRun()+0x15c>
 8009934:	4b11      	ldr	r3, [pc, #68]	@ (800997c <ArtNetNode::RdmDiscoveryRun()+0x198>)
 8009936:	4a1c      	ldr	r2, [pc, #112]	@ (80099a8 <ArtNetNode::RdmDiscoveryRun()+0x1c4>)
 8009938:	481c      	ldr	r0, [pc, #112]	@ (80099ac <ArtNetNode::RdmDiscoveryRun()+0x1c8>)
 800993a:	213b      	movs	r1, #59	@ 0x3b
 800993c:	f010 fcac 	bl	801a298 <__assert_func>
 8009940:	4b1c      	ldr	r3, [pc, #112]	@ (80099b4 <ArtNetNode::RdmDiscoveryRun()+0x1d0>)
 8009942:	f240 42d4 	movw	r2, #1236	@ 0x4d4
 8009946:	fb02 3205 	mla	r2, r2, r5, r3
 800994a:	4629      	mov	r1, r5
 800994c:	f106 0058 	add.w	r0, r6, #88	@ 0x58
 8009950:	f006 ffe2 	bl	8010918 <RDMDiscovery::Incremental(unsigned long, RDMTod*)>
 8009954:	4a14      	ldr	r2, [pc, #80]	@ (80099a8 <ArtNetNode::RdmDiscoveryRun()+0x1c4>)
 8009956:	4915      	ldr	r1, [pc, #84]	@ (80099ac <ArtNetNode::RdmDiscoveryRun()+0x1c8>)
 8009958:	4817      	ldr	r0, [pc, #92]	@ (80099b8 <ArtNetNode::RdmDiscoveryRun()+0x1d4>)
 800995a:	233d      	movs	r3, #61	@ 0x3d
 800995c:	f010 fbbc 	bl	801a0d8 <printf>
 8009960:	f8d4 3920 	ldr.w	r3, [r4, #2336]	@ 0x920
 8009964:	2224      	movs	r2, #36	@ 0x24
 8009966:	fb02 4403 	mla	r4, r2, r3, r4
 800996a:	f894 3945 	ldrb.w	r3, [r4, #2373]	@ 0x945
 800996e:	f023 0320 	bic.w	r3, r3, #32
 8009972:	f884 3945 	strb.w	r3, [r4, #2373]	@ 0x945
 8009976:	2001      	movs	r0, #1
 8009978:	e7c0      	b.n	80098fc <ArtNetNode::RdmDiscoveryRun()+0x118>
 800997a:	bf00      	nop
 800997c:	0801aa3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, fp, sp, pc}
 8009980:	0801aa5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, sp, pc}
 8009984:	0801aa6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, fp, sp, pc}
 8009988:	0801aa91 	stmdaeq	r1, {r0, r4, r7, r9, fp, sp, pc}
 800998c:	0801aa98 	stmdaeq	r1, {r3, r4, r7, r9, fp, sp, pc}
 8009990:	0801aaa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, sp, pc}
 8009994:	0801aad6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r9, fp, sp, pc}
 8009998:	0801aafc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, sp, pc}
 800999c:	0801aae6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, fp, sp, pc}
 80099a0:	0801ab05 	stmdaeq	r1, {r0, r2, r8, r9, fp, sp, pc}
 80099a4:	0801ab1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, fp, sp, pc}
 80099a8:	0801ab50 	stmdaeq	r1, {r4, r6, r8, r9, fp, sp, pc}
 80099ac:	0801aa0e 	stmdaeq	r1, {r1, r2, r3, r9, fp, sp, pc}
 80099b0:	0801a873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, sp, pc}
 80099b4:	20001274 	andcs	r1, r0, r4, ror r2
 80099b8:	0801a8a8 	stmdaeq	r1, {r3, r5, r7, fp, sp, pc}

080099bc <ArtNetNode::Run()>:
 80099bc:	b530      	push	{r4, r5, lr}
 80099be:	b085      	sub	sp, #20
 80099c0:	4604      	mov	r4, r0
 80099c2:	f500 6205 	add.w	r2, r0, #2128	@ 0x850
 80099c6:	f600 014c 	addw	r1, r0, #2124	@ 0x84c
 80099ca:	f10d 030e 	add.w	r3, sp, #14
 80099ce:	f8d0 0848 	ldr.w	r0, [r0, #2120]	@ 0x848
 80099d2:	f00a fff9 	bl	80149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 80099d6:	4b44      	ldr	r3, [pc, #272]	@ (8009ae8 <ArtNetNode::Run()+0x12c>)
 80099d8:	681b      	ldr	r3, [r3, #0]
 80099da:	f8c4 3854 	str.w	r3, [r4, #2132]	@ 0x854
 80099de:	4601      	mov	r1, r0
 80099e0:	4620      	mov	r0, r4
 80099e2:	f002 f8ef 	bl	800bbc4 <ArtNetNode::Process(unsigned long)>
 80099e6:	4620      	mov	r0, r4
 80099e8:	f7ff fea6 	bl	8009738 <E131Bridge::Run()>
 80099ec:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 80099f0:	2b00      	cmp	r3, #0
 80099f2:	d03d      	beq.n	8009a70 <ArtNetNode::Run()+0xb4>
 80099f4:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
 80099f8:	f8d5 3158 	ldr.w	r3, [r5, #344]	@ 0x158
 80099fc:	b92b      	cbnz	r3, 8009a0a <ArtNetNode::Run()+0x4e>
 80099fe:	4b3b      	ldr	r3, [pc, #236]	@ (8009aec <ArtNetNode::Run()+0x130>)
 8009a00:	4a3b      	ldr	r2, [pc, #236]	@ (8009af0 <ArtNetNode::Run()+0x134>)
 8009a02:	483c      	ldr	r0, [pc, #240]	@ (8009af4 <ArtNetNode::Run()+0x138>)
 8009a04:	21ca      	movs	r1, #202	@ 0xca
 8009a06:	f010 fc47 	bl	801a298 <__assert_func>
 8009a0a:	f8d5 0158 	ldr.w	r0, [r5, #344]	@ 0x158
 8009a0e:	f8d0 3174 	ldr.w	r3, [r0, #372]	@ 0x174
 8009a12:	b113      	cbz	r3, 8009a1a <ArtNetNode::Run()+0x5e>
 8009a14:	3058      	adds	r0, #88	@ 0x58
 8009a16:	f006 ffe9 	bl	80109ec <RDMDiscovery::Process()>
 8009a1a:	f894 2924 	ldrb.w	r2, [r4, #2340]	@ 0x924
 8009a1e:	b992      	cbnz	r2, 8009a46 <ArtNetNode::Run()+0x8a>
 8009a20:	f8d4 191c 	ldr.w	r1, [r4, #2332]	@ 0x91c
 8009a24:	f8d4 3854 	ldr.w	r3, [r4, #2132]	@ 0x854
 8009a28:	1a5b      	subs	r3, r3, r1
 8009a2a:	4933      	ldr	r1, [pc, #204]	@ (8009af8 <ArtNetNode::Run()+0x13c>)
 8009a2c:	428b      	cmp	r3, r1
 8009a2e:	d92a      	bls.n	8009a86 <ArtNetNode::Run()+0xca>
 8009a30:	4b32      	ldr	r3, [pc, #200]	@ (8009afc <ArtNetNode::Run()+0x140>)
 8009a32:	9300      	str	r3, [sp, #0]
 8009a34:	4a2f      	ldr	r2, [pc, #188]	@ (8009af4 <ArtNetNode::Run()+0x138>)
 8009a36:	492e      	ldr	r1, [pc, #184]	@ (8009af0 <ArtNetNode::Run()+0x134>)
 8009a38:	4831      	ldr	r0, [pc, #196]	@ (8009b00 <ArtNetNode::Run()+0x144>)
 8009a3a:	23ce      	movs	r3, #206	@ 0xce
 8009a3c:	f010 fb4c 	bl	801a0d8 <printf>
 8009a40:	2301      	movs	r3, #1
 8009a42:	f884 3924 	strb.w	r3, [r4, #2340]	@ 0x924
 8009a46:	4620      	mov	r0, r4
 8009a48:	f7ff fecc 	bl	80097e4 <ArtNetNode::RdmDiscoveryRun()>
 8009a4c:	4605      	mov	r5, r0
 8009a4e:	f884 0924 	strb.w	r0, [r4, #2340]	@ 0x924
 8009a52:	b968      	cbnz	r0, 8009a70 <ArtNetNode::Run()+0xb4>
 8009a54:	4b2b      	ldr	r3, [pc, #172]	@ (8009b04 <ArtNetNode::Run()+0x148>)
 8009a56:	9300      	str	r3, [sp, #0]
 8009a58:	4a26      	ldr	r2, [pc, #152]	@ (8009af4 <ArtNetNode::Run()+0x138>)
 8009a5a:	4925      	ldr	r1, [pc, #148]	@ (8009af0 <ArtNetNode::Run()+0x134>)
 8009a5c:	4828      	ldr	r0, [pc, #160]	@ (8009b00 <ArtNetNode::Run()+0x144>)
 8009a5e:	23d6      	movs	r3, #214	@ 0xd6
 8009a60:	f010 fb3a 	bl	801a0d8 <printf>
 8009a64:	f8d4 3854 	ldr.w	r3, [r4, #2132]	@ 0x854
 8009a68:	f8c4 5920 	str.w	r5, [r4, #2336]	@ 0x920
 8009a6c:	f8c4 391c 	str.w	r3, [r4, #2332]	@ 0x91c
 8009a70:	f8d4 2854 	ldr.w	r2, [r4, #2132]	@ 0x854
 8009a74:	f8d4 385c 	ldr.w	r3, [r4, #2140]	@ 0x85c
 8009a78:	1ad3      	subs	r3, r2, r3
 8009a7a:	2bc8      	cmp	r3, #200	@ 0xc8
 8009a7c:	d901      	bls.n	8009a82 <ArtNetNode::Run()+0xc6>
 8009a7e:	f8c4 285c 	str.w	r2, [r4, #2140]	@ 0x85c
 8009a82:	b005      	add	sp, #20
 8009a84:	bd30      	pop	{r4, r5, pc}
 8009a86:	f8d5 3158 	ldr.w	r3, [r5, #344]	@ 0x158
 8009a8a:	f893 1170 	ldrb.w	r1, [r3, #368]	@ 0x170
 8009a8e:	f8d3 5168 	ldr.w	r5, [r3, #360]	@ 0x168
 8009a92:	2900      	cmp	r1, #0
 8009a94:	d0ec      	beq.n	8009a70 <ArtNetNode::Run()+0xb4>
 8009a96:	f883 2170 	strb.w	r2, [r3, #368]	@ 0x170
 8009a9a:	4629      	mov	r1, r5
 8009a9c:	4620      	mov	r0, r4
 8009a9e:	f004 febd 	bl	800e81c <ArtNetNode::SendTod(unsigned long)>
 8009aa2:	23e0      	movs	r3, #224	@ 0xe0
 8009aa4:	4a13      	ldr	r2, [pc, #76]	@ (8009af4 <ArtNetNode::Run()+0x138>)
 8009aa6:	4912      	ldr	r1, [pc, #72]	@ (8009af0 <ArtNetNode::Run()+0x134>)
 8009aa8:	4817      	ldr	r0, [pc, #92]	@ (8009b08 <ArtNetNode::Run()+0x14c>)
 8009aaa:	9500      	str	r5, [sp, #0]
 8009aac:	f010 fb14 	bl	801a0d8 <printf>
 8009ab0:	2324      	movs	r3, #36	@ 0x24
 8009ab2:	fb03 4305 	mla	r3, r3, r5, r4
 8009ab6:	f893 3947 	ldrb.w	r3, [r3, #2375]	@ 0x947
 8009aba:	2b00      	cmp	r3, #0
 8009abc:	d0d8      	beq.n	8009a70 <ArtNetNode::Run()+0xb4>
 8009abe:	4b13      	ldr	r3, [pc, #76]	@ (8009b0c <ArtNetNode::Run()+0x150>)
 8009ac0:	4a0c      	ldr	r2, [pc, #48]	@ (8009af4 <ArtNetNode::Run()+0x138>)
 8009ac2:	9300      	str	r3, [sp, #0]
 8009ac4:	490a      	ldr	r1, [pc, #40]	@ (8009af0 <ArtNetNode::Run()+0x134>)
 8009ac6:	480e      	ldr	r0, [pc, #56]	@ (8009b00 <ArtNetNode::Run()+0x144>)
 8009ac8:	23e3      	movs	r3, #227	@ 0xe3
 8009aca:	f010 fb05 	bl	801a0d8 <printf>
 8009ace:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 8009ad2:	6803      	ldr	r3, [r0, #0]
 8009ad4:	4629      	mov	r1, r5
 8009ad6:	68db      	ldr	r3, [r3, #12]
 8009ad8:	4798      	blx	r3
 8009ada:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 8009ade:	6803      	ldr	r3, [r0, #0]
 8009ae0:	4629      	mov	r1, r5
 8009ae2:	689b      	ldr	r3, [r3, #8]
 8009ae4:	4798      	blx	r3
 8009ae6:	e7c3      	b.n	8009a70 <ArtNetNode::Run()+0xb4>
 8009ae8:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8009aec:	0801ab5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, fp, sp, pc}
 8009af0:	0801aae2 	stmdaeq	r1, {r1, r5, r6, r7, r9, fp, sp, pc}
 8009af4:	0801aa6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, fp, sp, pc}
 8009af8:	000dbba0 	andeq	fp, sp, r0, lsr #23
 8009afc:	0801ab7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, sp, pc}
 8009b00:	0801aae6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, fp, sp, pc}
 8009b04:	0801ab95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, fp, sp, pc}
 8009b08:	0801abab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, fp, sp, pc}
 8009b0c:	0801ab05 	stmdaeq	r1, {r0, r2, r8, r9, fp, sp, pc}

08009b10 <hardware::ledblink::display(unsigned long)>:
 8009b10:	b538      	push	{r3, r4, r5, lr}
 8009b12:	4d0d      	ldr	r5, [pc, #52]	@ (8009b48 <hardware::ledblink::display(unsigned long)+0x38>)
 8009b14:	682a      	ldr	r2, [r5, #0]
 8009b16:	4603      	mov	r3, r0
 8009b18:	6990      	ldr	r0, [r2, #24]
 8009b1a:	b1a0      	cbz	r0, 8009b46 <hardware::ledblink::display(unsigned long)+0x36>
 8009b1c:	2b05      	cmp	r3, #5
 8009b1e:	bf9c      	itt	ls
 8009b20:	4a0a      	ldrls	r2, [pc, #40]	@ (8009b4c <hardware::ledblink::display(unsigned long)+0x3c>)
 8009b22:	5cd4      	ldrbls	r4, [r2, r3]
 8009b24:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8009b28:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 8009b2c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8009b30:	bf88      	it	hi
 8009b32:	2455      	movhi	r4, #85	@ 0x55
 8009b34:	f7ff fcc8 	bl	80094c8 <Display::SetCursorPos(unsigned long, unsigned long) [clone .isra.0]>
 8009b38:	682b      	ldr	r3, [r5, #0]
 8009b3a:	4621      	mov	r1, r4
 8009b3c:	6998      	ldr	r0, [r3, #24]
 8009b3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009b42:	f7ff bcc6 	b.w	80094d2 <Display::PutChar(int) [clone .isra.0]>
 8009b46:	bd38      	pop	{r3, r4, r5, pc}
 8009b48:	20002a18 	andcs	r2, r0, r8, lsl sl
 8009b4c:	0801b903 	stmdaeq	r1, {r0, r1, r8, fp, ip, sp, pc}

08009b50 <Hardware::RebootHandler()>:
 8009b50:	b508      	push	{r3, lr}
 8009b52:	4b05      	ldr	r3, [pc, #20]	@ (8009b68 <Hardware::RebootHandler()+0x18>)
 8009b54:	6818      	ldr	r0, [r3, #0]
 8009b56:	f008 fbff 	bl	8012358 <Dmx::Blackout()>
 8009b5a:	4b04      	ldr	r3, [pc, #16]	@ (8009b6c <Hardware::RebootHandler()+0x1c>)
 8009b5c:	6818      	ldr	r0, [r3, #0]
 8009b5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009b62:	f001 bd5b 	b.w	800b61c <ArtNetNode::Stop()>
 8009b66:	bf00      	nop
 8009b68:	20001c4c 	andcs	r1, r0, ip, asr #24
 8009b6c:	20001260 	andcs	r1, r0, r0, ror #4

08009b70 <main>:
 8009b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b74:	f5ad 4dc7 	sub.w	sp, sp, #25472	@ 0x6380
 8009b78:	a850      	add	r0, sp, #320	@ 0x140
 8009b7a:	f00d ff05 	bl	8017988 <Hardware::Hardware()>
 8009b7e:	a83a      	add	r0, sp, #232	@ 0xe8
 8009b80:	f00b ffa0 	bl	8015ac4 <DisplayUdf::DisplayUdf()>
 8009b84:	a803      	add	r0, sp, #12
 8009b86:	f00c fb95 	bl	80162b4 <ConfigStore::ConfigStore()>
 8009b8a:	49b0      	ldr	r1, [pc, #704]	@ (8009e4c <main+0x2dc>)
 8009b8c:	4db0      	ldr	r5, [pc, #704]	@ (8009e50 <main+0x2e0>)
 8009b8e:	a83a      	add	r0, sp, #232	@ 0xe8
 8009b90:	f7ff fcd0 	bl	8009534 <Display::TextStatus(char const*)>
 8009b94:	49ad      	ldr	r1, [pc, #692]	@ (8009e4c <main+0x2dc>)
 8009b96:	2003      	movs	r0, #3
 8009b98:	f00e f82e 	bl	8017bf8 <console_status>
 8009b9c:	a87a      	add	r0, sp, #488	@ 0x1e8
 8009b9e:	f009 fd97 	bl	80136d0 <Network::Network()>
 8009ba2:	a804      	add	r0, sp, #16
 8009ba4:	f009 fb46 	bl	8013234 <MDNS::MDNS()>
 8009ba8:	49aa      	ldr	r1, [pc, #680]	@ (8009e54 <main+0x2e4>)
 8009baa:	a83a      	add	r0, sp, #232	@ 0xe8
 8009bac:	f7ff fcc2 	bl	8009534 <Display::TextStatus(char const*)>
 8009bb0:	49a8      	ldr	r1, [pc, #672]	@ (8009e54 <main+0x2e4>)
 8009bb2:	2002      	movs	r0, #2
 8009bb4:	f00e f820 	bl	8017bf8 <console_status>
 8009bb8:	4ba7      	ldr	r3, [pc, #668]	@ (8009e58 <main+0x2e8>)
 8009bba:	4aa8      	ldr	r2, [pc, #672]	@ (8009e5c <main+0x2ec>)
 8009bbc:	49a8      	ldr	r1, [pc, #672]	@ (8009e60 <main+0x2f0>)
 8009bbe:	a805      	add	r0, sp, #20
 8009bc0:	f00d fcb2 	bl	8017528 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8009bc4:	48a7      	ldr	r0, [pc, #668]	@ (8009e64 <main+0x2f4>)
 8009bc6:	f010 fadc 	bl	801a182 <puts>
 8009bca:	49a7      	ldr	r1, [pc, #668]	@ (8009e68 <main+0x2f8>)
 8009bcc:	48a7      	ldr	r0, [pc, #668]	@ (8009e6c <main+0x2fc>)
 8009bce:	f010 fa83 	bl	801a0d8 <printf>
 8009bd2:	a8df      	add	r0, sp, #892	@ 0x37c
 8009bd4:	f001 fdf0 	bl	800b7b8 <ArtNetNode::ArtNetNode()>
 8009bd8:	a8a8      	add	r0, sp, #672	@ 0x2a0
 8009bda:	f003 fbe9 	bl	800d3b0 <ArtNetParams::ArtNetParams()>
 8009bde:	a8a8      	add	r0, sp, #672	@ 0x2a0
 8009be0:	f003 fc0c 	bl	800d3fc <ArtNetParams::Load()>
 8009be4:	a8a8      	add	r0, sp, #672	@ 0x2a0
 8009be6:	f004 f8b7 	bl	800dd58 <ArtNetParams::Set()>
 8009bea:	f8bd 22ad 	ldrh.w	r2, [sp, #685]	@ 0x2ad
 8009bee:	f8bd 32a5 	ldrh.w	r3, [sp, #677]	@ 0x2a5
 8009bf2:	f002 0203 	and.w	r2, r2, #3
 8009bf6:	2100      	movs	r1, #0
 8009bf8:	a8df      	add	r0, sp, #892	@ 0x37c
 8009bfa:	f002 fa82 	bl	800c102 <ArtNetNode::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>
 8009bfe:	f8bd 22ad 	ldrh.w	r2, [sp, #685]	@ 0x2ad
 8009c02:	f8bd 32a7 	ldrh.w	r3, [sp, #679]	@ 0x2a7
 8009c06:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8009c0a:	2101      	movs	r1, #1
 8009c0c:	a8df      	add	r0, sp, #892	@ 0x37c
 8009c0e:	f002 fa78 	bl	800c102 <ArtNetNode::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>
 8009c12:	a80c      	add	r0, sp, #48	@ 0x30
 8009c14:	f007 ffbe 	bl	8011b94 <Dmx::Dmx()>
 8009c18:	a809      	add	r0, sp, #36	@ 0x24
 8009c1a:	f007 fa73 	bl	8011104 <DmxParams::DmxParams()>
 8009c1e:	a809      	add	r0, sp, #36	@ 0x24
 8009c20:	f007 fa81 	bl	8011126 <DmxParams::Load()>
 8009c24:	a90c      	add	r1, sp, #48	@ 0x30
 8009c26:	a809      	add	r0, sp, #36	@ 0x24
 8009c28:	f007 fb96 	bl	8011358 <DmxParams::Set(Dmx*)>
 8009c2c:	682c      	ldr	r4, [r5, #0]
 8009c2e:	2628      	movs	r6, #40	@ 0x28
 8009c30:	2c01      	cmp	r4, #1
 8009c32:	f240 80f8 	bls.w	8009e26 <main+0x2b6>
 8009c36:	ab07      	add	r3, sp, #28
 8009c38:	ac07      	add	r4, sp, #28
 8009c3a:	4a8d      	ldr	r2, [pc, #564]	@ (8009e70 <main+0x300>)
 8009c3c:	601a      	str	r2, [r3, #0]
 8009c3e:	4620      	mov	r0, r4
 8009c40:	2500      	movs	r5, #0
 8009c42:	711d      	strb	r5, [r3, #4]
 8009c44:	f7ff fb24 	bl	8009290 <DmxSend::Print()>
 8009c48:	a82f      	add	r0, sp, #188	@ 0xbc
 8009c4a:	f8cd 4bdc 	str.w	r4, [sp, #3036]	@ 0xbdc
 8009c4e:	f8cd 4470 	str.w	r4, [sp, #1136]	@ 0x470
 8009c52:	f006 fc4b 	bl	80104ec <RDMDeviceParams::RDMDeviceParams()>
 8009c56:	f50d 50a7 	add.w	r0, sp, #5344	@ 0x14e0
 8009c5a:	f7ff fd33 	bl	80096c4 <ArtNetRdmController::ArtNetRdmController()>
 8009c5e:	a82f      	add	r0, sp, #188	@ 0xbc
 8009c60:	f006 fc57 	bl	8010512 <RDMDeviceParams::Load()>
 8009c64:	f50d 51a7 	add.w	r1, sp, #5344	@ 0x14e0
 8009c68:	a82f      	add	r0, sp, #188	@ 0xbc
 8009c6a:	f006 fc57 	bl	801051c <RDMDeviceParams::Set(RDMDevice*)>
 8009c6e:	f50d 50a7 	add.w	r0, sp, #5344	@ 0x14e0
 8009c72:	f7ff fcb9 	bl	80095e8 <RDMDevice::Init()>
 8009c76:	f50d 50a7 	add.w	r0, sp, #5344	@ 0x14e0
 8009c7a:	f006 fbd3 	bl	8010424 <RDMDevice::Print()>
 8009c7e:	f8bd 22a2 	ldrh.w	r2, [sp, #674]	@ 0x2a2
 8009c82:	f50d 51a7 	add.w	r1, sp, #5344	@ 0x14e0
 8009c86:	f002 0201 	and.w	r2, r2, #1
 8009c8a:	a8df      	add	r0, sp, #892	@ 0x37c
 8009c8c:	f005 f8a6 	bl	800eddc <ArtNetNode::SetRdmController(ArtNetRdmController*, bool)>
 8009c90:	a8df      	add	r0, sp, #892	@ 0x37c
 8009c92:	f003 fa6d 	bl	800d170 <ArtNetNode::Print()>
 8009c96:	f89d 3c94 	ldrb.w	r3, [sp, #3220]	@ 0xc94
 8009c9a:	f89d 4c93 	ldrb.w	r4, [sp, #3219]	@ 0xc93
 8009c9e:	4975      	ldr	r1, [pc, #468]	@ (8009e74 <main+0x304>)
 8009ca0:	441c      	add	r4, r3
 8009ca2:	4622      	mov	r2, r4
 8009ca4:	a83a      	add	r0, sp, #232	@ 0xe8
 8009ca6:	f00b ff23 	bl	8015af0 <DisplayUdf::SetTitle(char const*, ...)>
 8009caa:	2202      	movs	r2, #2
 8009cac:	4611      	mov	r1, r2
 8009cae:	a83a      	add	r0, sp, #232	@ 0xe8
 8009cb0:	f00b ff31 	bl	8015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cb4:	2203      	movs	r2, #3
 8009cb6:	4611      	mov	r1, r2
 8009cb8:	a83a      	add	r0, sp, #232	@ 0xe8
 8009cba:	f00b ff2c 	bl	8015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cbe:	2208      	movs	r2, #8
 8009cc0:	2104      	movs	r1, #4
 8009cc2:	a83a      	add	r0, sp, #232	@ 0xe8
 8009cc4:	f00b ff27 	bl	8015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cc8:	2209      	movs	r2, #9
 8009cca:	2105      	movs	r1, #5
 8009ccc:	a83a      	add	r0, sp, #232	@ 0xe8
 8009cce:	f00b ff22 	bl	8015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8009cd2:	a81c      	add	r0, sp, #112	@ 0x70
 8009cd4:	f00b ffea 	bl	8015cac <DisplayUdfParams::DisplayUdfParams()>
 8009cd8:	a81c      	add	r0, sp, #112	@ 0x70
 8009cda:	f00b fff5 	bl	8015cc8 <DisplayUdfParams::Load()>
 8009cde:	a93a      	add	r1, sp, #232	@ 0xe8
 8009ce0:	a81c      	add	r0, sp, #112	@ 0x70
 8009ce2:	f00c f919 	bl	8015f18 <DisplayUdfParams::Set(DisplayUdf*)>
 8009ce6:	a83a      	add	r0, sp, #232	@ 0xe8
 8009ce8:	f00b ff30 	bl	8015b4c <DisplayUdf::Show()>
 8009cec:	f8bd 22a2 	ldrh.w	r2, [sp, #674]	@ 0x2a2
 8009cf0:	4629      	mov	r1, r5
 8009cf2:	4623      	mov	r3, r4
 8009cf4:	f002 0201 	and.w	r2, r2, #1
 8009cf8:	a825      	add	r0, sp, #148	@ 0x94
 8009cfa:	f000 fa51 	bl	800a1a0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>
 8009cfe:	a814      	add	r0, sp, #80	@ 0x50
 8009d00:	f000 fd16 	bl	800a730 <RemoteConfigParams::RemoteConfigParams()>
 8009d04:	a814      	add	r0, sp, #80	@ 0x50
 8009d06:	f000 fd1b 	bl	800a740 <RemoteConfigParams::Load()>
 8009d0a:	a925      	add	r1, sp, #148	@ 0x94
 8009d0c:	a814      	add	r0, sp, #80	@ 0x50
 8009d0e:	f000 fe25 	bl	800a95c <RemoteConfigParams::Set(RemoteConfig*)>
 8009d12:	a803      	add	r0, sp, #12
 8009d14:	f00c fbb2 	bl	801647c <ConfigStore::Flash()>
 8009d18:	2800      	cmp	r0, #0
 8009d1a:	d1fa      	bne.n	8009d12 <main+0x1a2>
 8009d1c:	a804      	add	r0, sp, #16
 8009d1e:	f009 fc0d 	bl	801353c <MDNS::Print()>
 8009d22:	4955      	ldr	r1, [pc, #340]	@ (8009e78 <main+0x308>)
 8009d24:	a83a      	add	r0, sp, #232	@ 0xe8
 8009d26:	f7ff fc05 	bl	8009534 <Display::TextStatus(char const*)>
 8009d2a:	4953      	ldr	r1, [pc, #332]	@ (8009e78 <main+0x308>)
 8009d2c:	2003      	movs	r0, #3
 8009d2e:	f00d ff63 	bl	8017bf8 <console_status>
 8009d32:	a8df      	add	r0, sp, #892	@ 0x37c
 8009d34:	f001 fe7a 	bl	800ba2c <ArtNetNode::Start()>
 8009d38:	4950      	ldr	r1, [pc, #320]	@ (8009e7c <main+0x30c>)
 8009d3a:	a83a      	add	r0, sp, #232	@ 0xe8
 8009d3c:	f7ff fbfa 	bl	8009534 <Display::TextStatus(char const*)>
 8009d40:	494e      	ldr	r1, [pc, #312]	@ (8009e7c <main+0x30c>)
 8009d42:	2002      	movs	r0, #2
 8009d44:	f00d ff58 	bl	8017bf8 <console_status>
 8009d48:	2102      	movs	r1, #2
 8009d4a:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8009d4e:	f00e fb87 	bl	8018460 <fwdgt_config>
 8009d52:	ab50      	add	r3, sp, #320	@ 0x140
 8009d54:	2801      	cmp	r0, #1
 8009d56:	bf0c      	ite	eq
 8009d58:	2201      	moveq	r2, #1
 8009d5a:	2200      	movne	r2, #0
 8009d5c:	741a      	strb	r2, [r3, #16]
 8009d5e:	d101      	bne.n	8009d64 <main+0x1f4>
 8009d60:	f00e fb6e 	bl	8018440 <fwdgt_enable>
 8009d64:	4f46      	ldr	r7, [pc, #280]	@ (8009e80 <main+0x310>)
 8009d66:	4d47      	ldr	r5, [pc, #284]	@ (8009e84 <main+0x314>)
 8009d68:	4e47      	ldr	r6, [pc, #284]	@ (8009e88 <main+0x318>)
 8009d6a:	f00e fb71 	bl	8018450 <fwdgt_counter_reload>
 8009d6e:	f7fe fc79 	bl	8008664 <net::net_handle()>
 8009d72:	f7ff fbb3 	bl	80094dc <net::dhcp_run()>
 8009d76:	a8df      	add	r0, sp, #892	@ 0x37c
 8009d78:	f7ff fe20 	bl	80099bc <ArtNetNode::Run()>
 8009d7c:	f89d 20a0 	ldrb.w	r2, [sp, #160]	@ 0xa0
 8009d80:	ab25      	add	r3, sp, #148	@ 0x94
 8009d82:	bb32      	cbnz	r2, 8009dd2 <main+0x262>
 8009d84:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8009d86:	aa06      	add	r2, sp, #24
 8009d88:	69a0      	ldr	r0, [r4, #24]
 8009d8a:	f104 011c 	add.w	r1, r4, #28
 8009d8e:	f00a fd4f 	bl	8014830 <net::tcp_read(long, unsigned char const**, unsigned long&)>
 8009d92:	4680      	mov	r8, r0
 8009d94:	b180      	cbz	r0, 8009db8 <main+0x248>
 8009d96:	9b06      	ldr	r3, [sp, #24]
 8009d98:	4a3c      	ldr	r2, [pc, #240]	@ (8009e8c <main+0x31c>)
 8009d9a:	493d      	ldr	r1, [pc, #244]	@ (8009e90 <main+0x320>)
 8009d9c:	9300      	str	r3, [sp, #0]
 8009d9e:	483d      	ldr	r0, [pc, #244]	@ (8009e94 <main+0x324>)
 8009da0:	2333      	movs	r3, #51	@ 0x33
 8009da2:	f010 f999 	bl	801a0d8 <printf>
 8009da6:	9b06      	ldr	r3, [sp, #24]
 8009da8:	69e2      	ldr	r2, [r4, #28]
 8009daa:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8009dae:	4641      	mov	r1, r8
 8009db0:	f10d 0918 	add.w	r9, sp, #24
 8009db4:	f001 faaa 	bl	800b30c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>
 8009db8:	ab06      	add	r3, sp, #24
 8009dba:	aa2b      	add	r2, sp, #172	@ 0xac
 8009dbc:	4639      	mov	r1, r7
 8009dbe:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8009dc0:	f00a fe02 	bl	80149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009dc4:	2803      	cmp	r0, #3
 8009dc6:	ac25      	add	r4, sp, #148	@ 0x94
 8009dc8:	61e0      	str	r0, [r4, #28]
 8009dca:	d902      	bls.n	8009dd2 <main+0x262>
 8009dcc:	4620      	mov	r0, r4
 8009dce:	f000 fb93 	bl	800a4f8 <RemoteConfig::HandleRequest()>
 8009dd2:	a803      	add	r0, sp, #12
 8009dd4:	f00c fb52 	bl	801647c <ConfigStore::Flash()>
 8009dd8:	4b2f      	ldr	r3, [pc, #188]	@ (8009e98 <main+0x328>)
 8009dda:	4a30      	ldr	r2, [pc, #192]	@ (8009e9c <main+0x32c>)
 8009ddc:	4929      	ldr	r1, [pc, #164]	@ (8009e84 <main+0x314>)
 8009dde:	6830      	ldr	r0, [r6, #0]
 8009de0:	f00a fdf2 	bl	80149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>
 8009de4:	4b2e      	ldr	r3, [pc, #184]	@ (8009ea0 <main+0x330>)
 8009de6:	280b      	cmp	r0, #11
 8009de8:	6018      	str	r0, [r3, #0]
 8009dea:	d90a      	bls.n	8009e02 <main+0x292>
 8009dec:	682b      	ldr	r3, [r5, #0]
 8009dee:	789a      	ldrb	r2, [r3, #2]
 8009df0:	f012 0f78 	tst.w	r2, #120	@ 0x78
 8009df4:	d105      	bne.n	8009e02 <main+0x292>
 8009df6:	8899      	ldrh	r1, [r3, #4]
 8009df8:	ba49      	rev16	r1, r1
 8009dfa:	b289      	uxth	r1, r1
 8009dfc:	a804      	add	r0, sp, #16
 8009dfe:	f009 facf 	bl	80133a0 <MDNS::HandleQuestions(unsigned long)>
 8009e02:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8009e04:	4c27      	ldr	r4, [pc, #156]	@ (8009ea4 <main+0x334>)
 8009e06:	aa3a      	add	r2, sp, #232	@ 0xe8
 8009e08:	2900      	cmp	r1, #0
 8009e0a:	d053      	beq.n	8009eb4 <main+0x344>
 8009e0c:	7d53      	ldrb	r3, [r2, #21]
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	d14a      	bne.n	8009ea8 <main+0x338>
 8009e12:	6823      	ldr	r3, [r4, #0]
 8009e14:	6852      	ldr	r2, [r2, #4]
 8009e16:	1a9b      	subs	r3, r3, r2
 8009e18:	4299      	cmp	r1, r3
 8009e1a:	d24b      	bcs.n	8009eb4 <main+0x344>
 8009e1c:	2101      	movs	r1, #1
 8009e1e:	a83a      	add	r0, sp, #232	@ 0xe8
 8009e20:	f7ff fbd2 	bl	80095c8 <Display::SetSleep(bool)>
 8009e24:	e046      	b.n	8009eb4 <main+0x344>
 8009e26:	abdf      	add	r3, sp, #892	@ 0x37c
 8009e28:	fb06 3304 	mla	r3, r6, r4, r3
 8009e2c:	6829      	ldr	r1, [r5, #0]
 8009e2e:	f8d3 2874 	ldr.w	r2, [r3, #2164]	@ 0x874
 8009e32:	3a01      	subs	r2, #1
 8009e34:	eba4 0101 	sub.w	r1, r4, r1
 8009e38:	f04f 0300 	mov.w	r3, #0
 8009e3c:	bf18      	it	ne
 8009e3e:	2201      	movne	r2, #1
 8009e40:	a80c      	add	r0, sp, #48	@ 0x30
 8009e42:	f008 f817 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8009e46:	3401      	adds	r4, #1
 8009e48:	e6f2      	b.n	8009c30 <main+0xc0>
 8009e4a:	bf00      	nop
 8009e4c:	0801e88c 	stmdaeq	r1, {r2, r3, r7, fp, sp, lr, pc}
 8009e50:	20000088 	andcs	r0, r0, r8, lsl #1
 8009e54:	0801e87c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, sp, lr, pc}
 8009e58:	0801abcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, fp, sp, pc}
 8009e5c:	0801abd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, fp, sp, pc}
 8009e60:	0801b958 	stmdaeq	r1, {r3, r4, r6, r8, fp, ip, sp, pc}
 8009e64:	20002aac 	andcs	r2, r0, ip, lsr #21
 8009e68:	0801abe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, fp, sp, pc}
 8009e6c:	0801ac0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, sp, pc}
 8009e70:	0801b914 	stmdaeq	r1, {r2, r4, r8, fp, ip, sp, pc}
 8009e74:	0801ac1a 	stmdaeq	r1, {r1, r3, r4, sl, fp, sp, pc}
 8009e78:	0801e6a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr, pc}
 8009e7c:	0801e698 	stmdaeq	r1, {r3, r4, r7, r9, sl, sp, lr, pc}
 8009e80:	20000c94 	mulcs	r0, r4, ip
 8009e84:	200026f4 	strdcs	r2, [r0], -r4
 8009e88:	20002704 	andcs	r2, r0, r4, lsl #14
 8009e8c:	0801ac27 	stmdaeq	r1, {r0, r1, r2, r5, sl, fp, sp, pc}
 8009e90:	0801aae2 	stmdaeq	r1, {r1, r5, r6, r7, r9, fp, sp, pc}
 8009e94:	0801ac51 	stmdaeq	r1, {r0, r4, r6, sl, fp, sp, pc}
 8009e98:	200026fc 	strdcs	r2, [r0], -ip
 8009e9c:	20002700 	andcs	r2, r0, r0, lsl #14
 8009ea0:	200026f8 	strdcs	r2, [r0], -r8
 8009ea4:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8009ea8:	4b0f      	ldr	r3, [pc, #60]	@ (8009ee8 <main+0x378>)
 8009eaa:	f8d3 1810 	ldr.w	r1, [r3, #2064]	@ 0x810
 8009eae:	f411 5100 	ands.w	r1, r1, #8192	@ 0x2000
 8009eb2:	d0b4      	beq.n	8009e1e <main+0x2ae>
 8009eb4:	f8d4 9000 	ldr.w	r9, [r4]
 8009eb8:	ac50      	add	r4, sp, #320	@ 0x140
 8009eba:	f04f 0800 	mov.w	r8, #0
 8009ebe:	46a2      	mov	sl, r4
 8009ec0:	f8da 30a0 	ldr.w	r3, [sl, #160]	@ 0xa0
 8009ec4:	4598      	cmp	r8, r3
 8009ec6:	d302      	bcc.n	8009ece <main+0x35e>
 8009ec8:	f00d ff02 	bl	8017cd0 <stack_debug_run()>
 8009ecc:	e74d      	b.n	8009d6a <main+0x1fa>
 8009ece:	6a23      	ldr	r3, [r4, #32]
 8009ed0:	4599      	cmp	r9, r3
 8009ed2:	d304      	bcc.n	8009ede <main+0x36e>
 8009ed4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009ed6:	4798      	blx	r3
 8009ed8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009eda:	444b      	add	r3, r9
 8009edc:	6223      	str	r3, [r4, #32]
 8009ede:	f108 0801 	add.w	r8, r8, #1
 8009ee2:	3410      	adds	r4, #16
 8009ee4:	e7ec      	b.n	8009ec0 <main+0x350>
 8009ee6:	bf00      	nop
 8009ee8:	40020000 	andmi	r0, r2, r0

08009eec <RemoteConfig::HandleRdmSet()>:
 8009eec:	69c3      	ldr	r3, [r0, #28]
 8009eee:	2b05      	cmp	r3, #5
 8009ef0:	d109      	bne.n	8009f06 <RemoteConfig::HandleRdmSet()+0x1a>
 8009ef2:	4b05      	ldr	r3, [pc, #20]	@ (8009f08 <RemoteConfig::HandleRdmSet()+0x1c>)
 8009ef4:	681b      	ldr	r3, [r3, #0]
 8009ef6:	7959      	ldrb	r1, [r3, #5]
 8009ef8:	4b04      	ldr	r3, [pc, #16]	@ (8009f0c <RemoteConfig::HandleRdmSet()+0x20>)
 8009efa:	3930      	subs	r1, #48	@ 0x30
 8009efc:	6818      	ldr	r0, [r3, #0]
 8009efe:	bf18      	it	ne
 8009f00:	2101      	movne	r1, #1
 8009f02:	f004 bf86 	b.w	800ee12 <ArtNetNode::SetRdm(bool)>
 8009f06:	4770      	bx	lr
 8009f08:	20000c94 	mulcs	r0, r4, ip
 8009f0c:	20001260 	andcs	r1, r0, r0, ror #4

08009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>:
 8009f10:	b430      	push	{r4, r5}
 8009f12:	4d05      	ldr	r5, [pc, #20]	@ (8009f28 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x18>)
 8009f14:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8009f18:	682d      	ldr	r5, [r5, #0]
 8009f1a:	b11d      	cbz	r5, 8009f24 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]+0x14>
 8009f1c:	9402      	str	r4, [sp, #8]
 8009f1e:	bc30      	pop	{r4, r5}
 8009f20:	f00a bd70 	b.w	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8009f24:	bc30      	pop	{r4, r5}
 8009f26:	4770      	bx	lr
 8009f28:	20002954 	andcs	r2, r0, r4, asr r9

08009f2c <RemoteConfig::HandleRdmGet()>:
 8009f2c:	4b0e      	ldr	r3, [pc, #56]	@ (8009f68 <RemoteConfig::HandleRdmGet()+0x3c>)
 8009f2e:	681b      	ldr	r3, [r3, #0]
 8009f30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f32:	f893 1925 	ldrb.w	r1, [r3, #2341]	@ 0x925
 8009f36:	4d0d      	ldr	r5, [pc, #52]	@ (8009f6c <RemoteConfig::HandleRdmGet()+0x40>)
 8009f38:	4a0d      	ldr	r2, [pc, #52]	@ (8009f70 <RemoteConfig::HandleRdmGet()+0x44>)
 8009f3a:	4b0e      	ldr	r3, [pc, #56]	@ (8009f74 <RemoteConfig::HandleRdmGet()+0x48>)
 8009f3c:	4604      	mov	r4, r0
 8009f3e:	2900      	cmp	r1, #0
 8009f40:	bf18      	it	ne
 8009f42:	4613      	movne	r3, r2
 8009f44:	6828      	ldr	r0, [r5, #0]
 8009f46:	4a0c      	ldr	r2, [pc, #48]	@ (8009f78 <RemoteConfig::HandleRdmGet()+0x4c>)
 8009f48:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009f4c:	f010 f8ec 	bl	801a128 <snprintf>
 8009f50:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009f54:	9300      	str	r3, [sp, #0]
 8009f56:	4602      	mov	r2, r0
 8009f58:	69a3      	ldr	r3, [r4, #24]
 8009f5a:	6829      	ldr	r1, [r5, #0]
 8009f5c:	6960      	ldr	r0, [r4, #20]
 8009f5e:	f7ff ffd7 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009f62:	b003      	add	sp, #12
 8009f64:	bd30      	pop	{r4, r5, pc}
 8009f66:	bf00      	nop
 8009f68:	20001260 	andcs	r1, r0, r0, ror #4
 8009f6c:	20000c94 	mulcs	r0, r4, ip
 8009f70:	0801ac79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, sp, pc}
 8009f74:	0801adc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, sl, fp, sp, pc}
 8009f78:	0801ac7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, sp, pc}

08009f7c <RemoteConfig::HandleDisplayGet()>:
 8009f7c:	4b0d      	ldr	r3, [pc, #52]	@ (8009fb4 <RemoteConfig::HandleDisplayGet()+0x38>)
 8009f7e:	681b      	ldr	r3, [r3, #0]
 8009f80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f82:	7d59      	ldrb	r1, [r3, #21]
 8009f84:	4d0c      	ldr	r5, [pc, #48]	@ (8009fb8 <RemoteConfig::HandleDisplayGet()+0x3c>)
 8009f86:	4a0d      	ldr	r2, [pc, #52]	@ (8009fbc <RemoteConfig::HandleDisplayGet()+0x40>)
 8009f88:	4b0d      	ldr	r3, [pc, #52]	@ (8009fc0 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009f8a:	4604      	mov	r4, r0
 8009f8c:	2900      	cmp	r1, #0
 8009f8e:	bf08      	it	eq
 8009f90:	4613      	moveq	r3, r2
 8009f92:	6828      	ldr	r0, [r5, #0]
 8009f94:	4a0b      	ldr	r2, [pc, #44]	@ (8009fc4 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009f96:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009f9a:	f010 f8c5 	bl	801a128 <snprintf>
 8009f9e:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009fa2:	9300      	str	r3, [sp, #0]
 8009fa4:	4602      	mov	r2, r0
 8009fa6:	69a3      	ldr	r3, [r4, #24]
 8009fa8:	6829      	ldr	r1, [r5, #0]
 8009faa:	6960      	ldr	r0, [r4, #20]
 8009fac:	f7ff ffb0 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009fb0:	b003      	add	sp, #12
 8009fb2:	bd30      	pop	{r4, r5, pc}
 8009fb4:	20002a18 	andcs	r2, r0, r8, lsl sl
 8009fb8:	20000c94 	mulcs	r0, r4, ip
 8009fbc:	0801ac79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, sp, pc}
 8009fc0:	0801adc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, sl, fp, sp, pc}
 8009fc4:	0801ac84 	stmdaeq	r1, {r2, r7, sl, fp, sp, pc}

08009fc8 <RemoteConfig::HandleUptime()>:
 8009fc8:	7bc3      	ldrb	r3, [r0, #15]
 8009fca:	b1ab      	cbz	r3, 8009ff8 <RemoteConfig::HandleUptime()+0x30>
 8009fcc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fce:	4b0b      	ldr	r3, [pc, #44]	@ (8009ffc <RemoteConfig::HandleUptime()+0x34>)
 8009fd0:	4d0b      	ldr	r5, [pc, #44]	@ (800a000 <RemoteConfig::HandleUptime()+0x38>)
 8009fd2:	685b      	ldr	r3, [r3, #4]
 8009fd4:	4a0b      	ldr	r2, [pc, #44]	@ (800a004 <RemoteConfig::HandleUptime()+0x3c>)
 8009fd6:	4604      	mov	r4, r0
 8009fd8:	f240 518b 	movw	r1, #1419	@ 0x58b
 8009fdc:	6828      	ldr	r0, [r5, #0]
 8009fde:	f010 f8a3 	bl	801a128 <snprintf>
 8009fe2:	f642 1305 	movw	r3, #10501	@ 0x2905
 8009fe6:	9300      	str	r3, [sp, #0]
 8009fe8:	4602      	mov	r2, r0
 8009fea:	69a3      	ldr	r3, [r4, #24]
 8009fec:	6829      	ldr	r1, [r5, #0]
 8009fee:	6960      	ldr	r0, [r4, #20]
 8009ff0:	f7ff ff8e 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 8009ff4:	b003      	add	sp, #12
 8009ff6:	bd30      	pop	{r4, r5, pc}
 8009ff8:	4770      	bx	lr
 8009ffa:	bf00      	nop
 8009ffc:	2000a3ac 	andcs	sl, r0, ip, lsr #7
 800a000:	20000c94 	mulcs	r0, r4, ip
 800a004:	0801ac90 	stmdaeq	r1, {r4, r7, sl, fp, sp, pc}

0800a008 <RemoteConfig::HandleVersion()>:
 800a008:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a00a:	4d0a      	ldr	r5, [pc, #40]	@ (800a034 <RemoteConfig::HandleVersion()+0x2c>)
 800a00c:	4b0a      	ldr	r3, [pc, #40]	@ (800a038 <RemoteConfig::HandleVersion()+0x30>)
 800a00e:	4a0b      	ldr	r2, [pc, #44]	@ (800a03c <RemoteConfig::HandleVersion()+0x34>)
 800a010:	4604      	mov	r4, r0
 800a012:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a016:	6828      	ldr	r0, [r5, #0]
 800a018:	f010 f886 	bl	801a128 <snprintf>
 800a01c:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a020:	9300      	str	r3, [sp, #0]
 800a022:	4602      	mov	r2, r0
 800a024:	69a3      	ldr	r3, [r4, #24]
 800a026:	6829      	ldr	r1, [r5, #0]
 800a028:	6960      	ldr	r0, [r4, #20]
 800a02a:	f7ff ff71 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a02e:	b003      	add	sp, #12
 800a030:	bd30      	pop	{r4, r5, pc}
 800a032:	bf00      	nop
 800a034:	20000c94 	mulcs	r0, r4, ip
 800a038:	20002aac 	andcs	r2, r0, ip, lsr #21
 800a03c:	0801ac9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, sl, fp, sp, pc}

0800a040 <RemoteConfig::HandleTftpGet()>:
 800a040:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a042:	4604      	mov	r4, r0
 800a044:	4d0d      	ldr	r5, [pc, #52]	@ (800a07c <RemoteConfig::HandleTftpGet()+0x3c>)
 800a046:	f000 fd29 	bl	800aa9c <RemoteConfig::PlatformHandleTftpGet()>
 800a04a:	f894 1020 	ldrb.w	r1, [r4, #32]
 800a04e:	4a0c      	ldr	r2, [pc, #48]	@ (800a080 <RemoteConfig::HandleTftpGet()+0x40>)
 800a050:	4b0c      	ldr	r3, [pc, #48]	@ (800a084 <RemoteConfig::HandleTftpGet()+0x44>)
 800a052:	6828      	ldr	r0, [r5, #0]
 800a054:	2900      	cmp	r1, #0
 800a056:	bf18      	it	ne
 800a058:	4613      	movne	r3, r2
 800a05a:	4a0b      	ldr	r2, [pc, #44]	@ (800a088 <RemoteConfig::HandleTftpGet()+0x48>)
 800a05c:	f240 518b 	movw	r1, #1419	@ 0x58b
 800a060:	f010 f862 	bl	801a128 <snprintf>
 800a064:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a068:	9300      	str	r3, [sp, #0]
 800a06a:	4602      	mov	r2, r0
 800a06c:	69a3      	ldr	r3, [r4, #24]
 800a06e:	6829      	ldr	r1, [r5, #0]
 800a070:	6960      	ldr	r0, [r4, #20]
 800a072:	f7ff ff4d 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a076:	b003      	add	sp, #12
 800a078:	bd30      	pop	{r4, r5, pc}
 800a07a:	bf00      	nop
 800a07c:	20000c94 	mulcs	r0, r4, ip
 800a080:	0801ac79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp, sp, pc}
 800a084:	0801adc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, sl, fp, sp, pc}
 800a088:	0801aca8 	stmdaeq	r1, {r3, r5, r7, sl, fp, sp, pc}

0800a08c <RemoteConfig::HandleList()>:
 800a08c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a090:	6801      	ldr	r1, [r0, #0]
 800a092:	4a23      	ldr	r2, [pc, #140]	@ (800a120 <RemoteConfig::HandleList()+0x94>)
 800a094:	4b23      	ldr	r3, [pc, #140]	@ (800a124 <RemoteConfig::HandleList()+0x98>)
 800a096:	4604      	mov	r4, r0
 800a098:	2012      	movs	r0, #18
 800a09a:	fb00 2201 	mla	r2, r0, r1, r2
 800a09e:	6860      	ldr	r0, [r4, #4]
 800a0a0:	4921      	ldr	r1, [pc, #132]	@ (800a128 <RemoteConfig::HandleList()+0x9c>)
 800a0a2:	681d      	ldr	r5, [r3, #0]
 800a0a4:	4b21      	ldr	r3, [pc, #132]	@ (800a12c <RemoteConfig::HandleList()+0xa0>)
 800a0a6:	f04f 0e0c 	mov.w	lr, #12
 800a0aa:	fb0e 1100 	mla	r1, lr, r0, r1
 800a0ae:	4820      	ldr	r0, [pc, #128]	@ (800a130 <RemoteConfig::HandleList()+0xa4>)
 800a0b0:	681e      	ldr	r6, [r3, #0]
 800a0b2:	f890 8009 	ldrb.w	r8, [r0, #9]
 800a0b6:	f8d4 e008 	ldr.w	lr, [r4, #8]
 800a0ba:	b2f3      	uxtb	r3, r6
 800a0bc:	f3c6 2707 	ubfx	r7, r6, #8, #8
 800a0c0:	f3c6 4c07 	ubfx	ip, r6, #16, #8
 800a0c4:	b088      	sub	sp, #32
 800a0c6:	3507      	adds	r5, #7
 800a0c8:	0e36      	lsrs	r6, r6, #24
 800a0ca:	f1b8 0f00 	cmp.w	r8, #0
 800a0ce:	d019      	beq.n	800a104 <RemoteConfig::HandleList()+0x78>
 800a0d0:	3009      	adds	r0, #9
 800a0d2:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800a0d6:	e9cd e005 	strd	lr, r0, [sp, #20]
 800a0da:	e9cd c601 	strd	ip, r6, [sp, #4]
 800a0de:	4a15      	ldr	r2, [pc, #84]	@ (800a134 <RemoteConfig::HandleList()+0xa8>)
 800a0e0:	9700      	str	r7, [sp, #0]
 800a0e2:	f240 5184 	movw	r1, #1412	@ 0x584
 800a0e6:	4628      	mov	r0, r5
 800a0e8:	f010 f81e 	bl	801a128 <snprintf>
 800a0ec:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a0f0:	9300      	str	r3, [sp, #0]
 800a0f2:	4602      	mov	r2, r0
 800a0f4:	69a3      	ldr	r3, [r4, #24]
 800a0f6:	6960      	ldr	r0, [r4, #20]
 800a0f8:	4629      	mov	r1, r5
 800a0fa:	f7ff ff09 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a0fe:	b008      	add	sp, #32
 800a100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a104:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 800a108:	e9cd 6202 	strd	r6, r2, [sp, #8]
 800a10c:	e9cd 7c00 	strd	r7, ip, [sp]
 800a110:	4a09      	ldr	r2, [pc, #36]	@ (800a138 <RemoteConfig::HandleList()+0xac>)
 800a112:	f240 5184 	movw	r1, #1412	@ 0x584
 800a116:	4628      	mov	r0, r5
 800a118:	f010 f806 	bl	801a128 <snprintf>
 800a11c:	e7e6      	b.n	800a0ec <RemoteConfig::HandleList()+0x60>
 800a11e:	bf00      	nop
 800a120:	0801b9f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, fp, ip, sp, pc}
 800a124:	20000c94 	mulcs	r0, r4, ip
 800a128:	0801b95c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, ip, sp, pc}
 800a12c:	20002954 	andcs	r2, r0, r4, asr r9
 800a130:	20000c98 	mulcs	r0, r8, ip
 800a134:	0801acb1 	stmdaeq	r1, {r0, r4, r5, r7, sl, fp, sp, pc}
 800a138:	0801acca 	stmdaeq	r1, {r1, r3, r6, r7, sl, fp, sp, pc}

0800a13c <RemoteConfig::HandleDisplaySet()>:
 800a13c:	b508      	push	{r3, lr}
 800a13e:	69c3      	ldr	r3, [r0, #28]
 800a140:	2b09      	cmp	r3, #9
 800a142:	d10a      	bne.n	800a15a <RemoteConfig::HandleDisplaySet()+0x1e>
 800a144:	4b05      	ldr	r3, [pc, #20]	@ (800a15c <RemoteConfig::HandleDisplaySet()+0x20>)
 800a146:	681b      	ldr	r3, [r3, #0]
 800a148:	7a59      	ldrb	r1, [r3, #9]
 800a14a:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 800a14e:	4259      	negs	r1, r3
 800a150:	4159      	adcs	r1, r3
 800a152:	4b03      	ldr	r3, [pc, #12]	@ (800a160 <RemoteConfig::HandleDisplaySet()+0x24>)
 800a154:	6818      	ldr	r0, [r3, #0]
 800a156:	f7ff fa37 	bl	80095c8 <Display::SetSleep(bool)>
 800a15a:	bd08      	pop	{r3, pc}
 800a15c:	20000c94 	mulcs	r0, r4, ip
 800a160:	20002a18 	andcs	r2, r0, r8, lsl sl

0800a164 <RemoteConfig::HandleTftpSet()>:
 800a164:	69c3      	ldr	r3, [r0, #28]
 800a166:	2b06      	cmp	r3, #6
 800a168:	d115      	bne.n	800a196 <RemoteConfig::HandleTftpSet()+0x32>
 800a16a:	b510      	push	{r4, lr}
 800a16c:	4b0a      	ldr	r3, [pc, #40]	@ (800a198 <RemoteConfig::HandleTftpSet()+0x34>)
 800a16e:	681b      	ldr	r3, [r3, #0]
 800a170:	799b      	ldrb	r3, [r3, #6]
 800a172:	2b30      	cmp	r3, #48	@ 0x30
 800a174:	bf14      	ite	ne
 800a176:	2301      	movne	r3, #1
 800a178:	2300      	moveq	r3, #0
 800a17a:	4604      	mov	r4, r0
 800a17c:	f880 3020 	strb.w	r3, [r0, #32]
 800a180:	d004      	beq.n	800a18c <RemoteConfig::HandleTftpSet()+0x28>
 800a182:	4b06      	ldr	r3, [pc, #24]	@ (800a19c <RemoteConfig::HandleTftpSet()+0x38>)
 800a184:	2100      	movs	r1, #0
 800a186:	6818      	ldr	r0, [r3, #0]
 800a188:	f7ff fa1e 	bl	80095c8 <Display::SetSleep(bool)>
 800a18c:	4620      	mov	r0, r4
 800a18e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a192:	f000 bc5f 	b.w	800aa54 <RemoteConfig::PlatformHandleTftpSet()>
 800a196:	4770      	bx	lr
 800a198:	20000c94 	mulcs	r0, r4, ip
 800a19c:	20002a18 	andcs	r2, r0, r8, lsl sl

0800a1a0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)>:
 800a1a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a1a2:	2500      	movs	r5, #0
 800a1a4:	4604      	mov	r4, r0
 800a1a6:	e9c0 1200 	strd	r1, r2, [r0]
 800a1aa:	6083      	str	r3, [r0, #8]
 800a1ac:	60c5      	str	r5, [r0, #12]
 800a1ae:	8205      	strh	r5, [r0, #16]
 800a1b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a1b4:	e9c4 0505 	strd	r0, r5, [r4, #20]
 800a1b8:	4f13      	ldr	r7, [pc, #76]	@ (800a208 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x68>)
 800a1ba:	4814      	ldr	r0, [pc, #80]	@ (800a20c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x6c>)
 800a1bc:	4e14      	ldr	r6, [pc, #80]	@ (800a210 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x70>)
 800a1be:	6004      	str	r4, [r0, #0]
 800a1c0:	6978      	ldr	r0, [r7, #20]
 800a1c2:	6030      	str	r0, [r6, #0]
 800a1c4:	8b38      	ldrh	r0, [r7, #24]
 800a1c6:	61e5      	str	r5, [r4, #28]
 800a1c8:	f884 5020 	strb.w	r5, [r4, #32]
 800a1cc:	6265      	str	r5, [r4, #36]	@ 0x24
 800a1ce:	80b0      	strh	r0, [r6, #4]
 800a1d0:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a1d4:	71b1      	strb	r1, [r6, #6]
 800a1d6:	71f2      	strb	r2, [r6, #7]
 800a1d8:	7233      	strb	r3, [r6, #8]
 800a1da:	7275      	strb	r5, [r6, #9]
 800a1dc:	f00a fbba 	bl	8014954 <net::udp_begin(unsigned short)>
 800a1e0:	6160      	str	r0, [r4, #20]
 800a1e2:	480c      	ldr	r0, [pc, #48]	@ (800a214 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned long)+0x74>)
 800a1e4:	9500      	str	r5, [sp, #0]
 800a1e6:	462b      	mov	r3, r5
 800a1e8:	462a      	mov	r2, r5
 800a1ea:	4629      	mov	r1, r5
 800a1ec:	6800      	ldr	r0, [r0, #0]
 800a1ee:	f009 f877 	bl	80132e0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a1f2:	2020      	movs	r0, #32
 800a1f4:	f010 f9c6 	bl	801a584 <operator new(unsigned int)>
 800a1f8:	4605      	mov	r5, r0
 800a1fa:	f000 fc5d 	bl	800aab8 <HttpDaemon::HttpDaemon()>
 800a1fe:	4620      	mov	r0, r4
 800a200:	6265      	str	r5, [r4, #36]	@ 0x24
 800a202:	b003      	add	sp, #12
 800a204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a206:	bf00      	nop
 800a208:	20002954 	andcs	r2, r0, r4, asr r9
 800a20c:	20000cbc 			@ <UNDEFINED> instruction: 0x20000cbc
 800a210:	20000c98 	mulcs	r0, r8, ip
 800a214:	200026f0 	strdcs	r2, [r0], -r0

0800a218 <RemoteConfig::GetStringNode() const>:
 800a218:	4b03      	ldr	r3, [pc, #12]	@ (800a228 <RemoteConfig::GetStringNode() const+0x10>)
 800a21a:	7998      	ldrb	r0, [r3, #6]
 800a21c:	4b03      	ldr	r3, [pc, #12]	@ (800a22c <RemoteConfig::GetStringNode() const+0x14>)
 800a21e:	eb00 00c0 	add.w	r0, r0, r0, lsl #3
 800a222:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a226:	4770      	bx	lr
 800a228:	20000c98 	mulcs	r0, r8, ip
 800a22c:	0801b9f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, fp, ip, sp, pc}

0800a230 <RemoteConfig::GetStringOutput() const>:
 800a230:	4b03      	ldr	r3, [pc, #12]	@ (800a240 <RemoteConfig::GetStringOutput() const+0x10>)
 800a232:	79d8      	ldrb	r0, [r3, #7]
 800a234:	4b03      	ldr	r3, [pc, #12]	@ (800a244 <RemoteConfig::GetStringOutput() const+0x14>)
 800a236:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800a23a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800a23e:	4770      	bx	lr
 800a240:	20000c98 	mulcs	r0, r8, ip
 800a244:	0801b95c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, ip, sp, pc}

0800a248 <RemoteConfig::SetDisable(bool)>:
 800a248:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a24a:	7b06      	ldrb	r6, [r0, #12]
 800a24c:	4605      	mov	r5, r0
 800a24e:	b181      	cbz	r1, 800a272 <RemoteConfig::SetDisable(bool)+0x2a>
 800a250:	b96e      	cbnz	r6, 800a26e <RemoteConfig::SetDisable(bool)+0x26>
 800a252:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a256:	f00a fb93 	bl	8014980 <net::udp_end(unsigned short)>
 800a25a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a25e:	616b      	str	r3, [r5, #20]
 800a260:	4b0d      	ldr	r3, [pc, #52]	@ (800a298 <RemoteConfig::SetDisable(bool)+0x50>)
 800a262:	4631      	mov	r1, r6
 800a264:	6818      	ldr	r0, [r3, #0]
 800a266:	f009 f81f 	bl	80132a8 <MDNS::ServiceRecordDelete(mdns::Services)>
 800a26a:	2301      	movs	r3, #1
 800a26c:	732b      	strb	r3, [r5, #12]
 800a26e:	b002      	add	sp, #8
 800a270:	bd70      	pop	{r4, r5, r6, pc}
 800a272:	2e00      	cmp	r6, #0
 800a274:	d0fb      	beq.n	800a26e <RemoteConfig::SetDisable(bool)+0x26>
 800a276:	f642 1005 	movw	r0, #10501	@ 0x2905
 800a27a:	460c      	mov	r4, r1
 800a27c:	f00a fb6a 	bl	8014954 <net::udp_begin(unsigned short)>
 800a280:	6168      	str	r0, [r5, #20]
 800a282:	4805      	ldr	r0, [pc, #20]	@ (800a298 <RemoteConfig::SetDisable(bool)+0x50>)
 800a284:	9400      	str	r4, [sp, #0]
 800a286:	6800      	ldr	r0, [r0, #0]
 800a288:	4623      	mov	r3, r4
 800a28a:	4622      	mov	r2, r4
 800a28c:	4621      	mov	r1, r4
 800a28e:	f009 f827 	bl	80132e0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800a292:	732c      	strb	r4, [r5, #12]
 800a294:	e7eb      	b.n	800a26e <RemoteConfig::SetDisable(bool)+0x26>
 800a296:	bf00      	nop
 800a298:	200026f0 	strdcs	r2, [r0], -r0

0800a29c <RemoteConfig::SetDisplayName(char const*)>:
 800a29c:	b508      	push	{r3, lr}
 800a29e:	4809      	ldr	r0, [pc, #36]	@ (800a2c4 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800a2a0:	3901      	subs	r1, #1
 800a2a2:	2217      	movs	r2, #23
 800a2a4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a2a8:	b11b      	cbz	r3, 800a2b2 <RemoteConfig::SetDisplayName(char const*)+0x16>
 800a2aa:	3a01      	subs	r2, #1
 800a2ac:	f800 3b01 	strb.w	r3, [r0], #1
 800a2b0:	d1f8      	bne.n	800a2a4 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800a2b2:	2100      	movs	r1, #0
 800a2b4:	f00f fc2c 	bl	8019b10 <memset>
 800a2b8:	4b03      	ldr	r3, [pc, #12]	@ (800a2c8 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800a2ba:	2200      	movs	r2, #0
 800a2bc:	f883 2020 	strb.w	r2, [r3, #32]
 800a2c0:	bd08      	pop	{r3, pc}
 800a2c2:	bf00      	nop
 800a2c4:	20000ca1 	andcs	r0, r0, r1, lsr #25
 800a2c8:	20000c98 	mulcs	r0, r8, ip

0800a2cc <RemoteConfig::HandleGet(void*, unsigned long)>:
 800a2cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a2ce:	4f29      	ldr	r7, [pc, #164]	@ (800a374 <RemoteConfig::HandleGet(void*, unsigned long)+0xa8>)
 800a2d0:	b085      	sub	sp, #20
 800a2d2:	4604      	mov	r4, r0
 800a2d4:	4616      	mov	r6, r2
 800a2d6:	460d      	mov	r5, r1
 800a2d8:	b9a9      	cbnz	r1, 800a306 <RemoteConfig::HandleGet(void*, unsigned long)+0x3a>
 800a2da:	6839      	ldr	r1, [r7, #0]
 800a2dc:	f44f 63b1 	mov.w	r3, #1416	@ 0x588
 800a2e0:	aa03      	add	r2, sp, #12
 800a2e2:	3105      	adds	r1, #5
 800a2e4:	9303      	str	r3, [sp, #12]
 800a2e6:	f000 fb89 	bl	800a9fc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a2ea:	1e03      	subs	r3, r0, #0
 800a2ec:	da1b      	bge.n	800a326 <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a2ee:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a2f2:	9300      	str	r3, [sp, #0]
 800a2f4:	69a3      	ldr	r3, [r4, #24]
 800a2f6:	4920      	ldr	r1, [pc, #128]	@ (800a378 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a2f8:	6960      	ldr	r0, [r4, #20]
 800a2fa:	220b      	movs	r2, #11
 800a2fc:	f7ff fe08 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a300:	200c      	movs	r0, #12
 800a302:	b005      	add	sp, #20
 800a304:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a306:	9203      	str	r2, [sp, #12]
 800a308:	aa03      	add	r2, sp, #12
 800a30a:	6039      	str	r1, [r7, #0]
 800a30c:	f000 fb76 	bl	800a9fc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a310:	1e03      	subs	r3, r0, #0
 800a312:	da08      	bge.n	800a326 <RemoteConfig::HandleGet(void*, unsigned long)+0x5a>
 800a314:	2e0b      	cmp	r6, #11
 800a316:	4632      	mov	r2, r6
 800a318:	4917      	ldr	r1, [pc, #92]	@ (800a378 <RemoteConfig::HandleGet(void*, unsigned long)+0xac>)
 800a31a:	bf28      	it	cs
 800a31c:	220b      	movcs	r2, #11
 800a31e:	4628      	mov	r0, r5
 800a320:	f00f fbd4 	bl	8019acc <memcpy>
 800a324:	e7ec      	b.n	800a300 <RemoteConfig::HandleGet(void*, unsigned long)+0x34>
 800a326:	4915      	ldr	r1, [pc, #84]	@ (800a37c <RemoteConfig::HandleGet(void*, unsigned long)+0xb0>)
 800a328:	2218      	movs	r2, #24
 800a32a:	4353      	muls	r3, r2
 800a32c:	18ca      	adds	r2, r1, r3
 800a32e:	58cb      	ldr	r3, [r1, r3]
 800a330:	6852      	ldr	r2, [r2, #4]
 800a332:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800a336:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a33a:	07d2      	lsls	r2, r2, #31
 800a33c:	bf48      	it	mi
 800a33e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800a342:	a903      	add	r1, sp, #12
 800a344:	bf48      	it	mi
 800a346:	58d3      	ldrmi	r3, [r2, r3]
 800a348:	4798      	blx	r3
 800a34a:	b955      	cbnz	r5, 800a362 <RemoteConfig::HandleGet(void*, unsigned long)+0x96>
 800a34c:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a350:	9300      	str	r3, [sp, #0]
 800a352:	69a3      	ldr	r3, [r4, #24]
 800a354:	9a03      	ldr	r2, [sp, #12]
 800a356:	6839      	ldr	r1, [r7, #0]
 800a358:	6960      	ldr	r0, [r4, #20]
 800a35a:	f7ff fdd9 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a35e:	9803      	ldr	r0, [sp, #12]
 800a360:	e7cf      	b.n	800a302 <RemoteConfig::HandleGet(void*, unsigned long)+0x36>
 800a362:	9a03      	ldr	r2, [sp, #12]
 800a364:	6839      	ldr	r1, [r7, #0]
 800a366:	42b2      	cmp	r2, r6
 800a368:	bf28      	it	cs
 800a36a:	4632      	movcs	r2, r6
 800a36c:	4628      	mov	r0, r5
 800a36e:	f00f fbb8 	bl	8019ae2 <memmove>
 800a372:	e7f4      	b.n	800a35e <RemoteConfig::HandleGet(void*, unsigned long)+0x92>
 800a374:	20000c94 	mulcs	r0, r4, ip
 800a378:	0801ace0 	stmdaeq	r1, {r5, r6, r7, sl, fp, sp, pc}
 800a37c:	0801bbcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, sp, pc}

0800a380 <RemoteConfig::HandleGetNoParams()>:
 800a380:	2200      	movs	r2, #0
 800a382:	4611      	mov	r1, r2
 800a384:	f7ff bfa2 	b.w	800a2cc <RemoteConfig::HandleGet(void*, unsigned long)>

0800a388 <RemoteConfig::HandleGetRconfigTxt(unsigned long&)>:
 800a388:	b510      	push	{r4, lr}
 800a38a:	b08a      	sub	sp, #40	@ 0x28
 800a38c:	a802      	add	r0, sp, #8
 800a38e:	460c      	mov	r4, r1
 800a390:	f000 f9ce 	bl	800a730 <RemoteConfigParams::RemoteConfigParams()>
 800a394:	4a05      	ldr	r2, [pc, #20]	@ (800a3ac <RemoteConfig::HandleGetRconfigTxt(unsigned long&)+0x24>)
 800a396:	9400      	str	r4, [sp, #0]
 800a398:	6812      	ldr	r2, [r2, #0]
 800a39a:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a39e:	2100      	movs	r1, #0
 800a3a0:	a802      	add	r0, sp, #8
 800a3a2:	f000 fa3d 	bl	800a820 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>
 800a3a6:	b00a      	add	sp, #40	@ 0x28
 800a3a8:	bd10      	pop	{r4, pc}
 800a3aa:	bf00      	nop
 800a3ac:	20000c94 	mulcs	r0, r4, ip

0800a3b0 <RemoteConfig::HandleGetEnvTxt(unsigned long&)>:
 800a3b0:	b513      	push	{r0, r1, r4, lr}
 800a3b2:	a801      	add	r0, sp, #4
 800a3b4:	460c      	mov	r4, r1
 800a3b6:	f00c f8d7 	bl	8016568 <EnvParams::EnvParams()>
 800a3ba:	4905      	ldr	r1, [pc, #20]	@ (800a3d0 <RemoteConfig::HandleGetEnvTxt(unsigned long&)+0x20>)
 800a3bc:	4623      	mov	r3, r4
 800a3be:	6809      	ldr	r1, [r1, #0]
 800a3c0:	f240 528c 	movw	r2, #1420	@ 0x58c
 800a3c4:	a801      	add	r0, sp, #4
 800a3c6:	f00c f92d 	bl	8016624 <EnvParams::Builder(char*, unsigned long, unsigned long&)>
 800a3ca:	b002      	add	sp, #8
 800a3cc:	bd10      	pop	{r4, pc}
 800a3ce:	bf00      	nop
 800a3d0:	20000c94 	mulcs	r0, r4, ip

0800a3d4 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)>:
 800a3d4:	b510      	push	{r4, lr}
 800a3d6:	b09a      	sub	sp, #104	@ 0x68
 800a3d8:	a802      	add	r0, sp, #8
 800a3da:	460c      	mov	r4, r1
 800a3dc:	f00a fbaa 	bl	8014b34 <NetworkParams::NetworkParams()>
 800a3e0:	4a05      	ldr	r2, [pc, #20]	@ (800a3f8 <RemoteConfig::HandleGetNetworkTxt(unsigned long&)+0x24>)
 800a3e2:	9400      	str	r4, [sp, #0]
 800a3e4:	6812      	ldr	r2, [r2, #0]
 800a3e6:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a3ea:	2100      	movs	r1, #0
 800a3ec:	a802      	add	r0, sp, #8
 800a3ee:	f00a fc8d 	bl	8014d0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>
 800a3f2:	b01a      	add	sp, #104	@ 0x68
 800a3f4:	bd10      	pop	{r4, pc}
 800a3f6:	bf00      	nop
 800a3f8:	20000c94 	mulcs	r0, r4, ip

0800a3fc <RemoteConfig::HandleGetArtnetTxt(unsigned long&)>:
 800a3fc:	b510      	push	{r4, lr}
 800a3fe:	b0ba      	sub	sp, #232	@ 0xe8
 800a400:	a803      	add	r0, sp, #12
 800a402:	460c      	mov	r4, r1
 800a404:	f002 ffd4 	bl	800d3b0 <ArtNetParams::ArtNetParams()>
 800a408:	4a05      	ldr	r2, [pc, #20]	@ (800a420 <RemoteConfig::HandleGetArtnetTxt(unsigned long&)+0x24>)
 800a40a:	9400      	str	r4, [sp, #0]
 800a40c:	6812      	ldr	r2, [r2, #0]
 800a40e:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a412:	2100      	movs	r1, #0
 800a414:	a803      	add	r0, sp, #12
 800a416:	f003 fa91 	bl	800d93c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)>
 800a41a:	b03a      	add	sp, #232	@ 0xe8
 800a41c:	bd10      	pop	{r4, pc}
 800a41e:	bf00      	nop
 800a420:	20000c94 	mulcs	r0, r4, ip

0800a424 <RemoteConfig::HandleGetParamsTxt(unsigned long&)>:
 800a424:	b510      	push	{r4, lr}
 800a426:	b086      	sub	sp, #24
 800a428:	a803      	add	r0, sp, #12
 800a42a:	460c      	mov	r4, r1
 800a42c:	f006 fe6a 	bl	8011104 <DmxParams::DmxParams()>
 800a430:	4a05      	ldr	r2, [pc, #20]	@ (800a448 <RemoteConfig::HandleGetParamsTxt(unsigned long&)+0x24>)
 800a432:	9400      	str	r4, [sp, #0]
 800a434:	6812      	ldr	r2, [r2, #0]
 800a436:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a43a:	2100      	movs	r1, #0
 800a43c:	a803      	add	r0, sp, #12
 800a43e:	f006 ff0f 	bl	8011260 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)>
 800a442:	b006      	add	sp, #24
 800a444:	bd10      	pop	{r4, pc}
 800a446:	bf00      	nop
 800a448:	20000c94 	mulcs	r0, r4, ip

0800a44c <RemoteConfig::HandleGetDisplayTxt(unsigned long&)>:
 800a44c:	b510      	push	{r4, lr}
 800a44e:	b08c      	sub	sp, #48	@ 0x30
 800a450:	a803      	add	r0, sp, #12
 800a452:	460c      	mov	r4, r1
 800a454:	f00b fc2a 	bl	8015cac <DisplayUdfParams::DisplayUdfParams()>
 800a458:	4a05      	ldr	r2, [pc, #20]	@ (800a470 <RemoteConfig::HandleGetDisplayTxt(unsigned long&)+0x24>)
 800a45a:	9400      	str	r4, [sp, #0]
 800a45c:	6812      	ldr	r2, [r2, #0]
 800a45e:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a462:	2100      	movs	r1, #0
 800a464:	a803      	add	r0, sp, #12
 800a466:	f00b fcc3 	bl	8015df0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>
 800a46a:	b00c      	add	sp, #48	@ 0x30
 800a46c:	bd10      	pop	{r4, pc}
 800a46e:	bf00      	nop
 800a470:	20000c94 	mulcs	r0, r4, ip

0800a474 <RemoteConfig::HandleSet(void*, unsigned long)>:
 800a474:	b530      	push	{r4, r5, lr}
 800a476:	b085      	sub	sp, #20
 800a478:	4604      	mov	r4, r0
 800a47a:	9201      	str	r2, [sp, #4]
 800a47c:	b9d1      	cbnz	r1, 800a4b4 <RemoteConfig::HandleSet(void*, unsigned long)+0x40>
 800a47e:	f240 538b 	movw	r3, #1419	@ 0x58b
 800a482:	9303      	str	r3, [sp, #12]
 800a484:	4b19      	ldr	r3, [pc, #100]	@ (800a4ec <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a486:	6819      	ldr	r1, [r3, #0]
 800a488:	aa03      	add	r2, sp, #12
 800a48a:	3101      	adds	r1, #1
 800a48c:	f000 fab6 	bl	800a9fc <RemoteConfig::GetIndex(void const*, unsigned long&)>
 800a490:	2800      	cmp	r0, #0
 800a492:	db0d      	blt.n	800a4b0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a494:	4b16      	ldr	r3, [pc, #88]	@ (800a4f0 <RemoteConfig::HandleSet(void*, unsigned long)+0x7c>)
 800a496:	2218      	movs	r2, #24
 800a498:	fb02 3300 	mla	r3, r2, r0, r3
 800a49c:	68da      	ldr	r2, [r3, #12]
 800a49e:	689b      	ldr	r3, [r3, #8]
 800a4a0:	1051      	asrs	r1, r2, #1
 800a4a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a4a6:	07d2      	lsls	r2, r2, #31
 800a4a8:	bf44      	itt	mi
 800a4aa:	5862      	ldrmi	r2, [r4, r1]
 800a4ac:	58d3      	ldrmi	r3, [r2, r3]
 800a4ae:	4798      	blx	r3
 800a4b0:	b005      	add	sp, #20
 800a4b2:	bd30      	pop	{r4, r5, pc}
 800a4b4:	f240 538c 	movw	r3, #1420	@ 0x58c
 800a4b8:	429a      	cmp	r2, r3
 800a4ba:	d8f9      	bhi.n	800a4b0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a4bc:	4b0d      	ldr	r3, [pc, #52]	@ (800a4f4 <RemoteConfig::HandleSet(void*, unsigned long)+0x80>)
 800a4be:	781b      	ldrb	r3, [r3, #0]
 800a4c0:	460d      	mov	r5, r1
 800a4c2:	07d9      	lsls	r1, r3, #31
 800a4c4:	d50b      	bpl.n	800a4de <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a4c6:	782b      	ldrb	r3, [r5, #0]
 800a4c8:	2b7b      	cmp	r3, #123	@ 0x7b
 800a4ca:	d108      	bne.n	800a4de <RemoteConfig::HandleSet(void*, unsigned long)+0x6a>
 800a4cc:	1e51      	subs	r1, r2, #1
 800a4ce:	b289      	uxth	r1, r1
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	4628      	mov	r0, r5
 800a4d4:	f00c fafc 	bl	8016ad0 <properties::convert_json_file(char*, unsigned long, bool)>
 800a4d8:	1e02      	subs	r2, r0, #0
 800a4da:	dde9      	ble.n	800a4b0 <RemoteConfig::HandleSet(void*, unsigned long)+0x3c>
 800a4dc:	b292      	uxth	r2, r2
 800a4de:	4b03      	ldr	r3, [pc, #12]	@ (800a4ec <RemoteConfig::HandleSet(void*, unsigned long)+0x78>)
 800a4e0:	61e2      	str	r2, [r4, #28]
 800a4e2:	601d      	str	r5, [r3, #0]
 800a4e4:	aa01      	add	r2, sp, #4
 800a4e6:	1c69      	adds	r1, r5, #1
 800a4e8:	4620      	mov	r0, r4
 800a4ea:	e7cf      	b.n	800a48c <RemoteConfig::HandleSet(void*, unsigned long)+0x18>
 800a4ec:	20000c94 	mulcs	r0, r4, ip
 800a4f0:	0801bbcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, sp, pc}
 800a4f4:	20002a15 	andcs	r2, r0, r5, lsl sl

0800a4f8 <RemoteConfig::HandleRequest()>:
 800a4f8:	4b46      	ldr	r3, [pc, #280]	@ (800a614 <RemoteConfig::HandleRequest()+0x11c>)
 800a4fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a4fe:	6819      	ldr	r1, [r3, #0]
 800a500:	69c3      	ldr	r3, [r0, #28]
 800a502:	3b01      	subs	r3, #1
 800a504:	4604      	mov	r4, r0
 800a506:	5cca      	ldrb	r2, [r1, r3]
 800a508:	2a0a      	cmp	r2, #10
 800a50a:	bf08      	it	eq
 800a50c:	61c3      	streq	r3, [r0, #28]
 800a50e:	780b      	ldrb	r3, [r1, #0]
 800a510:	2b3f      	cmp	r3, #63	@ 0x3f
 800a512:	d139      	bne.n	800a588 <RemoteConfig::HandleRequest()+0x90>
 800a514:	69c0      	ldr	r0, [r0, #28]
 800a516:	4a40      	ldr	r2, [pc, #256]	@ (800a618 <RemoteConfig::HandleRequest()+0x120>)
 800a518:	3801      	subs	r0, #1
 800a51a:	61e0      	str	r0, [r4, #28]
 800a51c:	2300      	movs	r3, #0
 800a51e:	4694      	mov	ip, r2
 800a520:	7b96      	ldrb	r6, [r2, #14]
 800a522:	8995      	ldrh	r5, [r2, #12]
 800a524:	b196      	cbz	r6, 800a54c <RemoteConfig::HandleRequest()+0x54>
 800a526:	42a8      	cmp	r0, r5
 800a528:	d812      	bhi.n	800a550 <RemoteConfig::HandleRequest()+0x58>
 800a52a:	3301      	adds	r3, #1
 800a52c:	2b09      	cmp	r3, #9
 800a52e:	f102 0210 	add.w	r2, r2, #16
 800a532:	d1f5      	bne.n	800a520 <RemoteConfig::HandleRequest()+0x28>
 800a534:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a538:	9300      	str	r3, [sp, #0]
 800a53a:	69a3      	ldr	r3, [r4, #24]
 800a53c:	4937      	ldr	r1, [pc, #220]	@ (800a61c <RemoteConfig::HandleRequest()+0x124>)
 800a53e:	2208      	movs	r2, #8
 800a540:	6960      	ldr	r0, [r4, #20]
 800a542:	f7ff fce5 	bl	8009f10 <Network::SendTo(long, void const*, unsigned long, unsigned long, unsigned short) [clone .isra.0]>
 800a546:	b003      	add	sp, #12
 800a548:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a54c:	42a8      	cmp	r0, r5
 800a54e:	d1ec      	bne.n	800a52a <RemoteConfig::HandleRequest()+0x32>
 800a550:	6896      	ldr	r6, [r2, #8]
 800a552:	460f      	mov	r7, r1
 800a554:	3e01      	subs	r6, #1
 800a556:	440d      	add	r5, r1
 800a558:	42bd      	cmp	r5, r7
 800a55a:	d10e      	bne.n	800a57a <RemoteConfig::HandleRequest()+0x82>
 800a55c:	011d      	lsls	r5, r3, #4
 800a55e:	eb0c 1303 	add.w	r3, ip, r3, lsl #4
 800a562:	685a      	ldr	r2, [r3, #4]
 800a564:	f85c 3005 	ldr.w	r3, [ip, r5]
 800a568:	1051      	asrs	r1, r2, #1
 800a56a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a56e:	07d2      	lsls	r2, r2, #31
 800a570:	d44c      	bmi.n	800a60c <RemoteConfig::HandleRequest()+0x114>
 800a572:	b003      	add	sp, #12
 800a574:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a578:	4718      	bx	r3
 800a57a:	f817 8f01 	ldrb.w	r8, [r7, #1]!
 800a57e:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a582:	45f0      	cmp	r8, lr
 800a584:	d0e8      	beq.n	800a558 <RemoteConfig::HandleRequest()+0x60>
 800a586:	e7d0      	b.n	800a52a <RemoteConfig::HandleRequest()+0x32>
 800a588:	7b42      	ldrb	r2, [r0, #13]
 800a58a:	2a00      	cmp	r2, #0
 800a58c:	d1db      	bne.n	800a546 <RemoteConfig::HandleRequest()+0x4e>
 800a58e:	2b23      	cmp	r3, #35	@ 0x23
 800a590:	d105      	bne.n	800a59e <RemoteConfig::HandleRequest()+0xa6>
 800a592:	4611      	mov	r1, r2
 800a594:	b003      	add	sp, #12
 800a596:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a59a:	f7ff bf6b 	b.w	800a474 <RemoteConfig::HandleSet(void*, unsigned long)>
 800a59e:	2b21      	cmp	r3, #33	@ 0x21
 800a5a0:	d1d1      	bne.n	800a546 <RemoteConfig::HandleRequest()+0x4e>
 800a5a2:	69c6      	ldr	r6, [r0, #28]
 800a5a4:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 800a624 <RemoteConfig::HandleRequest()+0x12c>
 800a5a8:	f106 3eff 	add.w	lr, r6, #4294967295	@ 0xffffffff
 800a5ac:	f8c0 e01c 	str.w	lr, [r0, #28]
 800a5b0:	4667      	mov	r7, ip
 800a5b2:	3e02      	subs	r6, #2
 800a5b4:	f89c 000e 	ldrb.w	r0, [ip, #14]
 800a5b8:	f8bc 300c 	ldrh.w	r3, [ip, #12]
 800a5bc:	b168      	cbz	r0, 800a5da <RemoteConfig::HandleRequest()+0xe2>
 800a5be:	459e      	cmp	lr, r3
 800a5c0:	d80d      	bhi.n	800a5de <RemoteConfig::HandleRequest()+0xe6>
 800a5c2:	3201      	adds	r2, #1
 800a5c4:	2a03      	cmp	r2, #3
 800a5c6:	f10c 0c10 	add.w	ip, ip, #16
 800a5ca:	d1f3      	bne.n	800a5b4 <RemoteConfig::HandleRequest()+0xbc>
 800a5cc:	f642 1305 	movw	r3, #10501	@ 0x2905
 800a5d0:	9300      	str	r3, [sp, #0]
 800a5d2:	69a3      	ldr	r3, [r4, #24]
 800a5d4:	4912      	ldr	r1, [pc, #72]	@ (800a620 <RemoteConfig::HandleRequest()+0x128>)
 800a5d6:	2208      	movs	r2, #8
 800a5d8:	e7b2      	b.n	800a540 <RemoteConfig::HandleRequest()+0x48>
 800a5da:	429e      	cmp	r6, r3
 800a5dc:	d1f1      	bne.n	800a5c2 <RemoteConfig::HandleRequest()+0xca>
 800a5de:	f8dc 0008 	ldr.w	r0, [ip, #8]
 800a5e2:	460d      	mov	r5, r1
 800a5e4:	3801      	subs	r0, #1
 800a5e6:	440b      	add	r3, r1
 800a5e8:	42ab      	cmp	r3, r5
 800a5ea:	d108      	bne.n	800a5fe <RemoteConfig::HandleRequest()+0x106>
 800a5ec:	0113      	lsls	r3, r2, #4
 800a5ee:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800a5f2:	58fb      	ldr	r3, [r7, r3]
 800a5f4:	6852      	ldr	r2, [r2, #4]
 800a5f6:	1051      	asrs	r1, r2, #1
 800a5f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a5fc:	e7b7      	b.n	800a56e <RemoteConfig::HandleRequest()+0x76>
 800a5fe:	f815 9f01 	ldrb.w	r9, [r5, #1]!
 800a602:	f810 8f01 	ldrb.w	r8, [r0, #1]!
 800a606:	45c1      	cmp	r9, r8
 800a608:	d0ee      	beq.n	800a5e8 <RemoteConfig::HandleRequest()+0xf0>
 800a60a:	e7da      	b.n	800a5c2 <RemoteConfig::HandleRequest()+0xca>
 800a60c:	5862      	ldr	r2, [r4, r1]
 800a60e:	58d3      	ldr	r3, [r2, r3]
 800a610:	e7af      	b.n	800a572 <RemoteConfig::HandleRequest()+0x7a>
 800a612:	bf00      	nop
 800a614:	20000c94 	mulcs	r0, r4, ip
 800a618:	0801bb14 	stmdaeq	r1, {r2, r4, r8, r9, fp, ip, sp, pc}
 800a61c:	0801acec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, sp, pc}
 800a620:	0801acf5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, fp, sp, pc}
 800a624:	0801bae4 	stmdaeq	r1, {r2, r5, r6, r7, r9, fp, ip, sp, pc}

0800a628 <RemoteConfig::HandleSetRconfigTxt()>:
 800a628:	b510      	push	{r4, lr}
 800a62a:	b088      	sub	sp, #32
 800a62c:	4604      	mov	r4, r0
 800a62e:	4668      	mov	r0, sp
 800a630:	f000 f87e 	bl	800a730 <RemoteConfigParams::RemoteConfigParams()>
 800a634:	4b05      	ldr	r3, [pc, #20]	@ (800a64c <RemoteConfig::HandleSetRconfigTxt()+0x24>)
 800a636:	69e2      	ldr	r2, [r4, #28]
 800a638:	6819      	ldr	r1, [r3, #0]
 800a63a:	4668      	mov	r0, sp
 800a63c:	f000 f88a 	bl	800a754 <RemoteConfigParams::Load(char const*, unsigned long)>
 800a640:	4621      	mov	r1, r4
 800a642:	4668      	mov	r0, sp
 800a644:	f000 f98a 	bl	800a95c <RemoteConfigParams::Set(RemoteConfig*)>
 800a648:	b008      	add	sp, #32
 800a64a:	bd10      	pop	{r4, pc}
 800a64c:	20000c94 	mulcs	r0, r4, ip

0800a650 <RemoteConfig::HandleSetEnvTxt()>:
 800a650:	b513      	push	{r0, r1, r4, lr}
 800a652:	4604      	mov	r4, r0
 800a654:	a801      	add	r0, sp, #4
 800a656:	f00b ff87 	bl	8016568 <EnvParams::EnvParams()>
 800a65a:	4b04      	ldr	r3, [pc, #16]	@ (800a66c <RemoteConfig::HandleSetEnvTxt()+0x1c>)
 800a65c:	69e2      	ldr	r2, [r4, #28]
 800a65e:	6819      	ldr	r1, [r3, #0]
 800a660:	a801      	add	r0, sp, #4
 800a662:	f00b ff83 	bl	801656c <EnvParams::LoadAndSet(char const*, unsigned long)>
 800a666:	b002      	add	sp, #8
 800a668:	bd10      	pop	{r4, pc}
 800a66a:	bf00      	nop
 800a66c:	20000c94 	mulcs	r0, r4, ip

0800a670 <RemoteConfig::HandleSetNetworkTxt()>:
 800a670:	b510      	push	{r4, lr}
 800a672:	b098      	sub	sp, #96	@ 0x60
 800a674:	4604      	mov	r4, r0
 800a676:	4668      	mov	r0, sp
 800a678:	f00a fa5c 	bl	8014b34 <NetworkParams::NetworkParams()>
 800a67c:	4b03      	ldr	r3, [pc, #12]	@ (800a68c <RemoteConfig::HandleSetNetworkTxt()+0x1c>)
 800a67e:	69e2      	ldr	r2, [r4, #28]
 800a680:	6819      	ldr	r1, [r3, #0]
 800a682:	4668      	mov	r0, sp
 800a684:	f00a fa6a 	bl	8014b5c <NetworkParams::Load(char const*, unsigned long)>
 800a688:	b018      	add	sp, #96	@ 0x60
 800a68a:	bd10      	pop	{r4, pc}
 800a68c:	20000c94 	mulcs	r0, r4, ip

0800a690 <RemoteConfig::HandleSetArtnetTxt()>:
 800a690:	b510      	push	{r4, lr}
 800a692:	b0b8      	sub	sp, #224	@ 0xe0
 800a694:	4604      	mov	r4, r0
 800a696:	a801      	add	r0, sp, #4
 800a698:	f002 fe8a 	bl	800d3b0 <ArtNetParams::ArtNetParams()>
 800a69c:	4b03      	ldr	r3, [pc, #12]	@ (800a6ac <RemoteConfig::HandleSetArtnetTxt()+0x1c>)
 800a69e:	69e2      	ldr	r2, [r4, #28]
 800a6a0:	6819      	ldr	r1, [r3, #0]
 800a6a2:	a801      	add	r0, sp, #4
 800a6a4:	f002 feb4 	bl	800d410 <ArtNetParams::Load(char const*, unsigned long)>
 800a6a8:	b038      	add	sp, #224	@ 0xe0
 800a6aa:	bd10      	pop	{r4, pc}
 800a6ac:	20000c94 	mulcs	r0, r4, ip

0800a6b0 <RemoteConfig::HandleSetParamsTxt()>:
 800a6b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a6b2:	4604      	mov	r4, r0
 800a6b4:	a801      	add	r0, sp, #4
 800a6b6:	f006 fd25 	bl	8011104 <DmxParams::DmxParams()>
 800a6ba:	4b04      	ldr	r3, [pc, #16]	@ (800a6cc <RemoteConfig::HandleSetParamsTxt()+0x1c>)
 800a6bc:	69e2      	ldr	r2, [r4, #28]
 800a6be:	6819      	ldr	r1, [r3, #0]
 800a6c0:	a801      	add	r0, sp, #4
 800a6c2:	f006 fd39 	bl	8011138 <DmxParams::Load(char const*, unsigned long)>
 800a6c6:	b004      	add	sp, #16
 800a6c8:	bd10      	pop	{r4, pc}
 800a6ca:	bf00      	nop
 800a6cc:	20000c94 	mulcs	r0, r4, ip

0800a6d0 <RemoteConfig::HandleSetDisplayTxt()>:
 800a6d0:	b510      	push	{r4, lr}
 800a6d2:	b08a      	sub	sp, #40	@ 0x28
 800a6d4:	4604      	mov	r4, r0
 800a6d6:	a801      	add	r0, sp, #4
 800a6d8:	f00b fae8 	bl	8015cac <DisplayUdfParams::DisplayUdfParams()>
 800a6dc:	4b03      	ldr	r3, [pc, #12]	@ (800a6ec <RemoteConfig::HandleSetDisplayTxt()+0x1c>)
 800a6de:	69e2      	ldr	r2, [r4, #28]
 800a6e0:	6819      	ldr	r1, [r3, #0]
 800a6e2:	a801      	add	r0, sp, #4
 800a6e4:	f00b fafa 	bl	8015cdc <DisplayUdfParams::Load(char const*, unsigned long)>
 800a6e8:	b00a      	add	sp, #40	@ 0x28
 800a6ea:	bd10      	pop	{r4, pc}
 800a6ec:	20000c94 	mulcs	r0, r4, ip

0800a6f0 <RemoteConfig::HandleFactory()>:
 800a6f0:	b538      	push	{r3, r4, r5, lr}
 800a6f2:	4b05      	ldr	r3, [pc, #20]	@ (800a708 <RemoteConfig::HandleFactory()+0x18>)
 800a6f4:	681d      	ldr	r5, [r3, #0]
 800a6f6:	2400      	movs	r4, #0
 800a6f8:	4621      	mov	r1, r4
 800a6fa:	4628      	mov	r0, r5
 800a6fc:	3401      	adds	r4, #1
 800a6fe:	f00b fe55 	bl	80163ac <ConfigStore::ResetSetList(configstore::Store)>
 800a702:	2c1b      	cmp	r4, #27
 800a704:	d1f8      	bne.n	800a6f8 <RemoteConfig::HandleFactory()+0x8>
 800a706:	bd38      	pop	{r3, r4, r5, pc}
 800a708:	20002a00 	andcs	r2, r0, r0, lsl #20

0800a70c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>:
 800a70c:	b507      	push	{r0, r1, r2, lr}
 800a70e:	2300      	movs	r3, #0
 800a710:	2101      	movs	r1, #1
 800a712:	e9cd 3100 	strd	r3, r1, [sp]
 800a716:	4602      	mov	r2, r0
 800a718:	4804      	ldr	r0, [pc, #16]	@ (800a72c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)+0x20>)
 800a71a:	2320      	movs	r3, #32
 800a71c:	6800      	ldr	r0, [r0, #0]
 800a71e:	210a      	movs	r1, #10
 800a720:	f00b fe7c 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800a724:	b003      	add	sp, #12
 800a726:	f85d fb04 	ldr.w	pc, [sp], #4
 800a72a:	bf00      	nop
 800a72c:	20002a00 	andcs	r2, r0, r0, lsl #20

0800a730 <RemoteConfigParams::RemoteConfigParams()>:
 800a730:	b510      	push	{r4, lr}
 800a732:	2220      	movs	r2, #32
 800a734:	4604      	mov	r4, r0
 800a736:	2100      	movs	r1, #0
 800a738:	f00f f9ea 	bl	8019b10 <memset>
 800a73c:	4620      	mov	r0, r4
 800a73e:	bd10      	pop	{r4, pc}

0800a740 <RemoteConfigParams::Load()>:
 800a740:	b508      	push	{r3, lr}
 800a742:	2200      	movs	r2, #0
 800a744:	7002      	strb	r2, [r0, #0]
 800a746:	7042      	strb	r2, [r0, #1]
 800a748:	7082      	strb	r2, [r0, #2]
 800a74a:	70c2      	strb	r2, [r0, #3]
 800a74c:	f7ff ffde 	bl	800a70c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a750:	bd08      	pop	{r3, pc}
	...

0800a754 <RemoteConfigParams::Load(char const*, unsigned long)>:
 800a754:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a756:	2500      	movs	r5, #0
 800a758:	b087      	sub	sp, #28
 800a75a:	4604      	mov	r4, r0
 800a75c:	460e      	mov	r6, r1
 800a75e:	4617      	mov	r7, r2
 800a760:	7005      	strb	r5, [r0, #0]
 800a762:	7045      	strb	r5, [r0, #1]
 800a764:	7085      	strb	r5, [r0, #2]
 800a766:	70c5      	strb	r5, [r0, #3]
 800a768:	4602      	mov	r2, r0
 800a76a:	490c      	ldr	r1, [pc, #48]	@ (800a79c <RemoteConfigParams::Load(char const*, unsigned long)+0x48>)
 800a76c:	a804      	add	r0, sp, #16
 800a76e:	f00c fb31 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a772:	463a      	mov	r2, r7
 800a774:	4631      	mov	r1, r6
 800a776:	a804      	add	r0, sp, #16
 800a778:	f00c fb30 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 800a77c:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800a780:	2320      	movs	r3, #32
 800a782:	4807      	ldr	r0, [pc, #28]	@ (800a7a0 <RemoteConfigParams::Load(char const*, unsigned long)+0x4c>)
 800a784:	9300      	str	r3, [sp, #0]
 800a786:	462a      	mov	r2, r5
 800a788:	4623      	mov	r3, r4
 800a78a:	210a      	movs	r1, #10
 800a78c:	6800      	ldr	r0, [r0, #0]
 800a78e:	f00b fe1f 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800a792:	a804      	add	r0, sp, #16
 800a794:	f00c fb21 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 800a798:	b007      	add	sp, #28
 800a79a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a79c:	0800a81d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp, pc}
 800a7a0:	20002a00 	andcs	r2, r0, r0, lsl #20

0800a7a4 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>:
 800a7a4:	6803      	ldr	r3, [r0, #0]
 800a7a6:	b111      	cbz	r1, 800a7ae <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0xa>
 800a7a8:	4313      	orrs	r3, r2
 800a7aa:	6003      	str	r3, [r0, #0]
 800a7ac:	4770      	bx	lr
 800a7ae:	ea23 0302 	bic.w	r3, r3, r2
 800a7b2:	e7fa      	b.n	800a7aa <RemoteConfigParams::SetBool(unsigned char, unsigned long)+0x6>

0800a7b4 <RemoteConfigParams::callbackFunction(char const*)>:
 800a7b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a7b8:	4f16      	ldr	r7, [pc, #88]	@ (800a814 <RemoteConfigParams::callbackFunction(char const*)+0x60>)
 800a7ba:	4604      	mov	r4, r0
 800a7bc:	460e      	mov	r6, r1
 800a7be:	2506      	movs	r5, #6
 800a7c0:	3d01      	subs	r5, #1
 800a7c2:	d113      	bne.n	800a7ec <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a7c4:	2317      	movs	r3, #23
 800a7c6:	9301      	str	r3, [sp, #4]
 800a7c8:	4913      	ldr	r1, [pc, #76]	@ (800a818 <RemoteConfigParams::callbackFunction(char const*)+0x64>)
 800a7ca:	ab01      	add	r3, sp, #4
 800a7cc:	f104 0208 	add.w	r2, r4, #8
 800a7d0:	4630      	mov	r0, r6
 800a7d2:	f00c fb39 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800a7d6:	b930      	cbnz	r0, 800a7e6 <RemoteConfigParams::callbackFunction(char const*)+0x32>
 800a7d8:	9b01      	ldr	r3, [sp, #4]
 800a7da:	4423      	add	r3, r4
 800a7dc:	721d      	strb	r5, [r3, #8]
 800a7de:	6823      	ldr	r3, [r4, #0]
 800a7e0:	f043 0310 	orr.w	r3, r3, #16
 800a7e4:	6023      	str	r3, [r4, #0]
 800a7e6:	b002      	add	sp, #8
 800a7e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7ec:	6839      	ldr	r1, [r7, #0]
 800a7ee:	f8d7 8004 	ldr.w	r8, [r7, #4]
 800a7f2:	aa01      	add	r2, sp, #4
 800a7f4:	4630      	mov	r0, r6
 800a7f6:	f00c fb9c 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a7fa:	b108      	cbz	r0, 800a800 <RemoteConfigParams::callbackFunction(char const*)+0x4c>
 800a7fc:	3708      	adds	r7, #8
 800a7fe:	e7df      	b.n	800a7c0 <RemoteConfigParams::callbackFunction(char const*)+0xc>
 800a800:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a804:	4642      	mov	r2, r8
 800a806:	4620      	mov	r0, r4
 800a808:	b002      	add	sp, #8
 800a80a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a80e:	f7ff bfc9 	b.w	800a7a4 <RemoteConfigParams::SetBool(unsigned char, unsigned long)>
 800a812:	bf00      	nop
 800a814:	0801bba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, sp, pc}
 800a818:	0801c09c 	stmdaeq	r1, {r2, r3, r4, r7, lr, pc}

0800a81c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a81c:	f7ff bfca 	b.w	800a7b4 <RemoteConfigParams::callbackFunction(char const*)>

0800a820 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)>:
 800a820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a824:	4605      	mov	r5, r0
 800a826:	b087      	sub	sp, #28
 800a828:	4614      	mov	r4, r2
 800a82a:	461e      	mov	r6, r3
 800a82c:	b361      	cbz	r1, 800a888 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 800a82e:	2220      	movs	r2, #32
 800a830:	f00f f957 	bl	8019ae2 <memmove>
 800a834:	4940      	ldr	r1, [pc, #256]	@ (800a938 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 800a836:	4f41      	ldr	r7, [pc, #260]	@ (800a93c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 800a838:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800a954 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x134>
 800a83c:	f8df a118 	ldr.w	sl, [pc, #280]	@ 800a958 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x138>
 800a840:	4633      	mov	r3, r6
 800a842:	4622      	mov	r2, r4
 800a844:	a803      	add	r0, sp, #12
 800a846:	f00c f9ef 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800a84a:	f04f 0806 	mov.w	r8, #6
 800a84e:	f04f 0901 	mov.w	r9, #1
 800a852:	f1b8 0801 	subs.w	r8, r8, #1
 800a856:	f8d5 c000 	ldr.w	ip, [r5]
 800a85a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a85e:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800a862:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800a866:	d112      	bne.n	800a88e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 800a868:	42a2      	cmp	r2, r4
 800a86a:	d246      	bcs.n	800a8fa <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xda>
 800a86c:	9803      	ldr	r0, [sp, #12]
 800a86e:	f01c 0f10 	tst.w	ip, #16
 800a872:	f105 0508 	add.w	r5, r5, #8
 800a876:	4410      	add	r0, r2
 800a878:	eba4 0402 	sub.w	r4, r4, r2
 800a87c:	d12f      	bne.n	800a8de <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 800a87e:	bb7e      	cbnz	r6, 800a8e0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc0>
 800a880:	4b2f      	ldr	r3, [pc, #188]	@ (800a940 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a882:	4a30      	ldr	r2, [pc, #192]	@ (800a944 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 800a884:	9500      	str	r5, [sp, #0]
 800a886:	e02e      	b.n	800a8e6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a888:	f7ff ff40 	bl	800a70c <RemoteConfigParamsStore::Copy(remoteconfigparams::Params*)>
 800a88c:	e7d2      	b.n	800a834 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 800a88e:	42a2      	cmp	r2, r4
 800a890:	e9d7 3100 	ldrd	r3, r1, [r7]
 800a894:	d21d      	bcs.n	800a8d2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb2>
 800a896:	9803      	ldr	r0, [sp, #12]
 800a898:	ea01 0e0c 	and.w	lr, r1, ip
 800a89c:	ea31 0c0c 	bics.w	ip, r1, ip
 800a8a0:	4410      	add	r0, r2
 800a8a2:	eba4 0402 	sub.w	r4, r4, r2
 800a8a6:	d003      	beq.n	800a8b0 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x90>
 800a8a8:	b91e      	cbnz	r6, 800a8b2 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800a8aa:	4a27      	ldr	r2, [pc, #156]	@ (800a948 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x128>)
 800a8ac:	9600      	str	r6, [sp, #0]
 800a8ae:	e006      	b.n	800a8be <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a8b0:	b18e      	cbz	r6, 800a8d6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xb6>
 800a8b2:	eba1 020e 	sub.w	r2, r1, lr
 800a8b6:	4251      	negs	r1, r2
 800a8b8:	4151      	adcs	r1, r2
 800a8ba:	9100      	str	r1, [sp, #0]
 800a8bc:	465a      	mov	r2, fp
 800a8be:	4621      	mov	r1, r4
 800a8c0:	f00f fc32 	bl	801a128 <snprintf>
 800a8c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8c8:	4284      	cmp	r4, r0
 800a8ca:	bfa4      	itt	ge
 800a8cc:	181b      	addge	r3, r3, r0
 800a8ce:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8d2:	3708      	adds	r7, #8
 800a8d4:	e7bd      	b.n	800a852 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x32>
 800a8d6:	f8cd 9000 	str.w	r9, [sp]
 800a8da:	4652      	mov	r2, sl
 800a8dc:	e7ef      	b.n	800a8be <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x9e>
 800a8de:	b336      	cbz	r6, 800a92e <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x10e>
 800a8e0:	4b17      	ldr	r3, [pc, #92]	@ (800a940 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a8e2:	4a1a      	ldr	r2, [pc, #104]	@ (800a94c <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x12c>)
 800a8e4:	9500      	str	r5, [sp, #0]
 800a8e6:	4621      	mov	r1, r4
 800a8e8:	f00f fc1e 	bl	801a128 <snprintf>
 800a8ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a8f0:	4284      	cmp	r4, r0
 800a8f2:	bfa4      	itt	ge
 800a8f4:	181b      	addge	r3, r3, r0
 800a8f6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a8fa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a8fe:	b17b      	cbz	r3, 800a920 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x100>
 800a900:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a904:	9b03      	ldr	r3, [sp, #12]
 800a906:	4413      	add	r3, r2
 800a908:	227d      	movs	r2, #125	@ 0x7d
 800a90a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a90e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a912:	9903      	ldr	r1, [sp, #12]
 800a914:	54ca      	strb	r2, [r1, r3]
 800a916:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a91a:	3301      	adds	r3, #1
 800a91c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a920:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a924:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a926:	601a      	str	r2, [r3, #0]
 800a928:	b007      	add	sp, #28
 800a92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a92e:	4b04      	ldr	r3, [pc, #16]	@ (800a940 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 800a930:	4a07      	ldr	r2, [pc, #28]	@ (800a950 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0x130>)
 800a932:	9500      	str	r5, [sp, #0]
 800a934:	e7d7      	b.n	800a8e6 <RemoteConfigParams::Builder(remoteconfigparams::Params const*, char*, unsigned long, unsigned long&)+0xc6>
 800a936:	bf00      	nop
 800a938:	0801c0ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, lr, pc}
 800a93c:	0801bba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, sp, pc}
 800a940:	0801c09c 	stmdaeq	r1, {r2, r3, r4, r7, lr, pc}
 800a944:	0801ad5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp, sp, pc}
 800a948:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 800a94c:	0801ad52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, sp, pc}
 800a950:	0801ad5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sl, fp, sp, pc}
 800a954:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 800a958:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

0800a95c <RemoteConfigParams::Set(RemoteConfig*)>:
 800a95c:	b538      	push	{r3, r4, r5, lr}
 800a95e:	460c      	mov	r4, r1
 800a960:	6801      	ldr	r1, [r0, #0]
 800a962:	4605      	mov	r5, r0
 800a964:	f001 0101 	and.w	r1, r1, #1
 800a968:	4620      	mov	r0, r4
 800a96a:	f7ff fc6d 	bl	800a248 <RemoteConfig::SetDisable(bool)>
 800a96e:	682b      	ldr	r3, [r5, #0]
 800a970:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a974:	7362      	strb	r2, [r4, #13]
 800a976:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a97a:	73a2      	strb	r2, [r4, #14]
 800a97c:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a980:	73e2      	strb	r2, [r4, #15]
 800a982:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a986:	06db      	lsls	r3, r3, #27
 800a988:	7422      	strb	r2, [r4, #16]
 800a98a:	d506      	bpl.n	800a99a <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a98c:	f105 0108 	add.w	r1, r5, #8
 800a990:	4620      	mov	r0, r4
 800a992:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a996:	f7ff bc81 	b.w	800a29c <RemoteConfig::SetDisplayName(char const*)>
 800a99a:	bd38      	pop	{r3, r4, r5, pc}

0800a99c <RemoteConfig::HandleReboot()>:
 800a99c:	b538      	push	{r3, r4, r5, lr}
 800a99e:	7b83      	ldrb	r3, [r0, #14]
 800a9a0:	b30b      	cbz	r3, 800a9e6 <RemoteConfig::HandleReboot()+0x4a>
 800a9a2:	4c11      	ldr	r4, [pc, #68]	@ (800a9e8 <RemoteConfig::HandleReboot()+0x4c>)
 800a9a4:	6825      	ldr	r5, [r4, #0]
 800a9a6:	2301      	movs	r3, #1
 800a9a8:	7443      	strb	r3, [r0, #17]
 800a9aa:	69a8      	ldr	r0, [r5, #24]
 800a9ac:	b138      	cbz	r0, 800a9be <RemoteConfig::HandleReboot()+0x22>
 800a9ae:	6803      	ldr	r3, [r0, #0]
 800a9b0:	2100      	movs	r1, #0
 800a9b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a9b4:	7569      	strb	r1, [r5, #21]
 800a9b6:	4798      	blx	r3
 800a9b8:	4b0c      	ldr	r3, [pc, #48]	@ (800a9ec <RemoteConfig::HandleReboot()+0x50>)
 800a9ba:	681b      	ldr	r3, [r3, #0]
 800a9bc:	606b      	str	r3, [r5, #4]
 800a9be:	4d0c      	ldr	r5, [pc, #48]	@ (800a9f0 <RemoteConfig::HandleReboot()+0x54>)
 800a9c0:	6828      	ldr	r0, [r5, #0]
 800a9c2:	f00b fd5b 	bl	801647c <ConfigStore::Flash()>
 800a9c6:	2800      	cmp	r0, #0
 800a9c8:	d1fa      	bne.n	800a9c0 <RemoteConfig::HandleReboot()+0x24>
 800a9ca:	6823      	ldr	r3, [r4, #0]
 800a9cc:	6998      	ldr	r0, [r3, #24]
 800a9ce:	b110      	cbz	r0, 800a9d6 <RemoteConfig::HandleReboot()+0x3a>
 800a9d0:	6803      	ldr	r3, [r0, #0]
 800a9d2:	68db      	ldr	r3, [r3, #12]
 800a9d4:	4798      	blx	r3
 800a9d6:	6820      	ldr	r0, [r4, #0]
 800a9d8:	4906      	ldr	r1, [pc, #24]	@ (800a9f4 <RemoteConfig::HandleReboot()+0x58>)
 800a9da:	f7fe fdab 	bl	8009534 <Display::TextStatus(char const*)>
 800a9de:	4b06      	ldr	r3, [pc, #24]	@ (800a9f8 <RemoteConfig::HandleReboot()+0x5c>)
 800a9e0:	6818      	ldr	r0, [r3, #0]
 800a9e2:	f00d f8a9 	bl	8017b38 <Hardware::Reboot()>
 800a9e6:	bd38      	pop	{r3, r4, r5, pc}
 800a9e8:	20002a18 	andcs	r2, r0, r8, lsl sl
 800a9ec:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 800a9f0:	20002a00 	andcs	r2, r0, r0, lsl #20
 800a9f4:	0801ad65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp, sp, pc}
 800a9f8:	20002b04 	andcs	r2, r0, r4, lsl #22

0800a9fc <RemoteConfig::GetIndex(void const*, unsigned long&)>:
 800a9fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800aa00:	f8d2 c000 	ldr.w	ip, [r2]
 800aa04:	4e12      	ldr	r6, [pc, #72]	@ (800aa50 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x54>)
 800aa06:	2000      	movs	r0, #0
 800aa08:	f10d 0e04 	add.w	lr, sp, #4
 800aa0c:	7d33      	ldrb	r3, [r6, #20]
 800aa0e:	9301      	str	r3, [sp, #4]
 800aa10:	4563      	cmp	r3, ip
 800aa12:	bf2c      	ite	cs
 800aa14:	4614      	movcs	r4, r2
 800aa16:	4674      	movcc	r4, lr
 800aa18:	6935      	ldr	r5, [r6, #16]
 800aa1a:	6827      	ldr	r7, [r4, #0]
 800aa1c:	3d01      	subs	r5, #1
 800aa1e:	440f      	add	r7, r1
 800aa20:	460c      	mov	r4, r1
 800aa22:	42bc      	cmp	r4, r7
 800aa24:	d101      	bne.n	800aa2a <RemoteConfig::GetIndex(void const*, unsigned long&)+0x2e>
 800aa26:	6013      	str	r3, [r2, #0]
 800aa28:	e00c      	b.n	800aa44 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x48>
 800aa2a:	f894 9000 	ldrb.w	r9, [r4]
 800aa2e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800aa32:	45c1      	cmp	r9, r8
 800aa34:	d009      	beq.n	800aa4a <RemoteConfig::GetIndex(void const*, unsigned long&)+0x4e>
 800aa36:	3001      	adds	r0, #1
 800aa38:	2806      	cmp	r0, #6
 800aa3a:	f106 0618 	add.w	r6, r6, #24
 800aa3e:	d1e5      	bne.n	800aa0c <RemoteConfig::GetIndex(void const*, unsigned long&)+0x10>
 800aa40:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800aa44:	b003      	add	sp, #12
 800aa46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa4a:	3401      	adds	r4, #1
 800aa4c:	e7e9      	b.n	800aa22 <RemoteConfig::GetIndex(void const*, unsigned long&)+0x26>
 800aa4e:	bf00      	nop
 800aa50:	0801bbcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, sp, pc}

0800aa54 <RemoteConfig::PlatformHandleTftpSet()>:
 800aa54:	f890 1020 	ldrb.w	r1, [r0, #32]
 800aa58:	b510      	push	{r4, lr}
 800aa5a:	4c0d      	ldr	r4, [pc, #52]	@ (800aa90 <RemoteConfig::PlatformHandleTftpSet()+0x3c>)
 800aa5c:	b171      	cbz	r1, 800aa7c <RemoteConfig::PlatformHandleTftpSet()+0x28>
 800aa5e:	f24a 51a5 	movw	r1, #42405	@ 0xa5a5
 800aa62:	2001      	movs	r0, #1
 800aa64:	f00e f876 	bl	8018b54 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800aa68:	490a      	ldr	r1, [pc, #40]	@ (800aa94 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800aa6a:	6820      	ldr	r0, [r4, #0]
 800aa6c:	f7fe fd62 	bl	8009534 <Display::TextStatus(char const*)>
 800aa70:	4908      	ldr	r1, [pc, #32]	@ (800aa94 <RemoteConfig::PlatformHandleTftpSet()+0x40>)
 800aa72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aa76:	2002      	movs	r0, #2
 800aa78:	f00d b8be 	b.w	8017bf8 <console_status>
 800aa7c:	2001      	movs	r0, #1
 800aa7e:	f00e f869 	bl	8018b54 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 800aa82:	4905      	ldr	r1, [pc, #20]	@ (800aa98 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800aa84:	6820      	ldr	r0, [r4, #0]
 800aa86:	f7fe fd55 	bl	8009534 <Display::TextStatus(char const*)>
 800aa8a:	4903      	ldr	r1, [pc, #12]	@ (800aa98 <RemoteConfig::PlatformHandleTftpSet()+0x44>)
 800aa8c:	e7f1      	b.n	800aa72 <RemoteConfig::PlatformHandleTftpSet()+0x1e>
 800aa8e:	bf00      	nop
 800aa90:	20002a18 	andcs	r2, r0, r8, lsl sl
 800aa94:	0801adb5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, sp, pc}
 800aa98:	0801adbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, sp, pc}

0800aa9c <RemoteConfig::PlatformHandleTftpGet()>:
 800aa9c:	b510      	push	{r4, lr}
 800aa9e:	4604      	mov	r4, r0
 800aaa0:	2001      	movs	r0, #1
 800aaa2:	f00e f865 	bl	8018b70 <bkp_data_read(bkp_data_register_enum)>
 800aaa6:	f24a 53a5 	movw	r3, #42405	@ 0xa5a5
 800aaaa:	1ac3      	subs	r3, r0, r3
 800aaac:	4258      	negs	r0, r3
 800aaae:	4158      	adcs	r0, r3
 800aab0:	f884 0020 	strb.w	r0, [r4, #32]
 800aab4:	bd10      	pop	{r4, pc}
	...

0800aab8 <HttpDaemon::HttpDaemon()>:
 800aab8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aaba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800aabe:	2500      	movs	r5, #0
 800aac0:	e9c0 3506 	strd	r3, r5, [r0, #24]
 800aac4:	4606      	mov	r6, r0
 800aac6:	2050      	movs	r0, #80	@ 0x50
 800aac8:	f009 fe80 	bl	80147cc <net::tcp_begin(unsigned short)>
 800aacc:	462c      	mov	r4, r5
 800aace:	61b0      	str	r0, [r6, #24]
 800aad0:	f44f 7702 	mov.w	r7, #520	@ 0x208
 800aad4:	2038      	movs	r0, #56	@ 0x38
 800aad6:	f00f fd55 	bl	801a584 <operator new(unsigned int)>
 800aada:	69b3      	ldr	r3, [r6, #24]
 800aadc:	f846 0025 	str.w	r0, [r6, r5, lsl #2]
 800aae0:	e9c0 5300 	strd	r5, r3, [r0]
 800aae4:	3501      	adds	r5, #1
 800aae6:	2203      	movs	r2, #3
 800aae8:	2305      	movs	r3, #5
 800aaea:	2d06      	cmp	r5, #6
 800aaec:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800aaf0:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800aaf4:	e9c0 4406 	strd	r4, r4, [r0, #24]
 800aaf8:	e9c0 4408 	strd	r4, r4, [r0, #32]
 800aafc:	e9c0 230b 	strd	r2, r3, [r0, #44]	@ 0x2c
 800ab00:	6287      	str	r7, [r0, #40]	@ 0x28
 800ab02:	f880 4034 	strb.w	r4, [r0, #52]	@ 0x34
 800ab06:	d1e5      	bne.n	800aad4 <HttpDaemon::HttpDaemon()+0x1c>
 800ab08:	4805      	ldr	r0, [pc, #20]	@ (800ab20 <HttpDaemon::HttpDaemon()+0x68>)
 800ab0a:	9400      	str	r4, [sp, #0]
 800ab0c:	2300      	movs	r3, #0
 800ab0e:	2202      	movs	r2, #2
 800ab10:	4619      	mov	r1, r3
 800ab12:	6800      	ldr	r0, [r0, #0]
 800ab14:	f008 fbe4 	bl	80132e0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>
 800ab18:	4630      	mov	r0, r6
 800ab1a:	b003      	add	sp, #12
 800ab1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab1e:	bf00      	nop
 800ab20:	200026f0 	strdcs	r2, [r0], -r0

0800ab24 <DisplaySet::SetSleep(bool)>:
 800ab24:	4770      	bx	lr
 800ab26:	bf00      	nop

0800ab28 <HttpDeamonHandleRequest::ParseMethod(char*)>:
 800ab28:	460b      	mov	r3, r1
 800ab2a:	b510      	push	{r4, lr}
 800ab2c:	4929      	ldr	r1, [pc, #164]	@ (800abd4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800ab2e:	4604      	mov	r4, r0
 800ab30:	4618      	mov	r0, r3
 800ab32:	f00f fb3f 	bl	801a1b4 <strtok>
 800ab36:	2800      	cmp	r0, #0
 800ab38:	d039      	beq.n	800abae <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ab3a:	7803      	ldrb	r3, [r0, #0]
 800ab3c:	2b47      	cmp	r3, #71	@ 0x47
 800ab3e:	d139      	bne.n	800abb4 <HttpDeamonHandleRequest::ParseMethod(char*)+0x8c>
 800ab40:	4a25      	ldr	r2, [pc, #148]	@ (800abd8 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb0>)
 800ab42:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ab46:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ab4a:	428b      	cmp	r3, r1
 800ab4c:	d12f      	bne.n	800abae <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800ab4e:	2b00      	cmp	r3, #0
 800ab50:	d1f7      	bne.n	800ab42 <HttpDeamonHandleRequest::ParseMethod(char*)+0x1a>
 800ab52:	4920      	ldr	r1, [pc, #128]	@ (800abd4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xac>)
 800ab54:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800ab56:	2000      	movs	r0, #0
 800ab58:	f00f fb2c 	bl	801a1b4 <strtok>
 800ab5c:	b320      	cbz	r0, 800aba8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ab5e:	61a0      	str	r0, [r4, #24]
 800ab60:	491e      	ldr	r1, [pc, #120]	@ (800abdc <HttpDeamonHandleRequest::ParseMethod(char*)+0xb4>)
 800ab62:	2000      	movs	r0, #0
 800ab64:	f00f fb26 	bl	801a1b4 <strtok>
 800ab68:	4603      	mov	r3, r0
 800ab6a:	b1e8      	cbz	r0, 800aba8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ab6c:	7802      	ldrb	r2, [r0, #0]
 800ab6e:	2a48      	cmp	r2, #72	@ 0x48
 800ab70:	d11a      	bne.n	800aba8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ab72:	4a1b      	ldr	r2, [pc, #108]	@ (800abe0 <HttpDeamonHandleRequest::ParseMethod(char*)+0xb8>)
 800ab74:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ab78:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ab7c:	4288      	cmp	r0, r1
 800ab7e:	d113      	bne.n	800aba8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ab80:	2800      	cmp	r0, #0
 800ab82:	d1f7      	bne.n	800ab74 <HttpDeamonHandleRequest::ParseMethod(char*)+0x4c>
 800ab84:	4917      	ldr	r1, [pc, #92]	@ (800abe4 <HttpDeamonHandleRequest::ParseMethod(char*)+0xbc>)
 800ab86:	f00f fb15 	bl	801a1b4 <strtok>
 800ab8a:	b168      	cbz	r0, 800aba8 <HttpDeamonHandleRequest::ParseMethod(char*)+0x80>
 800ab8c:	7803      	ldrb	r3, [r0, #0]
 800ab8e:	2b31      	cmp	r3, #49	@ 0x31
 800ab90:	d11d      	bne.n	800abce <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800ab92:	4a15      	ldr	r2, [pc, #84]	@ (800abe8 <HttpDeamonHandleRequest::ParseMethod(char*)+0xc0>)
 800ab94:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800ab98:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ab9c:	428b      	cmp	r3, r1
 800ab9e:	d116      	bne.n	800abce <HttpDeamonHandleRequest::ParseMethod(char*)+0xa6>
 800aba0:	2b00      	cmp	r3, #0
 800aba2:	d1f7      	bne.n	800ab94 <HttpDeamonHandleRequest::ParseMethod(char*)+0x6c>
 800aba4:	20c8      	movs	r0, #200	@ 0xc8
 800aba6:	bd10      	pop	{r4, pc}
 800aba8:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800abac:	bd10      	pop	{r4, pc}
 800abae:	f240 10f5 	movw	r0, #501	@ 0x1f5
 800abb2:	bd10      	pop	{r4, pc}
 800abb4:	2b50      	cmp	r3, #80	@ 0x50
 800abb6:	d1fa      	bne.n	800abae <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800abb8:	4a0c      	ldr	r2, [pc, #48]	@ (800abec <HttpDeamonHandleRequest::ParseMethod(char*)+0xc4>)
 800abba:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800abbe:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800abc2:	428b      	cmp	r3, r1
 800abc4:	d1f3      	bne.n	800abae <HttpDeamonHandleRequest::ParseMethod(char*)+0x86>
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	d1f7      	bne.n	800abba <HttpDeamonHandleRequest::ParseMethod(char*)+0x92>
 800abca:	2301      	movs	r3, #1
 800abcc:	e7c1      	b.n	800ab52 <HttpDeamonHandleRequest::ParseMethod(char*)+0x2a>
 800abce:	f240 10f9 	movw	r0, #505	@ 0x1f9
 800abd2:	bd10      	pop	{r4, pc}
 800abd4:	0801bc5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, ip, sp, pc}
 800abd8:	0801bc60 	stmdaeq	r1, {r5, r6, sl, fp, ip, sp, pc}
 800abdc:	0801bc6c 	stmdaeq	r1, {r2, r3, r5, r6, sl, fp, ip, sp, pc}
 800abe0:	0801bc70 	stmdaeq	r1, {r4, r5, r6, sl, fp, ip, sp, pc}
 800abe4:	0801bc78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, ip, sp, pc}
 800abe8:	0801bc7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, ip, sp, pc}
 800abec:	0801bc64 	stmdaeq	r1, {r2, r5, r6, sl, fp, ip, sp, pc}

0800abf0 <HttpDeamonHandleRequest::ParseHeaderField(char*)>:
 800abf0:	b538      	push	{r3, r4, r5, lr}
 800abf2:	460b      	mov	r3, r1
 800abf4:	4605      	mov	r5, r0
 800abf6:	493f      	ldr	r1, [pc, #252]	@ (800acf4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x104>)
 800abf8:	4618      	mov	r0, r3
 800abfa:	f00f fadb 	bl	801a1b4 <strtok>
 800abfe:	b370      	cbz	r0, 800ac5e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ac00:	1e41      	subs	r1, r0, #1
 800ac02:	4c3d      	ldr	r4, [pc, #244]	@ (800acf8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x108>)
 800ac04:	468c      	mov	ip, r1
 800ac06:	e000      	b.n	800ac0a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x1a>
 800ac08:	b360      	cbz	r0, 800ac64 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x74>
 800ac0a:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 800ac0e:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800ac12:	2b19      	cmp	r3, #25
 800ac14:	f814 3b01 	ldrb.w	r3, [r4], #1
 800ac18:	f1a3 0e41 	sub.w	lr, r3, #65	@ 0x41
 800ac1c:	4602      	mov	r2, r0
 800ac1e:	bf98      	it	ls
 800ac20:	f100 0220 	addls.w	r2, r0, #32
 800ac24:	f1be 0f19 	cmp.w	lr, #25
 800ac28:	bf98      	it	ls
 800ac2a:	3320      	addls	r3, #32
 800ac2c:	4293      	cmp	r3, r2
 800ac2e:	d0eb      	beq.n	800ac08 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x18>
 800ac30:	4832      	ldr	r0, [pc, #200]	@ (800acfc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x10c>)
 800ac32:	e000      	b.n	800ac36 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x46>
 800ac34:	b34c      	cbz	r4, 800ac8a <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x9a>
 800ac36:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ac3a:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
 800ac3e:	2b19      	cmp	r3, #25
 800ac40:	f810 3b01 	ldrb.w	r3, [r0], #1
 800ac44:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
 800ac48:	4622      	mov	r2, r4
 800ac4a:	bf98      	it	ls
 800ac4c:	f104 0220 	addls.w	r2, r4, #32
 800ac50:	f1bc 0f19 	cmp.w	ip, #25
 800ac54:	bf98      	it	ls
 800ac56:	3320      	addls	r3, #32
 800ac58:	4293      	cmp	r3, r2
 800ac5a:	d0eb      	beq.n	800ac34 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x44>
 800ac5c:	e03a      	b.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac5e:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ac62:	bd38      	pop	{r3, r4, r5, pc}
 800ac64:	4926      	ldr	r1, [pc, #152]	@ (800ad00 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x110>)
 800ac66:	f00f faa5 	bl	801a1b4 <strtok>
 800ac6a:	2800      	cmp	r0, #0
 800ac6c:	d0f7      	beq.n	800ac5e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ac6e:	4a25      	ldr	r2, [pc, #148]	@ (800ad04 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x114>)
 800ac70:	1e43      	subs	r3, r0, #1
 800ac72:	f100 0c0b 	add.w	ip, r0, #11
 800ac76:	e001      	b.n	800ac7c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x8c>
 800ac78:	459c      	cmp	ip, r3
 800ac7a:	d019      	beq.n	800acb0 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xc0>
 800ac7c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ac80:	f812 4b01 	ldrb.w	r4, [r2], #1
 800ac84:	428c      	cmp	r4, r1
 800ac86:	d0f7      	beq.n	800ac78 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x88>
 800ac88:	e024      	b.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800ac8a:	491f      	ldr	r1, [pc, #124]	@ (800ad08 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x118>)
 800ac8c:	4620      	mov	r0, r4
 800ac8e:	f00f fa91 	bl	801a1b4 <strtok>
 800ac92:	2800      	cmp	r0, #0
 800ac94:	d0e3      	beq.n	800ac5e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800ac96:	7803      	ldrb	r3, [r0, #0]
 800ac98:	b1db      	cbz	r3, 800acd2 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe2>
 800ac9a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
 800ac9e:	2a09      	cmp	r2, #9
 800aca0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800aca4:	d8db      	bhi.n	800ac5e <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x6e>
 800aca6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800acaa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800acae:	e7f3      	b.n	800ac98 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xa8>
 800acb0:	7b02      	ldrb	r2, [r0, #12]
 800acb2:	2a6a      	cmp	r2, #106	@ 0x6a
 800acb4:	f100 030c 	add.w	r3, r0, #12
 800acb8:	d10e      	bne.n	800acd8 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe8>
 800acba:	4914      	ldr	r1, [pc, #80]	@ (800ad0c <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x11c>)
 800acbc:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800acc0:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800acc4:	4282      	cmp	r2, r0
 800acc6:	d105      	bne.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800acc8:	2a00      	cmp	r2, #0
 800acca:	d1f7      	bne.n	800acbc <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xcc>
 800accc:	2303      	movs	r3, #3
 800acce:	632b      	str	r3, [r5, #48]	@ 0x30
 800acd0:	e000      	b.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800acd2:	612c      	str	r4, [r5, #16]
 800acd4:	20c8      	movs	r0, #200	@ 0xc8
 800acd6:	bd38      	pop	{r3, r4, r5, pc}
 800acd8:	2a6f      	cmp	r2, #111	@ 0x6f
 800acda:	d1fb      	bne.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800acdc:	490c      	ldr	r1, [pc, #48]	@ (800ad10 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0x120>)
 800acde:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ace2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800ace6:	4282      	cmp	r2, r0
 800ace8:	d1f4      	bne.n	800acd4 <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xe4>
 800acea:	2a00      	cmp	r2, #0
 800acec:	d1f7      	bne.n	800acde <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xee>
 800acee:	2304      	movs	r3, #4
 800acf0:	e7ed      	b.n	800acce <HttpDeamonHandleRequest::ParseHeaderField(char*)+0xde>
 800acf2:	bf00      	nop
 800acf4:	0801bc80 	stmdaeq	r1, {r7, sl, fp, ip, sp, pc}
 800acf8:	0801bc84 	stmdaeq	r1, {r2, r7, sl, fp, ip, sp, pc}
 800acfc:	0801bc94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp, pc}
 800ad00:	0801bccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, sp, pc}
 800ad04:	0801bca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, ip, sp, pc}
 800ad08:	0801bc5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, ip, sp, pc}
 800ad0c:	0801bcb4 	stmdaeq	r1, {r2, r4, r5, r7, sl, fp, ip, sp, pc}
 800ad10:	0801bcbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, sl, fp, ip, sp, pc}

0800ad14 <HttpDeamonHandleRequest::ParseRequest()>:
 800ad14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad16:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ad18:	4605      	mov	r5, r0
 800ad1a:	6940      	ldr	r0, [r0, #20]
 800ad1c:	2400      	movs	r4, #0
 800ad1e:	2205      	movs	r2, #5
 800ad20:	e9c5 4403 	strd	r4, r4, [r5, #12]
 800ad24:	632a      	str	r2, [r5, #48]	@ 0x30
 800ad26:	b300      	cbz	r0, 800ad6a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ad28:	4619      	mov	r1, r3
 800ad2a:	46a4      	mov	ip, r4
 800ad2c:	4626      	mov	r6, r4
 800ad2e:	e002      	b.n	800ad36 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800ad30:	3401      	adds	r4, #1
 800ad32:	42a0      	cmp	r0, r4
 800ad34:	d919      	bls.n	800ad6a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ad36:	5d1a      	ldrb	r2, [r3, r4]
 800ad38:	2a0a      	cmp	r2, #10
 800ad3a:	d1f9      	bne.n	800ad30 <HttpDeamonHandleRequest::ParseRequest()+0x1c>
 800ad3c:	4423      	add	r3, r4
 800ad3e:	f10c 0701 	add.w	r7, ip, #1
 800ad42:	f803 6c01 	strb.w	r6, [r3, #-1]
 800ad46:	f1bc 0f00 	cmp.w	ip, #0
 800ad4a:	d010      	beq.n	800ad6e <HttpDeamonHandleRequest::ParseRequest()+0x5a>
 800ad4c:	780b      	ldrb	r3, [r1, #0]
 800ad4e:	b193      	cbz	r3, 800ad76 <HttpDeamonHandleRequest::ParseRequest()+0x62>
 800ad50:	4628      	mov	r0, r5
 800ad52:	f7ff ff4d 	bl	800abf0 <HttpDeamonHandleRequest::ParseHeaderField(char*)>
 800ad56:	28c8      	cmp	r0, #200	@ 0xc8
 800ad58:	d108      	bne.n	800ad6c <HttpDeamonHandleRequest::ParseRequest()+0x58>
 800ad5a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800ad5c:	6968      	ldr	r0, [r5, #20]
 800ad5e:	3401      	adds	r4, #1
 800ad60:	1919      	adds	r1, r3, r4
 800ad62:	3401      	adds	r4, #1
 800ad64:	42a0      	cmp	r0, r4
 800ad66:	46bc      	mov	ip, r7
 800ad68:	d8e5      	bhi.n	800ad36 <HttpDeamonHandleRequest::ParseRequest()+0x22>
 800ad6a:	20c8      	movs	r0, #200	@ 0xc8
 800ad6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ad6e:	4628      	mov	r0, r5
 800ad70:	f7ff feda 	bl	800ab28 <HttpDeamonHandleRequest::ParseMethod(char*)>
 800ad74:	e7ef      	b.n	800ad56 <HttpDeamonHandleRequest::ParseRequest()+0x42>
 800ad76:	696a      	ldr	r2, [r5, #20]
 800ad78:	3a01      	subs	r2, #1
 800ad7a:	1b12      	subs	r2, r2, r4
 800ad7c:	b292      	uxth	r2, r2
 800ad7e:	60ea      	str	r2, [r5, #12]
 800ad80:	2a00      	cmp	r2, #0
 800ad82:	d0f2      	beq.n	800ad6a <HttpDeamonHandleRequest::ParseRequest()+0x56>
 800ad84:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 800ad86:	3401      	adds	r4, #1
 800ad88:	4421      	add	r1, r4
 800ad8a:	61e9      	str	r1, [r5, #28]
 800ad8c:	548b      	strb	r3, [r1, r2]
 800ad8e:	e7ec      	b.n	800ad6a <HttpDeamonHandleRequest::ParseRequest()+0x56>

0800ad90 <HttpDeamonHandleRequest::HandleGetTxt()>:
 800ad90:	b570      	push	{r4, r5, r6, lr}
 800ad92:	4605      	mov	r5, r0
 800ad94:	6980      	ldr	r0, [r0, #24]
 800ad96:	7983      	ldrb	r3, [r0, #6]
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	d039      	beq.n	800ae10 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800ad9c:	1d84      	adds	r4, r0, #6
 800ad9e:	4623      	mov	r3, r4
 800ada0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ada4:	2a00      	cmp	r2, #0
 800ada6:	d1fb      	bne.n	800ada0 <HttpDeamonHandleRequest::HandleGetTxt()+0x10>
 800ada8:	1b1a      	subs	r2, r3, r4
 800adaa:	2a04      	cmp	r2, #4
 800adac:	d930      	bls.n	800ae10 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800adae:	1f13      	subs	r3, r2, #4
 800adb0:	18e1      	adds	r1, r4, r3
 800adb2:	5ce3      	ldrb	r3, [r4, r3]
 800adb4:	2b2e      	cmp	r3, #46	@ 0x2e
 800adb6:	d12b      	bne.n	800ae10 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800adb8:	4c18      	ldr	r4, [pc, #96]	@ (800ae1c <HttpDeamonHandleRequest::HandleGetTxt()+0x8c>)
 800adba:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800adbe:	f814 cf01 	ldrb.w	ip, [r4, #1]!
 800adc2:	4563      	cmp	r3, ip
 800adc4:	d124      	bne.n	800ae10 <HttpDeamonHandleRequest::HandleGetTxt()+0x80>
 800adc6:	2b00      	cmp	r3, #0
 800adc8:	d1f7      	bne.n	800adba <HttpDeamonHandleRequest::HandleGetTxt()+0x2a>
 800adca:	4c15      	ldr	r4, [pc, #84]	@ (800ae20 <HttpDeamonHandleRequest::HandleGetTxt()+0x90>)
 800adcc:	7821      	ldrb	r1, [r4, #0]
 800adce:	f041 0601 	orr.w	r6, r1, #1
 800add2:	1d43      	adds	r3, r0, #5
 800add4:	7026      	strb	r6, [r4, #0]
 800add6:	4813      	ldr	r0, [pc, #76]	@ (800ae24 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800add8:	f001 0601 	and.w	r6, r1, #1
 800addc:	e003      	b.n	800ade6 <HttpDeamonHandleRequest::HandleGetTxt()+0x56>
 800adde:	3a01      	subs	r2, #1
 800ade0:	f800 1b01 	strb.w	r1, [r0], #1
 800ade4:	d005      	beq.n	800adf2 <HttpDeamonHandleRequest::HandleGetTxt()+0x62>
 800ade6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800adea:	2900      	cmp	r1, #0
 800adec:	d1f7      	bne.n	800adde <HttpDeamonHandleRequest::HandleGetTxt()+0x4e>
 800adee:	f00e fe8f 	bl	8019b10 <memset>
 800adf2:	4b0d      	ldr	r3, [pc, #52]	@ (800ae28 <HttpDeamonHandleRequest::HandleGetTxt()+0x98>)
 800adf4:	490b      	ldr	r1, [pc, #44]	@ (800ae24 <HttpDeamonHandleRequest::HandleGetTxt()+0x94>)
 800adf6:	6818      	ldr	r0, [r3, #0]
 800adf8:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800adfc:	f7ff fa66 	bl	800a2cc <RemoteConfig::HandleGet(void*, unsigned long)>
 800ae00:	7823      	ldrb	r3, [r4, #0]
 800ae02:	60a8      	str	r0, [r5, #8]
 800ae04:	b93e      	cbnz	r6, 800ae16 <HttpDeamonHandleRequest::HandleGetTxt()+0x86>
 800ae06:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 800ae0a:	7023      	strb	r3, [r4, #0]
 800ae0c:	20c8      	movs	r0, #200	@ 0xc8
 800ae0e:	bd70      	pop	{r4, r5, r6, pc}
 800ae10:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800ae14:	bd70      	pop	{r4, r5, r6, pc}
 800ae16:	f043 0301 	orr.w	r3, r3, #1
 800ae1a:	e7f6      	b.n	800ae0a <HttpDeamonHandleRequest::HandleGetTxt()+0x7a>
 800ae1c:	0801bcd0 	stmdaeq	r1, {r4, r6, r7, sl, fp, ip, sp, pc}
 800ae20:	20002a15 	andcs	r2, r0, r5, lsl sl
 800ae24:	20000cc0 	andcs	r0, r0, r0, asr #25
 800ae28:	20000cbc 			@ <UNDEFINED> instruction: 0x20000cbc

0800ae2c <HttpDeamonHandleRequest::HandleGet()>:
 800ae2c:	b530      	push	{r4, r5, lr}
 800ae2e:	4604      	mov	r4, r0
 800ae30:	b083      	sub	sp, #12
 800ae32:	6980      	ldr	r0, [r0, #24]
 800ae34:	4ba9      	ldr	r3, [pc, #676]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800ae36:	6223      	str	r3, [r4, #32]
 800ae38:	2100      	movs	r1, #0
 800ae3a:	4aa9      	ldr	r2, [pc, #676]	@ (800b0e0 <HttpDeamonHandleRequest::HandleGet()+0x2b4>)
 800ae3c:	9101      	str	r1, [sp, #4]
 800ae3e:	1e43      	subs	r3, r0, #1
 800ae40:	f100 0e05 	add.w	lr, r0, #5
 800ae44:	e001      	b.n	800ae4a <HttpDeamonHandleRequest::HandleGet()+0x1e>
 800ae46:	459e      	cmp	lr, r3
 800ae48:	d020      	beq.n	800ae8c <HttpDeamonHandleRequest::HandleGet()+0x60>
 800ae4a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ae4e:	f812 cb01 	ldrb.w	ip, [r2], #1
 800ae52:	458c      	cmp	ip, r1
 800ae54:	d0f7      	beq.n	800ae46 <HttpDeamonHandleRequest::HandleGet()+0x1a>
 800ae56:	7803      	ldrb	r3, [r0, #0]
 800ae58:	2b2f      	cmp	r3, #47	@ 0x2f
 800ae5a:	f040 808b 	bne.w	800af74 <HttpDeamonHandleRequest::HandleGet()+0x148>
 800ae5e:	4aa1      	ldr	r2, [pc, #644]	@ (800b0e4 <HttpDeamonHandleRequest::HandleGet()+0x2b8>)
 800ae60:	4601      	mov	r1, r0
 800ae62:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800ae66:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800ae6a:	4563      	cmp	r3, ip
 800ae6c:	d13c      	bne.n	800aee8 <HttpDeamonHandleRequest::HandleGet()+0xbc>
 800ae6e:	2b00      	cmp	r3, #0
 800ae70:	d1f7      	bne.n	800ae62 <HttpDeamonHandleRequest::HandleGet()+0x36>
 800ae72:	489d      	ldr	r0, [pc, #628]	@ (800b0e8 <HttpDeamonHandleRequest::HandleGet()+0x2bc>)
 800ae74:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800ae78:	a901      	add	r1, sp, #4
 800ae7a:	f000 fb69 	bl	800b550 <get_file_content(char const*, unsigned long&, http::contentTypes&)>
 800ae7e:	9b01      	ldr	r3, [sp, #4]
 800ae80:	6220      	str	r0, [r4, #32]
 800ae82:	b36b      	cbz	r3, 800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800ae84:	60a3      	str	r3, [r4, #8]
 800ae86:	20c8      	movs	r0, #200	@ 0xc8
 800ae88:	b003      	add	sp, #12
 800ae8a:	bd30      	pop	{r4, r5, pc}
 800ae8c:	2303      	movs	r3, #3
 800ae8e:	6323      	str	r3, [r4, #48]	@ 0x30
 800ae90:	7982      	ldrb	r2, [r0, #6]
 800ae92:	1dc1      	adds	r1, r0, #7
 800ae94:	2a00      	cmp	r2, #0
 800ae96:	d052      	beq.n	800af3e <HttpDeamonHandleRequest::HandleGet()+0x112>
 800ae98:	f241 5305 	movw	r3, #5381	@ 0x1505
 800ae9c:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800aea0:	fa12 f383 	uxtah	r3, r2, r3
 800aea4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aea8:	b29b      	uxth	r3, r3
 800aeaa:	2a00      	cmp	r2, #0
 800aeac:	d1f6      	bne.n	800ae9c <HttpDeamonHandleRequest::HandleGet()+0x70>
 800aeae:	f244 729b 	movw	r2, #18331	@ 0x479b
 800aeb2:	4293      	cmp	r3, r2
 800aeb4:	d06f      	beq.n	800af96 <HttpDeamonHandleRequest::HandleGet()+0x16a>
 800aeb6:	d82f      	bhi.n	800af18 <HttpDeamonHandleRequest::HandleGet()+0xec>
 800aeb8:	f241 6261 	movw	r2, #5729	@ 0x1661
 800aebc:	4293      	cmp	r3, r2
 800aebe:	d078      	beq.n	800afb2 <HttpDeamonHandleRequest::HandleGet()+0x186>
 800aec0:	f242 4272 	movw	r2, #9330	@ 0x2472
 800aec4:	4293      	cmp	r3, r2
 800aec6:	d06d      	beq.n	800afa4 <HttpDeamonHandleRequest::HandleGet()+0x178>
 800aec8:	f241 12fa 	movw	r2, #4602	@ 0x11fa
 800aecc:	4293      	cmp	r3, r2
 800aece:	d136      	bne.n	800af3e <HttpDeamonHandleRequest::HandleGet()+0x112>
 800aed0:	4882      	ldr	r0, [pc, #520]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800aed2:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800aed6:	f000 fb35 	bl	800b544 <remoteconfig::json_get_directory(char*, unsigned long)>
 800aeda:	4603      	mov	r3, r0
 800aedc:	2b00      	cmp	r3, #0
 800aede:	d1d1      	bne.n	800ae84 <HttpDeamonHandleRequest::HandleGet()+0x58>
 800aee0:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800aee4:	b003      	add	sp, #12
 800aee6:	bd30      	pop	{r4, r5, pc}
 800aee8:	4a80      	ldr	r2, [pc, #512]	@ (800b0ec <HttpDeamonHandleRequest::HandleGet()+0x2c0>)
 800aeea:	4601      	mov	r1, r0
 800aeec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800aef0:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800aef4:	4563      	cmp	r3, ip
 800aef6:	d103      	bne.n	800af00 <HttpDeamonHandleRequest::HandleGet()+0xd4>
 800aef8:	2b00      	cmp	r3, #0
 800aefa:	d1f7      	bne.n	800aeec <HttpDeamonHandleRequest::HandleGet()+0xc0>
 800aefc:	487c      	ldr	r0, [pc, #496]	@ (800b0f0 <HttpDeamonHandleRequest::HandleGet()+0x2c4>)
 800aefe:	e7b9      	b.n	800ae74 <HttpDeamonHandleRequest::HandleGet()+0x48>
 800af00:	4a7c      	ldr	r2, [pc, #496]	@ (800b0f4 <HttpDeamonHandleRequest::HandleGet()+0x2c8>)
 800af02:	4601      	mov	r1, r0
 800af04:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800af08:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800af0c:	4563      	cmp	r3, ip
 800af0e:	d136      	bne.n	800af7e <HttpDeamonHandleRequest::HandleGet()+0x152>
 800af10:	2b00      	cmp	r3, #0
 800af12:	d1f7      	bne.n	800af04 <HttpDeamonHandleRequest::HandleGet()+0xd8>
 800af14:	4878      	ldr	r0, [pc, #480]	@ (800b0f8 <HttpDeamonHandleRequest::HandleGet()+0x2cc>)
 800af16:	e7ad      	b.n	800ae74 <HttpDeamonHandleRequest::HandleGet()+0x48>
 800af18:	f24a 5228 	movw	r2, #42280	@ 0xa528
 800af1c:	4293      	cmp	r3, r2
 800af1e:	d05a      	beq.n	800afd6 <HttpDeamonHandleRequest::HandleGet()+0x1aa>
 800af20:	f24b 72d9 	movw	r2, #47065	@ 0xb7d9
 800af24:	4293      	cmp	r3, r2
 800af26:	d04b      	beq.n	800afc0 <HttpDeamonHandleRequest::HandleGet()+0x194>
 800af28:	f646 424b 	movw	r2, #27723	@ 0x6c4b
 800af2c:	4293      	cmp	r3, r2
 800af2e:	d106      	bne.n	800af3e <HttpDeamonHandleRequest::HandleGet()+0x112>
 800af30:	486a      	ldr	r0, [pc, #424]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800af32:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800af36:	f000 fad3 	bl	800b4e0 <remoteconfig::json_get_version(char*, unsigned long)>
 800af3a:	4603      	mov	r3, r0
 800af3c:	e7ce      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800af3e:	4a6f      	ldr	r2, [pc, #444]	@ (800b0fc <HttpDeamonHandleRequest::HandleGet()+0x2d0>)
 800af40:	f100 0509 	add.w	r5, r0, #9
 800af44:	4673      	mov	r3, lr
 800af46:	e001      	b.n	800af4c <HttpDeamonHandleRequest::HandleGet()+0x120>
 800af48:	429d      	cmp	r5, r3
 800af4a:	d04e      	beq.n	800afea <HttpDeamonHandleRequest::HandleGet()+0x1be>
 800af4c:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800af50:	f812 1b01 	ldrb.w	r1, [r2], #1
 800af54:	458c      	cmp	ip, r1
 800af56:	d0f7      	beq.n	800af48 <HttpDeamonHandleRequest::HandleGet()+0x11c>
 800af58:	4b69      	ldr	r3, [pc, #420]	@ (800b100 <HttpDeamonHandleRequest::HandleGet()+0x2d4>)
 800af5a:	e001      	b.n	800af60 <HttpDeamonHandleRequest::HandleGet()+0x134>
 800af5c:	4575      	cmp	r5, lr
 800af5e:	d074      	beq.n	800b04a <HttpDeamonHandleRequest::HandleGet()+0x21e>
 800af60:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 800af64:	f813 2b01 	ldrb.w	r2, [r3], #1
 800af68:	4291      	cmp	r1, r2
 800af6a:	d0f7      	beq.n	800af5c <HttpDeamonHandleRequest::HandleGet()+0x130>
 800af6c:	4620      	mov	r0, r4
 800af6e:	f7ff ff0f 	bl	800ad90 <HttpDeamonHandleRequest::HandleGetTxt()>
 800af72:	e789      	b.n	800ae88 <HttpDeamonHandleRequest::HandleGet()+0x5c>
 800af74:	f104 0230 	add.w	r2, r4, #48	@ 0x30
 800af78:	a901      	add	r1, sp, #4
 800af7a:	3001      	adds	r0, #1
 800af7c:	e77d      	b.n	800ae7a <HttpDeamonHandleRequest::HandleGet()+0x4e>
 800af7e:	4a61      	ldr	r2, [pc, #388]	@ (800b104 <HttpDeamonHandleRequest::HandleGet()+0x2d8>)
 800af80:	4601      	mov	r1, r0
 800af82:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800af86:	f812 cf01 	ldrb.w	ip, [r2, #1]!
 800af8a:	4563      	cmp	r3, ip
 800af8c:	d1f2      	bne.n	800af74 <HttpDeamonHandleRequest::HandleGet()+0x148>
 800af8e:	2b00      	cmp	r3, #0
 800af90:	d1f7      	bne.n	800af82 <HttpDeamonHandleRequest::HandleGet()+0x156>
 800af92:	485d      	ldr	r0, [pc, #372]	@ (800b108 <HttpDeamonHandleRequest::HandleGet()+0x2dc>)
 800af94:	e76e      	b.n	800ae74 <HttpDeamonHandleRequest::HandleGet()+0x48>
 800af96:	4851      	ldr	r0, [pc, #324]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800af98:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800af9c:	f000 fac6 	bl	800b52c <remoteconfig::json_get_display(char*, unsigned long)>
 800afa0:	4603      	mov	r3, r0
 800afa2:	e79b      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800afa4:	484d      	ldr	r0, [pc, #308]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800afa6:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afaa:	f00c fbe1 	bl	8017770 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>
 800afae:	4603      	mov	r3, r0
 800afb0:	e794      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800afb2:	484a      	ldr	r0, [pc, #296]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800afb4:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afb8:	f000 fa60 	bl	800b47c <remoteconfig::json_get_list(char*, unsigned long)>
 800afbc:	4603      	mov	r3, r0
 800afbe:	e78d      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800afc0:	4b52      	ldr	r3, [pc, #328]	@ (800b10c <HttpDeamonHandleRequest::HandleGet()+0x2e0>)
 800afc2:	681b      	ldr	r3, [r3, #0]
 800afc4:	7bdb      	ldrb	r3, [r3, #15]
 800afc6:	b16b      	cbz	r3, 800afe4 <HttpDeamonHandleRequest::HandleGet()+0x1b8>
 800afc8:	4844      	ldr	r0, [pc, #272]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800afca:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afce:	f000 faa3 	bl	800b518 <remoteconfig::json_get_uptime(char*, unsigned long)>
 800afd2:	4603      	mov	r3, r0
 800afd4:	e782      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800afd6:	4841      	ldr	r0, [pc, #260]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800afd8:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800afdc:	f003 fe82 	bl	800ece4 <remoteconfig::rdm::json_get_rdm(char*, unsigned long)>
 800afe0:	4603      	mov	r3, r0
 800afe2:	e77b      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800afe4:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800afe8:	e74e      	b.n	800ae88 <HttpDeamonHandleRequest::HandleGet()+0x5c>
 800afea:	7c05      	ldrb	r5, [r0, #16]
 800afec:	7a82      	ldrb	r2, [r0, #10]
 800afee:	2d3f      	cmp	r5, #63	@ 0x3f
 800aff0:	bf04      	itt	eq
 800aff2:	2300      	moveq	r3, #0
 800aff4:	7403      	strbeq	r3, [r0, #16]
 800aff6:	f100 010b 	add.w	r1, r0, #11
 800affa:	2a00      	cmp	r2, #0
 800affc:	f43f af70 	beq.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b000:	f241 5305 	movw	r3, #5381	@ 0x1505
 800b004:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800b008:	fa12 f383 	uxtah	r3, r2, r3
 800b00c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b010:	b29b      	uxth	r3, r3
 800b012:	2a00      	cmp	r2, #0
 800b014:	d1f6      	bne.n	800b004 <HttpDeamonHandleRequest::HandleGet()+0x1d8>
 800b016:	f643 124e 	movw	r2, #14670	@ 0x394e
 800b01a:	4293      	cmp	r3, r2
 800b01c:	d03f      	beq.n	800b09e <HttpDeamonHandleRequest::HandleGet()+0x272>
 800b01e:	f648 5249 	movw	r2, #36169	@ 0x8d49
 800b022:	4293      	cmp	r3, r2
 800b024:	f47f af5c 	bne.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b028:	2d3f      	cmp	r5, #63	@ 0x3f
 800b02a:	f47f af59 	bne.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b02e:	7c40      	ldrb	r0, [r0, #17]
 800b030:	f020 0320 	bic.w	r3, r0, #32
 800b034:	3b41      	subs	r3, #65	@ 0x41
 800b036:	2b19      	cmp	r3, #25
 800b038:	f63f af52 	bhi.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b03c:	4927      	ldr	r1, [pc, #156]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800b03e:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800b042:	f006 f9eb 	bl	801141c <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)>
 800b046:	4603      	mov	r3, r0
 800b048:	e748      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800b04a:	7b45      	ldrb	r5, [r0, #13]
 800b04c:	7a82      	ldrb	r2, [r0, #10]
 800b04e:	2d3f      	cmp	r5, #63	@ 0x3f
 800b050:	bf04      	itt	eq
 800b052:	2300      	moveq	r3, #0
 800b054:	7343      	strbeq	r3, [r0, #13]
 800b056:	f100 010b 	add.w	r1, r0, #11
 800b05a:	2a00      	cmp	r2, #0
 800b05c:	f43f af40 	beq.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b060:	f241 5305 	movw	r3, #5381	@ 0x1505
 800b064:	eb03 1343 	add.w	r3, r3, r3, lsl #5
 800b068:	fa12 f383 	uxtah	r3, r2, r3
 800b06c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b070:	b29b      	uxth	r3, r3
 800b072:	2a00      	cmp	r2, #0
 800b074:	d1f6      	bne.n	800b064 <HttpDeamonHandleRequest::HandleGet()+0x238>
 800b076:	f64a 720c 	movw	r2, #44812	@ 0xaf0c
 800b07a:	4293      	cmp	r3, r2
 800b07c:	d01d      	beq.n	800b0ba <HttpDeamonHandleRequest::HandleGet()+0x28e>
 800b07e:	f24b 628a 	movw	r2, #46730	@ 0xb68a
 800b082:	4293      	cmp	r3, r2
 800b084:	d012      	beq.n	800b0ac <HttpDeamonHandleRequest::HandleGet()+0x280>
 800b086:	f643 124e 	movw	r2, #14670	@ 0x394e
 800b08a:	4293      	cmp	r3, r2
 800b08c:	f47f af28 	bne.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b090:	4812      	ldr	r0, [pc, #72]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800b092:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b096:	f003 fd85 	bl	800eba4 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)>
 800b09a:	4603      	mov	r3, r0
 800b09c:	e71e      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800b09e:	480f      	ldr	r0, [pc, #60]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800b0a0:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0a4:	f006 f982 	bl	80113ac <remoteconfig::dmx::json_get_ports(char*, unsigned long)>
 800b0a8:	4603      	mov	r3, r0
 800b0aa:	e717      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800b0ac:	480b      	ldr	r0, [pc, #44]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800b0ae:	f44f 61b4 	mov.w	r1, #1440	@ 0x5a0
 800b0b2:	f003 fdf7 	bl	800eca4 <remoteconfig::rdm::json_get_queue(char*, unsigned long)>
 800b0b6:	4603      	mov	r3, r0
 800b0b8:	e710      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800b0ba:	2d3f      	cmp	r5, #63	@ 0x3f
 800b0bc:	f47f af10 	bne.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b0c0:	7b80      	ldrb	r0, [r0, #14]
 800b0c2:	f020 0320 	bic.w	r3, r0, #32
 800b0c6:	3b41      	subs	r3, #65	@ 0x41
 800b0c8:	2b19      	cmp	r3, #25
 800b0ca:	f63f af09 	bhi.w	800aee0 <HttpDeamonHandleRequest::HandleGet()+0xb4>
 800b0ce:	4903      	ldr	r1, [pc, #12]	@ (800b0dc <HttpDeamonHandleRequest::HandleGet()+0x2b0>)
 800b0d0:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 800b0d4:	f003 fe12 	bl	800ecfc <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)>
 800b0d8:	4603      	mov	r3, r0
 800b0da:	e6ff      	b.n	800aedc <HttpDeamonHandleRequest::HandleGet()+0xb0>
 800b0dc:	20000cc0 	andcs	r0, r0, r0, asr #25
 800b0e0:	0801bcd8 	stmdaeq	r1, {r3, r4, r6, r7, sl, fp, ip, sp, pc}
 800b0e4:	0801bc6c 	stmdaeq	r1, {r2, r3, r5, r6, sl, fp, ip, sp, pc}
 800b0e8:	0801bcf0 	stmdaeq	r1, {r4, r5, r6, r7, sl, fp, ip, sp, pc}
 800b0ec:	0801bcfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, fp, ip, sp, pc}
 800b0f0:	0801bd04 	stmdaeq	r1, {r2, r8, sl, fp, ip, sp, pc}
 800b0f4:	0801bd10 	stmdaeq	r1, {r4, r8, sl, fp, ip, sp, pc}
 800b0f8:	0801bd18 	stmdaeq	r1, {r3, r4, r8, sl, fp, ip, sp, pc}
 800b0fc:	0801bce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, ip, sp, pc}
 800b100:	0801bce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, ip, sp, pc}
 800b104:	0801bd24 	stmdaeq	r1, {r2, r5, r8, sl, fp, ip, sp, pc}
 800b108:	0801bd2c 	stmdaeq	r1, {r2, r3, r5, r8, sl, fp, ip, sp, pc}
 800b10c:	20000cbc 			@ <UNDEFINED> instruction: 0x20000cbc

0800b110 <HttpDeamonHandleRequest::HandlePost(bool)>:
 800b110:	b570      	push	{r4, r5, r6, lr}
 800b112:	4604      	mov	r4, r0
 800b114:	b082      	sub	sp, #8
 800b116:	b331      	cbz	r1, 800b166 <HttpDeamonHandleRequest::HandlePost(bool)+0x56>
 800b118:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800b11a:	8aa1      	ldrh	r1, [r4, #20]
 800b11c:	61e0      	str	r0, [r4, #28]
 800b11e:	60e1      	str	r1, [r4, #12]
 800b120:	f894 3034 	ldrb.w	r3, [r4, #52]	@ 0x34
 800b124:	2b00      	cmp	r3, #0
 800b126:	d13c      	bne.n	800b1a2 <HttpDeamonHandleRequest::HandlePost(bool)+0x92>
 800b128:	4d68      	ldr	r5, [pc, #416]	@ (800b2cc <HttpDeamonHandleRequest::HandlePost(bool)+0x1bc>)
 800b12a:	4b69      	ldr	r3, [pc, #420]	@ (800b2d0 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800b12c:	782e      	ldrb	r6, [r5, #0]
 800b12e:	460a      	mov	r2, r1
 800b130:	4601      	mov	r1, r0
 800b132:	6818      	ldr	r0, [r3, #0]
 800b134:	f046 0301 	orr.w	r3, r6, #1
 800b138:	702b      	strb	r3, [r5, #0]
 800b13a:	f7ff f99b 	bl	800a474 <RemoteConfig::HandleSet(void*, unsigned long)>
 800b13e:	782b      	ldrb	r3, [r5, #0]
 800b140:	07f2      	lsls	r2, r6, #31
 800b142:	bf4c      	ite	mi
 800b144:	f043 0301 	orrmi.w	r3, r3, #1
 800b148:	f023 0301 	bicpl.w	r3, r3, #1
 800b14c:	702b      	strb	r3, [r5, #0]
 800b14e:	2300      	movs	r3, #0
 800b150:	4a60      	ldr	r2, [pc, #384]	@ (800b2d4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c4>)
 800b152:	4861      	ldr	r0, [pc, #388]	@ (800b2d8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c8>)
 800b154:	6323      	str	r3, [r4, #48]	@ 0x30
 800b156:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b15a:	f00e ffe5 	bl	801a128 <snprintf>
 800b15e:	60a0      	str	r0, [r4, #8]
 800b160:	20c8      	movs	r0, #200	@ 0xc8
 800b162:	b002      	add	sp, #8
 800b164:	bd70      	pop	{r4, r5, r6, pc}
 800b166:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800b168:	2b03      	cmp	r3, #3
 800b16a:	d134      	bne.n	800b1d6 <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b16c:	6985      	ldr	r5, [r0, #24]
 800b16e:	782b      	ldrb	r3, [r5, #0]
 800b170:	2b2f      	cmp	r3, #47	@ 0x2f
 800b172:	f040 809f 	bne.w	800b2b4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1a4>
 800b176:	4a59      	ldr	r2, [pc, #356]	@ (800b2dc <HttpDeamonHandleRequest::HandlePost(bool)+0x1cc>)
 800b178:	4629      	mov	r1, r5
 800b17a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b17e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b182:	4283      	cmp	r3, r0
 800b184:	d12b      	bne.n	800b1de <HttpDeamonHandleRequest::HandlePost(bool)+0xce>
 800b186:	2b00      	cmp	r3, #0
 800b188:	d1f7      	bne.n	800b17a <HttpDeamonHandleRequest::HandlePost(bool)+0x6a>
 800b18a:	2301      	movs	r3, #1
 800b18c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b190:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800b194:	429a      	cmp	r2, r3
 800b196:	d3e3      	bcc.n	800b160 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b198:	68e1      	ldr	r1, [r4, #12]
 800b19a:	2900      	cmp	r1, #0
 800b19c:	d0e0      	beq.n	800b160 <HttpDeamonHandleRequest::HandlePost(bool)+0x50>
 800b19e:	69e0      	ldr	r0, [r4, #28]
 800b1a0:	e7be      	b.n	800b120 <HttpDeamonHandleRequest::HandlePost(bool)+0x10>
 800b1a2:	2201      	movs	r2, #1
 800b1a4:	f00b fc94 	bl	8016ad0 <properties::convert_json_file(char*, unsigned long, bool)>
 800b1a8:	1e05      	subs	r5, r0, #0
 800b1aa:	dd14      	ble.n	800b1d6 <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b1ac:	69e3      	ldr	r3, [r4, #28]
 800b1ae:	494c      	ldr	r1, [pc, #304]	@ (800b2e0 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d0>)
 800b1b0:	442b      	add	r3, r5
 800b1b2:	2200      	movs	r2, #0
 800b1b4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b1b8:	69e0      	ldr	r0, [r4, #28]
 800b1ba:	f10d 0207 	add.w	r2, sp, #7
 800b1be:	f00b feb8 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b1c2:	bb20      	cbnz	r0, 800b20e <HttpDeamonHandleRequest::HandlePost(bool)+0xfe>
 800b1c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b1c8:	2b00      	cmp	r3, #0
 800b1ca:	d0c0      	beq.n	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b1cc:	4b40      	ldr	r3, [pc, #256]	@ (800b2d0 <HttpDeamonHandleRequest::HandlePost(bool)+0x1c0>)
 800b1ce:	6818      	ldr	r0, [r3, #0]
 800b1d0:	7b83      	ldrb	r3, [r0, #14]
 800b1d2:	2b00      	cmp	r3, #0
 800b1d4:	d177      	bne.n	800b2c6 <HttpDeamonHandleRequest::HandlePost(bool)+0x1b6>
 800b1d6:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800b1da:	b002      	add	sp, #8
 800b1dc:	bd70      	pop	{r4, r5, r6, pc}
 800b1de:	1a1b      	subs	r3, r3, r0
 800b1e0:	2b00      	cmp	r3, #0
 800b1e2:	bf0c      	ite	eq
 800b1e4:	2301      	moveq	r3, #1
 800b1e6:	2300      	movne	r3, #0
 800b1e8:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800b1ec:	d0d0      	beq.n	800b190 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b1ee:	782b      	ldrb	r3, [r5, #0]
 800b1f0:	2b2f      	cmp	r3, #47	@ 0x2f
 800b1f2:	d109      	bne.n	800b208 <HttpDeamonHandleRequest::HandlePost(bool)+0xf8>
 800b1f4:	4a3b      	ldr	r2, [pc, #236]	@ (800b2e4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d4>)
 800b1f6:	e001      	b.n	800b1fc <HttpDeamonHandleRequest::HandlePost(bool)+0xec>
 800b1f8:	2b00      	cmp	r3, #0
 800b1fa:	d0c9      	beq.n	800b190 <HttpDeamonHandleRequest::HandlePost(bool)+0x80>
 800b1fc:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800b200:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b204:	428b      	cmp	r3, r1
 800b206:	d0f7      	beq.n	800b1f8 <HttpDeamonHandleRequest::HandlePost(bool)+0xe8>
 800b208:	f44f 70ca 	mov.w	r0, #404	@ 0x194
 800b20c:	e7a9      	b.n	800b162 <HttpDeamonHandleRequest::HandlePost(bool)+0x52>
 800b20e:	4936      	ldr	r1, [pc, #216]	@ (800b2e8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1d8>)
 800b210:	69e0      	ldr	r0, [r4, #28]
 800b212:	f10d 0207 	add.w	r2, sp, #7
 800b216:	f00b fe8c 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b21a:	b180      	cbz	r0, 800b23e <HttpDeamonHandleRequest::HandlePost(bool)+0x12e>
 800b21c:	4933      	ldr	r1, [pc, #204]	@ (800b2ec <HttpDeamonHandleRequest::HandlePost(bool)+0x1dc>)
 800b21e:	69e0      	ldr	r0, [r4, #28]
 800b220:	f10d 0207 	add.w	r2, sp, #7
 800b224:	f00b fe85 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b228:	bb18      	cbnz	r0, 800b272 <HttpDeamonHandleRequest::HandlePost(bool)+0x162>
 800b22a:	4a31      	ldr	r2, [pc, #196]	@ (800b2f0 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e0>)
 800b22c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b230:	6810      	ldr	r0, [r2, #0]
 800b232:	2b00      	cmp	r3, #0
 800b234:	d041      	beq.n	800b2ba <HttpDeamonHandleRequest::HandlePost(bool)+0x1aa>
 800b236:	2104      	movs	r1, #4
 800b238:	f00c fa5c 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b23c:	e787      	b.n	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b23e:	4b2d      	ldr	r3, [pc, #180]	@ (800b2f4 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e4>)
 800b240:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800b244:	681d      	ldr	r5, [r3, #0]
 800b246:	69a8      	ldr	r0, [r5, #24]
 800b248:	fab6 f186 	clz	r1, r6
 800b24c:	0949      	lsrs	r1, r1, #5
 800b24e:	2800      	cmp	r0, #0
 800b250:	f43f af7d 	beq.w	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b254:	6803      	ldr	r3, [r0, #0]
 800b256:	4a28      	ldr	r2, [pc, #160]	@ (800b2f8 <HttpDeamonHandleRequest::HandlePost(bool)+0x1e8>)
 800b258:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b25a:	7569      	strb	r1, [r5, #21]
 800b25c:	4293      	cmp	r3, r2
 800b25e:	d106      	bne.n	800b26e <HttpDeamonHandleRequest::HandlePost(bool)+0x15e>
 800b260:	2e00      	cmp	r6, #0
 800b262:	f43f af74 	beq.w	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b266:	4b25      	ldr	r3, [pc, #148]	@ (800b2fc <HttpDeamonHandleRequest::HandlePost(bool)+0x1ec>)
 800b268:	681b      	ldr	r3, [r3, #0]
 800b26a:	606b      	str	r3, [r5, #4]
 800b26c:	e76f      	b.n	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b26e:	4798      	blx	r3
 800b270:	e7f6      	b.n	800b260 <HttpDeamonHandleRequest::HandlePost(bool)+0x150>
 800b272:	69e0      	ldr	r0, [r4, #28]
 800b274:	4a22      	ldr	r2, [pc, #136]	@ (800b300 <HttpDeamonHandleRequest::HandlePost(bool)+0x1f0>)
 800b276:	1e43      	subs	r3, r0, #1
 800b278:	f100 0c04 	add.w	ip, r0, #4
 800b27c:	e001      	b.n	800b282 <HttpDeamonHandleRequest::HandlePost(bool)+0x172>
 800b27e:	4563      	cmp	r3, ip
 800b280:	d01d      	beq.n	800b2be <HttpDeamonHandleRequest::HandlePost(bool)+0x1ae>
 800b282:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800b286:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b28a:	428e      	cmp	r6, r1
 800b28c:	d0f7      	beq.n	800b27e <HttpDeamonHandleRequest::HandlePost(bool)+0x16e>
 800b28e:	491d      	ldr	r1, [pc, #116]	@ (800b304 <HttpDeamonHandleRequest::HandlePost(bool)+0x1f4>)
 800b290:	f10d 0207 	add.w	r2, sp, #7
 800b294:	f00b fe4d 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b298:	2800      	cmp	r0, #0
 800b29a:	d19c      	bne.n	800b1d6 <HttpDeamonHandleRequest::HandlePost(bool)+0xc6>
 800b29c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b2a0:	4b19      	ldr	r3, [pc, #100]	@ (800b308 <HttpDeamonHandleRequest::HandlePost(bool)+0x1f8>)
 800b2a2:	f1a1 0101 	sub.w	r1, r1, #1
 800b2a6:	fab1 f181 	clz	r1, r1
 800b2aa:	6818      	ldr	r0, [r3, #0]
 800b2ac:	0949      	lsrs	r1, r1, #5
 800b2ae:	f003 fdb0 	bl	800ee12 <ArtNetNode::SetRdm(bool)>
 800b2b2:	e74c      	b.n	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b2b4:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800b2b8:	e799      	b.n	800b1ee <HttpDeamonHandleRequest::HandlePost(bool)+0xde>
 800b2ba:	2102      	movs	r1, #2
 800b2bc:	e7bc      	b.n	800b238 <HttpDeamonHandleRequest::HandlePost(bool)+0x128>
 800b2be:	4629      	mov	r1, r5
 800b2c0:	f00c fac0 	bl	8017844 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>
 800b2c4:	e743      	b.n	800b14e <HttpDeamonHandleRequest::HandlePost(bool)+0x3e>
 800b2c6:	f7ff fb69 	bl	800a99c <RemoteConfig::HandleReboot()>
 800b2ca:	bf00      	nop
 800b2cc:	20002a15 	andcs	r2, r0, r5, lsl sl
 800b2d0:	20000cbc 			@ <UNDEFINED> instruction: 0x20000cbc
 800b2d4:	0801bd78 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 800b2d8:	20000cc0 	andcs	r0, r0, r0, asr #25
 800b2dc:	0801bd38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, ip, sp, pc}
 800b2e0:	0801bd50 	stmdaeq	r1, {r4, r6, r8, sl, fp, ip, sp, pc}
 800b2e4:	0801bd48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, sp, pc}
 800b2e8:	0801bd58 	stmdaeq	r1, {r3, r4, r6, r8, sl, fp, ip, sp, pc}
 800b2ec:	0801bd60 	stmdaeq	r1, {r5, r6, r8, sl, fp, ip, sp, pc}
 800b2f0:	20002b04 	andcs	r2, r0, r4, lsl #22
 800b2f4:	20002a18 	andcs	r2, r0, r8, lsl sl
 800b2f8:	0800ab25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, sp, pc}
 800b2fc:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 800b300:	0801bd6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, fp, ip, sp, pc}
 800b304:	0801bd74 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, fp, ip, sp, pc}
 800b308:	20001260 	andcs	r1, r0, r0, ror #4

0800b30c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)>:
 800b30c:	b570      	push	{r4, r5, r6, lr}
 800b30e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b310:	6141      	str	r1, [r0, #20]
 800b312:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800b316:	b084      	sub	sp, #16
 800b318:	4604      	mov	r4, r0
 800b31a:	6242      	str	r2, [r0, #36]	@ 0x24
 800b31c:	d05f      	beq.n	800b3de <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xd2>
 800b31e:	2bc8      	cmp	r3, #200	@ 0xc8
 800b320:	d055      	beq.n	800b3ce <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xc2>
 800b322:	f5b3 7fcf 	cmp.w	r3, #414	@ 0x19e
 800b326:	dc10      	bgt.n	800b34a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x3e>
 800b328:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800b32c:	db1c      	blt.n	800b368 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b32e:	f5a3 72c8 	sub.w	r2, r3, #400	@ 0x190
 800b332:	2a0e      	cmp	r2, #14
 800b334:	d818      	bhi.n	800b368 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5c>
 800b336:	e8df f002 	tbb	[pc, r2]
 800b33a:	17171772 			@ <UNDEFINED> instruction: 0x17171772
 800b33e:	17171770 			@ <UNDEFINED> instruction: 0x17171770
 800b342:	17171717 			@ <UNDEFINED> instruction: 0x17171717
 800b346:	00606217 	rsbeq	r6, r0, r7, lsl r2
 800b34a:	f240 12f5 	movw	r2, #501	@ 0x1f5
 800b34e:	4293      	cmp	r3, r2
 800b350:	d057      	beq.n	800b402 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xf6>
 800b352:	f240 12f9 	movw	r2, #505	@ 0x1f9
 800b356:	4293      	cmp	r3, r2
 800b358:	d04d      	beq.n	800b3f6 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xea>
 800b35a:	4e3a      	ldr	r6, [pc, #232]	@ (800b444 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b35c:	4a3a      	ldr	r2, [pc, #232]	@ (800b448 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x13c>)
 800b35e:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b362:	bf08      	it	eq
 800b364:	4616      	moveq	r6, r2
 800b366:	e000      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b368:	4e36      	ldr	r6, [pc, #216]	@ (800b444 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x138>)
 800b36a:	4838      	ldr	r0, [pc, #224]	@ (800b44c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x140>)
 800b36c:	6220      	str	r0, [r4, #32]
 800b36e:	2200      	movs	r2, #0
 800b370:	6322      	str	r2, [r4, #48]	@ 0x30
 800b372:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b376:	e9cd 6600 	strd	r6, r6, [sp]
 800b37a:	4a35      	ldr	r2, [pc, #212]	@ (800b450 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x144>)
 800b37c:	f00e fed4 	bl	801a128 <snprintf>
 800b380:	e9d4 5309 	ldrd	r5, r3, [r4, #36]	@ 0x24
 800b384:	60a0      	str	r0, [r4, #8]
 800b386:	4933      	ldr	r1, [pc, #204]	@ (800b454 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x148>)
 800b388:	9003      	str	r0, [sp, #12]
 800b38a:	9600      	str	r6, [sp, #0]
 800b38c:	6809      	ldr	r1, [r1, #0]
 800b38e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800b390:	4a31      	ldr	r2, [pc, #196]	@ (800b458 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x14c>)
 800b392:	3116      	adds	r1, #22
 800b394:	9101      	str	r1, [sp, #4]
 800b396:	4931      	ldr	r1, [pc, #196]	@ (800b45c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x150>)
 800b398:	eb01 1146 	add.w	r1, r1, r6, lsl #5
 800b39c:	9102      	str	r1, [sp, #8]
 800b39e:	4628      	mov	r0, r5
 800b3a0:	f240 519f 	movw	r1, #1439	@ 0x59f
 800b3a4:	f00e fec0 	bl	801a128 <snprintf>
 800b3a8:	6823      	ldr	r3, [r4, #0]
 800b3aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800b3ac:	4602      	mov	r2, r0
 800b3ae:	6860      	ldr	r0, [r4, #4]
 800b3b0:	f009 fa76 	bl	80148a0 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b3b4:	6823      	ldr	r3, [r4, #0]
 800b3b6:	68a2      	ldr	r2, [r4, #8]
 800b3b8:	6a21      	ldr	r1, [r4, #32]
 800b3ba:	6860      	ldr	r0, [r4, #4]
 800b3bc:	f009 fa70 	bl	80148a0 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>
 800b3c0:	f44f 7202 	mov.w	r2, #520	@ 0x208
 800b3c4:	2303      	movs	r3, #3
 800b3c6:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 800b3ca:	b004      	add	sp, #16
 800b3cc:	bd70      	pop	{r4, r5, r6, pc}
 800b3ce:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b3d0:	2901      	cmp	r1, #1
 800b3d2:	4615      	mov	r5, r2
 800b3d4:	d017      	beq.n	800b406 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfa>
 800b3d6:	68a0      	ldr	r0, [r4, #8]
 800b3d8:	4e21      	ldr	r6, [pc, #132]	@ (800b460 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b3da:	23c8      	movs	r3, #200	@ 0xc8
 800b3dc:	e7d3      	b.n	800b386 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b3de:	f7ff fc99 	bl	800ad14 <HttpDeamonHandleRequest::ParseRequest()>
 800b3e2:	28c8      	cmp	r0, #200	@ 0xc8
 800b3e4:	4603      	mov	r3, r0
 800b3e6:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b3e8:	d19b      	bne.n	800b322 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b3ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b3ec:	b1cb      	cbz	r3, 800b422 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x116>
 800b3ee:	2b01      	cmp	r3, #1
 800b3f0:	d01b      	beq.n	800b42a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x11e>
 800b3f2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b3f4:	e7ef      	b.n	800b3d6 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xca>
 800b3f6:	4e1b      	ldr	r6, [pc, #108]	@ (800b464 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x158>)
 800b3f8:	e7b7      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b3fa:	4e1b      	ldr	r6, [pc, #108]	@ (800b468 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x15c>)
 800b3fc:	e7b5      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b3fe:	4e1b      	ldr	r6, [pc, #108]	@ (800b46c <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x160>)
 800b400:	e7b3      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b402:	4e1b      	ldr	r6, [pc, #108]	@ (800b470 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x164>)
 800b404:	e7b1      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b406:	f7ff fe83 	bl	800b110 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b40a:	28c8      	cmp	r0, #200	@ 0xc8
 800b40c:	4603      	mov	r3, r0
 800b40e:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b410:	d187      	bne.n	800b322 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b412:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 800b414:	68a0      	ldr	r0, [r4, #8]
 800b416:	4e12      	ldr	r6, [pc, #72]	@ (800b460 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x154>)
 800b418:	e7b5      	b.n	800b386 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x7a>
 800b41a:	4e16      	ldr	r6, [pc, #88]	@ (800b474 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x168>)
 800b41c:	e7a5      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b41e:	4e16      	ldr	r6, [pc, #88]	@ (800b478 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16c>)
 800b420:	e7a3      	b.n	800b36a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x5e>
 800b422:	4620      	mov	r0, r4
 800b424:	f7ff fd02 	bl	800ae2c <HttpDeamonHandleRequest::HandleGet()>
 800b428:	e7ef      	b.n	800b40a <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xfe>
 800b42a:	2100      	movs	r1, #0
 800b42c:	4620      	mov	r0, r4
 800b42e:	f7ff fe6f 	bl	800b110 <HttpDeamonHandleRequest::HandlePost(bool)>
 800b432:	28c8      	cmp	r0, #200	@ 0xc8
 800b434:	4603      	mov	r3, r0
 800b436:	62a0      	str	r0, [r4, #40]	@ 0x28
 800b438:	f47f af73 	bne.w	800b322 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0x16>
 800b43c:	68e3      	ldr	r3, [r4, #12]
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d1d7      	bne.n	800b3f2 <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xe6>
 800b442:	e7c2      	b.n	800b3ca <HttpDeamonHandleRequest::HandleRequest(unsigned long, char*)+0xbe>
 800b444:	0801bde0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, ip, sp, pc}
 800b448:	0801be24 	stmdaeq	r1, {r2, r5, r9, sl, fp, ip, sp, pc}
 800b44c:	20000cc0 	andcs	r0, r0, r0, asr #25
 800b450:	0801be7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 800b454:	20002934 	andcs	r2, r0, r4, lsr r9
 800b458:	0801bed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, ip, sp, pc}
 800b45c:	0801bffc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 800b460:	0801be78 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 800b464:	0801be54 	stmdaeq	r1, {r2, r4, r6, r9, sl, fp, ip, sp, pc}
 800b468:	0801be0c 	stmdaeq	r1, {r2, r3, r9, sl, fp, ip, sp, pc}
 800b46c:	0801bdf0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
 800b470:	0801be3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, ip, sp, pc}
 800b474:	0801be6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, ip, sp, pc}
 800b478:	0801bdd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, ip, sp, pc}

0800b47c <remoteconfig::json_get_list(char*, unsigned long)>:
 800b47c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b480:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800b4dc <remoteconfig::json_get_list(char*, unsigned long)+0x60>
 800b484:	4b12      	ldr	r3, [pc, #72]	@ (800b4d0 <remoteconfig::json_get_list(char*, unsigned long)+0x54>)
 800b486:	b088      	sub	sp, #32
 800b488:	4605      	mov	r5, r0
 800b48a:	f8d8 0000 	ldr.w	r0, [r8]
 800b48e:	681c      	ldr	r4, [r3, #0]
 800b490:	460e      	mov	r6, r1
 800b492:	f7fe fec1 	bl	800a218 <RemoteConfig::GetStringNode() const>
 800b496:	4607      	mov	r7, r0
 800b498:	f8d8 0000 	ldr.w	r0, [r8]
 800b49c:	f7fe fec8 	bl	800a230 <RemoteConfig::GetStringOutput() const>
 800b4a0:	4b0c      	ldr	r3, [pc, #48]	@ (800b4d4 <remoteconfig::json_get_list(char*, unsigned long)+0x58>)
 800b4a2:	7a1a      	ldrb	r2, [r3, #8]
 800b4a4:	9704      	str	r7, [sp, #16]
 800b4a6:	3309      	adds	r3, #9
 800b4a8:	9303      	str	r3, [sp, #12]
 800b4aa:	0e23      	lsrs	r3, r4, #24
 800b4ac:	9302      	str	r3, [sp, #8]
 800b4ae:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800b4b2:	9301      	str	r3, [sp, #4]
 800b4b4:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800b4b8:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800b4bc:	9300      	str	r3, [sp, #0]
 800b4be:	4a06      	ldr	r2, [pc, #24]	@ (800b4d8 <remoteconfig::json_get_list(char*, unsigned long)+0x5c>)
 800b4c0:	b2e3      	uxtb	r3, r4
 800b4c2:	4631      	mov	r1, r6
 800b4c4:	4628      	mov	r0, r5
 800b4c6:	f00e fe2f 	bl	801a128 <snprintf>
 800b4ca:	b008      	add	sp, #32
 800b4cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4d0:	20002954 	andcs	r2, r0, r4, asr r9
 800b4d4:	20000c98 	mulcs	r0, r8, ip
 800b4d8:	0801adc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, sl, fp, sp, pc}
 800b4dc:	20000cbc 			@ <UNDEFINED> instruction: 0x20000cbc

0800b4e0 <remoteconfig::json_get_version(char*, unsigned long)>:
 800b4e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b4e2:	4b0a      	ldr	r3, [pc, #40]	@ (800b50c <remoteconfig::json_get_version(char*, unsigned long)+0x2c>)
 800b4e4:	9305      	str	r3, [sp, #20]
 800b4e6:	2208      	movs	r2, #8
 800b4e8:	9204      	str	r2, [sp, #16]
 800b4ea:	f1a3 020b 	sub.w	r2, r3, #11
 800b4ee:	9203      	str	r2, [sp, #12]
 800b4f0:	220b      	movs	r2, #11
 800b4f2:	9202      	str	r2, [sp, #8]
 800b4f4:	3b0e      	subs	r3, #14
 800b4f6:	4a06      	ldr	r2, [pc, #24]	@ (800b510 <remoteconfig::json_get_version(char*, unsigned long)+0x30>)
 800b4f8:	9201      	str	r2, [sp, #4]
 800b4fa:	9300      	str	r3, [sp, #0]
 800b4fc:	4a05      	ldr	r2, [pc, #20]	@ (800b514 <remoteconfig::json_get_version(char*, unsigned long)+0x34>)
 800b4fe:	2303      	movs	r3, #3
 800b500:	f00e fe12 	bl	801a128 <snprintf>
 800b504:	b007      	add	sp, #28
 800b506:	f85d fb04 	ldr.w	pc, [sp], #4
 800b50a:	bf00      	nop
 800b50c:	20002afa 	strdcs	r2, [r0], -sl
 800b510:	0801ae6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, sp, pc}
 800b514:	0801ae26 	stmdaeq	r1, {r1, r2, r5, r9, sl, fp, sp, pc}

0800b518 <remoteconfig::json_get_uptime(char*, unsigned long)>:
 800b518:	4b02      	ldr	r3, [pc, #8]	@ (800b524 <remoteconfig::json_get_uptime(char*, unsigned long)+0xc>)
 800b51a:	4a03      	ldr	r2, [pc, #12]	@ (800b528 <remoteconfig::json_get_uptime(char*, unsigned long)+0x10>)
 800b51c:	685b      	ldr	r3, [r3, #4]
 800b51e:	f00e be03 	b.w	801a128 <snprintf>
 800b522:	bf00      	nop
 800b524:	2000a3ac 	andcs	sl, r0, ip, lsr #7
 800b528:	0801ae7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, fp, sp, pc}

0800b52c <remoteconfig::json_get_display(char*, unsigned long)>:
 800b52c:	4b03      	ldr	r3, [pc, #12]	@ (800b53c <remoteconfig::json_get_display(char*, unsigned long)+0x10>)
 800b52e:	4a04      	ldr	r2, [pc, #16]	@ (800b540 <remoteconfig::json_get_display(char*, unsigned long)+0x14>)
 800b530:	681b      	ldr	r3, [r3, #0]
 800b532:	7d5b      	ldrb	r3, [r3, #21]
 800b534:	f083 0301 	eor.w	r3, r3, #1
 800b538:	f00e bdf6 	b.w	801a128 <snprintf>
 800b53c:	20002a18 	andcs	r2, r0, r8, lsl sl
 800b540:	0801ae8a 	stmdaeq	r1, {r1, r3, r7, r9, sl, fp, sp, pc}

0800b544 <remoteconfig::json_get_directory(char*, unsigned long)>:
 800b544:	4a01      	ldr	r2, [pc, #4]	@ (800b54c <remoteconfig::json_get_directory(char*, unsigned long)+0x8>)
 800b546:	f00e bdef 	b.w	801a128 <snprintf>
 800b54a:	bf00      	nop
 800b54c:	0801ae99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, sp, pc}

0800b550 <get_file_content(char const*, unsigned long&, http::contentTypes&)>:
 800b550:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b552:	4c0e      	ldr	r4, [pc, #56]	@ (800b58c <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x3c>)
 800b554:	230d      	movs	r3, #13
 800b556:	3b01      	subs	r3, #1
 800b558:	d104      	bne.n	800b564 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x14>
 800b55a:	600b      	str	r3, [r1, #0]
 800b55c:	2105      	movs	r1, #5
 800b55e:	6011      	str	r1, [r2, #0]
 800b560:	4618      	mov	r0, r3
 800b562:	e011      	b.n	800b588 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x38>
 800b564:	6825      	ldr	r5, [r4, #0]
 800b566:	1e47      	subs	r7, r0, #1
 800b568:	3d01      	subs	r5, #1
 800b56a:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800b56e:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800b572:	4566      	cmp	r6, ip
 800b574:	d001      	beq.n	800b57a <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x2a>
 800b576:	3410      	adds	r4, #16
 800b578:	e7ed      	b.n	800b556 <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x6>
 800b57a:	2e00      	cmp	r6, #0
 800b57c:	d1f5      	bne.n	800b56a <get_file_content(char const*, unsigned long&, http::contentTypes&)+0x1a>
 800b57e:	68a3      	ldr	r3, [r4, #8]
 800b580:	600b      	str	r3, [r1, #0]
 800b582:	6860      	ldr	r0, [r4, #4]
 800b584:	68e3      	ldr	r3, [r4, #12]
 800b586:	6013      	str	r3, [r2, #0]
 800b588:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b58a:	bf00      	nop
 800b58c:	0801c0f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, lr, pc}

0800b590 <strncpy.isra.0>:
 800b590:	3901      	subs	r1, #1
 800b592:	b112      	cbz	r2, 800b59a <strncpy.isra.0+0xa>
 800b594:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b598:	b913      	cbnz	r3, 800b5a0 <strncpy.isra.0+0x10>
 800b59a:	4402      	add	r2, r0
 800b59c:	2300      	movs	r3, #0
 800b59e:	e005      	b.n	800b5ac <strncpy.isra.0+0x1c>
 800b5a0:	f800 3b01 	strb.w	r3, [r0], #1
 800b5a4:	3a01      	subs	r2, #1
 800b5a6:	e7f4      	b.n	800b592 <strncpy.isra.0+0x2>
 800b5a8:	f800 3b01 	strb.w	r3, [r0], #1
 800b5ac:	4290      	cmp	r0, r2
 800b5ae:	d1fb      	bne.n	800b5a8 <strncpy.isra.0+0x18>
 800b5b0:	4770      	bx	lr
	...

0800b5b4 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)>:
 800b5b4:	b570      	push	{r4, r5, r6, lr}
 800b5b6:	4b17      	ldr	r3, [pc, #92]	@ (800b614 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)+0x60>)
 800b5b8:	681c      	ldr	r4, [r3, #0]
 800b5ba:	4284      	cmp	r4, r0
 800b5bc:	b086      	sub	sp, #24
 800b5be:	460d      	mov	r5, r1
 800b5c0:	d826      	bhi.n	800b610 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)+0x5c>
 800b5c2:	1b04      	subs	r4, r0, r4
 800b5c4:	2c03      	cmp	r4, #3
 800b5c6:	d823      	bhi.n	800b610 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)+0x5c>
 800b5c8:	2311      	movs	r3, #17
 800b5ca:	2200      	movs	r2, #0
 800b5cc:	e9cd 3200 	strd	r3, r2, [sp]
 800b5d0:	4e11      	ldr	r6, [pc, #68]	@ (800b618 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)+0x64>)
 800b5d2:	2301      	movs	r3, #1
 800b5d4:	6830      	ldr	r0, [r6, #0]
 800b5d6:	f10d 0217 	add.w	r2, sp, #23
 800b5da:	2119      	movs	r1, #25
 800b5dc:	f00a ff1e 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800b5e0:	2301      	movs	r3, #1
 800b5e2:	f89d 2017 	ldrb.w	r2, [sp, #23]
 800b5e6:	40a3      	lsls	r3, r4
 800b5e8:	b2db      	uxtb	r3, r3
 800b5ea:	2d01      	cmp	r5, #1
 800b5ec:	bf0c      	ite	eq
 800b5ee:	4313      	orreq	r3, r2
 800b5f0:	ea22 0303 	bicne.w	r3, r2, r3
 800b5f4:	f88d 3017 	strb.w	r3, [sp, #23]
 800b5f8:	2300      	movs	r3, #0
 800b5fa:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b5fe:	2301      	movs	r3, #1
 800b600:	9300      	str	r3, [sp, #0]
 800b602:	6830      	ldr	r0, [r6, #0]
 800b604:	f10d 0317 	add.w	r3, sp, #23
 800b608:	2211      	movs	r2, #17
 800b60a:	2119      	movs	r1, #25
 800b60c:	f00a fee0 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b610:	b006      	add	sp, #24
 800b612:	bd70      	pop	{r4, r5, r6, pc}
 800b614:	20000088 	andcs	r0, r0, r8, lsl #1
 800b618:	20002a00 	andcs	r2, r0, r0, lsl #20

0800b61c <ArtNetNode::Stop()>:
 800b61c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b620:	4604      	mov	r4, r0
 800b622:	f003 fe0d 	bl	800f240 <E131Bridge::Stop()>
 800b626:	2500      	movs	r5, #0
 800b628:	4f20      	ldr	r7, [pc, #128]	@ (800b6ac <ArtNetNode::Stop()+0x90>)
 800b62a:	f604 0978 	addw	r9, r4, #2168	@ 0x878
 800b62e:	46a8      	mov	r8, r5
 800b630:	f604 1a47 	addw	sl, r4, #2375	@ 0x947
 800b634:	426e      	negs	r6, r5
 800b636:	f006 0328 	and.w	r3, r6, #40	@ 0x28
 800b63a:	f859 3003 	ldr.w	r3, [r9, r3]
 800b63e:	b963      	cbnz	r3, 800b65a <ArtNetNode::Stop()+0x3e>
 800b640:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800b644:	b118      	cbz	r0, 800b64e <ArtNetNode::Stop()+0x32>
 800b646:	6803      	ldr	r3, [r0, #0]
 800b648:	4629      	mov	r1, r5
 800b64a:	68db      	ldr	r3, [r3, #12]
 800b64c:	4798      	blx	r3
 800b64e:	f006 0624 	and.w	r6, r6, #36	@ 0x24
 800b652:	f8c7 8600 	str.w	r8, [r7, #1536]	@ 0x600
 800b656:	f80a 8006 	strb.w	r8, [sl, r6]
 800b65a:	f207 6704 	addw	r7, r7, #1540	@ 0x604
 800b65e:	b31d      	cbz	r5, 800b6a8 <ArtNetNode::Stop()+0x8c>
 800b660:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800b664:	b92b      	cbnz	r3, 800b672 <ArtNetNode::Stop()+0x56>
 800b666:	4812      	ldr	r0, [pc, #72]	@ (800b6b0 <ArtNetNode::Stop()+0x94>)
 800b668:	2201      	movs	r2, #1
 800b66a:	6800      	ldr	r0, [r0, #0]
 800b66c:	4619      	mov	r1, r3
 800b66e:	f006 fc01 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b672:	f8d4 389c 	ldr.w	r3, [r4, #2204]	@ 0x89c
 800b676:	b92b      	cbnz	r3, 800b684 <ArtNetNode::Stop()+0x68>
 800b678:	480d      	ldr	r0, [pc, #52]	@ (800b6b0 <ArtNetNode::Stop()+0x94>)
 800b67a:	2201      	movs	r2, #1
 800b67c:	6800      	ldr	r0, [r0, #0]
 800b67e:	4611      	mov	r1, r2
 800b680:	f006 fbf8 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800b684:	4b0b      	ldr	r3, [pc, #44]	@ (800b6b4 <ArtNetNode::Stop()+0x98>)
 800b686:	2100      	movs	r1, #0
 800b688:	6818      	ldr	r0, [r3, #0]
 800b68a:	f00c f833 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800b68e:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800b692:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800b696:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800b69a:	f884 399f 	strb.w	r3, [r4, #2463]	@ 0x99f
 800b69e:	2301      	movs	r3, #1
 800b6a0:	f884 390d 	strb.w	r3, [r4, #2317]	@ 0x90d
 800b6a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b6a8:	2501      	movs	r5, #1
 800b6aa:	e7c3      	b.n	800b634 <ArtNetNode::Stop()+0x18>
 800b6ac:	2000008c 	andcs	r0, r0, ip, lsl #1
 800b6b0:	20001c4c 	andcs	r1, r0, ip, asr #24
 800b6b4:	20002b04 	andcs	r2, r0, r4, lsl #22

0800b6b8 <ArtNetNode::SetShortName(unsigned long, char const*)>:
 800b6b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b6ba:	2528      	movs	r5, #40	@ 0x28
 800b6bc:	fb05 0501 	mla	r5, r5, r1, r0
 800b6c0:	460c      	mov	r4, r1
 800b6c2:	4606      	mov	r6, r0
 800b6c4:	f505 6508 	add.w	r5, r5, #2176	@ 0x880
 800b6c8:	4611      	mov	r1, r2
 800b6ca:	bb3a      	cbnz	r2, 800b71c <ArtNetNode::SetShortName(unsigned long, char const*)+0x64>
 800b6cc:	4a16      	ldr	r2, [pc, #88]	@ (800b728 <ArtNetNode::SetShortName(unsigned long, char const*)+0x70>)
 800b6ce:	1c63      	adds	r3, r4, #1
 800b6d0:	2111      	movs	r1, #17
 800b6d2:	4628      	mov	r0, r5
 800b6d4:	f00e fd28 	bl	801a128 <snprintf>
 800b6d8:	2328      	movs	r3, #40	@ 0x28
 800b6da:	fb03 6304 	mla	r3, r3, r4, r6
 800b6de:	2000      	movs	r0, #0
 800b6e0:	f883 0891 	strb.w	r0, [r3, #2193]	@ 0x891
 800b6e4:	f896 390d 	ldrb.w	r3, [r6, #2317]	@ 0x90d
 800b6e8:	2b02      	cmp	r3, #2
 800b6ea:	d115      	bne.n	800b718 <ArtNetNode::SetShortName(unsigned long, char const*)+0x60>
 800b6ec:	4b0f      	ldr	r3, [pc, #60]	@ (800b72c <ArtNetNode::SetShortName(unsigned long, char const*)+0x74>)
 800b6ee:	681b      	ldr	r3, [r3, #0]
 800b6f0:	429c      	cmp	r4, r3
 800b6f2:	d311      	bcc.n	800b718 <ArtNetNode::SetShortName(unsigned long, char const*)+0x60>
 800b6f4:	1ae4      	subs	r4, r4, r3
 800b6f6:	2c03      	cmp	r4, #3
 800b6f8:	d80e      	bhi.n	800b718 <ArtNetNode::SetShortName(unsigned long, char const*)+0x60>
 800b6fa:	2380      	movs	r3, #128	@ 0x80
 800b6fc:	2112      	movs	r1, #18
 800b6fe:	40a3      	lsls	r3, r4
 800b700:	e9cd 1300 	strd	r1, r3, [sp]
 800b704:	9002      	str	r0, [sp, #8]
 800b706:	480a      	ldr	r0, [pc, #40]	@ (800b730 <ArtNetNode::SetShortName(unsigned long, char const*)+0x78>)
 800b708:	fb01 f204 	mul.w	r2, r1, r4
 800b70c:	6800      	ldr	r0, [r0, #0]
 800b70e:	462b      	mov	r3, r5
 800b710:	3253      	adds	r2, #83	@ 0x53
 800b712:	2119      	movs	r1, #25
 800b714:	f00a fe5c 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b718:	b004      	add	sp, #16
 800b71a:	bd70      	pop	{r4, r5, r6, pc}
 800b71c:	2211      	movs	r2, #17
 800b71e:	4628      	mov	r0, r5
 800b720:	f7ff ff36 	bl	800b590 <strncpy.isra.0>
 800b724:	e7d8      	b.n	800b6d8 <ArtNetNode::SetShortName(unsigned long, char const*)+0x20>
 800b726:	bf00      	nop
 800b728:	0801afb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 800b72c:	20000088 	andcs	r0, r0, r8, lsl #1
 800b730:	20002a00 	andcs	r2, r0, r0, lsl #20

0800b734 <ArtNetNode::GetLongNameDefault(char*)>:
 800b734:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b736:	4b07      	ldr	r3, [pc, #28]	@ (800b754 <ArtNetNode::GetLongNameDefault(char*)+0x20>)
 800b738:	9302      	str	r3, [sp, #8]
 800b73a:	2304      	movs	r3, #4
 800b73c:	9301      	str	r3, [sp, #4]
 800b73e:	4b06      	ldr	r3, [pc, #24]	@ (800b758 <ArtNetNode::GetLongNameDefault(char*)+0x24>)
 800b740:	9300      	str	r3, [sp, #0]
 800b742:	4a06      	ldr	r2, [pc, #24]	@ (800b75c <ArtNetNode::GetLongNameDefault(char*)+0x28>)
 800b744:	4b06      	ldr	r3, [pc, #24]	@ (800b760 <ArtNetNode::GetLongNameDefault(char*)+0x2c>)
 800b746:	4608      	mov	r0, r1
 800b748:	213f      	movs	r1, #63	@ 0x3f
 800b74a:	f00e fced 	bl	801a128 <snprintf>
 800b74e:	b005      	add	sp, #20
 800b750:	f85d fb04 	ldr.w	pc, [sp], #4
 800b754:	0801afcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, sp, pc}
 800b758:	0801e6b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr, pc}
 800b75c:	0801afbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 800b760:	0801ae6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, sp, pc}

0800b764 <ArtNetNode::SetLongName(char const*)>:
 800b764:	b530      	push	{r4, r5, lr}
 800b766:	4604      	mov	r4, r0
 800b768:	b085      	sub	sp, #20
 800b76a:	f600 15b4 	addw	r5, r0, #2484	@ 0x9b4
 800b76e:	b9d1      	cbnz	r1, 800b7a6 <ArtNetNode::SetLongName(char const*)+0x42>
 800b770:	4629      	mov	r1, r5
 800b772:	f7ff ffdf 	bl	800b734 <ArtNetNode::GetLongNameDefault(char*)>
 800b776:	f894 290d 	ldrb.w	r2, [r4, #2317]	@ 0x90d
 800b77a:	2300      	movs	r3, #0
 800b77c:	2a02      	cmp	r2, #2
 800b77e:	f884 39f3 	strb.w	r3, [r4, #2547]	@ 0x9f3
 800b782:	d115      	bne.n	800b7b0 <ArtNetNode::SetLongName(char const*)+0x4c>
 800b784:	9302      	str	r3, [sp, #8]
 800b786:	2340      	movs	r3, #64	@ 0x40
 800b788:	e9cd 3300 	strd	r3, r3, [sp]
 800b78c:	4809      	ldr	r0, [pc, #36]	@ (800b7b4 <ArtNetNode::SetLongName(char const*)+0x50>)
 800b78e:	462b      	mov	r3, r5
 800b790:	6800      	ldr	r0, [r0, #0]
 800b792:	2213      	movs	r2, #19
 800b794:	2119      	movs	r1, #25
 800b796:	f00a fe1b 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800b79a:	4628      	mov	r0, r5
 800b79c:	b005      	add	sp, #20
 800b79e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b7a2:	f00a bbee 	b.w	8015f82 <artnet::display_longname(char const*)>
 800b7a6:	223f      	movs	r2, #63	@ 0x3f
 800b7a8:	4628      	mov	r0, r5
 800b7aa:	f7ff fef1 	bl	800b590 <strncpy.isra.0>
 800b7ae:	e7e2      	b.n	800b776 <ArtNetNode::SetLongName(char const*)+0x12>
 800b7b0:	b005      	add	sp, #20
 800b7b2:	bd30      	pop	{r4, r5, pc}
 800b7b4:	20002a00 	andcs	r2, r0, r0, lsl #20

0800b7b8 <ArtNetNode::ArtNetNode()>:
 800b7b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7bc:	4604      	mov	r4, r0
 800b7be:	2500      	movs	r5, #0
 800b7c0:	f003 fcb6 	bl	800f130 <E131Bridge::E131Bridge()>
 800b7c4:	f504 5680 	add.w	r6, r4, #4096	@ 0x1000
 800b7c8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800b7cc:	f8c4 3848 	str.w	r3, [r4, #2120]	@ 0x848
 800b7d0:	f8c4 584c 	str.w	r5, [r4, #2124]	@ 0x84c
 800b7d4:	f8c4 5854 	str.w	r5, [r4, #2132]	@ 0x854
 800b7d8:	f8c4 5858 	str.w	r5, [r4, #2136]	@ 0x858
 800b7dc:	f8c4 585c 	str.w	r5, [r4, #2140]	@ 0x85c
 800b7e0:	f8c4 5860 	str.w	r5, [r4, #2144]	@ 0x860
 800b7e4:	f8c4 5864 	str.w	r5, [r4, #2148]	@ 0x864
 800b7e8:	f8c4 5868 	str.w	r5, [r4, #2152]	@ 0x868
 800b7ec:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800b7f0:	e9c6 3557 	strd	r3, r5, [r6, #348]	@ 0x15c
 800b7f4:	f009 f8ae 	bl	8014954 <net::udp_begin(unsigned short)>
 800b7f8:	4b63      	ldr	r3, [pc, #396]	@ (800b988 <ArtNetNode::ArtNetNode()+0x1d0>)
 800b7fa:	f8c6 015c 	str.w	r0, [r6, #348]	@ 0x15c
 800b7fe:	f604 1788 	addw	r7, r4, #2440	@ 0x988
 800b802:	601c      	str	r4, [r3, #0]
 800b804:	f604 2677 	addw	r6, r4, #2679	@ 0xa77
 800b808:	463b      	mov	r3, r7
 800b80a:	f803 5b01 	strb.w	r5, [r3], #1
 800b80e:	429e      	cmp	r6, r3
 800b810:	d1fb      	bne.n	800b80a <ArtNetNode::ArtNetNode()+0x52>
 800b812:	4a5e      	ldr	r2, [pc, #376]	@ (800b98c <ArtNetNode::ArtNetNode()+0x1d4>)
 800b814:	f504 6119 	add.w	r1, r4, #2448	@ 0x990
 800b818:	463b      	mov	r3, r7
 800b81a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b81e:	f803 0b01 	strb.w	r0, [r3], #1
 800b822:	428b      	cmp	r3, r1
 800b824:	d1f9      	bne.n	800b81a <ArtNetNode::ArtNetNode()+0x62>
 800b826:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 800b82a:	f8a4 3990 	strh.w	r3, [r4, #2448]	@ 0x990
 800b82e:	f641 1336 	movw	r3, #6454	@ 0x1936
 800b832:	f8a4 3996 	strh.w	r3, [r4, #2454]	@ 0x996
 800b836:	4b56      	ldr	r3, [pc, #344]	@ (800b990 <ArtNetNode::ArtNetNode()+0x1d8>)
 800b838:	781a      	ldrb	r2, [r3, #0]
 800b83a:	f884 2998 	strb.w	r2, [r4, #2456]	@ 0x998
 800b83e:	785b      	ldrb	r3, [r3, #1]
 800b840:	f884 3999 	strb.w	r3, [r4, #2457]	@ 0x999
 800b844:	4b53      	ldr	r3, [pc, #332]	@ (800b994 <ArtNetNode::ArtNetNode()+0x1dc>)
 800b846:	781a      	ldrb	r2, [r3, #0]
 800b848:	f884 299c 	strb.w	r2, [r4, #2460]	@ 0x99c
 800b84c:	785b      	ldrb	r3, [r3, #1]
 800b84e:	f884 399d 	strb.w	r3, [r4, #2461]	@ 0x99d
 800b852:	4b51      	ldr	r3, [pc, #324]	@ (800b998 <ArtNetNode::ArtNetNode()+0x1e0>)
 800b854:	785a      	ldrb	r2, [r3, #1]
 800b856:	f884 29a0 	strb.w	r2, [r4, #2464]	@ 0x9a0
 800b85a:	781b      	ldrb	r3, [r3, #0]
 800b85c:	4a4f      	ldr	r2, [pc, #316]	@ (800b99c <ArtNetNode::ArtNetNode()+0x1e4>)
 800b85e:	f884 39a1 	strb.w	r3, [r4, #2465]	@ 0x9a1
 800b862:	f604 2157 	addw	r1, r4, #2647	@ 0xa57
 800b866:	f604 2351 	addw	r3, r4, #2641	@ 0xa51
 800b86a:	f812 0b01 	ldrb.w	r0, [r2], #1
 800b86e:	f803 0b01 	strb.w	r0, [r3], #1
 800b872:	428b      	cmp	r3, r1
 800b874:	d1f9      	bne.n	800b86a <ArtNetNode::ArtNetNode()+0xb2>
 800b876:	2364      	movs	r3, #100	@ 0x64
 800b878:	f604 08c4 	addw	r8, r4, #2244	@ 0x8c4
 800b87c:	f884 3a4a 	strb.w	r3, [r4, #2634]	@ 0xa4a
 800b880:	f604 1528 	addw	r5, r4, #2344	@ 0x928
 800b884:	4643      	mov	r3, r8
 800b886:	2200      	movs	r2, #0
 800b888:	f803 2b01 	strb.w	r2, [r3], #1
 800b88c:	429d      	cmp	r5, r3
 800b88e:	d1fb      	bne.n	800b888 <ArtNetNode::ArtNetNode()+0xd0>
 800b890:	f240 1301 	movw	r3, #257	@ 0x101
 800b894:	f8a4 390c 	strh.w	r3, [r4, #2316]	@ 0x90c
 800b898:	f8b4 3a55 	ldrh.w	r3, [r4, #2645]	@ 0xa55
 800b89c:	ba5b      	rev16	r3, r3
 800b89e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800b8a2:	b29b      	uxth	r3, r3
 800b8a4:	fbb3 f1f2 	udiv	r1, r3, r2
 800b8a8:	fb02 3311 	mls	r3, r2, r1, r3
 800b8ac:	f8c4 38d0 	str.w	r3, [r4, #2256]	@ 0x8d0
 800b8b0:	2100      	movs	r1, #0
 800b8b2:	4620      	mov	r0, r4
 800b8b4:	f7ff ff56 	bl	800b764 <ArtNetNode::SetLongName(char const*)>
 800b8b8:	f604 036c 	addw	r3, r4, #2156	@ 0x86c
 800b8bc:	2200      	movs	r2, #0
 800b8be:	f803 2b01 	strb.w	r2, [r3], #1
 800b8c2:	4598      	cmp	r8, r3
 800b8c4:	d1fb      	bne.n	800b8be <ArtNetNode::ArtNetNode()+0x106>
 800b8c6:	f8df 80d8 	ldr.w	r8, [pc, #216]	@ 800b9a0 <ArtNetNode::ArtNetNode()+0x1e8>
 800b8ca:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b8ce:	f8c4 38bc 	str.w	r3, [r4, #2236]	@ 0x8bc
 800b8d2:	2200      	movs	r2, #0
 800b8d4:	2302      	movs	r3, #2
 800b8d6:	f8c4 3874 	str.w	r3, [r4, #2164]	@ 0x874
 800b8da:	f8c4 389c 	str.w	r3, [r4, #2204]	@ 0x89c
 800b8de:	4611      	mov	r1, r2
 800b8e0:	4620      	mov	r0, r4
 800b8e2:	f7ff fee9 	bl	800b6b8 <ArtNetNode::SetShortName(unsigned long, char const*)>
 800b8e6:	2200      	movs	r2, #0
 800b8e8:	4620      	mov	r0, r4
 800b8ea:	2101      	movs	r1, #1
 800b8ec:	f7ff fee4 	bl	800b6b8 <ArtNetNode::SetShortName(unsigned long, char const*)>
 800b8f0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 800b8f4:	f604 124c 	addw	r2, r4, #2380	@ 0x94c
 800b8f8:	2300      	movs	r3, #0
 800b8fa:	f805 3b01 	strb.w	r3, [r5], #1
 800b8fe:	4295      	cmp	r5, r2
 800b900:	d1fb      	bne.n	800b8fa <ArtNetNode::ArtNetNode()+0x142>
 800b902:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b906:	f8a4 3930 	strh.w	r3, [r4, #2352]	@ 0x930
 800b90a:	f8a4 393c 	strh.w	r3, [r4, #2364]	@ 0x93c
 800b90e:	f504 6517 	add.w	r5, r4, #2416	@ 0x970
 800b912:	23a0      	movs	r3, #160	@ 0xa0
 800b914:	f884 3945 	strb.w	r3, [r4, #2373]	@ 0x945
 800b918:	4629      	mov	r1, r5
 800b91a:	f604 137c 	addw	r3, r4, #2428	@ 0x97c
 800b91e:	f04f 0c00 	mov.w	ip, #0
 800b922:	f801 cb01 	strb.w	ip, [r1], #1
 800b926:	428b      	cmp	r3, r1
 800b928:	d1fb      	bne.n	800b922 <ArtNetNode::ArtNetNode()+0x16a>
 800b92a:	f8c4 0970 	str.w	r0, [r4, #2416]	@ 0x970
 800b92e:	2100      	movs	r1, #0
 800b930:	f802 1b01 	strb.w	r1, [r2], #1
 800b934:	4295      	cmp	r5, r2
 800b936:	d1fb      	bne.n	800b930 <ArtNetNode::ArtNetNode()+0x178>
 800b938:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b93c:	f8a4 2954 	strh.w	r2, [r4, #2388]	@ 0x954
 800b940:	f8a4 2960 	strh.w	r2, [r4, #2400]	@ 0x960
 800b944:	22a0      	movs	r2, #160	@ 0xa0
 800b946:	f884 2969 	strb.w	r2, [r4, #2409]	@ 0x969
 800b94a:	2200      	movs	r2, #0
 800b94c:	f803 2b01 	strb.w	r2, [r3], #1
 800b950:	429f      	cmp	r7, r3
 800b952:	d1fb      	bne.n	800b94c <ArtNetNode::ArtNetNode()+0x194>
 800b954:	4b0d      	ldr	r3, [pc, #52]	@ (800b98c <ArtNetNode::ArtNetNode()+0x1d4>)
 800b956:	f8c4 097c 	str.w	r0, [r4, #2428]	@ 0x97c
 800b95a:	f604 227f 	addw	r2, r4, #2687	@ 0xa7f
 800b95e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b962:	f806 1b01 	strb.w	r1, [r6], #1
 800b966:	42b2      	cmp	r2, r6
 800b968:	d1f9      	bne.n	800b95e <ArtNetNode::ArtNetNode()+0x1a6>
 800b96a:	2300      	movs	r3, #0
 800b96c:	f884 3a7f 	strb.w	r3, [r4, #2687]	@ 0xa7f
 800b970:	f884 3a81 	strb.w	r3, [r4, #2689]	@ 0xa81
 800b974:	230e      	movs	r3, #14
 800b976:	2250      	movs	r2, #80	@ 0x50
 800b978:	f884 3a82 	strb.w	r3, [r4, #2690]	@ 0xa82
 800b97c:	f884 2a80 	strb.w	r2, [r4, #2688]	@ 0xa80
 800b980:	4620      	mov	r0, r4
 800b982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b986:	bf00      	nop
 800b988:	20001260 	andcs	r1, r0, r0, ror #4
 800b98c:	0801e6b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr, pc}
 800b990:	0801e7e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 800b994:	0801e7e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 800b998:	0801e7e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 800b99c:	20002968 	andcs	r2, r0, r8, ror #18
 800b9a0:	20002954 	andcs	r2, r0, r4, asr r9

0800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>:
 800b9a4:	2324      	movs	r3, #36	@ 0x24
 800b9a6:	fb03 0001 	mla	r0, r3, r1, r0
 800b9aa:	f890 0945 	ldrb.w	r0, [r0, #2373]	@ 0x945
 800b9ae:	f3c0 1080 	ubfx	r0, r0, #6, #1
 800b9b2:	4770      	bx	lr

0800b9b4 <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)>:
 800b9b4:	b570      	push	{r4, r5, r6, lr}
 800b9b6:	4605      	mov	r5, r0
 800b9b8:	f7ff fff4 	bl	800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>
 800b9bc:	4290      	cmp	r0, r2
 800b9be:	460e      	mov	r6, r1
 800b9c0:	4614      	mov	r4, r2
 800b9c2:	d103      	bne.n	800b9cc <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x18>
 800b9c4:	f895 390d 	ldrb.w	r3, [r5, #2317]	@ 0x90d
 800b9c8:	2b02      	cmp	r3, #2
 800b9ca:	d02e      	beq.n	800ba2a <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x76>
 800b9cc:	f8d5 0860 	ldr.w	r0, [r5, #2144]	@ 0x860
 800b9d0:	b158      	cbz	r0, 800b9ea <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x36>
 800b9d2:	6803      	ldr	r3, [r0, #0]
 800b9d4:	4622      	mov	r2, r4
 800b9d6:	69db      	ldr	r3, [r3, #28]
 800b9d8:	4631      	mov	r1, r6
 800b9da:	4798      	blx	r3
 800b9dc:	f8d5 0860 	ldr.w	r0, [r5, #2144]	@ 0x860
 800b9e0:	6803      	ldr	r3, [r0, #0]
 800b9e2:	4631      	mov	r1, r6
 800b9e4:	6a1b      	ldr	r3, [r3, #32]
 800b9e6:	4798      	blx	r3
 800b9e8:	4604      	mov	r4, r0
 800b9ea:	2224      	movs	r2, #36	@ 0x24
 800b9ec:	fb02 5306 	mla	r3, r2, r6, r5
 800b9f0:	2c01      	cmp	r4, #1
 800b9f2:	f893 3945 	ldrb.w	r3, [r3, #2373]	@ 0x945
 800b9f6:	fb02 5206 	mla	r2, r2, r6, r5
 800b9fa:	bf0c      	ite	eq
 800b9fc:	f043 0340 	orreq.w	r3, r3, #64	@ 0x40
 800ba00:	f003 03bf 	andne.w	r3, r3, #191	@ 0xbf
 800ba04:	f882 3945 	strb.w	r3, [r2, #2373]	@ 0x945
 800ba08:	2300      	movs	r3, #0
 800ba0a:	f885 3911 	strb.w	r3, [r5, #2321]	@ 0x911
 800ba0e:	f895 390d 	ldrb.w	r3, [r5, #2317]	@ 0x90d
 800ba12:	2b02      	cmp	r3, #2
 800ba14:	d109      	bne.n	800ba2a <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)+0x76>
 800ba16:	4621      	mov	r1, r4
 800ba18:	4630      	mov	r0, r6
 800ba1a:	f7ff fdcb 	bl	800b5b4 <ArtNetStore::SaveOutputStyle(unsigned long, lightset::OutputStyle)>
 800ba1e:	4621      	mov	r1, r4
 800ba20:	4630      	mov	r0, r6
 800ba22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba26:	f00a bab9 	b.w	8015f9c <artnet::display_outputstyle(unsigned long, lightset::OutputStyle)>
 800ba2a:	bd70      	pop	{r4, r5, r6, pc}

0800ba2c <ArtNetNode::Start()>:
 800ba2c:	b510      	push	{r4, lr}
 800ba2e:	f890 399f 	ldrb.w	r3, [r0, #2463]	@ 0x99f
 800ba32:	f063 031f 	orn	r3, r3, #31
 800ba36:	f880 399f 	strb.w	r3, [r0, #2463]	@ 0x99f
 800ba3a:	4b3a      	ldr	r3, [pc, #232]	@ (800bb24 <ArtNetNode::Start()+0xf8>)
 800ba3c:	7e9a      	ldrb	r2, [r3, #26]
 800ba3e:	f890 3a5c 	ldrb.w	r3, [r0, #2652]	@ 0xa5c
 800ba42:	f002 0202 	and.w	r2, r2, #2
 800ba46:	f003 03e9 	and.w	r3, r3, #233	@ 0xe9
 800ba4a:	4313      	orrs	r3, r2
 800ba4c:	4a36      	ldr	r2, [pc, #216]	@ (800bb28 <ArtNetNode::Start()+0xfc>)
 800ba4e:	f043 0318 	orr.w	r3, r3, #24
 800ba52:	6812      	ldr	r2, [r2, #0]
 800ba54:	f880 3a5c 	strb.w	r3, [r0, #2652]	@ 0xa5c
 800ba58:	7912      	ldrb	r2, [r2, #4]
 800ba5a:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800ba5e:	f063 033e 	orn	r3, r3, #62	@ 0x3e
 800ba62:	f880 3a5c 	strb.w	r3, [r0, #2652]	@ 0xa5c
 800ba66:	2329      	movs	r3, #41	@ 0x29
 800ba68:	4604      	mov	r4, r0
 800ba6a:	f880 3a61 	strb.w	r3, [r0, #2657]	@ 0xa61
 800ba6e:	f641 1036 	movw	r0, #6454	@ 0x1936
 800ba72:	f008 ff6f 	bl	8014954 <net::udp_begin(unsigned short)>
 800ba76:	f8d4 3878 	ldr.w	r3, [r4, #2168]	@ 0x878
 800ba7a:	f8c4 0848 	str.w	r0, [r4, #2120]	@ 0x848
 800ba7e:	b943      	cbnz	r3, 800ba92 <ArtNetNode::Start()+0x66>
 800ba80:	f8d4 1874 	ldr.w	r1, [r4, #2164]	@ 0x874
 800ba84:	b929      	cbnz	r1, 800ba92 <ArtNetNode::Start()+0x66>
 800ba86:	4829      	ldr	r0, [pc, #164]	@ (800bb2c <ArtNetNode::Start()+0x100>)
 800ba88:	2301      	movs	r3, #1
 800ba8a:	6800      	ldr	r0, [r0, #0]
 800ba8c:	461a      	mov	r2, r3
 800ba8e:	f006 f9f1 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800ba92:	f8d4 38a0 	ldr.w	r3, [r4, #2208]	@ 0x8a0
 800ba96:	b94b      	cbnz	r3, 800baac <ArtNetNode::Start()+0x80>
 800ba98:	f8d4 389c 	ldr.w	r3, [r4, #2204]	@ 0x89c
 800ba9c:	b933      	cbnz	r3, 800baac <ArtNetNode::Start()+0x80>
 800ba9e:	4823      	ldr	r0, [pc, #140]	@ (800bb2c <ArtNetNode::Start()+0x100>)
 800baa0:	2301      	movs	r3, #1
 800baa2:	6800      	ldr	r0, [r0, #0]
 800baa4:	461a      	mov	r2, r3
 800baa6:	4619      	mov	r1, r3
 800baa8:	f006 f9e4 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800baac:	4620      	mov	r0, r4
 800baae:	f000 fa63 	bl	800bf78 <ArtNetNode::SetLocalMerging()>
 800bab2:	f8d4 3860 	ldr.w	r3, [r4, #2144]	@ 0x860
 800bab6:	b1b3      	cbz	r3, 800bae6 <ArtNetNode::Start()+0xba>
 800bab8:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800babc:	2b01      	cmp	r3, #1
 800babe:	d107      	bne.n	800bad0 <ArtNetNode::Start()+0xa4>
 800bac0:	2100      	movs	r1, #0
 800bac2:	4620      	mov	r0, r4
 800bac4:	f7ff ff6e 	bl	800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>
 800bac8:	4602      	mov	r2, r0
 800baca:	4620      	mov	r0, r4
 800bacc:	f7ff ff72 	bl	800b9b4 <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)>
 800bad0:	f8d4 189c 	ldr.w	r1, [r4, #2204]	@ 0x89c
 800bad4:	2901      	cmp	r1, #1
 800bad6:	d106      	bne.n	800bae6 <ArtNetNode::Start()+0xba>
 800bad8:	4620      	mov	r0, r4
 800bada:	f7ff ff63 	bl	800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>
 800bade:	4602      	mov	r2, r0
 800bae0:	4620      	mov	r0, r4
 800bae2:	f7ff ff67 	bl	800b9b4 <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)>
 800bae6:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800baea:	b17b      	cbz	r3, 800bb0c <ArtNetNode::Start()+0xe0>
 800baec:	f8d4 1874 	ldr.w	r1, [r4, #2164]	@ 0x874
 800baf0:	2301      	movs	r3, #1
 800baf2:	f884 3924 	strb.w	r3, [r4, #2340]	@ 0x924
 800baf6:	b911      	cbnz	r1, 800bafe <ArtNetNode::Start()+0xd2>
 800baf8:	4620      	mov	r0, r4
 800bafa:	f002 ff01 	bl	800e900 <ArtNetNode::SendTodRequest(unsigned long)>
 800bafe:	f8d4 389c 	ldr.w	r3, [r4, #2204]	@ 0x89c
 800bb02:	b91b      	cbnz	r3, 800bb0c <ArtNetNode::Start()+0xe0>
 800bb04:	2101      	movs	r1, #1
 800bb06:	4620      	mov	r0, r4
 800bb08:	f002 fefa 	bl	800e900 <ArtNetNode::SendTodRequest(unsigned long)>
 800bb0c:	4620      	mov	r0, r4
 800bb0e:	f003 fc3f 	bl	800f390 <E131Bridge::Start()>
 800bb12:	4b07      	ldr	r3, [pc, #28]	@ (800bb30 <ArtNetNode::Start()+0x104>)
 800bb14:	2102      	movs	r1, #2
 800bb16:	f884 190d 	strb.w	r1, [r4, #2317]	@ 0x90d
 800bb1a:	6818      	ldr	r0, [r3, #0]
 800bb1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb20:	f00b bde8 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800bb24:	20002954 	andcs	r2, r0, r4, asr r9
 800bb28:	20002934 	andcs	r2, r0, r4, lsr r9
 800bb2c:	20001c4c 	andcs	r1, r0, ip, asr #24
 800bb30:	20002b04 	andcs	r2, r0, r4, lsl #22

0800bb34 <ArtNetNode::SetNetworkDataLossCondition()>:
 800bb34:	2300      	movs	r3, #0
 800bb36:	b510      	push	{r4, lr}
 800bb38:	f880 3912 	strb.w	r3, [r0, #2322]	@ 0x912
 800bb3c:	f880 3911 	strb.w	r3, [r0, #2321]	@ 0x911
 800bb40:	f890 387c 	ldrb.w	r3, [r0, #2172]	@ 0x87c
 800bb44:	4604      	mov	r4, r0
 800bb46:	b92b      	cbnz	r3, 800bb54 <ArtNetNode::SetNetworkDataLossCondition()+0x20>
 800bb48:	f8d0 392c 	ldr.w	r3, [r0, #2348]	@ 0x92c
 800bb4c:	f8d0 2938 	ldr.w	r2, [r0, #2360]	@ 0x938
 800bb50:	42d3      	cmn	r3, r2
 800bb52:	d108      	bne.n	800bb66 <ArtNetNode::SetNetworkDataLossCondition()+0x32>
 800bb54:	f894 38a4 	ldrb.w	r3, [r4, #2212]	@ 0x8a4
 800bb58:	bb83      	cbnz	r3, 800bbbc <ArtNetNode::SetNetworkDataLossCondition()+0x88>
 800bb5a:	f8d4 3950 	ldr.w	r3, [r4, #2384]	@ 0x950
 800bb5e:	f8d4 295c 	ldr.w	r2, [r4, #2396]	@ 0x95c
 800bb62:	42d3      	cmn	r3, r2
 800bb64:	d02a      	beq.n	800bbbc <ArtNetNode::SetNetworkDataLossCondition()+0x88>
 800bb66:	f894 3a61 	ldrb.w	r3, [r4, #2657]	@ 0xa61
 800bb6a:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800bb6e:	2b80      	cmp	r3, #128	@ 0x80
 800bb70:	d01a      	beq.n	800bba8 <ArtNetNode::SetNetworkDataLossCondition()+0x74>
 800bb72:	d81f      	bhi.n	800bbb4 <ArtNetNode::SetNetworkDataLossCondition()+0x80>
 800bb74:	b12b      	cbz	r3, 800bb82 <ArtNetNode::SetNetworkDataLossCondition()+0x4e>
 800bb76:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800bb7a:	6803      	ldr	r3, [r0, #0]
 800bb7c:	2101      	movs	r1, #1
 800bb7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bb80:	4798      	blx	r3
 800bb82:	2300      	movs	r3, #0
 800bb84:	4a0e      	ldr	r2, [pc, #56]	@ (800bbc0 <ArtNetNode::SetNetworkDataLossCondition()+0x8c>)
 800bb86:	f8c4 392c 	str.w	r3, [r4, #2348]	@ 0x92c
 800bb8a:	f8c4 3938 	str.w	r3, [r4, #2360]	@ 0x938
 800bb8e:	f8c4 3950 	str.w	r3, [r4, #2384]	@ 0x950
 800bb92:	f8c4 395c 	str.w	r3, [r4, #2396]	@ 0x95c
 800bb96:	4620      	mov	r0, r4
 800bb98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb9c:	f8c2 3600 	str.w	r3, [r2, #1536]	@ 0x600
 800bba0:	f8c2 3c04 	str.w	r3, [r2, #3076]	@ 0xc04
 800bba4:	f000 b9e8 	b.w	800bf78 <ArtNetNode::SetLocalMerging()>
 800bba8:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800bbac:	6803      	ldr	r3, [r0, #0]
 800bbae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbb0:	4798      	blx	r3
 800bbb2:	e7e6      	b.n	800bb82 <ArtNetNode::SetNetworkDataLossCondition()+0x4e>
 800bbb4:	4620      	mov	r0, r4
 800bbb6:	f003 f94f 	bl	800ee58 <ArtNetNode::FailSafePlayback()>
 800bbba:	e7e2      	b.n	800bb82 <ArtNetNode::SetNetworkDataLossCondition()+0x4e>
 800bbbc:	bd10      	pop	{r4, pc}
 800bbbe:	bf00      	nop
 800bbc0:	2000008c 	andcs	r0, r0, ip, lsl #1

0800bbc4 <ArtNetNode::Process(unsigned long)>:
 800bbc4:	b570      	push	{r4, r5, r6, lr}
 800bbc6:	f8d0 3854 	ldr.w	r3, [r0, #2132]	@ 0x854
 800bbca:	4604      	mov	r4, r0
 800bbcc:	2900      	cmp	r1, #0
 800bbce:	d14b      	bne.n	800bc68 <ArtNetNode::Process(unsigned long)+0xa4>
 800bbd0:	f8d0 2858 	ldr.w	r2, [r0, #2136]	@ 0x858
 800bbd4:	1a9b      	subs	r3, r3, r2
 800bbd6:	f242 720f 	movw	r2, #9999	@ 0x270f
 800bbda:	4293      	cmp	r3, r2
 800bbdc:	d908      	bls.n	800bbf0 <ArtNetNode::Process(unsigned long)+0x2c>
 800bbde:	f7ff ffa9 	bl	800bb34 <ArtNetNode::SetNetworkDataLossCondition()>
 800bbe2:	f894 3916 	ldrb.w	r3, [r4, #2326]	@ 0x916
 800bbe6:	f023 0302 	bic.w	r3, r3, #2
 800bbea:	f884 3916 	strb.w	r3, [r4, #2326]	@ 0x916
 800bbee:	e002      	b.n	800bbf6 <ArtNetNode::Process(unsigned long)+0x32>
 800bbf0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800bbf4:	d2f5      	bcs.n	800bbe2 <ArtNetNode::Process(unsigned long)+0x1e>
 800bbf6:	4620      	mov	r0, r4
 800bbf8:	f002 f95a 	bl	800deb0 <ArtNetNode::HandleDmxIn()>
 800bbfc:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800bc00:	b113      	cbz	r3, 800bc08 <ArtNetNode::Process(unsigned long)+0x44>
 800bc02:	4620      	mov	r0, r4
 800bc04:	f002 ff22 	bl	800ea4c <ArtNetNode::HandleRdmIn()>
 800bc08:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800bc0c:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800bc10:	2bc0      	cmp	r3, #192	@ 0xc0
 800bc12:	d10b      	bne.n	800bc2c <ArtNetNode::Process(unsigned long)+0x68>
 800bc14:	4b88      	ldr	r3, [pc, #544]	@ (800be38 <ArtNetNode::Process(unsigned long)+0x274>)
 800bc16:	681b      	ldr	r3, [r3, #0]
 800bc18:	695b      	ldr	r3, [r3, #20]
 800bc1a:	2b04      	cmp	r3, #4
 800bc1c:	d006      	beq.n	800bc2c <ArtNetNode::Process(unsigned long)+0x68>
 800bc1e:	f894 3916 	ldrb.w	r3, [r4, #2326]	@ 0x916
 800bc22:	b153      	cbz	r3, 800bc3a <ArtNetNode::Process(unsigned long)+0x76>
 800bc24:	2103      	movs	r1, #3
 800bc26:	4620      	mov	r0, r4
 800bc28:	f003 f9e4 	bl	800eff4 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)>
 800bc2c:	f604 05e8 	addw	r5, r4, #2280	@ 0x8e8
 800bc30:	f604 1618 	addw	r6, r4, #2328	@ 0x918
 800bc34:	42ae      	cmp	r6, r5
 800bc36:	d102      	bne.n	800bc3e <ArtNetNode::Process(unsigned long)+0x7a>
 800bc38:	bd70      	pop	{r4, r5, r6, pc}
 800bc3a:	2102      	movs	r1, #2
 800bc3c:	e7f3      	b.n	800bc26 <ArtNetNode::Process(unsigned long)+0x62>
 800bc3e:	f855 2c0c 	ldr.w	r2, [r5, #-12]
 800bc42:	b17a      	cbz	r2, 800bc64 <ArtNetNode::Process(unsigned long)+0xa0>
 800bc44:	f8d4 3854 	ldr.w	r3, [r4, #2132]	@ 0x854
 800bc48:	1a9b      	subs	r3, r3, r2
 800bc4a:	f8d4 28d0 	ldr.w	r2, [r4, #2256]	@ 0x8d0
 800bc4e:	4293      	cmp	r3, r2
 800bc50:	d908      	bls.n	800bc64 <ArtNetNode::Process(unsigned long)+0xa0>
 800bc52:	462b      	mov	r3, r5
 800bc54:	2100      	movs	r1, #0
 800bc56:	f843 1d0c 	str.w	r1, [r3, #-12]!
 800bc5a:	4620      	mov	r0, r4
 800bc5c:	f855 2c08 	ldr.w	r2, [r5, #-8]
 800bc60:	f001 f93e 	bl	800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
 800bc64:	350c      	adds	r5, #12
 800bc66:	e7e5      	b.n	800bc34 <ArtNetNode::Process(unsigned long)+0x70>
 800bc68:	f890 2911 	ldrb.w	r2, [r0, #2321]	@ 0x911
 800bc6c:	f8c0 3858 	str.w	r3, [r0, #2136]	@ 0x858
 800bc70:	b142      	cbz	r2, 800bc84 <ArtNetNode::Process(unsigned long)+0xc0>
 800bc72:	f8d0 28d8 	ldr.w	r2, [r0, #2264]	@ 0x8d8
 800bc76:	1a9b      	subs	r3, r3, r2
 800bc78:	f5b3 6f7a 	cmp.w	r3, #4000	@ 0xfa0
 800bc7c:	bf24      	itt	cs
 800bc7e:	2300      	movcs	r3, #0
 800bc80:	f880 3911 	strbcs.w	r3, [r0, #2321]	@ 0x911
 800bc84:	290b      	cmp	r1, #11
 800bc86:	d926      	bls.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bc88:	f8d4 384c 	ldr.w	r3, [r4, #2124]	@ 0x84c
 800bc8c:	7a9a      	ldrb	r2, [r3, #10]
 800bc8e:	bb12      	cbnz	r2, 800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bc90:	7ada      	ldrb	r2, [r3, #11]
 800bc92:	2a0e      	cmp	r2, #14
 800bc94:	d11f      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bc96:	4969      	ldr	r1, [pc, #420]	@ (800be3c <ArtNetNode::Process(unsigned long)+0x278>)
 800bc98:	1e5a      	subs	r2, r3, #1
 800bc9a:	1dd8      	adds	r0, r3, #7
 800bc9c:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800bca0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800bca4:	42ae      	cmp	r6, r5
 800bca6:	d116      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bca8:	4282      	cmp	r2, r0
 800bcaa:	d1f7      	bne.n	800bc9c <ArtNetNode::Process(unsigned long)+0xd8>
 800bcac:	891b      	ldrh	r3, [r3, #8]
 800bcae:	f5b3 4f01 	cmp.w	r3, #33024	@ 0x8100
 800bcb2:	f000 809c 	beq.w	800bdee <ArtNetNode::Process(unsigned long)+0x22a>
 800bcb6:	d854      	bhi.n	800bd62 <ArtNetNode::Process(unsigned long)+0x19e>
 800bcb8:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800bcbc:	f000 808f 	beq.w	800bdde <ArtNetNode::Process(unsigned long)+0x21a>
 800bcc0:	d841      	bhi.n	800bd46 <ArtNetNode::Process(unsigned long)+0x182>
 800bcc2:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 800bcc6:	d068      	beq.n	800bd9a <ArtNetNode::Process(unsigned long)+0x1d6>
 800bcc8:	f5b3 4fa4 	cmp.w	r3, #20992	@ 0x5200
 800bccc:	d071      	beq.n	800bdb2 <ArtNetNode::Process(unsigned long)+0x1ee>
 800bcce:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800bcd2:	f000 80ab 	beq.w	800be2c <ArtNetNode::Process(unsigned long)+0x268>
 800bcd6:	4620      	mov	r0, r4
 800bcd8:	f002 f8ea 	bl	800deb0 <ArtNetNode::HandleDmxIn()>
 800bcdc:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800bce0:	b113      	cbz	r3, 800bce8 <ArtNetNode::Process(unsigned long)+0x124>
 800bce2:	4620      	mov	r0, r4
 800bce4:	f002 feb2 	bl	800ea4c <ArtNetNode::HandleRdmIn()>
 800bce8:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800bcec:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800bcf0:	2bc0      	cmp	r3, #192	@ 0xc0
 800bcf2:	d10d      	bne.n	800bd10 <ArtNetNode::Process(unsigned long)+0x14c>
 800bcf4:	4b50      	ldr	r3, [pc, #320]	@ (800be38 <ArtNetNode::Process(unsigned long)+0x274>)
 800bcf6:	681b      	ldr	r3, [r3, #0]
 800bcf8:	695b      	ldr	r3, [r3, #20]
 800bcfa:	2b04      	cmp	r3, #4
 800bcfc:	d008      	beq.n	800bd10 <ArtNetNode::Process(unsigned long)+0x14c>
 800bcfe:	f894 3916 	ldrb.w	r3, [r4, #2326]	@ 0x916
 800bd02:	2b00      	cmp	r3, #0
 800bd04:	f000 8096 	beq.w	800be34 <ArtNetNode::Process(unsigned long)+0x270>
 800bd08:	2103      	movs	r1, #3
 800bd0a:	4620      	mov	r0, r4
 800bd0c:	f003 f972 	bl	800eff4 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)>
 800bd10:	f604 05e8 	addw	r5, r4, #2280	@ 0x8e8
 800bd14:	f604 1618 	addw	r6, r4, #2328	@ 0x918
 800bd18:	42b5      	cmp	r5, r6
 800bd1a:	d08d      	beq.n	800bc38 <ArtNetNode::Process(unsigned long)+0x74>
 800bd1c:	f855 2c0c 	ldr.w	r2, [r5, #-12]
 800bd20:	b17a      	cbz	r2, 800bd42 <ArtNetNode::Process(unsigned long)+0x17e>
 800bd22:	f8d4 3854 	ldr.w	r3, [r4, #2132]	@ 0x854
 800bd26:	1a9b      	subs	r3, r3, r2
 800bd28:	f8d4 28d0 	ldr.w	r2, [r4, #2256]	@ 0x8d0
 800bd2c:	4293      	cmp	r3, r2
 800bd2e:	d908      	bls.n	800bd42 <ArtNetNode::Process(unsigned long)+0x17e>
 800bd30:	462b      	mov	r3, r5
 800bd32:	2100      	movs	r1, #0
 800bd34:	f843 1d0c 	str.w	r1, [r3, #-12]!
 800bd38:	4620      	mov	r0, r4
 800bd3a:	f855 2c08 	ldr.w	r2, [r5, #-8]
 800bd3e:	f001 f8cf 	bl	800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
 800bd42:	350c      	adds	r5, #12
 800bd44:	e7e8      	b.n	800bd18 <ArtNetNode::Process(unsigned long)+0x154>
 800bd46:	f5b3 4fe0 	cmp.w	r3, #28672	@ 0x7000
 800bd4a:	d06b      	beq.n	800be24 <ArtNetNode::Process(unsigned long)+0x260>
 800bd4c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800bd50:	d1c1      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd52:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800bd56:	2b00      	cmp	r3, #0
 800bd58:	d0bd      	beq.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd5a:	4620      	mov	r0, r4
 800bd5c:	f002 f9f8 	bl	800e150 <ArtNetNode::HandleTodRequest()>
 800bd60:	e7b9      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd62:	f5b3 4f04 	cmp.w	r3, #33792	@ 0x8400
 800bd66:	d054      	beq.n	800be12 <ArtNetNode::Process(unsigned long)+0x24e>
 800bd68:	d80d      	bhi.n	800bd86 <ArtNetNode::Process(unsigned long)+0x1c2>
 800bd6a:	f5b3 4f02 	cmp.w	r3, #33280	@ 0x8200
 800bd6e:	d047      	beq.n	800be00 <ArtNetNode::Process(unsigned long)+0x23c>
 800bd70:	f5b3 4f03 	cmp.w	r3, #33536	@ 0x8300
 800bd74:	d1af      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd76:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800bd7a:	2b00      	cmp	r3, #0
 800bd7c:	d0ab      	beq.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd7e:	4620      	mov	r0, r4
 800bd80:	f002 fe0e 	bl	800e9a0 <ArtNetNode::HandleRdm()>
 800bd84:	e7a7      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd86:	f5b3 4f18 	cmp.w	r3, #38912	@ 0x9800
 800bd8a:	d02c      	beq.n	800bde6 <ArtNetNode::Process(unsigned long)+0x222>
 800bd8c:	f5b3 4f78 	cmp.w	r3, #63488	@ 0xf800
 800bd90:	d1a1      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd92:	4620      	mov	r0, r4
 800bd94:	f000 ff68 	bl	800cc68 <ArtNetNode::HandleIpProg()>
 800bd98:	e79d      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bd9a:	f8d4 3860 	ldr.w	r3, [r4, #2144]	@ 0x860
 800bd9e:	2b00      	cmp	r3, #0
 800bda0:	d099      	beq.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bda2:	4620      	mov	r0, r4
 800bda4:	f000 fbfc 	bl	800c5a0 <ArtNetNode::HandleDmx()>
 800bda8:	f8d4 3850 	ldr.w	r3, [r4, #2128]	@ 0x850
 800bdac:	f8c4 38d4 	str.w	r3, [r4, #2260]	@ 0x8d4
 800bdb0:	e791      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdb2:	f8d4 3860 	ldr.w	r3, [r4, #2144]	@ 0x860
 800bdb6:	2b00      	cmp	r3, #0
 800bdb8:	d08d      	beq.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdba:	f8d4 28d4 	ldr.w	r2, [r4, #2260]	@ 0x8d4
 800bdbe:	f8d4 3850 	ldr.w	r3, [r4, #2128]	@ 0x850
 800bdc2:	429a      	cmp	r2, r3
 800bdc4:	d187      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdc6:	f894 3912 	ldrb.w	r3, [r4, #2322]	@ 0x912
 800bdca:	2b00      	cmp	r3, #0
 800bdcc:	d183      	bne.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdce:	4b1c      	ldr	r3, [pc, #112]	@ (800be40 <ArtNetNode::Process(unsigned long)+0x27c>)
 800bdd0:	681b      	ldr	r3, [r3, #0]
 800bdd2:	f8c4 38d8 	str.w	r3, [r4, #2264]	@ 0x8d8
 800bdd6:	4620      	mov	r0, r4
 800bdd8:	f001 f98c 	bl	800d0f4 <ArtNetNode::HandleSync()>
 800bddc:	e77b      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdde:	4620      	mov	r0, r4
 800bde0:	f000 fa38 	bl	800c254 <ArtNetNode::HandleAddress()>
 800bde4:	e777      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bde6:	4620      	mov	r0, r4
 800bde8:	f001 f9c1 	bl	800d16e <ArtNetNode::HandleTimeSync()>
 800bdec:	e773      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdee:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800bdf2:	2b00      	cmp	r3, #0
 800bdf4:	f43f af6f 	beq.w	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800bdf8:	4620      	mov	r0, r4
 800bdfa:	f002 fcb1 	bl	800e760 <ArtNetNode::HandleTodData()>
 800bdfe:	e76a      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be00:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800be04:	2b00      	cmp	r3, #0
 800be06:	f43f af66 	beq.w	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be0a:	4620      	mov	r0, r4
 800be0c:	f002 fc40 	bl	800e690 <ArtNetNode::HandleTodControl()>
 800be10:	e761      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be12:	f894 3925 	ldrb.w	r3, [r4, #2341]	@ 0x925
 800be16:	2b00      	cmp	r3, #0
 800be18:	f43f af5d 	beq.w	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be1c:	4620      	mov	r0, r4
 800be1e:	f002 febf 	bl	800eba0 <ArtNetNode::HandleRdmSub()>
 800be22:	e758      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be24:	4620      	mov	r0, r4
 800be26:	f002 f963 	bl	800e0f0 <ArtNetNode::HandleInput()>
 800be2a:	e754      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be2c:	4620      	mov	r0, r4
 800be2e:	f001 f8ff 	bl	800d030 <ArtNetNode::HandlePoll()>
 800be32:	e750      	b.n	800bcd6 <ArtNetNode::Process(unsigned long)+0x112>
 800be34:	2102      	movs	r1, #2
 800be36:	e768      	b.n	800bd0a <ArtNetNode::Process(unsigned long)+0x146>
 800be38:	20002b04 	andcs	r2, r0, r4, lsl #22
 800be3c:	0801e6b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr, pc}
 800be40:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

0800be44 <lightset::Data::IOutputClear(LightSet*, unsigned long)>:
 800be44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800be46:	4603      	mov	r3, r0
 800be48:	f240 6404 	movw	r4, #1540	@ 0x604
 800be4c:	fb04 3402 	mla	r4, r4, r2, r3
 800be50:	4608      	mov	r0, r1
 800be52:	4611      	mov	r1, r2
 800be54:	f504 6280 	add.w	r2, r4, #1024	@ 0x400
 800be58:	4615      	mov	r5, r2
 800be5a:	f504 64c0 	add.w	r4, r4, #1536	@ 0x600
 800be5e:	2600      	movs	r6, #0
 800be60:	f805 6b01 	strb.w	r6, [r5], #1
 800be64:	42ac      	cmp	r4, r5
 800be66:	d1fb      	bne.n	800be60 <lightset::Data::IOutputClear(LightSet*, unsigned long)+0x1c>
 800be68:	f240 6404 	movw	r4, #1540	@ 0x604
 800be6c:	fb04 3401 	mla	r4, r4, r1, r3
 800be70:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800be74:	f8c4 3600 	str.w	r3, [r4, #1536]	@ 0x600
 800be78:	2501      	movs	r5, #1
 800be7a:	6804      	ldr	r4, [r0, #0]
 800be7c:	9500      	str	r5, [sp, #0]
 800be7e:	6924      	ldr	r4, [r4, #16]
 800be80:	47a0      	blx	r4
 800be82:	b002      	add	sp, #8
 800be84:	bd70      	pop	{r4, r5, r6, pc}

0800be86 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>:
 800be86:	2328      	movs	r3, #40	@ 0x28
 800be88:	fb03 0202 	mla	r2, r3, r2, r0
 800be8c:	f001 010f 	and.w	r1, r1, #15
 800be90:	f892 386f 	ldrb.w	r3, [r2, #2159]	@ 0x86f
 800be94:	f892 2870 	ldrb.w	r2, [r2, #2160]	@ 0x870
 800be98:	021b      	lsls	r3, r3, #8
 800be9a:	0112      	lsls	r2, r2, #4
 800be9c:	b2d2      	uxtb	r2, r2
 800be9e:	f403 43fe 	and.w	r3, r3, #32512	@ 0x7f00
 800bea2:	4313      	orrs	r3, r2
 800bea4:	ea43 0001 	orr.w	r0, r3, r1
 800bea8:	4770      	bx	lr
	...

0800beac <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)>:
 800beac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beb0:	4b18      	ldr	r3, [pc, #96]	@ (800bf14 <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)+0x68>)
 800beb2:	681c      	ldr	r4, [r3, #0]
 800beb4:	4284      	cmp	r4, r0
 800beb6:	b086      	sub	sp, #24
 800beb8:	460d      	mov	r5, r1
 800beba:	d827      	bhi.n	800bf0c <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)+0x60>
 800bebc:	1b04      	subs	r4, r0, r4
 800bebe:	2c03      	cmp	r4, #3
 800bec0:	d824      	bhi.n	800bf0c <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)+0x60>
 800bec2:	f04f 080f 	mov.w	r8, #15
 800bec6:	2600      	movs	r6, #0
 800bec8:	e9cd 8600 	strd	r8, r6, [sp]
 800becc:	4f12      	ldr	r7, [pc, #72]	@ (800bf18 <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)+0x6c>)
 800bece:	2302      	movs	r3, #2
 800bed0:	6838      	ldr	r0, [r7, #0]
 800bed2:	f10d 0216 	add.w	r2, sp, #22
 800bed6:	2119      	movs	r1, #25
 800bed8:	f00a faa0 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800bedc:	0064      	lsls	r4, r4, #1
 800bede:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800bee2:	2203      	movs	r2, #3
 800bee4:	40a2      	lsls	r2, r4
 800bee6:	f005 0503 	and.w	r5, r5, #3
 800beea:	ea23 0302 	bic.w	r3, r3, r2
 800beee:	40a5      	lsls	r5, r4
 800bef0:	432b      	orrs	r3, r5
 800bef2:	e9cd 6601 	strd	r6, r6, [sp, #4]
 800bef6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800befa:	2302      	movs	r3, #2
 800befc:	9300      	str	r3, [sp, #0]
 800befe:	6838      	ldr	r0, [r7, #0]
 800bf00:	f10d 0316 	add.w	r3, sp, #22
 800bf04:	4642      	mov	r2, r8
 800bf06:	2119      	movs	r1, #25
 800bf08:	f00a fa62 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bf0c:	b006      	add	sp, #24
 800bf0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf12:	bf00      	nop
 800bf14:	20000088 	andcs	r0, r0, r8, lsl #1
 800bf18:	20002a00 	andcs	r2, r0, r0, lsl #20

0800bf1c <ArtNetStore::SaveUniverse(unsigned long)>:
 800bf1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf1e:	4b13      	ldr	r3, [pc, #76]	@ (800bf6c <ArtNetStore::SaveUniverse(unsigned long)+0x50>)
 800bf20:	681b      	ldr	r3, [r3, #0]
 800bf22:	2228      	movs	r2, #40	@ 0x28
 800bf24:	fb02 3300 	mla	r3, r2, r0, r3
 800bf28:	f8d3 2874 	ldr.w	r2, [r3, #2164]	@ 0x874
 800bf2c:	2a02      	cmp	r2, #2
 800bf2e:	d01a      	beq.n	800bf66 <ArtNetStore::SaveUniverse(unsigned long)+0x4a>
 800bf30:	f8b3 386c 	ldrh.w	r3, [r3, #2156]	@ 0x86c
 800bf34:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bf38:	4b0d      	ldr	r3, [pc, #52]	@ (800bf70 <ArtNetStore::SaveUniverse(unsigned long)+0x54>)
 800bf3a:	681b      	ldr	r3, [r3, #0]
 800bf3c:	4283      	cmp	r3, r0
 800bf3e:	d812      	bhi.n	800bf66 <ArtNetStore::SaveUniverse(unsigned long)+0x4a>
 800bf40:	1ac0      	subs	r0, r0, r3
 800bf42:	2803      	cmp	r0, #3
 800bf44:	d80f      	bhi.n	800bf66 <ArtNetStore::SaveUniverse(unsigned long)+0x4a>
 800bf46:	2300      	movs	r3, #0
 800bf48:	9302      	str	r3, [sp, #8]
 800bf4a:	2302      	movs	r3, #2
 800bf4c:	0042      	lsls	r2, r0, #1
 800bf4e:	fa03 f000 	lsl.w	r0, r3, r0
 800bf52:	e9cd 3000 	strd	r3, r0, [sp]
 800bf56:	4807      	ldr	r0, [pc, #28]	@ (800bf74 <ArtNetStore::SaveUniverse(unsigned long)+0x58>)
 800bf58:	f10d 0316 	add.w	r3, sp, #22
 800bf5c:	6800      	ldr	r0, [r0, #0]
 800bf5e:	3205      	adds	r2, #5
 800bf60:	2119      	movs	r1, #25
 800bf62:	f00a fa35 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800bf66:	b007      	add	sp, #28
 800bf68:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf6c:	20001260 	andcs	r1, r0, r0, ror #4
 800bf70:	20000088 	andcs	r0, r0, r8, lsl #1
 800bf74:	20002a00 	andcs	r2, r0, r0, lsl #20

0800bf78 <ArtNetNode::SetLocalMerging()>:
 800bf78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf7a:	4603      	mov	r3, r0
 800bf7c:	f100 0450 	add.w	r4, r0, #80	@ 0x50
 800bf80:	2600      	movs	r6, #0
 800bf82:	f8d3 2874 	ldr.w	r2, [r3, #2164]	@ 0x874
 800bf86:	2a01      	cmp	r2, #1
 800bf88:	d103      	bne.n	800bf92 <ArtNetNode::SetLocalMerging()+0x1a>
 800bf8a:	3328      	adds	r3, #40	@ 0x28
 800bf8c:	42a3      	cmp	r3, r4
 800bf8e:	d1f8      	bne.n	800bf82 <ArtNetNode::SetLocalMerging()+0xa>
 800bf90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf92:	f883 687c 	strb.w	r6, [r3, #2172]	@ 0x87c
 800bf96:	4601      	mov	r1, r0
 800bf98:	4602      	mov	r2, r0
 800bf9a:	f8d2 5874 	ldr.w	r5, [r2, #2164]	@ 0x874
 800bf9e:	b1bd      	cbz	r5, 800bfd0 <ArtNetNode::SetLocalMerging()+0x58>
 800bfa0:	f8d3 7878 	ldr.w	r7, [r3, #2168]	@ 0x878
 800bfa4:	f8d2 5878 	ldr.w	r5, [r2, #2168]	@ 0x878
 800bfa8:	42af      	cmp	r7, r5
 800bfaa:	d111      	bne.n	800bfd0 <ArtNetNode::SetLocalMerging()+0x58>
 800bfac:	f8b3 786c 	ldrh.w	r7, [r3, #2156]	@ 0x86c
 800bfb0:	f8b2 586c 	ldrh.w	r5, [r2, #2156]	@ 0x86c
 800bfb4:	42af      	cmp	r7, r5
 800bfb6:	d10b      	bne.n	800bfd0 <ArtNetNode::SetLocalMerging()+0x58>
 800bfb8:	4d0a      	ldr	r5, [pc, #40]	@ (800bfe4 <ArtNetNode::SetLocalMerging()+0x6c>)
 800bfba:	f892 787c 	ldrb.w	r7, [r2, #2172]	@ 0x87c
 800bfbe:	682d      	ldr	r5, [r5, #0]
 800bfc0:	b967      	cbnz	r7, 800bfdc <ArtNetNode::SetLocalMerging()+0x64>
 800bfc2:	f8c1 592c 	str.w	r5, [r1, #2348]	@ 0x92c
 800bfc6:	2501      	movs	r5, #1
 800bfc8:	f883 587c 	strb.w	r5, [r3, #2172]	@ 0x87c
 800bfcc:	f882 587c 	strb.w	r5, [r2, #2172]	@ 0x87c
 800bfd0:	3228      	adds	r2, #40	@ 0x28
 800bfd2:	42a2      	cmp	r2, r4
 800bfd4:	f101 0124 	add.w	r1, r1, #36	@ 0x24
 800bfd8:	d1df      	bne.n	800bf9a <ArtNetNode::SetLocalMerging()+0x22>
 800bfda:	e7d6      	b.n	800bf8a <ArtNetNode::SetLocalMerging()+0x12>
 800bfdc:	f8c1 5938 	str.w	r5, [r1, #2360]	@ 0x938
 800bfe0:	e7f1      	b.n	800bfc6 <ArtNetNode::SetLocalMerging()+0x4e>
 800bfe2:	bf00      	nop
 800bfe4:	20002954 	andcs	r2, r0, r4, asr r9

0800bfe8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>:
 800bfe8:	2a02      	cmp	r2, #2
 800bfea:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bfee:	4604      	mov	r4, r0
 800bff0:	460d      	mov	r5, r1
 800bff2:	4617      	mov	r7, r2
 800bff4:	461e      	mov	r6, r3
 800bff6:	d12d      	bne.n	800c054 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x6c>
 800bff8:	2328      	movs	r3, #40	@ 0x28
 800bffa:	fb03 0201 	mla	r2, r3, r1, r0
 800bffe:	f8d2 2874 	ldr.w	r2, [r2, #2164]	@ 0x874
 800c002:	2a01      	cmp	r2, #1
 800c004:	d11e      	bne.n	800c044 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x5c>
 800c006:	f890 2917 	ldrb.w	r2, [r0, #2327]	@ 0x917
 800c00a:	3a01      	subs	r2, #1
 800c00c:	f880 2917 	strb.w	r2, [r0, #2327]	@ 0x917
 800c010:	fb03 4305 	mla	r3, r3, r5, r4
 800c014:	2202      	movs	r2, #2
 800c016:	f8c3 2874 	str.w	r2, [r3, #2164]	@ 0x874
 800c01a:	463a      	mov	r2, r7
 800c01c:	4629      	mov	r1, r5
 800c01e:	4620      	mov	r0, r4
 800c020:	f002 ffbb 	bl	800ef9a <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)>
 800c024:	f894 390d 	ldrb.w	r3, [r4, #2317]	@ 0x90d
 800c028:	2b02      	cmp	r3, #2
 800c02a:	d168      	bne.n	800c0fe <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x116>
 800c02c:	4628      	mov	r0, r5
 800c02e:	f7ff ff75 	bl	800bf1c <ArtNetStore::SaveUniverse(unsigned long)>
 800c032:	4628      	mov	r0, r5
 800c034:	4631      	mov	r1, r6
 800c036:	f009 ffa5 	bl	8015f84 <artnet::display_universe_switch(unsigned long, unsigned char)>
 800c03a:	4620      	mov	r0, r4
 800c03c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c040:	f7ff bf9a 	b.w	800bf78 <ArtNetNode::SetLocalMerging()>
 800c044:	2a00      	cmp	r2, #0
 800c046:	d1e3      	bne.n	800c010 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x28>
 800c048:	f890 2918 	ldrb.w	r2, [r0, #2328]	@ 0x918
 800c04c:	3a01      	subs	r2, #1
 800c04e:	f880 2918 	strb.w	r2, [r0, #2328]	@ 0x918
 800c052:	e7dd      	b.n	800c010 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x28>
 800c054:	bb62      	cbnz	r2, 800c0b0 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0xc8>
 800c056:	2328      	movs	r3, #40	@ 0x28
 800c058:	fb03 0301 	mla	r3, r3, r1, r0
 800c05c:	f8d3 2874 	ldr.w	r2, [r3, #2164]	@ 0x874
 800c060:	b16a      	cbz	r2, 800c07e <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x96>
 800c062:	f890 3918 	ldrb.w	r3, [r0, #2328]	@ 0x918
 800c066:	2a01      	cmp	r2, #1
 800c068:	f103 0301 	add.w	r3, r3, #1
 800c06c:	f880 3918 	strb.w	r3, [r0, #2328]	@ 0x918
 800c070:	bf02      	ittt	eq
 800c072:	f890 3917 	ldrbeq.w	r3, [r0, #2327]	@ 0x917
 800c076:	f103 33ff 	addeq.w	r3, r3, #4294967295	@ 0xffffffff
 800c07a:	f880 3917 	strbeq.w	r3, [r0, #2327]	@ 0x917
 800c07e:	230c      	movs	r3, #12
 800c080:	fb03 4305 	mla	r3, r3, r5, r4
 800c084:	f04f 0828 	mov.w	r8, #40	@ 0x28
 800c088:	fb08 4805 	mla	r8, r8, r5, r4
 800c08c:	f04f 0900 	mov.w	r9, #0
 800c090:	f883 9979 	strb.w	r9, [r3, #2425]	@ 0x979
 800c094:	f006 030f 	and.w	r3, r6, #15
 800c098:	f888 386e 	strb.w	r3, [r8, #2158]	@ 0x86e
 800c09c:	462a      	mov	r2, r5
 800c09e:	4631      	mov	r1, r6
 800c0a0:	4620      	mov	r0, r4
 800c0a2:	f7ff fef0 	bl	800be86 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
 800c0a6:	f8c8 9874 	str.w	r9, [r8, #2164]	@ 0x874
 800c0aa:	f8a8 086c 	strh.w	r0, [r8, #2156]	@ 0x86c
 800c0ae:	e7b4      	b.n	800c01a <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x32>
 800c0b0:	2a01      	cmp	r2, #1
 800c0b2:	d1b2      	bne.n	800c01a <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x32>
 800c0b4:	2328      	movs	r3, #40	@ 0x28
 800c0b6:	fb03 0301 	mla	r3, r3, r1, r0
 800c0ba:	f8d3 2874 	ldr.w	r2, [r3, #2164]	@ 0x874
 800c0be:	2a01      	cmp	r2, #1
 800c0c0:	d00a      	beq.n	800c0d8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0xf0>
 800c0c2:	f890 3917 	ldrb.w	r3, [r0, #2327]	@ 0x917
 800c0c6:	3301      	adds	r3, #1
 800c0c8:	f880 3917 	strb.w	r3, [r0, #2327]	@ 0x917
 800c0cc:	b922      	cbnz	r2, 800c0d8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0xf0>
 800c0ce:	f890 3918 	ldrb.w	r3, [r0, #2328]	@ 0x918
 800c0d2:	3b01      	subs	r3, #1
 800c0d4:	f880 3918 	strb.w	r3, [r0, #2328]	@ 0x918
 800c0d8:	f04f 0828 	mov.w	r8, #40	@ 0x28
 800c0dc:	fb08 4805 	mla	r8, r8, r5, r4
 800c0e0:	f006 030f 	and.w	r3, r6, #15
 800c0e4:	f888 386e 	strb.w	r3, [r8, #2158]	@ 0x86e
 800c0e8:	462a      	mov	r2, r5
 800c0ea:	4631      	mov	r1, r6
 800c0ec:	4620      	mov	r0, r4
 800c0ee:	f7ff feca 	bl	800be86 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
 800c0f2:	2301      	movs	r3, #1
 800c0f4:	f8a8 086c 	strh.w	r0, [r8, #2156]	@ 0x86c
 800c0f8:	f8c8 3874 	str.w	r3, [r8, #2164]	@ 0x874
 800c0fc:	e78d      	b.n	800c01a <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)+0x32>
 800c0fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c102 <ArtNetNode::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>:
 800c102:	b430      	push	{r4, r5}
 800c104:	2428      	movs	r4, #40	@ 0x28
 800c106:	fb04 0401 	mla	r4, r4, r1, r0
 800c10a:	f3c3 2506 	ubfx	r5, r3, #8, #7
 800c10e:	f884 586f 	strb.w	r5, [r4, #2159]	@ 0x86f
 800c112:	f3c3 1503 	ubfx	r5, r3, #4, #4
 800c116:	f884 5870 	strb.w	r5, [r4, #2160]	@ 0x870
 800c11a:	bc30      	pop	{r4, r5}
 800c11c:	f003 030f 	and.w	r3, r3, #15
 800c120:	f7ff bf62 	b.w	800bfe8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>

0800c124 <ArtNetNode::SetSubnetSwitch(unsigned long, unsigned char)>:
 800c124:	b570      	push	{r4, r5, r6, lr}
 800c126:	2528      	movs	r5, #40	@ 0x28
 800c128:	fb05 0501 	mla	r5, r5, r1, r0
 800c12c:	4606      	mov	r6, r0
 800c12e:	f885 2870 	strb.w	r2, [r5, #2160]	@ 0x870
 800c132:	460c      	mov	r4, r1
 800c134:	460a      	mov	r2, r1
 800c136:	f8b5 186c 	ldrh.w	r1, [r5, #2156]	@ 0x86c
 800c13a:	f7ff fea4 	bl	800be86 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
 800c13e:	f896 390d 	ldrb.w	r3, [r6, #2317]	@ 0x90d
 800c142:	f8a5 086c 	strh.w	r0, [r5, #2156]	@ 0x86c
 800c146:	2b02      	cmp	r3, #2
 800c148:	d102      	bne.n	800c150 <ArtNetNode::SetSubnetSwitch(unsigned long, unsigned char)+0x2c>
 800c14a:	4620      	mov	r0, r4
 800c14c:	f7ff fee6 	bl	800bf1c <ArtNetStore::SaveUniverse(unsigned long)>
 800c150:	bd70      	pop	{r4, r5, r6, pc}

0800c152 <ArtNetNode::SetNetSwitch(unsigned long, unsigned char)>:
 800c152:	b570      	push	{r4, r5, r6, lr}
 800c154:	2528      	movs	r5, #40	@ 0x28
 800c156:	fb05 0501 	mla	r5, r5, r1, r0
 800c15a:	4606      	mov	r6, r0
 800c15c:	f885 286f 	strb.w	r2, [r5, #2159]	@ 0x86f
 800c160:	460c      	mov	r4, r1
 800c162:	460a      	mov	r2, r1
 800c164:	f8b5 186c 	ldrh.w	r1, [r5, #2156]	@ 0x86c
 800c168:	f7ff fe8d 	bl	800be86 <ArtNetNode::MakePortAddress(unsigned short, unsigned long)>
 800c16c:	f896 390d 	ldrb.w	r3, [r6, #2317]	@ 0x90d
 800c170:	f8a5 086c 	strh.w	r0, [r5, #2156]	@ 0x86c
 800c174:	2b02      	cmp	r3, #2
 800c176:	d102      	bne.n	800c17e <ArtNetNode::SetNetSwitch(unsigned long, unsigned char)+0x2c>
 800c178:	4620      	mov	r0, r4
 800c17a:	f7ff fecf 	bl	800bf1c <ArtNetStore::SaveUniverse(unsigned long)>
 800c17e:	bd70      	pop	{r4, r5, r6, pc}

0800c180 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>:
 800c180:	b538      	push	{r3, r4, r5, lr}
 800c182:	4615      	mov	r5, r2
 800c184:	2224      	movs	r2, #36	@ 0x24
 800c186:	fb02 0301 	mla	r3, r2, r1, r0
 800c18a:	2d01      	cmp	r5, #1
 800c18c:	f893 3944 	ldrb.w	r3, [r3, #2372]	@ 0x944
 800c190:	fb02 0201 	mla	r2, r2, r1, r0
 800c194:	bf0c      	ite	eq
 800c196:	f043 0302 	orreq.w	r3, r3, #2
 800c19a:	f003 03fd 	andne.w	r3, r3, #253	@ 0xfd
 800c19e:	f882 3944 	strb.w	r3, [r2, #2372]	@ 0x944
 800c1a2:	2344      	movs	r3, #68	@ 0x44
 800c1a4:	fb03 0301 	mla	r3, r3, r1, r0
 800c1a8:	460c      	mov	r4, r1
 800c1aa:	f8c3 5080 	str.w	r5, [r3, #128]	@ 0x80
 800c1ae:	f890 390d 	ldrb.w	r3, [r0, #2317]	@ 0x90d
 800c1b2:	2b02      	cmp	r3, #2
 800c1b4:	d109      	bne.n	800c1ca <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)+0x4a>
 800c1b6:	4629      	mov	r1, r5
 800c1b8:	4620      	mov	r0, r4
 800c1ba:	f7ff fe77 	bl	800beac <ArtNetStore::SaveMergeMode(unsigned long, lightset::MergeMode)>
 800c1be:	4629      	mov	r1, r5
 800c1c0:	4620      	mov	r0, r4
 800c1c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c1c6:	f009 bee3 	b.w	8015f90 <artnet::display_merge_mode(unsigned long, lightset::MergeMode)>
 800c1ca:	bd38      	pop	{r3, r4, r5, pc}

0800c1cc <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>:
 800c1cc:	b530      	push	{r4, r5, lr}
 800c1ce:	f890 590d 	ldrb.w	r5, [r0, #2317]	@ 0x90d
 800c1d2:	2d02      	cmp	r5, #2
 800c1d4:	b087      	sub	sp, #28
 800c1d6:	4602      	mov	r2, r0
 800c1d8:	d106      	bne.n	800c1e8 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x1c>
 800c1da:	290c      	cmp	r1, #12
 800c1dc:	d104      	bne.n	800c1e8 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x1c>
 800c1de:	b007      	add	sp, #28
 800c1e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c1e4:	f002 be1c 	b.w	800ee20 <ArtNetNode::FailSafeRecord()>
 800c1e8:	f892 3a61 	ldrb.w	r3, [r2, #2657]	@ 0xa61
 800c1ec:	f1a1 0008 	sub.w	r0, r1, #8
 800c1f0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800c1f4:	2803      	cmp	r0, #3
 800c1f6:	d825      	bhi.n	800c244 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x78>
 800c1f8:	e8df f000 	tbb	[pc, r0]
 800c1fc:	24210204 	strtcs	r0, [r1], #-516	@ 0xfffffdfc
 800c200:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c204:	f001 0403 	and.w	r4, r1, #3
 800c208:	2d02      	cmp	r5, #2
 800c20a:	f882 3a61 	strb.w	r3, [r2, #2657]	@ 0xa61
 800c20e:	6254      	str	r4, [r2, #36]	@ 0x24
 800c210:	d11b      	bne.n	800c24a <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x7e>
 800c212:	2320      	movs	r3, #32
 800c214:	2200      	movs	r2, #0
 800c216:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800c21a:	480d      	ldr	r0, [pc, #52]	@ (800c250 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x84>)
 800c21c:	f88d 4017 	strb.w	r4, [sp, #23]
 800c220:	2301      	movs	r3, #1
 800c222:	9300      	str	r3, [sp, #0]
 800c224:	6800      	ldr	r0, [r0, #0]
 800c226:	f10d 0317 	add.w	r3, sp, #23
 800c22a:	2212      	movs	r2, #18
 800c22c:	2119      	movs	r1, #25
 800c22e:	f00a f8cf 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800c232:	4620      	mov	r0, r4
 800c234:	b007      	add	sp, #28
 800c236:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c23a:	f009 bec1 	b.w	8015fc0 <artnet::display_failsafe(unsigned char)>
 800c23e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c242:	e7df      	b.n	800c204 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x38>
 800c244:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800c248:	e7dc      	b.n	800c204 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x38>
 800c24a:	b007      	add	sp, #28
 800c24c:	bd30      	pop	{r4, r5, pc}
 800c24e:	bf00      	nop
 800c250:	20002a00 	andcs	r2, r0, r0, lsl #20

0800c254 <ArtNetNode::HandleAddress()>:
 800c254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c258:	2301      	movs	r3, #1
 800c25a:	f8d0 684c 	ldr.w	r6, [r0, #2124]	@ 0x84c
 800c25e:	f880 390c 	strb.w	r3, [r0, #2316]	@ 0x90c
 800c262:	7b75      	ldrb	r5, [r6, #13]
 800c264:	4604      	mov	r4, r0
 800c266:	b105      	cbz	r5, 800c26a <ArtNetNode::HandleAddress()+0x16>
 800c268:	3d01      	subs	r5, #1
 800c26a:	7bb3      	ldrb	r3, [r6, #14]
 800c26c:	b143      	cbz	r3, 800c280 <ArtNetNode::HandleAddress()+0x2c>
 800c26e:	f106 020e 	add.w	r2, r6, #14
 800c272:	4629      	mov	r1, r5
 800c274:	4620      	mov	r0, r4
 800c276:	f7ff fa1f 	bl	800b6b8 <ArtNetNode::SetShortName(unsigned long, char const*)>
 800c27a:	2306      	movs	r3, #6
 800c27c:	f884 390c 	strb.w	r3, [r4, #2316]	@ 0x90c
 800c280:	f896 3020 	ldrb.w	r3, [r6, #32]
 800c284:	b13b      	cbz	r3, 800c296 <ArtNetNode::HandleAddress()+0x42>
 800c286:	f106 0120 	add.w	r1, r6, #32
 800c28a:	4620      	mov	r0, r4
 800c28c:	f7ff fa6a 	bl	800b764 <ArtNetNode::SetLongName(char const*)>
 800c290:	2307      	movs	r3, #7
 800c292:	f884 390c 	strb.w	r3, [r4, #2316]	@ 0x90c
 800c296:	f896 2068 	ldrb.w	r2, [r6, #104]	@ 0x68
 800c29a:	2a00      	cmp	r2, #0
 800c29c:	d144      	bne.n	800c328 <ArtNetNode::HandleAddress()+0xd4>
 800c29e:	4629      	mov	r1, r5
 800c2a0:	4620      	mov	r0, r4
 800c2a2:	f7ff ff3f 	bl	800c124 <ArtNetNode::SetSubnetSwitch(unsigned long, unsigned char)>
 800c2a6:	7b32      	ldrb	r2, [r6, #12]
 800c2a8:	2a00      	cmp	r2, #0
 800c2aa:	d142      	bne.n	800c332 <ArtNetNode::HandleAddress()+0xde>
 800c2ac:	4629      	mov	r1, r5
 800c2ae:	4620      	mov	r0, r4
 800c2b0:	f7ff ff4f 	bl	800c152 <ArtNetNode::SetNetSwitch(unsigned long, unsigned char)>
 800c2b4:	f896 3064 	ldrb.w	r3, [r6, #100]	@ 0x64
 800c2b8:	2b7f      	cmp	r3, #127	@ 0x7f
 800c2ba:	d00c      	beq.n	800c2d6 <ArtNetNode::HandleAddress()+0x82>
 800c2bc:	2228      	movs	r2, #40	@ 0x28
 800c2be:	fb02 4205 	mla	r2, r2, r5, r4
 800c2c2:	f8d2 2874 	ldr.w	r2, [r2, #2164]	@ 0x874
 800c2c6:	2a01      	cmp	r2, #1
 800c2c8:	d105      	bne.n	800c2d6 <ArtNetNode::HandleAddress()+0x82>
 800c2ca:	bbbb      	cbnz	r3, 800c33c <ArtNetNode::HandleAddress()+0xe8>
 800c2cc:	4613      	mov	r3, r2
 800c2ce:	4629      	mov	r1, r5
 800c2d0:	4620      	mov	r0, r4
 800c2d2:	f7ff fe89 	bl	800bfe8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>
 800c2d6:	f896 2060 	ldrb.w	r2, [r6, #96]	@ 0x60
 800c2da:	2a7f      	cmp	r2, #127	@ 0x7f
 800c2dc:	d00b      	beq.n	800c2f6 <ArtNetNode::HandleAddress()+0xa2>
 800c2de:	2328      	movs	r3, #40	@ 0x28
 800c2e0:	fb03 4305 	mla	r3, r3, r5, r4
 800c2e4:	f8d3 1874 	ldr.w	r1, [r3, #2164]	@ 0x874
 800c2e8:	b929      	cbnz	r1, 800c2f6 <ArtNetNode::HandleAddress()+0xa2>
 800c2ea:	bb62      	cbnz	r2, 800c346 <ArtNetNode::HandleAddress()+0xf2>
 800c2ec:	2301      	movs	r3, #1
 800c2ee:	4629      	mov	r1, r5
 800c2f0:	4620      	mov	r0, r4
 800c2f2:	f7ff fe79 	bl	800bfe8 <ArtNetNode::SetUniverseSwitch(unsigned long, lightset::PortDir, unsigned char)>
 800c2f6:	f896 106a 	ldrb.w	r1, [r6, #106]	@ 0x6a
 800c2fa:	2953      	cmp	r1, #83	@ 0x53
 800c2fc:	d829      	bhi.n	800c352 <ArtNetNode::HandleAddress()+0xfe>
 800c2fe:	294f      	cmp	r1, #79	@ 0x4f
 800c300:	f200 80e8 	bhi.w	800c4d4 <ArtNetNode::HandleAddress()+0x280>
 800c304:	1e4b      	subs	r3, r1, #1
 800c306:	b2da      	uxtb	r2, r3
 800c308:	2a12      	cmp	r2, #18
 800c30a:	d830      	bhi.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c30c:	2b12      	cmp	r3, #18
 800c30e:	d82e      	bhi.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c310:	e8df f003 	tbb	[pc, r3]
 800c314:	c3b3a38b 			@ <UNDEFINED> instruction: 0xc3b3a38b
 800c318:	d02d2d7e 	eorle	r2, sp, lr, ror sp
 800c31c:	d0d0d0d0 	ldrsble	sp, [r0], #0
 800c320:	d42d2d2d 	strtle	r2, [sp], #-3373	@ 0xfffff2d3
 800c324:	00d4d4d4 	ldrsbeq	sp, [r4], #68	@ 0x44
 800c328:	0617      	lsls	r7, r2, #24
 800c32a:	d5bc      	bpl.n	800c2a6 <ArtNetNode::HandleAddress()+0x52>
 800c32c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800c330:	e7b5      	b.n	800c29e <ArtNetNode::HandleAddress()+0x4a>
 800c332:	0610      	lsls	r0, r2, #24
 800c334:	d5be      	bpl.n	800c2b4 <ArtNetNode::HandleAddress()+0x60>
 800c336:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800c33a:	e7b7      	b.n	800c2ac <ArtNetNode::HandleAddress()+0x58>
 800c33c:	0619      	lsls	r1, r3, #24
 800c33e:	d5ca      	bpl.n	800c2d6 <ArtNetNode::HandleAddress()+0x82>
 800c340:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800c344:	e7c3      	b.n	800c2ce <ArtNetNode::HandleAddress()+0x7a>
 800c346:	0613      	lsls	r3, r2, #24
 800c348:	d5d5      	bpl.n	800c2f6 <ArtNetNode::HandleAddress()+0xa2>
 800c34a:	f002 037f 	and.w	r3, r2, #127	@ 0x7f
 800c34e:	460a      	mov	r2, r1
 800c350:	e7cd      	b.n	800c2ee <ArtNetNode::HandleAddress()+0x9a>
 800c352:	29a3      	cmp	r1, #163	@ 0xa3
 800c354:	d84b      	bhi.n	800c3ee <ArtNetNode::HandleAddress()+0x19a>
 800c356:	299f      	cmp	r1, #159	@ 0x9f
 800c358:	f200 80d8 	bhi.w	800c50c <ArtNetNode::HandleAddress()+0x2b8>
 800c35c:	2973      	cmp	r1, #115	@ 0x73
 800c35e:	d80f      	bhi.n	800c380 <ArtNetNode::HandleAddress()+0x12c>
 800c360:	296f      	cmp	r1, #111	@ 0x6f
 800c362:	f200 80cc 	bhi.w	800c4fe <ArtNetNode::HandleAddress()+0x2aa>
 800c366:	3960      	subs	r1, #96	@ 0x60
 800c368:	2903      	cmp	r1, #3
 800c36a:	f240 80bd 	bls.w	800c4e8 <ArtNetNode::HandleAddress()+0x294>
 800c36e:	f8d4 2850 	ldr.w	r2, [r4, #2128]	@ 0x850
 800c372:	7b71      	ldrb	r1, [r6, #13]
 800c374:	4620      	mov	r0, r4
 800c376:	2300      	movs	r3, #0
 800c378:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c37c:	f000 bdb0 	b.w	800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
 800c380:	3170      	adds	r1, #112	@ 0x70
 800c382:	b2c9      	uxtb	r1, r1
 800c384:	2903      	cmp	r1, #3
 800c386:	d8f2      	bhi.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c388:	2328      	movs	r3, #40	@ 0x28
 800c38a:	fb03 4305 	mla	r3, r3, r5, r4
 800c38e:	f8d3 3878 	ldr.w	r3, [r3, #2168]	@ 0x878
 800c392:	b92b      	cbnz	r3, 800c3a0 <ArtNetNode::HandleAddress()+0x14c>
 800c394:	f8d4 1860 	ldr.w	r1, [r4, #2144]	@ 0x860
 800c398:	4862      	ldr	r0, [pc, #392]	@ (800c524 <ArtNetNode::HandleAddress()+0x2d0>)
 800c39a:	462a      	mov	r2, r5
 800c39c:	f7ff fd52 	bl	800be44 <lightset::Data::IOutputClear(LightSet*, unsigned long)>
 800c3a0:	2328      	movs	r3, #40	@ 0x28
 800c3a2:	fb03 4305 	mla	r3, r3, r5, r4
 800c3a6:	f8d3 3878 	ldr.w	r3, [r3, #2168]	@ 0x878
 800c3aa:	2b01      	cmp	r3, #1
 800c3ac:	d1df      	bne.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c3ae:	f8d4 10f4 	ldr.w	r1, [r4, #244]	@ 0xf4
 800c3b2:	485c      	ldr	r0, [pc, #368]	@ (800c524 <ArtNetNode::HandleAddress()+0x2d0>)
 800c3b4:	462a      	mov	r2, r5
 800c3b6:	f7ff fd45 	bl	800be44 <lightset::Data::IOutputClear(LightSet*, unsigned long)>
 800c3ba:	230c      	movs	r3, #12
 800c3bc:	fb03 4305 	mla	r3, r3, r5, r4
 800c3c0:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 800c3c4:	f1b8 0f01 	cmp.w	r8, #1
 800c3c8:	d10d      	bne.n	800c3e6 <ArtNetNode::HandleAddress()+0x192>
 800c3ca:	2744      	movs	r7, #68	@ 0x44
 800c3cc:	fb07 4705 	mla	r7, r7, r5, r4
 800c3d0:	f897 3089 	ldrb.w	r3, [r7, #137]	@ 0x89
 800c3d4:	b93b      	cbnz	r3, 800c3e6 <ArtNetNode::HandleAddress()+0x192>
 800c3d6:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800c3da:	6803      	ldr	r3, [r0, #0]
 800c3dc:	4629      	mov	r1, r5
 800c3de:	689b      	ldr	r3, [r3, #8]
 800c3e0:	4798      	blx	r3
 800c3e2:	f887 8089 	strb.w	r8, [r7, #137]	@ 0x89
 800c3e6:	2300      	movs	r3, #0
 800c3e8:	f884 3029 	strb.w	r3, [r4, #41]	@ 0x29
 800c3ec:	e7bf      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c3ee:	29c3      	cmp	r1, #195	@ 0xc3
 800c3f0:	d808      	bhi.n	800c404 <ArtNetNode::HandleAddress()+0x1b0>
 800c3f2:	29bf      	cmp	r1, #191	@ 0xbf
 800c3f4:	f200 8090 	bhi.w	800c518 <ArtNetNode::HandleAddress()+0x2c4>
 800c3f8:	3150      	adds	r1, #80	@ 0x50
 800c3fa:	b2c9      	uxtb	r1, r1
 800c3fc:	2903      	cmp	r1, #3
 800c3fe:	d8b6      	bhi.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c400:	2201      	movs	r2, #1
 800c402:	e084      	b.n	800c50e <ArtNetNode::HandleAddress()+0x2ba>
 800c404:	3130      	adds	r1, #48	@ 0x30
 800c406:	b2c9      	uxtb	r1, r1
 800c408:	2903      	cmp	r1, #3
 800c40a:	d8b0      	bhi.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c40c:	2200      	movs	r2, #0
 800c40e:	e084      	b.n	800c51a <ArtNetNode::HandleAddress()+0x2c6>
 800c410:	f894 3979 	ldrb.w	r3, [r4, #2425]	@ 0x979
 800c414:	f023 0374 	bic.w	r3, r3, #116	@ 0x74
 800c418:	f884 3979 	strb.w	r3, [r4, #2425]	@ 0x979
 800c41c:	f894 3985 	ldrb.w	r3, [r4, #2437]	@ 0x985
 800c420:	f023 0374 	bic.w	r3, r3, #116	@ 0x74
 800c424:	f884 3985 	strb.w	r3, [r4, #2437]	@ 0x985
 800c428:	e7a1      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c42a:	2300      	movs	r3, #0
 800c42c:	f894 2944 	ldrb.w	r2, [r4, #2372]	@ 0x944
 800c430:	f884 3912 	strb.w	r3, [r4, #2322]	@ 0x912
 800c434:	f8c4 392c 	str.w	r3, [r4, #2348]	@ 0x92c
 800c438:	f8c4 3938 	str.w	r3, [r4, #2360]	@ 0x938
 800c43c:	f8c4 3950 	str.w	r3, [r4, #2384]	@ 0x950
 800c440:	f8c4 395c 	str.w	r3, [r4, #2396]	@ 0x95c
 800c444:	f894 3968 	ldrb.w	r3, [r4, #2408]	@ 0x968
 800c448:	f022 0208 	bic.w	r2, r2, #8
 800c44c:	f023 0308 	bic.w	r3, r3, #8
 800c450:	f884 2944 	strb.w	r2, [r4, #2372]	@ 0x944
 800c454:	f884 3968 	strb.w	r3, [r4, #2408]	@ 0x968
 800c458:	e789      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c45a:	4b33      	ldr	r3, [pc, #204]	@ (800c528 <ArtNetNode::HandleAddress()+0x2d4>)
 800c45c:	2200      	movs	r2, #0
 800c45e:	6818      	ldr	r0, [r3, #0]
 800c460:	2102      	movs	r1, #2
 800c462:	f00b f969 	bl	8017738 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c466:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800c46a:	f063 033f 	orn	r3, r3, #63	@ 0x3f
 800c46e:	f884 399f 	strb.w	r3, [r4, #2463]	@ 0x99f
 800c472:	2301      	movs	r3, #1
 800c474:	f884 30e8 	strb.w	r3, [r4, #232]	@ 0xe8
 800c478:	e779      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c47a:	4b2b      	ldr	r3, [pc, #172]	@ (800c528 <ArtNetNode::HandleAddress()+0x2d4>)
 800c47c:	2201      	movs	r2, #1
 800c47e:	6818      	ldr	r0, [r3, #0]
 800c480:	2100      	movs	r1, #0
 800c482:	f00b f959 	bl	8017738 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c486:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800c48a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800c48e:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800c492:	f884 399f 	strb.w	r3, [r4, #2463]	@ 0x99f
 800c496:	2300      	movs	r3, #0
 800c498:	e7ec      	b.n	800c474 <ArtNetNode::HandleAddress()+0x220>
 800c49a:	4b23      	ldr	r3, [pc, #140]	@ (800c528 <ArtNetNode::HandleAddress()+0x2d4>)
 800c49c:	2201      	movs	r2, #1
 800c49e:	6818      	ldr	r0, [r3, #0]
 800c4a0:	2104      	movs	r1, #4
 800c4a2:	f00b f949 	bl	8017738 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>
 800c4a6:	f894 399f 	ldrb.w	r3, [r4, #2463]	@ 0x99f
 800c4aa:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800c4ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c4b2:	e7ee      	b.n	800c492 <ArtNetNode::HandleAddress()+0x23e>
 800c4b4:	4620      	mov	r0, r4
 800c4b6:	f7ff fe89 	bl	800c1cc <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>
 800c4ba:	e758      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c4bc:	2201      	movs	r2, #1
 800c4be:	4629      	mov	r1, r5
 800c4c0:	4620      	mov	r0, r4
 800c4c2:	f7ff fe5d 	bl	800c180 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>
 800c4c6:	2344      	movs	r3, #68	@ 0x44
 800c4c8:	fb03 4305 	mla	r3, r3, r5, r4
 800c4cc:	2201      	movs	r2, #1
 800c4ce:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800c4d2:	e74c      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c4d4:	2200      	movs	r2, #0
 800c4d6:	4629      	mov	r1, r5
 800c4d8:	4620      	mov	r0, r4
 800c4da:	f7ff fe51 	bl	800c180 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>
 800c4de:	2344      	movs	r3, #68	@ 0x44
 800c4e0:	fb03 4305 	mla	r3, r3, r5, r4
 800c4e4:	2200      	movs	r2, #0
 800c4e6:	e7f2      	b.n	800c4ce <ArtNetNode::HandleAddress()+0x27a>
 800c4e8:	2200      	movs	r2, #0
 800c4ea:	4629      	mov	r1, r5
 800c4ec:	4620      	mov	r0, r4
 800c4ee:	f002 fd2b 	bl	800ef48 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)>
 800c4f2:	2202      	movs	r2, #2
 800c4f4:	4629      	mov	r1, r5
 800c4f6:	4620      	mov	r0, r4
 800c4f8:	f002 fd4f 	bl	800ef9a <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)>
 800c4fc:	e737      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c4fe:	2201      	movs	r2, #1
 800c500:	4629      	mov	r1, r5
 800c502:	4620      	mov	r0, r4
 800c504:	f002 fd20 	bl	800ef48 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)>
 800c508:	2201      	movs	r2, #1
 800c50a:	e7f3      	b.n	800c4f4 <ArtNetNode::HandleAddress()+0x2a0>
 800c50c:	2200      	movs	r2, #0
 800c50e:	4629      	mov	r1, r5
 800c510:	4620      	mov	r0, r4
 800c512:	f7ff fa4f 	bl	800b9b4 <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)>
 800c516:	e72a      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c518:	2201      	movs	r2, #1
 800c51a:	4629      	mov	r1, r5
 800c51c:	4620      	mov	r0, r4
 800c51e:	f001 fe87 	bl	800e230 <ArtNetNode::SetRdm(unsigned long, bool)>
 800c522:	e724      	b.n	800c36e <ArtNetNode::HandleAddress()+0x11a>
 800c524:	2000008c 	andcs	r0, r0, ip, lsl #1
 800c528:	20002b04 	andcs	r2, r0, r4, lsl #22

0800c52c <ArtNetNode::CheckMergeTimeouts(unsigned long)>:
 800c52c:	eb01 02c1 	add.w	r2, r1, r1, lsl #3
 800c530:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 800c534:	b530      	push	{r4, r5, lr}
 800c536:	f8d0 4854 	ldr.w	r4, [r0, #2132]	@ 0x854
 800c53a:	f8d2 5928 	ldr.w	r5, [r2, #2344]	@ 0x928
 800c53e:	f242 7e10 	movw	lr, #10000	@ 0x2710
 800c542:	eba4 0c05 	sub.w	ip, r4, r5
 800c546:	45f4      	cmp	ip, lr
 800c548:	ea4f 03c1 	mov.w	r3, r1, lsl #3
 800c54c:	d908      	bls.n	800c560 <ArtNetNode::CheckMergeTimeouts(unsigned long)+0x34>
 800c54e:	f892 c944 	ldrb.w	ip, [r2, #2372]	@ 0x944
 800c552:	2500      	movs	r5, #0
 800c554:	f02c 0c08 	bic.w	ip, ip, #8
 800c558:	f882 c944 	strb.w	ip, [r2, #2372]	@ 0x944
 800c55c:	f8c2 592c 	str.w	r5, [r2, #2348]	@ 0x92c
 800c560:	440b      	add	r3, r1
 800c562:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c566:	f242 7210 	movw	r2, #10000	@ 0x2710
 800c56a:	f8d3 1934 	ldr.w	r1, [r3, #2356]	@ 0x934
 800c56e:	1a64      	subs	r4, r4, r1
 800c570:	4294      	cmp	r4, r2
 800c572:	d908      	bls.n	800c586 <ArtNetNode::CheckMergeTimeouts(unsigned long)+0x5a>
 800c574:	f893 2944 	ldrb.w	r2, [r3, #2372]	@ 0x944
 800c578:	2100      	movs	r1, #0
 800c57a:	f022 0208 	bic.w	r2, r2, #8
 800c57e:	f8c3 1938 	str.w	r1, [r3, #2360]	@ 0x938
 800c582:	f883 2944 	strb.w	r2, [r3, #2372]	@ 0x944
 800c586:	f890 3944 	ldrb.w	r3, [r0, #2372]	@ 0x944
 800c58a:	f890 2968 	ldrb.w	r2, [r0, #2408]	@ 0x968
 800c58e:	4313      	orrs	r3, r2
 800c590:	071b      	lsls	r3, r3, #28
 800c592:	bf5c      	itt	pl
 800c594:	f44f 7380 	movpl.w	r3, #256	@ 0x100
 800c598:	f8a0 3912 	strhpl.w	r3, [r0, #2322]	@ 0x912
 800c59c:	bd30      	pop	{r4, r5, pc}
 800c59e:	bf00      	nop

0800c5a0 <ArtNetNode::HandleDmx()>:
 800c5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5a4:	f8d0 984c 	ldr.w	r9, [r0, #2124]	@ 0x84c
 800c5a8:	4abc      	ldr	r2, [pc, #752]	@ (800c89c <ArtNetNode::HandleDmx()+0x2fc>)
 800c5aa:	f8b9 5010 	ldrh.w	r5, [r9, #16]
 800c5ae:	4604      	mov	r4, r0
 800c5b0:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800c5b4:	ba6d      	rev16	r5, r5
 800c5b6:	b2ad      	uxth	r5, r5
 800c5b8:	eb02 0803 	add.w	r8, r2, r3
 800c5bc:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800c5c0:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
 800c5c4:	bf28      	it	cs
 800c5c6:	f44f 7500 	movcs.w	r5, #512	@ 0x200
 800c5ca:	2b01      	cmp	r3, #1
 800c5cc:	b085      	sub	sp, #20
 800c5ce:	4606      	mov	r6, r0
 800c5d0:	4607      	mov	r7, r0
 800c5d2:	f04f 0100 	mov.w	r1, #0
 800c5d6:	d00e      	beq.n	800c5f6 <ArtNetNode::HandleDmx()+0x56>
 800c5d8:	3428      	adds	r4, #40	@ 0x28
 800c5da:	3724      	adds	r7, #36	@ 0x24
 800c5dc:	f202 6204 	addw	r2, r2, #1540	@ 0x604
 800c5e0:	f208 6804 	addw	r8, r8, #1540	@ 0x604
 800c5e4:	2900      	cmp	r1, #0
 800c5e6:	f040 809f 	bne.w	800c728 <ArtNetNode::HandleDmx()+0x188>
 800c5ea:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800c5ee:	2b01      	cmp	r3, #1
 800c5f0:	f04f 0101 	mov.w	r1, #1
 800c5f4:	d1f0      	bne.n	800c5d8 <ArtNetNode::HandleDmx()+0x38>
 800c5f6:	f8d4 3878 	ldr.w	r3, [r4, #2168]	@ 0x878
 800c5fa:	2b00      	cmp	r3, #0
 800c5fc:	d1ec      	bne.n	800c5d8 <ArtNetNode::HandleDmx()+0x38>
 800c5fe:	f8b4 086c 	ldrh.w	r0, [r4, #2156]	@ 0x86c
 800c602:	f8b9 300e 	ldrh.w	r3, [r9, #14]
 800c606:	4298      	cmp	r0, r3
 800c608:	d1e6      	bne.n	800c5d8 <ArtNetNode::HandleDmx()+0x38>
 800c60a:	f897 3944 	ldrb.w	r3, [r7, #2372]	@ 0x944
 800c60e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c612:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c616:	f896 0912 	ldrb.w	r0, [r6, #2322]	@ 0x912
 800c61a:	b158      	cbz	r0, 800c634 <ArtNetNode::HandleDmx()+0x94>
 800c61c:	f896 0914 	ldrb.w	r0, [r6, #2324]	@ 0x914
 800c620:	b940      	cbnz	r0, 800c634 <ArtNetNode::HandleDmx()+0x94>
 800c622:	4630      	mov	r0, r6
 800c624:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c628:	f7ff ff80 	bl	800c52c <ArtNetNode::CheckMergeTimeouts(unsigned long)>
 800c62c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c630:	f897 3944 	ldrb.w	r3, [r7, #2372]	@ 0x944
 800c634:	f8d7 092c 	ldr.w	r0, [r7, #2348]	@ 0x92c
 800c638:	f8d7 a938 	ldr.w	sl, [r7, #2360]	@ 0x938
 800c63c:	f8d6 e850 	ldr.w	lr, [r6, #2128]	@ 0x850
 800c640:	f3c3 0c40 	ubfx	ip, r3, #1, #1
 800c644:	2800      	cmp	r0, #0
 800c646:	f000 8165 	beq.w	800c914 <ArtNetNode::HandleDmx()+0x374>
 800c64a:	4570      	cmp	r0, lr
 800c64c:	f000 80a3 	beq.w	800c796 <ArtNetNode::HandleDmx()+0x1f6>
 800c650:	f1ba 0f00 	cmp.w	sl, #0
 800c654:	d06b      	beq.n	800c72e <ArtNetNode::HandleDmx()+0x18e>
 800c656:	45f2      	cmp	sl, lr
 800c658:	d166      	bne.n	800c728 <ArtNetNode::HandleDmx()+0x188>
 800c65a:	f8b7 e93c 	ldrh.w	lr, [r7, #2364]	@ 0x93c
 800c65e:	f899 000d 	ldrb.w	r0, [r9, #13]
 800c662:	4586      	cmp	lr, r0
 800c664:	f040 82df 	bne.w	800cc26 <ArtNetNode::HandleDmx()+0x686>
 800c668:	f896 e912 	ldrb.w	lr, [r6, #2322]	@ 0x912
 800c66c:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c670:	f8c7 0934 	str.w	r0, [r7, #2356]	@ 0x934
 800c674:	f1be 0f00 	cmp.w	lr, #0
 800c678:	d103      	bne.n	800c682 <ArtNetNode::HandleDmx()+0xe2>
 800c67a:	f240 1001 	movw	r0, #257	@ 0x101
 800c67e:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c682:	f043 0308 	orr.w	r3, r3, #8
 800c686:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c68a:	f109 0e12 	add.w	lr, r9, #18
 800c68e:	f208 2001 	addw	r0, r8, #513	@ 0x201
 800c692:	2d00      	cmp	r5, #0
 800c694:	f000 813a 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c698:	f105 0b12 	add.w	fp, r5, #18
 800c69c:	44cb      	add	fp, r9
 800c69e:	4673      	mov	r3, lr
 800c6a0:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c6a4:	f800 ab01 	strb.w	sl, [r0], #1
 800c6a8:	459b      	cmp	fp, r3
 800c6aa:	d1f9      	bne.n	800c6a0 <ArtNetNode::HandleDmx()+0x100>
 800c6ac:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c6b0:	f1bc 0f00 	cmp.w	ip, #0
 800c6b4:	f000 827d 	beq.w	800cbb2 <ArtNetNode::HandleDmx()+0x612>
 800c6b8:	4613      	mov	r3, r2
 800c6ba:	f81e 0b01 	ldrb.w	r0, [lr], #1
 800c6be:	f803 0b01 	strb.w	r0, [r3], #1
 800c6c2:	45f3      	cmp	fp, lr
 800c6c4:	d1f9      	bne.n	800c6ba <ArtNetNode::HandleDmx()+0x11a>
 800c6c6:	f8d8 e601 	ldr.w	lr, [r8, #1537]	@ 0x601
 800c6ca:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
 800c6ce:	f896 c911 	ldrb.w	ip, [r6, #2321]	@ 0x911
 800c6d2:	6803      	ldr	r3, [r0, #0]
 800c6d4:	f8d3 b010 	ldr.w	fp, [r3, #16]
 800c6d8:	f1bc 0f00 	cmp.w	ip, #0
 800c6dc:	d005      	beq.n	800c6ea <ArtNetNode::HandleDmx()+0x14a>
 800c6de:	f897 c944 	ldrb.w	ip, [r7, #2372]	@ 0x944
 800c6e2:	f01c 0c08 	ands.w	ip, ip, #8
 800c6e6:	f000 8098 	beq.w	800c81a <ArtNetNode::HandleDmx()+0x27a>
 800c6ea:	f04f 0a01 	mov.w	sl, #1
 800c6ee:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c6f2:	4673      	mov	r3, lr
 800c6f4:	f8cd a000 	str.w	sl, [sp]
 800c6f8:	47d8      	blx	fp
 800c6fa:	f897 3947 	ldrb.w	r3, [r7, #2375]	@ 0x947
 800c6fe:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c702:	b953      	cbnz	r3, 800c71a <ArtNetNode::HandleDmx()+0x17a>
 800c704:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
 800c708:	6803      	ldr	r3, [r0, #0]
 800c70a:	689b      	ldr	r3, [r3, #8]
 800c70c:	4798      	blx	r3
 800c70e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c712:	f886 a913 	strb.w	sl, [r6, #2323]	@ 0x913
 800c716:	f887 a947 	strb.w	sl, [r7, #2375]	@ 0x947
 800c71a:	f896 3916 	ldrb.w	r3, [r6, #2326]	@ 0x916
 800c71e:	f043 0302 	orr.w	r3, r3, #2
 800c722:	f886 3916 	strb.w	r3, [r6, #2326]	@ 0x916
 800c726:	e757      	b.n	800c5d8 <ArtNetNode::HandleDmx()+0x38>
 800c728:	b005      	add	sp, #20
 800c72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c72e:	f8c7 e938 	str.w	lr, [r7, #2360]	@ 0x938
 800c732:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c736:	f8c7 0934 	str.w	r0, [r7, #2356]	@ 0x934
 800c73a:	f896 0912 	ldrb.w	r0, [r6, #2322]	@ 0x912
 800c73e:	f899 e00d 	ldrb.w	lr, [r9, #13]
 800c742:	f8a7 e93c 	strh.w	lr, [r7, #2364]	@ 0x93c
 800c746:	b918      	cbnz	r0, 800c750 <ArtNetNode::HandleDmx()+0x1b0>
 800c748:	f240 1001 	movw	r0, #257	@ 0x101
 800c74c:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c750:	f043 0308 	orr.w	r3, r3, #8
 800c754:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c758:	f109 0012 	add.w	r0, r9, #18
 800c75c:	f208 2e01 	addw	lr, r8, #513	@ 0x201
 800c760:	2d00      	cmp	r5, #0
 800c762:	f000 80d3 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c766:	f105 0b12 	add.w	fp, r5, #18
 800c76a:	44cb      	add	fp, r9
 800c76c:	4603      	mov	r3, r0
 800c76e:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c772:	f80e ab01 	strb.w	sl, [lr], #1
 800c776:	459b      	cmp	fp, r3
 800c778:	d1f9      	bne.n	800c76e <ArtNetNode::HandleDmx()+0x1ce>
 800c77a:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c77e:	f1bc 0f00 	cmp.w	ip, #0
 800c782:	f000 813f 	beq.w	800ca04 <ArtNetNode::HandleDmx()+0x464>
 800c786:	4613      	mov	r3, r2
 800c788:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c78c:	f803 cb01 	strb.w	ip, [r3], #1
 800c790:	4583      	cmp	fp, r0
 800c792:	d1f9      	bne.n	800c788 <ArtNetNode::HandleDmx()+0x1e8>
 800c794:	e797      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800c796:	f899 e00d 	ldrb.w	lr, [r9, #13]
 800c79a:	f8b7 b930 	ldrh.w	fp, [r7, #2352]	@ 0x930
 800c79e:	f1ba 0f00 	cmp.w	sl, #0
 800c7a2:	d146      	bne.n	800c832 <ArtNetNode::HandleDmx()+0x292>
 800c7a4:	45de      	cmp	lr, fp
 800c7a6:	f000 8199 	beq.w	800cadc <ArtNetNode::HandleDmx()+0x53c>
 800c7aa:	f8b7 a93c 	ldrh.w	sl, [r7, #2364]	@ 0x93c
 800c7ae:	45f2      	cmp	sl, lr
 800c7b0:	d0ba      	beq.n	800c728 <ArtNetNode::HandleDmx()+0x188>
 800c7b2:	f8c7 0938 	str.w	r0, [r7, #2360]	@ 0x938
 800c7b6:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c7ba:	f8c7 0934 	str.w	r0, [r7, #2356]	@ 0x934
 800c7be:	f896 0912 	ldrb.w	r0, [r6, #2322]	@ 0x912
 800c7c2:	f899 e00d 	ldrb.w	lr, [r9, #13]
 800c7c6:	f8a7 e93c 	strh.w	lr, [r7, #2364]	@ 0x93c
 800c7ca:	b918      	cbnz	r0, 800c7d4 <ArtNetNode::HandleDmx()+0x234>
 800c7cc:	f240 1001 	movw	r0, #257	@ 0x101
 800c7d0:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c7d4:	f043 0308 	orr.w	r3, r3, #8
 800c7d8:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c7dc:	f109 0012 	add.w	r0, r9, #18
 800c7e0:	f208 2e01 	addw	lr, r8, #513	@ 0x201
 800c7e4:	2d00      	cmp	r5, #0
 800c7e6:	f000 8091 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c7ea:	f105 0b12 	add.w	fp, r5, #18
 800c7ee:	44cb      	add	fp, r9
 800c7f0:	4603      	mov	r3, r0
 800c7f2:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c7f6:	f80e ab01 	strb.w	sl, [lr], #1
 800c7fa:	459b      	cmp	fp, r3
 800c7fc:	d1f9      	bne.n	800c7f2 <ArtNetNode::HandleDmx()+0x252>
 800c7fe:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c802:	f1bc 0f00 	cmp.w	ip, #0
 800c806:	f000 814b 	beq.w	800caa0 <ArtNetNode::HandleDmx()+0x500>
 800c80a:	4613      	mov	r3, r2
 800c80c:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c810:	f803 cb01 	strb.w	ip, [r3], #1
 800c814:	4583      	cmp	fp, r0
 800c816:	d1f9      	bne.n	800c80c <ArtNetNode::HandleDmx()+0x26c>
 800c818:	e755      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800c81a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c81e:	4673      	mov	r3, lr
 800c820:	f8cd c000 	str.w	ip, [sp]
 800c824:	47d8      	blx	fp
 800c826:	2301      	movs	r3, #1
 800c828:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c82c:	f887 3948 	strb.w	r3, [r7, #2376]	@ 0x948
 800c830:	e773      	b.n	800c71a <ArtNetNode::HandleDmx()+0x17a>
 800c832:	4582      	cmp	sl, r0
 800c834:	d034      	beq.n	800c8a0 <ArtNetNode::HandleDmx()+0x300>
 800c836:	45de      	cmp	lr, fp
 800c838:	f47f af76 	bne.w	800c728 <ArtNetNode::HandleDmx()+0x188>
 800c83c:	f896 e912 	ldrb.w	lr, [r6, #2322]	@ 0x912
 800c840:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c844:	f8c7 0928 	str.w	r0, [r7, #2344]	@ 0x928
 800c848:	f1be 0f00 	cmp.w	lr, #0
 800c84c:	d103      	bne.n	800c856 <ArtNetNode::HandleDmx()+0x2b6>
 800c84e:	f240 1001 	movw	r0, #257	@ 0x101
 800c852:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c856:	f043 0308 	orr.w	r3, r3, #8
 800c85a:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c85e:	f109 0e12 	add.w	lr, r9, #18
 800c862:	f108 0001 	add.w	r0, r8, #1
 800c866:	2d00      	cmp	r5, #0
 800c868:	d050      	beq.n	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c86a:	f105 0b12 	add.w	fp, r5, #18
 800c86e:	44cb      	add	fp, r9
 800c870:	4673      	mov	r3, lr
 800c872:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c876:	f800 ab01 	strb.w	sl, [r0], #1
 800c87a:	455b      	cmp	r3, fp
 800c87c:	d1f9      	bne.n	800c872 <ArtNetNode::HandleDmx()+0x2d2>
 800c87e:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c882:	f1bc 0f00 	cmp.w	ip, #0
 800c886:	f000 8176 	beq.w	800cb76 <ArtNetNode::HandleDmx()+0x5d6>
 800c88a:	4613      	mov	r3, r2
 800c88c:	f81e 0b01 	ldrb.w	r0, [lr], #1
 800c890:	f803 0b01 	strb.w	r0, [r3], #1
 800c894:	45de      	cmp	lr, fp
 800c896:	d1f9      	bne.n	800c88c <ArtNetNode::HandleDmx()+0x2ec>
 800c898:	e715      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800c89a:	bf00      	nop
 800c89c:	2000048c 	andcs	r0, r0, ip, lsl #9
 800c8a0:	45de      	cmp	lr, fp
 800c8a2:	f000 80be 	beq.w	800ca22 <ArtNetNode::HandleDmx()+0x482>
 800c8a6:	f8b7 093c 	ldrh.w	r0, [r7, #2364]	@ 0x93c
 800c8aa:	4570      	cmp	r0, lr
 800c8ac:	f040 81b5 	bne.w	800cc1a <ArtNetNode::HandleDmx()+0x67a>
 800c8b0:	f896 e912 	ldrb.w	lr, [r6, #2322]	@ 0x912
 800c8b4:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c8b8:	f8c7 0934 	str.w	r0, [r7, #2356]	@ 0x934
 800c8bc:	f1be 0f00 	cmp.w	lr, #0
 800c8c0:	d103      	bne.n	800c8ca <ArtNetNode::HandleDmx()+0x32a>
 800c8c2:	f240 1001 	movw	r0, #257	@ 0x101
 800c8c6:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c8ca:	f043 0308 	orr.w	r3, r3, #8
 800c8ce:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c8d2:	f109 0012 	add.w	r0, r9, #18
 800c8d6:	f208 2e01 	addw	lr, r8, #513	@ 0x201
 800c8da:	b1bd      	cbz	r5, 800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c8dc:	f105 0b12 	add.w	fp, r5, #18
 800c8e0:	44cb      	add	fp, r9
 800c8e2:	4603      	mov	r3, r0
 800c8e4:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c8e8:	f80e ab01 	strb.w	sl, [lr], #1
 800c8ec:	459b      	cmp	fp, r3
 800c8ee:	d1f9      	bne.n	800c8e4 <ArtNetNode::HandleDmx()+0x344>
 800c8f0:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c8f4:	f1bc 0f00 	cmp.w	ip, #0
 800c8f8:	f000 80e1 	beq.w	800cabe <ArtNetNode::HandleDmx()+0x51e>
 800c8fc:	4613      	mov	r3, r2
 800c8fe:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c902:	f803 cb01 	strb.w	ip, [r3], #1
 800c906:	4583      	cmp	fp, r0
 800c908:	d1f9      	bne.n	800c8fe <ArtNetNode::HandleDmx()+0x35e>
 800c90a:	e6dc      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800c90c:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c910:	46ae      	mov	lr, r5
 800c912:	e6da      	b.n	800c6ca <ArtNetNode::HandleDmx()+0x12a>
 800c914:	f1ba 0f00 	cmp.w	sl, #0
 800c918:	f000 815a 	beq.w	800cbd0 <ArtNetNode::HandleDmx()+0x630>
 800c91c:	45f2      	cmp	sl, lr
 800c91e:	d032      	beq.n	800c986 <ArtNetNode::HandleDmx()+0x3e6>
 800c920:	f8c7 e92c 	str.w	lr, [r7, #2348]	@ 0x92c
 800c924:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c928:	f8c7 0928 	str.w	r0, [r7, #2344]	@ 0x928
 800c92c:	f896 0912 	ldrb.w	r0, [r6, #2322]	@ 0x912
 800c930:	f899 e00d 	ldrb.w	lr, [r9, #13]
 800c934:	f8a7 e930 	strh.w	lr, [r7, #2352]	@ 0x930
 800c938:	b918      	cbnz	r0, 800c942 <ArtNetNode::HandleDmx()+0x3a2>
 800c93a:	f240 1001 	movw	r0, #257	@ 0x101
 800c93e:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c942:	f043 0308 	orr.w	r3, r3, #8
 800c946:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c94a:	f109 0012 	add.w	r0, r9, #18
 800c94e:	f108 0e01 	add.w	lr, r8, #1
 800c952:	2d00      	cmp	r5, #0
 800c954:	d0da      	beq.n	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c956:	f105 0b12 	add.w	fp, r5, #18
 800c95a:	44cb      	add	fp, r9
 800c95c:	4603      	mov	r3, r0
 800c95e:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c962:	f80e ab01 	strb.w	sl, [lr], #1
 800c966:	459b      	cmp	fp, r3
 800c968:	d1f9      	bne.n	800c95e <ArtNetNode::HandleDmx()+0x3be>
 800c96a:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c96e:	f1bc 0f00 	cmp.w	ip, #0
 800c972:	f000 8086 	beq.w	800ca82 <ArtNetNode::HandleDmx()+0x4e2>
 800c976:	4613      	mov	r3, r2
 800c978:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c97c:	f803 cb01 	strb.w	ip, [r3], #1
 800c980:	4583      	cmp	fp, r0
 800c982:	d1f9      	bne.n	800c978 <ArtNetNode::HandleDmx()+0x3d8>
 800c984:	e69f      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800c986:	f899 000d 	ldrb.w	r0, [r9, #13]
 800c98a:	f8b7 e93c 	ldrh.w	lr, [r7, #2364]	@ 0x93c
 800c98e:	4586      	cmp	lr, r0
 800c990:	f000 80d2 	beq.w	800cb38 <ArtNetNode::HandleDmx()+0x598>
 800c994:	f8b7 e930 	ldrh.w	lr, [r7, #2352]	@ 0x930
 800c998:	4586      	cmp	lr, r0
 800c99a:	f43f aec5 	beq.w	800c728 <ArtNetNode::HandleDmx()+0x188>
 800c99e:	f8c7 a92c 	str.w	sl, [r7, #2348]	@ 0x92c
 800c9a2:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800c9a6:	f8c7 0928 	str.w	r0, [r7, #2344]	@ 0x928
 800c9aa:	f896 0912 	ldrb.w	r0, [r6, #2322]	@ 0x912
 800c9ae:	f899 e00d 	ldrb.w	lr, [r9, #13]
 800c9b2:	f8a7 e930 	strh.w	lr, [r7, #2352]	@ 0x930
 800c9b6:	b918      	cbnz	r0, 800c9c0 <ArtNetNode::HandleDmx()+0x420>
 800c9b8:	f240 1001 	movw	r0, #257	@ 0x101
 800c9bc:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800c9c0:	f043 0308 	orr.w	r3, r3, #8
 800c9c4:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800c9c8:	f109 0012 	add.w	r0, r9, #18
 800c9cc:	f108 0e01 	add.w	lr, r8, #1
 800c9d0:	2d00      	cmp	r5, #0
 800c9d2:	d09b      	beq.n	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800c9d4:	f105 0b12 	add.w	fp, r5, #18
 800c9d8:	44cb      	add	fp, r9
 800c9da:	4603      	mov	r3, r0
 800c9dc:	f813 ab01 	ldrb.w	sl, [r3], #1
 800c9e0:	f80e ab01 	strb.w	sl, [lr], #1
 800c9e4:	455b      	cmp	r3, fp
 800c9e6:	d1f9      	bne.n	800c9dc <ArtNetNode::HandleDmx()+0x43c>
 800c9e8:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800c9ec:	f1bc 0f00 	cmp.w	ip, #0
 800c9f0:	f000 8093 	beq.w	800cb1a <ArtNetNode::HandleDmx()+0x57a>
 800c9f4:	4613      	mov	r3, r2
 800c9f6:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c9fa:	f803 cb01 	strb.w	ip, [r3], #1
 800c9fe:	4558      	cmp	r0, fp
 800ca00:	d1f9      	bne.n	800c9f6 <ArtNetNode::HandleDmx()+0x456>
 800ca02:	e660      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800ca04:	4643      	mov	r3, r8
 800ca06:	eb05 0008 	add.w	r0, r5, r8
 800ca0a:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800ca0e:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800ca12:	45f4      	cmp	ip, lr
 800ca14:	bf38      	it	cc
 800ca16:	46f4      	movcc	ip, lr
 800ca18:	4283      	cmp	r3, r0
 800ca1a:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800ca1e:	d1f4      	bne.n	800ca0a <ArtNetNode::HandleDmx()+0x46a>
 800ca20:	e651      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800ca22:	f896 e912 	ldrb.w	lr, [r6, #2322]	@ 0x912
 800ca26:	f8d6 0854 	ldr.w	r0, [r6, #2132]	@ 0x854
 800ca2a:	f8c7 0928 	str.w	r0, [r7, #2344]	@ 0x928
 800ca2e:	f1be 0f00 	cmp.w	lr, #0
 800ca32:	d103      	bne.n	800ca3c <ArtNetNode::HandleDmx()+0x49c>
 800ca34:	f240 1001 	movw	r0, #257	@ 0x101
 800ca38:	f8a6 0912 	strh.w	r0, [r6, #2322]	@ 0x912
 800ca3c:	f043 0308 	orr.w	r3, r3, #8
 800ca40:	f887 3944 	strb.w	r3, [r7, #2372]	@ 0x944
 800ca44:	f109 0012 	add.w	r0, r9, #18
 800ca48:	f108 0e01 	add.w	lr, r8, #1
 800ca4c:	2d00      	cmp	r5, #0
 800ca4e:	f43f af5d 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800ca52:	f105 0a12 	add.w	sl, r5, #18
 800ca56:	44ca      	add	sl, r9
 800ca58:	4603      	mov	r3, r0
 800ca5a:	f813 bb01 	ldrb.w	fp, [r3], #1
 800ca5e:	f80e bb01 	strb.w	fp, [lr], #1
 800ca62:	4553      	cmp	r3, sl
 800ca64:	d1f9      	bne.n	800ca5a <ArtNetNode::HandleDmx()+0x4ba>
 800ca66:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800ca6a:	f1bc 0f00 	cmp.w	ip, #0
 800ca6e:	f000 8091 	beq.w	800cb94 <ArtNetNode::HandleDmx()+0x5f4>
 800ca72:	4613      	mov	r3, r2
 800ca74:	f810 cb01 	ldrb.w	ip, [r0], #1
 800ca78:	f803 cb01 	strb.w	ip, [r3], #1
 800ca7c:	4550      	cmp	r0, sl
 800ca7e:	d1f9      	bne.n	800ca74 <ArtNetNode::HandleDmx()+0x4d4>
 800ca80:	e621      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800ca82:	4643      	mov	r3, r8
 800ca84:	eb05 0008 	add.w	r0, r5, r8
 800ca88:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800ca8c:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800ca90:	45f4      	cmp	ip, lr
 800ca92:	bf38      	it	cc
 800ca94:	46f4      	movcc	ip, lr
 800ca96:	4283      	cmp	r3, r0
 800ca98:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800ca9c:	d1f4      	bne.n	800ca88 <ArtNetNode::HandleDmx()+0x4e8>
 800ca9e:	e612      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800caa0:	4643      	mov	r3, r8
 800caa2:	eb05 0008 	add.w	r0, r5, r8
 800caa6:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800caaa:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800caae:	45f4      	cmp	ip, lr
 800cab0:	bf38      	it	cc
 800cab2:	46f4      	movcc	ip, lr
 800cab4:	4283      	cmp	r3, r0
 800cab6:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800caba:	d1f4      	bne.n	800caa6 <ArtNetNode::HandleDmx()+0x506>
 800cabc:	e603      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cabe:	4643      	mov	r3, r8
 800cac0:	eb05 0008 	add.w	r0, r5, r8
 800cac4:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800cac8:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800cacc:	45f4      	cmp	ip, lr
 800cace:	bf38      	it	cc
 800cad0:	46f4      	movcc	ip, lr
 800cad2:	4283      	cmp	r3, r0
 800cad4:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800cad8:	d1f4      	bne.n	800cac4 <ArtNetNode::HandleDmx()+0x524>
 800cada:	e5f4      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cadc:	f8d6 3854 	ldr.w	r3, [r6, #2132]	@ 0x854
 800cae0:	f8c7 3928 	str.w	r3, [r7, #2344]	@ 0x928
 800cae4:	f108 0e01 	add.w	lr, r8, #1
 800cae8:	f109 0312 	add.w	r3, r9, #18
 800caec:	2d00      	cmp	r5, #0
 800caee:	f43f af0d 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800caf2:	f105 0c12 	add.w	ip, r5, #18
 800caf6:	44cc      	add	ip, r9
 800caf8:	4618      	mov	r0, r3
 800cafa:	f810 ab01 	ldrb.w	sl, [r0], #1
 800cafe:	f80e ab01 	strb.w	sl, [lr], #1
 800cb02:	4560      	cmp	r0, ip
 800cb04:	d1f9      	bne.n	800cafa <ArtNetNode::HandleDmx()+0x55a>
 800cb06:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800cb0a:	4610      	mov	r0, r2
 800cb0c:	f813 eb01 	ldrb.w	lr, [r3], #1
 800cb10:	f800 eb01 	strb.w	lr, [r0], #1
 800cb14:	4563      	cmp	r3, ip
 800cb16:	d1f9      	bne.n	800cb0c <ArtNetNode::HandleDmx()+0x56c>
 800cb18:	e5d5      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cb1a:	4643      	mov	r3, r8
 800cb1c:	eb05 0008 	add.w	r0, r5, r8
 800cb20:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800cb24:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800cb28:	45f4      	cmp	ip, lr
 800cb2a:	bf38      	it	cc
 800cb2c:	46f4      	movcc	ip, lr
 800cb2e:	4283      	cmp	r3, r0
 800cb30:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800cb34:	d1f4      	bne.n	800cb20 <ArtNetNode::HandleDmx()+0x580>
 800cb36:	e5c6      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cb38:	f8d6 3854 	ldr.w	r3, [r6, #2132]	@ 0x854
 800cb3c:	f8c7 3934 	str.w	r3, [r7, #2356]	@ 0x934
 800cb40:	f208 2e01 	addw	lr, r8, #513	@ 0x201
 800cb44:	f109 0312 	add.w	r3, r9, #18
 800cb48:	2d00      	cmp	r5, #0
 800cb4a:	f43f aedf 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800cb4e:	f105 0c12 	add.w	ip, r5, #18
 800cb52:	44cc      	add	ip, r9
 800cb54:	4618      	mov	r0, r3
 800cb56:	f810 ab01 	ldrb.w	sl, [r0], #1
 800cb5a:	f80e ab01 	strb.w	sl, [lr], #1
 800cb5e:	4584      	cmp	ip, r0
 800cb60:	d1f9      	bne.n	800cb56 <ArtNetNode::HandleDmx()+0x5b6>
 800cb62:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800cb66:	4610      	mov	r0, r2
 800cb68:	f813 eb01 	ldrb.w	lr, [r3], #1
 800cb6c:	f800 eb01 	strb.w	lr, [r0], #1
 800cb70:	459c      	cmp	ip, r3
 800cb72:	d1f9      	bne.n	800cb68 <ArtNetNode::HandleDmx()+0x5c8>
 800cb74:	e5a7      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cb76:	4643      	mov	r3, r8
 800cb78:	eb05 0008 	add.w	r0, r5, r8
 800cb7c:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800cb80:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800cb84:	45f4      	cmp	ip, lr
 800cb86:	bf38      	it	cc
 800cb88:	46f4      	movcc	ip, lr
 800cb8a:	4283      	cmp	r3, r0
 800cb8c:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800cb90:	d1f4      	bne.n	800cb7c <ArtNetNode::HandleDmx()+0x5dc>
 800cb92:	e598      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cb94:	4643      	mov	r3, r8
 800cb96:	eb05 0008 	add.w	r0, r5, r8
 800cb9a:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800cb9e:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800cba2:	45f4      	cmp	ip, lr
 800cba4:	bf38      	it	cc
 800cba6:	46f4      	movcc	ip, lr
 800cba8:	4283      	cmp	r3, r0
 800cbaa:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800cbae:	d1f4      	bne.n	800cb9a <ArtNetNode::HandleDmx()+0x5fa>
 800cbb0:	e589      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cbb2:	4643      	mov	r3, r8
 800cbb4:	eb05 0008 	add.w	r0, r5, r8
 800cbb8:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800cbbc:	f893 e200 	ldrb.w	lr, [r3, #512]	@ 0x200
 800cbc0:	45f4      	cmp	ip, lr
 800cbc2:	bf38      	it	cc
 800cbc4:	46f4      	movcc	ip, lr
 800cbc6:	4283      	cmp	r3, r0
 800cbc8:	f883 c400 	strb.w	ip, [r3, #1024]	@ 0x400
 800cbcc:	d1f4      	bne.n	800cbb8 <ArtNetNode::HandleDmx()+0x618>
 800cbce:	e57a      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cbd0:	f8c7 e92c 	str.w	lr, [r7, #2348]	@ 0x92c
 800cbd4:	f8d6 3854 	ldr.w	r3, [r6, #2132]	@ 0x854
 800cbd8:	f8c7 3928 	str.w	r3, [r7, #2344]	@ 0x928
 800cbdc:	f899 300d 	ldrb.w	r3, [r9, #13]
 800cbe0:	f8a7 3930 	strh.w	r3, [r7, #2352]	@ 0x930
 800cbe4:	f108 0e01 	add.w	lr, r8, #1
 800cbe8:	f109 0312 	add.w	r3, r9, #18
 800cbec:	2d00      	cmp	r5, #0
 800cbee:	f43f ae8d 	beq.w	800c90c <ArtNetNode::HandleDmx()+0x36c>
 800cbf2:	f105 0c12 	add.w	ip, r5, #18
 800cbf6:	44cc      	add	ip, r9
 800cbf8:	4618      	mov	r0, r3
 800cbfa:	f810 ab01 	ldrb.w	sl, [r0], #1
 800cbfe:	f80e ab01 	strb.w	sl, [lr], #1
 800cc02:	4584      	cmp	ip, r0
 800cc04:	d1f9      	bne.n	800cbfa <ArtNetNode::HandleDmx()+0x65a>
 800cc06:	f8c8 5601 	str.w	r5, [r8, #1537]	@ 0x601
 800cc0a:	4610      	mov	r0, r2
 800cc0c:	f813 eb01 	ldrb.w	lr, [r3], #1
 800cc10:	f800 eb01 	strb.w	lr, [r0], #1
 800cc14:	459c      	cmp	ip, r3
 800cc16:	d1f9      	bne.n	800cc0c <ArtNetNode::HandleDmx()+0x66c>
 800cc18:	e555      	b.n	800c6c6 <ArtNetNode::HandleDmx()+0x126>
 800cc1a:	4804      	ldr	r0, [pc, #16]	@ (800cc2c <ArtNetNode::HandleDmx()+0x68c>)
 800cc1c:	b005      	add	sp, #20
 800cc1e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc22:	f00d baae 	b.w	801a182 <puts>
 800cc26:	4802      	ldr	r0, [pc, #8]	@ (800cc30 <ArtNetNode::HandleDmx()+0x690>)
 800cc28:	e7f8      	b.n	800cc1c <ArtNetNode::HandleDmx()+0x67c>
 800cc2a:	bf00      	nop
 800cc2c:	0801bf60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, ip, sp, pc}
 800cc30:	0801bf30 	stmdaeq	r1, {r4, r5, r8, r9, sl, fp, ip, sp, pc}

0800cc34 <memcpy.isra.0>:
 800cc34:	440a      	add	r2, r1
 800cc36:	4291      	cmp	r1, r2
 800cc38:	d100      	bne.n	800cc3c <memcpy.isra.0+0x8>
 800cc3a:	4770      	bx	lr
 800cc3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cc40:	f800 3b01 	strb.w	r3, [r0], #1
 800cc44:	e7f7      	b.n	800cc36 <memcpy.isra.0+0x2>

0800cc46 <memcmp>:
 800cc46:	b510      	push	{r4, lr}
 800cc48:	3901      	subs	r1, #1
 800cc4a:	4402      	add	r2, r0
 800cc4c:	4290      	cmp	r0, r2
 800cc4e:	d101      	bne.n	800cc54 <memcmp+0xe>
 800cc50:	2000      	movs	r0, #0
 800cc52:	e005      	b.n	800cc60 <memcmp+0x1a>
 800cc54:	7803      	ldrb	r3, [r0, #0]
 800cc56:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800cc5a:	42a3      	cmp	r3, r4
 800cc5c:	d001      	beq.n	800cc62 <memcmp+0x1c>
 800cc5e:	1b18      	subs	r0, r3, r4
 800cc60:	bd10      	pop	{r4, pc}
 800cc62:	3001      	adds	r0, #1
 800cc64:	e7f2      	b.n	800cc4c <memcmp+0x6>
	...

0800cc68 <ArtNetNode::HandleIpProg()>:
 800cc68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc6c:	f8d0 584c 	ldr.w	r5, [r0, #2124]	@ 0x84c
 800cc70:	4e68      	ldr	r6, [pc, #416]	@ (800ce14 <ArtNetNode::HandleIpProg()+0x1ac>)
 800cc72:	f895 800e 	ldrb.w	r8, [r5, #14]
 800cc76:	7eb7      	ldrb	r7, [r6, #26]
 800cc78:	2300      	movs	r3, #0
 800cc7a:	722b      	strb	r3, [r5, #8]
 800cc7c:	f06f 0306 	mvn.w	r3, #6
 800cc80:	726b      	strb	r3, [r5, #9]
 800cc82:	f008 03c0 	and.w	r3, r8, #192	@ 0xc0
 800cc86:	2bc0      	cmp	r3, #192	@ 0xc0
 800cc88:	b085      	sub	sp, #20
 800cc8a:	4604      	mov	r4, r0
 800cc8c:	f3c7 0740 	ubfx	r7, r7, #1, #1
 800cc90:	d103      	bne.n	800cc9a <ArtNetNode::HandleIpProg()+0x32>
 800cc92:	4b61      	ldr	r3, [pc, #388]	@ (800ce18 <ArtNetNode::HandleIpProg()+0x1b0>)
 800cc94:	6818      	ldr	r0, [r3, #0]
 800cc96:	f006 fe31 	bl	80138fc <Network::EnableDhcp()>
 800cc9a:	f008 0388 	and.w	r3, r8, #136	@ 0x88
 800cc9e:	2b88      	cmp	r3, #136	@ 0x88
 800cca0:	d104      	bne.n	800ccac <ArtNetNode::HandleIpProg()+0x44>
 800cca2:	4b5d      	ldr	r3, [pc, #372]	@ (800ce18 <ArtNetNode::HandleIpProg()+0x1b0>)
 800cca4:	2100      	movs	r1, #0
 800cca6:	6818      	ldr	r0, [r3, #0]
 800cca8:	f006 fdce 	bl	8013848 <Network::SetIp(unsigned long)>
 800ccac:	f008 0384 	and.w	r3, r8, #132	@ 0x84
 800ccb0:	2b84      	cmp	r3, #132	@ 0x84
 800ccb2:	f8df a168 	ldr.w	sl, [pc, #360]	@ 800ce1c <ArtNetNode::HandleIpProg()+0x1b4>
 800ccb6:	f105 0910 	add.w	r9, r5, #16
 800ccba:	d10a      	bne.n	800ccd2 <ArtNetNode::HandleIpProg()+0x6a>
 800ccbc:	4649      	mov	r1, r9
 800ccbe:	4650      	mov	r0, sl
 800ccc0:	2204      	movs	r2, #4
 800ccc2:	f7ff ffb7 	bl	800cc34 <memcpy.isra.0>
 800ccc6:	4b54      	ldr	r3, [pc, #336]	@ (800ce18 <ArtNetNode::HandleIpProg()+0x1b0>)
 800ccc8:	f8da 1000 	ldr.w	r1, [sl]
 800cccc:	6818      	ldr	r0, [r3, #0]
 800ccce:	f006 fdbb 	bl	8013848 <Network::SetIp(unsigned long)>
 800ccd2:	f008 0382 	and.w	r3, r8, #130	@ 0x82
 800ccd6:	2b82      	cmp	r3, #130	@ 0x82
 800ccd8:	d10b      	bne.n	800ccf2 <ArtNetNode::HandleIpProg()+0x8a>
 800ccda:	4850      	ldr	r0, [pc, #320]	@ (800ce1c <ArtNetNode::HandleIpProg()+0x1b4>)
 800ccdc:	f105 0114 	add.w	r1, r5, #20
 800cce0:	2204      	movs	r2, #4
 800cce2:	f7ff ffa7 	bl	800cc34 <memcpy.isra.0>
 800cce6:	4b4c      	ldr	r3, [pc, #304]	@ (800ce18 <ArtNetNode::HandleIpProg()+0x1b0>)
 800cce8:	f8da 1000 	ldr.w	r1, [sl]
 800ccec:	6818      	ldr	r0, [r3, #0]
 800ccee:	f006 fdcb 	bl	8013888 <Network::SetNetmask(unsigned long)>
 800ccf2:	f008 0890 	and.w	r8, r8, #144	@ 0x90
 800ccf6:	f1b8 0f90 	cmp.w	r8, #144	@ 0x90
 800ccfa:	d10b      	bne.n	800cd14 <ArtNetNode::HandleIpProg()+0xac>
 800ccfc:	4847      	ldr	r0, [pc, #284]	@ (800ce1c <ArtNetNode::HandleIpProg()+0x1b4>)
 800ccfe:	f105 011a 	add.w	r1, r5, #26
 800cd02:	2204      	movs	r2, #4
 800cd04:	f7ff ff96 	bl	800cc34 <memcpy.isra.0>
 800cd08:	4b43      	ldr	r3, [pc, #268]	@ (800ce18 <ArtNetNode::HandleIpProg()+0x1b0>)
 800cd0a:	f8da 1000 	ldr.w	r1, [sl]
 800cd0e:	6818      	ldr	r0, [r3, #0]
 800cd10:	f006 fdd6 	bl	80138c0 <Network::SetGatewayIp(unsigned long)>
 800cd14:	7eb3      	ldrb	r3, [r6, #26]
 800cd16:	f8df b104 	ldr.w	fp, [pc, #260]	@ 800ce1c <ArtNetNode::HandleIpProg()+0x1b4>
 800cd1a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cd1e:	019b      	lsls	r3, r3, #6
 800cd20:	76ab      	strb	r3, [r5, #26]
 800cd22:	7eb3      	ldrb	r3, [r6, #26]
 800cd24:	f04f 0a00 	mov.w	sl, #0
 800cd28:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cd2c:	405f      	eors	r7, r3
 800cd2e:	2204      	movs	r2, #4
 800cd30:	6833      	ldr	r3, [r6, #0]
 800cd32:	f885 a01b 	strb.w	sl, [r5, #27]
 800cd36:	4659      	mov	r1, fp
 800cd38:	4648      	mov	r0, r9
 800cd3a:	f8cb 3000 	str.w	r3, [fp]
 800cd3e:	f7ff ff82 	bl	800cc46 <memcmp>
 800cd42:	2204      	movs	r2, #4
 800cd44:	4680      	mov	r8, r0
 800cd46:	4659      	mov	r1, fp
 800cd48:	4648      	mov	r0, r9
 800cd4a:	f7ff ff73 	bl	800cc34 <memcpy.isra.0>
 800cd4e:	6873      	ldr	r3, [r6, #4]
 800cd50:	f8cb 3000 	str.w	r3, [fp]
 800cd54:	f105 0314 	add.w	r3, r5, #20
 800cd58:	2204      	movs	r2, #4
 800cd5a:	4659      	mov	r1, fp
 800cd5c:	4618      	mov	r0, r3
 800cd5e:	9303      	str	r3, [sp, #12]
 800cd60:	f7ff ff71 	bl	800cc46 <memcmp>
 800cd64:	9b03      	ldr	r3, [sp, #12]
 800cd66:	9002      	str	r0, [sp, #8]
 800cd68:	2204      	movs	r2, #4
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	4659      	mov	r1, fp
 800cd6e:	f7ff ff61 	bl	800cc34 <memcpy.isra.0>
 800cd72:	68b3      	ldr	r3, [r6, #8]
 800cd74:	f8cb 3000 	str.w	r3, [fp]
 800cd78:	2204      	movs	r2, #4
 800cd7a:	4659      	mov	r1, fp
 800cd7c:	f105 001a 	add.w	r0, r5, #26
 800cd80:	f7ff ff61 	bl	800cc46 <memcmp>
 800cd84:	9b02      	ldr	r3, [sp, #8]
 800cd86:	ea48 0803 	orr.w	r8, r8, r3
 800cd8a:	ea58 0800 	orrs.w	r8, r8, r0
 800cd8e:	f04f 0204 	mov.w	r2, #4
 800cd92:	4659      	mov	r1, fp
 800cd94:	f105 001c 	add.w	r0, r5, #28
 800cd98:	bf18      	it	ne
 800cd9a:	f047 0701 	orrne.w	r7, r7, #1
 800cd9e:	f7ff ff49 	bl	800cc34 <memcpy.isra.0>
 800cda2:	6832      	ldr	r2, [r6, #0]
 800cda4:	f885 a020 	strb.w	sl, [r5, #32]
 800cda8:	f885 a021 	strb.w	sl, [r5, #33]	@ 0x21
 800cdac:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800cdb0:	f8d4 184c 	ldr.w	r1, [r4, #2124]	@ 0x84c
 800cdb4:	f8d4 3850 	ldr.w	r3, [r4, #2128]	@ 0x850
 800cdb8:	b12a      	cbz	r2, 800cdc6 <ArtNetNode::HandleIpProg()+0x15e>
 800cdba:	f641 1236 	movw	r2, #6454	@ 0x1936
 800cdbe:	9200      	str	r2, [sp, #0]
 800cdc0:	2222      	movs	r2, #34	@ 0x22
 800cdc2:	f007 fe1f 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800cdc6:	b317      	cbz	r7, 800ce0e <ArtNetNode::HandleIpProg()+0x1a6>
 800cdc8:	f894 2a5c 	ldrb.w	r2, [r4, #2652]	@ 0xa5c
 800cdcc:	7eb3      	ldrb	r3, [r6, #26]
 800cdce:	f022 0202 	bic.w	r2, r2, #2
 800cdd2:	f003 0302 	and.w	r3, r3, #2
 800cdd6:	4313      	orrs	r3, r2
 800cdd8:	f884 3a5c 	strb.w	r3, [r4, #2652]	@ 0xa5c
 800cddc:	2204      	movs	r2, #4
 800cdde:	4649      	mov	r1, r9
 800cde0:	f604 1092 	addw	r0, r4, #2450	@ 0x992
 800cde4:	f7ff ff26 	bl	800cc34 <memcpy.isra.0>
 800cde8:	2204      	movs	r2, #4
 800cdea:	4649      	mov	r1, r9
 800cdec:	f604 2057 	addw	r0, r4, #2647	@ 0xa57
 800cdf0:	f7ff ff20 	bl	800cc34 <memcpy.isra.0>
 800cdf4:	f894 390e 	ldrb.w	r3, [r4, #2318]	@ 0x90e
 800cdf8:	b14b      	cbz	r3, 800ce0e <ArtNetNode::HandleIpProg()+0x1a6>
 800cdfa:	2300      	movs	r3, #0
 800cdfc:	f8d4 2850 	ldr.w	r2, [r4, #2128]	@ 0x850
 800ce00:	4619      	mov	r1, r3
 800ce02:	4620      	mov	r0, r4
 800ce04:	b005      	add	sp, #20
 800ce06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce0a:	f000 b869 	b.w	800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
 800ce0e:	b005      	add	sp, #20
 800ce10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce14:	20002954 	andcs	r2, r0, r4, asr r9
 800ce18:	20002934 	andcs	r2, r0, r4, lsr r9
 800ce1c:	20001264 	andcs	r1, r0, r4, ror #4

0800ce20 <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)>:
 800ce20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce24:	2628      	movs	r6, #40	@ 0x28
 800ce26:	fb06 0601 	mla	r6, r6, r1, r0
 800ce2a:	4604      	mov	r4, r0
 800ce2c:	f8d6 7874 	ldr.w	r7, [r6, #2164]	@ 0x874
 800ce30:	2f01      	cmp	r7, #1
 800ce32:	460d      	mov	r5, r1
 800ce34:	4698      	mov	r8, r3
 800ce36:	d135      	bne.n	800cea4 <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)+0x84>
 800ce38:	f8d6 3878 	ldr.w	r3, [r6, #2168]	@ 0x878
 800ce3c:	2b01      	cmp	r3, #1
 800ce3e:	d10d      	bne.n	800ce5c <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)+0x3c>
 800ce40:	2724      	movs	r7, #36	@ 0x24
 800ce42:	fb07 0701 	mla	r7, r7, r1, r0
 800ce46:	f897 6944 	ldrb.w	r6, [r7, #2372]	@ 0x944
 800ce4a:	f002 f8ed 	bl	800f028 <ArtNetNode::GetGoodOutput4(unsigned long)>
 800ce4e:	f006 0676 	and.w	r6, r6, #118	@ 0x76
 800ce52:	f020 0076 	bic.w	r0, r0, #118	@ 0x76
 800ce56:	4306      	orrs	r6, r0
 800ce58:	f887 6944 	strb.w	r6, [r7, #2372]	@ 0x944
 800ce5c:	f894 3a36 	ldrb.w	r3, [r4, #2614]	@ 0xa36
 800ce60:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800ce64:	f884 3a36 	strb.w	r3, [r4, #2614]	@ 0xa36
 800ce68:	2324      	movs	r3, #36	@ 0x24
 800ce6a:	fb03 4305 	mla	r3, r3, r5, r4
 800ce6e:	f893 2944 	ldrb.w	r2, [r3, #2372]	@ 0x944
 800ce72:	f884 2a3e 	strb.w	r2, [r4, #2622]	@ 0xa3e
 800ce76:	f893 3945 	ldrb.w	r3, [r3, #2373]	@ 0x945
 800ce7a:	f884 3a5d 	strb.w	r3, [r4, #2653]	@ 0xa5d
 800ce7e:	2328      	movs	r3, #40	@ 0x28
 800ce80:	2200      	movs	r2, #0
 800ce82:	fb03 4305 	mla	r3, r3, r5, r4
 800ce86:	f884 2a3a 	strb.w	r2, [r4, #2618]	@ 0xa3a
 800ce8a:	f893 386e 	ldrb.w	r3, [r3, #2158]	@ 0x86e
 800ce8e:	f884 3a46 	strb.w	r3, [r4, #2630]	@ 0xa46
 800ce92:	f884 2a42 	strb.w	r2, [r4, #2626]	@ 0xa42
 800ce96:	f8d8 3000 	ldr.w	r3, [r8]
 800ce9a:	3301      	adds	r3, #1
 800ce9c:	f8c8 3000 	str.w	r3, [r8]
 800cea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cea4:	2f00      	cmp	r7, #0
 800cea6:	d1fb      	bne.n	800cea0 <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)+0x80>
 800cea8:	f890 3a36 	ldrb.w	r3, [r0, #2614]	@ 0xa36
 800ceac:	f880 7a3e 	strb.w	r7, [r0, #2622]	@ 0xa3e
 800ceb0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ceb4:	f880 3a36 	strb.w	r3, [r0, #2614]	@ 0xa36
 800ceb8:	230c      	movs	r3, #12
 800ceba:	fb03 0501 	mla	r5, r3, r1, r0
 800cebe:	f880 7a5d 	strb.w	r7, [r0, #2653]	@ 0xa5d
 800cec2:	f895 3979 	ldrb.w	r3, [r5, #2425]	@ 0x979
 800cec6:	f880 3a3a 	strb.w	r3, [r0, #2618]	@ 0xa3a
 800ceca:	f880 7a46 	strb.w	r7, [r0, #2630]	@ 0xa46
 800cece:	f896 386e 	ldrb.w	r3, [r6, #2158]	@ 0x86e
 800ced2:	f880 3a42 	strb.w	r3, [r0, #2626]	@ 0xa42
 800ced6:	6813      	ldr	r3, [r2, #0]
 800ced8:	3301      	adds	r3, #1
 800ceda:	6013      	str	r3, [r2, #0]
 800cedc:	e7e0      	b.n	800cea0 <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)+0x80>
	...

0800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>:
 800cee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cee4:	f8df a144 	ldr.w	sl, [pc, #324]	@ 800d02c <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x14c>
 800cee8:	b089      	sub	sp, #36	@ 0x24
 800ceea:	4698      	mov	r8, r3
 800ceec:	4b4c      	ldr	r3, [pc, #304]	@ (800d020 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x140>)
 800ceee:	9205      	str	r2, [sp, #20]
 800cef0:	f8da 2000 	ldr.w	r2, [sl]
 800cef4:	601a      	str	r2, [r3, #0]
 800cef6:	460f      	mov	r7, r1
 800cef8:	4604      	mov	r4, r0
 800cefa:	f600 1292 	addw	r2, r0, #2450	@ 0x992
 800cefe:	f600 1196 	addw	r1, r0, #2454	@ 0x996
 800cf02:	f813 0b01 	ldrb.w	r0, [r3], #1
 800cf06:	f802 0b01 	strb.w	r0, [r2], #1
 800cf0a:	428a      	cmp	r2, r1
 800cf0c:	d1f9      	bne.n	800cf02 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x22>
 800cf0e:	4a44      	ldr	r2, [pc, #272]	@ (800d020 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x140>)
 800cf10:	f604 2357 	addw	r3, r4, #2647	@ 0xa57
 800cf14:	f604 215b 	addw	r1, r4, #2651	@ 0xa5b
 800cf18:	f812 0b01 	ldrb.w	r0, [r2], #1
 800cf1c:	f803 0b01 	strb.w	r0, [r3], #1
 800cf20:	428b      	cmp	r3, r1
 800cf22:	d1f9      	bne.n	800cf18 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x38>
 800cf24:	2600      	movs	r6, #0
 800cf26:	f504 6508 	add.w	r5, r4, #2176	@ 0x880
 800cf2a:	f604 2b39 	addw	fp, r4, #2617	@ 0xa39
 800cf2e:	46b1      	mov	r9, r6
 800cf30:	b12f      	cbz	r7, 800cf3e <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x5e>
 800cf32:	2e00      	cmp	r6, #0
 800cf34:	bf0c      	ite	eq
 800cf36:	2301      	moveq	r3, #1
 800cf38:	2302      	movne	r3, #2
 800cf3a:	42bb      	cmp	r3, r7
 800cf3c:	d165      	bne.n	800d00a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x12a>
 800cf3e:	f604 2335 	addw	r3, r4, #2613	@ 0xa35
 800cf42:	f803 9f01 	strb.w	r9, [r3, #1]!
 800cf46:	459b      	cmp	fp, r3
 800cf48:	f883 900c 	strb.w	r9, [r3, #12]
 800cf4c:	f883 9010 	strb.w	r9, [r3, #16]
 800cf50:	d1f7      	bne.n	800cf42 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x62>
 800cf52:	f815 2c11 	ldrb.w	r2, [r5, #-17]
 800cf56:	f884 299a 	strb.w	r2, [r4, #2458]	@ 0x99a
 800cf5a:	f815 2c10 	ldrb.w	r2, [r5, #-16]
 800cf5e:	f884 299b 	strb.w	r2, [r4, #2459]	@ 0x99b
 800cf62:	1c72      	adds	r2, r6, #1
 800cf64:	e9cd 9906 	strd	r9, r9, [sp, #24]
 800cf68:	462b      	mov	r3, r5
 800cf6a:	f884 2a5b 	strb.w	r2, [r4, #2651]	@ 0xa5b
 800cf6e:	b967      	cbnz	r7, 800cf8a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xaa>
 800cf70:	f1b8 0f00 	cmp.w	r8, #0
 800cf74:	d009      	beq.n	800cf8a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xaa>
 800cf76:	f835 2c14 	ldrh.w	r2, [r5, #-20]
 800cf7a:	f8b8 100a 	ldrh.w	r1, [r8, #10]
 800cf7e:	4291      	cmp	r1, r2
 800cf80:	d843      	bhi.n	800d00a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x12a>
 800cf82:	f8b8 1008 	ldrh.w	r1, [r8, #8]
 800cf86:	4291      	cmp	r1, r2
 800cf88:	d33f      	bcc.n	800d00a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x12a>
 800cf8a:	f604 12a2 	addw	r2, r4, #2466	@ 0x9a2
 800cf8e:	f105 0112 	add.w	r1, r5, #18
 800cf92:	f813 0b01 	ldrb.w	r0, [r3], #1
 800cf96:	f802 0b01 	strb.w	r0, [r2], #1
 800cf9a:	428b      	cmp	r3, r1
 800cf9c:	d1f9      	bne.n	800cf92 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xb2>
 800cf9e:	4620      	mov	r0, r4
 800cfa0:	ab06      	add	r3, sp, #24
 800cfa2:	aa07      	add	r2, sp, #28
 800cfa4:	4631      	mov	r1, r6
 800cfa6:	f7ff ff3b 	bl	800ce20 <ArtNetNode::ProcessPollRelply(unsigned long, unsigned long&, unsigned long&)>
 800cfaa:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800cfae:	b128      	cbz	r0, 800cfbc <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0xdc>
 800cfb0:	6803      	ldr	r3, [r0, #0]
 800cfb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cfb4:	4798      	blx	r3
 800cfb6:	ba40      	rev16	r0, r0
 800cfb8:	f8a4 0a6a 	strh.w	r0, [r4, #2666]	@ 0xa6a
 800cfbc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cfc0:	4293      	cmp	r3, r2
 800cfc2:	bf38      	it	cc
 800cfc4:	4613      	movcc	r3, r2
 800cfc6:	f884 3a35 	strb.w	r3, [r4, #2613]	@ 0xa35
 800cfca:	f8d4 38cc 	ldr.w	r3, [r4, #2252]	@ 0x8cc
 800cfce:	4a15      	ldr	r2, [pc, #84]	@ (800d024 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x144>)
 800cfd0:	3301      	adds	r3, #1
 800cfd2:	f8c4 38cc 	str.w	r3, [r4, #2252]	@ 0x8cc
 800cfd6:	9202      	str	r2, [sp, #8]
 800cfd8:	2208      	movs	r2, #8
 800cfda:	e9cd 3200 	strd	r3, r2, [sp]
 800cfde:	2140      	movs	r1, #64	@ 0x40
 800cfe0:	f894 390c 	ldrb.w	r3, [r4, #2316]	@ 0x90c
 800cfe4:	4a10      	ldr	r2, [pc, #64]	@ (800d028 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x148>)
 800cfe6:	f604 10f4 	addw	r0, r4, #2548	@ 0x9f4
 800cfea:	f00d f89d 	bl	801a128 <snprintf>
 800cfee:	f8da 3000 	ldr.w	r3, [sl]
 800cff2:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800cff6:	f604 1188 	addw	r1, r4, #2440	@ 0x988
 800cffa:	b133      	cbz	r3, 800d00a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x12a>
 800cffc:	f641 1336 	movw	r3, #6454	@ 0x1936
 800d000:	9300      	str	r3, [sp, #0]
 800d002:	22ef      	movs	r2, #239	@ 0xef
 800d004:	9b05      	ldr	r3, [sp, #20]
 800d006:	f007 fcfd 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800d00a:	3528      	adds	r5, #40	@ 0x28
 800d00c:	b12e      	cbz	r6, 800d01a <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x13a>
 800d00e:	2300      	movs	r3, #0
 800d010:	f884 3913 	strb.w	r3, [r4, #2323]	@ 0x913
 800d014:	b009      	add	sp, #36	@ 0x24
 800d016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d01a:	2601      	movs	r6, #1
 800d01c:	e788      	b.n	800cf30 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)+0x50>
 800d01e:	bf00      	nop
 800d020:	20001268 	andcs	r1, r0, r8, ror #4
 800d024:	0801aff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 800d028:	0801afe0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, fp, sp, pc}
 800d02c:	20002954 	andcs	r2, r0, r4, asr r9

0800d030 <ArtNetNode::HandlePoll()>:
 800d030:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d032:	f8d0 284c 	ldr.w	r2, [r0, #2124]	@ 0x84c
 800d036:	7b13      	ldrb	r3, [r2, #12]
 800d038:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d03c:	f880 390e 	strb.w	r3, [r0, #2318]	@ 0x90e
 800d040:	7b13      	ldrb	r3, [r2, #12]
 800d042:	f013 0304 	ands.w	r3, r3, #4
 800d046:	d04c      	beq.n	800d0e2 <ArtNetNode::HandlePoll()+0xb2>
 800d048:	f8d0 18c8 	ldr.w	r1, [r0, #2248]	@ 0x8c8
 800d04c:	f890 4910 	ldrb.w	r4, [r0, #2320]	@ 0x910
 800d050:	2301      	movs	r3, #1
 800d052:	f880 390f 	strb.w	r3, [r0, #2319]	@ 0x90f
 800d056:	b979      	cbnz	r1, 800d078 <ArtNetNode::HandlePoll()+0x48>
 800d058:	f8d0 3850 	ldr.w	r3, [r0, #2128]	@ 0x850
 800d05c:	f8c0 38c8 	str.w	r3, [r0, #2248]	@ 0x8c8
 800d060:	b1bc      	cbz	r4, 800d092 <ArtNetNode::HandlePoll()+0x62>
 800d062:	7b53      	ldrb	r3, [r2, #13]
 800d064:	f890 1919 	ldrb.w	r1, [r0, #2329]	@ 0x919
 800d068:	428b      	cmp	r3, r1
 800d06a:	bf28      	it	cs
 800d06c:	460b      	movcs	r3, r1
 800d06e:	f880 3919 	strb.w	r3, [r0, #2329]	@ 0x919
 800d072:	4b1e      	ldr	r3, [pc, #120]	@ (800d0ec <ArtNetNode::HandlePoll()+0xbc>)
 800d074:	68db      	ldr	r3, [r3, #12]
 800d076:	e014      	b.n	800d0a2 <ArtNetNode::HandlePoll()+0x72>
 800d078:	2c00      	cmp	r4, #0
 800d07a:	d1f2      	bne.n	800d062 <ArtNetNode::HandlePoll()+0x32>
 800d07c:	f8d0 4850 	ldr.w	r4, [r0, #2128]	@ 0x850
 800d080:	42a1      	cmp	r1, r4
 800d082:	d006      	beq.n	800d092 <ArtNetNode::HandlePoll()+0x62>
 800d084:	4919      	ldr	r1, [pc, #100]	@ (800d0ec <ArtNetNode::HandlePoll()+0xbc>)
 800d086:	f880 3910 	strb.w	r3, [r0, #2320]	@ 0x910
 800d08a:	68c9      	ldr	r1, [r1, #12]
 800d08c:	f8c0 18c4 	str.w	r1, [r0, #2244]	@ 0x8c4
 800d090:	e7e7      	b.n	800d062 <ArtNetNode::HandlePoll()+0x32>
 800d092:	7b53      	ldrb	r3, [r2, #13]
 800d094:	f880 3919 	strb.w	r3, [r0, #2329]	@ 0x919
 800d098:	7b13      	ldrb	r3, [r2, #12]
 800d09a:	071b      	lsls	r3, r3, #28
 800d09c:	d5e9      	bpl.n	800d072 <ArtNetNode::HandlePoll()+0x42>
 800d09e:	f8d0 3850 	ldr.w	r3, [r0, #2128]	@ 0x850
 800d0a2:	f8c0 38c4 	str.w	r3, [r0, #2244]	@ 0x8c4
 800d0a6:	7b13      	ldrb	r3, [r2, #12]
 800d0a8:	f013 0301 	ands.w	r3, r3, #1
 800d0ac:	bf1a      	itte	ne
 800d0ae:	7bd4      	ldrbne	r4, [r2, #15]
 800d0b0:	7c53      	ldrbne	r3, [r2, #17]
 800d0b2:	f647 74ff 	movweq	r4, #32767	@ 0x7fff
 800d0b6:	f640 02dc 	movw	r2, #2268	@ 0x8dc
 800d0ba:	f640 150c 	movw	r5, #2316	@ 0x90c
 800d0be:	f1a0 060c 	sub.w	r6, r0, #12
 800d0c2:	42aa      	cmp	r2, r5
 800d0c4:	d00c      	beq.n	800d0e0 <ArtNetNode::HandlePoll()+0xb0>
 800d0c6:	f102 010c 	add.w	r1, r2, #12
 800d0ca:	5877      	ldr	r7, [r6, r1]
 800d0cc:	b967      	cbnz	r7, 800d0e8 <ArtNetNode::HandlePoll()+0xb8>
 800d0ce:	4d08      	ldr	r5, [pc, #32]	@ (800d0f0 <ArtNetNode::HandlePoll()+0xc0>)
 800d0d0:	682d      	ldr	r5, [r5, #0]
 800d0d2:	5085      	str	r5, [r0, r2]
 800d0d4:	1881      	adds	r1, r0, r2
 800d0d6:	f8d0 2850 	ldr.w	r2, [r0, #2128]	@ 0x850
 800d0da:	604a      	str	r2, [r1, #4]
 800d0dc:	810c      	strh	r4, [r1, #8]
 800d0de:	814b      	strh	r3, [r1, #10]
 800d0e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d0e2:	f880 390f 	strb.w	r3, [r0, #2319]	@ 0x90f
 800d0e6:	e7dc      	b.n	800d0a2 <ArtNetNode::HandlePoll()+0x72>
 800d0e8:	460a      	mov	r2, r1
 800d0ea:	e7ea      	b.n	800d0c2 <ArtNetNode::HandlePoll()+0x92>
 800d0ec:	20002954 	andcs	r2, r0, r4, asr r9
 800d0f0:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

0800d0f4 <ArtNetNode::HandleSync()>:
 800d0f4:	f890 3911 	ldrb.w	r3, [r0, #2321]	@ 0x911
 800d0f8:	b510      	push	{r4, lr}
 800d0fa:	4604      	mov	r4, r0
 800d0fc:	b39b      	cbz	r3, 800d166 <ArtNetNode::HandleSync()+0x72>
 800d0fe:	f890 3948 	ldrb.w	r3, [r0, #2376]	@ 0x948
 800d102:	b12b      	cbz	r3, 800d110 <ArtNetNode::HandleSync()+0x1c>
 800d104:	f8d0 0860 	ldr.w	r0, [r0, #2144]	@ 0x860
 800d108:	6803      	ldr	r3, [r0, #0]
 800d10a:	2100      	movs	r1, #0
 800d10c:	695b      	ldr	r3, [r3, #20]
 800d10e:	4798      	blx	r3
 800d110:	f894 396c 	ldrb.w	r3, [r4, #2412]	@ 0x96c
 800d114:	b12b      	cbz	r3, 800d122 <ArtNetNode::HandleSync()+0x2e>
 800d116:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800d11a:	6803      	ldr	r3, [r0, #0]
 800d11c:	2101      	movs	r1, #1
 800d11e:	695b      	ldr	r3, [r3, #20]
 800d120:	4798      	blx	r3
 800d122:	f8d4 0860 	ldr.w	r0, [r4, #2144]	@ 0x860
 800d126:	6803      	ldr	r3, [r0, #0]
 800d128:	699b      	ldr	r3, [r3, #24]
 800d12a:	4798      	blx	r3
 800d12c:	f894 3948 	ldrb.w	r3, [r4, #2376]	@ 0x948
 800d130:	b153      	cbz	r3, 800d148 <ArtNetNode::HandleSync()+0x54>
 800d132:	2300      	movs	r3, #0
 800d134:	f884 3948 	strb.w	r3, [r4, #2376]	@ 0x948
 800d138:	f894 3947 	ldrb.w	r3, [r4, #2375]	@ 0x947
 800d13c:	b923      	cbnz	r3, 800d148 <ArtNetNode::HandleSync()+0x54>
 800d13e:	2301      	movs	r3, #1
 800d140:	f884 3947 	strb.w	r3, [r4, #2375]	@ 0x947
 800d144:	f884 3913 	strb.w	r3, [r4, #2323]	@ 0x913
 800d148:	f894 396c 	ldrb.w	r3, [r4, #2412]	@ 0x96c
 800d14c:	b153      	cbz	r3, 800d164 <ArtNetNode::HandleSync()+0x70>
 800d14e:	2300      	movs	r3, #0
 800d150:	f884 396c 	strb.w	r3, [r4, #2412]	@ 0x96c
 800d154:	f894 396b 	ldrb.w	r3, [r4, #2411]	@ 0x96b
 800d158:	b923      	cbnz	r3, 800d164 <ArtNetNode::HandleSync()+0x70>
 800d15a:	2301      	movs	r3, #1
 800d15c:	f884 396b 	strb.w	r3, [r4, #2411]	@ 0x96b
 800d160:	f884 3913 	strb.w	r3, [r4, #2323]	@ 0x913
 800d164:	bd10      	pop	{r4, pc}
 800d166:	2301      	movs	r3, #1
 800d168:	f880 3911 	strb.w	r3, [r0, #2321]	@ 0x911
 800d16c:	e7fa      	b.n	800d164 <ArtNetNode::HandleSync()+0x70>

0800d16e <ArtNetNode::HandleTimeSync()>:
 800d16e:	4770      	bx	lr

0800d170 <ArtNetNode::Print()>:
 800d170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d172:	4a4a      	ldr	r2, [pc, #296]	@ (800d29c <ArtNetNode::Print()+0x12c>)
 800d174:	4604      	mov	r4, r0
 800d176:	7853      	ldrb	r3, [r2, #1]
 800d178:	4849      	ldr	r0, [pc, #292]	@ (800d2a0 <ArtNetNode::Print()+0x130>)
 800d17a:	7812      	ldrb	r2, [r2, #0]
 800d17c:	2104      	movs	r1, #4
 800d17e:	f00c ffab 	bl	801a0d8 <printf>
 800d182:	4848      	ldr	r0, [pc, #288]	@ (800d2a4 <ArtNetNode::Print()+0x134>)
 800d184:	f604 11b4 	addw	r1, r4, #2484	@ 0x9b4
 800d188:	f00c ffa6 	bl	801a0d8 <printf>
 800d18c:	f894 3917 	ldrb.w	r3, [r4, #2327]	@ 0x917
 800d190:	2b00      	cmp	r3, #0
 800d192:	d03d      	beq.n	800d210 <ArtNetNode::Print()+0xa0>
 800d194:	4844      	ldr	r0, [pc, #272]	@ (800d2a8 <ArtNetNode::Print()+0x138>)
 800d196:	f00c ff9f 	bl	801a0d8 <printf>
 800d19a:	4625      	mov	r5, r4
 800d19c:	4627      	mov	r7, r4
 800d19e:	2600      	movs	r6, #0
 800d1a0:	f8d5 3874 	ldr.w	r3, [r5, #2164]	@ 0x874
 800d1a4:	2b01      	cmp	r3, #1
 800d1a6:	d12f      	bne.n	800d208 <ArtNetNode::Print()+0x98>
 800d1a8:	f897 3944 	ldrb.w	r3, [r7, #2372]	@ 0x944
 800d1ac:	4a3f      	ldr	r2, [pc, #252]	@ (800d2ac <ArtNetNode::Print()+0x13c>)
 800d1ae:	4840      	ldr	r0, [pc, #256]	@ (800d2b0 <ArtNetNode::Print()+0x140>)
 800d1b0:	f013 0f02 	tst.w	r3, #2
 800d1b4:	4631      	mov	r1, r6
 800d1b6:	4b3f      	ldr	r3, [pc, #252]	@ (800d2b4 <ArtNetNode::Print()+0x144>)
 800d1b8:	bf18      	it	ne
 800d1ba:	4613      	movne	r3, r2
 800d1bc:	f8b5 286c 	ldrh.w	r2, [r5, #2156]	@ 0x86c
 800d1c0:	f00c ff8a 	bl	801a0d8 <printf>
 800d1c4:	4631      	mov	r1, r6
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	f7fe fbec 	bl	800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>
 800d1cc:	4a3a      	ldr	r2, [pc, #232]	@ (800d2b8 <ArtNetNode::Print()+0x148>)
 800d1ce:	493b      	ldr	r1, [pc, #236]	@ (800d2bc <ArtNetNode::Print()+0x14c>)
 800d1d0:	2800      	cmp	r0, #0
 800d1d2:	bf18      	it	ne
 800d1d4:	4611      	movne	r1, r2
 800d1d6:	483a      	ldr	r0, [pc, #232]	@ (800d2c0 <ArtNetNode::Print()+0x150>)
 800d1d8:	f00c ff7e 	bl	801a0d8 <printf>
 800d1dc:	4a39      	ldr	r2, [pc, #228]	@ (800d2c4 <ArtNetNode::Print()+0x154>)
 800d1de:	4b3a      	ldr	r3, [pc, #232]	@ (800d2c8 <ArtNetNode::Print()+0x158>)
 800d1e0:	f8d5 1878 	ldr.w	r1, [r5, #2168]	@ 0x878
 800d1e4:	4836      	ldr	r0, [pc, #216]	@ (800d2c0 <ArtNetNode::Print()+0x150>)
 800d1e6:	2900      	cmp	r1, #0
 800d1e8:	bf14      	ite	ne
 800d1ea:	4611      	movne	r1, r2
 800d1ec:	4619      	moveq	r1, r3
 800d1ee:	f00c ff73 	bl	801a0d8 <printf>
 800d1f2:	f997 1945 	ldrsb.w	r1, [r7, #2373]	@ 0x945
 800d1f6:	4a35      	ldr	r2, [pc, #212]	@ (800d2cc <ArtNetNode::Print()+0x15c>)
 800d1f8:	4b35      	ldr	r3, [pc, #212]	@ (800d2d0 <ArtNetNode::Print()+0x160>)
 800d1fa:	4836      	ldr	r0, [pc, #216]	@ (800d2d4 <ArtNetNode::Print()+0x164>)
 800d1fc:	ea12 0121 	ands.w	r1, r2, r1, asr #32
 800d200:	bf38      	it	cc
 800d202:	4619      	movcc	r1, r3
 800d204:	f00c ff68 	bl	801a0d8 <printf>
 800d208:	3528      	adds	r5, #40	@ 0x28
 800d20a:	3724      	adds	r7, #36	@ 0x24
 800d20c:	2e00      	cmp	r6, #0
 800d20e:	d03e      	beq.n	800d28e <ArtNetNode::Print()+0x11e>
 800d210:	f894 3918 	ldrb.w	r3, [r4, #2328]	@ 0x918
 800d214:	b363      	cbz	r3, 800d270 <ArtNetNode::Print()+0x100>
 800d216:	4830      	ldr	r0, [pc, #192]	@ (800d2d8 <ArtNetNode::Print()+0x168>)
 800d218:	f00c ff5e 	bl	801a0d8 <printf>
 800d21c:	4625      	mov	r5, r4
 800d21e:	2600      	movs	r6, #0
 800d220:	f8d5 3874 	ldr.w	r3, [r5, #2164]	@ 0x874
 800d224:	bb13      	cbnz	r3, 800d26c <ArtNetNode::Print()+0xfc>
 800d226:	f8b5 286c 	ldrh.w	r2, [r5, #2156]	@ 0x86c
 800d22a:	482c      	ldr	r0, [pc, #176]	@ (800d2dc <ArtNetNode::Print()+0x16c>)
 800d22c:	4631      	mov	r1, r6
 800d22e:	f00c ff53 	bl	801a0d8 <printf>
 800d232:	f8d5 3878 	ldr.w	r3, [r5, #2168]	@ 0x878
 800d236:	b9ab      	cbnz	r3, 800d264 <ArtNetNode::Print()+0xf4>
 800d238:	4273      	negs	r3, r6
 800d23a:	f504 6217 	add.w	r2, r4, #2416	@ 0x970
 800d23e:	f003 030c 	and.w	r3, r3, #12
 800d242:	58d1      	ldr	r1, [r2, r3]
 800d244:	b909      	cbnz	r1, 800d24a <ArtNetNode::Print()+0xda>
 800d246:	4b26      	ldr	r3, [pc, #152]	@ (800d2e0 <ArtNetNode::Print()+0x170>)
 800d248:	68d9      	ldr	r1, [r3, #12]
 800d24a:	4826      	ldr	r0, [pc, #152]	@ (800d2e4 <ArtNetNode::Print()+0x174>)
 800d24c:	0e0b      	lsrs	r3, r1, #24
 800d24e:	9300      	str	r3, [sp, #0]
 800d250:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800d254:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d258:	b2c9      	uxtb	r1, r1
 800d25a:	f00c ff3d 	bl	801a0d8 <printf>
 800d25e:	f8d5 3878 	ldr.w	r3, [r5, #2168]	@ 0x878
 800d262:	b1c3      	cbz	r3, 800d296 <ArtNetNode::Print()+0x126>
 800d264:	4917      	ldr	r1, [pc, #92]	@ (800d2c4 <ArtNetNode::Print()+0x154>)
 800d266:	481b      	ldr	r0, [pc, #108]	@ (800d2d4 <ArtNetNode::Print()+0x164>)
 800d268:	f00c ff36 	bl	801a0d8 <printf>
 800d26c:	3528      	adds	r5, #40	@ 0x28
 800d26e:	b186      	cbz	r6, 800d292 <ArtNetNode::Print()+0x122>
 800d270:	f894 3917 	ldrb.w	r3, [r4, #2327]	@ 0x917
 800d274:	b12b      	cbz	r3, 800d282 <ArtNetNode::Print()+0x112>
 800d276:	f894 38c0 	ldrb.w	r3, [r4, #2240]	@ 0x8c0
 800d27a:	b113      	cbz	r3, 800d282 <ArtNetNode::Print()+0x112>
 800d27c:	481a      	ldr	r0, [pc, #104]	@ (800d2e8 <ArtNetNode::Print()+0x178>)
 800d27e:	f00c ff2b 	bl	801a0d8 <printf>
 800d282:	4620      	mov	r0, r4
 800d284:	b003      	add	sp, #12
 800d286:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d28a:	f002 be4b 	b.w	800ff24 <E131Bridge::Print()>
 800d28e:	2601      	movs	r6, #1
 800d290:	e786      	b.n	800d1a0 <ArtNetNode::Print()+0x30>
 800d292:	2601      	movs	r6, #1
 800d294:	e7c4      	b.n	800d220 <ArtNetNode::Print()+0xb0>
 800d296:	490c      	ldr	r1, [pc, #48]	@ (800d2c8 <ArtNetNode::Print()+0x158>)
 800d298:	e7e5      	b.n	800d266 <ArtNetNode::Print()+0xf6>
 800d29a:	bf00      	nop
 800d29c:	0801e7e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 800d2a0:	0801b028 	stmdaeq	r1, {r3, r5, ip, sp, pc}
 800d2a4:	0801b03b 	stmdaeq	r1, {r0, r1, r3, r4, r5, ip, sp, pc}
 800d2a8:	0801b04d 	stmdaeq	r1, {r0, r2, r3, r6, ip, sp, pc}
 800d2ac:	0801b003 	stmdaeq	r1, {r0, r1, ip, sp, pc}
 800d2b0:	0801b056 	stmdaeq	r1, {r1, r2, r4, r6, ip, sp, pc}
 800d2b4:	0801afff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 800d2b8:	0801b00d 	stmdaeq	r1, {r0, r2, r3, ip, sp, pc}
 800d2bc:	0801b007 	stmdaeq	r1, {r0, r1, r2, ip, sp, pc}
 800d2c0:	0801b587 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, ip, sp, pc}
 800d2c4:	0801b01b 	stmdaeq	r1, {r0, r1, r3, r4, ip, sp, pc}
 800d2c8:	0801b013 	stmdaeq	r1, {r0, r1, r4, ip, sp, pc}
 800d2cc:	0801b024 	stmdaeq	r1, {r2, r5, ip, sp, pc}
 800d2d0:	0801b020 	stmdaeq	r1, {r5, ip, sp, pc}
 800d2d4:	0801b508 	stmdaeq	r1, {r3, r8, sl, ip, sp, pc}
 800d2d8:	0801b06a 	stmdaeq	r1, {r1, r3, r5, r6, ip, sp, pc}
 800d2dc:	0801b072 	stmdaeq	r1, {r1, r4, r5, r6, ip, sp, pc}
 800d2e0:	20002954 	andcs	r2, r0, r4, asr r9
 800d2e4:	0801b083 	stmdaeq	r1, {r0, r1, r7, ip, sp, pc}
 800d2e8:	0801b093 	stmdaeq	r1, {r0, r1, r4, r7, ip, sp, pc}

0800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>:
 800d2ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2ee:	88c6      	ldrh	r6, [r0, #6]
 800d2f0:	8885      	ldrh	r5, [r0, #4]
 800d2f2:	42ae      	cmp	r6, r5
 800d2f4:	d216      	bcs.n	800d324 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x38>
 800d2f6:	4604      	mov	r4, r0
 800d2f8:	6800      	ldr	r0, [r0, #0]
 800d2fa:	1bad      	subs	r5, r5, r6
 800d2fc:	4430      	add	r0, r6
 800d2fe:	7a26      	ldrb	r6, [r4, #8]
 800d300:	b923      	cbnz	r3, 800d30c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x20>
 800d302:	b926      	cbnz	r6, 800d30e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x22>
 800d304:	9200      	str	r2, [sp, #0]
 800d306:	460b      	mov	r3, r1
 800d308:	4a09      	ldr	r2, [pc, #36]	@ (800d330 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x44>)
 800d30a:	e003      	b.n	800d314 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800d30c:	b166      	cbz	r6, 800d328 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x3c>
 800d30e:	9200      	str	r2, [sp, #0]
 800d310:	4a08      	ldr	r2, [pc, #32]	@ (800d334 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x48>)
 800d312:	460b      	mov	r3, r1
 800d314:	4629      	mov	r1, r5
 800d316:	f00c ff07 	bl	801a128 <snprintf>
 800d31a:	4285      	cmp	r5, r0
 800d31c:	bfa2      	ittt	ge
 800d31e:	88e3      	ldrhge	r3, [r4, #6]
 800d320:	181b      	addge	r3, r3, r0
 800d322:	80e3      	strhge	r3, [r4, #6]
 800d324:	b002      	add	sp, #8
 800d326:	bd70      	pop	{r4, r5, r6, pc}
 800d328:	9200      	str	r2, [sp, #0]
 800d32a:	460b      	mov	r3, r1
 800d32c:	4a02      	ldr	r2, [pc, #8]	@ (800d338 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x4c>)
 800d32e:	e7f1      	b.n	800d314 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]+0x28>
 800d330:	0801ad5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp, sp, pc}
 800d334:	0801ad52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, sp, pc}
 800d338:	0801ad5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sl, fp, sp, pc}

0800d33c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800d33c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d33e:	460b      	mov	r3, r1
 800d340:	8885      	ldrh	r5, [r0, #4]
 800d342:	88c1      	ldrh	r1, [r0, #6]
 800d344:	42a9      	cmp	r1, r5
 800d346:	d214      	bcs.n	800d372 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800d348:	4604      	mov	r4, r0
 800d34a:	6800      	ldr	r0, [r0, #0]
 800d34c:	1a6d      	subs	r5, r5, r1
 800d34e:	4408      	add	r0, r1
 800d350:	7a21      	ldrb	r1, [r4, #8]
 800d352:	b91a      	cbnz	r2, 800d35c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800d354:	b919      	cbnz	r1, 800d35e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800d356:	4a0a      	ldr	r2, [pc, #40]	@ (800d380 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800d358:	9100      	str	r1, [sp, #0]
 800d35a:	e002      	b.n	800d362 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d35c:	b159      	cbz	r1, 800d376 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800d35e:	9200      	str	r2, [sp, #0]
 800d360:	4a08      	ldr	r2, [pc, #32]	@ (800d384 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800d362:	4629      	mov	r1, r5
 800d364:	f00c fee0 	bl	801a128 <snprintf>
 800d368:	4285      	cmp	r5, r0
 800d36a:	bfa2      	ittt	ge
 800d36c:	88e3      	ldrhge	r3, [r4, #6]
 800d36e:	181b      	addge	r3, r3, r0
 800d370:	80e3      	strhge	r3, [r4, #6]
 800d372:	b003      	add	sp, #12
 800d374:	bd30      	pop	{r4, r5, pc}
 800d376:	2201      	movs	r2, #1
 800d378:	9200      	str	r2, [sp, #0]
 800d37a:	4a03      	ldr	r2, [pc, #12]	@ (800d388 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800d37c:	e7f1      	b.n	800d362 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d37e:	bf00      	nop
 800d380:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 800d384:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 800d388:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

0800d38c <ArtNetParamsStore::Copy(artnetparams::Params*)>:
 800d38c:	b507      	push	{r0, r1, r2, lr}
 800d38e:	2300      	movs	r3, #0
 800d390:	2101      	movs	r1, #1
 800d392:	e9cd 3100 	strd	r3, r1, [sp]
 800d396:	4602      	mov	r2, r0
 800d398:	4804      	ldr	r0, [pc, #16]	@ (800d3ac <ArtNetParamsStore::Copy(artnetparams::Params*)+0x20>)
 800d39a:	23dc      	movs	r3, #220	@ 0xdc
 800d39c:	6800      	ldr	r0, [r0, #0]
 800d39e:	2119      	movs	r1, #25
 800d3a0:	f009 f83c 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800d3a4:	b003      	add	sp, #12
 800d3a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d3aa:	bf00      	nop
 800d3ac:	20002a00 	andcs	r2, r0, r0, lsl #20

0800d3b0 <ArtNetParams::ArtNetParams()>:
 800d3b0:	4b11      	ldr	r3, [pc, #68]	@ (800d3f8 <ArtNetParams::ArtNetParams()+0x48>)
 800d3b2:	b570      	push	{r4, r5, r6, lr}
 800d3b4:	22dc      	movs	r2, #220	@ 0xdc
 800d3b6:	4604      	mov	r4, r0
 800d3b8:	2100      	movs	r1, #0
 800d3ba:	681e      	ldr	r6, [r3, #0]
 800d3bc:	f00c fba8 	bl	8019b10 <memset>
 800d3c0:	2301      	movs	r3, #1
 800d3c2:	7163      	strb	r3, [r4, #5]
 800d3c4:	2302      	movs	r3, #2
 800d3c6:	f8a4 3007 	strh.w	r3, [r4, #7]
 800d3ca:	2303      	movs	r3, #3
 800d3cc:	f8a4 3009 	strh.w	r3, [r4, #9]
 800d3d0:	2304      	movs	r3, #4
 800d3d2:	f8a4 300b 	strh.w	r3, [r4, #11]
 800d3d6:	f04f 3364 	mov.w	r3, #1684300900	@ 0x64646464
 800d3da:	2500      	movs	r5, #0
 800d3dc:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 800d3e0:	2355      	movs	r3, #85	@ 0x55
 800d3e2:	4630      	mov	r0, r6
 800d3e4:	71a5      	strb	r5, [r4, #6]
 800d3e6:	7363      	strb	r3, [r4, #13]
 800d3e8:	73a5      	strb	r5, [r4, #14]
 800d3ea:	f104 0113 	add.w	r1, r4, #19
 800d3ee:	f7fe f9a1 	bl	800b734 <ArtNetNode::GetLongNameDefault(char*)>
 800d3f2:	74a5      	strb	r5, [r4, #18]
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	bd70      	pop	{r4, r5, r6, pc}
 800d3f8:	20001260 	andcs	r1, r0, r0, ror #4

0800d3fc <ArtNetParams::Load()>:
 800d3fc:	b508      	push	{r3, lr}
 800d3fe:	2200      	movs	r2, #0
 800d400:	7002      	strb	r2, [r0, #0]
 800d402:	7042      	strb	r2, [r0, #1]
 800d404:	7082      	strb	r2, [r0, #2]
 800d406:	70c2      	strb	r2, [r0, #3]
 800d408:	f7ff ffc0 	bl	800d38c <ArtNetParamsStore::Copy(artnetparams::Params*)>
 800d40c:	2001      	movs	r0, #1
 800d40e:	bd08      	pop	{r3, pc}

0800d410 <ArtNetParams::Load(char const*, unsigned long)>:
 800d410:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d412:	2500      	movs	r5, #0
 800d414:	b087      	sub	sp, #28
 800d416:	4604      	mov	r4, r0
 800d418:	460e      	mov	r6, r1
 800d41a:	4617      	mov	r7, r2
 800d41c:	7005      	strb	r5, [r0, #0]
 800d41e:	7045      	strb	r5, [r0, #1]
 800d420:	7085      	strb	r5, [r0, #2]
 800d422:	70c5      	strb	r5, [r0, #3]
 800d424:	4602      	mov	r2, r0
 800d426:	490c      	ldr	r1, [pc, #48]	@ (800d458 <ArtNetParams::Load(char const*, unsigned long)+0x48>)
 800d428:	a804      	add	r0, sp, #16
 800d42a:	f009 fcd3 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d42e:	463a      	mov	r2, r7
 800d430:	4631      	mov	r1, r6
 800d432:	a804      	add	r0, sp, #16
 800d434:	f009 fcd2 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 800d438:	e9cd 5501 	strd	r5, r5, [sp, #4]
 800d43c:	23dc      	movs	r3, #220	@ 0xdc
 800d43e:	4807      	ldr	r0, [pc, #28]	@ (800d45c <ArtNetParams::Load(char const*, unsigned long)+0x4c>)
 800d440:	9300      	str	r3, [sp, #0]
 800d442:	462a      	mov	r2, r5
 800d444:	4623      	mov	r3, r4
 800d446:	2119      	movs	r1, #25
 800d448:	6800      	ldr	r0, [r0, #0]
 800d44a:	f008 ffc1 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800d44e:	a804      	add	r0, sp, #16
 800d450:	f009 fcc3 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 800d454:	b007      	add	sp, #28
 800d456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d458:	0800d939 	stmdaeq	r0, {r0, r3, r4, r5, r8, fp, ip, lr, pc}
 800d45c:	20002a00 	andcs	r2, r0, r0, lsl #20

0800d460 <ArtNetParams::SetBool(unsigned char, unsigned long)>:
 800d460:	6803      	ldr	r3, [r0, #0]
 800d462:	b111      	cbz	r1, 800d46a <ArtNetParams::SetBool(unsigned char, unsigned long)+0xa>
 800d464:	4313      	orrs	r3, r2
 800d466:	6003      	str	r3, [r0, #0]
 800d468:	4770      	bx	lr
 800d46a:	ea23 0302 	bic.w	r3, r3, r2
 800d46e:	e7fa      	b.n	800d466 <ArtNetParams::SetBool(unsigned char, unsigned long)+0x6>

0800d470 <ArtNetParams::callbackFunction(char const*)>:
 800d470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d474:	460e      	mov	r6, r1
 800d476:	b095      	sub	sp, #84	@ 0x54
 800d478:	4604      	mov	r4, r0
 800d47a:	49b2      	ldr	r1, [pc, #712]	@ (800d744 <ArtNetParams::callbackFunction(char const*)+0x2d4>)
 800d47c:	f10d 0202 	add.w	r2, sp, #2
 800d480:	4630      	mov	r0, r6
 800d482:	f009 fd56 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d486:	b948      	cbnz	r0, 800d49c <ArtNetParams::callbackFunction(char const*)+0x2c>
 800d488:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800d48c:	f89d 1002 	ldrb.w	r1, [sp, #2]
 800d490:	4620      	mov	r0, r4
 800d492:	b015      	add	sp, #84	@ 0x54
 800d494:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d498:	f7ff bfe2 	b.w	800d460 <ArtNetParams::SetBool(unsigned char, unsigned long)>
 800d49c:	f8df a2d0 	ldr.w	sl, [pc, #720]	@ 800d770 <ArtNetParams::callbackFunction(char const*)+0x300>
 800d4a0:	f104 0853 	add.w	r8, r4, #83	@ 0x53
 800d4a4:	2500      	movs	r5, #0
 800d4a6:	aa02      	add	r2, sp, #8
 800d4a8:	4651      	mov	r1, sl
 800d4aa:	4630      	mov	r0, r6
 800d4ac:	f009 fd25 	bl	8016efa <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d4b0:	b990      	cbnz	r0, 800d4d8 <ArtNetParams::callbackFunction(char const*)+0x68>
 800d4b2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d4b6:	2900      	cmp	r1, #0
 800d4b8:	f000 81d1 	beq.w	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d4bc:	2202      	movs	r2, #2
 800d4be:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 800d4c2:	40aa      	lsls	r2, r5
 800d4c4:	3501      	adds	r5, #1
 800d4c6:	b2ad      	uxth	r5, r5
 800d4c8:	f8a3 1005 	strh.w	r1, [r3, #5]
 800d4cc:	42a9      	cmp	r1, r5
 800d4ce:	6823      	ldr	r3, [r4, #0]
 800d4d0:	f000 81c2 	beq.w	800d858 <ArtNetParams::callbackFunction(char const*)+0x3e8>
 800d4d4:	4313      	orrs	r3, r2
 800d4d6:	e1c1      	b.n	800d85c <ArtNetParams::callbackFunction(char const*)+0x3ec>
 800d4d8:	499b      	ldr	r1, [pc, #620]	@ (800d748 <ArtNetParams::callbackFunction(char const*)+0x2d8>)
 800d4da:	2712      	movs	r7, #18
 800d4dc:	2307      	movs	r3, #7
 800d4de:	436f      	muls	r7, r5
 800d4e0:	9303      	str	r3, [sp, #12]
 800d4e2:	aa04      	add	r2, sp, #16
 800d4e4:	ab03      	add	r3, sp, #12
 800d4e6:	4439      	add	r1, r7
 800d4e8:	4630      	mov	r0, r6
 800d4ea:	f009 fcad 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d4ee:	2800      	cmp	r0, #0
 800d4f0:	d15e      	bne.n	800d5b0 <ArtNetParams::callbackFunction(char const*)+0x140>
 800d4f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d4f6:	f043 0320 	orr.w	r3, r3, #32
 800d4fa:	2b69      	cmp	r3, #105	@ 0x69
 800d4fc:	d123      	bne.n	800d546 <ArtNetParams::callbackFunction(char const*)+0xd6>
 800d4fe:	f89d 3011 	ldrb.w	r3, [sp, #17]
 800d502:	f043 0320 	orr.w	r3, r3, #32
 800d506:	2b6e      	cmp	r3, #110	@ 0x6e
 800d508:	d146      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d50a:	f89d 3012 	ldrb.w	r3, [sp, #18]
 800d50e:	f043 0320 	orr.w	r3, r3, #32
 800d512:	2b70      	cmp	r3, #112	@ 0x70
 800d514:	d140      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d516:	f89d 3013 	ldrb.w	r3, [sp, #19]
 800d51a:	f043 0320 	orr.w	r3, r3, #32
 800d51e:	2b75      	cmp	r3, #117	@ 0x75
 800d520:	d13a      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d522:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d526:	f043 0320 	orr.w	r3, r3, #32
 800d52a:	3b74      	subs	r3, #116	@ 0x74
 800d52c:	bf18      	it	ne
 800d52e:	2301      	movne	r3, #1
 800d530:	f8b4 200d 	ldrh.w	r2, [r4, #13]
 800d534:	006d      	lsls	r5, r5, #1
 800d536:	2103      	movs	r1, #3
 800d538:	40a9      	lsls	r1, r5
 800d53a:	ea22 0201 	bic.w	r2, r2, r1
 800d53e:	bb6b      	cbnz	r3, 800d59c <ArtNetParams::callbackFunction(char const*)+0x12c>
 800d540:	f8a4 200d 	strh.w	r2, [r4, #13]
 800d544:	e18b      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d546:	2b64      	cmp	r3, #100	@ 0x64
 800d548:	d126      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d54a:	f89d 3011 	ldrb.w	r3, [sp, #17]
 800d54e:	f043 0320 	orr.w	r3, r3, #32
 800d552:	2b69      	cmp	r3, #105	@ 0x69
 800d554:	d120      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d556:	f89d 3012 	ldrb.w	r3, [sp, #18]
 800d55a:	f043 0320 	orr.w	r3, r3, #32
 800d55e:	2b73      	cmp	r3, #115	@ 0x73
 800d560:	d11a      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d562:	f89d 3013 	ldrb.w	r3, [sp, #19]
 800d566:	f043 0320 	orr.w	r3, r3, #32
 800d56a:	2b61      	cmp	r3, #97	@ 0x61
 800d56c:	d114      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d56e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d572:	f043 0320 	orr.w	r3, r3, #32
 800d576:	2b62      	cmp	r3, #98	@ 0x62
 800d578:	d10e      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d57a:	f89d 3015 	ldrb.w	r3, [sp, #21]
 800d57e:	f043 0320 	orr.w	r3, r3, #32
 800d582:	2b6c      	cmp	r3, #108	@ 0x6c
 800d584:	d108      	bne.n	800d598 <ArtNetParams::callbackFunction(char const*)+0x128>
 800d586:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800d58a:	f043 0320 	orr.w	r3, r3, #32
 800d58e:	2b65      	cmp	r3, #101	@ 0x65
 800d590:	bf0c      	ite	eq
 800d592:	2302      	moveq	r3, #2
 800d594:	2301      	movne	r3, #1
 800d596:	e7cb      	b.n	800d530 <ArtNetParams::callbackFunction(char const*)+0xc0>
 800d598:	2301      	movs	r3, #1
 800d59a:	e7c9      	b.n	800d530 <ArtNetParams::callbackFunction(char const*)+0xc0>
 800d59c:	2b02      	cmp	r3, #2
 800d59e:	d102      	bne.n	800d5a6 <ArtNetParams::callbackFunction(char const*)+0x136>
 800d5a0:	40ab      	lsls	r3, r5
 800d5a2:	431a      	orrs	r2, r3
 800d5a4:	e7cc      	b.n	800d540 <ArtNetParams::callbackFunction(char const*)+0xd0>
 800d5a6:	2301      	movs	r3, #1
 800d5a8:	fa03 f505 	lsl.w	r5, r3, r5
 800d5ac:	432a      	orrs	r2, r5
 800d5ae:	e7c7      	b.n	800d540 <ArtNetParams::callbackFunction(char const*)+0xd0>
 800d5b0:	4966      	ldr	r1, [pc, #408]	@ (800d74c <ArtNetParams::callbackFunction(char const*)+0x2dc>)
 800d5b2:	f04f 0903 	mov.w	r9, #3
 800d5b6:	ab03      	add	r3, sp, #12
 800d5b8:	aa04      	add	r2, sp, #16
 800d5ba:	4439      	add	r1, r7
 800d5bc:	4630      	mov	r0, r6
 800d5be:	f8cd 900c 	str.w	r9, [sp, #12]
 800d5c2:	f009 fc41 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d5c6:	b9f8      	cbnz	r0, 800d608 <ArtNetParams::callbackFunction(char const*)+0x198>
 800d5c8:	f89d 2010 	ldrb.w	r2, [sp, #16]
 800d5cc:	f8b4 300f 	ldrh.w	r3, [r4, #15]
 800d5d0:	006d      	lsls	r5, r5, #1
 800d5d2:	f042 0220 	orr.w	r2, r2, #32
 800d5d6:	fa09 f905 	lsl.w	r9, r9, r5
 800d5da:	2a6c      	cmp	r2, #108	@ 0x6c
 800d5dc:	ea23 0309 	bic.w	r3, r3, r9
 800d5e0:	d10d      	bne.n	800d5fe <ArtNetParams::callbackFunction(char const*)+0x18e>
 800d5e2:	f89d 2011 	ldrb.w	r2, [sp, #17]
 800d5e6:	f042 0220 	orr.w	r2, r2, #32
 800d5ea:	2a74      	cmp	r2, #116	@ 0x74
 800d5ec:	d107      	bne.n	800d5fe <ArtNetParams::callbackFunction(char const*)+0x18e>
 800d5ee:	f89d 0012 	ldrb.w	r0, [sp, #18]
 800d5f2:	f040 0020 	orr.w	r0, r0, #32
 800d5f6:	f1a0 0170 	sub.w	r1, r0, #112	@ 0x70
 800d5fa:	4248      	negs	r0, r1
 800d5fc:	4148      	adcs	r0, r1
 800d5fe:	40a8      	lsls	r0, r5
 800d600:	4303      	orrs	r3, r0
 800d602:	f8a4 300f 	strh.w	r3, [r4, #15]
 800d606:	e12a      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d608:	4851      	ldr	r0, [pc, #324]	@ (800d750 <ArtNetParams::callbackFunction(char const*)+0x2e0>)
 800d60a:	210e      	movs	r1, #14
 800d60c:	f04f 0b11 	mov.w	fp, #17
 800d610:	fb01 0105 	mla	r1, r1, r5, r0
 800d614:	ab03      	add	r3, sp, #12
 800d616:	4642      	mov	r2, r8
 800d618:	4630      	mov	r0, r6
 800d61a:	f8cd b00c 	str.w	fp, [sp, #12]
 800d61e:	f009 fc13 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d622:	bb08      	cbnz	r0, 800d668 <ArtNetParams::callbackFunction(char const*)+0x1f8>
 800d624:	9b03      	ldr	r3, [sp, #12]
 800d626:	4a4b      	ldr	r2, [pc, #300]	@ (800d754 <ArtNetParams::callbackFunction(char const*)+0x2e4>)
 800d628:	4427      	add	r7, r4
 800d62a:	441f      	add	r7, r3
 800d62c:	4659      	mov	r1, fp
 800d62e:	f887 0053 	strb.w	r0, [r7, #83]	@ 0x53
 800d632:	1c6b      	adds	r3, r5, #1
 800d634:	a804      	add	r0, sp, #16
 800d636:	f00c fd77 	bl	801a128 <snprintf>
 800d63a:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800d63e:	a904      	add	r1, sp, #16
 800d640:	f818 3f01 	ldrb.w	r3, [r8, #1]!
 800d644:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d648:	4293      	cmp	r3, r2
 800d64a:	d001      	beq.n	800d650 <ArtNetParams::callbackFunction(char const*)+0x1e0>
 800d64c:	1a9b      	subs	r3, r3, r2
 800d64e:	e001      	b.n	800d654 <ArtNetParams::callbackFunction(char const*)+0x1e4>
 800d650:	2b00      	cmp	r3, #0
 800d652:	d1f5      	bne.n	800d640 <ArtNetParams::callbackFunction(char const*)+0x1d0>
 800d654:	2180      	movs	r1, #128	@ 0x80
 800d656:	6822      	ldr	r2, [r4, #0]
 800d658:	40a9      	lsls	r1, r5
 800d65a:	b91b      	cbnz	r3, 800d664 <ArtNetParams::callbackFunction(char const*)+0x1f4>
 800d65c:	ea22 0201 	bic.w	r2, r2, r1
 800d660:	6022      	str	r2, [r4, #0]
 800d662:	e0fc      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d664:	430a      	orrs	r2, r1
 800d666:	e7fb      	b.n	800d660 <ArtNetParams::callbackFunction(char const*)+0x1f0>
 800d668:	493b      	ldr	r1, [pc, #236]	@ (800d758 <ArtNetParams::callbackFunction(char const*)+0x2e8>)
 800d66a:	2306      	movs	r3, #6
 800d66c:	9303      	str	r3, [sp, #12]
 800d66e:	aa04      	add	r2, sp, #16
 800d670:	ab03      	add	r3, sp, #12
 800d672:	eb01 1105 	add.w	r1, r1, r5, lsl #4
 800d676:	4630      	mov	r0, r6
 800d678:	f009 fbe6 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d67c:	bb40      	cbnz	r0, 800d6d0 <ArtNetParams::callbackFunction(char const*)+0x260>
 800d67e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800d682:	7c62      	ldrb	r2, [r4, #17]
 800d684:	2301      	movs	r3, #1
 800d686:	f041 0120 	orr.w	r1, r1, #32
 800d68a:	40ab      	lsls	r3, r5
 800d68c:	2963      	cmp	r1, #99	@ 0x63
 800d68e:	b2db      	uxtb	r3, r3
 800d690:	d11a      	bne.n	800d6c8 <ArtNetParams::callbackFunction(char const*)+0x258>
 800d692:	f89d 1011 	ldrb.w	r1, [sp, #17]
 800d696:	f041 0120 	orr.w	r1, r1, #32
 800d69a:	296f      	cmp	r1, #111	@ 0x6f
 800d69c:	d114      	bne.n	800d6c8 <ArtNetParams::callbackFunction(char const*)+0x258>
 800d69e:	f89d 1012 	ldrb.w	r1, [sp, #18]
 800d6a2:	f041 0120 	orr.w	r1, r1, #32
 800d6a6:	296e      	cmp	r1, #110	@ 0x6e
 800d6a8:	d10e      	bne.n	800d6c8 <ArtNetParams::callbackFunction(char const*)+0x258>
 800d6aa:	f89d 1013 	ldrb.w	r1, [sp, #19]
 800d6ae:	f041 0120 	orr.w	r1, r1, #32
 800d6b2:	2973      	cmp	r1, #115	@ 0x73
 800d6b4:	d108      	bne.n	800d6c8 <ArtNetParams::callbackFunction(char const*)+0x258>
 800d6b6:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d6ba:	f041 0120 	orr.w	r1, r1, #32
 800d6be:	2974      	cmp	r1, #116	@ 0x74
 800d6c0:	d102      	bne.n	800d6c8 <ArtNetParams::callbackFunction(char const*)+0x258>
 800d6c2:	4313      	orrs	r3, r2
 800d6c4:	7463      	strb	r3, [r4, #17]
 800d6c6:	e0ca      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d6c8:	ea22 0203 	bic.w	r2, r2, r3
 800d6cc:	7462      	strb	r2, [r4, #17]
 800d6ce:	e0c6      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d6d0:	3501      	adds	r5, #1
 800d6d2:	2d04      	cmp	r5, #4
 800d6d4:	f10a 0a10 	add.w	sl, sl, #16
 800d6d8:	f108 0812 	add.w	r8, r8, #18
 800d6dc:	f47f aee3 	bne.w	800d4a6 <ArtNetParams::callbackFunction(char const*)+0x36>
 800d6e0:	2308      	movs	r3, #8
 800d6e2:	9301      	str	r3, [sp, #4]
 800d6e4:	491d      	ldr	r1, [pc, #116]	@ (800d75c <ArtNetParams::callbackFunction(char const*)+0x2ec>)
 800d6e6:	ab01      	add	r3, sp, #4
 800d6e8:	aa04      	add	r2, sp, #16
 800d6ea:	4630      	mov	r0, r6
 800d6ec:	f009 fbac 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d6f0:	2800      	cmp	r0, #0
 800d6f2:	d13f      	bne.n	800d774 <ArtNetParams::callbackFunction(char const*)+0x304>
 800d6f4:	462a      	mov	r2, r5
 800d6f6:	491a      	ldr	r1, [pc, #104]	@ (800d760 <ArtNetParams::callbackFunction(char const*)+0x2f0>)
 800d6f8:	a804      	add	r0, sp, #16
 800d6fa:	f7ff faa4 	bl	800cc46 <memcmp>
 800d6fe:	6825      	ldr	r5, [r4, #0]
 800d700:	b188      	cbz	r0, 800d726 <ArtNetParams::callbackFunction(char const*)+0x2b6>
 800d702:	4918      	ldr	r1, [pc, #96]	@ (800d764 <ArtNetParams::callbackFunction(char const*)+0x2f4>)
 800d704:	464a      	mov	r2, r9
 800d706:	a804      	add	r0, sp, #16
 800d708:	f7ff fa9d 	bl	800cc46 <memcmp>
 800d70c:	b188      	cbz	r0, 800d732 <ArtNetParams::callbackFunction(char const*)+0x2c2>
 800d70e:	4916      	ldr	r1, [pc, #88]	@ (800d768 <ArtNetParams::callbackFunction(char const*)+0x2f8>)
 800d710:	2202      	movs	r2, #2
 800d712:	a804      	add	r0, sp, #16
 800d714:	f7ff fa97 	bl	800cc46 <memcmp>
 800d718:	b178      	cbz	r0, 800d73a <ArtNetParams::callbackFunction(char const*)+0x2ca>
 800d71a:	4914      	ldr	r1, [pc, #80]	@ (800d76c <ArtNetParams::callbackFunction(char const*)+0x2fc>)
 800d71c:	2208      	movs	r2, #8
 800d71e:	a804      	add	r0, sp, #16
 800d720:	f7ff fa91 	bl	800cc46 <memcmp>
 800d724:	b158      	cbz	r0, 800d73e <ArtNetParams::callbackFunction(char const*)+0x2ce>
 800d726:	f025 0520 	bic.w	r5, r5, #32
 800d72a:	2300      	movs	r3, #0
 800d72c:	6025      	str	r5, [r4, #0]
 800d72e:	74a3      	strb	r3, [r4, #18]
 800d730:	e095      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d732:	2301      	movs	r3, #1
 800d734:	f045 0520 	orr.w	r5, r5, #32
 800d738:	e7f8      	b.n	800d72c <ArtNetParams::callbackFunction(char const*)+0x2bc>
 800d73a:	2302      	movs	r3, #2
 800d73c:	e7fa      	b.n	800d734 <ArtNetParams::callbackFunction(char const*)+0x2c4>
 800d73e:	2303      	movs	r3, #3
 800d740:	e7f8      	b.n	800d734 <ArtNetParams::callbackFunction(char const*)+0x2c4>
 800d742:	bf00      	nop
 800d744:	0801e7b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, sp, lr, pc}
 800d748:	0801edb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, sp, lr, pc}
 800d74c:	0801edfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, fp, sp, lr, pc}
 800d750:	0801ecfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 800d754:	0801afb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, sp, pc}
 800d758:	0801ed73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 800d75c:	0801ecc0 	stmdaeq	r1, {r6, r7, sl, fp, sp, lr, pc}
 800d760:	0801b0af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, ip, sp, pc}
 800d764:	0801b0b4 	stmdaeq	r1, {r2, r4, r5, r7, ip, sp, pc}
 800d768:	0801b221 	stmdaeq	r1, {r0, r5, r9, ip, sp, pc}
 800d76c:	0801b0b8 	stmdaeq	r1, {r3, r4, r5, r7, ip, sp, pc}
 800d770:	0801ee43 	stmdaeq	r1, {r0, r1, r6, r9, sl, fp, sp, lr, pc}
 800d774:	233f      	movs	r3, #63	@ 0x3f
 800d776:	9301      	str	r3, [sp, #4]
 800d778:	4967      	ldr	r1, [pc, #412]	@ (800d918 <ArtNetParams::callbackFunction(char const*)+0x4a8>)
 800d77a:	ab01      	add	r3, sp, #4
 800d77c:	f104 0213 	add.w	r2, r4, #19
 800d780:	4630      	mov	r0, r6
 800d782:	f009 fb61 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d786:	b9e0      	cbnz	r0, 800d7c2 <ArtNetParams::callbackFunction(char const*)+0x352>
 800d788:	9b01      	ldr	r3, [sp, #4]
 800d78a:	4423      	add	r3, r4
 800d78c:	a904      	add	r1, sp, #16
 800d78e:	74d8      	strb	r0, [r3, #19]
 800d790:	4b62      	ldr	r3, [pc, #392]	@ (800d91c <ArtNetParams::callbackFunction(char const*)+0x4ac>)
 800d792:	6818      	ldr	r0, [r3, #0]
 800d794:	f7fd ffce 	bl	800b734 <ArtNetNode::GetLongNameDefault(char*)>
 800d798:	f104 0012 	add.w	r0, r4, #18
 800d79c:	ab04      	add	r3, sp, #16
 800d79e:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 800d7a2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d7a6:	428a      	cmp	r2, r1
 800d7a8:	d001      	beq.n	800d7ae <ArtNetParams::callbackFunction(char const*)+0x33e>
 800d7aa:	1a52      	subs	r2, r2, r1
 800d7ac:	e001      	b.n	800d7b2 <ArtNetParams::callbackFunction(char const*)+0x342>
 800d7ae:	2a00      	cmp	r2, #0
 800d7b0:	d1f5      	bne.n	800d79e <ArtNetParams::callbackFunction(char const*)+0x32e>
 800d7b2:	6823      	ldr	r3, [r4, #0]
 800d7b4:	b912      	cbnz	r2, 800d7bc <ArtNetParams::callbackFunction(char const*)+0x34c>
 800d7b6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800d7ba:	e04f      	b.n	800d85c <ArtNetParams::callbackFunction(char const*)+0x3ec>
 800d7bc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d7c0:	e04c      	b.n	800d85c <ArtNetParams::callbackFunction(char const*)+0x3ec>
 800d7c2:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 800d928 <ArtNetParams::callbackFunction(char const*)+0x4b8>
 800d7c6:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800d92c <ArtNetParams::callbackFunction(char const*)+0x4bc>
 800d7ca:	f8df a164 	ldr.w	sl, [pc, #356]	@ 800d930 <ArtNetParams::callbackFunction(char const*)+0x4c0>
 800d7ce:	f8df b164 	ldr.w	fp, [pc, #356]	@ 800d934 <ArtNetParams::callbackFunction(char const*)+0x4c4>
 800d7d2:	2700      	movs	r7, #0
 800d7d4:	ab02      	add	r3, sp, #8
 800d7d6:	aa04      	add	r2, sp, #16
 800d7d8:	4649      	mov	r1, r9
 800d7da:	4630      	mov	r0, r6
 800d7dc:	9502      	str	r5, [sp, #8]
 800d7de:	f009 fb33 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 800d7e2:	bb28      	cbnz	r0, 800d830 <ArtNetParams::callbackFunction(char const*)+0x3c0>
 800d7e4:	f8b4 309c 	ldrh.w	r3, [r4, #156]	@ 0x9c
 800d7e8:	007f      	lsls	r7, r7, #1
 800d7ea:	2203      	movs	r2, #3
 800d7ec:	40ba      	lsls	r2, r7
 800d7ee:	ea23 0302 	bic.w	r3, r3, r2
 800d7f2:	f89d 2010 	ldrb.w	r2, [sp, #16]
 800d7f6:	f042 0220 	orr.w	r2, r2, #32
 800d7fa:	2a73      	cmp	r2, #115	@ 0x73
 800d7fc:	d113      	bne.n	800d826 <ArtNetParams::callbackFunction(char const*)+0x3b6>
 800d7fe:	f89d 2011 	ldrb.w	r2, [sp, #17]
 800d802:	f042 0220 	orr.w	r2, r2, #32
 800d806:	2a61      	cmp	r2, #97	@ 0x61
 800d808:	d10d      	bne.n	800d826 <ArtNetParams::callbackFunction(char const*)+0x3b6>
 800d80a:	f89d 2012 	ldrb.w	r2, [sp, #18]
 800d80e:	f042 0220 	orr.w	r2, r2, #32
 800d812:	2a63      	cmp	r2, #99	@ 0x63
 800d814:	d107      	bne.n	800d826 <ArtNetParams::callbackFunction(char const*)+0x3b6>
 800d816:	f89d 0013 	ldrb.w	r0, [sp, #19]
 800d81a:	f040 0020 	orr.w	r0, r0, #32
 800d81e:	f1a0 026e 	sub.w	r2, r0, #110	@ 0x6e
 800d822:	4250      	negs	r0, r2
 800d824:	4150      	adcs	r0, r2
 800d826:	40b8      	lsls	r0, r7
 800d828:	4303      	orrs	r3, r0
 800d82a:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
 800d82e:	e016      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d830:	2118      	movs	r1, #24
 800d832:	aa03      	add	r2, sp, #12
 800d834:	fb01 a107 	mla	r1, r1, r7, sl
 800d838:	4630      	mov	r0, r6
 800d83a:	f009 fb1e 	bl	8016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 800d83e:	b988      	cbnz	r0, 800d864 <ArtNetParams::callbackFunction(char const*)+0x3f4>
 800d840:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800d844:	9903      	ldr	r1, [sp, #12]
 800d846:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 800d84a:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 800d84e:	6823      	ldr	r3, [r4, #0]
 800d850:	40ba      	lsls	r2, r7
 800d852:	2900      	cmp	r1, #0
 800d854:	f47f ae3e 	bne.w	800d4d4 <ArtNetParams::callbackFunction(char const*)+0x64>
 800d858:	ea23 0302 	bic.w	r3, r3, r2
 800d85c:	6023      	str	r3, [r4, #0]
 800d85e:	b015      	add	sp, #84	@ 0x54
 800d860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d864:	f10d 0203 	add.w	r2, sp, #3
 800d868:	eb0b 1107 	add.w	r1, fp, r7, lsl #4
 800d86c:	4630      	mov	r0, r6
 800d86e:	f009 fb60 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d872:	b9b0      	cbnz	r0, 800d8a2 <ArtNetParams::callbackFunction(char const*)+0x432>
 800d874:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800d878:	6822      	ldr	r2, [r4, #0]
 800d87a:	1e48      	subs	r0, r1, #1
 800d87c:	b2c0      	uxtb	r0, r0
 800d87e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800d882:	28c7      	cmp	r0, #199	@ 0xc7
 800d884:	fa03 f307 	lsl.w	r3, r3, r7
 800d888:	4427      	add	r7, r4
 800d88a:	d804      	bhi.n	800d896 <ArtNetParams::callbackFunction(char const*)+0x426>
 800d88c:	2964      	cmp	r1, #100	@ 0x64
 800d88e:	d002      	beq.n	800d896 <ArtNetParams::callbackFunction(char const*)+0x426>
 800d890:	f887 10b0 	strb.w	r1, [r7, #176]	@ 0xb0
 800d894:	e61e      	b.n	800d4d4 <ArtNetParams::callbackFunction(char const*)+0x64>
 800d896:	2164      	movs	r1, #100	@ 0x64
 800d898:	f887 10b0 	strb.w	r1, [r7, #176]	@ 0xb0
 800d89c:	ea22 0203 	bic.w	r2, r2, r3
 800d8a0:	e6de      	b.n	800d660 <ArtNetParams::callbackFunction(char const*)+0x1f0>
 800d8a2:	f10d 0202 	add.w	r2, sp, #2
 800d8a6:	4641      	mov	r1, r8
 800d8a8:	4630      	mov	r0, r6
 800d8aa:	f009 fb42 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d8ae:	b9a8      	cbnz	r0, 800d8dc <ArtNetParams::callbackFunction(char const*)+0x46c>
 800d8b0:	2201      	movs	r2, #1
 800d8b2:	f107 0308 	add.w	r3, r7, #8
 800d8b6:	fa02 f303 	lsl.w	r3, r2, r3
 800d8ba:	40ba      	lsls	r2, r7
 800d8bc:	4313      	orrs	r3, r2
 800d8be:	f8b4 209e 	ldrh.w	r2, [r4, #158]	@ 0x9e
 800d8c2:	b29b      	uxth	r3, r3
 800d8c4:	ea22 0103 	bic.w	r1, r2, r3
 800d8c8:	f8a4 109e 	strh.w	r1, [r4, #158]	@ 0x9e
 800d8cc:	f89d 1002 	ldrb.w	r1, [sp, #2]
 800d8d0:	2900      	cmp	r1, #0
 800d8d2:	d0c4      	beq.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d8d4:	431a      	orrs	r2, r3
 800d8d6:	f8a4 209e 	strh.w	r2, [r4, #158]	@ 0x9e
 800d8da:	e7c0      	b.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d8dc:	3701      	adds	r7, #1
 800d8de:	2f04      	cmp	r7, #4
 800d8e0:	f109 0910 	add.w	r9, r9, #16
 800d8e4:	f108 0812 	add.w	r8, r8, #18
 800d8e8:	f47f af74 	bne.w	800d7d4 <ArtNetParams::callbackFunction(char const*)+0x364>
 800d8ec:	490c      	ldr	r1, [pc, #48]	@ (800d920 <ArtNetParams::callbackFunction(char const*)+0x4b0>)
 800d8ee:	f10d 0202 	add.w	r2, sp, #2
 800d8f2:	4630      	mov	r0, r6
 800d8f4:	f009 fb1d 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d8f8:	b910      	cbnz	r0, 800d900 <ArtNetParams::callbackFunction(char const*)+0x490>
 800d8fa:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 800d8fe:	e5c5      	b.n	800d48c <ArtNetParams::callbackFunction(char const*)+0x1c>
 800d900:	4908      	ldr	r1, [pc, #32]	@ (800d924 <ArtNetParams::callbackFunction(char const*)+0x4b4>)
 800d902:	f10d 0202 	add.w	r2, sp, #2
 800d906:	4630      	mov	r0, r6
 800d908:	f009 fb13 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d90c:	2800      	cmp	r0, #0
 800d90e:	d1a6      	bne.n	800d85e <ArtNetParams::callbackFunction(char const*)+0x3ee>
 800d910:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800d914:	e5ba      	b.n	800d48c <ArtNetParams::callbackFunction(char const*)+0x1c>
 800d916:	bf00      	nop
 800d918:	0801ecf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 800d91c:	20001260 	andcs	r1, r0, r0, ror #4
 800d920:	0801e6c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, sp, lr, pc}
 800d924:	0801ecc9 	stmdaeq	r1, {r0, r3, r6, r7, sl, fp, sp, lr, pc}
 800d928:	0801e6cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, sp, lr, pc}
 800d92c:	0801e70f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, sp, lr, pc}
 800d930:	0801e757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, sp, lr, pc}
 800d934:	0801ed33 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, fp, sp, lr, pc}

0800d938 <ArtNetParams::staticCallbackFunction(void*, char const*)>:
 800d938:	f7ff bd9a 	b.w	800d470 <ArtNetParams::callbackFunction(char const*)>

0800d93c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)>:
 800d93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d940:	4604      	mov	r4, r0
 800d942:	b089      	sub	sp, #36	@ 0x24
 800d944:	4615      	mov	r5, r2
 800d946:	461e      	mov	r6, r3
 800d948:	2900      	cmp	r1, #0
 800d94a:	f000 809d 	beq.w	800da88 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x14c>
 800d94e:	22dc      	movs	r2, #220	@ 0xdc
 800d950:	f00c f8c7 	bl	8019ae2 <memmove>
 800d954:	462a      	mov	r2, r5
 800d956:	4625      	mov	r5, r4
 800d958:	4633      	mov	r3, r6
 800d95a:	49b5      	ldr	r1, [pc, #724]	@ (800dc30 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2f4>)
 800d95c:	a805      	add	r0, sp, #20
 800d95e:	f009 f963 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 800d962:	f855 3b13 	ldr.w	r3, [r5], #19
 800d966:	0658      	lsls	r0, r3, #25
 800d968:	d404      	bmi.n	800d974 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x38>
 800d96a:	4bb2      	ldr	r3, [pc, #712]	@ (800dc34 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2f8>)
 800d96c:	4629      	mov	r1, r5
 800d96e:	6818      	ldr	r0, [r3, #0]
 800d970:	f7fd fee0 	bl	800b734 <ArtNetNode::GetLongNameDefault(char*)>
 800d974:	6823      	ldr	r3, [r4, #0]
 800d976:	49b0      	ldr	r1, [pc, #704]	@ (800dc38 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2fc>)
 800d978:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800d97c:	462a      	mov	r2, r5
 800d97e:	a805      	add	r0, sp, #20
 800d980:	f7ff fcb4 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d984:	6822      	ldr	r2, [r4, #0]
 800d986:	49ad      	ldr	r1, [pc, #692]	@ (800dc3c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x300>)
 800d988:	f3c2 4200 	ubfx	r2, r2, #16, #1
 800d98c:	a805      	add	r0, sp, #20
 800d98e:	f7ff fcd5 	bl	800d33c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d992:	7ca3      	ldrb	r3, [r4, #18]
 800d994:	2b01      	cmp	r3, #1
 800d996:	d07a      	beq.n	800da8e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x152>
 800d998:	2b02      	cmp	r3, #2
 800d99a:	d07a      	beq.n	800da92 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x156>
 800d99c:	4aa8      	ldr	r2, [pc, #672]	@ (800dc40 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x304>)
 800d99e:	49a9      	ldr	r1, [pc, #676]	@ (800dc44 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x308>)
 800d9a0:	2b03      	cmp	r3, #3
 800d9a2:	bf18      	it	ne
 800d9a4:	460a      	movne	r2, r1
 800d9a6:	46a0      	mov	r8, r4
 800d9a8:	49a7      	ldr	r1, [pc, #668]	@ (800dc48 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x30c>)
 800d9aa:	f858 3b53 	ldr.w	r3, [r8], #83
 800d9ae:	f8df 92f4 	ldr.w	r9, [pc, #756]	@ 800dca4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x368>
 800d9b2:	f8df b2f4 	ldr.w	fp, [pc, #756]	@ 800dca8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x36c>
 800d9b6:	f8df a2f4 	ldr.w	sl, [pc, #756]	@ 800dcac <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x370>
 800d9ba:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800d9be:	a805      	add	r0, sp, #20
 800d9c0:	f7ff fc94 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800d9c4:	2500      	movs	r5, #0
 800d9c6:	f8db 3000 	ldr.w	r3, [fp]
 800d9ca:	42ab      	cmp	r3, r5
 800d9cc:	d863      	bhi.n	800da96 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x15a>
 800d9ce:	499f      	ldr	r1, [pc, #636]	@ (800dc4c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x310>)
 800d9d0:	f8df 82dc 	ldr.w	r8, [pc, #732]	@ 800dcb0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x374>
 800d9d4:	4f9e      	ldr	r7, [pc, #632]	@ (800dc50 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x314>)
 800d9d6:	f8df 92dc 	ldr.w	r9, [pc, #732]	@ 800dcb4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x378>
 800d9da:	f8df a2dc 	ldr.w	sl, [pc, #732]	@ 800dcb8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x37c>
 800d9de:	a805      	add	r0, sp, #20
 800d9e0:	f009 f9de 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 800d9e4:	2500      	movs	r5, #0
 800d9e6:	f8db 3000 	ldr.w	r3, [fp]
 800d9ea:	42ab      	cmp	r3, r5
 800d9ec:	f200 80c4 	bhi.w	800db78 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x23c>
 800d9f0:	4998      	ldr	r1, [pc, #608]	@ (800dc54 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x318>)
 800d9f2:	4e99      	ldr	r6, [pc, #612]	@ (800dc58 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x31c>)
 800d9f4:	f8df 823c 	ldr.w	r8, [pc, #572]	@ 800dc34 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2f8>
 800d9f8:	a805      	add	r0, sp, #20
 800d9fa:	f009 f9d1 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 800d9fe:	2500      	movs	r5, #0
 800da00:	f44f 2780 	mov.w	r7, #262144	@ 0x40000
 800da04:	f8db 3000 	ldr.w	r3, [fp]
 800da08:	42ab      	cmp	r3, r5
 800da0a:	f200 80ed 	bhi.w	800dbe8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2ac>
 800da0e:	4993      	ldr	r1, [pc, #588]	@ (800dc5c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x320>)
 800da10:	4f93      	ldr	r7, [pc, #588]	@ (800dc60 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x324>)
 800da12:	f8df 92a8 	ldr.w	r9, [pc, #680]	@ 800dcbc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x380>
 800da16:	f8df a2a8 	ldr.w	sl, [pc, #680]	@ 800dcc0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x384>
 800da1a:	a805      	add	r0, sp, #20
 800da1c:	f009 f9c0 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 800da20:	f104 08af 	add.w	r8, r4, #175	@ 0xaf
 800da24:	2600      	movs	r6, #0
 800da26:	f8db 3000 	ldr.w	r3, [fp]
 800da2a:	42b3      	cmp	r3, r6
 800da2c:	f200 814a 	bhi.w	800dcc4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x388>
 800da30:	6822      	ldr	r2, [r4, #0]
 800da32:	498c      	ldr	r1, [pc, #560]	@ (800dc64 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x328>)
 800da34:	f3c2 4240 	ubfx	r2, r2, #17, #1
 800da38:	a805      	add	r0, sp, #20
 800da3a:	f7ff fc7f 	bl	800d33c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800da3e:	498a      	ldr	r1, [pc, #552]	@ (800dc68 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x32c>)
 800da40:	a805      	add	r0, sp, #20
 800da42:	f009 f9ad 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 800da46:	6822      	ldr	r2, [r4, #0]
 800da48:	4988      	ldr	r1, [pc, #544]	@ (800dc6c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x330>)
 800da4a:	f3c2 22c0 	ubfx	r2, r2, #11, #1
 800da4e:	a805      	add	r0, sp, #20
 800da50:	f7ff fc74 	bl	800d33c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800da54:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800da58:	b17b      	cbz	r3, 800da7a <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x13e>
 800da5a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800da5e:	9b05      	ldr	r3, [sp, #20]
 800da60:	4413      	add	r3, r2
 800da62:	227d      	movs	r2, #125	@ 0x7d
 800da64:	f803 2c01 	strb.w	r2, [r3, #-1]
 800da68:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800da6c:	9905      	ldr	r1, [sp, #20]
 800da6e:	54ca      	strb	r2, [r1, r3]
 800da70:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800da74:	3301      	adds	r3, #1
 800da76:	f8ad 301a 	strh.w	r3, [sp, #26]
 800da7a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800da7e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800da80:	601a      	str	r2, [r3, #0]
 800da82:	b009      	add	sp, #36	@ 0x24
 800da84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da88:	f7ff fc80 	bl	800d38c <ArtNetParamsStore::Copy(artnetparams::Params*)>
 800da8c:	e762      	b.n	800d954 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x18>
 800da8e:	4a78      	ldr	r2, [pc, #480]	@ (800dc70 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x334>)
 800da90:	e789      	b.n	800d9a6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x6a>
 800da92:	4a78      	ldr	r2, [pc, #480]	@ (800dc74 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x338>)
 800da94:	e787      	b.n	800d9a6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x6a>
 800da96:	f8da 6000 	ldr.w	r6, [sl]
 800da9a:	442e      	add	r6, r5
 800da9c:	2e01      	cmp	r6, #1
 800da9e:	d896      	bhi.n	800d9ce <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x92>
 800daa0:	006b      	lsls	r3, r5, #1
 800daa2:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800daa6:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800daaa:	9303      	str	r3, [sp, #12]
 800daac:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 800dab0:	42b9      	cmp	r1, r7
 800dab2:	f8b3 2005 	ldrh.w	r2, [r3, #5]
 800dab6:	f8d4 c000 	ldr.w	ip, [r4]
 800daba:	d220      	bcs.n	800dafe <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1c2>
 800dabc:	2002      	movs	r0, #2
 800dabe:	fa00 fe05 	lsl.w	lr, r0, r5
 800dac2:	4b6d      	ldr	r3, [pc, #436]	@ (800dc78 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x33c>)
 800dac4:	9805      	ldr	r0, [sp, #20]
 800dac6:	ea3e 0c0c 	bics.w	ip, lr, ip
 800daca:	4408      	add	r0, r1
 800dacc:	eba7 0701 	sub.w	r7, r7, r1
 800dad0:	eb03 1305 	add.w	r3, r3, r5, lsl #4
 800dad4:	f89d 101c 	ldrb.w	r1, [sp, #28]
 800dad8:	d003      	beq.n	800dae2 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1a6>
 800dada:	b921      	cbnz	r1, 800dae6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1aa>
 800dadc:	9200      	str	r2, [sp, #0]
 800dade:	4a67      	ldr	r2, [pc, #412]	@ (800dc7c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x340>)
 800dae0:	e003      	b.n	800daea <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1ae>
 800dae2:	2900      	cmp	r1, #0
 800dae4:	d037      	beq.n	800db56 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x21a>
 800dae6:	9200      	str	r2, [sp, #0]
 800dae8:	4a65      	ldr	r2, [pc, #404]	@ (800dc80 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x344>)
 800daea:	4639      	mov	r1, r7
 800daec:	f00c fb1c 	bl	801a128 <snprintf>
 800daf0:	4287      	cmp	r7, r0
 800daf2:	bfa2      	ittt	ge
 800daf4:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800daf8:	18c0      	addge	r0, r0, r3
 800dafa:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800dafe:	f8b4 300d 	ldrh.w	r3, [r4, #13]
 800db02:	4960      	ldr	r1, [pc, #384]	@ (800dc84 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x348>)
 800db04:	006a      	lsls	r2, r5, #1
 800db06:	4113      	asrs	r3, r2
 800db08:	f013 0303 	ands.w	r3, r3, #3
 800db0c:	f04f 0212 	mov.w	r2, #18
 800db10:	fb02 1105 	mla	r1, r2, r5, r1
 800db14:	d022      	beq.n	800db5c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x220>
 800db16:	4a5c      	ldr	r2, [pc, #368]	@ (800dc88 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x34c>)
 800db18:	485c      	ldr	r0, [pc, #368]	@ (800dc8c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x350>)
 800db1a:	2b02      	cmp	r3, #2
 800db1c:	bf18      	it	ne
 800db1e:	4602      	movne	r2, r0
 800db20:	3b01      	subs	r3, #1
 800db22:	bf18      	it	ne
 800db24:	2301      	movne	r3, #1
 800db26:	a805      	add	r0, sp, #20
 800db28:	f7ff fbe0 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800db2c:	6822      	ldr	r2, [r4, #0]
 800db2e:	2380      	movs	r3, #128	@ 0x80
 800db30:	40ab      	lsls	r3, r5
 800db32:	401a      	ands	r2, r3
 800db34:	4293      	cmp	r3, r2
 800db36:	bf0c      	ite	eq
 800db38:	2701      	moveq	r7, #1
 800db3a:	2700      	movne	r7, #0
 800db3c:	d110      	bne.n	800db60 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x224>
 800db3e:	4642      	mov	r2, r8
 800db40:	4649      	mov	r1, r9
 800db42:	463b      	mov	r3, r7
 800db44:	a805      	add	r0, sp, #20
 800db46:	f7ff fbd1 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800db4a:	3501      	adds	r5, #1
 800db4c:	f109 090e 	add.w	r9, r9, #14
 800db50:	f108 0812 	add.w	r8, r8, #18
 800db54:	e737      	b.n	800d9c6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x8a>
 800db56:	9200      	str	r2, [sp, #0]
 800db58:	4a4d      	ldr	r2, [pc, #308]	@ (800dc90 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x354>)
 800db5a:	e7c6      	b.n	800daea <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1ae>
 800db5c:	4a4d      	ldr	r2, [pc, #308]	@ (800dc94 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x358>)
 800db5e:	e7df      	b.n	800db20 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x1e4>
 800db60:	2328      	movs	r3, #40	@ 0x28
 800db62:	435e      	muls	r6, r3
 800db64:	4b33      	ldr	r3, [pc, #204]	@ (800dc34 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2f8>)
 800db66:	6819      	ldr	r1, [r3, #0]
 800db68:	f506 6608 	add.w	r6, r6, #2176	@ 0x880
 800db6c:	2212      	movs	r2, #18
 800db6e:	4431      	add	r1, r6
 800db70:	4640      	mov	r0, r8
 800db72:	f00b ffb6 	bl	8019ae2 <memmove>
 800db76:	e7e2      	b.n	800db3e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x202>
 800db78:	f8b4 300f 	ldrh.w	r3, [r4, #15]
 800db7c:	006a      	lsls	r2, r5, #1
 800db7e:	4113      	asrs	r3, r2
 800db80:	f003 0303 	and.w	r3, r3, #3
 800db84:	2b00      	cmp	r3, #0
 800db86:	f04f 0112 	mov.w	r1, #18
 800db8a:	4a43      	ldr	r2, [pc, #268]	@ (800dc98 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x35c>)
 800db8c:	bf16      	itet	ne
 800db8e:	2301      	movne	r3, #1
 800db90:	2300      	moveq	r3, #0
 800db92:	4652      	movne	r2, sl
 800db94:	fb01 9105 	mla	r1, r1, r5, r9
 800db98:	a805      	add	r0, sp, #20
 800db9a:	f7ff fba7 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800db9e:	2601      	movs	r6, #1
 800dba0:	7c61      	ldrb	r1, [r4, #17]
 800dba2:	fa06 f305 	lsl.w	r3, r6, r5
 800dba6:	b2da      	uxtb	r2, r3
 800dba8:	400b      	ands	r3, r1
 800dbaa:	493c      	ldr	r1, [pc, #240]	@ (800dc9c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x360>)
 800dbac:	429a      	cmp	r2, r3
 800dbae:	bf08      	it	eq
 800dbb0:	4633      	moveq	r3, r6
 800dbb2:	4a3b      	ldr	r2, [pc, #236]	@ (800dca0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x364>)
 800dbb4:	bf14      	ite	ne
 800dbb6:	2300      	movne	r3, #0
 800dbb8:	460a      	moveq	r2, r1
 800dbba:	a805      	add	r0, sp, #20
 800dbbc:	4641      	mov	r1, r8
 800dbbe:	f7ff fb95 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800dbc2:	f105 0308 	add.w	r3, r5, #8
 800dbc6:	409e      	lsls	r6, r3
 800dbc8:	f8b4 309e 	ldrh.w	r3, [r4, #158]	@ 0x9e
 800dbcc:	b2b2      	uxth	r2, r6
 800dbce:	401e      	ands	r6, r3
 800dbd0:	1ab1      	subs	r1, r6, r2
 800dbd2:	424a      	negs	r2, r1
 800dbd4:	414a      	adcs	r2, r1
 800dbd6:	a805      	add	r0, sp, #20
 800dbd8:	4639      	mov	r1, r7
 800dbda:	f7ff fbaf 	bl	800d33c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dbde:	3501      	adds	r5, #1
 800dbe0:	f108 0810 	add.w	r8, r8, #16
 800dbe4:	3712      	adds	r7, #18
 800dbe6:	e6fe      	b.n	800d9e6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 800dbe8:	6822      	ldr	r2, [r4, #0]
 800dbea:	fa07 f305 	lsl.w	r3, r7, r5
 800dbee:	ea02 0003 	and.w	r0, r2, r3
 800dbf2:	ea33 0202 	bics.w	r2, r3, r2
 800dbf6:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 800dbfa:	d00c      	beq.n	800dc16 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x2da>
 800dbfc:	f8d8 2000 	ldr.w	r2, [r8]
 800dc00:	2d01      	cmp	r5, #1
 800dc02:	bf9b      	ittet	ls
 800dc04:	f04f 0c0c 	movls.w	ip, #12
 800dc08:	fb0c 2205 	mlals	r2, ip, r5, r2
 800dc0c:	2200      	movhi	r2, #0
 800dc0e:	f8d2 2970 	ldrls.w	r2, [r2, #2416]	@ 0x970
 800dc12:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 800dc16:	1a1a      	subs	r2, r3, r0
 800dc18:	4253      	negs	r3, r2
 800dc1a:	4153      	adcs	r3, r2
 800dc1c:	a805      	add	r0, sp, #20
 800dc1e:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
 800dc22:	4631      	mov	r1, r6
 800dc24:	f009 f842 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 800dc28:	3501      	adds	r5, #1
 800dc2a:	3618      	adds	r6, #24
 800dc2c:	e6ea      	b.n	800da04 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xc8>
 800dc2e:	bf00      	nop
 800dc30:	0801e7c2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, sp, lr, pc}
 800dc34:	20001260 	andcs	r1, r0, r0, ror #4
 800dc38:	0801ecf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 800dc3c:	0801e7b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, sp, lr, pc}
 800dc40:	0801b0b8 	stmdaeq	r1, {r3, r4, r5, r7, ip, sp, pc}
 800dc44:	0801b0af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, ip, sp, pc}
 800dc48:	0801ecc0 	stmdaeq	r1, {r6, r7, sl, fp, sp, lr, pc}
 800dc4c:	0801b0f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, ip, sp, pc}
 800dc50:	0801e70f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, sp, lr, pc}
 800dc54:	0801b101 	stmdaeq	r1, {r0, r8, ip, sp, pc}
 800dc58:	0801e757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, sp, lr, pc}
 800dc5c:	0801b10b 	stmdaeq	r1, {r0, r1, r3, r8, ip, sp, pc}
 800dc60:	0801ed33 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, fp, sp, lr, pc}
 800dc64:	0801e6c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, sp, lr, pc}
 800dc68:	0801ad19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, sp, pc}
 800dc6c:	0801ecc9 	stmdaeq	r1, {r0, r3, r6, r7, sl, fp, sp, lr, pc}
 800dc70:	0801b0b4 	stmdaeq	r1, {r2, r4, r5, r7, ip, sp, pc}
 800dc74:	0801b221 	stmdaeq	r1, {r0, r5, r9, ip, sp, pc}
 800dc78:	0801ee43 	stmdaeq	r1, {r0, r1, r6, r9, sl, fp, sp, lr, pc}
 800dc7c:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 800dc80:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 800dc84:	0801edb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, sp, lr, pc}
 800dc88:	0801b0ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, ip, sp, pc}
 800dc8c:	0801b0c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, ip, sp, pc}
 800dc90:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}
 800dc94:	0801b0c1 	stmdaeq	r1, {r0, r6, r7, ip, sp, pc}
 800dc98:	0801b0da 	stmdaeq	r1, {r1, r3, r4, r6, r7, ip, sp, pc}
 800dc9c:	0801b0de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, ip, sp, pc}
 800dca0:	0801b0e4 	stmdaeq	r1, {r2, r5, r6, r7, ip, sp, pc}
 800dca4:	0801ecfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 800dca8:	2000126c 	andcs	r1, r0, ip, ror #4
 800dcac:	20000088 	andcs	r0, r0, r8, lsl #1
 800dcb0:	0801ed73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 800dcb4:	0801edfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, fp, sp, lr, pc}
 800dcb8:	0801b0d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, ip, sp, pc}
 800dcbc:	0801b0ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, ip, sp, pc}
 800dcc0:	0801b0ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, ip, sp, pc}
 800dcc4:	f8b4 309c 	ldrh.w	r3, [r4, #156]	@ 0x9c
 800dcc8:	491f      	ldr	r1, [pc, #124]	@ (800dd48 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x40c>)
 800dcca:	0072      	lsls	r2, r6, #1
 800dccc:	4113      	asrs	r3, r2
 800dcce:	f003 0303 	and.w	r3, r3, #3
 800dcd2:	2b00      	cmp	r3, #0
 800dcd4:	bf15      	itete	ne
 800dcd6:	2301      	movne	r3, #1
 800dcd8:	2300      	moveq	r3, #0
 800dcda:	464a      	movne	r2, r9
 800dcdc:	4652      	moveq	r2, sl
 800dcde:	eb01 1106 	add.w	r1, r1, r6, lsl #4
 800dce2:	a805      	add	r0, sp, #20
 800dce4:	f7ff fb02 	bl	800d2ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, int) [clone .isra.0]>
 800dce8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800dcec:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 800dcf0:	f818 3f01 	ldrb.w	r3, [r8, #1]!
 800dcf4:	f8d4 c000 	ldr.w	ip, [r4]
 800dcf8:	42a9      	cmp	r1, r5
 800dcfa:	d21e      	bcs.n	800dd3a <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3fe>
 800dcfc:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800dd00:	9805      	ldr	r0, [sp, #20]
 800dd02:	40b2      	lsls	r2, r6
 800dd04:	ea32 0c0c 	bics.w	ip, r2, ip
 800dd08:	4408      	add	r0, r1
 800dd0a:	eba5 0501 	sub.w	r5, r5, r1
 800dd0e:	f89d 101c 	ldrb.w	r1, [sp, #28]
 800dd12:	d004      	beq.n	800dd1e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3e2>
 800dd14:	b921      	cbnz	r1, 800dd20 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3e4>
 800dd16:	9300      	str	r3, [sp, #0]
 800dd18:	4a0c      	ldr	r2, [pc, #48]	@ (800dd4c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x410>)
 800dd1a:	463b      	mov	r3, r7
 800dd1c:	e003      	b.n	800dd26 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3ea>
 800dd1e:	b179      	cbz	r1, 800dd40 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x404>
 800dd20:	4a0b      	ldr	r2, [pc, #44]	@ (800dd50 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x414>)
 800dd22:	9300      	str	r3, [sp, #0]
 800dd24:	463b      	mov	r3, r7
 800dd26:	4629      	mov	r1, r5
 800dd28:	f00c f9fe 	bl	801a128 <snprintf>
 800dd2c:	4285      	cmp	r5, r0
 800dd2e:	bfa2      	ittt	ge
 800dd30:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800dd34:	18c0      	addge	r0, r0, r3
 800dd36:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800dd3a:	3601      	adds	r6, #1
 800dd3c:	3710      	adds	r7, #16
 800dd3e:	e672      	b.n	800da26 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 800dd40:	9300      	str	r3, [sp, #0]
 800dd42:	4a04      	ldr	r2, [pc, #16]	@ (800dd54 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x418>)
 800dd44:	463b      	mov	r3, r7
 800dd46:	e7ee      	b.n	800dd26 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned long, unsigned long&)+0x3ea>
 800dd48:	0801e6cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, sp, lr, pc}
 800dd4c:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 800dd50:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 800dd54:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

0800dd58 <ArtNetParams::Set()>:
 800dd58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd5c:	f8df 9148 	ldr.w	r9, [pc, #328]	@ 800dea8 <ArtNetParams::Set()+0x150>
 800dd60:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 800deac <ArtNetParams::Set()+0x154>
 800dd64:	f8d9 3000 	ldr.w	r3, [r9]
 800dd68:	2b02      	cmp	r3, #2
 800dd6a:	bf9c      	itt	ls
 800dd6c:	f1c3 0302 	rsbls	r3, r3, #2
 800dd70:	f8c8 3000 	strls.w	r3, [r8]
 800dd74:	4b4b      	ldr	r3, [pc, #300]	@ (800dea4 <ArtNetParams::Set()+0x14c>)
 800dd76:	f8d3 a000 	ldr.w	sl, [r3]
 800dd7a:	6803      	ldr	r3, [r0, #0]
 800dd7c:	4604      	mov	r4, r0
 800dd7e:	0658      	lsls	r0, r3, #25
 800dd80:	d504      	bpl.n	800dd8c <ArtNetParams::Set()+0x34>
 800dd82:	f104 0113 	add.w	r1, r4, #19
 800dd86:	4650      	mov	r0, sl
 800dd88:	f7fd fcec 	bl	800b764 <ArtNetNode::SetLongName(char const*)>
 800dd8c:	f104 0753 	add.w	r7, r4, #83	@ 0x53
 800dd90:	2500      	movs	r5, #0
 800dd92:	f44f 2b80 	mov.w	fp, #262144	@ 0x40000
 800dd96:	e062      	b.n	800de5e <ArtNetParams::Set()+0x106>
 800dd98:	6822      	ldr	r2, [r4, #0]
 800dd9a:	2380      	movs	r3, #128	@ 0x80
 800dd9c:	40ab      	lsls	r3, r5
 800dd9e:	4393      	bics	r3, r2
 800dda0:	bf0c      	ite	eq
 800dda2:	463a      	moveq	r2, r7
 800dda4:	2200      	movne	r2, #0
 800dda6:	4631      	mov	r1, r6
 800dda8:	4650      	mov	r0, sl
 800ddaa:	f7fd fc85 	bl	800b6b8 <ArtNetNode::SetShortName(unsigned long, char const*)>
 800ddae:	f8b4 200f 	ldrh.w	r2, [r4, #15]
 800ddb2:	006b      	lsls	r3, r5, #1
 800ddb4:	411a      	asrs	r2, r3
 800ddb6:	f002 0203 	and.w	r2, r2, #3
 800ddba:	4631      	mov	r1, r6
 800ddbc:	4650      	mov	r0, sl
 800ddbe:	9301      	str	r3, [sp, #4]
 800ddc0:	f7fe f9de 	bl	800c180 <ArtNetNode::SetMergeMode(unsigned long, lightset::MergeMode)>
 800ddc4:	9b01      	ldr	r3, [sp, #4]
 800ddc6:	f8b4 209c 	ldrh.w	r2, [r4, #156]	@ 0x9c
 800ddca:	411a      	asrs	r2, r3
 800ddcc:	f002 0203 	and.w	r2, r2, #3
 800ddd0:	4631      	mov	r1, r6
 800ddd2:	4650      	mov	r0, sl
 800ddd4:	f001 f8b8 	bl	800ef48 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)>
 800ddd8:	6822      	ldr	r2, [r4, #0]
 800ddda:	fa0b f305 	lsl.w	r3, fp, r5
 800ddde:	4393      	bics	r3, r2
 800dde0:	d108      	bne.n	800ddf4 <ArtNetParams::Set()+0x9c>
 800dde2:	f105 0328 	add.w	r3, r5, #40	@ 0x28
 800dde6:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 800ddea:	230c      	movs	r3, #12
 800ddec:	fb03 a306 	mla	r3, r3, r6, sl
 800ddf0:	f8c3 2970 	str.w	r2, [r3, #2416]	@ 0x970
 800ddf4:	f894 c011 	ldrb.w	ip, [r4, #17]
 800ddf8:	2301      	movs	r3, #1
 800ddfa:	fa03 f105 	lsl.w	r1, r3, r5
 800ddfe:	b2ca      	uxtb	r2, r1
 800de00:	ea01 010c 	and.w	r1, r1, ip
 800de04:	1a89      	subs	r1, r1, r2
 800de06:	424a      	negs	r2, r1
 800de08:	414a      	adcs	r2, r1
 800de0a:	4650      	mov	r0, sl
 800de0c:	4629      	mov	r1, r5
 800de0e:	f7fd fdd1 	bl	800b9b4 <ArtNetNode::SetOutputStyle(unsigned long, lightset::OutputStyle)>
 800de12:	f8b4 c09e 	ldrh.w	ip, [r4, #158]	@ 0x9e
 800de16:	f105 0208 	add.w	r2, r5, #8
 800de1a:	2301      	movs	r3, #1
 800de1c:	fa03 f202 	lsl.w	r2, r3, r2
 800de20:	b291      	uxth	r1, r2
 800de22:	ea02 020c 	and.w	r2, r2, ip
 800de26:	4291      	cmp	r1, r2
 800de28:	d104      	bne.n	800de34 <ArtNetParams::Set()+0xdc>
 800de2a:	461a      	mov	r2, r3
 800de2c:	4631      	mov	r1, r6
 800de2e:	4650      	mov	r0, sl
 800de30:	f000 f9fe 	bl	800e230 <ArtNetNode::SetRdm(unsigned long, bool)>
 800de34:	6822      	ldr	r2, [r4, #0]
 800de36:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800de3a:	40ab      	lsls	r3, r5
 800de3c:	4393      	bics	r3, r2
 800de3e:	d10c      	bne.n	800de5a <ArtNetParams::Set()+0x102>
 800de40:	4426      	add	r6, r4
 800de42:	f896 30b0 	ldrb.w	r3, [r6, #176]	@ 0xb0
 800de46:	f88a 3a4a 	strb.w	r3, [sl, #2634]	@ 0xa4a
 800de4a:	1e5a      	subs	r2, r3, #1
 800de4c:	b2d2      	uxtb	r2, r2
 800de4e:	2ac7      	cmp	r2, #199	@ 0xc7
 800de50:	bf9c      	itt	ls
 800de52:	f88a 30d9 	strbls.w	r3, [sl, #217]	@ 0xd9
 800de56:	f88a 30e5 	strbls.w	r3, [sl, #229]	@ 0xe5
 800de5a:	3501      	adds	r5, #1
 800de5c:	3712      	adds	r7, #18
 800de5e:	f8d8 3000 	ldr.w	r3, [r8]
 800de62:	42ab      	cmp	r3, r5
 800de64:	d904      	bls.n	800de70 <ArtNetParams::Set()+0x118>
 800de66:	f8d9 6000 	ldr.w	r6, [r9]
 800de6a:	442e      	add	r6, r5
 800de6c:	2e01      	cmp	r6, #1
 800de6e:	d993      	bls.n	800dd98 <ArtNetParams::Set()+0x40>
 800de70:	7ca1      	ldrb	r1, [r4, #18]
 800de72:	2903      	cmp	r1, #3
 800de74:	d901      	bls.n	800de7a <ArtNetParams::Set()+0x122>
 800de76:	2108      	movs	r1, #8
 800de78:	e001      	b.n	800de7e <ArtNetParams::Set()+0x126>
 800de7a:	3108      	adds	r1, #8
 800de7c:	b2c9      	uxtb	r1, r1
 800de7e:	4650      	mov	r0, sl
 800de80:	f7fe f9a4 	bl	800c1cc <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>
 800de84:	6823      	ldr	r3, [r4, #0]
 800de86:	039a      	lsls	r2, r3, #14
 800de88:	bf44      	itt	mi
 800de8a:	2201      	movmi	r2, #1
 800de8c:	f88a 28c0 	strbmi.w	r2, [sl, #2240]	@ 0x8c0
 800de90:	051b      	lsls	r3, r3, #20
 800de92:	bf42      	ittt	mi
 800de94:	2301      	movmi	r3, #1
 800de96:	f88a 3914 	strbmi.w	r3, [sl, #2324]	@ 0x914
 800de9a:	f88a 302e 	strbmi.w	r3, [sl, #46]	@ 0x2e
 800de9e:	b003      	add	sp, #12
 800dea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dea4:	20001260 	andcs	r1, r0, r0, ror #4
 800dea8:	20000088 	andcs	r0, r0, r8, lsl #1
 800deac:	2000126c 	andcs	r1, r0, ip, ror #4

0800deb0 <ArtNetNode::HandleDmxIn()>:
 800deb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800deb4:	4605      	mov	r5, r0
 800deb6:	b083      	sub	sp, #12
 800deb8:	4604      	mov	r4, r0
 800deba:	4606      	mov	r6, r0
 800debc:	2700      	movs	r7, #0
 800debe:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800dec2:	b93b      	cbnz	r3, 800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800dec4:	f8d4 3878 	ldr.w	r3, [r4, #2168]	@ 0x878
 800dec8:	b923      	cbnz	r3, 800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800deca:	f896 3979 	ldrb.w	r3, [r6, #2425]	@ 0x979
 800dece:	f013 0808 	ands.w	r8, r3, #8
 800ded2:	d007      	beq.n	800dee4 <ArtNetNode::HandleDmxIn()+0x34>
 800ded4:	3428      	adds	r4, #40	@ 0x28
 800ded6:	360c      	adds	r6, #12
 800ded8:	b90f      	cbnz	r7, 800dede <ArtNetNode::HandleDmxIn()+0x2e>
 800deda:	2701      	movs	r7, #1
 800dedc:	e7ef      	b.n	800debe <ArtNetNode::HandleDmxIn()+0xe>
 800dede:	b003      	add	sp, #12
 800dee0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dee4:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 800e0e8 <ArtNetNode::HandleDmxIn()+0x238>
 800dee8:	4639      	mov	r1, r7
 800deea:	f8d9 0000 	ldr.w	r0, [r9]
 800deee:	f004 fb4f 	bl	8012590 <Dmx::GetDmxChanged(unsigned long)>
 800def2:	2800      	cmp	r0, #0
 800def4:	d172      	bne.n	800dfdc <ArtNetNode::HandleDmxIn()+0x12c>
 800def6:	f8d9 0000 	ldr.w	r0, [r9]
 800defa:	4639      	mov	r1, r7
 800defc:	f004 fbb8 	bl	8012670 <Dmx::GetDmxUpdatesPerSecond(unsigned long)>
 800df00:	2800      	cmp	r0, #0
 800df02:	d1e7      	bne.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800df04:	f996 3979 	ldrsb.w	r3, [r6, #2425]	@ 0x979
 800df08:	f896 2979 	ldrb.w	r2, [r6, #2425]	@ 0x979
 800df0c:	2b00      	cmp	r3, #0
 800df0e:	f2c0 80cb 	blt.w	800e0a8 <ArtNetNode::HandleDmxIn()+0x1f8>
 800df12:	f8d6 3974 	ldr.w	r3, [r6, #2420]	@ 0x974
 800df16:	2b00      	cmp	r3, #0
 800df18:	d0dc      	beq.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800df1a:	4a71      	ldr	r2, [pc, #452]	@ (800e0e0 <ArtNetNode::HandleDmxIn()+0x230>)
 800df1c:	6812      	ldr	r2, [r2, #0]
 800df1e:	1ad3      	subs	r3, r2, r3
 800df20:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800df24:	d9d6      	bls.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800df26:	f8c6 2974 	str.w	r2, [r6, #2420]	@ 0x974
 800df2a:	f8d9 0000 	ldr.w	r0, [r9]
 800df2e:	4639      	mov	r1, r7
 800df30:	f004 fb96 	bl	8012660 <Dmx::GetDmxCurrentData(unsigned long)>
 800df34:	f896 3978 	ldrb.w	r3, [r6, #2424]	@ 0x978
 800df38:	3301      	adds	r3, #1
 800df3a:	b2db      	uxtb	r3, r3
 800df3c:	f886 3978 	strb.w	r3, [r6, #2424]	@ 0x978
 800df40:	f885 3a83 	strb.w	r3, [r5, #2691]	@ 0xa83
 800df44:	f885 7a84 	strb.w	r7, [r5, #2692]	@ 0xa84
 800df48:	f8d0 c204 	ldr.w	ip, [r0, #516]	@ 0x204
 800df4c:	f8b4 386c 	ldrh.w	r3, [r4, #2156]	@ 0x86c
 800df50:	f8a5 3a85 	strh.w	r3, [r5, #2693]	@ 0xa85
 800df54:	f605 2289 	addw	r2, r5, #2697	@ 0xa89
 800df58:	1c43      	adds	r3, r0, #1
 800df5a:	f1bc 0f00 	cmp.w	ip, #0
 800df5e:	d018      	beq.n	800df92 <ArtNetNode::HandleDmxIn()+0xe2>
 800df60:	f10c 0e01 	add.w	lr, ip, #1
 800df64:	4470      	add	r0, lr
 800df66:	f813 1b01 	ldrb.w	r1, [r3], #1
 800df6a:	f802 1b01 	strb.w	r1, [r2], #1
 800df6e:	4283      	cmp	r3, r0
 800df70:	d1f9      	bne.n	800df66 <ArtNetNode::HandleDmxIn()+0xb6>
 800df72:	f01c 0f01 	tst.w	ip, #1
 800df76:	bf1b      	ittet	ne
 800df78:	44ac      	addne	ip, r5
 800df7a:	2300      	movne	r3, #0
 800df7c:	f3cc 2807 	ubfxeq	r8, ip, #8, #8
 800df80:	f88c 3a89 	strbne.w	r3, [ip, #2697]	@ 0xa89
 800df84:	bf0e      	itee	eq
 800df86:	fa5f fc8c 	uxtbeq.w	ip, ip
 800df8a:	f3ce 2807 	ubfxne	r8, lr, #8, #8
 800df8e:	fa5f fc8e 	uxtbne.w	ip, lr
 800df92:	f885 8a87 	strb.w	r8, [r5, #2695]	@ 0xa87
 800df96:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 800e0ec <ArtNetNode::HandleDmxIn()+0x23c>
 800df9a:	f885 ca88 	strb.w	ip, [r5, #2696]	@ 0xa88
 800df9e:	f8d8 2000 	ldr.w	r2, [r8]
 800dfa2:	f8d5 0848 	ldr.w	r0, [r5, #2120]	@ 0x848
 800dfa6:	f8d6 3970 	ldr.w	r3, [r6, #2416]	@ 0x970
 800dfaa:	f605 2977 	addw	r9, r5, #2679	@ 0xa77
 800dfae:	b13a      	cbz	r2, 800dfc0 <ArtNetNode::HandleDmxIn()+0x110>
 800dfb0:	f641 1236 	movw	r2, #6454	@ 0x1936
 800dfb4:	9200      	str	r2, [sp, #0]
 800dfb6:	4649      	mov	r1, r9
 800dfb8:	f240 2212 	movw	r2, #530	@ 0x212
 800dfbc:	f006 fd22 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800dfc0:	f894 387c 	ldrb.w	r3, [r4, #2172]	@ 0x87c
 800dfc4:	2b00      	cmp	r3, #0
 800dfc6:	d085      	beq.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800dfc8:	f8d8 3000 	ldr.w	r3, [r8]
 800dfcc:	f8c5 984c 	str.w	r9, [r5, #2124]	@ 0x84c
 800dfd0:	f8c5 3850 	str.w	r3, [r5, #2128]	@ 0x850
 800dfd4:	4628      	mov	r0, r5
 800dfd6:	f7fe fae3 	bl	800c5a0 <ArtNetNode::HandleDmx()>
 800dfda:	e77b      	b.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800dfdc:	f896 3978 	ldrb.w	r3, [r6, #2424]	@ 0x978
 800dfe0:	3301      	adds	r3, #1
 800dfe2:	b2db      	uxtb	r3, r3
 800dfe4:	f886 3978 	strb.w	r3, [r6, #2424]	@ 0x978
 800dfe8:	f885 3a83 	strb.w	r3, [r5, #2691]	@ 0xa83
 800dfec:	f885 7a84 	strb.w	r7, [r5, #2692]	@ 0xa84
 800dff0:	f8d0 c204 	ldr.w	ip, [r0, #516]	@ 0x204
 800dff4:	f8b4 286c 	ldrh.w	r2, [r4, #2156]	@ 0x86c
 800dff8:	f8a5 2a85 	strh.w	r2, [r5, #2693]	@ 0xa85
 800dffc:	1c43      	adds	r3, r0, #1
 800dffe:	f605 2289 	addw	r2, r5, #2697	@ 0xa89
 800e002:	f1bc 0f00 	cmp.w	ip, #0
 800e006:	d068      	beq.n	800e0da <ArtNetNode::HandleDmxIn()+0x22a>
 800e008:	f60c 2089 	addw	r0, ip, #2697	@ 0xa89
 800e00c:	4428      	add	r0, r5
 800e00e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800e012:	f802 1b01 	strb.w	r1, [r2], #1
 800e016:	4282      	cmp	r2, r0
 800e018:	d1f9      	bne.n	800e00e <ArtNetNode::HandleDmxIn()+0x15e>
 800e01a:	f01c 0f01 	tst.w	ip, #1
 800e01e:	bf1e      	ittt	ne
 800e020:	eb05 030c 	addne.w	r3, r5, ip
 800e024:	2200      	movne	r2, #0
 800e026:	f10c 0c01 	addne.w	ip, ip, #1
 800e02a:	f3cc 2807 	ubfx	r8, ip, #8, #8
 800e02e:	bf18      	it	ne
 800e030:	f883 2a89 	strbne.w	r2, [r3, #2697]	@ 0xa89
 800e034:	fa5f fc8c 	uxtb.w	ip, ip
 800e038:	f885 8a87 	strb.w	r8, [r5, #2695]	@ 0xa87
 800e03c:	2380      	movs	r3, #128	@ 0x80
 800e03e:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 800e0ec <ArtNetNode::HandleDmxIn()+0x23c>
 800e042:	f885 ca88 	strb.w	ip, [r5, #2696]	@ 0xa88
 800e046:	f886 3979 	strb.w	r3, [r6, #2425]	@ 0x979
 800e04a:	f8d8 2000 	ldr.w	r2, [r8]
 800e04e:	f8d5 0848 	ldr.w	r0, [r5, #2120]	@ 0x848
 800e052:	f8d6 3970 	ldr.w	r3, [r6, #2416]	@ 0x970
 800e056:	f605 2977 	addw	r9, r5, #2679	@ 0xa77
 800e05a:	b13a      	cbz	r2, 800e06c <ArtNetNode::HandleDmxIn()+0x1bc>
 800e05c:	f641 1236 	movw	r2, #6454	@ 0x1936
 800e060:	9200      	str	r2, [sp, #0]
 800e062:	4649      	mov	r1, r9
 800e064:	f240 2212 	movw	r2, #530	@ 0x212
 800e068:	f006 fccc 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800e06c:	f894 387c 	ldrb.w	r3, [r4, #2172]	@ 0x87c
 800e070:	b983      	cbnz	r3, 800e094 <ArtNetNode::HandleDmxIn()+0x1e4>
 800e072:	4a1c      	ldr	r2, [pc, #112]	@ (800e0e4 <ArtNetNode::HandleDmxIn()+0x234>)
 800e074:	2301      	movs	r3, #1
 800e076:	6811      	ldr	r1, [r2, #0]
 800e078:	40bb      	lsls	r3, r7
 800e07a:	ea33 0001 	bics.w	r0, r3, r1
 800e07e:	f43f af29 	beq.w	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800e082:	430b      	orrs	r3, r1
 800e084:	6013      	str	r3, [r2, #0]
 800e086:	f895 3916 	ldrb.w	r3, [r5, #2326]	@ 0x916
 800e08a:	f043 0301 	orr.w	r3, r3, #1
 800e08e:	f885 3916 	strb.w	r3, [r5, #2326]	@ 0x916
 800e092:	e71f      	b.n	800ded4 <ArtNetNode::HandleDmxIn()+0x24>
 800e094:	f8d8 3000 	ldr.w	r3, [r8]
 800e098:	f8c5 984c 	str.w	r9, [r5, #2124]	@ 0x84c
 800e09c:	f8c5 3850 	str.w	r3, [r5, #2128]	@ 0x850
 800e0a0:	4628      	mov	r0, r5
 800e0a2:	f7fe fa7d 	bl	800c5a0 <ArtNetNode::HandleDmx()>
 800e0a6:	e7e4      	b.n	800e072 <ArtNetNode::HandleDmxIn()+0x1c2>
 800e0a8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800e0ac:	4b0c      	ldr	r3, [pc, #48]	@ (800e0e0 <ArtNetNode::HandleDmxIn()+0x230>)
 800e0ae:	490d      	ldr	r1, [pc, #52]	@ (800e0e4 <ArtNetNode::HandleDmxIn()+0x234>)
 800e0b0:	f886 2979 	strb.w	r2, [r6, #2425]	@ 0x979
 800e0b4:	681b      	ldr	r3, [r3, #0]
 800e0b6:	f8c6 3974 	str.w	r3, [r6, #2420]	@ 0x974
 800e0ba:	2201      	movs	r2, #1
 800e0bc:	680b      	ldr	r3, [r1, #0]
 800e0be:	40ba      	lsls	r2, r7
 800e0c0:	ea23 0302 	bic.w	r3, r3, r2
 800e0c4:	600b      	str	r3, [r1, #0]
 800e0c6:	2b00      	cmp	r3, #0
 800e0c8:	f47f af2f 	bne.w	800df2a <ArtNetNode::HandleDmxIn()+0x7a>
 800e0cc:	f895 3916 	ldrb.w	r3, [r5, #2326]	@ 0x916
 800e0d0:	f023 0301 	bic.w	r3, r3, #1
 800e0d4:	f885 3916 	strb.w	r3, [r5, #2326]	@ 0x916
 800e0d8:	e727      	b.n	800df2a <ArtNetNode::HandleDmxIn()+0x7a>
 800e0da:	46c4      	mov	ip, r8
 800e0dc:	e7ac      	b.n	800e038 <ArtNetNode::HandleDmxIn()+0x188>
 800e0de:	bf00      	nop
 800e0e0:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 800e0e4:	20001270 	andcs	r1, r0, r0, ror r2
 800e0e8:	20001c4c 	andcs	r1, r0, ip, asr #24
 800e0ec:	20002954 	andcs	r2, r0, r4, asr r9

0800e0f0 <ArtNetNode::HandleInput()>:
 800e0f0:	b430      	push	{r4, r5}
 800e0f2:	f8d0 184c 	ldr.w	r1, [r0, #2124]	@ 0x84c
 800e0f6:	7b4b      	ldrb	r3, [r1, #13]
 800e0f8:	b103      	cbz	r3, 800e0fc <ArtNetNode::HandleInput()+0xc>
 800e0fa:	3b01      	subs	r3, #1
 800e0fc:	7bca      	ldrb	r2, [r1, #15]
 800e0fe:	2a01      	cmp	r2, #1
 800e100:	d11a      	bne.n	800e138 <ArtNetNode::HandleInput()+0x48>
 800e102:	2228      	movs	r2, #40	@ 0x28
 800e104:	fb02 0203 	mla	r2, r2, r3, r0
 800e108:	f8d2 2874 	ldr.w	r2, [r2, #2164]	@ 0x874
 800e10c:	b9a2      	cbnz	r2, 800e138 <ArtNetNode::HandleInput()+0x48>
 800e10e:	240c      	movs	r4, #12
 800e110:	fb04 0203 	mla	r2, r4, r3, r0
 800e114:	7c0d      	ldrb	r5, [r1, #16]
 800e116:	f892 2979 	ldrb.w	r2, [r2, #2425]	@ 0x979
 800e11a:	07ed      	lsls	r5, r5, #31
 800e11c:	fb04 0303 	mla	r3, r4, r3, r0
 800e120:	bf4c      	ite	mi
 800e122:	f042 0208 	orrmi.w	r2, r2, #8
 800e126:	f002 02f7 	andpl.w	r2, r2, #247	@ 0xf7
 800e12a:	f883 2979 	strb.w	r2, [r3, #2425]	@ 0x979
 800e12e:	7c0a      	ldrb	r2, [r1, #16]
 800e130:	f002 0201 	and.w	r2, r2, #1
 800e134:	f883 20da 	strb.w	r2, [r3, #218]	@ 0xda
 800e138:	f890 390e 	ldrb.w	r3, [r0, #2318]	@ 0x90e
 800e13c:	b133      	cbz	r3, 800e14c <ArtNetNode::HandleInput()+0x5c>
 800e13e:	2300      	movs	r3, #0
 800e140:	bc30      	pop	{r4, r5}
 800e142:	f8d0 2850 	ldr.w	r2, [r0, #2128]	@ 0x850
 800e146:	4619      	mov	r1, r3
 800e148:	f7fe beca 	b.w	800cee0 <ArtNetNode::SendPollRelply(unsigned long, unsigned long, artnet::ArtPollQueue*)>
 800e14c:	bc30      	pop	{r4, r5}
 800e14e:	4770      	bx	lr

0800e150 <ArtNetNode::HandleTodRequest()>:
 800e150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e154:	f8d0 884c 	ldr.w	r8, [r0, #2124]	@ 0x84c
 800e158:	f898 5017 	ldrb.w	r5, [r8, #23]
 800e15c:	f005 051f 	and.w	r5, r5, #31
 800e160:	4604      	mov	r4, r0
 800e162:	4647      	mov	r7, r8
 800e164:	4445      	add	r5, r8
 800e166:	42af      	cmp	r7, r5
 800e168:	d101      	bne.n	800e16e <ArtNetNode::HandleTodRequest()+0x1e>
 800e16a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e16e:	f898 3015 	ldrb.w	r3, [r8, #21]
 800e172:	7e3e      	ldrb	r6, [r7, #24]
 800e174:	ea46 2603 	orr.w	r6, r6, r3, lsl #8
 800e178:	f994 3945 	ldrsb.w	r3, [r4, #2373]	@ 0x945
 800e17c:	2b00      	cmp	r3, #0
 800e17e:	db0b      	blt.n	800e198 <ArtNetNode::HandleTodRequest()+0x48>
 800e180:	f8b4 386c 	ldrh.w	r3, [r4, #2156]	@ 0x86c
 800e184:	429e      	cmp	r6, r3
 800e186:	d107      	bne.n	800e198 <ArtNetNode::HandleTodRequest()+0x48>
 800e188:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800e18c:	2b01      	cmp	r3, #1
 800e18e:	d103      	bne.n	800e198 <ArtNetNode::HandleTodRequest()+0x48>
 800e190:	2100      	movs	r1, #0
 800e192:	4620      	mov	r0, r4
 800e194:	f000 fb42 	bl	800e81c <ArtNetNode::SendTod(unsigned long)>
 800e198:	f994 3969 	ldrsb.w	r3, [r4, #2409]	@ 0x969
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	db0a      	blt.n	800e1b6 <ArtNetNode::HandleTodRequest()+0x66>
 800e1a0:	f8b4 3894 	ldrh.w	r3, [r4, #2196]	@ 0x894
 800e1a4:	42b3      	cmp	r3, r6
 800e1a6:	d106      	bne.n	800e1b6 <ArtNetNode::HandleTodRequest()+0x66>
 800e1a8:	f8d4 189c 	ldr.w	r1, [r4, #2204]	@ 0x89c
 800e1ac:	2901      	cmp	r1, #1
 800e1ae:	d102      	bne.n	800e1b6 <ArtNetNode::HandleTodRequest()+0x66>
 800e1b0:	4620      	mov	r0, r4
 800e1b2:	f000 fb33 	bl	800e81c <ArtNetNode::SendTod(unsigned long)>
 800e1b6:	3701      	adds	r7, #1
 800e1b8:	e7d5      	b.n	800e166 <ArtNetNode::HandleTodRequest()+0x16>
	...

0800e1bc <ArtNetStore::SaveRdmEnabled(unsigned long, bool)>:
 800e1bc:	b570      	push	{r4, r5, r6, lr}
 800e1be:	4b1a      	ldr	r3, [pc, #104]	@ (800e228 <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x6c>)
 800e1c0:	681c      	ldr	r4, [r3, #0]
 800e1c2:	4284      	cmp	r4, r0
 800e1c4:	b086      	sub	sp, #24
 800e1c6:	460d      	mov	r5, r1
 800e1c8:	d829      	bhi.n	800e21e <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x62>
 800e1ca:	1b04      	subs	r4, r0, r4
 800e1cc:	2c03      	cmp	r4, #3
 800e1ce:	d826      	bhi.n	800e21e <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x62>
 800e1d0:	239e      	movs	r3, #158	@ 0x9e
 800e1d2:	2200      	movs	r2, #0
 800e1d4:	e9cd 3200 	strd	r3, r2, [sp]
 800e1d8:	4e14      	ldr	r6, [pc, #80]	@ (800e22c <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x70>)
 800e1da:	2302      	movs	r3, #2
 800e1dc:	f10d 0216 	add.w	r2, sp, #22
 800e1e0:	6830      	ldr	r0, [r6, #0]
 800e1e2:	2119      	movs	r1, #25
 800e1e4:	f008 f91a 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800e1e8:	2201      	movs	r2, #1
 800e1ea:	f104 0308 	add.w	r3, r4, #8
 800e1ee:	fa02 f303 	lsl.w	r3, r2, r3
 800e1f2:	40a2      	lsls	r2, r4
 800e1f4:	4313      	orrs	r3, r2
 800e1f6:	b29b      	uxth	r3, r3
 800e1f8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e1fc:	b98d      	cbnz	r5, 800e222 <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x66>
 800e1fe:	ea22 0303 	bic.w	r3, r2, r3
 800e202:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e206:	2300      	movs	r3, #0
 800e208:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e20c:	2302      	movs	r3, #2
 800e20e:	9300      	str	r3, [sp, #0]
 800e210:	6830      	ldr	r0, [r6, #0]
 800e212:	f10d 0316 	add.w	r3, sp, #22
 800e216:	229e      	movs	r2, #158	@ 0x9e
 800e218:	2119      	movs	r1, #25
 800e21a:	f008 f8d9 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800e21e:	b006      	add	sp, #24
 800e220:	bd70      	pop	{r4, r5, r6, pc}
 800e222:	4313      	orrs	r3, r2
 800e224:	e7ed      	b.n	800e202 <ArtNetStore::SaveRdmEnabled(unsigned long, bool)+0x46>
 800e226:	bf00      	nop
 800e228:	20000088 	andcs	r0, r0, r8, lsl #1
 800e22c:	20002a00 	andcs	r2, r0, r0, lsl #20

0800e230 <ArtNetNode::SetRdm(unsigned long, bool)>:
 800e230:	b538      	push	{r3, r4, r5, lr}
 800e232:	2324      	movs	r3, #36	@ 0x24
 800e234:	fb03 0301 	mla	r3, r3, r1, r0
 800e238:	4615      	mov	r5, r2
 800e23a:	f893 3945 	ldrb.w	r3, [r3, #2373]	@ 0x945
 800e23e:	43da      	mvns	r2, r3
 800e240:	f3c2 12c0 	ubfx	r2, r2, #7, #1
 800e244:	42aa      	cmp	r2, r5
 800e246:	460c      	mov	r4, r1
 800e248:	d018      	beq.n	800e27c <ArtNetNode::SetRdm(unsigned long, bool)+0x4c>
 800e24a:	b9a5      	cbnz	r5, 800e276 <ArtNetNode::SetRdm(unsigned long, bool)+0x46>
 800e24c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800e250:	2224      	movs	r2, #36	@ 0x24
 800e252:	fb02 0204 	mla	r2, r2, r4, r0
 800e256:	f882 3945 	strb.w	r3, [r2, #2373]	@ 0x945
 800e25a:	f890 390d 	ldrb.w	r3, [r0, #2317]	@ 0x90d
 800e25e:	2b02      	cmp	r3, #2
 800e260:	d10c      	bne.n	800e27c <ArtNetNode::SetRdm(unsigned long, bool)+0x4c>
 800e262:	4629      	mov	r1, r5
 800e264:	4620      	mov	r0, r4
 800e266:	f7ff ffa9 	bl	800e1bc <ArtNetStore::SaveRdmEnabled(unsigned long, bool)>
 800e26a:	4629      	mov	r1, r5
 800e26c:	4620      	mov	r0, r4
 800e26e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e272:	f007 be9f 	b.w	8015fb4 <artnet::display_rdm_enabled(unsigned long, bool)>
 800e276:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800e27a:	e7e9      	b.n	800e250 <ArtNetNode::SetRdm(unsigned long, bool)+0x20>
 800e27c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e280 <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]>:
 800e280:	b570      	push	{r4, r5, r6, lr}
 800e282:	7d0b      	ldrb	r3, [r1, #20]
 800e284:	460c      	mov	r4, r1
 800e286:	3301      	adds	r3, #1
 800e288:	211a      	movs	r1, #26
 800e28a:	2200      	movs	r2, #0
 800e28c:	f104 0c08 	add.w	ip, r4, #8
 800e290:	4605      	mov	r5, r0
 800e292:	7523      	strb	r3, [r4, #20]
 800e294:	70a1      	strb	r1, [r4, #2]
 800e296:	8222      	strh	r2, [r4, #16]
 800e298:	1ca3      	adds	r3, r4, #2
 800e29a:	4660      	mov	r0, ip
 800e29c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800e2a0:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
 800e2a4:	7019      	strb	r1, [r3, #0]
 800e2a6:	4283      	cmp	r3, r0
 800e2a8:	f88c 2000 	strb.w	r2, [ip]
 800e2ac:	d1f6      	bne.n	800e29c <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]+0x1c>
 800e2ae:	f104 3cff 	add.w	ip, r4, #4294967295	@ 0xffffffff
 800e2b2:	f104 0219 	add.w	r2, r4, #25
 800e2b6:	2300      	movs	r3, #0
 800e2b8:	f81c ef01 	ldrb.w	lr, [ip, #1]!
 800e2bc:	4473      	add	r3, lr
 800e2be:	4594      	cmp	ip, r2
 800e2c0:	b29b      	uxth	r3, r3
 800e2c2:	d1f9      	bne.n	800e2b8 <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]+0x38>
 800e2c4:	4910      	ldr	r1, [pc, #64]	@ (800e308 <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]+0x88>)
 800e2c6:	4e11      	ldr	r6, [pc, #68]	@ (800e30c <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]+0x8c>)
 800e2c8:	76e3      	strb	r3, [r4, #27]
 800e2ca:	0a1a      	lsrs	r2, r3, #8
 800e2cc:	76a2      	strb	r2, [r4, #26]
 800e2ce:	6809      	ldr	r1, [r1, #0]
 800e2d0:	20c8      	movs	r0, #200	@ 0xc8
 800e2d2:	f00a fe89 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 800e2d6:	2300      	movs	r3, #0
 800e2d8:	6830      	ldr	r0, [r6, #0]
 800e2da:	461a      	mov	r2, r3
 800e2dc:	4629      	mov	r1, r5
 800e2de:	f003 fdc9 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800e2e2:	4622      	mov	r2, r4
 800e2e4:	6830      	ldr	r0, [r6, #0]
 800e2e6:	231c      	movs	r3, #28
 800e2e8:	4629      	mov	r1, r5
 800e2ea:	f004 f9c9 	bl	8012680 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>
 800e2ee:	2100      	movs	r1, #0
 800e2f0:	2004      	movs	r0, #4
 800e2f2:	f00a fe79 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 800e2f6:	2301      	movs	r3, #1
 800e2f8:	6830      	ldr	r0, [r6, #0]
 800e2fa:	4629      	mov	r1, r5
 800e2fc:	461a      	mov	r2, r3
 800e2fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e302:	f003 bdb7 	b.w	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800e306:	bf00      	nop
 800e308:	20002694 	mulcs	r0, r4, r6
 800e30c:	20001c4c 	andcs	r1, r0, ip, asr #24

0800e310 <RDMTod::RDMTod()>:
 800e310:	2200      	movs	r2, #0
 800e312:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800e316:	e9c0 2300 	strd	r2, r3, [r0]
 800e31a:	b500      	push	{lr}
 800e31c:	f100 0c2a 	add.w	ip, r0, #42	@ 0x2a
 800e320:	f200 4eda 	addw	lr, r0, #1242	@ 0x4da
 800e324:	4a0b      	ldr	r2, [pc, #44]	@ (800e354 <RDMTod::RDMTod()+0x44>)
 800e326:	f1ac 0306 	sub.w	r3, ip, #6
 800e32a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e32e:	f803 1b01 	strb.w	r1, [r3], #1
 800e332:	4563      	cmp	r3, ip
 800e334:	d1f9      	bne.n	800e32a <RDMTod::RDMTod()+0x1a>
 800e336:	f103 0c06 	add.w	ip, r3, #6
 800e33a:	45f4      	cmp	ip, lr
 800e33c:	d1f2      	bne.n	800e324 <RDMTod::RDMTod()+0x14>
 800e33e:	2300      	movs	r3, #0
 800e340:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800e344:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e348:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e34c:	6203      	str	r3, [r0, #32]
 800e34e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e352:	bf00      	nop
 800e354:	0801e7cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, sp, lr, pc}

0800e358 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)>:
 800e358:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e35c:	4f9e      	ldr	r7, [pc, #632]	@ (800e5d8 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x280>)
 800e35e:	1c96      	adds	r6, r2, #2
 800e360:	460d      	mov	r5, r1
 800e362:	f102 0408 	add.w	r4, r2, #8
 800e366:	4611      	mov	r1, r2
 800e368:	46bc      	mov	ip, r7
 800e36a:	4633      	mov	r3, r6
 800e36c:	e001      	b.n	800e372 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x1a>
 800e36e:	42a3      	cmp	r3, r4
 800e370:	d036      	beq.n	800e3e0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x88>
 800e372:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e376:	f81c 0b01 	ldrb.w	r0, [ip], #1
 800e37a:	4570      	cmp	r0, lr
 800e37c:	d0f7      	beq.n	800e36e <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x16>
 800e37e:	1d13      	adds	r3, r2, #4
 800e380:	e001      	b.n	800e386 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x2e>
 800e382:	42a3      	cmp	r3, r4
 800e384:	d02c      	beq.n	800e3e0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x88>
 800e386:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 800e38a:	f817 0b01 	ldrb.w	r0, [r7], #1
 800e38e:	4584      	cmp	ip, r0
 800e390:	d0f7      	beq.n	800e382 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x2a>
 800e392:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e396:	f8df 824c 	ldr.w	r8, [pc, #588]	@ 800e5e4 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x28c>
 800e39a:	fb05 f303 	mul.w	r3, r5, r3
 800e39e:	f858 9003 	ldr.w	r9, [r8, r3]
 800e3a2:	f1b9 0f00 	cmp.w	r9, #0
 800e3a6:	d013      	beq.n	800e3d0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x78>
 800e3a8:	f108 0429 	add.w	r4, r8, #41	@ 0x29
 800e3ac:	441c      	add	r4, r3
 800e3ae:	2700      	movs	r7, #0
 800e3b0:	1fa3      	subs	r3, r4, #6
 800e3b2:	46b4      	mov	ip, r6
 800e3b4:	e001      	b.n	800e3ba <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x62>
 800e3b6:	429c      	cmp	r4, r3
 800e3b8:	d04c      	beq.n	800e454 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xfc>
 800e3ba:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e3be:	f81c ef01 	ldrb.w	lr, [ip, #1]!
 800e3c2:	4570      	cmp	r0, lr
 800e3c4:	d0f7      	beq.n	800e3b6 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x5e>
 800e3c6:	3701      	adds	r7, #1
 800e3c8:	45b9      	cmp	r9, r7
 800e3ca:	f104 0406 	add.w	r4, r4, #6
 800e3ce:	d1ef      	bne.n	800e3b0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x58>
 800e3d0:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e3d4:	fb03 8305 	mla	r3, r3, r5, r8
 800e3d8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800e3dc:	605a      	str	r2, [r3, #4]
 800e3de:	e033      	b.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e3e0:	7d13      	ldrb	r3, [r2, #20]
 800e3e2:	f003 03ef 	and.w	r3, r3, #239	@ 0xef
 800e3e6:	2b20      	cmp	r3, #32
 800e3e8:	d031      	beq.n	800e44e <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf6>
 800e3ea:	f8df 81f8 	ldr.w	r8, [pc, #504]	@ 800e5e4 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x28c>
 800e3ee:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e3f2:	fb05 f303 	mul.w	r3, r5, r3
 800e3f6:	eb08 0003 	add.w	r0, r8, r3
 800e3fa:	f858 3003 	ldr.w	r3, [r8, r3]
 800e3fe:	6840      	ldr	r0, [r0, #4]
 800e400:	3001      	adds	r0, #1
 800e402:	4298      	cmp	r0, r3
 800e404:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e408:	fb05 f303 	mul.w	r3, r5, r3
 800e40c:	bf08      	it	eq
 800e40e:	2400      	moveq	r4, #0
 800e410:	eb08 0603 	add.w	r6, r8, r3
 800e414:	bf16      	itet	ne
 800e416:	eb00 0440 	addne.w	r4, r0, r0, lsl #1
 800e41a:	4620      	moveq	r0, r4
 800e41c:	0064      	lslne	r4, r4, #1
 800e41e:	6070      	str	r0, [r6, #4]
 800e420:	3324      	adds	r3, #36	@ 0x24
 800e422:	4423      	add	r3, r4
 800e424:	7d10      	ldrb	r0, [r2, #20]
 800e426:	4443      	add	r3, r8
 800e428:	2601      	movs	r6, #1
 800e42a:	2400      	movs	r4, #0
 800e42c:	2810      	cmp	r0, #16
 800e42e:	d10b      	bne.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e430:	f8b2 0015 	ldrh.w	r0, [r2, #21]
 800e434:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800e438:	d01a      	beq.n	800e470 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x118>
 800e43a:	f5b0 7f40 	cmp.w	r0, #768	@ 0x300
 800e43e:	d07a      	beq.n	800e536 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x1de>
 800e440:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 800e444:	f000 8089 	beq.w	800e55a <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x202>
 800e448:	2000      	movs	r0, #0
 800e44a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e44e:	2001      	movs	r0, #1
 800e450:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e454:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e458:	fb03 8305 	mla	r3, r3, r5, r8
 800e45c:	605f      	str	r7, [r3, #4]
 800e45e:	7d10      	ldrb	r0, [r2, #20]
 800e460:	f000 03ef 	and.w	r3, r0, #239	@ 0xef
 800e464:	2b20      	cmp	r3, #32
 800e466:	d0f2      	beq.n	800e44e <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf6>
 800e468:	1cd3      	adds	r3, r2, #3
 800e46a:	2600      	movs	r6, #0
 800e46c:	2401      	movs	r4, #1
 800e46e:	e7dd      	b.n	800e42c <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xd4>
 800e470:	f240 40d4 	movw	r0, #1236	@ 0x4d4
 800e474:	fb00 8005 	mla	r0, r0, r5, r8
 800e478:	6844      	ldr	r4, [r0, #4]
 800e47a:	1c66      	adds	r6, r4, #1
 800e47c:	d0e4      	beq.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e47e:	f240 1035 	movw	r0, #309	@ 0x135
 800e482:	fb05 f000 	mul.w	r0, r5, r0
 800e486:	eb00 1054 	add.w	r0, r0, r4, lsr #5
 800e48a:	3002      	adds	r0, #2
 800e48c:	f004 041f 	and.w	r4, r4, #31
 800e490:	f858 6020 	ldr.w	r6, [r8, r0, lsl #2]
 800e494:	2001      	movs	r0, #1
 800e496:	40a0      	lsls	r0, r4
 800e498:	43b0      	bics	r0, r6
 800e49a:	d0d5      	beq.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e49c:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
 800e4a0:	f102 0017 	add.w	r0, r2, #23
 800e4a4:	f102 0c1d 	add.w	ip, r2, #29
 800e4a8:	4674      	mov	r4, lr
 800e4aa:	e001      	b.n	800e4b0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x158>
 800e4ac:	4560      	cmp	r0, ip
 800e4ae:	d006      	beq.n	800e4be <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x166>
 800e4b0:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800e4b4:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 800e4b8:	42b7      	cmp	r7, r6
 800e4ba:	d0f7      	beq.n	800e4ac <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x154>
 800e4bc:	dcc4      	bgt.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e4be:	3305      	adds	r3, #5
 800e4c0:	4670      	mov	r0, lr
 800e4c2:	e001      	b.n	800e4c8 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x170>
 800e4c4:	4283      	cmp	r3, r0
 800e4c6:	d006      	beq.n	800e4d6 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x17e>
 800e4c8:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800e4cc:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 800e4d0:	42a6      	cmp	r6, r4
 800e4d2:	d0f7      	beq.n	800e4c4 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x16c>
 800e4d4:	dcb8      	bgt.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e4d6:	4841      	ldr	r0, [pc, #260]	@ (800e5dc <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x284>)
 800e4d8:	6050      	str	r0, [r2, #4]
 800e4da:	f04f 30fe 	mov.w	r0, #4278124286	@ 0xfefefefe
 800e4de:	6010      	str	r0, [r2, #0]
 800e4e0:	f240 50fa 	movw	r0, #1530	@ 0x5fa
 800e4e4:	f81e 4f01 	ldrb.w	r4, [lr, #1]!
 800e4e8:	f064 0455 	orn	r4, r4, #85	@ 0x55
 800e4ec:	720c      	strb	r4, [r1, #8]
 800e4ee:	f89e 4000 	ldrb.w	r4, [lr]
 800e4f2:	f044 0455 	orr.w	r4, r4, #85	@ 0x55
 800e4f6:	724c      	strb	r4, [r1, #9]
 800e4f8:	f89e 4000 	ldrb.w	r4, [lr]
 800e4fc:	459e      	cmp	lr, r3
 800e4fe:	4420      	add	r0, r4
 800e500:	f101 0102 	add.w	r1, r1, #2
 800e504:	b280      	uxth	r0, r0
 800e506:	d1ed      	bne.n	800e4e4 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x18c>
 800e508:	0a04      	lsrs	r4, r0, #8
 800e50a:	2300      	movs	r3, #0
 800e50c:	f364 0307 	bfi	r3, r4, #0, #8
 800e510:	b2c0      	uxtb	r0, r0
 800e512:	f364 230f 	bfi	r3, r4, #8, #8
 800e516:	f360 4317 	bfi	r3, r0, #16, #8
 800e51a:	f360 631f 	bfi	r3, r0, #24, #8
 800e51e:	f043 2355 	orr.w	r3, r3, #1426085120	@ 0x55005500
 800e522:	482f      	ldr	r0, [pc, #188]	@ (800e5e0 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x288>)
 800e524:	f043 13aa 	orr.w	r3, r3, #11141290	@ 0xaa00aa
 800e528:	6153      	str	r3, [r2, #20]
 800e52a:	6800      	ldr	r0, [r0, #0]
 800e52c:	4629      	mov	r1, r5
 800e52e:	2318      	movs	r3, #24
 800e530:	f004 f974 	bl	801281c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)>
 800e534:	e788      	b.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e536:	7dd3      	ldrb	r3, [r2, #23]
 800e538:	2b00      	cmp	r3, #0
 800e53a:	d185      	bne.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e53c:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e540:	fb03 8305 	mla	r3, r3, r5, r8
 800e544:	b906      	cbnz	r6, 800e548 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x1f0>
 800e546:	bb84      	cbnz	r4, 800e5aa <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x252>
 800e548:	2200      	movs	r2, #0
 800e54a:	e9c3 2202 	strd	r2, r2, [r3, #8]
 800e54e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800e552:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800e556:	621a      	str	r2, [r3, #32]
 800e558:	e776      	b.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e55a:	7dd3      	ldrb	r3, [r2, #23]
 800e55c:	2b00      	cmp	r3, #0
 800e55e:	f47f af73 	bne.w	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e562:	2c00      	cmp	r4, #0
 800e564:	f43f af70 	beq.w	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e568:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800e56c:	fb03 8305 	mla	r3, r3, r5, r8
 800e570:	6858      	ldr	r0, [r3, #4]
 800e572:	1c43      	adds	r3, r0, #1
 800e574:	d00f      	beq.n	800e596 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x23e>
 800e576:	f240 1335 	movw	r3, #309	@ 0x135
 800e57a:	fb05 f303 	mul.w	r3, r5, r3
 800e57e:	eb03 1350 	add.w	r3, r3, r0, lsr #5
 800e582:	3302      	adds	r3, #2
 800e584:	f000 001f 	and.w	r0, r0, #31
 800e588:	f858 4023 	ldr.w	r4, [r8, r3, lsl #2]
 800e58c:	2101      	movs	r1, #1
 800e58e:	4081      	lsls	r1, r0
 800e590:	4321      	orrs	r1, r4
 800e592:	f848 1023 	str.w	r1, [r8, r3, lsl #2]
 800e596:	2102      	movs	r1, #2
 800e598:	2300      	movs	r3, #0
 800e59a:	f8a2 1017 	strh.w	r1, [r2, #23]
 800e59e:	7653      	strb	r3, [r2, #25]
 800e5a0:	4611      	mov	r1, r2
 800e5a2:	4628      	mov	r0, r5
 800e5a4:	f7ff fe6c 	bl	800e280 <respond_message_ack(unsigned long, TRdmMessage*) [clone .constprop.0]>
 800e5a8:	e74e      	b.n	800e448 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0xf0>
 800e5aa:	6859      	ldr	r1, [r3, #4]
 800e5ac:	1c48      	adds	r0, r1, #1
 800e5ae:	d0f2      	beq.n	800e596 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x23e>
 800e5b0:	f240 1335 	movw	r3, #309	@ 0x135
 800e5b4:	fb05 f303 	mul.w	r3, r5, r3
 800e5b8:	eb03 1351 	add.w	r3, r3, r1, lsr #5
 800e5bc:	3302      	adds	r3, #2
 800e5be:	f001 011f 	and.w	r1, r1, #31
 800e5c2:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
 800e5c6:	2401      	movs	r4, #1
 800e5c8:	fa04 f101 	lsl.w	r1, r4, r1
 800e5cc:	ea20 0001 	bic.w	r0, r0, r1
 800e5d0:	f848 0023 	str.w	r0, [r8, r3, lsl #2]
 800e5d4:	e7df      	b.n	800e596 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)+0x23e>
 800e5d6:	bf00      	nop
 800e5d8:	0801e7cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, sp, lr, pc}
 800e5dc:	aafefefe 	bge	7fce1dc <__stack_size+0x7fc61dc>
 800e5e0:	20001c4c 	andcs	r1, r0, ip, asr #24
 800e5e4:	20001274 	andcs	r1, r0, r4, ror r2

0800e5e8 <_GLOBAL__sub_I__ZN19ArtNetRdmController9m_pRDMTodE>:
 800e5e8:	b510      	push	{r4, lr}
 800e5ea:	4c04      	ldr	r4, [pc, #16]	@ (800e5fc <_GLOBAL__sub_I__ZN19ArtNetRdmController9m_pRDMTodE+0x14>)
 800e5ec:	4620      	mov	r0, r4
 800e5ee:	f7ff fe8f 	bl	800e310 <RDMTod::RDMTod()>
 800e5f2:	f204 40d4 	addw	r0, r4, #1236	@ 0x4d4
 800e5f6:	f7ff fe8b 	bl	800e310 <RDMTod::RDMTod()>
 800e5fa:	bd10      	pop	{r4, pc}
 800e5fc:	20001274 	andcs	r1, r0, r4, ror r2

0800e600 <memcpy.isra.0>:
 800e600:	440a      	add	r2, r1
 800e602:	4291      	cmp	r1, r2
 800e604:	d100      	bne.n	800e608 <memcpy.isra.0+0x8>
 800e606:	4770      	bx	lr
 800e608:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e60c:	f800 3b01 	strb.w	r3, [r0], #1
 800e610:	e7f7      	b.n	800e602 <memcpy.isra.0+0x2>
	...

0800e614 <RDMTod::Reset()>:
 800e614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e616:	4f0d      	ldr	r7, [pc, #52]	@ (800e64c <RDMTod::Reset()+0x38>)
 800e618:	4604      	mov	r4, r0
 800e61a:	f100 0624 	add.w	r6, r0, #36	@ 0x24
 800e61e:	2500      	movs	r5, #0
 800e620:	6823      	ldr	r3, [r4, #0]
 800e622:	42ab      	cmp	r3, r5
 800e624:	d809      	bhi.n	800e63a <RDMTod::Reset()+0x26>
 800e626:	2300      	movs	r3, #0
 800e628:	e9c4 3302 	strd	r3, r3, [r4, #8]
 800e62c:	e9c4 3304 	strd	r3, r3, [r4, #16]
 800e630:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800e634:	6023      	str	r3, [r4, #0]
 800e636:	6223      	str	r3, [r4, #32]
 800e638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e63a:	4630      	mov	r0, r6
 800e63c:	2206      	movs	r2, #6
 800e63e:	4639      	mov	r1, r7
 800e640:	f7ff ffde 	bl	800e600 <memcpy.isra.0>
 800e644:	3501      	adds	r5, #1
 800e646:	3606      	adds	r6, #6
 800e648:	e7ea      	b.n	800e620 <RDMTod::Reset()+0xc>
 800e64a:	bf00      	nop
 800e64c:	0801e7d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sl, sp, lr, pc}

0800e650 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>:
 800e650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e654:	4d0d      	ldr	r5, [pc, #52]	@ (800e68c <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)+0x3c>)
 800e656:	2300      	movs	r3, #0
 800e658:	4604      	mov	r4, r0
 800e65a:	460e      	mov	r6, r1
 800e65c:	4617      	mov	r7, r2
 800e65e:	4601      	mov	r1, r0
 800e660:	461a      	mov	r2, r3
 800e662:	6828      	ldr	r0, [r5, #0]
 800e664:	f003 fc06 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800e668:	463b      	mov	r3, r7
 800e66a:	4632      	mov	r2, r6
 800e66c:	6828      	ldr	r0, [r5, #0]
 800e66e:	4621      	mov	r1, r4
 800e670:	f004 f806 	bl	8012680 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>
 800e674:	2100      	movs	r1, #0
 800e676:	2004      	movs	r0, #4
 800e678:	f00a fcb6 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 800e67c:	2301      	movs	r3, #1
 800e67e:	6828      	ldr	r0, [r5, #0]
 800e680:	4621      	mov	r1, r4
 800e682:	461a      	mov	r2, r3
 800e684:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e688:	f003 bbf4 	b.w	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800e68c:	20001c4c 	andcs	r1, r0, ip, asr #24

0800e690 <ArtNetNode::HandleTodControl()>:
 800e690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e694:	f8d0 a84c 	ldr.w	sl, [r0, #2124]	@ 0x84c
 800e698:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800e69c:	4605      	mov	r5, r0
 800e69e:	b3c3      	cbz	r3, 800e712 <ArtNetNode::HandleTodControl()+0x82>
 800e6a0:	f89a 3015 	ldrb.w	r3, [sl, #21]
 800e6a4:	f89a 9017 	ldrb.w	r9, [sl, #23]
 800e6a8:	4f2c      	ldr	r7, [pc, #176]	@ (800e75c <ArtNetNode::HandleTodControl()+0xcc>)
 800e6aa:	ea49 2903 	orr.w	r9, r9, r3, lsl #8
 800e6ae:	4680      	mov	r8, r0
 800e6b0:	4604      	mov	r4, r0
 800e6b2:	2600      	movs	r6, #0
 800e6b4:	f8b8 386c 	ldrh.w	r3, [r8, #2156]	@ 0x86c
 800e6b8:	454b      	cmp	r3, r9
 800e6ba:	d123      	bne.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e6bc:	f8d8 3874 	ldr.w	r3, [r8, #2164]	@ 0x874
 800e6c0:	2b01      	cmp	r3, #1
 800e6c2:	d141      	bne.n	800e748 <ArtNetNode::HandleTodControl()+0xb8>
 800e6c4:	f994 2945 	ldrsb.w	r2, [r4, #2373]	@ 0x945
 800e6c8:	f894 3945 	ldrb.w	r3, [r4, #2373]	@ 0x945
 800e6cc:	2a00      	cmp	r2, #0
 800e6ce:	db19      	blt.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e6d0:	f89a 2016 	ldrb.w	r2, [sl, #22]
 800e6d4:	3a01      	subs	r2, #1
 800e6d6:	2a03      	cmp	r2, #3
 800e6d8:	d814      	bhi.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e6da:	e8df f002 	tbb	[pc, r2]
 800e6de:	322f1c04 	eorcc	r1, pc, #4, 24	@ 0x400
 800e6e2:	2601      	movs	r6, #1
 800e6e4:	e7e6      	b.n	800e6b4 <ArtNetNode::HandleTodControl()+0x24>
 800e6e6:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
 800e6ea:	463a      	mov	r2, r7
 800e6ec:	f8d3 0158 	ldr.w	r0, [r3, #344]	@ 0x158
 800e6f0:	4631      	mov	r1, r6
 800e6f2:	3058      	adds	r0, #88	@ 0x58
 800e6f4:	f002 f8e8 	bl	80108c8 <RDMDiscovery::Full(unsigned long, RDMTod*)>
 800e6f8:	f894 3945 	ldrb.w	r3, [r4, #2373]	@ 0x945
 800e6fc:	f023 0320 	bic.w	r3, r3, #32
 800e700:	f884 3945 	strb.w	r3, [r4, #2373]	@ 0x945
 800e704:	f108 0828 	add.w	r8, r8, #40	@ 0x28
 800e708:	3424      	adds	r4, #36	@ 0x24
 800e70a:	f207 47d4 	addw	r7, r7, #1236	@ 0x4d4
 800e70e:	2e00      	cmp	r6, #0
 800e710:	d0e7      	beq.n	800e6e2 <ArtNetNode::HandleTodControl()+0x52>
 800e712:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e716:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
 800e71a:	f8d3 0158 	ldr.w	r0, [r3, #344]	@ 0x158
 800e71e:	f8d0 3174 	ldr.w	r3, [r0, #372]	@ 0x174
 800e722:	b133      	cbz	r3, 800e732 <ArtNetNode::HandleTodControl()+0xa2>
 800e724:	f8d0 3168 	ldr.w	r3, [r0, #360]	@ 0x168
 800e728:	42b3      	cmp	r3, r6
 800e72a:	d102      	bne.n	800e732 <ArtNetNode::HandleTodControl()+0xa2>
 800e72c:	3058      	adds	r0, #88	@ 0x58
 800e72e:	f002 f94d 	bl	80109cc <RDMDiscovery::Stop()>
 800e732:	f894 3945 	ldrb.w	r3, [r4, #2373]	@ 0x945
 800e736:	f043 0320 	orr.w	r3, r3, #32
 800e73a:	e7e1      	b.n	800e700 <ArtNetNode::HandleTodControl()+0x70>
 800e73c:	f023 0310 	bic.w	r3, r3, #16
 800e740:	e7de      	b.n	800e700 <ArtNetNode::HandleTodControl()+0x70>
 800e742:	f043 0310 	orr.w	r3, r3, #16
 800e746:	e7db      	b.n	800e700 <ArtNetNode::HandleTodControl()+0x70>
 800e748:	2b00      	cmp	r3, #0
 800e74a:	d1db      	bne.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e74c:	f89a 3016 	ldrb.w	r3, [sl, #22]
 800e750:	2b01      	cmp	r3, #1
 800e752:	d1d7      	bne.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e754:	4638      	mov	r0, r7
 800e756:	f7ff ff5d 	bl	800e614 <RDMTod::Reset()>
 800e75a:	e7d3      	b.n	800e704 <ArtNetNode::HandleTodControl()+0x74>
 800e75c:	20001274 	andcs	r1, r0, r4, ror r2

0800e760 <ArtNetNode::HandleTodData()>:
 800e760:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e764:	f8d0 784c 	ldr.w	r7, [r0, #2124]	@ 0x84c
 800e768:	7b3b      	ldrb	r3, [r7, #12]
 800e76a:	2b01      	cmp	r3, #1
 800e76c:	4604      	mov	r4, r0
 800e76e:	d114      	bne.n	800e79a <ArtNetNode::HandleTodData()+0x3a>
 800e770:	7d7a      	ldrb	r2, [r7, #21]
 800e772:	7dfb      	ldrb	r3, [r7, #23]
 800e774:	4d27      	ldr	r5, [pc, #156]	@ (800e814 <ArtNetNode::HandleTodData()+0xb4>)
 800e776:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800e77a:	9301      	str	r3, [sp, #4]
 800e77c:	f04f 0800 	mov.w	r8, #0
 800e780:	f8d4 6874 	ldr.w	r6, [r4, #2164]	@ 0x874
 800e784:	b166      	cbz	r6, 800e7a0 <ArtNetNode::HandleTodData()+0x40>
 800e786:	f208 48d4 	addw	r8, r8, #1236	@ 0x4d4
 800e78a:	f640 13a8 	movw	r3, #2472	@ 0x9a8
 800e78e:	4598      	cmp	r8, r3
 800e790:	f104 0428 	add.w	r4, r4, #40	@ 0x28
 800e794:	f205 45d4 	addw	r5, r5, #1236	@ 0x4d4
 800e798:	d1f2      	bne.n	800e780 <ArtNetNode::HandleTodData()+0x20>
 800e79a:	b003      	add	sp, #12
 800e79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7a0:	f8b4 386c 	ldrh.w	r3, [r4, #2156]	@ 0x86c
 800e7a4:	9a01      	ldr	r2, [sp, #4]
 800e7a6:	4293      	cmp	r3, r2
 800e7a8:	d1ed      	bne.n	800e786 <ArtNetNode::HandleTodData()+0x26>
 800e7aa:	f107 091c 	add.w	r9, r7, #28
 800e7ae:	7efb      	ldrb	r3, [r7, #27]
 800e7b0:	42b3      	cmp	r3, r6
 800e7b2:	d9e8      	bls.n	800e786 <ArtNetNode::HandleTodData()+0x26>
 800e7b4:	f855 3c24 	ldr.w	r3, [r5, #-36]
 800e7b8:	2bc8      	cmp	r3, #200	@ 0xc8
 800e7ba:	d027      	beq.n	800e80c <ArtNetNode::HandleTodData()+0xac>
 800e7bc:	4629      	mov	r1, r5
 800e7be:	2200      	movs	r2, #0
 800e7c0:	4293      	cmp	r3, r2
 800e7c2:	d111      	bne.n	800e7e8 <ArtNetNode::HandleTodData()+0x88>
 800e7c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800e7c8:	f845 2c20 	str.w	r2, [r5, #-32]
 800e7cc:	1c5a      	adds	r2, r3, #1
 800e7ce:	f845 2c24 	str.w	r2, [r5, #-36]
 800e7d2:	f108 0024 	add.w	r0, r8, #36	@ 0x24
 800e7d6:	2206      	movs	r2, #6
 800e7d8:	fb02 0003 	mla	r0, r2, r3, r0
 800e7dc:	4b0e      	ldr	r3, [pc, #56]	@ (800e818 <ArtNetNode::HandleTodData()+0xb8>)
 800e7de:	4649      	mov	r1, r9
 800e7e0:	4418      	add	r0, r3
 800e7e2:	f7ff ff0d 	bl	800e600 <memcpy.isra.0>
 800e7e6:	e011      	b.n	800e80c <ArtNetNode::HandleTodData()+0xac>
 800e7e8:	1e48      	subs	r0, r1, #1
 800e7ea:	f109 3cff 	add.w	ip, r9, #4294967295	@ 0xffffffff
 800e7ee:	f101 0e05 	add.w	lr, r1, #5
 800e7f2:	f810 bf01 	ldrb.w	fp, [r0, #1]!
 800e7f6:	f81c af01 	ldrb.w	sl, [ip, #1]!
 800e7fa:	45d3      	cmp	fp, sl
 800e7fc:	d002      	beq.n	800e804 <ArtNetNode::HandleTodData()+0xa4>
 800e7fe:	3201      	adds	r2, #1
 800e800:	3106      	adds	r1, #6
 800e802:	e7dd      	b.n	800e7c0 <ArtNetNode::HandleTodData()+0x60>
 800e804:	4570      	cmp	r0, lr
 800e806:	d1f4      	bne.n	800e7f2 <ArtNetNode::HandleTodData()+0x92>
 800e808:	f845 2c20 	str.w	r2, [r5, #-32]
 800e80c:	3601      	adds	r6, #1
 800e80e:	f109 0906 	add.w	r9, r9, #6
 800e812:	e7cc      	b.n	800e7ae <ArtNetNode::HandleTodData()+0x4e>
 800e814:	20001298 	mulcs	r0, r8, r2
 800e818:	20001274 	andcs	r1, r0, r4, ror r2

0800e81c <ArtNetNode::SendTod(unsigned long)>:
 800e81c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e81e:	f600 4689 	addw	r6, r0, #3209	@ 0xc89
 800e822:	4604      	mov	r4, r0
 800e824:	460d      	mov	r5, r1
 800e826:	2208      	movs	r2, #8
 800e828:	4932      	ldr	r1, [pc, #200]	@ (800e8f4 <ArtNetNode::SendTod(unsigned long)+0xd8>)
 800e82a:	4630      	mov	r0, r6
 800e82c:	f7ff fee8 	bl	800e600 <memcpy.isra.0>
 800e830:	f06f 027e 	mvn.w	r2, #126	@ 0x7e
 800e834:	f884 2c92 	strb.w	r2, [r4, #3218]	@ 0xc92
 800e838:	f240 40d4 	movw	r0, #1236	@ 0x4d4
 800e83c:	220e      	movs	r2, #14
 800e83e:	2300      	movs	r3, #0
 800e840:	f884 2c94 	strb.w	r2, [r4, #3220]	@ 0xc94
 800e844:	4368      	muls	r0, r5
 800e846:	492c      	ldr	r1, [pc, #176]	@ (800e8f8 <ArtNetNode::SendTod(unsigned long)+0xdc>)
 800e848:	f884 3c91 	strb.w	r3, [r4, #3217]	@ 0xc91
 800e84c:	2201      	movs	r2, #1
 800e84e:	f005 0703 	and.w	r7, r5, #3
 800e852:	f884 3c93 	strb.w	r3, [r4, #3219]	@ 0xc93
 800e856:	f884 2c95 	strb.w	r2, [r4, #3221]	@ 0xc95
 800e85a:	3701      	adds	r7, #1
 800e85c:	5c0a      	ldrb	r2, [r1, r0]
 800e85e:	f884 7c96 	strb.w	r7, [r4, #3222]	@ 0xc96
 800e862:	1c6f      	adds	r7, r5, #1
 800e864:	f884 7c9d 	strb.w	r7, [r4, #3229]	@ 0xc9d
 800e868:	2728      	movs	r7, #40	@ 0x28
 800e86a:	fb07 4505 	mla	r5, r7, r5, r4
 800e86e:	f884 3c97 	strb.w	r3, [r4, #3223]	@ 0xc97
 800e872:	f884 3c98 	strb.w	r3, [r4, #3224]	@ 0xc98
 800e876:	f884 3c99 	strb.w	r3, [r4, #3225]	@ 0xc99
 800e87a:	f884 3c9a 	strb.w	r3, [r4, #3226]	@ 0xc9a
 800e87e:	f884 3c9b 	strb.w	r3, [r4, #3227]	@ 0xc9b
 800e882:	f884 3c9c 	strb.w	r3, [r4, #3228]	@ 0xc9c
 800e886:	f895 786f 	ldrb.w	r7, [r5, #2159]	@ 0x86f
 800e88a:	f884 7c9e 	strb.w	r7, [r4, #3230]	@ 0xc9e
 800e88e:	f884 3c9f 	strb.w	r3, [r4, #3231]	@ 0xc9f
 800e892:	f895 586e 	ldrb.w	r5, [r5, #2158]	@ 0x86e
 800e896:	f884 3ca1 	strb.w	r3, [r4, #3233]	@ 0xca1
 800e89a:	f884 3ca3 	strb.w	r3, [r4, #3235]	@ 0xca3
 800e89e:	f100 0324 	add.w	r3, r0, #36	@ 0x24
 800e8a2:	440b      	add	r3, r1
 800e8a4:	f884 5ca0 	strb.w	r5, [r4, #3232]	@ 0xca0
 800e8a8:	f884 2ca2 	strb.w	r2, [r4, #3234]	@ 0xca2
 800e8ac:	f884 2ca4 	strb.w	r2, [r4, #3236]	@ 0xca4
 800e8b0:	f604 4ea5 	addw	lr, r4, #3237	@ 0xca5
 800e8b4:	461f      	mov	r7, r3
 800e8b6:	4401      	add	r1, r0
 800e8b8:	f04f 0c06 	mov.w	ip, #6
 800e8bc:	6808      	ldr	r0, [r1, #0]
 800e8be:	1afd      	subs	r5, r7, r3
 800e8c0:	fb0c f000 	mul.w	r0, ip, r0
 800e8c4:	4285      	cmp	r5, r0
 800e8c6:	d310      	bcc.n	800e8ea <ArtNetNode::SendTod(unsigned long)+0xce>
 800e8c8:	490c      	ldr	r1, [pc, #48]	@ (800e8fc <ArtNetNode::SendTod(unsigned long)+0xe0>)
 800e8ca:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800e8ce:	68cb      	ldr	r3, [r1, #12]
 800e8d0:	6809      	ldr	r1, [r1, #0]
 800e8d2:	fb0c f202 	mul.w	r2, ip, r2
 800e8d6:	321c      	adds	r2, #28
 800e8d8:	b129      	cbz	r1, 800e8e6 <ArtNetNode::SendTod(unsigned long)+0xca>
 800e8da:	f641 1136 	movw	r1, #6454	@ 0x1936
 800e8de:	9100      	str	r1, [sp, #0]
 800e8e0:	4631      	mov	r1, r6
 800e8e2:	f006 f88f 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800e8e6:	b003      	add	sp, #12
 800e8e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8ea:	f817 0b01 	ldrb.w	r0, [r7], #1
 800e8ee:	f80e 0b01 	strb.w	r0, [lr], #1
 800e8f2:	e7e3      	b.n	800e8bc <ArtNetNode::SendTod(unsigned long)+0xa0>
 800e8f4:	0801e7d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, sp, lr, pc}
 800e8f8:	20001274 	andcs	r1, r0, r4, ror r2
 800e8fc:	20002954 	andcs	r2, r0, r4, asr r9

0800e900 <ArtNetNode::SendTodRequest(unsigned long)>:
 800e900:	4b24      	ldr	r3, [pc, #144]	@ (800e994 <ArtNetNode::SendTodRequest(unsigned long)+0x94>)
 800e902:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e904:	4604      	mov	r4, r0
 800e906:	f240 40d4 	movw	r0, #1236	@ 0x4d4
 800e90a:	fb00 3001 	mla	r0, r0, r1, r3
 800e90e:	f604 4689 	addw	r6, r4, #3209	@ 0xc89
 800e912:	460d      	mov	r5, r1
 800e914:	f7ff fe7e 	bl	800e614 <RDMTod::Reset()>
 800e918:	2208      	movs	r2, #8
 800e91a:	4630      	mov	r0, r6
 800e91c:	491e      	ldr	r1, [pc, #120]	@ (800e998 <ArtNetNode::SendTodRequest(unsigned long)+0x98>)
 800e91e:	f7ff fe6f 	bl	800e600 <memcpy.isra.0>
 800e922:	f06f 027f 	mvn.w	r2, #127	@ 0x7f
 800e926:	f884 2c92 	strb.w	r2, [r4, #3218]	@ 0xc92
 800e92a:	220e      	movs	r2, #14
 800e92c:	f884 2c94 	strb.w	r2, [r4, #3220]	@ 0xc94
 800e930:	2228      	movs	r2, #40	@ 0x28
 800e932:	2300      	movs	r3, #0
 800e934:	fb02 4505 	mla	r5, r2, r5, r4
 800e938:	f884 3c91 	strb.w	r3, [r4, #3217]	@ 0xc91
 800e93c:	f884 3c93 	strb.w	r3, [r4, #3219]	@ 0xc93
 800e940:	f884 3c97 	strb.w	r3, [r4, #3223]	@ 0xc97
 800e944:	f884 3c98 	strb.w	r3, [r4, #3224]	@ 0xc98
 800e948:	f884 3c99 	strb.w	r3, [r4, #3225]	@ 0xc99
 800e94c:	f884 3c9a 	strb.w	r3, [r4, #3226]	@ 0xc9a
 800e950:	f884 3c9b 	strb.w	r3, [r4, #3227]	@ 0xc9b
 800e954:	f884 3c9c 	strb.w	r3, [r4, #3228]	@ 0xc9c
 800e958:	f884 3c9d 	strb.w	r3, [r4, #3229]	@ 0xc9d
 800e95c:	f895 286f 	ldrb.w	r2, [r5, #2159]	@ 0x86f
 800e960:	f884 3c9f 	strb.w	r3, [r4, #3231]	@ 0xc9f
 800e964:	2301      	movs	r3, #1
 800e966:	f884 2c9e 	strb.w	r2, [r4, #3230]	@ 0xc9e
 800e96a:	f884 3ca0 	strb.w	r3, [r4, #3232]	@ 0xca0
 800e96e:	4a0b      	ldr	r2, [pc, #44]	@ (800e99c <ArtNetNode::SendTodRequest(unsigned long)+0x9c>)
 800e970:	f895 386e 	ldrb.w	r3, [r5, #2158]	@ 0x86e
 800e974:	f884 3ca1 	strb.w	r3, [r4, #3233]	@ 0xca1
 800e978:	68d3      	ldr	r3, [r2, #12]
 800e97a:	6812      	ldr	r2, [r2, #0]
 800e97c:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800e980:	b132      	cbz	r2, 800e990 <ArtNetNode::SendTodRequest(unsigned long)+0x90>
 800e982:	f641 1236 	movw	r2, #6454	@ 0x1936
 800e986:	9200      	str	r2, [sp, #0]
 800e988:	4631      	mov	r1, r6
 800e98a:	2219      	movs	r2, #25
 800e98c:	f006 f83a 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800e990:	b002      	add	sp, #8
 800e992:	bd70      	pop	{r4, r5, r6, pc}
 800e994:	20001274 	andcs	r1, r0, r4, ror r2
 800e998:	0801e7d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, sp, lr, pc}
 800e99c:	20002954 	andcs	r2, r0, r4, asr r9

0800e9a0 <ArtNetNode::HandleRdm()>:
 800e9a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e9a4:	f8d0 484c 	ldr.w	r4, [r0, #2124]	@ 0x84c
 800e9a8:	7b23      	ldrb	r3, [r4, #12]
 800e9aa:	2b01      	cmp	r3, #1
 800e9ac:	4605      	mov	r5, r0
 800e9ae:	d14a      	bne.n	800ea46 <ArtNetNode::HandleRdm()+0xa6>
 800e9b0:	7d63      	ldrb	r3, [r4, #21]
 800e9b2:	f894 9017 	ldrb.w	r9, [r4, #23]
 800e9b6:	4680      	mov	r8, r0
 800e9b8:	ea49 2903 	orr.w	r9, r9, r3, lsl #8
 800e9bc:	4606      	mov	r6, r0
 800e9be:	2700      	movs	r7, #0
 800e9c0:	f8b8 386c 	ldrh.w	r3, [r8, #2156]	@ 0x86c
 800e9c4:	454b      	cmp	r3, r9
 800e9c6:	d139      	bne.n	800ea3c <ArtNetNode::HandleRdm()+0x9c>
 800e9c8:	f8d8 3874 	ldr.w	r3, [r8, #2164]	@ 0x874
 800e9cc:	2b01      	cmp	r3, #1
 800e9ce:	d12e      	bne.n	800ea2e <ArtNetNode::HandleRdm()+0x8e>
 800e9d0:	f996 3945 	ldrsb.w	r3, [r6, #2373]	@ 0x945
 800e9d4:	2b00      	cmp	r3, #0
 800e9d6:	db31      	blt.n	800ea3c <ArtNetNode::HandleRdm()+0x9c>
 800e9d8:	f8d8 3878 	ldr.w	r3, [r8, #2168]	@ 0x878
 800e9dc:	2b01      	cmp	r3, #1
 800e9de:	d10a      	bne.n	800e9f6 <ArtNetNode::HandleRdm()+0x56>
 800e9e0:	4639      	mov	r1, r7
 800e9e2:	4628      	mov	r0, r5
 800e9e4:	f000 fb20 	bl	800f028 <ArtNetNode::GetGoodOutput4(unsigned long)>
 800e9e8:	f010 0f89 	tst.w	r0, #137	@ 0x89
 800e9ec:	bf14      	ite	ne
 800e9ee:	2301      	movne	r3, #1
 800e9f0:	2300      	moveq	r3, #0
 800e9f2:	f886 3947 	strb.w	r3, [r6, #2375]	@ 0x947
 800e9f6:	f896 3947 	ldrb.w	r3, [r6, #2375]	@ 0x947
 800e9fa:	b143      	cbz	r3, 800ea0e <ArtNetNode::HandleRdm()+0x6e>
 800e9fc:	f8d5 0860 	ldr.w	r0, [r5, #2144]	@ 0x860
 800ea00:	2300      	movs	r3, #0
 800ea02:	f886 3947 	strb.w	r3, [r6, #2375]	@ 0x947
 800ea06:	6803      	ldr	r3, [r0, #0]
 800ea08:	4639      	mov	r1, r7
 800ea0a:	68db      	ldr	r3, [r3, #12]
 800ea0c:	4798      	blx	r3
 800ea0e:	f8d5 3850 	ldr.w	r3, [r5, #2128]	@ 0x850
 800ea12:	f8c6 3940 	str.w	r3, [r6, #2368]	@ 0x940
 800ea16:	7e62      	ldrb	r2, [r4, #25]
 800ea18:	23cc      	movs	r3, #204	@ 0xcc
 800ea1a:	75e3      	strb	r3, [r4, #23]
 800ea1c:	3202      	adds	r2, #2
 800ea1e:	f104 0117 	add.w	r1, r4, #23
 800ea22:	4638      	mov	r0, r7
 800ea24:	f7ff fe14 	bl	800e650 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>
 800ea28:	e008      	b.n	800ea3c <ArtNetNode::HandleRdm()+0x9c>
 800ea2a:	2701      	movs	r7, #1
 800ea2c:	e7c8      	b.n	800e9c0 <ArtNetNode::HandleRdm()+0x20>
 800ea2e:	b92b      	cbnz	r3, 800ea3c <ArtNetNode::HandleRdm()+0x9c>
 800ea30:	f894 302b 	ldrb.w	r3, [r4, #43]	@ 0x2b
 800ea34:	f003 03ef 	and.w	r3, r3, #239	@ 0xef
 800ea38:	2b21      	cmp	r3, #33	@ 0x21
 800ea3a:	d0ec      	beq.n	800ea16 <ArtNetNode::HandleRdm()+0x76>
 800ea3c:	f108 0828 	add.w	r8, r8, #40	@ 0x28
 800ea40:	3624      	adds	r6, #36	@ 0x24
 800ea42:	2f00      	cmp	r7, #0
 800ea44:	d0f1      	beq.n	800ea2a <ArtNetNode::HandleRdm()+0x8a>
 800ea46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ea4c <ArtNetNode::HandleRdmIn()>:
 800ea4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea50:	4605      	mov	r5, r0
 800ea52:	b083      	sub	sp, #12
 800ea54:	f8d5 b874 	ldr.w	fp, [r5, #2164]	@ 0x874
 800ea58:	4604      	mov	r4, r0
 800ea5a:	4681      	mov	r9, r0
 800ea5c:	4607      	mov	r7, r0
 800ea5e:	f04f 0800 	mov.w	r8, #0
 800ea62:	f600 4a89 	addw	sl, r0, #3209	@ 0xc89
 800ea66:	f1bb 0f00 	cmp.w	fp, #0
 800ea6a:	d010      	beq.n	800ea8e <ArtNetNode::HandleRdmIn()+0x42>
 800ea6c:	f1bb 0f01 	cmp.w	fp, #1
 800ea70:	d053      	beq.n	800eb1a <ArtNetNode::HandleRdmIn()+0xce>
 800ea72:	3528      	adds	r5, #40	@ 0x28
 800ea74:	3724      	adds	r7, #36	@ 0x24
 800ea76:	f109 090c 	add.w	r9, r9, #12
 800ea7a:	f1b8 0f00 	cmp.w	r8, #0
 800ea7e:	d149      	bne.n	800eb14 <ArtNetNode::HandleRdmIn()+0xc8>
 800ea80:	f8d5 b874 	ldr.w	fp, [r5, #2164]	@ 0x874
 800ea84:	f04f 0801 	mov.w	r8, #1
 800ea88:	f1bb 0f00 	cmp.w	fp, #0
 800ea8c:	d1ee      	bne.n	800ea6c <ArtNetNode::HandleRdmIn()+0x20>
 800ea8e:	4b42      	ldr	r3, [pc, #264]	@ (800eb98 <ArtNetNode::HandleRdmIn()+0x14c>)
 800ea90:	4641      	mov	r1, r8
 800ea92:	6818      	ldr	r0, [r3, #0]
 800ea94:	f003 ff8c 	bl	80129b0 <Dmx::RdmReceive(unsigned long)>
 800ea98:	4606      	mov	r6, r0
 800ea9a:	2800      	cmp	r0, #0
 800ea9c:	d0e9      	beq.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800ea9e:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800eaa2:	4632      	mov	r2, r6
 800eaa4:	f8d3 0158 	ldr.w	r0, [r3, #344]	@ 0x158
 800eaa8:	4641      	mov	r1, r8
 800eaaa:	f7ff fc55 	bl	800e358 <ArtNetRdmController::RdmReceive(unsigned long, unsigned char const*)>
 800eaae:	2800      	cmp	r0, #0
 800eab0:	d0df      	beq.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eab2:	f06f 037c 	mvn.w	r3, #124	@ 0x7c
 800eab6:	f884 3c92 	strb.w	r3, [r4, #3218]	@ 0xc92
 800eaba:	2301      	movs	r3, #1
 800eabc:	f884 bc91 	strb.w	fp, [r4, #3217]	@ 0xc91
 800eac0:	f884 3c95 	strb.w	r3, [r4, #3221]	@ 0xc95
 800eac4:	f895 386f 	ldrb.w	r3, [r5, #2159]	@ 0x86f
 800eac8:	f884 3c9e 	strb.w	r3, [r4, #3230]	@ 0xc9e
 800eacc:	f884 bc9f 	strb.w	fp, [r4, #3231]	@ 0xc9f
 800ead0:	f895 386e 	ldrb.w	r3, [r5, #2158]	@ 0x86e
 800ead4:	f884 3ca0 	strb.w	r3, [r4, #3232]	@ 0xca0
 800ead8:	78b0      	ldrb	r0, [r6, #2]
 800eada:	3002      	adds	r0, #2
 800eadc:	4430      	add	r0, r6
 800eade:	1c73      	adds	r3, r6, #1
 800eae0:	f604 42a1 	addw	r2, r4, #3233	@ 0xca1
 800eae4:	f813 1b01 	ldrb.w	r1, [r3], #1
 800eae8:	f802 1b01 	strb.w	r1, [r2], #1
 800eaec:	4283      	cmp	r3, r0
 800eaee:	d1f9      	bne.n	800eae4 <ArtNetNode::HandleRdmIn()+0x98>
 800eaf0:	4b2a      	ldr	r3, [pc, #168]	@ (800eb9c <ArtNetNode::HandleRdmIn()+0x150>)
 800eaf2:	f894 2ca2 	ldrb.w	r2, [r4, #3234]	@ 0xca2
 800eaf6:	6819      	ldr	r1, [r3, #0]
 800eaf8:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800eafc:	f8d9 3970 	ldr.w	r3, [r9, #2416]	@ 0x970
 800eb00:	3219      	adds	r2, #25
 800eb02:	2900      	cmp	r1, #0
 800eb04:	d0b5      	beq.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eb06:	f641 1136 	movw	r1, #6454	@ 0x1936
 800eb0a:	9100      	str	r1, [sp, #0]
 800eb0c:	4651      	mov	r1, sl
 800eb0e:	f005 ff79 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800eb12:	e7ae      	b.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eb14:	b003      	add	sp, #12
 800eb16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb1a:	f8d7 3940 	ldr.w	r3, [r7, #2368]	@ 0x940
 800eb1e:	2b00      	cmp	r3, #0
 800eb20:	d0a7      	beq.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eb22:	4b1d      	ldr	r3, [pc, #116]	@ (800eb98 <ArtNetNode::HandleRdmIn()+0x14c>)
 800eb24:	4641      	mov	r1, r8
 800eb26:	6818      	ldr	r0, [r3, #0]
 800eb28:	f003 ff42 	bl	80129b0 <Dmx::RdmReceive(unsigned long)>
 800eb2c:	2800      	cmp	r0, #0
 800eb2e:	d0a0      	beq.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eb30:	2300      	movs	r3, #0
 800eb32:	f06f 027c 	mvn.w	r2, #124	@ 0x7c
 800eb36:	f884 bc95 	strb.w	fp, [r4, #3221]	@ 0xc95
 800eb3a:	f884 3c91 	strb.w	r3, [r4, #3217]	@ 0xc91
 800eb3e:	f884 2c92 	strb.w	r2, [r4, #3218]	@ 0xc92
 800eb42:	f895 286f 	ldrb.w	r2, [r5, #2159]	@ 0x86f
 800eb46:	f884 2c9e 	strb.w	r2, [r4, #3230]	@ 0xc9e
 800eb4a:	f884 3c9f 	strb.w	r3, [r4, #3231]	@ 0xc9f
 800eb4e:	f895 386e 	ldrb.w	r3, [r5, #2158]	@ 0x86e
 800eb52:	f884 3ca0 	strb.w	r3, [r4, #3232]	@ 0xca0
 800eb56:	7881      	ldrb	r1, [r0, #2]
 800eb58:	3102      	adds	r1, #2
 800eb5a:	4401      	add	r1, r0
 800eb5c:	f604 43a1 	addw	r3, r4, #3233	@ 0xca1
 800eb60:	3001      	adds	r0, #1
 800eb62:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eb66:	f803 2b01 	strb.w	r2, [r3], #1
 800eb6a:	4288      	cmp	r0, r1
 800eb6c:	d1f9      	bne.n	800eb62 <ArtNetNode::HandleRdmIn()+0x116>
 800eb6e:	4b0b      	ldr	r3, [pc, #44]	@ (800eb9c <ArtNetNode::HandleRdmIn()+0x150>)
 800eb70:	f894 2ca2 	ldrb.w	r2, [r4, #3234]	@ 0xca2
 800eb74:	6819      	ldr	r1, [r3, #0]
 800eb76:	f8d4 0848 	ldr.w	r0, [r4, #2120]	@ 0x848
 800eb7a:	f8d7 3940 	ldr.w	r3, [r7, #2368]	@ 0x940
 800eb7e:	3219      	adds	r2, #25
 800eb80:	b129      	cbz	r1, 800eb8e <ArtNetNode::HandleRdmIn()+0x142>
 800eb82:	f641 1136 	movw	r1, #6454	@ 0x1936
 800eb86:	9100      	str	r1, [sp, #0]
 800eb88:	4651      	mov	r1, sl
 800eb8a:	f005 ff3b 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 800eb8e:	2300      	movs	r3, #0
 800eb90:	f8c7 3940 	str.w	r3, [r7, #2368]	@ 0x940
 800eb94:	e76d      	b.n	800ea72 <ArtNetNode::HandleRdmIn()+0x26>
 800eb96:	bf00      	nop
 800eb98:	20001c4c 	andcs	r1, r0, ip, asr #24
 800eb9c:	20002954 	andcs	r2, r0, r4, asr r9

0800eba0 <ArtNetNode::HandleRdmSub()>:
 800eba0:	4770      	bx	lr
	...

0800eba4 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)>:
 800eba4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800eba8:	235b      	movs	r3, #91	@ 0x5b
 800ebaa:	f8df 80ec 	ldr.w	r8, [pc, #236]	@ 800ec98 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xf4>
 800ebae:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 800ec9c <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xf8>
 800ebb2:	f8df a0ec 	ldr.w	sl, [pc, #236]	@ 800eca0 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xfc>
 800ebb6:	7003      	strb	r3, [r0, #0]
 800ebb8:	4605      	mov	r5, r0
 800ebba:	460f      	mov	r7, r1
 800ebbc:	2600      	movs	r6, #0
 800ebbe:	2401      	movs	r4, #1
 800ebc0:	f8d8 3000 	ldr.w	r3, [r8]
 800ebc4:	2228      	movs	r2, #40	@ 0x28
 800ebc6:	fb02 3206 	mla	r2, r2, r6, r3
 800ebca:	f8d2 2874 	ldr.w	r2, [r2, #2164]	@ 0x874
 800ebce:	2a01      	cmp	r2, #1
 800ebd0:	d139      	bne.n	800ec46 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xa2>
 800ebd2:	2124      	movs	r1, #36	@ 0x24
 800ebd4:	fb01 3106 	mla	r1, r1, r6, r3
 800ebd8:	f891 0945 	ldrb.w	r0, [r1, #2373]	@ 0x945
 800ebdc:	f991 1945 	ldrsb.w	r1, [r1, #2373]	@ 0x945
 800ebe0:	2900      	cmp	r1, #0
 800ebe2:	db48      	blt.n	800ec76 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xd2>
 800ebe4:	06c1      	lsls	r1, r0, #27
 800ebe6:	d442      	bmi.n	800ec6e <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xca>
 800ebe8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ebec:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800ebf0:	f8d3 1174 	ldr.w	r1, [r3, #372]	@ 0x174
 800ebf4:	2900      	cmp	r1, #0
 800ebf6:	d03c      	beq.n	800ec72 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xce>
 800ebf8:	f8d3 1168 	ldr.w	r1, [r3, #360]	@ 0x168
 800ebfc:	428e      	cmp	r6, r1
 800ebfe:	d138      	bne.n	800ec72 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xce>
 800ec00:	f893 0171 	ldrb.w	r0, [r3, #369]	@ 0x171
 800ec04:	491d      	ldr	r1, [pc, #116]	@ (800ec7c <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xd8>)
 800ec06:	4b1e      	ldr	r3, [pc, #120]	@ (800ec80 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xdc>)
 800ec08:	2800      	cmp	r0, #0
 800ec0a:	bf18      	it	ne
 800ec0c:	460b      	movne	r3, r1
 800ec0e:	2a00      	cmp	r2, #0
 800ec10:	bf14      	ite	ne
 800ec12:	4649      	movne	r1, r9
 800ec14:	4651      	moveq	r1, sl
 800ec16:	e9cd 1300 	strd	r1, r3, [sp]
 800ec1a:	4a1a      	ldr	r2, [pc, #104]	@ (800ec84 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xe0>)
 800ec1c:	f106 0341 	add.w	r3, r6, #65	@ 0x41
 800ec20:	1b39      	subs	r1, r7, r4
 800ec22:	1928      	adds	r0, r5, r4
 800ec24:	f00b fa80 	bl	801a128 <snprintf>
 800ec28:	4404      	add	r4, r0
 800ec2a:	b156      	cbz	r6, 800ec42 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x9e>
 800ec2c:	2c01      	cmp	r4, #1
 800ec2e:	bf08      	it	eq
 800ec30:	2402      	moveq	r4, #2
 800ec32:	4425      	add	r5, r4
 800ec34:	235d      	movs	r3, #93	@ 0x5d
 800ec36:	4620      	mov	r0, r4
 800ec38:	f805 3c01 	strb.w	r3, [r5, #-1]
 800ec3c:	b002      	add	sp, #8
 800ec3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ec42:	2601      	movs	r6, #1
 800ec44:	e7bc      	b.n	800ebc0 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x1c>
 800ec46:	b9b2      	cbnz	r2, 800ec76 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xd2>
 800ec48:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ec4c:	f8d3 0158 	ldr.w	r0, [r3, #344]	@ 0x158
 800ec50:	2800      	cmp	r0, #0
 800ec52:	d0e9      	beq.n	800ec28 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x84>
 800ec54:	4273      	negs	r3, r6
 800ec56:	f423 734a 	bic.w	r3, r3, #808	@ 0x328
 800ec5a:	f023 0303 	bic.w	r3, r3, #3
 800ec5e:	055b      	lsls	r3, r3, #21
 800ec60:	4909      	ldr	r1, [pc, #36]	@ (800ec88 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xe4>)
 800ec62:	0d5b      	lsrs	r3, r3, #21
 800ec64:	58c8      	ldr	r0, [r1, r3]
 800ec66:	2800      	cmp	r0, #0
 800ec68:	d0de      	beq.n	800ec28 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x84>
 800ec6a:	4b08      	ldr	r3, [pc, #32]	@ (800ec8c <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xe8>)
 800ec6c:	e7cf      	b.n	800ec0e <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x6a>
 800ec6e:	4b08      	ldr	r3, [pc, #32]	@ (800ec90 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xec>)
 800ec70:	e7cd      	b.n	800ec0e <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x6a>
 800ec72:	4b08      	ldr	r3, [pc, #32]	@ (800ec94 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0xf0>)
 800ec74:	e7cb      	b.n	800ec0e <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x6a>
 800ec76:	2000      	movs	r0, #0
 800ec78:	e7d6      	b.n	800ec28 <remoteconfig::rdm::json_get_portstatus(char*, unsigned long)+0x84>
 800ec7a:	bf00      	nop
 800ec7c:	0801ab50 	stmdaeq	r1, {r4, r6, r8, r9, fp, sp, pc}
 800ec80:	0801b127 	stmdaeq	r1, {r0, r1, r2, r5, r8, ip, sp, pc}
 800ec84:	0801b12c 	stmdaeq	r1, {r2, r3, r5, r8, ip, sp, pc}
 800ec88:	20001274 	andcs	r1, r0, r4, ror r2
 800ec8c:	0801b11e 	stmdaeq	r1, {r1, r2, r3, r4, r8, ip, sp, pc}
 800ec90:	0801b115 	stmdaeq	r1, {r0, r2, r4, r8, ip, sp, pc}
 800ec94:	0801b122 	stmdaeq	r1, {r1, r5, r8, ip, sp, pc}
 800ec98:	20001260 	andcs	r1, r0, r0, ror #4
 800ec9c:	0801b0c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, ip, sp, pc}
 800eca0:	0801b0c1 	stmdaeq	r1, {r0, r6, r7, ip, sp, pc}

0800eca4 <remoteconfig::rdm::json_get_queue(char*, unsigned long)>:
 800eca4:	b570      	push	{r4, r5, r6, lr}
 800eca6:	1e8e      	subs	r6, r1, #2
 800eca8:	4a0c      	ldr	r2, [pc, #48]	@ (800ecdc <remoteconfig::rdm::json_get_queue(char*, unsigned long)+0x38>)
 800ecaa:	4631      	mov	r1, r6
 800ecac:	4605      	mov	r5, r0
 800ecae:	f00b fa3b 	bl	801a128 <snprintf>
 800ecb2:	4b0b      	ldr	r3, [pc, #44]	@ (800ece0 <remoteconfig::rdm::json_get_queue(char*, unsigned long)+0x3c>)
 800ecb4:	681b      	ldr	r3, [r3, #0]
 800ecb6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ecba:	4604      	mov	r4, r0
 800ecbc:	f8d3 0158 	ldr.w	r0, [r3, #344]	@ 0x158
 800ecc0:	b120      	cbz	r0, 800eccc <remoteconfig::rdm::json_get_queue(char*, unsigned long)+0x28>
 800ecc2:	1b32      	subs	r2, r6, r4
 800ecc4:	1929      	adds	r1, r5, r4
 800ecc6:	3058      	adds	r0, #88	@ 0x58
 800ecc8:	f001 fd52 	bl	8010770 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)>
 800eccc:	4420      	add	r0, r4
 800ecce:	235d      	movs	r3, #93	@ 0x5d
 800ecd0:	542b      	strb	r3, [r5, r0]
 800ecd2:	4405      	add	r5, r0
 800ecd4:	237d      	movs	r3, #125	@ 0x7d
 800ecd6:	706b      	strb	r3, [r5, #1]
 800ecd8:	3002      	adds	r0, #2
 800ecda:	bd70      	pop	{r4, r5, r6, pc}
 800ecdc:	0801b15a 	stmdaeq	r1, {r1, r3, r4, r6, r8, ip, sp, pc}
 800ece0:	20001260 	andcs	r1, r0, r0, ror #4

0800ece4 <remoteconfig::rdm::json_get_rdm(char*, unsigned long)>:
 800ece4:	4b03      	ldr	r3, [pc, #12]	@ (800ecf4 <remoteconfig::rdm::json_get_rdm(char*, unsigned long)+0x10>)
 800ece6:	4a04      	ldr	r2, [pc, #16]	@ (800ecf8 <remoteconfig::rdm::json_get_rdm(char*, unsigned long)+0x14>)
 800ece8:	681b      	ldr	r3, [r3, #0]
 800ecea:	f893 3925 	ldrb.w	r3, [r3, #2341]	@ 0x925
 800ecee:	f00b ba1b 	b.w	801a128 <snprintf>
 800ecf2:	bf00      	nop
 800ecf4:	20001260 	andcs	r1, r0, r0, ror #4
 800ecf8:	0801b163 	stmdaeq	r1, {r0, r1, r5, r6, r8, ip, sp, pc}

0800ecfc <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)>:
 800ecfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed00:	f040 0020 	orr.w	r0, r0, #32
 800ed04:	f1a0 0461 	sub.w	r4, r0, #97	@ 0x61
 800ed08:	2c01      	cmp	r4, #1
 800ed0a:	b089      	sub	sp, #36	@ 0x24
 800ed0c:	460f      	mov	r7, r1
 800ed0e:	d85a      	bhi.n	800edc6 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0xca>
 800ed10:	f1a2 0802 	sub.w	r8, r2, #2
 800ed14:	3820      	subs	r0, #32
 800ed16:	b2c3      	uxtb	r3, r0
 800ed18:	4a2c      	ldr	r2, [pc, #176]	@ (800edcc <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0xd0>)
 800ed1a:	4641      	mov	r1, r8
 800ed1c:	4638      	mov	r0, r7
 800ed1e:	f00b fa03 	bl	801a128 <snprintf>
 800ed22:	4b2b      	ldr	r3, [pc, #172]	@ (800edd0 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0xd4>)
 800ed24:	681b      	ldr	r3, [r3, #0]
 800ed26:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ed2a:	4606      	mov	r6, r0
 800ed2c:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800ed30:	b953      	cbnz	r3, 800ed48 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x4c>
 800ed32:	2400      	movs	r4, #0
 800ed34:	4426      	add	r6, r4
 800ed36:	235d      	movs	r3, #93	@ 0x5d
 800ed38:	55bb      	strb	r3, [r7, r6]
 800ed3a:	4437      	add	r7, r6
 800ed3c:	237d      	movs	r3, #125	@ 0x7d
 800ed3e:	1cb0      	adds	r0, r6, #2
 800ed40:	707b      	strb	r3, [r7, #1]
 800ed42:	b009      	add	sp, #36	@ 0x24
 800ed44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed48:	f240 43d4 	movw	r3, #1236	@ 0x4d4
 800ed4c:	4363      	muls	r3, r4
 800ed4e:	4a21      	ldr	r2, [pc, #132]	@ (800edd4 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0xd8>)
 800ed50:	f103 0524 	add.w	r5, r3, #36	@ 0x24
 800ed54:	f04f 0900 	mov.w	r9, #0
 800ed58:	eb07 0a00 	add.w	sl, r7, r0
 800ed5c:	eba8 0800 	sub.w	r8, r8, r0
 800ed60:	4415      	add	r5, r2
 800ed62:	464c      	mov	r4, r9
 800ed64:	eb02 0b03 	add.w	fp, r2, r3
 800ed68:	f8db 3000 	ldr.w	r3, [fp]
 800ed6c:	4a1a      	ldr	r2, [pc, #104]	@ (800edd8 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0xdc>)
 800ed6e:	4599      	cmp	r9, r3
 800ed70:	d306      	bcc.n	800ed80 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x84>
 800ed72:	2c00      	cmp	r4, #0
 800ed74:	d0dd      	beq.n	800ed32 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x36>
 800ed76:	3c01      	subs	r4, #1
 800ed78:	2300      	movs	r3, #0
 800ed7a:	f80a 3004 	strb.w	r3, [sl, r4]
 800ed7e:	e7d9      	b.n	800ed34 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x38>
 800ed80:	ab06      	add	r3, sp, #24
 800ed82:	1da9      	adds	r1, r5, #6
 800ed84:	f815 0b01 	ldrb.w	r0, [r5], #1
 800ed88:	f803 0b01 	strb.w	r0, [r3], #1
 800ed8c:	428d      	cmp	r5, r1
 800ed8e:	d1f9      	bne.n	800ed84 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x88>
 800ed90:	f89d 301d 	ldrb.w	r3, [sp, #29]
 800ed94:	9304      	str	r3, [sp, #16]
 800ed96:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ed9a:	9303      	str	r3, [sp, #12]
 800ed9c:	f89d 301b 	ldrb.w	r3, [sp, #27]
 800eda0:	9302      	str	r3, [sp, #8]
 800eda2:	f89d 301a 	ldrb.w	r3, [sp, #26]
 800eda6:	9301      	str	r3, [sp, #4]
 800eda8:	f89d 3019 	ldrb.w	r3, [sp, #25]
 800edac:	9300      	str	r3, [sp, #0]
 800edae:	eba8 0104 	sub.w	r1, r8, r4
 800edb2:	eb0a 0004 	add.w	r0, sl, r4
 800edb6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800edba:	f00b f9b5 	bl	801a128 <snprintf>
 800edbe:	f109 0901 	add.w	r9, r9, #1
 800edc2:	4404      	add	r4, r0
 800edc4:	e7d0      	b.n	800ed68 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x6c>
 800edc6:	2000      	movs	r0, #0
 800edc8:	e7bb      	b.n	800ed42 <remoteconfig::rdm::json_get_tod(char, char*, unsigned long)+0x46>
 800edca:	bf00      	nop
 800edcc:	0801b170 	stmdaeq	r1, {r4, r5, r6, r8, ip, sp, pc}
 800edd0:	20001260 	andcs	r1, r0, r0, ror #4
 800edd4:	20001274 	andcs	r1, r0, r4, ror r2
 800edd8:	0801b185 	stmdaeq	r1, {r0, r2, r7, r8, ip, sp, pc}

0800eddc <ArtNetNode::SetRdmController(ArtNetRdmController*, bool)>:
 800eddc:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800ede0:	2900      	cmp	r1, #0
 800ede2:	bf0c      	ite	eq
 800ede4:	2200      	moveq	r2, #0
 800ede6:	f002 0201 	andne.w	r2, r2, #1
 800edea:	f8c3 1158 	str.w	r1, [r3, #344]	@ 0x158
 800edee:	f890 399f 	ldrb.w	r3, [r0, #2463]	@ 0x99f
 800edf2:	f880 2925 	strb.w	r2, [r0, #2341]	@ 0x925
 800edf6:	b13a      	cbz	r2, 800ee08 <ArtNetNode::SetRdmController(ArtNetRdmController*, bool)+0x2c>
 800edf8:	f043 0302 	orr.w	r3, r3, #2
 800edfc:	f880 399f 	strb.w	r3, [r0, #2463]	@ 0x99f
 800ee00:	2301      	movs	r3, #1
 800ee02:	f880 3924 	strb.w	r3, [r0, #2340]	@ 0x924
 800ee06:	4770      	bx	lr
 800ee08:	f023 0302 	bic.w	r3, r3, #2
 800ee0c:	f880 399f 	strb.w	r3, [r0, #2463]	@ 0x99f
 800ee10:	4770      	bx	lr

0800ee12 <ArtNetNode::SetRdm(bool)>:
 800ee12:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800ee16:	460a      	mov	r2, r1
 800ee18:	f8d3 1158 	ldr.w	r1, [r3, #344]	@ 0x158
 800ee1c:	f7ff bfde 	b.w	800eddc <ArtNetNode::SetRdmController(ArtNetRdmController*, bool)>

0800ee20 <ArtNetNode::FailSafeRecord()>:
 800ee20:	b510      	push	{r4, lr}
 800ee22:	4604      	mov	r4, r0
 800ee24:	f000 f938 	bl	800f098 <artnetnode::failsafe_write_start()>
 800ee28:	f8d4 3874 	ldr.w	r3, [r4, #2164]	@ 0x874
 800ee2c:	2b01      	cmp	r3, #1
 800ee2e:	d103      	bne.n	800ee38 <ArtNetNode::FailSafeRecord()+0x18>
 800ee30:	4907      	ldr	r1, [pc, #28]	@ (800ee50 <ArtNetNode::FailSafeRecord()+0x30>)
 800ee32:	2000      	movs	r0, #0
 800ee34:	f000 f946 	bl	800f0c4 <artnetnode::failsafe_write(unsigned long, unsigned char const*)>
 800ee38:	f8d4 089c 	ldr.w	r0, [r4, #2204]	@ 0x89c
 800ee3c:	2801      	cmp	r0, #1
 800ee3e:	d102      	bne.n	800ee46 <ArtNetNode::FailSafeRecord()+0x26>
 800ee40:	4904      	ldr	r1, [pc, #16]	@ (800ee54 <ArtNetNode::FailSafeRecord()+0x34>)
 800ee42:	f000 f93f 	bl	800f0c4 <artnetnode::failsafe_write(unsigned long, unsigned char const*)>
 800ee46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee4a:	f000 b94d 	b.w	800f0e8 <artnetnode::failsafe_write_end()>
 800ee4e:	bf00      	nop
 800ee50:	2000048c 	andcs	r0, r0, ip, lsl #9
 800ee54:	20000a90 	mulcs	r0, r0, sl

0800ee58 <ArtNetNode::FailSafePlayback()>:
 800ee58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee5c:	4605      	mov	r5, r0
 800ee5e:	f000 f945 	bl	800f0ec <artnetnode::failsafe_read_start()>
 800ee62:	4e1c      	ldr	r6, [pc, #112]	@ (800eed4 <ArtNetNode::FailSafePlayback()+0x7c>)
 800ee64:	462f      	mov	r7, r5
 800ee66:	2400      	movs	r4, #0
 800ee68:	f605 0974 	addw	r9, r5, #2164	@ 0x874
 800ee6c:	4263      	negs	r3, r4
 800ee6e:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800ee72:	f859 8003 	ldr.w	r8, [r9, r3]
 800ee76:	f1b8 0f01 	cmp.w	r8, #1
 800ee7a:	d11f      	bne.n	800eebc <ArtNetNode::FailSafePlayback()+0x64>
 800ee7c:	f506 6b80 	add.w	fp, r6, #1024	@ 0x400
 800ee80:	4659      	mov	r1, fp
 800ee82:	4620      	mov	r0, r4
 800ee84:	f000 f93c 	bl	800f100 <artnetnode::failsafe_read(unsigned long, unsigned char*)>
 800ee88:	f8d5 0860 	ldr.w	r0, [r5, #2144]	@ 0x860
 800ee8c:	6803      	ldr	r3, [r0, #0]
 800ee8e:	f8cd 8000 	str.w	r8, [sp]
 800ee92:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800ee96:	f8d6 3600 	ldr.w	r3, [r6, #1536]	@ 0x600
 800ee9a:	465a      	mov	r2, fp
 800ee9c:	4621      	mov	r1, r4
 800ee9e:	47d0      	blx	sl
 800eea0:	f897 3947 	ldrb.w	r3, [r7, #2375]	@ 0x947
 800eea4:	b93b      	cbnz	r3, 800eeb6 <ArtNetNode::FailSafePlayback()+0x5e>
 800eea6:	f8d5 0860 	ldr.w	r0, [r5, #2144]	@ 0x860
 800eeaa:	6803      	ldr	r3, [r0, #0]
 800eeac:	4621      	mov	r1, r4
 800eeae:	689b      	ldr	r3, [r3, #8]
 800eeb0:	4798      	blx	r3
 800eeb2:	f887 8947 	strb.w	r8, [r7, #2375]	@ 0x947
 800eeb6:	2300      	movs	r3, #0
 800eeb8:	f8c6 3600 	str.w	r3, [r6, #1536]	@ 0x600
 800eebc:	f206 6604 	addw	r6, r6, #1540	@ 0x604
 800eec0:	3724      	adds	r7, #36	@ 0x24
 800eec2:	b124      	cbz	r4, 800eece <ArtNetNode::FailSafePlayback()+0x76>
 800eec4:	b003      	add	sp, #12
 800eec6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeca:	f000 b92b 	b.w	800f124 <artnetnode::failsafe_read_end()>
 800eece:	2401      	movs	r4, #1
 800eed0:	e7cc      	b.n	800ee6c <ArtNetNode::FailSafePlayback()+0x14>
 800eed2:	bf00      	nop
 800eed4:	2000008c 	andcs	r0, r0, ip, lsl #1

0800eed8 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)>:
 800eed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eedc:	4b18      	ldr	r3, [pc, #96]	@ (800ef40 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)+0x68>)
 800eede:	681c      	ldr	r4, [r3, #0]
 800eee0:	4284      	cmp	r4, r0
 800eee2:	b086      	sub	sp, #24
 800eee4:	460d      	mov	r5, r1
 800eee6:	d827      	bhi.n	800ef38 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)+0x60>
 800eee8:	1b04      	subs	r4, r0, r4
 800eeea:	2c03      	cmp	r4, #3
 800eeec:	d824      	bhi.n	800ef38 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)+0x60>
 800eeee:	f04f 089c 	mov.w	r8, #156	@ 0x9c
 800eef2:	2600      	movs	r6, #0
 800eef4:	e9cd 8600 	strd	r8, r6, [sp]
 800eef8:	4f12      	ldr	r7, [pc, #72]	@ (800ef44 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)+0x6c>)
 800eefa:	2302      	movs	r3, #2
 800eefc:	6838      	ldr	r0, [r7, #0]
 800eefe:	f10d 0216 	add.w	r2, sp, #22
 800ef02:	2119      	movs	r1, #25
 800ef04:	f007 fa8a 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 800ef08:	0064      	lsls	r4, r4, #1
 800ef0a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800ef0e:	2203      	movs	r2, #3
 800ef10:	40a2      	lsls	r2, r4
 800ef12:	f005 0503 	and.w	r5, r5, #3
 800ef16:	ea23 0302 	bic.w	r3, r3, r2
 800ef1a:	40a5      	lsls	r5, r4
 800ef1c:	432b      	orrs	r3, r5
 800ef1e:	e9cd 6601 	strd	r6, r6, [sp, #4]
 800ef22:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef26:	2302      	movs	r3, #2
 800ef28:	9300      	str	r3, [sp, #0]
 800ef2a:	6838      	ldr	r0, [r7, #0]
 800ef2c:	f10d 0316 	add.w	r3, sp, #22
 800ef30:	4642      	mov	r2, r8
 800ef32:	2119      	movs	r1, #25
 800ef34:	f007 fa4c 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 800ef38:	b006      	add	sp, #24
 800ef3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef3e:	bf00      	nop
 800ef40:	20000088 	andcs	r0, r0, r8, lsl #1
 800ef44:	20002a00 	andcs	r2, r0, r0, lsl #20

0800ef48 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)>:
 800ef48:	2901      	cmp	r1, #1
 800ef4a:	b538      	push	{r3, r4, r5, lr}
 800ef4c:	460c      	mov	r4, r1
 800ef4e:	4615      	mov	r5, r2
 800ef50:	d822      	bhi.n	800ef98 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)+0x50>
 800ef52:	2328      	movs	r3, #40	@ 0x28
 800ef54:	fb03 0301 	mla	r3, r3, r1, r0
 800ef58:	2d01      	cmp	r5, #1
 800ef5a:	f8c3 2878 	str.w	r2, [r3, #2168]	@ 0x878
 800ef5e:	f04f 0224 	mov.w	r2, #36	@ 0x24
 800ef62:	fb02 0301 	mla	r3, r2, r1, r0
 800ef66:	fb02 0201 	mla	r2, r2, r1, r0
 800ef6a:	f893 3944 	ldrb.w	r3, [r3, #2372]	@ 0x944
 800ef6e:	bf0c      	ite	eq
 800ef70:	f043 0301 	orreq.w	r3, r3, #1
 800ef74:	f003 03fe 	andne.w	r3, r3, #254	@ 0xfe
 800ef78:	f882 3944 	strb.w	r3, [r2, #2372]	@ 0x944
 800ef7c:	f890 390d 	ldrb.w	r3, [r0, #2317]	@ 0x90d
 800ef80:	2b02      	cmp	r3, #2
 800ef82:	d109      	bne.n	800ef98 <ArtNetNode::SetPortProtocol4(unsigned long, artnet::PortProtocol)+0x50>
 800ef84:	4629      	mov	r1, r5
 800ef86:	4620      	mov	r0, r4
 800ef88:	f7ff ffa6 	bl	800eed8 <ArtNetStore::SavePortProtocol(unsigned long, artnet::PortProtocol)>
 800ef8c:	4629      	mov	r1, r5
 800ef8e:	4620      	mov	r0, r4
 800ef90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ef94:	f007 b808 	b.w	8015fa8 <artnet::display_port_protocol(unsigned long, artnet::PortProtocol)>
 800ef98:	bd38      	pop	{r3, r4, r5, pc}

0800ef9a <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)>:
 800ef9a:	2a02      	cmp	r2, #2
 800ef9c:	b430      	push	{r4, r5}
 800ef9e:	d01c      	beq.n	800efda <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x40>
 800efa0:	2428      	movs	r4, #40	@ 0x28
 800efa2:	fb04 0401 	mla	r4, r4, r1, r0
 800efa6:	f8b4 386c 	ldrh.w	r3, [r4, #2156]	@ 0x86c
 800efaa:	f8d4 4874 	ldr.w	r4, [r4, #2164]	@ 0x874
 800efae:	1aa5      	subs	r5, r4, r2
 800efb0:	426c      	negs	r4, r5
 800efb2:	416c      	adcs	r4, r5
 800efb4:	2528      	movs	r5, #40	@ 0x28
 800efb6:	fb05 0501 	mla	r5, r5, r1, r0
 800efba:	f8d5 5878 	ldr.w	r5, [r5, #2168]	@ 0x878
 800efbe:	2d01      	cmp	r5, #1
 800efc0:	d115      	bne.n	800efee <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x54>
 800efc2:	b96c      	cbnz	r4, 800efe0 <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x46>
 800efc4:	230c      	movs	r3, #12
 800efc6:	fb03 0301 	mla	r3, r3, r1, r0
 800efca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800efcc:	2a01      	cmp	r2, #1
 800efce:	d80e      	bhi.n	800efee <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x54>
 800efd0:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800efd2:	2202      	movs	r2, #2
 800efd4:	bc30      	pop	{r4, r5}
 800efd6:	f000 ba33 	b.w	800f440 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>
 800efda:	2300      	movs	r3, #0
 800efdc:	461c      	mov	r4, r3
 800efde:	e7e9      	b.n	800efb4 <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x1a>
 800efe0:	f890 48c0 	ldrb.w	r4, [r0, #2240]	@ 0x8c0
 800efe4:	b10c      	cbz	r4, 800efea <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x50>
 800efe6:	3301      	adds	r3, #1
 800efe8:	b29b      	uxth	r3, r3
 800efea:	2b00      	cmp	r3, #0
 800efec:	d1f2      	bne.n	800efd4 <ArtNetNode::SetUniverse4(unsigned long, lightset::PortDir)+0x3a>
 800efee:	bc30      	pop	{r4, r5}
 800eff0:	4770      	bx	lr
	...

0800eff4 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)>:
 800eff4:	4b0a      	ldr	r3, [pc, #40]	@ (800f020 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x2c>)
 800eff6:	681a      	ldr	r2, [r3, #0]
 800eff8:	428a      	cmp	r2, r1
 800effa:	f1a1 0202 	sub.w	r2, r1, #2
 800effe:	bf18      	it	ne
 800f000:	6019      	strne	r1, [r3, #0]
 800f002:	4253      	negs	r3, r2
 800f004:	4153      	adcs	r3, r2
 800f006:	f880 30e8 	strb.w	r3, [r0, #232]	@ 0xe8
 800f00a:	f890 3089 	ldrb.w	r3, [r0, #137]	@ 0x89
 800f00e:	b933      	cbnz	r3, 800f01e <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x2a>
 800f010:	f890 30cd 	ldrb.w	r3, [r0, #205]	@ 0xcd
 800f014:	b91b      	cbnz	r3, 800f01e <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x2a>
 800f016:	4b03      	ldr	r3, [pc, #12]	@ (800f024 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x30>)
 800f018:	6818      	ldr	r0, [r3, #0]
 800f01a:	f008 bb6b 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800f01e:	4770      	bx	lr
 800f020:	20001c1c 	andcs	r1, r0, ip, lsl ip
 800f024:	20002b04 	andcs	r2, r0, r4, lsl #22

0800f028 <ArtNetNode::GetGoodOutput4(unsigned long)>:
 800f028:	230c      	movs	r3, #12
 800f02a:	fb03 0301 	mla	r3, r3, r1, r0
 800f02e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f030:	2b01      	cmp	r3, #1
 800f032:	d10d      	bne.n	800f050 <ArtNetNode::GetGoodOutput4(unsigned long)+0x28>
 800f034:	2344      	movs	r3, #68	@ 0x44
 800f036:	fb03 0001 	mla	r0, r3, r1, r0
 800f03a:	f890 3088 	ldrb.w	r3, [r0, #136]	@ 0x88
 800f03e:	f890 0089 	ldrb.w	r0, [r0, #137]	@ 0x89
 800f042:	01c0      	lsls	r0, r0, #7
 800f044:	ea40 00c3 	orr.w	r0, r0, r3, lsl #3
 800f048:	f040 0001 	orr.w	r0, r0, #1
 800f04c:	b2c0      	uxtb	r0, r0
 800f04e:	4770      	bx	lr
 800f050:	2000      	movs	r0, #0
 800f052:	4770      	bx	lr

0800f054 <artnetnode::check_have_flash()>:
 800f054:	b538      	push	{r3, r4, r5, lr}
 800f056:	4b0e      	ldr	r3, [pc, #56]	@ (800f090 <artnetnode::check_have_flash()+0x3c>)
 800f058:	781c      	ldrb	r4, [r3, #0]
 800f05a:	b114      	cbz	r4, 800f062 <artnetnode::check_have_flash()+0xe>
 800f05c:	2401      	movs	r4, #1
 800f05e:	4620      	mov	r0, r4
 800f060:	bd38      	pop	{r3, r4, r5, pc}
 800f062:	4622      	mov	r2, r4
 800f064:	4621      	mov	r1, r4
 800f066:	4620      	mov	r0, r4
 800f068:	f007 fc6a 	bl	8016940 <spi_flash_probe(unsigned int, unsigned int, unsigned int)>
 800f06c:	2800      	cmp	r0, #0
 800f06e:	dbf6      	blt.n	800f05e <artnetnode::check_have_flash()+0xa>
 800f070:	f007 fbc2 	bl	80167f8 <spi_flash_get_sector_size()>
 800f074:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800f078:	4605      	mov	r5, r0
 800f07a:	fbb4 f4f0 	udiv	r4, r4, r0
 800f07e:	f007 fbb5 	bl	80167ec <spi_flash_get_size()>
 800f082:	3402      	adds	r4, #2
 800f084:	4b03      	ldr	r3, [pc, #12]	@ (800f094 <artnetnode::check_have_flash()+0x40>)
 800f086:	fb05 0014 	mls	r0, r5, r4, r0
 800f08a:	6018      	str	r0, [r3, #0]
 800f08c:	e7e6      	b.n	800f05c <artnetnode::check_have_flash()+0x8>
 800f08e:	bf00      	nop
 800f090:	20001c24 	andcs	r1, r0, r4, lsr #24
 800f094:	20001c20 	andcs	r1, r0, r0, lsr #24

0800f098 <artnetnode::failsafe_write_start()>:
 800f098:	b510      	push	{r4, lr}
 800f09a:	f7ff ffdb 	bl	800f054 <artnetnode::check_have_flash()>
 800f09e:	b158      	cbz	r0, 800f0b8 <artnetnode::failsafe_write_start()+0x20>
 800f0a0:	4b06      	ldr	r3, [pc, #24]	@ (800f0bc <artnetnode::failsafe_write_start()+0x24>)
 800f0a2:	681c      	ldr	r4, [r3, #0]
 800f0a4:	f007 fba8 	bl	80167f8 <spi_flash_get_sector_size()>
 800f0a8:	4601      	mov	r1, r0
 800f0aa:	4620      	mov	r0, r4
 800f0ac:	f007 fc10 	bl	80168d0 <spi_flash_cmd_erase(unsigned long, unsigned int)>
 800f0b0:	4b03      	ldr	r3, [pc, #12]	@ (800f0c0 <artnetnode::failsafe_write_start()+0x28>)
 800f0b2:	43c0      	mvns	r0, r0
 800f0b4:	0fc0      	lsrs	r0, r0, #31
 800f0b6:	7018      	strb	r0, [r3, #0]
 800f0b8:	bd10      	pop	{r4, pc}
 800f0ba:	bf00      	nop
 800f0bc:	20001c20 	andcs	r1, r0, r0, lsr #24
 800f0c0:	20001c24 	andcs	r1, r0, r4, lsr #24

0800f0c4 <artnetnode::failsafe_write(unsigned long, unsigned char const*)>:
 800f0c4:	4b06      	ldr	r3, [pc, #24]	@ (800f0e0 <artnetnode::failsafe_write(unsigned long, unsigned char const*)+0x1c>)
 800f0c6:	781b      	ldrb	r3, [r3, #0]
 800f0c8:	460a      	mov	r2, r1
 800f0ca:	b13b      	cbz	r3, 800f0dc <artnetnode::failsafe_write(unsigned long, unsigned char const*)+0x18>
 800f0cc:	4b05      	ldr	r3, [pc, #20]	@ (800f0e4 <artnetnode::failsafe_write(unsigned long, unsigned char const*)+0x20>)
 800f0ce:	681b      	ldr	r3, [r3, #0]
 800f0d0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800f0d4:	eb03 2040 	add.w	r0, r3, r0, lsl #9
 800f0d8:	f007 bb94 	b.w	8016804 <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)>
 800f0dc:	4770      	bx	lr
 800f0de:	bf00      	nop
 800f0e0:	20001c24 	andcs	r1, r0, r4, lsr #24
 800f0e4:	20001c20 	andcs	r1, r0, r0, lsr #24

0800f0e8 <artnetnode::failsafe_write_end()>:
 800f0e8:	4770      	bx	lr
	...

0800f0ec <artnetnode::failsafe_read_start()>:
 800f0ec:	b508      	push	{r3, lr}
 800f0ee:	f7ff ffb1 	bl	800f054 <artnetnode::check_have_flash()>
 800f0f2:	b110      	cbz	r0, 800f0fa <artnetnode::failsafe_read_start()+0xe>
 800f0f4:	4b01      	ldr	r3, [pc, #4]	@ (800f0fc <artnetnode::failsafe_read_start()+0x10>)
 800f0f6:	2201      	movs	r2, #1
 800f0f8:	701a      	strb	r2, [r3, #0]
 800f0fa:	bd08      	pop	{r3, pc}
 800f0fc:	20001c24 	andcs	r1, r0, r4, lsr #24

0800f100 <artnetnode::failsafe_read(unsigned long, unsigned char*)>:
 800f100:	4b06      	ldr	r3, [pc, #24]	@ (800f11c <artnetnode::failsafe_read(unsigned long, unsigned char*)+0x1c>)
 800f102:	781b      	ldrb	r3, [r3, #0]
 800f104:	460a      	mov	r2, r1
 800f106:	b13b      	cbz	r3, 800f118 <artnetnode::failsafe_read(unsigned long, unsigned char*)+0x18>
 800f108:	4b05      	ldr	r3, [pc, #20]	@ (800f120 <artnetnode::failsafe_read(unsigned long, unsigned char*)+0x20>)
 800f10a:	681b      	ldr	r3, [r3, #0]
 800f10c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800f110:	eb03 2040 	add.w	r0, r3, r0, lsl #9
 800f114:	f007 bbb0 	b.w	8016878 <spi_flash_cmd_read_fast(unsigned long, unsigned int, unsigned char*)>
 800f118:	4770      	bx	lr
 800f11a:	bf00      	nop
 800f11c:	20001c24 	andcs	r1, r0, r4, lsr #24
 800f120:	20001c20 	andcs	r1, r0, r0, lsr #24

0800f124 <artnetnode::failsafe_read_end()>:
 800f124:	4770      	bx	lr
	...

0800f128 <LightSet::Blackout(bool)>:
 800f128:	4770      	bx	lr
 800f12a:	bf00      	nop

0800f12c <LightSet::FullOn()>:
 800f12c:	4770      	bx	lr
 800f12e:	bf00      	nop

0800f130 <E131Bridge::E131Bridge()>:
 800f130:	b510      	push	{r4, lr}
 800f132:	2100      	movs	r1, #0
 800f134:	4604      	mov	r4, r0
 800f136:	4b3d      	ldr	r3, [pc, #244]	@ (800f22c <E131Bridge::E131Bridge()+0xfc>)
 800f138:	f8c4 1844 	str.w	r1, [r4, #2116]	@ 0x844
 800f13c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800f140:	e9c4 1102 	strd	r1, r1, [r4, #8]
 800f144:	e9c4 113d 	strd	r1, r1, [r4, #244]	@ 0xf4
 800f148:	2201      	movs	r2, #1
 800f14a:	e9c4 0100 	strd	r0, r1, [r4]
 800f14e:	f104 0030 	add.w	r0, r4, #48	@ 0x30
 800f152:	f884 20e8 	strb.w	r2, [r4, #232]	@ 0xe8
 800f156:	601c      	str	r4, [r3, #0]
 800f158:	b092      	sub	sp, #72	@ 0x48
 800f15a:	4602      	mov	r2, r0
 800f15c:	f104 0348 	add.w	r3, r4, #72	@ 0x48
 800f160:	f842 1b04 	str.w	r1, [r2], #4
 800f164:	429a      	cmp	r2, r3
 800f166:	d1fb      	bne.n	800f160 <E131Bridge::E131Bridge()+0x30>
 800f168:	2202      	movs	r2, #2
 800f16a:	6362      	str	r2, [r4, #52]	@ 0x34
 800f16c:	6422      	str	r2, [r4, #64]	@ 0x40
 800f16e:	2100      	movs	r1, #0
 800f170:	f104 0210 	add.w	r2, r4, #16
 800f174:	f842 1b04 	str.w	r1, [r2], #4
 800f178:	4290      	cmp	r0, r2
 800f17a:	d1fb      	bne.n	800f174 <E131Bridge::E131Bridge()+0x44>
 800f17c:	2201      	movs	r2, #1
 800f17e:	f884 2020 	strb.w	r2, [r4, #32]
 800f182:	6261      	str	r1, [r4, #36]	@ 0x24
 800f184:	2200      	movs	r2, #0
 800f186:	f104 018c 	add.w	r1, r4, #140	@ 0x8c
 800f18a:	f843 2b04 	str.w	r2, [r3], #4
 800f18e:	428b      	cmp	r3, r1
 800f190:	d1fb      	bne.n	800f18a <E131Bridge::E131Bridge()+0x5a>
 800f192:	f44f 41c8 	mov.w	r1, #25600	@ 0x6400
 800f196:	f8c4 20d0 	str.w	r2, [r4, #208]	@ 0xd0
 800f19a:	f8c4 20d4 	str.w	r2, [r4, #212]	@ 0xd4
 800f19e:	f8c4 10d8 	str.w	r1, [r4, #216]	@ 0xd8
 800f1a2:	2200      	movs	r2, #0
 800f1a4:	f104 01d0 	add.w	r1, r4, #208	@ 0xd0
 800f1a8:	f843 2b04 	str.w	r2, [r3], #4
 800f1ac:	4299      	cmp	r1, r3
 800f1ae:	d1fb      	bne.n	800f1a8 <E131Bridge::E131Bridge()+0x78>
 800f1b0:	4b1f      	ldr	r3, [pc, #124]	@ (800f230 <E131Bridge::E131Bridge()+0x100>)
 800f1b2:	4920      	ldr	r1, [pc, #128]	@ (800f234 <E131Bridge::E131Bridge()+0x104>)
 800f1b4:	681b      	ldr	r3, [r3, #0]
 800f1b6:	f8c4 20dc 	str.w	r2, [r4, #220]	@ 0xdc
 800f1ba:	f44f 40c8 	mov.w	r0, #25600	@ 0x6400
 800f1be:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
 800f1c2:	f8c4 00e4 	str.w	r0, [r4, #228]	@ 0xe4
 800f1c6:	3316      	adds	r3, #22
 800f1c8:	9100      	str	r1, [sp, #0]
 800f1ca:	4a1b      	ldr	r2, [pc, #108]	@ (800f238 <E131Bridge::E131Bridge()+0x108>)
 800f1cc:	2140      	movs	r1, #64	@ 0x40
 800f1ce:	a802      	add	r0, sp, #8
 800f1d0:	f00a ffaa 	bl	801a128 <snprintf>
 800f1d4:	f104 03fc 	add.w	r3, r4, #252	@ 0xfc
 800f1d8:	a902      	add	r1, sp, #8
 800f1da:	f10d 0047 	add.w	r0, sp, #71	@ 0x47
 800f1de:	e003      	b.n	800f1e8 <E131Bridge::E131Bridge()+0xb8>
 800f1e0:	4288      	cmp	r0, r1
 800f1e2:	f803 2b01 	strb.w	r2, [r3], #1
 800f1e6:	d009      	beq.n	800f1fc <E131Bridge::E131Bridge()+0xcc>
 800f1e8:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f1ec:	2a00      	cmp	r2, #0
 800f1ee:	d1f7      	bne.n	800f1e0 <E131Bridge::E131Bridge()+0xb0>
 800f1f0:	f204 113b 	addw	r1, r4, #315	@ 0x13b
 800f1f4:	f803 2b01 	strb.w	r2, [r3], #1
 800f1f8:	428b      	cmp	r3, r1
 800f1fa:	d1fb      	bne.n	800f1f4 <E131Bridge::E131Bridge()+0xc4>
 800f1fc:	4b0f      	ldr	r3, [pc, #60]	@ (800f23c <E131Bridge::E131Bridge()+0x10c>)
 800f1fe:	681b      	ldr	r3, [r3, #0]
 800f200:	2200      	movs	r2, #0
 800f202:	f884 213b 	strb.w	r2, [r4, #315]	@ 0x13b
 800f206:	f103 0010 	add.w	r0, r3, #16
 800f20a:	f504 729e 	add.w	r2, r4, #316	@ 0x13c
 800f20e:	f853 1b04 	ldr.w	r1, [r3], #4
 800f212:	f842 1b04 	str.w	r1, [r2], #4
 800f216:	4283      	cmp	r3, r0
 800f218:	d1f9      	bne.n	800f20e <E131Bridge::E131Bridge()+0xde>
 800f21a:	f44f 50ae 	mov.w	r0, #5568	@ 0x15c0
 800f21e:	f005 fb99 	bl	8014954 <net::udp_begin(unsigned short)>
 800f222:	6020      	str	r0, [r4, #0]
 800f224:	4620      	mov	r0, r4
 800f226:	b012      	add	sp, #72	@ 0x48
 800f228:	bd10      	pop	{r4, pc}
 800f22a:	bf00      	nop
 800f22c:	20001c28 	andcs	r1, r0, r8, lsr #24
 800f230:	20002934 	andcs	r2, r0, r4, lsr r9
 800f234:	0801bfa0 	stmdaeq	r1, {r5, r7, r8, r9, sl, fp, ip, sp, pc}
 800f238:	0801bf94 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 800f23c:	20002b04 	andcs	r2, r0, r4, lsl #22

0800f240 <E131Bridge::Stop()>:
 800f240:	b570      	push	{r4, r5, r6, lr}
 800f242:	4604      	mov	r4, r0
 800f244:	f8d0 00f4 	ldr.w	r0, [r0, #244]	@ 0xf4
 800f248:	2601      	movs	r6, #1
 800f24a:	f884 6029 	strb.w	r6, [r4, #41]	@ 0x29
 800f24e:	2800      	cmp	r0, #0
 800f250:	d02e      	beq.n	800f2b0 <E131Bridge::Stop()+0x70>
 800f252:	6803      	ldr	r3, [r0, #0]
 800f254:	4d18      	ldr	r5, [pc, #96]	@ (800f2b8 <E131Bridge::Stop()+0x78>)
 800f256:	68db      	ldr	r3, [r3, #12]
 800f258:	2100      	movs	r1, #0
 800f25a:	4798      	blx	r3
 800f25c:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f260:	2300      	movs	r3, #0
 800f262:	f8c5 3600 	str.w	r3, [r5, #1536]	@ 0x600
 800f266:	b118      	cbz	r0, 800f270 <E131Bridge::Stop()+0x30>
 800f268:	6803      	ldr	r3, [r0, #0]
 800f26a:	4631      	mov	r1, r6
 800f26c:	68db      	ldr	r3, [r3, #12]
 800f26e:	4798      	blx	r3
 800f270:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800f272:	2200      	movs	r2, #0
 800f274:	f8c5 2c04 	str.w	r2, [r5, #3076]	@ 0xc04
 800f278:	b153      	cbz	r3, 800f290 <E131Bridge::Stop()+0x50>
 800f27a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800f27c:	b18b      	cbz	r3, 800f2a2 <E131Bridge::Stop()+0x62>
 800f27e:	4b0f      	ldr	r3, [pc, #60]	@ (800f2bc <E131Bridge::Stop()+0x7c>)
 800f280:	2100      	movs	r1, #0
 800f282:	f884 1028 	strb.w	r1, [r4, #40]	@ 0x28
 800f286:	6818      	ldr	r0, [r3, #0]
 800f288:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f28c:	f008 ba32 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800f290:	4a0b      	ldr	r2, [pc, #44]	@ (800f2c0 <E131Bridge::Stop()+0x80>)
 800f292:	4619      	mov	r1, r3
 800f294:	6810      	ldr	r0, [r2, #0]
 800f296:	2201      	movs	r2, #1
 800f298:	f002 fdec 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800f29c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800f29e:	2b00      	cmp	r3, #0
 800f2a0:	d1ed      	bne.n	800f27e <E131Bridge::Stop()+0x3e>
 800f2a2:	4907      	ldr	r1, [pc, #28]	@ (800f2c0 <E131Bridge::Stop()+0x80>)
 800f2a4:	2201      	movs	r2, #1
 800f2a6:	6808      	ldr	r0, [r1, #0]
 800f2a8:	4611      	mov	r1, r2
 800f2aa:	f002 fde3 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800f2ae:	e7e6      	b.n	800f27e <E131Bridge::Stop()+0x3e>
 800f2b0:	4d01      	ldr	r5, [pc, #4]	@ (800f2b8 <E131Bridge::Stop()+0x78>)
 800f2b2:	f8c5 0600 	str.w	r0, [r5, #1536]	@ 0x600
 800f2b6:	e7db      	b.n	800f270 <E131Bridge::Stop()+0x30>
 800f2b8:	2000008c 	andcs	r0, r0, ip, lsl #1
 800f2bc:	20002b04 	andcs	r2, r0, r4, lsl #22
 800f2c0:	20001c4c 	andcs	r1, r0, ip, asr #24

0800f2c4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800f2c4:	b538      	push	{r3, r4, r5, lr}
 800f2c6:	461c      	mov	r4, r3
 800f2c8:	b1e1      	cbz	r1, 800f304 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x40>
 800f2ca:	8b43      	ldrh	r3, [r0, #26]
 800f2cc:	f100 051a 	add.w	r5, r0, #26
 800f2d0:	b173      	cbz	r3, 800f2f0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800f2d2:	42a3      	cmp	r3, r4
 800f2d4:	d01d      	beq.n	800f312 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4e>
 800f2d6:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800f2d8:	429a      	cmp	r2, r3
 800f2da:	d009      	beq.n	800f2f0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800f2dc:	8f82      	ldrh	r2, [r0, #60]	@ 0x3c
 800f2de:	429a      	cmp	r2, r3
 800f2e0:	d006      	beq.n	800f2f0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800f2e2:	ba18      	rev	r0, r3
 800f2e4:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800f2e8:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800f2ec:	f004 ff38 	bl	8014160 <net::igmp_leave(unsigned long)>
 800f2f0:	ba20      	rev	r0, r4
 800f2f2:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800f2f6:	802c      	strh	r4, [r5, #0]
 800f2f8:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800f2fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f300:	f004 bf10 	b.w	8014124 <net::igmp_join(unsigned long)>
 800f304:	b12a      	cbz	r2, 800f312 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4e>
 800f306:	8b83      	ldrh	r3, [r0, #28]
 800f308:	f100 051c 	add.w	r5, r0, #28
 800f30c:	2b00      	cmp	r3, #0
 800f30e:	d0ef      	beq.n	800f2f0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2c>
 800f310:	e7df      	b.n	800f2d2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0xe>
 800f312:	bd38      	pop	{r3, r4, r5, pc}

0800f314 <E131Bridge::SetLocalMerging()>:
 800f314:	f100 0118 	add.w	r1, r0, #24
 800f318:	4603      	mov	r3, r0
 800f31a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f31c:	2a01      	cmp	r2, #1
 800f31e:	d01f      	beq.n	800f360 <E131Bridge::SetLocalMerging()+0x4c>
 800f320:	b570      	push	{r4, r5, r6, lr}
 800f322:	8e1c      	ldrh	r4, [r3, #48]	@ 0x30
 800f324:	b944      	cbnz	r4, 800f338 <E131Bridge::SetLocalMerging()+0x24>
 800f326:	330c      	adds	r3, #12
 800f328:	428b      	cmp	r3, r1
 800f32a:	d018      	beq.n	800f35e <E131Bridge::SetLocalMerging()+0x4a>
 800f32c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f32e:	2a01      	cmp	r2, #1
 800f330:	d0f9      	beq.n	800f326 <E131Bridge::SetLocalMerging()+0x12>
 800f332:	8e1c      	ldrh	r4, [r3, #48]	@ 0x30
 800f334:	2c00      	cmp	r4, #0
 800f336:	d0f6      	beq.n	800f326 <E131Bridge::SetLocalMerging()+0x12>
 800f338:	2200      	movs	r2, #0
 800f33a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800f33e:	4684      	mov	ip, r0
 800f340:	4602      	mov	r2, r0
 800f342:	6b55      	ldr	r5, [r2, #52]	@ 0x34
 800f344:	b11d      	cbz	r5, 800f34e <E131Bridge::SetLocalMerging()+0x3a>
 800f346:	f8b2 e030 	ldrh.w	lr, [r2, #48]	@ 0x30
 800f34a:	45a6      	cmp	lr, r4
 800f34c:	d00c      	beq.n	800f368 <E131Bridge::SetLocalMerging()+0x54>
 800f34e:	320c      	adds	r2, #12
 800f350:	428a      	cmp	r2, r1
 800f352:	f10c 0c44 	add.w	ip, ip, #68	@ 0x44
 800f356:	d1f4      	bne.n	800f342 <E131Bridge::SetLocalMerging()+0x2e>
 800f358:	330c      	adds	r3, #12
 800f35a:	428b      	cmp	r3, r1
 800f35c:	d1e6      	bne.n	800f32c <E131Bridge::SetLocalMerging()+0x18>
 800f35e:	bd70      	pop	{r4, r5, r6, pc}
 800f360:	330c      	adds	r3, #12
 800f362:	428b      	cmp	r3, r1
 800f364:	d1d9      	bne.n	800f31a <E131Bridge::SetLocalMerging()+0x6>
 800f366:	4770      	bx	lr
 800f368:	4d08      	ldr	r5, [pc, #32]	@ (800f38c <E131Bridge::SetLocalMerging()+0x78>)
 800f36a:	f892 6038 	ldrb.w	r6, [r2, #56]	@ 0x38
 800f36e:	682d      	ldr	r5, [r5, #0]
 800f370:	b146      	cbz	r6, 800f384 <E131Bridge::SetLocalMerging()+0x70>
 800f372:	f8cc 5068 	str.w	r5, [ip, #104]	@ 0x68
 800f376:	f04f 0e01 	mov.w	lr, #1
 800f37a:	f883 e038 	strb.w	lr, [r3, #56]	@ 0x38
 800f37e:	f882 e038 	strb.w	lr, [r2, #56]	@ 0x38
 800f382:	e7e4      	b.n	800f34e <E131Bridge::SetLocalMerging()+0x3a>
 800f384:	f8cc 504c 	str.w	r5, [ip, #76]	@ 0x4c
 800f388:	e7f5      	b.n	800f376 <E131Bridge::SetLocalMerging()+0x62>
 800f38a:	bf00      	nop
 800f38c:	20002954 	andcs	r2, r0, r4, asr r9

0800f390 <E131Bridge::Start()>:
 800f390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f392:	4b28      	ldr	r3, [pc, #160]	@ (800f434 <E131Bridge::Start()+0xa4>)
 800f394:	f8c0 3844 	str.w	r3, [r0, #2116]	@ 0x844
 800f398:	4604      	mov	r4, r0
 800f39a:	f000 fec1 	bl	8010120 <E131Bridge::FillDataPacket()>
 800f39e:	4620      	mov	r0, r4
 800f3a0:	f000 fe2a 	bl	800fff8 <E131Bridge::FillDiscoveryPacket()>
 800f3a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800f3a6:	2900      	cmp	r1, #0
 800f3a8:	d03d      	beq.n	800f426 <E131Bridge::Start()+0x96>
 800f3aa:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800f3ac:	b39b      	cbz	r3, 800f416 <E131Bridge::Start()+0x86>
 800f3ae:	4620      	mov	r0, r4
 800f3b0:	f7ff ffb0 	bl	800f314 <E131Bridge::SetLocalMerging()>
 800f3b4:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 800f3b8:	b323      	cbz	r3, 800f404 <E131Bridge::Start()+0x74>
 800f3ba:	4625      	mov	r5, r4
 800f3bc:	4626      	mov	r6, r4
 800f3be:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800f3c0:	2b01      	cmp	r3, #1
 800f3c2:	f04f 0700 	mov.w	r7, #0
 800f3c6:	d007      	beq.n	800f3d8 <E131Bridge::Start()+0x48>
 800f3c8:	350c      	adds	r5, #12
 800f3ca:	3644      	adds	r6, #68	@ 0x44
 800f3cc:	b9d7      	cbnz	r7, 800f404 <E131Bridge::Start()+0x74>
 800f3ce:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800f3d0:	2b01      	cmp	r3, #1
 800f3d2:	f04f 0701 	mov.w	r7, #1
 800f3d6:	d1f7      	bne.n	800f3c8 <E131Bridge::Start()+0x38>
 800f3d8:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f3dc:	f8d6 2084 	ldr.w	r2, [r6, #132]	@ 0x84
 800f3e0:	b150      	cbz	r0, 800f3f8 <E131Bridge::Start()+0x68>
 800f3e2:	6803      	ldr	r3, [r0, #0]
 800f3e4:	4639      	mov	r1, r7
 800f3e6:	69db      	ldr	r3, [r3, #28]
 800f3e8:	4798      	blx	r3
 800f3ea:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f3ee:	6803      	ldr	r3, [r0, #0]
 800f3f0:	4639      	mov	r1, r7
 800f3f2:	6a1b      	ldr	r3, [r3, #32]
 800f3f4:	4798      	blx	r3
 800f3f6:	4602      	mov	r2, r0
 800f3f8:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
 800f3fc:	350c      	adds	r5, #12
 800f3fe:	3644      	adds	r6, #68	@ 0x44
 800f400:	2f00      	cmp	r7, #0
 800f402:	d0e4      	beq.n	800f3ce <E131Bridge::Start()+0x3e>
 800f404:	4b0c      	ldr	r3, [pc, #48]	@ (800f438 <E131Bridge::Start()+0xa8>)
 800f406:	2102      	movs	r1, #2
 800f408:	6818      	ldr	r0, [r3, #0]
 800f40a:	f884 1028 	strb.w	r1, [r4, #40]	@ 0x28
 800f40e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800f412:	f008 b96f 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800f416:	4a09      	ldr	r2, [pc, #36]	@ (800f43c <E131Bridge::Start()+0xac>)
 800f418:	2301      	movs	r3, #1
 800f41a:	6810      	ldr	r0, [r2, #0]
 800f41c:	4619      	mov	r1, r3
 800f41e:	461a      	mov	r2, r3
 800f420:	f002 fd28 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800f424:	e7c3      	b.n	800f3ae <E131Bridge::Start()+0x1e>
 800f426:	4a05      	ldr	r2, [pc, #20]	@ (800f43c <E131Bridge::Start()+0xac>)
 800f428:	2301      	movs	r3, #1
 800f42a:	6810      	ldr	r0, [r2, #0]
 800f42c:	461a      	mov	r2, r3
 800f42e:	f002 fd21 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800f432:	e7ba      	b.n	800f3aa <E131Bridge::Start()+0x1a>
 800f434:	d6faffef 	ldrbtle	pc, [sl], pc, ror #31	@ <UNPREDICTABLE>
 800f438:	20002b04 	andcs	r2, r0, r4, lsl #22
 800f43c:	20001c4c 	andcs	r1, r0, ip, asr #24

0800f440 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)>:
 800f440:	2a02      	cmp	r2, #2
 800f442:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f444:	4606      	mov	r6, r0
 800f446:	460c      	mov	r4, r1
 800f448:	461f      	mov	r7, r3
 800f44a:	d034      	beq.n	800f4b6 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x76>
 800f44c:	b9c2      	cbnz	r2, 800f480 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x40>
 800f44e:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800f452:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800f456:	004d      	lsls	r5, r1, #1
 800f458:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f45a:	2a00      	cmp	r2, #0
 800f45c:	d13d      	bne.n	800f4da <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x9a>
 800f45e:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800f460:	42bb      	cmp	r3, r7
 800f462:	d00c      	beq.n	800f47e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800f464:	4425      	add	r5, r4
 800f466:	ba3b      	rev	r3, r7
 800f468:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800f46c:	f443 437f 	orr.w	r3, r3, #65280	@ 0xff00
 800f470:	2200      	movs	r2, #0
 800f472:	f043 03ef 	orr.w	r3, r3, #239	@ 0xef
 800f476:	636a      	str	r2, [r5, #52]	@ 0x34
 800f478:	862f      	strh	r7, [r5, #48]	@ 0x30
 800f47a:	f8c5 30d0 	str.w	r3, [r5, #208]	@ 0xd0
 800f47e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f480:	2a01      	cmp	r2, #1
 800f482:	d1fc      	bne.n	800f47e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800f484:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800f488:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800f48c:	004d      	lsls	r5, r1, #1
 800f48e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f490:	2a01      	cmp	r2, #1
 800f492:	d040      	beq.n	800f516 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xd6>
 800f494:	7fc3      	ldrb	r3, [r0, #31]
 800f496:	3301      	adds	r3, #1
 800f498:	77c3      	strb	r3, [r0, #31]
 800f49a:	ba38      	rev	r0, r7
 800f49c:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800f4a0:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800f4a4:	4425      	add	r5, r4
 800f4a6:	f004 fe3d 	bl	8014124 <net::igmp_join(unsigned long)>
 800f4aa:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 800f4ae:	2301      	movs	r3, #1
 800f4b0:	6343      	str	r3, [r0, #52]	@ 0x34
 800f4b2:	8607      	strh	r7, [r0, #48]	@ 0x30
 800f4b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f4b6:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 800f4ba:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800f4be:	004d      	lsls	r5, r1, #1
 800f4c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f4c2:	2b01      	cmp	r3, #1
 800f4c4:	d00d      	beq.n	800f4e2 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xa2>
 800f4c6:	b913      	cbnz	r3, 800f4ce <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800f4c8:	7fb3      	ldrb	r3, [r6, #30]
 800f4ca:	3b01      	subs	r3, #1
 800f4cc:	77b3      	strb	r3, [r6, #30]
 800f4ce:	4425      	add	r5, r4
 800f4d0:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800f4d4:	2302      	movs	r3, #2
 800f4d6:	636b      	str	r3, [r5, #52]	@ 0x34
 800f4d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f4da:	7f83      	ldrb	r3, [r0, #30]
 800f4dc:	3301      	adds	r3, #1
 800f4de:	7783      	strb	r3, [r0, #30]
 800f4e0:	e7c0      	b.n	800f464 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x24>
 800f4e2:	7fc3      	ldrb	r3, [r0, #31]
 800f4e4:	3b01      	subs	r3, #1
 800f4e6:	77c3      	strb	r3, [r0, #31]
 800f4e8:	b121      	cbz	r1, 800f4f4 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xb4>
 800f4ea:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800f4ec:	42bb      	cmp	r3, r7
 800f4ee:	d0ee      	beq.n	800f4ce <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800f4f0:	2901      	cmp	r1, #1
 800f4f2:	d002      	beq.n	800f4fa <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xba>
 800f4f4:	8fb3      	ldrh	r3, [r6, #60]	@ 0x3c
 800f4f6:	42bb      	cmp	r3, r7
 800f4f8:	d0e9      	beq.n	800f4ce <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800f4fa:	ba38      	rev	r0, r7
 800f4fc:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800f500:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800f504:	f004 fe2c 	bl	8014160 <net::igmp_leave(unsigned long)>
 800f508:	192b      	adds	r3, r5, r4
 800f50a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f50e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f510:	2b00      	cmp	r3, #0
 800f512:	d0d9      	beq.n	800f4c8 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x88>
 800f514:	e7db      	b.n	800f4ce <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x8e>
 800f516:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800f518:	42bb      	cmp	r3, r7
 800f51a:	d0b0      	beq.n	800f47e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x3e>
 800f51c:	b121      	cbz	r1, 800f528 <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xe8>
 800f51e:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800f520:	429a      	cmp	r2, r3
 800f522:	d0ba      	beq.n	800f49a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800f524:	2901      	cmp	r1, #1
 800f526:	d002      	beq.n	800f52e <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0xee>
 800f528:	8fb2      	ldrh	r2, [r6, #60]	@ 0x3c
 800f52a:	429a      	cmp	r2, r3
 800f52c:	d0b5      	beq.n	800f49a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800f52e:	0218      	lsls	r0, r3, #8
 800f530:	f400 007f 	and.w	r0, r0, #16711680	@ 0xff0000
 800f534:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 800f538:	f440 407f 	orr.w	r0, r0, #65280	@ 0xff00
 800f53c:	f040 00ef 	orr.w	r0, r0, #239	@ 0xef
 800f540:	f004 fe0e 	bl	8014160 <net::igmp_leave(unsigned long)>
 800f544:	e7a9      	b.n	800f49a <E131Bridge::SetUniverse(unsigned long, lightset::PortDir, unsigned short)+0x5a>
 800f546:	bf00      	nop

0800f548 <E131Bridge::CheckMergeTimeouts(unsigned long)>:
 800f548:	eb01 1301 	add.w	r3, r1, r1, lsl #4
 800f54c:	b530      	push	{r4, r5, lr}
 800f54e:	eb00 0e83 	add.w	lr, r0, r3, lsl #2
 800f552:	6844      	ldr	r4, [r0, #4]
 800f554:	009a      	lsls	r2, r3, #2
 800f556:	f8de 3048 	ldr.w	r3, [lr, #72]	@ 0x48
 800f55a:	f242 7510 	movw	r5, #10000	@ 0x2710
 800f55e:	eba4 0c03 	sub.w	ip, r4, r3
 800f562:	45ac      	cmp	ip, r5
 800f564:	ea4f 1301 	mov.w	r3, r1, lsl #4
 800f568:	d90b      	bls.n	800f582 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x3a>
 800f56a:	3250      	adds	r2, #80	@ 0x50
 800f56c:	2400      	movs	r4, #0
 800f56e:	f8ce 404c 	str.w	r4, [lr, #76]	@ 0x4c
 800f572:	5084      	str	r4, [r0, r2]
 800f574:	4402      	add	r2, r0
 800f576:	6054      	str	r4, [r2, #4]
 800f578:	6094      	str	r4, [r2, #8]
 800f57a:	60d4      	str	r4, [r2, #12]
 800f57c:	f88e 4088 	strb.w	r4, [lr, #136]	@ 0x88
 800f580:	6844      	ldr	r4, [r0, #4]
 800f582:	4419      	add	r1, r3
 800f584:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 800f588:	0089      	lsls	r1, r1, #2
 800f58a:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 800f58c:	1ae4      	subs	r4, r4, r3
 800f58e:	f242 7310 	movw	r3, #10000	@ 0x2710
 800f592:	429c      	cmp	r4, r3
 800f594:	d909      	bls.n	800f5aa <E131Bridge::CheckMergeTimeouts(unsigned long)+0x62>
 800f596:	316c      	adds	r1, #108	@ 0x6c
 800f598:	1844      	adds	r4, r0, r1
 800f59a:	2300      	movs	r3, #0
 800f59c:	6693      	str	r3, [r2, #104]	@ 0x68
 800f59e:	5043      	str	r3, [r0, r1]
 800f5a0:	6063      	str	r3, [r4, #4]
 800f5a2:	60a3      	str	r3, [r4, #8]
 800f5a4:	60e3      	str	r3, [r4, #12]
 800f5a6:	f882 3088 	strb.w	r3, [r2, #136]	@ 0x88
 800f5aa:	f890 3088 	ldrb.w	r3, [r0, #136]	@ 0x88
 800f5ae:	b93b      	cbnz	r3, 800f5c0 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x78>
 800f5b0:	f890 30cc 	ldrb.w	r3, [r0, #204]	@ 0xcc
 800f5b4:	b923      	cbnz	r3, 800f5c0 <E131Bridge::CheckMergeTimeouts(unsigned long)+0x78>
 800f5b6:	2201      	movs	r2, #1
 800f5b8:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
 800f5bc:	f880 302a 	strb.w	r3, [r0, #42]	@ 0x2a
 800f5c0:	bd30      	pop	{r4, r5, pc}
 800f5c2:	bf00      	nop

0800f5c4 <E131Bridge::IsPriorityTimeOut(unsigned long) const>:
 800f5c4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 800f5c8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800f5cc:	6843      	ldr	r3, [r0, #4]
 800f5ce:	e9d1 2019 	ldrd	r2, r0, [r1, #100]	@ 0x64
 800f5d2:	b410      	push	{r4}
 800f5d4:	6ccc      	ldr	r4, [r1, #76]	@ 0x4c
 800f5d6:	1a9a      	subs	r2, r3, r2
 800f5d8:	b94c      	cbnz	r4, 800f5ee <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x2a>
 800f5da:	b128      	cbz	r0, 800f5e8 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x24>
 800f5dc:	f242 7010 	movw	r0, #10000	@ 0x2710
 800f5e0:	4282      	cmp	r2, r0
 800f5e2:	bf94      	ite	ls
 800f5e4:	2000      	movls	r0, #0
 800f5e6:	2001      	movhi	r0, #1
 800f5e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f5ec:	4770      	bx	lr
 800f5ee:	6c89      	ldr	r1, [r1, #72]	@ 0x48
 800f5f0:	1a5b      	subs	r3, r3, r1
 800f5f2:	b128      	cbz	r0, 800f600 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x3c>
 800f5f4:	f242 700f 	movw	r0, #9999	@ 0x270f
 800f5f8:	4283      	cmp	r3, r0
 800f5fa:	d8f1      	bhi.n	800f5e0 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x1c>
 800f5fc:	2000      	movs	r0, #0
 800f5fe:	e7f3      	b.n	800f5e8 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x24>
 800f600:	f242 7010 	movw	r0, #10000	@ 0x2710
 800f604:	4283      	cmp	r3, r0
 800f606:	e7ec      	b.n	800f5e2 <E131Bridge::IsPriorityTimeOut(unsigned long) const+0x1e>

0800f608 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800f608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f60a:	2301      	movs	r3, #1
 800f60c:	4604      	mov	r4, r0
 800f60e:	f880 302d 	strb.w	r3, [r0, #45]	@ 0x2d
 800f612:	b381      	cbz	r1, 800f676 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6e>
 800f614:	b37a      	cbz	r2, 800f676 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6e>
 800f616:	4942      	ldr	r1, [pc, #264]	@ (800f720 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x118>)
 800f618:	f8c0 3029 	str.w	r3, [r0, #41]	@ 0x29
 800f61c:	f880 3020 	strb.w	r3, [r0, #32]
 800f620:	f100 05d8 	add.w	r5, r0, #216	@ 0xd8
 800f624:	f100 0350 	add.w	r3, r0, #80	@ 0x50
 800f628:	2700      	movs	r7, #0
 800f62a:	f893 0039 	ldrb.w	r0, [r3, #57]	@ 0x39
 800f62e:	2800      	cmp	r0, #0
 800f630:	d163      	bne.n	800f6fa <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xf2>
 800f632:	3344      	adds	r3, #68	@ 0x44
 800f634:	42ab      	cmp	r3, r5
 800f636:	f201 6104 	addw	r1, r1, #1540	@ 0x604
 800f63a:	d1f6      	bne.n	800f62a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x22>
 800f63c:	b15f      	cbz	r7, 800f656 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800f63e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f640:	2901      	cmp	r1, #1
 800f642:	d035      	beq.n	800f6b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xa8>
 800f644:	2902      	cmp	r1, #2
 800f646:	d106      	bne.n	800f656 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800f648:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f64c:	4a35      	ldr	r2, [pc, #212]	@ (800f724 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>)
 800f64e:	6803      	ldr	r3, [r0, #0]
 800f650:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f652:	4293      	cmp	r3, r2
 800f654:	d162      	bne.n	800f71c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800f656:	4b34      	ldr	r3, [pc, #208]	@ (800f728 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x120>)
 800f658:	2102      	movs	r1, #2
 800f65a:	6818      	ldr	r0, [r3, #0]
 800f65c:	f008 f84a 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800f660:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800f664:	f023 0302 	bic.w	r3, r3, #2
 800f668:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800f66c:	4620      	mov	r0, r4
 800f66e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800f672:	f7ff be4f 	b.w	800f314 <E131Bridge::SetLocalMerging()>
 800f676:	482a      	ldr	r0, [pc, #168]	@ (800f720 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x118>)
 800f678:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 800f67c:	f104 0cf4 	add.w	ip, r4, #244	@ 0xf4
 800f680:	2700      	movs	r7, #0
 800f682:	7f5d      	ldrb	r5, [r3, #29]
 800f684:	b175      	cbz	r5, 800f6a4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800f686:	b111      	cbz	r1, 800f68e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x86>
 800f688:	f853 6c20 	ldr.w	r6, [r3, #-32]
 800f68c:	b9ce      	cbnz	r6, 800f6c2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800f68e:	b112      	cbz	r2, 800f696 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 800f690:	f853 6c04 	ldr.w	r6, [r3, #-4]
 800f694:	bb26      	cbnz	r6, 800f6e0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd8>
 800f696:	f894 602a 	ldrb.w	r6, [r4, #42]	@ 0x2a
 800f69a:	b91e      	cbnz	r6, 800f6a4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800f69c:	f8c0 6600 	str.w	r6, [r0, #1536]	@ 0x600
 800f6a0:	462f      	mov	r7, r5
 800f6a2:	775e      	strb	r6, [r3, #29]
 800f6a4:	3344      	adds	r3, #68	@ 0x44
 800f6a6:	459c      	cmp	ip, r3
 800f6a8:	f200 6004 	addw	r0, r0, #1540	@ 0x604
 800f6ac:	d1e9      	bne.n	800f682 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x7a>
 800f6ae:	e7c5      	b.n	800f63c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x34>
 800f6b0:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f6b4:	4a1d      	ldr	r2, [pc, #116]	@ (800f72c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x124>)
 800f6b6:	6803      	ldr	r3, [r0, #0]
 800f6b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f6ba:	4293      	cmp	r3, r2
 800f6bc:	d0cb      	beq.n	800f656 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800f6be:	4798      	blx	r3
 800f6c0:	e7c9      	b.n	800f656 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800f6c2:	2600      	movs	r6, #0
 800f6c4:	771e      	strb	r6, [r3, #28]
 800f6c6:	f843 6c20 	str.w	r6, [r3, #-32]
 800f6ca:	f843 6c1c 	str.w	r6, [r3, #-28]
 800f6ce:	f843 6c18 	str.w	r6, [r3, #-24]
 800f6d2:	f843 6c14 	str.w	r6, [r3, #-20]
 800f6d6:	f843 6c10 	str.w	r6, [r3, #-16]
 800f6da:	2a00      	cmp	r2, #0
 800f6dc:	d0db      	beq.n	800f696 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 800f6de:	e7d7      	b.n	800f690 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x88>
 800f6e0:	2600      	movs	r6, #0
 800f6e2:	601e      	str	r6, [r3, #0]
 800f6e4:	605e      	str	r6, [r3, #4]
 800f6e6:	609e      	str	r6, [r3, #8]
 800f6e8:	60de      	str	r6, [r3, #12]
 800f6ea:	771e      	strb	r6, [r3, #28]
 800f6ec:	f843 6c04 	str.w	r6, [r3, #-4]
 800f6f0:	f894 602a 	ldrb.w	r6, [r4, #42]	@ 0x2a
 800f6f4:	2e00      	cmp	r6, #0
 800f6f6:	d1d5      	bne.n	800f6a4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800f6f8:	e7d0      	b.n	800f69c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x94>
 800f6fa:	2200      	movs	r2, #0
 800f6fc:	f843 2c04 	str.w	r2, [r3, #-4]
 800f700:	601a      	str	r2, [r3, #0]
 800f702:	605a      	str	r2, [r3, #4]
 800f704:	609a      	str	r2, [r3, #8]
 800f706:	60da      	str	r2, [r3, #12]
 800f708:	619a      	str	r2, [r3, #24]
 800f70a:	61da      	str	r2, [r3, #28]
 800f70c:	621a      	str	r2, [r3, #32]
 800f70e:	625a      	str	r2, [r3, #36]	@ 0x24
 800f710:	629a      	str	r2, [r3, #40]	@ 0x28
 800f712:	4607      	mov	r7, r0
 800f714:	f8c1 2600 	str.w	r2, [r1, #1536]	@ 0x600
 800f718:	871a      	strh	r2, [r3, #56]	@ 0x38
 800f71a:	e78a      	b.n	800f632 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2a>
 800f71c:	4798      	blx	r3
 800f71e:	e79a      	b.n	800f656 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x4e>
 800f720:	2000008c 	andcs	r0, r0, ip, lsl #1
 800f724:	0800f12d 	stmdaeq	r0, {r0, r2, r3, r5, r8, ip, sp, lr, pc}
 800f728:	20002b04 	andcs	r2, r0, r4, lsl #22
 800f72c:	0800f129 	stmdaeq	r0, {r0, r3, r5, r8, ip, sp, lr, pc}

0800f730 <E131Bridge::HandleDmx()>:
 800f730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f734:	f8d0 90ec 	ldr.w	r9, [r0, #236]	@ 0xec
 800f738:	f8df 862c 	ldr.w	r8, [pc, #1580]	@ 800fd68 <E131Bridge::HandleDmx()+0x638>
 800f73c:	f8b9 307b 	ldrh.w	r3, [r9, #123]	@ 0x7b
 800f740:	ba5b      	rev16	r3, r3
 800f742:	b08b      	sub	sp, #44	@ 0x2c
 800f744:	fa1f fb83 	uxth.w	fp, r3
 800f748:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
 800f74c:	4605      	mov	r5, r0
 800f74e:	f1a8 0702 	sub.w	r7, r8, #2
 800f752:	9304      	str	r3, [sp, #16]
 800f754:	eb07 030b 	add.w	r3, r7, fp
 800f758:	9303      	str	r3, [sp, #12]
 800f75a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800f75c:	f109 027e 	add.w	r2, r9, #126	@ 0x7e
 800f760:	2b01      	cmp	r3, #1
 800f762:	4604      	mov	r4, r0
 800f764:	9205      	str	r2, [sp, #20]
 800f766:	f100 0650 	add.w	r6, r0, #80	@ 0x50
 800f76a:	f04f 0a00 	mov.w	sl, #0
 800f76e:	d010      	beq.n	800f792 <E131Bridge::HandleDmx()+0x62>
 800f770:	9b03      	ldr	r3, [sp, #12]
 800f772:	f203 6304 	addw	r3, r3, #1540	@ 0x604
 800f776:	350c      	adds	r5, #12
 800f778:	f208 6804 	addw	r8, r8, #1540	@ 0x604
 800f77c:	3644      	adds	r6, #68	@ 0x44
 800f77e:	9303      	str	r3, [sp, #12]
 800f780:	f1ba 0f00 	cmp.w	sl, #0
 800f784:	f040 80ff 	bne.w	800f986 <E131Bridge::HandleDmx()+0x256>
 800f788:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 800f78a:	2b01      	cmp	r3, #1
 800f78c:	f04f 0a01 	mov.w	sl, #1
 800f790:	d1ee      	bne.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f792:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 800f794:	f8b9 2071 	ldrh.w	r2, [r9, #113]	@ 0x71
 800f798:	ba5b      	rev16	r3, r3
 800f79a:	b29b      	uxth	r3, r3
 800f79c:	429a      	cmp	r2, r3
 800f79e:	d1e7      	bne.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f7a0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800f7a4:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800f7a8:	69b1      	ldr	r1, [r6, #24]
 800f7aa:	9207      	str	r2, [sp, #28]
 800f7ac:	429a      	cmp	r2, r3
 800f7ae:	461f      	mov	r7, r3
 800f7b0:	9106      	str	r1, [sp, #24]
 800f7b2:	f000 80eb 	beq.w	800f98c <E131Bridge::HandleDmx()+0x25c>
 800f7b6:	4299      	cmp	r1, r3
 800f7b8:	f040 8103 	bne.w	800f9c2 <E131Bridge::HandleDmx()+0x292>
 800f7bc:	f8d4 20ec 	ldr.w	r2, [r4, #236]	@ 0xec
 800f7c0:	2300      	movs	r3, #0
 800f7c2:	3215      	adds	r2, #21
 800f7c4:	461f      	mov	r7, r3
 800f7c6:	f106 0c2b 	add.w	ip, r6, #43	@ 0x2b
 800f7ca:	f106 031b 	add.w	r3, r6, #27
 800f7ce:	e002      	b.n	800f7d6 <E131Bridge::HandleDmx()+0xa6>
 800f7d0:	4563      	cmp	r3, ip
 800f7d2:	f000 8104 	beq.w	800f9de <E131Bridge::HandleDmx()+0x2ae>
 800f7d6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f7da:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800f7de:	4288      	cmp	r0, r1
 800f7e0:	d0f6      	beq.n	800f7d0 <E131Bridge::HandleDmx()+0xa0>
 800f7e2:	2f00      	cmp	r7, #0
 800f7e4:	f000 80ed 	beq.w	800f9c2 <E131Bridge::HandleDmx()+0x292>
 800f7e8:	2200      	movs	r2, #0
 800f7ea:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800f7ee:	4617      	mov	r7, r2
 800f7f0:	7c32      	ldrb	r2, [r6, #16]
 800f7f2:	7433      	strb	r3, [r6, #16]
 800f7f4:	3313      	adds	r3, #19
 800f7f6:	1a9b      	subs	r3, r3, r2
 800f7f8:	b2db      	uxtb	r3, r3
 800f7fa:	2b13      	cmp	r3, #19
 800f7fc:	d9b8      	bls.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f7fe:	f999 3070 	ldrsb.w	r3, [r9, #112]	@ 0x70
 800f802:	f899 2070 	ldrb.w	r2, [r9, #112]	@ 0x70
 800f806:	2b00      	cmp	r3, #0
 800f808:	dbb2      	blt.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f80a:	0652      	lsls	r2, r2, #25
 800f80c:	f100 81ba 	bmi.w	800fb84 <E131Bridge::HandleDmx()+0x454>
 800f810:	2301      	movs	r3, #1
 800f812:	9309      	str	r3, [sp, #36]	@ 0x24
 800f814:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800f818:	b133      	cbz	r3, 800f828 <E131Bridge::HandleDmx()+0xf8>
 800f81a:	f894 302e 	ldrb.w	r3, [r4, #46]	@ 0x2e
 800f81e:	b91b      	cbnz	r3, 800f828 <E131Bridge::HandleDmx()+0xf8>
 800f820:	4651      	mov	r1, sl
 800f822:	4620      	mov	r0, r4
 800f824:	f7ff fe90 	bl	800f548 <E131Bridge::CheckMergeTimeouts(unsigned long)>
 800f828:	f899 206c 	ldrb.w	r2, [r9, #108]	@ 0x6c
 800f82c:	f894 3020 	ldrb.w	r3, [r4, #32]
 800f830:	9208      	str	r2, [sp, #32]
 800f832:	429a      	cmp	r2, r3
 800f834:	f080 80f8 	bcs.w	800fa28 <E131Bridge::HandleDmx()+0x2f8>
 800f838:	4651      	mov	r1, sl
 800f83a:	4620      	mov	r0, r4
 800f83c:	f7ff fec2 	bl	800f5c4 <E131Bridge::IsPriorityTimeOut(unsigned long) const>
 800f840:	2800      	cmp	r0, #0
 800f842:	d095      	beq.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f844:	9a08      	ldr	r2, [sp, #32]
 800f846:	f884 2020 	strb.w	r2, [r4, #32]
 800f84a:	f508 6380 	add.w	r3, r8, #1024	@ 0x400
 800f84e:	9308      	str	r3, [sp, #32]
 800f850:	9b07      	ldr	r3, [sp, #28]
 800f852:	2b00      	cmp	r3, #0
 800f854:	f040 80f5 	bne.w	800fa42 <E131Bridge::HandleDmx()+0x312>
 800f858:	9b06      	ldr	r3, [sp, #24]
 800f85a:	2b00      	cmp	r3, #0
 800f85c:	f000 8157 	beq.w	800fb0e <E131Bridge::HandleDmx()+0x3de>
 800f860:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f862:	2b00      	cmp	r3, #0
 800f864:	f000 819c 	beq.w	800fba0 <E131Bridge::HandleDmx()+0x470>
 800f868:	2f00      	cmp	r7, #0
 800f86a:	f040 819c 	bne.w	800fba6 <E131Bridge::HandleDmx()+0x476>
 800f86e:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800f872:	f846 3c04 	str.w	r3, [r6, #-4]
 800f876:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800f87a:	7433      	strb	r3, [r6, #16]
 800f87c:	f109 0216 	add.w	r2, r9, #22
 800f880:	4633      	mov	r3, r6
 800f882:	f106 0010 	add.w	r0, r6, #16
 800f886:	f852 1b04 	ldr.w	r1, [r2], #4
 800f88a:	f843 1b04 	str.w	r1, [r3], #4
 800f88e:	4283      	cmp	r3, r0
 800f890:	d1f9      	bne.n	800f886 <E131Bridge::HandleDmx()+0x156>
 800f892:	6863      	ldr	r3, [r4, #4]
 800f894:	f846 3c08 	str.w	r3, [r6, #-8]
 800f898:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800f89c:	b923      	cbnz	r3, 800f8a8 <E131Bridge::HandleDmx()+0x178>
 800f89e:	2301      	movs	r3, #1
 800f8a0:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800f8a4:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800f8a8:	2301      	movs	r3, #1
 800f8aa:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800f8ae:	9b04      	ldr	r3, [sp, #16]
 800f8b0:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800f8b4:	2b00      	cmp	r3, #0
 800f8b6:	f000 81cd 	beq.w	800fc54 <E131Bridge::HandleDmx()+0x524>
 800f8ba:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800f8be:	9b05      	ldr	r3, [sp, #20]
 800f8c0:	4448      	add	r0, r9
 800f8c2:	4642      	mov	r2, r8
 800f8c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 800f8c8:	f802 1b01 	strb.w	r1, [r2], #1
 800f8cc:	4298      	cmp	r0, r3
 800f8ce:	d1f9      	bne.n	800f8c4 <E131Bridge::HandleDmx()+0x194>
 800f8d0:	9b04      	ldr	r3, [sp, #16]
 800f8d2:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800f8d6:	f1bc 0f00 	cmp.w	ip, #0
 800f8da:	f000 8236 	beq.w	800fd4a <E131Bridge::HandleDmx()+0x61a>
 800f8de:	9a08      	ldr	r2, [sp, #32]
 800f8e0:	9b05      	ldr	r3, [sp, #20]
 800f8e2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800f8e6:	f802 1b01 	strb.w	r1, [r2], #1
 800f8ea:	4298      	cmp	r0, r3
 800f8ec:	d1f9      	bne.n	800f8e2 <E131Bridge::HandleDmx()+0x1b2>
 800f8ee:	f899 3070 	ldrb.w	r3, [r9, #112]	@ 0x70
 800f8f2:	069b      	lsls	r3, r3, #26
 800f8f4:	f100 813b 	bmi.w	800fb6e <E131Bridge::HandleDmx()+0x43e>
 800f8f8:	f8b9 306d 	ldrh.w	r3, [r9, #109]	@ 0x6d
 800f8fc:	b29a      	uxth	r2, r3
 800f8fe:	2a00      	cmp	r2, #0
 800f900:	f000 8138 	beq.w	800fb74 <E131Bridge::HandleDmx()+0x444>
 800f904:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800f908:	2a00      	cmp	r2, #0
 800f90a:	f040 8133 	bne.w	800fb74 <E131Bridge::HandleDmx()+0x444>
 800f90e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f910:	ba5b      	rev16	r3, r3
 800f912:	b29b      	uxth	r3, r3
 800f914:	b912      	cbnz	r2, 800f91c <E131Bridge::HandleDmx()+0x1ec>
 800f916:	2f00      	cmp	r7, #0
 800f918:	f000 81fe 	beq.w	800fd18 <E131Bridge::HandleDmx()+0x5e8>
 800f91c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800f91e:	463a      	mov	r2, r7
 800f920:	4620      	mov	r0, r4
 800f922:	f7ff fccf 	bl	800f2c4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800f926:	f240 1301 	movw	r3, #257	@ 0x101
 800f92a:	f8a4 302b 	strh.w	r3, [r4, #43]	@ 0x2b
 800f92e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f932:	f894 202f 	ldrb.w	r2, [r4, #47]	@ 0x2f
 800f936:	6803      	ldr	r3, [r0, #0]
 800f938:	691b      	ldr	r3, [r3, #16]
 800f93a:	461f      	mov	r7, r3
 800f93c:	f8d8 3600 	ldr.w	r3, [r8, #1536]	@ 0x600
 800f940:	2a00      	cmp	r2, #0
 800f942:	f000 8125 	beq.w	800fb90 <E131Bridge::HandleDmx()+0x460>
 800f946:	6803      	ldr	r3, [r0, #0]
 800f948:	9a08      	ldr	r2, [sp, #32]
 800f94a:	2101      	movs	r1, #1
 800f94c:	9100      	str	r1, [sp, #0]
 800f94e:	691b      	ldr	r3, [r3, #16]
 800f950:	4651      	mov	r1, sl
 800f952:	461f      	mov	r7, r3
 800f954:	f8d8 3600 	ldr.w	r3, [r8, #1536]	@ 0x600
 800f958:	47b8      	blx	r7
 800f95a:	f896 3039 	ldrb.w	r3, [r6, #57]	@ 0x39
 800f95e:	b95b      	cbnz	r3, 800f978 <E131Bridge::HandleDmx()+0x248>
 800f960:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800f964:	6803      	ldr	r3, [r0, #0]
 800f966:	4651      	mov	r1, sl
 800f968:	689b      	ldr	r3, [r3, #8]
 800f96a:	4798      	blx	r3
 800f96c:	f04f 0301 	mov.w	r3, #1
 800f970:	f886 3039 	strb.w	r3, [r6, #57]	@ 0x39
 800f974:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800f978:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800f97c:	f043 0302 	orr.w	r3, r3, #2
 800f980:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 800f984:	e6f4      	b.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800f986:	b00b      	add	sp, #44	@ 0x2c
 800f988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f98c:	f8d4 20ec 	ldr.w	r2, [r4, #236]	@ 0xec
 800f990:	3215      	adds	r2, #21
 800f992:	1e73      	subs	r3, r6, #1
 800f994:	4610      	mov	r0, r2
 800f996:	f106 0e0f 	add.w	lr, r6, #15
 800f99a:	e001      	b.n	800f9a0 <E131Bridge::HandleDmx()+0x270>
 800f99c:	4573      	cmp	r3, lr
 800f99e:	d03d      	beq.n	800fa1c <E131Bridge::HandleDmx()+0x2ec>
 800f9a0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f9a4:	f810 cf01 	ldrb.w	ip, [r0, #1]!
 800f9a8:	4561      	cmp	r1, ip
 800f9aa:	d0f7      	beq.n	800f99c <E131Bridge::HandleDmx()+0x26c>
 800f9ac:	9b06      	ldr	r3, [sp, #24]
 800f9ae:	42bb      	cmp	r3, r7
 800f9b0:	eba1 010c 	sub.w	r1, r1, ip
 800f9b4:	f000 8082 	beq.w	800fabc <E131Bridge::HandleDmx()+0x38c>
 800f9b8:	b919      	cbnz	r1, 800f9c2 <E131Bridge::HandleDmx()+0x292>
 800f9ba:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800f9be:	460f      	mov	r7, r1
 800f9c0:	e716      	b.n	800f7f0 <E131Bridge::HandleDmx()+0xc0>
 800f9c2:	f999 2070 	ldrsb.w	r2, [r9, #112]	@ 0x70
 800f9c6:	f899 3070 	ldrb.w	r3, [r9, #112]	@ 0x70
 800f9ca:	2a00      	cmp	r2, #0
 800f9cc:	f6ff aed0 	blt.w	800f770 <E131Bridge::HandleDmx()+0x40>
 800f9d0:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800f9d4:	f47f aecc 	bne.w	800f770 <E131Bridge::HandleDmx()+0x40>
 800f9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 800f9da:	461f      	mov	r7, r3
 800f9dc:	e71a      	b.n	800f814 <E131Bridge::HandleDmx()+0xe4>
 800f9de:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800f9e2:	f103 0213 	add.w	r2, r3, #19
 800f9e6:	b2d2      	uxtb	r2, r2
 800f9e8:	2f00      	cmp	r7, #0
 800f9ea:	f47f af01 	bne.w	800f7f0 <E131Bridge::HandleDmx()+0xc0>
 800f9ee:	f896 102c 	ldrb.w	r1, [r6, #44]	@ 0x2c
 800f9f2:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800f9f6:	1a52      	subs	r2, r2, r1
 800f9f8:	b2d2      	uxtb	r2, r2
 800f9fa:	2a13      	cmp	r2, #19
 800f9fc:	f67f aeb8 	bls.w	800f770 <E131Bridge::HandleDmx()+0x40>
 800fa00:	f999 3070 	ldrsb.w	r3, [r9, #112]	@ 0x70
 800fa04:	f899 2070 	ldrb.w	r2, [r9, #112]	@ 0x70
 800fa08:	2b00      	cmp	r3, #0
 800fa0a:	f6ff aeb1 	blt.w	800f770 <E131Bridge::HandleDmx()+0x40>
 800fa0e:	0651      	lsls	r1, r2, #25
 800fa10:	f100 80ea 	bmi.w	800fbe8 <E131Bridge::HandleDmx()+0x4b8>
 800fa14:	2301      	movs	r3, #1
 800fa16:	9709      	str	r7, [sp, #36]	@ 0x24
 800fa18:	461f      	mov	r7, r3
 800fa1a:	e6fb      	b.n	800f814 <E131Bridge::HandleDmx()+0xe4>
 800fa1c:	9b06      	ldr	r3, [sp, #24]
 800fa1e:	42bb      	cmp	r3, r7
 800fa20:	f47f aee2 	bne.w	800f7e8 <E131Bridge::HandleDmx()+0xb8>
 800fa24:	2301      	movs	r3, #1
 800fa26:	e6cd      	b.n	800f7c4 <E131Bridge::HandleDmx()+0x94>
 800fa28:	f67f af0f 	bls.w	800f84a <E131Bridge::HandleDmx()+0x11a>
 800fa2c:	2300      	movs	r3, #0
 800fa2e:	f846 3c04 	str.w	r3, [r6, #-4]
 800fa32:	61b3      	str	r3, [r6, #24]
 800fa34:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800fa38:	f899 306c 	ldrb.w	r3, [r9, #108]	@ 0x6c
 800fa3c:	f884 3020 	strb.w	r3, [r4, #32]
 800fa40:	e703      	b.n	800f84a <E131Bridge::HandleDmx()+0x11a>
 800fa42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fa44:	2b00      	cmp	r3, #0
 800fa46:	d13d      	bne.n	800fac4 <E131Bridge::HandleDmx()+0x394>
 800fa48:	9b06      	ldr	r3, [sp, #24]
 800fa4a:	2b00      	cmp	r3, #0
 800fa4c:	f000 8106 	beq.w	800fc5c <E131Bridge::HandleDmx()+0x52c>
 800fa50:	2f00      	cmp	r7, #0
 800fa52:	f43f af4c 	beq.w	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fa56:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fa5a:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800fa5e:	6863      	ldr	r3, [r4, #4]
 800fa60:	6173      	str	r3, [r6, #20]
 800fa62:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800fa66:	b923      	cbnz	r3, 800fa72 <E131Bridge::HandleDmx()+0x342>
 800fa68:	2301      	movs	r3, #1
 800fa6a:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800fa6e:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800fa72:	2301      	movs	r3, #1
 800fa74:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800fa78:	9b04      	ldr	r3, [sp, #16]
 800fa7a:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800fa7e:	f508 7200 	add.w	r2, r8, #512	@ 0x200
 800fa82:	2b00      	cmp	r3, #0
 800fa84:	f000 80e6 	beq.w	800fc54 <E131Bridge::HandleDmx()+0x524>
 800fa88:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800fa8c:	9b05      	ldr	r3, [sp, #20]
 800fa8e:	4448      	add	r0, r9
 800fa90:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fa94:	f802 1b01 	strb.w	r1, [r2], #1
 800fa98:	4283      	cmp	r3, r0
 800fa9a:	d1f9      	bne.n	800fa90 <E131Bridge::HandleDmx()+0x360>
 800fa9c:	9b04      	ldr	r3, [sp, #16]
 800fa9e:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800faa2:	f1bc 0f00 	cmp.w	ip, #0
 800faa6:	f000 8128 	beq.w	800fcfa <E131Bridge::HandleDmx()+0x5ca>
 800faaa:	9a08      	ldr	r2, [sp, #32]
 800faac:	9b05      	ldr	r3, [sp, #20]
 800faae:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fab2:	f802 1b01 	strb.w	r1, [r2], #1
 800fab6:	4283      	cmp	r3, r0
 800fab8:	d1f9      	bne.n	800faae <E131Bridge::HandleDmx()+0x37e>
 800faba:	e718      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fabc:	fab1 f381 	clz	r3, r1
 800fac0:	095b      	lsrs	r3, r3, #5
 800fac2:	e67f      	b.n	800f7c4 <E131Bridge::HandleDmx()+0x94>
 800fac4:	9b06      	ldr	r3, [sp, #24]
 800fac6:	2b00      	cmp	r3, #0
 800fac8:	f040 8092 	bne.w	800fbf0 <E131Bridge::HandleDmx()+0x4c0>
 800facc:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fad0:	7433      	strb	r3, [r6, #16]
 800fad2:	6863      	ldr	r3, [r4, #4]
 800fad4:	f846 3c08 	str.w	r3, [r6, #-8]
 800fad8:	9b04      	ldr	r3, [sp, #16]
 800fada:	2b00      	cmp	r3, #0
 800fadc:	f000 80ba 	beq.w	800fc54 <E131Bridge::HandleDmx()+0x524>
 800fae0:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800fae4:	9b05      	ldr	r3, [sp, #20]
 800fae6:	444a      	add	r2, r9
 800fae8:	4641      	mov	r1, r8
 800faea:	f813 0b01 	ldrb.w	r0, [r3], #1
 800faee:	f801 0b01 	strb.w	r0, [r1], #1
 800faf2:	4293      	cmp	r3, r2
 800faf4:	d1f9      	bne.n	800faea <E131Bridge::HandleDmx()+0x3ba>
 800faf6:	9b04      	ldr	r3, [sp, #16]
 800faf8:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fafc:	9908      	ldr	r1, [sp, #32]
 800fafe:	9b05      	ldr	r3, [sp, #20]
 800fb00:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fb04:	f801 0b01 	strb.w	r0, [r1], #1
 800fb08:	4293      	cmp	r3, r2
 800fb0a:	d1f9      	bne.n	800fb00 <E131Bridge::HandleDmx()+0x3d0>
 800fb0c:	e6ef      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fb0e:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800fb12:	f846 3c04 	str.w	r3, [r6, #-4]
 800fb16:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fb1a:	7433      	strb	r3, [r6, #16]
 800fb1c:	f109 0216 	add.w	r2, r9, #22
 800fb20:	4633      	mov	r3, r6
 800fb22:	f106 0010 	add.w	r0, r6, #16
 800fb26:	f852 1b04 	ldr.w	r1, [r2], #4
 800fb2a:	f843 1b04 	str.w	r1, [r3], #4
 800fb2e:	4283      	cmp	r3, r0
 800fb30:	d1f9      	bne.n	800fb26 <E131Bridge::HandleDmx()+0x3f6>
 800fb32:	6863      	ldr	r3, [r4, #4]
 800fb34:	f846 3c08 	str.w	r3, [r6, #-8]
 800fb38:	9b04      	ldr	r3, [sp, #16]
 800fb3a:	2b00      	cmp	r3, #0
 800fb3c:	f000 808a 	beq.w	800fc54 <E131Bridge::HandleDmx()+0x524>
 800fb40:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800fb44:	9b05      	ldr	r3, [sp, #20]
 800fb46:	444a      	add	r2, r9
 800fb48:	4641      	mov	r1, r8
 800fb4a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fb4e:	f801 0b01 	strb.w	r0, [r1], #1
 800fb52:	4293      	cmp	r3, r2
 800fb54:	d1f9      	bne.n	800fb4a <E131Bridge::HandleDmx()+0x41a>
 800fb56:	9b04      	ldr	r3, [sp, #16]
 800fb58:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fb5c:	9908      	ldr	r1, [sp, #32]
 800fb5e:	9b05      	ldr	r3, [sp, #20]
 800fb60:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fb64:	f801 0b01 	strb.w	r0, [r1], #1
 800fb68:	4293      	cmp	r3, r2
 800fb6a:	d1f9      	bne.n	800fb60 <E131Bridge::HandleDmx()+0x430>
 800fb6c:	e6bf      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fb6e:	2300      	movs	r3, #0
 800fb70:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 800fb74:	f894 302b 	ldrb.w	r3, [r4, #43]	@ 0x2b
 800fb78:	2b00      	cmp	r3, #0
 800fb7a:	f47f aed8 	bne.w	800f92e <E131Bridge::HandleDmx()+0x1fe>
 800fb7e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800fb82:	e6e0      	b.n	800f946 <E131Bridge::HandleDmx()+0x216>
 800fb84:	2101      	movs	r1, #1
 800fb86:	463a      	mov	r2, r7
 800fb88:	4620      	mov	r0, r4
 800fb8a:	f7ff fd3d 	bl	800f608 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800fb8e:	e5ef      	b.n	800f770 <E131Bridge::HandleDmx()+0x40>
 800fb90:	9200      	str	r2, [sp, #0]
 800fb92:	4651      	mov	r1, sl
 800fb94:	9a08      	ldr	r2, [sp, #32]
 800fb96:	47b8      	blx	r7
 800fb98:	2301      	movs	r3, #1
 800fb9a:	f886 303a 	strb.w	r3, [r6, #58]	@ 0x3a
 800fb9e:	e6eb      	b.n	800f978 <E131Bridge::HandleDmx()+0x248>
 800fba0:	2f00      	cmp	r7, #0
 800fba2:	f43f ae64 	beq.w	800f86e <E131Bridge::HandleDmx()+0x13e>
 800fba6:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fbaa:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800fbae:	6863      	ldr	r3, [r4, #4]
 800fbb0:	6173      	str	r3, [r6, #20]
 800fbb2:	9b04      	ldr	r3, [sp, #16]
 800fbb4:	f508 7100 	add.w	r1, r8, #512	@ 0x200
 800fbb8:	2b00      	cmp	r3, #0
 800fbba:	d04b      	beq.n	800fc54 <E131Bridge::HandleDmx()+0x524>
 800fbbc:	f10b 027d 	add.w	r2, fp, #125	@ 0x7d
 800fbc0:	9b05      	ldr	r3, [sp, #20]
 800fbc2:	444a      	add	r2, r9
 800fbc4:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fbc8:	f801 0b01 	strb.w	r0, [r1], #1
 800fbcc:	429a      	cmp	r2, r3
 800fbce:	d1f9      	bne.n	800fbc4 <E131Bridge::HandleDmx()+0x494>
 800fbd0:	9b04      	ldr	r3, [sp, #16]
 800fbd2:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fbd6:	9908      	ldr	r1, [sp, #32]
 800fbd8:	9b05      	ldr	r3, [sp, #20]
 800fbda:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fbde:	f801 0b01 	strb.w	r0, [r1], #1
 800fbe2:	429a      	cmp	r2, r3
 800fbe4:	d1f9      	bne.n	800fbda <E131Bridge::HandleDmx()+0x4aa>
 800fbe6:	e682      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fbe8:	2301      	movs	r3, #1
 800fbea:	4639      	mov	r1, r7
 800fbec:	461f      	mov	r7, r3
 800fbee:	e7ca      	b.n	800fb86 <E131Bridge::HandleDmx()+0x456>
 800fbf0:	2f00      	cmp	r7, #0
 800fbf2:	f47f ae7c 	bne.w	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fbf6:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fbfa:	7433      	strb	r3, [r6, #16]
 800fbfc:	6863      	ldr	r3, [r4, #4]
 800fbfe:	f846 3c08 	str.w	r3, [r6, #-8]
 800fc02:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800fc06:	b923      	cbnz	r3, 800fc12 <E131Bridge::HandleDmx()+0x4e2>
 800fc08:	2301      	movs	r3, #1
 800fc0a:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800fc0e:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800fc12:	2301      	movs	r3, #1
 800fc14:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800fc18:	9b04      	ldr	r3, [sp, #16]
 800fc1a:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800fc1e:	b1cb      	cbz	r3, 800fc54 <E131Bridge::HandleDmx()+0x524>
 800fc20:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800fc24:	9b05      	ldr	r3, [sp, #20]
 800fc26:	4448      	add	r0, r9
 800fc28:	4642      	mov	r2, r8
 800fc2a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fc2e:	f802 1b01 	strb.w	r1, [r2], #1
 800fc32:	4283      	cmp	r3, r0
 800fc34:	d1f9      	bne.n	800fc2a <E131Bridge::HandleDmx()+0x4fa>
 800fc36:	9b04      	ldr	r3, [sp, #16]
 800fc38:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fc3c:	f1bc 0f00 	cmp.w	ip, #0
 800fc40:	d04c      	beq.n	800fcdc <E131Bridge::HandleDmx()+0x5ac>
 800fc42:	9a08      	ldr	r2, [sp, #32]
 800fc44:	9b05      	ldr	r3, [sp, #20]
 800fc46:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fc4a:	f802 1b01 	strb.w	r1, [r2], #1
 800fc4e:	4283      	cmp	r3, r0
 800fc50:	d1f9      	bne.n	800fc46 <E131Bridge::HandleDmx()+0x516>
 800fc52:	e64c      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fc54:	9b04      	ldr	r3, [sp, #16]
 800fc56:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fc5a:	e648      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fc5c:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 800fc60:	61b3      	str	r3, [r6, #24]
 800fc62:	f899 306f 	ldrb.w	r3, [r9, #111]	@ 0x6f
 800fc66:	f886 302c 	strb.w	r3, [r6, #44]	@ 0x2c
 800fc6a:	f106 021c 	add.w	r2, r6, #28
 800fc6e:	f109 0316 	add.w	r3, r9, #22
 800fc72:	f109 0026 	add.w	r0, r9, #38	@ 0x26
 800fc76:	f853 1b04 	ldr.w	r1, [r3], #4
 800fc7a:	f842 1b04 	str.w	r1, [r2], #4
 800fc7e:	4298      	cmp	r0, r3
 800fc80:	d1f9      	bne.n	800fc76 <E131Bridge::HandleDmx()+0x546>
 800fc82:	6863      	ldr	r3, [r4, #4]
 800fc84:	6173      	str	r3, [r6, #20]
 800fc86:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
 800fc8a:	b923      	cbnz	r3, 800fc96 <E131Bridge::HandleDmx()+0x566>
 800fc8c:	2301      	movs	r3, #1
 800fc8e:	f884 302a 	strb.w	r3, [r4, #42]	@ 0x2a
 800fc92:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800fc96:	2301      	movs	r3, #1
 800fc98:	f886 3038 	strb.w	r3, [r6, #56]	@ 0x38
 800fc9c:	9b04      	ldr	r3, [sp, #16]
 800fc9e:	f8d6 c030 	ldr.w	ip, [r6, #48]	@ 0x30
 800fca2:	f508 7200 	add.w	r2, r8, #512	@ 0x200
 800fca6:	2b00      	cmp	r3, #0
 800fca8:	d0d4      	beq.n	800fc54 <E131Bridge::HandleDmx()+0x524>
 800fcaa:	f10b 007d 	add.w	r0, fp, #125	@ 0x7d
 800fcae:	9b05      	ldr	r3, [sp, #20]
 800fcb0:	4448      	add	r0, r9
 800fcb2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fcb6:	f802 1b01 	strb.w	r1, [r2], #1
 800fcba:	4283      	cmp	r3, r0
 800fcbc:	d1f9      	bne.n	800fcb2 <E131Bridge::HandleDmx()+0x582>
 800fcbe:	9b04      	ldr	r3, [sp, #16]
 800fcc0:	f8c8 3600 	str.w	r3, [r8, #1536]	@ 0x600
 800fcc4:	f1bc 0f00 	cmp.w	ip, #0
 800fcc8:	d030      	beq.n	800fd2c <E131Bridge::HandleDmx()+0x5fc>
 800fcca:	9a08      	ldr	r2, [sp, #32]
 800fccc:	9b05      	ldr	r3, [sp, #20]
 800fcce:	f813 1b01 	ldrb.w	r1, [r3], #1
 800fcd2:	f802 1b01 	strb.w	r1, [r2], #1
 800fcd6:	4283      	cmp	r3, r0
 800fcd8:	d1f9      	bne.n	800fcce <E131Bridge::HandleDmx()+0x59e>
 800fcda:	e608      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fcdc:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800fce0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800fce4:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800fce8:	428a      	cmp	r2, r1
 800fcea:	bf38      	it	cc
 800fcec:	460a      	movcc	r2, r1
 800fcee:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800fcf2:	9a03      	ldr	r2, [sp, #12]
 800fcf4:	429a      	cmp	r2, r3
 800fcf6:	d1f3      	bne.n	800fce0 <E131Bridge::HandleDmx()+0x5b0>
 800fcf8:	e5f9      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fcfa:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800fcfe:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800fd02:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800fd06:	428a      	cmp	r2, r1
 800fd08:	bf38      	it	cc
 800fd0a:	460a      	movcc	r2, r1
 800fd0c:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800fd10:	9a03      	ldr	r2, [sp, #12]
 800fd12:	4293      	cmp	r3, r2
 800fd14:	d1f3      	bne.n	800fcfe <E131Bridge::HandleDmx()+0x5ce>
 800fd16:	e5ea      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fd18:	69b2      	ldr	r2, [r6, #24]
 800fd1a:	f856 1c04 	ldr.w	r1, [r6, #-4]
 800fd1e:	3a00      	subs	r2, #0
 800fd20:	bf18      	it	ne
 800fd22:	2201      	movne	r2, #1
 800fd24:	3900      	subs	r1, #0
 800fd26:	bf18      	it	ne
 800fd28:	2101      	movne	r1, #1
 800fd2a:	e5f9      	b.n	800f920 <E131Bridge::HandleDmx()+0x1f0>
 800fd2c:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800fd30:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800fd34:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800fd38:	428a      	cmp	r2, r1
 800fd3a:	bf38      	it	cc
 800fd3c:	460a      	movcc	r2, r1
 800fd3e:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800fd42:	9a03      	ldr	r2, [sp, #12]
 800fd44:	4293      	cmp	r3, r2
 800fd46:	d1f3      	bne.n	800fd30 <E131Bridge::HandleDmx()+0x600>
 800fd48:	e5d1      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fd4a:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800fd4e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800fd52:	f893 1200 	ldrb.w	r1, [r3, #512]	@ 0x200
 800fd56:	428a      	cmp	r2, r1
 800fd58:	bf38      	it	cc
 800fd5a:	460a      	movcc	r2, r1
 800fd5c:	f883 2400 	strb.w	r2, [r3, #1024]	@ 0x400
 800fd60:	9a03      	ldr	r2, [sp, #12]
 800fd62:	4293      	cmp	r3, r2
 800fd64:	d1f3      	bne.n	800fd4e <E131Bridge::HandleDmx()+0x61e>
 800fd66:	e5c2      	b.n	800f8ee <E131Bridge::HandleDmx()+0x1be>
 800fd68:	2000008c 	andcs	r0, r0, ip, lsl #1

0800fd6c <E131Bridge::IsValidRoot()>:
 800fd6c:	b410      	push	{r4}
 800fd6e:	f8d0 40ec 	ldr.w	r4, [r0, #236]	@ 0xec
 800fd72:	4a11      	ldr	r2, [pc, #68]	@ (800fdb8 <E131Bridge::IsValidRoot()+0x4c>)
 800fd74:	1ce3      	adds	r3, r4, #3
 800fd76:	f104 0c0f 	add.w	ip, r4, #15
 800fd7a:	e001      	b.n	800fd80 <E131Bridge::IsValidRoot()+0x14>
 800fd7c:	4563      	cmp	r3, ip
 800fd7e:	d009      	beq.n	800fd94 <E131Bridge::IsValidRoot()+0x28>
 800fd80:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800fd84:	f812 1b01 	ldrb.w	r1, [r2], #1
 800fd88:	4288      	cmp	r0, r1
 800fd8a:	d0f7      	beq.n	800fd7c <E131Bridge::IsValidRoot()+0x10>
 800fd8c:	2000      	movs	r0, #0
 800fd8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fd92:	4770      	bx	lr
 800fd94:	f8d4 0012 	ldr.w	r0, [r4, #18]
 800fd98:	f1b0 6f80 	cmp.w	r0, #67108864	@ 0x4000000
 800fd9c:	d007      	beq.n	800fdae <E131Bridge::IsValidRoot()+0x42>
 800fd9e:	f1a0 6000 	sub.w	r0, r0, #134217728	@ 0x8000000
 800fda2:	fab0 f080 	clz	r0, r0
 800fda6:	0940      	lsrs	r0, r0, #5
 800fda8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fdac:	4770      	bx	lr
 800fdae:	2001      	movs	r0, #1
 800fdb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fdb4:	4770      	bx	lr
 800fdb6:	bf00      	nop
 800fdb8:	0801e7e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}

0800fdbc <E131Bridge::Process()>:
 800fdbc:	f890 202b 	ldrb.w	r2, [r0, #43]	@ 0x2b
 800fdc0:	6843      	ldr	r3, [r0, #4]
 800fdc2:	2100      	movs	r1, #0
 800fdc4:	b510      	push	{r4, lr}
 800fdc6:	4604      	mov	r4, r0
 800fdc8:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800fdcc:	6083      	str	r3, [r0, #8]
 800fdce:	b112      	cbz	r2, 800fdd6 <E131Bridge::Process()+0x1a>
 800fdd0:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
 800fdd4:	b31a      	cbz	r2, 800fe1e <E131Bridge::Process()+0x62>
 800fdd6:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 800fdda:	b14b      	cbz	r3, 800fdf0 <E131Bridge::Process()+0x34>
 800fddc:	f8d4 30ec 	ldr.w	r3, [r4, #236]	@ 0xec
 800fde0:	f8d3 2012 	ldr.w	r2, [r3, #18]
 800fde4:	f1b2 6f80 	cmp.w	r2, #67108864	@ 0x4000000
 800fde8:	d022      	beq.n	800fe30 <E131Bridge::Process()+0x74>
 800fdea:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 800fdee:	d039      	beq.n	800fe64 <E131Bridge::Process()+0xa8>
 800fdf0:	4620      	mov	r0, r4
 800fdf2:	f000 f9d3 	bl	801019c <E131Bridge::HandleDmxIn()>
 800fdf6:	4620      	mov	r0, r4
 800fdf8:	f000 f958 	bl	80100ac <E131Bridge::SendDiscoveryPacket()>
 800fdfc:	f894 30e8 	ldrb.w	r3, [r4, #232]	@ 0xe8
 800fe00:	b163      	cbz	r3, 800fe1c <E131Bridge::Process()+0x60>
 800fe02:	4b1c      	ldr	r3, [pc, #112]	@ (800fe74 <E131Bridge::Process()+0xb8>)
 800fe04:	6818      	ldr	r0, [r3, #0]
 800fe06:	6943      	ldr	r3, [r0, #20]
 800fe08:	2b04      	cmp	r3, #4
 800fe0a:	d007      	beq.n	800fe1c <E131Bridge::Process()+0x60>
 800fe0c:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 800fe10:	bb1b      	cbnz	r3, 800fe5a <E131Bridge::Process()+0x9e>
 800fe12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe16:	2102      	movs	r1, #2
 800fe18:	f007 bc6c 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800fe1c:	bd10      	pop	{r4, pc}
 800fe1e:	6900      	ldr	r0, [r0, #16]
 800fe20:	f640 11c3 	movw	r1, #2499	@ 0x9c3
 800fe24:	1a1b      	subs	r3, r3, r0
 800fe26:	428b      	cmp	r3, r1
 800fe28:	bf88      	it	hi
 800fe2a:	f884 202b 	strbhi.w	r2, [r4, #43]	@ 0x2b
 800fe2e:	e7d2      	b.n	800fdd6 <E131Bridge::Process()+0x1a>
 800fe30:	f893 2075 	ldrb.w	r2, [r3, #117]	@ 0x75
 800fe34:	2a02      	cmp	r2, #2
 800fe36:	d1db      	bne.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe38:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
 800fe3c:	2aa1      	cmp	r2, #161	@ 0xa1
 800fe3e:	d1d7      	bne.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe40:	f8b3 2077 	ldrh.w	r2, [r3, #119]	@ 0x77
 800fe44:	2a00      	cmp	r2, #0
 800fe46:	d1d3      	bne.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe48:	f8b3 3079 	ldrh.w	r3, [r3, #121]	@ 0x79
 800fe4c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800fe50:	d1ce      	bne.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe52:	4620      	mov	r0, r4
 800fe54:	f7ff fc6c 	bl	800f730 <E131Bridge::HandleDmx()>
 800fe58:	e7ca      	b.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe5e:	2103      	movs	r1, #3
 800fe60:	f007 bc48 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800fe64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fe66:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800fe6a:	d1c1      	bne.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe6c:	4620      	mov	r0, r4
 800fe6e:	f000 f803 	bl	800fe78 <E131Bridge::HandleSynchronization()>
 800fe72:	e7bd      	b.n	800fdf0 <E131Bridge::Process()+0x34>
 800fe74:	20002b04 	andcs	r2, r0, r4, lsl #22

0800fe78 <E131Bridge::HandleSynchronization()>:
 800fe78:	b510      	push	{r4, lr}
 800fe7a:	f8d0 30ec 	ldr.w	r3, [r0, #236]	@ 0xec
 800fe7e:	8b42      	ldrh	r2, [r0, #26]
 800fe80:	f8b3 302d 	ldrh.w	r3, [r3, #45]	@ 0x2d
 800fe84:	ba5b      	rev16	r3, r3
 800fe86:	b29b      	uxth	r3, r3
 800fe88:	429a      	cmp	r2, r3
 800fe8a:	4604      	mov	r4, r0
 800fe8c:	d009      	beq.n	800fea2 <E131Bridge::HandleSynchronization()+0x2a>
 800fe8e:	8b82      	ldrh	r2, [r0, #28]
 800fe90:	429a      	cmp	r2, r3
 800fe92:	d006      	beq.n	800fea2 <E131Bridge::HandleSynchronization()+0x2a>
 800fe94:	4b22      	ldr	r3, [pc, #136]	@ (800ff20 <E131Bridge::HandleSynchronization()+0xa8>)
 800fe96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe9a:	6818      	ldr	r0, [r3, #0]
 800fe9c:	2102      	movs	r1, #2
 800fe9e:	f007 bc29 	b.w	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 800fea2:	6863      	ldr	r3, [r4, #4]
 800fea4:	6123      	str	r3, [r4, #16]
 800fea6:	f894 308a 	ldrb.w	r3, [r4, #138]	@ 0x8a
 800feaa:	b12b      	cbz	r3, 800feb8 <E131Bridge::HandleSynchronization()+0x40>
 800feac:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800feb0:	6803      	ldr	r3, [r0, #0]
 800feb2:	2100      	movs	r1, #0
 800feb4:	695b      	ldr	r3, [r3, #20]
 800feb6:	4798      	blx	r3
 800feb8:	f894 30ce 	ldrb.w	r3, [r4, #206]	@ 0xce
 800febc:	b12b      	cbz	r3, 800feca <E131Bridge::HandleSynchronization()+0x52>
 800febe:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800fec2:	6803      	ldr	r3, [r0, #0]
 800fec4:	2101      	movs	r1, #1
 800fec6:	695b      	ldr	r3, [r3, #20]
 800fec8:	4798      	blx	r3
 800feca:	f8d4 00f4 	ldr.w	r0, [r4, #244]	@ 0xf4
 800fece:	6803      	ldr	r3, [r0, #0]
 800fed0:	699b      	ldr	r3, [r3, #24]
 800fed2:	4798      	blx	r3
 800fed4:	f894 308a 	ldrb.w	r3, [r4, #138]	@ 0x8a
 800fed8:	b153      	cbz	r3, 800fef0 <E131Bridge::HandleSynchronization()+0x78>
 800feda:	2300      	movs	r3, #0
 800fedc:	f884 308a 	strb.w	r3, [r4, #138]	@ 0x8a
 800fee0:	f894 3089 	ldrb.w	r3, [r4, #137]	@ 0x89
 800fee4:	b923      	cbnz	r3, 800fef0 <E131Bridge::HandleSynchronization()+0x78>
 800fee6:	2301      	movs	r3, #1
 800fee8:	f884 3089 	strb.w	r3, [r4, #137]	@ 0x89
 800feec:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800fef0:	f894 30ce 	ldrb.w	r3, [r4, #206]	@ 0xce
 800fef4:	b153      	cbz	r3, 800ff0c <E131Bridge::HandleSynchronization()+0x94>
 800fef6:	2300      	movs	r3, #0
 800fef8:	f884 30ce 	strb.w	r3, [r4, #206]	@ 0xce
 800fefc:	f894 30cd 	ldrb.w	r3, [r4, #205]	@ 0xcd
 800ff00:	b923      	cbnz	r3, 800ff0c <E131Bridge::HandleSynchronization()+0x94>
 800ff02:	2301      	movs	r3, #1
 800ff04:	f884 30cd 	strb.w	r3, [r4, #205]	@ 0xcd
 800ff08:	f884 302d 	strb.w	r3, [r4, #45]	@ 0x2d
 800ff0c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	@ 0xf8
 800ff10:	b120      	cbz	r0, 800ff1c <E131Bridge::HandleSynchronization()+0xa4>
 800ff12:	6803      	ldr	r3, [r0, #0]
 800ff14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff18:	689b      	ldr	r3, [r3, #8]
 800ff1a:	4718      	bx	r3
 800ff1c:	bd10      	pop	{r4, pc}
 800ff1e:	bf00      	nop
 800ff20:	20002b04 	andcs	r2, r0, r4, lsl #22

0800ff24 <E131Bridge::Print()>:
 800ff24:	b530      	push	{r4, r5, lr}
 800ff26:	b08b      	sub	sp, #44	@ 0x2c
 800ff28:	4604      	mov	r4, r0
 800ff2a:	4669      	mov	r1, sp
 800ff2c:	f500 709e 	add.w	r0, r0, #316	@ 0x13c
 800ff30:	2500      	movs	r5, #0
 800ff32:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800ff36:	f00a f9a9 	bl	801a28c <uuid_unparse>
 800ff3a:	4b25      	ldr	r3, [pc, #148]	@ (800ffd0 <E131Bridge::Print()+0xac>)
 800ff3c:	4825      	ldr	r0, [pc, #148]	@ (800ffd4 <E131Bridge::Print()+0xb0>)
 800ff3e:	7819      	ldrb	r1, [r3, #0]
 800ff40:	785a      	ldrb	r2, [r3, #1]
 800ff42:	f00a f8c9 	bl	801a0d8 <printf>
 800ff46:	4824      	ldr	r0, [pc, #144]	@ (800ffd8 <E131Bridge::Print()+0xb4>)
 800ff48:	4669      	mov	r1, sp
 800ff4a:	f00a f8c5 	bl	801a0d8 <printf>
 800ff4e:	7fe3      	ldrb	r3, [r4, #31]
 800ff50:	b1fb      	cbz	r3, 800ff92 <E131Bridge::Print()+0x6e>
 800ff52:	4822      	ldr	r0, [pc, #136]	@ (800ffdc <E131Bridge::Print()+0xb8>)
 800ff54:	f00a f8c0 	bl	801a0d8 <printf>
 800ff58:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800ff5a:	2b01      	cmp	r3, #1
 800ff5c:	d10b      	bne.n	800ff76 <E131Bridge::Print()+0x52>
 800ff5e:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 800ff62:	4a1f      	ldr	r2, [pc, #124]	@ (800ffe0 <E131Bridge::Print()+0xbc>)
 800ff64:	4b1f      	ldr	r3, [pc, #124]	@ (800ffe4 <E131Bridge::Print()+0xc0>)
 800ff66:	4820      	ldr	r0, [pc, #128]	@ (800ffe8 <E131Bridge::Print()+0xc4>)
 800ff68:	42a9      	cmp	r1, r5
 800ff6a:	bf08      	it	eq
 800ff6c:	4613      	moveq	r3, r2
 800ff6e:	8e22      	ldrh	r2, [r4, #48]	@ 0x30
 800ff70:	4629      	mov	r1, r5
 800ff72:	f00a f8b1 	bl	801a0d8 <printf>
 800ff76:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800ff78:	2901      	cmp	r1, #1
 800ff7a:	d10a      	bne.n	800ff92 <E131Bridge::Print()+0x6e>
 800ff7c:	f8d4 00c4 	ldr.w	r0, [r4, #196]	@ 0xc4
 800ff80:	4a17      	ldr	r2, [pc, #92]	@ (800ffe0 <E131Bridge::Print()+0xbc>)
 800ff82:	4b18      	ldr	r3, [pc, #96]	@ (800ffe4 <E131Bridge::Print()+0xc0>)
 800ff84:	2800      	cmp	r0, #0
 800ff86:	bf08      	it	eq
 800ff88:	4613      	moveq	r3, r2
 800ff8a:	8fa2      	ldrh	r2, [r4, #60]	@ 0x3c
 800ff8c:	4816      	ldr	r0, [pc, #88]	@ (800ffe8 <E131Bridge::Print()+0xc4>)
 800ff8e:	f00a f8a3 	bl	801a0d8 <printf>
 800ff92:	7fa3      	ldrb	r3, [r4, #30]
 800ff94:	b19b      	cbz	r3, 800ffbe <E131Bridge::Print()+0x9a>
 800ff96:	4815      	ldr	r0, [pc, #84]	@ (800ffec <E131Bridge::Print()+0xc8>)
 800ff98:	f00a f89e 	bl	801a0d8 <printf>
 800ff9c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800ff9e:	b929      	cbnz	r1, 800ffac <E131Bridge::Print()+0x88>
 800ffa0:	f894 30d9 	ldrb.w	r3, [r4, #217]	@ 0xd9
 800ffa4:	8e22      	ldrh	r2, [r4, #48]	@ 0x30
 800ffa6:	4812      	ldr	r0, [pc, #72]	@ (800fff0 <E131Bridge::Print()+0xcc>)
 800ffa8:	f00a f896 	bl	801a0d8 <printf>
 800ffac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ffae:	8fa2      	ldrh	r2, [r4, #60]	@ 0x3c
 800ffb0:	b92b      	cbnz	r3, 800ffbe <E131Bridge::Print()+0x9a>
 800ffb2:	f894 30e5 	ldrb.w	r3, [r4, #229]	@ 0xe5
 800ffb6:	480e      	ldr	r0, [pc, #56]	@ (800fff0 <E131Bridge::Print()+0xcc>)
 800ffb8:	2101      	movs	r1, #1
 800ffba:	f00a f88d 	bl	801a0d8 <printf>
 800ffbe:	f894 302f 	ldrb.w	r3, [r4, #47]	@ 0x2f
 800ffc2:	b113      	cbz	r3, 800ffca <E131Bridge::Print()+0xa6>
 800ffc4:	480b      	ldr	r0, [pc, #44]	@ (800fff4 <E131Bridge::Print()+0xd0>)
 800ffc6:	f00a f887 	bl	801a0d8 <printf>
 800ffca:	b00b      	add	sp, #44	@ 0x2c
 800ffcc:	bd30      	pop	{r4, r5, pc}
 800ffce:	bf00      	nop
 800ffd0:	0801e7f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 800ffd4:	0801b1a2 	stmdaeq	r1, {r1, r5, r7, r8, ip, sp, pc}
 800ffd8:	0801b1b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, ip, sp, pc}
 800ffdc:	0801b04d 	stmdaeq	r1, {r0, r2, r3, r6, ip, sp, pc}
 800ffe0:	0801afff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 800ffe4:	0801b003 	stmdaeq	r1, {r0, r1, ip, sp, pc}
 800ffe8:	0801b1c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, ip, sp, pc}
 800ffec:	0801b06a 	stmdaeq	r1, {r1, r3, r5, r6, ip, sp, pc}
 800fff0:	0801b1da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, ip, sp, pc}
 800fff4:	0801b1f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, sp, pc}

0800fff8 <E131Bridge::FillDiscoveryPacket()>:
 800fff8:	7f83      	ldrb	r3, [r0, #30]
 800fffa:	b510      	push	{r4, lr}
 800fffc:	333c      	adds	r3, #60	@ 0x3c
 800fffe:	005b      	lsls	r3, r3, #1
 8010000:	8303      	strh	r3, [r0, #24]
 8010002:	f600 0242 	addw	r2, r0, #2114	@ 0x842
 8010006:	f200 33ca 	addw	r3, r0, #970	@ 0x3ca
 801000a:	2100      	movs	r1, #0
 801000c:	f803 1b01 	strb.w	r1, [r3], #1
 8010010:	4293      	cmp	r3, r2
 8010012:	d1fb      	bne.n	801000c <E131Bridge::FillDiscoveryPacket()+0x14>
 8010014:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8010018:	4a23      	ldr	r2, [pc, #140]	@ (80100a8 <E131Bridge::FillDiscoveryPacket()+0xb0>)
 801001a:	f8a0 33ca 	strh.w	r3, [r0, #970]	@ 0x3ca
 801001e:	f200 31da 	addw	r1, r0, #986	@ 0x3da
 8010022:	f200 33ce 	addw	r3, r0, #974	@ 0x3ce
 8010026:	f812 4b01 	ldrb.w	r4, [r2], #1
 801002a:	f803 4b01 	strb.w	r4, [r3], #1
 801002e:	4299      	cmp	r1, r3
 8010030:	d1f9      	bne.n	8010026 <E131Bridge::FillDiscoveryPacket()+0x2e>
 8010032:	7f83      	ldrb	r3, [r0, #30]
 8010034:	3334      	adds	r3, #52	@ 0x34
 8010036:	005b      	lsls	r3, r3, #1
 8010038:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 801003c:	ba5b      	rev16	r3, r3
 801003e:	f8a0 33da 	strh.w	r3, [r0, #986]	@ 0x3da
 8010042:	f500 729e 	add.w	r2, r0, #316	@ 0x13c
 8010046:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 801004a:	f8c0 33dc 	str.w	r3, [r0, #988]	@ 0x3dc
 801004e:	f500 71a6 	add.w	r1, r0, #332	@ 0x14c
 8010052:	4613      	mov	r3, r2
 8010054:	f813 4b01 	ldrb.w	r4, [r3], #1
 8010058:	f883 42a3 	strb.w	r4, [r3, #675]	@ 0x2a3
 801005c:	428b      	cmp	r3, r1
 801005e:	d1f9      	bne.n	8010054 <E131Bridge::FillDiscoveryPacket()+0x5c>
 8010060:	7f83      	ldrb	r3, [r0, #30]
 8010062:	3329      	adds	r3, #41	@ 0x29
 8010064:	005b      	lsls	r3, r3, #1
 8010066:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 801006a:	ba5b      	rev16	r3, r3
 801006c:	f8a0 33f0 	strh.w	r3, [r0, #1008]	@ 0x3f0
 8010070:	2300      	movs	r3, #0
 8010072:	f8a0 33f2 	strh.w	r3, [r0, #1010]	@ 0x3f2
 8010076:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801007a:	f8a0 33f4 	strh.w	r3, [r0, #1012]	@ 0x3f4
 801007e:	f100 03fc 	add.w	r3, r0, #252	@ 0xfc
 8010082:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010086:	f883 12f9 	strb.w	r1, [r3, #761]	@ 0x2f9
 801008a:	429a      	cmp	r2, r3
 801008c:	d1f9      	bne.n	8010082 <E131Bridge::FillDiscoveryPacket()+0x8a>
 801008e:	7f83      	ldrb	r3, [r0, #30]
 8010090:	3304      	adds	r3, #4
 8010092:	005b      	lsls	r3, r3, #1
 8010094:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 8010098:	ba5b      	rev16	r3, r3
 801009a:	f8a0 343a 	strh.w	r3, [r0, #1082]	@ 0x43a
 801009e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80100a2:	f8c0 343c 	str.w	r3, [r0, #1084]	@ 0x43c
 80100a6:	bd10      	pop	{r4, pc}
 80100a8:	0801e7e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}

080100ac <E131Bridge::SendDiscoveryPacket()>:
 80100ac:	b513      	push	{r0, r1, r4, lr}
 80100ae:	6942      	ldr	r2, [r0, #20]
 80100b0:	6841      	ldr	r1, [r0, #4]
 80100b2:	4603      	mov	r3, r0
 80100b4:	1a8a      	subs	r2, r1, r2
 80100b6:	f242 700f 	movw	r0, #9999	@ 0x270f
 80100ba:	4282      	cmp	r2, r0
 80100bc:	d91f      	bls.n	80100fe <E131Bridge::SendDiscoveryPacket()+0x52>
 80100be:	7f9a      	ldrb	r2, [r3, #30]
 80100c0:	6159      	str	r1, [r3, #20]
 80100c2:	b1e2      	cbz	r2, 80100fe <E131Bridge::SendDiscoveryPacket()+0x52>
 80100c4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80100c6:	b9e2      	cbnz	r2, 8010102 <E131Bridge::SendDiscoveryPacket()+0x56>
 80100c8:	8e1a      	ldrh	r2, [r3, #48]	@ 0x30
 80100ca:	ba52      	rev16	r2, r2
 80100cc:	f8a3 2442 	strh.w	r2, [r3, #1090]	@ 0x442
 80100d0:	2201      	movs	r2, #1
 80100d2:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80100d4:	b929      	cbnz	r1, 80100e2 <E131Bridge::SendDiscoveryPacket()+0x36>
 80100d6:	8f99      	ldrh	r1, [r3, #60]	@ 0x3c
 80100d8:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 80100dc:	ba49      	rev16	r1, r1
 80100de:	f8a2 1442 	strh.w	r1, [r2, #1090]	@ 0x442
 80100e2:	4c09      	ldr	r4, [pc, #36]	@ (8010108 <E131Bridge::SendDiscoveryPacket()+0x5c>)
 80100e4:	6818      	ldr	r0, [r3, #0]
 80100e6:	6824      	ldr	r4, [r4, #0]
 80100e8:	8b1a      	ldrh	r2, [r3, #24]
 80100ea:	f203 31ca 	addw	r1, r3, #970	@ 0x3ca
 80100ee:	f8d3 3844 	ldr.w	r3, [r3, #2116]	@ 0x844
 80100f2:	b124      	cbz	r4, 80100fe <E131Bridge::SendDiscoveryPacket()+0x52>
 80100f4:	f44f 54ae 	mov.w	r4, #5568	@ 0x15c0
 80100f8:	9400      	str	r4, [sp, #0]
 80100fa:	f004 fc83 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 80100fe:	b002      	add	sp, #8
 8010100:	bd10      	pop	{r4, pc}
 8010102:	2200      	movs	r2, #0
 8010104:	e7e5      	b.n	80100d2 <E131Bridge::SendDiscoveryPacket()+0x26>
 8010106:	bf00      	nop
 8010108:	20002954 	andcs	r2, r0, r4, asr r9

0801010c <memcpy.isra.0>:
 801010c:	440a      	add	r2, r1
 801010e:	4291      	cmp	r1, r2
 8010110:	d100      	bne.n	8010114 <memcpy.isra.0+0x8>
 8010112:	4770      	bx	lr
 8010114:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010118:	f800 3b01 	strb.w	r3, [r0], #1
 801011c:	e7f7      	b.n	801010e <memcpy.isra.0+0x2>
	...

08010120 <E131Bridge::FillDataPacket()>:
 8010120:	b538      	push	{r3, r4, r5, lr}
 8010122:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8010126:	4604      	mov	r4, r0
 8010128:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 801012c:	491a      	ldr	r1, [pc, #104]	@ (8010198 <E131Bridge::FillDataPacket()+0x78>)
 801012e:	220c      	movs	r2, #12
 8010130:	f500 70a8 	add.w	r0, r0, #336	@ 0x150
 8010134:	f7ff ffea 	bl	801010c <memcpy.isra.0>
 8010138:	2500      	movs	r5, #0
 801013a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801013e:	f8a4 3160 	strh.w	r3, [r4, #352]	@ 0x160
 8010142:	2210      	movs	r2, #16
 8010144:	f504 719e 	add.w	r1, r4, #316	@ 0x13c
 8010148:	f504 70b1 	add.w	r0, r4, #354	@ 0x162
 801014c:	f8a4 515e 	strh.w	r5, [r4, #350]	@ 0x15e
 8010150:	f7ff ffdc 	bl	801010c <memcpy.isra.0>
 8010154:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8010158:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
 801015c:	2240      	movs	r2, #64	@ 0x40
 801015e:	f104 01fc 	add.w	r1, r4, #252	@ 0xfc
 8010162:	f504 70bc 	add.w	r0, r4, #376	@ 0x178
 8010166:	f7ff ffd1 	bl	801010c <memcpy.isra.0>
 801016a:	2302      	movs	r3, #2
 801016c:	f884 31c1 	strb.w	r3, [r4, #449]	@ 0x1c1
 8010170:	23a1      	movs	r3, #161	@ 0xa1
 8010172:	f884 31c2 	strb.w	r3, [r4, #450]	@ 0x1c2
 8010176:	f884 51bc 	strb.w	r5, [r4, #444]	@ 0x1bc
 801017a:	2301      	movs	r3, #1
 801017c:	f884 51b9 	strb.w	r5, [r4, #441]	@ 0x1b9
 8010180:	f884 51ba 	strb.w	r5, [r4, #442]	@ 0x1ba
 8010184:	f884 51c3 	strb.w	r5, [r4, #451]	@ 0x1c3
 8010188:	f884 51c4 	strb.w	r5, [r4, #452]	@ 0x1c4
 801018c:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8010190:	f884 31c6 	strb.w	r3, [r4, #454]	@ 0x1c6
 8010194:	bd38      	pop	{r3, r4, r5, pc}
 8010196:	bf00      	nop
 8010198:	0801e7e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}

0801019c <E131Bridge::HandleDmxIn()>:
 801019c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80101a0:	4604      	mov	r4, r0
 80101a2:	4605      	mov	r5, r0
 80101a4:	2600      	movs	r6, #0
 80101a6:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80101a8:	2b00      	cmp	r3, #0
 80101aa:	d165      	bne.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 80101ac:	f895 30da 	ldrb.w	r3, [r5, #218]	@ 0xda
 80101b0:	2b00      	cmp	r3, #0
 80101b2:	d161      	bne.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 80101b4:	4f6f      	ldr	r7, [pc, #444]	@ (8010374 <E131Bridge::HandleDmxIn()+0x1d8>)
 80101b6:	4631      	mov	r1, r6
 80101b8:	6838      	ldr	r0, [r7, #0]
 80101ba:	f002 f9e9 	bl	8012590 <Dmx::GetDmxChanged(unsigned long)>
 80101be:	4601      	mov	r1, r0
 80101c0:	2800      	cmp	r0, #0
 80101c2:	d060      	beq.n	8010286 <E131Bridge::HandleDmxIn()+0xea>
 80101c4:	f8d0 8204 	ldr.w	r8, [r0, #516]	@ 0x204
 80101c8:	f108 0201 	add.w	r2, r8, #1
 80101cc:	b297      	uxth	r7, r2
 80101ce:	f107 036d 	add.w	r3, r7, #109	@ 0x6d
 80101d2:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 80101d6:	ba5b      	rev16	r3, r3
 80101d8:	f8a4 315c 	strh.w	r3, [r4, #348]	@ 0x15c
 80101dc:	f107 0357 	add.w	r3, r7, #87	@ 0x57
 80101e0:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 80101e4:	ba5b      	rev16	r3, r3
 80101e6:	f8a4 3172 	strh.w	r3, [r4, #370]	@ 0x172
 80101ea:	f895 30d9 	ldrb.w	r3, [r5, #217]	@ 0xd9
 80101ee:	f884 31b8 	strb.w	r3, [r4, #440]	@ 0x1b8
 80101f2:	f895 30d8 	ldrb.w	r3, [r5, #216]	@ 0xd8
 80101f6:	1c58      	adds	r0, r3, #1
 80101f8:	f885 00d8 	strb.w	r0, [r5, #216]	@ 0xd8
 80101fc:	f884 31bb 	strb.w	r3, [r4, #443]	@ 0x1bb
 8010200:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 8010202:	ba5b      	rev16	r3, r3
 8010204:	f8a4 31bd 	strh.w	r3, [r4, #445]	@ 0x1bd
 8010208:	f107 030a 	add.w	r3, r7, #10
 801020c:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 8010210:	ba5b      	rev16	r3, r3
 8010212:	f8a4 31bf 	strh.w	r3, [r4, #447]	@ 0x1bf
 8010216:	f204 10c9 	addw	r0, r4, #457	@ 0x1c9
 801021a:	ba7f      	rev16	r7, r7
 801021c:	f7ff ff76 	bl	801010c <memcpy.isra.0>
 8010220:	f8a4 71c7 	strh.w	r7, [r4, #455]	@ 0x1c7
 8010224:	4f54      	ldr	r7, [pc, #336]	@ (8010378 <E131Bridge::HandleDmxIn()+0x1dc>)
 8010226:	6820      	ldr	r0, [r4, #0]
 8010228:	6839      	ldr	r1, [r7, #0]
 801022a:	f8d5 30d0 	ldr.w	r3, [r5, #208]	@ 0xd0
 801022e:	f504 79a6 	add.w	r9, r4, #332	@ 0x14c
 8010232:	f108 027e 	add.w	r2, r8, #126	@ 0x7e
 8010236:	b129      	cbz	r1, 8010244 <E131Bridge::HandleDmxIn()+0xa8>
 8010238:	f44f 51ae 	mov.w	r1, #5568	@ 0x15c0
 801023c:	9100      	str	r1, [sp, #0]
 801023e:	4649      	mov	r1, r9
 8010240:	f004 fbe0 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8010244:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
 8010248:	b13b      	cbz	r3, 801025a <E131Bridge::HandleDmxIn()+0xbe>
 801024a:	683b      	ldr	r3, [r7, #0]
 801024c:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
 8010250:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 8010254:	4620      	mov	r0, r4
 8010256:	f7ff fa6b 	bl	800f730 <E131Bridge::HandleDmx()>
 801025a:	4a48      	ldr	r2, [pc, #288]	@ (801037c <E131Bridge::HandleDmxIn()+0x1e0>)
 801025c:	2301      	movs	r3, #1
 801025e:	6811      	ldr	r1, [r2, #0]
 8010260:	40b3      	lsls	r3, r6
 8010262:	ea33 0001 	bics.w	r0, r3, r1
 8010266:	d007      	beq.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 8010268:	430b      	orrs	r3, r1
 801026a:	6013      	str	r3, [r2, #0]
 801026c:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 8010270:	f043 0301 	orr.w	r3, r3, #1
 8010274:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8010278:	350c      	adds	r5, #12
 801027a:	b116      	cbz	r6, 8010282 <E131Bridge::HandleDmxIn()+0xe6>
 801027c:	b003      	add	sp, #12
 801027e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010282:	2601      	movs	r6, #1
 8010284:	e78f      	b.n	80101a6 <E131Bridge::HandleDmxIn()+0xa>
 8010286:	6838      	ldr	r0, [r7, #0]
 8010288:	4631      	mov	r1, r6
 801028a:	f002 f9f1 	bl	8012670 <Dmx::GetDmxUpdatesPerSecond(unsigned long)>
 801028e:	2800      	cmp	r0, #0
 8010290:	d1f2      	bne.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 8010292:	493a      	ldr	r1, [pc, #232]	@ (801037c <E131Bridge::HandleDmxIn()+0x1e0>)
 8010294:	2201      	movs	r2, #1
 8010296:	680b      	ldr	r3, [r1, #0]
 8010298:	40b2      	lsls	r2, r6
 801029a:	ea32 0003 	bics.w	r0, r2, r3
 801029e:	d15b      	bne.n	8010358 <E131Bridge::HandleDmxIn()+0x1bc>
 80102a0:	ea23 0302 	bic.w	r3, r3, r2
 80102a4:	600b      	str	r3, [r1, #0]
 80102a6:	b92b      	cbnz	r3, 80102b4 <E131Bridge::HandleDmxIn()+0x118>
 80102a8:	f894 3021 	ldrb.w	r3, [r4, #33]	@ 0x21
 80102ac:	f023 0301 	bic.w	r3, r3, #1
 80102b0:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 80102b4:	6838      	ldr	r0, [r7, #0]
 80102b6:	4631      	mov	r1, r6
 80102b8:	f002 f9d2 	bl	8012660 <Dmx::GetDmxCurrentData(unsigned long)>
 80102bc:	f8d0 8204 	ldr.w	r8, [r0, #516]	@ 0x204
 80102c0:	f108 0201 	add.w	r2, r8, #1
 80102c4:	b297      	uxth	r7, r2
 80102c6:	f107 036d 	add.w	r3, r7, #109	@ 0x6d
 80102ca:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 80102ce:	ba5b      	rev16	r3, r3
 80102d0:	f8a4 315c 	strh.w	r3, [r4, #348]	@ 0x15c
 80102d4:	f107 0357 	add.w	r3, r7, #87	@ 0x57
 80102d8:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 80102dc:	ba5b      	rev16	r3, r3
 80102de:	f8a4 3172 	strh.w	r3, [r4, #370]	@ 0x172
 80102e2:	f895 30d9 	ldrb.w	r3, [r5, #217]	@ 0xd9
 80102e6:	f884 31b8 	strb.w	r3, [r4, #440]	@ 0x1b8
 80102ea:	f895 30d8 	ldrb.w	r3, [r5, #216]	@ 0xd8
 80102ee:	4601      	mov	r1, r0
 80102f0:	1c58      	adds	r0, r3, #1
 80102f2:	f885 00d8 	strb.w	r0, [r5, #216]	@ 0xd8
 80102f6:	f884 31bb 	strb.w	r3, [r4, #443]	@ 0x1bb
 80102fa:	8e2b      	ldrh	r3, [r5, #48]	@ 0x30
 80102fc:	ba5b      	rev16	r3, r3
 80102fe:	f8a4 31bd 	strh.w	r3, [r4, #445]	@ 0x1bd
 8010302:	f107 030a 	add.w	r3, r7, #10
 8010306:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 801030a:	ba5b      	rev16	r3, r3
 801030c:	f8a4 31bf 	strh.w	r3, [r4, #447]	@ 0x1bf
 8010310:	f204 10c9 	addw	r0, r4, #457	@ 0x1c9
 8010314:	ba7f      	rev16	r7, r7
 8010316:	f7ff fef9 	bl	801010c <memcpy.isra.0>
 801031a:	f8a4 71c7 	strh.w	r7, [r4, #455]	@ 0x1c7
 801031e:	4f16      	ldr	r7, [pc, #88]	@ (8010378 <E131Bridge::HandleDmxIn()+0x1dc>)
 8010320:	6820      	ldr	r0, [r4, #0]
 8010322:	6839      	ldr	r1, [r7, #0]
 8010324:	f8d5 30d0 	ldr.w	r3, [r5, #208]	@ 0xd0
 8010328:	f504 79a6 	add.w	r9, r4, #332	@ 0x14c
 801032c:	f108 027e 	add.w	r2, r8, #126	@ 0x7e
 8010330:	b129      	cbz	r1, 801033e <E131Bridge::HandleDmxIn()+0x1a2>
 8010332:	f44f 51ae 	mov.w	r1, #5568	@ 0x15c0
 8010336:	9100      	str	r1, [sp, #0]
 8010338:	4649      	mov	r1, r9
 801033a:	f004 fb63 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 801033e:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
 8010342:	2b00      	cmp	r3, #0
 8010344:	d098      	beq.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 8010346:	683b      	ldr	r3, [r7, #0]
 8010348:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
 801034c:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 8010350:	4620      	mov	r0, r4
 8010352:	f7ff f9ed 	bl	800f730 <E131Bridge::HandleDmx()>
 8010356:	e78f      	b.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 8010358:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 801035c:	2b00      	cmp	r3, #0
 801035e:	d08b      	beq.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 8010360:	4a07      	ldr	r2, [pc, #28]	@ (8010380 <E131Bridge::HandleDmxIn()+0x1e4>)
 8010362:	6812      	ldr	r2, [r2, #0]
 8010364:	1ad3      	subs	r3, r2, r3
 8010366:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 801036a:	d985      	bls.n	8010278 <E131Bridge::HandleDmxIn()+0xdc>
 801036c:	f8c5 20d4 	str.w	r2, [r5, #212]	@ 0xd4
 8010370:	e7a0      	b.n	80102b4 <E131Bridge::HandleDmxIn()+0x118>
 8010372:	bf00      	nop
 8010374:	20001c4c 	andcs	r1, r0, ip, asr #24
 8010378:	20002954 	andcs	r2, r0, r4, asr r9
 801037c:	20001c2c 	andcs	r1, r0, ip, lsr #24
 8010380:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

08010384 <RDMDevice::RDMDevice()>:
 8010384:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8010388:	b513      	push	{r0, r1, r4, lr}
 801038a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801038e:	f8a0 3042 	strh.w	r3, [r0, #66]	@ 0x42
 8010392:	2300      	movs	r3, #0
 8010394:	f8a0 3044 	strh.w	r3, [r0, #68]	@ 0x44
 8010398:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 801039c:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
 80103a0:	4b1c      	ldr	r3, [pc, #112]	@ (8010414 <RDMDevice::RDMDevice()+0x90>)
 80103a2:	491d      	ldr	r1, [pc, #116]	@ (8010418 <RDMDevice::RDMDevice()+0x94>)
 80103a4:	6018      	str	r0, [r3, #0]
 80103a6:	4b1d      	ldr	r3, [pc, #116]	@ (801041c <RDMDevice::RDMDevice()+0x98>)
 80103a8:	781a      	ldrb	r2, [r3, #0]
 80103aa:	f880 2046 	strb.w	r2, [r0, #70]	@ 0x46
 80103ae:	785b      	ldrb	r3, [r3, #1]
 80103b0:	f880 3047 	strb.w	r3, [r0, #71]	@ 0x47
 80103b4:	466a      	mov	r2, sp
 80103b6:	2306      	movs	r3, #6
 80103b8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80103bc:	f802 4b01 	strb.w	r4, [r2], #1
 80103c0:	3b01      	subs	r3, #1
 80103c2:	d1f9      	bne.n	80103b8 <RDMDevice::RDMDevice()+0x34>
 80103c4:	f89d 3002 	ldrb.w	r3, [sp, #2]
 80103c8:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80103cc:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80103d0:	f89d 4005 	ldrb.w	r4, [sp, #5]
 80103d4:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
 80103d8:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
 80103dc:	f880 204e 	strb.w	r2, [r0, #78]	@ 0x4e
 80103e0:	f880 304f 	strb.w	r3, [r0, #79]	@ 0x4f
 80103e4:	4a0e      	ldr	r2, [pc, #56]	@ (8010420 <RDMDevice::RDMDevice()+0x9c>)
 80103e6:	f880 104a 	strb.w	r1, [r0, #74]	@ 0x4a
 80103ea:	2319      	movs	r3, #25
 80103ec:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
 80103f0:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 80103f4:	f880 404b 	strb.w	r4, [r0, #75]	@ 0x4b
 80103f8:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
 80103fc:	4603      	mov	r3, r0
 80103fe:	f100 0119 	add.w	r1, r0, #25
 8010402:	f812 4b01 	ldrb.w	r4, [r2], #1
 8010406:	f803 4b01 	strb.w	r4, [r3], #1
 801040a:	4299      	cmp	r1, r3
 801040c:	d1f9      	bne.n	8010402 <RDMDevice::RDMDevice()+0x7e>
 801040e:	b002      	add	sp, #8
 8010410:	bd10      	pop	{r4, pc}
 8010412:	bf00      	nop
 8010414:	20001c30 	andcs	r1, r0, r0, lsr ip
 8010418:	20002968 	andcs	r2, r0, r8, ror #18
 801041c:	0801e815 	stmdaeq	r1, {r0, r2, r4, fp, sp, lr, pc}
 8010420:	0801e7f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}

08010424 <RDMDevice::Print()>:
 8010424:	b513      	push	{r0, r1, r4, lr}
 8010426:	4604      	mov	r4, r0
 8010428:	481f      	ldr	r0, [pc, #124]	@ (80104a8 <RDMDevice::Print()+0x84>)
 801042a:	f009 feaa 	bl	801a182 <puts>
 801042e:	4b1f      	ldr	r3, [pc, #124]	@ (80104ac <RDMDevice::Print()+0x88>)
 8010430:	461a      	mov	r2, r3
 8010432:	4619      	mov	r1, r3
 8010434:	3301      	adds	r3, #1
 8010436:	7808      	ldrb	r0, [r1, #0]
 8010438:	2800      	cmp	r0, #0
 801043a:	d1fa      	bne.n	8010432 <RDMDevice::Print()+0xe>
 801043c:	1a89      	subs	r1, r1, r2
 801043e:	2920      	cmp	r1, #32
 8010440:	bf28      	it	cs
 8010442:	2120      	movcs	r1, #32
 8010444:	4a19      	ldr	r2, [pc, #100]	@ (80104ac <RDMDevice::Print()+0x88>)
 8010446:	481a      	ldr	r0, [pc, #104]	@ (80104b0 <RDMDevice::Print()+0x8c>)
 8010448:	f009 fe46 	bl	801a0d8 <printf>
 801044c:	f894 2047 	ldrb.w	r2, [r4, #71]	@ 0x47
 8010450:	f894 1046 	ldrb.w	r1, [r4, #70]	@ 0x46
 8010454:	4817      	ldr	r0, [pc, #92]	@ (80104b4 <RDMDevice::Print()+0x90>)
 8010456:	f009 fe3f 	bl	801a0d8 <printf>
 801045a:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
 801045e:	9300      	str	r3, [sp, #0]
 8010460:	f894 304d 	ldrb.w	r3, [r4, #77]	@ 0x4d
 8010464:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
 8010468:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 801046c:	4812      	ldr	r0, [pc, #72]	@ (80104b8 <RDMDevice::Print()+0x94>)
 801046e:	f009 fe33 	bl	801a0d8 <printf>
 8010472:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 8010476:	4811      	ldr	r0, [pc, #68]	@ (80104bc <RDMDevice::Print()+0x98>)
 8010478:	f104 0220 	add.w	r2, r4, #32
 801047c:	f009 fe2c 	bl	801a0d8 <printf>
 8010480:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8010484:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
 8010488:	480d      	ldr	r0, [pc, #52]	@ (80104c0 <RDMDevice::Print()+0x9c>)
 801048a:	0a09      	lsrs	r1, r1, #8
 801048c:	f009 fe24 	bl	801a0d8 <printf>
 8010490:	f8b4 1042 	ldrh.w	r1, [r4, #66]	@ 0x42
 8010494:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
 8010498:	480a      	ldr	r0, [pc, #40]	@ (80104c4 <RDMDevice::Print()+0xa0>)
 801049a:	0a09      	lsrs	r1, r1, #8
 801049c:	b002      	add	sp, #8
 801049e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104a2:	f009 be19 	b.w	801a0d8 <printf>
 80104a6:	bf00      	nop
 80104a8:	0801b20b 	stmdaeq	r1, {r0, r1, r3, r9, ip, sp, pc}
 80104ac:	0801e817 	stmdaeq	r1, {r0, r1, r2, r4, fp, sp, lr, pc}
 80104b0:	0801b224 	stmdaeq	r1, {r2, r5, r9, ip, sp, pc}
 80104b4:	0801b23f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, ip, sp, pc}
 80104b8:	0801b25e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, ip, sp, pc}
 80104bc:	0801b285 	stmdaeq	r1, {r0, r2, r7, r9, ip, sp, pc}
 80104c0:	0801b2a0 	stmdaeq	r1, {r5, r7, r9, ip, sp, pc}
 80104c4:	0801b2bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, ip, sp, pc}

080104c8 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>:
 80104c8:	b507      	push	{r0, r1, r2, lr}
 80104ca:	2300      	movs	r3, #0
 80104cc:	2101      	movs	r1, #1
 80104ce:	e9cd 3100 	strd	r3, r1, [sp]
 80104d2:	4602      	mov	r2, r0
 80104d4:	4804      	ldr	r0, [pc, #16]	@ (80104e8 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)+0x20>)
 80104d6:	2329      	movs	r3, #41	@ 0x29
 80104d8:	6800      	ldr	r0, [r0, #0]
 80104da:	2109      	movs	r1, #9
 80104dc:	f005 ff9e 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 80104e0:	b003      	add	sp, #12
 80104e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80104e6:	bf00      	nop
 80104e8:	20002a00 	andcs	r2, r0, r0, lsl #20

080104ec <RDMDeviceParams::RDMDeviceParams()>:
 80104ec:	b510      	push	{r4, lr}
 80104ee:	2225      	movs	r2, #37	@ 0x25
 80104f0:	4604      	mov	r4, r0
 80104f2:	2100      	movs	r1, #0
 80104f4:	f009 fb0c 	bl	8019b10 <memset>
 80104f8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80104fc:	237f      	movs	r3, #127	@ 0x7f
 80104fe:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 8010502:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 8010506:	f884 2027 	strb.w	r2, [r4, #39]	@ 0x27
 801050a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 801050e:	4620      	mov	r0, r4
 8010510:	bd10      	pop	{r4, pc}

08010512 <RDMDeviceParams::Load()>:
 8010512:	b508      	push	{r3, lr}
 8010514:	f7ff ffd8 	bl	80104c8 <RDMDeviceParamsStore::Copy(rdm::deviceparams::Params*)>
 8010518:	bd08      	pop	{r3, pc}
	...

0801051c <RDMDeviceParams::Set(RDMDevice*)>:
 801051c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010520:	6803      	ldr	r3, [r0, #0]
 8010522:	460c      	mov	r4, r1
 8010524:	07d9      	lsls	r1, r3, #31
 8010526:	b087      	sub	sp, #28
 8010528:	4605      	mov	r5, r0
 801052a:	d52d      	bpl.n	8010588 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 801052c:	f890 6024 	ldrb.w	r6, [r0, #36]	@ 0x24
 8010530:	f894 3052 	ldrb.w	r3, [r4, #82]	@ 0x52
 8010534:	2e20      	cmp	r6, #32
 8010536:	f100 0104 	add.w	r1, r0, #4
 801053a:	bf28      	it	cs
 801053c:	2620      	movcs	r6, #32
 801053e:	b39b      	cbz	r3, 80105a8 <RDMDeviceParams::Set(RDMDevice*)+0x8c>
 8010540:	f104 0320 	add.w	r3, r4, #32
 8010544:	2701      	movs	r7, #1
 8010546:	4632      	mov	r2, r6
 8010548:	4618      	mov	r0, r3
 801054a:	f04f 0900 	mov.w	r9, #0
 801054e:	f009 fac8 	bl	8019ae2 <memmove>
 8010552:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
 8010556:	e9cd 7901 	strd	r7, r9, [sp, #4]
 801055a:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 80105b8 <RDMDeviceParams::Set(RDMDevice*)+0x9c>
 801055e:	9600      	str	r6, [sp, #0]
 8010560:	4603      	mov	r3, r0
 8010562:	2204      	movs	r2, #4
 8010564:	f8d8 0000 	ldr.w	r0, [r8]
 8010568:	f88d 6017 	strb.w	r6, [sp, #23]
 801056c:	2109      	movs	r1, #9
 801056e:	f005 ff2f 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8010572:	e9cd 7901 	strd	r7, r9, [sp, #4]
 8010576:	9700      	str	r7, [sp, #0]
 8010578:	f8d8 0000 	ldr.w	r0, [r8]
 801057c:	f10d 0317 	add.w	r3, sp, #23
 8010580:	2224      	movs	r2, #36	@ 0x24
 8010582:	2109      	movs	r1, #9
 8010584:	f005 ff24 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8010588:	682b      	ldr	r3, [r5, #0]
 801058a:	079a      	lsls	r2, r3, #30
 801058c:	bf44      	itt	mi
 801058e:	f8b5 2025 	ldrhmi.w	r2, [r5, #37]	@ 0x25
 8010592:	f8a4 2040 	strhmi.w	r2, [r4, #64]	@ 0x40
 8010596:	075b      	lsls	r3, r3, #29
 8010598:	bf44      	itt	mi
 801059a:	f8b5 3027 	ldrhmi.w	r3, [r5, #39]	@ 0x27
 801059e:	f8a4 3042 	strhmi.w	r3, [r4, #66]	@ 0x42
 80105a2:	b007      	add	sp, #28
 80105a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80105a8:	4632      	mov	r2, r6
 80105aa:	4620      	mov	r0, r4
 80105ac:	f009 fa99 	bl	8019ae2 <memmove>
 80105b0:	f884 6051 	strb.w	r6, [r4, #81]	@ 0x51
 80105b4:	e7e8      	b.n	8010588 <RDMDeviceParams::Set(RDMDevice*)+0x6c>
 80105b6:	bf00      	nop
 80105b8:	20002a00 	andcs	r2, r0, r0, lsl #20

080105bc <Hardware::Micros() [clone .isra.0]>:
 80105bc:	490b      	ldr	r1, [pc, #44]	@ (80105ec <Hardware::Micros() [clone .isra.0]+0x30>)
 80105be:	4b0c      	ldr	r3, [pc, #48]	@ (80105f0 <Hardware::Micros() [clone .isra.0]+0x34>)
 80105c0:	22f0      	movs	r2, #240	@ 0xf0
 80105c2:	685b      	ldr	r3, [r3, #4]
 80105c4:	fbb3 f3f2 	udiv	r3, r3, r2
 80105c8:	680a      	ldr	r2, [r1, #0]
 80105ca:	b530      	push	{r4, r5, lr}
 80105cc:	4c09      	ldr	r4, [pc, #36]	@ (80105f4 <Hardware::Micros() [clone .isra.0]+0x38>)
 80105ce:	600b      	str	r3, [r1, #0]
 80105d0:	4293      	cmp	r3, r2
 80105d2:	bf98      	it	ls
 80105d4:	4808      	ldrls	r0, [pc, #32]	@ (80105f8 <Hardware::Micros() [clone .isra.0]+0x3c>)
 80105d6:	6825      	ldr	r5, [r4, #0]
 80105d8:	bf99      	ittee	ls
 80105da:	1940      	addls	r0, r0, r5
 80105dc:	18c0      	addls	r0, r0, r3
 80105de:	1a9a      	subhi	r2, r3, r2
 80105e0:	1950      	addhi	r0, r2, r5
 80105e2:	bf98      	it	ls
 80105e4:	1a80      	subls	r0, r0, r2
 80105e6:	6020      	str	r0, [r4, #0]
 80105e8:	bd30      	pop	{r4, r5, pc}
 80105ea:	bf00      	nop
 80105ec:	20001c44 	andcs	r1, r0, r4, asr #24
 80105f0:	e0001000 	and	r1, r0, r0
 80105f4:	20001c40 	andcs	r1, r0, r0, asr #24
 80105f8:	01111111 	tsteq	r1, r1, lsl r1

080105fc <memcpy.isra.0>:
 80105fc:	440a      	add	r2, r1
 80105fe:	4291      	cmp	r1, r2
 8010600:	d100      	bne.n	8010604 <memcpy.isra.0+0x8>
 8010602:	4770      	bx	lr
 8010604:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010608:	f800 3b01 	strb.w	r3, [r0], #1
 801060c:	e7f7      	b.n	80105fe <memcpy.isra.0+0x2>

0801060e <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>:
 801060e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010612:	6806      	ldr	r6, [r0, #0]
 8010614:	2ec8      	cmp	r6, #200	@ 0xc8
 8010616:	4604      	mov	r4, r0
 8010618:	460d      	mov	r5, r1
 801061a:	d01b      	beq.n	8010654 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x46>
 801061c:	f100 0824 	add.w	r8, r0, #36	@ 0x24
 8010620:	2700      	movs	r7, #0
 8010622:	42be      	cmp	r6, r7
 8010624:	d10d      	bne.n	8010642 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x34>
 8010626:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 801062a:	2206      	movs	r2, #6
 801062c:	6063      	str	r3, [r4, #4]
 801062e:	fb02 4006 	mla	r0, r2, r6, r4
 8010632:	1c73      	adds	r3, r6, #1
 8010634:	6023      	str	r3, [r4, #0]
 8010636:	4629      	mov	r1, r5
 8010638:	3024      	adds	r0, #36	@ 0x24
 801063a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801063e:	f7ff bfdd 	b.w	80105fc <memcpy.isra.0>
 8010642:	4640      	mov	r0, r8
 8010644:	2206      	movs	r2, #6
 8010646:	4629      	mov	r1, r5
 8010648:	f7fc fafd 	bl	800cc46 <memcmp>
 801064c:	f108 0806 	add.w	r8, r8, #6
 8010650:	b910      	cbnz	r0, 8010658 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x4a>
 8010652:	6067      	str	r7, [r4, #4]
 8010654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010658:	3701      	adds	r7, #1
 801065a:	e7e2      	b.n	8010622 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x14>

0801065c <Rdm::Send(unsigned long, TRdmMessage*)>:
 801065c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010660:	4e19      	ldr	r6, [pc, #100]	@ (80106c8 <Rdm::Send(unsigned long, TRdmMessage*)+0x6c>)
 8010662:	5c33      	ldrb	r3, [r6, r0]
 8010664:	73cb      	strb	r3, [r1, #15]
 8010666:	460c      	mov	r4, r1
 8010668:	7889      	ldrb	r1, [r1, #2]
 801066a:	4605      	mov	r5, r0
 801066c:	4622      	mov	r2, r4
 801066e:	1908      	adds	r0, r1, r4
 8010670:	2300      	movs	r3, #0
 8010672:	4282      	cmp	r2, r0
 8010674:	d122      	bne.n	80106bc <Rdm::Send(unsigned long, TRdmMessage*)+0x60>
 8010676:	0a18      	lsrs	r0, r3, #8
 8010678:	5460      	strb	r0, [r4, r1]
 801067a:	7053      	strb	r3, [r2, #1]
 801067c:	4f13      	ldr	r7, [pc, #76]	@ (80106cc <Rdm::Send(unsigned long, TRdmMessage*)+0x70>)
 801067e:	f894 8002 	ldrb.w	r8, [r4, #2]
 8010682:	6838      	ldr	r0, [r7, #0]
 8010684:	2300      	movs	r3, #0
 8010686:	461a      	mov	r2, r3
 8010688:	4629      	mov	r1, r5
 801068a:	f108 0802 	add.w	r8, r8, #2
 801068e:	f001 fbf1 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8010692:	4643      	mov	r3, r8
 8010694:	4622      	mov	r2, r4
 8010696:	6838      	ldr	r0, [r7, #0]
 8010698:	4629      	mov	r1, r5
 801069a:	f001 fff1 	bl	8012680 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>
 801069e:	2100      	movs	r1, #0
 80106a0:	2004      	movs	r0, #4
 80106a2:	f008 fca1 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 80106a6:	2301      	movs	r3, #1
 80106a8:	461a      	mov	r2, r3
 80106aa:	6838      	ldr	r0, [r7, #0]
 80106ac:	4629      	mov	r1, r5
 80106ae:	f001 fbe1 	bl	8011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80106b2:	5d73      	ldrb	r3, [r6, r5]
 80106b4:	3301      	adds	r3, #1
 80106b6:	5573      	strb	r3, [r6, r5]
 80106b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106bc:	f812 7b01 	ldrb.w	r7, [r2], #1
 80106c0:	443b      	add	r3, r7
 80106c2:	b29b      	uxth	r3, r3
 80106c4:	e7d5      	b.n	8010672 <Rdm::Send(unsigned long, TRdmMessage*)+0x16>
 80106c6:	bf00      	nop
 80106c8:	20001c48 	andcs	r1, r0, r8, asr #24
 80106cc:	20001c4c 	andcs	r1, r0, ip, asr #24

080106d0 <Rdm::Receive(unsigned long)>:
 80106d0:	4b02      	ldr	r3, [pc, #8]	@ (80106dc <Rdm::Receive(unsigned long)+0xc>)
 80106d2:	4601      	mov	r1, r0
 80106d4:	6818      	ldr	r0, [r3, #0]
 80106d6:	f002 b96b 	b.w	80129b0 <Dmx::RdmReceive(unsigned long)>
 80106da:	bf00      	nop
 80106dc:	20001c4c 	andcs	r1, r0, ip, asr #24

080106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>:
 80106e0:	b538      	push	{r3, r4, r5, lr}
 80106e2:	4604      	mov	r4, r0
 80106e4:	7883      	ldrb	r3, [r0, #2]
 80106e6:	7dc0      	ldrb	r0, [r0, #23]
 80106e8:	75e2      	strb	r2, [r4, #23]
 80106ea:	1a1b      	subs	r3, r3, r0
 80106ec:	4615      	mov	r5, r2
 80106ee:	70a3      	strb	r3, [r4, #2]
 80106f0:	b121      	cbz	r1, 80106fc <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x1c>
 80106f2:	b11a      	cbz	r2, 80106fc <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x1c>
 80106f4:	f104 0018 	add.w	r0, r4, #24
 80106f8:	f7ff ff80 	bl	80105fc <memcpy.isra.0>
 80106fc:	78a3      	ldrb	r3, [r4, #2]
 80106fe:	441d      	add	r5, r3
 8010700:	70a5      	strb	r5, [r4, #2]
 8010702:	bd38      	pop	{r3, r4, r5, pc}

08010704 <RDMDiscovery::RDMDiscovery(unsigned char const*)>:
 8010704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010708:	23cc      	movs	r3, #204	@ 0xcc
 801070a:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 801076c <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x68>
 801070e:	7003      	strb	r3, [r0, #0]
 8010710:	2701      	movs	r7, #1
 8010712:	2318      	movs	r3, #24
 8010714:	f100 0609 	add.w	r6, r0, #9
 8010718:	4604      	mov	r4, r0
 801071a:	460d      	mov	r5, r1
 801071c:	7083      	strb	r3, [r0, #2]
 801071e:	7047      	strb	r7, [r0, #1]
 8010720:	4641      	mov	r1, r8
 8010722:	4630      	mov	r0, r6
 8010724:	2206      	movs	r2, #6
 8010726:	f7ff ff69 	bl	80105fc <memcpy.isra.0>
 801072a:	4641      	mov	r1, r8
 801072c:	1ce0      	adds	r0, r4, #3
 801072e:	2206      	movs	r2, #6
 8010730:	f7ff ff64 	bl	80105fc <memcpy.isra.0>
 8010734:	2300      	movs	r3, #0
 8010736:	e9c4 3344 	strd	r3, r3, [r4, #272]	@ 0x110
 801073a:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
 801073e:	7463      	strb	r3, [r4, #17]
 8010740:	74a3      	strb	r3, [r4, #18]
 8010742:	74e3      	strb	r3, [r4, #19]
 8010744:	75e3      	strb	r3, [r4, #23]
 8010746:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
 801074a:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
 801074e:	4629      	mov	r1, r5
 8010750:	f504 7084 	add.w	r0, r4, #264	@ 0x108
 8010754:	7427      	strb	r7, [r4, #16]
 8010756:	2206      	movs	r2, #6
 8010758:	f7ff ff50 	bl	80105fc <memcpy.isra.0>
 801075c:	4630      	mov	r0, r6
 801075e:	2206      	movs	r2, #6
 8010760:	4629      	mov	r1, r5
 8010762:	f7ff ff4b 	bl	80105fc <memcpy.isra.0>
 8010766:	4620      	mov	r0, r4
 8010768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801076c:	0801e80f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr, pc}

08010770 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)>:
 8010770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010774:	2400      	movs	r4, #0
 8010776:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 8010844 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0xd4>
 801077a:	f8df b0cc 	ldr.w	fp, [pc, #204]	@ 8010848 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0xd8>
 801077e:	b091      	sub	sp, #68	@ 0x44
 8010780:	4607      	mov	r7, r0
 8010782:	460e      	mov	r6, r1
 8010784:	4692      	mov	sl, r2
 8010786:	f500 75a8 	add.w	r5, r0, #336	@ 0x150
 801078a:	46a1      	mov	r9, r4
 801078c:	f8d7 3148 	ldr.w	r3, [r7, #328]	@ 0x148
 8010790:	454b      	cmp	r3, r9
 8010792:	f105 0510 	add.w	r5, r5, #16
 8010796:	da07      	bge.n	80107a8 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0x38>
 8010798:	2c00      	cmp	r4, #0
 801079a:	d050      	beq.n	801083e <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0xce>
 801079c:	1e60      	subs	r0, r4, #1
 801079e:	2300      	movs	r3, #0
 80107a0:	5433      	strb	r3, [r6, r0]
 80107a2:	b011      	add	sp, #68	@ 0x44
 80107a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107a8:	e955 2304 	ldrd	r2, r3, [r5, #-16]
 80107ac:	041b      	lsls	r3, r3, #16
 80107ae:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
 80107b2:	0412      	lsls	r2, r2, #16
 80107b4:	ba1b      	rev	r3, r3
 80107b6:	ba12      	rev	r2, r2
 80107b8:	e9c8 3200 	strd	r3, r2, [r8]
 80107bc:	4921      	ldr	r1, [pc, #132]	@ (8010844 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0xd4>)
 80107be:	2206      	movs	r2, #6
 80107c0:	a80c      	add	r0, sp, #48	@ 0x30
 80107c2:	f7ff ff1b 	bl	80105fc <memcpy.isra.0>
 80107c6:	e955 2302 	ldrd	r2, r3, [r5, #-8]
 80107ca:	041b      	lsls	r3, r3, #16
 80107cc:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
 80107d0:	0412      	lsls	r2, r2, #16
 80107d2:	ba1b      	rev	r3, r3
 80107d4:	ba12      	rev	r2, r2
 80107d6:	e9c8 3200 	strd	r3, r2, [r8]
 80107da:	491a      	ldr	r1, [pc, #104]	@ (8010844 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0xd4>)
 80107dc:	2206      	movs	r2, #6
 80107de:	a80e      	add	r0, sp, #56	@ 0x38
 80107e0:	f7ff ff0c 	bl	80105fc <memcpy.isra.0>
 80107e4:	f89d 303d 	ldrb.w	r3, [sp, #61]	@ 0x3d
 80107e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80107ea:	f89d 303c 	ldrb.w	r3, [sp, #60]	@ 0x3c
 80107ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80107f0:	f89d 303b 	ldrb.w	r3, [sp, #59]	@ 0x3b
 80107f4:	9308      	str	r3, [sp, #32]
 80107f6:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 80107fa:	9307      	str	r3, [sp, #28]
 80107fc:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 8010800:	9306      	str	r3, [sp, #24]
 8010802:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 8010806:	9305      	str	r3, [sp, #20]
 8010808:	f89d 3035 	ldrb.w	r3, [sp, #53]	@ 0x35
 801080c:	9304      	str	r3, [sp, #16]
 801080e:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8010812:	9303      	str	r3, [sp, #12]
 8010814:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8010818:	9302      	str	r3, [sp, #8]
 801081a:	f89d 3032 	ldrb.w	r3, [sp, #50]	@ 0x32
 801081e:	9301      	str	r3, [sp, #4]
 8010820:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8010824:	9300      	str	r3, [sp, #0]
 8010826:	ebaa 0104 	sub.w	r1, sl, r4
 801082a:	1930      	adds	r0, r6, r4
 801082c:	f89d 3030 	ldrb.w	r3, [sp, #48]	@ 0x30
 8010830:	465a      	mov	r2, fp
 8010832:	f009 fc79 	bl	801a128 <snprintf>
 8010836:	f109 0901 	add.w	r9, r9, #1
 801083a:	4404      	add	r4, r0
 801083c:	e7a6      	b.n	801078c <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0x1c>
 801083e:	4620      	mov	r0, r4
 8010840:	e7af      	b.n	80107a2 <RDMDiscovery::CopyWorkingQueue(char*, unsigned long)+0x32>
 8010842:	bf00      	nop
 8010844:	20001c38 	andcs	r1, r0, r8, lsr ip
 8010848:	0801b2de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, ip, sp, pc}

0801084c <RDMDiscovery::Start(unsigned long, RDMTod*, bool)>:
 801084c:	b5d0      	push	{r4, r6, r7, lr}
 801084e:	4604      	mov	r4, r0
 8010850:	f8d0 011c 	ldr.w	r0, [r0, #284]	@ 0x11c
 8010854:	bbb0      	cbnz	r0, 80108c4 <RDMDiscovery::Start(unsigned long, RDMTod*, bool)+0x78>
 8010856:	2600      	movs	r6, #0
 8010858:	2700      	movs	r7, #0
 801085a:	f884 3119 	strb.w	r3, [r4, #281]	@ 0x119
 801085e:	f8d4 3dd0 	ldr.w	r3, [r4, #3536]	@ 0xdd0
 8010862:	f884 0118 	strb.w	r0, [r4, #280]	@ 0x118
 8010866:	e9c4 6754 	strd	r6, r7, [r4, #336]	@ 0x150
 801086a:	f06f 0601 	mvn.w	r6, #1
 801086e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8010872:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010876:	e9c4 6756 	strd	r6, r7, [r4, #344]	@ 0x158
 801087a:	e9c4 1244 	strd	r1, r2, [r4, #272]	@ 0x110
 801087e:	f884 0130 	strb.w	r0, [r4, #304]	@ 0x130
 8010882:	2103      	movs	r1, #3
 8010884:	220a      	movs	r2, #10
 8010886:	f884 0146 	strb.w	r0, [r4, #326]	@ 0x146
 801088a:	f8c4 0148 	str.w	r0, [r4, #328]	@ 0x148
 801088e:	f8c4 3dd0 	str.w	r3, [r4, #3536]	@ 0xdd0
 8010892:	f884 0e0a 	strb.w	r0, [r4, #3594]	@ 0xe0a
 8010896:	2305      	movs	r3, #5
 8010898:	f884 0e18 	strb.w	r0, [r4, #3608]	@ 0xe18
 801089c:	f884 0e24 	strb.w	r0, [r4, #3620]	@ 0xe24
 80108a0:	f884 0e34 	strb.w	r0, [r4, #3636]	@ 0xe34
 80108a4:	2001      	movs	r0, #1
 80108a6:	f8c4 1128 	str.w	r1, [r4, #296]	@ 0x128
 80108aa:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
 80108ae:	f8c4 1df0 	str.w	r1, [r4, #3568]	@ 0xdf0
 80108b2:	f8c4 2e10 	str.w	r2, [r4, #3600]	@ 0xe10
 80108b6:	f8c4 3e1c 	str.w	r3, [r4, #3612]	@ 0xe1c
 80108ba:	f8c4 3e2c 	str.w	r3, [r4, #3628]	@ 0xe2c
 80108be:	f8c4 011c 	str.w	r0, [r4, #284]	@ 0x11c
 80108c2:	bdd0      	pop	{r4, r6, r7, pc}
 80108c4:	2000      	movs	r0, #0
 80108c6:	e7fc      	b.n	80108c2 <RDMDiscovery::Start(unsigned long, RDMTod*, bool)+0x76>

080108c8 <RDMDiscovery::Full(unsigned long, RDMTod*)>:
 80108c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80108cc:	f8df 9044 	ldr.w	r9, [pc, #68]	@ 8010914 <RDMDiscovery::Full(unsigned long, RDMTod*)+0x4c>
 80108d0:	4605      	mov	r5, r0
 80108d2:	460e      	mov	r6, r1
 80108d4:	4614      	mov	r4, r2
 80108d6:	f102 0824 	add.w	r8, r2, #36	@ 0x24
 80108da:	2700      	movs	r7, #0
 80108dc:	6823      	ldr	r3, [r4, #0]
 80108de:	429f      	cmp	r7, r3
 80108e0:	d30f      	bcc.n	8010902 <RDMDiscovery::Full(unsigned long, RDMTod*)+0x3a>
 80108e2:	2300      	movs	r3, #0
 80108e4:	e9c4 3302 	strd	r3, r3, [r4, #8]
 80108e8:	e9c4 3304 	strd	r3, r3, [r4, #16]
 80108ec:	e9c4 3306 	strd	r3, r3, [r4, #24]
 80108f0:	6023      	str	r3, [r4, #0]
 80108f2:	6223      	str	r3, [r4, #32]
 80108f4:	4622      	mov	r2, r4
 80108f6:	4631      	mov	r1, r6
 80108f8:	4628      	mov	r0, r5
 80108fa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80108fe:	f7ff bfa5 	b.w	801084c <RDMDiscovery::Start(unsigned long, RDMTod*, bool)>
 8010902:	4640      	mov	r0, r8
 8010904:	2206      	movs	r2, #6
 8010906:	4649      	mov	r1, r9
 8010908:	f7ff fe78 	bl	80105fc <memcpy.isra.0>
 801090c:	3701      	adds	r7, #1
 801090e:	f108 0806 	add.w	r8, r8, #6
 8010912:	e7e3      	b.n	80108dc <RDMDiscovery::Full(unsigned long, RDMTod*)+0x14>
 8010914:	0801e80f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr, pc}

08010918 <RDMDiscovery::Incremental(unsigned long, RDMTod*)>:
 8010918:	6813      	ldr	r3, [r2, #0]
 801091a:	f8c0 3134 	str.w	r3, [r0, #308]	@ 0x134
 801091e:	2301      	movs	r3, #1
 8010920:	f7ff bf94 	b.w	801084c <RDMDiscovery::Start(unsigned long, RDMTod*, bool)>

08010924 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)>:
 8010924:	b570      	push	{r4, r5, r6, lr}
 8010926:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 801092a:	7813      	ldrb	r3, [r2, #0]
 801092c:	2bfe      	cmp	r3, #254	@ 0xfe
 801092e:	d001      	beq.n	8010934 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)+0x10>
 8010930:	2000      	movs	r0, #0
 8010932:	bd70      	pop	{r4, r5, r6, pc}
 8010934:	7a13      	ldrb	r3, [r2, #8]
 8010936:	7a52      	ldrb	r2, [r2, #9]
 8010938:	4013      	ands	r3, r2
 801093a:	700b      	strb	r3, [r1, #0]
 801093c:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 8010940:	7a93      	ldrb	r3, [r2, #10]
 8010942:	7ad2      	ldrb	r2, [r2, #11]
 8010944:	4013      	ands	r3, r2
 8010946:	704b      	strb	r3, [r1, #1]
 8010948:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 801094c:	7b13      	ldrb	r3, [r2, #12]
 801094e:	7b52      	ldrb	r2, [r2, #13]
 8010950:	4013      	ands	r3, r2
 8010952:	708b      	strb	r3, [r1, #2]
 8010954:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 8010958:	7b93      	ldrb	r3, [r2, #14]
 801095a:	7bd2      	ldrb	r2, [r2, #15]
 801095c:	4013      	ands	r3, r2
 801095e:	70cb      	strb	r3, [r1, #3]
 8010960:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 8010964:	7c13      	ldrb	r3, [r2, #16]
 8010966:	7c52      	ldrb	r2, [r2, #17]
 8010968:	4013      	ands	r3, r2
 801096a:	710b      	strb	r3, [r1, #4]
 801096c:	f8d0 2104 	ldr.w	r2, [r0, #260]	@ 0x104
 8010970:	7c93      	ldrb	r3, [r2, #18]
 8010972:	7cd2      	ldrb	r2, [r2, #19]
 8010974:	4013      	ands	r3, r2
 8010976:	714b      	strb	r3, [r1, #5]
 8010978:	f8d0 3104 	ldr.w	r3, [r0, #260]	@ 0x104
 801097c:	7d1a      	ldrb	r2, [r3, #20]
 801097e:	7d98      	ldrb	r0, [r3, #22]
 8010980:	7ddd      	ldrb	r5, [r3, #23]
 8010982:	7d5b      	ldrb	r3, [r3, #21]
 8010984:	1e4c      	subs	r4, r1, #1
 8010986:	401a      	ands	r2, r3
 8010988:	3105      	adds	r1, #5
 801098a:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 801098e:	f814 6f01 	ldrb.w	r6, [r4, #1]!
 8010992:	4433      	add	r3, r6
 8010994:	428c      	cmp	r4, r1
 8010996:	b29b      	uxth	r3, r3
 8010998:	d1f9      	bne.n	801098e <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)+0x6a>
 801099a:	ebb2 2f13 	cmp.w	r2, r3, lsr #8
 801099e:	d1c7      	bne.n	8010930 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)+0xc>
 80109a0:	4028      	ands	r0, r5
 80109a2:	b2db      	uxtb	r3, r3
 80109a4:	1ac3      	subs	r3, r0, r3
 80109a6:	4258      	negs	r0, r3
 80109a8:	4158      	adcs	r0, r3
 80109aa:	e7c2      	b.n	8010932 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)+0xe>

080109ac <RDMDiscovery::NewState(rdmdiscovery::State, bool, unsigned long)>:
 80109ac:	b538      	push	{r3, r4, r5, lr}
 80109ae:	4604      	mov	r4, r0
 80109b0:	460d      	mov	r5, r1
 80109b2:	b142      	cbz	r2, 80109c6 <RDMDiscovery::NewState(rdmdiscovery::State, bool, unsigned long)+0x1a>
 80109b4:	f8d0 311c 	ldr.w	r3, [r0, #284]	@ 0x11c
 80109b8:	2b08      	cmp	r3, #8
 80109ba:	d004      	beq.n	80109c6 <RDMDiscovery::NewState(rdmdiscovery::State, bool, unsigned long)+0x1a>
 80109bc:	f7ff fdfe 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 80109c0:	e9c4 5048 	strd	r5, r0, [r4, #288]	@ 0x120
 80109c4:	2508      	movs	r5, #8
 80109c6:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
 80109ca:	bd38      	pop	{r3, r4, r5, pc}

080109cc <RDMDiscovery::Stop()>:
 80109cc:	b508      	push	{r3, lr}
 80109ce:	f8d0 311c 	ldr.w	r3, [r0, #284]	@ 0x11c
 80109d2:	2100      	movs	r1, #0
 80109d4:	b13b      	cbz	r3, 80109e6 <RDMDiscovery::Stop()+0x1a>
 80109d6:	f880 1118 	strb.w	r1, [r0, #280]	@ 0x118
 80109da:	23be      	movs	r3, #190	@ 0xbe
 80109dc:	2201      	movs	r2, #1
 80109de:	f7ff ffe5 	bl	80109ac <RDMDiscovery::NewState(rdmdiscovery::State, bool, unsigned long)>
 80109e2:	2001      	movs	r0, #1
 80109e4:	bd08      	pop	{r3, pc}
 80109e6:	4618      	mov	r0, r3
 80109e8:	e7fc      	b.n	80109e4 <RDMDiscovery::Stop()+0x18>
	...

080109ec <RDMDiscovery::Process()>:
 80109ec:	f8d0 311c 	ldr.w	r3, [r0, #284]	@ 0x11c
 80109f0:	3b01      	subs	r3, #1
 80109f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109f6:	4604      	mov	r4, r0
 80109f8:	2b08      	cmp	r3, #8
 80109fa:	f200 8334 	bhi.w	8011066 <RDMDiscovery::Process()+0x67a>
 80109fe:	e8df f013 	tbh	[pc, r3, lsl #1]
 8010a02:	005d001a 	subseq	r0, sp, sl, lsl r0
 8010a06:	018b00f5 	strdeq	r0, [fp, r5]
 8010a0a:	026f020a 	rsbeq	r0, pc, #-1610612736	@ 0xa0000000
 8010a0e:	000902d3 	ldrdeq	r0, [r9], -r3
 8010a12:	f8d00332 			@ <UNDEFINED> instruction: 0xf8d00332
 8010a16:	0110      	lsls	r0, r2, #4
 8010a18:	f7ff fe5a 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010a1c:	f7ff fdce 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010a20:	f8d4 3124 	ldr.w	r3, [r4, #292]	@ 0x124
 8010a24:	1ac0      	subs	r0, r0, r3
 8010a26:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8010a2a:	d933      	bls.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010a2c:	f8d4 3120 	ldr.w	r3, [r4, #288]	@ 0x120
 8010a30:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
 8010a34:	e02e      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010a36:	f8d0 3128 	ldr.w	r3, [r0, #296]	@ 0x128
 8010a3a:	b94b      	cbnz	r3, 8010a50 <RDMDiscovery::Process()+0x64>
 8010a3c:	f880 3130 	strb.w	r3, [r0, #304]	@ 0x130
 8010a40:	f890 3119 	ldrb.w	r3, [r0, #281]	@ 0x119
 8010a44:	2203      	movs	r2, #3
 8010a46:	f8c0 2128 	str.w	r2, [r0, #296]	@ 0x128
 8010a4a:	b3e3      	cbz	r3, 8010ac6 <RDMDiscovery::Process()+0xda>
 8010a4c:	2302      	movs	r3, #2
 8010a4e:	e7ef      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 8010a50:	f894 5130 	ldrb.w	r5, [r4, #304]	@ 0x130
 8010a54:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8010a58:	b9f5      	cbnz	r5, 8010a98 <RDMDiscovery::Process()+0xac>
 8010a5a:	3001      	adds	r0, #1
 8010a5c:	49ce      	ldr	r1, [pc, #824]	@ (8010d98 <RDMDiscovery::Process()+0x3ac>)
 8010a5e:	7420      	strb	r0, [r4, #16]
 8010a60:	2206      	movs	r2, #6
 8010a62:	1ce0      	adds	r0, r4, #3
 8010a64:	f7ff fdca 	bl	80105fc <memcpy.isra.0>
 8010a68:	2310      	movs	r3, #16
 8010a6a:	7523      	strb	r3, [r4, #20]
 8010a6c:	2303      	movs	r3, #3
 8010a6e:	75a3      	strb	r3, [r4, #22]
 8010a70:	462a      	mov	r2, r5
 8010a72:	4629      	mov	r1, r5
 8010a74:	4620      	mov	r0, r4
 8010a76:	7565      	strb	r5, [r4, #21]
 8010a78:	f7ff fe32 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010a7c:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010a80:	4621      	mov	r1, r4
 8010a82:	f7ff fdeb 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010a86:	f7ff fd99 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010a8a:	2301      	movs	r3, #1
 8010a8c:	f8c4 012c 	str.w	r0, [r4, #300]	@ 0x12c
 8010a90:	f884 3130 	strb.w	r3, [r4, #304]	@ 0x130
 8010a94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010a98:	f7ff fe1a 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010a9c:	f7ff fd8e 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010aa0:	f8d4 312c 	ldr.w	r3, [r4, #300]	@ 0x12c
 8010aa4:	1ac0      	subs	r0, r0, r3
 8010aa6:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 8010aaa:	4298      	cmp	r0, r3
 8010aac:	d9f2      	bls.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010aae:	f8d4 3128 	ldr.w	r3, [r4, #296]	@ 0x128
 8010ab2:	3b01      	subs	r3, #1
 8010ab4:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
 8010ab8:	2300      	movs	r3, #0
 8010aba:	e7e9      	b.n	8010a90 <RDMDiscovery::Process()+0xa4>
 8010abc:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 8010ac0:	b91b      	cbnz	r3, 8010aca <RDMDiscovery::Process()+0xde>
 8010ac2:	f880 3146 	strb.w	r3, [r0, #326]	@ 0x146
 8010ac6:	2303      	movs	r3, #3
 8010ac8:	e7b2      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 8010aca:	f8d0 5138 	ldr.w	r5, [r0, #312]	@ 0x138
 8010ace:	bb8d      	cbnz	r5, 8010b34 <RDMDiscovery::Process()+0x148>
 8010ad0:	f8d0 6114 	ldr.w	r6, [r0, #276]	@ 0x114
 8010ad4:	f880 5146 	strb.w	r5, [r0, #326]	@ 0x146
 8010ad8:	230a      	movs	r3, #10
 8010ada:	4637      	mov	r7, r6
 8010adc:	f8c0 3138 	str.w	r3, [r0, #312]	@ 0x138
 8010ae0:	f857 8b24 	ldr.w	r8, [r7], #36
 8010ae4:	f500 79a0 	add.w	r9, r0, #320	@ 0x140
 8010ae8:	4545      	cmp	r5, r8
 8010aea:	d107      	bne.n	8010afc <RDMDiscovery::Process()+0x110>
 8010aec:	f8d4 3134 	ldr.w	r3, [r4, #308]	@ 0x134
 8010af0:	2b00      	cmp	r3, #0
 8010af2:	d0cf      	beq.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010af4:	3b01      	subs	r3, #1
 8010af6:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
 8010afa:	e7cb      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010afc:	4638      	mov	r0, r7
 8010afe:	2206      	movs	r2, #6
 8010b00:	4649      	mov	r1, r9
 8010b02:	f7fc f8a0 	bl	800cc46 <memcmp>
 8010b06:	3706      	adds	r7, #6
 8010b08:	2800      	cmp	r0, #0
 8010b0a:	f000 82b1 	beq.w	8011070 <RDMDiscovery::Process()+0x684>
 8010b0e:	3501      	adds	r5, #1
 8010b10:	e7ea      	b.n	8010ae8 <RDMDiscovery::Process()+0xfc>
 8010b12:	2006      	movs	r0, #6
 8010b14:	fb00 6005 	mla	r0, r0, r5, r6
 8010b18:	3024      	adds	r0, #36	@ 0x24
 8010b1a:	6833      	ldr	r3, [r6, #0]
 8010b1c:	429d      	cmp	r5, r3
 8010b1e:	f100 0706 	add.w	r7, r0, #6
 8010b22:	f080 82ae 	bcs.w	8011082 <RDMDiscovery::Process()+0x696>
 8010b26:	2206      	movs	r2, #6
 8010b28:	4639      	mov	r1, r7
 8010b2a:	f7ff fd67 	bl	80105fc <memcpy.isra.0>
 8010b2e:	3501      	adds	r5, #1
 8010b30:	4638      	mov	r0, r7
 8010b32:	e7f2      	b.n	8010b1a <RDMDiscovery::Process()+0x12e>
 8010b34:	f890 2146 	ldrb.w	r2, [r0, #326]	@ 0x146
 8010b38:	bb8a      	cbnz	r2, 8010b9e <RDMDiscovery::Process()+0x1b2>
 8010b3a:	f8d0 1114 	ldr.w	r1, [r0, #276]	@ 0x114
 8010b3e:	680a      	ldr	r2, [r1, #0]
 8010b40:	3b01      	subs	r3, #1
 8010b42:	4293      	cmp	r3, r2
 8010b44:	f04f 0206 	mov.w	r2, #6
 8010b48:	bf98      	it	ls
 8010b4a:	fb02 1103 	mlals	r1, r2, r3, r1
 8010b4e:	f500 75a0 	add.w	r5, r0, #320	@ 0x140
 8010b52:	bf8c      	ite	hi
 8010b54:	4990      	ldrhi	r1, [pc, #576]	@ (8010d98 <RDMDiscovery::Process()+0x3ac>)
 8010b56:	3124      	addls	r1, #36	@ 0x24
 8010b58:	4628      	mov	r0, r5
 8010b5a:	f7ff fd4f 	bl	80105fc <memcpy.isra.0>
 8010b5e:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
 8010b62:	3301      	adds	r3, #1
 8010b64:	7423      	strb	r3, [r4, #16]
 8010b66:	2206      	movs	r2, #6
 8010b68:	4629      	mov	r1, r5
 8010b6a:	1ce0      	adds	r0, r4, #3
 8010b6c:	f7ff fd46 	bl	80105fc <memcpy.isra.0>
 8010b70:	2310      	movs	r3, #16
 8010b72:	2200      	movs	r2, #0
 8010b74:	7523      	strb	r3, [r4, #20]
 8010b76:	2302      	movs	r3, #2
 8010b78:	75a3      	strb	r3, [r4, #22]
 8010b7a:	4611      	mov	r1, r2
 8010b7c:	7562      	strb	r2, [r4, #21]
 8010b7e:	4620      	mov	r0, r4
 8010b80:	f7ff fdae 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010b84:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010b88:	4621      	mov	r1, r4
 8010b8a:	f7ff fd67 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010b8e:	f7ff fd15 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010b92:	2301      	movs	r3, #1
 8010b94:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 8010b98:	f884 3146 	strb.w	r3, [r4, #326]	@ 0x146
 8010b9c:	e77a      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010b9e:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8010ba2:	f7ff fd95 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010ba6:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
 8010baa:	b130      	cbz	r0, 8010bba <RDMDiscovery::Process()+0x1ce>
 8010bac:	f8d4 3134 	ldr.w	r3, [r4, #308]	@ 0x134
 8010bb0:	3b01      	subs	r3, #1
 8010bb2:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
 8010bb6:	2300      	movs	r3, #0
 8010bb8:	e7ee      	b.n	8010b98 <RDMDiscovery::Process()+0x1ac>
 8010bba:	f7ff fcff 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010bbe:	f8d4 313c 	ldr.w	r3, [r4, #316]	@ 0x13c
 8010bc2:	1ac0      	subs	r0, r0, r3
 8010bc4:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 8010bc8:	4298      	cmp	r0, r3
 8010bca:	f67f af63 	bls.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010bce:	f8d4 3138 	ldr.w	r3, [r4, #312]	@ 0x138
 8010bd2:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010bd6:	3b01      	subs	r3, #1
 8010bd8:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8010bdc:	4621      	mov	r1, r4
 8010bde:	f7ff fd3d 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010be2:	f7ff fceb 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010be6:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 8010bea:	e753      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010bec:	f890 5e0a 	ldrb.w	r5, [r0, #3594]	@ 0xe0a
 8010bf0:	b33d      	cbz	r5, 8010c42 <RDMDiscovery::Process()+0x256>
 8010bf2:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8010bf6:	f7ff fd6b 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010bfa:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
 8010bfe:	b910      	cbnz	r0, 8010c06 <RDMDiscovery::Process()+0x21a>
 8010c00:	f8d4 3df0 	ldr.w	r3, [r4, #3568]	@ 0xdf0
 8010c04:	b923      	cbnz	r3, 8010c10 <RDMDiscovery::Process()+0x224>
 8010c06:	2300      	movs	r3, #0
 8010c08:	f884 3e0a 	strb.w	r3, [r4, #3594]	@ 0xe0a
 8010c0c:	2305      	movs	r3, #5
 8010c0e:	e70f      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 8010c10:	f7ff fcd4 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010c14:	f8d4 3df4 	ldr.w	r3, [r4, #3572]	@ 0xdf4
 8010c18:	1ac0      	subs	r0, r0, r3
 8010c1a:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 8010c1e:	4298      	cmp	r0, r3
 8010c20:	f67f af38 	bls.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010c24:	f8d4 3df0 	ldr.w	r3, [r4, #3568]	@ 0xdf0
 8010c28:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010c2c:	3b01      	subs	r3, #1
 8010c2e:	f8c4 3df0 	str.w	r3, [r4, #3568]	@ 0xdf0
 8010c32:	4621      	mov	r1, r4
 8010c34:	f7ff fd12 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010c38:	f7ff fcc0 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010c3c:	f8c4 0df4 	str.w	r0, [r4, #3572]	@ 0xdf4
 8010c40:	e728      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010c42:	f8d0 1148 	ldr.w	r1, [r0, #328]	@ 0x148
 8010c46:	1c4b      	adds	r3, r1, #1
 8010c48:	d108      	bne.n	8010c5c <RDMDiscovery::Process()+0x270>
 8010c4a:	f240 137f 	movw	r3, #383	@ 0x17f
 8010c4e:	2201      	movs	r2, #1
 8010c50:	2109      	movs	r1, #9
 8010c52:	4620      	mov	r0, r4
 8010c54:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010c58:	f7ff bea8 	b.w	80109ac <RDMDiscovery::NewState(rdmdiscovery::State, bool, unsigned long)>
 8010c5c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8010c60:	e9d3 2354 	ldrd	r2, r3, [r3, #336]	@ 0x150
 8010c64:	f8c0 2dd8 	str.w	r2, [r0, #3544]	@ 0xdd8
 8010c68:	f8c0 3ddc 	str.w	r3, [r0, #3548]	@ 0xddc
 8010c6c:	1c48      	adds	r0, r1, #1
 8010c6e:	eb04 1000 	add.w	r0, r4, r0, lsl #4
 8010c72:	e9d0 6052 	ldrd	r6, r0, [r0, #328]	@ 0x148
 8010c76:	f504 675f 	add.w	r7, r4, #3568	@ 0xdf0
 8010c7a:	3901      	subs	r1, #1
 8010c7c:	4283      	cmp	r3, r0
 8010c7e:	bf08      	it	eq
 8010c80:	42b2      	cmpeq	r2, r6
 8010c82:	e947 6002 	strd	r6, r0, [r7, #-8]
 8010c86:	f8c4 1148 	str.w	r1, [r4, #328]	@ 0x148
 8010c8a:	d106      	bne.n	8010c9a <RDMDiscovery::Process()+0x2ae>
 8010c8c:	f884 5e34 	strb.w	r5, [r4, #3636]	@ 0xe34
 8010c90:	f44f 73c5 	mov.w	r3, #394	@ 0x18a
 8010c94:	2201      	movs	r2, #1
 8010c96:	2104      	movs	r1, #4
 8010c98:	e7db      	b.n	8010c52 <RDMDiscovery::Process()+0x266>
 8010c9a:	041b      	lsls	r3, r3, #16
 8010c9c:	f8df 80fc 	ldr.w	r8, [pc, #252]	@ 8010d9c <RDMDiscovery::Process()+0x3b0>
 8010ca0:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
 8010ca4:	0412      	lsls	r2, r2, #16
 8010ca6:	ba1b      	rev	r3, r3
 8010ca8:	f604 56fe 	addw	r6, r4, #3582	@ 0xdfe
 8010cac:	ba12      	rev	r2, r2
 8010cae:	e9c8 3200 	strd	r3, r2, [r8]
 8010cb2:	4641      	mov	r1, r8
 8010cb4:	2206      	movs	r2, #6
 8010cb6:	4630      	mov	r0, r6
 8010cb8:	f7ff fca0 	bl	80105fc <memcpy.isra.0>
 8010cbc:	e957 2302 	ldrd	r2, r3, [r7, #-8]
 8010cc0:	041b      	lsls	r3, r3, #16
 8010cc2:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
 8010cc6:	0412      	lsls	r2, r2, #16
 8010cc8:	ba1b      	rev	r3, r3
 8010cca:	ba12      	rev	r2, r2
 8010ccc:	e9c8 3200 	strd	r3, r2, [r8]
 8010cd0:	4641      	mov	r1, r8
 8010cd2:	2206      	movs	r2, #6
 8010cd4:	f604 6004 	addw	r0, r4, #3588	@ 0xe04
 8010cd8:	f7ff fc90 	bl	80105fc <memcpy.isra.0>
 8010cdc:	492e      	ldr	r1, [pc, #184]	@ (8010d98 <RDMDiscovery::Process()+0x3ac>)
 8010cde:	2206      	movs	r2, #6
 8010ce0:	1ce0      	adds	r0, r4, #3
 8010ce2:	f7ff fc8b 	bl	80105fc <memcpy.isra.0>
 8010ce6:	2310      	movs	r3, #16
 8010ce8:	7565      	strb	r5, [r4, #21]
 8010cea:	2501      	movs	r5, #1
 8010cec:	7523      	strb	r3, [r4, #20]
 8010cee:	220c      	movs	r2, #12
 8010cf0:	4631      	mov	r1, r6
 8010cf2:	4620      	mov	r0, r4
 8010cf4:	75a5      	strb	r5, [r4, #22]
 8010cf6:	f7ff fcf3 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010cfa:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010cfe:	4621      	mov	r1, r4
 8010d00:	f7ff fcac 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010d04:	2303      	movs	r3, #3
 8010d06:	f8c4 3df0 	str.w	r3, [r4, #3568]	@ 0xdf0
 8010d0a:	f7ff fc57 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010d0e:	f884 5e0a 	strb.w	r5, [r4, #3594]	@ 0xe0a
 8010d12:	f8c4 0df4 	str.w	r0, [r4, #3572]	@ 0xdf4
 8010d16:	e6bd      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010d18:	f8d0 3e10 	ldr.w	r3, [r0, #3600]	@ 0xe10
 8010d1c:	b94b      	cbnz	r3, 8010d32 <RDMDiscovery::Process()+0x346>
 8010d1e:	2205      	movs	r2, #5
 8010d20:	f880 3e18 	strb.w	r3, [r0, #3608]	@ 0xe18
 8010d24:	f8c0 2e10 	str.w	r2, [r0, #3600]	@ 0xe10
 8010d28:	f240 13a5 	movw	r3, #421	@ 0x1a5
 8010d2c:	2201      	movs	r2, #1
 8010d2e:	2103      	movs	r1, #3
 8010d30:	e78f      	b.n	8010c52 <RDMDiscovery::Process()+0x266>
 8010d32:	f890 5e18 	ldrb.w	r5, [r0, #3608]	@ 0xe18
 8010d36:	bb9d      	cbnz	r5, 8010da0 <RDMDiscovery::Process()+0x3b4>
 8010d38:	f8d0 3ddc 	ldr.w	r3, [r0, #3548]	@ 0xddc
 8010d3c:	f8d0 2dd8 	ldr.w	r2, [r0, #3544]	@ 0xdd8
 8010d40:	4916      	ldr	r1, [pc, #88]	@ (8010d9c <RDMDiscovery::Process()+0x3b0>)
 8010d42:	041b      	lsls	r3, r3, #16
 8010d44:	ea43 4312 	orr.w	r3, r3, r2, lsr #16
 8010d48:	0412      	lsls	r2, r2, #16
 8010d4a:	ba1b      	rev	r3, r3
 8010d4c:	f600 56f8 	addw	r6, r0, #3576	@ 0xdf8
 8010d50:	ba12      	rev	r2, r2
 8010d52:	e9c1 3200 	strd	r3, r2, [r1]
 8010d56:	4630      	mov	r0, r6
 8010d58:	2206      	movs	r2, #6
 8010d5a:	f7ff fc4f 	bl	80105fc <memcpy.isra.0>
 8010d5e:	2310      	movs	r3, #16
 8010d60:	7523      	strb	r3, [r4, #20]
 8010d62:	2302      	movs	r3, #2
 8010d64:	75a3      	strb	r3, [r4, #22]
 8010d66:	2206      	movs	r2, #6
 8010d68:	4631      	mov	r1, r6
 8010d6a:	1ce0      	adds	r0, r4, #3
 8010d6c:	7565      	strb	r5, [r4, #21]
 8010d6e:	f7ff fc45 	bl	80105fc <memcpy.isra.0>
 8010d72:	462a      	mov	r2, r5
 8010d74:	4629      	mov	r1, r5
 8010d76:	4620      	mov	r0, r4
 8010d78:	f7ff fcb2 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010d7c:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010d80:	4621      	mov	r1, r4
 8010d82:	f7ff fc6b 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010d86:	f7ff fc19 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010d8a:	2301      	movs	r3, #1
 8010d8c:	f8c4 0e14 	str.w	r0, [r4, #3604]	@ 0xe14
 8010d90:	f884 3e18 	strb.w	r3, [r4, #3608]	@ 0xe18
 8010d94:	e67e      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010d96:	bf00      	nop
 8010d98:	0801e80f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr, pc}
 8010d9c:	20001c38 	andcs	r1, r0, r8, lsr ip
 8010da0:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8010da4:	f7ff fc94 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010da8:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
 8010dac:	b1d0      	cbz	r0, 8010de4 <RDMDiscovery::Process()+0x3f8>
 8010dae:	7d03      	ldrb	r3, [r0, #20]
 8010db0:	2b11      	cmp	r3, #17
 8010db2:	f47f ae6f 	bne.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010db6:	f604 56f8 	addw	r6, r4, #3576	@ 0xdf8
 8010dba:	f100 0109 	add.w	r1, r0, #9
 8010dbe:	2206      	movs	r2, #6
 8010dc0:	4630      	mov	r0, r6
 8010dc2:	f7fb ff40 	bl	800cc46 <memcmp>
 8010dc6:	4605      	mov	r5, r0
 8010dc8:	2800      	cmp	r0, #0
 8010dca:	f47f ae63 	bne.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010dce:	f8d4 0114 	ldr.w	r0, [r4, #276]	@ 0x114
 8010dd2:	4631      	mov	r1, r6
 8010dd4:	f7ff fc1b 	bl	801060e <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>
 8010dd8:	2305      	movs	r3, #5
 8010dda:	f8c4 3e10 	str.w	r3, [r4, #3600]	@ 0xe10
 8010dde:	f884 5e18 	strb.w	r5, [r4, #3608]	@ 0xe18
 8010de2:	e670      	b.n	8010ac6 <RDMDiscovery::Process()+0xda>
 8010de4:	f7ff fbea 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010de8:	f8d4 3e14 	ldr.w	r3, [r4, #3604]	@ 0xe14
 8010dec:	1ac0      	subs	r0, r0, r3
 8010dee:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 8010df2:	4298      	cmp	r0, r3
 8010df4:	f67f ae4e 	bls.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010df8:	f8d4 3e10 	ldr.w	r3, [r4, #3600]	@ 0xe10
 8010dfc:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010e00:	3b01      	subs	r3, #1
 8010e02:	f8c4 3e10 	str.w	r3, [r4, #3600]	@ 0xe10
 8010e06:	4621      	mov	r1, r4
 8010e08:	f7ff fc28 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010e0c:	f7ff fbd6 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010e10:	f8c4 0e14 	str.w	r0, [r4, #3604]	@ 0xe14
 8010e14:	e63e      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010e16:	f8d0 3104 	ldr.w	r3, [r0, #260]	@ 0x104
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	f43f ae53 	beq.w	8010ac6 <RDMDiscovery::Process()+0xda>
 8010e20:	f600 6125 	addw	r1, r0, #3621	@ 0xe25
 8010e24:	f7ff fd7e 	bl	8010924 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)>
 8010e28:	b120      	cbz	r0, 8010e34 <RDMDiscovery::Process()+0x448>
 8010e2a:	f240 13df 	movw	r3, #479	@ 0x1df
 8010e2e:	2201      	movs	r2, #1
 8010e30:	2106      	movs	r1, #6
 8010e32:	e70e      	b.n	8010c52 <RDMDiscovery::Process()+0x266>
 8010e34:	f8d4 7ddc 	ldr.w	r7, [r4, #3548]	@ 0xddc
 8010e38:	f8d4 1dec 	ldr.w	r1, [r4, #3564]	@ 0xdec
 8010e3c:	f8d4 6dd8 	ldr.w	r6, [r4, #3544]	@ 0xdd8
 8010e40:	f8d4 5de8 	ldr.w	r5, [r4, #3560]	@ 0xde8
 8010e44:	084b      	lsrs	r3, r1, #1
 8010e46:	087a      	lsrs	r2, r7, #1
 8010e48:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 8010e4c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8010e50:	4413      	add	r3, r2
 8010e52:	f3c7 0e0e 	ubfx	lr, r7, #0, #15
 8010e56:	1972      	adds	r2, r6, r5
 8010e58:	f3c1 080e 	ubfx	r8, r1, #0, #15
 8010e5c:	eb4e 0e08 	adc.w	lr, lr, r8
 8010e60:	0852      	lsrs	r2, r2, #1
 8010e62:	ea42 72ce 	orr.w	r2, r2, lr, lsl #31
 8010e66:	1880      	adds	r0, r0, r2
 8010e68:	f8d4 2148 	ldr.w	r2, [r4, #328]	@ 0x148
 8010e6c:	f8c4 0de0 	str.w	r0, [r4, #3552]	@ 0xde0
 8010e70:	eb03 035e 	add.w	r3, r3, lr, lsr #1
 8010e74:	2ac7      	cmp	r2, #199	@ 0xc7
 8010e76:	f8c4 3de4 	str.w	r3, [r4, #3556]	@ 0xde4
 8010e7a:	d013      	beq.n	8010ea4 <RDMDiscovery::Process()+0x4b8>
 8010e7c:	3201      	adds	r2, #1
 8010e7e:	eb04 1c02 	add.w	ip, r4, r2, lsl #4
 8010e82:	f8c4 2148 	str.w	r2, [r4, #328]	@ 0x148
 8010e86:	e9cc 6754 	strd	r6, r7, [ip, #336]	@ 0x150
 8010e8a:	1c56      	adds	r6, r2, #1
 8010e8c:	eb04 1606 	add.w	r6, r4, r6, lsl #4
 8010e90:	e9c6 0352 	strd	r0, r3, [r6, #328]	@ 0x148
 8010e94:	f8d4 6dd0 	ldr.w	r6, [r4, #3536]	@ 0xdd0
 8010e98:	4296      	cmp	r6, r2
 8010e9a:	bfac      	ite	ge
 8010e9c:	f8c4 6dd0 	strge.w	r6, [r4, #3536]	@ 0xdd0
 8010ea0:	f8c4 2dd0 	strlt.w	r2, [r4, #3536]	@ 0xdd0
 8010ea4:	f8d4 2148 	ldr.w	r2, [r4, #328]	@ 0x148
 8010ea8:	3001      	adds	r0, #1
 8010eaa:	f143 0300 	adc.w	r3, r3, #0
 8010eae:	2ac7      	cmp	r2, #199	@ 0xc7
 8010eb0:	d013      	beq.n	8010eda <RDMDiscovery::Process()+0x4ee>
 8010eb2:	3201      	adds	r2, #1
 8010eb4:	eb04 1602 	add.w	r6, r4, r2, lsl #4
 8010eb8:	f8c4 2148 	str.w	r2, [r4, #328]	@ 0x148
 8010ebc:	e9c6 0354 	strd	r0, r3, [r6, #336]	@ 0x150
 8010ec0:	1c53      	adds	r3, r2, #1
 8010ec2:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8010ec6:	e9c3 5152 	strd	r5, r1, [r3, #328]	@ 0x148
 8010eca:	f8d4 3dd0 	ldr.w	r3, [r4, #3536]	@ 0xdd0
 8010ece:	4293      	cmp	r3, r2
 8010ed0:	bfac      	ite	ge
 8010ed2:	f8c4 3dd0 	strge.w	r3, [r4, #3536]	@ 0xdd0
 8010ed6:	f8c4 2dd0 	strlt.w	r2, [r4, #3536]	@ 0xdd0
 8010eda:	f240 13eb 	movw	r3, #491	@ 0x1eb
 8010ede:	e725      	b.n	8010d2c <RDMDiscovery::Process()+0x340>
 8010ee0:	f8d0 3e1c 	ldr.w	r3, [r0, #3612]	@ 0xe1c
 8010ee4:	b91b      	cbnz	r3, 8010eee <RDMDiscovery::Process()+0x502>
 8010ee6:	f884 3e24 	strb.w	r3, [r4, #3620]	@ 0xe24
 8010eea:	2307      	movs	r3, #7
 8010eec:	e5a0      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 8010eee:	f890 5e24 	ldrb.w	r5, [r0, #3620]	@ 0xe24
 8010ef2:	b9fd      	cbnz	r5, 8010f34 <RDMDiscovery::Process()+0x548>
 8010ef4:	2310      	movs	r3, #16
 8010ef6:	7503      	strb	r3, [r0, #20]
 8010ef8:	2302      	movs	r3, #2
 8010efa:	7583      	strb	r3, [r0, #22]
 8010efc:	7545      	strb	r5, [r0, #21]
 8010efe:	f600 6125 	addw	r1, r0, #3621	@ 0xe25
 8010f02:	2206      	movs	r2, #6
 8010f04:	3003      	adds	r0, #3
 8010f06:	f7ff fb79 	bl	80105fc <memcpy.isra.0>
 8010f0a:	462a      	mov	r2, r5
 8010f0c:	4629      	mov	r1, r5
 8010f0e:	4620      	mov	r0, r4
 8010f10:	f7ff fbe6 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010f14:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010f18:	4621      	mov	r1, r4
 8010f1a:	f7ff fb9f 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010f1e:	2305      	movs	r3, #5
 8010f20:	f8c4 3e1c 	str.w	r3, [r4, #3612]	@ 0xe1c
 8010f24:	f7ff fb4a 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010f28:	2301      	movs	r3, #1
 8010f2a:	f8c4 0e20 	str.w	r0, [r4, #3616]	@ 0xe20
 8010f2e:	f884 3e24 	strb.w	r3, [r4, #3620]	@ 0xe24
 8010f32:	e5af      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010f34:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8010f38:	f7ff fbca 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8010f3c:	4605      	mov	r5, r0
 8010f3e:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
 8010f42:	b1f8      	cbz	r0, 8010f84 <RDMDiscovery::Process()+0x598>
 8010f44:	7d03      	ldrb	r3, [r0, #20]
 8010f46:	2b11      	cmp	r3, #17
 8010f48:	d104      	bne.n	8010f54 <RDMDiscovery::Process()+0x568>
 8010f4a:	f8b0 3015 	ldrh.w	r3, [r0, #21]
 8010f4e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010f52:	d004      	beq.n	8010f5e <RDMDiscovery::Process()+0x572>
 8010f54:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f58:	484c      	ldr	r0, [pc, #304]	@ (801108c <RDMDiscovery::Process()+0x6a0>)
 8010f5a:	f009 b912 	b.w	801a182 <puts>
 8010f5e:	f604 6625 	addw	r6, r4, #3621	@ 0xe25
 8010f62:	f100 0109 	add.w	r1, r0, #9
 8010f66:	2206      	movs	r2, #6
 8010f68:	4630      	mov	r0, r6
 8010f6a:	f7fb fe6c 	bl	800cc46 <memcmp>
 8010f6e:	b920      	cbnz	r0, 8010f7a <RDMDiscovery::Process()+0x58e>
 8010f70:	f8d4 0114 	ldr.w	r0, [r4, #276]	@ 0x114
 8010f74:	4631      	mov	r1, r6
 8010f76:	f7ff fb4a 	bl	801060e <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>
 8010f7a:	2305      	movs	r3, #5
 8010f7c:	f8c4 3e1c 	str.w	r3, [r4, #3612]	@ 0xe1c
 8010f80:	2300      	movs	r3, #0
 8010f82:	e7b0      	b.n	8010ee6 <RDMDiscovery::Process()+0x4fa>
 8010f84:	f7ff fb1a 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010f88:	f8d4 3e20 	ldr.w	r3, [r4, #3616]	@ 0xe20
 8010f8c:	1ac0      	subs	r0, r0, r3
 8010f8e:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 8010f92:	4298      	cmp	r0, r3
 8010f94:	f67f ad7e 	bls.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8010f98:	f8d4 3e1c 	ldr.w	r3, [r4, #3612]	@ 0xe1c
 8010f9c:	f884 5e24 	strb.w	r5, [r4, #3620]	@ 0xe24
 8010fa0:	3b01      	subs	r3, #1
 8010fa2:	f8c4 3e1c 	str.w	r3, [r4, #3612]	@ 0xe1c
 8010fa6:	e575      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010fa8:	f8d0 3e2c 	ldr.w	r3, [r0, #3628]	@ 0xe2c
 8010fac:	b93b      	cbnz	r3, 8010fbe <RDMDiscovery::Process()+0x5d2>
 8010fae:	2205      	movs	r2, #5
 8010fb0:	f880 3e34 	strb.w	r3, [r0, #3636]	@ 0xe34
 8010fb4:	f8c0 2e2c 	str.w	r2, [r0, #3628]	@ 0xe2c
 8010fb8:	f240 232d 	movw	r3, #557	@ 0x22d
 8010fbc:	e6b6      	b.n	8010d2c <RDMDiscovery::Process()+0x340>
 8010fbe:	f890 5e34 	ldrb.w	r5, [r0, #3636]	@ 0xe34
 8010fc2:	b9dd      	cbnz	r5, 8010ffc <RDMDiscovery::Process()+0x610>
 8010fc4:	4932      	ldr	r1, [pc, #200]	@ (8011090 <RDMDiscovery::Process()+0x6a4>)
 8010fc6:	2206      	movs	r2, #6
 8010fc8:	3003      	adds	r0, #3
 8010fca:	f7ff fb17 	bl	80105fc <memcpy.isra.0>
 8010fce:	2310      	movs	r3, #16
 8010fd0:	7565      	strb	r5, [r4, #21]
 8010fd2:	2501      	movs	r5, #1
 8010fd4:	7523      	strb	r3, [r4, #20]
 8010fd6:	220c      	movs	r2, #12
 8010fd8:	f604 51fe 	addw	r1, r4, #3582	@ 0xdfe
 8010fdc:	4620      	mov	r0, r4
 8010fde:	75a5      	strb	r5, [r4, #22]
 8010fe0:	f7ff fb7e 	bl	80106e0 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 8010fe4:	f8d4 0110 	ldr.w	r0, [r4, #272]	@ 0x110
 8010fe8:	4621      	mov	r1, r4
 8010fea:	f7ff fb37 	bl	801065c <Rdm::Send(unsigned long, TRdmMessage*)>
 8010fee:	f7ff fae5 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8010ff2:	f884 5e34 	strb.w	r5, [r4, #3636]	@ 0xe34
 8010ff6:	f8c4 0e30 	str.w	r0, [r4, #3632]	@ 0xe30
 8010ffa:	e54b      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8010ffc:	f8d0 0110 	ldr.w	r0, [r0, #272]	@ 0x110
 8011000:	f7ff fb66 	bl	80106d0 <Rdm::Receive(unsigned long)>
 8011004:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
 8011008:	b1d0      	cbz	r0, 8011040 <RDMDiscovery::Process()+0x654>
 801100a:	f604 6525 	addw	r5, r4, #3621	@ 0xe25
 801100e:	4629      	mov	r1, r5
 8011010:	4620      	mov	r0, r4
 8011012:	f7ff fc87 	bl	8010924 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)>
 8011016:	b950      	cbnz	r0, 801102e <RDMDiscovery::Process()+0x642>
 8011018:	4629      	mov	r1, r5
 801101a:	4620      	mov	r0, r4
 801101c:	f7ff fc82 	bl	8010924 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char*)>
 8011020:	b970      	cbnz	r0, 8011040 <RDMDiscovery::Process()+0x654>
 8011022:	2305      	movs	r3, #5
 8011024:	f8c4 3e2c 	str.w	r3, [r4, #3628]	@ 0xe2c
 8011028:	f884 0e34 	strb.w	r0, [r4, #3636]	@ 0xe34
 801102c:	e500      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 801102e:	2305      	movs	r3, #5
 8011030:	f8c4 3e2c 	str.w	r3, [r4, #3628]	@ 0xe2c
 8011034:	2300      	movs	r3, #0
 8011036:	f884 3e34 	strb.w	r3, [r4, #3636]	@ 0xe34
 801103a:	f240 2342 	movw	r3, #578	@ 0x242
 801103e:	e6f6      	b.n	8010e2e <RDMDiscovery::Process()+0x442>
 8011040:	f7ff fabc 	bl	80105bc <Hardware::Micros() [clone .isra.0]>
 8011044:	f8d4 3e30 	ldr.w	r3, [r4, #3632]	@ 0xe30
 8011048:	1ac0      	subs	r0, r0, r3
 801104a:	f241 63a8 	movw	r3, #5800	@ 0x16a8
 801104e:	4298      	cmp	r0, r3
 8011050:	f67f ad20 	bls.w	8010a94 <RDMDiscovery::Process()+0xa8>
 8011054:	f8d4 3e2c 	ldr.w	r3, [r4, #3628]	@ 0xe2c
 8011058:	3b01      	subs	r3, #1
 801105a:	f8c4 3e2c 	str.w	r3, [r4, #3628]	@ 0xe2c
 801105e:	2300      	movs	r3, #0
 8011060:	f884 3e34 	strb.w	r3, [r4, #3636]	@ 0xe34
 8011064:	e516      	b.n	8010a94 <RDMDiscovery::Process()+0xa8>
 8011066:	2301      	movs	r3, #1
 8011068:	f880 3118 	strb.w	r3, [r0, #280]	@ 0x118
 801106c:	2300      	movs	r3, #0
 801106e:	e4df      	b.n	8010a30 <RDMDiscovery::Process()+0x44>
 8011070:	2dc7      	cmp	r5, #199	@ 0xc7
 8011072:	f47f ad4e 	bne.w	8010b12 <RDMDiscovery::Process()+0x126>
 8011076:	4906      	ldr	r1, [pc, #24]	@ (8011090 <RDMDiscovery::Process()+0x6a4>)
 8011078:	2206      	movs	r2, #6
 801107a:	f206 40ce 	addw	r0, r6, #1230	@ 0x4ce
 801107e:	f7ff fabd 	bl	80105fc <memcpy.isra.0>
 8011082:	6833      	ldr	r3, [r6, #0]
 8011084:	3b01      	subs	r3, #1
 8011086:	6033      	str	r3, [r6, #0]
 8011088:	e530      	b.n	8010aec <RDMDiscovery::Process()+0x100>
 801108a:	bf00      	nop
 801108c:	0801b315 	stmdaeq	r1, {r0, r2, r4, r8, r9, ip, sp, pc}
 8011090:	0801e80f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr, pc}

08011094 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>:
 8011094:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011096:	88c6      	ldrh	r6, [r0, #6]
 8011098:	8885      	ldrh	r5, [r0, #4]
 801109a:	42ae      	cmp	r6, r5
 801109c:	d216      	bcs.n	80110cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x38>
 801109e:	4604      	mov	r4, r0
 80110a0:	6800      	ldr	r0, [r0, #0]
 80110a2:	1bad      	subs	r5, r5, r6
 80110a4:	4430      	add	r0, r6
 80110a6:	7a26      	ldrb	r6, [r4, #8]
 80110a8:	b923      	cbnz	r3, 80110b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x20>
 80110aa:	b926      	cbnz	r6, 80110b6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x22>
 80110ac:	9200      	str	r2, [sp, #0]
 80110ae:	460b      	mov	r3, r1
 80110b0:	4a09      	ldr	r2, [pc, #36]	@ (80110d8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x44>)
 80110b2:	e003      	b.n	80110bc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 80110b4:	b166      	cbz	r6, 80110d0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x3c>
 80110b6:	9200      	str	r2, [sp, #0]
 80110b8:	4a08      	ldr	r2, [pc, #32]	@ (80110dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x48>)
 80110ba:	460b      	mov	r3, r1
 80110bc:	4629      	mov	r1, r5
 80110be:	f009 f833 	bl	801a128 <snprintf>
 80110c2:	4285      	cmp	r5, r0
 80110c4:	bfa2      	ittt	ge
 80110c6:	88e3      	ldrhge	r3, [r4, #6]
 80110c8:	181b      	addge	r3, r3, r0
 80110ca:	80e3      	strhge	r3, [r4, #6]
 80110cc:	b002      	add	sp, #8
 80110ce:	bd70      	pop	{r4, r5, r6, pc}
 80110d0:	9200      	str	r2, [sp, #0]
 80110d2:	460b      	mov	r3, r1
 80110d4:	4a02      	ldr	r2, [pc, #8]	@ (80110e0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x4c>)
 80110d6:	e7f1      	b.n	80110bc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]+0x28>
 80110d8:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 80110dc:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 80110e0:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

080110e4 <StoreDmxSend::Copy(dmxsendparams::Params*)>:
 80110e4:	b507      	push	{r0, r1, r2, lr}
 80110e6:	2300      	movs	r3, #0
 80110e8:	2101      	movs	r1, #1
 80110ea:	e9cd 3100 	strd	r3, r1, [sp]
 80110ee:	4602      	mov	r2, r0
 80110f0:	4803      	ldr	r0, [pc, #12]	@ (8011100 <StoreDmxSend::Copy(dmxsendparams::Params*)+0x1c>)
 80110f2:	230a      	movs	r3, #10
 80110f4:	6800      	ldr	r0, [r0, #0]
 80110f6:	f005 f991 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 80110fa:	b003      	add	sp, #12
 80110fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8011100:	20002a00 	andcs	r2, r0, r0, lsl #20

08011104 <DmxParams::DmxParams()>:
 8011104:	2200      	movs	r2, #0
 8011106:	7002      	strb	r2, [r0, #0]
 8011108:	7042      	strb	r2, [r0, #1]
 801110a:	7082      	strb	r2, [r0, #2]
 801110c:	70c2      	strb	r2, [r0, #3]
 801110e:	f06f 014f 	mvn.w	r1, #79	@ 0x4f
 8011112:	7142      	strb	r2, [r0, #5]
 8011114:	71c2      	strb	r2, [r0, #7]
 8011116:	2228      	movs	r2, #40	@ 0x28
 8011118:	7101      	strb	r1, [r0, #4]
 801111a:	7202      	strb	r2, [r0, #8]
 801111c:	210c      	movs	r1, #12
 801111e:	22ff      	movs	r2, #255	@ 0xff
 8011120:	7181      	strb	r1, [r0, #6]
 8011122:	7242      	strb	r2, [r0, #9]
 8011124:	4770      	bx	lr

08011126 <DmxParams::Load()>:
 8011126:	b508      	push	{r3, lr}
 8011128:	2200      	movs	r2, #0
 801112a:	7002      	strb	r2, [r0, #0]
 801112c:	7042      	strb	r2, [r0, #1]
 801112e:	7082      	strb	r2, [r0, #2]
 8011130:	70c2      	strb	r2, [r0, #3]
 8011132:	f7ff ffd7 	bl	80110e4 <StoreDmxSend::Copy(dmxsendparams::Params*)>
 8011136:	bd08      	pop	{r3, pc}

08011138 <DmxParams::Load(char const*, unsigned long)>:
 8011138:	b5f0      	push	{r4, r5, r6, r7, lr}
 801113a:	2500      	movs	r5, #0
 801113c:	b087      	sub	sp, #28
 801113e:	4604      	mov	r4, r0
 8011140:	460e      	mov	r6, r1
 8011142:	4617      	mov	r7, r2
 8011144:	7005      	strb	r5, [r0, #0]
 8011146:	7045      	strb	r5, [r0, #1]
 8011148:	7085      	strb	r5, [r0, #2]
 801114a:	70c5      	strb	r5, [r0, #3]
 801114c:	4602      	mov	r2, r0
 801114e:	490c      	ldr	r1, [pc, #48]	@ (8011180 <DmxParams::Load(char const*, unsigned long)+0x48>)
 8011150:	a804      	add	r0, sp, #16
 8011152:	f005 fe3f 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011156:	463a      	mov	r2, r7
 8011158:	4631      	mov	r1, r6
 801115a:	a804      	add	r0, sp, #16
 801115c:	f005 fe3e 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 8011160:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8011164:	230a      	movs	r3, #10
 8011166:	4807      	ldr	r0, [pc, #28]	@ (8011184 <DmxParams::Load(char const*, unsigned long)+0x4c>)
 8011168:	9300      	str	r3, [sp, #0]
 801116a:	462a      	mov	r2, r5
 801116c:	4623      	mov	r3, r4
 801116e:	2101      	movs	r1, #1
 8011170:	6800      	ldr	r0, [r0, #0]
 8011172:	f005 f92d 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8011176:	a804      	add	r0, sp, #16
 8011178:	f005 fe2f 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 801117c:	b007      	add	sp, #28
 801117e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011180:	0801125d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, ip}
 8011184:	20002a00 	andcs	r2, r0, r0, lsl #20

08011188 <DmxParams::callbackFunction(char const*)>:
 8011188:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801118a:	460d      	mov	r5, r1
 801118c:	4604      	mov	r4, r0
 801118e:	492f      	ldr	r1, [pc, #188]	@ (801124c <DmxParams::callbackFunction(char const*)+0xc4>)
 8011190:	f10d 0206 	add.w	r2, sp, #6
 8011194:	4628      	mov	r0, r5
 8011196:	f005 feb0 	bl	8016efa <Sscan::Uint16(char const*, char const*, unsigned short&)>
 801119a:	b9a0      	cbnz	r0, 80111c6 <DmxParams::callbackFunction(char const*)+0x3e>
 801119c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80111a0:	6823      	ldr	r3, [r4, #0]
 80111a2:	2a5b      	cmp	r2, #91	@ 0x5b
 80111a4:	d907      	bls.n	80111b6 <DmxParams::callbackFunction(char const*)+0x2e>
 80111a6:	2ab0      	cmp	r2, #176	@ 0xb0
 80111a8:	d005      	beq.n	80111b6 <DmxParams::callbackFunction(char const*)+0x2e>
 80111aa:	80a2      	strh	r2, [r4, #4]
 80111ac:	f043 0301 	orr.w	r3, r3, #1
 80111b0:	6023      	str	r3, [r4, #0]
 80111b2:	b003      	add	sp, #12
 80111b4:	bd30      	pop	{r4, r5, pc}
 80111b6:	f06f 024f 	mvn.w	r2, #79	@ 0x4f
 80111ba:	7122      	strb	r2, [r4, #4]
 80111bc:	2200      	movs	r2, #0
 80111be:	7162      	strb	r2, [r4, #5]
 80111c0:	f023 0301 	bic.w	r3, r3, #1
 80111c4:	e7f4      	b.n	80111b0 <DmxParams::callbackFunction(char const*)+0x28>
 80111c6:	4922      	ldr	r1, [pc, #136]	@ (8011250 <DmxParams::callbackFunction(char const*)+0xc8>)
 80111c8:	f10d 0206 	add.w	r2, sp, #6
 80111cc:	4628      	mov	r0, r5
 80111ce:	f005 fe94 	bl	8016efa <Sscan::Uint16(char const*, char const*, unsigned short&)>
 80111d2:	b970      	cbnz	r0, 80111f2 <DmxParams::callbackFunction(char const*)+0x6a>
 80111d4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80111d8:	6823      	ldr	r3, [r4, #0]
 80111da:	2a0c      	cmp	r2, #12
 80111dc:	bf93      	iteet	ls
 80111de:	220c      	movls	r2, #12
 80111e0:	80e2      	strhhi	r2, [r4, #6]
 80111e2:	f043 0302 	orrhi.w	r3, r3, #2
 80111e6:	71a2      	strbls	r2, [r4, #6]
 80111e8:	bf9c      	itt	ls
 80111ea:	71e0      	strbls	r0, [r4, #7]
 80111ec:	f023 0302 	bicls.w	r3, r3, #2
 80111f0:	e7de      	b.n	80111b0 <DmxParams::callbackFunction(char const*)+0x28>
 80111f2:	4918      	ldr	r1, [pc, #96]	@ (8011254 <DmxParams::callbackFunction(char const*)+0xcc>)
 80111f4:	f10d 0205 	add.w	r2, sp, #5
 80111f8:	4628      	mov	r0, r5
 80111fa:	f005 fe9a 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80111fe:	b950      	cbnz	r0, 8011216 <DmxParams::callbackFunction(char const*)+0x8e>
 8011200:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8011204:	6823      	ldr	r3, [r4, #0]
 8011206:	7222      	strb	r2, [r4, #8]
 8011208:	2a28      	cmp	r2, #40	@ 0x28
 801120a:	bf14      	ite	ne
 801120c:	f043 0304 	orrne.w	r3, r3, #4
 8011210:	f023 0304 	biceq.w	r3, r3, #4
 8011214:	e7cc      	b.n	80111b0 <DmxParams::callbackFunction(char const*)+0x28>
 8011216:	4910      	ldr	r1, [pc, #64]	@ (8011258 <DmxParams::callbackFunction(char const*)+0xd0>)
 8011218:	f10d 0206 	add.w	r2, sp, #6
 801121c:	4628      	mov	r0, r5
 801121e:	f005 fe6c 	bl	8016efa <Sscan::Uint16(char const*, char const*, unsigned short&)>
 8011222:	2800      	cmp	r0, #0
 8011224:	d1c5      	bne.n	80111b2 <DmxParams::callbackFunction(char const*)+0x2a>
 8011226:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801122a:	6823      	ldr	r3, [r4, #0]
 801122c:	1e91      	subs	r1, r2, #2
 801122e:	f5b1 7fff 	cmp.w	r1, #510	@ 0x1fe
 8011232:	bf3b      	ittet	cc
 8011234:	0852      	lsrcc	r2, r2, #1
 8011236:	f102 32ff 	addcc.w	r2, r2, #4294967295	@ 0xffffffff
 801123a:	22ff      	movcs	r2, #255	@ 0xff
 801123c:	7262      	strbcc	r2, [r4, #9]
 801123e:	bf32      	itee	cc
 8011240:	f043 0308 	orrcc.w	r3, r3, #8
 8011244:	7262      	strbcs	r2, [r4, #9]
 8011246:	f023 0308 	biccs.w	r3, r3, #8
 801124a:	e7b1      	b.n	80111b0 <DmxParams::callbackFunction(char const*)+0x28>
 801124c:	0801e855 	stmdaeq	r1, {r0, r2, r4, r6, fp, sp, lr, pc}
 8011250:	0801e84c 	stmdaeq	r1, {r2, r3, r6, fp, sp, lr, pc}
 8011254:	0801e83f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, fp, sp, lr, pc}
 8011258:	0801e833 	stmdaeq	r1, {r0, r1, r4, r5, fp, sp, lr, pc}

0801125c <DmxParams::staticCallbackFunction(void*, char const*)>:
 801125c:	f7ff bf94 	b.w	8011188 <DmxParams::callbackFunction(char const*)>

08011260 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)>:
 8011260:	b570      	push	{r4, r5, r6, lr}
 8011262:	4604      	mov	r4, r0
 8011264:	b086      	sub	sp, #24
 8011266:	4615      	mov	r5, r2
 8011268:	461e      	mov	r6, r3
 801126a:	b369      	cbz	r1, 80112c8 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x68>
 801126c:	220a      	movs	r2, #10
 801126e:	f008 fc38 	bl	8019ae2 <memmove>
 8011272:	462a      	mov	r2, r5
 8011274:	4930      	ldr	r1, [pc, #192]	@ (8011338 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xd8>)
 8011276:	4633      	mov	r3, r6
 8011278:	a803      	add	r0, sp, #12
 801127a:	f005 fcd5 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 801127e:	6823      	ldr	r3, [r4, #0]
 8011280:	88a2      	ldrh	r2, [r4, #4]
 8011282:	492e      	ldr	r1, [pc, #184]	@ (801133c <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xdc>)
 8011284:	f003 0301 	and.w	r3, r3, #1
 8011288:	a803      	add	r0, sp, #12
 801128a:	f7ff ff03 	bl	8011094 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 801128e:	6823      	ldr	r3, [r4, #0]
 8011290:	88e2      	ldrh	r2, [r4, #6]
 8011292:	492b      	ldr	r1, [pc, #172]	@ (8011340 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe0>)
 8011294:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8011298:	a803      	add	r0, sp, #12
 801129a:	f7ff fefb 	bl	8011094 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 801129e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80112a2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80112a6:	7a23      	ldrb	r3, [r4, #8]
 80112a8:	6821      	ldr	r1, [r4, #0]
 80112aa:	42aa      	cmp	r2, r5
 80112ac:	d21d      	bcs.n	80112ea <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x8a>
 80112ae:	9803      	ldr	r0, [sp, #12]
 80112b0:	0749      	lsls	r1, r1, #29
 80112b2:	4410      	add	r0, r2
 80112b4:	eba5 0502 	sub.w	r5, r5, r2
 80112b8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80112bc:	d407      	bmi.n	80112ce <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 80112be:	b93a      	cbnz	r2, 80112d0 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x70>
 80112c0:	9300      	str	r3, [sp, #0]
 80112c2:	4a20      	ldr	r2, [pc, #128]	@ (8011344 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe4>)
 80112c4:	4b20      	ldr	r3, [pc, #128]	@ (8011348 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 80112c6:	e006      	b.n	80112d6 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x76>
 80112c8:	f7ff ff0c 	bl	80110e4 <StoreDmxSend::Copy(dmxsendparams::Params*)>
 80112cc:	e7d1      	b.n	8011272 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x12>
 80112ce:	b37a      	cbz	r2, 8011330 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xd0>
 80112d0:	9300      	str	r3, [sp, #0]
 80112d2:	4a1e      	ldr	r2, [pc, #120]	@ (801134c <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xec>)
 80112d4:	4b1c      	ldr	r3, [pc, #112]	@ (8011348 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 80112d6:	4629      	mov	r1, r5
 80112d8:	f008 ff26 	bl	801a128 <snprintf>
 80112dc:	4285      	cmp	r5, r0
 80112de:	bfa2      	ittt	ge
 80112e0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80112e4:	18c0      	addge	r0, r0, r3
 80112e6:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80112ea:	7a62      	ldrb	r2, [r4, #9]
 80112ec:	6823      	ldr	r3, [r4, #0]
 80112ee:	4918      	ldr	r1, [pc, #96]	@ (8011350 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>)
 80112f0:	3201      	adds	r2, #1
 80112f2:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80112f6:	0052      	lsls	r2, r2, #1
 80112f8:	a803      	add	r0, sp, #12
 80112fa:	f7ff fecb 	bl	8011094 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, int) [clone .isra.0]>
 80112fe:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011302:	b17b      	cbz	r3, 8011324 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 8011304:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011308:	9b03      	ldr	r3, [sp, #12]
 801130a:	4413      	add	r3, r2
 801130c:	227d      	movs	r2, #125	@ 0x7d
 801130e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011312:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011316:	9903      	ldr	r1, [sp, #12]
 8011318:	54ca      	strb	r2, [r1, r3]
 801131a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801131e:	3301      	adds	r3, #1
 8011320:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011324:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011328:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801132a:	601a      	str	r2, [r3, #0]
 801132c:	b006      	add	sp, #24
 801132e:	bd70      	pop	{r4, r5, r6, pc}
 8011330:	9300      	str	r3, [sp, #0]
 8011332:	4a08      	ldr	r2, [pc, #32]	@ (8011354 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xf4>)
 8011334:	4b04      	ldr	r3, [pc, #16]	@ (8011348 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0xe8>)
 8011336:	e7ce      	b.n	80112d6 <DmxParams::Builder(dmxsendparams::Params const*, char*, unsigned long, unsigned long&)+0x76>
 8011338:	0801e860 	stmdaeq	r1, {r5, r6, fp, sp, lr, pc}
 801133c:	0801e855 	stmdaeq	r1, {r0, r2, r4, r6, fp, sp, lr, pc}
 8011340:	0801e84c 	stmdaeq	r1, {r2, r3, r6, fp, sp, lr, pc}
 8011344:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 8011348:	0801e83f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, fp, sp, lr, pc}
 801134c:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 8011350:	0801e833 	stmdaeq	r1, {r0, r1, r4, r5, fp, sp, lr, pc}
 8011354:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

08011358 <DmxParams::Set(Dmx*)>:
 8011358:	b538      	push	{r3, r4, r5, lr}
 801135a:	6803      	ldr	r3, [r0, #0]
 801135c:	4604      	mov	r4, r0
 801135e:	07d8      	lsls	r0, r3, #31
 8011360:	460d      	mov	r5, r1
 8011362:	d503      	bpl.n	801136c <DmxParams::Set(Dmx*)+0x14>
 8011364:	88a1      	ldrh	r1, [r4, #4]
 8011366:	4628      	mov	r0, r5
 8011368:	f000 fe62 	bl	8012030 <Dmx::SetDmxBreakTime(unsigned long)>
 801136c:	6823      	ldr	r3, [r4, #0]
 801136e:	0799      	lsls	r1, r3, #30
 8011370:	d503      	bpl.n	801137a <DmxParams::Set(Dmx*)+0x22>
 8011372:	88e1      	ldrh	r1, [r4, #6]
 8011374:	4628      	mov	r0, r5
 8011376:	f000 fe91 	bl	801209c <Dmx::SetDmxMabTime(unsigned long)>
 801137a:	6823      	ldr	r3, [r4, #0]
 801137c:	075a      	lsls	r2, r3, #29
 801137e:	d507      	bpl.n	8011390 <DmxParams::Set(Dmx*)+0x38>
 8011380:	7a21      	ldrb	r1, [r4, #8]
 8011382:	b111      	cbz	r1, 801138a <DmxParams::Set(Dmx*)+0x32>
 8011384:	4b08      	ldr	r3, [pc, #32]	@ (80113a8 <DmxParams::Set(Dmx*)+0x50>)
 8011386:	fbb3 f1f1 	udiv	r1, r3, r1
 801138a:	4628      	mov	r0, r5
 801138c:	f000 febc 	bl	8012108 <Dmx::SetDmxPeriodTime(unsigned long)>
 8011390:	6823      	ldr	r3, [r4, #0]
 8011392:	071b      	lsls	r3, r3, #28
 8011394:	d507      	bpl.n	80113a6 <DmxParams::Set(Dmx*)+0x4e>
 8011396:	7a61      	ldrb	r1, [r4, #9]
 8011398:	3101      	adds	r1, #1
 801139a:	4628      	mov	r0, r5
 801139c:	0049      	lsls	r1, r1, #1
 801139e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80113a2:	f000 bee1 	b.w	8012168 <Dmx::SetDmxSlots(unsigned short)>
 80113a6:	bd38      	pop	{r3, r4, r5, pc}
 80113a8:	000f4240 	andeq	r4, pc, r0, asr #4

080113ac <remoteconfig::dmx::json_get_ports(char*, unsigned long)>:
 80113ac:	235b      	movs	r3, #91	@ 0x5b
 80113ae:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80113b2:	4604      	mov	r4, r0
 80113b4:	f8df 905c 	ldr.w	r9, [pc, #92]	@ 8011414 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x68>
 80113b8:	f800 3b01 	strb.w	r3, [r0], #1
 80113bc:	f8d9 3000 	ldr.w	r3, [r9]
 80113c0:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 8011418 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x6c>
 80113c4:	695a      	ldr	r2, [r3, #20]
 80113c6:	4f11      	ldr	r7, [pc, #68]	@ (801140c <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x60>)
 80113c8:	2a01      	cmp	r2, #1
 80113ca:	bf0c      	ite	eq
 80113cc:	4643      	moveq	r3, r8
 80113ce:	463b      	movne	r3, r7
 80113d0:	460e      	mov	r6, r1
 80113d2:	9300      	str	r3, [sp, #0]
 80113d4:	4a0e      	ldr	r2, [pc, #56]	@ (8011410 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x64>)
 80113d6:	2341      	movs	r3, #65	@ 0x41
 80113d8:	3901      	subs	r1, #1
 80113da:	f008 fea5 	bl	801a128 <snprintf>
 80113de:	f8d9 3000 	ldr.w	r3, [r9]
 80113e2:	4a0b      	ldr	r2, [pc, #44]	@ (8011410 <remoteconfig::dmx::json_get_ports(char*, unsigned long)+0x64>)
 80113e4:	699b      	ldr	r3, [r3, #24]
 80113e6:	1c45      	adds	r5, r0, #1
 80113e8:	2b01      	cmp	r3, #1
 80113ea:	bf08      	it	eq
 80113ec:	4647      	moveq	r7, r8
 80113ee:	1960      	adds	r0, r4, r5
 80113f0:	9700      	str	r7, [sp, #0]
 80113f2:	2342      	movs	r3, #66	@ 0x42
 80113f4:	1b71      	subs	r1, r6, r5
 80113f6:	f008 fe97 	bl	801a128 <snprintf>
 80113fa:	4428      	add	r0, r5
 80113fc:	4404      	add	r4, r0
 80113fe:	235d      	movs	r3, #93	@ 0x5d
 8011400:	f804 3c01 	strb.w	r3, [r4, #-1]
 8011404:	b003      	add	sp, #12
 8011406:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801140a:	bf00      	nop
 801140c:	0801b0c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, ip, sp, pc}
 8011410:	0801b330 	stmdaeq	r1, {r4, r5, r8, r9, ip, sp, pc}
 8011414:	20001c4c 	andcs	r1, r0, ip, asr #24
 8011418:	0801b0c1 	stmdaeq	r1, {r0, r6, r7, ip, sp, pc}

0801141c <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)>:
 801141c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011420:	f040 0420 	orr.w	r4, r0, #32
 8011424:	460d      	mov	r5, r1
 8011426:	f1a4 0161 	sub.w	r1, r4, #97	@ 0x61
 801142a:	2901      	cmp	r1, #1
 801142c:	b088      	sub	sp, #32
 801142e:	4616      	mov	r6, r2
 8011430:	d81f      	bhi.n	8011472 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x56>
 8011432:	4b11      	ldr	r3, [pc, #68]	@ (8011478 <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x5c>)
 8011434:	6818      	ldr	r0, [r3, #0]
 8011436:	f000 fd8f 	bl	8011f58 <Dmx::GetTotalStatistics(unsigned long)>
 801143a:	6802      	ldr	r2, [r0, #0]
 801143c:	6841      	ldr	r1, [r0, #4]
 801143e:	6947      	ldr	r7, [r0, #20]
 8011440:	f8d0 c018 	ldr.w	ip, [r0, #24]
 8011444:	f8d0 e008 	ldr.w	lr, [r0, #8]
 8011448:	f8d0 800c 	ldr.w	r8, [r0, #12]
 801144c:	6900      	ldr	r0, [r0, #16]
 801144e:	9200      	str	r2, [sp, #0]
 8011450:	f1a4 0320 	sub.w	r3, r4, #32
 8011454:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8011458:	e9cd 1701 	strd	r1, r7, [sp, #4]
 801145c:	e9cd ce03 	strd	ip, lr, [sp, #12]
 8011460:	4a06      	ldr	r2, [pc, #24]	@ (801147c <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x60>)
 8011462:	b2db      	uxtb	r3, r3
 8011464:	4631      	mov	r1, r6
 8011466:	4628      	mov	r0, r5
 8011468:	f008 fe5e 	bl	801a128 <snprintf>
 801146c:	b008      	add	sp, #32
 801146e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011472:	2000      	movs	r0, #0
 8011474:	e7fa      	b.n	801146c <remoteconfig::dmx::json_get_portstatus(char, char*, unsigned long)+0x50>
 8011476:	bf00      	nop
 8011478:	20001c4c 	andcs	r1, r0, ip, asr #24
 801147c:	0801b350 	stmdaeq	r1, {r4, r6, r8, r9, ip, sp, pc}

08011480 <Dmx::StopData(unsigned long) [clone .part.0]>:
 8011480:	b430      	push	{r4, r5}
 8011482:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8011486:	4d1f      	ldr	r5, [pc, #124]	@ (8011504 <Dmx::StopData(unsigned long) [clone .part.0]+0x84>)
 8011488:	4a1f      	ldr	r2, [pc, #124]	@ (8011508 <Dmx::StopData(unsigned long) [clone .part.0]+0x88>)
 801148a:	6940      	ldr	r0, [r0, #20]
 801148c:	4b1f      	ldr	r3, [pc, #124]	@ (801150c <Dmx::StopData(unsigned long) [clone .part.0]+0x8c>)
 801148e:	2400      	movs	r4, #0
 8011490:	f845 4021 	str.w	r4, [r5, r1, lsl #2]
 8011494:	4d1e      	ldr	r5, [pc, #120]	@ (8011510 <Dmx::StopData(unsigned long) [clone .part.0]+0x90>)
 8011496:	2900      	cmp	r1, #0
 8011498:	bf18      	it	ne
 801149a:	4613      	movne	r3, r2
 801149c:	4a1d      	ldr	r2, [pc, #116]	@ (8011514 <Dmx::StopData(unsigned long) [clone .part.0]+0x94>)
 801149e:	bf18      	it	ne
 80114a0:	462a      	movne	r2, r5
 80114a2:	b9e8      	cbnz	r0, 80114e0 <Dmx::StopData(unsigned long) [clone .part.0]+0x60>
 80114a4:	4b1c      	ldr	r3, [pc, #112]	@ (8011518 <Dmx::StopData(unsigned long) [clone .part.0]+0x98>)
 80114a6:	f44f 7405 	mov.w	r4, #532	@ 0x214
 80114aa:	fb04 3101 	mla	r1, r4, r1, r3
 80114ae:	e002      	b.n	80114b6 <Dmx::StopData(unsigned long) [clone .part.0]+0x36>
 80114b0:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 80114b4:	b193      	cbz	r3, 80114dc <Dmx::StopData(unsigned long) [clone .part.0]+0x5c>
 80114b6:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 80114ba:	2b04      	cmp	r3, #4
 80114bc:	d1f8      	bne.n	80114b0 <Dmx::StopData(unsigned long) [clone .part.0]+0x30>
 80114be:	6813      	ldr	r3, [r2, #0]
 80114c0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80114c4:	6013      	str	r3, [r2, #0]
 80114c6:	f3bf 8f5f 	dmb	sy
 80114ca:	6813      	ldr	r3, [r2, #0]
 80114cc:	065b      	lsls	r3, r3, #25
 80114ce:	d5fa      	bpl.n	80114c6 <Dmx::StopData(unsigned long) [clone .part.0]+0x46>
 80114d0:	f8c1 0210 	str.w	r0, [r1, #528]	@ 0x210
 80114d4:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 80114d8:	2b00      	cmp	r3, #0
 80114da:	d1ec      	bne.n	80114b6 <Dmx::StopData(unsigned long) [clone .part.0]+0x36>
 80114dc:	bc30      	pop	{r4, r5}
 80114de:	4770      	bx	lr
 80114e0:	6818      	ldr	r0, [r3, #0]
 80114e2:	4a0e      	ldr	r2, [pc, #56]	@ (801151c <Dmx::StopData(unsigned long) [clone .part.0]+0x9c>)
 80114e4:	f020 0020 	bic.w	r0, r0, #32
 80114e8:	6018      	str	r0, [r3, #0]
 80114ea:	6818      	ldr	r0, [r3, #0]
 80114ec:	f020 0010 	bic.w	r0, r0, #16
 80114f0:	6018      	str	r0, [r3, #0]
 80114f2:	f240 531c 	movw	r3, #1308	@ 0x51c
 80114f6:	fb03 2301 	mla	r3, r3, r1, r2
 80114fa:	f8c3 4518 	str.w	r4, [r3, #1304]	@ 0x518
 80114fe:	bc30      	pop	{r4, r5}
 8011500:	4770      	bx	lr
 8011502:	bf00      	nop
 8011504:	200026e8 	andcs	r2, r0, r8, ror #13
 8011508:	4001140c 	andmi	r1, r1, ip, lsl #8
 801150c:	4000480c 	andmi	r4, r0, ip, lsl #16
 8011510:	40011400 	andmi	r1, r1, r0, lsl #8
 8011514:	40004800 	andmi	r4, r0, r0, lsl #16
 8011518:	2001c000 	andcs	ip, r1, r0
 801151c:	20001c5c 	andcs	r1, r0, ip, asr ip

08011520 <USART2_IRQHandler>:
 8011520:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 8011524:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011528:	06d2      	lsls	r2, r2, #27
 801152a:	d50b      	bpl.n	8011544 <USART2_IRQHandler+0x24>
 801152c:	4a57      	ldr	r2, [pc, #348]	@ (801168c <USART2_IRQHandler+0x16c>)
 801152e:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 8011532:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 8011536:	2b03      	cmp	r3, #3
 8011538:	d018      	beq.n	801156c <USART2_IRQHandler+0x4c>
 801153a:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 801153e:	2b08      	cmp	r3, #8
 8011540:	d02e      	beq.n	80115a0 <USART2_IRQHandler+0x80>
 8011542:	4770      	bx	lr
 8011544:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011548:	f012 0f02 	tst.w	r2, #2
 801154c:	4a4f      	ldr	r2, [pc, #316]	@ (801168c <USART2_IRQHandler+0x16c>)
 801154e:	d11f      	bne.n	8011590 <USART2_IRQHandler+0x70>
 8011550:	f8d3 1804 	ldr.w	r1, [r3, #2052]	@ 0x804
 8011554:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 8011558:	b2c9      	uxtb	r1, r1
 801155a:	2b08      	cmp	r3, #8
 801155c:	d810      	bhi.n	8011580 <USART2_IRQHandler+0x60>
 801155e:	e8df f003 	tbb	[pc, r3]
 8011562:	320f6962 	andcc	r6, pc, #1605632	@ 0x188000
 8011566:	7355430f 	cmpvc	r5, #1006632960	@ 0x3c000000
 801156a:	23000029 	movwcs	r0, #41	@ 0x29
 801156e:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 8011572:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 8011576:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801157a:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 801157e:	4770      	bx	lr
 8011580:	2300      	movs	r3, #0
 8011582:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 8011586:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 801158a:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 801158e:	4770      	bx	lr
 8011590:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
 8011594:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 8011598:	2b00      	cmp	r3, #0
 801159a:	d1d2      	bne.n	8011542 <USART2_IRQHandler+0x22>
 801159c:	2301      	movs	r3, #1
 801159e:	e7f4      	b.n	801158a <USART2_IRQHandler+0x6a>
 80115a0:	2300      	movs	r3, #0
 80115a2:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 80115a6:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 80115aa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80115ae:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 80115b2:	4770      	bx	lr
 80115b4:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 80115b8:	2b17      	cmp	r3, #23
 80115ba:	d8c2      	bhi.n	8011542 <USART2_IRQHandler+0x22>
 80115bc:	18d0      	adds	r0, r2, r3
 80115be:	3301      	adds	r3, #1
 80115c0:	f880 1410 	strb.w	r1, [r0, #1040]	@ 0x410
 80115c4:	e7f3      	b.n	80115ae <USART2_IRQHandler+0x8e>
 80115c6:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 80115ca:	1c43      	adds	r3, r0, #1
 80115cc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80115d0:	5411      	strb	r1, [r2, r0]
 80115d2:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 80115d6:	d9b4      	bls.n	8011542 <USART2_IRQHandler+0x22>
 80115d8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80115dc:	2100      	movs	r1, #0
 80115de:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 80115e2:	f8c2 1518 	str.w	r1, [r2, #1304]	@ 0x518
 80115e6:	4770      	bx	lr
 80115e8:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 80115ec:	eb02 0c03 	add.w	ip, r2, r3
 80115f0:	1c58      	adds	r0, r3, #1
 80115f2:	3b17      	subs	r3, #23
 80115f4:	2be9      	cmp	r3, #233	@ 0xe9
 80115f6:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 80115fa:	f8c2 0514 	str.w	r0, [r2, #1300]	@ 0x514
 80115fe:	d835      	bhi.n	801166c <USART2_IRQHandler+0x14c>
 8011600:	f892 3412 	ldrb.w	r3, [r2, #1042]	@ 0x412
 8011604:	4298      	cmp	r0, r3
 8011606:	d19c      	bne.n	8011542 <USART2_IRQHandler+0x22>
 8011608:	2306      	movs	r3, #6
 801160a:	e7be      	b.n	801158a <USART2_IRQHandler+0x6a>
 801160c:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 8011610:	eb02 0c03 	add.w	ip, r2, r3
 8011614:	2007      	movs	r0, #7
 8011616:	3301      	adds	r3, #1
 8011618:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 801161c:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 8011620:	f8c2 0518 	str.w	r0, [r2, #1304]	@ 0x518
 8011624:	4770      	bx	lr
 8011626:	2008      	movs	r0, #8
 8011628:	f8c2 0518 	str.w	r0, [r2, #1304]	@ 0x518
 801162c:	2301      	movs	r3, #1
 801162e:	f882 1410 	strb.w	r1, [r2, #1040]	@ 0x410
 8011632:	e7bc      	b.n	80115ae <USART2_IRQHandler+0x8e>
 8011634:	b301      	cbz	r1, 8011678 <USART2_IRQHandler+0x158>
 8011636:	29cc      	cmp	r1, #204	@ 0xcc
 8011638:	d1a2      	bne.n	8011580 <USART2_IRQHandler+0x60>
 801163a:	2001      	movs	r0, #1
 801163c:	f882 1410 	strb.w	r1, [r2, #1040]	@ 0x410
 8011640:	2305      	movs	r3, #5
 8011642:	f8c2 0514 	str.w	r0, [r2, #1300]	@ 0x514
 8011646:	e7a0      	b.n	801158a <USART2_IRQHandler+0x6a>
 8011648:	f8d2 3514 	ldr.w	r3, [r2, #1300]	@ 0x514
 801164c:	4810      	ldr	r0, [pc, #64]	@ (8011690 <USART2_IRQHandler+0x170>)
 801164e:	eb02 0c03 	add.w	ip, r2, r3
 8011652:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8011656:	f88c 1410 	strb.w	r1, [ip, #1040]	@ 0x410
 801165a:	2100      	movs	r1, #0
 801165c:	f8c2 3514 	str.w	r3, [r2, #1300]	@ 0x514
 8011660:	f8c2 1518 	str.w	r1, [r2, #1304]	@ 0x518
 8011664:	4b0b      	ldr	r3, [pc, #44]	@ (8011694 <USART2_IRQHandler+0x174>)
 8011666:	6842      	ldr	r2, [r0, #4]
 8011668:	601a      	str	r2, [r3, #0]
 801166a:	4770      	bx	lr
 801166c:	f5b0 7f81 	cmp.w	r0, #258	@ 0x102
 8011670:	f4ff af67 	bcc.w	8011542 <USART2_IRQHandler+0x22>
 8011674:	2300      	movs	r3, #0
 8011676:	e788      	b.n	801158a <USART2_IRQHandler+0x6a>
 8011678:	4807      	ldr	r0, [pc, #28]	@ (8011698 <USART2_IRQHandler+0x178>)
 801167a:	7011      	strb	r1, [r2, #0]
 801167c:	2301      	movs	r3, #1
 801167e:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 8011682:	6843      	ldr	r3, [r0, #4]
 8011684:	3301      	adds	r3, #1
 8011686:	2103      	movs	r1, #3
 8011688:	6043      	str	r3, [r0, #4]
 801168a:	e7aa      	b.n	80115e2 <USART2_IRQHandler+0xc2>
 801168c:	20001c5c 	andcs	r1, r0, ip, asr ip
 8011690:	e0001000 	and	r1, r0, r0
 8011694:	20002694 	mulcs	r0, r4, r6
 8011698:	20002698 	mulcs	r0, r8, r6

0801169c <USART5_IRQHandler>:
 801169c:	4b5b      	ldr	r3, [pc, #364]	@ (801180c <USART5_IRQHandler+0x170>)
 801169e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 80116a2:	06d2      	lsls	r2, r2, #27
 80116a4:	d50b      	bpl.n	80116be <USART5_IRQHandler+0x22>
 80116a6:	4a5a      	ldr	r2, [pc, #360]	@ (8011810 <USART5_IRQHandler+0x174>)
 80116a8:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 80116ac:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 80116b0:	2b03      	cmp	r3, #3
 80116b2:	d018      	beq.n	80116e6 <USART5_IRQHandler+0x4a>
 80116b4:	f8d2 3518 	ldr.w	r3, [r2, #1304]	@ 0x518
 80116b8:	2b08      	cmp	r3, #8
 80116ba:	d02e      	beq.n	801171a <USART5_IRQHandler+0x7e>
 80116bc:	4770      	bx	lr
 80116be:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 80116c2:	f012 0f02 	tst.w	r2, #2
 80116c6:	4a52      	ldr	r2, [pc, #328]	@ (8011810 <USART5_IRQHandler+0x174>)
 80116c8:	d11f      	bne.n	801170a <USART5_IRQHandler+0x6e>
 80116ca:	f8d3 1404 	ldr.w	r1, [r3, #1028]	@ 0x404
 80116ce:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 80116d2:	b2c9      	uxtb	r1, r1
 80116d4:	2b08      	cmp	r3, #8
 80116d6:	d810      	bhi.n	80116fa <USART5_IRQHandler+0x5e>
 80116d8:	e8df f003 	tbb	[pc, r3]
 80116dc:	320f6b64 	andcc	r6, pc, #100, 22	@ 0x19000
 80116e0:	7557450f 	ldrbvc	r4, [r7, #-1295]	@ 0xfffffaf1
 80116e4:	23000029 	movwcs	r0, #41	@ 0x29
 80116e8:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 80116ec:	f8d2 3720 	ldr.w	r3, [r2, #1824]	@ 0x720
 80116f0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80116f4:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 80116f8:	4770      	bx	lr
 80116fa:	2300      	movs	r3, #0
 80116fc:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 8011700:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 8011704:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 8011708:	4770      	bx	lr
 801170a:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 801170e:	f8d2 3a34 	ldr.w	r3, [r2, #2612]	@ 0xa34
 8011712:	2b00      	cmp	r3, #0
 8011714:	d1d2      	bne.n	80116bc <USART5_IRQHandler+0x20>
 8011716:	2301      	movs	r3, #1
 8011718:	e7f4      	b.n	8011704 <USART5_IRQHandler+0x68>
 801171a:	2300      	movs	r3, #0
 801171c:	f8c2 3a34 	str.w	r3, [r2, #2612]	@ 0xa34
 8011720:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 8011724:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8011728:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 801172c:	4770      	bx	lr
 801172e:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 8011732:	2b17      	cmp	r3, #23
 8011734:	d8c2      	bhi.n	80116bc <USART5_IRQHandler+0x20>
 8011736:	18d0      	adds	r0, r2, r3
 8011738:	3301      	adds	r3, #1
 801173a:	f880 192c 	strb.w	r1, [r0, #2348]	@ 0x92c
 801173e:	e7f3      	b.n	8011728 <USART5_IRQHandler+0x8c>
 8011740:	f8d2 3720 	ldr.w	r3, [r2, #1824]	@ 0x720
 8011744:	18d0      	adds	r0, r2, r3
 8011746:	3301      	adds	r3, #1
 8011748:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801174c:	f880 151c 	strb.w	r1, [r0, #1308]	@ 0x51c
 8011750:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 8011754:	d9b2      	bls.n	80116bc <USART5_IRQHandler+0x20>
 8011756:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801175a:	2100      	movs	r1, #0
 801175c:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 8011760:	f8c2 1a34 	str.w	r1, [r2, #2612]	@ 0xa34
 8011764:	4770      	bx	lr
 8011766:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 801176a:	eb02 0c03 	add.w	ip, r2, r3
 801176e:	1c58      	adds	r0, r3, #1
 8011770:	3b17      	subs	r3, #23
 8011772:	2be9      	cmp	r3, #233	@ 0xe9
 8011774:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 8011778:	f8c2 0a30 	str.w	r0, [r2, #2608]	@ 0xa30
 801177c:	d835      	bhi.n	80117ea <USART5_IRQHandler+0x14e>
 801177e:	f892 392e 	ldrb.w	r3, [r2, #2350]	@ 0x92e
 8011782:	4298      	cmp	r0, r3
 8011784:	d19a      	bne.n	80116bc <USART5_IRQHandler+0x20>
 8011786:	2306      	movs	r3, #6
 8011788:	e7bc      	b.n	8011704 <USART5_IRQHandler+0x68>
 801178a:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 801178e:	eb02 0c03 	add.w	ip, r2, r3
 8011792:	2007      	movs	r0, #7
 8011794:	3301      	adds	r3, #1
 8011796:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 801179a:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 801179e:	f8c2 0a34 	str.w	r0, [r2, #2612]	@ 0xa34
 80117a2:	4770      	bx	lr
 80117a4:	2008      	movs	r0, #8
 80117a6:	f8c2 0a34 	str.w	r0, [r2, #2612]	@ 0xa34
 80117aa:	2301      	movs	r3, #1
 80117ac:	f882 192c 	strb.w	r1, [r2, #2348]	@ 0x92c
 80117b0:	e7ba      	b.n	8011728 <USART5_IRQHandler+0x8c>
 80117b2:	b301      	cbz	r1, 80117f6 <USART5_IRQHandler+0x15a>
 80117b4:	29cc      	cmp	r1, #204	@ 0xcc
 80117b6:	d1a0      	bne.n	80116fa <USART5_IRQHandler+0x5e>
 80117b8:	2001      	movs	r0, #1
 80117ba:	f882 192c 	strb.w	r1, [r2, #2348]	@ 0x92c
 80117be:	2305      	movs	r3, #5
 80117c0:	f8c2 0a30 	str.w	r0, [r2, #2608]	@ 0xa30
 80117c4:	e79e      	b.n	8011704 <USART5_IRQHandler+0x68>
 80117c6:	f8d2 3a30 	ldr.w	r3, [r2, #2608]	@ 0xa30
 80117ca:	4812      	ldr	r0, [pc, #72]	@ (8011814 <USART5_IRQHandler+0x178>)
 80117cc:	eb02 0c03 	add.w	ip, r2, r3
 80117d0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80117d4:	f88c 192c 	strb.w	r1, [ip, #2348]	@ 0x92c
 80117d8:	2100      	movs	r1, #0
 80117da:	f8c2 3a30 	str.w	r3, [r2, #2608]	@ 0xa30
 80117de:	f8c2 1a34 	str.w	r1, [r2, #2612]	@ 0xa34
 80117e2:	4b0d      	ldr	r3, [pc, #52]	@ (8011818 <USART5_IRQHandler+0x17c>)
 80117e4:	6842      	ldr	r2, [r0, #4]
 80117e6:	601a      	str	r2, [r3, #0]
 80117e8:	4770      	bx	lr
 80117ea:	f5b0 7f81 	cmp.w	r0, #258	@ 0x102
 80117ee:	f4ff af65 	bcc.w	80116bc <USART5_IRQHandler+0x20>
 80117f2:	2300      	movs	r3, #0
 80117f4:	e786      	b.n	8011704 <USART5_IRQHandler+0x68>
 80117f6:	4809      	ldr	r0, [pc, #36]	@ (801181c <USART5_IRQHandler+0x180>)
 80117f8:	f882 151c 	strb.w	r1, [r2, #1308]	@ 0x51c
 80117fc:	2301      	movs	r3, #1
 80117fe:	f8c2 3720 	str.w	r3, [r2, #1824]	@ 0x720
 8011802:	6903      	ldr	r3, [r0, #16]
 8011804:	3301      	adds	r3, #1
 8011806:	2103      	movs	r1, #3
 8011808:	6103      	str	r3, [r0, #16]
 801180a:	e7a9      	b.n	8011760 <USART5_IRQHandler+0xc4>
 801180c:	40011000 	andmi	r1, r1, r0
 8011810:	20001c5c 	andcs	r1, r0, ip, asr ip
 8011814:	e0001000 	and	r1, r0, r0
 8011818:	20002694 	mulcs	r0, r4, r6
 801181c:	20002698 	mulcs	r0, r8, r6

08011820 <TIMER1_IRQHandler>:
 8011820:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011824:	691a      	ldr	r2, [r3, #16]
 8011826:	0712      	lsls	r2, r2, #28
 8011828:	d53a      	bpl.n	80118a0 <TIMER1_IRQHandler+0x80>
 801182a:	493a      	ldr	r1, [pc, #232]	@ (8011914 <TIMER1_IRQHandler+0xf4>)
 801182c:	f8d1 2210 	ldr.w	r2, [r1, #528]	@ 0x210
 8011830:	2a02      	cmp	r2, #2
 8011832:	b430      	push	{r4, r5}
 8011834:	d03a      	beq.n	80118ac <TIMER1_IRQHandler+0x8c>
 8011836:	2a04      	cmp	r2, #4
 8011838:	d051      	beq.n	80118de <TIMER1_IRQHandler+0xbe>
 801183a:	2a01      	cmp	r2, #1
 801183c:	d124      	bne.n	8011888 <TIMER1_IRQHandler+0x68>
 801183e:	4a36      	ldr	r2, [pc, #216]	@ (8011918 <TIMER1_IRQHandler+0xf8>)
 8011840:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 8011844:	f8d2 040c 	ldr.w	r0, [r2, #1036]	@ 0x40c
 8011848:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 801184c:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
 8011850:	f444 1400 	orr.w	r4, r4, #2097152	@ 0x200000
 8011854:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 8011858:	f8c2 4400 	str.w	r4, [r2, #1024]	@ 0x400
 801185c:	f8c2 040c 	str.w	r0, [r2, #1036]	@ 0x40c
 8011860:	f8d2 4420 	ldr.w	r4, [r2, #1056]	@ 0x420
 8011864:	f8d2 0424 	ldr.w	r0, [r2, #1060]	@ 0x424
 8011868:	f8c2 4420 	str.w	r4, [r2, #1056]	@ 0x420
 801186c:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 8011870:	f440 60e0 	orr.w	r0, r0, #1792	@ 0x700
 8011874:	f8c2 0424 	str.w	r0, [r2, #1060]	@ 0x424
 8011878:	2402      	movs	r4, #2
 801187a:	4828      	ldr	r0, [pc, #160]	@ (801191c <TIMER1_IRQHandler+0xfc>)
 801187c:	f8c1 4210 	str.w	r4, [r1, #528]	@ 0x210
 8011880:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8011882:	6841      	ldr	r1, [r0, #4]
 8011884:	440a      	add	r2, r1
 8011886:	63da      	str	r2, [r3, #60]	@ 0x3c
 8011888:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801188c:	f06f 0208 	mvn.w	r2, #8
 8011890:	611a      	str	r2, [r3, #16]
 8011892:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011896:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 801189a:	bc30      	pop	{r4, r5}
 801189c:	611a      	str	r2, [r3, #16]
 801189e:	4770      	bx	lr
 80118a0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80118a4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80118a8:	611a      	str	r2, [r3, #16]
 80118aa:	4770      	bx	lr
 80118ac:	4b1c      	ldr	r3, [pc, #112]	@ (8011920 <TIMER1_IRQHandler+0x100>)
 80118ae:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 80118b0:	f022 0201 	bic.w	r2, r2, #1
 80118b4:	659a      	str	r2, [r3, #88]	@ 0x58
 80118b6:	6898      	ldr	r0, [r3, #8]
 80118b8:	f040 6000 	orr.w	r0, r0, #134217728	@ 0x8000000
 80118bc:	6098      	str	r0, [r3, #8]
 80118be:	f8b1 0204 	ldrh.w	r0, [r1, #516]	@ 0x204
 80118c2:	6659      	str	r1, [r3, #100]	@ 0x64
 80118c4:	f04f 2440 	mov.w	r4, #1073758208	@ 0x40004000
 80118c8:	f042 0211 	orr.w	r2, r2, #17
 80118cc:	65d8      	str	r0, [r3, #92]	@ 0x5c
 80118ce:	659a      	str	r2, [r3, #88]	@ 0x58
 80118d0:	f8d4 3814 	ldr.w	r3, [r4, #2068]	@ 0x814
 80118d4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80118d8:	f8c4 3814 	str.w	r3, [r4, #2068]	@ 0x814
 80118dc:	e7d4      	b.n	8011888 <TIMER1_IRQHandler+0x68>
 80118de:	4a0e      	ldr	r2, [pc, #56]	@ (8011918 <TIMER1_IRQHandler+0xf8>)
 80118e0:	f8d2 0400 	ldr.w	r0, [r2, #1024]	@ 0x400
 80118e4:	f8d2 440c 	ldr.w	r4, [r2, #1036]	@ 0x40c
 80118e8:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
 80118ec:	f440 1080 	orr.w	r0, r0, #1048576	@ 0x100000
 80118f0:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 80118f4:	f44f 6580 	mov.w	r5, #1024	@ 0x400
 80118f8:	f8c2 0400 	str.w	r0, [r2, #1024]	@ 0x400
 80118fc:	f8c2 440c 	str.w	r4, [r2, #1036]	@ 0x40c
 8011900:	4806      	ldr	r0, [pc, #24]	@ (801191c <TIMER1_IRQHandler+0xfc>)
 8011902:	f8c2 5428 	str.w	r5, [r2, #1064]	@ 0x428
 8011906:	2201      	movs	r2, #1
 8011908:	f8c1 2210 	str.w	r2, [r1, #528]	@ 0x210
 801190c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801190e:	6801      	ldr	r1, [r0, #0]
 8011910:	e7b8      	b.n	8011884 <TIMER1_IRQHandler+0x64>
 8011912:	bf00      	nop
 8011914:	2001c000 	andcs	ip, r1, r0
 8011918:	40020000 	andmi	r0, r2, r0
 801191c:	20001c50 	andcs	r1, r0, r0, asr ip
 8011920:	40026000 	andmi	r6, r2, r0

08011924 <TIMER4_IRQHandler>:
 8011924:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011928:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	@ 0xc10
 801192c:	0752      	lsls	r2, r2, #29
 801192e:	d53e      	bpl.n	80119ae <TIMER4_IRQHandler+0x8a>
 8011930:	4940      	ldr	r1, [pc, #256]	@ (8011a34 <TIMER4_IRQHandler+0x110>)
 8011932:	f8d1 2424 	ldr.w	r2, [r1, #1060]	@ 0x424
 8011936:	2a02      	cmp	r2, #2
 8011938:	b430      	push	{r4, r5}
 801193a:	d03f      	beq.n	80119bc <TIMER4_IRQHandler+0x98>
 801193c:	2a04      	cmp	r2, #4
 801193e:	d05e      	beq.n	80119fe <TIMER4_IRQHandler+0xda>
 8011940:	2a01      	cmp	r2, #1
 8011942:	d126      	bne.n	8011992 <TIMER4_IRQHandler+0x6e>
 8011944:	4a3c      	ldr	r2, [pc, #240]	@ (8011a38 <TIMER4_IRQHandler+0x114>)
 8011946:	f8d2 4800 	ldr.w	r4, [r2, #2048]	@ 0x800
 801194a:	f8d2 080c 	ldr.w	r0, [r2, #2060]	@ 0x80c
 801194e:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 8011952:	f420 5040 	bic.w	r0, r0, #12288	@ 0x3000
 8011956:	f444 5400 	orr.w	r4, r4, #8192	@ 0x2000
 801195a:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 801195e:	f8c2 4800 	str.w	r4, [r2, #2048]	@ 0x800
 8011962:	f8c2 080c 	str.w	r0, [r2, #2060]	@ 0x80c
 8011966:	f8d2 0820 	ldr.w	r0, [r2, #2080]	@ 0x820
 801196a:	f8d2 5824 	ldr.w	r5, [r2, #2084]	@ 0x824
 801196e:	f020 6070 	bic.w	r0, r0, #251658240	@ 0xf000000
 8011972:	f040 6000 	orr.w	r0, r0, #134217728	@ 0x8000000
 8011976:	f8c2 0820 	str.w	r0, [r2, #2080]	@ 0x820
 801197a:	2402      	movs	r4, #2
 801197c:	482f      	ldr	r0, [pc, #188]	@ (8011a3c <TIMER4_IRQHandler+0x118>)
 801197e:	f8c2 5824 	str.w	r5, [r2, #2084]	@ 0x824
 8011982:	f8c1 4424 	str.w	r4, [r1, #1060]	@ 0x424
 8011986:	f8d3 2c24 	ldr.w	r2, [r3, #3108]	@ 0xc24
 801198a:	6841      	ldr	r1, [r0, #4]
 801198c:	440a      	add	r2, r1
 801198e:	f8c3 2c38 	str.w	r2, [r3, #3128]	@ 0xc38
 8011992:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011996:	f06f 0204 	mvn.w	r2, #4
 801199a:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 801199e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80119a2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80119a6:	bc30      	pop	{r4, r5}
 80119a8:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 80119ac:	4770      	bx	lr
 80119ae:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80119b2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80119b6:	f8c3 2c10 	str.w	r2, [r3, #3088]	@ 0xc10
 80119ba:	4770      	bx	lr
 80119bc:	4b20      	ldr	r3, [pc, #128]	@ (8011a40 <TIMER4_IRQHandler+0x11c>)
 80119be:	4c21      	ldr	r4, [pc, #132]	@ (8011a44 <TIMER4_IRQHandler+0x120>)
 80119c0:	f8d3 24a0 	ldr.w	r2, [r3, #1184]	@ 0x4a0
 80119c4:	f022 0201 	bic.w	r2, r2, #1
 80119c8:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 80119cc:	f8d3 040c 	ldr.w	r0, [r3, #1036]	@ 0x40c
 80119d0:	f440 1000 	orr.w	r0, r0, #2097152	@ 0x200000
 80119d4:	f8c3 040c 	str.w	r0, [r3, #1036]	@ 0x40c
 80119d8:	f042 0211 	orr.w	r2, r2, #17
 80119dc:	f501 7005 	add.w	r0, r1, #532	@ 0x214
 80119e0:	f8b1 1418 	ldrh.w	r1, [r1, #1048]	@ 0x418
 80119e4:	f8c3 04ac 	str.w	r0, [r3, #1196]	@ 0x4ac
 80119e8:	f8c3 14a4 	str.w	r1, [r3, #1188]	@ 0x4a4
 80119ec:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 80119f0:	f8d4 3414 	ldr.w	r3, [r4, #1044]	@ 0x414
 80119f4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80119f8:	f8c4 3414 	str.w	r3, [r4, #1044]	@ 0x414
 80119fc:	e7c9      	b.n	8011992 <TIMER4_IRQHandler+0x6e>
 80119fe:	4a0e      	ldr	r2, [pc, #56]	@ (8011a38 <TIMER4_IRQHandler+0x114>)
 8011a00:	f8d2 0800 	ldr.w	r0, [r2, #2048]	@ 0x800
 8011a04:	f8d2 480c 	ldr.w	r4, [r2, #2060]	@ 0x80c
 8011a08:	f420 5040 	bic.w	r0, r0, #12288	@ 0x3000
 8011a0c:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 8011a10:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 8011a14:	2540      	movs	r5, #64	@ 0x40
 8011a16:	f8c2 0800 	str.w	r0, [r2, #2048]	@ 0x800
 8011a1a:	f8c2 480c 	str.w	r4, [r2, #2060]	@ 0x80c
 8011a1e:	4807      	ldr	r0, [pc, #28]	@ (8011a3c <TIMER4_IRQHandler+0x118>)
 8011a20:	f8c2 5828 	str.w	r5, [r2, #2088]	@ 0x828
 8011a24:	2201      	movs	r2, #1
 8011a26:	f8c1 2424 	str.w	r2, [r1, #1060]	@ 0x424
 8011a2a:	f8d3 2c24 	ldr.w	r2, [r3, #3108]	@ 0xc24
 8011a2e:	6801      	ldr	r1, [r0, #0]
 8011a30:	e7ac      	b.n	801198c <TIMER4_IRQHandler+0x68>
 8011a32:	bf00      	nop
 8011a34:	2001c000 	andcs	ip, r1, r0
 8011a38:	40020000 	andmi	r0, r2, r0
 8011a3c:	20001c50 	andcs	r1, r0, r0, asr ip
 8011a40:	40026000 	andmi	r6, r2, r0
 8011a44:	40011000 	andmi	r1, r1, r0

08011a48 <TIMER6_IRQHandler>:
 8011a48:	4b11      	ldr	r3, [pc, #68]	@ (8011a90 <TIMER6_IRQHandler+0x48>)
 8011a4a:	f8d3 2410 	ldr.w	r2, [r3, #1040]	@ 0x410
 8011a4e:	07d3      	lsls	r3, r2, #31
 8011a50:	d518      	bpl.n	8011a84 <TIMER6_IRQHandler+0x3c>
 8011a52:	4b10      	ldr	r3, [pc, #64]	@ (8011a94 <TIMER6_IRQHandler+0x4c>)
 8011a54:	4810      	ldr	r0, [pc, #64]	@ (8011a98 <TIMER6_IRQHandler+0x50>)
 8011a56:	6859      	ldr	r1, [r3, #4]
 8011a58:	b410      	push	{r4}
 8011a5a:	689c      	ldr	r4, [r3, #8]
 8011a5c:	1b09      	subs	r1, r1, r4
 8011a5e:	6019      	str	r1, [r3, #0]
 8011a60:	6859      	ldr	r1, [r3, #4]
 8011a62:	6099      	str	r1, [r3, #8]
 8011a64:	6919      	ldr	r1, [r3, #16]
 8011a66:	695c      	ldr	r4, [r3, #20]
 8011a68:	1b09      	subs	r1, r1, r4
 8011a6a:	60d9      	str	r1, [r3, #12]
 8011a6c:	6919      	ldr	r1, [r3, #16]
 8011a6e:	6159      	str	r1, [r3, #20]
 8011a70:	6843      	ldr	r3, [r0, #4]
 8011a72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011a76:	3301      	adds	r3, #1
 8011a78:	6043      	str	r3, [r0, #4]
 8011a7a:	4b05      	ldr	r3, [pc, #20]	@ (8011a90 <TIMER6_IRQHandler+0x48>)
 8011a7c:	43d2      	mvns	r2, r2
 8011a7e:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
 8011a82:	4770      	bx	lr
 8011a84:	4b02      	ldr	r3, [pc, #8]	@ (8011a90 <TIMER6_IRQHandler+0x48>)
 8011a86:	43d2      	mvns	r2, r2
 8011a88:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
 8011a8c:	4770      	bx	lr
 8011a8e:	bf00      	nop
 8011a90:	40001000 	andmi	r1, r0, r0
 8011a94:	20002698 	mulcs	r0, r8, r6
 8011a98:	2000a3ac 	andcs	sl, r0, ip, lsr #7

08011a9c <DMA0_Channel3_IRQHandler>:
 8011a9c:	4b17      	ldr	r3, [pc, #92]	@ (8011afc <DMA0_Channel3_IRQHandler+0x60>)
 8011a9e:	681a      	ldr	r2, [r3, #0]
 8011aa0:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 8011aa2:	0110      	lsls	r0, r2, #4
 8011aa4:	d516      	bpl.n	8011ad4 <DMA0_Channel3_IRQHandler+0x38>
 8011aa6:	06ca      	lsls	r2, r1, #27
 8011aa8:	d514      	bpl.n	8011ad4 <DMA0_Channel3_IRQHandler+0x38>
 8011aaa:	b510      	push	{r4, lr}
 8011aac:	4c14      	ldr	r4, [pc, #80]	@ (8011b00 <DMA0_Channel3_IRQHandler+0x64>)
 8011aae:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8011ab0:	f8d4 120c 	ldr.w	r1, [r4, #524]	@ 0x20c
 8011ab4:	f022 0298 	bic.w	r2, r2, #152	@ 0x98
 8011ab8:	659a      	str	r2, [r3, #88]	@ 0x58
 8011aba:	b989      	cbnz	r1, 8011ae0 <DMA0_Channel3_IRQHandler+0x44>
 8011abc:	f8c4 1210 	str.w	r1, [r4, #528]	@ 0x210
 8011ac0:	4a10      	ldr	r2, [pc, #64]	@ (8011b04 <DMA0_Channel3_IRQHandler+0x68>)
 8011ac2:	6813      	ldr	r3, [r2, #0]
 8011ac4:	3301      	adds	r3, #1
 8011ac6:	6013      	str	r3, [r2, #0]
 8011ac8:	4a0c      	ldr	r2, [pc, #48]	@ (8011afc <DMA0_Channel3_IRQHandler+0x60>)
 8011aca:	6893      	ldr	r3, [r2, #8]
 8011acc:	f043 6320 	orr.w	r3, r3, #167772160	@ 0xa000000
 8011ad0:	6093      	str	r3, [r2, #8]
 8011ad2:	bd10      	pop	{r4, pc}
 8011ad4:	4a09      	ldr	r2, [pc, #36]	@ (8011afc <DMA0_Channel3_IRQHandler+0x60>)
 8011ad6:	6893      	ldr	r3, [r2, #8]
 8011ad8:	f043 6320 	orr.w	r3, r3, #167772160	@ 0xa000000
 8011adc:	6093      	str	r3, [r2, #8]
 8011ade:	4770      	bx	lr
 8011ae0:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011ae4:	4b08      	ldr	r3, [pc, #32]	@ (8011b08 <DMA0_Channel3_IRQHandler+0x6c>)
 8011ae6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8011ae8:	689b      	ldr	r3, [r3, #8]
 8011aea:	2102      	movs	r1, #2
 8011aec:	441a      	add	r2, r3
 8011aee:	f006 ff32 	bl	8018956 <timer_channel_output_pulse_value_config>
 8011af2:	2304      	movs	r3, #4
 8011af4:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
 8011af8:	e7e2      	b.n	8011ac0 <DMA0_Channel3_IRQHandler+0x24>
 8011afa:	bf00      	nop
 8011afc:	40026000 	andmi	r6, r2, r0
 8011b00:	2001c000 	andcs	ip, r1, r0
 8011b04:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0
 8011b08:	20001c50 	andcs	r1, r0, r0, asr ip

08011b0c <DMA1_Channel6_IRQHandler>:
 8011b0c:	4b1c      	ldr	r3, [pc, #112]	@ (8011b80 <DMA1_Channel6_IRQHandler+0x74>)
 8011b0e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 8011b12:	f8d3 14a0 	ldr.w	r1, [r3, #1184]	@ 0x4a0
 8011b16:	0290      	lsls	r0, r2, #10
 8011b18:	d51a      	bpl.n	8011b50 <DMA1_Channel6_IRQHandler+0x44>
 8011b1a:	06ca      	lsls	r2, r1, #27
 8011b1c:	d518      	bpl.n	8011b50 <DMA1_Channel6_IRQHandler+0x44>
 8011b1e:	b510      	push	{r4, lr}
 8011b20:	4c18      	ldr	r4, [pc, #96]	@ (8011b84 <DMA1_Channel6_IRQHandler+0x78>)
 8011b22:	f8d3 24a0 	ldr.w	r2, [r3, #1184]	@ 0x4a0
 8011b26:	f8d4 1420 	ldr.w	r1, [r4, #1056]	@ 0x420
 8011b2a:	f022 0298 	bic.w	r2, r2, #152	@ 0x98
 8011b2e:	f8c3 24a0 	str.w	r2, [r3, #1184]	@ 0x4a0
 8011b32:	b9a9      	cbnz	r1, 8011b60 <DMA1_Channel6_IRQHandler+0x54>
 8011b34:	f8c4 1424 	str.w	r1, [r4, #1060]	@ 0x424
 8011b38:	4a13      	ldr	r2, [pc, #76]	@ (8011b88 <DMA1_Channel6_IRQHandler+0x7c>)
 8011b3a:	69d3      	ldr	r3, [r2, #28]
 8011b3c:	3301      	adds	r3, #1
 8011b3e:	61d3      	str	r3, [r2, #28]
 8011b40:	4a0f      	ldr	r2, [pc, #60]	@ (8011b80 <DMA1_Channel6_IRQHandler+0x74>)
 8011b42:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 8011b46:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 8011b4a:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 8011b4e:	bd10      	pop	{r4, pc}
 8011b50:	4a0b      	ldr	r2, [pc, #44]	@ (8011b80 <DMA1_Channel6_IRQHandler+0x74>)
 8011b52:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 8011b56:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 8011b5a:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 8011b5e:	4770      	bx	lr
 8011b60:	4b0a      	ldr	r3, [pc, #40]	@ (8011b8c <DMA1_Channel6_IRQHandler+0x80>)
 8011b62:	480b      	ldr	r0, [pc, #44]	@ (8011b90 <DMA1_Channel6_IRQHandler+0x84>)
 8011b64:	689b      	ldr	r3, [r3, #8]
 8011b66:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8011b6a:	2101      	movs	r1, #1
 8011b6c:	f8d2 2c24 	ldr.w	r2, [r2, #3108]	@ 0xc24
 8011b70:	441a      	add	r2, r3
 8011b72:	f006 fef0 	bl	8018956 <timer_channel_output_pulse_value_config>
 8011b76:	2304      	movs	r3, #4
 8011b78:	f8c4 3424 	str.w	r3, [r4, #1060]	@ 0x424
 8011b7c:	e7dc      	b.n	8011b38 <DMA1_Channel6_IRQHandler+0x2c>
 8011b7e:	bf00      	nop
 8011b80:	40026000 	andmi	r6, r2, r0
 8011b84:	2001c000 	andcs	ip, r1, r0
 8011b88:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0
 8011b8c:	20001c50 	andcs	r1, r0, r0, asr ip
 8011b90:	40000c00 	andmi	r0, r0, r0, lsl #24

08011b94 <Dmx::Dmx()>:
 8011b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b98:	49a7      	ldr	r1, [pc, #668]	@ (8011e38 <Dmx::Dmx()+0x2a4>)
 8011b9a:	4ba8      	ldr	r3, [pc, #672]	@ (8011e3c <Dmx::Dmx()+0x2a8>)
 8011b9c:	f8df b2d0 	ldr.w	fp, [pc, #720]	@ 8011e70 <Dmx::Dmx()+0x2dc>
 8011ba0:	6008      	str	r0, [r1, #0]
 8011ba2:	f246 12a8 	movw	r2, #25000	@ 0x61a8
 8011ba6:	e9c0 2200 	strd	r2, r2, [r0]
 8011baa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8011bae:	6102      	str	r2, [r0, #16]
 8011bb0:	21b0      	movs	r1, #176	@ 0xb0
 8011bb2:	220c      	movs	r2, #12
 8011bb4:	2500      	movs	r5, #0
 8011bb6:	e9c3 1200 	strd	r1, r2, [r3]
 8011bba:	4ea1      	ldr	r6, [pc, #644]	@ (8011e40 <Dmx::Dmx()+0x2ac>)
 8011bbc:	7705      	strb	r5, [r0, #28]
 8011bbe:	f44f 620c 	mov.w	r2, #2240	@ 0x8c0
 8011bc2:	b08f      	sub	sp, #60	@ 0x3c
 8011bc4:	4607      	mov	r7, r0
 8011bc6:	609a      	str	r2, [r3, #8]
 8011bc8:	46d8      	mov	r8, fp
 8011bca:	f100 0910 	add.w	r9, r0, #16
 8011bce:	f04f 0a01 	mov.w	sl, #1
 8011bd2:	462c      	mov	r4, r5
 8011bd4:	e9d6 0300 	ldrd	r0, r3, [r6]
 8011bd8:	2202      	movs	r2, #2
 8011bda:	2101      	movs	r1, #1
 8011bdc:	9303      	str	r3, [sp, #12]
 8011bde:	9002      	str	r0, [sp, #8]
 8011be0:	f006 fc68 	bl	80184b4 <gpio_mode_set>
 8011be4:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 8011be8:	2100      	movs	r1, #0
 8011bea:	2202      	movs	r2, #2
 8011bec:	f006 fc84 	bl	80184f8 <gpio_output_options_set>
 8011bf0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8011bf4:	f849 3c08 	str.w	r3, [r9, #-8]
 8011bf8:	f859 3f04 	ldr.w	r3, [r9, #4]!
 8011bfc:	2b01      	cmp	r3, #1
 8011bfe:	4b91      	ldr	r3, [pc, #580]	@ (8011e44 <Dmx::Dmx()+0x2b0>)
 8011c00:	4629      	mov	r1, r5
 8011c02:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8011c06:	f000 8110 	beq.w	8011e2a <Dmx::Dmx()+0x296>
 8011c0a:	f8c9 a000 	str.w	sl, [r9]
 8011c0e:	b113      	cbz	r3, 8011c16 <Dmx::Dmx()+0x82>
 8011c10:	4638      	mov	r0, r7
 8011c12:	f7ff fc35 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8011c16:	e9d6 3200 	ldrd	r3, r2, [r6]
 8011c1a:	629a      	str	r2, [r3, #40]	@ 0x28
 8011c1c:	498a      	ldr	r1, [pc, #552]	@ (8011e48 <Dmx::Dmx()+0x2b4>)
 8011c1e:	f240 521c 	movw	r2, #1308	@ 0x51c
 8011c22:	f44f 7305 	mov.w	r3, #532	@ 0x214
 8011c26:	fb02 1205 	mla	r2, r2, r5, r1
 8011c2a:	fb03 b305 	mla	r3, r3, r5, fp
 8011c2e:	f8c2 4518 	str.w	r4, [r2, #1304]	@ 0x518
 8011c32:	f8c3 4210 	str.w	r4, [r3, #528]	@ 0x210
 8011c36:	f240 2301 	movw	r3, #513	@ 0x201
 8011c3a:	f8c8 420c 	str.w	r4, [r8, #524]	@ 0x20c
 8011c3e:	f8c8 3204 	str.w	r3, [r8, #516]	@ 0x204
 8011c42:	4640      	mov	r0, r8
 8011c44:	f44f 7201 	mov.w	r2, #516	@ 0x204
 8011c48:	2100      	movs	r1, #0
 8011c4a:	f007 ff61 	bl	8019b10 <memset>
 8011c4e:	3608      	adds	r6, #8
 8011c50:	f508 7805 	add.w	r8, r8, #532	@ 0x214
 8011c54:	b90d      	cbnz	r5, 8011c5a <Dmx::Dmx()+0xc6>
 8011c56:	2501      	movs	r5, #1
 8011c58:	e7bc      	b.n	8011bd4 <Dmx::Dmx()+0x40>
 8011c5a:	4e7c      	ldr	r6, [pc, #496]	@ (8011e4c <Dmx::Dmx()+0x2b8>)
 8011c5c:	4d7c      	ldr	r5, [pc, #496]	@ (8011e50 <Dmx::Dmx()+0x2bc>)
 8011c5e:	f640 4015 	movw	r0, #3093	@ 0xc15
 8011c62:	f006 fcad 	bl	80185c0 <rcu_periph_clock_enable>
 8011c66:	f640 4016 	movw	r0, #3094	@ 0xc16
 8011c6a:	f006 fca9 	bl	80185c0 <rcu_periph_clock_enable>
 8011c6e:	4630      	mov	r0, r6
 8011c70:	2103      	movs	r1, #3
 8011c72:	f006 f8f5 	bl	8017e60 <dma_deinit>
 8011c76:	f04f 0b40 	mov.w	fp, #64	@ 0x40
 8011c7a:	4b76      	ldr	r3, [pc, #472]	@ (8011e54 <Dmx::Dmx()+0x2c0>)
 8011c7c:	9305      	str	r3, [sp, #20]
 8011c7e:	aa05      	add	r2, sp, #20
 8011c80:	4630      	mov	r0, r6
 8011c82:	f44f 3900 	mov.w	r9, #131072	@ 0x20000
 8011c86:	2103      	movs	r1, #3
 8011c88:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 8011c8c:	9408      	str	r4, [sp, #32]
 8011c8e:	f8cd a018 	str.w	sl, [sp, #24]
 8011c92:	9409      	str	r4, [sp, #36]	@ 0x24
 8011c94:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8011c98:	f006 f90e 	bl	8017eb8 <dma_single_data_mode_init>
 8011c9c:	4630      	mov	r0, r6
 8011c9e:	2103      	movs	r1, #3
 8011ca0:	f006 f949 	bl	8017f36 <dma_circulation_disable>
 8011ca4:	2204      	movs	r2, #4
 8011ca6:	2103      	movs	r1, #3
 8011ca8:	4630      	mov	r0, r6
 8011caa:	f006 f94c 	bl	8017f46 <dma_channel_subperipheral_select>
 8011cae:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 8011cb0:	f04f 0810 	mov.w	r8, #16
 8011cb4:	f023 0398 	bic.w	r3, r3, #152	@ 0x98
 8011cb8:	65b3      	str	r3, [r6, #88]	@ 0x58
 8011cba:	f885 830e 	strb.w	r8, [r5, #782]	@ 0x30e
 8011cbe:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8011cc2:	602b      	str	r3, [r5, #0]
 8011cc4:	4864      	ldr	r0, [pc, #400]	@ (8011e58 <Dmx::Dmx()+0x2c4>)
 8011cc6:	2106      	movs	r1, #6
 8011cc8:	f006 f8ca 	bl	8017e60 <dma_deinit>
 8011ccc:	4b63      	ldr	r3, [pc, #396]	@ (8011e5c <Dmx::Dmx()+0x2c8>)
 8011cce:	4862      	ldr	r0, [pc, #392]	@ (8011e58 <Dmx::Dmx()+0x2c4>)
 8011cd0:	9305      	str	r3, [sp, #20]
 8011cd2:	aa05      	add	r2, sp, #20
 8011cd4:	2106      	movs	r1, #6
 8011cd6:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8011cda:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 8011cde:	f8cd a018 	str.w	sl, [sp, #24]
 8011ce2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8011ce6:	f006 f8e7 	bl	8017eb8 <dma_single_data_mode_init>
 8011cea:	485b      	ldr	r0, [pc, #364]	@ (8011e58 <Dmx::Dmx()+0x2c4>)
 8011cec:	2106      	movs	r1, #6
 8011cee:	f006 f922 	bl	8017f36 <dma_circulation_disable>
 8011cf2:	4859      	ldr	r0, [pc, #356]	@ (8011e58 <Dmx::Dmx()+0x2c4>)
 8011cf4:	2205      	movs	r2, #5
 8011cf6:	2106      	movs	r1, #6
 8011cf8:	f006 f925 	bl	8017f46 <dma_channel_subperipheral_select>
 8011cfc:	f8d6 34a0 	ldr.w	r3, [r6, #1184]	@ 0x4a0
 8011d00:	f023 0398 	bic.w	r3, r3, #152	@ 0x98
 8011d04:	f8c6 34a0 	str.w	r3, [r6, #1184]	@ 0x4a0
 8011d08:	f885 8345 	strb.w	r8, [r5, #837]	@ 0x345
 8011d0c:	2320      	movs	r3, #32
 8011d0e:	60ab      	str	r3, [r5, #8]
 8011d10:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8011d14:	f006 fc54 	bl	80185c0 <rcu_periph_clock_enable>
 8011d18:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d1c:	f006 fd0c 	bl	8018738 <timer_deinit>
 8011d20:	a805      	add	r0, sp, #20
 8011d22:	f006 fdaf 	bl	8018884 <timer_struct_para_init>
 8011d26:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8011d2a:	a905      	add	r1, sp, #20
 8011d2c:	f04f 09ef 	mov.w	r9, #239	@ 0xef
 8011d30:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d34:	9406      	str	r4, [sp, #24]
 8011d36:	f88d 4020 	strb.w	r4, [sp, #32]
 8011d3a:	9607      	str	r6, [sp, #28]
 8011d3c:	f8cd 9014 	str.w	r9, [sp, #20]
 8011d40:	f006 fda8 	bl	8018894 <timer_init>
 8011d44:	4631      	mov	r1, r6
 8011d46:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d4a:	f006 fe12 	bl	8018972 <timer_flag_clear>
 8011d4e:	4631      	mov	r1, r6
 8011d50:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d54:	f006 fe14 	bl	8018980 <timer_interrupt_flag_clear>
 8011d58:	4642      	mov	r2, r8
 8011d5a:	2102      	movs	r1, #2
 8011d5c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d60:	f006 fdd3 	bl	801890a <timer_channel_output_mode_config>
 8011d64:	4632      	mov	r2, r6
 8011d66:	2102      	movs	r1, #2
 8011d68:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d6c:	f006 fdf3 	bl	8018956 <timer_channel_output_pulse_value_config>
 8011d70:	2108      	movs	r1, #8
 8011d72:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d76:	f006 fdff 	bl	8018978 <timer_interrupt_enable>
 8011d7a:	f885 431c 	strb.w	r4, [r5, #796]	@ 0x31c
 8011d7e:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8011d82:	602b      	str	r3, [r5, #0]
 8011d84:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8011d88:	f006 fdb8 	bl	80188fc <timer_enable>
 8011d8c:	f241 0003 	movw	r0, #4099	@ 0x1003
 8011d90:	f006 fc16 	bl	80185c0 <rcu_periph_clock_enable>
 8011d94:	4832      	ldr	r0, [pc, #200]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011d96:	f006 fccf 	bl	8018738 <timer_deinit>
 8011d9a:	a805      	add	r0, sp, #20
 8011d9c:	f006 fd72 	bl	8018884 <timer_struct_para_init>
 8011da0:	a905      	add	r1, sp, #20
 8011da2:	482f      	ldr	r0, [pc, #188]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011da4:	f8cd 9014 	str.w	r9, [sp, #20]
 8011da8:	e9cd 4606 	strd	r4, r6, [sp, #24]
 8011dac:	f88d 4020 	strb.w	r4, [sp, #32]
 8011db0:	f006 fd70 	bl	8018894 <timer_init>
 8011db4:	4631      	mov	r1, r6
 8011db6:	482a      	ldr	r0, [pc, #168]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011db8:	f006 fddb 	bl	8018972 <timer_flag_clear>
 8011dbc:	4631      	mov	r1, r6
 8011dbe:	4828      	ldr	r0, [pc, #160]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011dc0:	f006 fdde 	bl	8018980 <timer_interrupt_flag_clear>
 8011dc4:	4642      	mov	r2, r8
 8011dc6:	4826      	ldr	r0, [pc, #152]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011dc8:	2101      	movs	r1, #1
 8011dca:	f006 fd9e 	bl	801890a <timer_channel_output_mode_config>
 8011dce:	4632      	mov	r2, r6
 8011dd0:	4823      	ldr	r0, [pc, #140]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011dd2:	2101      	movs	r1, #1
 8011dd4:	f006 fdbf 	bl	8018956 <timer_channel_output_pulse_value_config>
 8011dd8:	4821      	ldr	r0, [pc, #132]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011dda:	2104      	movs	r1, #4
 8011ddc:	f006 fdcc 	bl	8018978 <timer_interrupt_enable>
 8011de0:	f885 4332 	strb.w	r4, [r5, #818]	@ 0x332
 8011de4:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8011de8:	606b      	str	r3, [r5, #4]
 8011dea:	481d      	ldr	r0, [pc, #116]	@ (8011e60 <Dmx::Dmx()+0x2cc>)
 8011dec:	f04f 0802 	mov.w	r8, #2
 8011df0:	f006 fd84 	bl	80188fc <timer_enable>
 8011df4:	491b      	ldr	r1, [pc, #108]	@ (8011e64 <Dmx::Dmx()+0x2d0>)
 8011df6:	481c      	ldr	r0, [pc, #112]	@ (8011e68 <Dmx::Dmx()+0x2d4>)
 8011df8:	f8cd 8000 	str.w	r8, [sp]
 8011dfc:	2300      	movs	r3, #0
 8011dfe:	2208      	movs	r2, #8
 8011e00:	f006 fec6 	bl	8018b90 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 8011e04:	f885 4327 	strb.w	r4, [r5, #807]	@ 0x327
 8011e08:	2680      	movs	r6, #128	@ 0x80
 8011e0a:	606e      	str	r6, [r5, #4]
 8011e0c:	4915      	ldr	r1, [pc, #84]	@ (8011e64 <Dmx::Dmx()+0x2d0>)
 8011e0e:	4817      	ldr	r0, [pc, #92]	@ (8011e6c <Dmx::Dmx()+0x2d8>)
 8011e10:	f8cd 8000 	str.w	r8, [sp]
 8011e14:	2300      	movs	r3, #0
 8011e16:	2208      	movs	r2, #8
 8011e18:	f006 feba 	bl	8018b90 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 8011e1c:	f885 4347 	strb.w	r4, [r5, #839]	@ 0x347
 8011e20:	60ae      	str	r6, [r5, #8]
 8011e22:	4638      	mov	r0, r7
 8011e24:	b00f      	add	sp, #60	@ 0x3c
 8011e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e2a:	2b00      	cmp	r3, #0
 8011e2c:	f43f aef6 	beq.w	8011c1c <Dmx::Dmx()+0x88>
 8011e30:	4638      	mov	r0, r7
 8011e32:	f7ff fb25 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8011e36:	e6f1      	b.n	8011c1c <Dmx::Dmx()+0x88>
 8011e38:	20001c4c 	andcs	r1, r0, ip, asr #24
 8011e3c:	20001c50 	andcs	r1, r0, r0, asr ip
 8011e40:	0801e86c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr, pc}
 8011e44:	200026e8 	andcs	r2, r0, r8, ror #13
 8011e48:	20001c5c 	andcs	r1, r0, ip, asr ip
 8011e4c:	40026000 	andmi	r6, r2, r0
 8011e50:	e000e100 	and	lr, r0, r0, lsl #2
 8011e54:	40004804 	andmi	r4, r0, r4, lsl #16
 8011e58:	40026400 	andmi	r6, r2, r0, lsl #8
 8011e5c:	40011404 	andmi	r1, r1, r4, lsl #8
 8011e60:	40000c00 	andmi	r0, r0, r0, lsl #24
 8011e64:	0003d090 	muleq	r3, r0, r0
 8011e68:	40004800 	andmi	r4, r0, r0, lsl #16
 8011e6c:	40011400 	andmi	r1, r1, r0, lsl #8
 8011e70:	2001c000 	andcs	ip, r1, r0

08011e74 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>:
 8011e74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e78:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 8011e7c:	4615      	mov	r5, r2
 8011e7e:	6972      	ldr	r2, [r6, #20]
 8011e80:	42aa      	cmp	r2, r5
 8011e82:	461f      	mov	r7, r3
 8011e84:	460c      	mov	r4, r1
 8011e86:	d021      	beq.n	8011ecc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x58>
 8011e88:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 8011f44 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>
 8011e8c:	6175      	str	r5, [r6, #20]
 8011e8e:	f858 3021 	ldr.w	r3, [r8, r1, lsl #2]
 8011e92:	b10b      	cbz	r3, 8011e98 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x24>
 8011e94:	f7ff faf4 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8011e98:	b975      	cbnz	r5, 8011eb8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x44>
 8011e9a:	4b29      	ldr	r3, [pc, #164]	@ (8011f40 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xcc>)
 8011e9c:	eb03 02c4 	add.w	r2, r3, r4, lsl #3
 8011ea0:	f853 3034 	ldr.w	r3, [r3, r4, lsl #3]
 8011ea4:	6852      	ldr	r2, [r2, #4]
 8011ea6:	619a      	str	r2, [r3, #24]
 8011ea8:	b127      	cbz	r7, 8011eb4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x40>
 8011eaa:	6975      	ldr	r5, [r6, #20]
 8011eac:	b9cd      	cbnz	r5, 8011ee2 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x6e>
 8011eae:	2301      	movs	r3, #1
 8011eb0:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 8011eb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011eb8:	2d01      	cmp	r5, #1
 8011eba:	d1f5      	bne.n	8011ea8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
 8011ebc:	4b20      	ldr	r3, [pc, #128]	@ (8011f40 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xcc>)
 8011ebe:	eb03 02c4 	add.w	r2, r3, r4, lsl #3
 8011ec2:	f853 3034 	ldr.w	r3, [r3, r4, lsl #3]
 8011ec6:	6852      	ldr	r2, [r2, #4]
 8011ec8:	629a      	str	r2, [r3, #40]	@ 0x28
 8011eca:	e7ed      	b.n	8011ea8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
 8011ecc:	2b00      	cmp	r3, #0
 8011ece:	d134      	bne.n	8011f3a <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xc6>
 8011ed0:	4b1c      	ldr	r3, [pc, #112]	@ (8011f44 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>)
 8011ed2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8011ed6:	2b00      	cmp	r3, #0
 8011ed8:	d0ec      	beq.n	8011eb4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x40>
 8011eda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011ede:	f7ff bacf 	b.w	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8011ee2:	4b19      	ldr	r3, [pc, #100]	@ (8011f48 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd4>)
 8011ee4:	4919      	ldr	r1, [pc, #100]	@ (8011f4c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd8>)
 8011ee6:	f240 521c 	movw	r2, #1308	@ 0x51c
 8011eea:	fb02 3304 	mla	r3, r2, r4, r3
 8011eee:	2200      	movs	r2, #0
 8011ef0:	f8c3 2518 	str.w	r2, [r3, #1304]	@ 0x518
 8011ef4:	4b16      	ldr	r3, [pc, #88]	@ (8011f50 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xdc>)
 8011ef6:	4a17      	ldr	r2, [pc, #92]	@ (8011f54 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xe0>)
 8011ef8:	2c00      	cmp	r4, #0
 8011efa:	bf18      	it	ne
 8011efc:	4619      	movne	r1, r3
 8011efe:	f1a3 030c 	sub.w	r3, r3, #12
 8011f02:	bf18      	it	ne
 8011f04:	461a      	movne	r2, r3
 8011f06:	f3bf 8f5f 	dmb	sy
 8011f0a:	6813      	ldr	r3, [r2, #0]
 8011f0c:	061b      	lsls	r3, r3, #24
 8011f0e:	d5fa      	bpl.n	8011f06 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x92>
 8011f10:	6813      	ldr	r3, [r2, #0]
 8011f12:	f023 0320 	bic.w	r3, r3, #32
 8011f16:	6013      	str	r3, [r2, #0]
 8011f18:	6813      	ldr	r3, [r2, #0]
 8011f1a:	f023 0310 	bic.w	r3, r3, #16
 8011f1e:	6013      	str	r3, [r2, #0]
 8011f20:	680b      	ldr	r3, [r1, #0]
 8011f22:	f043 0320 	orr.w	r3, r3, #32
 8011f26:	600b      	str	r3, [r1, #0]
 8011f28:	680b      	ldr	r3, [r1, #0]
 8011f2a:	2202      	movs	r2, #2
 8011f2c:	f043 0310 	orr.w	r3, r3, #16
 8011f30:	600b      	str	r3, [r1, #0]
 8011f32:	f848 2024 	str.w	r2, [r8, r4, lsl #2]
 8011f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f3a:	f8df 8008 	ldr.w	r8, [pc, #8]	@ 8011f44 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>
 8011f3e:	e7b5      	b.n	8011eac <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x38>
 8011f40:	0801e86c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr, pc}
 8011f44:	200026e8 	andcs	r2, r0, r8, ror #13
 8011f48:	20001c5c 	andcs	r1, r0, ip, asr ip
 8011f4c:	4000480c 	andmi	r4, r0, ip, lsl #16
 8011f50:	4001140c 	andmi	r1, r1, ip, lsl #8
 8011f54:	40004800 	andmi	r4, r0, r0, lsl #16

08011f58 <Dmx::GetTotalStatistics(unsigned long)>:
 8011f58:	4b06      	ldr	r3, [pc, #24]	@ (8011f74 <Dmx::GetTotalStatistics(unsigned long)+0x1c>)
 8011f5a:	4807      	ldr	r0, [pc, #28]	@ (8011f78 <Dmx::GetTotalStatistics(unsigned long)+0x20>)
 8011f5c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8011f60:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8011f64:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8011f68:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8011f6c:	685b      	ldr	r3, [r3, #4]
 8011f6e:	6043      	str	r3, [r0, #4]
 8011f70:	4770      	bx	lr
 8011f72:	bf00      	nop
 8011f74:	20002698 	mulcs	r0, r8, r6
 8011f78:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0

08011f7c <Dmx::StartDmxOutput(unsigned long)>:
 8011f7c:	b538      	push	{r3, r4, r5, lr}
 8011f7e:	b339      	cbz	r1, 8011fd0 <Dmx::StartDmxOutput(unsigned long)+0x54>
 8011f80:	2901      	cmp	r1, #1
 8011f82:	d124      	bne.n	8011fce <Dmx::StartDmxOutput(unsigned long)+0x52>
 8011f84:	4c25      	ldr	r4, [pc, #148]	@ (801201c <Dmx::StartDmxOutput(unsigned long)+0xa0>)
 8011f86:	2106      	movs	r1, #6
 8011f88:	4620      	mov	r0, r4
 8011f8a:	f006 fddb 	bl	8018b44 <usart_flag_get>
 8011f8e:	2801      	cmp	r0, #1
 8011f90:	d1f9      	bne.n	8011f86 <Dmx::StartDmxOutput(unsigned long)+0xa>
 8011f92:	4b23      	ldr	r3, [pc, #140]	@ (8012020 <Dmx::StartDmxOutput(unsigned long)+0xa4>)
 8011f94:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8011f98:	f8d3 180c 	ldr.w	r1, [r3, #2060]	@ 0x80c
 8011f9c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8011fa0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8011fa4:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8011fa8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8011fac:	4a1d      	ldr	r2, [pc, #116]	@ (8012024 <Dmx::StartDmxOutput(unsigned long)+0xa8>)
 8011fae:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
 8011fb2:	2540      	movs	r5, #64	@ 0x40
 8011fb4:	f8c3 180c 	str.w	r1, [r3, #2060]	@ 0x80c
 8011fb8:	f8c3 5828 	str.w	r5, [r3, #2088]	@ 0x828
 8011fbc:	f8d4 3c24 	ldr.w	r3, [r4, #3108]	@ 0xc24
 8011fc0:	6811      	ldr	r1, [r2, #0]
 8011fc2:	4a19      	ldr	r2, [pc, #100]	@ (8012028 <Dmx::StartDmxOutput(unsigned long)+0xac>)
 8011fc4:	440b      	add	r3, r1
 8011fc6:	f8c4 3c38 	str.w	r3, [r4, #3128]	@ 0xc38
 8011fca:	f8c2 0424 	str.w	r0, [r2, #1060]	@ 0x424
 8011fce:	bd38      	pop	{r3, r4, r5, pc}
 8011fd0:	4c16      	ldr	r4, [pc, #88]	@ (801202c <Dmx::StartDmxOutput(unsigned long)+0xb0>)
 8011fd2:	2106      	movs	r1, #6
 8011fd4:	4620      	mov	r0, r4
 8011fd6:	f006 fdb5 	bl	8018b44 <usart_flag_get>
 8011fda:	2801      	cmp	r0, #1
 8011fdc:	d1f9      	bne.n	8011fd2 <Dmx::StartDmxOutput(unsigned long)+0x56>
 8011fde:	4b10      	ldr	r3, [pc, #64]	@ (8012020 <Dmx::StartDmxOutput(unsigned long)+0xa4>)
 8011fe0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 8011fe4:	f8d3 140c 	ldr.w	r1, [r3, #1036]	@ 0x40c
 8011fe8:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8011fec:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8011ff0:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
 8011ff4:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8011ff8:	4a0a      	ldr	r2, [pc, #40]	@ (8012024 <Dmx::StartDmxOutput(unsigned long)+0xa8>)
 8011ffa:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 8011ffe:	f44f 6580 	mov.w	r5, #1024	@ 0x400
 8012002:	f8c3 140c 	str.w	r1, [r3, #1036]	@ 0x40c
 8012006:	f8c3 5428 	str.w	r5, [r3, #1064]	@ 0x428
 801200a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801200c:	6811      	ldr	r1, [r2, #0]
 801200e:	4a06      	ldr	r2, [pc, #24]	@ (8012028 <Dmx::StartDmxOutput(unsigned long)+0xac>)
 8012010:	440b      	add	r3, r1
 8012012:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8012014:	f8c2 0210 	str.w	r0, [r2, #528]	@ 0x210
 8012018:	bd38      	pop	{r3, r4, r5, pc}
 801201a:	bf00      	nop
 801201c:	40011400 	andmi	r1, r1, r0, lsl #8
 8012020:	40020000 	andmi	r0, r2, r0
 8012024:	20001c50 	andcs	r1, r0, r0, asr ip
 8012028:	2001c000 	andcs	ip, r1, r0
 801202c:	40004800 	andmi	r4, r0, r0, lsl #16

08012030 <Dmx::SetDmxBreakTime(unsigned long)>:
 8012030:	4a15      	ldr	r2, [pc, #84]	@ (8012088 <Dmx::SetDmxBreakTime(unsigned long)+0x58>)
 8012032:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 8012036:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 801203a:	b410      	push	{r4}
 801203c:	4293      	cmp	r3, r2
 801203e:	4c13      	ldr	r4, [pc, #76]	@ (801208c <Dmx::SetDmxBreakTime(unsigned long)+0x5c>)
 8012040:	bf38      	it	cc
 8012042:	4613      	movcc	r3, r2
 8012044:	469c      	mov	ip, r3
 8012046:	295c      	cmp	r1, #92	@ 0x5c
 8012048:	6863      	ldr	r3, [r4, #4]
 801204a:	6842      	ldr	r2, [r0, #4]
 801204c:	bf38      	it	cc
 801204e:	215c      	movcc	r1, #92	@ 0x5c
 8012050:	440b      	add	r3, r1
 8012052:	6021      	str	r1, [r4, #0]
 8012054:	212c      	movs	r1, #44	@ 0x2c
 8012056:	fb01 330c 	mla	r3, r1, ip, r3
 801205a:	b16a      	cbz	r2, 8012078 <Dmx::SetDmxBreakTime(unsigned long)+0x48>
 801205c:	429a      	cmp	r2, r3
 801205e:	d205      	bcs.n	801206c <Dmx::SetDmxBreakTime(unsigned long)+0x3c>
 8012060:	185a      	adds	r2, r3, r1
 8012062:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 8012066:	428a      	cmp	r2, r1
 8012068:	bf38      	it	cc
 801206a:	460a      	movcc	r2, r1
 801206c:	1ad3      	subs	r3, r2, r3
 801206e:	60a3      	str	r3, [r4, #8]
 8012070:	6002      	str	r2, [r0, #0]
 8012072:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012076:	4770      	bx	lr
 8012078:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 801207c:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 8012080:	428a      	cmp	r2, r1
 8012082:	bf38      	it	cc
 8012084:	460a      	movcc	r2, r1
 8012086:	e7f1      	b.n	801206c <Dmx::SetDmxBreakTime(unsigned long)+0x3c>
 8012088:	2001c000 	andcs	ip, r1, r0
 801208c:	20001c50 	andcs	r1, r0, r0, asr ip

08012090 <Dmx::GetDmxBreakTime() const>:
 8012090:	4b01      	ldr	r3, [pc, #4]	@ (8012098 <Dmx::GetDmxBreakTime() const+0x8>)
 8012092:	6818      	ldr	r0, [r3, #0]
 8012094:	4770      	bx	lr
 8012096:	bf00      	nop
 8012098:	20001c50 	andcs	r1, r0, r0, asr ip

0801209c <Dmx::SetDmxMabTime(unsigned long)>:
 801209c:	4a15      	ldr	r2, [pc, #84]	@ (80120f4 <Dmx::SetDmxMabTime(unsigned long)+0x58>)
 801209e:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 80120a2:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 80120a6:	b410      	push	{r4}
 80120a8:	4293      	cmp	r3, r2
 80120aa:	4c13      	ldr	r4, [pc, #76]	@ (80120f8 <Dmx::SetDmxMabTime(unsigned long)+0x5c>)
 80120ac:	bf38      	it	cc
 80120ae:	4613      	movcc	r3, r2
 80120b0:	469c      	mov	ip, r3
 80120b2:	290c      	cmp	r1, #12
 80120b4:	6823      	ldr	r3, [r4, #0]
 80120b6:	6842      	ldr	r2, [r0, #4]
 80120b8:	bf38      	it	cc
 80120ba:	210c      	movcc	r1, #12
 80120bc:	440b      	add	r3, r1
 80120be:	6061      	str	r1, [r4, #4]
 80120c0:	212c      	movs	r1, #44	@ 0x2c
 80120c2:	fb01 330c 	mla	r3, r1, ip, r3
 80120c6:	b16a      	cbz	r2, 80120e4 <Dmx::SetDmxMabTime(unsigned long)+0x48>
 80120c8:	429a      	cmp	r2, r3
 80120ca:	d205      	bcs.n	80120d8 <Dmx::SetDmxMabTime(unsigned long)+0x3c>
 80120cc:	185a      	adds	r2, r3, r1
 80120ce:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 80120d2:	428a      	cmp	r2, r1
 80120d4:	bf38      	it	cc
 80120d6:	460a      	movcc	r2, r1
 80120d8:	1ad3      	subs	r3, r2, r3
 80120da:	60a3      	str	r3, [r4, #8]
 80120dc:	6002      	str	r2, [r0, #0]
 80120de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80120e2:	4770      	bx	lr
 80120e4:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 80120e8:	f240 41b4 	movw	r1, #1204	@ 0x4b4
 80120ec:	428a      	cmp	r2, r1
 80120ee:	bf38      	it	cc
 80120f0:	460a      	movcc	r2, r1
 80120f2:	e7f1      	b.n	80120d8 <Dmx::SetDmxMabTime(unsigned long)+0x3c>
 80120f4:	2001c000 	andcs	ip, r1, r0
 80120f8:	20001c50 	andcs	r1, r0, r0, asr ip

080120fc <Dmx::GetDmxMabTime() const>:
 80120fc:	4b01      	ldr	r3, [pc, #4]	@ (8012104 <Dmx::GetDmxMabTime() const+0x8>)
 80120fe:	6858      	ldr	r0, [r3, #4]
 8012100:	4770      	bx	lr
 8012102:	bf00      	nop
 8012104:	20001c50 	andcs	r1, r0, r0, asr ip

08012108 <Dmx::SetDmxPeriodTime(unsigned long)>:
 8012108:	4a15      	ldr	r2, [pc, #84]	@ (8012160 <Dmx::SetDmxPeriodTime(unsigned long)+0x58>)
 801210a:	6041      	str	r1, [r0, #4]
 801210c:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 8012110:	f8d2 2418 	ldr.w	r2, [r2, #1048]	@ 0x418
 8012114:	4293      	cmp	r3, r2
 8012116:	bf38      	it	cc
 8012118:	4613      	movcc	r3, r2
 801211a:	4a12      	ldr	r2, [pc, #72]	@ (8012164 <Dmx::SetDmxPeriodTime(unsigned long)+0x5c>)
 801211c:	b510      	push	{r4, lr}
 801211e:	469c      	mov	ip, r3
 8012120:	e9d2 3400 	ldrd	r3, r4, [r2]
 8012124:	f04f 0e2c 	mov.w	lr, #44	@ 0x2c
 8012128:	4423      	add	r3, r4
 801212a:	fb0e 330c 	mla	r3, lr, ip, r3
 801212e:	b161      	cbz	r1, 801214a <Dmx::SetDmxPeriodTime(unsigned long)+0x42>
 8012130:	4299      	cmp	r1, r3
 8012132:	d206      	bcs.n	8012142 <Dmx::SetDmxPeriodTime(unsigned long)+0x3a>
 8012134:	eb03 010e 	add.w	r1, r3, lr
 8012138:	f240 4cb4 	movw	ip, #1204	@ 0x4b4
 801213c:	4561      	cmp	r1, ip
 801213e:	bf38      	it	cc
 8012140:	4661      	movcc	r1, ip
 8012142:	1acb      	subs	r3, r1, r3
 8012144:	6001      	str	r1, [r0, #0]
 8012146:	6093      	str	r3, [r2, #8]
 8012148:	bd10      	pop	{r4, pc}
 801214a:	f103 012c 	add.w	r1, r3, #44	@ 0x2c
 801214e:	f240 4cb4 	movw	ip, #1204	@ 0x4b4
 8012152:	4561      	cmp	r1, ip
 8012154:	bf38      	it	cc
 8012156:	4661      	movcc	r1, ip
 8012158:	1acb      	subs	r3, r1, r3
 801215a:	6001      	str	r1, [r0, #0]
 801215c:	6093      	str	r3, [r2, #8]
 801215e:	bd10      	pop	{r4, pc}
 8012160:	2001c000 	andcs	ip, r1, r0
 8012164:	20001c50 	andcs	r1, r0, r0, asr ip

08012168 <Dmx::SetDmxSlots(unsigned short)>:
 8012168:	1e8b      	subs	r3, r1, #2
 801216a:	f5b3 7fff 	cmp.w	r3, #510	@ 0x1fe
 801216e:	d829      	bhi.n	80121c4 <Dmx::SetDmxSlots(unsigned short)+0x5c>
 8012170:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
 8012174:	428a      	cmp	r2, r1
 8012176:	bf28      	it	cs
 8012178:	460a      	movcs	r2, r1
 801217a:	428b      	cmp	r3, r1
 801217c:	bf28      	it	cs
 801217e:	460b      	movcs	r3, r1
 8012180:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8012184:	b430      	push	{r4, r5}
 8012186:	4d12      	ldr	r5, [pc, #72]	@ (80121d0 <Dmx::SetDmxSlots(unsigned short)+0x68>)
 8012188:	6101      	str	r1, [r0, #16]
 801218a:	f8d5 4204 	ldr.w	r4, [r5, #516]	@ 0x204
 801218e:	f8d5 5418 	ldr.w	r5, [r5, #1048]	@ 0x418
 8012192:	4910      	ldr	r1, [pc, #64]	@ (80121d4 <Dmx::SetDmxSlots(unsigned short)+0x6c>)
 8012194:	6842      	ldr	r2, [r0, #4]
 8012196:	680b      	ldr	r3, [r1, #0]
 8012198:	42ac      	cmp	r4, r5
 801219a:	bf38      	it	cc
 801219c:	462c      	movcc	r4, r5
 801219e:	46a4      	mov	ip, r4
 80121a0:	684c      	ldr	r4, [r1, #4]
 80121a2:	4423      	add	r3, r4
 80121a4:	242c      	movs	r4, #44	@ 0x2c
 80121a6:	fb04 330c 	mla	r3, r4, ip, r3
 80121aa:	b962      	cbnz	r2, 80121c6 <Dmx::SetDmxSlots(unsigned short)+0x5e>
 80121ac:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 80121b0:	f240 44b4 	movw	r4, #1204	@ 0x4b4
 80121b4:	42a2      	cmp	r2, r4
 80121b6:	bf38      	it	cc
 80121b8:	4622      	movcc	r2, r4
 80121ba:	1ad3      	subs	r3, r2, r3
 80121bc:	bc30      	pop	{r4, r5}
 80121be:	6002      	str	r2, [r0, #0]
 80121c0:	608b      	str	r3, [r1, #8]
 80121c2:	4770      	bx	lr
 80121c4:	4770      	bx	lr
 80121c6:	429a      	cmp	r2, r3
 80121c8:	d2f7      	bcs.n	80121ba <Dmx::SetDmxSlots(unsigned short)+0x52>
 80121ca:	191a      	adds	r2, r3, r4
 80121cc:	e7f0      	b.n	80121b0 <Dmx::SetDmxSlots(unsigned short)+0x48>
 80121ce:	bf00      	nop
 80121d0:	2001c000 	andcs	ip, r1, r0
 80121d4:	20001c50 	andcs	r1, r0, r0, asr ip

080121d8 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>:
 80121d8:	b570      	push	{r4, r5, r6, lr}
 80121da:	4d30      	ldr	r5, [pc, #192]	@ (801229c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc4>)
 80121dc:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 80121e0:	fb0c 5c01 	mla	ip, ip, r1, r5
 80121e4:	2a01      	cmp	r2, #1
 80121e6:	4604      	mov	r4, r0
 80121e8:	f8cc 220c 	str.w	r2, [ip, #524]	@ 0x20c
 80121ec:	d00a      	beq.n	8012204 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2c>
 80121ee:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 80121f2:	2200      	movs	r2, #0
 80121f4:	2b01      	cmp	r3, #1
 80121f6:	7702      	strb	r2, [r0, #28]
 80121f8:	d041      	beq.n	801227e <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xa6>
 80121fa:	f8d5 3420 	ldr.w	r3, [r5, #1056]	@ 0x420
 80121fe:	2b01      	cmp	r3, #1
 8012200:	d03d      	beq.n	801227e <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xa6>
 8012202:	bd70      	pop	{r4, r5, r6, pc}
 8012204:	7f06      	ldrb	r6, [r0, #28]
 8012206:	2e00      	cmp	r6, #0
 8012208:	d03c      	beq.n	8012284 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xac>
 801220a:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 801220e:	2b01      	cmp	r3, #1
 8012210:	d024      	beq.n	801225c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x84>
 8012212:	f8d5 1420 	ldr.w	r1, [r5, #1056]	@ 0x420
 8012216:	2901      	cmp	r1, #1
 8012218:	d013      	beq.n	8012242 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x6a>
 801221a:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 801221e:	2b01      	cmp	r3, #1
 8012220:	d1ef      	bne.n	8012202 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 8012222:	6961      	ldr	r1, [r4, #20]
 8012224:	2900      	cmp	r1, #0
 8012226:	d034      	beq.n	8012292 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xba>
 8012228:	f8d5 3420 	ldr.w	r3, [r5, #1056]	@ 0x420
 801222c:	2b01      	cmp	r3, #1
 801222e:	d1e8      	bne.n	8012202 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 8012230:	69a3      	ldr	r3, [r4, #24]
 8012232:	2b00      	cmp	r3, #0
 8012234:	d1e5      	bne.n	8012202 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 8012236:	2101      	movs	r1, #1
 8012238:	4620      	mov	r0, r4
 801223a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801223e:	f7ff be9d 	b.w	8011f7c <Dmx::StartDmxOutput(unsigned long)>
 8012242:	69a3      	ldr	r3, [r4, #24]
 8012244:	b9a3      	cbnz	r3, 8012270 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x98>
 8012246:	4a16      	ldr	r2, [pc, #88]	@ (80122a0 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc8>)
 8012248:	6852      	ldr	r2, [r2, #4]
 801224a:	b18a      	cbz	r2, 8012270 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x98>
 801224c:	4620      	mov	r0, r4
 801224e:	f7ff f917 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8012252:	f8d5 320c 	ldr.w	r3, [r5, #524]	@ 0x20c
 8012256:	2b01      	cmp	r3, #1
 8012258:	d1e6      	bne.n	8012228 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x50>
 801225a:	e7e2      	b.n	8012222 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x4a>
 801225c:	6941      	ldr	r1, [r0, #20]
 801225e:	2900      	cmp	r1, #0
 8012260:	d1d7      	bne.n	8012212 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 8012262:	4b0f      	ldr	r3, [pc, #60]	@ (80122a0 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0xc8>)
 8012264:	681b      	ldr	r3, [r3, #0]
 8012266:	2b00      	cmp	r3, #0
 8012268:	d0d3      	beq.n	8012212 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 801226a:	f7ff f909 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 801226e:	e7d0      	b.n	8012212 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x3a>
 8012270:	f8d5 220c 	ldr.w	r2, [r5, #524]	@ 0x20c
 8012274:	2a01      	cmp	r2, #1
 8012276:	d0d4      	beq.n	8012222 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x4a>
 8012278:	2b00      	cmp	r3, #0
 801227a:	d1c2      	bne.n	8012202 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x2a>
 801227c:	e7db      	b.n	8012236 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x5e>
 801227e:	2301      	movs	r3, #1
 8012280:	7723      	strb	r3, [r4, #28]
 8012282:	bd70      	pop	{r4, r5, r6, pc}
 8012284:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8012288:	7702      	strb	r2, [r0, #28]
 801228a:	695b      	ldr	r3, [r3, #20]
 801228c:	2b00      	cmp	r3, #0
 801228e:	d0d4      	beq.n	801223a <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x62>
 8012290:	bd70      	pop	{r4, r5, r6, pc}
 8012292:	4620      	mov	r0, r4
 8012294:	f7ff fe72 	bl	8011f7c <Dmx::StartDmxOutput(unsigned long)>
 8012298:	e7c6      	b.n	8012228 <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x50>
 801229a:	bf00      	nop
 801229c:	2001c000 	andcs	ip, r1, r0
 80122a0:	200026e8 	andcs	r2, r0, r8, ror #13

080122a4 <Dmx::GetOutputStyle(unsigned long) const>:
 80122a4:	4b03      	ldr	r3, [pc, #12]	@ (80122b4 <Dmx::GetOutputStyle(unsigned long) const+0x10>)
 80122a6:	f44f 7205 	mov.w	r2, #532	@ 0x214
 80122aa:	fb02 3301 	mla	r3, r2, r1, r3
 80122ae:	f8d3 020c 	ldr.w	r0, [r3, #524]	@ 0x20c
 80122b2:	4770      	bx	lr
 80122b4:	2001c000 	andcs	ip, r1, r0

080122b8 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>:
 80122b8:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 80122bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122be:	fb0c fc01 	mul.w	ip, ip, r1
 80122c2:	460c      	mov	r4, r1
 80122c4:	4611      	mov	r1, r2
 80122c6:	6902      	ldr	r2, [r0, #16]
 80122c8:	4f21      	ldr	r7, [pc, #132]	@ (8012350 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x98>)
 80122ca:	4293      	cmp	r3, r2
 80122cc:	bf28      	it	cs
 80122ce:	4613      	movcs	r3, r2
 80122d0:	1c5a      	adds	r2, r3, #1
 80122d2:	461d      	mov	r5, r3
 80122d4:	eb07 030c 	add.w	r3, r7, ip
 80122d8:	4606      	mov	r6, r0
 80122da:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80122de:	2201      	movs	r2, #1
 80122e0:	f883 2208 	strb.w	r2, [r3, #520]	@ 0x208
 80122e4:	1898      	adds	r0, r3, r2
 80122e6:	2300      	movs	r3, #0
 80122e8:	f807 300c 	strb.w	r3, [r7, ip]
 80122ec:	b115      	cbz	r5, 80122f4 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x3c>
 80122ee:	462a      	mov	r2, r5
 80122f0:	f007 fbf7 	bl	8019ae2 <memmove>
 80122f4:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 80122f8:	68a3      	ldr	r3, [r4, #8]
 80122fa:	42ab      	cmp	r3, r5
 80122fc:	d100      	bne.n	8012300 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x48>
 80122fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012300:	60a5      	str	r5, [r4, #8]
 8012302:	f8d7 0204 	ldr.w	r0, [r7, #516]	@ 0x204
 8012306:	f8d7 4418 	ldr.w	r4, [r7, #1048]	@ 0x418
 801230a:	4912      	ldr	r1, [pc, #72]	@ (8012354 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x9c>)
 801230c:	6872      	ldr	r2, [r6, #4]
 801230e:	680b      	ldr	r3, [r1, #0]
 8012310:	42a0      	cmp	r0, r4
 8012312:	bf38      	it	cc
 8012314:	4620      	movcc	r0, r4
 8012316:	684c      	ldr	r4, [r1, #4]
 8012318:	4423      	add	r3, r4
 801231a:	242c      	movs	r4, #44	@ 0x2c
 801231c:	fb04 3300 	mla	r3, r4, r0, r3
 8012320:	b15a      	cbz	r2, 801233a <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x82>
 8012322:	429a      	cmp	r2, r3
 8012324:	d205      	bcs.n	8012332 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x7a>
 8012326:	191a      	adds	r2, r3, r4
 8012328:	f240 40b4 	movw	r0, #1204	@ 0x4b4
 801232c:	4282      	cmp	r2, r0
 801232e:	bf38      	it	cc
 8012330:	4602      	movcc	r2, r0
 8012332:	1ad3      	subs	r3, r2, r3
 8012334:	6032      	str	r2, [r6, #0]
 8012336:	608b      	str	r3, [r1, #8]
 8012338:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801233a:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 801233e:	f240 40b4 	movw	r0, #1204	@ 0x4b4
 8012342:	4282      	cmp	r2, r0
 8012344:	bf38      	it	cc
 8012346:	4602      	movcc	r2, r0
 8012348:	1ad3      	subs	r3, r2, r3
 801234a:	6032      	str	r2, [r6, #0]
 801234c:	608b      	str	r3, [r1, #8]
 801234e:	e7f3      	b.n	8012338 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x80>
 8012350:	2001c000 	andcs	ip, r1, r0
 8012354:	20001c50 	andcs	r1, r0, r0, asr ip

08012358 <Dmx::Blackout()>:
 8012358:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801235c:	f100 0610 	add.w	r6, r0, #16
 8012360:	4d29      	ldr	r5, [pc, #164]	@ (8012408 <Dmx::Blackout()+0xb0>)
 8012362:	f856 3f04 	ldr.w	r3, [r6, #4]!
 8012366:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 8012420 <Dmx::Blackout()+0xc8>
 801236a:	4607      	mov	r7, r0
 801236c:	2400      	movs	r4, #0
 801236e:	f240 2901 	movw	r9, #513	@ 0x201
 8012372:	b99b      	cbnz	r3, 801239c <Dmx::Blackout()+0x44>
 8012374:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8012378:	b11b      	cbz	r3, 8012382 <Dmx::Blackout()+0x2a>
 801237a:	4621      	mov	r1, r4
 801237c:	4638      	mov	r0, r7
 801237e:	f7ff f87f 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 8012382:	f8c5 9204 	str.w	r9, [r5, #516]	@ 0x204
 8012386:	f44f 7201 	mov.w	r2, #516	@ 0x204
 801238a:	2100      	movs	r1, #0
 801238c:	4628      	mov	r0, r5
 801238e:	f007 fbbf 	bl	8019b10 <memset>
 8012392:	6833      	ldr	r3, [r6, #0]
 8012394:	b983      	cbnz	r3, 80123b8 <Dmx::Blackout()+0x60>
 8012396:	2301      	movs	r3, #1
 8012398:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 801239c:	f505 7505 	add.w	r5, r5, #532	@ 0x214
 80123a0:	b944      	cbnz	r4, 80123b4 <Dmx::Blackout()+0x5c>
 80123a2:	f856 3f04 	ldr.w	r3, [r6, #4]!
 80123a6:	2401      	movs	r4, #1
 80123a8:	2b00      	cmp	r3, #0
 80123aa:	d0e3      	beq.n	8012374 <Dmx::Blackout()+0x1c>
 80123ac:	f505 7505 	add.w	r5, r5, #532	@ 0x214
 80123b0:	2c00      	cmp	r4, #0
 80123b2:	d0f6      	beq.n	80123a2 <Dmx::Blackout()+0x4a>
 80123b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80123b8:	4b14      	ldr	r3, [pc, #80]	@ (801240c <Dmx::Blackout()+0xb4>)
 80123ba:	4815      	ldr	r0, [pc, #84]	@ (8012410 <Dmx::Blackout()+0xb8>)
 80123bc:	4915      	ldr	r1, [pc, #84]	@ (8012414 <Dmx::Blackout()+0xbc>)
 80123be:	f240 521c 	movw	r2, #1308	@ 0x51c
 80123c2:	fb02 3304 	mla	r3, r2, r4, r3
 80123c6:	4a14      	ldr	r2, [pc, #80]	@ (8012418 <Dmx::Blackout()+0xc0>)
 80123c8:	2c01      	cmp	r4, #1
 80123ca:	bf18      	it	ne
 80123cc:	4611      	movne	r1, r2
 80123ce:	4a13      	ldr	r2, [pc, #76]	@ (801241c <Dmx::Blackout()+0xc4>)
 80123d0:	bf18      	it	ne
 80123d2:	4602      	movne	r2, r0
 80123d4:	2000      	movs	r0, #0
 80123d6:	f8c3 0518 	str.w	r0, [r3, #1304]	@ 0x518
 80123da:	f3bf 8f5f 	dmb	sy
 80123de:	6813      	ldr	r3, [r2, #0]
 80123e0:	061b      	lsls	r3, r3, #24
 80123e2:	d5fa      	bpl.n	80123da <Dmx::Blackout()+0x82>
 80123e4:	6813      	ldr	r3, [r2, #0]
 80123e6:	f023 0320 	bic.w	r3, r3, #32
 80123ea:	6013      	str	r3, [r2, #0]
 80123ec:	6813      	ldr	r3, [r2, #0]
 80123ee:	f023 0310 	bic.w	r3, r3, #16
 80123f2:	6013      	str	r3, [r2, #0]
 80123f4:	680b      	ldr	r3, [r1, #0]
 80123f6:	f043 0320 	orr.w	r3, r3, #32
 80123fa:	600b      	str	r3, [r1, #0]
 80123fc:	680b      	ldr	r3, [r1, #0]
 80123fe:	f043 0310 	orr.w	r3, r3, #16
 8012402:	600b      	str	r3, [r1, #0]
 8012404:	2302      	movs	r3, #2
 8012406:	e7c7      	b.n	8012398 <Dmx::Blackout()+0x40>
 8012408:	2001c000 	andcs	ip, r1, r0
 801240c:	20001c5c 	andcs	r1, r0, ip, asr ip
 8012410:	40004800 	andmi	r4, r0, r0, lsl #16
 8012414:	4001140c 	andmi	r1, r1, ip, lsl #8
 8012418:	4000480c 	andmi	r4, r0, ip, lsl #16
 801241c:	40011400 	andmi	r1, r1, r0, lsl #8
 8012420:	200026e8 	andcs	r2, r0, r8, ror #13

08012424 <Dmx::FullOn()>:
 8012424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012428:	f100 0610 	add.w	r6, r0, #16
 801242c:	4c2b      	ldr	r4, [pc, #172]	@ (80124dc <Dmx::FullOn()+0xb8>)
 801242e:	f856 3f04 	ldr.w	r3, [r6, #4]!
 8012432:	4607      	mov	r7, r0
 8012434:	2500      	movs	r5, #0
 8012436:	b143      	cbz	r3, 801244a <Dmx::FullOn()+0x26>
 8012438:	f504 7405 	add.w	r4, r4, #532	@ 0x214
 801243c:	2d00      	cmp	r5, #0
 801243e:	d148      	bne.n	80124d2 <Dmx::FullOn()+0xae>
 8012440:	f856 3f04 	ldr.w	r3, [r6, #4]!
 8012444:	2501      	movs	r5, #1
 8012446:	2b00      	cmp	r3, #0
 8012448:	d1f6      	bne.n	8012438 <Dmx::FullOn()+0x14>
 801244a:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 80124f0 <Dmx::FullOn()+0xcc>
 801244e:	f858 3025 	ldr.w	r3, [r8, r5, lsl #2]
 8012452:	b11b      	cbz	r3, 801245c <Dmx::FullOn()+0x38>
 8012454:	4629      	mov	r1, r5
 8012456:	4638      	mov	r0, r7
 8012458:	f7ff f812 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 801245c:	f44f 7201 	mov.w	r2, #516	@ 0x204
 8012460:	21ff      	movs	r1, #255	@ 0xff
 8012462:	4620      	mov	r0, r4
 8012464:	f007 fb54 	bl	8019b10 <memset>
 8012468:	f240 2201 	movw	r2, #513	@ 0x201
 801246c:	2300      	movs	r3, #0
 801246e:	7023      	strb	r3, [r4, #0]
 8012470:	f8c4 2204 	str.w	r2, [r4, #516]	@ 0x204
 8012474:	6832      	ldr	r2, [r6, #0]
 8012476:	b372      	cbz	r2, 80124d6 <Dmx::FullOn()+0xb2>
 8012478:	4a19      	ldr	r2, [pc, #100]	@ (80124e0 <Dmx::FullOn()+0xbc>)
 801247a:	f240 511c 	movw	r1, #1308	@ 0x51c
 801247e:	fb01 2205 	mla	r2, r1, r5, r2
 8012482:	2d01      	cmp	r5, #1
 8012484:	f8c2 3518 	str.w	r3, [r2, #1304]	@ 0x518
 8012488:	4b16      	ldr	r3, [pc, #88]	@ (80124e4 <Dmx::FullOn()+0xc0>)
 801248a:	4917      	ldr	r1, [pc, #92]	@ (80124e8 <Dmx::FullOn()+0xc4>)
 801248c:	4a17      	ldr	r2, [pc, #92]	@ (80124ec <Dmx::FullOn()+0xc8>)
 801248e:	bf18      	it	ne
 8012490:	4619      	movne	r1, r3
 8012492:	f1a3 030c 	sub.w	r3, r3, #12
 8012496:	bf18      	it	ne
 8012498:	461a      	movne	r2, r3
 801249a:	f3bf 8f5f 	dmb	sy
 801249e:	6813      	ldr	r3, [r2, #0]
 80124a0:	061b      	lsls	r3, r3, #24
 80124a2:	d5fa      	bpl.n	801249a <Dmx::FullOn()+0x76>
 80124a4:	6813      	ldr	r3, [r2, #0]
 80124a6:	f023 0320 	bic.w	r3, r3, #32
 80124aa:	6013      	str	r3, [r2, #0]
 80124ac:	6813      	ldr	r3, [r2, #0]
 80124ae:	f023 0310 	bic.w	r3, r3, #16
 80124b2:	6013      	str	r3, [r2, #0]
 80124b4:	680b      	ldr	r3, [r1, #0]
 80124b6:	f043 0320 	orr.w	r3, r3, #32
 80124ba:	600b      	str	r3, [r1, #0]
 80124bc:	680b      	ldr	r3, [r1, #0]
 80124be:	f043 0310 	orr.w	r3, r3, #16
 80124c2:	600b      	str	r3, [r1, #0]
 80124c4:	2302      	movs	r3, #2
 80124c6:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
 80124ca:	f504 7405 	add.w	r4, r4, #532	@ 0x214
 80124ce:	2d00      	cmp	r5, #0
 80124d0:	d0b6      	beq.n	8012440 <Dmx::FullOn()+0x1c>
 80124d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124d6:	2301      	movs	r3, #1
 80124d8:	e7f5      	b.n	80124c6 <Dmx::FullOn()+0xa2>
 80124da:	bf00      	nop
 80124dc:	2001c000 	andcs	ip, r1, r0
 80124e0:	20001c5c 	andcs	r1, r0, ip, asr ip
 80124e4:	4000480c 	andmi	r4, r0, ip, lsl #16
 80124e8:	4001140c 	andmi	r1, r1, ip, lsl #8
 80124ec:	40011400 	andmi	r1, r1, r0, lsl #8
 80124f0:	200026e8 	andcs	r2, r0, r8, ror #13

080124f4 <Dmx::StartOutput(unsigned long)>:
 80124f4:	4a0a      	ldr	r2, [pc, #40]	@ (8012520 <Dmx::StartOutput(unsigned long)+0x2c>)
 80124f6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80124fa:	2a01      	cmp	r2, #1
 80124fc:	d000      	beq.n	8012500 <Dmx::StartOutput(unsigned long)+0xc>
 80124fe:	4770      	bx	lr
 8012500:	4a08      	ldr	r2, [pc, #32]	@ (8012524 <Dmx::StartOutput(unsigned long)+0x30>)
 8012502:	f44f 7c05 	mov.w	ip, #532	@ 0x214
 8012506:	fb0c 2301 	mla	r3, ip, r1, r2
 801250a:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 801250e:	2a00      	cmp	r2, #0
 8012510:	d1f5      	bne.n	80124fe <Dmx::StartOutput(unsigned long)+0xa>
 8012512:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 8012516:	2b00      	cmp	r3, #0
 8012518:	d1f1      	bne.n	80124fe <Dmx::StartOutput(unsigned long)+0xa>
 801251a:	f7ff bd2f 	b.w	8011f7c <Dmx::StartDmxOutput(unsigned long)>
 801251e:	bf00      	nop
 8012520:	200026e8 	andcs	r2, r0, r8, ror #13
 8012524:	2001c000 	andcs	ip, r1, r0

08012528 <Dmx::Sync()>:
 8012528:	b538      	push	{r3, r4, r5, lr}
 801252a:	4c17      	ldr	r4, [pc, #92]	@ (8012588 <Dmx::Sync()+0x60>)
 801252c:	f894 3208 	ldrb.w	r3, [r4, #520]	@ 0x208
 8012530:	4605      	mov	r5, r0
 8012532:	b133      	cbz	r3, 8012542 <Dmx::Sync()+0x1a>
 8012534:	4b15      	ldr	r3, [pc, #84]	@ (801258c <Dmx::Sync()+0x64>)
 8012536:	681b      	ldr	r3, [r3, #0]
 8012538:	2200      	movs	r2, #0
 801253a:	2b01      	cmp	r3, #1
 801253c:	f884 2208 	strb.w	r2, [r4, #520]	@ 0x208
 8012540:	d017      	beq.n	8012572 <Dmx::Sync()+0x4a>
 8012542:	f894 341c 	ldrb.w	r3, [r4, #1052]	@ 0x41c
 8012546:	b133      	cbz	r3, 8012556 <Dmx::Sync()+0x2e>
 8012548:	4a10      	ldr	r2, [pc, #64]	@ (801258c <Dmx::Sync()+0x64>)
 801254a:	6851      	ldr	r1, [r2, #4]
 801254c:	2300      	movs	r3, #0
 801254e:	2901      	cmp	r1, #1
 8012550:	f884 341c 	strb.w	r3, [r4, #1052]	@ 0x41c
 8012554:	d000      	beq.n	8012558 <Dmx::Sync()+0x30>
 8012556:	bd38      	pop	{r3, r4, r5, pc}
 8012558:	f8d4 3420 	ldr.w	r3, [r4, #1056]	@ 0x420
 801255c:	2b00      	cmp	r3, #0
 801255e:	d1fa      	bne.n	8012556 <Dmx::Sync()+0x2e>
 8012560:	f8d4 3424 	ldr.w	r3, [r4, #1060]	@ 0x424
 8012564:	2b00      	cmp	r3, #0
 8012566:	d1f6      	bne.n	8012556 <Dmx::Sync()+0x2e>
 8012568:	4628      	mov	r0, r5
 801256a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801256e:	f7ff bd05 	b.w	8011f7c <Dmx::StartDmxOutput(unsigned long)>
 8012572:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
 8012576:	2b00      	cmp	r3, #0
 8012578:	d1e3      	bne.n	8012542 <Dmx::Sync()+0x1a>
 801257a:	f8d4 1210 	ldr.w	r1, [r4, #528]	@ 0x210
 801257e:	2900      	cmp	r1, #0
 8012580:	d1df      	bne.n	8012542 <Dmx::Sync()+0x1a>
 8012582:	f7ff fcfb 	bl	8011f7c <Dmx::StartDmxOutput(unsigned long)>
 8012586:	e7dc      	b.n	8012542 <Dmx::Sync()+0x1a>
 8012588:	2001c000 	andcs	ip, r1, r0
 801258c:	200026e8 	andcs	r2, r0, r8, ror #13

08012590 <Dmx::GetDmxChanged(unsigned long)>:
 8012590:	f240 531c 	movw	r3, #1308	@ 0x51c
 8012594:	b470      	push	{r4, r5, r6}
 8012596:	4d31      	ldr	r5, [pc, #196]	@ (801265c <Dmx::GetDmxChanged(unsigned long)+0xcc>)
 8012598:	fb03 f101 	mul.w	r1, r3, r1
 801259c:	186a      	adds	r2, r5, r1
 801259e:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 80125a2:	0418      	lsls	r0, r3, #16
 80125a4:	d557      	bpl.n	8012656 <Dmx::GetDmxChanged(unsigned long)+0xc6>
 80125a6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80125aa:	3b01      	subs	r3, #1
 80125ac:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 80125b0:	f8d2 6204 	ldr.w	r6, [r2, #516]	@ 0x204
 80125b4:	f8d2 340c 	ldr.w	r3, [r2, #1036]	@ 0x40c
 80125b8:	f501 7402 	add.w	r4, r1, #520	@ 0x208
 80125bc:	429e      	cmp	r6, r3
 80125be:	4610      	mov	r0, r2
 80125c0:	442c      	add	r4, r5
 80125c2:	d036      	beq.n	8012632 <Dmx::GetDmxChanged(unsigned long)+0xa2>
 80125c4:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 80125c8:	f8c2 340c 	str.w	r3, [r2, #1036]	@ 0x40c
 80125cc:	4621      	mov	r1, r4
 80125ce:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
 80125d2:	2500      	movs	r5, #0
 80125d4:	f853 6c5c 	ldr.w	r6, [r3, #-92]
 80125d8:	f893 f000 	pld	[r3]
 80125dc:	600e      	str	r6, [r1, #0]
 80125de:	f853 6c58 	ldr.w	r6, [r3, #-88]
 80125e2:	604e      	str	r6, [r1, #4]
 80125e4:	f853 6c54 	ldr.w	r6, [r3, #-84]
 80125e8:	608e      	str	r6, [r1, #8]
 80125ea:	f853 6c50 	ldr.w	r6, [r3, #-80]
 80125ee:	60ce      	str	r6, [r1, #12]
 80125f0:	f853 6c4c 	ldr.w	r6, [r3, #-76]
 80125f4:	610e      	str	r6, [r1, #16]
 80125f6:	f853 6c48 	ldr.w	r6, [r3, #-72]
 80125fa:	614e      	str	r6, [r1, #20]
 80125fc:	f853 6c44 	ldr.w	r6, [r3, #-68]
 8012600:	618e      	str	r6, [r1, #24]
 8012602:	3508      	adds	r5, #8
 8012604:	f853 6c40 	ldr.w	r6, [r3, #-64]
 8012608:	61ce      	str	r6, [r1, #28]
 801260a:	2d80      	cmp	r5, #128	@ 0x80
 801260c:	f103 0320 	add.w	r3, r3, #32
 8012610:	f101 0120 	add.w	r1, r1, #32
 8012614:	d1de      	bne.n	80125d4 <Dmx::GetDmxChanged(unsigned long)+0x44>
 8012616:	f504 73fe 	add.w	r3, r4, #508	@ 0x1fc
 801261a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
 801261e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
 8012622:	f852 1b04 	ldr.w	r1, [r2], #4
 8012626:	f843 1f04 	str.w	r1, [r3, #4]!
 801262a:	429c      	cmp	r4, r3
 801262c:	d1f9      	bne.n	8012622 <Dmx::GetDmxChanged(unsigned long)+0x92>
 801262e:	bc70      	pop	{r4, r5, r6}
 8012630:	4770      	bx	lr
 8012632:	1f23      	subs	r3, r4, #4
 8012634:	f504 7c00 	add.w	ip, r4, #512	@ 0x200
 8012638:	2500      	movs	r5, #0
 801263a:	6811      	ldr	r1, [r2, #0]
 801263c:	f853 4f04 	ldr.w	r4, [r3, #4]!
 8012640:	42a1      	cmp	r1, r4
 8012642:	bf1c      	itt	ne
 8012644:	6019      	strne	r1, [r3, #0]
 8012646:	2501      	movne	r5, #1
 8012648:	4563      	cmp	r3, ip
 801264a:	f102 0204 	add.w	r2, r2, #4
 801264e:	d1f4      	bne.n	801263a <Dmx::GetDmxChanged(unsigned long)+0xaa>
 8012650:	b10d      	cbz	r5, 8012656 <Dmx::GetDmxChanged(unsigned long)+0xc6>
 8012652:	bc70      	pop	{r4, r5, r6}
 8012654:	4770      	bx	lr
 8012656:	2000      	movs	r0, #0
 8012658:	bc70      	pop	{r4, r5, r6}
 801265a:	4770      	bx	lr
 801265c:	20001c5c 	andcs	r1, r0, ip, asr ip

08012660 <Dmx::GetDmxCurrentData(unsigned long)>:
 8012660:	4b02      	ldr	r3, [pc, #8]	@ (801266c <Dmx::GetDmxCurrentData(unsigned long)+0xc>)
 8012662:	f240 501c 	movw	r0, #1308	@ 0x51c
 8012666:	fb00 3001 	mla	r0, r0, r1, r3
 801266a:	4770      	bx	lr
 801266c:	20001c5c 	andcs	r1, r0, ip, asr ip

08012670 <Dmx::GetDmxUpdatesPerSecond(unsigned long)>:
 8012670:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012674:	4b01      	ldr	r3, [pc, #4]	@ (801267c <Dmx::GetDmxUpdatesPerSecond(unsigned long)+0xc>)
 8012676:	0089      	lsls	r1, r1, #2
 8012678:	5858      	ldr	r0, [r3, r1]
 801267a:	4770      	bx	lr
 801267c:	20002698 	mulcs	r0, r8, r6

08012680 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>:
 8012680:	b430      	push	{r4, r5}
 8012682:	2900      	cmp	r1, #0
 8012684:	d060      	beq.n	8012748 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xc8>
 8012686:	2901      	cmp	r1, #1
 8012688:	d15c      	bne.n	8012744 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xc4>
 801268a:	4960      	ldr	r1, [pc, #384]	@ (801280c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x18c>)
 801268c:	f8d1 0800 	ldr.w	r0, [r1, #2048]	@ 0x800
 8012690:	f8d1 480c 	ldr.w	r4, [r1, #2060]	@ 0x80c
 8012694:	f420 5040 	bic.w	r0, r0, #12288	@ 0x3000
 8012698:	f440 5080 	orr.w	r0, r0, #4096	@ 0x1000
 801269c:	f8c1 0800 	str.w	r0, [r1, #2048]	@ 0x800
 80126a0:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 80126a4:	485a      	ldr	r0, [pc, #360]	@ (8012810 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x190>)
 80126a6:	f8c1 480c 	str.w	r4, [r1, #2060]	@ 0x80c
 80126aa:	2540      	movs	r5, #64	@ 0x40
 80126ac:	f8c1 5828 	str.w	r5, [r1, #2088]	@ 0x828
 80126b0:	2100      	movs	r1, #0
 80126b2:	6241      	str	r1, [r0, #36]	@ 0x24
 80126b4:	f3bf 8f5f 	dmb	sy
 80126b8:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 80126ba:	29af      	cmp	r1, #175	@ 0xaf
 80126bc:	d9fa      	bls.n	80126b4 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x34>
 80126be:	4953      	ldr	r1, [pc, #332]	@ (801280c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x18c>)
 80126c0:	f8d1 5800 	ldr.w	r5, [r1, #2048]	@ 0x800
 80126c4:	f8d1 480c 	ldr.w	r4, [r1, #2060]	@ 0x80c
 80126c8:	f425 5540 	bic.w	r5, r5, #12288	@ 0x3000
 80126cc:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 80126d0:	f445 5500 	orr.w	r5, r5, #8192	@ 0x2000
 80126d4:	f444 5480 	orr.w	r4, r4, #4096	@ 0x1000
 80126d8:	f8c1 5800 	str.w	r5, [r1, #2048]	@ 0x800
 80126dc:	f8c1 480c 	str.w	r4, [r1, #2060]	@ 0x80c
 80126e0:	f8d1 4820 	ldr.w	r4, [r1, #2080]	@ 0x820
 80126e4:	f8d1 5824 	ldr.w	r5, [r1, #2084]	@ 0x824
 80126e8:	f024 6470 	bic.w	r4, r4, #251658240	@ 0xf000000
 80126ec:	f044 6400 	orr.w	r4, r4, #134217728	@ 0x8000000
 80126f0:	f8c1 4820 	str.w	r4, [r1, #2080]	@ 0x820
 80126f4:	f8c1 5824 	str.w	r5, [r1, #2084]	@ 0x824
 80126f8:	4c45      	ldr	r4, [pc, #276]	@ (8012810 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x190>)
 80126fa:	2100      	movs	r1, #0
 80126fc:	6241      	str	r1, [r0, #36]	@ 0x24
 80126fe:	f3bf 8f5f 	dmb	sy
 8012702:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8012704:	290b      	cmp	r1, #11
 8012706:	d9fa      	bls.n	80126fe <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x7e>
 8012708:	b183      	cbz	r3, 801272c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xac>
 801270a:	3b01      	subs	r3, #1
 801270c:	4841      	ldr	r0, [pc, #260]	@ (8012814 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x194>)
 801270e:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
 8012712:	441a      	add	r2, r3
 8012714:	f3bf 8f5f 	dmb	sy
 8012718:	f8d0 1400 	ldr.w	r1, [r0, #1024]	@ 0x400
 801271c:	0609      	lsls	r1, r1, #24
 801271e:	d5f9      	bpl.n	8012714 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x94>
 8012720:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
 8012724:	f8c0 1404 	str.w	r1, [r0, #1028]	@ 0x404
 8012728:	4594      	cmp	ip, r2
 801272a:	d1f3      	bne.n	8012714 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x94>
 801272c:	4b39      	ldr	r3, [pc, #228]	@ (8012814 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x194>)
 801272e:	e001      	b.n	8012734 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xb4>
 8012730:	f8d3 2404 	ldr.w	r2, [r3, #1028]	@ 0x404
 8012734:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 8012738:	0652      	lsls	r2, r2, #25
 801273a:	d5f9      	bpl.n	8012730 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xb0>
 801273c:	4a36      	ldr	r2, [pc, #216]	@ (8012818 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x198>)
 801273e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8012740:	3301      	adds	r3, #1
 8012742:	6313      	str	r3, [r2, #48]	@ 0x30
 8012744:	bc30      	pop	{r4, r5}
 8012746:	4770      	bx	lr
 8012748:	4830      	ldr	r0, [pc, #192]	@ (801280c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x18c>)
 801274a:	f8d0 4400 	ldr.w	r4, [r0, #1024]	@ 0x400
 801274e:	f8d0 540c 	ldr.w	r5, [r0, #1036]	@ 0x40c
 8012752:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 8012756:	f444 1480 	orr.w	r4, r4, #1048576	@ 0x100000
 801275a:	f8c0 4400 	str.w	r4, [r0, #1024]	@ 0x400
 801275e:	f425 1540 	bic.w	r5, r5, #3145728	@ 0x300000
 8012762:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8012766:	f8c0 540c 	str.w	r5, [r0, #1036]	@ 0x40c
 801276a:	f8c0 4428 	str.w	r4, [r0, #1064]	@ 0x428
 801276e:	f5a0 30f8 	sub.w	r0, r0, #126976	@ 0x1f000
 8012772:	6241      	str	r1, [r0, #36]	@ 0x24
 8012774:	f3bf 8f5f 	dmb	sy
 8012778:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 801277a:	29af      	cmp	r1, #175	@ 0xaf
 801277c:	d9fa      	bls.n	8012774 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0xf4>
 801277e:	4923      	ldr	r1, [pc, #140]	@ (801280c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x18c>)
 8012780:	f8d1 5400 	ldr.w	r5, [r1, #1024]	@ 0x400
 8012784:	f8d1 440c 	ldr.w	r4, [r1, #1036]	@ 0x40c
 8012788:	f425 1540 	bic.w	r5, r5, #3145728	@ 0x300000
 801278c:	f424 1440 	bic.w	r4, r4, #3145728	@ 0x300000
 8012790:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
 8012794:	f444 1480 	orr.w	r4, r4, #1048576	@ 0x100000
 8012798:	f8c1 5400 	str.w	r5, [r1, #1024]	@ 0x400
 801279c:	f8c1 440c 	str.w	r4, [r1, #1036]	@ 0x40c
 80127a0:	f8d1 5420 	ldr.w	r5, [r1, #1056]	@ 0x420
 80127a4:	f8d1 4424 	ldr.w	r4, [r1, #1060]	@ 0x424
 80127a8:	f8c1 5420 	str.w	r5, [r1, #1056]	@ 0x420
 80127ac:	f424 6470 	bic.w	r4, r4, #3840	@ 0xf00
 80127b0:	f444 64e0 	orr.w	r4, r4, #1792	@ 0x700
 80127b4:	f8c1 4424 	str.w	r4, [r1, #1060]	@ 0x424
 80127b8:	2100      	movs	r1, #0
 80127ba:	4c15      	ldr	r4, [pc, #84]	@ (8012810 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x190>)
 80127bc:	6241      	str	r1, [r0, #36]	@ 0x24
 80127be:	f3bf 8f5f 	dmb	sy
 80127c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80127c4:	290b      	cmp	r1, #11
 80127c6:	d9fa      	bls.n	80127be <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x13e>
 80127c8:	b18b      	cbz	r3, 80127ee <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x16e>
 80127ca:	3b01      	subs	r3, #1
 80127cc:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
 80127d0:	4413      	add	r3, r2
 80127d2:	f04f 2040 	mov.w	r0, #1073758208	@ 0x40004000
 80127d6:	f3bf 8f5f 	dmb	sy
 80127da:	f8d0 1800 	ldr.w	r1, [r0, #2048]	@ 0x800
 80127de:	060c      	lsls	r4, r1, #24
 80127e0:	d5f9      	bpl.n	80127d6 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x156>
 80127e2:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
 80127e6:	f8c0 1804 	str.w	r1, [r0, #2052]	@ 0x804
 80127ea:	459c      	cmp	ip, r3
 80127ec:	d1f3      	bne.n	80127d6 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x156>
 80127ee:	f04f 2340 	mov.w	r3, #1073758208	@ 0x40004000
 80127f2:	e001      	b.n	80127f8 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x178>
 80127f4:	f8d3 2804 	ldr.w	r2, [r3, #2052]	@ 0x804
 80127f8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 80127fc:	0650      	lsls	r0, r2, #25
 80127fe:	d5f9      	bpl.n	80127f4 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x174>
 8012800:	4a05      	ldr	r2, [pc, #20]	@ (8012818 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x198>)
 8012802:	6953      	ldr	r3, [r2, #20]
 8012804:	3301      	adds	r3, #1
 8012806:	bc30      	pop	{r4, r5}
 8012808:	6153      	str	r3, [r2, #20]
 801280a:	4770      	bx	lr
 801280c:	40020000 	andmi	r0, r2, r0
 8012810:	40001000 	andmi	r1, r0, r0
 8012814:	40011000 	andmi	r1, r1, r0
 8012818:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0

0801281c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)>:
 801281c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012820:	4c57      	ldr	r4, [pc, #348]	@ (8012980 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x164>)
 8012822:	f8df a188 	ldr.w	sl, [pc, #392]	@ 80129ac <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x190>
 8012826:	6824      	ldr	r4, [r4, #0]
 8012828:	460e      	mov	r6, r1
 801282a:	4607      	mov	r7, r0
 801282c:	eb07 0886 	add.w	r8, r7, r6, lsl #2
 8012830:	4621      	mov	r1, r4
 8012832:	20c8      	movs	r0, #200	@ 0xc8
 8012834:	461d      	mov	r5, r3
 8012836:	4614      	mov	r4, r2
 8012838:	f006 fbd6 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 801283c:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8012840:	2b00      	cmp	r3, #0
 8012842:	f000 8093 	beq.w	801296c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x150>
 8012846:	2300      	movs	r3, #0
 8012848:	f8c8 3014 	str.w	r3, [r8, #20]
 801284c:	f85a 3026 	ldr.w	r3, [sl, r6, lsl #2]
 8012850:	b11b      	cbz	r3, 801285a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x3e>
 8012852:	4631      	mov	r1, r6
 8012854:	4638      	mov	r0, r7
 8012856:	f7fe fe13 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 801285a:	4b4a      	ldr	r3, [pc, #296]	@ (8012984 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x168>)
 801285c:	eb03 02c6 	add.w	r2, r3, r6, lsl #3
 8012860:	f853 3036 	ldr.w	r3, [r3, r6, lsl #3]
 8012864:	6852      	ldr	r2, [r2, #4]
 8012866:	619a      	str	r2, [r3, #24]
 8012868:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 801286c:	4b46      	ldr	r3, [pc, #280]	@ (8012988 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x16c>)
 801286e:	4a47      	ldr	r2, [pc, #284]	@ (801298c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x170>)
 8012870:	4947      	ldr	r1, [pc, #284]	@ (8012990 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x174>)
 8012872:	2e00      	cmp	r6, #0
 8012874:	bf18      	it	ne
 8012876:	4619      	movne	r1, r3
 8012878:	f1a3 0304 	sub.w	r3, r3, #4
 801287c:	bf0c      	ite	eq
 801287e:	4694      	moveq	ip, r2
 8012880:	469c      	movne	ip, r3
 8012882:	b195      	cbz	r5, 80128aa <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x8e>
 8012884:	1960      	adds	r0, r4, r5
 8012886:	1e62      	subs	r2, r4, #1
 8012888:	3801      	subs	r0, #1
 801288a:	f3bf 8f5f 	dmb	sy
 801288e:	f8dc 3000 	ldr.w	r3, [ip]
 8012892:	061c      	lsls	r4, r3, #24
 8012894:	d5f9      	bpl.n	801288a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x6e>
 8012896:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 801289a:	600b      	str	r3, [r1, #0]
 801289c:	4290      	cmp	r0, r2
 801289e:	d1f4      	bne.n	801288a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x6e>
 80128a0:	f8dc 3000 	ldr.w	r3, [ip]
 80128a4:	065a      	lsls	r2, r3, #25
 80128a6:	d404      	bmi.n	80128b2 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x96>
 80128a8:	680b      	ldr	r3, [r1, #0]
 80128aa:	f8dc 3000 	ldr.w	r3, [ip]
 80128ae:	065a      	lsls	r2, r3, #25
 80128b0:	d5fa      	bpl.n	80128a8 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x8c>
 80128b2:	4a38      	ldr	r2, [pc, #224]	@ (8012994 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x178>)
 80128b4:	2300      	movs	r3, #0
 80128b6:	6253      	str	r3, [r2, #36]	@ 0x24
 80128b8:	f3bf 8f5f 	dmb	sy
 80128bc:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80128be:	2b03      	cmp	r3, #3
 80128c0:	d9fa      	bls.n	80128b8 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x9c>
 80128c2:	f8d8 3014 	ldr.w	r3, [r8, #20]
 80128c6:	2b01      	cmp	r3, #1
 80128c8:	d025      	beq.n	8012916 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xfa>
 80128ca:	f85a 3026 	ldr.w	r3, [sl, r6, lsl #2]
 80128ce:	2401      	movs	r4, #1
 80128d0:	f8c8 4014 	str.w	r4, [r8, #20]
 80128d4:	b1cb      	cbz	r3, 801290a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xee>
 80128d6:	4631      	mov	r1, r6
 80128d8:	4638      	mov	r0, r7
 80128da:	f7fe fdd1 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 80128de:	4b29      	ldr	r3, [pc, #164]	@ (8012984 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x168>)
 80128e0:	f8d8 2014 	ldr.w	r2, [r8, #20]
 80128e4:	eb03 0109 	add.w	r1, r3, r9
 80128e8:	f853 3036 	ldr.w	r3, [r3, r6, lsl #3]
 80128ec:	6849      	ldr	r1, [r1, #4]
 80128ee:	6299      	str	r1, [r3, #40]	@ 0x28
 80128f0:	b98a      	cbnz	r2, 8012916 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xfa>
 80128f2:	f84a 4026 	str.w	r4, [sl, r6, lsl #2]
 80128f6:	4b28      	ldr	r3, [pc, #160]	@ (8012998 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x17c>)
 80128f8:	eba9 0906 	sub.w	r9, r9, r6
 80128fc:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 8012900:	699a      	ldr	r2, [r3, #24]
 8012902:	3201      	adds	r2, #1
 8012904:	619a      	str	r2, [r3, #24]
 8012906:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801290a:	4b1e      	ldr	r3, [pc, #120]	@ (8012984 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x168>)
 801290c:	f853 2036 	ldr.w	r2, [r3, r6, lsl #3]
 8012910:	444b      	add	r3, r9
 8012912:	685b      	ldr	r3, [r3, #4]
 8012914:	6293      	str	r3, [r2, #40]	@ 0x28
 8012916:	4b21      	ldr	r3, [pc, #132]	@ (801299c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x180>)
 8012918:	4921      	ldr	r1, [pc, #132]	@ (80129a0 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x184>)
 801291a:	f240 521c 	movw	r2, #1308	@ 0x51c
 801291e:	fb02 3306 	mla	r3, r2, r6, r3
 8012922:	2200      	movs	r2, #0
 8012924:	f8c3 2518 	str.w	r2, [r3, #1304]	@ 0x518
 8012928:	4b1e      	ldr	r3, [pc, #120]	@ (80129a4 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x188>)
 801292a:	4a1f      	ldr	r2, [pc, #124]	@ (80129a8 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x18c>)
 801292c:	2e01      	cmp	r6, #1
 801292e:	bf18      	it	ne
 8012930:	4619      	movne	r1, r3
 8012932:	f1a3 030c 	sub.w	r3, r3, #12
 8012936:	bf18      	it	ne
 8012938:	461a      	movne	r2, r3
 801293a:	f3bf 8f5f 	dmb	sy
 801293e:	6813      	ldr	r3, [r2, #0]
 8012940:	061b      	lsls	r3, r3, #24
 8012942:	d5fa      	bpl.n	801293a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x11e>
 8012944:	6813      	ldr	r3, [r2, #0]
 8012946:	f023 0320 	bic.w	r3, r3, #32
 801294a:	6013      	str	r3, [r2, #0]
 801294c:	6813      	ldr	r3, [r2, #0]
 801294e:	f023 0310 	bic.w	r3, r3, #16
 8012952:	6013      	str	r3, [r2, #0]
 8012954:	680b      	ldr	r3, [r1, #0]
 8012956:	f043 0320 	orr.w	r3, r3, #32
 801295a:	600b      	str	r3, [r1, #0]
 801295c:	680b      	ldr	r3, [r1, #0]
 801295e:	f043 0310 	orr.w	r3, r3, #16
 8012962:	600b      	str	r3, [r1, #0]
 8012964:	2302      	movs	r3, #2
 8012966:	f84a 3026 	str.w	r3, [sl, r6, lsl #2]
 801296a:	e7c4      	b.n	80128f6 <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xda>
 801296c:	f85a 3026 	ldr.w	r3, [sl, r6, lsl #2]
 8012970:	b11b      	cbz	r3, 801297a <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x15e>
 8012972:	4631      	mov	r1, r6
 8012974:	4638      	mov	r0, r7
 8012976:	f7fe fd83 	bl	8011480 <Dmx::StopData(unsigned long) [clone .part.0]>
 801297a:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 801297e:	e775      	b.n	801286c <Dmx::RdmSendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x50>
 8012980:	20002694 	mulcs	r0, r4, r6
 8012984:	0801e86c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr, pc}
 8012988:	40011404 	andmi	r1, r1, r4, lsl #8
 801298c:	40004800 	andmi	r4, r0, r0, lsl #16
 8012990:	40004804 	andmi	r4, r0, r4, lsl #16
 8012994:	40001000 	andmi	r1, r0, r0
 8012998:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0
 801299c:	20001c5c 	andcs	r1, r0, ip, asr ip
 80129a0:	4001140c 	andmi	r1, r1, ip, lsl #8
 80129a4:	4000480c 	andmi	r4, r0, ip, lsl #16
 80129a8:	40011400 	andmi	r1, r1, r0, lsl #8
 80129ac:	200026e8 	andcs	r2, r0, r8, ror #13

080129b0 <Dmx::RdmReceive(unsigned long)>:
 80129b0:	b570      	push	{r4, r5, r6, lr}
 80129b2:	f240 531c 	movw	r3, #1308	@ 0x51c
 80129b6:	4c69      	ldr	r4, [pc, #420]	@ (8012b5c <Dmx::RdmReceive(unsigned long)+0x1ac>)
 80129b8:	fb01 f303 	mul.w	r3, r1, r3
 80129bc:	18e0      	adds	r0, r4, r3
 80129be:	f8d0 2514 	ldr.w	r2, [r0, #1300]	@ 0x514
 80129c2:	0452      	lsls	r2, r2, #17
 80129c4:	f140 80c1 	bpl.w	8012b4a <Dmx::RdmReceive(unsigned long)+0x19a>
 80129c8:	f503 6382 	add.w	r3, r3, #1040	@ 0x410
 80129cc:	2200      	movs	r2, #0
 80129ce:	f8c0 2514 	str.w	r2, [r0, #1300]	@ 0x514
 80129d2:	1918      	adds	r0, r3, r4
 80129d4:	5ce3      	ldrb	r3, [r4, r3]
 80129d6:	2bcc      	cmp	r3, #204	@ 0xcc
 80129d8:	d008      	beq.n	80129ec <Dmx::RdmReceive(unsigned long)+0x3c>
 80129da:	4b61      	ldr	r3, [pc, #388]	@ (8012b60 <Dmx::RdmReceive(unsigned long)+0x1b0>)
 80129dc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 80129e0:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80129e4:	691a      	ldr	r2, [r3, #16]
 80129e6:	3201      	adds	r2, #1
 80129e8:	611a      	str	r2, [r3, #16]
 80129ea:	bd70      	pop	{r4, r5, r6, pc}
 80129ec:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 80129f0:	f100 0e17 	add.w	lr, r0, #23
 80129f4:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 80129f8:	4413      	add	r3, r2
 80129fa:	45e6      	cmp	lr, ip
 80129fc:	b29a      	uxth	r2, r3
 80129fe:	d1f9      	bne.n	80129f4 <Dmx::RdmReceive(unsigned long)+0x44>
 8012a00:	7884      	ldrb	r4, [r0, #2]
 8012a02:	2c18      	cmp	r4, #24
 8012a04:	f240 80a3 	bls.w	8012b4e <Dmx::RdmReceive(unsigned long)+0x19e>
 8012a08:	2c38      	cmp	r4, #56	@ 0x38
 8012a0a:	f1a4 051f 	sub.w	r5, r4, #31
 8012a0e:	f240 80a2 	bls.w	8012b56 <Dmx::RdmReceive(unsigned long)+0x1a6>
 8012a12:	f06f 0e20 	mvn.w	lr, #32
 8012a16:	ebae 0e00 	sub.w	lr, lr, r0
 8012a1a:	f100 0c3a 	add.w	ip, r0, #58	@ 0x3a
 8012a1e:	f81c 6c21 	ldrb.w	r6, [ip, #-33]
 8012a22:	f81c 3c22 	ldrb.w	r3, [ip, #-34]
 8012a26:	f89c f000 	pld	[ip]
 8012a2a:	4433      	add	r3, r6
 8012a2c:	f81c 6c20 	ldrb.w	r6, [ip, #-32]
 8012a30:	441e      	add	r6, r3
 8012a32:	f81c 3c1f 	ldrb.w	r3, [ip, #-31]
 8012a36:	4433      	add	r3, r6
 8012a38:	f81c 6c1e 	ldrb.w	r6, [ip, #-30]
 8012a3c:	441e      	add	r6, r3
 8012a3e:	f81c 3c1d 	ldrb.w	r3, [ip, #-29]
 8012a42:	4433      	add	r3, r6
 8012a44:	f81c 6c1c 	ldrb.w	r6, [ip, #-28]
 8012a48:	441e      	add	r6, r3
 8012a4a:	f81c 3c1b 	ldrb.w	r3, [ip, #-27]
 8012a4e:	4433      	add	r3, r6
 8012a50:	f81c 6c1a 	ldrb.w	r6, [ip, #-26]
 8012a54:	441e      	add	r6, r3
 8012a56:	f81c 3c19 	ldrb.w	r3, [ip, #-25]
 8012a5a:	4433      	add	r3, r6
 8012a5c:	f81c 6c18 	ldrb.w	r6, [ip, #-24]
 8012a60:	441e      	add	r6, r3
 8012a62:	f81c 3c17 	ldrb.w	r3, [ip, #-23]
 8012a66:	4433      	add	r3, r6
 8012a68:	f81c 6c16 	ldrb.w	r6, [ip, #-22]
 8012a6c:	441e      	add	r6, r3
 8012a6e:	f81c 3c15 	ldrb.w	r3, [ip, #-21]
 8012a72:	4433      	add	r3, r6
 8012a74:	f81c 6c14 	ldrb.w	r6, [ip, #-20]
 8012a78:	441e      	add	r6, r3
 8012a7a:	f81c 3c13 	ldrb.w	r3, [ip, #-19]
 8012a7e:	4433      	add	r3, r6
 8012a80:	f81c 6c12 	ldrb.w	r6, [ip, #-18]
 8012a84:	441e      	add	r6, r3
 8012a86:	f81c 3c11 	ldrb.w	r3, [ip, #-17]
 8012a8a:	4433      	add	r3, r6
 8012a8c:	f81c 6c10 	ldrb.w	r6, [ip, #-16]
 8012a90:	441e      	add	r6, r3
 8012a92:	f81c 3c0f 	ldrb.w	r3, [ip, #-15]
 8012a96:	4433      	add	r3, r6
 8012a98:	f81c 6c0e 	ldrb.w	r6, [ip, #-14]
 8012a9c:	441e      	add	r6, r3
 8012a9e:	f81c 3c0d 	ldrb.w	r3, [ip, #-13]
 8012aa2:	4433      	add	r3, r6
 8012aa4:	f81c 6c0c 	ldrb.w	r6, [ip, #-12]
 8012aa8:	441e      	add	r6, r3
 8012aaa:	f81c 3c0b 	ldrb.w	r3, [ip, #-11]
 8012aae:	4433      	add	r3, r6
 8012ab0:	f81c 6c0a 	ldrb.w	r6, [ip, #-10]
 8012ab4:	441e      	add	r6, r3
 8012ab6:	f81c 3c09 	ldrb.w	r3, [ip, #-9]
 8012aba:	4433      	add	r3, r6
 8012abc:	f81c 6c08 	ldrb.w	r6, [ip, #-8]
 8012ac0:	441e      	add	r6, r3
 8012ac2:	f81c 3c07 	ldrb.w	r3, [ip, #-7]
 8012ac6:	4433      	add	r3, r6
 8012ac8:	f81c 6c06 	ldrb.w	r6, [ip, #-6]
 8012acc:	441e      	add	r6, r3
 8012ace:	f81c 3c05 	ldrb.w	r3, [ip, #-5]
 8012ad2:	4433      	add	r3, r6
 8012ad4:	f81c 6c04 	ldrb.w	r6, [ip, #-4]
 8012ad8:	441e      	add	r6, r3
 8012ada:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 8012ade:	4433      	add	r3, r6
 8012ae0:	4413      	add	r3, r2
 8012ae2:	b29a      	uxth	r2, r3
 8012ae4:	4663      	mov	r3, ip
 8012ae6:	f10c 0c20 	add.w	ip, ip, #32
 8012aea:	eb0e 060c 	add.w	r6, lr, ip
 8012aee:	42b5      	cmp	r5, r6
 8012af0:	d895      	bhi.n	8012a1e <Dmx::RdmReceive(unsigned long)+0x6e>
 8012af2:	eba3 0e00 	sub.w	lr, r3, r0
 8012af6:	f1ae 0e02 	sub.w	lr, lr, #2
 8012afa:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
 8012afe:	4486      	add	lr, r0
 8012b00:	4673      	mov	r3, lr
 8012b02:	3302      	adds	r3, #2
 8012b04:	f81e cf01 	ldrb.w	ip, [lr, #1]!
 8012b08:	1a1b      	subs	r3, r3, r0
 8012b0a:	4462      	add	r2, ip
 8012b0c:	429c      	cmp	r4, r3
 8012b0e:	b292      	uxth	r2, r2
 8012b10:	d8f6      	bhi.n	8012b00 <Dmx::RdmReceive(unsigned long)+0x150>
 8012b12:	f104 0c01 	add.w	ip, r4, #1
 8012b16:	5d03      	ldrb	r3, [r0, r4]
 8012b18:	ebb3 2f12 	cmp.w	r3, r2, lsr #8
 8012b1c:	d10d      	bne.n	8012b3a <Dmx::RdmReceive(unsigned long)+0x18a>
 8012b1e:	f810 300c 	ldrb.w	r3, [r0, ip]
 8012b22:	b2d2      	uxtb	r2, r2
 8012b24:	4293      	cmp	r3, r2
 8012b26:	d108      	bne.n	8012b3a <Dmx::RdmReceive(unsigned long)+0x18a>
 8012b28:	4b0d      	ldr	r3, [pc, #52]	@ (8012b60 <Dmx::RdmReceive(unsigned long)+0x1b0>)
 8012b2a:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8012b2e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8012b32:	689a      	ldr	r2, [r3, #8]
 8012b34:	3201      	adds	r2, #1
 8012b36:	609a      	str	r2, [r3, #8]
 8012b38:	bd70      	pop	{r4, r5, r6, pc}
 8012b3a:	4b09      	ldr	r3, [pc, #36]	@ (8012b60 <Dmx::RdmReceive(unsigned long)+0x1b0>)
 8012b3c:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8012b40:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8012b44:	68da      	ldr	r2, [r3, #12]
 8012b46:	3201      	adds	r2, #1
 8012b48:	60da      	str	r2, [r3, #12]
 8012b4a:	2000      	movs	r0, #0
 8012b4c:	bd70      	pop	{r4, r5, r6, pc}
 8012b4e:	f04f 0c19 	mov.w	ip, #25
 8012b52:	2418      	movs	r4, #24
 8012b54:	e7df      	b.n	8012b16 <Dmx::RdmReceive(unsigned long)+0x166>
 8012b56:	f04f 0e18 	mov.w	lr, #24
 8012b5a:	e7ce      	b.n	8012afa <Dmx::RdmReceive(unsigned long)+0x14a>
 8012b5c:	20001c5c 	andcs	r1, r0, ip, asr ip
 8012b60:	200026b0 			@ <UNDEFINED> instruction: 0x200026b0

08012b64 <memcpy.isra.0>:
 8012b64:	440a      	add	r2, r1
 8012b66:	4291      	cmp	r1, r2
 8012b68:	d100      	bne.n	8012b6c <memcpy.isra.0+0x8>
 8012b6a:	4770      	bx	lr
 8012b6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012b70:	f800 3b01 	strb.w	r3, [r0], #1
 8012b74:	e7f7      	b.n	8012b66 <memcpy.isra.0+0x2>

08012b76 <strlen>:
 8012b76:	4603      	mov	r3, r0
 8012b78:	461a      	mov	r2, r3
 8012b7a:	3301      	adds	r3, #1
 8012b7c:	7811      	ldrb	r1, [r2, #0]
 8012b7e:	2900      	cmp	r1, #0
 8012b80:	d1fa      	bne.n	8012b78 <strlen+0x2>
 8012b82:	1a10      	subs	r0, r2, r0
 8012b84:	4770      	bx	lr
	...

08012b88 <mdns::Domain::AddDotLocal()>:
 8012b88:	b510      	push	{r4, lr}
 8012b8a:	4604      	mov	r4, r0
 8012b8c:	f8b0 0100 	ldrh.w	r0, [r0, #256]	@ 0x100
 8012b90:	4905      	ldr	r1, [pc, #20]	@ (8012ba8 <mdns::Domain::AddDotLocal()+0x20>)
 8012b92:	2207      	movs	r2, #7
 8012b94:	4420      	add	r0, r4
 8012b96:	f7ff ffe5 	bl	8012b64 <memcpy.isra.0>
 8012b9a:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8012b9e:	3307      	adds	r3, #7
 8012ba0:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8012ba4:	bd10      	pop	{r4, pc}
 8012ba6:	bf00      	nop
 8012ba8:	0801ea76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, fp, sp, lr, pc}

08012bac <create_host_domain(mdns::Domain&)>:
 8012bac:	2300      	movs	r3, #0
 8012bae:	b570      	push	{r4, r5, r6, lr}
 8012bb0:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 8012bb4:	4b0c      	ldr	r3, [pc, #48]	@ (8012be8 <create_host_domain(mdns::Domain&)+0x3c>)
 8012bb6:	681e      	ldr	r6, [r3, #0]
 8012bb8:	3616      	adds	r6, #22
 8012bba:	4604      	mov	r4, r0
 8012bbc:	4630      	mov	r0, r6
 8012bbe:	f7ff ffda 	bl	8012b76 <strlen>
 8012bc2:	2301      	movs	r3, #1
 8012bc4:	7020      	strb	r0, [r4, #0]
 8012bc6:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8012bca:	4602      	mov	r2, r0
 8012bcc:	4605      	mov	r5, r0
 8012bce:	4631      	mov	r1, r6
 8012bd0:	18e0      	adds	r0, r4, r3
 8012bd2:	f7ff ffc7 	bl	8012b64 <memcpy.isra.0>
 8012bd6:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8012bda:	441d      	add	r5, r3
 8012bdc:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 8012be0:	4620      	mov	r0, r4
 8012be2:	f7ff ffd1 	bl	8012b88 <mdns::Domain::AddDotLocal()>
 8012be6:	bd70      	pop	{r4, r5, r6, pc}
 8012be8:	20002934 	andcs	r2, r0, r4, lsr r9

08012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>:
 8012bec:	2300      	movs	r3, #0
 8012bee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bf2:	4604      	mov	r4, r0
 8012bf4:	460e      	mov	r6, r1
 8012bf6:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
 8012bfa:	b1aa      	cbz	r2, 8012c28 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x3c>
 8012bfc:	680f      	ldr	r7, [r1, #0]
 8012bfe:	f100 0801 	add.w	r8, r0, #1
 8012c02:	b3b7      	cbz	r7, 8012c72 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x86>
 8012c04:	4638      	mov	r0, r7
 8012c06:	f7ff ffb6 	bl	8012b76 <strlen>
 8012c0a:	2301      	movs	r3, #1
 8012c0c:	4605      	mov	r5, r0
 8012c0e:	7020      	strb	r0, [r4, #0]
 8012c10:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8012c14:	4602      	mov	r2, r0
 8012c16:	4639      	mov	r1, r7
 8012c18:	4640      	mov	r0, r8
 8012c1a:	f7ff ffa3 	bl	8012b64 <memcpy.isra.0>
 8012c1e:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8012c22:	441d      	add	r5, r3
 8012c24:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
 8012c28:	4b15      	ldr	r3, [pc, #84]	@ (8012c80 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x94>)
 8012c2a:	68f6      	ldr	r6, [r6, #12]
 8012c2c:	f8b4 0100 	ldrh.w	r0, [r4, #256]	@ 0x100
 8012c30:	0131      	lsls	r1, r6, #4
 8012c32:	eb03 1606 	add.w	r6, r3, r6, lsl #4
 8012c36:	5859      	ldr	r1, [r3, r1]
 8012c38:	88b5      	ldrh	r5, [r6, #4]
 8012c3a:	4420      	add	r0, r4
 8012c3c:	462a      	mov	r2, r5
 8012c3e:	f7ff ff91 	bl	8012b64 <memcpy.isra.0>
 8012c42:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8012c46:	18e8      	adds	r0, r5, r3
 8012c48:	68b3      	ldr	r3, [r6, #8]
 8012c4a:	b280      	uxth	r0, r0
 8012c4c:	f8a4 0100 	strh.w	r0, [r4, #256]	@ 0x100
 8012c50:	2205      	movs	r2, #5
 8012c52:	4420      	add	r0, r4
 8012c54:	b98b      	cbnz	r3, 8012c7a <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x8e>
 8012c56:	490b      	ldr	r1, [pc, #44]	@ (8012c84 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x98>)
 8012c58:	f7ff ff84 	bl	8012b64 <memcpy.isra.0>
 8012c5c:	f8b4 3100 	ldrh.w	r3, [r4, #256]	@ 0x100
 8012c60:	3305      	adds	r3, #5
 8012c62:	b29b      	uxth	r3, r3
 8012c64:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
 8012c68:	4620      	mov	r0, r4
 8012c6a:	f7ff ff8d 	bl	8012b88 <mdns::Domain::AddDotLocal()>
 8012c6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c72:	4b05      	ldr	r3, [pc, #20]	@ (8012c88 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x9c>)
 8012c74:	681f      	ldr	r7, [r3, #0]
 8012c76:	3716      	adds	r7, #22
 8012c78:	e7c4      	b.n	8012c04 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x18>
 8012c7a:	4904      	ldr	r1, [pc, #16]	@ (8012c8c <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0xa0>)
 8012c7c:	e7ec      	b.n	8012c58 <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)+0x6c>
 8012c7e:	bf00      	nop
 8012c80:	0801e99c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, sp, lr, pc}
 8012c84:	0801ea71 	stmdaeq	r1, {r0, r4, r5, r6, r9, fp, sp, lr, pc}
 8012c88:	20002934 	andcs	r2, r0, r4, lsr r9
 8012c8c:	0801ea6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, sp, lr, pc}

08012c90 <mdns::Domain::Print(bool)>:
 8012c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c94:	4605      	mov	r5, r0
 8012c96:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 8012cd4 <mdns::Domain::Print(bool)+0x44>
 8012c9a:	2020      	movs	r0, #32
 8012c9c:	460e      	mov	r6, r1
 8012c9e:	f007 fa6b 	bl	801a178 <putchar>
 8012ca2:	462a      	mov	r2, r5
 8012ca4:	7817      	ldrb	r7, [r2, #0]
 8012ca6:	b92f      	cbnz	r7, 8012cb4 <mdns::Domain::Print(bool)+0x24>
 8012ca8:	b18e      	cbz	r6, 8012cce <mdns::Domain::Print(bool)+0x3e>
 8012caa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012cae:	200a      	movs	r0, #10
 8012cb0:	f007 ba62 	b.w	801a178 <putchar>
 8012cb4:	f8b5 3100 	ldrh.w	r3, [r5, #256]	@ 0x100
 8012cb8:	442b      	add	r3, r5
 8012cba:	429a      	cmp	r2, r3
 8012cbc:	d2f4      	bcs.n	8012ca8 <mdns::Domain::Print(bool)+0x18>
 8012cbe:	1c54      	adds	r4, r2, #1
 8012cc0:	4622      	mov	r2, r4
 8012cc2:	4639      	mov	r1, r7
 8012cc4:	4640      	mov	r0, r8
 8012cc6:	f007 fa07 	bl	801a0d8 <printf>
 8012cca:	19e2      	adds	r2, r4, r7
 8012ccc:	e7ea      	b.n	8012ca4 <mdns::Domain::Print(bool)+0x14>
 8012cce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cd2:	bf00      	nop
 8012cd4:	0801b3e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, ip, sp, pc}

08012cd8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>:
 8012cd8:	f8b0 2100 	ldrh.w	r2, [r0, #256]	@ 0x100
 8012cdc:	f8b1 3100 	ldrh.w	r3, [r1, #256]	@ 0x100
 8012ce0:	4293      	cmp	r3, r2
 8012ce2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ce6:	d127      	bne.n	8012d38 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8012ce8:	18c2      	adds	r2, r0, r3
 8012cea:	7803      	ldrb	r3, [r0, #0]
 8012cec:	b11b      	cbz	r3, 8012cf6 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 8012cee:	780c      	ldrb	r4, [r1, #0]
 8012cf0:	b10c      	cbz	r4, 8012cf6 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x1e>
 8012cf2:	4290      	cmp	r0, r2
 8012cf4:	d301      	bcc.n	8012cfa <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x22>
 8012cf6:	2001      	movs	r0, #1
 8012cf8:	e01f      	b.n	8012d3a <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x62>
 8012cfa:	42a3      	cmp	r3, r4
 8012cfc:	d11c      	bne.n	8012d38 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8012cfe:	4684      	mov	ip, r0
 8012d00:	460f      	mov	r7, r1
 8012d02:	461e      	mov	r6, r3
 8012d04:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 8012d08:	f1a4 0541 	sub.w	r5, r4, #65	@ 0x41
 8012d0c:	2d19      	cmp	r5, #25
 8012d0e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8012d12:	f1a5 0841 	sub.w	r8, r5, #65	@ 0x41
 8012d16:	46a6      	mov	lr, r4
 8012d18:	bf98      	it	ls
 8012d1a:	f104 0e20 	addls.w	lr, r4, #32
 8012d1e:	f1b8 0f19 	cmp.w	r8, #25
 8012d22:	bf98      	it	ls
 8012d24:	3520      	addls	r5, #32
 8012d26:	4575      	cmp	r5, lr
 8012d28:	d106      	bne.n	8012d38 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x60>
 8012d2a:	b10c      	cbz	r4, 8012d30 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x58>
 8012d2c:	3e01      	subs	r6, #1
 8012d2e:	d1e9      	bne.n	8012d04 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x2c>
 8012d30:	3301      	adds	r3, #1
 8012d32:	4418      	add	r0, r3
 8012d34:	4419      	add	r1, r3
 8012d36:	e7d8      	b.n	8012cea <mdns::operator==(mdns::Domain const&, mdns::Domain const&)+0x12>
 8012d38:	2000      	movs	r0, #0
 8012d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012d3e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>:
 8012d3e:	f892 c000 	ldrb.w	ip, [r2]
 8012d42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012d46:	ea6f 050c 	mvn.w	r5, ip
 8012d4a:	4606      	mov	r6, r0
 8012d4c:	440d      	add	r5, r1
 8012d4e:	42b5      	cmp	r5, r6
 8012d50:	4628      	mov	r0, r5
 8012d52:	d201      	bcs.n	8012d58 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x1a>
 8012d54:	2000      	movs	r0, #0
 8012d56:	e040      	b.n	8012dda <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x9c>
 8012d58:	7803      	ldrb	r3, [r0, #0]
 8012d5a:	4563      	cmp	r3, ip
 8012d5c:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 8012d60:	d1f5      	bne.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d62:	78ac      	ldrb	r4, [r5, #2]
 8012d64:	7853      	ldrb	r3, [r2, #1]
 8012d66:	429c      	cmp	r4, r3
 8012d68:	d1f1      	bne.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d6a:	4604      	mov	r4, r0
 8012d6c:	4617      	mov	r7, r2
 8012d6e:	e018      	b.n	8012da2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 8012d70:	4573      	cmp	r3, lr
 8012d72:	db27      	blt.n	8012dc4 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x86>
 8012d74:	e7eb      	b.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d76:	2b3f      	cmp	r3, #63	@ 0x3f
 8012d78:	d913      	bls.n	8012da2 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x64>
 8012d7a:	2bbf      	cmp	r3, #191	@ 0xbf
 8012d7c:	d9e7      	bls.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d7e:	f104 0e01 	add.w	lr, r4, #1
 8012d82:	4571      	cmp	r1, lr
 8012d84:	d9e3      	bls.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d86:	f894 e001 	ldrb.w	lr, [r4, #1]
 8012d8a:	021b      	lsls	r3, r3, #8
 8012d8c:	f403 537c 	and.w	r3, r3, #16128	@ 0x3f00
 8012d90:	4473      	add	r3, lr
 8012d92:	eb06 0e03 	add.w	lr, r6, r3
 8012d96:	4574      	cmp	r4, lr
 8012d98:	d3d9      	bcc.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012d9a:	5cf3      	ldrb	r3, [r6, r3]
 8012d9c:	2b3f      	cmp	r3, #63	@ 0x3f
 8012d9e:	d8d6      	bhi.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012da0:	4674      	mov	r4, lr
 8012da2:	783b      	ldrb	r3, [r7, #0]
 8012da4:	eb04 0e03 	add.w	lr, r4, r3
 8012da8:	4571      	cmp	r1, lr
 8012daa:	d9d0      	bls.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012dac:	f04f 0e00 	mov.w	lr, #0
 8012db0:	f814 900e 	ldrb.w	r9, [r4, lr]
 8012db4:	f817 800e 	ldrb.w	r8, [r7, lr]
 8012db8:	45c1      	cmp	r9, r8
 8012dba:	d1d9      	bne.n	8012d70 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x32>
 8012dbc:	f10e 0e01 	add.w	lr, lr, #1
 8012dc0:	4573      	cmp	r3, lr
 8012dc2:	daf5      	bge.n	8012db0 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x72>
 8012dc4:	3301      	adds	r3, #1
 8012dc6:	441f      	add	r7, r3
 8012dc8:	441c      	add	r4, r3
 8012dca:	f897 e000 	ldrb.w	lr, [r7]
 8012dce:	7823      	ldrb	r3, [r4, #0]
 8012dd0:	f1be 0f00 	cmp.w	lr, #0
 8012dd4:	d1cf      	bne.n	8012d76 <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x38>
 8012dd6:	2b00      	cmp	r3, #0
 8012dd8:	d1b9      	bne.n	8012d4e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)+0x10>
 8012dda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>:
 8012de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012de2:	460a      	mov	r2, r1
 8012de4:	4606      	mov	r6, r0
 8012de6:	4605      	mov	r5, r0
 8012de8:	7814      	ldrb	r4, [r2, #0]
 8012dea:	b91c      	cbnz	r4, 8012df4 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x14>
 8012dec:	4628      	mov	r0, r5
 8012dee:	f800 4b01 	strb.w	r4, [r0], #1
 8012df2:	e00e      	b.n	8012e12 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x32>
 8012df4:	4810      	ldr	r0, [pc, #64]	@ (8012e38 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 8012df6:	4631      	mov	r1, r6
 8012df8:	f7ff ffa1 	bl	8012d3e <find_compression_pointer(unsigned char const*, unsigned char const*, unsigned char const*)>
 8012dfc:	b150      	cbz	r0, 8012e14 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x34>
 8012dfe:	4b0e      	ldr	r3, [pc, #56]	@ (8012e38 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x58>)
 8012e00:	1ac3      	subs	r3, r0, r3
 8012e02:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012e06:	4628      	mov	r0, r5
 8012e08:	f062 023f 	orn	r2, r2, #63	@ 0x3f
 8012e0c:	f800 2b02 	strb.w	r2, [r0], #2
 8012e10:	706b      	strb	r3, [r5, #1]
 8012e12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012e14:	462b      	mov	r3, r5
 8012e16:	3201      	adds	r2, #1
 8012e18:	f803 4b01 	strb.w	r4, [r3], #1
 8012e1c:	4617      	mov	r7, r2
 8012e1e:	4618      	mov	r0, r3
 8012e20:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012e24:	f800 1b01 	strb.w	r1, [r0], #1
 8012e28:	1b41      	subs	r1, r0, r5
 8012e2a:	3901      	subs	r1, #1
 8012e2c:	42a1      	cmp	r1, r4
 8012e2e:	d3f7      	bcc.n	8012e20 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x40>
 8012e30:	4422      	add	r2, r4
 8012e32:	191d      	adds	r5, r3, r4
 8012e34:	e7d8      	b.n	8012de8 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)+0x8>
 8012e36:	bf00      	nop
 8012e38:	20002709 	andcs	r2, r0, r9, lsl #14

08012e3c <add_answer_a(unsigned char*, unsigned long)>:
 8012e3c:	b530      	push	{r4, r5, lr}
 8012e3e:	b0c3      	sub	sp, #268	@ 0x10c
 8012e40:	4605      	mov	r5, r0
 8012e42:	a801      	add	r0, sp, #4
 8012e44:	460c      	mov	r4, r1
 8012e46:	f7ff feb1 	bl	8012bac <create_host_domain(mdns::Domain&)>
 8012e4a:	a901      	add	r1, sp, #4
 8012e4c:	4628      	mov	r0, r5
 8012e4e:	f7ff ffc7 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012e52:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012e56:	8003      	strh	r3, [r0, #0]
 8012e58:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8012e5c:	8043      	strh	r3, [r0, #2]
 8012e5e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012e62:	8103      	strh	r3, [r0, #8]
 8012e64:	4b04      	ldr	r3, [pc, #16]	@ (8012e78 <add_answer_a(unsigned char*, unsigned long)+0x3c>)
 8012e66:	ba24      	rev	r4, r4
 8012e68:	681b      	ldr	r3, [r3, #0]
 8012e6a:	6044      	str	r4, [r0, #4]
 8012e6c:	f8c0 300a 	str.w	r3, [r0, #10]
 8012e70:	300e      	adds	r0, #14
 8012e72:	1b40      	subs	r0, r0, r5
 8012e74:	b043      	add	sp, #268	@ 0x10c
 8012e76:	bd30      	pop	{r4, r5, pc}
 8012e78:	20002954 	andcs	r2, r0, r4, asr r9

08012e7c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>:
 8012e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e7e:	4e11      	ldr	r6, [pc, #68]	@ (8012ec4 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x48>)
 8012e80:	b0c3      	sub	sp, #268	@ 0x10c
 8012e82:	4607      	mov	r7, r0
 8012e84:	460d      	mov	r5, r1
 8012e86:	4630      	mov	r0, r6
 8012e88:	490f      	ldr	r1, [pc, #60]	@ (8012ec8 <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]+0x4c>)
 8012e8a:	f7ff ffa9 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012e8e:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8012e92:	8003      	strh	r3, [r0, #0]
 8012e94:	ba2d      	rev	r5, r5
 8012e96:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012e9a:	8043      	strh	r3, [r0, #2]
 8012e9c:	4604      	mov	r4, r0
 8012e9e:	6045      	str	r5, [r0, #4]
 8012ea0:	2200      	movs	r2, #0
 8012ea2:	f100 050a 	add.w	r5, r0, #10
 8012ea6:	4639      	mov	r1, r7
 8012ea8:	a801      	add	r0, sp, #4
 8012eaa:	f7ff fe9f 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8012eae:	a901      	add	r1, sp, #4
 8012eb0:	4628      	mov	r0, r5
 8012eb2:	f7ff ff95 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012eb6:	1b45      	subs	r5, r0, r5
 8012eb8:	ba6d      	rev16	r5, r5
 8012eba:	1b80      	subs	r0, r0, r6
 8012ebc:	8125      	strh	r5, [r4, #8]
 8012ebe:	b043      	add	sp, #268	@ 0x10c
 8012ec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ec2:	bf00      	nop
 8012ec4:	20002715 	andcs	r2, r0, r5, lsl r7
 8012ec8:	0801e89a 	stmdaeq	r1, {r1, r3, r4, r7, fp, sp, lr, pc}

08012ecc <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8012ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ece:	b0c3      	sub	sp, #268	@ 0x10c
 8012ed0:	460e      	mov	r6, r1
 8012ed2:	4607      	mov	r7, r0
 8012ed4:	4601      	mov	r1, r0
 8012ed6:	4615      	mov	r5, r2
 8012ed8:	a801      	add	r0, sp, #4
 8012eda:	2201      	movs	r2, #1
 8012edc:	f7ff fe86 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8012ee0:	a901      	add	r1, sp, #4
 8012ee2:	4630      	mov	r0, r6
 8012ee4:	f7ff ff7c 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012ee8:	f44f 5304 	mov.w	r3, #8448	@ 0x2100
 8012eec:	8003      	strh	r3, [r0, #0]
 8012eee:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8012ef2:	8043      	strh	r3, [r0, #2]
 8012ef4:	2300      	movs	r3, #0
 8012ef6:	f8c0 300a 	str.w	r3, [r0, #10]
 8012efa:	ba2d      	rev	r5, r5
 8012efc:	897b      	ldrh	r3, [r7, #10]
 8012efe:	81c3      	strh	r3, [r0, #14]
 8012f00:	4604      	mov	r4, r0
 8012f02:	6045      	str	r5, [r0, #4]
 8012f04:	f100 0510 	add.w	r5, r0, #16
 8012f08:	a801      	add	r0, sp, #4
 8012f0a:	f7ff fe4f 	bl	8012bac <create_host_domain(mdns::Domain&)>
 8012f0e:	a901      	add	r1, sp, #4
 8012f10:	4628      	mov	r0, r5
 8012f12:	f7ff ff65 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012f16:	1d83      	adds	r3, r0, #6
 8012f18:	1b5b      	subs	r3, r3, r5
 8012f1a:	ba5b      	rev16	r3, r3
 8012f1c:	1b80      	subs	r0, r0, r6
 8012f1e:	8123      	strh	r3, [r4, #8]
 8012f20:	b043      	add	sp, #268	@ 0x10c
 8012f22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012f24 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8012f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f26:	b0c3      	sub	sp, #268	@ 0x10c
 8012f28:	460e      	mov	r6, r1
 8012f2a:	4607      	mov	r7, r0
 8012f2c:	4601      	mov	r1, r0
 8012f2e:	4615      	mov	r5, r2
 8012f30:	a801      	add	r0, sp, #4
 8012f32:	2200      	movs	r2, #0
 8012f34:	f7ff fe5a 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8012f38:	a901      	add	r1, sp, #4
 8012f3a:	4630      	mov	r0, r6
 8012f3c:	f7ff ff50 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012f40:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8012f44:	8003      	strh	r3, [r0, #0]
 8012f46:	ba2d      	rev	r5, r5
 8012f48:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012f4c:	8043      	strh	r3, [r0, #2]
 8012f4e:	4604      	mov	r4, r0
 8012f50:	6045      	str	r5, [r0, #4]
 8012f52:	2201      	movs	r2, #1
 8012f54:	f100 050a 	add.w	r5, r0, #10
 8012f58:	4639      	mov	r1, r7
 8012f5a:	a801      	add	r0, sp, #4
 8012f5c:	f7ff fe46 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8012f60:	a901      	add	r1, sp, #4
 8012f62:	4628      	mov	r0, r5
 8012f64:	f7ff ff3c 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012f68:	1b45      	subs	r5, r0, r5
 8012f6a:	ba6d      	rev16	r5, r5
 8012f6c:	1b80      	subs	r0, r0, r6
 8012f6e:	8125      	strh	r5, [r4, #8]
 8012f70:	b043      	add	sp, #268	@ 0x10c
 8012f72:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012f74 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>:
 8012f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f76:	b0c3      	sub	sp, #268	@ 0x10c
 8012f78:	4604      	mov	r4, r0
 8012f7a:	460e      	mov	r6, r1
 8012f7c:	4615      	mov	r5, r2
 8012f7e:	4601      	mov	r1, r0
 8012f80:	2201      	movs	r2, #1
 8012f82:	a801      	add	r0, sp, #4
 8012f84:	f7ff fe32 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8012f88:	a901      	add	r1, sp, #4
 8012f8a:	4630      	mov	r0, r6
 8012f8c:	f7ff ff28 	bl	8012de0 <put_domain_name_as_labels(unsigned char*, mdns::Domain const&)>
 8012f90:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8012f94:	8002      	strh	r2, [r0, #0]
 8012f96:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8012f9a:	8042      	strh	r2, [r0, #2]
 8012f9c:	6862      	ldr	r2, [r4, #4]
 8012f9e:	ba2d      	rev	r5, r5
 8012fa0:	6045      	str	r5, [r0, #4]
 8012fa2:	f100 050b 	add.w	r5, r0, #11
 8012fa6:	b932      	cbnz	r2, 8012fb6 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x42>
 8012fa8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8012fac:	8101      	strh	r1, [r0, #8]
 8012fae:	7282      	strb	r2, [r0, #10]
 8012fb0:	1ba8      	subs	r0, r5, r6
 8012fb2:	b043      	add	sp, #268	@ 0x10c
 8012fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fb6:	8927      	ldrh	r7, [r4, #8]
 8012fb8:	7287      	strb	r7, [r0, #10]
 8012fba:	1c7a      	adds	r2, r7, #1
 8012fbc:	ba52      	rev16	r2, r2
 8012fbe:	8102      	strh	r2, [r0, #8]
 8012fc0:	8922      	ldrh	r2, [r4, #8]
 8012fc2:	6861      	ldr	r1, [r4, #4]
 8012fc4:	4628      	mov	r0, r5
 8012fc6:	f7ff fdcd 	bl	8012b64 <memcpy.isra.0>
 8012fca:	443d      	add	r5, r7
 8012fcc:	e7f0      	b.n	8012fb0 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)+0x3c>

08012fce <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>:
 8012fce:	4281      	cmp	r1, r0
 8012fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fd4:	4606      	mov	r6, r0
 8012fd6:	d310      	bcc.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8012fd8:	4291      	cmp	r1, r2
 8012fda:	d20e      	bcs.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8012fdc:	2500      	movs	r5, #0
 8012fde:	f503 7c80 	add.w	ip, r3, #256	@ 0x100
 8012fe2:	701d      	strb	r5, [r3, #0]
 8012fe4:	4608      	mov	r0, r1
 8012fe6:	4607      	mov	r7, r0
 8012fe8:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012fec:	b38c      	cbz	r4, 8013052 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x84>
 8012fee:	f004 01c0 	and.w	r1, r4, #192	@ 0xc0
 8012ff2:	2980      	cmp	r1, #128	@ 0x80
 8012ff4:	d001      	beq.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8012ff6:	d803      	bhi.n	8013000 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x32>
 8012ff8:	b199      	cbz	r1, 8013022 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x54>
 8012ffa:	2000      	movs	r0, #0
 8012ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013000:	29c0      	cmp	r1, #192	@ 0xc0
 8013002:	d1f0      	bne.n	8012fe6 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x18>
 8013004:	7800      	ldrb	r0, [r0, #0]
 8013006:	0224      	lsls	r4, r4, #8
 8013008:	f404 547c 	and.w	r4, r4, #16128	@ 0x3f00
 801300c:	4320      	orrs	r0, r4
 801300e:	b905      	cbnz	r5, 8013012 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x44>
 8013010:	1cbd      	adds	r5, r7, #2
 8013012:	1831      	adds	r1, r6, r0
 8013014:	d2f1      	bcs.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8013016:	428a      	cmp	r2, r1
 8013018:	d9ef      	bls.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 801301a:	5c30      	ldrb	r0, [r6, r0]
 801301c:	283f      	cmp	r0, #63	@ 0x3f
 801301e:	d9e1      	bls.n	8012fe4 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 8013020:	e7eb      	b.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8013022:	1901      	adds	r1, r0, r4
 8013024:	4291      	cmp	r1, r2
 8013026:	d2e8      	bcs.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8013028:	1c67      	adds	r7, r4, #1
 801302a:	441f      	add	r7, r3
 801302c:	4567      	cmp	r7, ip
 801302e:	d2e4      	bcs.n	8012ffa <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2c>
 8013030:	469e      	mov	lr, r3
 8013032:	f80e 4b01 	strb.w	r4, [lr], #1
 8013036:	f810 8b01 	ldrb.w	r8, [r0], #1
 801303a:	f80e 8b01 	strb.w	r8, [lr], #1
 801303e:	ebae 0803 	sub.w	r8, lr, r3
 8013042:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8013046:	4544      	cmp	r4, r8
 8013048:	dcf5      	bgt.n	8013036 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x68>
 801304a:	2300      	movs	r3, #0
 801304c:	703b      	strb	r3, [r7, #0]
 801304e:	463b      	mov	r3, r7
 8013050:	e7c8      	b.n	8012fe4 <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x16>
 8013052:	2d00      	cmp	r5, #0
 8013054:	bf18      	it	ne
 8013056:	4628      	movne	r0, r5
 8013058:	e7d0      	b.n	8012ffc <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)+0x2e>
	...

0801305c <MDNS::SendTo(unsigned long)>:
 801305c:	4b0d      	ldr	r3, [pc, #52]	@ (8013094 <MDNS::SendTo(unsigned long)+0x38>)
 801305e:	b513      	push	{r0, r1, r4, lr}
 8013060:	6818      	ldr	r0, [r3, #0]
 8013062:	4b0d      	ldr	r3, [pc, #52]	@ (8013098 <MDNS::SendTo(unsigned long)+0x3c>)
 8013064:	460a      	mov	r2, r1
 8013066:	6819      	ldr	r1, [r3, #0]
 8013068:	4b0c      	ldr	r3, [pc, #48]	@ (801309c <MDNS::SendTo(unsigned long)+0x40>)
 801306a:	781b      	ldrb	r3, [r3, #0]
 801306c:	b94b      	cbnz	r3, 8013082 <MDNS::SendTo(unsigned long)+0x26>
 801306e:	b131      	cbz	r1, 801307e <MDNS::SendTo(unsigned long)+0x22>
 8013070:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 8013074:	9300      	str	r3, [sp, #0]
 8013076:	4b0a      	ldr	r3, [pc, #40]	@ (80130a0 <MDNS::SendTo(unsigned long)+0x44>)
 8013078:	490a      	ldr	r1, [pc, #40]	@ (80130a4 <MDNS::SendTo(unsigned long)+0x48>)
 801307a:	f001 fcc3 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 801307e:	b002      	add	sp, #8
 8013080:	bd10      	pop	{r4, pc}
 8013082:	4b09      	ldr	r3, [pc, #36]	@ (80130a8 <MDNS::SendTo(unsigned long)+0x4c>)
 8013084:	4c09      	ldr	r4, [pc, #36]	@ (80130ac <MDNS::SendTo(unsigned long)+0x50>)
 8013086:	681b      	ldr	r3, [r3, #0]
 8013088:	8824      	ldrh	r4, [r4, #0]
 801308a:	2900      	cmp	r1, #0
 801308c:	d0f7      	beq.n	801307e <MDNS::SendTo(unsigned long)+0x22>
 801308e:	9400      	str	r4, [sp, #0]
 8013090:	e7f2      	b.n	8013078 <MDNS::SendTo(unsigned long)+0x1c>
 8013092:	bf00      	nop
 8013094:	20002704 	andcs	r2, r0, r4, lsl #14
 8013098:	20002954 	andcs	r2, r0, r4, asr r9
 801309c:	20002708 	andcs	r2, r0, r8, lsl #14
 80130a0:	fb0000e0 	blx	801342a <MDNS::HandleQuestions(unsigned long)+0x8a>
 80130a4:	20002709 	andcs	r2, r0, r9, lsl #14
 80130a8:	20002700 	andcs	r2, r0, r0, lsl #14
 80130ac:	200026fc 	strdcs	r2, [r0], -ip

080130b0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>:
 80130b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80130b2:	4b11      	ldr	r3, [pc, #68]	@ (80130f8 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x48>)
 80130b4:	4c11      	ldr	r4, [pc, #68]	@ (80130fc <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x4c>)
 80130b6:	681d      	ldr	r5, [r3, #0]
 80130b8:	f015 0501 	ands.w	r5, r5, #1
 80130bc:	460f      	mov	r7, r1
 80130be:	4606      	mov	r6, r0
 80130c0:	4611      	mov	r1, r2
 80130c2:	d003      	beq.n	80130cc <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x1c>
 80130c4:	4620      	mov	r0, r4
 80130c6:	f7ff feb9 	bl	8012e3c <add_answer_a(unsigned char*, unsigned long)>
 80130ca:	4404      	add	r4, r0
 80130cc:	4b0c      	ldr	r3, [pc, #48]	@ (8013100 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)+0x50>)
 80130ce:	2284      	movs	r2, #132	@ 0x84
 80130d0:	709a      	strb	r2, [r3, #2]
 80130d2:	2200      	movs	r2, #0
 80130d4:	ba6d      	rev16	r5, r5
 80130d6:	1ae4      	subs	r4, r4, r3
 80130d8:	70da      	strb	r2, [r3, #3]
 80130da:	801f      	strh	r7, [r3, #0]
 80130dc:	711a      	strb	r2, [r3, #4]
 80130de:	715a      	strb	r2, [r3, #5]
 80130e0:	80dd      	strh	r5, [r3, #6]
 80130e2:	721a      	strb	r2, [r3, #8]
 80130e4:	725a      	strb	r2, [r3, #9]
 80130e6:	729a      	strb	r2, [r3, #10]
 80130e8:	72da      	strb	r2, [r3, #11]
 80130ea:	b2a1      	uxth	r1, r4
 80130ec:	4630      	mov	r0, r6
 80130ee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80130f2:	f7ff bfb3 	b.w	801305c <MDNS::SendTo(unsigned long)>
 80130f6:	bf00      	nop
 80130f8:	20002910 	andcs	r2, r0, r0, lsl r9
 80130fc:	20002715 	andcs	r2, r0, r5, lsl r7
 8013100:	20002709 	andcs	r2, r0, r9, lsl #14

08013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>:
 8013104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013108:	461e      	mov	r6, r3
 801310a:	4b25      	ldr	r3, [pc, #148]	@ (80131a0 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x9c>)
 801310c:	4c25      	ldr	r4, [pc, #148]	@ (80131a4 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa0>)
 801310e:	f8d3 9000 	ldr.w	r9, [r3]
 8013112:	f019 0510 	ands.w	r5, r9, #16
 8013116:	4607      	mov	r7, r0
 8013118:	4688      	mov	r8, r1
 801311a:	4692      	mov	sl, r2
 801311c:	d005      	beq.n	801312a <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x26>
 801311e:	4631      	mov	r1, r6
 8013120:	4640      	mov	r0, r8
 8013122:	f7ff feab 	bl	8012e7c <add_answer_dnsd_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long) [clone .constprop.0]>
 8013126:	2501      	movs	r5, #1
 8013128:	4404      	add	r4, r0
 801312a:	f019 0f20 	tst.w	r9, #32
 801312e:	d006      	beq.n	801313e <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x3a>
 8013130:	4621      	mov	r1, r4
 8013132:	4632      	mov	r2, r6
 8013134:	4640      	mov	r0, r8
 8013136:	f7ff fef5 	bl	8012f24 <add_answer_ptr(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 801313a:	3501      	adds	r5, #1
 801313c:	4404      	add	r4, r0
 801313e:	f019 0f40 	tst.w	r9, #64	@ 0x40
 8013142:	d006      	beq.n	8013152 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x4e>
 8013144:	4621      	mov	r1, r4
 8013146:	4632      	mov	r2, r6
 8013148:	4640      	mov	r0, r8
 801314a:	f7ff febf 	bl	8012ecc <add_answer_srv(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 801314e:	3501      	adds	r5, #1
 8013150:	4404      	add	r4, r0
 8013152:	f019 0f80 	tst.w	r9, #128	@ 0x80
 8013156:	d006      	beq.n	8013166 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0x62>
 8013158:	4621      	mov	r1, r4
 801315a:	4632      	mov	r2, r6
 801315c:	4640      	mov	r0, r8
 801315e:	f7ff ff09 	bl	8012f74 <add_answer_txt(mdns::ServiceRecord const&, unsigned char*, unsigned long)>
 8013162:	3501      	adds	r5, #1
 8013164:	4404      	add	r4, r0
 8013166:	4631      	mov	r1, r6
 8013168:	4620      	mov	r0, r4
 801316a:	f7ff fe67 	bl	8012e3c <add_answer_a(unsigned char*, unsigned long)>
 801316e:	4b0e      	ldr	r3, [pc, #56]	@ (80131a8 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)+0xa4>)
 8013170:	2284      	movs	r2, #132	@ 0x84
 8013172:	2101      	movs	r1, #1
 8013174:	709a      	strb	r2, [r3, #2]
 8013176:	7259      	strb	r1, [r3, #9]
 8013178:	2200      	movs	r2, #0
 801317a:	1821      	adds	r1, r4, r0
 801317c:	ba6d      	rev16	r5, r5
 801317e:	70da      	strb	r2, [r3, #3]
 8013180:	1ac9      	subs	r1, r1, r3
 8013182:	f8a3 a000 	strh.w	sl, [r3]
 8013186:	80dd      	strh	r5, [r3, #6]
 8013188:	4638      	mov	r0, r7
 801318a:	b289      	uxth	r1, r1
 801318c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013190:	711a      	strb	r2, [r3, #4]
 8013192:	715a      	strb	r2, [r3, #5]
 8013194:	721a      	strb	r2, [r3, #8]
 8013196:	729a      	strb	r2, [r3, #10]
 8013198:	72da      	strb	r2, [r3, #11]
 801319a:	f7ff bf5f 	b.w	801305c <MDNS::SendTo(unsigned long)>
 801319e:	bf00      	nop
 80131a0:	2000290c 	andcs	r2, r0, ip, lsl #18
 80131a4:	20002715 	andcs	r2, r0, r5, lsl r7
 80131a8:	20002709 	andcs	r2, r0, r9, lsl #14

080131ac <MDNS::SendAnnouncement(unsigned long)>:
 80131ac:	4b14      	ldr	r3, [pc, #80]	@ (8013200 <MDNS::SendAnnouncement(unsigned long)+0x54>)
 80131ae:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 80131b2:	b570      	push	{r4, r5, r6, lr}
 80131b4:	801a      	strh	r2, [r3, #0]
 80131b6:	4b13      	ldr	r3, [pc, #76]	@ (8013204 <MDNS::SendAnnouncement(unsigned long)+0x58>)
 80131b8:	4e13      	ldr	r6, [pc, #76]	@ (8013208 <MDNS::SendAnnouncement(unsigned long)+0x5c>)
 80131ba:	2201      	movs	r2, #1
 80131bc:	601a      	str	r2, [r3, #0]
 80131be:	460c      	mov	r4, r1
 80131c0:	460a      	mov	r2, r1
 80131c2:	2100      	movs	r1, #0
 80131c4:	4605      	mov	r5, r0
 80131c6:	f7ff ff73 	bl	80130b0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 80131ca:	68f3      	ldr	r3, [r6, #12]
 80131cc:	2b08      	cmp	r3, #8
 80131ce:	dc08      	bgt.n	80131e2 <MDNS::SendAnnouncement(unsigned long)+0x36>
 80131d0:	4b0e      	ldr	r3, [pc, #56]	@ (801320c <MDNS::SendAnnouncement(unsigned long)+0x60>)
 80131d2:	22f0      	movs	r2, #240	@ 0xf0
 80131d4:	601a      	str	r2, [r3, #0]
 80131d6:	4631      	mov	r1, r6
 80131d8:	4623      	mov	r3, r4
 80131da:	2200      	movs	r2, #0
 80131dc:	4628      	mov	r0, r5
 80131de:	f7ff ff91 	bl	8013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80131e2:	69f3      	ldr	r3, [r6, #28]
 80131e4:	2b08      	cmp	r3, #8
 80131e6:	dc0a      	bgt.n	80131fe <MDNS::SendAnnouncement(unsigned long)+0x52>
 80131e8:	4b08      	ldr	r3, [pc, #32]	@ (801320c <MDNS::SendAnnouncement(unsigned long)+0x60>)
 80131ea:	4909      	ldr	r1, [pc, #36]	@ (8013210 <MDNS::SendAnnouncement(unsigned long)+0x64>)
 80131ec:	22f0      	movs	r2, #240	@ 0xf0
 80131ee:	601a      	str	r2, [r3, #0]
 80131f0:	4628      	mov	r0, r5
 80131f2:	4623      	mov	r3, r4
 80131f4:	2200      	movs	r2, #0
 80131f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131fa:	f7ff bf83 	b.w	8013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80131fe:	bd70      	pop	{r4, r5, r6, pc}
 8013200:	200026fc 	strdcs	r2, [r0], -ip
 8013204:	20002910 	andcs	r2, r0, r0, lsl r9
 8013208:	20002914 	andcs	r2, r0, r4, lsl r9
 801320c:	2000290c 	andcs	r2, r0, ip, lsl #18
 8013210:	20002924 	andcs	r2, r0, r4, lsr #18

08013214 <network::mdns_announcement()>:
 8013214:	4b02      	ldr	r3, [pc, #8]	@ (8013220 <network::mdns_announcement()+0xc>)
 8013216:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 801321a:	6818      	ldr	r0, [r3, #0]
 801321c:	f7ff bfc6 	b.w	80131ac <MDNS::SendAnnouncement(unsigned long)>
 8013220:	200026f0 	strdcs	r2, [r0], -r0

08013224 <network::mdns_shutdown()>:
 8013224:	4b02      	ldr	r3, [pc, #8]	@ (8013230 <network::mdns_shutdown()+0xc>)
 8013226:	2100      	movs	r1, #0
 8013228:	6818      	ldr	r0, [r3, #0]
 801322a:	f7ff bfbf 	b.w	80131ac <MDNS::SendAnnouncement(unsigned long)>
 801322e:	bf00      	nop
 8013230:	200026f0 	strdcs	r2, [r0], -r0

08013234 <MDNS::MDNS()>:
 8013234:	b538      	push	{r3, r4, r5, lr}
 8013236:	4b16      	ldr	r3, [pc, #88]	@ (8013290 <MDNS::MDNS()+0x5c>)
 8013238:	4d16      	ldr	r5, [pc, #88]	@ (8013294 <MDNS::MDNS()+0x60>)
 801323a:	6018      	str	r0, [r3, #0]
 801323c:	4b16      	ldr	r3, [pc, #88]	@ (8013298 <MDNS::MDNS()+0x64>)
 801323e:	2209      	movs	r2, #9
 8013240:	4604      	mov	r4, r0
 8013242:	f241 40e9 	movw	r0, #5353	@ 0x14e9
 8013246:	60da      	str	r2, [r3, #12]
 8013248:	61da      	str	r2, [r3, #28]
 801324a:	f001 fb83 	bl	8014954 <net::udp_begin(unsigned short)>
 801324e:	4b13      	ldr	r3, [pc, #76]	@ (801329c <MDNS::MDNS()+0x68>)
 8013250:	6018      	str	r0, [r3, #0]
 8013252:	4813      	ldr	r0, [pc, #76]	@ (80132a0 <MDNS::MDNS()+0x6c>)
 8013254:	f000 ff66 	bl	8014124 <net::igmp_join(unsigned long)>
 8013258:	4b12      	ldr	r3, [pc, #72]	@ (80132a4 <MDNS::MDNS()+0x70>)
 801325a:	6819      	ldr	r1, [r3, #0]
 801325c:	233f      	movs	r3, #63	@ 0x3f
 801325e:	f101 0256 	add.w	r2, r1, #86	@ 0x56
 8013262:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 8013266:	b118      	cbz	r0, 8013270 <MDNS::MDNS()+0x3c>
 8013268:	3b01      	subs	r3, #1
 801326a:	f802 0b01 	strb.w	r0, [r2], #1
 801326e:	d1f8      	bne.n	8013262 <MDNS::MDNS()+0x2e>
 8013270:	4413      	add	r3, r2
 8013272:	2000      	movs	r0, #0
 8013274:	429a      	cmp	r2, r3
 8013276:	d108      	bne.n	801328a <MDNS::MDNS()+0x56>
 8013278:	f881 0095 	strb.w	r0, [r1, #149]	@ 0x95
 801327c:	4620      	mov	r0, r4
 801327e:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8013282:	f7ff ff93 	bl	80131ac <MDNS::SendAnnouncement(unsigned long)>
 8013286:	4620      	mov	r0, r4
 8013288:	bd38      	pop	{r3, r4, r5, pc}
 801328a:	f802 0b01 	strb.w	r0, [r2], #1
 801328e:	e7f1      	b.n	8013274 <MDNS::MDNS()+0x40>
 8013290:	200026f0 	strdcs	r2, [r0], -r0
 8013294:	0801ea76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, fp, sp, lr, pc}
 8013298:	20002914 	andcs	r2, r0, r4, lsl r9
 801329c:	20002704 	andcs	r2, r0, r4, lsl #14
 80132a0:	fb0000e0 	blx	801362a <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x3a>
 80132a4:	20002934 	andcs	r2, r0, r4, lsr r9

080132a8 <MDNS::ServiceRecordDelete(mdns::Services)>:
 80132a8:	b510      	push	{r4, lr}
 80132aa:	4c0c      	ldr	r4, [pc, #48]	@ (80132dc <MDNS::ServiceRecordDelete(mdns::Services)+0x34>)
 80132ac:	68e3      	ldr	r3, [r4, #12]
 80132ae:	4299      	cmp	r1, r3
 80132b0:	d003      	beq.n	80132ba <MDNS::ServiceRecordDelete(mdns::Services)+0x12>
 80132b2:	69e3      	ldr	r3, [r4, #28]
 80132b4:	4299      	cmp	r1, r3
 80132b6:	d10f      	bne.n	80132d8 <MDNS::ServiceRecordDelete(mdns::Services)+0x30>
 80132b8:	3410      	adds	r4, #16
 80132ba:	2300      	movs	r3, #0
 80132bc:	461a      	mov	r2, r3
 80132be:	4621      	mov	r1, r4
 80132c0:	f7ff ff20 	bl	8013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80132c4:	6820      	ldr	r0, [r4, #0]
 80132c6:	b108      	cbz	r0, 80132cc <MDNS::ServiceRecordDelete(mdns::Services)+0x24>
 80132c8:	f007 f958 	bl	801a57c <operator delete[](void*)>
 80132cc:	6860      	ldr	r0, [r4, #4]
 80132ce:	b108      	cbz	r0, 80132d4 <MDNS::ServiceRecordDelete(mdns::Services)+0x2c>
 80132d0:	f007 f954 	bl	801a57c <operator delete[](void*)>
 80132d4:	2001      	movs	r0, #1
 80132d6:	bd10      	pop	{r4, pc}
 80132d8:	2000      	movs	r0, #0
 80132da:	e7fc      	b.n	80132d6 <MDNS::ServiceRecordDelete(mdns::Services)+0x2e>
 80132dc:	20002914 	andcs	r2, r0, r4, lsl r9

080132e0 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)>:
 80132e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132e4:	4d2a      	ldr	r5, [pc, #168]	@ (8013390 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb0>)
 80132e6:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 80132ea:	461f      	mov	r7, r3
 80132ec:	68eb      	ldr	r3, [r5, #12]
 80132ee:	2b09      	cmp	r3, #9
 80132f0:	4680      	mov	r8, r0
 80132f2:	4689      	mov	r9, r1
 80132f4:	4692      	mov	sl, r2
 80132f6:	d003      	beq.n	8013300 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x20>
 80132f8:	69eb      	ldr	r3, [r5, #28]
 80132fa:	2b09      	cmp	r3, #9
 80132fc:	d145      	bne.n	801338a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xaa>
 80132fe:	3510      	adds	r5, #16
 8013300:	f1b9 0f00 	cmp.w	r9, #0
 8013304:	d012      	beq.n	801332c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x4c>
 8013306:	4648      	mov	r0, r9
 8013308:	f7ff fc35 	bl	8012b76 <strlen>
 801330c:	283f      	cmp	r0, #63	@ 0x3f
 801330e:	4604      	mov	r4, r0
 8013310:	d839      	bhi.n	8013386 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa6>
 8013312:	2800      	cmp	r0, #0
 8013314:	d035      	beq.n	8013382 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 8013316:	1c60      	adds	r0, r4, #1
 8013318:	f007 f936 	bl	801a588 <operator new[](unsigned int)>
 801331c:	4622      	mov	r2, r4
 801331e:	6028      	str	r0, [r5, #0]
 8013320:	4649      	mov	r1, r9
 8013322:	f7ff fc1f 	bl	8012b64 <memcpy.isra.0>
 8013326:	682b      	ldr	r3, [r5, #0]
 8013328:	2200      	movs	r2, #0
 801332a:	551a      	strb	r2, [r3, r4]
 801332c:	f8c5 a00c 	str.w	sl, [r5, #12]
 8013330:	b91e      	cbnz	r6, 801333a <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x5a>
 8013332:	4b18      	ldr	r3, [pc, #96]	@ (8013394 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb4>)
 8013334:	eb03 130a 	add.w	r3, r3, sl, lsl #4
 8013338:	899e      	ldrh	r6, [r3, #12]
 801333a:	ba76      	rev16	r6, r6
 801333c:	b2b6      	uxth	r6, r6
 801333e:	816e      	strh	r6, [r5, #10]
 8013340:	b187      	cbz	r7, 8013364 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x84>
 8013342:	4638      	mov	r0, r7
 8013344:	f7ff fc17 	bl	8012b76 <strlen>
 8013348:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 801334c:	bf28      	it	cs
 801334e:	f44f 7080 	movcs.w	r0, #256	@ 0x100
 8013352:	4604      	mov	r4, r0
 8013354:	f007 f918 	bl	801a588 <operator new[](unsigned int)>
 8013358:	4622      	mov	r2, r4
 801335a:	6068      	str	r0, [r5, #4]
 801335c:	4639      	mov	r1, r7
 801335e:	f7ff fc01 	bl	8012b64 <memcpy.isra.0>
 8013362:	812c      	strh	r4, [r5, #8]
 8013364:	4b0c      	ldr	r3, [pc, #48]	@ (8013398 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xb8>)
 8013366:	f241 42e9 	movw	r2, #5353	@ 0x14e9
 801336a:	801a      	strh	r2, [r3, #0]
 801336c:	4b0b      	ldr	r3, [pc, #44]	@ (801339c <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xbc>)
 801336e:	22f0      	movs	r2, #240	@ 0xf0
 8013370:	601a      	str	r2, [r3, #0]
 8013372:	4640      	mov	r0, r8
 8013374:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8013378:	2200      	movs	r2, #0
 801337a:	4629      	mov	r1, r5
 801337c:	f7ff fec2 	bl	8013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 8013380:	2001      	movs	r0, #1
 8013382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013386:	243f      	movs	r4, #63	@ 0x3f
 8013388:	e7c5      	b.n	8013316 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0x36>
 801338a:	2000      	movs	r0, #0
 801338c:	e7f9      	b.n	8013382 <MDNS::ServiceRecordAdd(char const*, mdns::Services, char const*, unsigned short)+0xa2>
 801338e:	bf00      	nop
 8013390:	20002914 	andcs	r2, r0, r4, lsl r9
 8013394:	0801e99c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, sp, lr, pc}
 8013398:	200026fc 	strdcs	r2, [r0], -ip
 801339c:	2000290c 	andcs	r2, r0, ip, lsl #18

080133a0 <MDNS::HandleQuestions(unsigned long)>:
 80133a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133a4:	4b5c      	ldr	r3, [pc, #368]	@ (8013518 <MDNS::HandleQuestions(unsigned long)+0x178>)
 80133a6:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 8013538 <MDNS::HandleQuestions(unsigned long)+0x198>
 80133aa:	881a      	ldrh	r2, [r3, #0]
 80133ac:	f241 43e9 	movw	r3, #5353	@ 0x14e9
 80133b0:	429a      	cmp	r2, r3
 80133b2:	f04f 0500 	mov.w	r5, #0
 80133b6:	4b59      	ldr	r3, [pc, #356]	@ (801351c <MDNS::HandleQuestions(unsigned long)+0x17c>)
 80133b8:	f8c9 5000 	str.w	r5, [r9]
 80133bc:	f5ad 7d47 	sub.w	sp, sp, #796	@ 0x31c
 80133c0:	bf14      	ite	ne
 80133c2:	2201      	movne	r2, #1
 80133c4:	462a      	moveq	r2, r5
 80133c6:	9001      	str	r0, [sp, #4]
 80133c8:	4688      	mov	r8, r1
 80133ca:	701a      	strb	r2, [r3, #0]
 80133cc:	d004      	beq.n	80133d8 <MDNS::HandleQuestions(unsigned long)+0x38>
 80133ce:	2901      	cmp	r1, #1
 80133d0:	bf02      	ittt	eq
 80133d2:	4b53      	ldreq	r3, [pc, #332]	@ (8013520 <MDNS::HandleQuestions(unsigned long)+0x180>)
 80133d4:	681b      	ldreq	r3, [r3, #0]
 80133d6:	881d      	ldrheq	r5, [r3, #0]
 80133d8:	4c52      	ldr	r4, [pc, #328]	@ (8013524 <MDNS::HandleQuestions(unsigned long)+0x184>)
 80133da:	f04f 0b00 	mov.w	fp, #0
 80133de:	f04f 0a0c 	mov.w	sl, #12
 80133e2:	45c3      	cmp	fp, r8
 80133e4:	d10e      	bne.n	8013404 <MDNS::HandleQuestions(unsigned long)+0x64>
 80133e6:	f8d9 3000 	ldr.w	r3, [r9]
 80133ea:	2b00      	cmp	r3, #0
 80133ec:	f000 808f 	beq.w	801350e <MDNS::HandleQuestions(unsigned long)+0x16e>
 80133f0:	9801      	ldr	r0, [sp, #4]
 80133f2:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 80133f6:	4629      	mov	r1, r5
 80133f8:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 80133fc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013400:	f7ff be56 	b.w	80130b0 <MDNS::SendAnswerLocalIpAddress(unsigned short, unsigned long)>
 8013404:	4b48      	ldr	r3, [pc, #288]	@ (8013528 <MDNS::HandleQuestions(unsigned long)+0x188>)
 8013406:	4e46      	ldr	r6, [pc, #280]	@ (8013520 <MDNS::HandleQuestions(unsigned long)+0x180>)
 8013408:	681a      	ldr	r2, [r3, #0]
 801340a:	6830      	ldr	r0, [r6, #0]
 801340c:	ab03      	add	r3, sp, #12
 801340e:	4402      	add	r2, r0
 8013410:	eb00 010a 	add.w	r1, r0, sl
 8013414:	f7ff fddb 	bl	8012fce <get_domain_name(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char*)>
 8013418:	2800      	cmp	r0, #0
 801341a:	d078      	beq.n	801350e <MDNS::HandleQuestions(unsigned long)+0x16e>
 801341c:	6833      	ldr	r3, [r6, #0]
 801341e:	eb03 020a 	add.w	r2, r3, sl
 8013422:	1a80      	subs	r0, r0, r2
 8013424:	f8ad 010c 	strh.w	r0, [sp, #268]	@ 0x10c
 8013428:	fa1a f080 	uxtah	r0, sl, r0
 801342c:	181a      	adds	r2, r3, r0
 801342e:	f100 0a04 	add.w	sl, r0, #4
 8013432:	8852      	ldrh	r2, [r2, #2]
 8013434:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
 8013438:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 801343c:	d002      	beq.n	8013444 <MDNS::HandleQuestions(unsigned long)+0xa4>
 801343e:	f10b 0b01 	add.w	fp, fp, #1
 8013442:	e7ce      	b.n	80133e2 <MDNS::HandleQuestions(unsigned long)+0x42>
 8013444:	5a1e      	ldrh	r6, [r3, r0]
 8013446:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 801344a:	d002      	beq.n	8013452 <MDNS::HandleQuestions(unsigned long)+0xb2>
 801344c:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8013450:	d10d      	bne.n	801346e <MDNS::HandleQuestions(unsigned long)+0xce>
 8013452:	a844      	add	r0, sp, #272	@ 0x110
 8013454:	f7ff fbaa 	bl	8012bac <create_host_domain(mdns::Domain&)>
 8013458:	a903      	add	r1, sp, #12
 801345a:	a844      	add	r0, sp, #272	@ 0x110
 801345c:	f7ff fc3c 	bl	8012cd8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 8013460:	b128      	cbz	r0, 801346e <MDNS::HandleQuestions(unsigned long)+0xce>
 8013462:	f8d9 3000 	ldr.w	r3, [r9]
 8013466:	f043 0301 	orr.w	r3, r3, #1
 801346a:	f8c9 3000 	str.w	r3, [r9]
 801346e:	4f2f      	ldr	r7, [pc, #188]	@ (801352c <MDNS::HandleQuestions(unsigned long)+0x18c>)
 8013470:	68fb      	ldr	r3, [r7, #12]
 8013472:	2b08      	cmp	r3, #8
 8013474:	dc46      	bgt.n	8013504 <MDNS::HandleQuestions(unsigned long)+0x164>
 8013476:	2300      	movs	r3, #0
 8013478:	f5b6 6f40 	cmp.w	r6, #3072	@ 0xc00
 801347c:	6023      	str	r3, [r4, #0]
 801347e:	d002      	beq.n	8013486 <MDNS::HandleQuestions(unsigned long)+0xe6>
 8013480:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 8013484:	d115      	bne.n	80134b2 <MDNS::HandleQuestions(unsigned long)+0x112>
 8013486:	482a      	ldr	r0, [pc, #168]	@ (8013530 <MDNS::HandleQuestions(unsigned long)+0x190>)
 8013488:	a903      	add	r1, sp, #12
 801348a:	f7ff fc25 	bl	8012cd8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 801348e:	b108      	cbz	r0, 8013494 <MDNS::HandleQuestions(unsigned long)+0xf4>
 8013490:	2310      	movs	r3, #16
 8013492:	6023      	str	r3, [r4, #0]
 8013494:	2200      	movs	r2, #0
 8013496:	4639      	mov	r1, r7
 8013498:	a885      	add	r0, sp, #532	@ 0x214
 801349a:	f7ff fba7 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 801349e:	a903      	add	r1, sp, #12
 80134a0:	a885      	add	r0, sp, #532	@ 0x214
 80134a2:	f7ff fc19 	bl	8012cd8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 80134a6:	6823      	ldr	r3, [r4, #0]
 80134a8:	b118      	cbz	r0, 80134b2 <MDNS::HandleQuestions(unsigned long)+0x112>
 80134aa:	f043 0320 	orr.w	r3, r3, #32
 80134ae:	b2db      	uxtb	r3, r3
 80134b0:	6023      	str	r3, [r4, #0]
 80134b2:	4639      	mov	r1, r7
 80134b4:	a885      	add	r0, sp, #532	@ 0x214
 80134b6:	2201      	movs	r2, #1
 80134b8:	f7ff fb98 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 80134bc:	a903      	add	r1, sp, #12
 80134be:	a885      	add	r0, sp, #532	@ 0x214
 80134c0:	f7ff fc0a 	bl	8012cd8 <mdns::operator==(mdns::Domain const&, mdns::Domain const&)>
 80134c4:	b1d8      	cbz	r0, 80134fe <MDNS::HandleQuestions(unsigned long)+0x15e>
 80134c6:	f5b6 5f04 	cmp.w	r6, #8448	@ 0x2100
 80134ca:	d002      	beq.n	80134d2 <MDNS::HandleQuestions(unsigned long)+0x132>
 80134cc:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80134d0:	d112      	bne.n	80134f8 <MDNS::HandleQuestions(unsigned long)+0x158>
 80134d2:	7823      	ldrb	r3, [r4, #0]
 80134d4:	f5b6 4f7f 	cmp.w	r6, #65280	@ 0xff00
 80134d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80134dc:	6023      	str	r3, [r4, #0]
 80134de:	d103      	bne.n	80134e8 <MDNS::HandleQuestions(unsigned long)+0x148>
 80134e0:	7823      	ldrb	r3, [r4, #0]
 80134e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80134e6:	6023      	str	r3, [r4, #0]
 80134e8:	9801      	ldr	r0, [sp, #4]
 80134ea:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80134ee:	462a      	mov	r2, r5
 80134f0:	4639      	mov	r1, r7
 80134f2:	f7ff fe07 	bl	8013104 <MDNS::SendMessage(mdns::ServiceRecord const&, unsigned short, unsigned long)>
 80134f6:	e005      	b.n	8013504 <MDNS::HandleQuestions(unsigned long)+0x164>
 80134f8:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
 80134fc:	d0f0      	beq.n	80134e0 <MDNS::HandleQuestions(unsigned long)+0x140>
 80134fe:	6823      	ldr	r3, [r4, #0]
 8013500:	2b00      	cmp	r3, #0
 8013502:	d1f1      	bne.n	80134e8 <MDNS::HandleQuestions(unsigned long)+0x148>
 8013504:	4b0b      	ldr	r3, [pc, #44]	@ (8013534 <MDNS::HandleQuestions(unsigned long)+0x194>)
 8013506:	3710      	adds	r7, #16
 8013508:	429f      	cmp	r7, r3
 801350a:	d1b1      	bne.n	8013470 <MDNS::HandleQuestions(unsigned long)+0xd0>
 801350c:	e797      	b.n	801343e <MDNS::HandleQuestions(unsigned long)+0x9e>
 801350e:	f50d 7d47 	add.w	sp, sp, #796	@ 0x31c
 8013512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013516:	bf00      	nop
 8013518:	200026fc 	strdcs	r2, [r0], -ip
 801351c:	20002708 	andcs	r2, r0, r8, lsl #14
 8013520:	200026f4 	strdcs	r2, [r0], -r4
 8013524:	2000290c 	andcs	r2, r0, ip, lsl #18
 8013528:	200026f8 	strdcs	r2, [r0], -r8
 801352c:	20002914 	andcs	r2, r0, r4, lsl r9
 8013530:	0801e89a 	stmdaeq	r1, {r1, r3, r4, r7, fp, sp, lr, pc}
 8013534:	20002934 	andcs	r2, r0, r4, lsr r9
 8013538:	20002910 	andcs	r2, r0, r0, lsl r9

0801353c <MDNS::Print()>:
 801353c:	b530      	push	{r4, r5, lr}
 801353e:	4815      	ldr	r0, [pc, #84]	@ (8013594 <MDNS::Print()+0x58>)
 8013540:	4c15      	ldr	r4, [pc, #84]	@ (8013598 <MDNS::Print()+0x5c>)
 8013542:	b0c3      	sub	sp, #268	@ 0x10c
 8013544:	f006 fdc8 	bl	801a0d8 <printf>
 8013548:	a801      	add	r0, sp, #4
 801354a:	f7ff fb2f 	bl	8012bac <create_host_domain(mdns::Domain&)>
 801354e:	2101      	movs	r1, #1
 8013550:	a801      	add	r0, sp, #4
 8013552:	f7ff fb9d 	bl	8012c90 <mdns::Domain::Print(bool)>
 8013556:	2503      	movs	r5, #3
 8013558:	3d01      	subs	r5, #1
 801355a:	d101      	bne.n	8013560 <MDNS::Print()+0x24>
 801355c:	b043      	add	sp, #268	@ 0x10c
 801355e:	bd30      	pop	{r4, r5, pc}
 8013560:	68e3      	ldr	r3, [r4, #12]
 8013562:	2b08      	cmp	r3, #8
 8013564:	dc14      	bgt.n	8013590 <MDNS::Print()+0x54>
 8013566:	2200      	movs	r2, #0
 8013568:	4621      	mov	r1, r4
 801356a:	a801      	add	r0, sp, #4
 801356c:	f7ff fb3e 	bl	8012bec <create_service_domain(mdns::Domain&, mdns::ServiceRecord const&, bool)>
 8013570:	2100      	movs	r1, #0
 8013572:	a801      	add	r0, sp, #4
 8013574:	f7ff fb8c 	bl	8012c90 <mdns::Domain::Print(bool)>
 8013578:	8961      	ldrh	r1, [r4, #10]
 801357a:	4a08      	ldr	r2, [pc, #32]	@ (801359c <MDNS::Print()+0x60>)
 801357c:	6863      	ldr	r3, [r4, #4]
 801357e:	4808      	ldr	r0, [pc, #32]	@ (80135a0 <MDNS::Print()+0x64>)
 8013580:	ba49      	rev16	r1, r1
 8013582:	2b00      	cmp	r3, #0
 8013584:	bf08      	it	eq
 8013586:	4613      	moveq	r3, r2
 8013588:	b289      	uxth	r1, r1
 801358a:	8922      	ldrh	r2, [r4, #8]
 801358c:	f006 fda4 	bl	801a0d8 <printf>
 8013590:	3410      	adds	r4, #16
 8013592:	e7e1      	b.n	8013558 <MDNS::Print()+0x1c>
 8013594:	0801b3ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, ip, sp, pc}
 8013598:	20002914 	andcs	r2, r0, r4, lsl r9
 801359c:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 80135a0:	0801b3f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, r9, ip, sp, pc}

080135a4 <strncpy.isra.0>:
 80135a4:	3901      	subs	r1, #1
 80135a6:	b112      	cbz	r2, 80135ae <strncpy.isra.0+0xa>
 80135a8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80135ac:	b913      	cbnz	r3, 80135b4 <strncpy.isra.0+0x10>
 80135ae:	4402      	add	r2, r0
 80135b0:	2300      	movs	r3, #0
 80135b2:	e005      	b.n	80135c0 <strncpy.isra.0+0x1c>
 80135b4:	f800 3b01 	strb.w	r3, [r0], #1
 80135b8:	3a01      	subs	r2, #1
 80135ba:	e7f4      	b.n	80135a6 <strncpy.isra.0+0x2>
 80135bc:	f800 3b01 	strb.w	r3, [r0], #1
 80135c0:	4290      	cmp	r0, r2
 80135c2:	d1fb      	bne.n	80135bc <strncpy.isra.0+0x18>
 80135c4:	4770      	bx	lr
	...

080135c8 <NetworkStore::SaveDhcp(bool)>:
 80135c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80135ca:	2301      	movs	r3, #1
 80135cc:	2100      	movs	r1, #0
 80135ce:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80135d2:	f88d 0017 	strb.w	r0, [sp, #23]
 80135d6:	4805      	ldr	r0, [pc, #20]	@ (80135ec <NetworkStore::SaveDhcp(bool)+0x24>)
 80135d8:	9300      	str	r3, [sp, #0]
 80135da:	6800      	ldr	r0, [r0, #0]
 80135dc:	f10d 0317 	add.w	r3, sp, #23
 80135e0:	2214      	movs	r2, #20
 80135e2:	f002 fef5 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80135e6:	b007      	add	sp, #28
 80135e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80135ec:	20002a00 	andcs	r2, r0, r0, lsl #20

080135f0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 80135f0:	b530      	push	{r4, r5, lr}
 80135f2:	4605      	mov	r5, r0
 80135f4:	06e8      	lsls	r0, r5, #27
 80135f6:	b087      	sub	sp, #28
 80135f8:	460c      	mov	r4, r1
 80135fa:	d51a      	bpl.n	8013632 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x42>
 80135fc:	f002 fe02 	bl	8016204 <net::display_ip()>
 8013600:	f7ff fe08 	bl	8013214 <network::mdns_announcement()>
 8013604:	4b2e      	ldr	r3, [pc, #184]	@ (80136c0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 8013606:	6821      	ldr	r1, [r4, #0]
 8013608:	681b      	ldr	r3, [r3, #0]
 801360a:	482e      	ldr	r0, [pc, #184]	@ (80136c4 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd4>)
 801360c:	0e1a      	lsrs	r2, r3, #24
 801360e:	9204      	str	r2, [sp, #16]
 8013610:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013614:	9203      	str	r2, [sp, #12]
 8013616:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801361a:	b2db      	uxtb	r3, r3
 801361c:	9301      	str	r3, [sp, #4]
 801361e:	0e0b      	lsrs	r3, r1, #24
 8013620:	9202      	str	r2, [sp, #8]
 8013622:	9300      	str	r3, [sp, #0]
 8013624:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013628:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801362c:	b2c9      	uxtb	r1, r1
 801362e:	f006 fd53 	bl	801a0d8 <printf>
 8013632:	0669      	lsls	r1, r5, #25
 8013634:	d518      	bpl.n	8013668 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0x78>
 8013636:	f002 fded 	bl	8016214 <net::display_netmask()>
 801363a:	4b21      	ldr	r3, [pc, #132]	@ (80136c0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 801363c:	6861      	ldr	r1, [r4, #4]
 801363e:	685b      	ldr	r3, [r3, #4]
 8013640:	4821      	ldr	r0, [pc, #132]	@ (80136c8 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd8>)
 8013642:	0e1a      	lsrs	r2, r3, #24
 8013644:	9204      	str	r2, [sp, #16]
 8013646:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801364a:	9203      	str	r2, [sp, #12]
 801364c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013650:	b2db      	uxtb	r3, r3
 8013652:	9301      	str	r3, [sp, #4]
 8013654:	0e0b      	lsrs	r3, r1, #24
 8013656:	9202      	str	r2, [sp, #8]
 8013658:	9300      	str	r3, [sp, #0]
 801365a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801365e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013662:	b2c9      	uxtb	r1, r1
 8013664:	f006 fd38 	bl	801a0d8 <printf>
 8013668:	06aa      	lsls	r2, r5, #26
 801366a:	d518      	bpl.n	801369e <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xae>
 801366c:	f002 fdf4 	bl	8016258 <net::display_gateway()>
 8013670:	4b13      	ldr	r3, [pc, #76]	@ (80136c0 <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xd0>)
 8013672:	68a1      	ldr	r1, [r4, #8]
 8013674:	689b      	ldr	r3, [r3, #8]
 8013676:	4815      	ldr	r0, [pc, #84]	@ (80136cc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xdc>)
 8013678:	0e1a      	lsrs	r2, r3, #24
 801367a:	9204      	str	r2, [sp, #16]
 801367c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8013680:	9203      	str	r2, [sp, #12]
 8013682:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8013686:	b2db      	uxtb	r3, r3
 8013688:	9301      	str	r3, [sp, #4]
 801368a:	0e0b      	lsrs	r3, r1, #24
 801368c:	9202      	str	r2, [sp, #8]
 801368e:	9300      	str	r3, [sp, #0]
 8013690:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013694:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013698:	b2c9      	uxtb	r1, r1
 801369a:	f006 fd1d 	bl	801a0d8 <printf>
 801369e:	076b      	lsls	r3, r5, #29
 80136a0:	d50c      	bpl.n	80136bc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 80136a2:	7823      	ldrb	r3, [r4, #0]
 80136a4:	b953      	cbnz	r3, 80136bc <netif_ext_callback(unsigned short, net::netif_ext_callback_args_t const*)+0xcc>
 80136a6:	f7ff fdbd 	bl	8013224 <network::mdns_shutdown()>
 80136aa:	f001 f88d 	bl	80147c8 <net::tcp_shutdown()>
 80136ae:	f7f4 fdf3 	bl	8008298 <net::igmp_shutdown()>
 80136b2:	b007      	add	sp, #28
 80136b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80136b8:	f000 bb78 	b.w	8013dac <net::dhcp_release_and_stop()>
 80136bc:	b007      	add	sp, #28
 80136be:	bd30      	pop	{r4, r5, pc}
 80136c0:	20002954 	andcs	r2, r0, r4, asr r9
 80136c4:	0801b3fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, ip, sp, pc}
 80136c8:	0801b41c 	stmdaeq	r1, {r2, r3, r4, sl, ip, sp, pc}
 80136cc:	0801b441 	stmdaeq	r1, {r0, r6, sl, ip, sp, pc}

080136d0 <Network::Network()>:
 80136d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80136d2:	2300      	movs	r3, #0
 80136d4:	f240 1201 	movw	r2, #257	@ 0x101
 80136d8:	6003      	str	r3, [r0, #0]
 80136da:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
 80136de:	4b53      	ldr	r3, [pc, #332]	@ (801382c <Network::Network()+0x15c>)
 80136e0:	8082      	strh	r2, [r0, #4]
 80136e2:	4a53      	ldr	r2, [pc, #332]	@ (8013830 <Network::Network()+0x160>)
 80136e4:	6018      	str	r0, [r3, #0]
 80136e6:	b09f      	sub	sp, #124	@ 0x7c
 80136e8:	4604      	mov	r4, r0
 80136ea:	1d83      	adds	r3, r0, #6
 80136ec:	f812 6b01 	ldrb.w	r6, [r2], #1
 80136f0:	f803 6b01 	strb.w	r6, [r3], #1
 80136f4:	2e00      	cmp	r6, #0
 80136f6:	d1f9      	bne.n	80136ec <Network::Network()+0x1c>
 80136f8:	f884 6056 	strb.w	r6, [r4, #86]	@ 0x56
 80136fc:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8013700:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
 8013704:	f803 6b01 	strb.w	r6, [r3], #1
 8013708:	4293      	cmp	r3, r2
 801370a:	d1fb      	bne.n	8013704 <Network::Network()+0x34>
 801370c:	4d49      	ldr	r5, [pc, #292]	@ (8013834 <Network::Network()+0x164>)
 801370e:	f002 fd39 	bl	8016184 <net::display_emac_config()>
 8013712:	f7f4 fe45 	bl	80083a0 <emac_config()>
 8013716:	f002 fd47 	bl	80161a8 <net::display_emac_start()>
 801371a:	4847      	ldr	r0, [pc, #284]	@ (8013838 <Network::Network()+0x168>)
 801371c:	4621      	mov	r1, r4
 801371e:	f7f4 fe63 	bl	80083e8 <emac_start(unsigned char*, net::Link&)>
 8013722:	7e6b      	ldrb	r3, [r5, #25]
 8013724:	9302      	str	r3, [sp, #8]
 8013726:	7e2b      	ldrb	r3, [r5, #24]
 8013728:	9301      	str	r3, [sp, #4]
 801372a:	7deb      	ldrb	r3, [r5, #23]
 801372c:	9300      	str	r3, [sp, #0]
 801372e:	7dab      	ldrb	r3, [r5, #22]
 8013730:	7d6a      	ldrb	r2, [r5, #21]
 8013732:	7d29      	ldrb	r1, [r5, #20]
 8013734:	4841      	ldr	r0, [pc, #260]	@ (801383c <Network::Network()+0x16c>)
 8013736:	f006 fccf 	bl	801a0d8 <printf>
 801373a:	f001 fc06 	bl	8014f4a <net::phy_customized_timing()>
 801373e:	f001 fc03 	bl	8014f48 <net::phy_customized_led()>
 8013742:	f000 fe15 	bl	8014370 <net::netif_init()>
 8013746:	483e      	ldr	r0, [pc, #248]	@ (8013840 <Network::Network()+0x170>)
 8013748:	f000 feb2 	bl	80144b0 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>
 801374c:	a806      	add	r0, sp, #24
 801374e:	f001 f9f1 	bl	8014b34 <NetworkParams::NetworkParams()>
 8013752:	a806      	add	r0, sp, #24
 8013754:	f001 f9f8 	bl	8014b48 <NetworkParams::Load()>
 8013758:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
 801375c:	2b00      	cmp	r3, #0
 801375e:	d15b      	bne.n	8013818 <Network::Network()+0x148>
 8013760:	4a38      	ldr	r2, [pc, #224]	@ (8013844 <Network::Network()+0x174>)
 8013762:	f104 0315 	add.w	r3, r4, #21
 8013766:	f104 0120 	add.w	r1, r4, #32
 801376a:	f812 0b01 	ldrb.w	r0, [r2], #1
 801376e:	f803 0f01 	strb.w	r0, [r3, #1]!
 8013772:	428b      	cmp	r3, r1
 8013774:	d1f9      	bne.n	801376a <Network::Network()+0x9a>
 8013776:	7deb      	ldrb	r3, [r5, #23]
 8013778:	091a      	lsrs	r2, r3, #4
 801377a:	2b9f      	cmp	r3, #159	@ 0x9f
 801377c:	f003 030f 	and.w	r3, r3, #15
 8013780:	bf94      	ite	ls
 8013782:	3230      	addls	r2, #48	@ 0x30
 8013784:	3237      	addhi	r2, #55	@ 0x37
 8013786:	2b09      	cmp	r3, #9
 8013788:	bf94      	ite	ls
 801378a:	3330      	addls	r3, #48	@ 0x30
 801378c:	3337      	addhi	r3, #55	@ 0x37
 801378e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013792:	7e2b      	ldrb	r3, [r5, #24]
 8013794:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8013798:	2b9f      	cmp	r3, #159	@ 0x9f
 801379a:	ea4f 1213 	mov.w	r2, r3, lsr #4
 801379e:	f003 030f 	and.w	r3, r3, #15
 80137a2:	bf94      	ite	ls
 80137a4:	3230      	addls	r2, #48	@ 0x30
 80137a6:	3237      	addhi	r2, #55	@ 0x37
 80137a8:	2b09      	cmp	r3, #9
 80137aa:	bf94      	ite	ls
 80137ac:	3330      	addls	r3, #48	@ 0x30
 80137ae:	3337      	addhi	r3, #55	@ 0x37
 80137b0:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 80137b4:	7e6b      	ldrb	r3, [r5, #25]
 80137b6:	f884 2023 	strb.w	r2, [r4, #35]	@ 0x23
 80137ba:	2b9f      	cmp	r3, #159	@ 0x9f
 80137bc:	ea4f 1213 	mov.w	r2, r3, lsr #4
 80137c0:	f003 030f 	and.w	r3, r3, #15
 80137c4:	bf94      	ite	ls
 80137c6:	3230      	addls	r2, #48	@ 0x30
 80137c8:	3237      	addhi	r2, #55	@ 0x37
 80137ca:	2b09      	cmp	r3, #9
 80137cc:	bf94      	ite	ls
 80137ce:	3330      	addls	r3, #48	@ 0x30
 80137d0:	3337      	addhi	r3, #55	@ 0x37
 80137d2:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 80137d6:	2300      	movs	r3, #0
 80137d8:	f884 2025 	strb.w	r2, [r4, #37]	@ 0x25
 80137dc:	f884 3027 	strb.w	r3, [r4, #39]	@ 0x27
 80137e0:	6820      	ldr	r0, [r4, #0]
 80137e2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80137e4:	f104 0316 	add.w	r3, r4, #22
 80137e8:	61eb      	str	r3, [r5, #28]
 80137ea:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 80137ee:	f88d 3017 	strb.w	r3, [sp, #23]
 80137f2:	1e43      	subs	r3, r0, #1
 80137f4:	4258      	negs	r0, r3
 80137f6:	4158      	adcs	r0, r3
 80137f8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80137fc:	f002 fce6 	bl	80161cc <net::display_emac_status(bool)>
 8013800:	f10d 0317 	add.w	r3, sp, #23
 8013804:	9300      	str	r3, [sp, #0]
 8013806:	6820      	ldr	r0, [r4, #0]
 8013808:	463b      	mov	r3, r7
 801380a:	4632      	mov	r2, r6
 801380c:	4629      	mov	r1, r5
 801380e:	f7f4 fd51 	bl	80082b4 <net::net_init(net::Link, net::ip_addr, net::ip_addr, net::ip_addr, bool&)>
 8013812:	4620      	mov	r0, r4
 8013814:	b01f      	add	sp, #124	@ 0x7c
 8013816:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013818:	223f      	movs	r2, #63	@ 0x3f
 801381a:	f10d 012d 	add.w	r1, sp, #45	@ 0x2d
 801381e:	f104 0016 	add.w	r0, r4, #22
 8013822:	f7ff febf 	bl	80135a4 <strncpy.isra.0>
 8013826:	f884 6055 	strb.w	r6, [r4, #85]	@ 0x55
 801382a:	e7d9      	b.n	80137e0 <Network::Network()+0x110>
 801382c:	20002934 	andcs	r2, r0, r4, lsr r9
 8013830:	0801b461 	stmdaeq	r1, {r0, r5, r6, sl, ip, sp, pc}
 8013834:	20002954 	andcs	r2, r0, r4, asr r9
 8013838:	20002968 	andcs	r2, r0, r8, ror #18
 801383c:	0801b466 	stmdaeq	r1, {r1, r2, r5, r6, sl, ip, sp, pc}
 8013840:	080135f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sl, ip, sp}
 8013844:	0801b485 	stmdaeq	r1, {r0, r2, r7, sl, ip, sp, pc}

08013848 <Network::SetIp(unsigned long)>:
 8013848:	b510      	push	{r4, lr}
 801384a:	4b0d      	ldr	r3, [pc, #52]	@ (8013880 <Network::SetIp(unsigned long)+0x38>)
 801384c:	681b      	ldr	r3, [r3, #0]
 801384e:	428b      	cmp	r3, r1
 8013850:	b086      	sub	sp, #24
 8013852:	460c      	mov	r4, r1
 8013854:	d012      	beq.n	801387c <Network::SetIp(unsigned long)+0x34>
 8013856:	4608      	mov	r0, r1
 8013858:	f000 fd02 	bl	8014260 <net::net_set_primary_ip(net::ip_addr)>
 801385c:	9405      	str	r4, [sp, #20]
 801385e:	2302      	movs	r3, #2
 8013860:	2400      	movs	r4, #0
 8013862:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013866:	2204      	movs	r2, #4
 8013868:	4806      	ldr	r0, [pc, #24]	@ (8013884 <Network::SetIp(unsigned long)+0x3c>)
 801386a:	9200      	str	r2, [sp, #0]
 801386c:	6800      	ldr	r0, [r0, #0]
 801386e:	ab05      	add	r3, sp, #20
 8013870:	4621      	mov	r1, r4
 8013872:	f002 fdad 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8013876:	4620      	mov	r0, r4
 8013878:	f7ff fea6 	bl	80135c8 <NetworkStore::SaveDhcp(bool)>
 801387c:	b006      	add	sp, #24
 801387e:	bd10      	pop	{r4, pc}
 8013880:	20002954 	andcs	r2, r0, r4, asr r9
 8013884:	20002a00 	andcs	r2, r0, r0, lsl #20

08013888 <Network::SetNetmask(unsigned long)>:
 8013888:	b510      	push	{r4, lr}
 801388a:	4b0b      	ldr	r3, [pc, #44]	@ (80138b8 <Network::SetNetmask(unsigned long)+0x30>)
 801388c:	685b      	ldr	r3, [r3, #4]
 801388e:	428b      	cmp	r3, r1
 8013890:	b086      	sub	sp, #24
 8013892:	460c      	mov	r4, r1
 8013894:	d00e      	beq.n	80138b4 <Network::SetNetmask(unsigned long)+0x2c>
 8013896:	4608      	mov	r0, r1
 8013898:	f000 fd9c 	bl	80143d4 <net::netif_set_netmask(net::ip_addr)>
 801389c:	2304      	movs	r3, #4
 801389e:	2100      	movs	r1, #0
 80138a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80138a4:	4805      	ldr	r0, [pc, #20]	@ (80138bc <Network::SetNetmask(unsigned long)+0x34>)
 80138a6:	9300      	str	r3, [sp, #0]
 80138a8:	6800      	ldr	r0, [r0, #0]
 80138aa:	9405      	str	r4, [sp, #20]
 80138ac:	ab05      	add	r3, sp, #20
 80138ae:	2208      	movs	r2, #8
 80138b0:	f002 fd8e 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80138b4:	b006      	add	sp, #24
 80138b6:	bd10      	pop	{r4, pc}
 80138b8:	20002954 	andcs	r2, r0, r4, asr r9
 80138bc:	20002a00 	andcs	r2, r0, r0, lsl #20

080138c0 <Network::SetGatewayIp(unsigned long)>:
 80138c0:	b510      	push	{r4, lr}
 80138c2:	4b0c      	ldr	r3, [pc, #48]	@ (80138f4 <Network::SetGatewayIp(unsigned long)+0x34>)
 80138c4:	689b      	ldr	r3, [r3, #8]
 80138c6:	428b      	cmp	r3, r1
 80138c8:	b086      	sub	sp, #24
 80138ca:	460c      	mov	r4, r1
 80138cc:	d00f      	beq.n	80138ee <Network::SetGatewayIp(unsigned long)+0x2e>
 80138ce:	4608      	mov	r0, r1
 80138d0:	f000 fd94 	bl	80143fc <net::netif_set_gw(net::ip_addr)>
 80138d4:	2308      	movs	r3, #8
 80138d6:	2100      	movs	r1, #0
 80138d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80138dc:	4806      	ldr	r0, [pc, #24]	@ (80138f8 <Network::SetGatewayIp(unsigned long)+0x38>)
 80138de:	9405      	str	r4, [sp, #20]
 80138e0:	2304      	movs	r3, #4
 80138e2:	9300      	str	r3, [sp, #0]
 80138e4:	6800      	ldr	r0, [r0, #0]
 80138e6:	ab05      	add	r3, sp, #20
 80138e8:	220c      	movs	r2, #12
 80138ea:	f002 fd71 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80138ee:	b006      	add	sp, #24
 80138f0:	bd10      	pop	{r4, pc}
 80138f2:	bf00      	nop
 80138f4:	20002954 	andcs	r2, r0, r4, asr r9
 80138f8:	20002a00 	andcs	r2, r0, r0, lsl #20

080138fc <Network::EnableDhcp()>:
 80138fc:	b508      	push	{r3, lr}
 80138fe:	f000 fa09 	bl	8013d14 <net::dhcp_start()>
 8013902:	2001      	movs	r0, #1
 8013904:	f7ff fe60 	bl	80135c8 <NetworkStore::SaveDhcp(bool)>
 8013908:	bd08      	pop	{r3, pc}
	...

0801390c <net::autoip_stop()>:
 801390c:	4b07      	ldr	r3, [pc, #28]	@ (801392c <net::autoip_stop()+0x20>)
 801390e:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 8013910:	b151      	cbz	r1, 8013928 <net::autoip_stop()+0x1c>
 8013912:	2200      	movs	r2, #0
 8013914:	604a      	str	r2, [r1, #4]
 8013916:	8819      	ldrh	r1, [r3, #0]
 8013918:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 801391c:	4299      	cmp	r1, r3
 801391e:	d103      	bne.n	8013928 <net::autoip_stop()+0x1c>
 8013920:	4611      	mov	r1, r2
 8013922:	4610      	mov	r0, r2
 8013924:	f000 bd7e 	b.w	8014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8013928:	4770      	bx	lr
 801392a:	bf00      	nop
 801392c:	20002954 	andcs	r2, r0, r4, asr r9

08013930 <net::dhcp_bind()>:
 8013930:	4833      	ldr	r0, [pc, #204]	@ (8013a00 <net::dhcp_bind()+0xd0>)
 8013932:	6a03      	ldr	r3, [r0, #32]
 8013934:	2200      	movs	r2, #0
 8013936:	b410      	push	{r4}
 8013938:	82da      	strh	r2, [r3, #22]
 801393a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801393c:	1c51      	adds	r1, r2, #1
 801393e:	d009      	beq.n	8013954 <net::dhcp_bind()+0x24>
 8013940:	321e      	adds	r2, #30
 8013942:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8013946:	d23f      	bcs.n	80139c8 <net::dhcp_bind()+0x98>
 8013948:	2a3b      	cmp	r2, #59	@ 0x3b
 801394a:	d940      	bls.n	80139ce <net::dhcp_bind()+0x9e>
 801394c:	213c      	movs	r1, #60	@ 0x3c
 801394e:	fbb2 f2f1 	udiv	r2, r2, r1
 8013952:	831a      	strh	r2, [r3, #24]
 8013954:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013956:	1c54      	adds	r4, r2, #1
 8013958:	d00b      	beq.n	8013972 <net::dhcp_bind()+0x42>
 801395a:	321e      	adds	r2, #30
 801395c:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 8013960:	d237      	bcs.n	80139d2 <net::dhcp_bind()+0xa2>
 8013962:	2a3b      	cmp	r2, #59	@ 0x3b
 8013964:	d938      	bls.n	80139d8 <net::dhcp_bind()+0xa8>
 8013966:	213c      	movs	r1, #60	@ 0x3c
 8013968:	fbb2 f2f1 	udiv	r2, r2, r1
 801396c:	b292      	uxth	r2, r2
 801396e:	81da      	strh	r2, [r3, #14]
 8013970:	825a      	strh	r2, [r3, #18]
 8013972:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8013974:	1c51      	adds	r1, r2, #1
 8013976:	d00b      	beq.n	8013990 <net::dhcp_bind()+0x60>
 8013978:	321e      	adds	r2, #30
 801397a:	f5b2 1f70 	cmp.w	r2, #3932160	@ 0x3c0000
 801397e:	d22d      	bcs.n	80139dc <net::dhcp_bind()+0xac>
 8013980:	2a3b      	cmp	r2, #59	@ 0x3b
 8013982:	d92e      	bls.n	80139e2 <net::dhcp_bind()+0xb2>
 8013984:	213c      	movs	r1, #60	@ 0x3c
 8013986:	fbb2 f2f1 	udiv	r2, r2, r1
 801398a:	b292      	uxth	r2, r2
 801398c:	821a      	strh	r2, [r3, #16]
 801398e:	829a      	strh	r2, [r3, #20]
 8013990:	8a1a      	ldrh	r2, [r3, #16]
 8013992:	89d9      	ldrh	r1, [r3, #14]
 8013994:	4291      	cmp	r1, r2
 8013996:	d302      	bcc.n	801399e <net::dhcp_bind()+0x6e>
 8013998:	b10a      	cbz	r2, 801399e <net::dhcp_bind()+0x6e>
 801399a:	2200      	movs	r2, #0
 801399c:	81da      	strh	r2, [r3, #14]
 801399e:	7a9a      	ldrb	r2, [r3, #10]
 80139a0:	07d4      	lsls	r4, r2, #31
 80139a2:	d520      	bpl.n	80139e6 <net::dhcp_bind()+0xb6>
 80139a4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80139a6:	7a1c      	ldrb	r4, [r3, #8]
 80139a8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80139aa:	2c0a      	cmp	r4, #10
 80139ac:	bf1f      	itttt	ne
 80139ae:	240a      	movne	r4, #10
 80139b0:	811c      	strhne	r4, [r3, #8]
 80139b2:	2400      	movne	r4, #0
 80139b4:	819c      	strhne	r4, [r3, #12]
 80139b6:	7e84      	ldrb	r4, [r0, #26]
 80139b8:	f044 0402 	orr.w	r4, r4, #2
 80139bc:	7684      	strb	r4, [r0, #26]
 80139be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80139c2:	6a18      	ldr	r0, [r3, #32]
 80139c4:	f000 bd2e 	b.w	8014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 80139c8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80139cc:	e7c1      	b.n	8013952 <net::dhcp_bind()+0x22>
 80139ce:	2201      	movs	r2, #1
 80139d0:	e7bf      	b.n	8013952 <net::dhcp_bind()+0x22>
 80139d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80139d6:	e7c9      	b.n	801396c <net::dhcp_bind()+0x3c>
 80139d8:	2201      	movs	r2, #1
 80139da:	e7c7      	b.n	801396c <net::dhcp_bind()+0x3c>
 80139dc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80139e0:	e7d3      	b.n	801398a <net::dhcp_bind()+0x5a>
 80139e2:	2201      	movs	r2, #1
 80139e4:	e7d1      	b.n	801398a <net::dhcp_bind()+0x5a>
 80139e6:	6a1a      	ldr	r2, [r3, #32]
 80139e8:	0611      	lsls	r1, r2, #24
 80139ea:	d507      	bpl.n	80139fc <net::dhcp_bind()+0xcc>
 80139ec:	b2d2      	uxtb	r2, r2
 80139ee:	2abf      	cmp	r2, #191	@ 0xbf
 80139f0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80139f4:	bf88      	it	hi
 80139f6:	f06f 417f 	mvnhi.w	r1, #4278190080	@ 0xff000000
 80139fa:	e7d4      	b.n	80139a6 <net::dhcp_bind()+0x76>
 80139fc:	21ff      	movs	r1, #255	@ 0xff
 80139fe:	e7d2      	b.n	80139a6 <net::dhcp_bind()+0x76>
 8013a00:	20002954 	andcs	r2, r0, r4, asr r9

08013a04 <net::message_init()>:
 8013a04:	b508      	push	{r3, lr}
 8013a06:	4b0c      	ldr	r3, [pc, #48]	@ (8013a38 <net::message_init()+0x34>)
 8013a08:	f44f 7209 	mov.w	r2, #548	@ 0x224
 8013a0c:	2100      	movs	r1, #0
 8013a0e:	4618      	mov	r0, r3
 8013a10:	f006 f87e 	bl	8019b10 <memset>
 8013a14:	f240 1201 	movw	r2, #257	@ 0x101
 8013a18:	8002      	strh	r2, [r0, #0]
 8013a1a:	2206      	movs	r2, #6
 8013a1c:	7082      	strb	r2, [r0, #2]
 8013a1e:	4a07      	ldr	r2, [pc, #28]	@ (8013a3c <net::message_init()+0x38>)
 8013a20:	6951      	ldr	r1, [r2, #20]
 8013a22:	8b12      	ldrh	r2, [r2, #24]
 8013a24:	8402      	strh	r2, [r0, #32]
 8013a26:	4a06      	ldr	r2, [pc, #24]	@ (8013a40 <net::message_init()+0x3c>)
 8013a28:	f8c0 20ec 	str.w	r2, [r0, #236]	@ 0xec
 8013a2c:	f240 1235 	movw	r2, #309	@ 0x135
 8013a30:	f8a0 20f0 	strh.w	r2, [r0, #240]	@ 0xf0
 8013a34:	61c1      	str	r1, [r0, #28]
 8013a36:	bd08      	pop	{r3, pc}
 8013a38:	10008000 	andne	r8, r0, r0
 8013a3c:	20002954 	andcs	r2, r0, r4, asr r9
 8013a40:	63538263 	cmpvs	r3, #805306374	@ 0x30000006

08013a44 <net::dhcp_discover()>:
 8013a44:	4a27      	ldr	r2, [pc, #156]	@ (8013ae4 <net::dhcp_discover()+0xa0>)
 8013a46:	b513      	push	{r0, r1, r4, lr}
 8013a48:	6a14      	ldr	r4, [r2, #32]
 8013a4a:	7a21      	ldrb	r1, [r4, #8]
 8013a4c:	2906      	cmp	r1, #6
 8013a4e:	bf1c      	itt	ne
 8013a50:	2106      	movne	r1, #6
 8013a52:	8121      	strhne	r1, [r4, #8]
 8013a54:	f04f 0300 	mov.w	r3, #0
 8013a58:	6a10      	ldr	r0, [r2, #32]
 8013a5a:	6223      	str	r3, [r4, #32]
 8013a5c:	bf18      	it	ne
 8013a5e:	81a3      	strhne	r3, [r4, #12]
 8013a60:	7a43      	ldrb	r3, [r0, #9]
 8013a62:	b923      	cbnz	r3, 8013a6e <net::dhcp_discover()+0x2a>
 8013a64:	6843      	ldr	r3, [r0, #4]
 8013a66:	ba1b      	rev	r3, r3
 8013a68:	3301      	adds	r3, #1
 8013a6a:	ba1b      	rev	r3, r3
 8013a6c:	6043      	str	r3, [r0, #4]
 8013a6e:	491e      	ldr	r1, [pc, #120]	@ (8013ae8 <net::dhcp_discover()+0xa4>)
 8013a70:	6843      	ldr	r3, [r0, #4]
 8013a72:	604b      	str	r3, [r1, #4]
 8013a74:	f643 5301 	movw	r3, #15617	@ 0x3d01
 8013a78:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8013a7c:	f240 1307 	movw	r3, #263	@ 0x107
 8013a80:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8013a84:	8a93      	ldrh	r3, [r2, #20]
 8013a86:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8013a8a:	8ad3      	ldrh	r3, [r2, #22]
 8013a8c:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8013a90:	8b13      	ldrh	r3, [r2, #24]
 8013a92:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8013a96:	4a15      	ldr	r2, [pc, #84]	@ (8013aec <net::dhcp_discover()+0xa8>)
 8013a98:	4b15      	ldr	r3, [pc, #84]	@ (8013af0 <net::dhcp_discover()+0xac>)
 8013a9a:	e9c1 233f 	strd	r2, r3, [r1, #252]	@ 0xfc
 8013a9e:	23ff      	movs	r3, #255	@ 0xff
 8013aa0:	f881 3104 	strb.w	r3, [r1, #260]	@ 0x104
 8013aa4:	2343      	movs	r3, #67	@ 0x43
 8013aa6:	9300      	str	r3, [sp, #0]
 8013aa8:	6800      	ldr	r0, [r0, #0]
 8013aaa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8013aae:	f240 1205 	movw	r2, #261	@ 0x105
 8013ab2:	f000 ffa7 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8013ab6:	7a63      	ldrb	r3, [r4, #9]
 8013ab8:	2bff      	cmp	r3, #255	@ 0xff
 8013aba:	bf1c      	itt	ne
 8013abc:	3301      	addne	r3, #1
 8013abe:	7263      	strbne	r3, [r4, #9]
 8013ac0:	7a62      	ldrb	r2, [r4, #9]
 8013ac2:	2a05      	cmp	r2, #5
 8013ac4:	bf9a      	itte	ls
 8013ac6:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8013aca:	4093      	lslls	r3, r2
 8013acc:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8013ad0:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8013ad4:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8013ad8:	fbb3 f3f2 	udiv	r3, r3, r2
 8013adc:	81a3      	strh	r3, [r4, #12]
 8013ade:	b002      	add	sp, #8
 8013ae0:	bd10      	pop	{r4, pc}
 8013ae2:	bf00      	nop
 8013ae4:	20002954 	andcs	r2, r0, r4, asr r9
 8013ae8:	10008000 	andne	r8, r0, r0
 8013aec:	03010637 	movweq	r0, #5687	@ 0x1637
 8013af0:	3b3a330f 	blcc	8ea0734 <_sidata+0xe8156c>

08013af4 <net::memcpy_ip(unsigned char*, unsigned long)>:
 8013af4:	6001      	str	r1, [r0, #0]
 8013af6:	4770      	bx	lr

08013af8 <net::send_request()>:
 8013af8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013afa:	4c31      	ldr	r4, [pc, #196]	@ (8013bc0 <net::send_request()+0xc8>)
 8013afc:	4d31      	ldr	r5, [pc, #196]	@ (8013bc4 <net::send_request()+0xcc>)
 8013afe:	f643 5303 	movw	r3, #15619	@ 0x3d03
 8013b02:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8013b06:	f240 1307 	movw	r3, #263	@ 0x107
 8013b0a:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 8013b0e:	8aab      	ldrh	r3, [r5, #20]
 8013b10:	f8a4 30f6 	strh.w	r3, [r4, #246]	@ 0xf6
 8013b14:	8aeb      	ldrh	r3, [r5, #22]
 8013b16:	f8a4 30f8 	strh.w	r3, [r4, #248]	@ 0xf8
 8013b1a:	8b2b      	ldrh	r3, [r5, #24]
 8013b1c:	6a2e      	ldr	r6, [r5, #32]
 8013b1e:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
 8013b22:	f240 4332 	movw	r3, #1074	@ 0x432
 8013b26:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
 8013b2a:	6a31      	ldr	r1, [r6, #32]
 8013b2c:	f104 00fe 	add.w	r0, r4, #254	@ 0xfe
 8013b30:	f7ff ffe0 	bl	8013af4 <net::memcpy_ip(unsigned char*, unsigned long)>
 8013b34:	f240 4336 	movw	r3, #1078	@ 0x436
 8013b38:	f8a4 3102 	strh.w	r3, [r4, #258]	@ 0x102
 8013b3c:	69f1      	ldr	r1, [r6, #28]
 8013b3e:	f504 7082 	add.w	r0, r4, #260	@ 0x104
 8013b42:	f7ff ffd7 	bl	8013af4 <net::memcpy_ip(unsigned char*, unsigned long)>
 8013b46:	230c      	movs	r3, #12
 8013b48:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
 8013b4c:	69eb      	ldr	r3, [r5, #28]
 8013b4e:	221e      	movs	r2, #30
 8013b50:	3b01      	subs	r3, #1
 8013b52:	f204 1509 	addw	r5, r4, #265	@ 0x109
 8013b56:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013b5a:	1c51      	adds	r1, r2, #1
 8013b5c:	bb58      	cbnz	r0, 8013bb6 <net::send_request()+0xbe>
 8013b5e:	f1a2 031e 	sub.w	r3, r2, #30
 8013b62:	f884 3109 	strb.w	r3, [r4, #265]	@ 0x109
 8013b66:	18a3      	adds	r3, r4, r2
 8013b68:	440c      	add	r4, r1
 8013b6a:	2037      	movs	r0, #55	@ 0x37
 8013b6c:	2106      	movs	r1, #6
 8013b6e:	f883 00ec 	strb.w	r0, [r3, #236]	@ 0xec
 8013b72:	f884 10ec 	strb.w	r1, [r4, #236]	@ 0xec
 8013b76:	f883 10f0 	strb.w	r1, [r3, #240]	@ 0xf0
 8013b7a:	210f      	movs	r1, #15
 8013b7c:	f883 10f1 	strb.w	r1, [r3, #241]	@ 0xf1
 8013b80:	213a      	movs	r1, #58	@ 0x3a
 8013b82:	f883 10f2 	strb.w	r1, [r3, #242]	@ 0xf2
 8013b86:	2001      	movs	r0, #1
 8013b88:	213b      	movs	r1, #59	@ 0x3b
 8013b8a:	f883 00ee 	strb.w	r0, [r3, #238]	@ 0xee
 8013b8e:	f883 10f3 	strb.w	r1, [r3, #243]	@ 0xf3
 8013b92:	2003      	movs	r0, #3
 8013b94:	21ff      	movs	r1, #255	@ 0xff
 8013b96:	f883 10f4 	strb.w	r1, [r3, #244]	@ 0xf4
 8013b9a:	f883 00ef 	strb.w	r0, [r3, #239]	@ 0xef
 8013b9e:	2343      	movs	r3, #67	@ 0x43
 8013ba0:	9300      	str	r3, [sp, #0]
 8013ba2:	32f5      	adds	r2, #245	@ 0xf5
 8013ba4:	4906      	ldr	r1, [pc, #24]	@ (8013bc0 <net::send_request()+0xc8>)
 8013ba6:	6830      	ldr	r0, [r6, #0]
 8013ba8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8013bac:	b292      	uxth	r2, r2
 8013bae:	f000 ff29 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8013bb2:	b002      	add	sp, #8
 8013bb4:	bd70      	pop	{r4, r5, r6, pc}
 8013bb6:	f805 0f01 	strb.w	r0, [r5, #1]!
 8013bba:	460a      	mov	r2, r1
 8013bbc:	e7cb      	b.n	8013b56 <net::send_request()+0x5e>
 8013bbe:	bf00      	nop
 8013bc0:	10008000 	andne	r8, r0, r0
 8013bc4:	20002954 	andcs	r2, r0, r4, asr r9

08013bc8 <net::dhcp_select()>:
 8013bc8:	4b11      	ldr	r3, [pc, #68]	@ (8013c10 <net::dhcp_select()+0x48>)
 8013bca:	b510      	push	{r4, lr}
 8013bcc:	6a1c      	ldr	r4, [r3, #32]
 8013bce:	7a23      	ldrb	r3, [r4, #8]
 8013bd0:	2b01      	cmp	r3, #1
 8013bd2:	bf1f      	itttt	ne
 8013bd4:	2301      	movne	r3, #1
 8013bd6:	8123      	strhne	r3, [r4, #8]
 8013bd8:	2300      	movne	r3, #0
 8013bda:	81a3      	strhne	r3, [r4, #12]
 8013bdc:	f7ff ff8c 	bl	8013af8 <net::send_request()>
 8013be0:	7a63      	ldrb	r3, [r4, #9]
 8013be2:	2bff      	cmp	r3, #255	@ 0xff
 8013be4:	bf1c      	itt	ne
 8013be6:	3301      	addne	r3, #1
 8013be8:	7263      	strbne	r3, [r4, #9]
 8013bea:	7a62      	ldrb	r2, [r4, #9]
 8013bec:	2a05      	cmp	r2, #5
 8013bee:	bf9d      	ittte	ls
 8013bf0:	f44f 737a 	movls.w	r3, #1000	@ 0x3e8
 8013bf4:	4093      	lslls	r3, r2
 8013bf6:	b29b      	uxthls	r3, r3
 8013bf8:	f64e 2360 	movwhi	r3, #60000	@ 0xea60
 8013bfc:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8013c00:	b29b      	uxth	r3, r3
 8013c02:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8013c06:	fbb3 f3f2 	udiv	r3, r3, r2
 8013c0a:	81a3      	strh	r3, [r4, #12]
 8013c0c:	bd10      	pop	{r4, pc}
 8013c0e:	bf00      	nop
 8013c10:	20002954 	andcs	r2, r0, r4, asr r9

08013c14 <net::dhcp_reboot()>:
 8013c14:	4b12      	ldr	r3, [pc, #72]	@ (8013c60 <net::dhcp_reboot()+0x4c>)
 8013c16:	b510      	push	{r4, lr}
 8013c18:	6a1c      	ldr	r4, [r3, #32]
 8013c1a:	7a23      	ldrb	r3, [r4, #8]
 8013c1c:	2b03      	cmp	r3, #3
 8013c1e:	bf1f      	itttt	ne
 8013c20:	2303      	movne	r3, #3
 8013c22:	8123      	strhne	r3, [r4, #8]
 8013c24:	2300      	movne	r3, #0
 8013c26:	81a3      	strhne	r3, [r4, #12]
 8013c28:	f7ff ff66 	bl	8013af8 <net::send_request()>
 8013c2c:	7a63      	ldrb	r3, [r4, #9]
 8013c2e:	2bff      	cmp	r3, #255	@ 0xff
 8013c30:	bf1c      	itt	ne
 8013c32:	3301      	addne	r3, #1
 8013c34:	7263      	strbne	r3, [r4, #9]
 8013c36:	7a63      	ldrb	r3, [r4, #9]
 8013c38:	2b09      	cmp	r3, #9
 8013c3a:	bf9f      	itttt	ls
 8013c3c:	ebc3 1243 	rsbls	r2, r3, r3, lsl #5
 8013c40:	eb03 0382 	addls.w	r3, r3, r2, lsl #2
 8013c44:	00db      	lslls	r3, r3, #3
 8013c46:	b29b      	uxthls	r3, r3
 8013c48:	bf88      	it	hi
 8013c4a:	f242 7310 	movwhi	r3, #10000	@ 0x2710
 8013c4e:	f203 13f3 	addw	r3, r3, #499	@ 0x1f3
 8013c52:	b29b      	uxth	r3, r3
 8013c54:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8013c58:	fbb3 f3f2 	udiv	r3, r3, r2
 8013c5c:	81a3      	strh	r3, [r4, #12]
 8013c5e:	bd10      	pop	{r4, pc}
 8013c60:	20002954 	andcs	r2, r0, r4, asr r9

08013c64 <net::memcpy_ip(unsigned char const*)>:
 8013c64:	6800      	ldr	r0, [r0, #0]
 8013c66:	4770      	bx	lr

08013c68 <net::dhcp_handle_ack(net::dhcp::Message const*)>:
 8013c68:	4b0e      	ldr	r3, [pc, #56]	@ (8013ca4 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x3c>)
 8013c6a:	b510      	push	{r4, lr}
 8013c6c:	6a1c      	ldr	r4, [r3, #32]
 8013c6e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013c70:	b913      	cbnz	r3, 8013c78 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x10>
 8013c72:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013c74:	085b      	lsrs	r3, r3, #1
 8013c76:	6323      	str	r3, [r4, #48]	@ 0x30
 8013c78:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8013c7a:	b923      	cbnz	r3, 8013c86 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x1e>
 8013c7c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013c7e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8013c82:	08db      	lsrs	r3, r3, #3
 8013c84:	6363      	str	r3, [r4, #52]	@ 0x34
 8013c86:	3010      	adds	r0, #16
 8013c88:	f7ff ffec 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013c8c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8013c8e:	7aa3      	ldrb	r3, [r4, #10]
 8013c90:	6220      	str	r0, [r4, #32]
 8013c92:	b11a      	cbz	r2, 8013c9c <net::dhcp_handle_ack(net::dhcp::Message const*)+0x34>
 8013c94:	f043 0301 	orr.w	r3, r3, #1
 8013c98:	72a3      	strb	r3, [r4, #10]
 8013c9a:	bd10      	pop	{r4, pc}
 8013c9c:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8013ca0:	e7fa      	b.n	8013c98 <net::dhcp_handle_ack(net::dhcp::Message const*)+0x30>
 8013ca2:	bf00      	nop
 8013ca4:	20002954 	andcs	r2, r0, r4, asr r9

08013ca8 <net::dhcp_inform()>:
 8013ca8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013caa:	2044      	movs	r0, #68	@ 0x44
 8013cac:	f000 fe52 	bl	8014954 <net::udp_begin(unsigned short)>
 8013cb0:	4c16      	ldr	r4, [pc, #88]	@ (8013d0c <net::dhcp_inform()+0x64>)
 8013cb2:	4d17      	ldr	r5, [pc, #92]	@ (8013d10 <net::dhcp_inform()+0x68>)
 8013cb4:	4606      	mov	r6, r0
 8013cb6:	f7ff fea5 	bl	8013a04 <net::message_init()>
 8013cba:	6829      	ldr	r1, [r5, #0]
 8013cbc:	4620      	mov	r0, r4
 8013cbe:	f7ff ff19 	bl	8013af4 <net::memcpy_ip(unsigned char*, unsigned long)>
 8013cc2:	f1a4 010c 	sub.w	r1, r4, #12
 8013cc6:	f643 5308 	movw	r3, #15624	@ 0x3d08
 8013cca:	f8a1 30f2 	strh.w	r3, [r1, #242]	@ 0xf2
 8013cce:	f240 1307 	movw	r3, #263	@ 0x107
 8013cd2:	f8a1 30f4 	strh.w	r3, [r1, #244]	@ 0xf4
 8013cd6:	8aab      	ldrh	r3, [r5, #20]
 8013cd8:	f8a1 30f6 	strh.w	r3, [r1, #246]	@ 0xf6
 8013cdc:	8aeb      	ldrh	r3, [r5, #22]
 8013cde:	f8a1 30f8 	strh.w	r3, [r1, #248]	@ 0xf8
 8013ce2:	8b2b      	ldrh	r3, [r5, #24]
 8013ce4:	f8a1 30fa 	strh.w	r3, [r1, #250]	@ 0xfa
 8013ce8:	23ff      	movs	r3, #255	@ 0xff
 8013cea:	f881 30fc 	strb.w	r3, [r1, #252]	@ 0xfc
 8013cee:	2343      	movs	r3, #67	@ 0x43
 8013cf0:	9300      	str	r3, [sp, #0]
 8013cf2:	4630      	mov	r0, r6
 8013cf4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8013cf8:	22fd      	movs	r2, #253	@ 0xfd
 8013cfa:	f000 fe83 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8013cfe:	2044      	movs	r0, #68	@ 0x44
 8013d00:	b002      	add	sp, #8
 8013d02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d06:	f000 be3b 	b.w	8014980 <net::udp_end(unsigned short)>
 8013d0a:	bf00      	nop
 8013d0c:	1000800c 	andne	r8, r0, ip
 8013d10:	20002954 	andcs	r2, r0, r4, asr r9

08013d14 <net::dhcp_start()>:
 8013d14:	b570      	push	{r4, r5, r6, lr}
 8013d16:	4d20      	ldr	r5, [pc, #128]	@ (8013d98 <net::dhcp_start()+0x84>)
 8013d18:	6a2c      	ldr	r4, [r5, #32]
 8013d1a:	b96c      	cbnz	r4, 8013d38 <net::dhcp_start()+0x24>
 8013d1c:	2048      	movs	r0, #72	@ 0x48
 8013d1e:	f006 fc31 	bl	801a584 <operator new(unsigned int)>
 8013d22:	4b1e      	ldr	r3, [pc, #120]	@ (8013d9c <net::dhcp_start()+0x88>)
 8013d24:	6228      	str	r0, [r5, #32]
 8013d26:	681b      	ldr	r3, [r3, #0]
 8013d28:	f8d3 10a0 	ldr.w	r1, [r3, #160]	@ 0xa0
 8013d2c:	2907      	cmp	r1, #7
 8013d2e:	4604      	mov	r4, r0
 8013d30:	d919      	bls.n	8013d66 <net::dhcp_start()+0x52>
 8013d32:	481b      	ldr	r0, [pc, #108]	@ (8013da0 <net::dhcp_start()+0x8c>)
 8013d34:	f003 ff2c 	bl	8017b90 <console_error>
 8013d38:	2248      	movs	r2, #72	@ 0x48
 8013d3a:	2100      	movs	r1, #0
 8013d3c:	4620      	mov	r0, r4
 8013d3e:	f005 fee7 	bl	8019b10 <memset>
 8013d42:	2044      	movs	r0, #68	@ 0x44
 8013d44:	f000 fe06 	bl	8014954 <net::udp_begin(unsigned short)>
 8013d48:	6020      	str	r0, [r4, #0]
 8013d4a:	f7ff fe5b 	bl	8013a04 <net::message_init()>
 8013d4e:	7ead      	ldrb	r5, [r5, #26]
 8013d50:	f015 0501 	ands.w	r5, r5, #1
 8013d54:	d11d      	bne.n	8013d92 <net::dhcp_start()+0x7e>
 8013d56:	7a23      	ldrb	r3, [r4, #8]
 8013d58:	2b02      	cmp	r3, #2
 8013d5a:	d002      	beq.n	8013d62 <net::dhcp_start()+0x4e>
 8013d5c:	2302      	movs	r3, #2
 8013d5e:	8123      	strh	r3, [r4, #8]
 8013d60:	81a5      	strh	r5, [r4, #12]
 8013d62:	4628      	mov	r0, r5
 8013d64:	bd70      	pop	{r4, r5, r6, pc}
 8013d66:	f8d3 00a4 	ldr.w	r0, [r3, #164]	@ 0xa4
 8013d6a:	4a0e      	ldr	r2, [pc, #56]	@ (8013da4 <net::dhcp_start()+0x90>)
 8013d6c:	1c46      	adds	r6, r0, #1
 8013d6e:	f8c3 60a4 	str.w	r6, [r3, #164]	@ 0xa4
 8013d72:	6812      	ldr	r2, [r2, #0]
 8013d74:	1c4e      	adds	r6, r1, #1
 8013d76:	f8c3 60a0 	str.w	r6, [r3, #160]	@ 0xa0
 8013d7a:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8013d7e:	f502 72fa 	add.w	r2, r2, #500	@ 0x1f4
 8013d82:	621a      	str	r2, [r3, #32]
 8013d84:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8013d88:	e9c3 2009 	strd	r2, r0, [r3, #36]	@ 0x24
 8013d8c:	4a06      	ldr	r2, [pc, #24]	@ (8013da8 <net::dhcp_start()+0x94>)
 8013d8e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8013d90:	e7d2      	b.n	8013d38 <net::dhcp_start()+0x24>
 8013d92:	f7ff fe57 	bl	8013a44 <net::dhcp_discover()>
 8013d96:	e7e4      	b.n	8013d62 <net::dhcp_start()+0x4e>
 8013d98:	20002954 	andcs	r2, r0, r4, asr r9
 8013d9c:	20002b04 	andcs	r2, r0, r4, lsl #22
 8013da0:	0801b491 	stmdaeq	r1, {r0, r4, r7, sl, ip, sp, pc}
 8013da4:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8013da8:	08013e51 	stmdaeq	r1, {r0, r4, r6, r9, sl, fp, ip, sp}

08013dac <net::dhcp_release_and_stop()>:
 8013dac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8013db0:	4d25      	ldr	r5, [pc, #148]	@ (8013e48 <net::dhcp_release_and_stop()+0x9c>)
 8013db2:	6a2c      	ldr	r4, [r5, #32]
 8013db4:	2c00      	cmp	r4, #0
 8013db6:	d044      	beq.n	8013e42 <net::dhcp_release_and_stop()+0x96>
 8013db8:	7a23      	ldrb	r3, [r4, #8]
 8013dba:	2b00      	cmp	r3, #0
 8013dbc:	d041      	beq.n	8013e42 <net::dhcp_release_and_stop()+0x96>
 8013dbe:	2600      	movs	r6, #0
 8013dc0:	69e7      	ldr	r7, [r4, #28]
 8013dc2:	61e6      	str	r6, [r4, #28]
 8013dc4:	2218      	movs	r2, #24
 8013dc6:	4631      	mov	r1, r6
 8013dc8:	f104 0020 	add.w	r0, r4, #32
 8013dcc:	f005 fea0 	bl	8019b10 <memset>
 8013dd0:	6a2b      	ldr	r3, [r5, #32]
 8013dd2:	8266      	strh	r6, [r4, #18]
 8013dd4:	6166      	str	r6, [r4, #20]
 8013dd6:	8326      	strh	r6, [r4, #24]
 8013dd8:	b363      	cbz	r3, 8013e34 <net::dhcp_release_and_stop()+0x88>
 8013dda:	7a1b      	ldrb	r3, [r3, #8]
 8013ddc:	2b0a      	cmp	r3, #10
 8013dde:	d002      	beq.n	8013de6 <net::dhcp_release_and_stop()+0x3a>
 8013de0:	3b04      	subs	r3, #4
 8013de2:	2b01      	cmp	r3, #1
 8013de4:	d826      	bhi.n	8013e34 <net::dhcp_release_and_stop()+0x88>
 8013de6:	2600      	movs	r6, #0
 8013de8:	8126      	strh	r6, [r4, #8]
 8013dea:	81a6      	strh	r6, [r4, #12]
 8013dec:	4c17      	ldr	r4, [pc, #92]	@ (8013e4c <net::dhcp_release_and_stop()+0xa0>)
 8013dee:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8013df2:	f243 6307 	movw	r3, #13831	@ 0x3607
 8013df6:	f8a4 30f2 	strh.w	r3, [r4, #242]	@ 0xf2
 8013dfa:	2304      	movs	r3, #4
 8013dfc:	f884 30f4 	strb.w	r3, [r4, #244]	@ 0xf4
 8013e00:	f8d8 101c 	ldr.w	r1, [r8, #28]
 8013e04:	f104 00f5 	add.w	r0, r4, #245	@ 0xf5
 8013e08:	f7ff fe74 	bl	8013af4 <net::memcpy_ip(unsigned char*, unsigned long)>
 8013e0c:	23ff      	movs	r3, #255	@ 0xff
 8013e0e:	f884 30f9 	strb.w	r3, [r4, #249]	@ 0xf9
 8013e12:	2343      	movs	r3, #67	@ 0x43
 8013e14:	9300      	str	r3, [sp, #0]
 8013e16:	22fa      	movs	r2, #250	@ 0xfa
 8013e18:	4621      	mov	r1, r4
 8013e1a:	f8d8 0000 	ldr.w	r0, [r8]
 8013e1e:	463b      	mov	r3, r7
 8013e20:	f000 fdf0 	bl	8014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>
 8013e24:	2044      	movs	r0, #68	@ 0x44
 8013e26:	f000 fdab 	bl	8014980 <net::udp_end(unsigned short)>
 8013e2a:	4632      	mov	r2, r6
 8013e2c:	4631      	mov	r1, r6
 8013e2e:	4630      	mov	r0, r6
 8013e30:	f000 faf8 	bl	8014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8013e34:	6a28      	ldr	r0, [r5, #32]
 8013e36:	b110      	cbz	r0, 8013e3e <net::dhcp_release_and_stop()+0x92>
 8013e38:	2148      	movs	r1, #72	@ 0x48
 8013e3a:	f006 fba1 	bl	801a580 <operator delete(void*, unsigned int)>
 8013e3e:	2300      	movs	r3, #0
 8013e40:	622b      	str	r3, [r5, #32]
 8013e42:	b002      	add	sp, #8
 8013e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e48:	20002954 	andcs	r2, r0, r4, asr r9
 8013e4c:	10008000 	andne	r8, r0, r0

08013e50 <net::dhcp_fine_tmr()>:
 8013e50:	b508      	push	{r3, lr}
 8013e52:	4b21      	ldr	r3, [pc, #132]	@ (8013ed8 <net::dhcp_fine_tmr()+0x88>)
 8013e54:	6a1b      	ldr	r3, [r3, #32]
 8013e56:	b123      	cbz	r3, 8013e62 <net::dhcp_fine_tmr()+0x12>
 8013e58:	899a      	ldrh	r2, [r3, #12]
 8013e5a:	2a01      	cmp	r2, #1
 8013e5c:	d902      	bls.n	8013e64 <net::dhcp_fine_tmr()+0x14>
 8013e5e:	3a01      	subs	r2, #1
 8013e60:	819a      	strh	r2, [r3, #12]
 8013e62:	bd08      	pop	{r3, pc}
 8013e64:	d1fd      	bne.n	8013e62 <net::dhcp_fine_tmr()+0x12>
 8013e66:	2200      	movs	r2, #0
 8013e68:	819a      	strh	r2, [r3, #12]
 8013e6a:	7a1a      	ldrb	r2, [r3, #8]
 8013e6c:	3a01      	subs	r2, #1
 8013e6e:	2a0b      	cmp	r2, #11
 8013e70:	d8f7      	bhi.n	8013e62 <net::dhcp_fine_tmr()+0x12>
 8013e72:	a101      	add	r1, pc, #4	@ (adr r1, 8013e78 <net::dhcp_fine_tmr()+0x28>)
 8013e74:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8013e78:	08013ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp, ip, sp}
 8013e7c:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e80:	08013ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, ip, sp}
 8013e84:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e88:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e8c:	08013ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, sp}
 8013e90:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e94:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e98:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013e9c:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013ea0:	08013e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, ip, sp}
 8013ea4:	08013ed1 	stmdaeq	r1, {r0, r4, r6, r7, r9, sl, fp, ip, sp}
 8013ea8:	7a5b      	ldrb	r3, [r3, #9]
 8013eaa:	2b05      	cmp	r3, #5
 8013eac:	d803      	bhi.n	8013eb6 <net::dhcp_fine_tmr()+0x66>
 8013eae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013eb2:	f7ff be89 	b.w	8013bc8 <net::dhcp_select()>
 8013eb6:	f7ff ff79 	bl	8013dac <net::dhcp_release_and_stop()>
 8013eba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013ebe:	f7ff bf29 	b.w	8013d14 <net::dhcp_start()>
 8013ec2:	7a5b      	ldrb	r3, [r3, #9]
 8013ec4:	2b01      	cmp	r3, #1
 8013ec6:	d803      	bhi.n	8013ed0 <net::dhcp_fine_tmr()+0x80>
 8013ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013ecc:	f7ff bea2 	b.w	8013c14 <net::dhcp_reboot()>
 8013ed0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013ed4:	f7ff bdb6 	b.w	8013a44 <net::dhcp_discover()>
 8013ed8:	20002954 	andcs	r2, r0, r4, asr r9

08013edc <net::dhcp_process(net::dhcp::Message const*, unsigned long)>:
 8013edc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013ee0:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 8014034 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x158>
 8013ee4:	f8d8 5020 	ldr.w	r5, [r8, #32]
 8013ee8:	4606      	mov	r6, r0
 8013eea:	4689      	mov	r9, r1
 8013eec:	2218      	movs	r2, #24
 8013eee:	2100      	movs	r1, #0
 8013ef0:	f105 0020 	add.w	r0, r5, #32
 8013ef4:	2700      	movs	r7, #0
 8013ef6:	f106 04f0 	add.w	r4, r6, #240	@ 0xf0
 8013efa:	f005 fe09 	bl	8019b10 <memset>
 8013efe:	44a1      	add	r9, r4
 8013f00:	61ef      	str	r7, [r5, #28]
 8013f02:	454c      	cmp	r4, r9
 8013f04:	d318      	bcc.n	8013f38 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x5c>
 8013f06:	2f02      	cmp	r7, #2
 8013f08:	d167      	bne.n	8013fda <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xfe>
 8013f0a:	3610      	adds	r6, #16
 8013f0c:	4630      	mov	r0, r6
 8013f0e:	f7ff fea9 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013f12:	7a2b      	ldrb	r3, [r5, #8]
 8013f14:	6228      	str	r0, [r5, #32]
 8013f16:	2b06      	cmp	r3, #6
 8013f18:	d170      	bne.n	8013ffc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8013f1a:	f8d8 4020 	ldr.w	r4, [r8, #32]
 8013f1e:	69e3      	ldr	r3, [r4, #28]
 8013f20:	2b00      	cmp	r3, #0
 8013f22:	d06b      	beq.n	8013ffc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8013f24:	2300      	movs	r3, #0
 8013f26:	81a3      	strh	r3, [r4, #12]
 8013f28:	4630      	mov	r0, r6
 8013f2a:	f7ff fe9b 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013f2e:	6220      	str	r0, [r4, #32]
 8013f30:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013f34:	f7ff be48 	b.w	8013bc8 <net::dhcp_select()>
 8013f38:	7823      	ldrb	r3, [r4, #0]
 8013f3a:	2b3b      	cmp	r3, #59	@ 0x3b
 8013f3c:	d822      	bhi.n	8013f84 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xa8>
 8013f3e:	2b32      	cmp	r3, #50	@ 0x32
 8013f40:	d808      	bhi.n	8013f54 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x78>
 8013f42:	2b01      	cmp	r3, #1
 8013f44:	d027      	beq.n	8013f96 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xba>
 8013f46:	2b03      	cmp	r3, #3
 8013f48:	d02b      	beq.n	8013fa2 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc6>
 8013f4a:	b1fb      	cbz	r3, 8013f8c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xb0>
 8013f4c:	7863      	ldrb	r3, [r4, #1]
 8013f4e:	3302      	adds	r3, #2
 8013f50:	441c      	add	r4, r3
 8013f52:	e7d6      	b.n	8013f02 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8013f54:	3b33      	subs	r3, #51	@ 0x33
 8013f56:	2b08      	cmp	r3, #8
 8013f58:	d8f8      	bhi.n	8013f4c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8013f5a:	a201      	add	r2, pc, #4	@ (adr r2, 8013f60 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x84>)
 8013f5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013f60:	08013fb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 8013f64:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}
 8013f68:	08013f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, ip, sp}
 8013f6c:	08013fad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, sl, fp, ip, sp}
 8013f70:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}
 8013f74:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}
 8013f78:	08013f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp}
 8013f7c:	08013fc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, fp, ip, sp}
 8013f80:	08013fcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, sl, fp, ip, sp}
 8013f84:	2bff      	cmp	r3, #255	@ 0xff
 8013f86:	d1e1      	bne.n	8013f4c <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x70>
 8013f88:	464c      	mov	r4, r9
 8013f8a:	e7ba      	b.n	8013f02 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8013f8c:	3401      	adds	r4, #1
 8013f8e:	e7b8      	b.n	8013f02 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8013f90:	78a7      	ldrb	r7, [r4, #2]
 8013f92:	3403      	adds	r4, #3
 8013f94:	e7b5      	b.n	8013f02 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8013f96:	1ca0      	adds	r0, r4, #2
 8013f98:	f7ff fe64 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013f9c:	6268      	str	r0, [r5, #36]	@ 0x24
 8013f9e:	3406      	adds	r4, #6
 8013fa0:	e7af      	b.n	8013f02 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x26>
 8013fa2:	1ca0      	adds	r0, r4, #2
 8013fa4:	f7ff fe5e 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013fa8:	62a8      	str	r0, [r5, #40]	@ 0x28
 8013faa:	e7f8      	b.n	8013f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8013fac:	1ca0      	adds	r0, r4, #2
 8013fae:	f7ff fe59 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013fb2:	61e8      	str	r0, [r5, #28]
 8013fb4:	e7f3      	b.n	8013f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8013fb6:	1ca0      	adds	r0, r4, #2
 8013fb8:	f7ff fe54 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013fbc:	ba00      	rev	r0, r0
 8013fbe:	62e8      	str	r0, [r5, #44]	@ 0x2c
 8013fc0:	e7ed      	b.n	8013f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8013fc2:	1ca0      	adds	r0, r4, #2
 8013fc4:	f7ff fe4e 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013fc8:	ba00      	rev	r0, r0
 8013fca:	6328      	str	r0, [r5, #48]	@ 0x30
 8013fcc:	e7e7      	b.n	8013f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8013fce:	1ca0      	adds	r0, r4, #2
 8013fd0:	f7ff fe48 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8013fd4:	ba00      	rev	r0, r0
 8013fd6:	6368      	str	r0, [r5, #52]	@ 0x34
 8013fd8:	e7e1      	b.n	8013f9e <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0xc2>
 8013fda:	2f05      	cmp	r7, #5
 8013fdc:	d110      	bne.n	8014000 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x124>
 8013fde:	7a2b      	ldrb	r3, [r5, #8]
 8013fe0:	f003 02fd 	and.w	r2, r3, #253	@ 0xfd
 8013fe4:	2a01      	cmp	r2, #1
 8013fe6:	d106      	bne.n	8013ff6 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x11a>
 8013fe8:	4630      	mov	r0, r6
 8013fea:	f7ff fe3d 	bl	8013c68 <net::dhcp_handle_ack(net::dhcp::Message const*)>
 8013fee:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013ff2:	f7ff bc9d 	b.w	8013930 <net::dhcp_bind()>
 8013ff6:	3b04      	subs	r3, #4
 8013ff8:	2b01      	cmp	r3, #1
 8013ffa:	d9f5      	bls.n	8013fe8 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x10c>
 8013ffc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014000:	2f06      	cmp	r7, #6
 8014002:	d1fb      	bne.n	8013ffc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8014004:	7a2b      	ldrb	r3, [r5, #8]
 8014006:	1eda      	subs	r2, r3, #3
 8014008:	2a02      	cmp	r2, #2
 801400a:	d901      	bls.n	8014010 <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x134>
 801400c:	2b01      	cmp	r3, #1
 801400e:	d1f5      	bne.n	8013ffc <net::dhcp_process(net::dhcp::Message const*, unsigned long)+0x120>
 8014010:	f8d8 3020 	ldr.w	r3, [r8, #32]
 8014014:	7a1a      	ldrb	r2, [r3, #8]
 8014016:	2a0c      	cmp	r2, #12
 8014018:	bf1f      	itttt	ne
 801401a:	220c      	movne	r2, #12
 801401c:	811a      	strhne	r2, [r3, #8]
 801401e:	2200      	movne	r2, #0
 8014020:	819a      	strhne	r2, [r3, #12]
 8014022:	2200      	movs	r2, #0
 8014024:	4611      	mov	r1, r2
 8014026:	4610      	mov	r0, r2
 8014028:	f000 f9fc 	bl	8014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 801402c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014030:	f7ff bd08 	b.w	8013a44 <net::dhcp_discover()>
 8014034:	20002954 	andcs	r2, r0, r4, asr r9

08014038 <net::igmp_send_report(unsigned long)>:
 8014038:	4a19      	ldr	r2, [pc, #100]	@ (80140a0 <net::igmp_send_report(unsigned long)+0x68>)
 801403a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801403c:	f3c0 2106 	ubfx	r1, r0, #8, #7
 8014040:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8014044:	4c17      	ldr	r4, [pc, #92]	@ (80140a4 <net::igmp_send_report(unsigned long)+0x6c>)
 8014046:	70d1      	strb	r1, [r2, #3]
 8014048:	7113      	strb	r3, [r2, #4]
 801404a:	f3c0 6107 	ubfx	r1, r0, #24, #8
 801404e:	4613      	mov	r3, r2
 8014050:	7151      	strb	r1, [r2, #5]
 8014052:	4605      	mov	r5, r0
 8014054:	4622      	mov	r2, r4
 8014056:	f103 0c06 	add.w	ip, r3, #6
 801405a:	f813 1b01 	ldrb.w	r1, [r3], #1
 801405e:	f802 1b01 	strb.w	r1, [r2], #1
 8014062:	4563      	cmp	r3, ip
 8014064:	d1f9      	bne.n	801405a <net::igmp_send_report(unsigned long)+0x22>
 8014066:	4e10      	ldr	r6, [pc, #64]	@ (80140a8 <net::igmp_send_report(unsigned long)+0x70>)
 8014068:	4810      	ldr	r0, [pc, #64]	@ (80140ac <net::igmp_send_report(unsigned long)+0x74>)
 801406a:	8833      	ldrh	r3, [r6, #0]
 801406c:	8263      	strh	r3, [r4, #18]
 801406e:	2700      	movs	r7, #0
 8014070:	2118      	movs	r1, #24
 8014072:	f8c4 501e 	str.w	r5, [r4, #30]
 8014076:	8327      	strh	r7, [r4, #24]
 8014078:	f000 f90e 	bl	8014298 <net::net_chksum(void const*, unsigned long)>
 801407c:	2120      	movs	r1, #32
 801407e:	8320      	strh	r0, [r4, #24]
 8014080:	480a      	ldr	r0, [pc, #40]	@ (80140ac <net::igmp_send_report(unsigned long)+0x74>)
 8014082:	f8c4 502a 	str.w	r5, [r4, #42]	@ 0x2a
 8014086:	8527      	strh	r7, [r4, #40]	@ 0x28
 8014088:	f000 f906 	bl	8014298 <net::net_chksum(void const*, unsigned long)>
 801408c:	212e      	movs	r1, #46	@ 0x2e
 801408e:	4603      	mov	r3, r0
 8014090:	4804      	ldr	r0, [pc, #16]	@ (80140a4 <net::igmp_send_report(unsigned long)+0x6c>)
 8014092:	8523      	strh	r3, [r4, #40]	@ 0x28
 8014094:	f001 f924 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 8014098:	8833      	ldrh	r3, [r6, #0]
 801409a:	3301      	adds	r3, #1
 801409c:	8033      	strh	r3, [r6, #0]
 801409e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80140a0:	10008348 	andne	r8, r0, r8, asr #6
 80140a4:	10008380 	andne	r8, r0, r0, lsl #7
 80140a8:	10008224 	andne	r8, r0, r4, lsr #4
 80140ac:	1000838e 	andne	r8, r0, lr, lsl #7

080140b0 <net::igmp_timer()>:
 80140b0:	b570      	push	{r4, r5, r6, lr}
 80140b2:	4c12      	ldr	r4, [pc, #72]	@ (80140fc <net::igmp_timer()+0x4c>)
 80140b4:	4e12      	ldr	r6, [pc, #72]	@ (8014100 <net::igmp_timer()+0x50>)
 80140b6:	f504 7590 	add.w	r5, r4, #288	@ 0x120
 80140ba:	e002      	b.n	80140c2 <net::igmp_timer()+0x12>
 80140bc:	3408      	adds	r4, #8
 80140be:	42ac      	cmp	r4, r5
 80140c0:	d01a      	beq.n	80140f8 <net::igmp_timer()+0x48>
 80140c2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80140c6:	1e53      	subs	r3, r2, #1
 80140c8:	b29b      	uxth	r3, r3
 80140ca:	2a00      	cmp	r2, #0
 80140cc:	d0f6      	beq.n	80140bc <net::igmp_timer()+0xc>
 80140ce:	f824 3c04 	strh.w	r3, [r4, #-4]
 80140d2:	2b00      	cmp	r3, #0
 80140d4:	d1f2      	bne.n	80140bc <net::igmp_timer()+0xc>
 80140d6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80140da:	2b01      	cmp	r3, #1
 80140dc:	d1ee      	bne.n	80140bc <net::igmp_timer()+0xc>
 80140de:	f854 0c08 	ldr.w	r0, [r4, #-8]
 80140e2:	42b0      	cmp	r0, r6
 80140e4:	f04f 0302 	mov.w	r3, #2
 80140e8:	d0e8      	beq.n	80140bc <net::igmp_timer()+0xc>
 80140ea:	f804 3c02 	strb.w	r3, [r4, #-2]
 80140ee:	3408      	adds	r4, #8
 80140f0:	f7ff ffa2 	bl	8014038 <net::igmp_send_report(unsigned long)>
 80140f4:	42ac      	cmp	r4, r5
 80140f6:	d1e4      	bne.n	80140c2 <net::igmp_timer()+0x12>
 80140f8:	bd70      	pop	{r4, r5, r6, pc}
 80140fa:	bf00      	nop
 80140fc:	10008230 	andne	r8, r0, r0, lsr r2
 8014100:	010000e0 	smlatteq	r0, r0, r0, r0

08014104 <net::igmp_set_ip()>:
 8014104:	4b04      	ldr	r3, [pc, #16]	@ (8014118 <net::igmp_set_ip()+0x14>)
 8014106:	4905      	ldr	r1, [pc, #20]	@ (801411c <net::igmp_set_ip()+0x18>)
 8014108:	4a05      	ldr	r2, [pc, #20]	@ (8014120 <net::igmp_set_ip()+0x1c>)
 801410a:	681b      	ldr	r3, [r3, #0]
 801410c:	f8c1 301a 	str.w	r3, [r1, #26]
 8014110:	f8c2 301a 	str.w	r3, [r2, #26]
 8014114:	4770      	bx	lr
 8014116:	bf00      	nop
 8014118:	20002954 	andcs	r2, r0, r4, asr r9
 801411c:	10008380 	andne	r8, r0, r0, lsl #7
 8014120:	10008350 	andne	r8, r0, r0, asr r3

08014124 <net::igmp_join(unsigned long)>:
 8014124:	f000 03e0 	and.w	r3, r0, #224	@ 0xe0
 8014128:	2be0      	cmp	r3, #224	@ 0xe0
 801412a:	d10c      	bne.n	8014146 <net::igmp_join(unsigned long)+0x22>
 801412c:	490b      	ldr	r1, [pc, #44]	@ (801415c <net::igmp_join(unsigned long)+0x38>)
 801412e:	2300      	movs	r3, #0
 8014130:	e003      	b.n	801413a <net::igmp_join(unsigned long)+0x16>
 8014132:	b14a      	cbz	r2, 8014148 <net::igmp_join(unsigned long)+0x24>
 8014134:	3301      	adds	r3, #1
 8014136:	2b24      	cmp	r3, #36	@ 0x24
 8014138:	d005      	beq.n	8014146 <net::igmp_join(unsigned long)+0x22>
 801413a:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 801413e:	4282      	cmp	r2, r0
 8014140:	eb01 0cc3 	add.w	ip, r1, r3, lsl #3
 8014144:	d1f5      	bne.n	8014132 <net::igmp_join(unsigned long)+0xe>
 8014146:	4770      	bx	lr
 8014148:	f841 0033 	str.w	r0, [r1, r3, lsl #3]
 801414c:	2201      	movs	r2, #1
 801414e:	2302      	movs	r3, #2
 8014150:	f88c 2006 	strb.w	r2, [ip, #6]
 8014154:	f8ac 3004 	strh.w	r3, [ip, #4]
 8014158:	f7ff bf6e 	b.w	8014038 <net::igmp_send_report(unsigned long)>
 801415c:	10008228 	andne	r8, r0, r8, lsr #4

08014160 <net::igmp_leave(unsigned long)>:
 8014160:	b570      	push	{r4, r5, r6, lr}
 8014162:	4c0f      	ldr	r4, [pc, #60]	@ (80141a0 <net::igmp_leave(unsigned long)+0x40>)
 8014164:	4602      	mov	r2, r0
 8014166:	f504 7190 	add.w	r1, r4, #288	@ 0x120
 801416a:	e002      	b.n	8014172 <net::igmp_leave(unsigned long)+0x12>
 801416c:	3408      	adds	r4, #8
 801416e:	428c      	cmp	r4, r1
 8014170:	d014      	beq.n	801419c <net::igmp_leave(unsigned long)+0x3c>
 8014172:	6823      	ldr	r3, [r4, #0]
 8014174:	4293      	cmp	r3, r2
 8014176:	d1f9      	bne.n	801416c <net::igmp_leave(unsigned long)+0xc>
 8014178:	4e0a      	ldr	r6, [pc, #40]	@ (80141a4 <net::igmp_leave(unsigned long)+0x44>)
 801417a:	480b      	ldr	r0, [pc, #44]	@ (80141a8 <net::igmp_leave(unsigned long)+0x48>)
 801417c:	8833      	ldrh	r3, [r6, #0]
 801417e:	8243      	strh	r3, [r0, #18]
 8014180:	2500      	movs	r5, #0
 8014182:	212e      	movs	r1, #46	@ 0x2e
 8014184:	f8c0 202a 	str.w	r2, [r0, #42]	@ 0x2a
 8014188:	8305      	strh	r5, [r0, #24]
 801418a:	8505      	strh	r5, [r0, #40]	@ 0x28
 801418c:	f001 f8a8 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 8014190:	8833      	ldrh	r3, [r6, #0]
 8014192:	6025      	str	r5, [r4, #0]
 8014194:	3301      	adds	r3, #1
 8014196:	8033      	strh	r3, [r6, #0]
 8014198:	71a5      	strb	r5, [r4, #6]
 801419a:	80a5      	strh	r5, [r4, #4]
 801419c:	bd70      	pop	{r4, r5, r6, pc}
 801419e:	bf00      	nop
 80141a0:	10008228 	andne	r8, r0, r8, lsr #4
 80141a4:	10008224 	andne	r8, r0, r4, lsr #4
 80141a8:	10008350 	andne	r8, r0, r0, asr r3

080141ac <net::igmp_report_groups()>:
 80141ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141ae:	4c14      	ldr	r4, [pc, #80]	@ (8014200 <net::igmp_report_groups()+0x54>)
 80141b0:	4d14      	ldr	r5, [pc, #80]	@ (8014204 <net::igmp_report_groups()+0x58>)
 80141b2:	f504 7790 	add.w	r7, r4, #288	@ 0x120
 80141b6:	2601      	movs	r6, #1
 80141b8:	e002      	b.n	80141c0 <net::igmp_report_groups()+0x14>
 80141ba:	3408      	adds	r4, #8
 80141bc:	42bc      	cmp	r4, r7
 80141be:	d01e      	beq.n	80141fe <net::igmp_report_groups()+0x52>
 80141c0:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80141c4:	2b02      	cmp	r3, #2
 80141c6:	d007      	beq.n	80141d8 <net::igmp_report_groups()+0x2c>
 80141c8:	2b01      	cmp	r3, #1
 80141ca:	d1f6      	bne.n	80141ba <net::igmp_report_groups()+0xe>
 80141cc:	f834 3c04 	ldrh.w	r3, [r4, #-4]
 80141d0:	3b01      	subs	r3, #1
 80141d2:	b29b      	uxth	r3, r3
 80141d4:	2b04      	cmp	r3, #4
 80141d6:	d9f0      	bls.n	80141ba <net::igmp_report_groups()+0xe>
 80141d8:	f005 ffdc 	bl	801a194 <random>
 80141dc:	fba5 3200 	umull	r3, r2, r5, r0
 80141e0:	f022 0303 	bic.w	r3, r2, #3
 80141e4:	eb03 0392 	add.w	r3, r3, r2, lsr #2
 80141e8:	1ac0      	subs	r0, r0, r3
 80141ea:	2801      	cmp	r0, #1
 80141ec:	bf38      	it	cc
 80141ee:	2001      	movcc	r0, #1
 80141f0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80141f4:	f804 6c02 	strb.w	r6, [r4, #-2]
 80141f8:	3408      	adds	r4, #8
 80141fa:	42bc      	cmp	r4, r7
 80141fc:	d1e0      	bne.n	80141c0 <net::igmp_report_groups()+0x14>
 80141fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014200:	10008230 	andne	r8, r0, r0, lsr r2
 8014204:	cccccccd 	stclgt	12, cr12, [ip], {205}	@ 0xcd

08014208 <net::primary_ip_conflict_callback(net::acd::Callback)>:
 8014208:	b140      	cbz	r0, 801421c <net::primary_ip_conflict_callback(net::acd::Callback)+0x14>
 801420a:	2802      	cmp	r0, #2
 801420c:	d000      	beq.n	8014210 <net::primary_ip_conflict_callback(net::acd::Callback)+0x8>
 801420e:	4770      	bx	lr
 8014210:	4a10      	ldr	r2, [pc, #64]	@ (8014254 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 8014212:	7e93      	ldrb	r3, [r2, #26]
 8014214:	f023 0308 	bic.w	r3, r3, #8
 8014218:	7693      	strb	r3, [r2, #26]
 801421a:	4770      	bx	lr
 801421c:	4b0e      	ldr	r3, [pc, #56]	@ (8014258 <net::primary_ip_conflict_callback(net::acd::Callback)+0x50>)
 801421e:	b510      	push	{r4, lr}
 8014220:	4c0c      	ldr	r4, [pc, #48]	@ (8014254 <net::primary_ip_conflict_callback(net::acd::Callback)+0x4c>)
 8014222:	6818      	ldr	r0, [r3, #0]
 8014224:	6923      	ldr	r3, [r4, #16]
 8014226:	4298      	cmp	r0, r3
 8014228:	d008      	beq.n	801423c <net::primary_ip_conflict_callback(net::acd::Callback)+0x34>
 801422a:	f000 f8c1 	bl	80143b0 <net::netif_set_ipaddr(net::ip_addr)>
 801422e:	f7ff fd3b 	bl	8013ca8 <net::dhcp_inform()>
 8014232:	7ea3      	ldrb	r3, [r4, #26]
 8014234:	f043 0308 	orr.w	r3, r3, #8
 8014238:	76a3      	strb	r3, [r4, #26]
 801423a:	bd10      	pop	{r4, pc}
 801423c:	4602      	mov	r2, r0
 801423e:	21ff      	movs	r1, #255	@ 0xff
 8014240:	f000 f8f0 	bl	8014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>
 8014244:	f7ff fd30 	bl	8013ca8 <net::dhcp_inform()>
 8014248:	7ea3      	ldrb	r3, [r4, #26]
 801424a:	f043 0308 	orr.w	r3, r3, #8
 801424e:	76a3      	strb	r3, [r4, #26]
 8014250:	bd10      	pop	{r4, pc}
 8014252:	bf00      	nop
 8014254:	20002954 	andcs	r2, r0, r4, asr r9
 8014258:	20002940 	andcs	r2, r0, r0, asr #18

0801425c <net::net_shutdown()>:
 801425c:	f000 b92e 	b.w	80144bc <net::netif_set_link_down()>

08014260 <net::net_set_primary_ip(net::ip_addr)>:
 8014260:	b510      	push	{r4, lr}
 8014262:	4604      	mov	r4, r0
 8014264:	f7ff fda2 	bl	8013dac <net::dhcp_release_and_stop()>
 8014268:	4908      	ldr	r1, [pc, #32]	@ (801428c <net::net_set_primary_ip(net::ip_addr)+0x2c>)
 801426a:	4809      	ldr	r0, [pc, #36]	@ (8014290 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 801426c:	f001 f9b4 	bl	80155d8 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>
 8014270:	b934      	cbnz	r4, 8014280 <net::net_set_primary_ip(net::ip_addr)+0x20>
 8014272:	4b08      	ldr	r3, [pc, #32]	@ (8014294 <net::net_set_primary_ip(net::ip_addr)+0x34>)
 8014274:	4806      	ldr	r0, [pc, #24]	@ (8014290 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8014276:	6919      	ldr	r1, [r3, #16]
 8014278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801427c:	f001 b876 	b.w	801536c <net::acd_start(net::acd::Acd*, net::ip_addr)>
 8014280:	4621      	mov	r1, r4
 8014282:	4803      	ldr	r0, [pc, #12]	@ (8014290 <net::net_set_primary_ip(net::ip_addr)+0x30>)
 8014284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014288:	f001 b870 	b.w	801536c <net::acd_start(net::acd::Acd*, net::ip_addr)>
 801428c:	08014209 	stmdaeq	r1, {r0, r3, r9, lr}
 8014290:	20002940 	andcs	r2, r0, r0, asr #18
 8014294:	20002954 	andcs	r2, r0, r4, asr r9

08014298 <net::net_chksum(void const*, unsigned long)>:
 8014298:	2901      	cmp	r1, #1
 801429a:	d91f      	bls.n	80142dc <net::net_chksum(void const*, unsigned long)+0x44>
 801429c:	f1a1 0c02 	sub.w	ip, r1, #2
 80142a0:	f02c 0c01 	bic.w	ip, ip, #1
 80142a4:	f10c 0c02 	add.w	ip, ip, #2
 80142a8:	4484      	add	ip, r0
 80142aa:	2300      	movs	r3, #0
 80142ac:	f830 2b02 	ldrh.w	r2, [r0], #2
 80142b0:	4560      	cmp	r0, ip
 80142b2:	4413      	add	r3, r2
 80142b4:	d1fa      	bne.n	80142ac <net::net_chksum(void const*, unsigned long)+0x14>
 80142b6:	07ca      	lsls	r2, r1, #31
 80142b8:	d40a      	bmi.n	80142d0 <net::net_chksum(void const*, unsigned long)+0x38>
 80142ba:	0c1a      	lsrs	r2, r3, #16
 80142bc:	d005      	beq.n	80142ca <net::net_chksum(void const*, unsigned long)+0x32>
 80142be:	fa12 f383 	uxtah	r3, r2, r3
 80142c2:	0c1a      	lsrs	r2, r3, #16
 80142c4:	bf1c      	itt	ne
 80142c6:	b29b      	uxthne	r3, r3
 80142c8:	3301      	addne	r3, #1
 80142ca:	43db      	mvns	r3, r3
 80142cc:	b298      	uxth	r0, r3
 80142ce:	4770      	bx	lr
 80142d0:	7802      	ldrb	r2, [r0, #0]
 80142d2:	0212      	lsls	r2, r2, #8
 80142d4:	ba52      	rev16	r2, r2
 80142d6:	fa13 f382 	uxtah	r3, r3, r2
 80142da:	e7ee      	b.n	80142ba <net::net_chksum(void const*, unsigned long)+0x22>
 80142dc:	b121      	cbz	r1, 80142e8 <net::net_chksum(void const*, unsigned long)+0x50>
 80142de:	7803      	ldrb	r3, [r0, #0]
 80142e0:	021b      	lsls	r3, r3, #8
 80142e2:	ba5b      	rev16	r3, r3
 80142e4:	b29b      	uxth	r3, r3
 80142e6:	e7f0      	b.n	80142ca <net::net_chksum(void const*, unsigned long)+0x32>
 80142e8:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80142ec:	4770      	bx	lr
 80142ee:	bf00      	nop

080142f0 <net::default_callback(unsigned short, net::netif_ext_callback_args_t const*)>:
 80142f0:	4770      	bx	lr
	...

080142f4 <net::netif_do_update_globals()>:
 80142f4:	4908      	ldr	r1, [pc, #32]	@ (8014318 <net::netif_do_update_globals()+0x24>)
 80142f6:	e9d1 3200 	ldrd	r3, r2, [r1]
 80142fa:	b410      	push	{r4}
 80142fc:	ea63 0402 	orn	r4, r3, r2
 8014300:	43d0      	mvns	r0, r2
 8014302:	60cc      	str	r4, [r1, #12]
 8014304:	4013      	ands	r3, r2
 8014306:	4905      	ldr	r1, [pc, #20]	@ (801431c <net::netif_do_update_globals()+0x28>)
 8014308:	4a05      	ldr	r2, [pc, #20]	@ (8014320 <net::netif_do_update_globals()+0x2c>)
 801430a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801430e:	6008      	str	r0, [r1, #0]
 8014310:	6013      	str	r3, [r2, #0]
 8014312:	f001 bab7 	b.w	8015884 <net::ip_set_ip()>
 8014316:	bf00      	nop
 8014318:	20002954 	andcs	r2, r0, r4, asr r9
 801431c:	2000293c 	andcs	r2, r0, ip, lsr r9
 8014320:	20002938 	andcs	r2, r0, r8, lsr r9

08014324 <net::netif_issue_reports()>:
 8014324:	4b04      	ldr	r3, [pc, #16]	@ (8014338 <net::netif_issue_reports()+0x14>)
 8014326:	7e9a      	ldrb	r2, [r3, #26]
 8014328:	07d2      	lsls	r2, r2, #31
 801432a:	d503      	bpl.n	8014334 <net::netif_issue_reports()+0x10>
 801432c:	681b      	ldr	r3, [r3, #0]
 801432e:	b10b      	cbz	r3, 8014334 <net::netif_issue_reports()+0x10>
 8014330:	f7ff bf3c 	b.w	80141ac <net::igmp_report_groups()>
 8014334:	4770      	bx	lr
 8014336:	bf00      	nop
 8014338:	20002954 	andcs	r2, r0, r4, asr r9

0801433c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>:
 801433c:	b570      	push	{r4, r5, r6, lr}
 801433e:	4e0b      	ldr	r6, [pc, #44]	@ (801436c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x30>)
 8014340:	6833      	ldr	r3, [r6, #0]
 8014342:	4283      	cmp	r3, r0
 8014344:	4604      	mov	r4, r0
 8014346:	460d      	mov	r5, r1
 8014348:	d00d      	beq.n	8014366 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x2a>
 801434a:	600b      	str	r3, [r1, #0]
 801434c:	f001 fa9a 	bl	8015884 <net::ip_set_ip()>
 8014350:	6828      	ldr	r0, [r5, #0]
 8014352:	4621      	mov	r1, r4
 8014354:	f001 f946 	bl	80155e4 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>
 8014358:	6034      	str	r4, [r6, #0]
 801435a:	f7ff ffcb 	bl	80142f4 <net::netif_do_update_globals()>
 801435e:	f7ff ffe1 	bl	8014324 <net::netif_issue_reports()>
 8014362:	2001      	movs	r0, #1
 8014364:	bd70      	pop	{r4, r5, r6, pc}
 8014366:	2000      	movs	r0, #0
 8014368:	e7fc      	b.n	8014364 <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)+0x28>
 801436a:	bf00      	nop
 801436c:	20002954 	andcs	r2, r0, r4, asr r9

08014370 <net::netif_init()>:
 8014370:	4b0c      	ldr	r3, [pc, #48]	@ (80143a4 <net::netif_init()+0x34>)
 8014372:	7e1a      	ldrb	r2, [r3, #24]
 8014374:	7dd8      	ldrb	r0, [r3, #23]
 8014376:	0412      	lsls	r2, r2, #16
 8014378:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 801437c:	7e58      	ldrb	r0, [r3, #25]
 801437e:	3202      	adds	r2, #2
 8014380:	2100      	movs	r1, #0
 8014382:	eb02 6200 	add.w	r2, r2, r0, lsl #24
 8014386:	e9c3 1100 	strd	r1, r1, [r3]
 801438a:	611a      	str	r2, [r3, #16]
 801438c:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8014390:	e9c3 1108 	strd	r1, r1, [r3, #32]
 8014394:	7699      	strb	r1, [r3, #26]
 8014396:	6299      	str	r1, [r3, #40]	@ 0x28
 8014398:	4b03      	ldr	r3, [pc, #12]	@ (80143a8 <net::netif_init()+0x38>)
 801439a:	4a04      	ldr	r2, [pc, #16]	@ (80143ac <net::netif_init()+0x3c>)
 801439c:	601a      	str	r2, [r3, #0]
 801439e:	f7f4 b853 	b.w	8008448 <net::arp_init()>
 80143a2:	bf00      	nop
 80143a4:	20002954 	andcs	r2, r0, r4, asr r9
 80143a8:	20002950 	andcs	r2, r0, r0, asr r9
 80143ac:	080142f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, lr}

080143b0 <net::netif_set_ipaddr(net::ip_addr)>:
 80143b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143b2:	4669      	mov	r1, sp
 80143b4:	f7ff ffc2 	bl	801433c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 80143b8:	b130      	cbz	r0, 80143c8 <net::netif_set_ipaddr(net::ip_addr)+0x18>
 80143ba:	9b00      	ldr	r3, [sp, #0]
 80143bc:	9301      	str	r3, [sp, #4]
 80143be:	4b04      	ldr	r3, [pc, #16]	@ (80143d0 <net::netif_set_ipaddr(net::ip_addr)+0x20>)
 80143c0:	a901      	add	r1, sp, #4
 80143c2:	681b      	ldr	r3, [r3, #0]
 80143c4:	2010      	movs	r0, #16
 80143c6:	4798      	blx	r3
 80143c8:	b005      	add	sp, #20
 80143ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80143ce:	bf00      	nop
 80143d0:	20002950 	andcs	r2, r0, r0, asr r9

080143d4 <net::netif_set_netmask(net::ip_addr)>:
 80143d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143d6:	4b07      	ldr	r3, [pc, #28]	@ (80143f4 <net::netif_set_netmask(net::ip_addr)+0x20>)
 80143d8:	685c      	ldr	r4, [r3, #4]
 80143da:	42a0      	cmp	r0, r4
 80143dc:	d008      	beq.n	80143f0 <net::netif_set_netmask(net::ip_addr)+0x1c>
 80143de:	6058      	str	r0, [r3, #4]
 80143e0:	f7ff ff88 	bl	80142f4 <net::netif_do_update_globals()>
 80143e4:	4b04      	ldr	r3, [pc, #16]	@ (80143f8 <net::netif_set_netmask(net::ip_addr)+0x24>)
 80143e6:	9402      	str	r4, [sp, #8]
 80143e8:	681b      	ldr	r3, [r3, #0]
 80143ea:	a901      	add	r1, sp, #4
 80143ec:	2040      	movs	r0, #64	@ 0x40
 80143ee:	4798      	blx	r3
 80143f0:	b004      	add	sp, #16
 80143f2:	bd10      	pop	{r4, pc}
 80143f4:	20002954 	andcs	r2, r0, r4, asr r9
 80143f8:	20002950 	andcs	r2, r0, r0, asr r9

080143fc <net::netif_set_gw(net::ip_addr)>:
 80143fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143fe:	4a07      	ldr	r2, [pc, #28]	@ (801441c <net::netif_set_gw(net::ip_addr)+0x20>)
 8014400:	6893      	ldr	r3, [r2, #8]
 8014402:	4298      	cmp	r0, r3
 8014404:	d006      	beq.n	8014414 <net::netif_set_gw(net::ip_addr)+0x18>
 8014406:	9303      	str	r3, [sp, #12]
 8014408:	4b05      	ldr	r3, [pc, #20]	@ (8014420 <net::netif_set_gw(net::ip_addr)+0x24>)
 801440a:	6090      	str	r0, [r2, #8]
 801440c:	681b      	ldr	r3, [r3, #0]
 801440e:	a901      	add	r1, sp, #4
 8014410:	2020      	movs	r0, #32
 8014412:	4798      	blx	r3
 8014414:	b005      	add	sp, #20
 8014416:	f85d fb04 	ldr.w	pc, [sp], #4
 801441a:	bf00      	nop
 801441c:	20002954 	andcs	r2, r0, r4, asr r9
 8014420:	20002950 	andcs	r2, r0, r0, asr r9

08014424 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)>:
 8014424:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014428:	4688      	mov	r8, r1
 801442a:	b085      	sub	sp, #20
 801442c:	4617      	mov	r7, r2
 801442e:	4605      	mov	r5, r0
 8014430:	b348      	cbz	r0, 8014486 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x62>
 8014432:	2400      	movs	r4, #0
 8014434:	4e1c      	ldr	r6, [pc, #112]	@ (80144a8 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x84>)
 8014436:	f8d6 9004 	ldr.w	r9, [r6, #4]
 801443a:	45c8      	cmp	r8, r9
 801443c:	d007      	beq.n	801444e <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x2a>
 801443e:	f8c6 8004 	str.w	r8, [r6, #4]
 8014442:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
 8014446:	f7ff ff55 	bl	80142f4 <net::netif_do_update_globals()>
 801444a:	f8cd 9008 	str.w	r9, [sp, #8]
 801444e:	68b3      	ldr	r3, [r6, #8]
 8014450:	429f      	cmp	r7, r3
 8014452:	bf1e      	ittt	ne
 8014454:	60b7      	strne	r7, [r6, #8]
 8014456:	f044 0420 	orrne.w	r4, r4, #32
 801445a:	9303      	strne	r3, [sp, #12]
 801445c:	b30d      	cbz	r5, 80144a2 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x7e>
 801445e:	4669      	mov	r1, sp
 8014460:	4628      	mov	r0, r5
 8014462:	f7ff ff6b 	bl	801433c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 8014466:	b1b8      	cbz	r0, 8014498 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x74>
 8014468:	9b00      	ldr	r3, [sp, #0]
 801446a:	9301      	str	r3, [sp, #4]
 801446c:	f044 0410 	orr.w	r4, r4, #16
 8014470:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 8014474:	b995      	cbnz	r5, 801449c <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x78>
 8014476:	4b0d      	ldr	r3, [pc, #52]	@ (80144ac <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x88>)
 8014478:	a901      	add	r1, sp, #4
 801447a:	681b      	ldr	r3, [r3, #0]
 801447c:	4620      	mov	r0, r4
 801447e:	4798      	blx	r3
 8014480:	b005      	add	sp, #20
 8014482:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014486:	4669      	mov	r1, sp
 8014488:	f7ff ff58 	bl	801433c <net::netif_do_set_ipaddr(net::ip_addr, net::ip_addr&)>
 801448c:	2800      	cmp	r0, #0
 801448e:	d0d0      	beq.n	8014432 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0xe>
 8014490:	9b00      	ldr	r3, [sp, #0]
 8014492:	9301      	str	r3, [sp, #4]
 8014494:	2410      	movs	r4, #16
 8014496:	e7cd      	b.n	8014434 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x10>
 8014498:	2c00      	cmp	r4, #0
 801449a:	d1e9      	bne.n	8014470 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 801449c:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
 80144a0:	e7e9      	b.n	8014476 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x52>
 80144a2:	2c00      	cmp	r4, #0
 80144a4:	d1e4      	bne.n	8014470 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x4c>
 80144a6:	e7eb      	b.n	8014480 <net::netif_set_addr(net::ip_addr, net::ip_addr, net::ip_addr)+0x5c>
 80144a8:	20002954 	andcs	r2, r0, r4, asr r9
 80144ac:	20002950 	andcs	r2, r0, r0, asr r9

080144b0 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))>:
 80144b0:	4b01      	ldr	r3, [pc, #4]	@ (80144b8 <net::netif_add_ext_callback(void (*)(unsigned short, net::netif_ext_callback_args_t const*))+0x8>)
 80144b2:	6018      	str	r0, [r3, #0]
 80144b4:	4770      	bx	lr
 80144b6:	bf00      	nop
 80144b8:	20002950 	andcs	r2, r0, r0, asr r9

080144bc <net::netif_set_link_down()>:
 80144bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80144be:	4a0d      	ldr	r2, [pc, #52]	@ (80144f4 <net::netif_set_link_down()+0x38>)
 80144c0:	7e93      	ldrb	r3, [r2, #26]
 80144c2:	07d9      	lsls	r1, r3, #31
 80144c4:	d512      	bpl.n	80144ec <net::netif_set_link_down()+0x30>
 80144c6:	f023 0301 	bic.w	r3, r3, #1
 80144ca:	7693      	strb	r3, [r2, #26]
 80144cc:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80144ce:	b11b      	cbz	r3, 80144d8 <net::netif_set_link_down()+0x1c>
 80144d0:	685b      	ldr	r3, [r3, #4]
 80144d2:	b10b      	cbz	r3, 80144d8 <net::netif_set_link_down()+0x1c>
 80144d4:	f7ff fa1a 	bl	801390c <net::autoip_stop()>
 80144d8:	f001 f822 	bl	8015520 <net::acd_network_changed_link_down()>
 80144dc:	2300      	movs	r3, #0
 80144de:	f88d 3004 	strb.w	r3, [sp, #4]
 80144e2:	4b05      	ldr	r3, [pc, #20]	@ (80144f8 <net::netif_set_link_down()+0x3c>)
 80144e4:	a901      	add	r1, sp, #4
 80144e6:	681b      	ldr	r3, [r3, #0]
 80144e8:	2004      	movs	r0, #4
 80144ea:	4798      	blx	r3
 80144ec:	b005      	add	sp, #20
 80144ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80144f2:	bf00      	nop
 80144f4:	20002954 	andcs	r2, r0, r4, asr r9
 80144f8:	20002950 	andcs	r2, r0, r0, asr r9

080144fc <net::_bswap32(t_tcp*)>:
 80144fc:	f100 032a 	add.w	r3, r0, #42	@ 0x2a
 8014500:	079a      	lsls	r2, r3, #30
 8014502:	bf0b      	itete	eq
 8014504:	f8d0 302a 	ldreq.w	r3, [r0, #42]	@ 0x2a
 8014508:	f8d0 302a 	ldrne.w	r3, [r0, #42]	@ 0x2a
 801450c:	ba1b      	reveq	r3, r3
 801450e:	ba1b      	revne	r3, r3
 8014510:	bf0c      	ite	eq
 8014512:	f8c0 302a 	streq.w	r3, [r0, #42]	@ 0x2a
 8014516:	f8c0 302a 	strne.w	r3, [r0, #42]	@ 0x2a
 801451a:	f100 0326 	add.w	r3, r0, #38	@ 0x26
 801451e:	079b      	lsls	r3, r3, #30
 8014520:	bf0b      	itete	eq
 8014522:	f8d0 3026 	ldreq.w	r3, [r0, #38]	@ 0x26
 8014526:	f8d0 3026 	ldrne.w	r3, [r0, #38]	@ 0x26
 801452a:	ba1b      	reveq	r3, r3
 801452c:	ba1b      	revne	r3, r3
 801452e:	bf0c      	ite	eq
 8014530:	f8c0 3026 	streq.w	r3, [r0, #38]	@ 0x26
 8014534:	f8c0 3026 	strne.w	r3, [r0, #38]	@ 0x26
 8014538:	4770      	bx	lr
 801453a:	bf00      	nop

0801453c <net::send_package(net::tcb const*, net::SendInfo const&)>:
 801453c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014540:	7a0b      	ldrb	r3, [r1, #8]
 8014542:	8f86      	ldrh	r6, [r0, #60]	@ 0x3c
 8014544:	4c52      	ldr	r4, [pc, #328]	@ (8014690 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8014546:	f003 0302 	and.w	r3, r3, #2
 801454a:	2b00      	cmp	r3, #0
 801454c:	bf14      	ite	ne
 801454e:	2324      	movne	r3, #36	@ 0x24
 8014550:	2320      	moveq	r3, #32
 8014552:	441e      	add	r6, r3
 8014554:	b084      	sub	sp, #16
 8014556:	4605      	mov	r5, r0
 8014558:	bf14      	ite	ne
 801455a:	f04f 0e90 	movne.w	lr, #144	@ 0x90
 801455e:	f04f 0e80 	moveq.w	lr, #128	@ 0x80
 8014562:	f100 030c 	add.w	r3, r0, #12
 8014566:	f100 0c12 	add.w	ip, r0, #18
 801456a:	4622      	mov	r2, r4
 801456c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8014570:	f802 0b01 	strb.w	r0, [r2], #1
 8014574:	459c      	cmp	ip, r3
 8014576:	d1f9      	bne.n	801456c <net::send_package(net::tcb const*, net::SendInfo const&)+0x30>
 8014578:	b2b7      	uxth	r7, r6
 801457a:	4a46      	ldr	r2, [pc, #280]	@ (8014694 <net::send_package(net::tcb const*, net::SendInfo const&)+0x158>)
 801457c:	f107 0314 	add.w	r3, r7, #20
 8014580:	ba5b      	rev16	r3, r3
 8014582:	8223      	strh	r3, [r4, #16]
 8014584:	8813      	ldrh	r3, [r2, #0]
 8014586:	8263      	strh	r3, [r4, #18]
 8014588:	3301      	adds	r3, #1
 801458a:	8013      	strh	r3, [r2, #0]
 801458c:	682b      	ldr	r3, [r5, #0]
 801458e:	f8c4 301a 	str.w	r3, [r4, #26]
 8014592:	686b      	ldr	r3, [r5, #4]
 8014594:	f8c4 301e 	str.w	r3, [r4, #30]
 8014598:	2300      	movs	r3, #0
 801459a:	8323      	strh	r3, [r4, #24]
 801459c:	892a      	ldrh	r2, [r5, #8]
 801459e:	8462      	strh	r2, [r4, #34]	@ 0x22
 80145a0:	680a      	ldr	r2, [r1, #0]
 80145a2:	8968      	ldrh	r0, [r5, #10]
 80145a4:	f8c4 2026 	str.w	r2, [r4, #38]	@ 0x26
 80145a8:	684a      	ldr	r2, [r1, #4]
 80145aa:	84a0      	strh	r0, [r4, #36]	@ 0x24
 80145ac:	f884 e02e 	strb.w	lr, [r4, #46]	@ 0x2e
 80145b0:	f8c4 202a 	str.w	r2, [r4, #42]	@ 0x2a
 80145b4:	7a0a      	ldrb	r2, [r1, #8]
 80145b6:	f884 202f 	strb.w	r2, [r4, #47]	@ 0x2f
 80145ba:	f8b5 2044 	ldrh.w	r2, [r5, #68]	@ 0x44
 80145be:	8622      	strh	r2, [r4, #48]	@ 0x30
 80145c0:	8c2a      	ldrh	r2, [r5, #32]
 80145c2:	86a2      	strh	r2, [r4, #52]	@ 0x34
 80145c4:	8663      	strh	r3, [r4, #50]	@ 0x32
 80145c6:	7a0b      	ldrb	r3, [r1, #8]
 80145c8:	079b      	lsls	r3, r3, #30
 80145ca:	bf41      	itttt	mi
 80145cc:	f240 4302 	movwmi	r3, #1026	@ 0x402
 80145d0:	86e3      	strhmi	r3, [r4, #54]	@ 0x36
 80145d2:	f648 4305 	movwmi	r3, #35845	@ 0x8c05
 80145d6:	8723      	strhmi	r3, [r4, #56]	@ 0x38
 80145d8:	4b2f      	ldr	r3, [pc, #188]	@ (8014698 <net::send_package(net::tcb const*, net::SendInfo const&)+0x15c>)
 80145da:	bf48      	it	mi
 80145dc:	4a2f      	ldrmi	r2, [pc, #188]	@ (801469c <net::send_package(net::tcb const*, net::SendInfo const&)+0x160>)
 80145de:	681b      	ldr	r3, [r3, #0]
 80145e0:	bf58      	it	pl
 80145e2:	4a2f      	ldrpl	r2, [pc, #188]	@ (80146a0 <net::send_package(net::tcb const*, net::SendInfo const&)+0x164>)
 80145e4:	ba1b      	rev	r3, r3
 80145e6:	6053      	str	r3, [r2, #4]
 80145e8:	4b2e      	ldr	r3, [pc, #184]	@ (80146a4 <net::send_package(net::tcb const*, net::SendInfo const&)+0x168>)
 80145ea:	6013      	str	r3, [r2, #0]
 80145ec:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80145ee:	6093      	str	r3, [r2, #8]
 80145f0:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80145f2:	b18b      	cbz	r3, 8014618 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80145f4:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 80145f6:	b179      	cbz	r1, 8014618 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 80145f8:	781b      	ldrb	r3, [r3, #0]
 80145fa:	7313      	strb	r3, [r2, #12]
 80145fc:	8fab      	ldrh	r3, [r5, #60]	@ 0x3c
 80145fe:	2b01      	cmp	r3, #1
 8014600:	f102 020d 	add.w	r2, r2, #13
 8014604:	d908      	bls.n	8014618 <net::send_package(net::tcb const*, net::SendInfo const&)+0xdc>
 8014606:	2301      	movs	r3, #1
 8014608:	6ba9      	ldr	r1, [r5, #56]	@ 0x38
 801460a:	5cc9      	ldrb	r1, [r1, r3]
 801460c:	f802 1b01 	strb.w	r1, [r2], #1
 8014610:	8fa9      	ldrh	r1, [r5, #60]	@ 0x3c
 8014612:	3301      	adds	r3, #1
 8014614:	4299      	cmp	r1, r3
 8014616:	dcf7      	bgt.n	8014608 <net::send_package(net::tcb const*, net::SendInfo const&)+0xcc>
 8014618:	8c63      	ldrh	r3, [r4, #34]	@ 0x22
 801461a:	481d      	ldr	r0, [pc, #116]	@ (8014690 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 801461c:	ba5b      	rev16	r3, r3
 801461e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8014620:	8ca3      	ldrh	r3, [r4, #36]	@ 0x24
 8014622:	ba5b      	rev16	r3, r3
 8014624:	84a3      	strh	r3, [r4, #36]	@ 0x24
 8014626:	f7ff ff69 	bl	80144fc <net::_bswap32(t_tcp*)>
 801462a:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 801462c:	ba5b      	rev16	r3, r3
 801462e:	8623      	strh	r3, [r4, #48]	@ 0x30
 8014630:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8014632:	f100 0816 	add.w	r8, r0, #22
 8014636:	ba5b      	rev16	r3, r3
 8014638:	86a3      	strh	r3, [r4, #52]	@ 0x34
 801463a:	4642      	mov	r2, r8
 801463c:	ab01      	add	r3, sp, #4
 801463e:	f852 1b04 	ldr.w	r1, [r2], #4
 8014642:	f843 1b04 	str.w	r1, [r3], #4
 8014646:	a904      	add	r1, sp, #16
 8014648:	428b      	cmp	r3, r1
 801464a:	d1f8      	bne.n	801463e <net::send_package(net::tcb const*, net::SendInfo const&)+0x102>
 801464c:	682b      	ldr	r3, [r5, #0]
 801464e:	f8c4 3016 	str.w	r3, [r4, #22]
 8014652:	686b      	ldr	r3, [r5, #4]
 8014654:	f8c4 301a 	str.w	r3, [r4, #26]
 8014658:	b2b1      	uxth	r1, r6
 801465a:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 801465e:	4812      	ldr	r0, [pc, #72]	@ (80146a8 <net::send_package(net::tcb const*, net::SendInfo const&)+0x16c>)
 8014660:	83e3      	strh	r3, [r4, #30]
 8014662:	ba7f      	rev16	r7, r7
 8014664:	310c      	adds	r1, #12
 8014666:	8427      	strh	r7, [r4, #32]
 8014668:	f7ff fe16 	bl	8014298 <net::net_chksum(void const*, unsigned long)>
 801466c:	ab01      	add	r3, sp, #4
 801466e:	4605      	mov	r5, r0
 8014670:	f853 2b04 	ldr.w	r2, [r3], #4
 8014674:	f848 2b04 	str.w	r2, [r8], #4
 8014678:	aa04      	add	r2, sp, #16
 801467a:	4293      	cmp	r3, r2
 801467c:	d1f8      	bne.n	8014670 <net::send_package(net::tcb const*, net::SendInfo const&)+0x134>
 801467e:	4804      	ldr	r0, [pc, #16]	@ (8014690 <net::send_package(net::tcb const*, net::SendInfo const&)+0x154>)
 8014680:	8665      	strh	r5, [r4, #50]	@ 0x32
 8014682:	f106 0122 	add.w	r1, r6, #34	@ 0x22
 8014686:	b004      	add	sp, #16
 8014688:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801468c:	f000 be28 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8014690:	100083b0 			@ <UNDEFINED> instruction: 0x100083b0
 8014694:	1000899c 	mulne	r0, ip, r9
 8014698:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 801469c:	100083ea 	andne	r8, r0, sl, ror #7
 80146a0:	100083e6 	andne	r8, r0, r6, ror #7
 80146a4:	0a080101 	beq	8214ab0 <_sidata+0x1f58e8>
 80146a8:	100083c6 	andne	r8, r0, r6, asr #7

080146ac <net::send_reset(t_tcp*, net::tcb const*)>:
 80146ac:	f890 202f 	ldrb.w	r2, [r0, #47]	@ 0x2f
 80146b0:	0753      	lsls	r3, r2, #29
 80146b2:	d42d      	bmi.n	8014710 <net::send_reset(t_tcp*, net::tcb const*)+0x64>
 80146b4:	b500      	push	{lr}
 80146b6:	b085      	sub	sp, #20
 80146b8:	4603      	mov	r3, r0
 80146ba:	4608      	mov	r0, r1
 80146bc:	2104      	movs	r1, #4
 80146be:	f88d 100c 	strb.w	r1, [sp, #12]
 80146c2:	f012 0110 	ands.w	r1, r2, #16
 80146c6:	d119      	bne.n	80146fc <net::send_reset(t_tcp*, net::tcb const*)+0x50>
 80146c8:	f04f 0c14 	mov.w	ip, #20
 80146cc:	9101      	str	r1, [sp, #4]
 80146ce:	f88d c00c 	strb.w	ip, [sp, #12]
 80146d2:	f3c2 0140 	ubfx	r1, r2, #1, #1
 80146d6:	07d2      	lsls	r2, r2, #31
 80146d8:	f103 0226 	add.w	r2, r3, #38	@ 0x26
 80146dc:	bf48      	it	mi
 80146de:	3101      	addmi	r1, #1
 80146e0:	0792      	lsls	r2, r2, #30
 80146e2:	bf0c      	ite	eq
 80146e4:	f8d3 3026 	ldreq.w	r3, [r3, #38]	@ 0x26
 80146e8:	f8d3 3026 	ldrne.w	r3, [r3, #38]	@ 0x26
 80146ec:	440b      	add	r3, r1
 80146ee:	a901      	add	r1, sp, #4
 80146f0:	9302      	str	r3, [sp, #8]
 80146f2:	f7ff ff23 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 80146f6:	b005      	add	sp, #20
 80146f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80146fc:	f103 012a 	add.w	r1, r3, #42	@ 0x2a
 8014700:	0789      	lsls	r1, r1, #30
 8014702:	bf0c      	ite	eq
 8014704:	f8d3 102a 	ldreq.w	r1, [r3, #42]	@ 0x2a
 8014708:	f8d3 102a 	ldrne.w	r1, [r3, #42]	@ 0x2a
 801470c:	9101      	str	r1, [sp, #4]
 801470e:	e7e0      	b.n	80146d2 <net::send_reset(t_tcp*, net::tcb const*)+0x26>
 8014710:	4770      	bx	lr
 8014712:	bf00      	nop

08014714 <net::scan_options(t_tcp*, net::tcb*, long)>:
 8014714:	f100 0322 	add.w	r3, r0, #34	@ 0x22
 8014718:	441a      	add	r2, r3
 801471a:	f100 0c3c 	add.w	ip, r0, #60	@ 0x3c
 801471e:	4562      	cmp	r2, ip
 8014720:	d349      	bcc.n	80147b6 <net::scan_options(t_tcp*, net::tcb*, long)+0xa2>
 8014722:	b530      	push	{r4, r5, lr}
 8014724:	f100 0336 	add.w	r3, r0, #54	@ 0x36
 8014728:	f893 c000 	ldrb.w	ip, [r3]
 801472c:	f1bc 0f08 	cmp.w	ip, #8
 8014730:	d820      	bhi.n	8014774 <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 8014732:	e8df f00c 	tbb	[pc, ip]
 8014736:	1f052726 	svcne	0x00052726
 801473a:	1f1f1f1f 	svcne	0x001f1f1f
 801473e:	f8930029 			@ <UNDEFINED> instruction: 0xf8930029
 8014742:	c001      	stmia	r0!, {r0}
 8014744:	f1bc 0f04 	cmp.w	ip, #4
 8014748:	d116      	bne.n	8014778 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801474a:	f103 0e04 	add.w	lr, r3, #4
 801474e:	4572      	cmp	r2, lr
 8014750:	d312      	bcc.n	8014778 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8014752:	f8b3 c002 	ldrh.w	ip, [r3, #2]
 8014756:	fa9c fc9c 	rev16.w	ip, ip
 801475a:	fa1f fc8c 	uxth.w	ip, ip
 801475e:	f10c 0c14 	add.w	ip, ip, #20
 8014762:	f240 5e8c 	movw	lr, #1420	@ 0x58c
 8014766:	45f4      	cmp	ip, lr
 8014768:	bfa8      	it	ge
 801476a:	46f4      	movge	ip, lr
 801476c:	f1ac 0c14 	sub.w	ip, ip, #20
 8014770:	f8a1 c034 	strh.w	ip, [r1, #52]	@ 0x34
 8014774:	f893 c001 	ldrb.w	ip, [r3, #1]
 8014778:	4463      	add	r3, ip
 801477a:	f103 0c06 	add.w	ip, r3, #6
 801477e:	4562      	cmp	r2, ip
 8014780:	d2d2      	bcs.n	8014728 <net::scan_options(t_tcp*, net::tcb*, long)+0x14>
 8014782:	bd30      	pop	{r4, r5, pc}
 8014784:	3301      	adds	r3, #1
 8014786:	e7f8      	b.n	801477a <net::scan_options(t_tcp*, net::tcb*, long)+0x66>
 8014788:	f893 c001 	ldrb.w	ip, [r3, #1]
 801478c:	f1bc 0f0a 	cmp.w	ip, #10
 8014790:	d1f2      	bne.n	8014778 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 8014792:	f103 0e0a 	add.w	lr, r3, #10
 8014796:	4572      	cmp	r2, lr
 8014798:	d3ee      	bcc.n	8014778 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 801479a:	1c9c      	adds	r4, r3, #2
 801479c:	f890 e02f 	ldrb.w	lr, [r0, #47]	@ 0x2f
 80147a0:	07a4      	lsls	r4, r4, #30
 80147a2:	bf0c      	ite	eq
 80147a4:	f8d3 4002 	ldreq.w	r4, [r3, #2]
 80147a8:	f8d3 4002 	ldrne.w	r4, [r3, #2]
 80147ac:	f01e 0f02 	tst.w	lr, #2
 80147b0:	d002      	beq.n	80147b8 <net::scan_options(t_tcp*, net::tcb*, long)+0xa4>
 80147b2:	630c      	str	r4, [r1, #48]	@ 0x30
 80147b4:	e7de      	b.n	8014774 <net::scan_options(t_tcp*, net::tcb*, long)+0x60>
 80147b6:	4770      	bx	lr
 80147b8:	6b0d      	ldr	r5, [r1, #48]	@ 0x30
 80147ba:	fa95 fe85 	rev.w	lr, r5
 80147be:	ba25      	rev	r5, r4
 80147c0:	4575      	cmp	r5, lr
 80147c2:	d9d9      	bls.n	8014778 <net::scan_options(t_tcp*, net::tcb*, long)+0x64>
 80147c4:	e7f5      	b.n	80147b2 <net::scan_options(t_tcp*, net::tcb*, long)+0x9e>
 80147c6:	bf00      	nop

080147c8 <net::tcp_shutdown()>:
 80147c8:	4770      	bx	lr
 80147ca:	bf00      	nop

080147cc <net::tcp_begin(unsigned short)>:
 80147cc:	4b16      	ldr	r3, [pc, #88]	@ (8014828 <net::tcp_begin(unsigned short)+0x5c>)
 80147ce:	f8b3 1d04 	ldrh.w	r1, [r3, #3332]	@ 0xd04
 80147d2:	4281      	cmp	r1, r0
 80147d4:	d025      	beq.n	8014822 <net::tcp_begin(unsigned short)+0x56>
 80147d6:	bb09      	cbnz	r1, 801481c <net::tcp_begin(unsigned short)+0x50>
 80147d8:	b530      	push	{r4, r5, lr}
 80147da:	4d14      	ldr	r5, [pc, #80]	@ (801482c <net::tcp_begin(unsigned short)+0x60>)
 80147dc:	f8a3 0d04 	strh.w	r0, [r3, #3332]	@ 0xd04
 80147e0:	f103 0250 	add.w	r2, r3, #80	@ 0x50
 80147e4:	f503 7c0c 	add.w	ip, r3, #560	@ 0x230
 80147e8:	f640 3418 	movw	r4, #2840	@ 0xb18
 80147ec:	f04f 0e01 	mov.w	lr, #1
 80147f0:	f1a2 0350 	sub.w	r3, r2, #80	@ 0x50
 80147f4:	f843 1b04 	str.w	r1, [r3], #4
 80147f8:	4293      	cmp	r3, r2
 80147fa:	d1fb      	bne.n	80147f4 <net::tcp_begin(unsigned short)+0x28>
 80147fc:	682b      	ldr	r3, [r5, #0]
 80147fe:	f822 0c48 	strh.w	r0, [r2, #-72]
 8014802:	f822 4c0c 	strh.w	r4, [r2, #-12]
 8014806:	f802 ec04 	strb.w	lr, [r2, #-4]
 801480a:	e942 330f 	strd	r3, r3, [r2, #-60]	@ 0x3c
 801480e:	e942 330a 	strd	r3, r3, [r2, #-40]	@ 0x28
 8014812:	3250      	adds	r2, #80	@ 0x50
 8014814:	4562      	cmp	r2, ip
 8014816:	d1eb      	bne.n	80147f0 <net::tcp_begin(unsigned short)+0x24>
 8014818:	2000      	movs	r0, #0
 801481a:	bd30      	pop	{r4, r5, pc}
 801481c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8014820:	4770      	bx	lr
 8014822:	2000      	movs	r0, #0
 8014824:	4770      	bx	lr
 8014826:	bf00      	nop
 8014828:	100089a0 	andne	r8, r0, r0, lsr #19
 801482c:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

08014830 <net::tcp_read(long, unsigned char const**, unsigned long&)>:
 8014830:	b570      	push	{r4, r5, r6, lr}
 8014832:	4b1a      	ldr	r3, [pc, #104]	@ (801489c <net::tcp_read(long, unsigned char const**, unsigned long&)+0x6c>)
 8014834:	f640 5408 	movw	r4, #3336	@ 0xd08
 8014838:	fb04 f000 	mul.w	r0, r4, r0
 801483c:	eb03 0c00 	add.w	ip, r3, r0
 8014840:	f8bc e1e2 	ldrh.w	lr, [ip, #482]	@ 0x1e2
 8014844:	f8bc 41e0 	ldrh.w	r4, [ip, #480]	@ 0x1e0
 8014848:	4574      	cmp	r4, lr
 801484a:	bf08      	it	eq
 801484c:	2000      	moveq	r0, #0
 801484e:	d100      	bne.n	8014852 <net::tcp_read(long, unsigned char const**, unsigned long&)+0x22>
 8014850:	bd70      	pop	{r4, r5, r6, pc}
 8014852:	f44f 64b2 	mov.w	r4, #1424	@ 0x590
 8014856:	fb04 fe0e 	mul.w	lr, r4, lr
 801485a:	eb0e 0500 	add.w	r5, lr, r0
 801485e:	441d      	add	r5, r3
 8014860:	f500 76f2 	add.w	r6, r0, #484	@ 0x1e4
 8014864:	f8b5 4772 	ldrh.w	r4, [r5, #1906]	@ 0x772
 8014868:	6014      	str	r4, [r2, #0]
 801486a:	4476      	add	r6, lr
 801486c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8014870:	441e      	add	r6, r3
 8014872:	eb00 1004 	add.w	r0, r0, r4, lsl #4
 8014876:	600e      	str	r6, [r1, #0]
 8014878:	4403      	add	r3, r0
 801487a:	f8bc 21e2 	ldrh.w	r2, [ip, #482]	@ 0x1e2
 801487e:	f8b3 1044 	ldrh.w	r1, [r3, #68]	@ 0x44
 8014882:	f8b5 0770 	ldrh.w	r0, [r5, #1904]	@ 0x770
 8014886:	3201      	adds	r2, #1
 8014888:	f201 518c 	addw	r1, r1, #1420	@ 0x58c
 801488c:	f002 0201 	and.w	r2, r2, #1
 8014890:	f8a3 1044 	strh.w	r1, [r3, #68]	@ 0x44
 8014894:	f8ac 21e2 	strh.w	r2, [ip, #482]	@ 0x1e2
 8014898:	bd70      	pop	{r4, r5, r6, pc}
 801489a:	bf00      	nop
 801489c:	100089a0 	andne	r8, r0, r0, lsr #19

080148a0 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)>:
 80148a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148a4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80148a8:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 801493c <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x9c>
 80148ac:	f640 5408 	movw	r4, #3336	@ 0xd08
 80148b0:	011b      	lsls	r3, r3, #4
 80148b2:	fb04 3700 	mla	r7, r4, r0, r3
 80148b6:	b085      	sub	sp, #20
 80148b8:	eb08 0907 	add.w	r9, r8, r7
 80148bc:	2a00      	cmp	r2, #0
 80148be:	d038      	beq.n	8014932 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 80148c0:	f107 0b10 	add.w	fp, r7, #16
 80148c4:	468a      	mov	sl, r1
 80148c6:	4616      	mov	r6, r2
 80148c8:	44c3      	add	fp, r8
 80148ca:	e01e      	b.n	801490a <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 80148cc:	f8c5 a038 	str.w	sl, [r5, #56]	@ 0x38
 80148d0:	87ac      	strh	r4, [r5, #60]	@ 0x3c
 80148d2:	f8db 3008 	ldr.w	r3, [fp, #8]
 80148d6:	f8db 2030 	ldr.w	r2, [fp, #48]	@ 0x30
 80148da:	4566      	cmp	r6, ip
 80148dc:	bf8c      	ite	hi
 80148de:	f04f 0c10 	movhi.w	ip, #16
 80148e2:	f04f 0c18 	movls.w	ip, #24
 80148e6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80148ea:	f88d c00c 	strb.w	ip, [sp, #12]
 80148ee:	f7ff fe25 	bl	801453c <net::send_package(net::tcb const*, net::SendInfo const&)>
 80148f2:	e9d5 2306 	ldrd	r2, r3, [r5, #24]
 80148f6:	2100      	movs	r1, #0
 80148f8:	4422      	add	r2, r4
 80148fa:	1b1b      	subs	r3, r3, r4
 80148fc:	1b36      	subs	r6, r6, r4
 80148fe:	e9c5 2306 	strd	r2, r3, [r5, #24]
 8014902:	63a9      	str	r1, [r5, #56]	@ 0x38
 8014904:	87a9      	strh	r1, [r5, #60]	@ 0x3c
 8014906:	44a2      	add	sl, r4
 8014908:	d013      	beq.n	8014932 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x92>
 801490a:	eb08 0507 	add.w	r5, r8, r7
 801490e:	f240 548c 	movw	r4, #1420	@ 0x58c
 8014912:	42b4      	cmp	r4, r6
 8014914:	69eb      	ldr	r3, [r5, #28]
 8014916:	bf28      	it	cs
 8014918:	4634      	movcs	r4, r6
 801491a:	429c      	cmp	r4, r3
 801491c:	f240 5c8b 	movw	ip, #1419	@ 0x58b
 8014920:	a901      	add	r1, sp, #4
 8014922:	4648      	mov	r0, r9
 8014924:	d9d2      	bls.n	80148cc <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x2c>
 8014926:	4804      	ldr	r0, [pc, #16]	@ (8014938 <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x98>)
 8014928:	f003 f932 	bl	8017b90 <console_error>
 801492c:	1b36      	subs	r6, r6, r4
 801492e:	44a2      	add	sl, r4
 8014930:	d1eb      	bne.n	801490a <net::tcp_write(long, unsigned char const*, unsigned long, unsigned long)+0x6a>
 8014932:	b005      	add	sp, #20
 8014934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014938:	0801bfc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 801493c:	100089a0 	andne	r8, r0, r0, lsr #19

08014940 <net::udp_set_ip()>:
 8014940:	4a02      	ldr	r2, [pc, #8]	@ (801494c <net::udp_set_ip()+0xc>)
 8014942:	4b03      	ldr	r3, [pc, #12]	@ (8014950 <net::udp_set_ip()+0x10>)
 8014944:	6812      	ldr	r2, [r2, #0]
 8014946:	f8c3 201a 	str.w	r2, [r3, #26]
 801494a:	4770      	bx	lr
 801494c:	20002954 	andcs	r2, r0, r4, asr r9
 8014950:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4

08014954 <net::udp_begin(unsigned short)>:
 8014954:	4a08      	ldr	r2, [pc, #32]	@ (8014978 <net::udp_begin(unsigned short)+0x24>)
 8014956:	4601      	mov	r1, r0
 8014958:	2000      	movs	r0, #0
 801495a:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801495e:	428b      	cmp	r3, r1
 8014960:	d005      	beq.n	801496e <net::udp_begin(unsigned short)+0x1a>
 8014962:	b12b      	cbz	r3, 8014970 <net::udp_begin(unsigned short)+0x1c>
 8014964:	3001      	adds	r0, #1
 8014966:	2808      	cmp	r0, #8
 8014968:	d1f7      	bne.n	801495a <net::udp_begin(unsigned short)+0x6>
 801496a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801496e:	4770      	bx	lr
 8014970:	4b02      	ldr	r3, [pc, #8]	@ (801497c <net::udp_begin(unsigned short)+0x28>)
 8014972:	f823 1010 	strh.w	r1, [r3, r0, lsl #1]
 8014976:	4770      	bx	lr
 8014978:	1000cafe 	strdne	ip, [r0], -lr
 801497c:	1000cb00 	andne	ip, r0, r0, lsl #22

08014980 <net::udp_end(unsigned short)>:
 8014980:	4a0d      	ldr	r2, [pc, #52]	@ (80149b8 <net::udp_end(unsigned short)+0x38>)
 8014982:	b508      	push	{r3, lr}
 8014984:	2300      	movs	r3, #0
 8014986:	f832 1f02 	ldrh.w	r1, [r2, #2]!
 801498a:	4281      	cmp	r1, r0
 801498c:	d008      	beq.n	80149a0 <net::udp_end(unsigned short)+0x20>
 801498e:	3301      	adds	r3, #1
 8014990:	2b08      	cmp	r3, #8
 8014992:	d1f8      	bne.n	8014986 <net::udp_end(unsigned short)+0x6>
 8014994:	4809      	ldr	r0, [pc, #36]	@ (80149bc <net::udp_end(unsigned short)+0x3c>)
 8014996:	f003 f8fb 	bl	8017b90 <console_error>
 801499a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801499e:	bd08      	pop	{r3, pc}
 80149a0:	4a07      	ldr	r2, [pc, #28]	@ (80149c0 <net::udp_end(unsigned short)+0x40>)
 80149a2:	4908      	ldr	r1, [pc, #32]	@ (80149c4 <net::udp_end(unsigned short)+0x44>)
 80149a4:	f240 50cc 	movw	r0, #1484	@ 0x5cc
 80149a8:	fb00 2203 	mla	r2, r0, r3, r2
 80149ac:	2000      	movs	r0, #0
 80149ae:	f821 0013 	strh.w	r0, [r1, r3, lsl #1]
 80149b2:	6050      	str	r0, [r2, #4]
 80149b4:	bd08      	pop	{r3, pc}
 80149b6:	bf00      	nop
 80149b8:	1000cafe 	strdne	ip, [r0], -lr
 80149bc:	0801bff4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 80149c0:	10009ca0 	andne	r9, r0, r0, lsr #25
 80149c4:	1000cb00 	andne	ip, r0, r0, lsl #22

080149c8 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)>:
 80149c8:	b510      	push	{r4, lr}
 80149ca:	f240 5ccc 	movw	ip, #1484	@ 0x5cc
 80149ce:	4c0c      	ldr	r4, [pc, #48]	@ (8014a00 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x38>)
 80149d0:	fb0c fc00 	mul.w	ip, ip, r0
 80149d4:	eb04 0e0c 	add.w	lr, r4, ip
 80149d8:	f8de 0004 	ldr.w	r0, [lr, #4]
 80149dc:	b900      	cbnz	r0, 80149e0 <net::udp_recv2(int, unsigned char const**, unsigned long*, unsigned short*)+0x18>
 80149de:	bd10      	pop	{r4, pc}
 80149e0:	f10c 000a 	add.w	r0, ip, #10
 80149e4:	4420      	add	r0, r4
 80149e6:	6008      	str	r0, [r1, #0]
 80149e8:	f854 100c 	ldr.w	r1, [r4, ip]
 80149ec:	6011      	str	r1, [r2, #0]
 80149ee:	f8be 2008 	ldrh.w	r2, [lr, #8]
 80149f2:	801a      	strh	r2, [r3, #0]
 80149f4:	2300      	movs	r3, #0
 80149f6:	f8de 0004 	ldr.w	r0, [lr, #4]
 80149fa:	f8ce 3004 	str.w	r3, [lr, #4]
 80149fe:	bd10      	pop	{r4, pc}
 8014a00:	10009ca0 	andne	r9, r0, r0, lsr #25

08014a04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)>:
 8014a04:	b570      	push	{r4, r5, r6, lr}
 8014a06:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8014a0a:	4e3d      	ldr	r6, [pc, #244]	@ (8014b00 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xfc>)
 8014a0c:	fa94 fe94 	rev16.w	lr, r4
 8014a10:	4c3c      	ldr	r4, [pc, #240]	@ (8014b04 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x100>)
 8014a12:	f8b6 c000 	ldrh.w	ip, [r6]
 8014a16:	f834 5010 	ldrh.w	r5, [r4, r0, lsl #1]
 8014a1a:	4c3b      	ldr	r4, [pc, #236]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014a1c:	b290      	uxth	r0, r2
 8014a1e:	f8a4 c012 	strh.w	ip, [r4, #18]
 8014a22:	f10c 0c01 	add.w	ip, ip, #1
 8014a26:	f8a6 c000 	strh.w	ip, [r6]
 8014a2a:	f100 0c1c 	add.w	ip, r0, #28
 8014a2e:	3008      	adds	r0, #8
 8014a30:	ba40      	rev16	r0, r0
 8014a32:	ba6d      	rev16	r5, r5
 8014a34:	fa9c fc9c 	rev16.w	ip, ip
 8014a38:	84e0      	strh	r0, [r4, #38]	@ 0x26
 8014a3a:	f5b2 6fb8 	cmp.w	r2, #1472	@ 0x5c0
 8014a3e:	f04f 0000 	mov.w	r0, #0
 8014a42:	8465      	strh	r5, [r4, #34]	@ 0x22
 8014a44:	f8a4 e024 	strh.w	lr, [r4, #36]	@ 0x24
 8014a48:	4615      	mov	r5, r2
 8014a4a:	f8a4 c010 	strh.w	ip, [r4, #16]
 8014a4e:	bf28      	it	cs
 8014a50:	f44f 65b8 	movcs.w	r5, #1472	@ 0x5c0
 8014a54:	8320      	strh	r0, [r4, #24]
 8014a56:	b14a      	cbz	r2, 8014a6c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x68>
 8014a58:	eb01 0e05 	add.w	lr, r1, r5
 8014a5c:	f104 002a 	add.w	r0, r4, #42	@ 0x2a
 8014a60:	f811 cb01 	ldrb.w	ip, [r1], #1
 8014a64:	f800 cb01 	strb.w	ip, [r0], #1
 8014a68:	4571      	cmp	r1, lr
 8014a6a:	d1f9      	bne.n	8014a60 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x5c>
 8014a6c:	1c5a      	adds	r2, r3, #1
 8014a6e:	f105 012a 	add.w	r1, r5, #42	@ 0x2a
 8014a72:	d02e      	beq.n	8014ad2 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xce>
 8014a74:	4a25      	ldr	r2, [pc, #148]	@ (8014b0c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x108>)
 8014a76:	6812      	ldr	r2, [r2, #0]
 8014a78:	439a      	bics	r2, r3
 8014a7a:	d01c      	beq.n	8014ab6 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb2>
 8014a7c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8014a80:	2ae0      	cmp	r2, #224	@ 0xe0
 8014a82:	d136      	bne.n	8014af2 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xee>
 8014a84:	4822      	ldr	r0, [pc, #136]	@ (8014b10 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x10c>)
 8014a86:	f3c3 2206 	ubfx	r2, r3, #8, #7
 8014a8a:	70c2      	strb	r2, [r0, #3]
 8014a8c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8014a90:	7102      	strb	r2, [r0, #4]
 8014a92:	f3c3 6207 	ubfx	r2, r3, #24, #8
 8014a96:	7142      	strb	r2, [r0, #5]
 8014a98:	4a1b      	ldr	r2, [pc, #108]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014a9a:	1d85      	adds	r5, r0, #6
 8014a9c:	f810 cb01 	ldrb.w	ip, [r0], #1
 8014aa0:	f802 cb01 	strb.w	ip, [r2], #1
 8014aa4:	42a8      	cmp	r0, r5
 8014aa6:	d1f9      	bne.n	8014a9c <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x98>
 8014aa8:	f8c4 301e 	str.w	r3, [r4, #30]
 8014aac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014ab0:	4815      	ldr	r0, [pc, #84]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014ab2:	f000 bc15 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8014ab6:	4a14      	ldr	r2, [pc, #80]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014ab8:	25ff      	movs	r5, #255	@ 0xff
 8014aba:	1d90      	adds	r0, r2, #6
 8014abc:	f802 5b01 	strb.w	r5, [r2], #1
 8014ac0:	4282      	cmp	r2, r0
 8014ac2:	d1fb      	bne.n	8014abc <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xb8>
 8014ac4:	f8c4 301e 	str.w	r3, [r4, #30]
 8014ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014acc:	480e      	ldr	r0, [pc, #56]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014ace:	f000 bc07 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8014ad2:	4b0d      	ldr	r3, [pc, #52]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014ad4:	22ff      	movs	r2, #255	@ 0xff
 8014ad6:	1d98      	adds	r0, r3, #6
 8014ad8:	f803 2b01 	strb.w	r2, [r3], #1
 8014adc:	4283      	cmp	r3, r0
 8014ade:	d1fb      	bne.n	8014ad8 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0xd4>
 8014ae0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8014ae4:	f8c4 301e 	str.w	r3, [r4, #30]
 8014ae8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014aec:	4806      	ldr	r0, [pc, #24]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014aee:	f000 bbf7 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 8014af2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014af6:	4804      	ldr	r0, [pc, #16]	@ (8014b08 <net::udp_send(int, unsigned char const*, unsigned long, unsigned long, unsigned short)+0x104>)
 8014af8:	461a      	mov	r2, r3
 8014afa:	f000 be27 	b.w	801574c <net::arp_send(t_udp*, unsigned long, unsigned long)>
 8014afe:	bf00      	nop
 8014b00:	100096b0 			@ <UNDEFINED> instruction: 0x100096b0
 8014b04:	1000cb00 	andne	ip, r0, r0, lsl #22
 8014b08:	100096b4 			@ <UNDEFINED> instruction: 0x100096b4
 8014b0c:	2000293c 	andcs	r2, r0, ip, lsr r9
 8014b10:	100096a8 	andne	r9, r0, r8, lsr #13

08014b14 <NetworkParamsStore::Copy(networkparams::Params*)>:
 8014b14:	b507      	push	{r0, r1, r2, lr}
 8014b16:	2301      	movs	r3, #1
 8014b18:	2100      	movs	r1, #0
 8014b1a:	e9cd 1300 	strd	r1, r3, [sp]
 8014b1e:	4602      	mov	r2, r0
 8014b20:	4803      	ldr	r0, [pc, #12]	@ (8014b30 <NetworkParamsStore::Copy(networkparams::Params*)+0x1c>)
 8014b22:	235e      	movs	r3, #94	@ 0x5e
 8014b24:	6800      	ldr	r0, [r0, #0]
 8014b26:	f001 fc79 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8014b2a:	b003      	add	sp, #12
 8014b2c:	f85d fb04 	ldr.w	pc, [sp], #4
 8014b30:	20002a00 	andcs	r2, r0, r0, lsl #20

08014b34 <NetworkParams::NetworkParams()>:
 8014b34:	b510      	push	{r4, lr}
 8014b36:	225e      	movs	r2, #94	@ 0x5e
 8014b38:	4604      	mov	r4, r0
 8014b3a:	2100      	movs	r1, #0
 8014b3c:	f004 ffe8 	bl	8019b10 <memset>
 8014b40:	2301      	movs	r3, #1
 8014b42:	7523      	strb	r3, [r4, #20]
 8014b44:	4620      	mov	r0, r4
 8014b46:	bd10      	pop	{r4, pc}

08014b48 <NetworkParams::Load()>:
 8014b48:	b508      	push	{r3, lr}
 8014b4a:	2200      	movs	r2, #0
 8014b4c:	7002      	strb	r2, [r0, #0]
 8014b4e:	7042      	strb	r2, [r0, #1]
 8014b50:	7082      	strb	r2, [r0, #2]
 8014b52:	70c2      	strb	r2, [r0, #3]
 8014b54:	f7ff ffde 	bl	8014b14 <NetworkParamsStore::Copy(networkparams::Params*)>
 8014b58:	bd08      	pop	{r3, pc}
	...

08014b5c <NetworkParams::Load(char const*, unsigned long)>:
 8014b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b5e:	2500      	movs	r5, #0
 8014b60:	b087      	sub	sp, #28
 8014b62:	4604      	mov	r4, r0
 8014b64:	460e      	mov	r6, r1
 8014b66:	4617      	mov	r7, r2
 8014b68:	7005      	strb	r5, [r0, #0]
 8014b6a:	7045      	strb	r5, [r0, #1]
 8014b6c:	7085      	strb	r5, [r0, #2]
 8014b6e:	70c5      	strb	r5, [r0, #3]
 8014b70:	4602      	mov	r2, r0
 8014b72:	490c      	ldr	r1, [pc, #48]	@ (8014ba4 <NetworkParams::Load(char const*, unsigned long)+0x48>)
 8014b74:	a804      	add	r0, sp, #16
 8014b76:	f002 f92d 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8014b7a:	463a      	mov	r2, r7
 8014b7c:	4631      	mov	r1, r6
 8014b7e:	a804      	add	r0, sp, #16
 8014b80:	f002 f92c 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 8014b84:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8014b88:	235e      	movs	r3, #94	@ 0x5e
 8014b8a:	4807      	ldr	r0, [pc, #28]	@ (8014ba8 <NetworkParams::Load(char const*, unsigned long)+0x4c>)
 8014b8c:	9300      	str	r3, [sp, #0]
 8014b8e:	462a      	mov	r2, r5
 8014b90:	4623      	mov	r3, r4
 8014b92:	4629      	mov	r1, r5
 8014b94:	6800      	ldr	r0, [r0, #0]
 8014b96:	f001 fc1b 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8014b9a:	a804      	add	r0, sp, #16
 8014b9c:	f002 f91d 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 8014ba0:	b007      	add	sp, #28
 8014ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014ba4:	08014d09 	stmdaeq	r1, {r0, r3, r8, sl, fp, lr}
 8014ba8:	20002a00 	andcs	r2, r0, r0, lsl #20

08014bac <NetworkParams::callbackFunction(char const*)>:
 8014bac:	b530      	push	{r4, r5, lr}
 8014bae:	460d      	mov	r5, r1
 8014bb0:	b085      	sub	sp, #20
 8014bb2:	4604      	mov	r4, r0
 8014bb4:	494d      	ldr	r1, [pc, #308]	@ (8014cec <NetworkParams::callbackFunction(char const*)+0x140>)
 8014bb6:	f10d 0207 	add.w	r2, sp, #7
 8014bba:	4628      	mov	r0, r5
 8014bbc:	f002 f9b9 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014bc0:	b978      	cbnz	r0, 8014be2 <NetworkParams::callbackFunction(char const*)+0x36>
 8014bc2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8014bc6:	6823      	ldr	r3, [r4, #0]
 8014bc8:	b142      	cbz	r2, 8014bdc <NetworkParams::callbackFunction(char const*)+0x30>
 8014bca:	f023 0301 	bic.w	r3, r3, #1
 8014bce:	3a00      	subs	r2, #0
 8014bd0:	bf18      	it	ne
 8014bd2:	2201      	movne	r2, #1
 8014bd4:	6023      	str	r3, [r4, #0]
 8014bd6:	7522      	strb	r2, [r4, #20]
 8014bd8:	b005      	add	sp, #20
 8014bda:	bd30      	pop	{r4, r5, pc}
 8014bdc:	f043 0301 	orr.w	r3, r3, #1
 8014be0:	e7f5      	b.n	8014bce <NetworkParams::callbackFunction(char const*)+0x22>
 8014be2:	4943      	ldr	r1, [pc, #268]	@ (8014cf0 <NetworkParams::callbackFunction(char const*)+0x144>)
 8014be4:	f10d 0207 	add.w	r2, sp, #7
 8014be8:	4628      	mov	r0, r5
 8014bea:	f002 f9a2 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014bee:	b980      	cbnz	r0, 8014c12 <NetworkParams::callbackFunction(char const*)+0x66>
 8014bf0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8014bf4:	6823      	ldr	r3, [r4, #0]
 8014bf6:	1e51      	subs	r1, r2, #1
 8014bf8:	2904      	cmp	r1, #4
 8014bfa:	bf97      	itett	ls
 8014bfc:	f443 7380 	orrls.w	r3, r3, #256	@ 0x100
 8014c00:	f423 7380 	bichi.w	r3, r3, #256	@ 0x100
 8014c04:	6023      	strls	r3, [r4, #0]
 8014c06:	f884 205d 	strbls.w	r2, [r4, #93]	@ 0x5d
 8014c0a:	bf84      	itt	hi
 8014c0c:	6023      	strhi	r3, [r4, #0]
 8014c0e:	f884 005d 	strbhi.w	r0, [r4, #93]	@ 0x5d
 8014c12:	4938      	ldr	r1, [pc, #224]	@ (8014cf4 <NetworkParams::callbackFunction(char const*)+0x148>)
 8014c14:	aa02      	add	r2, sp, #8
 8014c16:	4628      	mov	r0, r5
 8014c18:	f002 f92f 	bl	8016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8014c1c:	b9d8      	cbnz	r0, 8014c56 <NetworkParams::callbackFunction(char const*)+0xaa>
 8014c1e:	9a02      	ldr	r2, [sp, #8]
 8014c20:	6823      	ldr	r3, [r4, #0]
 8014c22:	b2d1      	uxtb	r1, r2
 8014c24:	29ac      	cmp	r1, #172	@ 0xac
 8014c26:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8014c2a:	d007      	beq.n	8014c3c <NetworkParams::callbackFunction(char const*)+0x90>
 8014c2c:	29c0      	cmp	r1, #192	@ 0xc0
 8014c2e:	d00c      	beq.n	8014c4a <NetworkParams::callbackFunction(char const*)+0x9e>
 8014c30:	290a      	cmp	r1, #10
 8014c32:	d006      	beq.n	8014c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8014c34:	2902      	cmp	r1, #2
 8014c36:	d004      	beq.n	8014c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8014c38:	b11a      	cbz	r2, 8014c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8014c3a:	e008      	b.n	8014c4e <NetworkParams::callbackFunction(char const*)+0xa2>
 8014c3c:	3810      	subs	r0, #16
 8014c3e:	280f      	cmp	r0, #15
 8014c40:	d805      	bhi.n	8014c4e <NetworkParams::callbackFunction(char const*)+0xa2>
 8014c42:	6062      	str	r2, [r4, #4]
 8014c44:	f043 0302 	orr.w	r3, r3, #2
 8014c48:	e003      	b.n	8014c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8014c4a:	28a8      	cmp	r0, #168	@ 0xa8
 8014c4c:	d0f9      	beq.n	8014c42 <NetworkParams::callbackFunction(char const*)+0x96>
 8014c4e:	f023 0302 	bic.w	r3, r3, #2
 8014c52:	6023      	str	r3, [r4, #0]
 8014c54:	e7c0      	b.n	8014bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8014c56:	4928      	ldr	r1, [pc, #160]	@ (8014cf8 <NetworkParams::callbackFunction(char const*)+0x14c>)
 8014c58:	aa02      	add	r2, sp, #8
 8014c5a:	4628      	mov	r0, r5
 8014c5c:	f002 f90d 	bl	8016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8014c60:	b970      	cbnz	r0, 8014c80 <NetworkParams::callbackFunction(char const*)+0xd4>
 8014c62:	9a02      	ldr	r2, [sp, #8]
 8014c64:	6823      	ldr	r3, [r4, #0]
 8014c66:	b142      	cbz	r2, 8014c7a <NetworkParams::callbackFunction(char const*)+0xce>
 8014c68:	ba11      	rev	r1, r2
 8014c6a:	43c8      	mvns	r0, r1
 8014c6c:	ea11 0150 	ands.w	r1, r1, r0, lsr #1
 8014c70:	d103      	bne.n	8014c7a <NetworkParams::callbackFunction(char const*)+0xce>
 8014c72:	60a2      	str	r2, [r4, #8]
 8014c74:	f043 0304 	orr.w	r3, r3, #4
 8014c78:	e7eb      	b.n	8014c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8014c7a:	f023 0304 	bic.w	r3, r3, #4
 8014c7e:	e7e8      	b.n	8014c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8014c80:	491e      	ldr	r1, [pc, #120]	@ (8014cfc <NetworkParams::callbackFunction(char const*)+0x150>)
 8014c82:	aa02      	add	r2, sp, #8
 8014c84:	4628      	mov	r0, r5
 8014c86:	f002 f8f8 	bl	8016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8014c8a:	b950      	cbnz	r0, 8014ca2 <NetworkParams::callbackFunction(char const*)+0xf6>
 8014c8c:	9a02      	ldr	r2, [sp, #8]
 8014c8e:	6823      	ldr	r3, [r4, #0]
 8014c90:	b122      	cbz	r2, 8014c9c <NetworkParams::callbackFunction(char const*)+0xf0>
 8014c92:	f043 0308 	orr.w	r3, r3, #8
 8014c96:	6023      	str	r3, [r4, #0]
 8014c98:	60e2      	str	r2, [r4, #12]
 8014c9a:	e79d      	b.n	8014bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8014c9c:	f023 0308 	bic.w	r3, r3, #8
 8014ca0:	e7d7      	b.n	8014c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8014ca2:	233f      	movs	r3, #63	@ 0x3f
 8014ca4:	9303      	str	r3, [sp, #12]
 8014ca6:	4916      	ldr	r1, [pc, #88]	@ (8014d00 <NetworkParams::callbackFunction(char const*)+0x154>)
 8014ca8:	ab03      	add	r3, sp, #12
 8014caa:	f104 0215 	add.w	r2, r4, #21
 8014cae:	4628      	mov	r0, r5
 8014cb0:	f002 f8ca 	bl	8016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>
 8014cb4:	b930      	cbnz	r0, 8014cc4 <NetworkParams::callbackFunction(char const*)+0x118>
 8014cb6:	9b03      	ldr	r3, [sp, #12]
 8014cb8:	4423      	add	r3, r4
 8014cba:	7558      	strb	r0, [r3, #21]
 8014cbc:	6823      	ldr	r3, [r4, #0]
 8014cbe:	f043 0320 	orr.w	r3, r3, #32
 8014cc2:	e7c6      	b.n	8014c52 <NetworkParams::callbackFunction(char const*)+0xa6>
 8014cc4:	490f      	ldr	r1, [pc, #60]	@ (8014d04 <NetworkParams::callbackFunction(char const*)+0x158>)
 8014cc6:	aa02      	add	r2, sp, #8
 8014cc8:	4628      	mov	r0, r5
 8014cca:	f002 f8d6 	bl	8016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>
 8014cce:	2800      	cmp	r0, #0
 8014cd0:	d182      	bne.n	8014bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8014cd2:	9a02      	ldr	r2, [sp, #8]
 8014cd4:	6823      	ldr	r3, [r4, #0]
 8014cd6:	b12a      	cbz	r2, 8014ce4 <NetworkParams::callbackFunction(char const*)+0x138>
 8014cd8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8014cdc:	6023      	str	r3, [r4, #0]
 8014cde:	f8c4 2055 	str.w	r2, [r4, #85]	@ 0x55
 8014ce2:	e779      	b.n	8014bd8 <NetworkParams::callbackFunction(char const*)+0x2c>
 8014ce4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8014ce8:	e7f8      	b.n	8014cdc <NetworkParams::callbackFunction(char const*)+0x130>
 8014cea:	bf00      	nop
 8014cec:	0801eac5 	stmdaeq	r1, {r0, r2, r6, r7, r9, fp, sp, lr, pc}
 8014cf0:	0801eab5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, fp, sp, lr, pc}
 8014cf4:	0801eaaa 	stmdaeq	r1, {r1, r3, r5, r7, r9, fp, sp, lr, pc}
 8014cf8:	0801eaa1 	stmdaeq	r1, {r0, r5, r7, r9, fp, sp, lr, pc}
 8014cfc:	0801ea91 	stmdaeq	r1, {r0, r4, r7, r9, fp, sp, lr, pc}
 8014d00:	0801ea88 	stmdaeq	r1, {r3, r7, r9, fp, sp, lr, pc}
 8014d04:	0801ea7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, fp, sp, lr, pc}

08014d08 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8014d08:	f7ff bf50 	b.w	8014bac <NetworkParams::callbackFunction(char const*)>

08014d0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)>:
 8014d0c:	b570      	push	{r4, r5, r6, lr}
 8014d0e:	4604      	mov	r4, r0
 8014d10:	b086      	sub	sp, #24
 8014d12:	4615      	mov	r5, r2
 8014d14:	461e      	mov	r6, r3
 8014d16:	2900      	cmp	r1, #0
 8014d18:	d046      	beq.n	8014da8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x9c>
 8014d1a:	225e      	movs	r2, #94	@ 0x5e
 8014d1c:	f004 fee1 	bl	8019ae2 <memmove>
 8014d20:	462a      	mov	r2, r5
 8014d22:	4d76      	ldr	r5, [pc, #472]	@ (8014efc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f0>)
 8014d24:	4976      	ldr	r1, [pc, #472]	@ (8014f00 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f4>)
 8014d26:	4633      	mov	r3, r6
 8014d28:	a803      	add	r0, sp, #12
 8014d2a:	f001 ff7d 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8014d2e:	692a      	ldr	r2, [r5, #16]
 8014d30:	4974      	ldr	r1, [pc, #464]	@ (8014f04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1f8>)
 8014d32:	2300      	movs	r3, #0
 8014d34:	a803      	add	r0, sp, #12
 8014d36:	f001 ffb9 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8014d3a:	6823      	ldr	r3, [r4, #0]
 8014d3c:	0799      	lsls	r1, r3, #30
 8014d3e:	bf5c      	itt	pl
 8014d40:	682a      	ldrpl	r2, [r5, #0]
 8014d42:	6062      	strpl	r2, [r4, #4]
 8014d44:	075a      	lsls	r2, r3, #29
 8014d46:	bf5c      	itt	pl
 8014d48:	686a      	ldrpl	r2, [r5, #4]
 8014d4a:	60a2      	strpl	r2, [r4, #8]
 8014d4c:	071e      	lsls	r6, r3, #28
 8014d4e:	bf5c      	itt	pl
 8014d50:	68aa      	ldrpl	r2, [r5, #8]
 8014d52:	60e2      	strpl	r2, [r4, #12]
 8014d54:	0698      	lsls	r0, r3, #26
 8014d56:	d412      	bmi.n	8014d7e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x72>
 8014d58:	4b6b      	ldr	r3, [pc, #428]	@ (8014f08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1fc>)
 8014d5a:	681b      	ldr	r3, [r3, #0]
 8014d5c:	f104 0015 	add.w	r0, r4, #21
 8014d60:	3315      	adds	r3, #21
 8014d62:	223f      	movs	r2, #63	@ 0x3f
 8014d64:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8014d68:	b119      	cbz	r1, 8014d72 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x66>
 8014d6a:	3a01      	subs	r2, #1
 8014d6c:	f800 1b01 	strb.w	r1, [r0], #1
 8014d70:	d1f8      	bne.n	8014d64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x58>
 8014d72:	2100      	movs	r1, #0
 8014d74:	f004 fecc 	bl	8019b10 <memset>
 8014d78:	2300      	movs	r3, #0
 8014d7a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8014d7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014d82:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8014d86:	7d23      	ldrb	r3, [r4, #20]
 8014d88:	6821      	ldr	r1, [r4, #0]
 8014d8a:	42aa      	cmp	r2, r5
 8014d8c:	d21d      	bcs.n	8014dca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xbe>
 8014d8e:	9803      	ldr	r0, [sp, #12]
 8014d90:	07c9      	lsls	r1, r1, #31
 8014d92:	4410      	add	r0, r2
 8014d94:	eba5 0502 	sub.w	r5, r5, r2
 8014d98:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8014d9c:	d407      	bmi.n	8014dae <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8014d9e:	b93a      	cbnz	r2, 8014db0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xa4>
 8014da0:	9300      	str	r3, [sp, #0]
 8014da2:	4a5a      	ldr	r2, [pc, #360]	@ (8014f0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8014da4:	4b5a      	ldr	r3, [pc, #360]	@ (8014f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8014da6:	e006      	b.n	8014db6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8014da8:	f7ff feb4 	bl	8014b14 <NetworkParamsStore::Copy(networkparams::Params*)>
 8014dac:	e7b8      	b.n	8014d20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8014dae:	b312      	cbz	r2, 8014df6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xea>
 8014db0:	9300      	str	r3, [sp, #0]
 8014db2:	4a58      	ldr	r2, [pc, #352]	@ (8014f14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8014db4:	4b56      	ldr	r3, [pc, #344]	@ (8014f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8014db6:	4629      	mov	r1, r5
 8014db8:	f005 f9b6 	bl	801a128 <snprintf>
 8014dbc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014dc0:	4285      	cmp	r5, r0
 8014dc2:	bfa4      	itt	ge
 8014dc4:	181b      	addge	r3, r3, r0
 8014dc6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8014dca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014dce:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8014dd2:	f894 305d 	ldrb.w	r3, [r4, #93]	@ 0x5d
 8014dd6:	6821      	ldr	r1, [r4, #0]
 8014dd8:	42aa      	cmp	r2, r5
 8014dda:	d21f      	bcs.n	8014e1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x110>
 8014ddc:	9803      	ldr	r0, [sp, #12]
 8014dde:	05ce      	lsls	r6, r1, #23
 8014de0:	4410      	add	r0, r2
 8014de2:	eba5 0502 	sub.w	r5, r5, r2
 8014de6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8014dea:	d408      	bmi.n	8014dfe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf2>
 8014dec:	b94a      	cbnz	r2, 8014e02 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xf6>
 8014dee:	9300      	str	r3, [sp, #0]
 8014df0:	4a46      	ldr	r2, [pc, #280]	@ (8014f0c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x200>)
 8014df2:	4b49      	ldr	r3, [pc, #292]	@ (8014f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8014df4:	e008      	b.n	8014e08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8014df6:	9300      	str	r3, [sp, #0]
 8014df8:	4a48      	ldr	r2, [pc, #288]	@ (8014f1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8014dfa:	4b45      	ldr	r3, [pc, #276]	@ (8014f10 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x204>)
 8014dfc:	e7db      	b.n	8014db6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xaa>
 8014dfe:	2a00      	cmp	r2, #0
 8014e00:	d03e      	beq.n	8014e80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x174>
 8014e02:	9300      	str	r3, [sp, #0]
 8014e04:	4a43      	ldr	r2, [pc, #268]	@ (8014f14 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x208>)
 8014e06:	4b44      	ldr	r3, [pc, #272]	@ (8014f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8014e08:	4629      	mov	r1, r5
 8014e0a:	f005 f98d 	bl	801a128 <snprintf>
 8014e0e:	4285      	cmp	r5, r0
 8014e10:	bfa2      	ittt	ge
 8014e12:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8014e16:	18c0      	addge	r0, r0, r3
 8014e18:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8014e1c:	4940      	ldr	r1, [pc, #256]	@ (8014f20 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x214>)
 8014e1e:	a803      	add	r0, sp, #12
 8014e20:	f001 ffbe 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 8014e24:	6823      	ldr	r3, [r4, #0]
 8014e26:	6862      	ldr	r2, [r4, #4]
 8014e28:	493e      	ldr	r1, [pc, #248]	@ (8014f24 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x218>)
 8014e2a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8014e2e:	a803      	add	r0, sp, #12
 8014e30:	f001 ff3c 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8014e34:	6823      	ldr	r3, [r4, #0]
 8014e36:	68a2      	ldr	r2, [r4, #8]
 8014e38:	493b      	ldr	r1, [pc, #236]	@ (8014f28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x21c>)
 8014e3a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8014e3e:	a803      	add	r0, sp, #12
 8014e40:	f001 ff34 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8014e44:	6823      	ldr	r3, [r4, #0]
 8014e46:	68e2      	ldr	r2, [r4, #12]
 8014e48:	4938      	ldr	r1, [pc, #224]	@ (8014f2c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x220>)
 8014e4a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8014e4e:	a803      	add	r0, sp, #12
 8014e50:	f001 ff2c 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8014e54:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014e58:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8014e5c:	6821      	ldr	r1, [r4, #0]
 8014e5e:	42aa      	cmp	r2, r5
 8014e60:	d221      	bcs.n	8014ea6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x19a>
 8014e62:	9803      	ldr	r0, [sp, #12]
 8014e64:	0689      	lsls	r1, r1, #26
 8014e66:	4410      	add	r0, r2
 8014e68:	eba5 0502 	sub.w	r5, r5, r2
 8014e6c:	f104 0315 	add.w	r3, r4, #21
 8014e70:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8014e74:	d408      	bmi.n	8014e88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x17c>
 8014e76:	b94a      	cbnz	r2, 8014e8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x180>
 8014e78:	9300      	str	r3, [sp, #0]
 8014e7a:	4a2d      	ldr	r2, [pc, #180]	@ (8014f30 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x224>)
 8014e7c:	4b2d      	ldr	r3, [pc, #180]	@ (8014f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8014e7e:	e008      	b.n	8014e92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8014e80:	9300      	str	r3, [sp, #0]
 8014e82:	4a26      	ldr	r2, [pc, #152]	@ (8014f1c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x210>)
 8014e84:	4b24      	ldr	r3, [pc, #144]	@ (8014f18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x20c>)
 8014e86:	e7bf      	b.n	8014e08 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0xfc>
 8014e88:	2a00      	cmp	r2, #0
 8014e8a:	d032      	beq.n	8014ef2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1e6>
 8014e8c:	9300      	str	r3, [sp, #0]
 8014e8e:	4a2a      	ldr	r2, [pc, #168]	@ (8014f38 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x22c>)
 8014e90:	4b28      	ldr	r3, [pc, #160]	@ (8014f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8014e92:	4629      	mov	r1, r5
 8014e94:	f005 f948 	bl	801a128 <snprintf>
 8014e98:	4285      	cmp	r5, r0
 8014e9a:	bfa2      	ittt	ge
 8014e9c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8014ea0:	18c0      	addge	r0, r0, r3
 8014ea2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8014ea6:	4925      	ldr	r1, [pc, #148]	@ (8014f3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x230>)
 8014ea8:	a803      	add	r0, sp, #12
 8014eaa:	f001 ff79 	bl	8016da0 <PropertiesBuilder::AddComment(char const*)>
 8014eae:	6823      	ldr	r3, [r4, #0]
 8014eb0:	f8d4 2055 	ldr.w	r2, [r4, #85]	@ 0x55
 8014eb4:	4922      	ldr	r1, [pc, #136]	@ (8014f40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x234>)
 8014eb6:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8014eba:	a803      	add	r0, sp, #12
 8014ebc:	f001 fef6 	bl	8016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>
 8014ec0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014ec4:	b17b      	cbz	r3, 8014ee6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x1da>
 8014ec6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014eca:	9b03      	ldr	r3, [sp, #12]
 8014ecc:	4413      	add	r3, r2
 8014ece:	227d      	movs	r2, #125	@ 0x7d
 8014ed0:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014ed4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014ed8:	9903      	ldr	r1, [sp, #12]
 8014eda:	54ca      	strb	r2, [r1, r3]
 8014edc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014ee0:	3301      	adds	r3, #1
 8014ee2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014ee6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014eea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014eec:	601a      	str	r2, [r3, #0]
 8014eee:	b006      	add	sp, #24
 8014ef0:	bd70      	pop	{r4, r5, r6, pc}
 8014ef2:	9300      	str	r3, [sp, #0]
 8014ef4:	4a13      	ldr	r2, [pc, #76]	@ (8014f44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x238>)
 8014ef6:	4b0f      	ldr	r3, [pc, #60]	@ (8014f34 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x228>)
 8014ef8:	e7cb      	b.n	8014e92 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned long, unsigned long&)+0x186>
 8014efa:	bf00      	nop
 8014efc:	20002954 	andcs	r2, r0, r4, asr r9
 8014f00:	0801eace 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, fp, sp, lr, pc}
 8014f04:	0801b4a3 	stmdaeq	r1, {r0, r1, r5, r7, sl, ip, sp, pc}
 8014f08:	20002934 	andcs	r2, r0, r4, lsr r9
 8014f0c:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 8014f10:	0801eac5 	stmdaeq	r1, {r0, r2, r6, r7, r9, fp, sp, lr, pc}
 8014f14:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 8014f18:	0801eab5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, fp, sp, lr, pc}
 8014f1c:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}
 8014f20:	0801b4b0 	stmdaeq	r1, {r4, r5, r7, sl, ip, sp, pc}
 8014f24:	0801eaaa 	stmdaeq	r1, {r1, r3, r5, r7, r9, fp, sp, lr, pc}
 8014f28:	0801eaa1 	stmdaeq	r1, {r0, r5, r7, r9, fp, sp, lr, pc}
 8014f2c:	0801ea91 	stmdaeq	r1, {r0, r4, r7, r9, fp, sp, lr, pc}
 8014f30:	0801ad5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp, sp, pc}
 8014f34:	0801ea88 	stmdaeq	r1, {r3, r7, r9, fp, sp, lr, pc}
 8014f38:	0801ad52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, sp, pc}
 8014f3c:	0801b4ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, ip, sp, pc}
 8014f40:	0801ea7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, fp, sp, lr, pc}
 8014f44:	0801ad5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, sl, fp, sp, pc}

08014f48 <net::phy_customized_led()>:
 8014f48:	4770      	bx	lr

08014f4a <net::phy_customized_timing()>:
 8014f4a:	4770      	bx	lr

08014f4c <emac_adjust_link(net::PhyStatus)>:
 8014f4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014f4e:	ac04      	add	r4, sp, #16
 8014f50:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8014f54:	460c      	mov	r4, r1
 8014f56:	4b14      	ldr	r3, [pc, #80]	@ (8014fa8 <emac_adjust_link(net::PhyStatus)+0x5c>)
 8014f58:	4914      	ldr	r1, [pc, #80]	@ (8014fac <emac_adjust_link(net::PhyStatus)+0x60>)
 8014f5a:	2a00      	cmp	r2, #0
 8014f5c:	4615      	mov	r5, r2
 8014f5e:	4606      	mov	r6, r0
 8014f60:	bf14      	ite	ne
 8014f62:	2264      	movne	r2, #100	@ 0x64
 8014f64:	220a      	moveq	r2, #10
 8014f66:	4812      	ldr	r0, [pc, #72]	@ (8014fb0 <emac_adjust_link(net::PhyStatus)+0x64>)
 8014f68:	2c00      	cmp	r4, #0
 8014f6a:	bf18      	it	ne
 8014f6c:	460b      	movne	r3, r1
 8014f6e:	4911      	ldr	r1, [pc, #68]	@ (8014fb4 <emac_adjust_link(net::PhyStatus)+0x68>)
 8014f70:	2e01      	cmp	r6, #1
 8014f72:	bf08      	it	eq
 8014f74:	4601      	moveq	r1, r0
 8014f76:	4810      	ldr	r0, [pc, #64]	@ (8014fb8 <emac_adjust_link(net::PhyStatus)+0x6c>)
 8014f78:	f005 f8ae 	bl	801a0d8 <printf>
 8014f7c:	2d01      	cmp	r5, #1
 8014f7e:	d10d      	bne.n	8014f9c <emac_adjust_link(net::PhyStatus)+0x50>
 8014f80:	2c01      	cmp	r4, #1
 8014f82:	bf14      	ite	ne
 8014f84:	f44f 4080 	movne.w	r0, #16384	@ 0x4000
 8014f88:	f44f 4090 	moveq.w	r0, #18432	@ 0x4800
 8014f8c:	2210      	movs	r2, #16
 8014f8e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8014f92:	b004      	add	sp, #16
 8014f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014f98:	f003 b884 	b.w	80180a4 <enet_init>
 8014f9c:	1e63      	subs	r3, r4, #1
 8014f9e:	4258      	negs	r0, r3
 8014fa0:	4158      	adcs	r0, r3
 8014fa2:	02c0      	lsls	r0, r0, #11
 8014fa4:	e7f2      	b.n	8014f8c <emac_adjust_link(net::PhyStatus)+0x40>
 8014fa6:	bf00      	nop
 8014fa8:	0801b4f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, sl, ip, sp, pc}
 8014fac:	0801b4f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, sl, ip, sp, pc}
 8014fb0:	0801b4ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, sl, ip, sp, pc}
 8014fb4:	0801b4ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl, ip, sp, pc}
 8014fb8:	0801b4fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, ip, sp, pc}

08014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>:
 8014fbc:	b508      	push	{r3, lr}
 8014fbe:	4613      	mov	r3, r2
 8014fc0:	b28a      	uxth	r2, r1
 8014fc2:	b281      	uxth	r1, r0
 8014fc4:	2000      	movs	r0, #0
 8014fc6:	f003 f843 	bl	8018050 <enet_phy_write_read>
 8014fca:	1e43      	subs	r3, r0, #1
 8014fcc:	4258      	negs	r0, r3
 8014fce:	4158      	adcs	r0, r3
 8014fd0:	bd08      	pop	{r3, pc}

08014fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>:
 8014fd2:	b507      	push	{r0, r1, r2, lr}
 8014fd4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014fd8:	f10d 0306 	add.w	r3, sp, #6
 8014fdc:	b28a      	uxth	r2, r1
 8014fde:	b281      	uxth	r1, r0
 8014fe0:	2002      	movs	r0, #2
 8014fe2:	f003 f835 	bl	8018050 <enet_phy_write_read>
 8014fe6:	1e43      	subs	r3, r0, #1
 8014fe8:	4258      	negs	r0, r3
 8014fea:	4158      	adcs	r0, r3
 8014fec:	b003      	add	sp, #12
 8014fee:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014ff4 <net::phy_config(unsigned long)>:
 8014ff4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014ff6:	4e28      	ldr	r6, [pc, #160]	@ (8015098 <net::phy_config(unsigned long)+0xa4>)
 8014ff8:	4605      	mov	r5, r0
 8014ffa:	2001      	movs	r0, #1
 8014ffc:	6934      	ldr	r4, [r6, #16]
 8014ffe:	f003 fb1b 	bl	8018638 <rcu_clock_freq_get>
 8015002:	4b26      	ldr	r3, [pc, #152]	@ (801509c <net::phy_config(unsigned long)+0xa8>)
 8015004:	4a26      	ldr	r2, [pc, #152]	@ (80150a0 <net::phy_config(unsigned long)+0xac>)
 8015006:	4403      	add	r3, r0
 8015008:	4293      	cmp	r3, r2
 801500a:	f024 041c 	bic.w	r4, r4, #28
 801500e:	d216      	bcs.n	801503e <net::phy_config(unsigned long)+0x4a>
 8015010:	f044 0408 	orr.w	r4, r4, #8
 8015014:	6134      	str	r4, [r6, #16]
 8015016:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 801501a:	2100      	movs	r1, #0
 801501c:	4628      	mov	r0, r5
 801501e:	f7ff ffd8 	bl	8014fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8015022:	b330      	cbz	r0, 8015072 <net::phy_config(unsigned long)+0x7e>
 8015024:	4c1f      	ldr	r4, [pc, #124]	@ (80150a4 <net::phy_config(unsigned long)+0xb0>)
 8015026:	6826      	ldr	r6, [r4, #0]
 8015028:	6823      	ldr	r3, [r4, #0]
 801502a:	1b9b      	subs	r3, r3, r6
 801502c:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8015030:	d325      	bcc.n	801507e <net::phy_config(unsigned long)+0x8a>
 8015032:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015036:	43c0      	mvns	r0, r0
 8015038:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801503c:	e01a      	b.n	8015074 <net::phy_config(unsigned long)+0x80>
 801503e:	4b1a      	ldr	r3, [pc, #104]	@ (80150a8 <net::phy_config(unsigned long)+0xb4>)
 8015040:	4a1a      	ldr	r2, [pc, #104]	@ (80150ac <net::phy_config(unsigned long)+0xb8>)
 8015042:	4403      	add	r3, r0
 8015044:	4293      	cmp	r3, r2
 8015046:	d802      	bhi.n	801504e <net::phy_config(unsigned long)+0x5a>
 8015048:	f044 040c 	orr.w	r4, r4, #12
 801504c:	e7e2      	b.n	8015014 <net::phy_config(unsigned long)+0x20>
 801504e:	4b18      	ldr	r3, [pc, #96]	@ (80150b0 <net::phy_config(unsigned long)+0xbc>)
 8015050:	4a18      	ldr	r2, [pc, #96]	@ (80150b4 <net::phy_config(unsigned long)+0xc0>)
 8015052:	4403      	add	r3, r0
 8015054:	4293      	cmp	r3, r2
 8015056:	d3dd      	bcc.n	8015014 <net::phy_config(unsigned long)+0x20>
 8015058:	4b17      	ldr	r3, [pc, #92]	@ (80150b8 <net::phy_config(unsigned long)+0xc4>)
 801505a:	4a18      	ldr	r2, [pc, #96]	@ (80150bc <net::phy_config(unsigned long)+0xc8>)
 801505c:	4403      	add	r3, r0
 801505e:	4293      	cmp	r3, r2
 8015060:	d802      	bhi.n	8015068 <net::phy_config(unsigned long)+0x74>
 8015062:	f044 0404 	orr.w	r4, r4, #4
 8015066:	e7d5      	b.n	8015014 <net::phy_config(unsigned long)+0x20>
 8015068:	4b15      	ldr	r3, [pc, #84]	@ (80150c0 <net::phy_config(unsigned long)+0xcc>)
 801506a:	4a16      	ldr	r2, [pc, #88]	@ (80150c4 <net::phy_config(unsigned long)+0xd0>)
 801506c:	4403      	add	r3, r0
 801506e:	4293      	cmp	r3, r2
 8015070:	d902      	bls.n	8015078 <net::phy_config(unsigned long)+0x84>
 8015072:	2000      	movs	r0, #0
 8015074:	b002      	add	sp, #8
 8015076:	bd70      	pop	{r4, r5, r6, pc}
 8015078:	f044 0410 	orr.w	r4, r4, #16
 801507c:	e7ca      	b.n	8015014 <net::phy_config(unsigned long)+0x20>
 801507e:	f10d 0206 	add.w	r2, sp, #6
 8015082:	2100      	movs	r1, #0
 8015084:	4628      	mov	r0, r5
 8015086:	f7ff ff99 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801508a:	2800      	cmp	r0, #0
 801508c:	d0f1      	beq.n	8015072 <net::phy_config(unsigned long)+0x7e>
 801508e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8015092:	2b00      	cmp	r3, #0
 8015094:	dbc8      	blt.n	8015028 <net::phy_config(unsigned long)+0x34>
 8015096:	e7ed      	b.n	8015074 <net::phy_config(unsigned long)+0x80>
 8015098:	40028000 	andmi	r8, r2, r0
 801509c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80150a0:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80150a4:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80150a8:	fde9f140 	stc2l	1, cr15, [r9, #256]!	@ 0x100
 80150ac:	017d783f 	cmneq	sp, pc, lsr r8
 80150b0:	fc6c7900 	stc2l	9, cr7, [ip], #-0	@ <UNPREDICTABLE>
 80150b4:	02625a00 	rsbeq	r5, r2, #0, 20
 80150b8:	fa0a1f00 	blx	829ccc0 <_sidata+0x27daf8>
 80150bc:	02faf07f 	rscseq	pc, sl, #127	@ 0x7f
 80150c0:	f70f2e80 			@ <UNDEFINED> instruction: 0xf70f2e80
 80150c4:	055d4a80 	ldrbeq	r4, [sp, #-2688]	@ 0xfffff580

080150c8 <enet_gpio_config()>:
 80150c8:	b510      	push	{r4, lr}
 80150ca:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 80150ce:	f003 fa77 	bl	80185c0 <rcu_periph_clock_enable>
 80150d2:	f640 4001 	movw	r0, #3073	@ 0xc01
 80150d6:	4c68      	ldr	r4, [pc, #416]	@ (8015278 <enet_gpio_config()+0x1b0>)
 80150d8:	f003 fa72 	bl	80185c0 <rcu_periph_clock_enable>
 80150dc:	f640 4002 	movw	r0, #3074	@ 0xc02
 80150e0:	f003 fa6e 	bl	80185c0 <rcu_periph_clock_enable>
 80150e4:	f241 100e 	movw	r0, #4366	@ 0x110e
 80150e8:	f003 fa6a 	bl	80185c0 <rcu_periph_clock_enable>
 80150ec:	4620      	mov	r0, r4
 80150ee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80150f2:	2100      	movs	r1, #0
 80150f4:	f003 fa20 	bl	8018538 <gpio_af_set>
 80150f8:	4620      	mov	r0, r4
 80150fa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80150fe:	2200      	movs	r2, #0
 8015100:	2102      	movs	r1, #2
 8015102:	f003 f9d7 	bl	80184b4 <gpio_mode_set>
 8015106:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801510a:	2203      	movs	r2, #3
 801510c:	4620      	mov	r0, r4
 801510e:	2100      	movs	r1, #0
 8015110:	f003 f9f2 	bl	80184f8 <gpio_output_options_set>
 8015114:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 8015118:	f44f 00c0 	mov.w	r0, #6291456	@ 0x600000
 801511c:	f003 fa70 	bl	8018600 <rcu_ckout0_config>
 8015120:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8015124:	f003 fafc 	bl	8018720 <syscfg_enet_phy_interface_config>
 8015128:	2302      	movs	r3, #2
 801512a:	4619      	mov	r1, r3
 801512c:	4620      	mov	r0, r4
 801512e:	2200      	movs	r2, #0
 8015130:	f003 f9c0 	bl	80184b4 <gpio_mode_set>
 8015134:	4620      	mov	r0, r4
 8015136:	2302      	movs	r3, #2
 8015138:	2203      	movs	r2, #3
 801513a:	2100      	movs	r1, #0
 801513c:	f003 f9dc 	bl	80184f8 <gpio_output_options_set>
 8015140:	4620      	mov	r0, r4
 8015142:	2304      	movs	r3, #4
 8015144:	2200      	movs	r2, #0
 8015146:	2102      	movs	r1, #2
 8015148:	f003 f9b4 	bl	80184b4 <gpio_mode_set>
 801514c:	4620      	mov	r0, r4
 801514e:	2304      	movs	r3, #4
 8015150:	2203      	movs	r2, #3
 8015152:	2100      	movs	r1, #0
 8015154:	f003 f9d0 	bl	80184f8 <gpio_output_options_set>
 8015158:	4620      	mov	r0, r4
 801515a:	2380      	movs	r3, #128	@ 0x80
 801515c:	2200      	movs	r2, #0
 801515e:	2102      	movs	r1, #2
 8015160:	f003 f9a8 	bl	80184b4 <gpio_mode_set>
 8015164:	2380      	movs	r3, #128	@ 0x80
 8015166:	4620      	mov	r0, r4
 8015168:	2203      	movs	r2, #3
 801516a:	2100      	movs	r1, #0
 801516c:	f003 f9c4 	bl	80184f8 <gpio_output_options_set>
 8015170:	4620      	mov	r0, r4
 8015172:	2202      	movs	r2, #2
 8015174:	210b      	movs	r1, #11
 8015176:	f003 f9df 	bl	8018538 <gpio_af_set>
 801517a:	4620      	mov	r0, r4
 801517c:	2204      	movs	r2, #4
 801517e:	210b      	movs	r1, #11
 8015180:	f003 f9da 	bl	8018538 <gpio_af_set>
 8015184:	4620      	mov	r0, r4
 8015186:	2280      	movs	r2, #128	@ 0x80
 8015188:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801518c:	210b      	movs	r1, #11
 801518e:	f003 f9d3 	bl	8018538 <gpio_af_set>
 8015192:	4620      	mov	r0, r4
 8015194:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8015198:	2200      	movs	r2, #0
 801519a:	2102      	movs	r1, #2
 801519c:	f003 f98a 	bl	80184b4 <gpio_mode_set>
 80151a0:	4620      	mov	r0, r4
 80151a2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80151a6:	2203      	movs	r2, #3
 80151a8:	2100      	movs	r1, #0
 80151aa:	f003 f9a5 	bl	80184f8 <gpio_output_options_set>
 80151ae:	4620      	mov	r0, r4
 80151b0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80151b4:	2200      	movs	r2, #0
 80151b6:	2102      	movs	r1, #2
 80151b8:	f003 f97c 	bl	80184b4 <gpio_mode_set>
 80151bc:	4620      	mov	r0, r4
 80151be:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80151c2:	2203      	movs	r2, #3
 80151c4:	2100      	movs	r1, #0
 80151c6:	f003 f997 	bl	80184f8 <gpio_output_options_set>
 80151ca:	4620      	mov	r0, r4
 80151cc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80151d0:	2200      	movs	r2, #0
 80151d2:	2102      	movs	r1, #2
 80151d4:	f003 f96e 	bl	80184b4 <gpio_mode_set>
 80151d8:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80151dc:	4620      	mov	r0, r4
 80151de:	2203      	movs	r2, #3
 80151e0:	2100      	movs	r1, #0
 80151e2:	f003 f989 	bl	80184f8 <gpio_output_options_set>
 80151e6:	4620      	mov	r0, r4
 80151e8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80151ec:	210b      	movs	r1, #11
 80151ee:	f003 f9a3 	bl	8018538 <gpio_af_set>
 80151f2:	4620      	mov	r0, r4
 80151f4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80151f8:	210b      	movs	r1, #11
 80151fa:	f003 f99d 	bl	8018538 <gpio_af_set>
 80151fe:	4620      	mov	r0, r4
 8015200:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8015204:	210b      	movs	r1, #11
 8015206:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801520a:	f003 f995 	bl	8018538 <gpio_af_set>
 801520e:	2302      	movs	r3, #2
 8015210:	4619      	mov	r1, r3
 8015212:	4620      	mov	r0, r4
 8015214:	2200      	movs	r2, #0
 8015216:	f003 f94d 	bl	80184b4 <gpio_mode_set>
 801521a:	4620      	mov	r0, r4
 801521c:	2302      	movs	r3, #2
 801521e:	2203      	movs	r2, #3
 8015220:	2100      	movs	r1, #0
 8015222:	f003 f969 	bl	80184f8 <gpio_output_options_set>
 8015226:	4620      	mov	r0, r4
 8015228:	2310      	movs	r3, #16
 801522a:	2200      	movs	r2, #0
 801522c:	2102      	movs	r1, #2
 801522e:	f003 f941 	bl	80184b4 <gpio_mode_set>
 8015232:	4620      	mov	r0, r4
 8015234:	2310      	movs	r3, #16
 8015236:	2203      	movs	r2, #3
 8015238:	2100      	movs	r1, #0
 801523a:	f003 f95d 	bl	80184f8 <gpio_output_options_set>
 801523e:	4620      	mov	r0, r4
 8015240:	2320      	movs	r3, #32
 8015242:	2200      	movs	r2, #0
 8015244:	2102      	movs	r1, #2
 8015246:	f003 f935 	bl	80184b4 <gpio_mode_set>
 801524a:	2320      	movs	r3, #32
 801524c:	4620      	mov	r0, r4
 801524e:	2203      	movs	r2, #3
 8015250:	2100      	movs	r1, #0
 8015252:	f003 f951 	bl	80184f8 <gpio_output_options_set>
 8015256:	4620      	mov	r0, r4
 8015258:	2202      	movs	r2, #2
 801525a:	210b      	movs	r1, #11
 801525c:	f003 f96c 	bl	8018538 <gpio_af_set>
 8015260:	4620      	mov	r0, r4
 8015262:	2210      	movs	r2, #16
 8015264:	210b      	movs	r1, #11
 8015266:	f003 f967 	bl	8018538 <gpio_af_set>
 801526a:	4620      	mov	r0, r4
 801526c:	2220      	movs	r2, #32
 801526e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015272:	210b      	movs	r1, #11
 8015274:	f003 b960 	b.w	8018538 <gpio_af_set>
 8015278:	40020000 	andmi	r0, r2, r0

0801527c <emac_eth_recv(unsigned char**)>:
 801527c:	b538      	push	{r3, r4, r5, lr}
 801527e:	4d07      	ldr	r5, [pc, #28]	@ (801529c <emac_eth_recv(unsigned char**)+0x20>)
 8015280:	4604      	mov	r4, r0
 8015282:	2102      	movs	r1, #2
 8015284:	6828      	ldr	r0, [r5, #0]
 8015286:	f003 f88f 	bl	80183a8 <enet_desc_information_get>
 801528a:	b118      	cbz	r0, 8015294 <emac_eth_recv(unsigned char**)+0x18>
 801528c:	682b      	ldr	r3, [r5, #0]
 801528e:	689b      	ldr	r3, [r3, #8]
 8015290:	6023      	str	r3, [r4, #0]
 8015292:	bd38      	pop	{r3, r4, r5, pc}
 8015294:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8015298:	bd38      	pop	{r3, r4, r5, pc}
 801529a:	bf00      	nop
 801529c:	20002b54 	andcs	r2, r0, r4, asr fp

080152a0 <emac_free_pkt()>:
 80152a0:	490d      	ldr	r1, [pc, #52]	@ (80152d8 <emac_free_pkt()+0x38>)
 80152a2:	e001      	b.n	80152a8 <emac_free_pkt()+0x8>
 80152a4:	f3bf 8f5f 	dmb	sy
 80152a8:	680b      	ldr	r3, [r1, #0]
 80152aa:	681a      	ldr	r2, [r3, #0]
 80152ac:	2a00      	cmp	r2, #0
 80152ae:	dbf9      	blt.n	80152a4 <emac_free_pkt()+0x4>
 80152b0:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 80152b4:	4a09      	ldr	r2, [pc, #36]	@ (80152dc <emac_free_pkt()+0x3c>)
 80152b6:	6018      	str	r0, [r3, #0]
 80152b8:	6950      	ldr	r0, [r2, #20]
 80152ba:	0600      	lsls	r0, r0, #24
 80152bc:	d509      	bpl.n	80152d2 <emac_free_pkt()+0x32>
 80152be:	b410      	push	{r4}
 80152c0:	2000      	movs	r0, #0
 80152c2:	2480      	movs	r4, #128	@ 0x80
 80152c4:	6154      	str	r4, [r2, #20]
 80152c6:	6090      	str	r0, [r2, #8]
 80152c8:	68db      	ldr	r3, [r3, #12]
 80152ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80152ce:	600b      	str	r3, [r1, #0]
 80152d0:	4770      	bx	lr
 80152d2:	68db      	ldr	r3, [r3, #12]
 80152d4:	600b      	str	r3, [r1, #0]
 80152d6:	4770      	bx	lr
 80152d8:	20002b54 	andcs	r2, r0, r4, asr fp
 80152dc:	40029000 	andmi	r9, r2, r0

080152e0 <emac_eth_send(void*, unsigned long)>:
 80152e0:	b570      	push	{r4, r5, r6, lr}
 80152e2:	4c20      	ldr	r4, [pc, #128]	@ (8015364 <emac_eth_send(void*, unsigned long)+0x84>)
 80152e4:	e001      	b.n	80152ea <emac_eth_send(void*, unsigned long)+0xa>
 80152e6:	f3bf 8f5f 	dmb	sy
 80152ea:	6823      	ldr	r3, [r4, #0]
 80152ec:	681a      	ldr	r2, [r3, #0]
 80152ee:	2a00      	cmp	r2, #0
 80152f0:	dbf9      	blt.n	80152e6 <emac_eth_send(void*, unsigned long)+0x6>
 80152f2:	689b      	ldr	r3, [r3, #8]
 80152f4:	ea43 0200 	orr.w	r2, r3, r0
 80152f8:	0792      	lsls	r2, r2, #30
 80152fa:	d01e      	beq.n	801533a <emac_eth_send(void*, unsigned long)+0x5a>
 80152fc:	460a      	mov	r2, r1
 80152fe:	eb00 0c02 	add.w	ip, r0, r2
 8015302:	b12a      	cbz	r2, 8015310 <emac_eth_send(void*, unsigned long)+0x30>
 8015304:	f810 2b01 	ldrb.w	r2, [r0], #1
 8015308:	f803 2b01 	strb.w	r2, [r3], #1
 801530c:	4584      	cmp	ip, r0
 801530e:	d1f9      	bne.n	8015304 <emac_eth_send(void*, unsigned long)+0x24>
 8015310:	6822      	ldr	r2, [r4, #0]
 8015312:	4815      	ldr	r0, [pc, #84]	@ (8015368 <emac_eth_send(void*, unsigned long)+0x88>)
 8015314:	6813      	ldr	r3, [r2, #0]
 8015316:	6051      	str	r1, [r2, #4]
 8015318:	f043 4330 	orr.w	r3, r3, #2952790016	@ 0xb0000000
 801531c:	6013      	str	r3, [r2, #0]
 801531e:	6943      	ldr	r3, [r0, #20]
 8015320:	6941      	ldr	r1, [r0, #20]
 8015322:	f003 0304 	and.w	r3, r3, #4
 8015326:	f001 0120 	and.w	r1, r1, #32
 801532a:	430b      	orrs	r3, r1
 801532c:	d002      	beq.n	8015334 <emac_eth_send(void*, unsigned long)+0x54>
 801532e:	2100      	movs	r1, #0
 8015330:	6143      	str	r3, [r0, #20]
 8015332:	6041      	str	r1, [r0, #4]
 8015334:	68d3      	ldr	r3, [r2, #12]
 8015336:	6023      	str	r3, [r4, #0]
 8015338:	bd70      	pop	{r4, r5, r6, pc}
 801533a:	2903      	cmp	r1, #3
 801533c:	d9de      	bls.n	80152fc <emac_eth_send(void*, unsigned long)+0x1c>
 801533e:	1f0e      	subs	r6, r1, #4
 8015340:	f026 0603 	bic.w	r6, r6, #3
 8015344:	3604      	adds	r6, #4
 8015346:	eb00 0c06 	add.w	ip, r0, r6
 801534a:	eba3 0e00 	sub.w	lr, r3, r0
 801534e:	eb00 020e 	add.w	r2, r0, lr
 8015352:	f850 5b04 	ldr.w	r5, [r0], #4
 8015356:	6015      	str	r5, [r2, #0]
 8015358:	4560      	cmp	r0, ip
 801535a:	d1f8      	bne.n	801534e <emac_eth_send(void*, unsigned long)+0x6e>
 801535c:	4433      	add	r3, r6
 801535e:	f001 0203 	and.w	r2, r1, #3
 8015362:	e7cc      	b.n	80152fe <emac_eth_send(void*, unsigned long)+0x1e>
 8015364:	20002b58 	andcs	r2, r0, r8, asr fp
 8015368:	40029000 	andmi	r9, r2, r0

0801536c <net::acd_start(net::acd::Acd*, net::ip_addr)>:
 801536c:	2301      	movs	r3, #1
 801536e:	b510      	push	{r4, lr}
 8015370:	7103      	strb	r3, [r0, #4]
 8015372:	6001      	str	r1, [r0, #0]
 8015374:	4604      	mov	r4, r0
 8015376:	f004 ff0d 	bl	801a194 <random>
 801537a:	230a      	movs	r3, #10
 801537c:	fbb0 f2f3 	udiv	r2, r0, r3
 8015380:	fb02 0013 	mls	r0, r2, r3, r0
 8015384:	4b11      	ldr	r3, [pc, #68]	@ (80153cc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x60>)
 8015386:	81a0      	strh	r0, [r4, #12]
 8015388:	681b      	ldr	r3, [r3, #0]
 801538a:	f8d3 00a0 	ldr.w	r0, [r3, #160]	@ 0xa0
 801538e:	2807      	cmp	r0, #7
 8015390:	d907      	bls.n	80153a2 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x36>
 8015392:	480f      	ldr	r0, [pc, #60]	@ (80153d0 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x64>)
 8015394:	f002 fbfc 	bl	8017b90 <console_error>
 8015398:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 801539c:	4b0d      	ldr	r3, [pc, #52]	@ (80153d4 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x68>)
 801539e:	601a      	str	r2, [r3, #0]
 80153a0:	bd10      	pop	{r4, pc}
 80153a2:	4a0d      	ldr	r2, [pc, #52]	@ (80153d8 <net::acd_start(net::acd::Acd*, net::ip_addr)+0x6c>)
 80153a4:	6811      	ldr	r1, [r2, #0]
 80153a6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 80153aa:	1c54      	adds	r4, r2, #1
 80153ac:	f8c3 40a4 	str.w	r4, [r3, #164]	@ 0xa4
 80153b0:	1c44      	adds	r4, r0, #1
 80153b2:	f8c3 40a0 	str.w	r4, [r3, #160]	@ 0xa0
 80153b6:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 80153ba:	3164      	adds	r1, #100	@ 0x64
 80153bc:	6219      	str	r1, [r3, #32]
 80153be:	2164      	movs	r1, #100	@ 0x64
 80153c0:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 80153c4:	4905      	ldr	r1, [pc, #20]	@ (80153dc <net::acd_start(net::acd::Acd*, net::ip_addr)+0x70>)
 80153c6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80153c8:	e7e8      	b.n	801539c <net::acd_start(net::acd::Acd*, net::ip_addr)+0x30>
 80153ca:	bf00      	nop
 80153cc:	20002b04 	andcs	r2, r0, r4, lsl #22
 80153d0:	0801b491 	stmdaeq	r1, {r0, r4, r7, sl, ip, sp, pc}
 80153d4:	20002980 	andcs	r2, r0, r0, lsl #19
 80153d8:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80153dc:	08015439 	stmdaeq	r1, {r0, r3, r4, r5, sl, ip, lr}

080153e0 <net::acd_stop(net::acd::Acd*)>:
 80153e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153e2:	4e13      	ldr	r6, [pc, #76]	@ (8015430 <net::acd_stop(net::acd::Acd*)+0x50>)
 80153e4:	6832      	ldr	r2, [r6, #0]
 80153e6:	2300      	movs	r3, #0
 80153e8:	429a      	cmp	r2, r3
 80153ea:	7103      	strb	r3, [r0, #4]
 80153ec:	db1a      	blt.n	8015424 <net::acd_stop(net::acd::Acd*)+0x44>
 80153ee:	4911      	ldr	r1, [pc, #68]	@ (8015434 <net::acd_stop(net::acd::Acd*)+0x54>)
 80153f0:	680d      	ldr	r5, [r1, #0]
 80153f2:	f8d5 40a0 	ldr.w	r4, [r5, #160]	@ 0xa0
 80153f6:	f105 0128 	add.w	r1, r5, #40	@ 0x28
 80153fa:	42a3      	cmp	r3, r4
 80153fc:	d012      	beq.n	8015424 <net::acd_stop(net::acd::Acd*)+0x44>
 80153fe:	0118      	lsls	r0, r3, #4
 8015400:	580f      	ldr	r7, [r1, r0]
 8015402:	42ba      	cmp	r2, r7
 8015404:	d112      	bne.n	801542c <net::acd_stop(net::acd::Acd*)+0x4c>
 8015406:	3c01      	subs	r4, #1
 8015408:	1ae2      	subs	r2, r4, r3
 801540a:	f100 0130 	add.w	r1, r0, #48	@ 0x30
 801540e:	0112      	lsls	r2, r2, #4
 8015410:	3020      	adds	r0, #32
 8015412:	42a3      	cmp	r3, r4
 8015414:	bf88      	it	hi
 8015416:	2200      	movhi	r2, #0
 8015418:	4429      	add	r1, r5
 801541a:	4428      	add	r0, r5
 801541c:	f004 fb61 	bl	8019ae2 <memmove>
 8015420:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
 8015424:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8015428:	6033      	str	r3, [r6, #0]
 801542a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801542c:	3301      	adds	r3, #1
 801542e:	e7e4      	b.n	80153fa <net::acd_stop(net::acd::Acd*)+0x1a>
 8015430:	20002980 	andcs	r2, r0, r0, lsl #19
 8015434:	20002b04 	andcs	r2, r0, r4, lsl #22

08015438 <net::acd_timer()>:
 8015438:	b510      	push	{r4, lr}
 801543a:	4b2b      	ldr	r3, [pc, #172]	@ (80154e8 <net::acd_timer()+0xb0>)
 801543c:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 801543e:	79a3      	ldrb	r3, [r4, #6]
 8015440:	b10b      	cbz	r3, 8015446 <net::acd_timer()+0xe>
 8015442:	3b01      	subs	r3, #1
 8015444:	71a3      	strb	r3, [r4, #6]
 8015446:	89a3      	ldrh	r3, [r4, #12]
 8015448:	b10b      	cbz	r3, 801544e <net::acd_timer()+0x16>
 801544a:	3b01      	subs	r3, #1
 801544c:	81a3      	strh	r3, [r4, #12]
 801544e:	7923      	ldrb	r3, [r4, #4]
 8015450:	2b04      	cmp	r3, #4
 8015452:	d805      	bhi.n	8015460 <net::acd_timer()+0x28>
 8015454:	2b02      	cmp	r3, #2
 8015456:	d82b      	bhi.n	80154b0 <net::acd_timer()+0x78>
 8015458:	3b01      	subs	r3, #1
 801545a:	2b01      	cmp	r3, #1
 801545c:	d90b      	bls.n	8015476 <net::acd_timer()+0x3e>
 801545e:	bd10      	pop	{r4, pc}
 8015460:	2b07      	cmp	r3, #7
 8015462:	d1fc      	bne.n	801545e <net::acd_timer()+0x26>
 8015464:	89a3      	ldrh	r3, [r4, #12]
 8015466:	2b00      	cmp	r3, #0
 8015468:	d1f9      	bne.n	801545e <net::acd_timer()+0x26>
 801546a:	4620      	mov	r0, r4
 801546c:	f7ff ffb8 	bl	80153e0 <net::acd_stop(net::acd::Acd*)>
 8015470:	68a3      	ldr	r3, [r4, #8]
 8015472:	2001      	movs	r0, #1
 8015474:	e034      	b.n	80154e0 <net::acd_timer()+0xa8>
 8015476:	89a3      	ldrh	r3, [r4, #12]
 8015478:	2b00      	cmp	r3, #0
 801547a:	d1f0      	bne.n	801545e <net::acd_timer()+0x26>
 801547c:	2302      	movs	r3, #2
 801547e:	7123      	strb	r3, [r4, #4]
 8015480:	6820      	ldr	r0, [r4, #0]
 8015482:	f000 f9df 	bl	8015844 <net::arp_acd_probe(net::ip_addr)>
 8015486:	7963      	ldrb	r3, [r4, #5]
 8015488:	3301      	adds	r3, #1
 801548a:	b2db      	uxtb	r3, r3
 801548c:	2b02      	cmp	r3, #2
 801548e:	7163      	strb	r3, [r4, #5]
 8015490:	d904      	bls.n	801549c <net::acd_timer()+0x64>
 8015492:	2303      	movs	r3, #3
 8015494:	80a3      	strh	r3, [r4, #4]
 8015496:	2314      	movs	r3, #20
 8015498:	81a3      	strh	r3, [r4, #12]
 801549a:	e7e0      	b.n	801545e <net::acd_timer()+0x26>
 801549c:	f004 fe7a 	bl	801a194 <random>
 80154a0:	230a      	movs	r3, #10
 80154a2:	fbb0 f2f3 	udiv	r2, r0, r3
 80154a6:	fb02 0013 	mls	r0, r2, r3, r0
 80154aa:	4418      	add	r0, r3
 80154ac:	81a0      	strh	r0, [r4, #12]
 80154ae:	e7d6      	b.n	801545e <net::acd_timer()+0x26>
 80154b0:	89a3      	ldrh	r3, [r4, #12]
 80154b2:	2b00      	cmp	r3, #0
 80154b4:	d1d3      	bne.n	801545e <net::acd_timer()+0x26>
 80154b6:	7963      	ldrb	r3, [r4, #5]
 80154b8:	b913      	cbnz	r3, 80154c0 <net::acd_timer()+0x88>
 80154ba:	2204      	movs	r2, #4
 80154bc:	7122      	strb	r2, [r4, #4]
 80154be:	71e3      	strb	r3, [r4, #7]
 80154c0:	6820      	ldr	r0, [r4, #0]
 80154c2:	f000 f9d3 	bl	801586c <net::arp_acd_send_announcement(net::ip_addr)>
 80154c6:	2314      	movs	r3, #20
 80154c8:	81a3      	strh	r3, [r4, #12]
 80154ca:	7963      	ldrb	r3, [r4, #5]
 80154cc:	3301      	adds	r3, #1
 80154ce:	b2db      	uxtb	r3, r3
 80154d0:	2b01      	cmp	r3, #1
 80154d2:	7163      	strb	r3, [r4, #5]
 80154d4:	d9c3      	bls.n	801545e <net::acd_timer()+0x26>
 80154d6:	2305      	movs	r3, #5
 80154d8:	80a3      	strh	r3, [r4, #4]
 80154da:	2000      	movs	r0, #0
 80154dc:	68a3      	ldr	r3, [r4, #8]
 80154de:	81a0      	strh	r0, [r4, #12]
 80154e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80154e4:	4718      	bx	r3
 80154e6:	bf00      	nop
 80154e8:	20002954 	andcs	r2, r0, r4, asr r9

080154ec <net::acd_restart(net::acd::Acd*)>:
 80154ec:	b510      	push	{r4, lr}
 80154ee:	79c3      	ldrb	r3, [r0, #7]
 80154f0:	4604      	mov	r4, r0
 80154f2:	3301      	adds	r3, #1
 80154f4:	71c3      	strb	r3, [r0, #7]
 80154f6:	6883      	ldr	r3, [r0, #8]
 80154f8:	2002      	movs	r0, #2
 80154fa:	4798      	blx	r3
 80154fc:	79e3      	ldrb	r3, [r4, #7]
 80154fe:	2b09      	cmp	r3, #9
 8015500:	d905      	bls.n	801550e <net::acd_restart(net::acd::Acd*)+0x22>
 8015502:	2307      	movs	r3, #7
 8015504:	7123      	strb	r3, [r4, #4]
 8015506:	f44f 7316 	mov.w	r3, #600	@ 0x258
 801550a:	81a3      	strh	r3, [r4, #12]
 801550c:	bd10      	pop	{r4, pc}
 801550e:	4620      	mov	r0, r4
 8015510:	f7ff ff66 	bl	80153e0 <net::acd_stop(net::acd::Acd*)>
 8015514:	68a3      	ldr	r3, [r4, #8]
 8015516:	2001      	movs	r0, #1
 8015518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801551c:	4718      	bx	r3
	...

08015520 <net::acd_network_changed_link_down()>:
 8015520:	4b01      	ldr	r3, [pc, #4]	@ (8015528 <net::acd_network_changed_link_down()+0x8>)
 8015522:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8015524:	f7ff bf5c 	b.w	80153e0 <net::acd_stop(net::acd::Acd*)>
 8015528:	20002954 	andcs	r2, r0, r4, asr r9

0801552c <net::acd_arp_reply(t_arp*)>:
 801552c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015530:	4e28      	ldr	r6, [pc, #160]	@ (80155d4 <net::acd_arp_reply(t_arp*)+0xa8>)
 8015532:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 8015534:	792f      	ldrb	r7, [r5, #4]
 8015536:	2f03      	cmp	r7, #3
 8015538:	4604      	mov	r4, r0
 801553a:	d802      	bhi.n	8015542 <net::acd_arp_reply(t_arp*)+0x16>
 801553c:	b9bf      	cbnz	r7, 801556e <net::acd_arp_reply(t_arp*)+0x42>
 801553e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015542:	1f3b      	subs	r3, r7, #4
 8015544:	2b02      	cmp	r3, #2
 8015546:	d8fa      	bhi.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 8015548:	301c      	adds	r0, #28
 801554a:	f7fe fb8b 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 801554e:	682b      	ldr	r3, [r5, #0]
 8015550:	4298      	cmp	r0, r3
 8015552:	d1f4      	bne.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 8015554:	f104 0315 	add.w	r3, r4, #21
 8015558:	3613      	adds	r6, #19
 801555a:	341b      	adds	r4, #27
 801555c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8015560:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 8015564:	4291      	cmp	r1, r2
 8015566:	d121      	bne.n	80155ac <net::acd_arp_reply(t_arp*)+0x80>
 8015568:	42a3      	cmp	r3, r4
 801556a:	d1f7      	bne.n	801555c <net::acd_arp_reply(t_arp*)+0x30>
 801556c:	e7e7      	b.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 801556e:	301c      	adds	r0, #28
 8015570:	f7fe fb78 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8015574:	682f      	ldr	r7, [r5, #0]
 8015576:	42b8      	cmp	r0, r7
 8015578:	d013      	beq.n	80155a2 <net::acd_arp_reply(t_arp*)+0x76>
 801557a:	2800      	cmp	r0, #0
 801557c:	d0df      	beq.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 801557e:	f104 0026 	add.w	r0, r4, #38	@ 0x26
 8015582:	f7fe fb6f 	bl	8013c64 <net::memcpy_ip(unsigned char const*)>
 8015586:	4287      	cmp	r7, r0
 8015588:	d1d9      	bne.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 801558a:	f104 0315 	add.w	r3, r4, #21
 801558e:	3613      	adds	r6, #19
 8015590:	341b      	adds	r4, #27
 8015592:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8015596:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 801559a:	4291      	cmp	r1, r2
 801559c:	d1cf      	bne.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 801559e:	42a3      	cmp	r3, r4
 80155a0:	d1f7      	bne.n	8015592 <net::acd_arp_reply(t_arp*)+0x66>
 80155a2:	4628      	mov	r0, r5
 80155a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80155a8:	f7ff bfa0 	b.w	80154ec <net::acd_restart(net::acd::Acd*)>
 80155ac:	2f06      	cmp	r7, #6
 80155ae:	d107      	bne.n	80155c0 <net::acd_arp_reply(t_arp*)+0x94>
 80155b0:	4628      	mov	r0, r5
 80155b2:	f7ff ff15 	bl	80153e0 <net::acd_stop(net::acd::Acd*)>
 80155b6:	68ab      	ldr	r3, [r5, #8]
 80155b8:	2002      	movs	r0, #2
 80155ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80155be:	4718      	bx	r3
 80155c0:	79ab      	ldrb	r3, [r5, #6]
 80155c2:	2b00      	cmp	r3, #0
 80155c4:	d1ed      	bne.n	80155a2 <net::acd_arp_reply(t_arp*)+0x76>
 80155c6:	6828      	ldr	r0, [r5, #0]
 80155c8:	f000 f950 	bl	801586c <net::arp_acd_send_announcement(net::ip_addr)>
 80155cc:	2364      	movs	r3, #100	@ 0x64
 80155ce:	71ab      	strb	r3, [r5, #6]
 80155d0:	e7b5      	b.n	801553e <net::acd_arp_reply(t_arp*)+0x12>
 80155d2:	bf00      	nop
 80155d4:	20002954 	andcs	r2, r0, r4, asr r9

080155d8 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))>:
 80155d8:	4b01      	ldr	r3, [pc, #4]	@ (80155e0 <net::acd_add(net::acd::Acd*, void (*)(net::acd::Callback))+0x8>)
 80155da:	6081      	str	r1, [r0, #8]
 80155dc:	6258      	str	r0, [r3, #36]	@ 0x24
 80155de:	4770      	bx	lr
 80155e0:	20002954 	andcs	r2, r0, r4, asr r9

080155e4 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)>:
 80155e4:	b320      	cbz	r0, 8015630 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80155e6:	b319      	cbz	r1, 8015630 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x4c>
 80155e8:	4b12      	ldr	r3, [pc, #72]	@ (8015634 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x50>)
 80155ea:	b510      	push	{r4, lr}
 80155ec:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 80155ee:	6823      	ldr	r3, [r4, #0]
 80155f0:	4283      	cmp	r3, r0
 80155f2:	d119      	bne.n	8015628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80155f4:	b29b      	uxth	r3, r3
 80155f6:	f64a 12fe 	movw	r2, #43518	@ 0xa9fe
 80155fa:	4293      	cmp	r3, r2
 80155fc:	d114      	bne.n	8015628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 80155fe:	b289      	uxth	r1, r1
 8015600:	4299      	cmp	r1, r3
 8015602:	d011      	beq.n	8015628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8015604:	7923      	ldrb	r3, [r4, #4]
 8015606:	2b05      	cmp	r3, #5
 8015608:	d80c      	bhi.n	8015624 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x40>
 801560a:	2b03      	cmp	r3, #3
 801560c:	d80d      	bhi.n	801562a <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x46>
 801560e:	3b01      	subs	r3, #1
 8015610:	2b02      	cmp	r3, #2
 8015612:	d809      	bhi.n	8015628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8015614:	4620      	mov	r0, r4
 8015616:	f7ff fee3 	bl	80153e0 <net::acd_stop(net::acd::Acd*)>
 801561a:	68a3      	ldr	r3, [r4, #8]
 801561c:	2002      	movs	r0, #2
 801561e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015622:	4718      	bx	r3
 8015624:	2b07      	cmp	r3, #7
 8015626:	d0f5      	beq.n	8015614 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x30>
 8015628:	bd10      	pop	{r4, pc}
 801562a:	2306      	movs	r3, #6
 801562c:	7123      	strb	r3, [r4, #4]
 801562e:	e7fb      	b.n	8015628 <net::acd_netif_ip_addr_changed(net::ip_addr, net::ip_addr)+0x44>
 8015630:	4770      	bx	lr
 8015632:	bf00      	nop
 8015634:	20002954 	andcs	r2, r0, r4, asr r9

08015638 <net::arp_find_record(unsigned long, net::arp::Flags)>:
 8015638:	4b17      	ldr	r3, [pc, #92]	@ (8015698 <net::arp_find_record(unsigned long, net::arp::Flags)+0x60>)
 801563a:	b570      	push	{r4, r5, r6, lr}
 801563c:	f04f 0e00 	mov.w	lr, #0
 8015640:	4604      	mov	r4, r0
 8015642:	f503 7cc0 	add.w	ip, r3, #384	@ 0x180
 8015646:	4676      	mov	r6, lr
 8015648:	4675      	mov	r5, lr
 801564a:	4670      	mov	r0, lr
 801564c:	e004      	b.n	8015658 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801564e:	2a03      	cmp	r2, #3
 8015650:	d019      	beq.n	8015686 <net::arp_find_record(unsigned long, net::arp::Flags)+0x4e>
 8015652:	3318      	adds	r3, #24
 8015654:	4563      	cmp	r3, ip
 8015656:	d012      	beq.n	801567e <net::arp_find_record(unsigned long, net::arp::Flags)+0x46>
 8015658:	681a      	ldr	r2, [r3, #0]
 801565a:	42a2      	cmp	r2, r4
 801565c:	d01a      	beq.n	8015694 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5c>
 801565e:	2901      	cmp	r1, #1
 8015660:	d0f7      	beq.n	8015652 <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 8015662:	695a      	ldr	r2, [r3, #20]
 8015664:	b1aa      	cbz	r2, 8015692 <net::arp_find_record(unsigned long, net::arp::Flags)+0x5a>
 8015666:	2a02      	cmp	r2, #2
 8015668:	d1f1      	bne.n	801564e <net::arp_find_record(unsigned long, net::arp::Flags)+0x16>
 801566a:	8a5a      	ldrh	r2, [r3, #18]
 801566c:	4572      	cmp	r2, lr
 801566e:	bf88      	it	hi
 8015670:	461d      	movhi	r5, r3
 8015672:	f103 0318 	add.w	r3, r3, #24
 8015676:	bf88      	it	hi
 8015678:	4696      	movhi	lr, r2
 801567a:	4563      	cmp	r3, ip
 801567c:	d1ec      	bne.n	8015658 <net::arp_find_record(unsigned long, net::arp::Flags)+0x20>
 801567e:	2800      	cmp	r0, #0
 8015680:	bf08      	it	eq
 8015682:	4628      	moveq	r0, r5
 8015684:	bd70      	pop	{r4, r5, r6, pc}
 8015686:	8a5a      	ldrh	r2, [r3, #18]
 8015688:	42b2      	cmp	r2, r6
 801568a:	bf84      	itt	hi
 801568c:	4616      	movhi	r6, r2
 801568e:	4618      	movhi	r0, r3
 8015690:	e7df      	b.n	8015652 <net::arp_find_record(unsigned long, net::arp::Flags)+0x1a>
 8015692:	601c      	str	r4, [r3, #0]
 8015694:	4618      	mov	r0, r3
 8015696:	bd70      	pop	{r4, r5, r6, pc}
 8015698:	1000cb10 	andne	ip, r0, r0, lsl fp

0801569c <net::arp_timer()>:
 801569c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80156a0:	4c28      	ldr	r4, [pc, #160]	@ (8015744 <net::arp_timer()+0xa8>)
 80156a2:	2703      	movs	r7, #3
 80156a4:	f504 76c0 	add.w	r6, r4, #384	@ 0x180
 80156a8:	f04f 0800 	mov.w	r8, #0
 80156ac:	e006      	b.n	80156bc <net::arp_timer()+0x20>
 80156ae:	2a01      	cmp	r2, #1
 80156b0:	d101      	bne.n	80156b6 <net::arp_timer()+0x1a>
 80156b2:	2b02      	cmp	r3, #2
 80156b4:	d839      	bhi.n	801572a <net::arp_timer()+0x8e>
 80156b6:	3418      	adds	r4, #24
 80156b8:	42a6      	cmp	r6, r4
 80156ba:	d02c      	beq.n	8015716 <net::arp_timer()+0x7a>
 80156bc:	f854 2c04 	ldr.w	r2, [r4, #-4]
 80156c0:	2a00      	cmp	r2, #0
 80156c2:	d0f8      	beq.n	80156b6 <net::arp_timer()+0x1a>
 80156c4:	f834 3c06 	ldrh.w	r3, [r4, #-6]
 80156c8:	3301      	adds	r3, #1
 80156ca:	b29b      	uxth	r3, r3
 80156cc:	2a02      	cmp	r2, #2
 80156ce:	f824 3c06 	strh.w	r3, [r4, #-6]
 80156d2:	d022      	beq.n	801571a <net::arp_timer()+0x7e>
 80156d4:	2a03      	cmp	r2, #3
 80156d6:	d1ea      	bne.n	80156ae <net::arp_timer()+0x12>
 80156d8:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 80156dc:	d9eb      	bls.n	80156b6 <net::arp_timer()+0x1a>
 80156de:	4d1a      	ldr	r5, [pc, #104]	@ (8015748 <net::arp_timer()+0xac>)
 80156e0:	2301      	movs	r3, #1
 80156e2:	f844 3c04 	str.w	r3, [r4, #-4]
 80156e6:	f854 3c18 	ldr.w	r3, [r4, #-24]
 80156ea:	f8c5 3026 	str.w	r3, [r5, #38]	@ 0x26
 80156ee:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 80156f2:	602b      	str	r3, [r5, #0]
 80156f4:	4628      	mov	r0, r5
 80156f6:	f834 3c08 	ldrh.w	r3, [r4, #-8]
 80156fa:	80ab      	strh	r3, [r5, #4]
 80156fc:	213c      	movs	r1, #60	@ 0x3c
 80156fe:	f7ff fdef 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 8015702:	4628      	mov	r0, r5
 8015704:	1dab      	adds	r3, r5, #6
 8015706:	22ff      	movs	r2, #255	@ 0xff
 8015708:	f800 2b01 	strb.w	r2, [r0], #1
 801570c:	4298      	cmp	r0, r3
 801570e:	d1fb      	bne.n	8015708 <net::arp_timer()+0x6c>
 8015710:	3418      	adds	r4, #24
 8015712:	42a6      	cmp	r6, r4
 8015714:	d1d2      	bne.n	80156bc <net::arp_timer()+0x20>
 8015716:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801571a:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 801571e:	d9ca      	bls.n	80156b6 <net::arp_timer()+0x1a>
 8015720:	f844 7c04 	str.w	r7, [r4, #-4]
 8015724:	f824 8c06 	strh.w	r8, [r4, #-6]
 8015728:	e7c5      	b.n	80156b6 <net::arp_timer()+0x1a>
 801572a:	f854 0c14 	ldr.w	r0, [r4, #-20]
 801572e:	b108      	cbz	r0, 8015734 <net::arp_timer()+0x98>
 8015730:	f004 ff24 	bl	801a57c <operator delete[](void*)>
 8015734:	f1a4 0318 	sub.w	r3, r4, #24
 8015738:	2200      	movs	r2, #0
 801573a:	f843 2b04 	str.w	r2, [r3], #4
 801573e:	42a3      	cmp	r3, r4
 8015740:	d1fb      	bne.n	801573a <net::arp_timer()+0x9e>
 8015742:	e7b8      	b.n	80156b6 <net::arp_timer()+0x1a>
 8015744:	1000cb28 	andne	ip, r0, r8, lsr #22
 8015748:	200029c0 	andcs	r2, r0, r0, asr #19

0801574c <net::arp_send(t_udp*, unsigned long, unsigned long)>:
 801574c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801574e:	4b39      	ldr	r3, [pc, #228]	@ (8015834 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xe8>)
 8015750:	681b      	ldr	r3, [r3, #0]
 8015752:	4604      	mov	r4, r0
 8015754:	4393      	bics	r3, r2
 8015756:	f04f 0000 	mov.w	r0, #0
 801575a:	4615      	mov	r5, r2
 801575c:	f8c4 201e 	str.w	r2, [r4, #30]
 8015760:	7620      	strb	r0, [r4, #24]
 8015762:	7660      	strb	r0, [r4, #25]
 8015764:	460e      	mov	r6, r1
 8015766:	d15c      	bne.n	8015822 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xd6>
 8015768:	4b33      	ldr	r3, [pc, #204]	@ (8015838 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xec>)
 801576a:	f503 72c0 	add.w	r2, r3, #384	@ 0x180
 801576e:	6959      	ldr	r1, [r3, #20]
 8015770:	2901      	cmp	r1, #1
 8015772:	dd02      	ble.n	801577a <net::arp_send(t_udp*, unsigned long, unsigned long)+0x2e>
 8015774:	6819      	ldr	r1, [r3, #0]
 8015776:	42a9      	cmp	r1, r5
 8015778:	d031      	beq.n	80157de <net::arp_send(t_udp*, unsigned long, unsigned long)+0x92>
 801577a:	3318      	adds	r3, #24
 801577c:	4293      	cmp	r3, r2
 801577e:	d1f6      	bne.n	801576e <net::arp_send(t_udp*, unsigned long, unsigned long)+0x22>
 8015780:	2100      	movs	r1, #0
 8015782:	4628      	mov	r0, r5
 8015784:	f7ff ff58 	bl	8015638 <net::arp_find_record(unsigned long, net::arp::Flags)>
 8015788:	6943      	ldr	r3, [r0, #20]
 801578a:	4607      	mov	r7, r0
 801578c:	b1d3      	cbz	r3, 80157c4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x78>
 801578e:	2b01      	cmp	r3, #1
 8015790:	d000      	beq.n	8015794 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 8015792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015794:	6878      	ldr	r0, [r7, #4]
 8015796:	b108      	cbz	r0, 801579c <net::arp_send(t_udp*, unsigned long, unsigned long)+0x50>
 8015798:	f004 fef0 	bl	801a57c <operator delete[](void*)>
 801579c:	4630      	mov	r0, r6
 801579e:	f004 fef3 	bl	801a588 <operator new[](unsigned int)>
 80157a2:	ea44 0200 	orr.w	r2, r4, r0
 80157a6:	0792      	lsls	r2, r2, #30
 80157a8:	4603      	mov	r3, r0
 80157aa:	6078      	str	r0, [r7, #4]
 80157ac:	d027      	beq.n	80157fe <net::arp_send(t_udp*, unsigned long, unsigned long)+0xb2>
 80157ae:	4631      	mov	r1, r6
 80157b0:	b131      	cbz	r1, 80157c0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x74>
 80157b2:	4421      	add	r1, r4
 80157b4:	f814 2b01 	ldrb.w	r2, [r4], #1
 80157b8:	f803 2b01 	strb.w	r2, [r3], #1
 80157bc:	428c      	cmp	r4, r1
 80157be:	d1f9      	bne.n	80157b4 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x68>
 80157c0:	60be      	str	r6, [r7, #8]
 80157c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80157c4:	8243      	strh	r3, [r0, #18]
 80157c6:	2301      	movs	r3, #1
 80157c8:	481c      	ldr	r0, [pc, #112]	@ (801583c <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf0>)
 80157ca:	617b      	str	r3, [r7, #20]
 80157cc:	213c      	movs	r1, #60	@ 0x3c
 80157ce:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 80157d2:	f7ff fd85 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 80157d6:	697b      	ldr	r3, [r7, #20]
 80157d8:	2b01      	cmp	r3, #1
 80157da:	d1da      	bne.n	8015792 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x46>
 80157dc:	e7da      	b.n	8015794 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x48>
 80157de:	f103 020c 	add.w	r2, r3, #12
 80157e2:	4621      	mov	r1, r4
 80157e4:	3312      	adds	r3, #18
 80157e6:	f812 0b01 	ldrb.w	r0, [r2], #1
 80157ea:	f801 0b01 	strb.w	r0, [r1], #1
 80157ee:	429a      	cmp	r2, r3
 80157f0:	d1f9      	bne.n	80157e6 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x9a>
 80157f2:	4631      	mov	r1, r6
 80157f4:	4620      	mov	r0, r4
 80157f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80157fa:	f7ff bd71 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 80157fe:	2e03      	cmp	r6, #3
 8015800:	d9d5      	bls.n	80157ae <net::arp_send(t_udp*, unsigned long, unsigned long)+0x62>
 8015802:	1f35      	subs	r5, r6, #4
 8015804:	f025 0503 	bic.w	r5, r5, #3
 8015808:	3504      	adds	r5, #4
 801580a:	1960      	adds	r0, r4, r5
 801580c:	461a      	mov	r2, r3
 801580e:	f854 1b04 	ldr.w	r1, [r4], #4
 8015812:	f842 1b04 	str.w	r1, [r2], #4
 8015816:	4284      	cmp	r4, r0
 8015818:	d1f9      	bne.n	801580e <net::arp_send(t_udp*, unsigned long, unsigned long)+0xc2>
 801581a:	442b      	add	r3, r5
 801581c:	f006 0103 	and.w	r1, r6, #3
 8015820:	e7c6      	b.n	80157b0 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x64>
 8015822:	f64a 13fe 	movw	r3, #43518	@ 0xa9fe
 8015826:	b292      	uxth	r2, r2
 8015828:	429a      	cmp	r2, r3
 801582a:	bf1c      	itt	ne
 801582c:	4b04      	ldrne	r3, [pc, #16]	@ (8015840 <net::arp_send(t_udp*, unsigned long, unsigned long)+0xf4>)
 801582e:	689d      	ldrne	r5, [r3, #8]
 8015830:	e79a      	b.n	8015768 <net::arp_send(t_udp*, unsigned long, unsigned long)+0x1c>
 8015832:	bf00      	nop
 8015834:	20002938 	andcs	r2, r0, r8, lsr r9
 8015838:	1000cb10 	andne	ip, r0, r0, lsl fp
 801583c:	200029c0 	andcs	r2, r0, r0, asr #19
 8015840:	20002954 	andcs	r2, r0, r4, asr r9

08015844 <net::arp_acd_probe(net::ip_addr)>:
 8015844:	b510      	push	{r4, lr}
 8015846:	4c07      	ldr	r4, [pc, #28]	@ (8015864 <net::arp_acd_probe(net::ip_addr)+0x20>)
 8015848:	4603      	mov	r3, r0
 801584a:	2200      	movs	r2, #0
 801584c:	213c      	movs	r1, #60	@ 0x3c
 801584e:	4620      	mov	r0, r4
 8015850:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8015854:	61e2      	str	r2, [r4, #28]
 8015856:	f7ff fd43 	bl	80152e0 <emac_eth_send(void*, unsigned long)>
 801585a:	4b03      	ldr	r3, [pc, #12]	@ (8015868 <net::arp_acd_probe(net::ip_addr)+0x24>)
 801585c:	681b      	ldr	r3, [r3, #0]
 801585e:	61e3      	str	r3, [r4, #28]
 8015860:	bd10      	pop	{r4, pc}
 8015862:	bf00      	nop
 8015864:	200029c0 	andcs	r2, r0, r0, asr #19
 8015868:	20002954 	andcs	r2, r0, r4, asr r9

0801586c <net::arp_acd_send_announcement(net::ip_addr)>:
 801586c:	4a04      	ldr	r2, [pc, #16]	@ (8015880 <net::arp_acd_send_announcement(net::ip_addr)+0x14>)
 801586e:	4603      	mov	r3, r0
 8015870:	213c      	movs	r1, #60	@ 0x3c
 8015872:	4610      	mov	r0, r2
 8015874:	f8c2 3026 	str.w	r3, [r2, #38]	@ 0x26
 8015878:	61d3      	str	r3, [r2, #28]
 801587a:	f7ff bd31 	b.w	80152e0 <emac_eth_send(void*, unsigned long)>
 801587e:	bf00      	nop
 8015880:	200029c0 	andcs	r2, r0, r0, asr #19

08015884 <net::ip_set_ip()>:
 8015884:	b508      	push	{r3, lr}
 8015886:	f7ff f85b 	bl	8014940 <net::udp_set_ip()>
 801588a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801588e:	f7fe bc39 	b.w	8014104 <net::igmp_set_ip()>
 8015892:	bf00      	nop

08015894 <net::phy_get_link(unsigned long)>:
 8015894:	b507      	push	{r0, r1, r2, lr}
 8015896:	2300      	movs	r3, #0
 8015898:	f10d 0206 	add.w	r2, sp, #6
 801589c:	2101      	movs	r1, #1
 801589e:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158a2:	f7ff fb8b 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80158a6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80158aa:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80158ae:	b003      	add	sp, #12
 80158b0:	f85d fb04 	ldr.w	pc, [sp], #4

080158b4 <net::phy_start(unsigned long, net::PhyStatus&)>:
 80158b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80158b8:	460d      	mov	r5, r1
 80158ba:	f10d 0206 	add.w	r2, sp, #6
 80158be:	2104      	movs	r1, #4
 80158c0:	4604      	mov	r4, r0
 80158c2:	f7ff fb7b 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80158c6:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 80158ca:	f240 1241 	movw	r2, #321	@ 0x141
 80158ce:	f401 637e 	and.w	r3, r1, #4064	@ 0xfe0
 80158d2:	4313      	orrs	r3, r2
 80158d4:	f411 616a 	ands.w	r1, r1, #3744	@ 0xea0
 80158d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158dc:	d10a      	bne.n	80158f4 <net::phy_start(unsigned long, net::PhyStatus&)+0x40>
 80158de:	f10d 0206 	add.w	r2, sp, #6
 80158e2:	4620      	mov	r0, r4
 80158e4:	f7ff fb6a 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80158e8:	b9f8      	cbnz	r0, 801592a <net::phy_start(unsigned long, net::PhyStatus&)+0x76>
 80158ea:	2600      	movs	r6, #0
 80158ec:	4630      	mov	r0, r6
 80158ee:	b003      	add	sp, #12
 80158f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80158f4:	2104      	movs	r1, #4
 80158f6:	4620      	mov	r0, r4
 80158f8:	f7ff fb6b 	bl	8014fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 80158fc:	2800      	cmp	r0, #0
 80158fe:	d0f4      	beq.n	80158ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 8015900:	f10d 0206 	add.w	r2, sp, #6
 8015904:	2100      	movs	r1, #0
 8015906:	4620      	mov	r0, r4
 8015908:	f7ff fb58 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 801590c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015910:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8015914:	f442 5290 	orr.w	r2, r2, #4608	@ 0x1200
 8015918:	b292      	uxth	r2, r2
 801591a:	2100      	movs	r1, #0
 801591c:	4620      	mov	r0, r4
 801591e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015922:	f7ff fb56 	bl	8014fd2 <net::phy_write(unsigned long, unsigned long, unsigned short)>
 8015926:	b938      	cbnz	r0, 8015938 <net::phy_start(unsigned long, net::PhyStatus&)+0x84>
 8015928:	e7df      	b.n	80158ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 801592a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801592e:	f403 53a0 	and.w	r3, r3, #5120	@ 0x1400
 8015932:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8015936:	d1e3      	bne.n	8015900 <net::phy_start(unsigned long, net::PhyStatus&)+0x4c>
 8015938:	f10d 0206 	add.w	r2, sp, #6
 801593c:	2101      	movs	r1, #1
 801593e:	4620      	mov	r0, r4
 8015940:	f7ff fb3c 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8015944:	4606      	mov	r6, r0
 8015946:	2800      	cmp	r0, #0
 8015948:	d0cf      	beq.n	80158ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 801594a:	682a      	ldr	r2, [r5, #0]
 801594c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8015950:	b90a      	cbnz	r2, 8015956 <net::phy_start(unsigned long, net::PhyStatus&)+0xa2>
 8015952:	0759      	lsls	r1, r3, #29
 8015954:	d40f      	bmi.n	8015976 <net::phy_start(unsigned long, net::PhyStatus&)+0xc2>
 8015956:	069a      	lsls	r2, r3, #26
 8015958:	d43b      	bmi.n	80159d2 <net::phy_start(unsigned long, net::PhyStatus&)+0x11e>
 801595a:	4f25      	ldr	r7, [pc, #148]	@ (80159f0 <net::phy_start(unsigned long, net::PhyStatus&)+0x13c>)
 801595c:	4825      	ldr	r0, [pc, #148]	@ (80159f4 <net::phy_start(unsigned long, net::PhyStatus&)+0x140>)
 801595e:	f004 fc10 	bl	801a182 <puts>
 8015962:	f8d7 8000 	ldr.w	r8, [r7]
 8015966:	f241 3988 	movw	r9, #5000	@ 0x1388
 801596a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801596e:	069b      	lsls	r3, r3, #26
 8015970:	d523      	bpl.n	80159ba <net::phy_start(unsigned long, net::PhyStatus&)+0x106>
 8015972:	2301      	movs	r3, #1
 8015974:	602b      	str	r3, [r5, #0]
 8015976:	2300      	movs	r3, #0
 8015978:	e9c5 3301 	strd	r3, r3, [r5, #4]
 801597c:	aa01      	add	r2, sp, #4
 801597e:	2104      	movs	r1, #4
 8015980:	4620      	mov	r0, r4
 8015982:	f7ff fb1b 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8015986:	f10d 0206 	add.w	r2, sp, #6
 801598a:	2105      	movs	r1, #5
 801598c:	4620      	mov	r0, r4
 801598e:	f7ff fb15 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 8015992:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8015996:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801599a:	4013      	ands	r3, r2
 801599c:	f413 7fc0 	tst.w	r3, #384	@ 0x180
 80159a0:	d022      	beq.n	80159e8 <net::phy_start(unsigned long, net::PhyStatus&)+0x134>
 80159a2:	2201      	movs	r2, #1
 80159a4:	60aa      	str	r2, [r5, #8]
 80159a6:	f413 7f80 	tst.w	r3, #256	@ 0x100
 80159aa:	d001      	beq.n	80159b0 <net::phy_start(unsigned long, net::PhyStatus&)+0xfc>
 80159ac:	2301      	movs	r3, #1
 80159ae:	606b      	str	r3, [r5, #4]
 80159b0:	4620      	mov	r0, r4
 80159b2:	f7ff ff6f 	bl	8015894 <net::phy_get_link(unsigned long)>
 80159b6:	6028      	str	r0, [r5, #0]
 80159b8:	e798      	b.n	80158ec <net::phy_start(unsigned long, net::PhyStatus&)+0x38>
 80159ba:	683b      	ldr	r3, [r7, #0]
 80159bc:	eba3 0308 	sub.w	r3, r3, r8
 80159c0:	454b      	cmp	r3, r9
 80159c2:	d892      	bhi.n	80158ea <net::phy_start(unsigned long, net::PhyStatus&)+0x36>
 80159c4:	f10d 0206 	add.w	r2, sp, #6
 80159c8:	2101      	movs	r1, #1
 80159ca:	4620      	mov	r0, r4
 80159cc:	f7ff faf6 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80159d0:	e7cb      	b.n	801596a <net::phy_start(unsigned long, net::PhyStatus&)+0xb6>
 80159d2:	f10d 0206 	add.w	r2, sp, #6
 80159d6:	2101      	movs	r1, #1
 80159d8:	4620      	mov	r0, r4
 80159da:	f7ff faef 	bl	8014fbc <net::phy_read(unsigned long, unsigned long, unsigned short&)>
 80159de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80159e2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80159e6:	e7c5      	b.n	8015974 <net::phy_start(unsigned long, net::PhyStatus&)+0xc0>
 80159e8:	f013 0f40 	tst.w	r3, #64	@ 0x40
 80159ec:	e7dd      	b.n	80159aa <net::phy_start(unsigned long, net::PhyStatus&)+0xf6>
 80159ee:	bf00      	nop
 80159f0:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80159f4:	0801b50d 	stmdaeq	r1, {r0, r2, r3, r8, sl, ip, sp, pc}

080159f8 <Display::ClearEndOfLine() [clone .isra.0]>:
 80159f8:	b108      	cbz	r0, 80159fe <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 80159fa:	2301      	movs	r3, #1
 80159fc:	7303      	strb	r3, [r0, #12]
 80159fe:	4770      	bx	lr

08015a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>:
 8015a00:	b430      	push	{r4, r5}
 8015a02:	b160      	cbz	r0, 8015a1e <Display::Write(unsigned long, char const*) [clone .isra.0]+0x1e>
 8015a04:	6845      	ldr	r5, [r0, #4]
 8015a06:	2300      	movs	r3, #0
 8015a08:	5cd4      	ldrb	r4, [r2, r3]
 8015a0a:	b11c      	cbz	r4, 8015a14 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x14>
 8015a0c:	1c5c      	adds	r4, r3, #1
 8015a0e:	429d      	cmp	r5, r3
 8015a10:	4623      	mov	r3, r4
 8015a12:	d8f9      	bhi.n	8015a08 <Display::Write(unsigned long, char const*) [clone .isra.0]+0x8>
 8015a14:	6804      	ldr	r4, [r0, #0]
 8015a16:	69e4      	ldr	r4, [r4, #28]
 8015a18:	46a4      	mov	ip, r4
 8015a1a:	bc30      	pop	{r4, r5}
 8015a1c:	4760      	bx	ip
 8015a1e:	bc30      	pop	{r4, r5}
 8015a20:	4770      	bx	lr

08015a22 <Display::Printf(unsigned long, char const*, ...)>:
 8015a22:	b40c      	push	{r2, r3}
 8015a24:	b570      	push	{r4, r5, r6, lr}
 8015a26:	6984      	ldr	r4, [r0, #24]
 8015a28:	b08a      	sub	sp, #40	@ 0x28
 8015a2a:	4605      	mov	r5, r0
 8015a2c:	460e      	mov	r6, r1
 8015a2e:	b174      	cbz	r4, 8015a4e <Display::Printf(unsigned long, char const*, ...)+0x2c>
 8015a30:	ab0f      	add	r3, sp, #60	@ 0x3c
 8015a32:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015a34:	9301      	str	r3, [sp, #4]
 8015a36:	2120      	movs	r1, #32
 8015a38:	a802      	add	r0, sp, #8
 8015a3a:	f004 fb8d 	bl	801a158 <vsnprintf>
 8015a3e:	4604      	mov	r4, r0
 8015a40:	69a8      	ldr	r0, [r5, #24]
 8015a42:	6803      	ldr	r3, [r0, #0]
 8015a44:	aa02      	add	r2, sp, #8
 8015a46:	69dd      	ldr	r5, [r3, #28]
 8015a48:	4631      	mov	r1, r6
 8015a4a:	4623      	mov	r3, r4
 8015a4c:	47a8      	blx	r5
 8015a4e:	4620      	mov	r0, r4
 8015a50:	b00a      	add	sp, #40	@ 0x28
 8015a52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a56:	b002      	add	sp, #8
 8015a58:	4770      	bx	lr
	...

08015a5c <DisplayUdf::ShowIpAddress()>:
 8015a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015a60:	4e16      	ldr	r6, [pc, #88]	@ (8015abc <DisplayUdf::ShowIpAddress()+0x60>)
 8015a62:	b086      	sub	sp, #24
 8015a64:	4605      	mov	r5, r0
 8015a66:	6980      	ldr	r0, [r0, #24]
 8015a68:	f7ff ffc6 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015a6c:	6870      	ldr	r0, [r6, #4]
 8015a6e:	6834      	ldr	r4, [r6, #0]
 8015a70:	f895 703e 	ldrb.w	r7, [r5, #62]	@ 0x3e
 8015a74:	f004 fdd6 	bl	801a624 <__popcountsi2>
 8015a78:	7eb3      	ldrb	r3, [r6, #26]
 8015a7a:	075a      	lsls	r2, r3, #29
 8015a7c:	fa5f f884 	uxtb.w	r8, r4
 8015a80:	f3c4 2907 	ubfx	r9, r4, #8, #8
 8015a84:	f3c4 4a07 	ubfx	sl, r4, #16, #8
 8015a88:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8015a8c:	d413      	bmi.n	8015ab6 <DisplayUdf::ShowIpAddress()+0x5a>
 8015a8e:	f013 0f02 	tst.w	r3, #2
 8015a92:	bf0c      	ite	eq
 8015a94:	2253      	moveq	r2, #83	@ 0x53
 8015a96:	2244      	movne	r2, #68	@ 0x44
 8015a98:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8015a9c:	e9cd a401 	strd	sl, r4, [sp, #4]
 8015aa0:	4a07      	ldr	r2, [pc, #28]	@ (8015ac0 <DisplayUdf::ShowIpAddress()+0x64>)
 8015aa2:	f8cd 9000 	str.w	r9, [sp]
 8015aa6:	4643      	mov	r3, r8
 8015aa8:	4639      	mov	r1, r7
 8015aaa:	4628      	mov	r0, r5
 8015aac:	f7ff ffb9 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8015ab0:	b006      	add	sp, #24
 8015ab2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015ab6:	225a      	movs	r2, #90	@ 0x5a
 8015ab8:	e7ee      	b.n	8015a98 <DisplayUdf::ShowIpAddress()+0x3c>
 8015aba:	bf00      	nop
 8015abc:	20002954 	andcs	r2, r0, r4, asr r9
 8015ac0:	0801b53a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, pc}

08015ac4 <DisplayUdf::DisplayUdf()>:
 8015ac4:	b510      	push	{r4, lr}
 8015ac6:	4604      	mov	r4, r0
 8015ac8:	f001 fafc 	bl	80170c4 <Display::Display()>
 8015acc:	2202      	movs	r2, #2
 8015ace:	2300      	movs	r3, #0
 8015ad0:	e9c4 2314 	strd	r2, r3, [r4, #80]	@ 0x50
 8015ad4:	4b05      	ldr	r3, [pc, #20]	@ (8015aec <DisplayUdf::DisplayUdf()+0x28>)
 8015ad6:	f104 023b 	add.w	r2, r4, #59	@ 0x3b
 8015ada:	601c      	str	r4, [r3, #0]
 8015adc:	2301      	movs	r3, #1
 8015ade:	f802 3f01 	strb.w	r3, [r2, #1]!
 8015ae2:	3301      	adds	r3, #1
 8015ae4:	2b15      	cmp	r3, #21
 8015ae6:	d1fa      	bne.n	8015ade <DisplayUdf::DisplayUdf()+0x1a>
 8015ae8:	4620      	mov	r0, r4
 8015aea:	bd10      	pop	{r4, pc}
 8015aec:	200029fc 	strdcs	r2, [r0], -ip

08015af0 <DisplayUdf::SetTitle(char const*, ...)>:
 8015af0:	b40e      	push	{r1, r2, r3}
 8015af2:	b517      	push	{r0, r1, r2, r4, lr}
 8015af4:	ab05      	add	r3, sp, #20
 8015af6:	4604      	mov	r4, r0
 8015af8:	f853 2b04 	ldr.w	r2, [r3], #4
 8015afc:	9301      	str	r3, [sp, #4]
 8015afe:	211f      	movs	r1, #31
 8015b00:	301c      	adds	r0, #28
 8015b02:	f004 fb29 	bl	801a158 <vsnprintf>
 8015b06:	4404      	add	r4, r0
 8015b08:	2300      	movs	r3, #0
 8015b0a:	7723      	strb	r3, [r4, #28]
 8015b0c:	b003      	add	sp, #12
 8015b0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b12:	b003      	add	sp, #12
 8015b14:	4770      	bx	lr

08015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>:
 8015b16:	1e4b      	subs	r3, r1, #1
 8015b18:	2b05      	cmp	r3, #5
 8015b1a:	b530      	push	{r4, r5, lr}
 8015b1c:	d810      	bhi.n	8015b40 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2a>
 8015b1e:	f100 043b 	add.w	r4, r0, #59	@ 0x3b
 8015b22:	2300      	movs	r3, #0
 8015b24:	b2c9      	uxtb	r1, r1
 8015b26:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8015b2a:	428d      	cmp	r5, r1
 8015b2c:	d109      	bne.n	8015b42 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x2c>
 8015b2e:	1884      	adds	r4, r0, r2
 8015b30:	4403      	add	r3, r0
 8015b32:	f894 403c 	ldrb.w	r4, [r4, #60]	@ 0x3c
 8015b36:	f883 403c 	strb.w	r4, [r3, #60]	@ 0x3c
 8015b3a:	4410      	add	r0, r2
 8015b3c:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 8015b40:	bd30      	pop	{r4, r5, pc}
 8015b42:	3301      	adds	r3, #1
 8015b44:	2b14      	cmp	r3, #20
 8015b46:	d1ee      	bne.n	8015b26 <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x10>
 8015b48:	e7f7      	b.n	8015b3a <DisplayUdf::Set(unsigned long, displayudf::Labels)+0x24>
	...

08015b4c <DisplayUdf::Show()>:
 8015b4c:	b530      	push	{r4, r5, lr}
 8015b4e:	4604      	mov	r4, r0
 8015b50:	b085      	sub	sp, #20
 8015b52:	f000 fadb 	bl	801610c <DisplayUdf::ShowArtNetNode()>
 8015b56:	f104 033b 	add.w	r3, r4, #59	@ 0x3b
 8015b5a:	f104 024f 	add.w	r2, r4, #79	@ 0x4f
 8015b5e:	21ff      	movs	r1, #255	@ 0xff
 8015b60:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8015b64:	2806      	cmp	r0, #6
 8015b66:	bf88      	it	hi
 8015b68:	7019      	strbhi	r1, [r3, #0]
 8015b6a:	4293      	cmp	r3, r2
 8015b6c:	d1f8      	bne.n	8015b60 <DisplayUdf::Show()+0x14>
 8015b6e:	69a0      	ldr	r0, [r4, #24]
 8015b70:	4d2a      	ldr	r5, [pc, #168]	@ (8015c1c <DisplayUdf::Show()+0xd0>)
 8015b72:	f7ff ff41 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015b76:	f104 021c 	add.w	r2, r4, #28
 8015b7a:	f894 103c 	ldrb.w	r1, [r4, #60]	@ 0x3c
 8015b7e:	f7ff ff3f 	bl	8015a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8015b82:	69a0      	ldr	r0, [r4, #24]
 8015b84:	4a26      	ldr	r2, [pc, #152]	@ (8015c20 <DisplayUdf::Show()+0xd4>)
 8015b86:	f7ff ff37 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015b8a:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 8015b8e:	f7ff ff37 	bl	8015a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8015b92:	69a0      	ldr	r0, [r4, #24]
 8015b94:	4a23      	ldr	r2, [pc, #140]	@ (8015c24 <DisplayUdf::Show()+0xd8>)
 8015b96:	f7ff ff2f 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015b9a:	4b23      	ldr	r3, [pc, #140]	@ (8015c28 <DisplayUdf::Show()+0xdc>)
 8015b9c:	9300      	str	r3, [sp, #0]
 8015b9e:	f894 103f 	ldrb.w	r1, [r4, #63]	@ 0x3f
 8015ba2:	2303      	movs	r3, #3
 8015ba4:	4620      	mov	r0, r4
 8015ba6:	f7ff ff3c 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8015baa:	4620      	mov	r0, r4
 8015bac:	f7ff ff56 	bl	8015a5c <DisplayUdf::ShowIpAddress()>
 8015bb0:	69a0      	ldr	r0, [r4, #24]
 8015bb2:	f7ff ff21 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015bb6:	68ab      	ldr	r3, [r5, #8]
 8015bb8:	0e1a      	lsrs	r2, r3, #24
 8015bba:	9202      	str	r2, [sp, #8]
 8015bbc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8015bc0:	9201      	str	r2, [sp, #4]
 8015bc2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8015bc6:	9200      	str	r2, [sp, #0]
 8015bc8:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 8015bcc:	4a17      	ldr	r2, [pc, #92]	@ (8015c2c <DisplayUdf::Show()+0xe0>)
 8015bce:	b2db      	uxtb	r3, r3
 8015bd0:	4620      	mov	r0, r4
 8015bd2:	f7ff ff26 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8015bd6:	69a0      	ldr	r0, [r4, #24]
 8015bd8:	f7ff ff0e 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015bdc:	686b      	ldr	r3, [r5, #4]
 8015bde:	0e1a      	lsrs	r2, r3, #24
 8015be0:	9202      	str	r2, [sp, #8]
 8015be2:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8015be6:	9201      	str	r2, [sp, #4]
 8015be8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8015bec:	9200      	str	r2, [sp, #0]
 8015bee:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8015bf2:	4a0f      	ldr	r2, [pc, #60]	@ (8015c30 <DisplayUdf::Show()+0xe4>)
 8015bf4:	b2db      	uxtb	r3, r3
 8015bf6:	4620      	mov	r0, r4
 8015bf8:	f7ff ff13 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8015bfc:	4620      	mov	r0, r4
 8015bfe:	f7ff ff2d 	bl	8015a5c <DisplayUdf::ShowIpAddress()>
 8015c02:	69a0      	ldr	r0, [r4, #24]
 8015c04:	f7ff fef8 	bl	80159f8 <Display::ClearEndOfLine() [clone .isra.0]>
 8015c08:	4b0a      	ldr	r3, [pc, #40]	@ (8015c34 <DisplayUdf::Show()+0xe8>)
 8015c0a:	f894 1043 	ldrb.w	r1, [r4, #67]	@ 0x43
 8015c0e:	681a      	ldr	r2, [r3, #0]
 8015c10:	3216      	adds	r2, #22
 8015c12:	b005      	add	sp, #20
 8015c14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8015c18:	f7ff bef2 	b.w	8015a00 <Display::Write(unsigned long, char const*) [clone .isra.0]>
 8015c1c:	20002954 	andcs	r2, r0, r4, asr r9
 8015c20:	0801ae6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, sp, pc}
 8015c24:	0801b54c 	stmdaeq	r1, {r2, r3, r6, r8, sl, ip, sp, pc}
 8015c28:	20002aec 	andcs	r2, r0, ip, ror #21
 8015c2c:	0801b55b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, ip, sp, pc}
 8015c30:	0801b56a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, sp, pc}
 8015c34:	20002934 	andcs	r2, r0, r4, lsr r9

08015c38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>:
 8015c38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015c3a:	88c6      	ldrh	r6, [r0, #6]
 8015c3c:	8885      	ldrh	r5, [r0, #4]
 8015c3e:	42ae      	cmp	r6, r5
 8015c40:	d216      	bcs.n	8015c70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x38>
 8015c42:	4604      	mov	r4, r0
 8015c44:	6800      	ldr	r0, [r0, #0]
 8015c46:	1bad      	subs	r5, r5, r6
 8015c48:	4430      	add	r0, r6
 8015c4a:	7a26      	ldrb	r6, [r4, #8]
 8015c4c:	b923      	cbnz	r3, 8015c58 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x20>
 8015c4e:	b926      	cbnz	r6, 8015c5a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x22>
 8015c50:	9200      	str	r2, [sp, #0]
 8015c52:	460b      	mov	r3, r1
 8015c54:	4a09      	ldr	r2, [pc, #36]	@ (8015c7c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x44>)
 8015c56:	e003      	b.n	8015c60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8015c58:	b166      	cbz	r6, 8015c74 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x3c>
 8015c5a:	9200      	str	r2, [sp, #0]
 8015c5c:	4a08      	ldr	r2, [pc, #32]	@ (8015c80 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x48>)
 8015c5e:	460b      	mov	r3, r1
 8015c60:	4629      	mov	r1, r5
 8015c62:	f004 fa61 	bl	801a128 <snprintf>
 8015c66:	4285      	cmp	r5, r0
 8015c68:	bfa2      	ittt	ge
 8015c6a:	88e3      	ldrhge	r3, [r4, #6]
 8015c6c:	181b      	addge	r3, r3, r0
 8015c6e:	80e3      	strhge	r3, [r4, #6]
 8015c70:	b002      	add	sp, #8
 8015c72:	bd70      	pop	{r4, r5, r6, pc}
 8015c74:	9200      	str	r2, [sp, #0]
 8015c76:	460b      	mov	r3, r1
 8015c78:	4a02      	ldr	r2, [pc, #8]	@ (8015c84 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x4c>)
 8015c7a:	e7f1      	b.n	8015c60 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]+0x28>
 8015c7c:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 8015c80:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 8015c84:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

08015c88 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>:
 8015c88:	b507      	push	{r0, r1, r2, lr}
 8015c8a:	2300      	movs	r3, #0
 8015c8c:	2101      	movs	r1, #1
 8015c8e:	e9cd 3100 	strd	r3, r1, [sp]
 8015c92:	4602      	mov	r2, r0
 8015c94:	4804      	ldr	r0, [pc, #16]	@ (8015ca8 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)+0x20>)
 8015c96:	2322      	movs	r3, #34	@ 0x22
 8015c98:	6800      	ldr	r0, [r0, #0]
 8015c9a:	210d      	movs	r1, #13
 8015c9c:	f000 fbbe 	bl	801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>
 8015ca0:	b003      	add	sp, #12
 8015ca2:	f85d fb04 	ldr.w	pc, [sp], #4
 8015ca6:	bf00      	nop
 8015ca8:	20002a00 	andcs	r2, r0, r0, lsl #20

08015cac <DisplayUdfParams::DisplayUdfParams()>:
 8015cac:	b510      	push	{r4, lr}
 8015cae:	2220      	movs	r2, #32
 8015cb0:	4604      	mov	r4, r0
 8015cb2:	2100      	movs	r1, #0
 8015cb4:	f003 ff2c 	bl	8019b10 <memset>
 8015cb8:	2305      	movs	r3, #5
 8015cba:	f884 3020 	strb.w	r3, [r4, #32]
 8015cbe:	237f      	movs	r3, #127	@ 0x7f
 8015cc0:	f884 3021 	strb.w	r3, [r4, #33]	@ 0x21
 8015cc4:	4620      	mov	r0, r4
 8015cc6:	bd10      	pop	{r4, pc}

08015cc8 <DisplayUdfParams::Load()>:
 8015cc8:	b508      	push	{r3, lr}
 8015cca:	2200      	movs	r2, #0
 8015ccc:	7002      	strb	r2, [r0, #0]
 8015cce:	7042      	strb	r2, [r0, #1]
 8015cd0:	7082      	strb	r2, [r0, #2]
 8015cd2:	70c2      	strb	r2, [r0, #3]
 8015cd4:	f7ff ffd8 	bl	8015c88 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8015cd8:	bd08      	pop	{r3, pc}
	...

08015cdc <DisplayUdfParams::Load(char const*, unsigned long)>:
 8015cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015cde:	2500      	movs	r5, #0
 8015ce0:	b087      	sub	sp, #28
 8015ce2:	4604      	mov	r4, r0
 8015ce4:	460e      	mov	r6, r1
 8015ce6:	4617      	mov	r7, r2
 8015ce8:	7005      	strb	r5, [r0, #0]
 8015cea:	7045      	strb	r5, [r0, #1]
 8015cec:	7085      	strb	r5, [r0, #2]
 8015cee:	70c5      	strb	r5, [r0, #3]
 8015cf0:	4602      	mov	r2, r0
 8015cf2:	490c      	ldr	r1, [pc, #48]	@ (8015d24 <DisplayUdfParams::Load(char const*, unsigned long)+0x48>)
 8015cf4:	a804      	add	r0, sp, #16
 8015cf6:	f001 f86d 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8015cfa:	463a      	mov	r2, r7
 8015cfc:	4631      	mov	r1, r6
 8015cfe:	a804      	add	r0, sp, #16
 8015d00:	f001 f86c 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 8015d04:	e9cd 5501 	strd	r5, r5, [sp, #4]
 8015d08:	2322      	movs	r3, #34	@ 0x22
 8015d0a:	4807      	ldr	r0, [pc, #28]	@ (8015d28 <DisplayUdfParams::Load(char const*, unsigned long)+0x4c>)
 8015d0c:	9300      	str	r3, [sp, #0]
 8015d0e:	462a      	mov	r2, r5
 8015d10:	4623      	mov	r3, r4
 8015d12:	210d      	movs	r1, #13
 8015d14:	6800      	ldr	r0, [r0, #0]
 8015d16:	f000 fb5b 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8015d1a:	a804      	add	r0, sp, #16
 8015d1c:	f001 f85d 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 8015d20:	b007      	add	sp, #28
 8015d22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d24:	08015ded 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, lr}
 8015d28:	20002a00 	andcs	r2, r0, r0, lsl #20

08015d2c <DisplayUdfParams::callbackFunction(char const*)>:
 8015d2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015d2e:	460e      	mov	r6, r1
 8015d30:	4604      	mov	r4, r0
 8015d32:	492a      	ldr	r1, [pc, #168]	@ (8015ddc <DisplayUdfParams::callbackFunction(char const*)+0xb0>)
 8015d34:	f10d 0207 	add.w	r2, sp, #7
 8015d38:	4630      	mov	r0, r6
 8015d3a:	f001 f8fa 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8015d3e:	b968      	cbnz	r0, 8015d5c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8015d40:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8015d44:	6823      	ldr	r3, [r4, #0]
 8015d46:	f884 2021 	strb.w	r2, [r4, #33]	@ 0x21
 8015d4a:	2a7f      	cmp	r2, #127	@ 0x7f
 8015d4c:	bf14      	ite	ne
 8015d4e:	f043 5300 	orrne.w	r3, r3, #536870912	@ 0x20000000
 8015d52:	f023 5300 	biceq.w	r3, r3, #536870912	@ 0x20000000
 8015d56:	6023      	str	r3, [r4, #0]
 8015d58:	b003      	add	sp, #12
 8015d5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d5c:	4920      	ldr	r1, [pc, #128]	@ (8015de0 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8015d5e:	f10d 0207 	add.w	r2, sp, #7
 8015d62:	4630      	mov	r0, r6
 8015d64:	f001 f8e5 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8015d68:	b958      	cbnz	r0, 8015d82 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8015d6a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8015d6e:	6823      	ldr	r3, [r4, #0]
 8015d70:	f884 2020 	strb.w	r2, [r4, #32]
 8015d74:	2a05      	cmp	r2, #5
 8015d76:	bf14      	ite	ne
 8015d78:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8015d7c:	f023 5380 	biceq.w	r3, r3, #268435456	@ 0x10000000
 8015d80:	e7e9      	b.n	8015d56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8015d82:	4918      	ldr	r1, [pc, #96]	@ (8015de4 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8015d84:	f10d 0207 	add.w	r2, sp, #7
 8015d88:	4630      	mov	r0, r6
 8015d8a:	f001 f8d2 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8015d8e:	b948      	cbnz	r0, 8015da4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8015d90:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8015d94:	6823      	ldr	r3, [r4, #0]
 8015d96:	b112      	cbz	r2, 8015d9e <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8015d98:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8015d9c:	e7db      	b.n	8015d56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8015d9e:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8015da2:	e7d8      	b.n	8015d56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8015da4:	4f10      	ldr	r7, [pc, #64]	@ (8015de8 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8015da6:	2500      	movs	r5, #0
 8015da8:	f857 1b04 	ldr.w	r1, [r7], #4
 8015dac:	f10d 0207 	add.w	r2, sp, #7
 8015db0:	4630      	mov	r0, r6
 8015db2:	f001 f8be 	bl	8016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8015db6:	b968      	cbnz	r0, 8015dd4 <DisplayUdfParams::callbackFunction(char const*)+0xa8>
 8015db8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8015dbc:	6823      	ldr	r3, [r4, #0]
 8015dbe:	2201      	movs	r2, #1
 8015dc0:	40aa      	lsls	r2, r5
 8015dc2:	1e4e      	subs	r6, r1, #1
 8015dc4:	4425      	add	r5, r4
 8015dc6:	2e05      	cmp	r6, #5
 8015dc8:	bf99      	ittee	ls
 8015dca:	7129      	strbls	r1, [r5, #4]
 8015dcc:	4313      	orrls	r3, r2
 8015dce:	7128      	strbhi	r0, [r5, #4]
 8015dd0:	4393      	bichi	r3, r2
 8015dd2:	e7c0      	b.n	8015d56 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8015dd4:	3501      	adds	r5, #1
 8015dd6:	2d14      	cmp	r5, #20
 8015dd8:	d1e6      	bne.n	8015da8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8015dda:	e7bd      	b.n	8015d58 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8015ddc:	0801eb7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, sp, lr, pc}
 8015de0:	0801eb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, sp, lr, pc}
 8015de4:	0801eb60 	stmdaeq	r1, {r5, r6, r8, r9, fp, sp, lr, pc}
 8015de8:	0801eadc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, fp, sp, lr, pc}

08015dec <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8015dec:	f7ff bf9e 	b.w	8015d2c <DisplayUdfParams::callbackFunction(char const*)>

08015df0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)>:
 8015df0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015df4:	4604      	mov	r4, r0
 8015df6:	b086      	sub	sp, #24
 8015df8:	4615      	mov	r5, r2
 8015dfa:	461e      	mov	r6, r3
 8015dfc:	b379      	cbz	r1, 8015e5e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x6e>
 8015dfe:	2222      	movs	r2, #34	@ 0x22
 8015e00:	f003 fe6f 	bl	8019ae2 <memmove>
 8015e04:	462a      	mov	r2, r5
 8015e06:	493c      	ldr	r1, [pc, #240]	@ (8015ef8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x108>)
 8015e08:	4633      	mov	r3, r6
 8015e0a:	a803      	add	r0, sp, #12
 8015e0c:	f000 ff0c 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8015e10:	6823      	ldr	r3, [r4, #0]
 8015e12:	f894 2021 	ldrb.w	r2, [r4, #33]	@ 0x21
 8015e16:	4939      	ldr	r1, [pc, #228]	@ (8015efc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x10c>)
 8015e18:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8015e1c:	a803      	add	r0, sp, #12
 8015e1e:	f7ff ff0b 	bl	8015c38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8015e22:	6823      	ldr	r3, [r4, #0]
 8015e24:	f894 2020 	ldrb.w	r2, [r4, #32]
 8015e28:	4935      	ldr	r1, [pc, #212]	@ (8015f00 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x110>)
 8015e2a:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8015e2e:	a803      	add	r0, sp, #12
 8015e30:	f7ff ff02 	bl	8015c38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8015e34:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015e38:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8015e3c:	6823      	ldr	r3, [r4, #0]
 8015e3e:	42aa      	cmp	r2, r5
 8015e40:	d222      	bcs.n	8015e88 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x98>
 8015e42:	9803      	ldr	r0, [sp, #12]
 8015e44:	f013 4380 	ands.w	r3, r3, #1073741824	@ 0x40000000
 8015e48:	4410      	add	r0, r2
 8015e4a:	eba5 0502 	sub.w	r5, r5, r2
 8015e4e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8015e52:	d107      	bne.n	8015e64 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x74>
 8015e54:	b942      	cbnz	r2, 8015e68 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x78>
 8015e56:	9200      	str	r2, [sp, #0]
 8015e58:	4b2a      	ldr	r3, [pc, #168]	@ (8015f04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8015e5a:	4a2b      	ldr	r2, [pc, #172]	@ (8015f08 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x118>)
 8015e5c:	e00a      	b.n	8015e74 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8015e5e:	f7ff ff13 	bl	8015c88 <DisplayUdfParamsStore::Copy(displayudfparams::Params*)>
 8015e62:	e7cf      	b.n	8015e04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x14>
 8015e64:	2a00      	cmp	r2, #0
 8015e66:	d042      	beq.n	8015eee <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xfe>
 8015e68:	3b00      	subs	r3, #0
 8015e6a:	bf18      	it	ne
 8015e6c:	2301      	movne	r3, #1
 8015e6e:	9300      	str	r3, [sp, #0]
 8015e70:	4a26      	ldr	r2, [pc, #152]	@ (8015f0c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x11c>)
 8015e72:	4b24      	ldr	r3, [pc, #144]	@ (8015f04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8015e74:	4629      	mov	r1, r5
 8015e76:	f004 f957 	bl	801a128 <snprintf>
 8015e7a:	4285      	cmp	r5, r0
 8015e7c:	bfa2      	ittt	ge
 8015e7e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8015e82:	18c0      	addge	r0, r0, r3
 8015e84:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8015e88:	4e21      	ldr	r6, [pc, #132]	@ (8015f10 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x120>)
 8015e8a:	2500      	movs	r5, #0
 8015e8c:	2701      	movs	r7, #1
 8015e8e:	f104 0804 	add.w	r8, r4, #4
 8015e92:	f856 1b04 	ldr.w	r1, [r6], #4
 8015e96:	780b      	ldrb	r3, [r1, #0]
 8015e98:	b163      	cbz	r3, 8015eb4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xc4>
 8015e9a:	6822      	ldr	r2, [r4, #0]
 8015e9c:	fa07 f305 	lsl.w	r3, r7, r5
 8015ea0:	4393      	bics	r3, r2
 8015ea2:	bf08      	it	eq
 8015ea4:	2301      	moveq	r3, #1
 8015ea6:	f818 2005 	ldrb.w	r2, [r8, r5]
 8015eaa:	bf18      	it	ne
 8015eac:	2300      	movne	r3, #0
 8015eae:	a803      	add	r0, sp, #12
 8015eb0:	f7ff fec2 	bl	8015c38 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, int) [clone .isra.0]>
 8015eb4:	3501      	adds	r5, #1
 8015eb6:	2d14      	cmp	r5, #20
 8015eb8:	d1eb      	bne.n	8015e92 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xa2>
 8015eba:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015ebe:	b17b      	cbz	r3, 8015ee0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0xf0>
 8015ec0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015ec4:	9b03      	ldr	r3, [sp, #12]
 8015ec6:	4413      	add	r3, r2
 8015ec8:	227d      	movs	r2, #125	@ 0x7d
 8015eca:	f803 2c01 	strb.w	r2, [r3, #-1]
 8015ece:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015ed2:	9903      	ldr	r1, [sp, #12]
 8015ed4:	54ca      	strb	r2, [r1, r3]
 8015ed6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015eda:	3301      	adds	r3, #1
 8015edc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015ee0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015ee4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015ee6:	601a      	str	r2, [r3, #0]
 8015ee8:	b006      	add	sp, #24
 8015eea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015eee:	2301      	movs	r3, #1
 8015ef0:	9300      	str	r3, [sp, #0]
 8015ef2:	4a08      	ldr	r2, [pc, #32]	@ (8015f14 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x124>)
 8015ef4:	4b03      	ldr	r3, [pc, #12]	@ (8015f04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x114>)
 8015ef6:	e7bd      	b.n	8015e74 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned long, unsigned long&)+0x84>
 8015ef8:	0801eb88 	stmdaeq	r1, {r3, r7, r8, r9, fp, sp, lr, pc}
 8015efc:	0801eb7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, sp, lr, pc}
 8015f00:	0801eb70 	stmdaeq	r1, {r4, r5, r6, r8, r9, fp, sp, lr, pc}
 8015f04:	0801eb60 	stmdaeq	r1, {r5, r6, r8, r9, fp, sp, lr, pc}
 8015f08:	0801ad4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, sp, pc}
 8015f0c:	0801ad41 	stmdaeq	r1, {r0, r6, r8, sl, fp, sp, pc}
 8015f10:	0801eadc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, fp, sp, lr, pc}
 8015f14:	0801ad4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, fp, sp, pc}

08015f18 <DisplayUdfParams::Set(DisplayUdf*)>:
 8015f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015f1c:	4604      	mov	r4, r0
 8015f1e:	460d      	mov	r5, r1
 8015f20:	6823      	ldr	r3, [r4, #0]
 8015f22:	6988      	ldr	r0, [r1, #24]
 8015f24:	009a      	lsls	r2, r3, #2
 8015f26:	d506      	bpl.n	8015f36 <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8015f28:	f894 1021 	ldrb.w	r1, [r4, #33]	@ 0x21
 8015f2c:	7529      	strb	r1, [r5, #20]
 8015f2e:	b110      	cbz	r0, 8015f36 <DisplayUdfParams::Set(DisplayUdf*)+0x1e>
 8015f30:	6803      	ldr	r3, [r0, #0]
 8015f32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015f34:	4798      	blx	r3
 8015f36:	6823      	ldr	r3, [r4, #0]
 8015f38:	69a8      	ldr	r0, [r5, #24]
 8015f3a:	00db      	lsls	r3, r3, #3
 8015f3c:	bf41      	itttt	mi
 8015f3e:	f894 3020 	ldrbmi.w	r3, [r4, #32]
 8015f42:	f64e 2260 	movwmi	r2, #60000	@ 0xea60
 8015f46:	4353      	mulmi	r3, r2
 8015f48:	612b      	strmi	r3, [r5, #16]
 8015f4a:	6821      	ldr	r1, [r4, #0]
 8015f4c:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8015f50:	75a9      	strb	r1, [r5, #22]
 8015f52:	b110      	cbz	r0, 8015f5a <DisplayUdfParams::Set(DisplayUdf*)+0x42>
 8015f54:	6803      	ldr	r3, [r0, #0]
 8015f56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015f58:	4798      	blx	r3
 8015f5a:	2600      	movs	r6, #0
 8015f5c:	2701      	movs	r7, #1
 8015f5e:	f104 0804 	add.w	r8, r4, #4
 8015f62:	6822      	ldr	r2, [r4, #0]
 8015f64:	fa07 f306 	lsl.w	r3, r7, r6
 8015f68:	4393      	bics	r3, r2
 8015f6a:	d105      	bne.n	8015f78 <DisplayUdfParams::Set(DisplayUdf*)+0x60>
 8015f6c:	f818 1006 	ldrb.w	r1, [r8, r6]
 8015f70:	4632      	mov	r2, r6
 8015f72:	4628      	mov	r0, r5
 8015f74:	f7ff fdcf 	bl	8015b16 <DisplayUdf::Set(unsigned long, displayudf::Labels)>
 8015f78:	3601      	adds	r6, #1
 8015f7a:	2e14      	cmp	r6, #20
 8015f7c:	d1f1      	bne.n	8015f62 <DisplayUdfParams::Set(DisplayUdf*)+0x4a>
 8015f7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015f82 <artnet::display_longname(char const*)>:
 8015f82:	4770      	bx	lr

08015f84 <artnet::display_universe_switch(unsigned long, unsigned char)>:
 8015f84:	4b01      	ldr	r3, [pc, #4]	@ (8015f8c <artnet::display_universe_switch(unsigned long, unsigned char)+0x8>)
 8015f86:	6818      	ldr	r0, [r3, #0]
 8015f88:	f000 b81c 	b.w	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8015f8c:	200029fc 	strdcs	r2, [r0], -ip

08015f90 <artnet::display_merge_mode(unsigned long, lightset::MergeMode)>:
 8015f90:	4b01      	ldr	r3, [pc, #4]	@ (8015f98 <artnet::display_merge_mode(unsigned long, lightset::MergeMode)+0x8>)
 8015f92:	6818      	ldr	r0, [r3, #0]
 8015f94:	f000 b816 	b.w	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8015f98:	200029fc 	strdcs	r2, [r0], -ip

08015f9c <artnet::display_outputstyle(unsigned long, lightset::OutputStyle)>:
 8015f9c:	4b01      	ldr	r3, [pc, #4]	@ (8015fa4 <artnet::display_outputstyle(unsigned long, lightset::OutputStyle)+0x8>)
 8015f9e:	6818      	ldr	r0, [r3, #0]
 8015fa0:	f000 b810 	b.w	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8015fa4:	200029fc 	strdcs	r2, [r0], -ip

08015fa8 <artnet::display_port_protocol(unsigned long, artnet::PortProtocol)>:
 8015fa8:	4b01      	ldr	r3, [pc, #4]	@ (8015fb0 <artnet::display_port_protocol(unsigned long, artnet::PortProtocol)+0x8>)
 8015faa:	6818      	ldr	r0, [r3, #0]
 8015fac:	f000 b80a 	b.w	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8015fb0:	200029fc 	strdcs	r2, [r0], -ip

08015fb4 <artnet::display_rdm_enabled(unsigned long, bool)>:
 8015fb4:	4b01      	ldr	r3, [pc, #4]	@ (8015fbc <artnet::display_rdm_enabled(unsigned long, bool)+0x8>)
 8015fb6:	6818      	ldr	r0, [r3, #0]
 8015fb8:	f000 b804 	b.w	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8015fbc:	200029fc 	strdcs	r2, [r0], -ip

08015fc0 <artnet::display_failsafe(unsigned char)>:
 8015fc0:	4770      	bx	lr
	...

08015fc4 <DisplayUdf::ShowUniverseArtNetNode()>:
 8015fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fc8:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 80160a8 <DisplayUdf::ShowUniverseArtNetNode()+0xe4>
 8015fcc:	4b2e      	ldr	r3, [pc, #184]	@ (8016088 <DisplayUdf::ShowUniverseArtNetNode()+0xc4>)
 8015fce:	f8d9 1000 	ldr.w	r1, [r9]
 8015fd2:	681e      	ldr	r6, [r3, #0]
 8015fd4:	2901      	cmp	r1, #1
 8015fd6:	b089      	sub	sp, #36	@ 0x24
 8015fd8:	4604      	mov	r4, r0
 8015fda:	d950      	bls.n	801607e <DisplayUdf::ShowUniverseArtNetNode()+0xba>
 8015fdc:	b009      	add	sp, #36	@ 0x24
 8015fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fe2:	f8d9 1000 	ldr.w	r1, [r9]
 8015fe6:	3101      	adds	r1, #1
 8015fe8:	2901      	cmp	r1, #1
 8015fea:	f04f 0542 	mov.w	r5, #66	@ 0x42
 8015fee:	d8f5      	bhi.n	8015fdc <DisplayUdf::ShowUniverseArtNetNode()+0x18>
 8015ff0:	fb0a 6301 	mla	r3, sl, r1, r6
 8015ff4:	f8d3 0874 	ldr.w	r0, [r3, #2164]	@ 0x874
 8015ff8:	2801      	cmp	r0, #1
 8015ffa:	d13d      	bne.n	8016078 <DisplayUdf::ShowUniverseArtNetNode()+0xb4>
 8015ffc:	f8b3 386c 	ldrh.w	r3, [r3, #2156]	@ 0x86c
 8016000:	9306      	str	r3, [sp, #24]
 8016002:	69a3      	ldr	r3, [r4, #24]
 8016004:	b103      	cbz	r3, 8016008 <DisplayUdf::ShowUniverseArtNetNode()+0x44>
 8016006:	7318      	strb	r0, [r3, #12]
 8016008:	2724      	movs	r7, #36	@ 0x24
 801600a:	fb07 6701 	mla	r7, r7, r1, r6
 801600e:	1ce3      	adds	r3, r4, #3
 8016010:	481e      	ldr	r0, [pc, #120]	@ (801608c <DisplayUdf::ShowUniverseArtNetNode()+0xc8>)
 8016012:	f813 b005 	ldrb.w	fp, [r3, r5]
 8016016:	f897 3944 	ldrb.w	r3, [r7, #2372]	@ 0x944
 801601a:	f013 0f02 	tst.w	r3, #2
 801601e:	4b1c      	ldr	r3, [pc, #112]	@ (8016090 <DisplayUdf::ShowUniverseArtNetNode()+0xcc>)
 8016020:	bf08      	it	eq
 8016022:	4698      	moveq	r8, r3
 8016024:	f04f 0328 	mov.w	r3, #40	@ 0x28
 8016028:	fb03 6301 	mla	r3, r3, r1, r6
 801602c:	bf18      	it	ne
 801602e:	4680      	movne	r8, r0
 8016030:	f8d3 2878 	ldr.w	r2, [r3, #2168]	@ 0x878
 8016034:	4817      	ldr	r0, [pc, #92]	@ (8016094 <DisplayUdf::ShowUniverseArtNetNode()+0xd0>)
 8016036:	4b18      	ldr	r3, [pc, #96]	@ (8016098 <DisplayUdf::ShowUniverseArtNetNode()+0xd4>)
 8016038:	2a00      	cmp	r2, #0
 801603a:	bf08      	it	eq
 801603c:	4603      	moveq	r3, r0
 801603e:	4630      	mov	r0, r6
 8016040:	9307      	str	r3, [sp, #28]
 8016042:	f7f5 fcaf 	bl	800b9a4 <ArtNetNode::GetOutputStyle(unsigned long) const>
 8016046:	f997 c945 	ldrsb.w	ip, [r7, #2373]	@ 0x945
 801604a:	9b07      	ldr	r3, [sp, #28]
 801604c:	4913      	ldr	r1, [pc, #76]	@ (801609c <DisplayUdf::ShowUniverseArtNetNode()+0xd8>)
 801604e:	4f14      	ldr	r7, [pc, #80]	@ (80160a0 <DisplayUdf::ShowUniverseArtNetNode()+0xdc>)
 8016050:	4a14      	ldr	r2, [pc, #80]	@ (80160a4 <DisplayUdf::ShowUniverseArtNetNode()+0xe0>)
 8016052:	2801      	cmp	r0, #1
 8016054:	bf14      	ite	ne
 8016056:	2044      	movne	r0, #68	@ 0x44
 8016058:	2043      	moveq	r0, #67	@ 0x43
 801605a:	e9cd 8301 	strd	r8, r3, [sp, #4]
 801605e:	ea11 012c 	ands.w	r1, r1, ip, asr #32
 8016062:	bf38      	it	cc
 8016064:	4639      	movcc	r1, r7
 8016066:	9b06      	ldr	r3, [sp, #24]
 8016068:	9300      	str	r3, [sp, #0]
 801606a:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801606e:	462b      	mov	r3, r5
 8016070:	4659      	mov	r1, fp
 8016072:	4620      	mov	r0, r4
 8016074:	f7ff fcd5 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016078:	2d42      	cmp	r5, #66	@ 0x42
 801607a:	d1b2      	bne.n	8015fe2 <DisplayUdf::ShowUniverseArtNetNode()+0x1e>
 801607c:	e7ae      	b.n	8015fdc <DisplayUdf::ShowUniverseArtNetNode()+0x18>
 801607e:	2541      	movs	r5, #65	@ 0x41
 8016080:	f04f 0a28 	mov.w	sl, #40	@ 0x28
 8016084:	e7b4      	b.n	8015ff0 <DisplayUdf::ShowUniverseArtNetNode()+0x2c>
 8016086:	bf00      	nop
 8016088:	20001260 	andcs	r1, r0, r0, ror #4
 801608c:	0801b003 	stmdaeq	r1, {r0, r1, ip, sp, pc}
 8016090:	0801afff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
 8016094:	0801b013 	stmdaeq	r1, {r0, r1, r4, ip, sp, pc}
 8016098:	0801b01b 	stmdaeq	r1, {r0, r1, r3, r4, ip, sp, pc}
 801609c:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 80160a0:	0801b020 	stmdaeq	r1, {r5, ip, sp, pc}
 80160a4:	0801b579 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, ip, sp, pc}
 80160a8:	20000088 	andcs	r0, r0, r8, lsl #1

080160ac <DisplayUdf::ShowDestinationIpArtNetNode()>:
 80160ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80160ae:	4b15      	ldr	r3, [pc, #84]	@ (8016104 <DisplayUdf::ShowDestinationIpArtNetNode()+0x58>)
 80160b0:	4d15      	ldr	r5, [pc, #84]	@ (8016108 <DisplayUdf::ShowDestinationIpArtNetNode()+0x5c>)
 80160b2:	681e      	ldr	r6, [r3, #0]
 80160b4:	f8d6 3970 	ldr.w	r3, [r6, #2416]	@ 0x970
 80160b8:	0e1a      	lsrs	r2, r3, #24
 80160ba:	9203      	str	r2, [sp, #12]
 80160bc:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80160c0:	9202      	str	r2, [sp, #8]
 80160c2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80160c6:	b2db      	uxtb	r3, r3
 80160c8:	9201      	str	r2, [sp, #4]
 80160ca:	9300      	str	r3, [sp, #0]
 80160cc:	462a      	mov	r2, r5
 80160ce:	f890 104a 	ldrb.w	r1, [r0, #74]	@ 0x4a
 80160d2:	2341      	movs	r3, #65	@ 0x41
 80160d4:	4604      	mov	r4, r0
 80160d6:	f7ff fca4 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 80160da:	f8d6 397c 	ldr.w	r3, [r6, #2428]	@ 0x97c
 80160de:	0e1a      	lsrs	r2, r3, #24
 80160e0:	9203      	str	r2, [sp, #12]
 80160e2:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80160e6:	9202      	str	r2, [sp, #8]
 80160e8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80160ec:	b2db      	uxtb	r3, r3
 80160ee:	9201      	str	r2, [sp, #4]
 80160f0:	9300      	str	r3, [sp, #0]
 80160f2:	f894 104b 	ldrb.w	r1, [r4, #75]	@ 0x4b
 80160f6:	2342      	movs	r3, #66	@ 0x42
 80160f8:	462a      	mov	r2, r5
 80160fa:	4620      	mov	r0, r4
 80160fc:	f7ff fc91 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016100:	b004      	add	sp, #16
 8016102:	bd70      	pop	{r4, r5, r6, pc}
 8016104:	20001260 	andcs	r1, r0, r0, ror #4
 8016108:	0801b58b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sl, ip, sp, pc}

0801610c <DisplayUdf::ShowArtNetNode()>:
 801610c:	4b15      	ldr	r3, [pc, #84]	@ (8016164 <DisplayUdf::ShowArtNetNode()+0x58>)
 801610e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016110:	4604      	mov	r4, r0
 8016112:	681d      	ldr	r5, [r3, #0]
 8016114:	f7ff ff56 	bl	8015fc4 <DisplayUdf::ShowUniverseArtNetNode()>
 8016118:	4620      	mov	r0, r4
 801611a:	f7ff ffc7 	bl	80160ac <DisplayUdf::ShowDestinationIpArtNetNode()>
 801611e:	f895 2918 	ldrb.w	r2, [r5, #2328]	@ 0x918
 8016122:	f895 3917 	ldrb.w	r3, [r5, #2327]	@ 0x917
 8016126:	f894 1041 	ldrb.w	r1, [r4, #65]	@ 0x41
 801612a:	4413      	add	r3, r2
 801612c:	4620      	mov	r0, r4
 801612e:	4a0e      	ldr	r2, [pc, #56]	@ (8016168 <DisplayUdf::ShowArtNetNode()+0x5c>)
 8016130:	f7ff fc77 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016134:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8016136:	f894 104f 	ldrb.w	r1, [r4, #79]	@ 0x4f
 801613a:	2a02      	cmp	r2, #2
 801613c:	d001      	beq.n	8016142 <DisplayUdf::ShowArtNetNode()+0x36>
 801613e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8016140:	b92b      	cbnz	r3, 801614e <DisplayUdf::ShowArtNetNode()+0x42>
 8016142:	4a0a      	ldr	r2, [pc, #40]	@ (801616c <DisplayUdf::ShowArtNetNode()+0x60>)
 8016144:	4620      	mov	r0, r4
 8016146:	f7ff fc6c 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 801614a:	b003      	add	sp, #12
 801614c:	bd30      	pop	{r4, r5, pc}
 801614e:	4808      	ldr	r0, [pc, #32]	@ (8016170 <DisplayUdf::ShowArtNetNode()+0x64>)
 8016150:	9300      	str	r3, [sp, #0]
 8016152:	4b08      	ldr	r3, [pc, #32]	@ (8016174 <DisplayUdf::ShowArtNetNode()+0x68>)
 8016154:	2a00      	cmp	r2, #0
 8016156:	bf18      	it	ne
 8016158:	4603      	movne	r3, r0
 801615a:	4a07      	ldr	r2, [pc, #28]	@ (8016178 <DisplayUdf::ShowArtNetNode()+0x6c>)
 801615c:	4620      	mov	r0, r4
 801615e:	f7ff fc60 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016162:	e7f2      	b.n	801614a <DisplayUdf::ShowArtNetNode()+0x3e>
 8016164:	20001260 	andcs	r1, r0, r0, ror #4
 8016168:	0801b59b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, ip, sp, pc}
 801616c:	0801b5a2 	stmdaeq	r1, {r1, r5, r7, r8, sl, ip, sp, pc}
 8016170:	0801b0fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, ip, sp, pc}
 8016174:	0801b105 	stmdaeq	r1, {r0, r2, r8, ip, sp, pc}
 8016178:	0801b5a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, ip, sp, pc}

0801617c <Display::ClearEndOfLine() [clone .isra.0]>:
 801617c:	b108      	cbz	r0, 8016182 <Display::ClearEndOfLine() [clone .isra.0]+0x6>
 801617e:	2301      	movs	r3, #1
 8016180:	7303      	strb	r3, [r0, #12]
 8016182:	4770      	bx	lr

08016184 <net::display_emac_config()>:
 8016184:	4b06      	ldr	r3, [pc, #24]	@ (80161a0 <net::display_emac_config()+0x1c>)
 8016186:	4a07      	ldr	r2, [pc, #28]	@ (80161a4 <net::display_emac_config()+0x20>)
 8016188:	b510      	push	{r4, lr}
 801618a:	681c      	ldr	r4, [r3, #0]
 801618c:	69a0      	ldr	r0, [r4, #24]
 801618e:	f7ff fff5 	bl	801617c <Display::ClearEndOfLine() [clone .isra.0]>
 8016192:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 8016196:	4620      	mov	r0, r4
 8016198:	f7ff fc43 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 801619c:	bd10      	pop	{r4, pc}
 801619e:	bf00      	nop
 80161a0:	200029fc 	strdcs	r2, [r0], -ip
 80161a4:	0801b5b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}

080161a8 <net::display_emac_start()>:
 80161a8:	4b06      	ldr	r3, [pc, #24]	@ (80161c4 <net::display_emac_start()+0x1c>)
 80161aa:	4a07      	ldr	r2, [pc, #28]	@ (80161c8 <net::display_emac_start()+0x20>)
 80161ac:	b510      	push	{r4, lr}
 80161ae:	681c      	ldr	r4, [r3, #0]
 80161b0:	69a0      	ldr	r0, [r4, #24]
 80161b2:	f7ff ffe3 	bl	801617c <Display::ClearEndOfLine() [clone .isra.0]>
 80161b6:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 80161ba:	4620      	mov	r0, r4
 80161bc:	f7ff fc31 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 80161c0:	bd10      	pop	{r4, pc}
 80161c2:	bf00      	nop
 80161c4:	200029fc 	strdcs	r2, [r0], -ip
 80161c8:	0801b5c1 	stmdaeq	r1, {r0, r6, r7, r8, sl, ip, sp, pc}

080161cc <net::display_emac_status(bool)>:
 80161cc:	4b09      	ldr	r3, [pc, #36]	@ (80161f4 <net::display_emac_status(bool)+0x28>)
 80161ce:	490a      	ldr	r1, [pc, #40]	@ (80161f8 <net::display_emac_status(bool)+0x2c>)
 80161d0:	b510      	push	{r4, lr}
 80161d2:	681c      	ldr	r4, [r3, #0]
 80161d4:	4602      	mov	r2, r0
 80161d6:	69a0      	ldr	r0, [r4, #24]
 80161d8:	f7ff ffd0 	bl	801617c <Display::ClearEndOfLine() [clone .isra.0]>
 80161dc:	4b07      	ldr	r3, [pc, #28]	@ (80161fc <net::display_emac_status(bool)+0x30>)
 80161de:	4620      	mov	r0, r4
 80161e0:	2a00      	cmp	r2, #0
 80161e2:	bf08      	it	eq
 80161e4:	460b      	moveq	r3, r1
 80161e6:	4a06      	ldr	r2, [pc, #24]	@ (8016200 <net::display_emac_status(bool)+0x34>)
 80161e8:	f894 103e 	ldrb.w	r1, [r4, #62]	@ 0x3e
 80161ec:	f7ff fc19 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 80161f0:	bd10      	pop	{r4, pc}
 80161f2:	bf00      	nop
 80161f4:	200029fc 	strdcs	r2, [r0], -ip
 80161f8:	0801b5d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp, pc}
 80161fc:	0801b5d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, ip, sp, pc}
 8016200:	0801b5d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, ip, sp, pc}

08016204 <net::display_ip()>:
 8016204:	b508      	push	{r3, lr}
 8016206:	4b02      	ldr	r3, [pc, #8]	@ (8016210 <net::display_ip()+0xc>)
 8016208:	6818      	ldr	r0, [r3, #0]
 801620a:	f7ff fc27 	bl	8015a5c <DisplayUdf::ShowIpAddress()>
 801620e:	bd08      	pop	{r3, pc}
 8016210:	200029fc 	strdcs	r2, [r0], -ip

08016214 <net::display_netmask()>:
 8016214:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8016216:	4b0d      	ldr	r3, [pc, #52]	@ (801624c <net::display_netmask()+0x38>)
 8016218:	681c      	ldr	r4, [r3, #0]
 801621a:	69a0      	ldr	r0, [r4, #24]
 801621c:	f7ff ffae 	bl	801617c <Display::ClearEndOfLine() [clone .isra.0]>
 8016220:	4b0b      	ldr	r3, [pc, #44]	@ (8016250 <net::display_netmask()+0x3c>)
 8016222:	f894 1048 	ldrb.w	r1, [r4, #72]	@ 0x48
 8016226:	685b      	ldr	r3, [r3, #4]
 8016228:	0e1a      	lsrs	r2, r3, #24
 801622a:	9202      	str	r2, [sp, #8]
 801622c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8016230:	9201      	str	r2, [sp, #4]
 8016232:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8016236:	9200      	str	r2, [sp, #0]
 8016238:	b2db      	uxtb	r3, r3
 801623a:	4a06      	ldr	r2, [pc, #24]	@ (8016254 <net::display_netmask()+0x40>)
 801623c:	4620      	mov	r0, r4
 801623e:	f7ff fbf0 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016242:	4620      	mov	r0, r4
 8016244:	f7ff fc0a 	bl	8015a5c <DisplayUdf::ShowIpAddress()>
 8016248:	b004      	add	sp, #16
 801624a:	bd10      	pop	{r4, pc}
 801624c:	200029fc 	strdcs	r2, [r0], -ip
 8016250:	20002954 	andcs	r2, r0, r4, asr r9
 8016254:	0801b56a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, ip, sp, pc}

08016258 <net::display_gateway()>:
 8016258:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801625a:	4b0c      	ldr	r3, [pc, #48]	@ (801628c <net::display_gateway()+0x34>)
 801625c:	681c      	ldr	r4, [r3, #0]
 801625e:	69a0      	ldr	r0, [r4, #24]
 8016260:	f7ff ff8c 	bl	801617c <Display::ClearEndOfLine() [clone .isra.0]>
 8016264:	4b0a      	ldr	r3, [pc, #40]	@ (8016290 <net::display_gateway()+0x38>)
 8016266:	f894 104e 	ldrb.w	r1, [r4, #78]	@ 0x4e
 801626a:	689b      	ldr	r3, [r3, #8]
 801626c:	0e1a      	lsrs	r2, r3, #24
 801626e:	9202      	str	r2, [sp, #8]
 8016270:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8016274:	9201      	str	r2, [sp, #4]
 8016276:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801627a:	9200      	str	r2, [sp, #0]
 801627c:	b2db      	uxtb	r3, r3
 801627e:	4a05      	ldr	r2, [pc, #20]	@ (8016294 <net::display_gateway()+0x3c>)
 8016280:	4620      	mov	r0, r4
 8016282:	f7ff fbce 	bl	8015a22 <Display::Printf(unsigned long, char const*, ...)>
 8016286:	b004      	add	sp, #16
 8016288:	bd10      	pop	{r4, pc}
 801628a:	bf00      	nop
 801628c:	200029fc 	strdcs	r2, [r0], -ip
 8016290:	20002954 	andcs	r2, r0, r4, asr r9
 8016294:	0801b55b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, ip, sp, pc}

08016298 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8016298:	b510      	push	{r4, lr}
 801629a:	4a05      	ldr	r2, [pc, #20]	@ (80162b0 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 801629c:	2300      	movs	r3, #0
 801629e:	2020      	movs	r0, #32
 80162a0:	428b      	cmp	r3, r1
 80162a2:	d100      	bne.n	80162a6 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 80162a4:	bd10      	pop	{r4, pc}
 80162a6:	f852 4b04 	ldr.w	r4, [r2], #4
 80162aa:	3301      	adds	r3, #1
 80162ac:	4420      	add	r0, r4
 80162ae:	e7f7      	b.n	80162a0 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 80162b0:	0801eb94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, sp, lr, pc}

080162b4 <ConfigStore::ConfigStore()>:
 80162b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80162b8:	b085      	sub	sp, #20
 80162ba:	4605      	mov	r5, r0
 80162bc:	f000 f9e4 	bl	8016688 <StoreDevice::StoreDevice()>
 80162c0:	4b30      	ldr	r3, [pc, #192]	@ (8016384 <ConfigStore::ConfigStore()+0xd0>)
 80162c2:	4c31      	ldr	r4, [pc, #196]	@ (8016388 <ConfigStore::ConfigStore()+0xd4>)
 80162c4:	601d      	str	r5, [r3, #0]
 80162c6:	4b31      	ldr	r3, [pc, #196]	@ (801638c <ConfigStore::ConfigStore()+0xd8>)
 80162c8:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80163a8 <ConfigStore::ConfigStore()+0xf4>
 80162cc:	601c      	str	r4, [r3, #0]
 80162ce:	4628      	mov	r0, r5
 80162d0:	782b      	ldrb	r3, [r5, #0]
 80162d2:	f888 3000 	strb.w	r3, [r8]
 80162d6:	f000 f9e8 	bl	80166aa <StoreDevice::GetSectorSize() const>
 80162da:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 80162de:	4606      	mov	r6, r0
 80162e0:	fbb7 f9f0 	udiv	r9, r7, r0
 80162e4:	4628      	mov	r0, r5
 80162e6:	f000 f9dd 	bl	80166a4 <StoreDevice::GetSize() const>
 80162ea:	4b29      	ldr	r3, [pc, #164]	@ (8016390 <ConfigStore::ConfigStore()+0xdc>)
 80162ec:	fb09 0116 	mls	r1, r9, r6, r0
 80162f0:	6019      	str	r1, [r3, #0]
 80162f2:	f898 3000 	ldrb.w	r3, [r8]
 80162f6:	3c10      	subs	r4, #16
 80162f8:	b133      	cbz	r3, 8016308 <ConfigStore::ConfigStore()+0x54>
 80162fa:	ab03      	add	r3, sp, #12
 80162fc:	9300      	str	r3, [sp, #0]
 80162fe:	463a      	mov	r2, r7
 8016300:	4623      	mov	r3, r4
 8016302:	4628      	mov	r0, r5
 8016304:	f000 f9d4 	bl	80166b0 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 8016308:	4822      	ldr	r0, [pc, #136]	@ (8016394 <ConfigStore::ConfigStore()+0xe0>)
 801630a:	4b23      	ldr	r3, [pc, #140]	@ (8016398 <ConfigStore::ConfigStore()+0xe4>)
 801630c:	2104      	movs	r1, #4
 801630e:	2201      	movs	r2, #1
 8016310:	f810 6b01 	ldrb.w	r6, [r0], #1
 8016314:	f813 7b01 	ldrb.w	r7, [r3], #1
 8016318:	42be      	cmp	r6, r7
 801631a:	bf1c      	itt	ne
 801631c:	f803 6c01 	strbne.w	r6, [r3, #-1]
 8016320:	2200      	movne	r2, #0
 8016322:	3901      	subs	r1, #1
 8016324:	d1f4      	bne.n	8016310 <ConfigStore::ConfigStore()+0x5c>
 8016326:	b952      	cbnz	r2, 801633e <ConfigStore::ConfigStore()+0x8a>
 8016328:	4a17      	ldr	r2, [pc, #92]	@ (8016388 <ConfigStore::ConfigStore()+0xd4>)
 801632a:	f44f 637f 	mov.w	r3, #4080	@ 0xff0
 801632e:	4608      	mov	r0, r1
 8016330:	3b01      	subs	r3, #1
 8016332:	f802 0b01 	strb.w	r0, [r2], #1
 8016336:	d1fb      	bne.n	8016330 <ConfigStore::ConfigStore()+0x7c>
 8016338:	4b18      	ldr	r3, [pc, #96]	@ (801639c <ConfigStore::ConfigStore()+0xe8>)
 801633a:	2201      	movs	r2, #1
 801633c:	601a      	str	r2, [r3, #0]
 801633e:	4818      	ldr	r0, [pc, #96]	@ (80163a0 <ConfigStore::ConfigStore()+0xec>)
 8016340:	2200      	movs	r2, #0
 8016342:	2320      	movs	r3, #32
 8016344:	f850 6b04 	ldr.w	r6, [r0], #4
 8016348:	3201      	adds	r2, #1
 801634a:	2a1b      	cmp	r2, #27
 801634c:	4433      	add	r3, r6
 801634e:	d1f9      	bne.n	8016344 <ConfigStore::ConfigStore()+0x90>
 8016350:	4a14      	ldr	r2, [pc, #80]	@ (80163a4 <ConfigStore::ConfigStore()+0xf0>)
 8016352:	2600      	movs	r6, #0
 8016354:	6013      	str	r3, [r2, #0]
 8016356:	4628      	mov	r0, r5
 8016358:	f7ff ff9e 	bl	8016298 <ConfigStore::GetStoreOffset(configstore::Store)>
 801635c:	5823      	ldr	r3, [r4, r0]
 801635e:	3101      	adds	r1, #1
 8016360:	3301      	adds	r3, #1
 8016362:	bf08      	it	eq
 8016364:	5026      	streq	r6, [r4, r0]
 8016366:	291b      	cmp	r1, #27
 8016368:	d1f5      	bne.n	8016356 <ConfigStore::ConfigStore()+0xa2>
 801636a:	6923      	ldr	r3, [r4, #16]
 801636c:	3301      	adds	r3, #1
 801636e:	d104      	bne.n	801637a <ConfigStore::ConfigStore()+0xc6>
 8016370:	2300      	movs	r3, #0
 8016372:	7423      	strb	r3, [r4, #16]
 8016374:	7463      	strb	r3, [r4, #17]
 8016376:	74a3      	strb	r3, [r4, #18]
 8016378:	74e3      	strb	r3, [r4, #19]
 801637a:	4628      	mov	r0, r5
 801637c:	b005      	add	sp, #20
 801637e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016382:	bf00      	nop
 8016384:	20002a00 	andcs	r2, r0, r0, lsl #20
 8016388:	40024010 	andmi	r4, r2, r0, lsl r0
 801638c:	2000a3e8 	andcs	sl, r0, r8, ror #7
 8016390:	20002a0c 	andcs	r2, r0, ip, lsl #20
 8016394:	0801ec00 	stmdaeq	r1, {sl, fp, sp, lr, pc}
 8016398:	40024000 	andmi	r4, r2, r0
 801639c:	20002a10 	andcs	r2, r0, r0, lsl sl
 80163a0:	0801eb94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, sp, lr, pc}
 80163a4:	20002a08 	andcs	r2, r0, r8, lsl #20
 80163a8:	20002a14 	andcs	r2, r0, r4, lsl sl

080163ac <ConfigStore::ResetSetList(configstore::Store)>:
 80163ac:	b508      	push	{r3, lr}
 80163ae:	f7ff ff73 	bl	8016298 <ConfigStore::GetStoreOffset(configstore::Store)>
 80163b2:	4905      	ldr	r1, [pc, #20]	@ (80163c8 <ConfigStore::ResetSetList(configstore::Store)+0x1c>)
 80163b4:	1842      	adds	r2, r0, r1
 80163b6:	2300      	movs	r3, #0
 80163b8:	540b      	strb	r3, [r1, r0]
 80163ba:	7053      	strb	r3, [r2, #1]
 80163bc:	7093      	strb	r3, [r2, #2]
 80163be:	70d3      	strb	r3, [r2, #3]
 80163c0:	4b02      	ldr	r3, [pc, #8]	@ (80163cc <ConfigStore::ResetSetList(configstore::Store)+0x20>)
 80163c2:	2201      	movs	r2, #1
 80163c4:	601a      	str	r2, [r3, #0]
 80163c6:	bd08      	pop	{r3, pc}
 80163c8:	40024000 	andmi	r4, r2, r0
 80163cc:	20002a10 	andcs	r2, r0, r0, lsl sl

080163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 80163d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163d2:	4614      	mov	r4, r2
 80163d4:	461d      	mov	r5, r3
 80163d6:	f7ff ff5f 	bl	8016298 <ConfigStore::GetStoreOffset(configstore::Store)>
 80163da:	490e      	ldr	r1, [pc, #56]	@ (8016414 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x44>)
 80163dc:	1902      	adds	r2, r0, r4
 80163de:	9c06      	ldr	r4, [sp, #24]
 80163e0:	440a      	add	r2, r1
 80163e2:	1e6b      	subs	r3, r5, #1
 80163e4:	4414      	add	r4, r2
 80163e6:	2500      	movs	r5, #0
 80163e8:	42a2      	cmp	r2, r4
 80163ea:	d10a      	bne.n	8016402 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x32>
 80163ec:	b145      	cbz	r5, 8016400 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x30>
 80163ee:	9b08      	ldr	r3, [sp, #32]
 80163f0:	9a07      	ldr	r2, [sp, #28]
 80163f2:	4418      	add	r0, r3
 80163f4:	580b      	ldr	r3, [r1, r0]
 80163f6:	4313      	orrs	r3, r2
 80163f8:	500b      	str	r3, [r1, r0]
 80163fa:	4b07      	ldr	r3, [pc, #28]	@ (8016418 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x48>)
 80163fc:	2201      	movs	r2, #1
 80163fe:	601a      	str	r2, [r3, #0]
 8016400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016402:	7817      	ldrb	r7, [r2, #0]
 8016404:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8016408:	42b7      	cmp	r7, r6
 801640a:	bf1c      	itt	ne
 801640c:	7016      	strbne	r6, [r2, #0]
 801640e:	2501      	movne	r5, #1
 8016410:	3201      	adds	r2, #1
 8016412:	e7e9      	b.n	80163e8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x18>
 8016414:	40024000 	andmi	r4, r2, r0
 8016418:	20002a10 	andcs	r2, r0, r0, lsl sl

0801641c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)>:
 801641c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016420:	b085      	sub	sp, #20
 8016422:	461e      	mov	r6, r3
 8016424:	4615      	mov	r5, r2
 8016426:	4607      	mov	r7, r0
 8016428:	f7ff ff36 	bl	8016298 <ConfigStore::GetStoreOffset(configstore::Store)>
 801642c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801642e:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8016432:	18c4      	adds	r4, r0, r3
 8016434:	4b10      	ldr	r3, [pc, #64]	@ (8016478 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x5c>)
 8016436:	441c      	add	r4, r3
 8016438:	4688      	mov	r8, r1
 801643a:	4623      	mov	r3, r4
 801643c:	1932      	adds	r2, r6, r4
 801643e:	4293      	cmp	r3, r2
 8016440:	d10c      	bne.n	801645c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x40>
 8016442:	f1b9 0f00 	cmp.w	r9, #0
 8016446:	d00f      	beq.n	8016468 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 8016448:	2200      	movs	r2, #0
 801644a:	e9cd 2201 	strd	r2, r2, [sp, #4]
 801644e:	9600      	str	r6, [sp, #0]
 8016450:	462b      	mov	r3, r5
 8016452:	4641      	mov	r1, r8
 8016454:	4638      	mov	r0, r7
 8016456:	f7ff ffbb 	bl	80163d0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 801645a:	e005      	b.n	8016468 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x4c>
 801645c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8016460:	2900      	cmp	r1, #0
 8016462:	d0ec      	beq.n	801643e <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x22>
 8016464:	4294      	cmp	r4, r2
 8016466:	d102      	bne.n	801646e <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x52>
 8016468:	b005      	add	sp, #20
 801646a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801646e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016472:	f805 3b01 	strb.w	r3, [r5], #1
 8016476:	e7f5      	b.n	8016464 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long, bool)+0x48>
 8016478:	40024000 	andmi	r4, r2, r0

0801647c <ConfigStore::Flash()>:
 801647c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801647e:	4c24      	ldr	r4, [pc, #144]	@ (8016510 <ConfigStore::Flash()+0x94>)
 8016480:	6823      	ldr	r3, [r4, #0]
 8016482:	2b00      	cmp	r3, #0
 8016484:	d041      	beq.n	801650a <ConfigStore::Flash()+0x8e>
 8016486:	3b01      	subs	r3, #1
 8016488:	2b05      	cmp	r3, #5
 801648a:	d82f      	bhi.n	80164ec <ConfigStore::Flash()+0x70>
 801648c:	e8df f003 	tbb	[pc, r3]
 8016490:	2c140b03 			@ <UNDEFINED> instruction: 0x2c140b03
 8016494:	4b1f2e23 	blmi	87e1d28 <_sidata+0x7c2b60>
 8016498:	681a      	ldr	r2, [r3, #0]
 801649a:	4b1f      	ldr	r3, [pc, #124]	@ (8016518 <ConfigStore::Flash()+0x9c>)
 801649c:	601a      	str	r2, [r3, #0]
 801649e:	2302      	movs	r3, #2
 80164a0:	6023      	str	r3, [r4, #0]
 80164a2:	2001      	movs	r0, #1
 80164a4:	e02f      	b.n	8016506 <ConfigStore::Flash()+0x8a>
 80164a6:	4b1b      	ldr	r3, [pc, #108]	@ (8016514 <ConfigStore::Flash()+0x98>)
 80164a8:	4a1b      	ldr	r2, [pc, #108]	@ (8016518 <ConfigStore::Flash()+0x9c>)
 80164aa:	681b      	ldr	r3, [r3, #0]
 80164ac:	6812      	ldr	r2, [r2, #0]
 80164ae:	1a9b      	subs	r3, r3, r2
 80164b0:	2b63      	cmp	r3, #99	@ 0x63
 80164b2:	d9f6      	bls.n	80164a2 <ConfigStore::Flash()+0x26>
 80164b4:	2303      	movs	r3, #3
 80164b6:	e7f3      	b.n	80164a0 <ConfigStore::Flash()+0x24>
 80164b8:	4918      	ldr	r1, [pc, #96]	@ (801651c <ConfigStore::Flash()+0xa0>)
 80164ba:	ab03      	add	r3, sp, #12
 80164bc:	6809      	ldr	r1, [r1, #0]
 80164be:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80164c2:	f000 f8fa 	bl	80166ba <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 80164c6:	2800      	cmp	r0, #0
 80164c8:	d0eb      	beq.n	80164a2 <ConfigStore::Flash()+0x26>
 80164ca:	4b12      	ldr	r3, [pc, #72]	@ (8016514 <ConfigStore::Flash()+0x98>)
 80164cc:	681a      	ldr	r2, [r3, #0]
 80164ce:	4b12      	ldr	r3, [pc, #72]	@ (8016518 <ConfigStore::Flash()+0x9c>)
 80164d0:	601a      	str	r2, [r3, #0]
 80164d2:	2305      	movs	r3, #5
 80164d4:	e7e4      	b.n	80164a0 <ConfigStore::Flash()+0x24>
 80164d6:	4b0f      	ldr	r3, [pc, #60]	@ (8016514 <ConfigStore::Flash()+0x98>)
 80164d8:	4a0f      	ldr	r2, [pc, #60]	@ (8016518 <ConfigStore::Flash()+0x9c>)
 80164da:	681b      	ldr	r3, [r3, #0]
 80164dc:	6812      	ldr	r2, [r2, #0]
 80164de:	1a9b      	subs	r3, r3, r2
 80164e0:	2b63      	cmp	r3, #99	@ 0x63
 80164e2:	d9de      	bls.n	80164a2 <ConfigStore::Flash()+0x26>
 80164e4:	2304      	movs	r3, #4
 80164e6:	e7db      	b.n	80164a0 <ConfigStore::Flash()+0x24>
 80164e8:	2306      	movs	r3, #6
 80164ea:	e7d9      	b.n	80164a0 <ConfigStore::Flash()+0x24>
 80164ec:	ab03      	add	r3, sp, #12
 80164ee:	4a0c      	ldr	r2, [pc, #48]	@ (8016520 <ConfigStore::Flash()+0xa4>)
 80164f0:	490a      	ldr	r1, [pc, #40]	@ (801651c <ConfigStore::Flash()+0xa0>)
 80164f2:	9300      	str	r3, [sp, #0]
 80164f4:	6812      	ldr	r2, [r2, #0]
 80164f6:	4b0b      	ldr	r3, [pc, #44]	@ (8016524 <ConfigStore::Flash()+0xa8>)
 80164f8:	6809      	ldr	r1, [r1, #0]
 80164fa:	f000 f8e2 	bl	80166c2 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 80164fe:	2800      	cmp	r0, #0
 8016500:	d0cf      	beq.n	80164a2 <ConfigStore::Flash()+0x26>
 8016502:	2000      	movs	r0, #0
 8016504:	6020      	str	r0, [r4, #0]
 8016506:	b004      	add	sp, #16
 8016508:	bd10      	pop	{r4, pc}
 801650a:	4618      	mov	r0, r3
 801650c:	e7fb      	b.n	8016506 <ConfigStore::Flash()+0x8a>
 801650e:	bf00      	nop
 8016510:	20002a10 	andcs	r2, r0, r0, lsl sl
 8016514:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8016518:	20002a04 	andcs	r2, r0, r4, lsl #20
 801651c:	20002a0c 	andcs	r2, r0, ip, lsl #20
 8016520:	20002a08 	andcs	r2, r0, r8, lsl #20
 8016524:	40024000 	andmi	r4, r2, r0

08016528 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>:
 8016528:	b510      	push	{r4, lr}
 801652a:	4a0d      	ldr	r2, [pc, #52]	@ (8016560 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x38>)
 801652c:	f44f 6461 	mov.w	r4, #3600	@ 0xe10
 8016530:	6913      	ldr	r3, [r2, #16]
 8016532:	fb93 f3f4 	sdiv	r3, r3, r4
 8016536:	b25b      	sxtb	r3, r3
 8016538:	7003      	strb	r3, [r0, #0]
 801653a:	2b00      	cmp	r3, #0
 801653c:	6912      	ldr	r2, [r2, #16]
 801653e:	dd08      	ble.n	8016552 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x2a>
 8016540:	4808      	ldr	r0, [pc, #32]	@ (8016564 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x3c>)
 8016542:	fb00 2203 	mla	r2, r0, r3, r2
 8016546:	233c      	movs	r3, #60	@ 0x3c
 8016548:	fbb2 f2f3 	udiv	r2, r2, r3
 801654c:	b2d3      	uxtb	r3, r2
 801654e:	700b      	strb	r3, [r1, #0]
 8016550:	bd10      	pop	{r4, pc}
 8016552:	4363      	muls	r3, r4
 8016554:	1a9b      	subs	r3, r3, r2
 8016556:	223c      	movs	r2, #60	@ 0x3c
 8016558:	fbb3 f3f2 	udiv	r3, r3, r2
 801655c:	b2db      	uxtb	r3, r3
 801655e:	e7f6      	b.n	801654e <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]+0x26>
 8016560:	40024000 	andmi	r4, r2, r0
 8016564:	fffff1f0 			@ <UNDEFINED> instruction: 0xfffff1f0

08016568 <EnvParams::EnvParams()>:
 8016568:	4770      	bx	lr
	...

0801656c <EnvParams::LoadAndSet(char const*, unsigned long)>:
 801656c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801656e:	460c      	mov	r4, r1
 8016570:	4615      	mov	r5, r2
 8016572:	4907      	ldr	r1, [pc, #28]	@ (8016590 <EnvParams::LoadAndSet(char const*, unsigned long)+0x24>)
 8016574:	4602      	mov	r2, r0
 8016576:	4668      	mov	r0, sp
 8016578:	f000 fc2c 	bl	8016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801657c:	462a      	mov	r2, r5
 801657e:	4621      	mov	r1, r4
 8016580:	4668      	mov	r0, sp
 8016582:	f000 fc2b 	bl	8016ddc <ReadConfigFile::Read(char const*, unsigned int)>
 8016586:	4668      	mov	r0, sp
 8016588:	f000 fc27 	bl	8016dda <ReadConfigFile::~ReadConfigFile()>
 801658c:	b003      	add	sp, #12
 801658e:	bd30      	pop	{r4, r5, pc}
 8016590:	08016621 	stmdaeq	r1, {r0, r5, r9, sl, sp, lr}

08016594 <EnvParams::callbackFunction(char const*)>:
 8016594:	b513      	push	{r0, r1, r4, lr}
 8016596:	4608      	mov	r0, r1
 8016598:	f10d 0307 	add.w	r3, sp, #7
 801659c:	491c      	ldr	r1, [pc, #112]	@ (8016610 <EnvParams::callbackFunction(char const*)+0x7c>)
 801659e:	f10d 0206 	add.w	r2, sp, #6
 80165a2:	f000 fce1 	bl	8016f68 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>
 80165a6:	bb70      	cbnz	r0, 8016606 <EnvParams::callbackFunction(char const*)+0x72>
 80165a8:	f99d 1006 	ldrsb.w	r1, [sp, #6]
 80165ac:	f101 030c 	add.w	r3, r1, #12
 80165b0:	b2db      	uxtb	r3, r3
 80165b2:	2b1a      	cmp	r3, #26
 80165b4:	d827      	bhi.n	8016606 <EnvParams::callbackFunction(char const*)+0x72>
 80165b6:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80165ba:	bb32      	cbnz	r2, 801660a <EnvParams::callbackFunction(char const*)+0x76>
 80165bc:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80165c0:	434b      	muls	r3, r1
 80165c2:	4a14      	ldr	r2, [pc, #80]	@ (8016614 <EnvParams::callbackFunction(char const*)+0x80>)
 80165c4:	6911      	ldr	r1, [r2, #16]
 80165c6:	4299      	cmp	r1, r3
 80165c8:	bf1f      	itttt	ne
 80165ca:	6113      	strne	r3, [r2, #16]
 80165cc:	4b12      	ldrne	r3, [pc, #72]	@ (8016618 <EnvParams::callbackFunction(char const*)+0x84>)
 80165ce:	2201      	movne	r2, #1
 80165d0:	601a      	strne	r2, [r3, #0]
 80165d2:	e018      	b.n	8016606 <EnvParams::callbackFunction(char const*)+0x72>
 80165d4:	f993 4000 	ldrsb.w	r4, [r3]
 80165d8:	428c      	cmp	r4, r1
 80165da:	d111      	bne.n	8016600 <EnvParams::callbackFunction(char const*)+0x6c>
 80165dc:	785c      	ldrb	r4, [r3, #1]
 80165de:	4294      	cmp	r4, r2
 80165e0:	d10e      	bne.n	8016600 <EnvParams::callbackFunction(char const*)+0x6c>
 80165e2:	2900      	cmp	r1, #0
 80165e4:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80165e8:	fb01 f303 	mul.w	r3, r1, r3
 80165ec:	bfcb      	itete	gt
 80165ee:	ebc2 1202 	rsbgt	r2, r2, r2, lsl #4
 80165f2:	f06f 013b 	mvnle.w	r1, #59	@ 0x3b
 80165f6:	eb03 0382 	addgt.w	r3, r3, r2, lsl #2
 80165fa:	fb01 3302 	mlale	r3, r1, r2, r3
 80165fe:	e7e0      	b.n	80165c2 <EnvParams::callbackFunction(char const*)+0x2e>
 8016600:	3302      	adds	r3, #2
 8016602:	3801      	subs	r0, #1
 8016604:	d1e6      	bne.n	80165d4 <EnvParams::callbackFunction(char const*)+0x40>
 8016606:	b002      	add	sp, #8
 8016608:	bd10      	pop	{r4, pc}
 801660a:	4b04      	ldr	r3, [pc, #16]	@ (801661c <EnvParams::callbackFunction(char const*)+0x88>)
 801660c:	200c      	movs	r0, #12
 801660e:	e7f8      	b.n	8016602 <EnvParams::callbackFunction(char const*)+0x6e>
 8016610:	0801ec1a 	stmdaeq	r1, {r1, r3, r4, sl, fp, sp, lr, pc}
 8016614:	40024000 	andmi	r4, r2, r0
 8016618:	20002a10 	andcs	r2, r0, r0, lsl sl
 801661c:	0801ec04 	stmdaeq	r1, {r2, sl, fp, sp, lr, pc}

08016620 <EnvParams::staticCallbackFunction(void*, char const*)>:
 8016620:	f7ff bfb8 	b.w	8016594 <EnvParams::callbackFunction(char const*)>

08016624 <EnvParams::Builder(char*, unsigned long, unsigned long&)>:
 8016624:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8016626:	461c      	mov	r4, r3
 8016628:	a801      	add	r0, sp, #4
 801662a:	4613      	mov	r3, r2
 801662c:	460a      	mov	r2, r1
 801662e:	4914      	ldr	r1, [pc, #80]	@ (8016680 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x5c>)
 8016630:	f000 fafa 	bl	8016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 8016634:	f10d 0103 	add.w	r1, sp, #3
 8016638:	f10d 0002 	add.w	r0, sp, #2
 801663c:	f7ff ff74 	bl	8016528 <ConfigStore::GetEnvUtcOffset(signed char&, unsigned char&) [clone .isra.0]>
 8016640:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8016644:	f99d 2002 	ldrsb.w	r2, [sp, #2]
 8016648:	490e      	ldr	r1, [pc, #56]	@ (8016684 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x60>)
 801664a:	a801      	add	r0, sp, #4
 801664c:	f000 fb72 	bl	8016d34 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>
 8016650:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8016654:	b17b      	cbz	r3, 8016676 <EnvParams::Builder(char*, unsigned long, unsigned long&)+0x52>
 8016656:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801665a:	9b01      	ldr	r3, [sp, #4]
 801665c:	4413      	add	r3, r2
 801665e:	227d      	movs	r2, #125	@ 0x7d
 8016660:	f803 2c01 	strb.w	r2, [r3, #-1]
 8016664:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016668:	9901      	ldr	r1, [sp, #4]
 801666a:	54ca      	strb	r2, [r1, r3]
 801666c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016670:	3301      	adds	r3, #1
 8016672:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016676:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801667a:	6023      	str	r3, [r4, #0]
 801667c:	b004      	add	sp, #16
 801667e:	bd10      	pop	{r4, pc}
 8016680:	0801ec25 	stmdaeq	r1, {r0, r2, r5, sl, fp, sp, lr, pc}
 8016684:	0801ec1a 	stmdaeq	r1, {r1, r3, r4, sl, fp, sp, lr, pc}

08016688 <StoreDevice::StoreDevice()>:
 8016688:	b510      	push	{r4, lr}
 801668a:	2301      	movs	r3, #1
 801668c:	4604      	mov	r4, r0
 801668e:	7003      	strb	r3, [r0, #0]
 8016690:	2204      	movs	r2, #4
 8016692:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8016696:	4802      	ldr	r0, [pc, #8]	@ (80166a0 <StoreDevice::StoreDevice()+0x18>)
 8016698:	f003 fd1e 	bl	801a0d8 <printf>
 801669c:	4620      	mov	r0, r4
 801669e:	bd10      	pop	{r4, pc}
 80166a0:	0801b5e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, ip, sp, pc}

080166a4 <StoreDevice::GetSize() const>:
 80166a4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80166a8:	4770      	bx	lr

080166aa <StoreDevice::GetSectorSize() const>:
 80166aa:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80166ae:	4770      	bx	lr

080166b0 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 80166b0:	9b00      	ldr	r3, [sp, #0]
 80166b2:	2200      	movs	r2, #0
 80166b4:	601a      	str	r2, [r3, #0]
 80166b6:	2001      	movs	r0, #1
 80166b8:	4770      	bx	lr

080166ba <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 80166ba:	2200      	movs	r2, #0
 80166bc:	601a      	str	r2, [r3, #0]
 80166be:	2001      	movs	r0, #1
 80166c0:	4770      	bx	lr

080166c2 <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 80166c2:	9b00      	ldr	r3, [sp, #0]
 80166c4:	2200      	movs	r2, #0
 80166c6:	601a      	str	r2, [r3, #0]
 80166c8:	2001      	movs	r0, #1
 80166ca:	4770      	bx	lr

080166cc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>:
 80166cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80166d0:	9c06      	ldr	r4, [sp, #24]
 80166d2:	4607      	mov	r7, r0
 80166d4:	2c00      	cmp	r4, #0
 80166d6:	461e      	mov	r6, r3
 80166d8:	4608      	mov	r0, r1
 80166da:	4615      	mov	r5, r2
 80166dc:	bf0c      	ite	eq
 80166de:	2303      	moveq	r3, #3
 80166e0:	2301      	movne	r3, #1
 80166e2:	2200      	movs	r2, #0
 80166e4:	4639      	mov	r1, r7
 80166e6:	f000 f9cd 	bl	8016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
 80166ea:	b13c      	cbz	r4, 80166fc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)+0x30>
 80166ec:	4632      	mov	r2, r6
 80166ee:	4629      	mov	r1, r5
 80166f0:	4620      	mov	r0, r4
 80166f2:	2302      	movs	r3, #2
 80166f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80166f8:	f000 b9c4 	b.w	8016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
 80166fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016700 <spi_flash_cmd_wait_ready(unsigned long)>:
 8016700:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016702:	4b20      	ldr	r3, [pc, #128]	@ (8016784 <spi_flash_cmd_wait_ready(unsigned long)+0x84>)
 8016704:	7c1b      	ldrb	r3, [r3, #16]
 8016706:	f88d 3007 	strb.w	r3, [sp, #7]
 801670a:	2b70      	cmp	r3, #112	@ 0x70
 801670c:	f04f 0301 	mov.w	r3, #1
 8016710:	bf08      	it	eq
 8016712:	2480      	moveq	r4, #128	@ 0x80
 8016714:	f04f 0200 	mov.w	r2, #0
 8016718:	f10d 0107 	add.w	r1, sp, #7
 801671c:	4607      	mov	r7, r0
 801671e:	4618      	mov	r0, r3
 8016720:	bf1a      	itte	ne
 8016722:	2401      	movne	r4, #1
 8016724:	2600      	movne	r6, #0
 8016726:	4626      	moveq	r6, r4
 8016728:	f000 f9ac 	bl	8016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
 801672c:	2000      	movs	r0, #0
 801672e:	f003 fef3 	bl	801a518 <time>
 8016732:	4605      	mov	r5, r0
 8016734:	2300      	movs	r3, #0
 8016736:	4619      	mov	r1, r3
 8016738:	f10d 0206 	add.w	r2, sp, #6
 801673c:	2001      	movs	r0, #1
 801673e:	f000 f9a1 	bl	8016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
 8016742:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8016746:	4023      	ands	r3, r4
 8016748:	42b3      	cmp	r3, r6
 801674a:	d005      	beq.n	8016758 <spi_flash_cmd_wait_ready(unsigned long)+0x58>
 801674c:	b9a5      	cbnz	r5, 8016778 <spi_flash_cmd_wait_ready(unsigned long)+0x78>
 801674e:	4628      	mov	r0, r5
 8016750:	f003 fee2 	bl	801a518 <time>
 8016754:	4287      	cmp	r7, r0
 8016756:	d8ed      	bhi.n	8016734 <spi_flash_cmd_wait_ready(unsigned long)+0x34>
 8016758:	2200      	movs	r2, #0
 801675a:	2302      	movs	r3, #2
 801675c:	4611      	mov	r1, r2
 801675e:	4610      	mov	r0, r2
 8016760:	f000 f990 	bl	8016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>
 8016764:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8016768:	ea04 0003 	and.w	r0, r4, r3
 801676c:	1b80      	subs	r0, r0, r6
 801676e:	bf18      	it	ne
 8016770:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8016774:	b003      	add	sp, #12
 8016776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016778:	2000      	movs	r0, #0
 801677a:	f003 fecd 	bl	801a518 <time>
 801677e:	1b40      	subs	r0, r0, r5
 8016780:	e7e8      	b.n	8016754 <spi_flash_cmd_wait_ready(unsigned long)+0x54>
 8016782:	bf00      	nop
 8016784:	20000000 	andcs	r0, r0, r0

08016788 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>:
 8016788:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801678c:	f04f 0a00 	mov.w	sl, #0
 8016790:	4699      	mov	r9, r3
 8016792:	2306      	movs	r3, #6
 8016794:	1e14      	subs	r4, r2, #0
 8016796:	f88d 300f 	strb.w	r3, [sp, #15]
 801679a:	4605      	mov	r5, r0
 801679c:	460e      	mov	r6, r1
 801679e:	f8cd a000 	str.w	sl, [sp]
 80167a2:	4653      	mov	r3, sl
 80167a4:	4652      	mov	r2, sl
 80167a6:	f04f 0101 	mov.w	r1, #1
 80167aa:	f10d 000f 	add.w	r0, sp, #15
 80167ae:	bf0c      	ite	eq
 80167b0:	2705      	moveq	r7, #5
 80167b2:	2702      	movne	r7, #2
 80167b4:	f89d 8030 	ldrb.w	r8, [sp, #48]	@ 0x30
 80167b8:	f7ff ff88 	bl	80166cc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 80167bc:	2800      	cmp	r0, #0
 80167be:	db12      	blt.n	80167e6 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 80167c0:	f8cd 9000 	str.w	r9, [sp]
 80167c4:	4653      	mov	r3, sl
 80167c6:	4622      	mov	r2, r4
 80167c8:	4631      	mov	r1, r6
 80167ca:	4628      	mov	r0, r5
 80167cc:	f7ff ff7e 	bl	80166cc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 80167d0:	2800      	cmp	r0, #0
 80167d2:	db08      	blt.n	80167e6 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 80167d4:	f1b8 0f00 	cmp.w	r8, #0
 80167d8:	d005      	beq.n	80167e6 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)+0x5e>
 80167da:	4638      	mov	r0, r7
 80167dc:	b004      	add	sp, #16
 80167de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80167e2:	f7ff bf8d 	b.w	8016700 <spi_flash_cmd_wait_ready(unsigned long)>
 80167e6:	b004      	add	sp, #16
 80167e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080167ec <spi_flash_get_size()>:
 80167ec:	4b01      	ldr	r3, [pc, #4]	@ (80167f4 <spi_flash_get_size()+0x8>)
 80167ee:	6858      	ldr	r0, [r3, #4]
 80167f0:	4770      	bx	lr
 80167f2:	bf00      	nop
 80167f4:	20000000 	andcs	r0, r0, r0

080167f8 <spi_flash_get_sector_size()>:
 80167f8:	4b01      	ldr	r3, [pc, #4]	@ (8016800 <spi_flash_get_sector_size()+0x8>)
 80167fa:	68d8      	ldr	r0, [r3, #12]
 80167fc:	4770      	bx	lr
 80167fe:	bf00      	nop
 8016800:	20000000 	andcs	r0, r0, r0

08016804 <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)>:
 8016804:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016808:	4b1a      	ldr	r3, [pc, #104]	@ (8016874 <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)+0x70>)
 801680a:	b085      	sub	sp, #20
 801680c:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8016810:	4605      	mov	r5, r0
 8016812:	2302      	movs	r3, #2
 8016814:	200a      	movs	r0, #10
 8016816:	460f      	mov	r7, r1
 8016818:	4691      	mov	r9, r2
 801681a:	f88d 300c 	strb.w	r3, [sp, #12]
 801681e:	2600      	movs	r6, #0
 8016820:	f7ff ff6e 	bl	8016700 <spi_flash_cmd_wait_ready(unsigned long)>
 8016824:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016828:	42be      	cmp	r6, r7
 801682a:	d302      	bcc.n	8016832 <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)+0x2e>
 801682c:	b005      	add	sp, #20
 801682e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016832:	fbb5 f4f8 	udiv	r4, r5, r8
 8016836:	fb08 5414 	mls	r4, r8, r4, r5
 801683a:	eba8 0404 	sub.w	r4, r8, r4
 801683e:	1bbb      	subs	r3, r7, r6
 8016840:	429c      	cmp	r4, r3
 8016842:	bf28      	it	cs
 8016844:	461c      	movcs	r4, r3
 8016846:	0c2b      	lsrs	r3, r5, #16
 8016848:	f88d 300d 	strb.w	r3, [sp, #13]
 801684c:	eb09 0206 	add.w	r2, r9, r6
 8016850:	ba6b      	rev16	r3, r5
 8016852:	4426      	add	r6, r4
 8016854:	f8ad 300e 	strh.w	r3, [sp, #14]
 8016858:	1bf3      	subs	r3, r6, r7
 801685a:	bf18      	it	ne
 801685c:	2301      	movne	r3, #1
 801685e:	9300      	str	r3, [sp, #0]
 8016860:	2104      	movs	r1, #4
 8016862:	4623      	mov	r3, r4
 8016864:	a803      	add	r0, sp, #12
 8016866:	f7ff ff8f 	bl	8016788 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>
 801686a:	2800      	cmp	r0, #0
 801686c:	dbde      	blt.n	801682c <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)+0x28>
 801686e:	4425      	add	r5, r4
 8016870:	e7da      	b.n	8016828 <spi_flash_cmd_write_multi(unsigned long, unsigned int, unsigned char const*)+0x24>
 8016872:	bf00      	nop
 8016874:	20000000 	andcs	r0, r0, r0

08016878 <spi_flash_cmd_read_fast(unsigned long, unsigned int, unsigned char*)>:
 8016878:	b5f0      	push	{r4, r5, r6, r7, lr}
 801687a:	b085      	sub	sp, #20
 801687c:	230b      	movs	r3, #11
 801687e:	f88d 3008 	strb.w	r3, [sp, #8]
 8016882:	4604      	mov	r4, r0
 8016884:	2300      	movs	r3, #0
 8016886:	2002      	movs	r0, #2
 8016888:	460d      	mov	r5, r1
 801688a:	4617      	mov	r7, r2
 801688c:	f88d 300c 	strb.w	r3, [sp, #12]
 8016890:	f7ff ff36 	bl	8016700 <spi_flash_cmd_wait_ready(unsigned long)>
 8016894:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016898:	b90d      	cbnz	r5, 801689e <spi_flash_cmd_read_fast(unsigned long, unsigned int, unsigned char*)+0x26>
 801689a:	b005      	add	sp, #20
 801689c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801689e:	f1c4 7680 	rsb	r6, r4, #16777216	@ 0x1000000
 80168a2:	42ae      	cmp	r6, r5
 80168a4:	ea4f 4314 	mov.w	r3, r4, lsr #16
 80168a8:	bf28      	it	cs
 80168aa:	462e      	movcs	r6, r5
 80168ac:	f88d 3009 	strb.w	r3, [sp, #9]
 80168b0:	ba63      	rev16	r3, r4
 80168b2:	f8ad 300a 	strh.w	r3, [sp, #10]
 80168b6:	9600      	str	r6, [sp, #0]
 80168b8:	463b      	mov	r3, r7
 80168ba:	2200      	movs	r2, #0
 80168bc:	2105      	movs	r1, #5
 80168be:	a802      	add	r0, sp, #8
 80168c0:	f7ff ff04 	bl	80166cc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 80168c4:	2800      	cmp	r0, #0
 80168c6:	dbe8      	blt.n	801689a <spi_flash_cmd_read_fast(unsigned long, unsigned int, unsigned char*)+0x22>
 80168c8:	4434      	add	r4, r6
 80168ca:	1bad      	subs	r5, r5, r6
 80168cc:	4437      	add	r7, r6
 80168ce:	e7e3      	b.n	8016898 <spi_flash_cmd_read_fast(unsigned long, unsigned int, unsigned char*)+0x20>

080168d0 <spi_flash_cmd_erase(unsigned long, unsigned int)>:
 80168d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80168d2:	4b1a      	ldr	r3, [pc, #104]	@ (801693c <spi_flash_cmd_erase(unsigned long, unsigned int)+0x6c>)
 80168d4:	68dd      	ldr	r5, [r3, #12]
 80168d6:	fbb0 f3f5 	udiv	r3, r0, r5
 80168da:	fb05 0313 	mls	r3, r5, r3, r0
 80168de:	4606      	mov	r6, r0
 80168e0:	460c      	mov	r4, r1
 80168e2:	bb43      	cbnz	r3, 8016936 <spi_flash_cmd_erase(unsigned long, unsigned int)+0x66>
 80168e4:	fbb1 f3f5 	udiv	r3, r1, r5
 80168e8:	fb05 1313 	mls	r3, r5, r3, r1
 80168ec:	bb1b      	cbnz	r3, 8016936 <spi_flash_cmd_erase(unsigned long, unsigned int)+0x66>
 80168ee:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
 80168f2:	bf14      	ite	ne
 80168f4:	23d8      	movne	r3, #216	@ 0xd8
 80168f6:	2320      	moveq	r3, #32
 80168f8:	2002      	movs	r0, #2
 80168fa:	f88d 300c 	strb.w	r3, [sp, #12]
 80168fe:	f7ff feff 	bl	8016700 <spi_flash_cmd_wait_ready(unsigned long)>
 8016902:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016906:	b90c      	cbnz	r4, 801690c <spi_flash_cmd_erase(unsigned long, unsigned int)+0x3c>
 8016908:	b004      	add	sp, #16
 801690a:	bd70      	pop	{r4, r5, r6, pc}
 801690c:	0c33      	lsrs	r3, r6, #16
 801690e:	f88d 300d 	strb.w	r3, [sp, #13]
 8016912:	ba73      	rev16	r3, r6
 8016914:	f8ad 300e 	strh.w	r3, [sp, #14]
 8016918:	1b63      	subs	r3, r4, r5
 801691a:	bf18      	it	ne
 801691c:	2301      	movne	r3, #1
 801691e:	9300      	str	r3, [sp, #0]
 8016920:	2300      	movs	r3, #0
 8016922:	461a      	mov	r2, r3
 8016924:	2104      	movs	r1, #4
 8016926:	a803      	add	r0, sp, #12
 8016928:	f7ff ff2e 	bl	8016788 <spi_flash_write_common(unsigned char const*, unsigned int, unsigned char const*, unsigned int, bool)>
 801692c:	2800      	cmp	r0, #0
 801692e:	dbeb      	blt.n	8016908 <spi_flash_cmd_erase(unsigned long, unsigned int)+0x38>
 8016930:	442e      	add	r6, r5
 8016932:	1b64      	subs	r4, r4, r5
 8016934:	e7e7      	b.n	8016906 <spi_flash_cmd_erase(unsigned long, unsigned int)+0x36>
 8016936:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801693a:	e7e5      	b.n	8016908 <spi_flash_cmd_erase(unsigned long, unsigned int)+0x38>
 801693c:	20000000 	andcs	r0, r0, r0

08016940 <spi_flash_probe(unsigned int, unsigned int, unsigned int)>:
 8016940:	b510      	push	{r4, lr}
 8016942:	b086      	sub	sp, #24
 8016944:	2400      	movs	r4, #0
 8016946:	9404      	str	r4, [sp, #16]
 8016948:	f88d 4014 	strb.w	r4, [sp, #20]
 801694c:	f000 f85c 	bl	8016a08 <spi_init()>
 8016950:	42a0      	cmp	r0, r4
 8016952:	db1b      	blt.n	801698c <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x4c>
 8016954:	239f      	movs	r3, #159	@ 0x9f
 8016956:	f88d 300f 	strb.w	r3, [sp, #15]
 801695a:	2305      	movs	r3, #5
 801695c:	9300      	str	r3, [sp, #0]
 801695e:	4622      	mov	r2, r4
 8016960:	ab04      	add	r3, sp, #16
 8016962:	2101      	movs	r1, #1
 8016964:	f10d 000f 	add.w	r0, sp, #15
 8016968:	f7ff feb0 	bl	80166cc <spi_flash_read_write(unsigned char const*, unsigned int, unsigned char const*, unsigned char*, unsigned int)>
 801696c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016970:	2bef      	cmp	r3, #239	@ 0xef
 8016972:	d109      	bne.n	8016988 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x48>
 8016974:	4807      	ldr	r0, [pc, #28]	@ (8016994 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x54>)
 8016976:	a904      	add	r1, sp, #16
 8016978:	f000 f80e 	bl	8016998 <spi_flash_probe_winbond(spi_flash*, unsigned char*)>
 801697c:	1b00      	subs	r0, r0, r4
 801697e:	bf18      	it	ne
 8016980:	2001      	movne	r0, #1
 8016982:	4240      	negs	r0, r0
 8016984:	b006      	add	sp, #24
 8016986:	bd10      	pop	{r4, pc}
 8016988:	2001      	movs	r0, #1
 801698a:	e7fa      	b.n	8016982 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x42>
 801698c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016990:	e7f8      	b.n	8016984 <spi_flash_probe(unsigned int, unsigned int, unsigned int)+0x44>
 8016992:	bf00      	nop
 8016994:	20000000 	andcs	r0, r0, r0

08016998 <spi_flash_probe_winbond(spi_flash*, unsigned char*)>:
 8016998:	f8b1 2001 	ldrh.w	r2, [r1, #1]
 801699c:	b570      	push	{r4, r5, r6, lr}
 801699e:	ba52      	rev16	r2, r2
 80169a0:	4d10      	ldr	r5, [pc, #64]	@ (80169e4 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x4c>)
 80169a2:	b292      	uxth	r2, r2
 80169a4:	2300      	movs	r3, #0
 80169a6:	f835 6033 	ldrh.w	r6, [r5, r3, lsl #3]
 80169aa:	4296      	cmp	r6, r2
 80169ac:	eb05 04c3 	add.w	r4, r5, r3, lsl #3
 80169b0:	d005      	beq.n	80169be <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x26>
 80169b2:	3301      	adds	r3, #1
 80169b4:	2b12      	cmp	r3, #18
 80169b6:	d1f6      	bne.n	80169a6 <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0xe>
 80169b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80169bc:	bd70      	pop	{r4, r5, r6, pc}
 80169be:	6863      	ldr	r3, [r4, #4]
 80169c0:	6003      	str	r3, [r0, #0]
 80169c2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80169c6:	6083      	str	r3, [r0, #8]
 80169c8:	784b      	ldrb	r3, [r1, #1]
 80169ca:	2b20      	cmp	r3, #32
 80169cc:	bf0c      	ite	eq
 80169ce:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
 80169d2:	f44f 5380 	movne.w	r3, #4096	@ 0x1000
 80169d6:	60c3      	str	r3, [r0, #12]
 80169d8:	8863      	ldrh	r3, [r4, #2]
 80169da:	041b      	lsls	r3, r3, #16
 80169dc:	6043      	str	r3, [r0, #4]
 80169de:	2000      	movs	r0, #0
 80169e0:	e7ec      	b.n	80169bc <spi_flash_probe_winbond(spi_flash*, unsigned char*)+0x24>
 80169e2:	bf00      	nop
 80169e4:	0801ec30 	stmdaeq	r1, {r4, r5, sl, fp, sp, lr, pc}

080169e8 <gpio_fsel(unsigned long, unsigned long, unsigned long) [clone .part.0]>:
 80169e8:	b570      	push	{r4, r5, r6, lr}
 80169ea:	460b      	mov	r3, r1
 80169ec:	4605      	mov	r5, r0
 80169ee:	460c      	mov	r4, r1
 80169f0:	2200      	movs	r2, #0
 80169f2:	2101      	movs	r1, #1
 80169f4:	f001 fd5e 	bl	80184b4 <gpio_mode_set>
 80169f8:	4623      	mov	r3, r4
 80169fa:	4628      	mov	r0, r5
 80169fc:	2202      	movs	r2, #2
 80169fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016a02:	2100      	movs	r1, #0
 8016a04:	f001 bd78 	b.w	80184f8 <gpio_output_options_set>

08016a08 <spi_init()>:
 8016a08:	b510      	push	{r4, lr}
 8016a0a:	f002 fd1f 	bl	801944c <gd32_spi_begin()>
 8016a0e:	2001      	movs	r0, #1
 8016a10:	f002 fdc0 	bl	8019594 <gd32_spi_chipSelect(unsigned char)>
 8016a14:	4819      	ldr	r0, [pc, #100]	@ (8016a7c <spi_init()+0x74>)
 8016a16:	4c1a      	ldr	r4, [pc, #104]	@ (8016a80 <spi_init()+0x78>)
 8016a18:	f002 fd6c 	bl	80194f4 <gd32_spi_set_speed_hz(unsigned long)>
 8016a1c:	2000      	movs	r0, #0
 8016a1e:	f002 fda3 	bl	8019568 <gd32_spi_setDataMode(unsigned char)>
 8016a22:	f640 4006 	movw	r0, #3078	@ 0xc06
 8016a26:	f001 fdcb 	bl	80185c0 <rcu_periph_clock_enable>
 8016a2a:	4620      	mov	r0, r4
 8016a2c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8016a30:	f7ff ffda 	bl	80169e8 <gpio_fsel(unsigned long, unsigned long, unsigned long) [clone .part.0]>
 8016a34:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8016a38:	4620      	mov	r0, r4
 8016a3a:	f001 fd79 	bl	8018530 <gpio_bit_set>
 8016a3e:	f640 4006 	movw	r0, #3078	@ 0xc06
 8016a42:	f001 fdbd 	bl	80185c0 <rcu_periph_clock_enable>
 8016a46:	4620      	mov	r0, r4
 8016a48:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8016a4c:	f7ff ffcc 	bl	80169e8 <gpio_fsel(unsigned long, unsigned long, unsigned long) [clone .part.0]>
 8016a50:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8016a54:	4620      	mov	r0, r4
 8016a56:	f001 fd6b 	bl	8018530 <gpio_bit_set>
 8016a5a:	f640 4006 	movw	r0, #3078	@ 0xc06
 8016a5e:	f001 fdaf 	bl	80185c0 <rcu_periph_clock_enable>
 8016a62:	4620      	mov	r0, r4
 8016a64:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8016a68:	f7ff ffbe 	bl	80169e8 <gpio_fsel(unsigned long, unsigned long, unsigned long) [clone .part.0]>
 8016a6c:	4620      	mov	r0, r4
 8016a6e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8016a72:	f001 fd5d 	bl	8018530 <gpio_bit_set>
 8016a76:	2000      	movs	r0, #0
 8016a78:	bd10      	pop	{r4, pc}
 8016a7a:	bf00      	nop
 8016a7c:	005b8d80 	subseq	r8, fp, r0, lsl #27
 8016a80:	40021800 	andmi	r1, r2, r0, lsl #16

08016a84 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)>:
 8016a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a86:	4616      	mov	r6, r2
 8016a88:	07da      	lsls	r2, r3, #31
 8016a8a:	4604      	mov	r4, r0
 8016a8c:	460d      	mov	r5, r1
 8016a8e:	461f      	mov	r7, r3
 8016a90:	d504      	bpl.n	8016a9c <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x18>
 8016a92:	480e      	ldr	r0, [pc, #56]	@ (8016acc <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x48>)
 8016a94:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8016a98:	f001 fd4c 	bl	8018534 <gpio_bit_reset>
 8016a9c:	b124      	cbz	r4, 8016aa8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x24>
 8016a9e:	b966      	cbnz	r6, 8016aba <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x36>
 8016aa0:	4621      	mov	r1, r4
 8016aa2:	4628      	mov	r0, r5
 8016aa4:	f002 fd98 	bl	80195d8 <gd32_spi_writenb(char const*, unsigned long)>
 8016aa8:	07bb      	lsls	r3, r7, #30
 8016aaa:	d504      	bpl.n	8016ab6 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x32>
 8016aac:	4807      	ldr	r0, [pc, #28]	@ (8016acc <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x48>)
 8016aae:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8016ab2:	f001 fd3d 	bl	8018530 <gpio_bit_set>
 8016ab6:	2000      	movs	r0, #0
 8016ab8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016aba:	4622      	mov	r2, r4
 8016abc:	4631      	mov	r1, r6
 8016abe:	b91d      	cbnz	r5, 8016ac8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x44>
 8016ac0:	4630      	mov	r0, r6
 8016ac2:	f002 fd75 	bl	80195b0 <gd32_spi_transfernb(char const*, char*, unsigned long)>
 8016ac6:	e7ef      	b.n	8016aa8 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x24>
 8016ac8:	4628      	mov	r0, r5
 8016aca:	e7fa      	b.n	8016ac2 <spi_xfer(unsigned long, unsigned char const*, unsigned char*, unsigned long)+0x3e>
 8016acc:	40021800 	andmi	r1, r2, r0, lsl #16

08016ad0 <properties::convert_json_file(char*, unsigned long, bool)>:
 8016ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ad4:	7803      	ldrb	r3, [r0, #0]
 8016ad6:	2b7b      	cmp	r3, #123	@ 0x7b
 8016ad8:	4604      	mov	r4, r0
 8016ada:	f040 80a2 	bne.w	8016c22 <properties::convert_json_file(char*, unsigned long, bool)+0x152>
 8016ade:	b172      	cbz	r2, 8016afe <properties::convert_json_file(char*, unsigned long, bool)+0x2e>
 8016ae0:	2501      	movs	r5, #1
 8016ae2:	4603      	mov	r3, r0
 8016ae4:	4628      	mov	r0, r5
 8016ae6:	f04f 0c3d 	mov.w	ip, #61	@ 0x3d
 8016aea:	f04f 0e0a 	mov.w	lr, #10
 8016aee:	428d      	cmp	r5, r1
 8016af0:	d377      	bcc.n	8016be2 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 8016af2:	b102      	cbz	r2, 8016af6 <properties::convert_json_file(char*, unsigned long, bool)+0x26>
 8016af4:	3801      	subs	r0, #1
 8016af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016afa:	4635      	mov	r5, r6
 8016afc:	e7f3      	b.n	8016ae6 <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 8016afe:	4605      	mov	r5, r0
 8016b00:	2323      	movs	r3, #35	@ 0x23
 8016b02:	f805 3b01 	strb.w	r3, [r5], #1
 8016b06:	2601      	movs	r6, #1
 8016b08:	462f      	mov	r7, r5
 8016b0a:	428e      	cmp	r6, r1
 8016b0c:	d317      	bcc.n	8016b3e <properties::convert_json_file(char*, unsigned long, bool)+0x6e>
 8016b0e:	1c6b      	adds	r3, r5, #1
 8016b10:	428e      	cmp	r6, r1
 8016b12:	eba3 0004 	sub.w	r0, r3, r4
 8016b16:	d205      	bcs.n	8016b24 <properties::convert_json_file(char*, unsigned long, bool)+0x54>
 8016b18:	46bc      	mov	ip, r7
 8016b1a:	f81c eb01 	ldrb.w	lr, [ip], #1
 8016b1e:	f1be 0f22 	cmp.w	lr, #34	@ 0x22
 8016b22:	d112      	bne.n	8016b4a <properties::convert_json_file(char*, unsigned long, bool)+0x7a>
 8016b24:	240a      	movs	r4, #10
 8016b26:	702c      	strb	r4, [r5, #0]
 8016b28:	463c      	mov	r4, r7
 8016b2a:	3701      	adds	r7, #1
 8016b2c:	7825      	ldrb	r5, [r4, #0]
 8016b2e:	2d7b      	cmp	r5, #123	@ 0x7b
 8016b30:	d0e3      	beq.n	8016afa <properties::convert_json_file(char*, unsigned long, bool)+0x2a>
 8016b32:	428e      	cmp	r6, r1
 8016b34:	f106 0501 	add.w	r5, r6, #1
 8016b38:	d2d5      	bcs.n	8016ae6 <properties::convert_json_file(char*, unsigned long, bool)+0x16>
 8016b3a:	462e      	mov	r6, r5
 8016b3c:	e7f4      	b.n	8016b28 <properties::convert_json_file(char*, unsigned long, bool)+0x58>
 8016b3e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8016b42:	2b22      	cmp	r3, #34	@ 0x22
 8016b44:	d0e3      	beq.n	8016b0e <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 8016b46:	3601      	adds	r6, #1
 8016b48:	e7df      	b.n	8016b0a <properties::convert_json_file(char*, unsigned long, bool)+0x3a>
 8016b4a:	f803 ec01 	strb.w	lr, [r3, #-1]
 8016b4e:	3601      	adds	r6, #1
 8016b50:	4667      	mov	r7, ip
 8016b52:	461d      	mov	r5, r3
 8016b54:	e7db      	b.n	8016b0e <properties::convert_json_file(char*, unsigned long, bool)+0x3e>
 8016b56:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 8016b5a:	d142      	bne.n	8016be2 <properties::convert_json_file(char*, unsigned long, bool)+0x112>
 8016b5c:	eba0 0904 	sub.w	r9, r0, r4
 8016b60:	f894 8000 	ldrb.w	r8, [r4]
 8016b64:	f1b8 0f22 	cmp.w	r8, #34	@ 0x22
 8016b68:	eb04 0009 	add.w	r0, r4, r9
 8016b6c:	4626      	mov	r6, r4
 8016b6e:	f105 0701 	add.w	r7, r5, #1
 8016b72:	f104 0401 	add.w	r4, r4, #1
 8016b76:	d13f      	bne.n	8016bf8 <properties::convert_json_file(char*, unsigned long, bool)+0x128>
 8016b78:	f803 cb01 	strb.w	ip, [r3], #1
 8016b7c:	3001      	adds	r0, #1
 8016b7e:	462f      	mov	r7, r5
 8016b80:	428f      	cmp	r7, r1
 8016b82:	f896 8000 	ldrb.w	r8, [r6]
 8016b86:	4634      	mov	r4, r6
 8016b88:	f107 0701 	add.w	r7, r7, #1
 8016b8c:	f106 0601 	add.w	r6, r6, #1
 8016b90:	d338      	bcc.n	8016c04 <properties::convert_json_file(char*, unsigned long, bool)+0x134>
 8016b92:	7825      	ldrb	r5, [r4, #0]
 8016b94:	2d20      	cmp	r5, #32
 8016b96:	4626      	mov	r6, r4
 8016b98:	46b8      	mov	r8, r7
 8016b9a:	f104 0401 	add.w	r4, r4, #1
 8016b9e:	f107 0701 	add.w	r7, r7, #1
 8016ba2:	d134      	bne.n	8016c0e <properties::convert_json_file(char*, unsigned long, bool)+0x13e>
 8016ba4:	4588      	cmp	r8, r1
 8016ba6:	d3f4      	bcc.n	8016b92 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 8016ba8:	46b8      	mov	r8, r7
 8016baa:	7834      	ldrb	r4, [r6, #0]
 8016bac:	2c22      	cmp	r4, #34	@ 0x22
 8016bae:	d100      	bne.n	8016bb2 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 8016bb0:	3601      	adds	r6, #1
 8016bb2:	4634      	mov	r4, r6
 8016bb4:	f108 0501 	add.w	r5, r8, #1
 8016bb8:	f814 7b01 	ldrb.w	r7, [r4], #1
 8016bbc:	2f22      	cmp	r7, #34	@ 0x22
 8016bbe:	d02a      	beq.n	8016c16 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 8016bc0:	2f2c      	cmp	r7, #44	@ 0x2c
 8016bc2:	d028      	beq.n	8016c16 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 8016bc4:	2f7d      	cmp	r7, #125	@ 0x7d
 8016bc6:	d026      	beq.n	8016c16 <properties::convert_json_file(char*, unsigned long, bool)+0x146>
 8016bc8:	4588      	cmp	r8, r1
 8016bca:	d228      	bcs.n	8016c1e <properties::convert_json_file(char*, unsigned long, bool)+0x14e>
 8016bcc:	f1a7 0820 	sub.w	r8, r7, #32
 8016bd0:	f1b8 0f5a 	cmp.w	r8, #90	@ 0x5a
 8016bd4:	d803      	bhi.n	8016bde <properties::convert_json_file(char*, unsigned long, bool)+0x10e>
 8016bd6:	f803 7b01 	strb.w	r7, [r3], #1
 8016bda:	3001      	adds	r0, #1
 8016bdc:	4626      	mov	r6, r4
 8016bde:	46a8      	mov	r8, r5
 8016be0:	e7e7      	b.n	8016bb2 <properties::convert_json_file(char*, unsigned long, bool)+0xe2>
 8016be2:	428d      	cmp	r5, r1
 8016be4:	f894 8000 	ldrb.w	r8, [r4]
 8016be8:	4627      	mov	r7, r4
 8016bea:	f105 0501 	add.w	r5, r5, #1
 8016bee:	f104 0401 	add.w	r4, r4, #1
 8016bf2:	d3b0      	bcc.n	8016b56 <properties::convert_json_file(char*, unsigned long, bool)+0x86>
 8016bf4:	463c      	mov	r4, r7
 8016bf6:	e7b1      	b.n	8016b5c <properties::convert_json_file(char*, unsigned long, bool)+0x8c>
 8016bf8:	428d      	cmp	r5, r1
 8016bfa:	d2c1      	bcs.n	8016b80 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 8016bfc:	f803 8b01 	strb.w	r8, [r3], #1
 8016c00:	463d      	mov	r5, r7
 8016c02:	e7ad      	b.n	8016b60 <properties::convert_json_file(char*, unsigned long, bool)+0x90>
 8016c04:	f1b8 0f3a 	cmp.w	r8, #58	@ 0x3a
 8016c08:	d1ba      	bne.n	8016b80 <properties::convert_json_file(char*, unsigned long, bool)+0xb0>
 8016c0a:	4634      	mov	r4, r6
 8016c0c:	e7c1      	b.n	8016b92 <properties::convert_json_file(char*, unsigned long, bool)+0xc2>
 8016c0e:	2d22      	cmp	r5, #34	@ 0x22
 8016c10:	bf08      	it	eq
 8016c12:	4626      	moveq	r6, r4
 8016c14:	e7c9      	b.n	8016baa <properties::convert_json_file(char*, unsigned long, bool)+0xda>
 8016c16:	f803 eb01 	strb.w	lr, [r3], #1
 8016c1a:	3001      	adds	r0, #1
 8016c1c:	4645      	mov	r5, r8
 8016c1e:	3501      	adds	r5, #1
 8016c20:	e765      	b.n	8016aee <properties::convert_json_file(char*, unsigned long, bool)+0x1e>
 8016c22:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8016c26:	e766      	b.n	8016af6 <properties::convert_json_file(char*, unsigned long, bool)+0x26>

08016c28 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>:
 8016c28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016c2c:	6002      	str	r2, [r0, #0]
 8016c2e:	4614      	mov	r4, r2
 8016c30:	2200      	movs	r2, #0
 8016c32:	80c2      	strh	r2, [r0, #6]
 8016c34:	4a1c      	ldr	r2, [pc, #112]	@ (8016ca8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x80>)
 8016c36:	8083      	strh	r3, [r0, #4]
 8016c38:	7812      	ldrb	r2, [r2, #0]
 8016c3a:	f002 0201 	and.w	r2, r2, #1
 8016c3e:	4606      	mov	r6, r0
 8016c40:	7202      	strb	r2, [r0, #8]
 8016c42:	4608      	mov	r0, r1
 8016c44:	4605      	mov	r5, r0
 8016c46:	3001      	adds	r0, #1
 8016c48:	782f      	ldrb	r7, [r5, #0]
 8016c4a:	2f00      	cmp	r7, #0
 8016c4c:	d1fa      	bne.n	8016c44 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x1c>
 8016c4e:	1a6d      	subs	r5, r5, r1
 8016c50:	b29b      	uxth	r3, r3
 8016c52:	b1d2      	cbz	r2, 8016c8a <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x62>
 8016c54:	1d2f      	adds	r7, r5, #4
 8016c56:	429f      	cmp	r7, r3
 8016c58:	d814      	bhi.n	8016c84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8016c5a:	f04f 087b 	mov.w	r8, #123	@ 0x7b
 8016c5e:	f04f 0922 	mov.w	r9, #34	@ 0x22
 8016c62:	462a      	mov	r2, r5
 8016c64:	f884 8000 	strb.w	r8, [r4]
 8016c68:	f884 9001 	strb.w	r9, [r4, #1]
 8016c6c:	1ca0      	adds	r0, r4, #2
 8016c6e:	f002 ff38 	bl	8019ae2 <memmove>
 8016c72:	1963      	adds	r3, r4, r5
 8016c74:	223a      	movs	r2, #58	@ 0x3a
 8016c76:	f883 9002 	strb.w	r9, [r3, #2]
 8016c7a:	70da      	strb	r2, [r3, #3]
 8016c7c:	3505      	adds	r5, #5
 8016c7e:	f804 8007 	strb.w	r8, [r4, r7]
 8016c82:	80f5      	strh	r5, [r6, #6]
 8016c84:	4630      	mov	r0, r6
 8016c86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016c8a:	1caf      	adds	r7, r5, #2
 8016c8c:	42bb      	cmp	r3, r7
 8016c8e:	d3f9      	bcc.n	8016c84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8016c90:	4620      	mov	r0, r4
 8016c92:	2323      	movs	r3, #35	@ 0x23
 8016c94:	f800 3b01 	strb.w	r3, [r0], #1
 8016c98:	462a      	mov	r2, r5
 8016c9a:	442c      	add	r4, r5
 8016c9c:	f002 ff21 	bl	8019ae2 <memmove>
 8016ca0:	230a      	movs	r3, #10
 8016ca2:	7063      	strb	r3, [r4, #1]
 8016ca4:	80f7      	strh	r7, [r6, #6]
 8016ca6:	e7ed      	b.n	8016c84 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)+0x5c>
 8016ca8:	20002a15 	andcs	r2, r0, r5, lsl sl

08016cac <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)>:
 8016cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cae:	469c      	mov	ip, r3
 8016cb0:	8885      	ldrh	r5, [r0, #4]
 8016cb2:	88c3      	ldrh	r3, [r0, #6]
 8016cb4:	42ab      	cmp	r3, r5
 8016cb6:	b085      	sub	sp, #20
 8016cb8:	d302      	bcc.n	8016cc0 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x14>
 8016cba:	2000      	movs	r0, #0
 8016cbc:	b005      	add	sp, #20
 8016cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016cc0:	4604      	mov	r4, r0
 8016cc2:	6800      	ldr	r0, [r0, #0]
 8016cc4:	f894 e008 	ldrb.w	lr, [r4, #8]
 8016cc8:	4418      	add	r0, r3
 8016cca:	1aed      	subs	r5, r5, r3
 8016ccc:	b2d6      	uxtb	r6, r2
 8016cce:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8016cd2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8016cd6:	0e12      	lsrs	r2, r2, #24
 8016cd8:	f1bc 0f00 	cmp.w	ip, #0
 8016cdc:	d109      	bne.n	8016cf2 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x46>
 8016cde:	f1be 0f00 	cmp.w	lr, #0
 8016ce2:	d109      	bne.n	8016cf8 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x4c>
 8016ce4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8016ce8:	e9cd 6700 	strd	r6, r7, [sp]
 8016cec:	4a0e      	ldr	r2, [pc, #56]	@ (8016d28 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x7c>)
 8016cee:	460b      	mov	r3, r1
 8016cf0:	e008      	b.n	8016d04 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 8016cf2:	f1be 0f00 	cmp.w	lr, #0
 8016cf6:	d00f      	beq.n	8016d18 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x6c>
 8016cf8:	e9cd 6700 	strd	r6, r7, [sp]
 8016cfc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8016d00:	4a0a      	ldr	r2, [pc, #40]	@ (8016d2c <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x80>)
 8016d02:	460b      	mov	r3, r1
 8016d04:	4629      	mov	r1, r5
 8016d06:	f003 fa0f 	bl	801a128 <snprintf>
 8016d0a:	4285      	cmp	r5, r0
 8016d0c:	dbd5      	blt.n	8016cba <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0xe>
 8016d0e:	88e3      	ldrh	r3, [r4, #6]
 8016d10:	4403      	add	r3, r0
 8016d12:	80e3      	strh	r3, [r4, #6]
 8016d14:	2001      	movs	r0, #1
 8016d16:	e7d1      	b.n	8016cbc <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x10>
 8016d18:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8016d1c:	e9cd 6700 	strd	r6, r7, [sp]
 8016d20:	4a03      	ldr	r2, [pc, #12]	@ (8016d30 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x84>)
 8016d22:	460b      	mov	r3, r1
 8016d24:	e7ee      	b.n	8016d04 <PropertiesBuilder::AddIpAddress(char const*, unsigned long, bool)+0x58>
 8016d26:	bf00      	nop
 8016d28:	0801b724 	stmdaeq	r1, {r2, r5, r8, r9, sl, ip, sp, pc}
 8016d2c:	0801b710 	stmdaeq	r1, {r4, r8, r9, sl, ip, sp, pc}
 8016d30:	0801b725 	stmdaeq	r1, {r0, r2, r5, r8, r9, sl, ip, sp, pc}

08016d34 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)>:
 8016d34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d36:	88c6      	ldrh	r6, [r0, #6]
 8016d38:	8885      	ldrh	r5, [r0, #4]
 8016d3a:	42ae      	cmp	r6, r5
 8016d3c:	b085      	sub	sp, #20
 8016d3e:	d302      	bcc.n	8016d46 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x12>
 8016d40:	2000      	movs	r0, #0
 8016d42:	b005      	add	sp, #20
 8016d44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016d46:	4604      	mov	r4, r0
 8016d48:	6800      	ldr	r0, [r0, #0]
 8016d4a:	1bad      	subs	r5, r5, r6
 8016d4c:	4430      	add	r0, r6
 8016d4e:	7a26      	ldrb	r6, [r4, #8]
 8016d50:	b19e      	cbz	r6, 8016d7a <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x46>
 8016d52:	4e0f      	ldr	r6, [pc, #60]	@ (8016d90 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8016d54:	4f0f      	ldr	r7, [pc, #60]	@ (8016d94 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 8016d56:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8016d5a:	2a00      	cmp	r2, #0
 8016d5c:	bfc8      	it	gt
 8016d5e:	463e      	movgt	r6, r7
 8016d60:	4a0d      	ldr	r2, [pc, #52]	@ (8016d98 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x64>)
 8016d62:	9600      	str	r6, [sp, #0]
 8016d64:	460b      	mov	r3, r1
 8016d66:	4629      	mov	r1, r5
 8016d68:	f003 f9de 	bl	801a128 <snprintf>
 8016d6c:	4285      	cmp	r5, r0
 8016d6e:	dbe7      	blt.n	8016d40 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xc>
 8016d70:	88e3      	ldrh	r3, [r4, #6]
 8016d72:	4403      	add	r3, r0
 8016d74:	80e3      	strh	r3, [r4, #6]
 8016d76:	2001      	movs	r0, #1
 8016d78:	e7e3      	b.n	8016d42 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0xe>
 8016d7a:	4e05      	ldr	r6, [pc, #20]	@ (8016d90 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x5c>)
 8016d7c:	4f05      	ldr	r7, [pc, #20]	@ (8016d94 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x60>)
 8016d7e:	2a00      	cmp	r2, #0
 8016d80:	bfc8      	it	gt
 8016d82:	463e      	movgt	r6, r7
 8016d84:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8016d88:	9600      	str	r6, [sp, #0]
 8016d8a:	4a04      	ldr	r2, [pc, #16]	@ (8016d9c <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x68>)
 8016d8c:	460b      	mov	r3, r1
 8016d8e:	e7ea      	b.n	8016d66 <PropertiesBuilder::AddUtcOffset(char const*, signed char, unsigned char)+0x32>
 8016d90:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 8016d94:	0801b735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, ip, sp, pc}
 8016d98:	0801b737 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp, pc}
 8016d9c:	0801b74b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, ip, sp, pc}

08016da0 <PropertiesBuilder::AddComment(char const*)>:
 8016da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016da2:	7a06      	ldrb	r6, [r0, #8]
 8016da4:	b98e      	cbnz	r6, 8016dca <PropertiesBuilder::AddComment(char const*)+0x2a>
 8016da6:	4604      	mov	r4, r0
 8016da8:	88c0      	ldrh	r0, [r0, #6]
 8016daa:	88a5      	ldrh	r5, [r4, #4]
 8016dac:	42a8      	cmp	r0, r5
 8016dae:	d20d      	bcs.n	8016dcc <PropertiesBuilder::AddComment(char const*)+0x2c>
 8016db0:	6827      	ldr	r7, [r4, #0]
 8016db2:	4a07      	ldr	r2, [pc, #28]	@ (8016dd0 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8016db4:	1a2d      	subs	r5, r5, r0
 8016db6:	460b      	mov	r3, r1
 8016db8:	4438      	add	r0, r7
 8016dba:	4629      	mov	r1, r5
 8016dbc:	f003 f9b4 	bl	801a128 <snprintf>
 8016dc0:	4285      	cmp	r5, r0
 8016dc2:	db03      	blt.n	8016dcc <PropertiesBuilder::AddComment(char const*)+0x2c>
 8016dc4:	88e3      	ldrh	r3, [r4, #6]
 8016dc6:	4418      	add	r0, r3
 8016dc8:	80e0      	strh	r0, [r4, #6]
 8016dca:	2601      	movs	r6, #1
 8016dcc:	4630      	mov	r0, r6
 8016dce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016dd0:	0801b75a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, ip, sp, pc}

08016dd4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8016dd4:	e9c0 1200 	strd	r1, r2, [r0]
 8016dd8:	4770      	bx	lr

08016dda <ReadConfigFile::~ReadConfigFile()>:
 8016dda:	4770      	bx	lr

08016ddc <ReadConfigFile::Read(char const*, unsigned int)>:
 8016ddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016de0:	b0a0      	sub	sp, #128	@ 0x80
 8016de2:	230a      	movs	r3, #10
 8016de4:	4607      	mov	r7, r0
 8016de6:	460d      	mov	r5, r1
 8016de8:	4614      	mov	r4, r2
 8016dea:	f88d 3000 	strb.w	r3, [sp]
 8016dee:	f04f 0800 	mov.w	r8, #0
 8016df2:	b334      	cbz	r4, 8016e42 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 8016df4:	466e      	mov	r6, sp
 8016df6:	462a      	mov	r2, r5
 8016df8:	4631      	mov	r1, r6
 8016dfa:	7810      	ldrb	r0, [r2, #0]
 8016dfc:	280d      	cmp	r0, #13
 8016dfe:	4613      	mov	r3, r2
 8016e00:	f102 0201 	add.w	r2, r2, #1
 8016e04:	d009      	beq.n	8016e1a <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8016e06:	280a      	cmp	r0, #10
 8016e08:	d007      	beq.n	8016e1a <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8016e0a:	f806 0b01 	strb.w	r0, [r6], #1
 8016e0e:	1a73      	subs	r3, r6, r1
 8016e10:	2b7f      	cmp	r3, #127	@ 0x7f
 8016e12:	dc16      	bgt.n	8016e42 <ReadConfigFile::Read(char const*, unsigned int)+0x66>
 8016e14:	3c01      	subs	r4, #1
 8016e16:	d1f0      	bne.n	8016dfa <ReadConfigFile::Read(char const*, unsigned int)+0x1e>
 8016e18:	4613      	mov	r3, r2
 8016e1a:	461d      	mov	r5, r3
 8016e1c:	b12c      	cbz	r4, 8016e2a <ReadConfigFile::Read(char const*, unsigned int)+0x4e>
 8016e1e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8016e22:	2a0d      	cmp	r2, #13
 8016e24:	d00b      	beq.n	8016e3e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8016e26:	2a0a      	cmp	r2, #10
 8016e28:	d009      	beq.n	8016e3e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8016e2a:	f89d 3000 	ldrb.w	r3, [sp]
 8016e2e:	2b2f      	cmp	r3, #47	@ 0x2f
 8016e30:	d9df      	bls.n	8016df2 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 8016e32:	e9d7 3000 	ldrd	r3, r0, [r7]
 8016e36:	f886 8000 	strb.w	r8, [r6]
 8016e3a:	4798      	blx	r3
 8016e3c:	e7d9      	b.n	8016df2 <ReadConfigFile::Read(char const*, unsigned int)+0x16>
 8016e3e:	3c01      	subs	r4, #1
 8016e40:	e7eb      	b.n	8016e1a <ReadConfigFile::Read(char const*, unsigned int)+0x3e>
 8016e42:	b020      	add	sp, #128	@ 0x80
 8016e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016e48 <Sscan::Char(char const*, char const*, char*, unsigned long&)>:
 8016e48:	b570      	push	{r4, r5, r6, lr}
 8016e4a:	4615      	mov	r5, r2
 8016e4c:	461c      	mov	r4, r3
 8016e4e:	f000 f8d5 	bl	8016ffc <Sscan::checkName(char const*, char const*)>
 8016e52:	b170      	cbz	r0, 8016e72 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2a>
 8016e54:	2100      	movs	r1, #0
 8016e56:	5c43      	ldrb	r3, [r0, r1]
 8016e58:	6826      	ldr	r6, [r4, #0]
 8016e5a:	b28a      	uxth	r2, r1
 8016e5c:	b11b      	cbz	r3, 8016e66 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x1e>
 8016e5e:	4296      	cmp	r6, r2
 8016e60:	d804      	bhi.n	8016e6c <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x24>
 8016e62:	2b0a      	cmp	r3, #10
 8016e64:	d107      	bne.n	8016e76 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x2e>
 8016e66:	6022      	str	r2, [r4, #0]
 8016e68:	2000      	movs	r0, #0
 8016e6a:	bd70      	pop	{r4, r5, r6, pc}
 8016e6c:	546b      	strb	r3, [r5, r1]
 8016e6e:	3101      	adds	r1, #1
 8016e70:	e7f1      	b.n	8016e56 <Sscan::Char(char const*, char const*, char*, unsigned long&)+0xe>
 8016e72:	2001      	movs	r0, #1
 8016e74:	e7f9      	b.n	8016e6a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>
 8016e76:	2002      	movs	r0, #2
 8016e78:	e7f7      	b.n	8016e6a <Sscan::Char(char const*, char const*, char*, unsigned long&)+0x22>

08016e7a <Sscan::IpAddress(char const*, char const*, unsigned long&)>:
 8016e7a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016e7c:	4615      	mov	r5, r2
 8016e7e:	f000 f8bd 	bl	8016ffc <Sscan::checkName(char const*, char const*)>
 8016e82:	bb60      	cbnz	r0, 8016ede <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x64>
 8016e84:	2001      	movs	r0, #1
 8016e86:	e028      	b.n	8016eda <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8016e88:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8016e8c:	2b09      	cmp	r3, #9
 8016e8e:	d823      	bhi.n	8016ed8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8016e90:	230a      	movs	r3, #10
 8016e92:	fb03 2101 	mla	r1, r3, r1, r2
 8016e96:	3930      	subs	r1, #48	@ 0x30
 8016e98:	4603      	mov	r3, r0
 8016e9a:	4618      	mov	r0, r3
 8016e9c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8016ea0:	2a2e      	cmp	r2, #46	@ 0x2e
 8016ea2:	d115      	bne.n	8016ed0 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x56>
 8016ea4:	29ff      	cmp	r1, #255	@ 0xff
 8016ea6:	d817      	bhi.n	8016ed8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8016ea8:	3401      	adds	r4, #1
 8016eaa:	2c03      	cmp	r4, #3
 8016eac:	f806 1b01 	strb.w	r1, [r6], #1
 8016eb0:	d117      	bne.n	8016ee2 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x68>
 8016eb2:	1d1a      	adds	r2, r3, #4
 8016eb4:	2400      	movs	r4, #0
 8016eb6:	260a      	movs	r6, #10
 8016eb8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8016ebc:	f011 00df 	ands.w	r0, r1, #223	@ 0xdf
 8016ec0:	d113      	bne.n	8016eea <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x70>
 8016ec2:	2cff      	cmp	r4, #255	@ 0xff
 8016ec4:	d808      	bhi.n	8016ed8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8016ec6:	f88d 4007 	strb.w	r4, [sp, #7]
 8016eca:	9b01      	ldr	r3, [sp, #4]
 8016ecc:	602b      	str	r3, [r5, #0]
 8016ece:	e004      	b.n	8016eda <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x60>
 8016ed0:	2a00      	cmp	r2, #0
 8016ed2:	d0e7      	beq.n	8016ea4 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x2a>
 8016ed4:	42b8      	cmp	r0, r7
 8016ed6:	d1d7      	bne.n	8016e88 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0xe>
 8016ed8:	2002      	movs	r0, #2
 8016eda:	b003      	add	sp, #12
 8016edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016ede:	ae01      	add	r6, sp, #4
 8016ee0:	2400      	movs	r4, #0
 8016ee2:	4603      	mov	r3, r0
 8016ee4:	1d07      	adds	r7, r0, #4
 8016ee6:	2100      	movs	r1, #0
 8016ee8:	e7d7      	b.n	8016e9a <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x20>
 8016eea:	4293      	cmp	r3, r2
 8016eec:	d0f4      	beq.n	8016ed8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8016eee:	3930      	subs	r1, #48	@ 0x30
 8016ef0:	2909      	cmp	r1, #9
 8016ef2:	d8f1      	bhi.n	8016ed8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x5e>
 8016ef4:	fb06 1404 	mla	r4, r6, r4, r1
 8016ef8:	e7de      	b.n	8016eb8 <Sscan::IpAddress(char const*, char const*, unsigned long&)+0x3e>

08016efa <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8016efa:	b538      	push	{r3, r4, r5, lr}
 8016efc:	4615      	mov	r5, r2
 8016efe:	f000 f87d 	bl	8016ffc <Sscan::checkName(char const*, char const*)>
 8016f02:	b190      	cbz	r0, 8016f2a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x30>
 8016f04:	4601      	mov	r1, r0
 8016f06:	2400      	movs	r4, #0
 8016f08:	780b      	ldrb	r3, [r1, #0]
 8016f0a:	3b30      	subs	r3, #48	@ 0x30
 8016f0c:	2b09      	cmp	r3, #9
 8016f0e:	d80e      	bhi.n	8016f2e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8016f10:	220a      	movs	r2, #10
 8016f12:	fb02 3404 	mla	r4, r2, r4, r3
 8016f16:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8016f1a:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8016f1e:	d1f3      	bne.n	8016f08 <Sscan::Uint16(char const*, char const*, unsigned short&)+0xe>
 8016f20:	f5b4 3f80 	cmp.w	r4, #65536	@ 0x10000
 8016f24:	d203      	bcs.n	8016f2e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8016f26:	802c      	strh	r4, [r5, #0]
 8016f28:	bd38      	pop	{r3, r4, r5, pc}
 8016f2a:	2001      	movs	r0, #1
 8016f2c:	e7fc      	b.n	8016f28 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>
 8016f2e:	2002      	movs	r0, #2
 8016f30:	e7fa      	b.n	8016f28 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x2e>

08016f32 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8016f32:	b538      	push	{r3, r4, r5, lr}
 8016f34:	4615      	mov	r5, r2
 8016f36:	f000 f861 	bl	8016ffc <Sscan::checkName(char const*, char const*)>
 8016f3a:	b188      	cbz	r0, 8016f60 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2e>
 8016f3c:	4601      	mov	r1, r0
 8016f3e:	2400      	movs	r4, #0
 8016f40:	780b      	ldrb	r3, [r1, #0]
 8016f42:	3b30      	subs	r3, #48	@ 0x30
 8016f44:	2b09      	cmp	r3, #9
 8016f46:	d80d      	bhi.n	8016f64 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8016f48:	220a      	movs	r2, #10
 8016f4a:	fb02 3404 	mla	r4, r2, r4, r3
 8016f4e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8016f52:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8016f56:	d1f3      	bne.n	8016f40 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8016f58:	2cff      	cmp	r4, #255	@ 0xff
 8016f5a:	d803      	bhi.n	8016f64 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8016f5c:	702c      	strb	r4, [r5, #0]
 8016f5e:	bd38      	pop	{r3, r4, r5, pc}
 8016f60:	2001      	movs	r0, #1
 8016f62:	e7fc      	b.n	8016f5e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>
 8016f64:	2002      	movs	r0, #2
 8016f66:	e7fa      	b.n	8016f5e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x2c>

08016f68 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)>:
 8016f68:	b570      	push	{r4, r5, r6, lr}
 8016f6a:	4615      	mov	r5, r2
 8016f6c:	461e      	mov	r6, r3
 8016f6e:	f000 f845 	bl	8016ffc <Sscan::checkName(char const*, char const*)>
 8016f72:	2800      	cmp	r0, #0
 8016f74:	d040      	beq.n	8016ff8 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x90>
 8016f76:	7803      	ldrb	r3, [r0, #0]
 8016f78:	2b2d      	cmp	r3, #45	@ 0x2d
 8016f7a:	4601      	mov	r1, r0
 8016f7c:	d107      	bne.n	8016f8e <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x26>
 8016f7e:	3101      	adds	r1, #1
 8016f80:	2201      	movs	r2, #1
 8016f82:	780b      	ldrb	r3, [r1, #0]
 8016f84:	f013 0fdf 	tst.w	r3, #223	@ 0xdf
 8016f88:	d106      	bne.n	8016f98 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x30>
 8016f8a:	2002      	movs	r0, #2
 8016f8c:	bd70      	pop	{r4, r5, r6, pc}
 8016f8e:	2b2b      	cmp	r3, #43	@ 0x2b
 8016f90:	bf08      	it	eq
 8016f92:	3101      	addeq	r1, #1
 8016f94:	2200      	movs	r2, #0
 8016f96:	e7f4      	b.n	8016f82 <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x1a>
 8016f98:	2300      	movs	r3, #0
 8016f9a:	702b      	strb	r3, [r5, #0]
 8016f9c:	780b      	ldrb	r3, [r1, #0]
 8016f9e:	f1a3 0030 	sub.w	r0, r3, #48	@ 0x30
 8016fa2:	2801      	cmp	r0, #1
 8016fa4:	d8f1      	bhi.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fa6:	2b31      	cmp	r3, #49	@ 0x31
 8016fa8:	bf14      	ite	ne
 8016faa:	2300      	movne	r3, #0
 8016fac:	230a      	moveq	r3, #10
 8016fae:	702b      	strb	r3, [r5, #0]
 8016fb0:	7848      	ldrb	r0, [r1, #1]
 8016fb2:	3830      	subs	r0, #48	@ 0x30
 8016fb4:	2809      	cmp	r0, #9
 8016fb6:	d8e8      	bhi.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fb8:	4403      	add	r3, r0
 8016fba:	702b      	strb	r3, [r5, #0]
 8016fbc:	788b      	ldrb	r3, [r1, #2]
 8016fbe:	2b3a      	cmp	r3, #58	@ 0x3a
 8016fc0:	d1e3      	bne.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fc2:	78cc      	ldrb	r4, [r1, #3]
 8016fc4:	3c30      	subs	r4, #48	@ 0x30
 8016fc6:	2c09      	cmp	r4, #9
 8016fc8:	d8df      	bhi.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fca:	790b      	ldrb	r3, [r1, #4]
 8016fcc:	3b30      	subs	r3, #48	@ 0x30
 8016fce:	2b09      	cmp	r3, #9
 8016fd0:	d8db      	bhi.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fd2:	7948      	ldrb	r0, [r1, #5]
 8016fd4:	f010 00df 	ands.w	r0, r0, #223	@ 0xdf
 8016fd8:	d1d7      	bne.n	8016f8a <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x22>
 8016fda:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8016fde:	0064      	lsls	r4, r4, #1
 8016fe0:	b2e4      	uxtb	r4, r4
 8016fe2:	7034      	strb	r4, [r6, #0]
 8016fe4:	790b      	ldrb	r3, [r1, #4]
 8016fe6:	3b30      	subs	r3, #48	@ 0x30
 8016fe8:	441c      	add	r4, r3
 8016fea:	7034      	strb	r4, [r6, #0]
 8016fec:	2a00      	cmp	r2, #0
 8016fee:	d0cd      	beq.n	8016f8c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8016ff0:	782b      	ldrb	r3, [r5, #0]
 8016ff2:	425b      	negs	r3, r3
 8016ff4:	702b      	strb	r3, [r5, #0]
 8016ff6:	e7c9      	b.n	8016f8c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>
 8016ff8:	2001      	movs	r0, #1
 8016ffa:	e7c7      	b.n	8016f8c <Sscan::UtcOffset(char const*, char const*, signed char&, unsigned char&)+0x24>

08016ffc <Sscan::checkName(char const*, char const*)>:
 8016ffc:	3901      	subs	r1, #1
 8016ffe:	4602      	mov	r2, r0
 8017000:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8017004:	b130      	cbz	r0, 8017014 <Sscan::checkName(char const*, char const*)+0x18>
 8017006:	f812 3b01 	ldrb.w	r3, [r2], #1
 801700a:	b10b      	cbz	r3, 8017010 <Sscan::checkName(char const*, char const*)+0x14>
 801700c:	4298      	cmp	r0, r3
 801700e:	d0f7      	beq.n	8017000 <Sscan::checkName(char const*, char const*)+0x4>
 8017010:	2000      	movs	r0, #0
 8017012:	4770      	bx	lr
 8017014:	7813      	ldrb	r3, [r2, #0]
 8017016:	2b3d      	cmp	r3, #61	@ 0x3d
 8017018:	d1fb      	bne.n	8017012 <Sscan::checkName(char const*, char const*)+0x16>
 801701a:	7853      	ldrb	r3, [r2, #1]
 801701c:	f013 00df 	ands.w	r0, r3, #223	@ 0xdf
 8017020:	d0f7      	beq.n	8017012 <Sscan::checkName(char const*, char const*)+0x16>
 8017022:	1c50      	adds	r0, r2, #1
 8017024:	4770      	bx	lr
	...

08017028 <Display::PrintInfo() [clone .isra.0]>:
 8017028:	b910      	cbnz	r0, 8017030 <Display::PrintInfo() [clone .isra.0]+0x8>
 801702a:	4803      	ldr	r0, [pc, #12]	@ (8017038 <Display::PrintInfo() [clone .isra.0]+0x10>)
 801702c:	f003 b8a9 	b.w	801a182 <puts>
 8017030:	6803      	ldr	r3, [r0, #0]
 8017032:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017034:	4718      	bx	r3
 8017036:	bf00      	nop
 8017038:	0801b762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, ip, sp, pc}

0801703c <display::timeout::gpio_init()>:
 801703c:	b510      	push	{r4, lr}
 801703e:	4c0a      	ldr	r4, [pc, #40]	@ (8017068 <display::timeout::gpio_init()+0x2c>)
 8017040:	f640 4002 	movw	r0, #3074	@ 0xc02
 8017044:	f001 fabc 	bl	80185c0 <rcu_periph_clock_enable>
 8017048:	4620      	mov	r0, r4
 801704a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 801704e:	2201      	movs	r2, #1
 8017050:	2100      	movs	r1, #0
 8017052:	f001 fa2f 	bl	80184b4 <gpio_mode_set>
 8017056:	4620      	mov	r0, r4
 8017058:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 801705c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017060:	2201      	movs	r2, #1
 8017062:	2100      	movs	r1, #0
 8017064:	f001 ba26 	b.w	80184b4 <gpio_mode_set>
 8017068:	40020800 	andmi	r0, r2, r0, lsl #16

0801706c <Display::Detect(display::Type)>:
 801706c:	2902      	cmp	r1, #2
 801706e:	b538      	push	{r3, r4, r5, lr}
 8017070:	4604      	mov	r4, r0
 8017072:	d014      	beq.n	801709e <Display::Detect(display::Type)+0x32>
 8017074:	2904      	cmp	r1, #4
 8017076:	d01b      	beq.n	80170b0 <Display::Detect(display::Type)+0x44>
 8017078:	69a0      	ldr	r0, [r4, #24]
 801707a:	b168      	cbz	r0, 8017098 <Display::Detect(display::Type)+0x2c>
 801707c:	6803      	ldr	r3, [r0, #0]
 801707e:	689b      	ldr	r3, [r3, #8]
 8017080:	4798      	blx	r3
 8017082:	4603      	mov	r3, r0
 8017084:	69a0      	ldr	r0, [r4, #24]
 8017086:	b9ab      	cbnz	r3, 80170b4 <Display::Detect(display::Type)+0x48>
 8017088:	b110      	cbz	r0, 8017090 <Display::Detect(display::Type)+0x24>
 801708a:	6803      	ldr	r3, [r0, #0]
 801708c:	685b      	ldr	r3, [r3, #4]
 801708e:	4798      	blx	r3
 8017090:	2300      	movs	r3, #0
 8017092:	61a3      	str	r3, [r4, #24]
 8017094:	2304      	movs	r3, #4
 8017096:	6023      	str	r3, [r4, #0]
 8017098:	2300      	movs	r3, #0
 801709a:	6123      	str	r3, [r4, #16]
 801709c:	e010      	b.n	80170c0 <Display::Detect(display::Type)+0x54>
 801709e:	2020      	movs	r0, #32
 80170a0:	f003 fa70 	bl	801a584 <operator new(unsigned int)>
 80170a4:	2100      	movs	r1, #0
 80170a6:	4605      	mov	r5, r0
 80170a8:	f000 f8bc 	bl	8017224 <Ssd1306::Ssd1306(TOledPanel)>
 80170ac:	61a5      	str	r5, [r4, #24]
 80170ae:	e7e3      	b.n	8017078 <Display::Detect(display::Type)+0xc>
 80170b0:	6001      	str	r1, [r0, #0]
 80170b2:	e7e1      	b.n	8017078 <Display::Detect(display::Type)+0xc>
 80170b4:	6803      	ldr	r3, [r0, #0]
 80170b6:	68db      	ldr	r3, [r3, #12]
 80170b8:	4798      	blx	r3
 80170ba:	69a3      	ldr	r3, [r4, #24]
 80170bc:	2b00      	cmp	r3, #0
 80170be:	d0eb      	beq.n	8017098 <Display::Detect(display::Type)+0x2c>
 80170c0:	bd38      	pop	{r3, r4, r5, pc}
	...

080170c4 <Display::Display()>:
 80170c4:	2304      	movs	r3, #4
 80170c6:	b510      	push	{r4, lr}
 80170c8:	6003      	str	r3, [r0, #0]
 80170ca:	4b0e      	ldr	r3, [pc, #56]	@ (8017104 <Display::Display()+0x40>)
 80170cc:	4a0e      	ldr	r2, [pc, #56]	@ (8017108 <Display::Display()+0x44>)
 80170ce:	681b      	ldr	r3, [r3, #0]
 80170d0:	6043      	str	r3, [r0, #4]
 80170d2:	2321      	movs	r3, #33	@ 0x21
 80170d4:	7203      	strb	r3, [r0, #8]
 80170d6:	4b0d      	ldr	r3, [pc, #52]	@ (801710c <Display::Display()+0x48>)
 80170d8:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80170dc:	237f      	movs	r3, #127	@ 0x7f
 80170de:	8283      	strh	r3, [r0, #20]
 80170e0:	2300      	movs	r3, #0
 80170e2:	4604      	mov	r4, r0
 80170e4:	7583      	strb	r3, [r0, #22]
 80170e6:	6183      	str	r3, [r0, #24]
 80170e8:	4b09      	ldr	r3, [pc, #36]	@ (8017110 <Display::Display()+0x4c>)
 80170ea:	2102      	movs	r1, #2
 80170ec:	6018      	str	r0, [r3, #0]
 80170ee:	f7ff ffbd 	bl	801706c <Display::Detect(display::Type)>
 80170f2:	69a3      	ldr	r3, [r4, #24]
 80170f4:	b10b      	cbz	r3, 80170fa <Display::Display()+0x36>
 80170f6:	f7ff ffa1 	bl	801703c <display::timeout::gpio_init()>
 80170fa:	69a0      	ldr	r0, [r4, #24]
 80170fc:	f7ff ff94 	bl	8017028 <Display::PrintInfo() [clone .isra.0]>
 8017100:	4620      	mov	r0, r4
 8017102:	bd10      	pop	{r4, pc}
 8017104:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8017108:	00061a80 	andeq	r1, r6, r0, lsl #21
 801710c:	000493e0 	andeq	r9, r4, r0, ror #7
 8017110:	20002a18 	andcs	r2, r0, r8, lsl sl

08017114 <Ssd1306::~Ssd1306()>:
 8017114:	4770      	bx	lr

08017116 <Ssd1306::SetCursor(unsigned long)>:
 8017116:	4770      	bx	lr

08017118 <Ssd1306::PrintInfo()>:
 8017118:	b410      	push	{r4}
 801711a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801711e:	7e44      	ldrb	r4, [r0, #25]
 8017120:	4904      	ldr	r1, [pc, #16]	@ (8017134 <Ssd1306::PrintInfo()+0x1c>)
 8017122:	4805      	ldr	r0, [pc, #20]	@ (8017138 <Ssd1306::PrintInfo()+0x20>)
 8017124:	2c00      	cmp	r4, #0
 8017126:	bf18      	it	ne
 8017128:	4601      	movne	r1, r0
 801712a:	4804      	ldr	r0, [pc, #16]	@ (801713c <Ssd1306::PrintInfo()+0x24>)
 801712c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017130:	f002 bfd2 	b.w	801a0d8 <printf>
 8017134:	0801b77a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, sp, pc}
 8017138:	0801b773 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, ip, sp, pc}
 801713c:	0801b782 	stmdaeq	r1, {r1, r7, r8, r9, sl, ip, sp, pc}

08017140 <Ssd1306::~Ssd1306()>:
 8017140:	b510      	push	{r4, lr}
 8017142:	2120      	movs	r1, #32
 8017144:	4604      	mov	r4, r0
 8017146:	f003 fa1b 	bl	801a580 <operator delete(void*, unsigned int)>
 801714a:	4620      	mov	r0, r4
 801714c:	bd10      	pop	{r4, pc}

0801714e <HAL_I2C::Setup()>:
 801714e:	b510      	push	{r4, lr}
 8017150:	4604      	mov	r4, r0
 8017152:	7800      	ldrb	r0, [r0, #0]
 8017154:	f002 f83a 	bl	80191cc <gd32_i2c_set_address>
 8017158:	6860      	ldr	r0, [r4, #4]
 801715a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801715e:	f002 b82d 	b.w	80191bc <gd32_i2c_set_baudrate>
	...

08017164 <Ssd1306::PutChar(int)>:
 8017164:	b510      	push	{r4, lr}
 8017166:	f1a1 0420 	sub.w	r4, r1, #32
 801716a:	2c5f      	cmp	r4, #95	@ 0x5f
 801716c:	f100 0010 	add.w	r0, r0, #16
 8017170:	bf88      	it	hi
 8017172:	2400      	movhi	r4, #0
 8017174:	f7ff ffeb 	bl	801714e <HAL_I2C::Setup()>
 8017178:	4804      	ldr	r0, [pc, #16]	@ (801718c <Ssd1306::PutChar(int)+0x28>)
 801717a:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 801717e:	4420      	add	r0, r4
 8017180:	2107      	movs	r1, #7
 8017182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017186:	f002 b827 	b.w	80191d8 <gd32_i2c_write>
 801718a:	bf00      	nop
 801718c:	0801eef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, sp, lr, pc}

08017190 <Ssd1306::PutString(char const*)>:
 8017190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017192:	4604      	mov	r4, r0
 8017194:	460e      	mov	r6, r1
 8017196:	460f      	mov	r7, r1
 8017198:	463d      	mov	r5, r7
 801719a:	f817 1b01 	ldrb.w	r1, [r7], #1
 801719e:	b939      	cbnz	r1, 80171b0 <Ssd1306::PutString(char const*)+0x20>
 80171a0:	7b23      	ldrb	r3, [r4, #12]
 80171a2:	b123      	cbz	r3, 80171ae <Ssd1306::PutString(char const*)+0x1e>
 80171a4:	7321      	strb	r1, [r4, #12]
 80171a6:	1bad      	subs	r5, r5, r6
 80171a8:	6863      	ldr	r3, [r4, #4]
 80171aa:	42ab      	cmp	r3, r5
 80171ac:	d804      	bhi.n	80171b8 <Ssd1306::PutString(char const*)+0x28>
 80171ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80171b0:	4620      	mov	r0, r4
 80171b2:	f7ff ffd7 	bl	8017164 <Ssd1306::PutChar(int)>
 80171b6:	e7ef      	b.n	8017198 <Ssd1306::PutString(char const*)+0x8>
 80171b8:	2120      	movs	r1, #32
 80171ba:	4620      	mov	r0, r4
 80171bc:	f7ff ffd2 	bl	8017164 <Ssd1306::PutChar(int)>
 80171c0:	3501      	adds	r5, #1
 80171c2:	e7f1      	b.n	80171a8 <Ssd1306::PutString(char const*)+0x18>

080171c4 <Ssd1306::Text(char const*, unsigned long)>:
 80171c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80171c6:	6843      	ldr	r3, [r0, #4]
 80171c8:	429a      	cmp	r2, r3
 80171ca:	bf28      	it	cs
 80171cc:	461a      	movcs	r2, r3
 80171ce:	4604      	mov	r4, r0
 80171d0:	4615      	mov	r5, r2
 80171d2:	460e      	mov	r6, r1
 80171d4:	188f      	adds	r7, r1, r2
 80171d6:	42be      	cmp	r6, r7
 80171d8:	d107      	bne.n	80171ea <Ssd1306::Text(char const*, unsigned long)+0x26>
 80171da:	7b23      	ldrb	r3, [r4, #12]
 80171dc:	b123      	cbz	r3, 80171e8 <Ssd1306::Text(char const*, unsigned long)+0x24>
 80171de:	2300      	movs	r3, #0
 80171e0:	7323      	strb	r3, [r4, #12]
 80171e2:	6863      	ldr	r3, [r4, #4]
 80171e4:	42ab      	cmp	r3, r5
 80171e6:	d806      	bhi.n	80171f6 <Ssd1306::Text(char const*, unsigned long)+0x32>
 80171e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80171ea:	f816 1b01 	ldrb.w	r1, [r6], #1
 80171ee:	4620      	mov	r0, r4
 80171f0:	f7ff ffb8 	bl	8017164 <Ssd1306::PutChar(int)>
 80171f4:	e7ef      	b.n	80171d6 <Ssd1306::Text(char const*, unsigned long)+0x12>
 80171f6:	2120      	movs	r1, #32
 80171f8:	4620      	mov	r0, r4
 80171fa:	f7ff ffb3 	bl	8017164 <Ssd1306::PutChar(int)>
 80171fe:	3501      	adds	r5, #1
 8017200:	e7ef      	b.n	80171e2 <Ssd1306::Text(char const*, unsigned long)+0x1e>

08017202 <Ssd1306::InitMembers()>:
 8017202:	2315      	movs	r3, #21
 8017204:	6043      	str	r3, [r0, #4]
 8017206:	7e03      	ldrb	r3, [r0, #24]
 8017208:	b12b      	cbz	r3, 8017216 <Ssd1306::InitMembers()+0x14>
 801720a:	3b01      	subs	r3, #1
 801720c:	2b01      	cmp	r3, #1
 801720e:	d807      	bhi.n	8017220 <Ssd1306::InitMembers()+0x1e>
 8017210:	2304      	movs	r3, #4
 8017212:	2204      	movs	r2, #4
 8017214:	e001      	b.n	801721a <Ssd1306::InitMembers()+0x18>
 8017216:	2308      	movs	r3, #8
 8017218:	461a      	mov	r2, r3
 801721a:	6083      	str	r3, [r0, #8]
 801721c:	61c2      	str	r2, [r0, #28]
 801721e:	4770      	bx	lr
 8017220:	2308      	movs	r3, #8
 8017222:	e7f6      	b.n	8017212 <Ssd1306::InitMembers()+0x10>

08017224 <Ssd1306::Ssd1306(TOledPanel)>:
 8017224:	b510      	push	{r4, lr}
 8017226:	4c07      	ldr	r4, [pc, #28]	@ (8017244 <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8017228:	6004      	str	r4, [r0, #0]
 801722a:	2200      	movs	r2, #0
 801722c:	243c      	movs	r4, #60	@ 0x3c
 801722e:	7302      	strb	r2, [r0, #12]
 8017230:	7404      	strb	r4, [r0, #16]
 8017232:	7642      	strb	r2, [r0, #25]
 8017234:	4c04      	ldr	r4, [pc, #16]	@ (8017248 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8017236:	4a05      	ldr	r2, [pc, #20]	@ (801724c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8017238:	6144      	str	r4, [r0, #20]
 801723a:	7601      	strb	r1, [r0, #24]
 801723c:	6010      	str	r0, [r2, #0]
 801723e:	f7ff ffe0 	bl	8017202 <Ssd1306::InitMembers()>
 8017242:	bd10      	pop	{r4, pc}
 8017244:	0801ee8c 	stmdaeq	r1, {r2, r3, r7, r9, sl, fp, sp, lr, pc}
 8017248:	00061a80 	andeq	r1, r6, r0, lsl #21
 801724c:	20002a1c 	andcs	r2, r0, ip, lsl sl

08017250 <Ssd1306::SendCommand(unsigned char)>:
 8017250:	b507      	push	{r0, r1, r2, lr}
 8017252:	2300      	movs	r3, #0
 8017254:	3010      	adds	r0, #16
 8017256:	f88d 3004 	strb.w	r3, [sp, #4]
 801725a:	f88d 1005 	strb.w	r1, [sp, #5]
 801725e:	f7ff ff76 	bl	801714e <HAL_I2C::Setup()>
 8017262:	2102      	movs	r1, #2
 8017264:	a801      	add	r0, sp, #4
 8017266:	f001 ffb7 	bl	80191d8 <gd32_i2c_write>
 801726a:	b003      	add	sp, #12
 801726c:	f85d fb04 	ldr.w	pc, [sp], #4

08017270 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 8017270:	2914      	cmp	r1, #20
 8017272:	b570      	push	{r4, r5, r6, lr}
 8017274:	4605      	mov	r5, r0
 8017276:	4616      	mov	r6, r2
 8017278:	d81d      	bhi.n	80172b6 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 801727a:	6883      	ldr	r3, [r0, #8]
 801727c:	4293      	cmp	r3, r2
 801727e:	d91a      	bls.n	80172b6 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8017280:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017284:	7e43      	ldrb	r3, [r0, #25]
 8017286:	004c      	lsls	r4, r1, #1
 8017288:	b2e4      	uxtb	r4, r4
 801728a:	b10b      	cbz	r3, 8017290 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 801728c:	3404      	adds	r4, #4
 801728e:	b2e4      	uxtb	r4, r4
 8017290:	f004 010e 	and.w	r1, r4, #14
 8017294:	4628      	mov	r0, r5
 8017296:	f7ff ffdb 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 801729a:	0921      	lsrs	r1, r4, #4
 801729c:	4628      	mov	r0, r5
 801729e:	f041 0110 	orr.w	r1, r1, #16
 80172a2:	f7ff ffd5 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 80172a6:	f066 014f 	orn	r1, r6, #79	@ 0x4f
 80172aa:	4628      	mov	r0, r5
 80172ac:	b2c9      	uxtb	r1, r1
 80172ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80172b2:	f7ff bfcd 	b.w	8017250 <Ssd1306::SendCommand(unsigned char)>
 80172b6:	bd70      	pop	{r4, r5, r6, pc}

080172b8 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 80172b8:	b570      	push	{r4, r5, r6, lr}
 80172ba:	461e      	mov	r6, r3
 80172bc:	6883      	ldr	r3, [r0, #8]
 80172be:	428b      	cmp	r3, r1
 80172c0:	4604      	mov	r4, r0
 80172c2:	4615      	mov	r5, r2
 80172c4:	d30b      	bcc.n	80172de <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 80172c6:	3901      	subs	r1, #1
 80172c8:	b2ca      	uxtb	r2, r1
 80172ca:	2100      	movs	r1, #0
 80172cc:	f7ff ffd0 	bl	8017270 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 80172d0:	4632      	mov	r2, r6
 80172d2:	4629      	mov	r1, r5
 80172d4:	4620      	mov	r0, r4
 80172d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80172da:	f7ff bf73 	b.w	80171c4 <Ssd1306::Text(char const*, unsigned long)>
 80172de:	bd70      	pop	{r4, r5, r6, pc}

080172e0 <Ssd1306::ClearLine(unsigned long)>:
 80172e0:	b538      	push	{r3, r4, r5, lr}
 80172e2:	6883      	ldr	r3, [r0, #8]
 80172e4:	428b      	cmp	r3, r1
 80172e6:	4605      	mov	r5, r0
 80172e8:	d314      	bcc.n	8017314 <Ssd1306::ClearLine(unsigned long)+0x34>
 80172ea:	3901      	subs	r1, #1
 80172ec:	b2cc      	uxtb	r4, r1
 80172ee:	4622      	mov	r2, r4
 80172f0:	2100      	movs	r1, #0
 80172f2:	f7ff ffbd 	bl	8017270 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 80172f6:	f105 0010 	add.w	r0, r5, #16
 80172fa:	f7ff ff28 	bl	801714e <HAL_I2C::Setup()>
 80172fe:	2181      	movs	r1, #129	@ 0x81
 8017300:	4805      	ldr	r0, [pc, #20]	@ (8017318 <Ssd1306::ClearLine(unsigned long)+0x38>)
 8017302:	f001 ff69 	bl	80191d8 <gd32_i2c_write>
 8017306:	4622      	mov	r2, r4
 8017308:	4628      	mov	r0, r5
 801730a:	2100      	movs	r1, #0
 801730c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8017310:	f7ff bfae 	b.w	8017270 <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8017314:	bd38      	pop	{r3, r4, r5, pc}
 8017316:	bf00      	nop
 8017318:	20002a20 	andcs	r2, r0, r0, lsr #20

0801731c <Ssd1306::SetSleep(bool)>:
 801731c:	b111      	cbz	r1, 8017324 <Ssd1306::SetSleep(bool)+0x8>
 801731e:	21ae      	movs	r1, #174	@ 0xae
 8017320:	f7ff bf96 	b.w	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017324:	21af      	movs	r1, #175	@ 0xaf
 8017326:	e7fb      	b.n	8017320 <Ssd1306::SetSleep(bool)+0x4>

08017328 <Ssd1306::SetContrast(unsigned char)>:
 8017328:	b538      	push	{r3, r4, r5, lr}
 801732a:	4604      	mov	r4, r0
 801732c:	460d      	mov	r5, r1
 801732e:	2181      	movs	r1, #129	@ 0x81
 8017330:	f7ff ff8e 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017334:	4629      	mov	r1, r5
 8017336:	4620      	mov	r0, r4
 8017338:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801733c:	f7ff bf88 	b.w	8017250 <Ssd1306::SendCommand(unsigned char)>

08017340 <Ssd1306::SetFlipVertically(bool)>:
 8017340:	b510      	push	{r4, lr}
 8017342:	4604      	mov	r4, r0
 8017344:	b141      	cbz	r1, 8017358 <Ssd1306::SetFlipVertically(bool)+0x18>
 8017346:	21a0      	movs	r1, #160	@ 0xa0
 8017348:	f7ff ff82 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 801734c:	21c0      	movs	r1, #192	@ 0xc0
 801734e:	4620      	mov	r0, r4
 8017350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017354:	f7ff bf7c 	b.w	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017358:	21a1      	movs	r1, #161	@ 0xa1
 801735a:	f7ff ff79 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 801735e:	21c8      	movs	r1, #200	@ 0xc8
 8017360:	e7f5      	b.n	801734e <Ssd1306::SetFlipVertically(bool)+0xe>
	...

08017364 <Ssd1306::CheckSH1106()>:
 8017364:	b530      	push	{r4, r5, lr}
 8017366:	2100      	movs	r1, #0
 8017368:	b087      	sub	sp, #28
 801736a:	4604      	mov	r4, r0
 801736c:	f7ff ff70 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017370:	2190      	movs	r1, #144	@ 0x90
 8017372:	4620      	mov	r0, r4
 8017374:	f7ff ff6c 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017378:	21b0      	movs	r1, #176	@ 0xb0
 801737a:	4620      	mov	r0, r4
 801737c:	f7ff ff68 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017380:	4b21      	ldr	r3, [pc, #132]	@ (8017408 <Ssd1306::CheckSH1106()+0xa4>)
 8017382:	f104 0510 	add.w	r5, r4, #16
 8017386:	6818      	ldr	r0, [r3, #0]
 8017388:	9002      	str	r0, [sp, #8]
 801738a:	791b      	ldrb	r3, [r3, #4]
 801738c:	f88d 300c 	strb.w	r3, [sp, #12]
 8017390:	4628      	mov	r0, r5
 8017392:	f7ff fedc 	bl	801714e <HAL_I2C::Setup()>
 8017396:	2105      	movs	r1, #5
 8017398:	a802      	add	r0, sp, #8
 801739a:	f001 ff1d 	bl	80191d8 <gd32_i2c_write>
 801739e:	2100      	movs	r1, #0
 80173a0:	4620      	mov	r0, r4
 80173a2:	f7ff ff55 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 80173a6:	2190      	movs	r1, #144	@ 0x90
 80173a8:	4620      	mov	r0, r4
 80173aa:	f7ff ff51 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 80173ae:	21b0      	movs	r1, #176	@ 0xb0
 80173b0:	4620      	mov	r0, r4
 80173b2:	f7ff ff4d 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 80173b6:	2300      	movs	r3, #0
 80173b8:	4628      	mov	r0, r5
 80173ba:	9304      	str	r3, [sp, #16]
 80173bc:	f88d 3014 	strb.w	r3, [sp, #20]
 80173c0:	f7ff fec5 	bl	801714e <HAL_I2C::Setup()>
 80173c4:	2340      	movs	r3, #64	@ 0x40
 80173c6:	2101      	movs	r1, #1
 80173c8:	a801      	add	r0, sp, #4
 80173ca:	f88d 3004 	strb.w	r3, [sp, #4]
 80173ce:	f001 ff03 	bl	80191d8 <gd32_i2c_write>
 80173d2:	4628      	mov	r0, r5
 80173d4:	f7ff febb 	bl	801714e <HAL_I2C::Setup()>
 80173d8:	2105      	movs	r1, #5
 80173da:	a804      	add	r0, sp, #16
 80173dc:	f001 ff62 	bl	80192a4 <gd32_i2c_read>
 80173e0:	a902      	add	r1, sp, #8
 80173e2:	aa04      	add	r2, sp, #16
 80173e4:	2003      	movs	r0, #3
 80173e6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80173ea:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80173ee:	42ab      	cmp	r3, r5
 80173f0:	d006      	beq.n	8017400 <Ssd1306::CheckSH1106()+0x9c>
 80173f2:	1b5b      	subs	r3, r3, r5
 80173f4:	fab3 f383 	clz	r3, r3
 80173f8:	095b      	lsrs	r3, r3, #5
 80173fa:	7663      	strb	r3, [r4, #25]
 80173fc:	b007      	add	sp, #28
 80173fe:	bd30      	pop	{r4, r5, pc}
 8017400:	3801      	subs	r0, #1
 8017402:	d2f0      	bcs.n	80173e6 <Ssd1306::CheckSH1106()+0x82>
 8017404:	2300      	movs	r3, #0
 8017406:	e7f5      	b.n	80173f4 <Ssd1306::CheckSH1106()+0x90>
 8017408:	0801b78e 	stmdaeq	r1, {r1, r2, r3, r7, r8, r9, sl, ip, sp, pc}

0801740c <Ssd1306::Cls()>:
 801740c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017410:	7e46      	ldrb	r6, [r0, #25]
 8017412:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 8017474 <Ssd1306::Cls()+0x68>
 8017416:	00b6      	lsls	r6, r6, #2
 8017418:	b2f7      	uxtb	r7, r6
 801741a:	4604      	mov	r4, r0
 801741c:	2500      	movs	r5, #0
 801741e:	f047 0810 	orr.w	r8, r7, #16
 8017422:	69e3      	ldr	r3, [r4, #28]
 8017424:	42ab      	cmp	r3, r5
 8017426:	4639      	mov	r1, r7
 8017428:	4620      	mov	r0, r4
 801742a:	d80b      	bhi.n	8017444 <Ssd1306::Cls()+0x38>
 801742c:	f7ff ff10 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017430:	4641      	mov	r1, r8
 8017432:	4620      	mov	r0, r4
 8017434:	f7ff ff0c 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017438:	4620      	mov	r0, r4
 801743a:	21b0      	movs	r1, #176	@ 0xb0
 801743c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017440:	f7ff bf06 	b.w	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017444:	f7ff ff04 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017448:	4641      	mov	r1, r8
 801744a:	4620      	mov	r0, r4
 801744c:	f7ff ff00 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017450:	f065 014f 	orn	r1, r5, #79	@ 0x4f
 8017454:	b2c9      	uxtb	r1, r1
 8017456:	4620      	mov	r0, r4
 8017458:	f7ff fefa 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 801745c:	f104 0010 	add.w	r0, r4, #16
 8017460:	f7ff fe75 	bl	801714e <HAL_I2C::Setup()>
 8017464:	f106 0181 	add.w	r1, r6, #129	@ 0x81
 8017468:	4648      	mov	r0, r9
 801746a:	f001 feb5 	bl	80191d8 <gd32_i2c_write>
 801746e:	3501      	adds	r5, #1
 8017470:	e7d7      	b.n	8017422 <Ssd1306::Cls()+0x16>
 8017472:	bf00      	nop
 8017474:	20002a20 	andcs	r2, r0, r0, lsr #20

08017478 <Ssd1306::Start()>:
 8017478:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801747a:	7c04      	ldrb	r4, [r0, #16]
 801747c:	6946      	ldr	r6, [r0, #20]
 801747e:	4605      	mov	r5, r0
 8017480:	4620      	mov	r0, r4
 8017482:	f001 fea3 	bl	80191cc <gd32_i2c_set_address>
 8017486:	4630      	mov	r0, r6
 8017488:	f001 fe98 	bl	80191bc <gd32_i2c_set_baudrate>
 801748c:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8017490:	2b07      	cmp	r3, #7
 8017492:	d902      	bls.n	801749a <Ssd1306::Start()+0x22>
 8017494:	3c50      	subs	r4, #80	@ 0x50
 8017496:	2c0f      	cmp	r4, #15
 8017498:	d80f      	bhi.n	80174ba <Ssd1306::Start()+0x42>
 801749a:	2101      	movs	r1, #1
 801749c:	f10d 0007 	add.w	r0, sp, #7
 80174a0:	f001 ff00 	bl	80192a4 <gd32_i2c_read>
 80174a4:	fab0 f480 	clz	r4, r0
 80174a8:	0964      	lsrs	r4, r4, #5
 80174aa:	b34c      	cbz	r4, 8017500 <Ssd1306::Start()+0x88>
 80174ac:	7e2e      	ldrb	r6, [r5, #24]
 80174ae:	b14e      	cbz	r6, 80174c4 <Ssd1306::Start()+0x4c>
 80174b0:	3e01      	subs	r6, #1
 80174b2:	2e01      	cmp	r6, #1
 80174b4:	d927      	bls.n	8017506 <Ssd1306::Start()+0x8e>
 80174b6:	2400      	movs	r4, #0
 80174b8:	e022      	b.n	8017500 <Ssd1306::Start()+0x88>
 80174ba:	2100      	movs	r1, #0
 80174bc:	4608      	mov	r0, r1
 80174be:	f001 fe8b 	bl	80191d8 <gd32_i2c_write>
 80174c2:	e7ef      	b.n	80174a4 <Ssd1306::Start()+0x2c>
 80174c4:	4f15      	ldr	r7, [pc, #84]	@ (801751c <Ssd1306::Start()+0xa4>)
 80174c6:	f817 1b01 	ldrb.w	r1, [r7], #1
 80174ca:	4628      	mov	r0, r5
 80174cc:	3601      	adds	r6, #1
 80174ce:	f7ff febf 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 80174d2:	2e18      	cmp	r6, #24
 80174d4:	d1f7      	bne.n	80174c6 <Ssd1306::Start()+0x4e>
 80174d6:	4a12      	ldr	r2, [pc, #72]	@ (8017520 <Ssd1306::Start()+0xa8>)
 80174d8:	2300      	movs	r3, #0
 80174da:	4611      	mov	r1, r2
 80174dc:	4618      	mov	r0, r3
 80174de:	3301      	adds	r3, #1
 80174e0:	2b86      	cmp	r3, #134	@ 0x86
 80174e2:	f802 0b01 	strb.w	r0, [r2], #1
 80174e6:	d1fa      	bne.n	80174de <Ssd1306::Start()+0x66>
 80174e8:	2340      	movs	r3, #64	@ 0x40
 80174ea:	4628      	mov	r0, r5
 80174ec:	700b      	strb	r3, [r1, #0]
 80174ee:	f7ff ff39 	bl	8017364 <Ssd1306::CheckSH1106()>
 80174f2:	4628      	mov	r0, r5
 80174f4:	f7ff ff8a 	bl	801740c <Ssd1306::Cls()>
 80174f8:	21af      	movs	r1, #175	@ 0xaf
 80174fa:	4628      	mov	r0, r5
 80174fc:	f7ff fea8 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017500:	4620      	mov	r0, r4
 8017502:	b003      	add	sp, #12
 8017504:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017506:	4f07      	ldr	r7, [pc, #28]	@ (8017524 <Ssd1306::Start()+0xac>)
 8017508:	2600      	movs	r6, #0
 801750a:	f817 1b01 	ldrb.w	r1, [r7], #1
 801750e:	4628      	mov	r0, r5
 8017510:	3601      	adds	r6, #1
 8017512:	f7ff fe9d 	bl	8017250 <Ssd1306::SendCommand(unsigned char)>
 8017516:	2e18      	cmp	r6, #24
 8017518:	d1f7      	bne.n	801750a <Ssd1306::Start()+0x92>
 801751a:	e7dc      	b.n	80174d6 <Ssd1306::Start()+0x5e>
 801751c:	0801eedc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, sl, fp, sp, lr, pc}
 8017520:	20002a20 	andcs	r2, r0, r0, lsr #20
 8017524:	0801eec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, sp, lr, pc}

08017528 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8017528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801752c:	4d15      	ldr	r5, [pc, #84]	@ (8017584 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801752e:	461e      	mov	r6, r3
 8017530:	4b15      	ldr	r3, [pc, #84]	@ (8017588 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8017532:	b086      	sub	sp, #24
 8017534:	6018      	str	r0, [r3, #0]
 8017536:	4604      	mov	r4, r0
 8017538:	4617      	mov	r7, r2
 801753a:	f105 0803 	add.w	r8, r5, #3
 801753e:	2203      	movs	r2, #3
 8017540:	4628      	mov	r0, r5
 8017542:	f002 face 	bl	8019ae2 <memmove>
 8017546:	4639      	mov	r1, r7
 8017548:	220b      	movs	r2, #11
 801754a:	4640      	mov	r0, r8
 801754c:	f002 fac9 	bl	8019ae2 <memmove>
 8017550:	f105 030e 	add.w	r3, r5, #14
 8017554:	4631      	mov	r1, r6
 8017556:	2208      	movs	r2, #8
 8017558:	4618      	mov	r0, r3
 801755a:	f002 fac2 	bl	8019ae2 <memmove>
 801755e:	2308      	movs	r3, #8
 8017560:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8017564:	230b      	movs	r3, #11
 8017566:	9302      	str	r3, [sp, #8]
 8017568:	4b08      	ldr	r3, [pc, #32]	@ (801758c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 801756a:	9005      	str	r0, [sp, #20]
 801756c:	e9cd 5300 	strd	r5, r3, [sp]
 8017570:	4a07      	ldr	r2, [pc, #28]	@ (8017590 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8017572:	4808      	ldr	r0, [pc, #32]	@ (8017594 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8017574:	2303      	movs	r3, #3
 8017576:	213f      	movs	r1, #63	@ 0x3f
 8017578:	f002 fdd6 	bl	801a128 <snprintf>
 801757c:	4620      	mov	r0, r4
 801757e:	b006      	add	sp, #24
 8017580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017584:	20002aec 	andcs	r2, r0, ip, ror #21
 8017588:	20002aa8 	andcs	r2, r0, r8, lsr #21
 801758c:	0801ae6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, sp, pc}
 8017590:	0801b794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, ip, sp, pc}
 8017594:	20002aac 	andcs	r2, r0, ip, lsr #21

08017598 <Hardware::ledblink()>:
 8017598:	4b02      	ldr	r3, [pc, #8]	@ (80175a4 <Hardware::ledblink()+0xc>)
 801759a:	2210      	movs	r2, #16
 801759c:	f8c3 2c2c 	str.w	r2, [r3, #3116]	@ 0xc2c
 80175a0:	4770      	bx	lr
 80175a2:	bf00      	nop
 80175a4:	40020000 	andmi	r0, r2, r0

080175a8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 80175a8:	2900      	cmp	r1, #0
 80175aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175ac:	db10      	blt.n	80175d0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80175ae:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 80175b2:	2300      	movs	r3, #0
 80175b4:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 80175b8:	42ab      	cmp	r3, r5
 80175ba:	d009      	beq.n	80175d0 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 80175bc:	011c      	lsls	r4, r3, #4
 80175be:	5937      	ldr	r7, [r6, r4]
 80175c0:	42b9      	cmp	r1, r7
 80175c2:	d106      	bne.n	80175d2 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 80175c4:	4b04      	ldr	r3, [pc, #16]	@ (80175d8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 80175c6:	681b      	ldr	r3, [r3, #0]
 80175c8:	4420      	add	r0, r4
 80175ca:	4413      	add	r3, r2
 80175cc:	e9c0 3208 	strd	r3, r2, [r0, #32]
 80175d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80175d2:	3301      	adds	r3, #1
 80175d4:	e7f0      	b.n	80175b8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 80175d6:	bf00      	nop
 80175d8:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

080175dc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>:
 80175dc:	680a      	ldr	r2, [r1, #0]
 80175de:	2a00      	cmp	r2, #0
 80175e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175e2:	4606      	mov	r6, r0
 80175e4:	468e      	mov	lr, r1
 80175e6:	db17      	blt.n	8017618 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80175e8:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 80175ec:	2400      	movs	r4, #0
 80175ee:	f100 0128 	add.w	r1, r0, #40	@ 0x28
 80175f2:	429c      	cmp	r4, r3
 80175f4:	d010      	beq.n	8017618 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3c>
 80175f6:	0125      	lsls	r5, r4, #4
 80175f8:	5948      	ldr	r0, [r1, r5]
 80175fa:	4282      	cmp	r2, r0
 80175fc:	d116      	bne.n	801762c <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x50>
 80175fe:	4435      	add	r5, r6
 8017600:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
 8017604:	4564      	cmp	r4, ip
 8017606:	f105 0510 	add.w	r5, r5, #16
 801760a:	d306      	bcc.n	801761a <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x3e>
 801760c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8017610:	f8c6 c0a0 	str.w	ip, [r6, #160]	@ 0xa0
 8017614:	f8ce 3000 	str.w	r3, [lr]
 8017618:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801761a:	f105 0320 	add.w	r3, r5, #32
 801761e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8017620:	f105 0710 	add.w	r7, r5, #16
 8017624:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8017628:	3401      	adds	r4, #1
 801762a:	e7eb      	b.n	8017604 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x28>
 801762c:	3401      	adds	r4, #1
 801762e:	e7e0      	b.n	80175f2 <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]+0x16>

08017630 <Hardware::SetFrequency(unsigned long)>:
 8017630:	460a      	mov	r2, r1
 8017632:	69c1      	ldr	r1, [r0, #28]
 8017634:	2900      	cmp	r1, #0
 8017636:	b538      	push	{r3, r4, r5, lr}
 8017638:	4604      	mov	r4, r0
 801763a:	da21      	bge.n	8017680 <Hardware::SetFrequency(unsigned long)+0x50>
 801763c:	f8d0 30a0 	ldr.w	r3, [r0, #160]	@ 0xa0
 8017640:	2b07      	cmp	r3, #7
 8017642:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8017646:	fbb1 f1f2 	udiv	r1, r1, r2
 801764a:	d906      	bls.n	801765a <Hardware::SetFrequency(unsigned long)+0x2a>
 801764c:	4825      	ldr	r0, [pc, #148]	@ (80176e4 <Hardware::SetFrequency(unsigned long)+0xb4>)
 801764e:	f000 fa9f 	bl	8017b90 <console_error>
 8017652:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8017656:	61e2      	str	r2, [r4, #28]
 8017658:	bd38      	pop	{r3, r4, r5, pc}
 801765a:	4a23      	ldr	r2, [pc, #140]	@ (80176e8 <Hardware::SetFrequency(unsigned long)+0xb8>)
 801765c:	6810      	ldr	r0, [r2, #0]
 801765e:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 8017662:	1c55      	adds	r5, r2, #1
 8017664:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8017668:	4408      	add	r0, r1
 801766a:	1c5d      	adds	r5, r3, #1
 801766c:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8017670:	f8c4 50a0 	str.w	r5, [r4, #160]	@ 0xa0
 8017674:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8017678:	491c      	ldr	r1, [pc, #112]	@ (80176ec <Hardware::SetFrequency(unsigned long)+0xbc>)
 801767a:	629a      	str	r2, [r3, #40]	@ 0x28
 801767c:	62d9      	str	r1, [r3, #44]	@ 0x2c
 801767e:	e7ea      	b.n	8017656 <Hardware::SetFrequency(unsigned long)+0x26>
 8017680:	2a08      	cmp	r2, #8
 8017682:	d808      	bhi.n	8017696 <Hardware::SetFrequency(unsigned long)+0x66>
 8017684:	2a08      	cmp	r2, #8
 8017686:	d808      	bhi.n	801769a <Hardware::SetFrequency(unsigned long)+0x6a>
 8017688:	e8df f002 	tbb	[pc, r2]
 801768c:	1c07150c 	cfstr32ne	mvfx1, [r7], {12}
 8017690:	07071f07 	streq	r1, [r7, -r7, lsl #30]
 8017694:	2aff0021 	bcs	7fd7720 <__stack_size+0x7fcf720>
 8017698:	d01b      	beq.n	80176d2 <Hardware::SetFrequency(unsigned long)+0xa2>
 801769a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 801769e:	fbb3 f2f2 	udiv	r2, r3, r2
 80176a2:	e00a      	b.n	80176ba <Hardware::SetFrequency(unsigned long)+0x8a>
 80176a4:	f100 011c 	add.w	r1, r0, #28
 80176a8:	f7ff ff98 	bl	80175dc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80176ac:	4b10      	ldr	r3, [pc, #64]	@ (80176f0 <Hardware::SetFrequency(unsigned long)+0xc0>)
 80176ae:	2210      	movs	r2, #16
 80176b0:	f8c3 2c28 	str.w	r2, [r3, #3112]	@ 0xc28
 80176b4:	e7d0      	b.n	8017658 <Hardware::SetFrequency(unsigned long)+0x28>
 80176b6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80176ba:	4620      	mov	r0, r4
 80176bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80176c0:	f7ff bf72 	b.w	80175a8 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 80176c4:	f240 124d 	movw	r2, #333	@ 0x14d
 80176c8:	e7f7      	b.n	80176ba <Hardware::SetFrequency(unsigned long)+0x8a>
 80176ca:	22c8      	movs	r2, #200	@ 0xc8
 80176cc:	e7f5      	b.n	80176ba <Hardware::SetFrequency(unsigned long)+0x8a>
 80176ce:	227d      	movs	r2, #125	@ 0x7d
 80176d0:	e7f3      	b.n	80176ba <Hardware::SetFrequency(unsigned long)+0x8a>
 80176d2:	f100 011c 	add.w	r1, r0, #28
 80176d6:	f7ff ff81 	bl	80175dc <Hardware::SoftwareTimerDelete(long&) [clone .isra.0]>
 80176da:	4b05      	ldr	r3, [pc, #20]	@ (80176f0 <Hardware::SetFrequency(unsigned long)+0xc0>)
 80176dc:	2210      	movs	r2, #16
 80176de:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 80176e2:	e7b9      	b.n	8017658 <Hardware::SetFrequency(unsigned long)+0x28>
 80176e4:	0801b491 	stmdaeq	r1, {r0, r4, r7, sl, ip, sp, pc}
 80176e8:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 80176ec:	08017599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, ip, sp, lr}
 80176f0:	40020000 	andmi	r0, r2, r0

080176f4 <Hardware::SetMode(hardware::ledblink::Mode)>:
 80176f4:	7e03      	ldrb	r3, [r0, #24]
 80176f6:	b510      	push	{r4, lr}
 80176f8:	4604      	mov	r4, r0
 80176fa:	b993      	cbnz	r3, 8017722 <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 80176fc:	6943      	ldr	r3, [r0, #20]
 80176fe:	428b      	cmp	r3, r1
 8017700:	d00f      	beq.n	8017722 <Hardware::SetMode(hardware::ledblink::Mode)+0x2e>
 8017702:	6141      	str	r1, [r0, #20]
 8017704:	3901      	subs	r1, #1
 8017706:	2904      	cmp	r1, #4
 8017708:	d804      	bhi.n	8017714 <Hardware::SetMode(hardware::ledblink::Mode)+0x20>
 801770a:	e8df f001 	tbb	[pc, r1]
 801770e:	110f0d0b 	tstne	pc, fp, lsl #26
 8017712:	21000013 	tstcs	r0, r3, lsl r0
 8017716:	4620      	mov	r0, r4
 8017718:	f7ff ff8a 	bl	8017630 <Hardware::SetFrequency(unsigned long)>
 801771c:	6960      	ldr	r0, [r4, #20]
 801771e:	f7f2 f9f7 	bl	8009b10 <hardware::ledblink::display(unsigned long)>
 8017722:	bd10      	pop	{r4, pc}
 8017724:	21ff      	movs	r1, #255	@ 0xff
 8017726:	e7f6      	b.n	8017716 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8017728:	2101      	movs	r1, #1
 801772a:	e7f4      	b.n	8017716 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 801772c:	2103      	movs	r1, #3
 801772e:	e7f2      	b.n	8017716 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8017730:	2105      	movs	r1, #5
 8017732:	e7f0      	b.n	8017716 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>
 8017734:	2108      	movs	r1, #8
 8017736:	e7ee      	b.n	8017716 <Hardware::SetMode(hardware::ledblink::Mode)+0x22>

08017738 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
 8017738:	b538      	push	{r3, r4, r5, lr}
 801773a:	4604      	mov	r4, r0
 801773c:	2300      	movs	r3, #0
 801773e:	4615      	mov	r5, r2
 8017740:	7603      	strb	r3, [r0, #24]
 8017742:	f7ff ffd7 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 8017746:	7625      	strb	r5, [r4, #24]
 8017748:	bd38      	pop	{r3, r4, r5, pc}

0801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>:
 801774a:	b530      	push	{r4, r5, lr}
 801774c:	4603      	mov	r3, r0
 801774e:	4401      	add	r1, r0
 8017750:	250a      	movs	r5, #10
 8017752:	2000      	movs	r0, #0
 8017754:	f813 2b01 	ldrb.w	r2, [r3], #1
 8017758:	f1a2 0430 	sub.w	r4, r2, #48	@ 0x30
 801775c:	2c09      	cmp	r4, #9
 801775e:	d805      	bhi.n	801776c <remoteconfig::timedate::atoi(char const*, unsigned long)+0x22>
 8017760:	fb05 2000 	mla	r0, r5, r0, r2
 8017764:	428b      	cmp	r3, r1
 8017766:	f1a0 0030 	sub.w	r0, r0, #48	@ 0x30
 801776a:	d1f3      	bne.n	8017754 <remoteconfig::timedate::atoi(char const*, unsigned long)+0xa>
 801776c:	bd30      	pop	{r4, r5, pc}
	...

08017770 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)>:
 8017770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017774:	b08a      	sub	sp, #40	@ 0x28
 8017776:	4605      	mov	r5, r0
 8017778:	460e      	mov	r6, r1
 801777a:	a808      	add	r0, sp, #32
 801777c:	2100      	movs	r1, #0
 801777e:	f002 fe83 	bl	801a488 <gettimeofday>
 8017782:	2800      	cmp	r0, #0
 8017784:	db52      	blt.n	801782c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xbc>
 8017786:	a808      	add	r0, sp, #32
 8017788:	f002 fe06 	bl	801a398 <localtime>
 801778c:	4b28      	ldr	r3, [pc, #160]	@ (8017830 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc0>)
 801778e:	4604      	mov	r4, r0
 8017790:	6919      	ldr	r1, [r3, #16]
 8017792:	6827      	ldr	r7, [r4, #0]
 8017794:	6963      	ldr	r3, [r4, #20]
 8017796:	f44f 6261 	mov.w	r2, #3600	@ 0xe10
 801779a:	fb91 fcf2 	sdiv	ip, r1, r2
 801779e:	fa4f f08c 	sxtb.w	r0, ip
 80177a2:	2800      	cmp	r0, #0
 80177a4:	f04f 0e3c 	mov.w	lr, #60	@ 0x3c
 80177a8:	dd21      	ble.n	80177ee <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x7e>
 80177aa:	f5a2 52e1 	sub.w	r2, r2, #7200	@ 0x1c20
 80177ae:	fb02 1100 	mla	r1, r2, r0, r1
 80177b2:	fbb1 f1fe 	udiv	r1, r1, lr
 80177b6:	b2ca      	uxtb	r2, r1
 80177b8:	e9d4 8e02 	ldrd	r8, lr, [r4, #8]
 80177bc:	6921      	ldr	r1, [r4, #16]
 80177be:	6864      	ldr	r4, [r4, #4]
 80177c0:	f8df c07c 	ldr.w	ip, [pc, #124]	@ 8017840 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xd0>
 80177c4:	9403      	str	r4, [sp, #12]
 80177c6:	4c1b      	ldr	r4, [pc, #108]	@ (8017834 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc4>)
 80177c8:	3101      	adds	r1, #1
 80177ca:	2800      	cmp	r0, #0
 80177cc:	bfd8      	it	le
 80177ce:	4664      	movle	r4, ip
 80177d0:	e9cd 0206 	strd	r0, r2, [sp, #24]
 80177d4:	9100      	str	r1, [sp, #0]
 80177d6:	e9cd 7404 	strd	r7, r4, [sp, #16]
 80177da:	e9cd e801 	strd	lr, r8, [sp, #4]
 80177de:	4a16      	ldr	r2, [pc, #88]	@ (8017838 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xc8>)
 80177e0:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 80177e4:	4631      	mov	r1, r6
 80177e6:	4628      	mov	r0, r5
 80177e8:	f002 fc9e 	bl	801a128 <snprintf>
 80177ec:	e01b      	b.n	8017826 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 80177ee:	4342      	muls	r2, r0
 80177f0:	1a52      	subs	r2, r2, r1
 80177f2:	fbb2 f2fe 	udiv	r2, r2, lr
 80177f6:	b2d2      	uxtb	r2, r2
 80177f8:	ea42 0c0c 	orr.w	ip, r2, ip
 80177fc:	fa5f f18c 	uxtb.w	r1, ip
 8017800:	2900      	cmp	r1, #0
 8017802:	d1d9      	bne.n	80177b8 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0x48>
 8017804:	9704      	str	r7, [sp, #16]
 8017806:	6862      	ldr	r2, [r4, #4]
 8017808:	9203      	str	r2, [sp, #12]
 801780a:	68a2      	ldr	r2, [r4, #8]
 801780c:	9202      	str	r2, [sp, #8]
 801780e:	68e2      	ldr	r2, [r4, #12]
 8017810:	9201      	str	r2, [sp, #4]
 8017812:	6922      	ldr	r2, [r4, #16]
 8017814:	3201      	adds	r2, #1
 8017816:	9200      	str	r2, [sp, #0]
 8017818:	f203 736c 	addw	r3, r3, #1900	@ 0x76c
 801781c:	4a07      	ldr	r2, [pc, #28]	@ (801783c <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xcc>)
 801781e:	4631      	mov	r1, r6
 8017820:	4628      	mov	r0, r5
 8017822:	f002 fc81 	bl	801a128 <snprintf>
 8017826:	b00a      	add	sp, #40	@ 0x28
 8017828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801782c:	2000      	movs	r0, #0
 801782e:	e7fa      	b.n	8017826 <remoteconfig::timedate::json_get_timeofday(char*, unsigned long)+0xb6>
 8017830:	40024000 	andmi	r4, r2, r0
 8017834:	0801b735 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, ip, sp, pc}
 8017838:	0801b7e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, ip, sp, pc}
 801783c:	0801b7b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, ip, sp, pc}
 8017840:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}

08017844 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)>:
 8017844:	b570      	push	{r4, r5, r6, lr}
 8017846:	291a      	cmp	r1, #26
 8017848:	b08c      	sub	sp, #48	@ 0x30
 801784a:	4606      	mov	r6, r0
 801784c:	460c      	mov	r4, r1
 801784e:	d001      	beq.n	8017854 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10>
 8017850:	291f      	cmp	r1, #31
 8017852:	d174      	bne.n	801793e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfa>
 8017854:	2104      	movs	r1, #4
 8017856:	1d70      	adds	r0, r6, #5
 8017858:	f7ff ff77 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801785c:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 8017860:	9008      	str	r0, [sp, #32]
 8017862:	2102      	movs	r1, #2
 8017864:	f106 000a 	add.w	r0, r6, #10
 8017868:	f7ff ff6f 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801786c:	3801      	subs	r0, #1
 801786e:	9007      	str	r0, [sp, #28]
 8017870:	2102      	movs	r1, #2
 8017872:	f106 000d 	add.w	r0, r6, #13
 8017876:	f7ff ff68 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801787a:	2102      	movs	r1, #2
 801787c:	9006      	str	r0, [sp, #24]
 801787e:	f106 0010 	add.w	r0, r6, #16
 8017882:	f7ff ff62 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8017886:	2102      	movs	r1, #2
 8017888:	9005      	str	r0, [sp, #20]
 801788a:	f106 0013 	add.w	r0, r6, #19
 801788e:	f7ff ff5c 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 8017892:	2102      	movs	r1, #2
 8017894:	9004      	str	r0, [sp, #16]
 8017896:	f106 0016 	add.w	r0, r6, #22
 801789a:	f7ff ff56 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 801789e:	9003      	str	r0, [sp, #12]
 80178a0:	a803      	add	r0, sp, #12
 80178a2:	f002 fd89 	bl	801a3b8 <mktime>
 80178a6:	2300      	movs	r3, #0
 80178a8:	2c1a      	cmp	r4, #26
 80178aa:	4605      	mov	r5, r0
 80178ac:	9001      	str	r0, [sp, #4]
 80178ae:	9302      	str	r3, [sp, #8]
 80178b0:	d041      	beq.n	8017936 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xf2>
 80178b2:	7e33      	ldrb	r3, [r6, #24]
 80178b4:	2102      	movs	r1, #2
 80178b6:	2b2d      	cmp	r3, #45	@ 0x2d
 80178b8:	f106 0019 	add.w	r0, r6, #25
 80178bc:	bf14      	ite	ne
 80178be:	2401      	movne	r4, #1
 80178c0:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
 80178c4:	f7ff ff41 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80178c8:	4344      	muls	r4, r0
 80178ca:	f004 04ff 	and.w	r4, r4, #255	@ 0xff
 80178ce:	f104 030c 	add.w	r3, r4, #12
 80178d2:	b2db      	uxtb	r3, r3
 80178d4:	2b1a      	cmp	r3, #26
 80178d6:	d82a      	bhi.n	801792e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 80178d8:	2102      	movs	r1, #2
 80178da:	f106 001c 	add.w	r0, r6, #28
 80178de:	f7ff ff34 	bl	801774a <remoteconfig::timedate::atoi(char const*, unsigned long)>
 80178e2:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
 80178e6:	b264      	sxtb	r4, r4
 80178e8:	d12b      	bne.n	8017942 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xfe>
 80178ea:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 80178ee:	4363      	muls	r3, r4
 80178f0:	4a15      	ldr	r2, [pc, #84]	@ (8017948 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 80178f2:	6911      	ldr	r1, [r2, #16]
 80178f4:	4299      	cmp	r1, r3
 80178f6:	bf1f      	itttt	ne
 80178f8:	6113      	strne	r3, [r2, #16]
 80178fa:	4b14      	ldrne	r3, [pc, #80]	@ (801794c <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x108>)
 80178fc:	2201      	movne	r2, #1
 80178fe:	601a      	strne	r2, [r3, #0]
 8017900:	e015      	b.n	801792e <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xea>
 8017902:	f993 1000 	ldrsb.w	r1, [r3]
 8017906:	42a1      	cmp	r1, r4
 8017908:	d10e      	bne.n	8017928 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 801790a:	7859      	ldrb	r1, [r3, #1]
 801790c:	4281      	cmp	r1, r0
 801790e:	d10b      	bne.n	8017928 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe4>
 8017910:	2c00      	cmp	r4, #0
 8017912:	f44f 6361 	mov.w	r3, #3600	@ 0xe10
 8017916:	fb04 f303 	mul.w	r3, r4, r3
 801791a:	bfcc      	ite	gt
 801791c:	223c      	movgt	r2, #60	@ 0x3c
 801791e:	f06f 023b 	mvnle.w	r2, #59	@ 0x3b
 8017922:	fb02 3300 	mla	r3, r2, r0, r3
 8017926:	e7e3      	b.n	80178f0 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xac>
 8017928:	3302      	adds	r3, #2
 801792a:	3a01      	subs	r2, #1
 801792c:	d1e9      	bne.n	8017902 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xbe>
 801792e:	4b06      	ldr	r3, [pc, #24]	@ (8017948 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x104>)
 8017930:	691b      	ldr	r3, [r3, #16]
 8017932:	1aed      	subs	r5, r5, r3
 8017934:	9501      	str	r5, [sp, #4]
 8017936:	2100      	movs	r1, #0
 8017938:	a801      	add	r0, sp, #4
 801793a:	f002 fdd7 	bl	801a4ec <settimeofday>
 801793e:	b00c      	add	sp, #48	@ 0x30
 8017940:	bd70      	pop	{r4, r5, r6, pc}
 8017942:	4b03      	ldr	r3, [pc, #12]	@ (8017950 <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0x10c>)
 8017944:	220c      	movs	r2, #12
 8017946:	e7f0      	b.n	801792a <remoteconfig::timedate::json_set_timeofday(char const*, unsigned long)+0xe6>
 8017948:	40024000 	andmi	r4, r2, r0
 801794c:	20002a10 	andcs	r2, r0, r0, lsl sl
 8017950:	0801ec04 	stmdaeq	r1, {r2, sl, fp, sp, lr, pc}

08017954 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>:
 8017954:	2900      	cmp	r1, #0
 8017956:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017958:	db10      	blt.n	801797c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 801795a:	f8d0 50a0 	ldr.w	r5, [r0, #160]	@ 0xa0
 801795e:	2300      	movs	r3, #0
 8017960:	f100 0628 	add.w	r6, r0, #40	@ 0x28
 8017964:	42ab      	cmp	r3, r5
 8017966:	d009      	beq.n	801797c <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x28>
 8017968:	011c      	lsls	r4, r3, #4
 801796a:	5937      	ldr	r7, [r6, r4]
 801796c:	42b9      	cmp	r1, r7
 801796e:	d106      	bne.n	801797e <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x2a>
 8017970:	4b04      	ldr	r3, [pc, #16]	@ (8017984 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x30>)
 8017972:	681b      	ldr	r3, [r3, #0]
 8017974:	4420      	add	r0, r4
 8017976:	4413      	add	r3, r2
 8017978:	e9c0 3208 	strd	r3, r2, [r0, #32]
 801797c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801797e:	3301      	adds	r3, #1
 8017980:	e7f0      	b.n	8017964 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]+0x10>
 8017982:	bf00      	nop
 8017984:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

08017988 <Hardware::Hardware()>:
 8017988:	b570      	push	{r4, r5, r6, lr}
 801798a:	2306      	movs	r3, #6
 801798c:	6143      	str	r3, [r0, #20]
 801798e:	2500      	movs	r5, #0
 8017990:	4b5c      	ldr	r3, [pc, #368]	@ (8017b04 <Hardware::Hardware()+0x17c>)
 8017992:	7405      	strb	r5, [r0, #16]
 8017994:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8017998:	b090      	sub	sp, #64	@ 0x40
 801799a:	e9c0 5528 	strd	r5, r5, [r0, #160]	@ 0xa0
 801799e:	4604      	mov	r4, r0
 80179a0:	7605      	strb	r5, [r0, #24]
 80179a2:	61c6      	str	r6, [r0, #28]
 80179a4:	6018      	str	r0, [r3, #0]
 80179a6:	f7f0 fdf7 	bl	8008598 <console_init()>
 80179aa:	f001 facf 	bl	8018f4c <timer6_config()>
 80179ae:	f001 fb33 	bl	8019018 <systick_config>
 80179b2:	f001 fb05 	bl	8018fc0 <udelay_init()>
 80179b6:	4620      	mov	r0, r4
 80179b8:	f002 fd4a 	bl	801a450 <hal::uuid_init(unsigned char*)>
 80179bc:	f001 fb52 	bl	8019064 <gd32_adc_init()>
 80179c0:	f001 fbb0 	bl	8019124 <gd32_i2c_begin>
 80179c4:	f241 0004 	movw	r0, #4100	@ 0x1004
 80179c8:	f000 fdfa 	bl	80185c0 <rcu_periph_clock_enable>
 80179cc:	484e      	ldr	r0, [pc, #312]	@ (8017b08 <Hardware::Hardware()+0x180>)
 80179ce:	f000 feb3 	bl	8018738 <timer_deinit>
 80179d2:	a803      	add	r0, sp, #12
 80179d4:	f000 ff56 	bl	8018884 <timer_struct_para_init>
 80179d8:	23ef      	movs	r3, #239	@ 0xef
 80179da:	a903      	add	r1, sp, #12
 80179dc:	484a      	ldr	r0, [pc, #296]	@ (8017b08 <Hardware::Hardware()+0x180>)
 80179de:	f8ad 300c 	strh.w	r3, [sp, #12]
 80179e2:	9605      	str	r6, [sp, #20]
 80179e4:	f000 ff56 	bl	8018894 <timer_init>
 80179e8:	4847      	ldr	r0, [pc, #284]	@ (8017b08 <Hardware::Hardware()+0x180>)
 80179ea:	f000 ff87 	bl	80188fc <timer_enable>
 80179ee:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 80179f2:	f000 fe11 	bl	8018618 <rcu_timer_clock_prescaler_config>
 80179f6:	f641 400f 	movw	r0, #7183	@ 0x1c0f
 80179fa:	f000 fde1 	bl	80185c0 <rcu_periph_clock_enable>
 80179fe:	f241 001c 	movw	r0, #4124	@ 0x101c
 8017a02:	f000 fddd 	bl	80185c0 <rcu_periph_clock_enable>
 8017a06:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8017a0a:	f000 fdc5 	bl	8018598 <pmu_backup_ldo_config>
 8017a0e:	f640 4012 	movw	r0, #3090	@ 0xc12
 8017a12:	f000 fdd5 	bl	80185c0 <rcu_periph_clock_enable>
 8017a16:	f000 fdcb 	bl	80185b0 <pmu_backup_write_enable>
 8017a1a:	4629      	mov	r1, r5
 8017a1c:	2001      	movs	r0, #1
 8017a1e:	f001 f899 	bl	8018b54 <bkp_data_write(bkp_data_register_enum, unsigned short)>
 8017a22:	4a3a      	ldr	r2, [pc, #232]	@ (8017b0c <Hardware::Hardware()+0x184>)
 8017a24:	4b3a      	ldr	r3, [pc, #232]	@ (8017b10 <Hardware::Hardware()+0x188>)
 8017a26:	1a9b      	subs	r3, r3, r2
 8017a28:	3b01      	subs	r3, #1
 8017a2a:	d245      	bcs.n	8017ab8 <Hardware::Hardware()+0x130>
 8017a2c:	4a39      	ldr	r2, [pc, #228]	@ (8017b14 <Hardware::Hardware()+0x18c>)
 8017a2e:	4b3a      	ldr	r3, [pc, #232]	@ (8017b18 <Hardware::Hardware()+0x190>)
 8017a30:	2100      	movs	r1, #0
 8017a32:	1a9b      	subs	r3, r3, r2
 8017a34:	3b01      	subs	r3, #1
 8017a36:	d242      	bcs.n	8017abe <Hardware::Hardware()+0x136>
 8017a38:	4a38      	ldr	r2, [pc, #224]	@ (8017b1c <Hardware::Hardware()+0x194>)
 8017a3a:	4b39      	ldr	r3, [pc, #228]	@ (8017b20 <Hardware::Hardware()+0x198>)
 8017a3c:	2100      	movs	r1, #0
 8017a3e:	1a9b      	subs	r3, r3, r2
 8017a40:	3b01      	subs	r3, #1
 8017a42:	d23f      	bcs.n	8017ac4 <Hardware::Hardware()+0x13c>
 8017a44:	ab07      	add	r3, sp, #28
 8017a46:	2524      	movs	r5, #36	@ 0x24
 8017a48:	4618      	mov	r0, r3
 8017a4a:	2200      	movs	r2, #0
 8017a4c:	3d01      	subs	r5, #1
 8017a4e:	f803 2b01 	strb.w	r2, [r3], #1
 8017a52:	d1fb      	bne.n	8017a4c <Hardware::Hardware()+0xc4>
 8017a54:	2217      	movs	r2, #23
 8017a56:	2308      	movs	r3, #8
 8017a58:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 8017a5c:	237c      	movs	r3, #124	@ 0x7c
 8017a5e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017a60:	f002 fcaa 	bl	801a3b8 <mktime>
 8017a64:	4629      	mov	r1, r5
 8017a66:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8017a6a:	a801      	add	r0, sp, #4
 8017a6c:	f002 fd3e 	bl	801a4ec <settimeofday>
 8017a70:	f640 4003 	movw	r0, #3075	@ 0xc03
 8017a74:	f000 fda4 	bl	80185c0 <rcu_periph_clock_enable>
 8017a78:	482a      	ldr	r0, [pc, #168]	@ (8017b24 <Hardware::Hardware()+0x19c>)
 8017a7a:	2310      	movs	r3, #16
 8017a7c:	462a      	mov	r2, r5
 8017a7e:	2101      	movs	r1, #1
 8017a80:	f000 fd18 	bl	80184b4 <gpio_mode_set>
 8017a84:	2310      	movs	r3, #16
 8017a86:	2202      	movs	r2, #2
 8017a88:	4629      	mov	r1, r5
 8017a8a:	4826      	ldr	r0, [pc, #152]	@ (8017b24 <Hardware::Hardware()+0x19c>)
 8017a8c:	f000 fd34 	bl	80184f8 <gpio_output_options_set>
 8017a90:	4b25      	ldr	r3, [pc, #148]	@ (8017b28 <Hardware::Hardware()+0x1a0>)
 8017a92:	2210      	movs	r2, #16
 8017a94:	f8c3 2c18 	str.w	r2, [r3, #3096]	@ 0xc18
 8017a98:	69e1      	ldr	r1, [r4, #28]
 8017a9a:	2900      	cmp	r1, #0
 8017a9c:	da2b      	bge.n	8017af6 <Hardware::Hardware()+0x16e>
 8017a9e:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8017aa2:	2b07      	cmp	r3, #7
 8017aa4:	d911      	bls.n	8017aca <Hardware::Hardware()+0x142>
 8017aa6:	4821      	ldr	r0, [pc, #132]	@ (8017b2c <Hardware::Hardware()+0x1a4>)
 8017aa8:	f000 f872 	bl	8017b90 <console_error>
 8017aac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8017ab0:	61e2      	str	r2, [r4, #28]
 8017ab2:	4620      	mov	r0, r4
 8017ab4:	b010      	add	sp, #64	@ 0x40
 8017ab6:	bd70      	pop	{r4, r5, r6, pc}
 8017ab8:	f802 5b01 	strb.w	r5, [r2], #1
 8017abc:	e7b4      	b.n	8017a28 <Hardware::Hardware()+0xa0>
 8017abe:	f802 1b01 	strb.w	r1, [r2], #1
 8017ac2:	e7b7      	b.n	8017a34 <Hardware::Hardware()+0xac>
 8017ac4:	f802 1b01 	strb.w	r1, [r2], #1
 8017ac8:	e7ba      	b.n	8017a40 <Hardware::Hardware()+0xb8>
 8017aca:	4a19      	ldr	r2, [pc, #100]	@ (8017b30 <Hardware::Hardware()+0x1a8>)
 8017acc:	6811      	ldr	r1, [r2, #0]
 8017ace:	f8d4 20a4 	ldr.w	r2, [r4, #164]	@ 0xa4
 8017ad2:	1c50      	adds	r0, r2, #1
 8017ad4:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
 8017ad8:	1c58      	adds	r0, r3, #1
 8017ada:	eb04 1303 	add.w	r3, r4, r3, lsl #4
 8017ade:	f501 717a 	add.w	r1, r1, #1000	@ 0x3e8
 8017ae2:	f8c4 00a0 	str.w	r0, [r4, #160]	@ 0xa0
 8017ae6:	6219      	str	r1, [r3, #32]
 8017ae8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8017aec:	e9c3 1209 	strd	r1, r2, [r3, #36]	@ 0x24
 8017af0:	4910      	ldr	r1, [pc, #64]	@ (8017b34 <Hardware::Hardware()+0x1ac>)
 8017af2:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8017af4:	e7dc      	b.n	8017ab0 <Hardware::Hardware()+0x128>
 8017af6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8017afa:	4620      	mov	r0, r4
 8017afc:	f7ff ff2a 	bl	8017954 <Hardware::SoftwareTimerChange(long, unsigned long) [clone .isra.0]>
 8017b00:	e7d7      	b.n	8017ab2 <Hardware::Hardware()+0x12a>
 8017b02:	bf00      	nop
 8017b04:	20002b04 	andcs	r2, r0, r4, lsl #22
 8017b08:	40001000 	andmi	r1, r0, r0
 8017b0c:	2001c000 	andcs	ip, r1, r0
 8017b10:	2001c428 	andcs	ip, r1, r8, lsr #8
 8017b14:	10008000 	andne	r8, r0, r0
 8017b18:	1000cc90 	mulne	r0, r0, ip
 8017b1c:	20020000 	andcs	r0, r2, r0
 8017b20:	20020000 	andcs	r0, r2, r0
 8017b24:	40020c00 	andmi	r0, r2, r0, lsl #24
 8017b28:	40020000 	andmi	r0, r2, r0
 8017b2c:	0801b491 	stmdaeq	r1, {r0, r4, r7, sl, ip, sp, pc}
 8017b30:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 8017b34:	08017599 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, ip, sp, lr}

08017b38 <Hardware::Reboot()>:
 8017b38:	4604      	mov	r4, r0
 8017b3a:	b508      	push	{r3, lr}
 8017b3c:	2500      	movs	r5, #0
 8017b3e:	480f      	ldr	r0, [pc, #60]	@ (8017b7c <Hardware::Reboot()+0x44>)
 8017b40:	f002 fb1f 	bl	801a182 <puts>
 8017b44:	2104      	movs	r1, #4
 8017b46:	7425      	strb	r5, [r4, #16]
 8017b48:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8017b4c:	f000 fc88 	bl	8018460 <fwdgt_config>
 8017b50:	4620      	mov	r0, r4
 8017b52:	f7f1 fffd 	bl	8009b50 <Hardware::RebootHandler()>
 8017b56:	f7fc fb81 	bl	801425c <net::net_shutdown()>
 8017b5a:	4629      	mov	r1, r5
 8017b5c:	4620      	mov	r0, r4
 8017b5e:	f7ff fdc9 	bl	80176f4 <Hardware::SetMode(hardware::ledblink::Mode)>
 8017b62:	f3bf 8f4f 	dsb	sy
 8017b66:	4906      	ldr	r1, [pc, #24]	@ (8017b80 <Hardware::Reboot()+0x48>)
 8017b68:	4b06      	ldr	r3, [pc, #24]	@ (8017b84 <Hardware::Reboot()+0x4c>)
 8017b6a:	68ca      	ldr	r2, [r1, #12]
 8017b6c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8017b70:	4313      	orrs	r3, r2
 8017b72:	60cb      	str	r3, [r1, #12]
 8017b74:	f3bf 8f4f 	dsb	sy
 8017b78:	bf00      	nop
 8017b7a:	e7fd      	b.n	8017b78 <Hardware::Reboot()+0x40>
 8017b7c:	0801ad65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp, sp, pc}
 8017b80:	e000ed00 	and	lr, r0, r0, lsl #26
 8017b84:	05fa0004 	ldrbeq	r0, [sl, #4]!

08017b88 <console_putc>:
 8017b88:	f001 bd46 	b.w	8019618 <uart0_putc>

08017b8c <console_puts>:
 8017b8c:	f001 bd5e 	b.w	801964c <uart0_puts>

08017b90 <console_error>:
 8017b90:	b510      	push	{r4, lr}
 8017b92:	4604      	mov	r4, r0
 8017b94:	4805      	ldr	r0, [pc, #20]	@ (8017bac <console_error+0x1c>)
 8017b96:	f001 fd59 	bl	801964c <uart0_puts>
 8017b9a:	4620      	mov	r0, r4
 8017b9c:	f001 fd56 	bl	801964c <uart0_puts>
 8017ba0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ba4:	4802      	ldr	r0, [pc, #8]	@ (8017bb0 <console_error+0x20>)
 8017ba6:	f001 bd51 	b.w	801964c <uart0_puts>
 8017baa:	bf00      	nop
 8017bac:	0801b814 	stmdaeq	r1, {r2, r4, fp, ip, sp, pc}
 8017bb0:	0801b81a 	stmdaeq	r1, {r1, r3, r4, fp, ip, sp, pc}

08017bb4 <console_set_fg_color>:
 8017bb4:	2807      	cmp	r0, #7
 8017bb6:	d810      	bhi.n	8017bda <console_set_fg_color+0x26>
 8017bb8:	e8df f000 	tbb	[pc, r0]
 8017bbc:	0b090704 	bleq	82597d4 <_sidata+0x23a60c>
 8017bc0:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	@ 8017b8c <console_puts>
 8017bc4:	4806      	ldr	r0, [pc, #24]	@ (8017be0 <console_set_fg_color+0x2c>)
 8017bc6:	f001 bd41 	b.w	801964c <uart0_puts>
 8017bca:	4806      	ldr	r0, [pc, #24]	@ (8017be4 <console_set_fg_color+0x30>)
 8017bcc:	e7fb      	b.n	8017bc6 <console_set_fg_color+0x12>
 8017bce:	4806      	ldr	r0, [pc, #24]	@ (8017be8 <console_set_fg_color+0x34>)
 8017bd0:	e7f9      	b.n	8017bc6 <console_set_fg_color+0x12>
 8017bd2:	4806      	ldr	r0, [pc, #24]	@ (8017bec <console_set_fg_color+0x38>)
 8017bd4:	e7f7      	b.n	8017bc6 <console_set_fg_color+0x12>
 8017bd6:	4806      	ldr	r0, [pc, #24]	@ (8017bf0 <console_set_fg_color+0x3c>)
 8017bd8:	e7f5      	b.n	8017bc6 <console_set_fg_color+0x12>
 8017bda:	4806      	ldr	r0, [pc, #24]	@ (8017bf4 <console_set_fg_color+0x40>)
 8017bdc:	e7f3      	b.n	8017bc6 <console_set_fg_color+0x12>
 8017bde:	bf00      	nop
 8017be0:	0801b820 	stmdaeq	r1, {r5, fp, ip, sp, pc}
 8017be4:	0801b814 	stmdaeq	r1, {r2, r4, fp, ip, sp, pc}
 8017be8:	0801b826 	stmdaeq	r1, {r1, r2, r5, fp, ip, sp, pc}
 8017bec:	0801b82c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, pc}
 8017bf0:	0801b81a 	stmdaeq	r1, {r1, r3, r4, fp, ip, sp, pc}
 8017bf4:	0801b832 	stmdaeq	r1, {r1, r4, r5, fp, ip, sp, pc}

08017bf8 <console_status>:
 8017bf8:	b510      	push	{r4, lr}
 8017bfa:	b280      	uxth	r0, r0
 8017bfc:	460c      	mov	r4, r1
 8017bfe:	f7ff ffd9 	bl	8017bb4 <console_set_fg_color>
 8017c02:	4807      	ldr	r0, [pc, #28]	@ (8017c20 <console_status+0x28>)
 8017c04:	f001 fd22 	bl	801964c <uart0_puts>
 8017c08:	4620      	mov	r0, r4
 8017c0a:	f001 fd1f 	bl	801964c <uart0_puts>
 8017c0e:	200a      	movs	r0, #10
 8017c10:	f001 fd02 	bl	8019618 <uart0_putc>
 8017c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017c18:	4802      	ldr	r0, [pc, #8]	@ (8017c24 <console_status+0x2c>)
 8017c1a:	f001 bd17 	b.w	801964c <uart0_puts>
 8017c1e:	bf00      	nop
 8017c20:	0801b838 	stmdaeq	r1, {r3, r4, r5, fp, ip, sp, pc}
 8017c24:	0801b81a 	stmdaeq	r1, {r1, r3, r4, fp, ip, sp, pc}

08017c28 <stack_debug_init>:
 8017c28:	4b04      	ldr	r3, [pc, #16]	@ (8017c3c <stack_debug_init+0x14>)
 8017c2a:	4a05      	ldr	r2, [pc, #20]	@ (8017c40 <stack_debug_init+0x18>)
 8017c2c:	4905      	ldr	r1, [pc, #20]	@ (8017c44 <stack_debug_init+0x1c>)
 8017c2e:	4293      	cmp	r3, r2
 8017c30:	d300      	bcc.n	8017c34 <stack_debug_init+0xc>
 8017c32:	4770      	bx	lr
 8017c34:	f843 1b04 	str.w	r1, [r3], #4
 8017c38:	e7f9      	b.n	8017c2e <stack_debug_init+0x6>
 8017c3a:	bf00      	nop
 8017c3c:	10000000 	andne	r0, r0, r0
 8017c40:	10008000 	andne	r8, r0, r0
 8017c44:	abcdabcd 	blge	7382b80 <__stack_size+0x737ab80>

08017c48 <stack_debug_print()>:
 8017c48:	b570      	push	{r4, r5, r6, lr}
 8017c4a:	4d18      	ldr	r5, [pc, #96]	@ (8017cac <stack_debug_print()+0x64>)
 8017c4c:	4c18      	ldr	r4, [pc, #96]	@ (8017cb0 <stack_debug_print()+0x68>)
 8017c4e:	4a19      	ldr	r2, [pc, #100]	@ (8017cb4 <stack_debug_print()+0x6c>)
 8017c50:	4629      	mov	r1, r5
 8017c52:	42a5      	cmp	r5, r4
 8017c54:	d202      	bcs.n	8017c5c <stack_debug_print()+0x14>
 8017c56:	6828      	ldr	r0, [r5, #0]
 8017c58:	4290      	cmp	r0, r2
 8017c5a:	d005      	beq.n	8017c68 <stack_debug_print()+0x20>
 8017c5c:	4a16      	ldr	r2, [pc, #88]	@ (8017cb8 <stack_debug_print()+0x70>)
 8017c5e:	6810      	ldr	r0, [r2, #0]
 8017c60:	1b66      	subs	r6, r4, r5
 8017c62:	42b0      	cmp	r0, r6
 8017c64:	d102      	bne.n	8017c6c <stack_debug_print()+0x24>
 8017c66:	bd70      	pop	{r4, r5, r6, pc}
 8017c68:	3504      	adds	r5, #4
 8017c6a:	e7f2      	b.n	8017c52 <stack_debug_print()+0xa>
 8017c6c:	1a64      	subs	r4, r4, r1
 8017c6e:	1a6d      	subs	r5, r5, r1
 8017c70:	2319      	movs	r3, #25
 8017c72:	10a4      	asrs	r4, r4, #2
 8017c74:	436b      	muls	r3, r5
 8017c76:	6016      	str	r6, [r2, #0]
 8017c78:	fb93 f3f4 	sdiv	r3, r3, r4
 8017c7c:	b983      	cbnz	r3, 8017ca0 <stack_debug_print()+0x58>
 8017c7e:	480f      	ldr	r0, [pc, #60]	@ (8017cbc <stack_debug_print()+0x74>)
 8017c80:	f002 fa2a 	bl	801a0d8 <printf>
 8017c84:	1e21      	subs	r1, r4, #0
 8017c86:	bfb8      	it	lt
 8017c88:	31ff      	addlt	r1, #255	@ 0xff
 8017c8a:	462b      	mov	r3, r5
 8017c8c:	4632      	mov	r2, r6
 8017c8e:	480c      	ldr	r0, [pc, #48]	@ (8017cc0 <stack_debug_print()+0x78>)
 8017c90:	1209      	asrs	r1, r1, #8
 8017c92:	f002 fa21 	bl	801a0d8 <printf>
 8017c96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017c9a:	480a      	ldr	r0, [pc, #40]	@ (8017cc4 <stack_debug_print()+0x7c>)
 8017c9c:	f002 ba1c 	b.w	801a0d8 <printf>
 8017ca0:	2b01      	cmp	r3, #1
 8017ca2:	bf0c      	ite	eq
 8017ca4:	4808      	ldreq	r0, [pc, #32]	@ (8017cc8 <stack_debug_print()+0x80>)
 8017ca6:	4809      	ldrne	r0, [pc, #36]	@ (8017ccc <stack_debug_print()+0x84>)
 8017ca8:	e7ea      	b.n	8017c80 <stack_debug_print()+0x38>
 8017caa:	bf00      	nop
 8017cac:	10000000 	andne	r0, r0, r0
 8017cb0:	10008000 	andne	r8, r0, r0
 8017cb4:	abcdabcd 	blge	7382bf0 <__stack_size+0x737abf0>
 8017cb8:	20002b0c 	andcs	r2, r0, ip, lsl #22
 8017cbc:	0801b814 	stmdaeq	r1, {r2, r4, fp, ip, sp, pc}
 8017cc0:	0801b856 	stmdaeq	r1, {r1, r2, r4, r6, fp, ip, sp, pc}
 8017cc4:	0801b87b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, fp, ip, sp, pc}
 8017cc8:	0801b82c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, pc}
 8017ccc:	0801b850 	stmdaeq	r1, {r4, r6, fp, ip, sp, pc}

08017cd0 <stack_debug_run()>:
 8017cd0:	b508      	push	{r3, lr}
 8017cd2:	2000      	movs	r0, #0
 8017cd4:	f002 fc20 	bl	801a518 <time>
 8017cd8:	4b04      	ldr	r3, [pc, #16]	@ (8017cec <stack_debug_run()+0x1c>)
 8017cda:	681a      	ldr	r2, [r3, #0]
 8017cdc:	4282      	cmp	r2, r0
 8017cde:	d004      	beq.n	8017cea <stack_debug_run()+0x1a>
 8017ce0:	6018      	str	r0, [r3, #0]
 8017ce2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8017ce6:	f7ff bfaf 	b.w	8017c48 <stack_debug_print()>
 8017cea:	bd08      	pop	{r3, pc}
 8017cec:	20002b08 	andcs	r2, r0, r8, lsl #22

08017cf0 <SystemInit>:
 8017cf0:	4a56      	ldr	r2, [pc, #344]	@ (8017e4c <SystemInit+0x15c>)
 8017cf2:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8017cf6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8017cfa:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8017cfe:	4b54      	ldr	r3, [pc, #336]	@ (8017e50 <SystemInit+0x160>)
 8017d00:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017d04:	f042 0201 	orr.w	r2, r2, #1
 8017d08:	b082      	sub	sp, #8
 8017d0a:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8017d0e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017d12:	0790      	lsls	r0, r2, #30
 8017d14:	d5fb      	bpl.n	8017d0e <SystemInit+0x1e>
 8017d16:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017d1a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8017d1e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017d22:	2300      	movs	r3, #0
 8017d24:	9301      	str	r3, [sp, #4]
 8017d26:	9b01      	ldr	r3, [sp, #4]
 8017d28:	2b4f      	cmp	r3, #79	@ 0x4f
 8017d2a:	d93d      	bls.n	8017da8 <SystemInit+0xb8>
 8017d2c:	4b48      	ldr	r3, [pc, #288]	@ (8017e50 <SystemInit+0x160>)
 8017d2e:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017d32:	f042 0290 	orr.w	r2, r2, #144	@ 0x90
 8017d36:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017d3a:	2200      	movs	r2, #0
 8017d3c:	9201      	str	r2, [sp, #4]
 8017d3e:	9a01      	ldr	r2, [sp, #4]
 8017d40:	2a4f      	cmp	r2, #79	@ 0x4f
 8017d42:	d934      	bls.n	8017dae <SystemInit+0xbe>
 8017d44:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017d48:	f022 0203 	bic.w	r2, r2, #3
 8017d4c:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017d50:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017d54:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 8017d58:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8017d5c:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8017d60:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017d64:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8017d68:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8017d6c:	2200      	movs	r2, #0
 8017d6e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017d72:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8017d76:	4937      	ldr	r1, [pc, #220]	@ (8017e54 <SystemInit+0x164>)
 8017d78:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8017d7c:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
 8017d80:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017d84:	f042 0201 	orr.w	r2, r2, #1
 8017d88:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
 8017d8c:	4b30      	ldr	r3, [pc, #192]	@ (8017e50 <SystemInit+0x160>)
 8017d8e:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 8017d92:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 8017d96:	0789      	lsls	r1, r1, #30
 8017d98:	d401      	bmi.n	8017d9e <SystemInit+0xae>
 8017d9a:	3a01      	subs	r2, #1
 8017d9c:	d1f9      	bne.n	8017d92 <SystemInit+0xa2>
 8017d9e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
 8017da2:	0792      	lsls	r2, r2, #30
 8017da4:	d406      	bmi.n	8017db4 <SystemInit+0xc4>
 8017da6:	e7fe      	b.n	8017da6 <SystemInit+0xb6>
 8017da8:	9b01      	ldr	r3, [sp, #4]
 8017daa:	3301      	adds	r3, #1
 8017dac:	e7ba      	b.n	8017d24 <SystemInit+0x34>
 8017dae:	9a01      	ldr	r2, [sp, #4]
 8017db0:	3201      	adds	r2, #1
 8017db2:	e7c3      	b.n	8017d3c <SystemInit+0x4c>
 8017db4:	f8d3 2840 	ldr.w	r2, [r3, #2112]	@ 0x840
 8017db8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8017dbc:	f8c3 2840 	str.w	r2, [r3, #2112]	@ 0x840
 8017dc0:	4a25      	ldr	r2, [pc, #148]	@ (8017e58 <SystemInit+0x168>)
 8017dc2:	6811      	ldr	r1, [r2, #0]
 8017dc4:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
 8017dc8:	6011      	str	r1, [r2, #0]
 8017dca:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8017dce:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8017dd2:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8017dd6:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
 8017dda:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8017dde:	f8d3 1808 	ldr.w	r1, [r3, #2056]	@ 0x808
 8017de2:	f441 51a0 	orr.w	r1, r1, #5120	@ 0x1400
 8017de6:	f8c3 1808 	str.w	r1, [r3, #2056]	@ 0x808
 8017dea:	491c      	ldr	r1, [pc, #112]	@ (8017e5c <SystemInit+0x16c>)
 8017dec:	f8c3 1804 	str.w	r1, [r3, #2052]	@ 0x804
 8017df0:	f8d3 1800 	ldr.w	r1, [r3, #2048]	@ 0x800
 8017df4:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
 8017df8:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
 8017dfc:	4914      	ldr	r1, [pc, #80]	@ (8017e50 <SystemInit+0x160>)
 8017dfe:	f8d1 3800 	ldr.w	r3, [r1, #2048]	@ 0x800
 8017e02:	019b      	lsls	r3, r3, #6
 8017e04:	d5fb      	bpl.n	8017dfe <SystemInit+0x10e>
 8017e06:	6813      	ldr	r3, [r2, #0]
 8017e08:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8017e0c:	6013      	str	r3, [r2, #0]
 8017e0e:	4b12      	ldr	r3, [pc, #72]	@ (8017e58 <SystemInit+0x168>)
 8017e10:	685a      	ldr	r2, [r3, #4]
 8017e12:	03d0      	lsls	r0, r2, #15
 8017e14:	d5fc      	bpl.n	8017e10 <SystemInit+0x120>
 8017e16:	681a      	ldr	r2, [r3, #0]
 8017e18:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8017e1c:	601a      	str	r2, [r3, #0]
 8017e1e:	685a      	ldr	r2, [r3, #4]
 8017e20:	0391      	lsls	r1, r2, #14
 8017e22:	d5fc      	bpl.n	8017e1e <SystemInit+0x12e>
 8017e24:	4b0a      	ldr	r3, [pc, #40]	@ (8017e50 <SystemInit+0x160>)
 8017e26:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017e2a:	f022 0203 	bic.w	r2, r2, #3
 8017e2e:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017e32:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017e36:	f042 0202 	orr.w	r2, r2, #2
 8017e3a:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
 8017e3e:	f8d3 2808 	ldr.w	r2, [r3, #2056]	@ 0x808
 8017e42:	0712      	lsls	r2, r2, #28
 8017e44:	d5fb      	bpl.n	8017e3e <SystemInit+0x14e>
 8017e46:	b002      	add	sp, #8
 8017e48:	4770      	bx	lr
 8017e4a:	bf00      	nop
 8017e4c:	e000ed00 	and	lr, r0, r0, lsl #26
 8017e50:	40023000 	andmi	r3, r2, r0
 8017e54:	24003010 	strcs	r3, [r0], #-16
 8017e58:	40007000 	andmi	r7, r0, r0
 8017e5c:	0a007810 	beq	8035ea4 <_sidata+0x16cdc>

08017e60 <dma_deinit>:
 8017e60:	2318      	movs	r3, #24
 8017e62:	fb03 0301 	mla	r3, r3, r1, r0
 8017e66:	b510      	push	{r4, lr}
 8017e68:	691a      	ldr	r2, [r3, #16]
 8017e6a:	f022 0201 	bic.w	r2, r2, #1
 8017e6e:	611a      	str	r2, [r3, #16]
 8017e70:	2200      	movs	r2, #0
 8017e72:	611a      	str	r2, [r3, #16]
 8017e74:	2903      	cmp	r1, #3
 8017e76:	615a      	str	r2, [r3, #20]
 8017e78:	619a      	str	r2, [r3, #24]
 8017e7a:	61da      	str	r2, [r3, #28]
 8017e7c:	621a      	str	r2, [r3, #32]
 8017e7e:	f04f 0221 	mov.w	r2, #33	@ 0x21
 8017e82:	625a      	str	r2, [r3, #36]	@ 0x24
 8017e84:	d80a      	bhi.n	8017e9c <dma_deinit+0x3c>
 8017e86:	2406      	movs	r4, #6
 8017e88:	084b      	lsrs	r3, r1, #1
 8017e8a:	4361      	muls	r1, r4
 8017e8c:	6882      	ldr	r2, [r0, #8]
 8017e8e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8017e92:	233d      	movs	r3, #61	@ 0x3d
 8017e94:	408b      	lsls	r3, r1
 8017e96:	4313      	orrs	r3, r2
 8017e98:	6083      	str	r3, [r0, #8]
 8017e9a:	bd10      	pop	{r4, pc}
 8017e9c:	3904      	subs	r1, #4
 8017e9e:	b2ca      	uxtb	r2, r1
 8017ea0:	2306      	movs	r3, #6
 8017ea2:	435a      	muls	r2, r3
 8017ea4:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8017ea8:	68c4      	ldr	r4, [r0, #12]
 8017eaa:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8017eae:	233d      	movs	r3, #61	@ 0x3d
 8017eb0:	4093      	lsls	r3, r2
 8017eb2:	4323      	orrs	r3, r4
 8017eb4:	60c3      	str	r3, [r0, #12]
 8017eb6:	e7f0      	b.n	8017e9a <dma_deinit+0x3a>

08017eb8 <dma_single_data_mode_init>:
 8017eb8:	2318      	movs	r3, #24
 8017eba:	fb03 0101 	mla	r1, r3, r1, r0
 8017ebe:	b530      	push	{r4, r5, lr}
 8017ec0:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8017ec2:	f023 0304 	bic.w	r3, r3, #4
 8017ec6:	624b      	str	r3, [r1, #36]	@ 0x24
 8017ec8:	6813      	ldr	r3, [r2, #0]
 8017eca:	618b      	str	r3, [r1, #24]
 8017ecc:	6893      	ldr	r3, [r2, #8]
 8017ece:	61cb      	str	r3, [r1, #28]
 8017ed0:	69d3      	ldr	r3, [r2, #28]
 8017ed2:	614b      	str	r3, [r1, #20]
 8017ed4:	6914      	ldr	r4, [r2, #16]
 8017ed6:	6a13      	ldr	r3, [r2, #32]
 8017ed8:	6908      	ldr	r0, [r1, #16]
 8017eda:	6995      	ldr	r5, [r2, #24]
 8017edc:	4323      	orrs	r3, r4
 8017ede:	f420 305e 	bic.w	r0, r0, #227328	@ 0x37800
 8017ee2:	432b      	orrs	r3, r5
 8017ee4:	f020 00c0 	bic.w	r0, r0, #192	@ 0xc0
 8017ee8:	ea43 0384 	orr.w	r3, r3, r4, lsl #2
 8017eec:	4303      	orrs	r3, r0
 8017eee:	610b      	str	r3, [r1, #16]
 8017ef0:	6853      	ldr	r3, [r2, #4]
 8017ef2:	b983      	cbnz	r3, 8017f16 <dma_single_data_mode_init+0x5e>
 8017ef4:	690b      	ldr	r3, [r1, #16]
 8017ef6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8017efa:	610b      	str	r3, [r1, #16]
 8017efc:	68d3      	ldr	r3, [r2, #12]
 8017efe:	b993      	cbnz	r3, 8017f26 <dma_single_data_mode_init+0x6e>
 8017f00:	690b      	ldr	r3, [r1, #16]
 8017f02:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8017f06:	610b      	str	r3, [r1, #16]
 8017f08:	6953      	ldr	r3, [r2, #20]
 8017f0a:	b983      	cbnz	r3, 8017f2e <dma_single_data_mode_init+0x76>
 8017f0c:	690b      	ldr	r3, [r1, #16]
 8017f0e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8017f12:	610b      	str	r3, [r1, #16]
 8017f14:	bd30      	pop	{r4, r5, pc}
 8017f16:	2b01      	cmp	r3, #1
 8017f18:	690b      	ldr	r3, [r1, #16]
 8017f1a:	bf0c      	ite	eq
 8017f1c:	f423 7300 	biceq.w	r3, r3, #512	@ 0x200
 8017f20:	f443 4300 	orrne.w	r3, r3, #32768	@ 0x8000
 8017f24:	e7e9      	b.n	8017efa <dma_single_data_mode_init+0x42>
 8017f26:	690b      	ldr	r3, [r1, #16]
 8017f28:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8017f2c:	e7eb      	b.n	8017f06 <dma_single_data_mode_init+0x4e>
 8017f2e:	690b      	ldr	r3, [r1, #16]
 8017f30:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8017f34:	e7ed      	b.n	8017f12 <dma_single_data_mode_init+0x5a>

08017f36 <dma_circulation_disable>:
 8017f36:	2318      	movs	r3, #24
 8017f38:	4359      	muls	r1, r3
 8017f3a:	3010      	adds	r0, #16
 8017f3c:	580b      	ldr	r3, [r1, r0]
 8017f3e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8017f42:	500b      	str	r3, [r1, r0]
 8017f44:	4770      	bx	lr

08017f46 <dma_channel_subperipheral_select>:
 8017f46:	2318      	movs	r3, #24
 8017f48:	4359      	muls	r1, r3
 8017f4a:	3010      	adds	r0, #16
 8017f4c:	580b      	ldr	r3, [r1, r0]
 8017f4e:	f023 6360 	bic.w	r3, r3, #234881024	@ 0xe000000
 8017f52:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8017f56:	500b      	str	r3, [r1, r0]
 8017f58:	4770      	bx	lr
	...

08017f5c <enet_software_reset>:
 8017f5c:	4b07      	ldr	r3, [pc, #28]	@ (8017f7c <enet_software_reset+0x20>)
 8017f5e:	681a      	ldr	r2, [r3, #0]
 8017f60:	f042 0201 	orr.w	r2, r2, #1
 8017f64:	601a      	str	r2, [r3, #0]
 8017f66:	4a06      	ldr	r2, [pc, #24]	@ (8017f80 <enet_software_reset+0x24>)
 8017f68:	6819      	ldr	r1, [r3, #0]
 8017f6a:	07c9      	lsls	r1, r1, #31
 8017f6c:	d501      	bpl.n	8017f72 <enet_software_reset+0x16>
 8017f6e:	3a01      	subs	r2, #1
 8017f70:	d1fa      	bne.n	8017f68 <enet_software_reset+0xc>
 8017f72:	6818      	ldr	r0, [r3, #0]
 8017f74:	43c0      	mvns	r0, r0
 8017f76:	f000 0001 	and.w	r0, r0, #1
 8017f7a:	4770      	bx	lr
 8017f7c:	40029000 	andmi	r9, r2, r0
 8017f80:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08017f84 <enet_descriptors_chain_init>:
 8017f84:	f5b0 0fe0 	cmp.w	r0, #7340032	@ 0x700000
 8017f88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f8a:	4a19      	ldr	r2, [pc, #100]	@ (8017ff0 <enet_descriptors_chain_init+0x6c>)
 8017f8c:	d125      	bne.n	8017fda <enet_descriptors_chain_init+0x56>
 8017f8e:	4b19      	ldr	r3, [pc, #100]	@ (8017ff4 <enet_descriptors_chain_init+0x70>)
 8017f90:	6113      	str	r3, [r2, #16]
 8017f92:	4a19      	ldr	r2, [pc, #100]	@ (8017ff8 <enet_descriptors_chain_init+0x74>)
 8017f94:	4c19      	ldr	r4, [pc, #100]	@ (8017ffc <enet_descriptors_chain_init+0x78>)
 8017f96:	6013      	str	r3, [r2, #0]
 8017f98:	2500      	movs	r5, #0
 8017f9a:	f44f 1680 	mov.w	r6, #1048576	@ 0x100000
 8017f9e:	2004      	movs	r0, #4
 8017fa0:	4917      	ldr	r1, [pc, #92]	@ (8018000 <enet_descriptors_chain_init+0x7c>)
 8017fa2:	2200      	movs	r2, #0
 8017fa4:	600a      	str	r2, [r1, #0]
 8017fa6:	4917      	ldr	r1, [pc, #92]	@ (8018004 <enet_descriptors_chain_init+0x80>)
 8017fa8:	f240 5ef4 	movw	lr, #1524	@ 0x5f4
 8017fac:	600a      	str	r2, [r1, #0]
 8017fae:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8017fb2:	f103 0110 	add.w	r1, r3, #16
 8017fb6:	fb0e 4702 	mla	r7, lr, r2, r4
 8017fba:	f841 7c08 	str.w	r7, [r1, #-8]
 8017fbe:	4594      	cmp	ip, r2
 8017fc0:	bf94      	ite	ls
 8017fc2:	461f      	movls	r7, r3
 8017fc4:	460f      	movhi	r7, r1
 8017fc6:	3201      	adds	r2, #1
 8017fc8:	4290      	cmp	r0, r2
 8017fca:	e941 6504 	strd	r6, r5, [r1, #-16]
 8017fce:	f841 7c04 	str.w	r7, [r1, #-4]
 8017fd2:	f101 0110 	add.w	r1, r1, #16
 8017fd6:	d1ee      	bne.n	8017fb6 <enet_descriptors_chain_init+0x32>
 8017fd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017fda:	4b0b      	ldr	r3, [pc, #44]	@ (8018008 <enet_descriptors_chain_init+0x84>)
 8017fdc:	60d3      	str	r3, [r2, #12]
 8017fde:	4a0b      	ldr	r2, [pc, #44]	@ (801800c <enet_descriptors_chain_init+0x88>)
 8017fe0:	4c0b      	ldr	r4, [pc, #44]	@ (8018010 <enet_descriptors_chain_init+0x8c>)
 8017fe2:	6013      	str	r3, [r2, #0]
 8017fe4:	f244 55f4 	movw	r5, #17908	@ 0x45f4
 8017fe8:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 8017fec:	2010      	movs	r0, #16
 8017fee:	e7d7      	b.n	8017fa0 <enet_descriptors_chain_init+0x1c>
 8017ff0:	40029000 	andmi	r9, r2, r0
 8017ff4:	2000a26c 	andcs	sl, r0, ip, ror #4
 8017ff8:	20002b58 	andcs	r2, r0, r8, asr fp
 8017ffc:	20002b5c 	andcs	r2, r0, ip, asr fp
 8018000:	20002b4c 	andcs	r2, r0, ip, asr #22
 8018004:	20002b50 	andcs	r2, r0, r0, asr fp
 8018008:	2000a2ac 	andcs	sl, r0, ip, lsr #5
 801800c:	20002b54 	andcs	r2, r0, r4, asr fp
 8018010:	2000432c 	andcs	r4, r0, ip, lsr #6

08018014 <enet_transmit_checksum_config>:
 8018014:	6803      	ldr	r3, [r0, #0]
 8018016:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 801801a:	430b      	orrs	r3, r1
 801801c:	6003      	str	r3, [r0, #0]
 801801e:	4770      	bx	lr

08018020 <enet_mac_address_set>:
 8018020:	4b03      	ldr	r3, [pc, #12]	@ (8018030 <enet_mac_address_set+0x10>)
 8018022:	888a      	ldrh	r2, [r1, #4]
 8018024:	50c2      	str	r2, [r0, r3]
 8018026:	3304      	adds	r3, #4
 8018028:	680a      	ldr	r2, [r1, #0]
 801802a:	50c2      	str	r2, [r0, r3]
 801802c:	4770      	bx	lr
 801802e:	bf00      	nop
 8018030:	40028040 	andmi	r8, r2, r0, asr #32

08018034 <enet_rx_enable>:
 8018034:	4a05      	ldr	r2, [pc, #20]	@ (801804c <enet_rx_enable+0x18>)
 8018036:	6813      	ldr	r3, [r2, #0]
 8018038:	f043 0304 	orr.w	r3, r3, #4
 801803c:	6013      	str	r3, [r2, #0]
 801803e:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8018042:	6993      	ldr	r3, [r2, #24]
 8018044:	f043 0302 	orr.w	r3, r3, #2
 8018048:	6193      	str	r3, [r2, #24]
 801804a:	4770      	bx	lr
 801804c:	40028000 	andmi	r8, r2, r0

08018050 <enet_phy_write_read>:
 8018050:	b530      	push	{r4, r5, lr}
 8018052:	4d12      	ldr	r5, [pc, #72]	@ (801809c <enet_phy_write_read+0x4c>)
 8018054:	4604      	mov	r4, r0
 8018056:	6928      	ldr	r0, [r5, #16]
 8018058:	0192      	lsls	r2, r2, #6
 801805a:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 801805e:	f402 62f8 	and.w	r2, r2, #1984	@ 0x7c0
 8018062:	f020 00c3 	bic.w	r0, r0, #195	@ 0xc3
 8018066:	4302      	orrs	r2, r0
 8018068:	02c9      	lsls	r1, r1, #11
 801806a:	b289      	uxth	r1, r1
 801806c:	4322      	orrs	r2, r4
 801806e:	430a      	orrs	r2, r1
 8018070:	2c02      	cmp	r4, #2
 8018072:	bf04      	itt	eq
 8018074:	8819      	ldrheq	r1, [r3, #0]
 8018076:	6169      	streq	r1, [r5, #20]
 8018078:	f042 0201 	orr.w	r2, r2, #1
 801807c:	612a      	str	r2, [r5, #16]
 801807e:	4907      	ldr	r1, [pc, #28]	@ (801809c <enet_phy_write_read+0x4c>)
 8018080:	4a07      	ldr	r2, [pc, #28]	@ (80180a0 <enet_phy_write_read+0x50>)
 8018082:	6908      	ldr	r0, [r1, #16]
 8018084:	07c0      	lsls	r0, r0, #31
 8018086:	d501      	bpl.n	801808c <enet_phy_write_read+0x3c>
 8018088:	3a01      	subs	r2, #1
 801808a:	d1fa      	bne.n	8018082 <enet_phy_write_read+0x32>
 801808c:	690a      	ldr	r2, [r1, #16]
 801808e:	43d2      	mvns	r2, r2
 8018090:	f002 0001 	and.w	r0, r2, #1
 8018094:	b90c      	cbnz	r4, 801809a <enet_phy_write_read+0x4a>
 8018096:	694a      	ldr	r2, [r1, #20]
 8018098:	801a      	strh	r2, [r3, #0]
 801809a:	bd30      	pop	{r4, r5, pc}
 801809c:	40028000 	andmi	r8, r2, r0
 80180a0:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

080180a4 <enet_init>:
 80180a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80180a6:	4616      	mov	r6, r2
 80180a8:	4a9d      	ldr	r2, [pc, #628]	@ (8018320 <enet_init+0x27c>)
 80180aa:	460d      	mov	r5, r1
 80180ac:	6814      	ldr	r4, [r2, #0]
 80180ae:	499d      	ldr	r1, [pc, #628]	@ (8018324 <enet_init+0x280>)
 80180b0:	2300      	movs	r3, #0
 80180b2:	4021      	ands	r1, r4
 80180b4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80180b8:	6011      	str	r1, [r2, #0]
 80180ba:	6053      	str	r3, [r2, #4]
 80180bc:	6093      	str	r3, [r2, #8]
 80180be:	60d3      	str	r3, [r2, #12]
 80180c0:	6991      	ldr	r1, [r2, #24]
 80180c2:	f021 01be 	bic.w	r1, r1, #190	@ 0xbe
 80180c6:	0409      	lsls	r1, r1, #16
 80180c8:	0c09      	lsrs	r1, r1, #16
 80180ca:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 80180ce:	6191      	str	r1, [r2, #24]
 80180d0:	4995      	ldr	r1, [pc, #596]	@ (8018328 <enet_init+0x284>)
 80180d2:	61d3      	str	r3, [r2, #28]
 80180d4:	698c      	ldr	r4, [r1, #24]
 80180d6:	4a95      	ldr	r2, [pc, #596]	@ (801832c <enet_init+0x288>)
 80180d8:	4022      	ands	r2, r4
 80180da:	f042 7208 	orr.w	r2, r2, #35651584	@ 0x2200000
 80180de:	618a      	str	r2, [r1, #24]
 80180e0:	680a      	ldr	r2, [r1, #0]
 80180e2:	4a93      	ldr	r2, [pc, #588]	@ (8018330 <enet_init+0x28c>)
 80180e4:	600a      	str	r2, [r1, #0]
 80180e6:	2801      	cmp	r0, #1
 80180e8:	d146      	bne.n	8018178 <enet_init+0xd4>
 80180ea:	4f92      	ldr	r7, [pc, #584]	@ (8018334 <enet_init+0x290>)
 80180ec:	461c      	mov	r4, r3
 80180ee:	2201      	movs	r2, #1
 80180f0:	4611      	mov	r1, r2
 80180f2:	f10d 0306 	add.w	r3, sp, #6
 80180f6:	2000      	movs	r0, #0
 80180f8:	f7ff ffaa 	bl	8018050 <enet_phy_write_read>
 80180fc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8018100:	f002 0204 	and.w	r2, r2, #4
 8018104:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018108:	3401      	adds	r4, #1
 801810a:	b922      	cbnz	r2, 8018116 <enet_init+0x72>
 801810c:	42bc      	cmp	r4, r7
 801810e:	d1ee      	bne.n	80180ee <enet_init+0x4a>
 8018110:	2000      	movs	r0, #0
 8018112:	b003      	add	sp, #12
 8018114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018116:	42bc      	cmp	r4, r7
 8018118:	d0fa      	beq.n	8018110 <enet_init+0x6c>
 801811a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 801811e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018122:	2101      	movs	r1, #1
 8018124:	2200      	movs	r2, #0
 8018126:	2002      	movs	r0, #2
 8018128:	f7ff ff92 	bl	8018050 <enet_phy_write_read>
 801812c:	2800      	cmp	r0, #0
 801812e:	d0ef      	beq.n	8018110 <enet_init+0x6c>
 8018130:	4f80      	ldr	r7, [pc, #512]	@ (8018334 <enet_init+0x290>)
 8018132:	2400      	movs	r4, #0
 8018134:	2201      	movs	r2, #1
 8018136:	4611      	mov	r1, r2
 8018138:	f10d 0306 	add.w	r3, sp, #6
 801813c:	2000      	movs	r0, #0
 801813e:	f7ff ff87 	bl	8018050 <enet_phy_write_read>
 8018142:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8018146:	f002 0220 	and.w	r2, r2, #32
 801814a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801814e:	3401      	adds	r4, #1
 8018150:	b912      	cbnz	r2, 8018158 <enet_init+0xb4>
 8018152:	42bc      	cmp	r4, r7
 8018154:	d1ee      	bne.n	8018134 <enet_init+0x90>
 8018156:	e7db      	b.n	8018110 <enet_init+0x6c>
 8018158:	42bc      	cmp	r4, r7
 801815a:	d0d9      	beq.n	8018110 <enet_init+0x6c>
 801815c:	2101      	movs	r1, #1
 801815e:	2210      	movs	r2, #16
 8018160:	2000      	movs	r0, #0
 8018162:	f7ff ff75 	bl	8018050 <enet_phy_write_read>
 8018166:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801816a:	f3c3 0080 	ubfx	r0, r3, #2, #1
 801816e:	02c0      	lsls	r0, r0, #11
 8018170:	0799      	lsls	r1, r3, #30
 8018172:	bf58      	it	pl
 8018174:	f440 4080 	orrpl.w	r0, r0, #16384	@ 0x4000
 8018178:	4b69      	ldr	r3, [pc, #420]	@ (8018320 <enet_init+0x27c>)
 801817a:	681a      	ldr	r2, [r3, #0]
 801817c:	f422 42b0 	bic.w	r2, r2, #22528	@ 0x5800
 8018180:	4310      	orrs	r0, r2
 8018182:	056a      	lsls	r2, r5, #21
 8018184:	6018      	str	r0, [r3, #0]
 8018186:	d50b      	bpl.n	80181a0 <enet_init+0xfc>
 8018188:	681a      	ldr	r2, [r3, #0]
 801818a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 801818e:	601a      	str	r2, [r3, #0]
 8018190:	4a65      	ldr	r2, [pc, #404]	@ (8018328 <enet_init+0x284>)
 8018192:	6993      	ldr	r3, [r2, #24]
 8018194:	f005 6580 	and.w	r5, r5, #67108864	@ 0x4000000
 8018198:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 801819c:	431d      	orrs	r5, r3
 801819e:	6195      	str	r5, [r2, #24]
 80181a0:	485f      	ldr	r0, [pc, #380]	@ (8018320 <enet_init+0x27c>)
 80181a2:	6843      	ldr	r3, [r0, #4]
 80181a4:	431e      	orrs	r6, r3
 80181a6:	4b64      	ldr	r3, [pc, #400]	@ (8018338 <enet_init+0x294>)
 80181a8:	6046      	str	r6, [r0, #4]
 80181aa:	681a      	ldr	r2, [r3, #0]
 80181ac:	07d7      	lsls	r7, r2, #31
 80181ae:	d513      	bpl.n	80181d8 <enet_init+0x134>
 80181b0:	6801      	ldr	r1, [r0, #0]
 80181b2:	685a      	ldr	r2, [r3, #4]
 80181b4:	4c61      	ldr	r4, [pc, #388]	@ (801833c <enet_init+0x298>)
 80181b6:	f021 7100 	bic.w	r1, r1, #33554432	@ 0x2000000
 80181ba:	4014      	ands	r4, r2
 80181bc:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 80181c0:	4321      	orrs	r1, r4
 80181c2:	6001      	str	r1, [r0, #0]
 80181c4:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 80181c8:	0892      	lsrs	r2, r2, #2
 80181ca:	6981      	ldr	r1, [r0, #24]
 80181cc:	f002 02c0 	and.w	r2, r2, #192	@ 0xc0
 80181d0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80181d4:	430a      	orrs	r2, r1
 80181d6:	6182      	str	r2, [r0, #24]
 80181d8:	681a      	ldr	r2, [r3, #0]
 80181da:	0796      	lsls	r6, r2, #30
 80181dc:	d508      	bpl.n	80181f0 <enet_init+0x14c>
 80181de:	4952      	ldr	r1, [pc, #328]	@ (8018328 <enet_init+0x284>)
 80181e0:	6898      	ldr	r0, [r3, #8]
 80181e2:	680a      	ldr	r2, [r1, #0]
 80181e4:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 80181e8:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80181ec:	4302      	orrs	r2, r0
 80181ee:	600a      	str	r2, [r1, #0]
 80181f0:	681a      	ldr	r2, [r3, #0]
 80181f2:	0755      	lsls	r5, r2, #29
 80181f4:	d508      	bpl.n	8018208 <enet_init+0x164>
 80181f6:	494c      	ldr	r1, [pc, #304]	@ (8018328 <enet_init+0x284>)
 80181f8:	68d8      	ldr	r0, [r3, #12]
 80181fa:	680a      	ldr	r2, [r1, #0]
 80181fc:	f422 027e 	bic.w	r2, r2, #16646144	@ 0xfe0000
 8018200:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 8018204:	4302      	orrs	r2, r0
 8018206:	600a      	str	r2, [r1, #0]
 8018208:	681a      	ldr	r2, [r3, #0]
 801820a:	0714      	lsls	r4, r2, #28
 801820c:	d508      	bpl.n	8018220 <enet_init+0x17c>
 801820e:	4946      	ldr	r1, [pc, #280]	@ (8018328 <enet_init+0x284>)
 8018210:	6918      	ldr	r0, [r3, #16]
 8018212:	680a      	ldr	r2, [r1, #0]
 8018214:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8018218:	f022 0202 	bic.w	r2, r2, #2
 801821c:	4302      	orrs	r2, r0
 801821e:	600a      	str	r2, [r1, #0]
 8018220:	681a      	ldr	r2, [r3, #0]
 8018222:	06d0      	lsls	r0, r2, #27
 8018224:	d506      	bpl.n	8018234 <enet_init+0x190>
 8018226:	4940      	ldr	r1, [pc, #256]	@ (8018328 <enet_init+0x284>)
 8018228:	4a45      	ldr	r2, [pc, #276]	@ (8018340 <enet_init+0x29c>)
 801822a:	6988      	ldr	r0, [r1, #24]
 801822c:	4002      	ands	r2, r0
 801822e:	6958      	ldr	r0, [r3, #20]
 8018230:	4302      	orrs	r2, r0
 8018232:	618a      	str	r2, [r1, #24]
 8018234:	681a      	ldr	r2, [r3, #0]
 8018236:	0691      	lsls	r1, r2, #26
 8018238:	d511      	bpl.n	801825e <enet_init+0x1ba>
 801823a:	483b      	ldr	r0, [pc, #236]	@ (8018328 <enet_init+0x284>)
 801823c:	699a      	ldr	r2, [r3, #24]
 801823e:	6981      	ldr	r1, [r0, #24]
 8018240:	4c40      	ldr	r4, [pc, #256]	@ (8018344 <enet_init+0x2a0>)
 8018242:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
 8018246:	4014      	ands	r4, r2
 8018248:	f021 0104 	bic.w	r1, r1, #4
 801824c:	4321      	orrs	r1, r4
 801824e:	6181      	str	r1, [r0, #24]
 8018250:	6801      	ldr	r1, [r0, #0]
 8018252:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8018256:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 801825a:	430a      	orrs	r2, r1
 801825c:	6002      	str	r2, [r0, #0]
 801825e:	681a      	ldr	r2, [r3, #0]
 8018260:	0652      	lsls	r2, r2, #25
 8018262:	d506      	bpl.n	8018272 <enet_init+0x1ce>
 8018264:	492e      	ldr	r1, [pc, #184]	@ (8018320 <enet_init+0x27c>)
 8018266:	69d8      	ldr	r0, [r3, #28]
 8018268:	69ca      	ldr	r2, [r1, #28]
 801826a:	f36f 0210 	bfc	r2, #0, #17
 801826e:	4302      	orrs	r2, r0
 8018270:	61ca      	str	r2, [r1, #28]
 8018272:	681a      	ldr	r2, [r3, #0]
 8018274:	0617      	lsls	r7, r2, #24
 8018276:	d517      	bpl.n	80182a8 <enet_init+0x204>
 8018278:	4c29      	ldr	r4, [pc, #164]	@ (8018320 <enet_init+0x27c>)
 801827a:	6a1a      	ldr	r2, [r3, #32]
 801827c:	69a0      	ldr	r0, [r4, #24]
 801827e:	f020 00be 	bic.w	r0, r0, #190	@ 0xbe
 8018282:	f422 417f 	bic.w	r1, r2, #65280	@ 0xff00
 8018286:	0400      	lsls	r0, r0, #16
 8018288:	0c00      	lsrs	r0, r0, #16
 801828a:	f021 0141 	bic.w	r1, r1, #65	@ 0x41
 801828e:	4301      	orrs	r1, r0
 8018290:	4825      	ldr	r0, [pc, #148]	@ (8018328 <enet_init+0x284>)
 8018292:	61a1      	str	r1, [r4, #24]
 8018294:	f8d0 1080 	ldr.w	r1, [r0, #128]	@ 0x80
 8018298:	0a12      	lsrs	r2, r2, #8
 801829a:	f021 0177 	bic.w	r1, r1, #119	@ 0x77
 801829e:	f002 0277 	and.w	r2, r2, #119	@ 0x77
 80182a2:	430a      	orrs	r2, r1
 80182a4:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 80182a8:	681a      	ldr	r2, [r3, #0]
 80182aa:	05d6      	lsls	r6, r2, #23
 80182ac:	bf42      	ittt	mi
 80182ae:	4a1c      	ldrmi	r2, [pc, #112]	@ (8018320 <enet_init+0x27c>)
 80182b0:	6a59      	ldrmi	r1, [r3, #36]	@ 0x24
 80182b2:	6091      	strmi	r1, [r2, #8]
 80182b4:	681a      	ldr	r2, [r3, #0]
 80182b6:	0595      	lsls	r5, r2, #22
 80182b8:	bf42      	ittt	mi
 80182ba:	4a19      	ldrmi	r2, [pc, #100]	@ (8018320 <enet_init+0x27c>)
 80182bc:	6a99      	ldrmi	r1, [r3, #40]	@ 0x28
 80182be:	60d1      	strmi	r1, [r2, #12]
 80182c0:	681a      	ldr	r2, [r3, #0]
 80182c2:	0554      	lsls	r4, r2, #21
 80182c4:	d508      	bpl.n	80182d8 <enet_init+0x234>
 80182c6:	4916      	ldr	r1, [pc, #88]	@ (8018320 <enet_init+0x27c>)
 80182c8:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 80182ca:	684a      	ldr	r2, [r1, #4]
 80182cc:	f422 62fb 	bic.w	r2, r2, #2008	@ 0x7d8
 80182d0:	f022 0206 	bic.w	r2, r2, #6
 80182d4:	4302      	orrs	r2, r0
 80182d6:	604a      	str	r2, [r1, #4]
 80182d8:	681a      	ldr	r2, [r3, #0]
 80182da:	0510      	lsls	r0, r2, #20
 80182dc:	d508      	bpl.n	80182f0 <enet_init+0x24c>
 80182de:	4910      	ldr	r1, [pc, #64]	@ (8018320 <enet_init+0x27c>)
 80182e0:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 80182e2:	680a      	ldr	r2, [r1, #0]
 80182e4:	f422 3291 	bic.w	r2, r2, #74240	@ 0x12200
 80182e8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80182ec:	4302      	orrs	r2, r0
 80182ee:	600a      	str	r2, [r1, #0]
 80182f0:	681a      	ldr	r2, [r3, #0]
 80182f2:	04d1      	lsls	r1, r2, #19
 80182f4:	d506      	bpl.n	8018304 <enet_init+0x260>
 80182f6:	490a      	ldr	r1, [pc, #40]	@ (8018320 <enet_init+0x27c>)
 80182f8:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 80182fa:	680a      	ldr	r2, [r1, #0]
 80182fc:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 8018300:	4302      	orrs	r2, r0
 8018302:	600a      	str	r2, [r1, #0]
 8018304:	681a      	ldr	r2, [r3, #0]
 8018306:	0492      	lsls	r2, r2, #18
 8018308:	d401      	bmi.n	801830e <enet_init+0x26a>
 801830a:	2001      	movs	r0, #1
 801830c:	e701      	b.n	8018112 <enet_init+0x6e>
 801830e:	4904      	ldr	r1, [pc, #16]	@ (8018320 <enet_init+0x27c>)
 8018310:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018312:	680a      	ldr	r2, [r1, #0]
 8018314:	f422 2260 	bic.w	r2, r2, #917504	@ 0xe0000
 8018318:	4313      	orrs	r3, r2
 801831a:	600b      	str	r3, [r1, #0]
 801831c:	e7f5      	b.n	801830a <enet_init+0x266>
 801831e:	bf00      	nop
 8018320:	40028000 	andmi	r8, r2, r0
 8018324:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	@ 0xffffffc4
 8018328:	40029000 	andmi	r9, r2, r0
 801832c:	f8de3f23 			@ <UNDEFINED> instruction: 0xf8de3f23
 8018330:	02c16000 	sbceq	r6, r1, #0
 8018334:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>
 8018338:	20002b10 	andcs	r2, r0, r0, lsl fp
 801833c:	02000080 	andeq	r0, r0, #128	@ 0x80
 8018340:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	@ 0x39c
 8018344:	01000004 	tsteq	r0, r4

08018348 <enet_txfifo_flush>:
 8018348:	4a08      	ldr	r2, [pc, #32]	@ (801836c <enet_txfifo_flush+0x24>)
 801834a:	6993      	ldr	r3, [r2, #24]
 801834c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8018350:	6193      	str	r3, [r2, #24]
 8018352:	4b07      	ldr	r3, [pc, #28]	@ (8018370 <enet_txfifo_flush+0x28>)
 8018354:	6990      	ldr	r0, [r2, #24]
 8018356:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
 801835a:	d003      	beq.n	8018364 <enet_txfifo_flush+0x1c>
 801835c:	3b01      	subs	r3, #1
 801835e:	d1f9      	bne.n	8018354 <enet_txfifo_flush+0xc>
 8018360:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8018364:	fab0 f080 	clz	r0, r0
 8018368:	0940      	lsrs	r0, r0, #5
 801836a:	4770      	bx	lr
 801836c:	40029000 	andmi	r9, r2, r0
 8018370:	0004ffff 	strdeq	pc, [r4], -pc	@ <UNPREDICTABLE>

08018374 <enet_tx_enable>:
 8018374:	4a06      	ldr	r2, [pc, #24]	@ (8018390 <enet_tx_enable+0x1c>)
 8018376:	b508      	push	{r3, lr}
 8018378:	6813      	ldr	r3, [r2, #0]
 801837a:	f043 0308 	orr.w	r3, r3, #8
 801837e:	6013      	str	r3, [r2, #0]
 8018380:	f7ff ffe2 	bl	8018348 <enet_txfifo_flush>
 8018384:	4a03      	ldr	r2, [pc, #12]	@ (8018394 <enet_tx_enable+0x20>)
 8018386:	6993      	ldr	r3, [r2, #24]
 8018388:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801838c:	6193      	str	r3, [r2, #24]
 801838e:	bd08      	pop	{r3, pc}
 8018390:	40028000 	andmi	r8, r2, r0
 8018394:	40029000 	andmi	r9, r2, r0

08018398 <enet_enable>:
 8018398:	b508      	push	{r3, lr}
 801839a:	f7ff ffeb 	bl	8018374 <enet_tx_enable>
 801839e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80183a2:	f7ff be47 	b.w	8018034 <enet_rx_enable>
	...

080183a8 <enet_desc_information_get>:
 80183a8:	2905      	cmp	r1, #5
 80183aa:	d820      	bhi.n	80183ee <enet_desc_information_get+0x46>
 80183ac:	e8df f001 	tbb	[pc, r1]
 80183b0:	0309191b 	movweq	r1, #39195	@ 0x991b
 80183b4:	68401907 	stmdavs	r0, {r0, r1, r2, r8, fp, ip}^
 80183b8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80183bc:	4770      	bx	lr
 80183be:	88c0      	ldrh	r0, [r0, #6]
 80183c0:	e7fa      	b.n	80183b8 <enet_desc_information_get+0x10>
 80183c2:	6802      	ldr	r2, [r0, #0]
 80183c4:	f3c2 430d 	ubfx	r3, r2, #16, #14
 80183c8:	2b04      	cmp	r3, #4
 80183ca:	d913      	bls.n	80183f4 <enet_desc_information_get+0x4c>
 80183cc:	490a      	ldr	r1, [pc, #40]	@ (80183f8 <enet_desc_information_get+0x50>)
 80183ce:	6809      	ldr	r1, [r1, #0]
 80183d0:	0189      	lsls	r1, r1, #6
 80183d2:	f1a3 0004 	sub.w	r0, r3, #4
 80183d6:	d50e      	bpl.n	80183f6 <enet_desc_information_get+0x4e>
 80183d8:	f012 0f20 	tst.w	r2, #32
 80183dc:	bf18      	it	ne
 80183de:	4618      	movne	r0, r3
 80183e0:	4770      	bx	lr
 80183e2:	6880      	ldr	r0, [r0, #8]
 80183e4:	4770      	bx	lr
 80183e6:	6800      	ldr	r0, [r0, #0]
 80183e8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80183ec:	4770      	bx	lr
 80183ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80183f2:	4770      	bx	lr
 80183f4:	2000      	movs	r0, #0
 80183f6:	4770      	bx	lr
 80183f8:	40028000 	andmi	r8, r2, r0

080183fc <enet_initpara_reset>:
 80183fc:	4b08      	ldr	r3, [pc, #32]	@ (8018420 <enet_initpara_reset+0x24>)
 80183fe:	2200      	movs	r2, #0
 8018400:	e9c3 2200 	strd	r2, r2, [r3]
 8018404:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8018408:	e9c3 2204 	strd	r2, r2, [r3, #16]
 801840c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8018410:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8018414:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
 8018418:	e9c3 220c 	strd	r2, r2, [r3, #48]	@ 0x30
 801841c:	639a      	str	r2, [r3, #56]	@ 0x38
 801841e:	4770      	bx	lr
 8018420:	20002b10 	andcs	r2, r0, r0, lsl fp

08018424 <enet_deinit>:
 8018424:	b508      	push	{r3, lr}
 8018426:	f240 4019 	movw	r0, #1049	@ 0x419
 801842a:	f000 f8e4 	bl	80185f6 <rcu_periph_reset_enable>
 801842e:	f240 4019 	movw	r0, #1049	@ 0x419
 8018432:	f000 f8e2 	bl	80185fa <rcu_periph_reset_disable>
 8018436:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801843a:	f7ff bfdf 	b.w	80183fc <enet_initpara_reset>
	...

08018440 <fwdgt_enable>:
 8018440:	4b02      	ldr	r3, [pc, #8]	@ (801844c <fwdgt_enable+0xc>)
 8018442:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
 8018446:	601a      	str	r2, [r3, #0]
 8018448:	4770      	bx	lr
 801844a:	bf00      	nop
 801844c:	40003000 	andmi	r3, r0, r0

08018450 <fwdgt_counter_reload>:
 8018450:	4b02      	ldr	r3, [pc, #8]	@ (801845c <fwdgt_counter_reload+0xc>)
 8018452:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
 8018456:	601a      	str	r2, [r3, #0]
 8018458:	4770      	bx	lr
 801845a:	bf00      	nop
 801845c:	40003000 	andmi	r3, r0, r0

08018460 <fwdgt_config>:
 8018460:	4a12      	ldr	r2, [pc, #72]	@ (80184ac <fwdgt_config+0x4c>)
 8018462:	b510      	push	{r4, lr}
 8018464:	f245 5355 	movw	r3, #21845	@ 0x5555
 8018468:	4c11      	ldr	r4, [pc, #68]	@ (80184b0 <fwdgt_config+0x50>)
 801846a:	6013      	str	r3, [r2, #0]
 801846c:	68d3      	ldr	r3, [r2, #12]
 801846e:	3c01      	subs	r4, #1
 8018470:	f003 0301 	and.w	r3, r3, #1
 8018474:	d013      	beq.n	801849e <fwdgt_config+0x3e>
 8018476:	2b00      	cmp	r3, #0
 8018478:	d1f8      	bne.n	801846c <fwdgt_config+0xc>
 801847a:	6051      	str	r1, [r2, #4]
 801847c:	490c      	ldr	r1, [pc, #48]	@ (80184b0 <fwdgt_config+0x50>)
 801847e:	4a0b      	ldr	r2, [pc, #44]	@ (80184ac <fwdgt_config+0x4c>)
 8018480:	68d3      	ldr	r3, [r2, #12]
 8018482:	3901      	subs	r1, #1
 8018484:	f003 0302 	and.w	r3, r3, #2
 8018488:	d00d      	beq.n	80184a6 <fwdgt_config+0x46>
 801848a:	2b00      	cmp	r3, #0
 801848c:	d1f8      	bne.n	8018480 <fwdgt_config+0x20>
 801848e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8018492:	f64a 23aa 	movw	r3, #43690	@ 0xaaaa
 8018496:	6090      	str	r0, [r2, #8]
 8018498:	6013      	str	r3, [r2, #0]
 801849a:	2001      	movs	r0, #1
 801849c:	e002      	b.n	80184a4 <fwdgt_config+0x44>
 801849e:	2b00      	cmp	r3, #0
 80184a0:	d0eb      	beq.n	801847a <fwdgt_config+0x1a>
 80184a2:	2000      	movs	r0, #0
 80184a4:	bd10      	pop	{r4, pc}
 80184a6:	2b00      	cmp	r3, #0
 80184a8:	d1fb      	bne.n	80184a2 <fwdgt_config+0x42>
 80184aa:	e7f0      	b.n	801848e <fwdgt_config+0x2e>
 80184ac:	40003000 	andmi	r3, r0, r0
 80184b0:	000fffff 	strdeq	pc, [pc], -pc	@ <UNPREDICTABLE>

080184b4 <gpio_mode_set>:
 80184b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80184b8:	6805      	ldr	r5, [r0, #0]
 80184ba:	68c4      	ldr	r4, [r0, #12]
 80184bc:	2600      	movs	r6, #0
 80184be:	f04f 0e01 	mov.w	lr, #1
 80184c2:	f04f 0803 	mov.w	r8, #3
 80184c6:	fa0e f706 	lsl.w	r7, lr, r6
 80184ca:	421f      	tst	r7, r3
 80184cc:	d00d      	beq.n	80184ea <gpio_mode_set+0x36>
 80184ce:	0077      	lsls	r7, r6, #1
 80184d0:	fa08 fc07 	lsl.w	ip, r8, r7
 80184d4:	fa01 f907 	lsl.w	r9, r1, r7
 80184d8:	ea25 050c 	bic.w	r5, r5, ip
 80184dc:	ea24 040c 	bic.w	r4, r4, ip
 80184e0:	fa02 f707 	lsl.w	r7, r2, r7
 80184e4:	ea49 0505 	orr.w	r5, r9, r5
 80184e8:	433c      	orrs	r4, r7
 80184ea:	3601      	adds	r6, #1
 80184ec:	2e10      	cmp	r6, #16
 80184ee:	d1ea      	bne.n	80184c6 <gpio_mode_set+0x12>
 80184f0:	6005      	str	r5, [r0, #0]
 80184f2:	60c4      	str	r4, [r0, #12]
 80184f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080184f8 <gpio_output_options_set>:
 80184f8:	2901      	cmp	r1, #1
 80184fa:	6841      	ldr	r1, [r0, #4]
 80184fc:	bf0c      	ite	eq
 80184fe:	4319      	orreq	r1, r3
 8018500:	4399      	bicne	r1, r3
 8018502:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018504:	6041      	str	r1, [r0, #4]
 8018506:	6881      	ldr	r1, [r0, #8]
 8018508:	2400      	movs	r4, #0
 801850a:	2601      	movs	r6, #1
 801850c:	2703      	movs	r7, #3
 801850e:	fa06 f504 	lsl.w	r5, r6, r4
 8018512:	421d      	tst	r5, r3
 8018514:	d007      	beq.n	8018526 <gpio_output_options_set+0x2e>
 8018516:	0065      	lsls	r5, r4, #1
 8018518:	fa07 fc05 	lsl.w	ip, r7, r5
 801851c:	ea21 010c 	bic.w	r1, r1, ip
 8018520:	fa02 f505 	lsl.w	r5, r2, r5
 8018524:	4329      	orrs	r1, r5
 8018526:	3401      	adds	r4, #1
 8018528:	2c10      	cmp	r4, #16
 801852a:	d1f0      	bne.n	801850e <gpio_output_options_set+0x16>
 801852c:	6081      	str	r1, [r0, #8]
 801852e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018530 <gpio_bit_set>:
 8018530:	6181      	str	r1, [r0, #24]
 8018532:	4770      	bx	lr

08018534 <gpio_bit_reset>:
 8018534:	6281      	str	r1, [r0, #40]	@ 0x28
 8018536:	4770      	bx	lr

08018538 <gpio_af_set>:
 8018538:	b5f0      	push	{r4, r5, r6, r7, lr}
 801853a:	6a06      	ldr	r6, [r0, #32]
 801853c:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 801853e:	2300      	movs	r3, #0
 8018540:	f04f 0c01 	mov.w	ip, #1
 8018544:	f04f 0e0f 	mov.w	lr, #15
 8018548:	fa0c f403 	lsl.w	r4, ip, r3
 801854c:	4214      	tst	r4, r2
 801854e:	d007      	beq.n	8018560 <gpio_af_set+0x28>
 8018550:	009c      	lsls	r4, r3, #2
 8018552:	fa0e f704 	lsl.w	r7, lr, r4
 8018556:	ea26 0607 	bic.w	r6, r6, r7
 801855a:	fa01 f404 	lsl.w	r4, r1, r4
 801855e:	4326      	orrs	r6, r4
 8018560:	3301      	adds	r3, #1
 8018562:	2b08      	cmp	r3, #8
 8018564:	d1f0      	bne.n	8018548 <gpio_af_set+0x10>
 8018566:	2300      	movs	r3, #0
 8018568:	f04f 0c01 	mov.w	ip, #1
 801856c:	f04f 0e0f 	mov.w	lr, #15
 8018570:	f103 0408 	add.w	r4, r3, #8
 8018574:	fa0c f404 	lsl.w	r4, ip, r4
 8018578:	4214      	tst	r4, r2
 801857a:	d007      	beq.n	801858c <gpio_af_set+0x54>
 801857c:	009c      	lsls	r4, r3, #2
 801857e:	fa0e f704 	lsl.w	r7, lr, r4
 8018582:	ea25 0507 	bic.w	r5, r5, r7
 8018586:	fa01 f404 	lsl.w	r4, r1, r4
 801858a:	4325      	orrs	r5, r4
 801858c:	3301      	adds	r3, #1
 801858e:	2b08      	cmp	r3, #8
 8018590:	d1ee      	bne.n	8018570 <gpio_af_set+0x38>
 8018592:	6206      	str	r6, [r0, #32]
 8018594:	6245      	str	r5, [r0, #36]	@ 0x24
 8018596:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018598 <pmu_backup_ldo_config>:
 8018598:	4b04      	ldr	r3, [pc, #16]	@ (80185ac <pmu_backup_ldo_config+0x14>)
 801859a:	685a      	ldr	r2, [r3, #4]
 801859c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80185a0:	605a      	str	r2, [r3, #4]
 80185a2:	685a      	ldr	r2, [r3, #4]
 80185a4:	4302      	orrs	r2, r0
 80185a6:	605a      	str	r2, [r3, #4]
 80185a8:	4770      	bx	lr
 80185aa:	bf00      	nop
 80185ac:	40007000 	andmi	r7, r0, r0

080185b0 <pmu_backup_write_enable>:
 80185b0:	4a02      	ldr	r2, [pc, #8]	@ (80185bc <pmu_backup_write_enable+0xc>)
 80185b2:	6813      	ldr	r3, [r2, #0]
 80185b4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80185b8:	6013      	str	r3, [r2, #0]
 80185ba:	4770      	bx	lr
 80185bc:	40007000 	andmi	r7, r0, r0

080185c0 <rcu_periph_clock_enable>:
 80185c0:	0983      	lsrs	r3, r0, #6
 80185c2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80185c6:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 80185ca:	f000 001f 	and.w	r0, r0, #31
 80185ce:	6819      	ldr	r1, [r3, #0]
 80185d0:	2201      	movs	r2, #1
 80185d2:	4082      	lsls	r2, r0
 80185d4:	430a      	orrs	r2, r1
 80185d6:	601a      	str	r2, [r3, #0]
 80185d8:	4770      	bx	lr

080185da <rcu_periph_clock_disable>:
 80185da:	0983      	lsrs	r3, r0, #6
 80185dc:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80185e0:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 80185e4:	f000 001f 	and.w	r0, r0, #31
 80185e8:	681a      	ldr	r2, [r3, #0]
 80185ea:	2101      	movs	r1, #1
 80185ec:	4081      	lsls	r1, r0
 80185ee:	ea22 0201 	bic.w	r2, r2, r1
 80185f2:	601a      	str	r2, [r3, #0]
 80185f4:	4770      	bx	lr

080185f6 <rcu_periph_reset_enable>:
 80185f6:	f7ff bfe3 	b.w	80185c0 <rcu_periph_clock_enable>

080185fa <rcu_periph_reset_disable>:
 80185fa:	f7ff bfee 	b.w	80185da <rcu_periph_clock_disable>
	...

08018600 <rcu_ckout0_config>:
 8018600:	4a04      	ldr	r2, [pc, #16]	@ (8018614 <rcu_ckout0_config+0x14>)
 8018602:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8018606:	f023 63ec 	bic.w	r3, r3, #123731968	@ 0x7600000
 801860a:	430b      	orrs	r3, r1
 801860c:	4303      	orrs	r3, r0
 801860e:	f8c2 3808 	str.w	r3, [r2, #2056]	@ 0x808
 8018612:	4770      	bx	lr
 8018614:	40023000 	andmi	r3, r2, r0

08018618 <rcu_timer_clock_prescaler_config>:
 8018618:	f06f 7380 	mvn.w	r3, #16777216	@ 0x1000000
 801861c:	4298      	cmp	r0, r3
 801861e:	4b05      	ldr	r3, [pc, #20]	@ (8018634 <rcu_timer_clock_prescaler_config+0x1c>)
 8018620:	f8d3 288c 	ldr.w	r2, [r3, #2188]	@ 0x88c
 8018624:	bf0c      	ite	eq
 8018626:	f022 7280 	biceq.w	r2, r2, #16777216	@ 0x1000000
 801862a:	4302      	orrne	r2, r0
 801862c:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
 8018630:	4770      	bx	lr
 8018632:	bf00      	nop
 8018634:	40023000 	andmi	r3, r2, r0

08018638 <rcu_clock_freq_get>:
 8018638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801863a:	4b35      	ldr	r3, [pc, #212]	@ (8018710 <rcu_clock_freq_get+0xd8>)
 801863c:	b089      	sub	sp, #36	@ 0x24
 801863e:	4604      	mov	r4, r0
 8018640:	ad04      	add	r5, sp, #16
 8018642:	f103 0610 	add.w	r6, r3, #16
 8018646:	461f      	mov	r7, r3
 8018648:	6818      	ldr	r0, [r3, #0]
 801864a:	6859      	ldr	r1, [r3, #4]
 801864c:	462a      	mov	r2, r5
 801864e:	c203      	stmia	r2!, {r0, r1}
 8018650:	3308      	adds	r3, #8
 8018652:	42b3      	cmp	r3, r6
 8018654:	4615      	mov	r5, r2
 8018656:	d1f7      	bne.n	8018648 <rcu_clock_freq_get+0x10>
 8018658:	6938      	ldr	r0, [r7, #16]
 801865a:	6871      	ldr	r1, [r6, #4]
 801865c:	4a2d      	ldr	r2, [pc, #180]	@ (8018714 <rcu_clock_freq_get+0xdc>)
 801865e:	466b      	mov	r3, sp
 8018660:	c303      	stmia	r3!, {r0, r1}
 8018662:	c303      	stmia	r3!, {r0, r1}
 8018664:	f8d2 3808 	ldr.w	r3, [r2, #2056]	@ 0x808
 8018668:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801866c:	2b01      	cmp	r3, #1
 801866e:	d03f      	beq.n	80186f0 <rcu_clock_freq_get+0xb8>
 8018670:	2b02      	cmp	r3, #2
 8018672:	d13f      	bne.n	80186f4 <rcu_clock_freq_get+0xbc>
 8018674:	f8d2 0804 	ldr.w	r0, [r2, #2052]	@ 0x804
 8018678:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804
 801867c:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 8018680:	f8d2 2804 	ldr.w	r2, [r2, #2052]	@ 0x804
 8018684:	4d24      	ldr	r5, [pc, #144]	@ (8018718 <rcu_clock_freq_get+0xe0>)
 8018686:	f3c3 4301 	ubfx	r3, r3, #16, #2
 801868a:	f412 0f80 	tst.w	r2, #4194304	@ 0x400000
 801868e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8018692:	f103 0301 	add.w	r3, r3, #1
 8018696:	4a21      	ldr	r2, [pc, #132]	@ (801871c <rcu_clock_freq_get+0xe4>)
 8018698:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801869c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80186a0:	bf18      	it	ne
 80186a2:	462a      	movne	r2, r5
 80186a4:	fbb2 f2f0 	udiv	r2, r2, r0
 80186a8:	434a      	muls	r2, r1
 80186aa:	fbb2 f0f3 	udiv	r0, r2, r3
 80186ae:	4919      	ldr	r1, [pc, #100]	@ (8018714 <rcu_clock_freq_get+0xdc>)
 80186b0:	f8d1 3808 	ldr.w	r3, [r1, #2056]	@ 0x808
 80186b4:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 80186b8:	f3c2 2282 	ubfx	r2, r2, #10, #3
 80186bc:	3220      	adds	r2, #32
 80186be:	446a      	add	r2, sp
 80186c0:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80186c4:	f812 5c20 	ldrb.w	r5, [r2, #-32]
 80186c8:	f8d1 2808 	ldr.w	r2, [r1, #2056]	@ 0x808
 80186cc:	3320      	adds	r3, #32
 80186ce:	446b      	add	r3, sp
 80186d0:	f3c2 3242 	ubfx	r2, r2, #13, #3
 80186d4:	3220      	adds	r2, #32
 80186d6:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80186da:	446a      	add	r2, sp
 80186dc:	fa20 f303 	lsr.w	r3, r0, r3
 80186e0:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80186e4:	2c03      	cmp	r4, #3
 80186e6:	d807      	bhi.n	80186f8 <rcu_clock_freq_get+0xc0>
 80186e8:	e8df f004 	tbb	[pc, r4]
 80186ec:	0e0b0907 	vmlaeq.f16	s0, s22, s14	@ <UNPREDICTABLE>
 80186f0:	4809      	ldr	r0, [pc, #36]	@ (8018718 <rcu_clock_freq_get+0xe0>)
 80186f2:	e7dc      	b.n	80186ae <rcu_clock_freq_get+0x76>
 80186f4:	4809      	ldr	r0, [pc, #36]	@ (801871c <rcu_clock_freq_get+0xe4>)
 80186f6:	e7da      	b.n	80186ae <rcu_clock_freq_get+0x76>
 80186f8:	2000      	movs	r0, #0
 80186fa:	b009      	add	sp, #36	@ 0x24
 80186fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80186fe:	4618      	mov	r0, r3
 8018700:	e7fb      	b.n	80186fa <rcu_clock_freq_get+0xc2>
 8018702:	fa23 f005 	lsr.w	r0, r3, r5
 8018706:	e7f8      	b.n	80186fa <rcu_clock_freq_get+0xc2>
 8018708:	fa23 f002 	lsr.w	r0, r3, r2
 801870c:	e7f5      	b.n	80186fa <rcu_clock_freq_get+0xc2>
 801870e:	bf00      	nop
 8018710:	0801a64c 	stmdaeq	r1, {r2, r3, r6, r9, sl, sp, pc}
 8018714:	40023000 	andmi	r3, r2, r0
 8018718:	017d7840 	cmneq	sp, r0, asr #16
 801871c:	00f42400 	rscseq	r2, r4, r0, lsl #8

08018720 <syscfg_enet_phy_interface_config>:
 8018720:	4a04      	ldr	r2, [pc, #16]	@ (8018734 <syscfg_enet_phy_interface_config+0x14>)
 8018722:	f8d2 3804 	ldr.w	r3, [r2, #2052]	@ 0x804
 8018726:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 801872a:	4303      	orrs	r3, r0
 801872c:	f8c2 3804 	str.w	r3, [r2, #2052]	@ 0x804
 8018730:	4770      	bx	lr
 8018732:	bf00      	nop
 8018734:	40013000 	andmi	r3, r1, r0

08018738 <timer_deinit>:
 8018738:	b508      	push	{r3, lr}
 801873a:	4b4e      	ldr	r3, [pc, #312]	@ (8018874 <timer_deinit+0x13c>)
 801873c:	4298      	cmp	r0, r3
 801873e:	f000 8092 	beq.w	8018866 <timer_deinit+0x12e>
 8018742:	d822      	bhi.n	801878a <timer_deinit+0x52>
 8018744:	f5a3 5380 	sub.w	r3, r3, #4096	@ 0x1000
 8018748:	4298      	cmp	r0, r3
 801874a:	d062      	beq.n	8018812 <timer_deinit+0xda>
 801874c:	d80b      	bhi.n	8018766 <timer_deinit+0x2e>
 801874e:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8018752:	4298      	cmp	r0, r3
 8018754:	d04f      	beq.n	80187f6 <timer_deinit+0xbe>
 8018756:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801875a:	4298      	cmp	r0, r3
 801875c:	d052      	beq.n	8018804 <timer_deinit+0xcc>
 801875e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8018762:	d041      	beq.n	80187e8 <timer_deinit+0xb0>
 8018764:	bd08      	pop	{r3, pc}
 8018766:	4b44      	ldr	r3, [pc, #272]	@ (8018878 <timer_deinit+0x140>)
 8018768:	4298      	cmp	r0, r3
 801876a:	d059      	beq.n	8018820 <timer_deinit+0xe8>
 801876c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8018770:	4298      	cmp	r0, r3
 8018772:	d071      	beq.n	8018858 <timer_deinit+0x120>
 8018774:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8018778:	4298      	cmp	r0, r3
 801877a:	d1f3      	bne.n	8018764 <timer_deinit+0x2c>
 801877c:	f640 0004 	movw	r0, #2052	@ 0x804
 8018780:	f7ff ff39 	bl	80185f6 <rcu_periph_reset_enable>
 8018784:	f640 0004 	movw	r0, #2052	@ 0x804
 8018788:	e02a      	b.n	80187e0 <timer_deinit+0xa8>
 801878a:	4b3c      	ldr	r3, [pc, #240]	@ (801887c <timer_deinit+0x144>)
 801878c:	4298      	cmp	r0, r3
 801878e:	d055      	beq.n	801883c <timer_deinit+0x104>
 8018790:	d812      	bhi.n	80187b8 <timer_deinit+0x80>
 8018792:	f5a3 4380 	sub.w	r3, r3, #16384	@ 0x4000
 8018796:	4298      	cmp	r0, r3
 8018798:	d01c      	beq.n	80187d4 <timer_deinit+0x9c>
 801879a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801879e:	4298      	cmp	r0, r3
 80187a0:	d045      	beq.n	801882e <timer_deinit+0xf6>
 80187a2:	f5a3 4364 	sub.w	r3, r3, #58368	@ 0xe400
 80187a6:	4298      	cmp	r0, r3
 80187a8:	d1dc      	bne.n	8018764 <timer_deinit+0x2c>
 80187aa:	f640 0008 	movw	r0, #2056	@ 0x808
 80187ae:	f7ff ff22 	bl	80185f6 <rcu_periph_reset_enable>
 80187b2:	f640 0008 	movw	r0, #2056	@ 0x808
 80187b6:	e013      	b.n	80187e0 <timer_deinit+0xa8>
 80187b8:	4b31      	ldr	r3, [pc, #196]	@ (8018880 <timer_deinit+0x148>)
 80187ba:	4298      	cmp	r0, r3
 80187bc:	d045      	beq.n	801884a <timer_deinit+0x112>
 80187be:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80187c2:	4298      	cmp	r0, r3
 80187c4:	d1ce      	bne.n	8018764 <timer_deinit+0x2c>
 80187c6:	f640 1012 	movw	r0, #2322	@ 0x912
 80187ca:	f7ff ff14 	bl	80185f6 <rcu_periph_reset_enable>
 80187ce:	f640 1012 	movw	r0, #2322	@ 0x912
 80187d2:	e005      	b.n	80187e0 <timer_deinit+0xa8>
 80187d4:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80187d8:	f7ff ff0d 	bl	80185f6 <rcu_periph_reset_enable>
 80187dc:	f44f 6010 	mov.w	r0, #2304	@ 0x900
 80187e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80187e4:	f7ff bf09 	b.w	80185fa <rcu_periph_reset_disable>
 80187e8:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80187ec:	f7ff ff03 	bl	80185f6 <rcu_periph_reset_enable>
 80187f0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80187f4:	e7f4      	b.n	80187e0 <timer_deinit+0xa8>
 80187f6:	f640 0001 	movw	r0, #2049	@ 0x801
 80187fa:	f7ff fefc 	bl	80185f6 <rcu_periph_reset_enable>
 80187fe:	f640 0001 	movw	r0, #2049	@ 0x801
 8018802:	e7ed      	b.n	80187e0 <timer_deinit+0xa8>
 8018804:	f640 0002 	movw	r0, #2050	@ 0x802
 8018808:	f7ff fef5 	bl	80185f6 <rcu_periph_reset_enable>
 801880c:	f640 0002 	movw	r0, #2050	@ 0x802
 8018810:	e7e6      	b.n	80187e0 <timer_deinit+0xa8>
 8018812:	f640 0003 	movw	r0, #2051	@ 0x803
 8018816:	f7ff feee 	bl	80185f6 <rcu_periph_reset_enable>
 801881a:	f640 0003 	movw	r0, #2051	@ 0x803
 801881e:	e7df      	b.n	80187e0 <timer_deinit+0xa8>
 8018820:	f640 0005 	movw	r0, #2053	@ 0x805
 8018824:	f7ff fee7 	bl	80185f6 <rcu_periph_reset_enable>
 8018828:	f640 0005 	movw	r0, #2053	@ 0x805
 801882c:	e7d8      	b.n	80187e0 <timer_deinit+0xa8>
 801882e:	f640 1001 	movw	r0, #2305	@ 0x901
 8018832:	f7ff fee0 	bl	80185f6 <rcu_periph_reset_enable>
 8018836:	f640 1001 	movw	r0, #2305	@ 0x901
 801883a:	e7d1      	b.n	80187e0 <timer_deinit+0xa8>
 801883c:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8018840:	f7ff fed9 	bl	80185f6 <rcu_periph_reset_enable>
 8018844:	f44f 6011 	mov.w	r0, #2320	@ 0x910
 8018848:	e7ca      	b.n	80187e0 <timer_deinit+0xa8>
 801884a:	f640 1011 	movw	r0, #2321	@ 0x911
 801884e:	f7ff fed2 	bl	80185f6 <rcu_periph_reset_enable>
 8018852:	f640 1011 	movw	r0, #2321	@ 0x911
 8018856:	e7c3      	b.n	80187e0 <timer_deinit+0xa8>
 8018858:	f640 0006 	movw	r0, #2054	@ 0x806
 801885c:	f7ff fecb 	bl	80185f6 <rcu_periph_reset_enable>
 8018860:	f640 0006 	movw	r0, #2054	@ 0x806
 8018864:	e7bc      	b.n	80187e0 <timer_deinit+0xa8>
 8018866:	f640 0007 	movw	r0, #2055	@ 0x807
 801886a:	f7ff fec4 	bl	80185f6 <rcu_periph_reset_enable>
 801886e:	f640 0007 	movw	r0, #2055	@ 0x807
 8018872:	e7b5      	b.n	80187e0 <timer_deinit+0xa8>
 8018874:	40001c00 	andmi	r1, r0, r0, lsl #24
 8018878:	40001400 	andmi	r1, r0, r0, lsl #8
 801887c:	40014000 	andmi	r4, r1, r0
 8018880:	40014400 	andmi	r4, r1, r0, lsl #8

08018884 <timer_struct_para_init>:
 8018884:	2300      	movs	r3, #0
 8018886:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801888a:	e9c0 3300 	strd	r3, r3, [r0]
 801888e:	6082      	str	r2, [r0, #8]
 8018890:	7303      	strb	r3, [r0, #12]
 8018892:	4770      	bx	lr

08018894 <timer_init>:
 8018894:	880b      	ldrh	r3, [r1, #0]
 8018896:	4a17      	ldr	r2, [pc, #92]	@ (80188f4 <timer_init+0x60>)
 8018898:	b510      	push	{r4, lr}
 801889a:	6283      	str	r3, [r0, #40]	@ 0x28
 801889c:	f420 6380 	bic.w	r3, r0, #1024	@ 0x400
 80188a0:	4293      	cmp	r3, r2
 80188a2:	d004      	beq.n	80188ae <timer_init+0x1a>
 80188a4:	f420 6240 	bic.w	r2, r0, #3072	@ 0xc00
 80188a8:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 80188ac:	d10b      	bne.n	80188c6 <timer_init+0x32>
 80188ae:	6802      	ldr	r2, [r0, #0]
 80188b0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80188b4:	6002      	str	r2, [r0, #0]
 80188b6:	6804      	ldr	r4, [r0, #0]
 80188b8:	884a      	ldrh	r2, [r1, #2]
 80188ba:	4322      	orrs	r2, r4
 80188bc:	6002      	str	r2, [r0, #0]
 80188be:	6804      	ldr	r4, [r0, #0]
 80188c0:	888a      	ldrh	r2, [r1, #4]
 80188c2:	4322      	orrs	r2, r4
 80188c4:	6002      	str	r2, [r0, #0]
 80188c6:	688a      	ldr	r2, [r1, #8]
 80188c8:	62c2      	str	r2, [r0, #44]	@ 0x2c
 80188ca:	4a0b      	ldr	r2, [pc, #44]	@ (80188f8 <timer_init+0x64>)
 80188cc:	4293      	cmp	r3, r2
 80188ce:	d00c      	beq.n	80188ea <timer_init+0x56>
 80188d0:	6802      	ldr	r2, [r0, #0]
 80188d2:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80188d6:	6002      	str	r2, [r0, #0]
 80188d8:	6804      	ldr	r4, [r0, #0]
 80188da:	88ca      	ldrh	r2, [r1, #6]
 80188dc:	4322      	orrs	r2, r4
 80188de:	6002      	str	r2, [r0, #0]
 80188e0:	4a04      	ldr	r2, [pc, #16]	@ (80188f4 <timer_init+0x60>)
 80188e2:	4293      	cmp	r3, r2
 80188e4:	bf04      	itt	eq
 80188e6:	7b0b      	ldrbeq	r3, [r1, #12]
 80188e8:	6303      	streq	r3, [r0, #48]	@ 0x30
 80188ea:	6943      	ldr	r3, [r0, #20]
 80188ec:	f043 0301 	orr.w	r3, r3, #1
 80188f0:	6143      	str	r3, [r0, #20]
 80188f2:	bd10      	pop	{r4, pc}
 80188f4:	40010000 	andmi	r0, r1, r0
 80188f8:	40001000 	andmi	r1, r0, r0

080188fc <timer_enable>:
 80188fc:	6803      	ldr	r3, [r0, #0]
 80188fe:	f043 0301 	orr.w	r3, r3, #1
 8018902:	6003      	str	r3, [r0, #0]
 8018904:	4770      	bx	lr

08018906 <timer_counter_value_config>:
 8018906:	6241      	str	r1, [r0, #36]	@ 0x24
 8018908:	4770      	bx	lr

0801890a <timer_channel_output_mode_config>:
 801890a:	2903      	cmp	r1, #3
 801890c:	d81a      	bhi.n	8018944 <timer_channel_output_mode_config+0x3a>
 801890e:	e8df f001 	tbb	[pc, r1]
 8018912:	1a120a02 	bne	849b122 <_sidata+0x47bf5a>
 8018916:	6983      	ldr	r3, [r0, #24]
 8018918:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801891c:	6183      	str	r3, [r0, #24]
 801891e:	6983      	ldr	r3, [r0, #24]
 8018920:	4313      	orrs	r3, r2
 8018922:	6183      	str	r3, [r0, #24]
 8018924:	4770      	bx	lr
 8018926:	6983      	ldr	r3, [r0, #24]
 8018928:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801892c:	6183      	str	r3, [r0, #24]
 801892e:	6983      	ldr	r3, [r0, #24]
 8018930:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8018934:	e7f5      	b.n	8018922 <timer_channel_output_mode_config+0x18>
 8018936:	69c3      	ldr	r3, [r0, #28]
 8018938:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801893c:	61c3      	str	r3, [r0, #28]
 801893e:	69c3      	ldr	r3, [r0, #28]
 8018940:	4313      	orrs	r3, r2
 8018942:	61c3      	str	r3, [r0, #28]
 8018944:	4770      	bx	lr
 8018946:	69c3      	ldr	r3, [r0, #28]
 8018948:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801894c:	61c3      	str	r3, [r0, #28]
 801894e:	69c3      	ldr	r3, [r0, #28]
 8018950:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8018954:	e7f5      	b.n	8018942 <timer_channel_output_mode_config+0x38>

08018956 <timer_channel_output_pulse_value_config>:
 8018956:	2903      	cmp	r1, #3
 8018958:	d80a      	bhi.n	8018970 <timer_channel_output_pulse_value_config+0x1a>
 801895a:	e8df f001 	tbb	[pc, r1]
 801895e:	08060402 	stmdaeq	r6, {r1, sl}
 8018962:	6342      	str	r2, [r0, #52]	@ 0x34
 8018964:	4770      	bx	lr
 8018966:	6382      	str	r2, [r0, #56]	@ 0x38
 8018968:	4770      	bx	lr
 801896a:	63c2      	str	r2, [r0, #60]	@ 0x3c
 801896c:	4770      	bx	lr
 801896e:	6402      	str	r2, [r0, #64]	@ 0x40
 8018970:	4770      	bx	lr

08018972 <timer_flag_clear>:
 8018972:	43c9      	mvns	r1, r1
 8018974:	6101      	str	r1, [r0, #16]
 8018976:	4770      	bx	lr

08018978 <timer_interrupt_enable>:
 8018978:	68c3      	ldr	r3, [r0, #12]
 801897a:	430b      	orrs	r3, r1
 801897c:	60c3      	str	r3, [r0, #12]
 801897e:	4770      	bx	lr

08018980 <timer_interrupt_flag_clear>:
 8018980:	43c9      	mvns	r1, r1
 8018982:	6101      	str	r1, [r0, #16]
 8018984:	4770      	bx	lr
	...

08018988 <usart_deinit>:
 8018988:	b508      	push	{r3, lr}
 801898a:	4b2d      	ldr	r3, [pc, #180]	@ (8018a40 <usart_deinit+0xb8>)
 801898c:	4298      	cmp	r0, r3
 801898e:	d050      	beq.n	8018a32 <usart_deinit+0xaa>
 8018990:	d817      	bhi.n	80189c2 <usart_deinit+0x3a>
 8018992:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8018996:	4298      	cmp	r0, r3
 8018998:	d044      	beq.n	8018a24 <usart_deinit+0x9c>
 801899a:	d808      	bhi.n	80189ae <usart_deinit+0x26>
 801899c:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 80189a0:	4298      	cmp	r0, r3
 80189a2:	d02a      	beq.n	80189fa <usart_deinit+0x72>
 80189a4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80189a8:	4298      	cmp	r0, r3
 80189aa:	d02d      	beq.n	8018a08 <usart_deinit+0x80>
 80189ac:	bd08      	pop	{r3, pc}
 80189ae:	4b25      	ldr	r3, [pc, #148]	@ (8018a44 <usart_deinit+0xbc>)
 80189b0:	4298      	cmp	r0, r3
 80189b2:	d1fb      	bne.n	80189ac <usart_deinit+0x24>
 80189b4:	f640 0014 	movw	r0, #2068	@ 0x814
 80189b8:	f7ff fe1d 	bl	80185f6 <rcu_periph_reset_enable>
 80189bc:	f640 0014 	movw	r0, #2068	@ 0x814
 80189c0:	e017      	b.n	80189f2 <usart_deinit+0x6a>
 80189c2:	4b21      	ldr	r3, [pc, #132]	@ (8018a48 <usart_deinit+0xc0>)
 80189c4:	4298      	cmp	r0, r3
 80189c6:	d00e      	beq.n	80189e6 <usart_deinit+0x5e>
 80189c8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80189cc:	4298      	cmp	r0, r3
 80189ce:	d022      	beq.n	8018a16 <usart_deinit+0x8e>
 80189d0:	f5a3 4318 	sub.w	r3, r3, #38912	@ 0x9800
 80189d4:	4298      	cmp	r0, r3
 80189d6:	d1e9      	bne.n	80189ac <usart_deinit+0x24>
 80189d8:	f640 001f 	movw	r0, #2079	@ 0x81f
 80189dc:	f7ff fe0b 	bl	80185f6 <rcu_periph_reset_enable>
 80189e0:	f640 001f 	movw	r0, #2079	@ 0x81f
 80189e4:	e005      	b.n	80189f2 <usart_deinit+0x6a>
 80189e6:	f640 1004 	movw	r0, #2308	@ 0x904
 80189ea:	f7ff fe04 	bl	80185f6 <rcu_periph_reset_enable>
 80189ee:	f640 1004 	movw	r0, #2308	@ 0x904
 80189f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80189f6:	f7ff be00 	b.w	80185fa <rcu_periph_reset_disable>
 80189fa:	f640 0011 	movw	r0, #2065	@ 0x811
 80189fe:	f7ff fdfa 	bl	80185f6 <rcu_periph_reset_enable>
 8018a02:	f640 0011 	movw	r0, #2065	@ 0x811
 8018a06:	e7f4      	b.n	80189f2 <usart_deinit+0x6a>
 8018a08:	f640 0012 	movw	r0, #2066	@ 0x812
 8018a0c:	f7ff fdf3 	bl	80185f6 <rcu_periph_reset_enable>
 8018a10:	f640 0012 	movw	r0, #2066	@ 0x812
 8018a14:	e7ed      	b.n	80189f2 <usart_deinit+0x6a>
 8018a16:	f640 1005 	movw	r0, #2309	@ 0x905
 8018a1a:	f7ff fdec 	bl	80185f6 <rcu_periph_reset_enable>
 8018a1e:	f640 1005 	movw	r0, #2309	@ 0x905
 8018a22:	e7e6      	b.n	80189f2 <usart_deinit+0x6a>
 8018a24:	f640 0013 	movw	r0, #2067	@ 0x813
 8018a28:	f7ff fde5 	bl	80185f6 <rcu_periph_reset_enable>
 8018a2c:	f640 0013 	movw	r0, #2067	@ 0x813
 8018a30:	e7df      	b.n	80189f2 <usart_deinit+0x6a>
 8018a32:	f640 001e 	movw	r0, #2078	@ 0x81e
 8018a36:	f7ff fdde 	bl	80185f6 <rcu_periph_reset_enable>
 8018a3a:	f640 001e 	movw	r0, #2078	@ 0x81e
 8018a3e:	e7d8      	b.n	80189f2 <usart_deinit+0x6a>
 8018a40:	40007800 	andmi	r7, r0, r0, lsl #16
 8018a44:	40005000 	andmi	r5, r0, r0
 8018a48:	40011000 	andmi	r1, r1, r0

08018a4c <usart_baudrate_set>:
 8018a4c:	b538      	push	{r3, r4, r5, lr}
 8018a4e:	4b1e      	ldr	r3, [pc, #120]	@ (8018ac8 <usart_baudrate_set+0x7c>)
 8018a50:	4298      	cmp	r0, r3
 8018a52:	4604      	mov	r4, r0
 8018a54:	460d      	mov	r5, r1
 8018a56:	d02e      	beq.n	8018ab6 <usart_baudrate_set+0x6a>
 8018a58:	d821      	bhi.n	8018a9e <usart_baudrate_set+0x52>
 8018a5a:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8018a5e:	4298      	cmp	r0, r3
 8018a60:	d029      	beq.n	8018ab6 <usart_baudrate_set+0x6a>
 8018a62:	d81a      	bhi.n	8018a9a <usart_baudrate_set+0x4e>
 8018a64:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8018a68:	4298      	cmp	r0, r3
 8018a6a:	d024      	beq.n	8018ab6 <usart_baudrate_set+0x6a>
 8018a6c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8018a70:	429c      	cmp	r4, r3
 8018a72:	d020      	beq.n	8018ab6 <usart_baudrate_set+0x6a>
 8018a74:	2000      	movs	r0, #0
 8018a76:	68e2      	ldr	r2, [r4, #12]
 8018a78:	0412      	lsls	r2, r2, #16
 8018a7a:	ea4f 0355 	mov.w	r3, r5, lsr #1
 8018a7e:	d51c      	bpl.n	8018aba <usart_baudrate_set+0x6e>
 8018a80:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018a84:	fbb3 f1f5 	udiv	r1, r3, r5
 8018a88:	f3c1 0342 	ubfx	r3, r1, #1, #3
 8018a8c:	f021 010f 	bic.w	r1, r1, #15
 8018a90:	0409      	lsls	r1, r1, #16
 8018a92:	0c09      	lsrs	r1, r1, #16
 8018a94:	430b      	orrs	r3, r1
 8018a96:	60a3      	str	r3, [r4, #8]
 8018a98:	bd38      	pop	{r3, r4, r5, pc}
 8018a9a:	4b0c      	ldr	r3, [pc, #48]	@ (8018acc <usart_baudrate_set+0x80>)
 8018a9c:	e7e8      	b.n	8018a70 <usart_baudrate_set+0x24>
 8018a9e:	4b0c      	ldr	r3, [pc, #48]	@ (8018ad0 <usart_baudrate_set+0x84>)
 8018aa0:	f420 6280 	bic.w	r2, r0, #1024	@ 0x400
 8018aa4:	429a      	cmp	r2, r3
 8018aa6:	d002      	beq.n	8018aae <usart_baudrate_set+0x62>
 8018aa8:	f5a3 4314 	sub.w	r3, r3, #37888	@ 0x9400
 8018aac:	e7e0      	b.n	8018a70 <usart_baudrate_set+0x24>
 8018aae:	2003      	movs	r0, #3
 8018ab0:	f7ff fdc2 	bl	8018638 <rcu_clock_freq_get>
 8018ab4:	e7df      	b.n	8018a76 <usart_baudrate_set+0x2a>
 8018ab6:	2002      	movs	r0, #2
 8018ab8:	e7fa      	b.n	8018ab0 <usart_baudrate_set+0x64>
 8018aba:	18c1      	adds	r1, r0, r3
 8018abc:	fbb1 f1f5 	udiv	r1, r1, r5
 8018ac0:	b289      	uxth	r1, r1
 8018ac2:	60a1      	str	r1, [r4, #8]
 8018ac4:	e7e8      	b.n	8018a98 <usart_baudrate_set+0x4c>
 8018ac6:	bf00      	nop
 8018ac8:	40007800 	andmi	r7, r0, r0, lsl #16
 8018acc:	40005000 	andmi	r5, r0, r0
 8018ad0:	40011000 	andmi	r1, r1, r0

08018ad4 <usart_parity_config>:
 8018ad4:	68c3      	ldr	r3, [r0, #12]
 8018ad6:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8018ada:	60c3      	str	r3, [r0, #12]
 8018adc:	68c3      	ldr	r3, [r0, #12]
 8018ade:	430b      	orrs	r3, r1
 8018ae0:	60c3      	str	r3, [r0, #12]
 8018ae2:	4770      	bx	lr

08018ae4 <usart_word_length_set>:
 8018ae4:	68c3      	ldr	r3, [r0, #12]
 8018ae6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8018aea:	60c3      	str	r3, [r0, #12]
 8018aec:	68c3      	ldr	r3, [r0, #12]
 8018aee:	430b      	orrs	r3, r1
 8018af0:	60c3      	str	r3, [r0, #12]
 8018af2:	4770      	bx	lr

08018af4 <usart_stop_bit_set>:
 8018af4:	6903      	ldr	r3, [r0, #16]
 8018af6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8018afa:	6103      	str	r3, [r0, #16]
 8018afc:	6903      	ldr	r3, [r0, #16]
 8018afe:	430b      	orrs	r3, r1
 8018b00:	6103      	str	r3, [r0, #16]
 8018b02:	4770      	bx	lr

08018b04 <usart_transmit_config>:
 8018b04:	68c3      	ldr	r3, [r0, #12]
 8018b06:	f023 0308 	bic.w	r3, r3, #8
 8018b0a:	430b      	orrs	r3, r1
 8018b0c:	60c3      	str	r3, [r0, #12]
 8018b0e:	4770      	bx	lr

08018b10 <usart_receive_config>:
 8018b10:	68c3      	ldr	r3, [r0, #12]
 8018b12:	f023 0304 	bic.w	r3, r3, #4
 8018b16:	430b      	orrs	r3, r1
 8018b18:	60c3      	str	r3, [r0, #12]
 8018b1a:	4770      	bx	lr

08018b1c <usart_hardware_flow_rts_config>:
 8018b1c:	6943      	ldr	r3, [r0, #20]
 8018b1e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8018b22:	6143      	str	r3, [r0, #20]
 8018b24:	6943      	ldr	r3, [r0, #20]
 8018b26:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8018b2a:	4319      	orrs	r1, r3
 8018b2c:	6141      	str	r1, [r0, #20]
 8018b2e:	4770      	bx	lr

08018b30 <usart_hardware_flow_cts_config>:
 8018b30:	6943      	ldr	r3, [r0, #20]
 8018b32:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8018b36:	6143      	str	r3, [r0, #20]
 8018b38:	6943      	ldr	r3, [r0, #20]
 8018b3a:	f401 7100 	and.w	r1, r1, #512	@ 0x200
 8018b3e:	4319      	orrs	r1, r3
 8018b40:	6141      	str	r1, [r0, #20]
 8018b42:	4770      	bx	lr

08018b44 <usart_flag_get>:
 8018b44:	098b      	lsrs	r3, r1, #6
 8018b46:	f001 011f 	and.w	r1, r1, #31
 8018b4a:	5818      	ldr	r0, [r3, r0]
 8018b4c:	40c8      	lsrs	r0, r1
 8018b4e:	f000 0001 	and.w	r0, r0, #1
 8018b52:	4770      	bx	lr

08018b54 <bkp_data_write(bkp_data_register_enum, unsigned short)>:
 8018b54:	b110      	cbz	r0, 8018b5c <bkp_data_write(bkp_data_register_enum, unsigned short)+0x8>
 8018b56:	2801      	cmp	r0, #1
 8018b58:	d004      	beq.n	8018b64 <bkp_data_write(bkp_data_register_enum, unsigned short)+0x10>
 8018b5a:	4770      	bx	lr
 8018b5c:	4b03      	ldr	r3, [pc, #12]	@ (8018b6c <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 8018b5e:	f8c3 1850 	str.w	r1, [r3, #2128]	@ 0x850
 8018b62:	4770      	bx	lr
 8018b64:	4b01      	ldr	r3, [pc, #4]	@ (8018b6c <bkp_data_write(bkp_data_register_enum, unsigned short)+0x18>)
 8018b66:	f8c3 1854 	str.w	r1, [r3, #2132]	@ 0x854
 8018b6a:	4770      	bx	lr
 8018b6c:	40002000 	andmi	r2, r0, r0

08018b70 <bkp_data_read(bkp_data_register_enum)>:
 8018b70:	b118      	cbz	r0, 8018b7a <bkp_data_read(bkp_data_register_enum)+0xa>
 8018b72:	2801      	cmp	r0, #1
 8018b74:	d006      	beq.n	8018b84 <bkp_data_read(bkp_data_register_enum)+0x14>
 8018b76:	2000      	movs	r0, #0
 8018b78:	4770      	bx	lr
 8018b7a:	4b04      	ldr	r3, [pc, #16]	@ (8018b8c <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8018b7c:	f8d3 0850 	ldr.w	r0, [r3, #2128]	@ 0x850
 8018b80:	b280      	uxth	r0, r0
 8018b82:	4770      	bx	lr
 8018b84:	4b01      	ldr	r3, [pc, #4]	@ (8018b8c <bkp_data_read(bkp_data_register_enum)+0x1c>)
 8018b86:	f8d3 0854 	ldr.w	r0, [r3, #2132]	@ 0x854
 8018b8a:	e7f9      	b.n	8018b80 <bkp_data_read(bkp_data_register_enum)+0x10>
 8018b8c:	40002000 	andmi	r2, r0, r0

08018b90 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
 8018b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018b92:	461e      	mov	r6, r3
 8018b94:	4bc3      	ldr	r3, [pc, #780]	@ (8018ea4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x314>)
 8018b96:	4298      	cmp	r0, r3
 8018b98:	4604      	mov	r4, r0
 8018b9a:	460f      	mov	r7, r1
 8018b9c:	4615      	mov	r5, r2
 8018b9e:	f000 818f 	beq.w	8018ec0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x330>
 8018ba2:	d83a      	bhi.n	8018c1a <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x8a>
 8018ba4:	f5a3 5330 	sub.w	r3, r3, #11264	@ 0x2c00
 8018ba8:	4298      	cmp	r0, r3
 8018baa:	f000 80f5 	beq.w	8018d98 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x208>
 8018bae:	f200 8122 	bhi.w	8018df6 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x266>
 8018bb2:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
 8018bb6:	4298      	cmp	r0, r3
 8018bb8:	f000 80c8 	beq.w	8018d4c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x1bc>
 8018bbc:	f241 0012 	movw	r0, #4114	@ 0x1012
 8018bc0:	f7ff fcfe 	bl	80185c0 <rcu_periph_clock_enable>
 8018bc4:	f640 4001 	movw	r0, #3073	@ 0xc01
 8018bc8:	f7ff fcfa 	bl	80185c0 <rcu_periph_clock_enable>
 8018bcc:	48b6      	ldr	r0, [pc, #728]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018bce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8018bd2:	2107      	movs	r1, #7
 8018bd4:	f7ff fcb0 	bl	8018538 <gpio_af_set>
 8018bd8:	48b3      	ldr	r0, [pc, #716]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018bda:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018bde:	2201      	movs	r2, #1
 8018be0:	2102      	movs	r1, #2
 8018be2:	f7ff fc67 	bl	80184b4 <gpio_mode_set>
 8018be6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018bea:	48af      	ldr	r0, [pc, #700]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018bec:	2202      	movs	r2, #2
 8018bee:	2100      	movs	r1, #0
 8018bf0:	f7ff fc82 	bl	80184f8 <gpio_output_options_set>
 8018bf4:	48ac      	ldr	r0, [pc, #688]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018bf6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8018bfa:	2107      	movs	r1, #7
 8018bfc:	f7ff fc9c 	bl	8018538 <gpio_af_set>
 8018c00:	48a9      	ldr	r0, [pc, #676]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018c02:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8018c06:	2201      	movs	r2, #1
 8018c08:	2102      	movs	r1, #2
 8018c0a:	f7ff fc53 	bl	80184b4 <gpio_mode_set>
 8018c0e:	48a6      	ldr	r0, [pc, #664]	@ (8018ea8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x318>)
 8018c10:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8018c14:	2202      	movs	r2, #2
 8018c16:	2100      	movs	r1, #0
 8018c18:	e05b      	b.n	8018cd2 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8018c1a:	4ba4      	ldr	r3, [pc, #656]	@ (8018eac <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x31c>)
 8018c1c:	4298      	cmp	r0, r3
 8018c1e:	d02a      	beq.n	8018c76 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0xe6>
 8018c20:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8018c24:	4298      	cmp	r0, r3
 8018c26:	f000 8116 	beq.w	8018e56 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x2c6>
 8018c2a:	f241 001f 	movw	r0, #4127	@ 0x101f
 8018c2e:	f7ff fcc7 	bl	80185c0 <rcu_periph_clock_enable>
 8018c32:	f640 4004 	movw	r0, #3076	@ 0xc04
 8018c36:	f7ff fcc3 	bl	80185c0 <rcu_periph_clock_enable>
 8018c3a:	489d      	ldr	r0, [pc, #628]	@ (8018eb0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8018c3c:	2202      	movs	r2, #2
 8018c3e:	2108      	movs	r1, #8
 8018c40:	f7ff fc7a 	bl	8018538 <gpio_af_set>
 8018c44:	2302      	movs	r3, #2
 8018c46:	4619      	mov	r1, r3
 8018c48:	4899      	ldr	r0, [pc, #612]	@ (8018eb0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8018c4a:	2201      	movs	r2, #1
 8018c4c:	f7ff fc32 	bl	80184b4 <gpio_mode_set>
 8018c50:	2302      	movs	r3, #2
 8018c52:	461a      	mov	r2, r3
 8018c54:	4896      	ldr	r0, [pc, #600]	@ (8018eb0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8018c56:	2100      	movs	r1, #0
 8018c58:	f7ff fc4e 	bl	80184f8 <gpio_output_options_set>
 8018c5c:	4894      	ldr	r0, [pc, #592]	@ (8018eb0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8018c5e:	2201      	movs	r2, #1
 8018c60:	2108      	movs	r1, #8
 8018c62:	f7ff fc69 	bl	8018538 <gpio_af_set>
 8018c66:	2301      	movs	r3, #1
 8018c68:	461a      	mov	r2, r3
 8018c6a:	4891      	ldr	r0, [pc, #580]	@ (8018eb0 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x320>)
 8018c6c:	2102      	movs	r1, #2
 8018c6e:	f7ff fc21 	bl	80184b4 <gpio_mode_set>
 8018c72:	2301      	movs	r3, #1
 8018c74:	e14c      	b.n	8018f10 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x380>
 8018c76:	f241 1004 	movw	r0, #4356	@ 0x1104
 8018c7a:	f7ff fca1 	bl	80185c0 <rcu_periph_clock_enable>
 8018c7e:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8018c82:	f7ff fc9d 	bl	80185c0 <rcu_periph_clock_enable>
 8018c86:	488b      	ldr	r0, [pc, #556]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018c88:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8018c8c:	2107      	movs	r1, #7
 8018c8e:	f7ff fc53 	bl	8018538 <gpio_af_set>
 8018c92:	4888      	ldr	r0, [pc, #544]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018c94:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8018c98:	2201      	movs	r2, #1
 8018c9a:	2102      	movs	r1, #2
 8018c9c:	f7ff fc0a 	bl	80184b4 <gpio_mode_set>
 8018ca0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8018ca4:	4883      	ldr	r0, [pc, #524]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018ca6:	2202      	movs	r2, #2
 8018ca8:	2100      	movs	r1, #0
 8018caa:	f7ff fc25 	bl	80184f8 <gpio_output_options_set>
 8018cae:	4881      	ldr	r0, [pc, #516]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018cb0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8018cb4:	2107      	movs	r1, #7
 8018cb6:	f7ff fc3f 	bl	8018538 <gpio_af_set>
 8018cba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018cbe:	487d      	ldr	r0, [pc, #500]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018cc0:	2201      	movs	r2, #1
 8018cc2:	2102      	movs	r1, #2
 8018cc4:	f7ff fbf6 	bl	80184b4 <gpio_mode_set>
 8018cc8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018ccc:	4879      	ldr	r0, [pc, #484]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018cce:	2202      	movs	r2, #2
 8018cd0:	2100      	movs	r1, #0
 8018cd2:	f7ff fc11 	bl	80184f8 <gpio_output_options_set>
 8018cd6:	4620      	mov	r0, r4
 8018cd8:	f7ff fe56 	bl	8018988 <usart_deinit>
 8018cdc:	68e3      	ldr	r3, [r4, #12]
 8018cde:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8018ce2:	60e3      	str	r3, [r4, #12]
 8018ce4:	4639      	mov	r1, r7
 8018ce6:	4620      	mov	r0, r4
 8018ce8:	f7ff feb0 	bl	8018a4c <usart_baudrate_set>
 8018cec:	f1a5 0309 	sub.w	r3, r5, #9
 8018cf0:	4259      	negs	r1, r3
 8018cf2:	4159      	adcs	r1, r3
 8018cf4:	0309      	lsls	r1, r1, #12
 8018cf6:	4620      	mov	r0, r4
 8018cf8:	f7ff fef4 	bl	8018ae4 <usart_word_length_set>
 8018cfc:	9906      	ldr	r1, [sp, #24]
 8018cfe:	1e8a      	subs	r2, r1, #2
 8018d00:	4251      	negs	r1, r2
 8018d02:	4151      	adcs	r1, r2
 8018d04:	0349      	lsls	r1, r1, #13
 8018d06:	4620      	mov	r0, r4
 8018d08:	f7ff fef4 	bl	8018af4 <usart_stop_bit_set>
 8018d0c:	2e01      	cmp	r6, #1
 8018d0e:	f000 8103 	beq.w	8018f18 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x388>
 8018d12:	2e02      	cmp	r6, #2
 8018d14:	f040 8103 	bne.w	8018f1e <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x38e>
 8018d18:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8018d1c:	4620      	mov	r0, r4
 8018d1e:	f7ff fed9 	bl	8018ad4 <usart_parity_config>
 8018d22:	2100      	movs	r1, #0
 8018d24:	4620      	mov	r0, r4
 8018d26:	f7ff fef9 	bl	8018b1c <usart_hardware_flow_rts_config>
 8018d2a:	2100      	movs	r1, #0
 8018d2c:	4620      	mov	r0, r4
 8018d2e:	f7ff feff 	bl	8018b30 <usart_hardware_flow_cts_config>
 8018d32:	2104      	movs	r1, #4
 8018d34:	4620      	mov	r0, r4
 8018d36:	f7ff feeb 	bl	8018b10 <usart_receive_config>
 8018d3a:	2108      	movs	r1, #8
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	f7ff fee1 	bl	8018b04 <usart_transmit_config>
 8018d42:	68e3      	ldr	r3, [r4, #12]
 8018d44:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8018d48:	60e3      	str	r3, [r4, #12]
 8018d4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018d4c:	f241 0011 	movw	r0, #4113	@ 0x1011
 8018d50:	f7ff fc36 	bl	80185c0 <rcu_periph_clock_enable>
 8018d54:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 8018d58:	f7ff fc32 	bl	80185c0 <rcu_periph_clock_enable>
 8018d5c:	4855      	ldr	r0, [pc, #340]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018d5e:	2204      	movs	r2, #4
 8018d60:	2107      	movs	r1, #7
 8018d62:	f7ff fbe9 	bl	8018538 <gpio_af_set>
 8018d66:	4853      	ldr	r0, [pc, #332]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018d68:	2304      	movs	r3, #4
 8018d6a:	2201      	movs	r2, #1
 8018d6c:	2102      	movs	r1, #2
 8018d6e:	f7ff fba1 	bl	80184b4 <gpio_mode_set>
 8018d72:	2304      	movs	r3, #4
 8018d74:	484f      	ldr	r0, [pc, #316]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018d76:	2202      	movs	r2, #2
 8018d78:	2100      	movs	r1, #0
 8018d7a:	f7ff fbbd 	bl	80184f8 <gpio_output_options_set>
 8018d7e:	484d      	ldr	r0, [pc, #308]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018d80:	2208      	movs	r2, #8
 8018d82:	2107      	movs	r1, #7
 8018d84:	f7ff fbd8 	bl	8018538 <gpio_af_set>
 8018d88:	2308      	movs	r3, #8
 8018d8a:	484a      	ldr	r0, [pc, #296]	@ (8018eb4 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x324>)
 8018d8c:	2201      	movs	r2, #1
 8018d8e:	2102      	movs	r1, #2
 8018d90:	f7ff fb90 	bl	80184b4 <gpio_mode_set>
 8018d94:	2308      	movs	r3, #8
 8018d96:	e799      	b.n	8018ccc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x13c>
 8018d98:	f241 0013 	movw	r0, #4115	@ 0x1013
 8018d9c:	f7ff fc10 	bl	80185c0 <rcu_periph_clock_enable>
 8018da0:	f640 4002 	movw	r0, #3074	@ 0xc02
 8018da4:	f7ff fc0c 	bl	80185c0 <rcu_periph_clock_enable>
 8018da8:	4843      	ldr	r0, [pc, #268]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018daa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8018dae:	2108      	movs	r1, #8
 8018db0:	f7ff fbc2 	bl	8018538 <gpio_af_set>
 8018db4:	4840      	ldr	r0, [pc, #256]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018db6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018dba:	2201      	movs	r2, #1
 8018dbc:	2102      	movs	r1, #2
 8018dbe:	f7ff fb79 	bl	80184b4 <gpio_mode_set>
 8018dc2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8018dc6:	483c      	ldr	r0, [pc, #240]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018dc8:	2202      	movs	r2, #2
 8018dca:	2100      	movs	r1, #0
 8018dcc:	f7ff fb94 	bl	80184f8 <gpio_output_options_set>
 8018dd0:	4839      	ldr	r0, [pc, #228]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018dd2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8018dd6:	2108      	movs	r1, #8
 8018dd8:	f7ff fbae 	bl	8018538 <gpio_af_set>
 8018ddc:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8018de0:	4835      	ldr	r0, [pc, #212]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018de2:	2201      	movs	r2, #1
 8018de4:	2102      	movs	r1, #2
 8018de6:	f7ff fb65 	bl	80184b4 <gpio_mode_set>
 8018dea:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8018dee:	4832      	ldr	r0, [pc, #200]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018df0:	2202      	movs	r2, #2
 8018df2:	2100      	movs	r1, #0
 8018df4:	e76d      	b.n	8018cd2 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8018df6:	f241 0014 	movw	r0, #4116	@ 0x1014
 8018dfa:	f7ff fbe1 	bl	80185c0 <rcu_periph_clock_enable>
 8018dfe:	f640 4002 	movw	r0, #3074	@ 0xc02
 8018e02:	f7ff fbdd 	bl	80185c0 <rcu_periph_clock_enable>
 8018e06:	f640 4003 	movw	r0, #3075	@ 0xc03
 8018e0a:	f7ff fbd9 	bl	80185c0 <rcu_periph_clock_enable>
 8018e0e:	482a      	ldr	r0, [pc, #168]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e10:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8018e14:	2108      	movs	r1, #8
 8018e16:	f7ff fb8f 	bl	8018538 <gpio_af_set>
 8018e1a:	4827      	ldr	r0, [pc, #156]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e1c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8018e20:	2201      	movs	r2, #1
 8018e22:	2102      	movs	r1, #2
 8018e24:	f7ff fb46 	bl	80184b4 <gpio_mode_set>
 8018e28:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8018e2c:	4822      	ldr	r0, [pc, #136]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e2e:	2202      	movs	r2, #2
 8018e30:	2100      	movs	r1, #0
 8018e32:	f7ff fb61 	bl	80184f8 <gpio_output_options_set>
 8018e36:	4821      	ldr	r0, [pc, #132]	@ (8018ebc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8018e38:	2204      	movs	r2, #4
 8018e3a:	2108      	movs	r1, #8
 8018e3c:	f7ff fb7c 	bl	8018538 <gpio_af_set>
 8018e40:	481e      	ldr	r0, [pc, #120]	@ (8018ebc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8018e42:	2304      	movs	r3, #4
 8018e44:	2201      	movs	r2, #1
 8018e46:	2102      	movs	r1, #2
 8018e48:	f7ff fb34 	bl	80184b4 <gpio_mode_set>
 8018e4c:	481b      	ldr	r0, [pc, #108]	@ (8018ebc <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x32c>)
 8018e4e:	2304      	movs	r3, #4
 8018e50:	2202      	movs	r2, #2
 8018e52:	2100      	movs	r1, #0
 8018e54:	e73d      	b.n	8018cd2 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8018e56:	f241 1005 	movw	r0, #4357	@ 0x1105
 8018e5a:	f7ff fbb1 	bl	80185c0 <rcu_periph_clock_enable>
 8018e5e:	f640 4002 	movw	r0, #3074	@ 0xc02
 8018e62:	f7ff fbad 	bl	80185c0 <rcu_periph_clock_enable>
 8018e66:	4814      	ldr	r0, [pc, #80]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e68:	2240      	movs	r2, #64	@ 0x40
 8018e6a:	2108      	movs	r1, #8
 8018e6c:	f7ff fb64 	bl	8018538 <gpio_af_set>
 8018e70:	4811      	ldr	r0, [pc, #68]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e72:	2340      	movs	r3, #64	@ 0x40
 8018e74:	2201      	movs	r2, #1
 8018e76:	2102      	movs	r1, #2
 8018e78:	f7ff fb1c 	bl	80184b4 <gpio_mode_set>
 8018e7c:	2340      	movs	r3, #64	@ 0x40
 8018e7e:	480e      	ldr	r0, [pc, #56]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e80:	2202      	movs	r2, #2
 8018e82:	2100      	movs	r1, #0
 8018e84:	f7ff fb38 	bl	80184f8 <gpio_output_options_set>
 8018e88:	480b      	ldr	r0, [pc, #44]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e8a:	2280      	movs	r2, #128	@ 0x80
 8018e8c:	2108      	movs	r1, #8
 8018e8e:	f7ff fb53 	bl	8018538 <gpio_af_set>
 8018e92:	2380      	movs	r3, #128	@ 0x80
 8018e94:	4808      	ldr	r0, [pc, #32]	@ (8018eb8 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x328>)
 8018e96:	2201      	movs	r2, #1
 8018e98:	2102      	movs	r1, #2
 8018e9a:	f7ff fb0b 	bl	80184b4 <gpio_mode_set>
 8018e9e:	2380      	movs	r3, #128	@ 0x80
 8018ea0:	e7a5      	b.n	8018dee <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x25e>
 8018ea2:	bf00      	nop
 8018ea4:	40007800 	andmi	r7, r0, r0, lsl #16
 8018ea8:	40020400 	andmi	r0, r2, r0, lsl #8
 8018eac:	40011000 	andmi	r1, r1, r0
 8018eb0:	40021000 	andmi	r1, r2, r0
 8018eb4:	40020000 	andmi	r0, r2, r0
 8018eb8:	40020800 	andmi	r0, r2, r0, lsl #16
 8018ebc:	40020c00 	andmi	r0, r2, r0, lsl #24
 8018ec0:	f241 001e 	movw	r0, #4126	@ 0x101e
 8018ec4:	f7ff fb7c 	bl	80185c0 <rcu_periph_clock_enable>
 8018ec8:	f640 4004 	movw	r0, #3076	@ 0xc04
 8018ecc:	f7ff fb78 	bl	80185c0 <rcu_periph_clock_enable>
 8018ed0:	4814      	ldr	r0, [pc, #80]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018ed2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8018ed6:	2108      	movs	r1, #8
 8018ed8:	f7ff fb2e 	bl	8018538 <gpio_af_set>
 8018edc:	4811      	ldr	r0, [pc, #68]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018ede:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8018ee2:	2201      	movs	r2, #1
 8018ee4:	2102      	movs	r1, #2
 8018ee6:	f7ff fae5 	bl	80184b4 <gpio_mode_set>
 8018eea:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8018eee:	480d      	ldr	r0, [pc, #52]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018ef0:	2202      	movs	r2, #2
 8018ef2:	2100      	movs	r1, #0
 8018ef4:	f7ff fb00 	bl	80184f8 <gpio_output_options_set>
 8018ef8:	480a      	ldr	r0, [pc, #40]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018efa:	2280      	movs	r2, #128	@ 0x80
 8018efc:	2108      	movs	r1, #8
 8018efe:	f7ff fb1b 	bl	8018538 <gpio_af_set>
 8018f02:	2380      	movs	r3, #128	@ 0x80
 8018f04:	4807      	ldr	r0, [pc, #28]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018f06:	2201      	movs	r2, #1
 8018f08:	2102      	movs	r1, #2
 8018f0a:	f7ff fad3 	bl	80184b4 <gpio_mode_set>
 8018f0e:	2380      	movs	r3, #128	@ 0x80
 8018f10:	4804      	ldr	r0, [pc, #16]	@ (8018f24 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x394>)
 8018f12:	2202      	movs	r2, #2
 8018f14:	2100      	movs	r1, #0
 8018f16:	e6dc      	b.n	8018cd2 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x142>
 8018f18:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8018f1c:	e6fe      	b.n	8018d1c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8018f1e:	2100      	movs	r1, #0
 8018f20:	e6fc      	b.n	8018d1c <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x18c>
 8018f22:	bf00      	nop
 8018f24:	40021000 	andmi	r1, r2, r0

08018f28 <mac_address_get(unsigned char*)>:
 8018f28:	4a07      	ldr	r2, [pc, #28]	@ (8018f48 <mac_address_get(unsigned char*)+0x20>)
 8018f2a:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 8018f2e:	f8d2 2a14 	ldr.w	r2, [r2, #2580]	@ 0xa14
 8018f32:	7042      	strb	r2, [r0, #1]
 8018f34:	0e1a      	lsrs	r2, r3, #24
 8018f36:	7082      	strb	r2, [r0, #2]
 8018f38:	0c1a      	lsrs	r2, r3, #16
 8018f3a:	2102      	movs	r1, #2
 8018f3c:	70c2      	strb	r2, [r0, #3]
 8018f3e:	0a1a      	lsrs	r2, r3, #8
 8018f40:	7001      	strb	r1, [r0, #0]
 8018f42:	7102      	strb	r2, [r0, #4]
 8018f44:	7143      	strb	r3, [r0, #5]
 8018f46:	4770      	bx	lr
 8018f48:	1fff7000 	svcne	0x00ff7000

08018f4c <timer6_config()>:
 8018f4c:	b530      	push	{r4, r5, lr}
 8018f4e:	4b19      	ldr	r3, [pc, #100]	@ (8018fb4 <timer6_config()+0x68>)
 8018f50:	4c19      	ldr	r4, [pc, #100]	@ (8018fb8 <timer6_config()+0x6c>)
 8018f52:	b085      	sub	sp, #20
 8018f54:	2500      	movs	r5, #0
 8018f56:	f241 0005 	movw	r0, #4101	@ 0x1005
 8018f5a:	605d      	str	r5, [r3, #4]
 8018f5c:	f7ff fb30 	bl	80185c0 <rcu_periph_clock_enable>
 8018f60:	4620      	mov	r0, r4
 8018f62:	f7ff fbe9 	bl	8018738 <timer_deinit>
 8018f66:	4668      	mov	r0, sp
 8018f68:	f7ff fc8c 	bl	8018884 <timer_struct_para_init>
 8018f6c:	f645 52bf 	movw	r2, #23999	@ 0x5dbf
 8018f70:	f242 730f 	movw	r3, #9999	@ 0x270f
 8018f74:	4669      	mov	r1, sp
 8018f76:	4620      	mov	r0, r4
 8018f78:	f8ad 2000 	strh.w	r2, [sp]
 8018f7c:	9302      	str	r3, [sp, #8]
 8018f7e:	f7ff fc89 	bl	8018894 <timer_init>
 8018f82:	4629      	mov	r1, r5
 8018f84:	4620      	mov	r0, r4
 8018f86:	f7ff fcbe 	bl	8018906 <timer_counter_value_config>
 8018f8a:	4620      	mov	r0, r4
 8018f8c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8018f90:	f7ff fcf6 	bl	8018980 <timer_interrupt_flag_clear>
 8018f94:	2101      	movs	r1, #1
 8018f96:	4620      	mov	r0, r4
 8018f98:	f7ff fcee 	bl	8018978 <timer_interrupt_enable>
 8018f9c:	4b07      	ldr	r3, [pc, #28]	@ (8018fbc <timer6_config()+0x70>)
 8018f9e:	22f0      	movs	r2, #240	@ 0xf0
 8018fa0:	f883 2337 	strb.w	r2, [r3, #823]	@ 0x337
 8018fa4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8018fa8:	605a      	str	r2, [r3, #4]
 8018faa:	4620      	mov	r0, r4
 8018fac:	f7ff fca6 	bl	80188fc <timer_enable>
 8018fb0:	b005      	add	sp, #20
 8018fb2:	bd30      	pop	{r4, r5, pc}
 8018fb4:	2000a3ac 	andcs	sl, r0, ip, lsr #7
 8018fb8:	40001400 	andmi	r1, r0, r0, lsl #8
 8018fbc:	e000e100 	and	lr, r0, r0, lsl #2

08018fc0 <udelay_init()>:
 8018fc0:	4a07      	ldr	r2, [pc, #28]	@ (8018fe0 <udelay_init()+0x20>)
 8018fc2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 8018fc6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8018fca:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
 8018fce:	4b05      	ldr	r3, [pc, #20]	@ (8018fe4 <udelay_init()+0x24>)
 8018fd0:	2200      	movs	r2, #0
 8018fd2:	605a      	str	r2, [r3, #4]
 8018fd4:	681a      	ldr	r2, [r3, #0]
 8018fd6:	f042 0201 	orr.w	r2, r2, #1
 8018fda:	601a      	str	r2, [r3, #0]
 8018fdc:	4770      	bx	lr
 8018fde:	bf00      	nop
 8018fe0:	e000ed00 	and	lr, r0, r0, lsl #26
 8018fe4:	e0001000 	and	r1, r0, r0

08018fe8 <udelay(unsigned long, unsigned long)>:
 8018fe8:	23f0      	movs	r3, #240	@ 0xf0
 8018fea:	b530      	push	{r4, r5, lr}
 8018fec:	4358      	muls	r0, r3
 8018fee:	b909      	cbnz	r1, 8018ff4 <udelay(unsigned long, unsigned long)+0xc>
 8018ff0:	4b08      	ldr	r3, [pc, #32]	@ (8019014 <udelay(unsigned long, unsigned long)+0x2c>)
 8018ff2:	6859      	ldr	r1, [r3, #4]
 8018ff4:	4c07      	ldr	r4, [pc, #28]	@ (8019014 <udelay(unsigned long, unsigned long)+0x2c>)
 8018ff6:	2300      	movs	r3, #0
 8018ff8:	6862      	ldr	r2, [r4, #4]
 8018ffa:	4291      	cmp	r1, r2
 8018ffc:	d0fc      	beq.n	8018ff8 <udelay(unsigned long, unsigned long)+0x10>
 8018ffe:	bf2a      	itet	cs
 8019000:	f102 35ff 	addcs.w	r5, r2, #4294967295	@ 0xffffffff
 8019004:	189b      	addcc	r3, r3, r2
 8019006:	195b      	addcs	r3, r3, r5
 8019008:	1a5b      	subs	r3, r3, r1
 801900a:	4283      	cmp	r3, r0
 801900c:	d300      	bcc.n	8019010 <udelay(unsigned long, unsigned long)+0x28>
 801900e:	bd30      	pop	{r4, r5, pc}
 8019010:	4611      	mov	r1, r2
 8019012:	e7f1      	b.n	8018ff8 <udelay(unsigned long, unsigned long)+0x10>
 8019014:	e0001000 	and	r1, r0, r0

08019018 <systick_config>:
 8019018:	4b0c      	ldr	r3, [pc, #48]	@ (801904c <systick_config+0x34>)
 801901a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 801901e:	681b      	ldr	r3, [r3, #0]
 8019020:	fbb3 f3f2 	udiv	r3, r3, r2
 8019024:	3b01      	subs	r3, #1
 8019026:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 801902a:	d20d      	bcs.n	8019048 <systick_config+0x30>
 801902c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8019030:	21f0      	movs	r1, #240	@ 0xf0
 8019032:	6153      	str	r3, [r2, #20]
 8019034:	4b06      	ldr	r3, [pc, #24]	@ (8019050 <systick_config+0x38>)
 8019036:	2000      	movs	r0, #0
 8019038:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 801903c:	6190      	str	r0, [r2, #24]
 801903e:	2007      	movs	r0, #7
 8019040:	6110      	str	r0, [r2, #16]
 8019042:	f883 1023 	strb.w	r1, [r3, #35]	@ 0x23
 8019046:	4770      	bx	lr
 8019048:	e7fe      	b.n	8019048 <systick_config+0x30>
 801904a:	bf00      	nop
 801904c:	20000014 	andcs	r0, r0, r4, lsl r0
 8019050:	e000ed00 	and	lr, r0, r0, lsl #26

08019054 <SysTick_Handler>:
 8019054:	4a02      	ldr	r2, [pc, #8]	@ (8019060 <SysTick_Handler+0xc>)
 8019056:	6813      	ldr	r3, [r2, #0]
 8019058:	3301      	adds	r3, #1
 801905a:	6013      	str	r3, [r2, #0]
 801905c:	4770      	bx	lr
 801905e:	bf00      	nop
 8019060:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4

08019064 <gd32_adc_init()>:
 8019064:	b510      	push	{r4, lr}
 8019066:	f241 1008 	movw	r0, #4360	@ 0x1108
 801906a:	4c24      	ldr	r4, [pc, #144]	@ (80190fc <gd32_adc_init()+0x98>)
 801906c:	f7ff faa8 	bl	80185c0 <rcu_periph_clock_enable>
 8019070:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 8019074:	f000 fafa 	bl	801966c <adc_clock_config>
 8019078:	4620      	mov	r0, r4
 801907a:	2203      	movs	r2, #3
 801907c:	2102      	movs	r1, #2
 801907e:	f000 fb77 	bl	8019770 <adc_channel_length_config>
 8019082:	4620      	mov	r0, r4
 8019084:	2306      	movs	r3, #6
 8019086:	2210      	movs	r2, #16
 8019088:	2100      	movs	r1, #0
 801908a:	f000 fb8e 	bl	80197aa <adc_inserted_channel_config>
 801908e:	4620      	mov	r0, r4
 8019090:	2306      	movs	r3, #6
 8019092:	2211      	movs	r2, #17
 8019094:	2101      	movs	r1, #1
 8019096:	f000 fb88 	bl	80197aa <adc_inserted_channel_config>
 801909a:	2306      	movs	r3, #6
 801909c:	4620      	mov	r0, r4
 801909e:	2212      	movs	r2, #18
 80190a0:	2102      	movs	r1, #2
 80190a2:	f000 fb82 	bl	80197aa <adc_inserted_channel_config>
 80190a6:	2200      	movs	r2, #0
 80190a8:	4620      	mov	r0, r4
 80190aa:	2102      	movs	r1, #2
 80190ac:	f000 fbad 	bl	801980a <adc_external_trigger_config>
 80190b0:	4620      	mov	r0, r4
 80190b2:	2100      	movs	r1, #0
 80190b4:	f000 fb12 	bl	80196dc <adc_data_alignment_config>
 80190b8:	2201      	movs	r2, #1
 80190ba:	4620      	mov	r0, r4
 80190bc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80190c0:	f000 fae4 	bl	801968c <adc_special_function_config>
 80190c4:	2101      	movs	r1, #1
 80190c6:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 80190ca:	f000 fb29 	bl	8019720 <adc_channel_16_to_18>
 80190ce:	2101      	movs	r1, #1
 80190d0:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 80190d4:	f000 fb24 	bl	8019720 <adc_channel_16_to_18>
 80190d8:	4620      	mov	r0, r4
 80190da:	f000 fb08 	bl	80196ee <adc_enable>
 80190de:	2100      	movs	r1, #0
 80190e0:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80190e4:	f7ff ff80 	bl	8018fe8 <udelay(unsigned long, unsigned long)>
 80190e8:	4620      	mov	r0, r4
 80190ea:	f000 fb08 	bl	80196fe <adc_calibration_enable>
 80190ee:	4620      	mov	r0, r4
 80190f0:	2102      	movs	r1, #2
 80190f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190f6:	f000 bb9e 	b.w	8019836 <adc_software_trigger_enable>
 80190fa:	bf00      	nop
 80190fc:	40012000 	andmi	r2, r1, r0

08019100 <send_stop() [clone .isra.0]>:
 8019100:	b508      	push	{r3, lr}
 8019102:	4806      	ldr	r0, [pc, #24]	@ (801911c <send_stop() [clone .isra.0]+0x1c>)
 8019104:	f000 fc26 	bl	8019954 <i2c_stop_on_bus>
 8019108:	4905      	ldr	r1, [pc, #20]	@ (8019120 <send_stop() [clone .isra.0]+0x20>)
 801910a:	f640 73ff 	movw	r3, #4095	@ 0xfff
 801910e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	@ 0x400
 8019112:	0592      	lsls	r2, r2, #22
 8019114:	d501      	bpl.n	801911a <send_stop() [clone .isra.0]+0x1a>
 8019116:	3b01      	subs	r3, #1
 8019118:	d1f9      	bne.n	801910e <send_stop() [clone .isra.0]+0xe>
 801911a:	bd08      	pop	{r3, pc}
 801911c:	40005400 	andmi	r5, r0, r0, lsl #8
 8019120:	40005000 	andmi	r5, r0, r0

08019124 <gd32_i2c_begin>:
 8019124:	b510      	push	{r4, lr}
 8019126:	f241 0015 	movw	r0, #4117	@ 0x1015
 801912a:	4c22      	ldr	r4, [pc, #136]	@ (80191b4 <gd32_i2c_begin+0x90>)
 801912c:	f7ff fa48 	bl	80185c0 <rcu_periph_clock_enable>
 8019130:	f640 4001 	movw	r0, #3073	@ 0xc01
 8019134:	f7ff fa44 	bl	80185c0 <rcu_periph_clock_enable>
 8019138:	f640 4001 	movw	r0, #3073	@ 0xc01
 801913c:	f7ff fa40 	bl	80185c0 <rcu_periph_clock_enable>
 8019140:	4620      	mov	r0, r4
 8019142:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8019146:	2104      	movs	r1, #4
 8019148:	f7ff f9f6 	bl	8018538 <gpio_af_set>
 801914c:	4620      	mov	r0, r4
 801914e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8019152:	2201      	movs	r2, #1
 8019154:	2102      	movs	r1, #2
 8019156:	f7ff f9ad 	bl	80184b4 <gpio_mode_set>
 801915a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801915e:	4620      	mov	r0, r4
 8019160:	2202      	movs	r2, #2
 8019162:	2101      	movs	r1, #1
 8019164:	f7ff f9c8 	bl	80184f8 <gpio_output_options_set>
 8019168:	4620      	mov	r0, r4
 801916a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 801916e:	2104      	movs	r1, #4
 8019170:	f7ff f9e2 	bl	8018538 <gpio_af_set>
 8019174:	4620      	mov	r0, r4
 8019176:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801917a:	2201      	movs	r2, #1
 801917c:	2102      	movs	r1, #2
 801917e:	f7ff f999 	bl	80184b4 <gpio_mode_set>
 8019182:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019186:	4620      	mov	r0, r4
 8019188:	2202      	movs	r2, #2
 801918a:	f5a4 34d8 	sub.w	r4, r4, #110592	@ 0x1b000
 801918e:	2101      	movs	r1, #1
 8019190:	f7ff f9b2 	bl	80184f8 <gpio_output_options_set>
 8019194:	4908      	ldr	r1, [pc, #32]	@ (80191b8 <gd32_i2c_begin+0x94>)
 8019196:	4620      	mov	r0, r4
 8019198:	2200      	movs	r2, #0
 801919a:	f000 fb5b 	bl	8019854 <i2c_clock_config>
 801919e:	4620      	mov	r0, r4
 80191a0:	f000 fbce 	bl	8019940 <i2c_enable>
 80191a4:	4620      	mov	r0, r4
 80191a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80191aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191ae:	f000 bbb3 	b.w	8019918 <i2c_ack_config>
 80191b2:	bf00      	nop
 80191b4:	40020400 	andmi	r0, r2, r0, lsl #8
 80191b8:	00061a80 	andeq	r1, r6, r0, lsl #21

080191bc <gd32_i2c_set_baudrate>:
 80191bc:	4601      	mov	r1, r0
 80191be:	2200      	movs	r2, #0
 80191c0:	4801      	ldr	r0, [pc, #4]	@ (80191c8 <gd32_i2c_set_baudrate+0xc>)
 80191c2:	f000 bb47 	b.w	8019854 <i2c_clock_config>
 80191c6:	bf00      	nop
 80191c8:	40005400 	andmi	r5, r0, r0, lsl #8

080191cc <gd32_i2c_set_address>:
 80191cc:	4b01      	ldr	r3, [pc, #4]	@ (80191d4 <gd32_i2c_set_address+0x8>)
 80191ce:	0040      	lsls	r0, r0, #1
 80191d0:	7018      	strb	r0, [r3, #0]
 80191d2:	4770      	bx	lr
 80191d4:	2000a3b8 			@ <UNDEFINED> instruction: 0x2000a3b8

080191d8 <gd32_i2c_write>:
 80191d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80191da:	4f30      	ldr	r7, [pc, #192]	@ (801929c <gd32_i2c_write+0xc4>)
 80191dc:	4604      	mov	r4, r0
 80191de:	460d      	mov	r5, r1
 80191e0:	f640 76ff 	movw	r6, #4095	@ 0xfff
 80191e4:	f240 6101 	movw	r1, #1537	@ 0x601
 80191e8:	4638      	mov	r0, r7
 80191ea:	f000 fbbd 	bl	8019968 <i2c_flag_get>
 80191ee:	bb90      	cbnz	r0, 8019256 <gd32_i2c_write+0x7e>
 80191f0:	482a      	ldr	r0, [pc, #168]	@ (801929c <gd32_i2c_write+0xc4>)
 80191f2:	4f2a      	ldr	r7, [pc, #168]	@ (801929c <gd32_i2c_write+0xc4>)
 80191f4:	f000 fba9 	bl	801994a <i2c_start_on_bus>
 80191f8:	f640 76ff 	movw	r6, #4095	@ 0xfff
 80191fc:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 8019200:	4638      	mov	r0, r7
 8019202:	f000 fbb1 	bl	8019968 <i2c_flag_get>
 8019206:	b370      	cbz	r0, 8019266 <gd32_i2c_write+0x8e>
 8019208:	4b25      	ldr	r3, [pc, #148]	@ (80192a0 <gd32_i2c_write+0xc8>)
 801920a:	4824      	ldr	r0, [pc, #144]	@ (801929c <gd32_i2c_write+0xc4>)
 801920c:	7819      	ldrb	r1, [r3, #0]
 801920e:	4f23      	ldr	r7, [pc, #140]	@ (801929c <gd32_i2c_write+0xc4>)
 8019210:	f06f 0201 	mvn.w	r2, #1
 8019214:	f000 fb8c 	bl	8019930 <i2c_master_addressing>
 8019218:	f640 76ff 	movw	r6, #4095	@ 0xfff
 801921c:	f240 5101 	movw	r1, #1281	@ 0x501
 8019220:	4638      	mov	r0, r7
 8019222:	f000 fba1 	bl	8019968 <i2c_flag_get>
 8019226:	b308      	cbz	r0, 801926c <gd32_i2c_write+0x94>
 8019228:	481c      	ldr	r0, [pc, #112]	@ (801929c <gd32_i2c_write+0xc4>)
 801922a:	4f1c      	ldr	r7, [pc, #112]	@ (801929c <gd32_i2c_write+0xc4>)
 801922c:	f240 5101 	movw	r1, #1281	@ 0x501
 8019230:	f000 fba2 	bl	8019978 <i2c_flag_clear>
 8019234:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8019238:	f240 5107 	movw	r1, #1287	@ 0x507
 801923c:	4638      	mov	r0, r7
 801923e:	f000 fb93 	bl	8019968 <i2c_flag_get>
 8019242:	2801      	cmp	r0, #1
 8019244:	d115      	bne.n	8019272 <gd32_i2c_write+0x9a>
 8019246:	4f15      	ldr	r7, [pc, #84]	@ (801929c <gd32_i2c_write+0xc4>)
 8019248:	4425      	add	r5, r4
 801924a:	42ac      	cmp	r4, r5
 801924c:	d114      	bne.n	8019278 <gd32_i2c_write+0xa0>
 801924e:	f7ff ff57 	bl	8019100 <send_stop() [clone .isra.0]>
 8019252:	2000      	movs	r0, #0
 8019254:	e005      	b.n	8019262 <gd32_i2c_write+0x8a>
 8019256:	3e01      	subs	r6, #1
 8019258:	d1c4      	bne.n	80191e4 <gd32_i2c_write+0xc>
 801925a:	f7ff ff51 	bl	8019100 <send_stop() [clone .isra.0]>
 801925e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8019262:	4240      	negs	r0, r0
 8019264:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019266:	3e01      	subs	r6, #1
 8019268:	d1c8      	bne.n	80191fc <gd32_i2c_write+0x24>
 801926a:	e7f6      	b.n	801925a <gd32_i2c_write+0x82>
 801926c:	3e01      	subs	r6, #1
 801926e:	d1d5      	bne.n	801921c <gd32_i2c_write+0x44>
 8019270:	e7f3      	b.n	801925a <gd32_i2c_write+0x82>
 8019272:	3e01      	subs	r6, #1
 8019274:	d1e0      	bne.n	8019238 <gd32_i2c_write+0x60>
 8019276:	e7f0      	b.n	801925a <gd32_i2c_write+0x82>
 8019278:	f814 1b01 	ldrb.w	r1, [r4], #1
 801927c:	4638      	mov	r0, r7
 801927e:	f000 fb6e 	bl	801995e <i2c_data_transmit>
 8019282:	f640 76ff 	movw	r6, #4095	@ 0xfff
 8019286:	f240 5102 	movw	r1, #1282	@ 0x502
 801928a:	4638      	mov	r0, r7
 801928c:	f000 fb6c 	bl	8019968 <i2c_flag_get>
 8019290:	2800      	cmp	r0, #0
 8019292:	d1da      	bne.n	801924a <gd32_i2c_write+0x72>
 8019294:	3e01      	subs	r6, #1
 8019296:	d1f6      	bne.n	8019286 <gd32_i2c_write+0xae>
 8019298:	e7df      	b.n	801925a <gd32_i2c_write+0x82>
 801929a:	bf00      	nop
 801929c:	40005400 	andmi	r5, r0, r0, lsl #8
 80192a0:	2000a3b8 			@ <UNDEFINED> instruction: 0x2000a3b8

080192a4 <gd32_i2c_read>:
 80192a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80192a8:	4f4e      	ldr	r7, [pc, #312]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192aa:	4680      	mov	r8, r0
 80192ac:	460c      	mov	r4, r1
 80192ae:	f640 75ff 	movw	r5, #4095	@ 0xfff
 80192b2:	f240 6101 	movw	r1, #1537	@ 0x601
 80192b6:	4638      	mov	r0, r7
 80192b8:	f000 fb56 	bl	8019968 <i2c_flag_get>
 80192bc:	4606      	mov	r6, r0
 80192be:	bb10      	cbnz	r0, 8019306 <gd32_i2c_read+0x62>
 80192c0:	2c02      	cmp	r4, #2
 80192c2:	d104      	bne.n	80192ce <gd32_i2c_read+0x2a>
 80192c4:	4847      	ldr	r0, [pc, #284]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192c6:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80192ca:	f000 fb2b 	bl	8019924 <i2c_ackpos_config>
 80192ce:	4845      	ldr	r0, [pc, #276]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192d0:	4f44      	ldr	r7, [pc, #272]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192d2:	f000 fb3a 	bl	801994a <i2c_start_on_bus>
 80192d6:	f640 75ff 	movw	r5, #4095	@ 0xfff
 80192da:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 80192de:	4638      	mov	r0, r7
 80192e0:	f000 fb42 	bl	8019968 <i2c_flag_get>
 80192e4:	b1b8      	cbz	r0, 8019316 <gd32_i2c_read+0x72>
 80192e6:	4b40      	ldr	r3, [pc, #256]	@ (80193e8 <gd32_i2c_read+0x144>)
 80192e8:	483e      	ldr	r0, [pc, #248]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192ea:	7819      	ldrb	r1, [r3, #0]
 80192ec:	2201      	movs	r2, #1
 80192ee:	f000 fb1f 	bl	8019930 <i2c_master_addressing>
 80192f2:	2c02      	cmp	r4, #2
 80192f4:	d803      	bhi.n	80192fe <gd32_i2c_read+0x5a>
 80192f6:	483b      	ldr	r0, [pc, #236]	@ (80193e4 <gd32_i2c_read+0x140>)
 80192f8:	2100      	movs	r1, #0
 80192fa:	f000 fb0d 	bl	8019918 <i2c_ack_config>
 80192fe:	4f39      	ldr	r7, [pc, #228]	@ (80193e4 <gd32_i2c_read+0x140>)
 8019300:	f640 75ff 	movw	r5, #4095	@ 0xfff
 8019304:	e00c      	b.n	8019320 <gd32_i2c_read+0x7c>
 8019306:	3d01      	subs	r5, #1
 8019308:	d1d3      	bne.n	80192b2 <gd32_i2c_read+0xe>
 801930a:	f7ff fef9 	bl	8019100 <send_stop() [clone .isra.0]>
 801930e:	2604      	movs	r6, #4
 8019310:	4630      	mov	r0, r6
 8019312:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019316:	3d01      	subs	r5, #1
 8019318:	d1df      	bne.n	80192da <gd32_i2c_read+0x36>
 801931a:	e7f6      	b.n	801930a <gd32_i2c_read+0x66>
 801931c:	3d01      	subs	r5, #1
 801931e:	d0f4      	beq.n	801930a <gd32_i2c_read+0x66>
 8019320:	f240 5101 	movw	r1, #1281	@ 0x501
 8019324:	4638      	mov	r0, r7
 8019326:	f000 fb1f 	bl	8019968 <i2c_flag_get>
 801932a:	2800      	cmp	r0, #0
 801932c:	d0f6      	beq.n	801931c <gd32_i2c_read+0x78>
 801932e:	482d      	ldr	r0, [pc, #180]	@ (80193e4 <gd32_i2c_read+0x140>)
 8019330:	f240 5101 	movw	r1, #1281	@ 0x501
 8019334:	f000 fb20 	bl	8019978 <i2c_flag_clear>
 8019338:	2c01      	cmp	r4, #1
 801933a:	d102      	bne.n	8019342 <gd32_i2c_read+0x9e>
 801933c:	4829      	ldr	r0, [pc, #164]	@ (80193e4 <gd32_i2c_read+0x140>)
 801933e:	f000 fb09 	bl	8019954 <i2c_stop_on_bus>
 8019342:	4d28      	ldr	r5, [pc, #160]	@ (80193e4 <gd32_i2c_read+0x140>)
 8019344:	f640 77ff 	movw	r7, #4095	@ 0xfff
 8019348:	e022      	b.n	8019390 <gd32_i2c_read+0xec>
 801934a:	2c03      	cmp	r4, #3
 801934c:	d134      	bne.n	80193b8 <gd32_i2c_read+0x114>
 801934e:	f640 79ff 	movw	r9, #4095	@ 0xfff
 8019352:	e002      	b.n	801935a <gd32_i2c_read+0xb6>
 8019354:	f1b9 0901 	subs.w	r9, r9, #1
 8019358:	d0d7      	beq.n	801930a <gd32_i2c_read+0x66>
 801935a:	f240 5102 	movw	r1, #1282	@ 0x502
 801935e:	4628      	mov	r0, r5
 8019360:	f000 fb02 	bl	8019968 <i2c_flag_get>
 8019364:	2800      	cmp	r0, #0
 8019366:	d0f5      	beq.n	8019354 <gd32_i2c_read+0xb0>
 8019368:	2100      	movs	r1, #0
 801936a:	4628      	mov	r0, r5
 801936c:	f000 fad4 	bl	8019918 <i2c_ack_config>
 8019370:	f240 5106 	movw	r1, #1286	@ 0x506
 8019374:	4628      	mov	r0, r5
 8019376:	f000 faf7 	bl	8019968 <i2c_flag_get>
 801937a:	b138      	cbz	r0, 801938c <gd32_i2c_read+0xe8>
 801937c:	4628      	mov	r0, r5
 801937e:	f000 faf0 	bl	8019962 <i2c_data_receive>
 8019382:	f808 0b01 	strb.w	r0, [r8], #1
 8019386:	3c01      	subs	r4, #1
 8019388:	f640 77ff 	movw	r7, #4095	@ 0xfff
 801938c:	3f01      	subs	r7, #1
 801938e:	d0bc      	beq.n	801930a <gd32_i2c_read+0x66>
 8019390:	2c00      	cmp	r4, #0
 8019392:	d1da      	bne.n	801934a <gd32_i2c_read+0xa6>
 8019394:	4a15      	ldr	r2, [pc, #84]	@ (80193ec <gd32_i2c_read+0x148>)
 8019396:	f640 73ff 	movw	r3, #4095	@ 0xfff
 801939a:	f8d2 4400 	ldr.w	r4, [r2, #1024]	@ 0x400
 801939e:	f414 7400 	ands.w	r4, r4, #512	@ 0x200
 80193a2:	d11c      	bne.n	80193de <gd32_i2c_read+0x13a>
 80193a4:	480f      	ldr	r0, [pc, #60]	@ (80193e4 <gd32_i2c_read+0x140>)
 80193a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80193aa:	f000 fab5 	bl	8019918 <i2c_ack_config>
 80193ae:	480d      	ldr	r0, [pc, #52]	@ (80193e4 <gd32_i2c_read+0x140>)
 80193b0:	4621      	mov	r1, r4
 80193b2:	f000 fab7 	bl	8019924 <i2c_ackpos_config>
 80193b6:	e7ab      	b.n	8019310 <gd32_i2c_read+0x6c>
 80193b8:	2c02      	cmp	r4, #2
 80193ba:	d1d9      	bne.n	8019370 <gd32_i2c_read+0xcc>
 80193bc:	f640 79ff 	movw	r9, #4095	@ 0xfff
 80193c0:	e002      	b.n	80193c8 <gd32_i2c_read+0x124>
 80193c2:	f1b9 0901 	subs.w	r9, r9, #1
 80193c6:	d0a0      	beq.n	801930a <gd32_i2c_read+0x66>
 80193c8:	f240 5102 	movw	r1, #1282	@ 0x502
 80193cc:	4628      	mov	r0, r5
 80193ce:	f000 facb 	bl	8019968 <i2c_flag_get>
 80193d2:	2800      	cmp	r0, #0
 80193d4:	d0f5      	beq.n	80193c2 <gd32_i2c_read+0x11e>
 80193d6:	4628      	mov	r0, r5
 80193d8:	f000 fabc 	bl	8019954 <i2c_stop_on_bus>
 80193dc:	e7c8      	b.n	8019370 <gd32_i2c_read+0xcc>
 80193de:	3b01      	subs	r3, #1
 80193e0:	d1db      	bne.n	801939a <gd32_i2c_read+0xf6>
 80193e2:	e794      	b.n	801930e <gd32_i2c_read+0x6a>
 80193e4:	40005400 	andmi	r5, r0, r0, lsl #8
 80193e8:	2000a3b8 			@ <UNDEFINED> instruction: 0x2000a3b8
 80193ec:	40005000 	andmi	r5, r0, r0

080193f0 <cs_high()>:
 80193f0:	4b05      	ldr	r3, [pc, #20]	@ (8019408 <cs_high()+0x18>)
 80193f2:	781b      	ldrb	r3, [r3, #0]
 80193f4:	b93b      	cbnz	r3, 8019406 <cs_high()+0x16>
 80193f6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80193fa:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 80193fe:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8019402:	f8c3 2818 	str.w	r2, [r3, #2072]	@ 0x818
 8019406:	4770      	bx	lr
 8019408:	2000a3b9 			@ <UNDEFINED> instruction: 0x2000a3b9

0801940c <cs_low()>:
 801940c:	4b05      	ldr	r3, [pc, #20]	@ (8019424 <cs_low()+0x18>)
 801940e:	781b      	ldrb	r3, [r3, #0]
 8019410:	b93b      	cbnz	r3, 8019422 <cs_low()+0x16>
 8019412:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8019416:	f503 3304 	add.w	r3, r3, #135168	@ 0x21000
 801941a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 801941e:	f8c3 2828 	str.w	r2, [r3, #2088]	@ 0x828
 8019422:	4770      	bx	lr
 8019424:	2000a3b9 			@ <UNDEFINED> instruction: 0x2000a3b9

08019428 <send_byte(unsigned char)>:
 8019428:	4b07      	ldr	r3, [pc, #28]	@ (8019448 <send_byte(unsigned char)+0x20>)
 801942a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408
 801942e:	0791      	lsls	r1, r2, #30
 8019430:	d5fb      	bpl.n	801942a <send_byte(unsigned char)+0x2>
 8019432:	f8c3 040c 	str.w	r0, [r3, #1036]	@ 0x40c
 8019436:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408
 801943a:	07d2      	lsls	r2, r2, #31
 801943c:	d5fb      	bpl.n	8019436 <send_byte(unsigned char)+0xe>
 801943e:	f8d3 040c 	ldr.w	r0, [r3, #1036]	@ 0x40c
 8019442:	b2c0      	uxtb	r0, r0
 8019444:	4770      	bx	lr
 8019446:	bf00      	nop
 8019448:	40015000 	andmi	r5, r1, r0

0801944c <gd32_spi_begin()>:
 801944c:	b510      	push	{r4, lr}
 801944e:	f241 1015 	movw	r0, #4373	@ 0x1115
 8019452:	b088      	sub	sp, #32
 8019454:	f7ff f8b4 	bl	80185c0 <rcu_periph_clock_enable>
 8019458:	4c25      	ldr	r4, [pc, #148]	@ (80194f0 <gd32_spi_begin()+0xa4>)
 801945a:	f640 4006 	movw	r0, #3078	@ 0xc06
 801945e:	f7ff f8af 	bl	80185c0 <rcu_periph_clock_enable>
 8019462:	f640 4006 	movw	r0, #3078	@ 0xc06
 8019466:	f7ff f8ab 	bl	80185c0 <rcu_periph_clock_enable>
 801946a:	4620      	mov	r0, r4
 801946c:	f44f 42e0 	mov.w	r2, #28672	@ 0x7000
 8019470:	2105      	movs	r1, #5
 8019472:	f7ff f861 	bl	8018538 <gpio_af_set>
 8019476:	4620      	mov	r0, r4
 8019478:	f44f 43e0 	mov.w	r3, #28672	@ 0x7000
 801947c:	2200      	movs	r2, #0
 801947e:	2102      	movs	r1, #2
 8019480:	f7ff f818 	bl	80184b4 <gpio_mode_set>
 8019484:	4620      	mov	r0, r4
 8019486:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 801948a:	2202      	movs	r2, #2
 801948c:	2100      	movs	r1, #0
 801948e:	f7ff f833 	bl	80184f8 <gpio_output_options_set>
 8019492:	4620      	mov	r0, r4
 8019494:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019498:	2200      	movs	r2, #0
 801949a:	2101      	movs	r1, #1
 801949c:	f7ff f80a 	bl	80184b4 <gpio_mode_set>
 80194a0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80194a4:	2202      	movs	r2, #2
 80194a6:	2100      	movs	r1, #0
 80194a8:	4620      	mov	r0, r4
 80194aa:	f5a4 4444 	sub.w	r4, r4, #50176	@ 0xc400
 80194ae:	f7ff f823 	bl	80184f8 <gpio_output_options_set>
 80194b2:	4620      	mov	r0, r4
 80194b4:	f7ff ff9c 	bl	80193f0 <cs_high()>
 80194b8:	f000 fad7 	bl	8019a6a <spi_disable>
 80194bc:	4620      	mov	r0, r4
 80194be:	f000 fa6d 	bl	801999c <spi_i2s_deinit>
 80194c2:	2300      	movs	r3, #0
 80194c4:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80194c8:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80194cc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80194d0:	9204      	str	r2, [sp, #16]
 80194d2:	a901      	add	r1, sp, #4
 80194d4:	2228      	movs	r2, #40	@ 0x28
 80194d6:	4620      	mov	r0, r4
 80194d8:	9303      	str	r3, [sp, #12]
 80194da:	9306      	str	r3, [sp, #24]
 80194dc:	9207      	str	r2, [sp, #28]
 80194de:	9305      	str	r3, [sp, #20]
 80194e0:	f000 faa6 	bl	8019a30 <spi_init>
 80194e4:	4620      	mov	r0, r4
 80194e6:	f000 fabb 	bl	8019a60 <spi_enable>
 80194ea:	b008      	add	sp, #32
 80194ec:	bd10      	pop	{r4, pc}
 80194ee:	bf00      	nop
 80194f0:	40021800 	andmi	r1, r2, r0, lsl #16

080194f4 <gd32_spi_set_speed_hz(unsigned long)>:
 80194f4:	b538      	push	{r3, r4, r5, lr}
 80194f6:	4d19      	ldr	r5, [pc, #100]	@ (801955c <gd32_spi_set_speed_hz(unsigned long)+0x68>)
 80194f8:	4b19      	ldr	r3, [pc, #100]	@ (8019560 <gd32_spi_set_speed_hz(unsigned long)+0x6c>)
 80194fa:	f8d5 4400 	ldr.w	r4, [r5, #1024]	@ 0x400
 80194fe:	fbb3 f0f0 	udiv	r0, r3, r0
 8019502:	2802      	cmp	r0, #2
 8019504:	f024 0438 	bic.w	r4, r4, #56	@ 0x38
 8019508:	d903      	bls.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 801950a:	2804      	cmp	r0, #4
 801950c:	d80b      	bhi.n	8019526 <gd32_spi_set_speed_hz(unsigned long)+0x32>
 801950e:	f044 0408 	orr.w	r4, r4, #8
 8019512:	4814      	ldr	r0, [pc, #80]	@ (8019564 <gd32_spi_set_speed_hz(unsigned long)+0x70>)
 8019514:	f000 faa9 	bl	8019a6a <spi_disable>
 8019518:	f8c5 4400 	str.w	r4, [r5, #1024]	@ 0x400
 801951c:	4811      	ldr	r0, [pc, #68]	@ (8019564 <gd32_spi_set_speed_hz(unsigned long)+0x70>)
 801951e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019522:	f000 ba9d 	b.w	8019a60 <spi_enable>
 8019526:	2808      	cmp	r0, #8
 8019528:	d802      	bhi.n	8019530 <gd32_spi_set_speed_hz(unsigned long)+0x3c>
 801952a:	f044 0410 	orr.w	r4, r4, #16
 801952e:	e7f0      	b.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 8019530:	2810      	cmp	r0, #16
 8019532:	d802      	bhi.n	801953a <gd32_spi_set_speed_hz(unsigned long)+0x46>
 8019534:	f044 0418 	orr.w	r4, r4, #24
 8019538:	e7eb      	b.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 801953a:	2820      	cmp	r0, #32
 801953c:	d802      	bhi.n	8019544 <gd32_spi_set_speed_hz(unsigned long)+0x50>
 801953e:	f044 0420 	orr.w	r4, r4, #32
 8019542:	e7e6      	b.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 8019544:	2840      	cmp	r0, #64	@ 0x40
 8019546:	d802      	bhi.n	801954e <gd32_spi_set_speed_hz(unsigned long)+0x5a>
 8019548:	f044 0428 	orr.w	r4, r4, #40	@ 0x28
 801954c:	e7e1      	b.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 801954e:	2880      	cmp	r0, #128	@ 0x80
 8019550:	bf94      	ite	ls
 8019552:	f044 0430 	orrls.w	r4, r4, #48	@ 0x30
 8019556:	f044 0438 	orrhi.w	r4, r4, #56	@ 0x38
 801955a:	e7da      	b.n	8019512 <gd32_spi_set_speed_hz(unsigned long)+0x1e>
 801955c:	40015000 	andmi	r5, r1, r0
 8019560:	03938700 	orrseq	r8, r3, #0, 14
 8019564:	40015400 	andmi	r5, r1, r0, lsl #8

08019568 <gd32_spi_setDataMode(unsigned char)>:
 8019568:	b570      	push	{r4, r5, r6, lr}
 801956a:	4e08      	ldr	r6, [pc, #32]	@ (801958c <gd32_spi_setDataMode(unsigned char)+0x24>)
 801956c:	4d08      	ldr	r5, [pc, #32]	@ (8019590 <gd32_spi_setDataMode(unsigned char)+0x28>)
 801956e:	f8d6 4400 	ldr.w	r4, [r6, #1024]	@ 0x400
 8019572:	f360 0401 	bfi	r4, r0, #0, #2
 8019576:	4628      	mov	r0, r5
 8019578:	f000 fa77 	bl	8019a6a <spi_disable>
 801957c:	f8c6 4400 	str.w	r4, [r6, #1024]	@ 0x400
 8019580:	4628      	mov	r0, r5
 8019582:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019586:	f000 ba6b 	b.w	8019a60 <spi_enable>
 801958a:	bf00      	nop
 801958c:	40015000 	andmi	r5, r1, r0
 8019590:	40015400 	andmi	r5, r1, r0, lsl #8

08019594 <gd32_spi_chipSelect(unsigned char)>:
 8019594:	4b04      	ldr	r3, [pc, #16]	@ (80195a8 <gd32_spi_chipSelect(unsigned char)+0x14>)
 8019596:	7018      	strb	r0, [r3, #0]
 8019598:	b910      	cbnz	r0, 80195a0 <gd32_spi_chipSelect(unsigned char)+0xc>
 801959a:	4804      	ldr	r0, [pc, #16]	@ (80195ac <gd32_spi_chipSelect(unsigned char)+0x18>)
 801959c:	f000 ba6a 	b.w	8019a74 <spi_nss_output_enable>
 80195a0:	4802      	ldr	r0, [pc, #8]	@ (80195ac <gd32_spi_chipSelect(unsigned char)+0x18>)
 80195a2:	f000 ba6c 	b.w	8019a7e <spi_nss_output_disable>
 80195a6:	bf00      	nop
 80195a8:	2000a3b9 			@ <UNDEFINED> instruction: 0x2000a3b9
 80195ac:	40015400 	andmi	r5, r1, r0, lsl #8

080195b0 <gd32_spi_transfernb(char const*, char*, unsigned long)>:
 80195b0:	b570      	push	{r4, r5, r6, lr}
 80195b2:	4616      	mov	r6, r2
 80195b4:	f7ff ff2a 	bl	801940c <cs_low()>
 80195b8:	460c      	mov	r4, r1
 80195ba:	1e45      	subs	r5, r0, #1
 80195bc:	440e      	add	r6, r1
 80195be:	42b4      	cmp	r4, r6
 80195c0:	d103      	bne.n	80195ca <gd32_spi_transfernb(char const*, char*, unsigned long)+0x1a>
 80195c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80195c6:	f7ff bf13 	b.w	80193f0 <cs_high()>
 80195ca:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 80195ce:	f7ff ff2b 	bl	8019428 <send_byte(unsigned char)>
 80195d2:	f804 0b01 	strb.w	r0, [r4], #1
 80195d6:	e7f2      	b.n	80195be <gd32_spi_transfernb(char const*, char*, unsigned long)+0xe>

080195d8 <gd32_spi_writenb(char const*, unsigned long)>:
 80195d8:	b538      	push	{r3, r4, r5, lr}
 80195da:	f7ff ff17 	bl	801940c <cs_low()>
 80195de:	4604      	mov	r4, r0
 80195e0:	1845      	adds	r5, r0, r1
 80195e2:	42ac      	cmp	r4, r5
 80195e4:	d103      	bne.n	80195ee <gd32_spi_writenb(char const*, unsigned long)+0x16>
 80195e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80195ea:	f7ff bf01 	b.w	80193f0 <cs_high()>
 80195ee:	f814 0b01 	ldrb.w	r0, [r4], #1
 80195f2:	f7ff ff19 	bl	8019428 <send_byte(unsigned char)>
 80195f6:	e7f4      	b.n	80195e2 <gd32_spi_writenb(char const*, unsigned long)+0xa>

080195f8 <uart0_init>:
 80195f8:	b507      	push	{r0, r1, r2, lr}
 80195fa:	2301      	movs	r3, #1
 80195fc:	9300      	str	r3, [sp, #0]
 80195fe:	4805      	ldr	r0, [pc, #20]	@ (8019614 <uart0_init+0x1c>)
 8019600:	2300      	movs	r3, #0
 8019602:	2208      	movs	r2, #8
 8019604:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8019608:	f7ff fac2 	bl	8018b90 <gd32_uart_begin(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
 801960c:	b003      	add	sp, #12
 801960e:	f85d fb04 	ldr.w	pc, [sp], #4
 8019612:	bf00      	nop
 8019614:	40011000 	andmi	r1, r1, r0

08019618 <uart0_putc>:
 8019618:	280a      	cmp	r0, #10
 801961a:	b570      	push	{r4, r5, r6, lr}
 801961c:	4d0a      	ldr	r5, [pc, #40]	@ (8019648 <uart0_putc+0x30>)
 801961e:	4604      	mov	r4, r0
 8019620:	d107      	bne.n	8019632 <uart0_putc+0x1a>
 8019622:	2107      	movs	r1, #7
 8019624:	4628      	mov	r0, r5
 8019626:	f7ff fa8d 	bl	8018b44 <usart_flag_get>
 801962a:	2800      	cmp	r0, #0
 801962c:	d0f9      	beq.n	8019622 <uart0_putc+0xa>
 801962e:	230d      	movs	r3, #13
 8019630:	606b      	str	r3, [r5, #4]
 8019632:	4e05      	ldr	r6, [pc, #20]	@ (8019648 <uart0_putc+0x30>)
 8019634:	2107      	movs	r1, #7
 8019636:	4630      	mov	r0, r6
 8019638:	f7ff fa84 	bl	8018b44 <usart_flag_get>
 801963c:	2800      	cmp	r0, #0
 801963e:	d0f9      	beq.n	8019634 <uart0_putc+0x1c>
 8019640:	b2e4      	uxtb	r4, r4
 8019642:	606c      	str	r4, [r5, #4]
 8019644:	bd70      	pop	{r4, r5, r6, pc}
 8019646:	bf00      	nop
 8019648:	40011000 	andmi	r1, r1, r0

0801964c <uart0_puts>:
 801964c:	b510      	push	{r4, lr}
 801964e:	1e44      	subs	r4, r0, #1
 8019650:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8019654:	b903      	cbnz	r3, 8019658 <uart0_puts+0xc>
 8019656:	bd10      	pop	{r4, pc}
 8019658:	2b0a      	cmp	r3, #10
 801965a:	d102      	bne.n	8019662 <uart0_puts+0x16>
 801965c:	200d      	movs	r0, #13
 801965e:	f7ff ffdb 	bl	8019618 <uart0_putc>
 8019662:	7820      	ldrb	r0, [r4, #0]
 8019664:	f7ff ffd8 	bl	8019618 <uart0_putc>
 8019668:	e7f2      	b.n	8019650 <uart0_puts+0x4>
	...

0801966c <adc_clock_config>:
 801966c:	4b06      	ldr	r3, [pc, #24]	@ (8019688 <adc_clock_config+0x1c>)
 801966e:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8019672:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8019676:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 801967a:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 801967e:	4302      	orrs	r2, r0
 8019680:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
 8019684:	4770      	bx	lr
 8019686:	bf00      	nop
 8019688:	40012000 	andmi	r2, r1, r0

0801968c <adc_special_function_config>:
 801968c:	b510      	push	{r4, lr}
 801968e:	f401 7380 	and.w	r3, r1, #256	@ 0x100
 8019692:	f401 6480 	and.w	r4, r1, #1024	@ 0x400
 8019696:	f001 0102 	and.w	r1, r1, #2
 801969a:	b17a      	cbz	r2, 80196bc <adc_special_function_config+0x30>
 801969c:	b11b      	cbz	r3, 80196a6 <adc_special_function_config+0x1a>
 801969e:	6843      	ldr	r3, [r0, #4]
 80196a0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80196a4:	6043      	str	r3, [r0, #4]
 80196a6:	b11c      	cbz	r4, 80196b0 <adc_special_function_config+0x24>
 80196a8:	6843      	ldr	r3, [r0, #4]
 80196aa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80196ae:	6043      	str	r3, [r0, #4]
 80196b0:	b119      	cbz	r1, 80196ba <adc_special_function_config+0x2e>
 80196b2:	6883      	ldr	r3, [r0, #8]
 80196b4:	f043 0302 	orr.w	r3, r3, #2
 80196b8:	6083      	str	r3, [r0, #8]
 80196ba:	bd10      	pop	{r4, pc}
 80196bc:	b11b      	cbz	r3, 80196c6 <adc_special_function_config+0x3a>
 80196be:	6843      	ldr	r3, [r0, #4]
 80196c0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80196c4:	6043      	str	r3, [r0, #4]
 80196c6:	b11c      	cbz	r4, 80196d0 <adc_special_function_config+0x44>
 80196c8:	6843      	ldr	r3, [r0, #4]
 80196ca:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80196ce:	6043      	str	r3, [r0, #4]
 80196d0:	2900      	cmp	r1, #0
 80196d2:	d0f2      	beq.n	80196ba <adc_special_function_config+0x2e>
 80196d4:	6883      	ldr	r3, [r0, #8]
 80196d6:	f023 0302 	bic.w	r3, r3, #2
 80196da:	e7ed      	b.n	80196b8 <adc_special_function_config+0x2c>

080196dc <adc_data_alignment_config>:
 80196dc:	6883      	ldr	r3, [r0, #8]
 80196de:	b119      	cbz	r1, 80196e8 <adc_data_alignment_config+0xc>
 80196e0:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80196e4:	6083      	str	r3, [r0, #8]
 80196e6:	4770      	bx	lr
 80196e8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80196ec:	e7fa      	b.n	80196e4 <adc_data_alignment_config+0x8>

080196ee <adc_enable>:
 80196ee:	6883      	ldr	r3, [r0, #8]
 80196f0:	07db      	lsls	r3, r3, #31
 80196f2:	bf5e      	ittt	pl
 80196f4:	6883      	ldrpl	r3, [r0, #8]
 80196f6:	f043 0301 	orrpl.w	r3, r3, #1
 80196fa:	6083      	strpl	r3, [r0, #8]
 80196fc:	4770      	bx	lr

080196fe <adc_calibration_enable>:
 80196fe:	6883      	ldr	r3, [r0, #8]
 8019700:	f043 0308 	orr.w	r3, r3, #8
 8019704:	f100 0208 	add.w	r2, r0, #8
 8019708:	6083      	str	r3, [r0, #8]
 801970a:	6813      	ldr	r3, [r2, #0]
 801970c:	0719      	lsls	r1, r3, #28
 801970e:	d4fc      	bmi.n	801970a <adc_calibration_enable+0xc>
 8019710:	6883      	ldr	r3, [r0, #8]
 8019712:	f043 0304 	orr.w	r3, r3, #4
 8019716:	6083      	str	r3, [r0, #8]
 8019718:	6813      	ldr	r3, [r2, #0]
 801971a:	075b      	lsls	r3, r3, #29
 801971c:	d4fc      	bmi.n	8019718 <adc_calibration_enable+0x1a>
 801971e:	4770      	bx	lr

08019720 <adc_channel_16_to_18>:
 8019720:	f400 0380 	and.w	r3, r0, #4194304	@ 0x400000
 8019724:	f400 0000 	and.w	r0, r0, #8388608	@ 0x800000
 8019728:	b181      	cbz	r1, 801974c <adc_channel_16_to_18+0x2c>
 801972a:	b133      	cbz	r3, 801973a <adc_channel_16_to_18+0x1a>
 801972c:	4a0f      	ldr	r2, [pc, #60]	@ (801976c <adc_channel_16_to_18+0x4c>)
 801972e:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8019732:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8019736:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 801973a:	b130      	cbz	r0, 801974a <adc_channel_16_to_18+0x2a>
 801973c:	4a0b      	ldr	r2, [pc, #44]	@ (801976c <adc_channel_16_to_18+0x4c>)
 801973e:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8019742:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8019746:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 801974a:	4770      	bx	lr
 801974c:	b133      	cbz	r3, 801975c <adc_channel_16_to_18+0x3c>
 801974e:	4a07      	ldr	r2, [pc, #28]	@ (801976c <adc_channel_16_to_18+0x4c>)
 8019750:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8019754:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8019758:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 801975c:	2800      	cmp	r0, #0
 801975e:	d0f4      	beq.n	801974a <adc_channel_16_to_18+0x2a>
 8019760:	4a02      	ldr	r2, [pc, #8]	@ (801976c <adc_channel_16_to_18+0x4c>)
 8019762:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 8019766:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 801976a:	e7ec      	b.n	8019746 <adc_channel_16_to_18+0x26>
 801976c:	40012000 	andmi	r2, r1, r0

08019770 <adc_channel_length_config>:
 8019770:	2901      	cmp	r1, #1
 8019772:	d002      	beq.n	801977a <adc_channel_length_config+0xa>
 8019774:	2902      	cmp	r1, #2
 8019776:	d00c      	beq.n	8019792 <adc_channel_length_config+0x22>
 8019778:	4770      	bx	lr
 801977a:	3a01      	subs	r2, #1
 801977c:	2a0f      	cmp	r2, #15
 801977e:	d813      	bhi.n	80197a8 <adc_channel_length_config+0x38>
 8019780:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8019782:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8019786:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8019788:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801978a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 801978e:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8019790:	4770      	bx	lr
 8019792:	3a01      	subs	r2, #1
 8019794:	2a03      	cmp	r2, #3
 8019796:	d807      	bhi.n	80197a8 <adc_channel_length_config+0x38>
 8019798:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801979a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 801979e:	6383      	str	r3, [r0, #56]	@ 0x38
 80197a0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80197a2:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80197a6:	6383      	str	r3, [r0, #56]	@ 0x38
 80197a8:	4770      	bx	lr

080197aa <adc_inserted_channel_config>:
 80197aa:	2903      	cmp	r1, #3
 80197ac:	b530      	push	{r4, r5, lr}
 80197ae:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 80197b0:	d80f      	bhi.n	80197d2 <adc_inserted_channel_config+0x28>
 80197b2:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80197b6:	1a61      	subs	r1, r4, r1
 80197b8:	f06f 0404 	mvn.w	r4, #4
 80197bc:	4361      	muls	r1, r4
 80197be:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 80197c0:	310f      	adds	r1, #15
 80197c2:	241f      	movs	r4, #31
 80197c4:	408c      	lsls	r4, r1
 80197c6:	ea25 0404 	bic.w	r4, r5, r4
 80197ca:	fa02 f101 	lsl.w	r1, r2, r1
 80197ce:	4321      	orrs	r1, r4
 80197d0:	6381      	str	r1, [r0, #56]	@ 0x38
 80197d2:	2a09      	cmp	r2, #9
 80197d4:	d80b      	bhi.n	80197ee <adc_inserted_channel_config+0x44>
 80197d6:	6901      	ldr	r1, [r0, #16]
 80197d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80197dc:	2407      	movs	r4, #7
 80197de:	4094      	lsls	r4, r2
 80197e0:	ea21 0104 	bic.w	r1, r1, r4
 80197e4:	fa03 f202 	lsl.w	r2, r3, r2
 80197e8:	430a      	orrs	r2, r1
 80197ea:	6102      	str	r2, [r0, #16]
 80197ec:	bd30      	pop	{r4, r5, pc}
 80197ee:	2a12      	cmp	r2, #18
 80197f0:	d8fc      	bhi.n	80197ec <adc_inserted_channel_config+0x42>
 80197f2:	3a0a      	subs	r2, #10
 80197f4:	68c1      	ldr	r1, [r0, #12]
 80197f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80197fa:	2407      	movs	r4, #7
 80197fc:	4094      	lsls	r4, r2
 80197fe:	ea21 0104 	bic.w	r1, r1, r4
 8019802:	4093      	lsls	r3, r2
 8019804:	430b      	orrs	r3, r1
 8019806:	60c3      	str	r3, [r0, #12]
 8019808:	e7f0      	b.n	80197ec <adc_inserted_channel_config+0x42>

0801980a <adc_external_trigger_config>:
 801980a:	2901      	cmp	r1, #1
 801980c:	d002      	beq.n	8019814 <adc_external_trigger_config+0xa>
 801980e:	2902      	cmp	r1, #2
 8019810:	d009      	beq.n	8019826 <adc_external_trigger_config+0x1c>
 8019812:	4770      	bx	lr
 8019814:	6883      	ldr	r3, [r0, #8]
 8019816:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 801981a:	6083      	str	r3, [r0, #8]
 801981c:	6883      	ldr	r3, [r0, #8]
 801981e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8019822:	6083      	str	r3, [r0, #8]
 8019824:	4770      	bx	lr
 8019826:	6883      	ldr	r3, [r0, #8]
 8019828:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 801982c:	6083      	str	r3, [r0, #8]
 801982e:	6883      	ldr	r3, [r0, #8]
 8019830:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8019834:	e7f5      	b.n	8019822 <adc_external_trigger_config+0x18>

08019836 <adc_software_trigger_enable>:
 8019836:	2901      	cmp	r1, #1
 8019838:	d002      	beq.n	8019840 <adc_software_trigger_enable+0xa>
 801983a:	2902      	cmp	r1, #2
 801983c:	d005      	beq.n	801984a <adc_software_trigger_enable+0x14>
 801983e:	4770      	bx	lr
 8019840:	6883      	ldr	r3, [r0, #8]
 8019842:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8019846:	6083      	str	r3, [r0, #8]
 8019848:	4770      	bx	lr
 801984a:	6883      	ldr	r3, [r0, #8]
 801984c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8019850:	e7f9      	b.n	8019846 <adc_software_trigger_enable+0x10>
	...

08019854 <i2c_clock_config>:
 8019854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019856:	4605      	mov	r5, r0
 8019858:	2002      	movs	r0, #2
 801985a:	460c      	mov	r4, r1
 801985c:	4617      	mov	r7, r2
 801985e:	f7fe feeb 	bl	8018638 <rcu_clock_freq_get>
 8019862:	4a29      	ldr	r2, [pc, #164]	@ (8019908 <i2c_clock_config+0xb4>)
 8019864:	686e      	ldr	r6, [r5, #4]
 8019866:	4603      	mov	r3, r0
 8019868:	4828      	ldr	r0, [pc, #160]	@ (801990c <i2c_clock_config+0xb8>)
 801986a:	fbb3 f0f0 	udiv	r0, r3, r0
 801986e:	4293      	cmp	r3, r2
 8019870:	bf34      	ite	cc
 8019872:	4601      	movcc	r1, r0
 8019874:	213c      	movcs	r1, #60	@ 0x3c
 8019876:	4a26      	ldr	r2, [pc, #152]	@ (8019910 <i2c_clock_config+0xbc>)
 8019878:	f026 063f 	bic.w	r6, r6, #63	@ 0x3f
 801987c:	430e      	orrs	r6, r1
 801987e:	4294      	cmp	r4, r2
 8019880:	606e      	str	r6, [r5, #4]
 8019882:	d816      	bhi.n	80198b2 <i2c_clock_config+0x5e>
 8019884:	3001      	adds	r0, #1
 8019886:	283b      	cmp	r0, #59	@ 0x3b
 8019888:	d90d      	bls.n	80198a6 <i2c_clock_config+0x52>
 801988a:	223c      	movs	r2, #60	@ 0x3c
 801988c:	622a      	str	r2, [r5, #32]
 801988e:	0064      	lsls	r4, r4, #1
 8019890:	fbb3 f4f4 	udiv	r4, r3, r4
 8019894:	2c04      	cmp	r4, #4
 8019896:	69ea      	ldr	r2, [r5, #28]
 8019898:	bf38      	it	cc
 801989a:	2404      	movcc	r4, #4
 801989c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 80198a0:	4314      	orrs	r4, r2
 80198a2:	61ec      	str	r4, [r5, #28]
 80198a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80198a6:	2802      	cmp	r0, #2
 80198a8:	d801      	bhi.n	80198ae <i2c_clock_config+0x5a>
 80198aa:	2202      	movs	r2, #2
 80198ac:	e7ee      	b.n	801988c <i2c_clock_config+0x38>
 80198ae:	6228      	str	r0, [r5, #32]
 80198b0:	e7ed      	b.n	801988e <i2c_clock_config+0x3a>
 80198b2:	4a18      	ldr	r2, [pc, #96]	@ (8019914 <i2c_clock_config+0xc0>)
 80198b4:	4294      	cmp	r4, r2
 80198b6:	d8f5      	bhi.n	80198a4 <i2c_clock_config+0x50>
 80198b8:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80198bc:	4351      	muls	r1, r2
 80198be:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80198c2:	fbb1 f1f2 	udiv	r1, r1, r2
 80198c6:	3101      	adds	r1, #1
 80198c8:	6229      	str	r1, [r5, #32]
 80198ca:	b9a7      	cbnz	r7, 80198f6 <i2c_clock_config+0xa2>
 80198cc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80198d0:	fbb3 f4f4 	udiv	r4, r3, r4
 80198d4:	69eb      	ldr	r3, [r5, #28]
 80198d6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80198da:	61eb      	str	r3, [r5, #28]
 80198dc:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80198e0:	b90b      	cbnz	r3, 80198e6 <i2c_clock_config+0x92>
 80198e2:	f044 0401 	orr.w	r4, r4, #1
 80198e6:	69eb      	ldr	r3, [r5, #28]
 80198e8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80198ec:	61eb      	str	r3, [r5, #28]
 80198ee:	69eb      	ldr	r3, [r5, #28]
 80198f0:	4323      	orrs	r3, r4
 80198f2:	61eb      	str	r3, [r5, #28]
 80198f4:	e7d6      	b.n	80198a4 <i2c_clock_config+0x50>
 80198f6:	2219      	movs	r2, #25
 80198f8:	4354      	muls	r4, r2
 80198fa:	fbb3 f4f4 	udiv	r4, r3, r4
 80198fe:	69eb      	ldr	r3, [r5, #28]
 8019900:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8019904:	e7e9      	b.n	80198da <i2c_clock_config+0x86>
 8019906:	bf00      	nop
 8019908:	03938700 	orrseq	r8, r3, #0, 14
 801990c:	000f4240 	andeq	r4, pc, r0, asr #4
 8019910:	000186a0 	andeq	r8, r1, r0, lsr #13
 8019914:	00061a80 	andeq	r1, r6, r0, lsl #21

08019918 <i2c_ack_config>:
 8019918:	6803      	ldr	r3, [r0, #0]
 801991a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801991e:	430b      	orrs	r3, r1
 8019920:	6003      	str	r3, [r0, #0]
 8019922:	4770      	bx	lr

08019924 <i2c_ackpos_config>:
 8019924:	6803      	ldr	r3, [r0, #0]
 8019926:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 801992a:	430b      	orrs	r3, r1
 801992c:	6003      	str	r3, [r0, #0]
 801992e:	4770      	bx	lr

08019930 <i2c_master_addressing>:
 8019930:	3202      	adds	r2, #2
 8019932:	bf0c      	ite	eq
 8019934:	f021 0101 	biceq.w	r1, r1, #1
 8019938:	f041 0101 	orrne.w	r1, r1, #1
 801993c:	6101      	str	r1, [r0, #16]
 801993e:	4770      	bx	lr

08019940 <i2c_enable>:
 8019940:	6803      	ldr	r3, [r0, #0]
 8019942:	f043 0301 	orr.w	r3, r3, #1
 8019946:	6003      	str	r3, [r0, #0]
 8019948:	4770      	bx	lr

0801994a <i2c_start_on_bus>:
 801994a:	6803      	ldr	r3, [r0, #0]
 801994c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8019950:	6003      	str	r3, [r0, #0]
 8019952:	4770      	bx	lr

08019954 <i2c_stop_on_bus>:
 8019954:	6803      	ldr	r3, [r0, #0]
 8019956:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 801995a:	6003      	str	r3, [r0, #0]
 801995c:	4770      	bx	lr

0801995e <i2c_data_transmit>:
 801995e:	6101      	str	r1, [r0, #16]
 8019960:	4770      	bx	lr

08019962 <i2c_data_receive>:
 8019962:	6900      	ldr	r0, [r0, #16]
 8019964:	b2c0      	uxtb	r0, r0
 8019966:	4770      	bx	lr

08019968 <i2c_flag_get>:
 8019968:	098b      	lsrs	r3, r1, #6
 801996a:	f001 011f 	and.w	r1, r1, #31
 801996e:	5818      	ldr	r0, [r3, r0]
 8019970:	40c8      	lsrs	r0, r1
 8019972:	f000 0001 	and.w	r0, r0, #1
 8019976:	4770      	bx	lr

08019978 <i2c_flag_clear>:
 8019978:	f240 5301 	movw	r3, #1281	@ 0x501
 801997c:	4299      	cmp	r1, r3
 801997e:	b510      	push	{r4, lr}
 8019980:	d102      	bne.n	8019988 <i2c_flag_clear+0x10>
 8019982:	6943      	ldr	r3, [r0, #20]
 8019984:	6983      	ldr	r3, [r0, #24]
 8019986:	bd10      	pop	{r4, pc}
 8019988:	098c      	lsrs	r4, r1, #6
 801998a:	2201      	movs	r2, #1
 801998c:	5823      	ldr	r3, [r4, r0]
 801998e:	f001 011f 	and.w	r1, r1, #31
 8019992:	408a      	lsls	r2, r1
 8019994:	ea23 0302 	bic.w	r3, r3, r2
 8019998:	5023      	str	r3, [r4, r0]
 801999a:	e7f4      	b.n	8019986 <i2c_flag_clear+0xe>

0801999c <spi_i2s_deinit>:
 801999c:	b508      	push	{r3, lr}
 801999e:	4b22      	ldr	r3, [pc, #136]	@ (8019a28 <spi_i2s_deinit+0x8c>)
 80199a0:	4298      	cmp	r0, r3
 80199a2:	d033      	beq.n	8019a0c <spi_i2s_deinit+0x70>
 80199a4:	d80c      	bhi.n	80199c0 <spi_i2s_deinit+0x24>
 80199a6:	f5a3 4378 	sub.w	r3, r3, #63488	@ 0xf800
 80199aa:	4298      	cmp	r0, r3
 80199ac:	d027      	beq.n	80199fe <spi_i2s_deinit+0x62>
 80199ae:	f503 4374 	add.w	r3, r3, #62464	@ 0xf400
 80199b2:	4298      	cmp	r0, r3
 80199b4:	d012      	beq.n	80199dc <spi_i2s_deinit+0x40>
 80199b6:	f5a3 4378 	sub.w	r3, r3, #63488	@ 0xf800
 80199ba:	4298      	cmp	r0, r3
 80199bc:	d018      	beq.n	80199f0 <spi_i2s_deinit+0x54>
 80199be:	bd08      	pop	{r3, pc}
 80199c0:	4b1a      	ldr	r3, [pc, #104]	@ (8019a2c <spi_i2s_deinit+0x90>)
 80199c2:	4298      	cmp	r0, r3
 80199c4:	d029      	beq.n	8019a1a <spi_i2s_deinit+0x7e>
 80199c6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80199ca:	4298      	cmp	r0, r3
 80199cc:	d1f7      	bne.n	80199be <spi_i2s_deinit+0x22>
 80199ce:	f640 1015 	movw	r0, #2325	@ 0x915
 80199d2:	f7fe fe10 	bl	80185f6 <rcu_periph_reset_enable>
 80199d6:	f640 1015 	movw	r0, #2325	@ 0x915
 80199da:	e005      	b.n	80199e8 <spi_i2s_deinit+0x4c>
 80199dc:	f640 100c 	movw	r0, #2316	@ 0x90c
 80199e0:	f7fe fe09 	bl	80185f6 <rcu_periph_reset_enable>
 80199e4:	f640 100c 	movw	r0, #2316	@ 0x90c
 80199e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80199ec:	f7fe be05 	b.w	80185fa <rcu_periph_reset_disable>
 80199f0:	f640 000e 	movw	r0, #2062	@ 0x80e
 80199f4:	f7fe fdff 	bl	80185f6 <rcu_periph_reset_enable>
 80199f8:	f640 000e 	movw	r0, #2062	@ 0x80e
 80199fc:	e7f4      	b.n	80199e8 <spi_i2s_deinit+0x4c>
 80199fe:	f640 000f 	movw	r0, #2063	@ 0x80f
 8019a02:	f7fe fdf8 	bl	80185f6 <rcu_periph_reset_enable>
 8019a06:	f640 000f 	movw	r0, #2063	@ 0x80f
 8019a0a:	e7ed      	b.n	80199e8 <spi_i2s_deinit+0x4c>
 8019a0c:	f640 100d 	movw	r0, #2317	@ 0x90d
 8019a10:	f7fe fdf1 	bl	80185f6 <rcu_periph_reset_enable>
 8019a14:	f640 100d 	movw	r0, #2317	@ 0x90d
 8019a18:	e7e6      	b.n	80199e8 <spi_i2s_deinit+0x4c>
 8019a1a:	f640 1014 	movw	r0, #2324	@ 0x914
 8019a1e:	f7fe fdea 	bl	80185f6 <rcu_periph_reset_enable>
 8019a22:	f640 1014 	movw	r0, #2324	@ 0x914
 8019a26:	e7df      	b.n	80199e8 <spi_i2s_deinit+0x4c>
 8019a28:	40013400 	andmi	r3, r1, r0, lsl #8
 8019a2c:	40015000 	andmi	r5, r1, r0

08019a30 <spi_init>:
 8019a30:	b510      	push	{r4, lr}
 8019a32:	e9d1 3400 	ldrd	r3, r4, [r1]
 8019a36:	4323      	orrs	r3, r4
 8019a38:	688c      	ldr	r4, [r1, #8]
 8019a3a:	6802      	ldr	r2, [r0, #0]
 8019a3c:	4323      	orrs	r3, r4
 8019a3e:	68cc      	ldr	r4, [r1, #12]
 8019a40:	4323      	orrs	r3, r4
 8019a42:	690c      	ldr	r4, [r1, #16]
 8019a44:	4323      	orrs	r3, r4
 8019a46:	694c      	ldr	r4, [r1, #20]
 8019a48:	6989      	ldr	r1, [r1, #24]
 8019a4a:	4323      	orrs	r3, r4
 8019a4c:	f402 5241 	and.w	r2, r2, #12352	@ 0x3040
 8019a50:	430b      	orrs	r3, r1
 8019a52:	4313      	orrs	r3, r2
 8019a54:	6003      	str	r3, [r0, #0]
 8019a56:	69c3      	ldr	r3, [r0, #28]
 8019a58:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8019a5c:	61c3      	str	r3, [r0, #28]
 8019a5e:	bd10      	pop	{r4, pc}

08019a60 <spi_enable>:
 8019a60:	6803      	ldr	r3, [r0, #0]
 8019a62:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8019a66:	6003      	str	r3, [r0, #0]
 8019a68:	4770      	bx	lr

08019a6a <spi_disable>:
 8019a6a:	6803      	ldr	r3, [r0, #0]
 8019a6c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8019a70:	6003      	str	r3, [r0, #0]
 8019a72:	4770      	bx	lr

08019a74 <spi_nss_output_enable>:
 8019a74:	6843      	ldr	r3, [r0, #4]
 8019a76:	f043 0304 	orr.w	r3, r3, #4
 8019a7a:	6043      	str	r3, [r0, #4]
 8019a7c:	4770      	bx	lr

08019a7e <spi_nss_output_disable>:
 8019a7e:	6843      	ldr	r3, [r0, #4]
 8019a80:	f023 0304 	bic.w	r3, r3, #4
 8019a84:	6043      	str	r3, [r0, #4]
 8019a86:	4770      	bx	lr

08019a88 <__libc_init_array>:
 8019a88:	b570      	push	{r4, r5, r6, lr}
 8019a8a:	4d0c      	ldr	r5, [pc, #48]	@ (8019abc <__libc_init_array+0x34>)
 8019a8c:	4c0c      	ldr	r4, [pc, #48]	@ (8019ac0 <__libc_init_array+0x38>)
 8019a8e:	1b64      	subs	r4, r4, r5
 8019a90:	10a4      	asrs	r4, r4, #2
 8019a92:	2600      	movs	r6, #0
 8019a94:	42a6      	cmp	r6, r4
 8019a96:	d107      	bne.n	8019aa8 <__libc_init_array+0x20>
 8019a98:	4d0a      	ldr	r5, [pc, #40]	@ (8019ac4 <__libc_init_array+0x3c>)
 8019a9a:	4c0b      	ldr	r4, [pc, #44]	@ (8019ac8 <__libc_init_array+0x40>)
 8019a9c:	1b64      	subs	r4, r4, r5
 8019a9e:	10a4      	asrs	r4, r4, #2
 8019aa0:	2600      	movs	r6, #0
 8019aa2:	42a6      	cmp	r6, r4
 8019aa4:	d105      	bne.n	8019ab2 <__libc_init_array+0x2a>
 8019aa6:	bd70      	pop	{r4, r5, r6, pc}
 8019aa8:	f855 3b04 	ldr.w	r3, [r5], #4
 8019aac:	4798      	blx	r3
 8019aae:	3601      	adds	r6, #1
 8019ab0:	e7f0      	b.n	8019a94 <__libc_init_array+0xc>
 8019ab2:	f855 3b04 	ldr.w	r3, [r5], #4
 8019ab6:	4798      	blx	r3
 8019ab8:	3601      	adds	r6, #1
 8019aba:	e7f2      	b.n	8019aa2 <__libc_init_array+0x1a>
 8019abc:	0801f1c4 	stmdaeq	r1, {r2, r6, r7, r8, ip, sp, lr, pc}
 8019ac0:	0801f1c4 	stmdaeq	r1, {r2, r6, r7, r8, ip, sp, lr, pc}
 8019ac4:	0801f1c4 	stmdaeq	r1, {r2, r6, r7, r8, ip, sp, lr, pc}
 8019ac8:	0801f1c8 	stmdaeq	r1, {r3, r6, r7, r8, ip, sp, lr, pc}

08019acc <memcpy>:
 8019acc:	b510      	push	{r4, lr}
 8019ace:	1e43      	subs	r3, r0, #1
 8019ad0:	440a      	add	r2, r1
 8019ad2:	4291      	cmp	r1, r2
 8019ad4:	d100      	bne.n	8019ad8 <memcpy+0xc>
 8019ad6:	bd10      	pop	{r4, pc}
 8019ad8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019adc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8019ae0:	e7f7      	b.n	8019ad2 <memcpy+0x6>

08019ae2 <memmove>:
 8019ae2:	4288      	cmp	r0, r1
 8019ae4:	b510      	push	{r4, lr}
 8019ae6:	eb01 0302 	add.w	r3, r1, r2
 8019aea:	d208      	bcs.n	8019afe <memmove+0x1c>
 8019aec:	1e42      	subs	r2, r0, #1
 8019aee:	4299      	cmp	r1, r3
 8019af0:	d100      	bne.n	8019af4 <memmove+0x12>
 8019af2:	bd10      	pop	{r4, pc}
 8019af4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019af8:	f802 4f01 	strb.w	r4, [r2, #1]!
 8019afc:	e7f7      	b.n	8019aee <memmove+0xc>
 8019afe:	4402      	add	r2, r0
 8019b00:	4601      	mov	r1, r0
 8019b02:	428a      	cmp	r2, r1
 8019b04:	d0f5      	beq.n	8019af2 <memmove+0x10>
 8019b06:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8019b0a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8019b0e:	e7f8      	b.n	8019b02 <memmove+0x20>

08019b10 <memset>:
 8019b10:	b570      	push	{r4, r5, r6, lr}
 8019b12:	b1ca      	cbz	r2, 8019b48 <memset+0x38>
 8019b14:	b2c9      	uxtb	r1, r1
 8019b16:	4603      	mov	r3, r0
 8019b18:	075c      	lsls	r4, r3, #29
 8019b1a:	d111      	bne.n	8019b40 <memset+0x30>
 8019b1c:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
 8019b20:	fba1 5605 	umull	r5, r6, r1, r5
 8019b24:	f022 0407 	bic.w	r4, r2, #7
 8019b28:	442e      	add	r6, r5
 8019b2a:	441c      	add	r4, r3
 8019b2c:	42a3      	cmp	r3, r4
 8019b2e:	d10c      	bne.n	8019b4a <memset+0x3a>
 8019b30:	f002 0207 	and.w	r2, r2, #7
 8019b34:	4422      	add	r2, r4
 8019b36:	4294      	cmp	r4, r2
 8019b38:	d006      	beq.n	8019b48 <memset+0x38>
 8019b3a:	f804 1b01 	strb.w	r1, [r4], #1
 8019b3e:	e7fa      	b.n	8019b36 <memset+0x26>
 8019b40:	3a01      	subs	r2, #1
 8019b42:	f803 1b01 	strb.w	r1, [r3], #1
 8019b46:	d1e7      	bne.n	8019b18 <memset+0x8>
 8019b48:	bd70      	pop	{r4, r5, r6, pc}
 8019b4a:	f843 5b08 	str.w	r5, [r3], #8
 8019b4e:	f843 6c04 	str.w	r6, [r3, #-4]
 8019b52:	e7eb      	b.n	8019b2c <memset+0x1c>

08019b54 <_itostr>:
 8019b54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b56:	0fc7      	lsrs	r7, r0, #31
 8019b58:	b091      	sub	sp, #68	@ 0x44
 8019b5a:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 8019b5e:	d01b      	beq.n	8019b98 <_itostr+0x44>
 8019b60:	4240      	negs	r0, r0
 8019b62:	4623      	mov	r3, r4
 8019b64:	250a      	movs	r5, #10
 8019b66:	46ec      	mov	ip, sp
 8019b68:	fb90 f6f5 	sdiv	r6, r0, r5
 8019b6c:	fb05 0016 	mls	r0, r5, r6, r0
 8019b70:	3030      	adds	r0, #48	@ 0x30
 8019b72:	f803 0901 	strb.w	r0, [r3], #-1
 8019b76:	4630      	mov	r0, r6
 8019b78:	b10e      	cbz	r6, 8019b7e <_itostr+0x2a>
 8019b7a:	4563      	cmp	r3, ip
 8019b7c:	d1f4      	bne.n	8019b68 <_itostr+0x14>
 8019b7e:	b132      	cbz	r2, 8019b8e <_itostr+0x3a>
 8019b80:	4668      	mov	r0, sp
 8019b82:	2530      	movs	r5, #48	@ 0x30
 8019b84:	1ae6      	subs	r6, r4, r3
 8019b86:	4296      	cmp	r6, r2
 8019b88:	da01      	bge.n	8019b8e <_itostr+0x3a>
 8019b8a:	4283      	cmp	r3, r0
 8019b8c:	d816      	bhi.n	8019bbc <_itostr+0x68>
 8019b8e:	b167      	cbz	r7, 8019baa <_itostr+0x56>
 8019b90:	222d      	movs	r2, #45	@ 0x2d
 8019b92:	f803 2901 	strb.w	r2, [r3], #-1
 8019b96:	e008      	b.n	8019baa <_itostr+0x56>
 8019b98:	2800      	cmp	r0, #0
 8019b9a:	d1e2      	bne.n	8019b62 <_itostr+0xe>
 8019b9c:	2330      	movs	r3, #48	@ 0x30
 8019b9e:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8019ba2:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 8019ba6:	2a00      	cmp	r2, #0
 8019ba8:	d1ea      	bne.n	8019b80 <_itostr+0x2c>
 8019baa:	3301      	adds	r3, #1
 8019bac:	1ae0      	subs	r0, r4, r3
 8019bae:	3901      	subs	r1, #1
 8019bb0:	aa10      	add	r2, sp, #64	@ 0x40
 8019bb2:	4293      	cmp	r3, r2
 8019bb4:	d305      	bcc.n	8019bc2 <_itostr+0x6e>
 8019bb6:	3001      	adds	r0, #1
 8019bb8:	b011      	add	sp, #68	@ 0x44
 8019bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019bbc:	f803 5901 	strb.w	r5, [r3], #-1
 8019bc0:	e7e0      	b.n	8019b84 <_itostr+0x30>
 8019bc2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8019bc6:	f801 2f01 	strb.w	r2, [r1, #1]!
 8019bca:	e7f1      	b.n	8019bb0 <_itostr+0x5c>

08019bcc <_xputch>:
 8019bcc:	4603      	mov	r3, r0
 8019bce:	b410      	push	{r4}
 8019bd0:	4c09      	ldr	r4, [pc, #36]	@ (8019bf8 <_xputch+0x2c>)
 8019bd2:	68da      	ldr	r2, [r3, #12]
 8019bd4:	4608      	mov	r0, r1
 8019bd6:	6821      	ldr	r1, [r4, #0]
 8019bd8:	3201      	adds	r2, #1
 8019bda:	60da      	str	r2, [r3, #12]
 8019bdc:	b141      	cbz	r1, 8019bf0 <_xputch+0x24>
 8019bde:	691b      	ldr	r3, [r3, #16]
 8019be0:	429a      	cmp	r2, r3
 8019be2:	da02      	bge.n	8019bea <_xputch+0x1e>
 8019be4:	1c4b      	adds	r3, r1, #1
 8019be6:	6023      	str	r3, [r4, #0]
 8019be8:	7008      	strb	r0, [r1, #0]
 8019bea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bee:	4770      	bx	lr
 8019bf0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bf4:	f7fd bfc8 	b.w	8017b88 <console_putc>
 8019bf8:	2000a3bc 			@ <UNDEFINED> instruction: 0x2000a3bc

08019bfc <_format_int>:
 8019bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019bfe:	b091      	sub	sp, #68	@ 0x44
 8019c00:	4606      	mov	r6, r0
 8019c02:	f10d 043f 	add.w	r4, sp, #63	@ 0x3f
 8019c06:	bb91      	cbnz	r1, 8019c6e <_format_int+0x72>
 8019c08:	2330      	movs	r3, #48	@ 0x30
 8019c0a:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8019c0e:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 8019c12:	6832      	ldr	r2, [r6, #0]
 8019c14:	07d5      	lsls	r5, r2, #31
 8019c16:	d507      	bpl.n	8019c28 <_format_int+0x2c>
 8019c18:	6870      	ldr	r0, [r6, #4]
 8019c1a:	4669      	mov	r1, sp
 8019c1c:	2530      	movs	r5, #48	@ 0x30
 8019c1e:	1ae7      	subs	r7, r4, r3
 8019c20:	4287      	cmp	r7, r0
 8019c22:	da01      	bge.n	8019c28 <_format_int+0x2c>
 8019c24:	428b      	cmp	r3, r1
 8019c26:	d833      	bhi.n	8019c90 <_format_int+0x94>
 8019c28:	0690      	lsls	r0, r2, #26
 8019c2a:	d507      	bpl.n	8019c3c <_format_int+0x40>
 8019c2c:	68b0      	ldr	r0, [r6, #8]
 8019c2e:	4669      	mov	r1, sp
 8019c30:	2530      	movs	r5, #48	@ 0x30
 8019c32:	1ae7      	subs	r7, r4, r3
 8019c34:	4287      	cmp	r7, r0
 8019c36:	da01      	bge.n	8019c3c <_format_int+0x40>
 8019c38:	428b      	cmp	r3, r1
 8019c3a:	d82c      	bhi.n	8019c96 <_format_int+0x9a>
 8019c3c:	0711      	lsls	r1, r2, #28
 8019c3e:	bf44      	itt	mi
 8019c40:	212d      	movmi	r1, #45	@ 0x2d
 8019c42:	f803 1901 	strbmi.w	r1, [r3], #-1
 8019c46:	0652      	lsls	r2, r2, #25
 8019c48:	d407      	bmi.n	8019c5a <_format_int+0x5e>
 8019c4a:	68b1      	ldr	r1, [r6, #8]
 8019c4c:	466a      	mov	r2, sp
 8019c4e:	2020      	movs	r0, #32
 8019c50:	1ae5      	subs	r5, r4, r3
 8019c52:	428d      	cmp	r5, r1
 8019c54:	da01      	bge.n	8019c5a <_format_int+0x5e>
 8019c56:	4293      	cmp	r3, r2
 8019c58:	d820      	bhi.n	8019c9c <_format_int+0xa0>
 8019c5a:	1ae5      	subs	r5, r4, r3
 8019c5c:	1c5c      	adds	r4, r3, #1
 8019c5e:	ab10      	add	r3, sp, #64	@ 0x40
 8019c60:	429c      	cmp	r4, r3
 8019c62:	d31e      	bcc.n	8019ca2 <_format_int+0xa6>
 8019c64:	68b3      	ldr	r3, [r6, #8]
 8019c66:	42ab      	cmp	r3, r5
 8019c68:	dc21      	bgt.n	8019cae <_format_int+0xb2>
 8019c6a:	b011      	add	sp, #68	@ 0x44
 8019c6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019c6e:	4623      	mov	r3, r4
 8019c70:	200a      	movs	r0, #10
 8019c72:	466f      	mov	r7, sp
 8019c74:	fbb1 f5f0 	udiv	r5, r1, r0
 8019c78:	fb00 1215 	mls	r2, r0, r5, r1
 8019c7c:	3230      	adds	r2, #48	@ 0x30
 8019c7e:	f803 2901 	strb.w	r2, [r3], #-1
 8019c82:	460a      	mov	r2, r1
 8019c84:	2a09      	cmp	r2, #9
 8019c86:	4629      	mov	r1, r5
 8019c88:	d9c3      	bls.n	8019c12 <_format_int+0x16>
 8019c8a:	42bb      	cmp	r3, r7
 8019c8c:	d1f2      	bne.n	8019c74 <_format_int+0x78>
 8019c8e:	e7c0      	b.n	8019c12 <_format_int+0x16>
 8019c90:	f803 5901 	strb.w	r5, [r3], #-1
 8019c94:	e7c3      	b.n	8019c1e <_format_int+0x22>
 8019c96:	f803 5901 	strb.w	r5, [r3], #-1
 8019c9a:	e7ca      	b.n	8019c32 <_format_int+0x36>
 8019c9c:	f803 0901 	strb.w	r0, [r3], #-1
 8019ca0:	e7d6      	b.n	8019c50 <_format_int+0x54>
 8019ca2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019ca6:	4630      	mov	r0, r6
 8019ca8:	f7ff ff90 	bl	8019bcc <_xputch>
 8019cac:	e7d7      	b.n	8019c5e <_format_int+0x62>
 8019cae:	2120      	movs	r1, #32
 8019cb0:	4630      	mov	r0, r6
 8019cb2:	f7ff ff8b 	bl	8019bcc <_xputch>
 8019cb6:	3501      	adds	r5, #1
 8019cb8:	e7d4      	b.n	8019c64 <_format_int+0x68>

08019cba <_format_hex>:
 8019cba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019cbc:	b091      	sub	sp, #68	@ 0x44
 8019cbe:	6804      	ldr	r4, [r0, #0]
 8019cc0:	4606      	mov	r6, r0
 8019cc2:	f10d 023f 	add.w	r2, sp, #63	@ 0x3f
 8019cc6:	bb61      	cbnz	r1, 8019d22 <_format_hex+0x68>
 8019cc8:	2330      	movs	r3, #48	@ 0x30
 8019cca:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
 8019cce:	f10d 033e 	add.w	r3, sp, #62	@ 0x3e
 8019cd2:	07e5      	lsls	r5, r4, #31
 8019cd4:	d507      	bpl.n	8019ce6 <_format_hex+0x2c>
 8019cd6:	6870      	ldr	r0, [r6, #4]
 8019cd8:	4669      	mov	r1, sp
 8019cda:	2530      	movs	r5, #48	@ 0x30
 8019cdc:	1ad7      	subs	r7, r2, r3
 8019cde:	4287      	cmp	r7, r0
 8019ce0:	da01      	bge.n	8019ce6 <_format_hex+0x2c>
 8019ce2:	428b      	cmp	r3, r1
 8019ce4:	d831      	bhi.n	8019d4a <_format_hex+0x90>
 8019ce6:	06a0      	lsls	r0, r4, #26
 8019ce8:	d507      	bpl.n	8019cfa <_format_hex+0x40>
 8019cea:	68b0      	ldr	r0, [r6, #8]
 8019cec:	4669      	mov	r1, sp
 8019cee:	2530      	movs	r5, #48	@ 0x30
 8019cf0:	1ad7      	subs	r7, r2, r3
 8019cf2:	4287      	cmp	r7, r0
 8019cf4:	da01      	bge.n	8019cfa <_format_hex+0x40>
 8019cf6:	428b      	cmp	r3, r1
 8019cf8:	d82a      	bhi.n	8019d50 <_format_hex+0x96>
 8019cfa:	0661      	lsls	r1, r4, #25
 8019cfc:	d407      	bmi.n	8019d0e <_format_hex+0x54>
 8019cfe:	68b0      	ldr	r0, [r6, #8]
 8019d00:	4669      	mov	r1, sp
 8019d02:	2420      	movs	r4, #32
 8019d04:	1ad5      	subs	r5, r2, r3
 8019d06:	4285      	cmp	r5, r0
 8019d08:	da01      	bge.n	8019d0e <_format_hex+0x54>
 8019d0a:	428b      	cmp	r3, r1
 8019d0c:	d823      	bhi.n	8019d56 <_format_hex+0x9c>
 8019d0e:	1ad5      	subs	r5, r2, r3
 8019d10:	1c5c      	adds	r4, r3, #1
 8019d12:	ab10      	add	r3, sp, #64	@ 0x40
 8019d14:	429c      	cmp	r4, r3
 8019d16:	d321      	bcc.n	8019d5c <_format_hex+0xa2>
 8019d18:	68b3      	ldr	r3, [r6, #8]
 8019d1a:	42ab      	cmp	r3, r5
 8019d1c:	dc24      	bgt.n	8019d68 <_format_hex+0xae>
 8019d1e:	b011      	add	sp, #68	@ 0x44
 8019d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019d22:	f014 0f02 	tst.w	r4, #2
 8019d26:	bf0c      	ite	eq
 8019d28:	2757      	moveq	r7, #87	@ 0x57
 8019d2a:	2737      	movne	r7, #55	@ 0x37
 8019d2c:	4613      	mov	r3, r2
 8019d2e:	466d      	mov	r5, sp
 8019d30:	f001 000f 	and.w	r0, r1, #15
 8019d34:	2809      	cmp	r0, #9
 8019d36:	bf94      	ite	ls
 8019d38:	3030      	addls	r0, #48	@ 0x30
 8019d3a:	19c0      	addhi	r0, r0, r7
 8019d3c:	0909      	lsrs	r1, r1, #4
 8019d3e:	f803 0901 	strb.w	r0, [r3], #-1
 8019d42:	d0c6      	beq.n	8019cd2 <_format_hex+0x18>
 8019d44:	42ab      	cmp	r3, r5
 8019d46:	d1f3      	bne.n	8019d30 <_format_hex+0x76>
 8019d48:	e7c3      	b.n	8019cd2 <_format_hex+0x18>
 8019d4a:	f803 5901 	strb.w	r5, [r3], #-1
 8019d4e:	e7c5      	b.n	8019cdc <_format_hex+0x22>
 8019d50:	f803 5901 	strb.w	r5, [r3], #-1
 8019d54:	e7cc      	b.n	8019cf0 <_format_hex+0x36>
 8019d56:	f803 4901 	strb.w	r4, [r3], #-1
 8019d5a:	e7d3      	b.n	8019d04 <_format_hex+0x4a>
 8019d5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019d60:	4630      	mov	r0, r6
 8019d62:	f7ff ff33 	bl	8019bcc <_xputch>
 8019d66:	e7d4      	b.n	8019d12 <_format_hex+0x58>
 8019d68:	2120      	movs	r1, #32
 8019d6a:	4630      	mov	r0, r6
 8019d6c:	f7ff ff2e 	bl	8019bcc <_xputch>
 8019d70:	3501      	adds	r5, #1
 8019d72:	e7d1      	b.n	8019d18 <_format_hex+0x5e>

08019d74 <_vprintf>:
 8019d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019d78:	2700      	movs	r7, #0
 8019d7a:	b096      	sub	sp, #88	@ 0x58
 8019d7c:	e9cd 7004 	strd	r7, r0, [sp, #16]
 8019d80:	460b      	mov	r3, r1
 8019d82:	4614      	mov	r4, r2
 8019d84:	f04f 080a 	mov.w	r8, #10
 8019d88:	7819      	ldrb	r1, [r3, #0]
 8019d8a:	b919      	cbnz	r1, 8019d94 <_vprintf+0x20>
 8019d8c:	9804      	ldr	r0, [sp, #16]
 8019d8e:	b016      	add	sp, #88	@ 0x58
 8019d90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019d94:	2925      	cmp	r1, #37	@ 0x25
 8019d96:	f103 0501 	add.w	r5, r3, #1
 8019d9a:	d004      	beq.n	8019da6 <_vprintf+0x32>
 8019d9c:	a801      	add	r0, sp, #4
 8019d9e:	f7ff ff15 	bl	8019bcc <_xputch>
 8019da2:	462b      	mov	r3, r5
 8019da4:	e7f0      	b.n	8019d88 <_vprintf+0x14>
 8019da6:	785a      	ldrb	r2, [r3, #1]
 8019da8:	9703      	str	r7, [sp, #12]
 8019daa:	2a30      	cmp	r2, #48	@ 0x30
 8019dac:	e9cd 7701 	strd	r7, r7, [sp, #4]
 8019db0:	d127      	bne.n	8019e02 <_vprintf+0x8e>
 8019db2:	2220      	movs	r2, #32
 8019db4:	9201      	str	r2, [sp, #4]
 8019db6:	1c9d      	adds	r5, r3, #2
 8019db8:	2200      	movs	r2, #0
 8019dba:	462e      	mov	r6, r5
 8019dbc:	4613      	mov	r3, r2
 8019dbe:	7831      	ldrb	r1, [r6, #0]
 8019dc0:	f1a1 0030 	sub.w	r0, r1, #48	@ 0x30
 8019dc4:	2809      	cmp	r0, #9
 8019dc6:	4635      	mov	r5, r6
 8019dc8:	f106 0601 	add.w	r6, r6, #1
 8019dcc:	d91d      	bls.n	8019e0a <_vprintf+0x96>
 8019dce:	b12a      	cbz	r2, 8019ddc <_vprintf+0x68>
 8019dd0:	9303      	str	r3, [sp, #12]
 8019dd2:	b11b      	cbz	r3, 8019ddc <_vprintf+0x68>
 8019dd4:	9b01      	ldr	r3, [sp, #4]
 8019dd6:	f043 0310 	orr.w	r3, r3, #16
 8019dda:	9301      	str	r3, [sp, #4]
 8019ddc:	292e      	cmp	r1, #46	@ 0x2e
 8019dde:	d123      	bne.n	8019e28 <_vprintf+0xb4>
 8019de0:	786b      	ldrb	r3, [r5, #1]
 8019de2:	2b2a      	cmp	r3, #42	@ 0x2a
 8019de4:	d015      	beq.n	8019e12 <_vprintf+0x9e>
 8019de6:	2100      	movs	r1, #0
 8019de8:	1c68      	adds	r0, r5, #1
 8019dea:	460a      	mov	r2, r1
 8019dec:	260a      	movs	r6, #10
 8019dee:	7803      	ldrb	r3, [r0, #0]
 8019df0:	3b30      	subs	r3, #48	@ 0x30
 8019df2:	2b09      	cmp	r3, #9
 8019df4:	4605      	mov	r5, r0
 8019df6:	f100 0001 	add.w	r0, r0, #1
 8019dfa:	d959      	bls.n	8019eb0 <_vprintf+0x13c>
 8019dfc:	b181      	cbz	r1, 8019e20 <_vprintf+0xac>
 8019dfe:	9202      	str	r2, [sp, #8]
 8019e00:	e00e      	b.n	8019e20 <_vprintf+0xac>
 8019e02:	2a2d      	cmp	r2, #45	@ 0x2d
 8019e04:	d1d8      	bne.n	8019db8 <_vprintf+0x44>
 8019e06:	2240      	movs	r2, #64	@ 0x40
 8019e08:	e7d4      	b.n	8019db4 <_vprintf+0x40>
 8019e0a:	fb08 0303 	mla	r3, r8, r3, r0
 8019e0e:	2201      	movs	r2, #1
 8019e10:	e7d5      	b.n	8019dbe <_vprintf+0x4a>
 8019e12:	f854 3b04 	ldr.w	r3, [r4], #4
 8019e16:	2b00      	cmp	r3, #0
 8019e18:	bfb8      	it	lt
 8019e1a:	425b      	neglt	r3, r3
 8019e1c:	3502      	adds	r5, #2
 8019e1e:	9302      	str	r3, [sp, #8]
 8019e20:	9b01      	ldr	r3, [sp, #4]
 8019e22:	f043 0301 	orr.w	r3, r3, #1
 8019e26:	9301      	str	r3, [sp, #4]
 8019e28:	782b      	ldrb	r3, [r5, #0]
 8019e2a:	2b6c      	cmp	r3, #108	@ 0x6c
 8019e2c:	bf04      	itt	eq
 8019e2e:	3501      	addeq	r5, #1
 8019e30:	9b01      	ldreq	r3, [sp, #4]
 8019e32:	7829      	ldrb	r1, [r5, #0]
 8019e34:	bf04      	itt	eq
 8019e36:	f043 0304 	orreq.w	r3, r3, #4
 8019e3a:	9301      	streq	r3, [sp, #4]
 8019e3c:	2958      	cmp	r1, #88	@ 0x58
 8019e3e:	f000 8143 	beq.w	801a0c8 <_vprintf+0x354>
 8019e42:	f1a1 0363 	sub.w	r3, r1, #99	@ 0x63
 8019e46:	b2da      	uxtb	r2, r3
 8019e48:	2a15      	cmp	r2, #21
 8019e4a:	d8a7      	bhi.n	8019d9c <_vprintf+0x28>
 8019e4c:	2b15      	cmp	r3, #21
 8019e4e:	d8a5      	bhi.n	8019d9c <_vprintf+0x28>
 8019e50:	a201      	add	r2, pc, #4	@ (adr r2, 8019e58 <_vprintf+0xe4>)
 8019e52:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019e56:	bf00      	nop
 8019e58:	08019eb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, fp, ip, pc}
 8019e5c:	08019ec7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, fp, ip, pc}
 8019e60:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e64:	08019ee1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, fp, ip, pc}
 8019e68:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e6c:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e70:	08019ec7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, fp, ip, pc}
 8019e74:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e78:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e7c:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e80:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e84:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e88:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e8c:	0801a029 	stmdaeq	r1, {r0, r3, r5, sp, pc}
 8019e90:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e94:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019e98:	0801a04f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sp, pc}
 8019e9c:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019ea0:	0801a0c3 	stmdaeq	r1, {r0, r1, r6, r7, sp, pc}
 8019ea4:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019ea8:	08019d9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sl, fp, ip, pc}
 8019eac:	0801a0d1 	stmdaeq	r1, {r0, r4, r6, r7, sp, pc}
 8019eb0:	fb06 3202 	mla	r2, r6, r2, r3
 8019eb4:	2101      	movs	r1, #1
 8019eb6:	e79a      	b.n	8019dee <_vprintf+0x7a>
 8019eb8:	f854 1b04 	ldr.w	r1, [r4], #4
 8019ebc:	a801      	add	r0, sp, #4
 8019ebe:	f7ff fe85 	bl	8019bcc <_xputch>
 8019ec2:	3501      	adds	r5, #1
 8019ec4:	e76d      	b.n	8019da2 <_vprintf+0x2e>
 8019ec6:	f854 1b04 	ldr.w	r1, [r4], #4
 8019eca:	9b01      	ldr	r3, [sp, #4]
 8019ecc:	2900      	cmp	r1, #0
 8019ece:	da03      	bge.n	8019ed8 <_vprintf+0x164>
 8019ed0:	f043 0308 	orr.w	r3, r3, #8
 8019ed4:	9301      	str	r3, [sp, #4]
 8019ed6:	4249      	negs	r1, r1
 8019ed8:	a801      	add	r0, sp, #4
 8019eda:	f7ff fe8f 	bl	8019bfc <_format_int>
 8019ede:	e7f0      	b.n	8019ec2 <_vprintf+0x14e>
 8019ee0:	3407      	adds	r4, #7
 8019ee2:	f024 0407 	bic.w	r4, r4, #7
 8019ee6:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8019eea:	f7ef f843 	bl	8008f74 <__aeabi_d2f>
 8019eee:	9b01      	ldr	r3, [sp, #4]
 8019ef0:	ee07 0a90 	vmov	s15, r0
 8019ef4:	07de      	lsls	r6, r3, #31
 8019ef6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019efa:	bf4c      	ite	mi
 8019efc:	9e02      	ldrmi	r6, [sp, #8]
 8019efe:	2606      	movpl	r6, #6
 8019f00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f04:	bf48      	it	mi
 8019f06:	eef1 7a67 	vnegmi.f32	s15, s15
 8019f0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019f0e:	bf4a      	itet	mi
 8019f10:	f10d 0a19 	addmi.w	sl, sp, #25
 8019f14:	f10d 0a18 	addpl.w	sl, sp, #24
 8019f18:	232d      	movmi	r3, #45	@ 0x2d
 8019f1a:	ee17 0a10 	vmov	r0, s14
 8019f1e:	f04f 0200 	mov.w	r2, #0
 8019f22:	4651      	mov	r1, sl
 8019f24:	bf48      	it	mi
 8019f26:	f88d 3018 	strbmi.w	r3, [sp, #24]
 8019f2a:	f7ff fe13 	bl	8019b54 <_itostr>
 8019f2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019f32:	232e      	movs	r3, #46	@ 0x2e
 8019f34:	f80a 3000 	strb.w	r3, [sl, r0]
 8019f38:	eb0a 0900 	add.w	r9, sl, r0
 8019f3c:	230a      	movs	r3, #10
 8019f3e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019f42:	1c72      	adds	r2, r6, #1
 8019f44:	f109 0901 	add.w	r9, r9, #1
 8019f48:	4619      	mov	r1, r3
 8019f4a:	2e00      	cmp	r6, #0
 8019f4c:	dc41      	bgt.n	8019fd2 <_vprintf+0x25e>
 8019f4e:	ee07 3a10 	vmov	s14, r3
 8019f52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019f56:	4649      	mov	r1, r9
 8019f58:	ee67 7a27 	vmul.f32	s15, s14, s15
 8019f5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019f60:	ee17 0a90 	vmov	r0, s15
 8019f64:	f7ff fdf6 	bl	8019b54 <_itostr>
 8019f68:	4448      	add	r0, r9
 8019f6a:	f10d 0918 	add.w	r9, sp, #24
 8019f6e:	eba0 0009 	sub.w	r0, r0, r9
 8019f72:	1e46      	subs	r6, r0, #1
 8019f74:	eb09 0206 	add.w	r2, r9, r6
 8019f78:	f819 3006 	ldrb.w	r3, [r9, r6]
 8019f7c:	2b34      	cmp	r3, #52	@ 0x34
 8019f7e:	d911      	bls.n	8019fa4 <_vprintf+0x230>
 8019f80:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8019f84:	292e      	cmp	r1, #46	@ 0x2e
 8019f86:	f102 33ff 	add.w	r3, r2, #4294967295	@ 0xffffffff
 8019f8a:	d028      	beq.n	8019fde <_vprintf+0x26a>
 8019f8c:	469c      	mov	ip, r3
 8019f8e:	f04f 0e30 	mov.w	lr, #48	@ 0x30
 8019f92:	4663      	mov	r3, ip
 8019f94:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8019f98:	2939      	cmp	r1, #57	@ 0x39
 8019f9a:	d01d      	beq.n	8019fd8 <_vprintf+0x264>
 8019f9c:	292e      	cmp	r1, #46	@ 0x2e
 8019f9e:	d01e      	beq.n	8019fde <_vprintf+0x26a>
 8019fa0:	3101      	adds	r1, #1
 8019fa2:	7019      	strb	r1, [r3, #0]
 8019fa4:	f106 0358 	add.w	r3, r6, #88	@ 0x58
 8019fa8:	446b      	add	r3, sp
 8019faa:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8019fae:	2b2e      	cmp	r3, #46	@ 0x2e
 8019fb0:	bf08      	it	eq
 8019fb2:	f106 36ff 	addeq.w	r6, r6, #4294967295	@ 0xffffffff
 8019fb6:	46b2      	mov	sl, r6
 8019fb8:	9b03      	ldr	r3, [sp, #12]
 8019fba:	4553      	cmp	r3, sl
 8019fbc:	dc2d      	bgt.n	801a01a <_vprintf+0x2a6>
 8019fbe:	2e00      	cmp	r6, #0
 8019fc0:	f77f af7f 	ble.w	8019ec2 <_vprintf+0x14e>
 8019fc4:	f819 1b01 	ldrb.w	r1, [r9], #1
 8019fc8:	a801      	add	r0, sp, #4
 8019fca:	f7ff fdff 	bl	8019bcc <_xputch>
 8019fce:	3e01      	subs	r6, #1
 8019fd0:	e7f5      	b.n	8019fbe <_vprintf+0x24a>
 8019fd2:	434b      	muls	r3, r1
 8019fd4:	3e01      	subs	r6, #1
 8019fd6:	e7b8      	b.n	8019f4a <_vprintf+0x1d6>
 8019fd8:	f88c e001 	strb.w	lr, [ip, #1]
 8019fdc:	e7d9      	b.n	8019f92 <_vprintf+0x21e>
 8019fde:	3b01      	subs	r3, #1
 8019fe0:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 8019fe4:	7819      	ldrb	r1, [r3, #0]
 8019fe6:	2939      	cmp	r1, #57	@ 0x39
 8019fe8:	d10d      	bne.n	801a006 <_vprintf+0x292>
 8019fea:	454b      	cmp	r3, r9
 8019fec:	d208      	bcs.n	801a000 <_vprintf+0x28c>
 8019fee:	1c51      	adds	r1, r2, #1
 8019ff0:	1c9e      	adds	r6, r3, #2
 8019ff2:	3202      	adds	r2, #2
 8019ff4:	4296      	cmp	r6, r2
 8019ff6:	d10b      	bne.n	801a010 <_vprintf+0x29c>
 8019ff8:	2231      	movs	r2, #49	@ 0x31
 8019ffa:	705a      	strb	r2, [r3, #1]
 8019ffc:	4606      	mov	r6, r0
 8019ffe:	e7d1      	b.n	8019fa4 <_vprintf+0x230>
 801a000:	f803 c901 	strb.w	ip, [r3], #-1
 801a004:	e7ee      	b.n	8019fe4 <_vprintf+0x270>
 801a006:	454b      	cmp	r3, r9
 801a008:	d3f1      	bcc.n	8019fee <_vprintf+0x27a>
 801a00a:	292d      	cmp	r1, #45	@ 0x2d
 801a00c:	d1c8      	bne.n	8019fa0 <_vprintf+0x22c>
 801a00e:	e7ee      	b.n	8019fee <_vprintf+0x27a>
 801a010:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 801a014:	f802 cd01 	strb.w	ip, [r2, #-1]!
 801a018:	e7ec      	b.n	8019ff4 <_vprintf+0x280>
 801a01a:	2120      	movs	r1, #32
 801a01c:	a801      	add	r0, sp, #4
 801a01e:	f7ff fdd5 	bl	8019bcc <_xputch>
 801a022:	f10a 0a01 	add.w	sl, sl, #1
 801a026:	e7c7      	b.n	8019fb8 <_vprintf+0x244>
 801a028:	2308      	movs	r3, #8
 801a02a:	f854 6b04 	ldr.w	r6, [r4], #4
 801a02e:	9303      	str	r3, [sp, #12]
 801a030:	2130      	movs	r1, #48	@ 0x30
 801a032:	2320      	movs	r3, #32
 801a034:	a801      	add	r0, sp, #4
 801a036:	9301      	str	r3, [sp, #4]
 801a038:	f7ff fdc8 	bl	8019bcc <_xputch>
 801a03c:	2178      	movs	r1, #120	@ 0x78
 801a03e:	a801      	add	r0, sp, #4
 801a040:	f7ff fdc4 	bl	8019bcc <_xputch>
 801a044:	4631      	mov	r1, r6
 801a046:	a801      	add	r0, sp, #4
 801a048:	f7ff fe37 	bl	8019cba <_format_hex>
 801a04c:	e739      	b.n	8019ec2 <_vprintf+0x14e>
 801a04e:	f854 9b04 	ldr.w	r9, [r4], #4
 801a052:	2600      	movs	r6, #0
 801a054:	f819 3006 	ldrb.w	r3, [r9, r6]
 801a058:	b993      	cbnz	r3, 801a080 <_vprintf+0x30c>
 801a05a:	9b01      	ldr	r3, [sp, #4]
 801a05c:	07d9      	lsls	r1, r3, #31
 801a05e:	d503      	bpl.n	801a068 <_vprintf+0x2f4>
 801a060:	9b02      	ldr	r3, [sp, #8]
 801a062:	429e      	cmp	r6, r3
 801a064:	bfa8      	it	ge
 801a066:	461e      	movge	r6, r3
 801a068:	9b01      	ldr	r3, [sp, #4]
 801a06a:	065a      	lsls	r2, r3, #25
 801a06c:	f106 0a01 	add.w	sl, r6, #1
 801a070:	d403      	bmi.n	801a07a <_vprintf+0x306>
 801a072:	9b03      	ldr	r3, [sp, #12]
 801a074:	429e      	cmp	r6, r3
 801a076:	db05      	blt.n	801a084 <_vprintf+0x310>
 801a078:	4656      	mov	r6, sl
 801a07a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 801a07e:	e00d      	b.n	801a09c <_vprintf+0x328>
 801a080:	3601      	adds	r6, #1
 801a082:	e7e7      	b.n	801a054 <_vprintf+0x2e0>
 801a084:	2120      	movs	r1, #32
 801a086:	a801      	add	r0, sp, #4
 801a088:	f7ff fda0 	bl	8019bcc <_xputch>
 801a08c:	4656      	mov	r6, sl
 801a08e:	e7eb      	b.n	801a068 <_vprintf+0x2f4>
 801a090:	a801      	add	r0, sp, #4
 801a092:	f7ff fd9b 	bl	8019bcc <_xputch>
 801a096:	9b02      	ldr	r3, [sp, #8]
 801a098:	3b01      	subs	r3, #1
 801a09a:	9302      	str	r3, [sp, #8]
 801a09c:	9b01      	ldr	r3, [sp, #4]
 801a09e:	07db      	lsls	r3, r3, #31
 801a0a0:	d501      	bpl.n	801a0a6 <_vprintf+0x332>
 801a0a2:	9b02      	ldr	r3, [sp, #8]
 801a0a4:	b11b      	cbz	r3, 801a0ae <_vprintf+0x33a>
 801a0a6:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 801a0aa:	2900      	cmp	r1, #0
 801a0ac:	d1f0      	bne.n	801a090 <_vprintf+0x31c>
 801a0ae:	9b03      	ldr	r3, [sp, #12]
 801a0b0:	42b3      	cmp	r3, r6
 801a0b2:	f77f af06 	ble.w	8019ec2 <_vprintf+0x14e>
 801a0b6:	2120      	movs	r1, #32
 801a0b8:	a801      	add	r0, sp, #4
 801a0ba:	f7ff fd87 	bl	8019bcc <_xputch>
 801a0be:	3601      	adds	r6, #1
 801a0c0:	e7f5      	b.n	801a0ae <_vprintf+0x33a>
 801a0c2:	f854 1b04 	ldr.w	r1, [r4], #4
 801a0c6:	e707      	b.n	8019ed8 <_vprintf+0x164>
 801a0c8:	9b01      	ldr	r3, [sp, #4]
 801a0ca:	f043 0302 	orr.w	r3, r3, #2
 801a0ce:	9301      	str	r3, [sp, #4]
 801a0d0:	f854 1b04 	ldr.w	r1, [r4], #4
 801a0d4:	e7b7      	b.n	801a046 <_vprintf+0x2d2>
 801a0d6:	bf00      	nop

0801a0d8 <printf>:
 801a0d8:	b40f      	push	{r0, r1, r2, r3}
 801a0da:	b507      	push	{r0, r1, r2, lr}
 801a0dc:	aa04      	add	r2, sp, #16
 801a0de:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801a0e2:	f852 1b04 	ldr.w	r1, [r2], #4
 801a0e6:	9201      	str	r2, [sp, #4]
 801a0e8:	f7ff fe44 	bl	8019d74 <_vprintf>
 801a0ec:	b003      	add	sp, #12
 801a0ee:	f85d eb04 	ldr.w	lr, [sp], #4
 801a0f2:	b004      	add	sp, #16
 801a0f4:	4770      	bx	lr
	...

0801a0f8 <sprintf>:
 801a0f8:	b40e      	push	{r1, r2, r3}
 801a0fa:	b517      	push	{r0, r1, r2, r4, lr}
 801a0fc:	4c09      	ldr	r4, [pc, #36]	@ (801a124 <sprintf+0x2c>)
 801a0fe:	aa05      	add	r2, sp, #20
 801a100:	6020      	str	r0, [r4, #0]
 801a102:	f852 1b04 	ldr.w	r1, [r2], #4
 801a106:	9201      	str	r2, [sp, #4]
 801a108:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801a10c:	f7ff fe32 	bl	8019d74 <_vprintf>
 801a110:	6822      	ldr	r2, [r4, #0]
 801a112:	2300      	movs	r3, #0
 801a114:	7013      	strb	r3, [r2, #0]
 801a116:	6023      	str	r3, [r4, #0]
 801a118:	b003      	add	sp, #12
 801a11a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a11e:	b003      	add	sp, #12
 801a120:	4770      	bx	lr
 801a122:	bf00      	nop
 801a124:	2000a3bc 			@ <UNDEFINED> instruction: 0x2000a3bc

0801a128 <snprintf>:
 801a128:	b40c      	push	{r2, r3}
 801a12a:	b513      	push	{r0, r1, r4, lr}
 801a12c:	4c09      	ldr	r4, [pc, #36]	@ (801a154 <snprintf+0x2c>)
 801a12e:	aa04      	add	r2, sp, #16
 801a130:	460b      	mov	r3, r1
 801a132:	6020      	str	r0, [r4, #0]
 801a134:	f852 1b04 	ldr.w	r1, [r2], #4
 801a138:	9201      	str	r2, [sp, #4]
 801a13a:	4618      	mov	r0, r3
 801a13c:	f7ff fe1a 	bl	8019d74 <_vprintf>
 801a140:	6822      	ldr	r2, [r4, #0]
 801a142:	2300      	movs	r3, #0
 801a144:	7013      	strb	r3, [r2, #0]
 801a146:	6023      	str	r3, [r4, #0]
 801a148:	b002      	add	sp, #8
 801a14a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a14e:	b002      	add	sp, #8
 801a150:	4770      	bx	lr
 801a152:	bf00      	nop
 801a154:	2000a3bc 			@ <UNDEFINED> instruction: 0x2000a3bc

0801a158 <vsnprintf>:
 801a158:	b538      	push	{r3, r4, r5, lr}
 801a15a:	4c06      	ldr	r4, [pc, #24]	@ (801a174 <vsnprintf+0x1c>)
 801a15c:	4605      	mov	r5, r0
 801a15e:	4608      	mov	r0, r1
 801a160:	4611      	mov	r1, r2
 801a162:	461a      	mov	r2, r3
 801a164:	6025      	str	r5, [r4, #0]
 801a166:	f7ff fe05 	bl	8019d74 <_vprintf>
 801a16a:	6822      	ldr	r2, [r4, #0]
 801a16c:	2300      	movs	r3, #0
 801a16e:	7013      	strb	r3, [r2, #0]
 801a170:	6023      	str	r3, [r4, #0]
 801a172:	bd38      	pop	{r3, r4, r5, pc}
 801a174:	2000a3bc 			@ <UNDEFINED> instruction: 0x2000a3bc

0801a178 <putchar>:
 801a178:	b508      	push	{r3, lr}
 801a17a:	f7fd fd05 	bl	8017b88 <console_putc>
 801a17e:	2001      	movs	r0, #1
 801a180:	bd08      	pop	{r3, pc}

0801a182 <puts>:
 801a182:	b508      	push	{r3, lr}
 801a184:	f7fd fd02 	bl	8017b8c <console_puts>
 801a188:	200a      	movs	r0, #10
 801a18a:	f7fd fcfd 	bl	8017b88 <console_putc>
 801a18e:	2001      	movs	r0, #1
 801a190:	bd08      	pop	{r3, pc}
	...

0801a194 <random>:
 801a194:	4a06      	ldr	r2, [pc, #24]	@ (801a1b0 <random+0x1c>)
 801a196:	6813      	ldr	r3, [r2, #0]
 801a198:	10d8      	asrs	r0, r3, #3
 801a19a:	ea80 00a3 	eor.w	r0, r0, r3, asr #2
 801a19e:	4058      	eors	r0, r3
 801a1a0:	ea80 1063 	eor.w	r0, r0, r3, asr #5
 801a1a4:	03c0      	lsls	r0, r0, #15
 801a1a6:	b280      	uxth	r0, r0
 801a1a8:	ea40 0063 	orr.w	r0, r0, r3, asr #1
 801a1ac:	6010      	str	r0, [r2, #0]
 801a1ae:	4770      	bx	lr
 801a1b0:	20000018 	andcs	r0, r0, r8, lsl r0

0801a1b4 <strtok>:
 801a1b4:	b570      	push	{r4, r5, r6, lr}
 801a1b6:	4603      	mov	r3, r0
 801a1b8:	b910      	cbnz	r0, 801a1c0 <strtok+0xc>
 801a1ba:	4b12      	ldr	r3, [pc, #72]	@ (801a204 <strtok+0x50>)
 801a1bc:	681b      	ldr	r3, [r3, #0]
 801a1be:	b14b      	cbz	r3, 801a1d4 <strtok+0x20>
 801a1c0:	4618      	mov	r0, r3
 801a1c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801a1c6:	460d      	mov	r5, r1
 801a1c8:	f815 4b01 	ldrb.w	r4, [r5], #1
 801a1cc:	b924      	cbnz	r4, 801a1d8 <strtok+0x24>
 801a1ce:	b94a      	cbnz	r2, 801a1e4 <strtok+0x30>
 801a1d0:	4b0c      	ldr	r3, [pc, #48]	@ (801a204 <strtok+0x50>)
 801a1d2:	601a      	str	r2, [r3, #0]
 801a1d4:	2000      	movs	r0, #0
 801a1d6:	bd70      	pop	{r4, r5, r6, pc}
 801a1d8:	42a2      	cmp	r2, r4
 801a1da:	d1f5      	bne.n	801a1c8 <strtok+0x14>
 801a1dc:	e7f0      	b.n	801a1c0 <strtok+0xc>
 801a1de:	4613      	mov	r3, r2
 801a1e0:	e00c      	b.n	801a1fc <strtok+0x48>
 801a1e2:	b91c      	cbnz	r4, 801a1ec <strtok+0x38>
 801a1e4:	461e      	mov	r6, r3
 801a1e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 801a1ea:	460d      	mov	r5, r1
 801a1ec:	f815 4b01 	ldrb.w	r4, [r5], #1
 801a1f0:	42a2      	cmp	r2, r4
 801a1f2:	d1f6      	bne.n	801a1e2 <strtok+0x2e>
 801a1f4:	2a00      	cmp	r2, #0
 801a1f6:	d0f2      	beq.n	801a1de <strtok+0x2a>
 801a1f8:	2200      	movs	r2, #0
 801a1fa:	7032      	strb	r2, [r6, #0]
 801a1fc:	4a01      	ldr	r2, [pc, #4]	@ (801a204 <strtok+0x50>)
 801a1fe:	6013      	str	r3, [r2, #0]
 801a200:	e7e9      	b.n	801a1d6 <strtok+0x22>
 801a202:	bf00      	nop
 801a204:	2000a3c0 	andcs	sl, r0, r0, asr #7

0801a208 <uuid_unparse_x>:
 801a208:	b530      	push	{r4, r5, lr}
 801a20a:	4603      	mov	r3, r0
 801a20c:	4608      	mov	r0, r1
 801a20e:	4611      	mov	r1, r2
 801a210:	681a      	ldr	r2, [r3, #0]
 801a212:	891c      	ldrh	r4, [r3, #8]
 801a214:	b08f      	sub	sp, #60	@ 0x3c
 801a216:	ba12      	rev	r2, r2
 801a218:	920a      	str	r2, [sp, #40]	@ 0x28
 801a21a:	889a      	ldrh	r2, [r3, #4]
 801a21c:	ba52      	rev16	r2, r2
 801a21e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801a222:	88da      	ldrh	r2, [r3, #6]
 801a224:	ba64      	rev16	r4, r4
 801a226:	ba52      	rev16	r2, r2
 801a228:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801a22c:	f8ad 4030 	strh.w	r4, [sp, #48]	@ 0x30
 801a230:	f103 020a 	add.w	r2, r3, #10
 801a234:	f10d 0431 	add.w	r4, sp, #49	@ 0x31
 801a238:	3310      	adds	r3, #16
 801a23a:	f812 5b01 	ldrb.w	r5, [r2], #1
 801a23e:	f804 5f01 	strb.w	r5, [r4, #1]!
 801a242:	4293      	cmp	r3, r2
 801a244:	d1f9      	bne.n	801a23a <uuid_unparse_x+0x32>
 801a246:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
 801a24a:	9208      	str	r2, [sp, #32]
 801a24c:	f89d 2036 	ldrb.w	r2, [sp, #54]	@ 0x36
 801a250:	9207      	str	r2, [sp, #28]
 801a252:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
 801a256:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 801a25a:	9206      	str	r2, [sp, #24]
 801a25c:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
 801a260:	9205      	str	r2, [sp, #20]
 801a262:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
 801a266:	9204      	str	r2, [sp, #16]
 801a268:	0a1b      	lsrs	r3, r3, #8
 801a26a:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
 801a26e:	9203      	str	r2, [sp, #12]
 801a270:	9301      	str	r3, [sp, #4]
 801a272:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
 801a276:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801a27a:	9202      	str	r2, [sp, #8]
 801a27c:	9300      	str	r3, [sp, #0]
 801a27e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a280:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801a284:	f7ff ff38 	bl	801a0f8 <sprintf>
 801a288:	b00f      	add	sp, #60	@ 0x3c
 801a28a:	bd30      	pop	{r4, r5, pc}

0801a28c <uuid_unparse>:
 801a28c:	4a01      	ldr	r2, [pc, #4]	@ (801a294 <uuid_unparse+0x8>)
 801a28e:	f7ff bfbb 	b.w	801a208 <uuid_unparse_x>
 801a292:	bf00      	nop
 801a294:	0801b882 	stmdaeq	r1, {r1, r7, fp, ip, sp, pc}

0801a298 <__assert_func>:
 801a298:	b507      	push	{r0, r1, r2, lr}
 801a29a:	460c      	mov	r4, r1
 801a29c:	4619      	mov	r1, r3
 801a29e:	b142      	cbz	r2, 801a2b2 <__assert_func+0x1a>
 801a2a0:	4b05      	ldr	r3, [pc, #20]	@ (801a2b8 <__assert_func+0x20>)
 801a2a2:	e9cd 3200 	strd	r3, r2, [sp]
 801a2a6:	4602      	mov	r2, r0
 801a2a8:	4623      	mov	r3, r4
 801a2aa:	4804      	ldr	r0, [pc, #16]	@ (801a2bc <__assert_func+0x24>)
 801a2ac:	f7ff ff14 	bl	801a0d8 <printf>
 801a2b0:	e7fe      	b.n	801a2b0 <__assert_func+0x18>
 801a2b2:	4b03      	ldr	r3, [pc, #12]	@ (801a2c0 <__assert_func+0x28>)
 801a2b4:	461a      	mov	r2, r3
 801a2b6:	e7f4      	b.n	801a2a2 <__assert_func+0xa>
 801a2b8:	0801b8b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, fp, ip, sp, pc}
 801a2bc:	0801b8c0 	stmdaeq	r1, {r6, r7, fp, ip, sp, pc}
 801a2c0:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}

0801a2c4 <isleapyear(int)>:
 801a2c4:	2264      	movs	r2, #100	@ 0x64
 801a2c6:	fb90 f3f2 	sdiv	r3, r0, r2
 801a2ca:	fb02 0313 	mls	r3, r2, r3, r0
 801a2ce:	b94b      	cbnz	r3, 801a2e4 <isleapyear(int)+0x20>
 801a2d0:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 801a2d4:	fb90 f2f3 	sdiv	r2, r0, r3
 801a2d8:	fb03 0012 	mls	r0, r3, r2, r0
 801a2dc:	fab0 f080 	clz	r0, r0
 801a2e0:	0940      	lsrs	r0, r0, #5
 801a2e2:	4770      	bx	lr
 801a2e4:	f010 0f03 	tst.w	r0, #3
 801a2e8:	bf0c      	ite	eq
 801a2ea:	2001      	moveq	r0, #1
 801a2ec:	2000      	movne	r0, #0
 801a2ee:	4770      	bx	lr

0801a2f0 <getdaysofmonth(int, int)>:
 801a2f0:	b510      	push	{r4, lr}
 801a2f2:	4604      	mov	r4, r0
 801a2f4:	2c01      	cmp	r4, #1
 801a2f6:	4608      	mov	r0, r1
 801a2f8:	d102      	bne.n	801a300 <getdaysofmonth(int, int)+0x10>
 801a2fa:	f7ff ffe3 	bl	801a2c4 <isleapyear(int)>
 801a2fe:	b918      	cbnz	r0, 801a308 <getdaysofmonth(int, int)+0x18>
 801a300:	4b02      	ldr	r3, [pc, #8]	@ (801a30c <getdaysofmonth(int, int)+0x1c>)
 801a302:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801a306:	bd10      	pop	{r4, pc}
 801a308:	201d      	movs	r0, #29
 801a30a:	e7fc      	b.n	801a306 <getdaysofmonth(int, int)+0x16>
 801a30c:	0801f194 	stmdaeq	r1, {r2, r4, r7, r8, ip, sp, lr, pc}

0801a310 <gmtime>:
 801a310:	b570      	push	{r4, r5, r6, lr}
 801a312:	2800      	cmp	r0, #0
 801a314:	d03c      	beq.n	801a390 <gmtime+0x80>
 801a316:	6803      	ldr	r3, [r0, #0]
 801a318:	4d1e      	ldr	r5, [pc, #120]	@ (801a394 <gmtime+0x84>)
 801a31a:	213c      	movs	r1, #60	@ 0x3c
 801a31c:	fb93 f2f1 	sdiv	r2, r3, r1
 801a320:	fb01 3312 	mls	r3, r1, r2, r3
 801a324:	602b      	str	r3, [r5, #0]
 801a326:	fb92 f3f1 	sdiv	r3, r2, r1
 801a32a:	fb01 2213 	mls	r2, r1, r3, r2
 801a32e:	606a      	str	r2, [r5, #4]
 801a330:	2218      	movs	r2, #24
 801a332:	fb93 f4f2 	sdiv	r4, r3, r2
 801a336:	fb02 3314 	mls	r3, r2, r4, r3
 801a33a:	60ab      	str	r3, [r5, #8]
 801a33c:	1d22      	adds	r2, r4, #4
 801a33e:	2307      	movs	r3, #7
 801a340:	fb92 f3f3 	sdiv	r3, r2, r3
 801a344:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 801a348:	1ad2      	subs	r2, r2, r3
 801a34a:	61aa      	str	r2, [r5, #24]
 801a34c:	f240 71b2 	movw	r1, #1970	@ 0x7b2
 801a350:	f240 166d 	movw	r6, #365	@ 0x16d
 801a354:	4608      	mov	r0, r1
 801a356:	f7ff ffb5 	bl	801a2c4 <isleapyear(int)>
 801a35a:	2800      	cmp	r0, #0
 801a35c:	bf0c      	ite	eq
 801a35e:	4633      	moveq	r3, r6
 801a360:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 801a364:	429c      	cmp	r4, r3
 801a366:	db02      	blt.n	801a36e <gmtime+0x5e>
 801a368:	1ae4      	subs	r4, r4, r3
 801a36a:	3101      	adds	r1, #1
 801a36c:	e7f2      	b.n	801a354 <gmtime+0x44>
 801a36e:	f2a1 736c 	subw	r3, r1, #1900	@ 0x76c
 801a372:	616b      	str	r3, [r5, #20]
 801a374:	61ec      	str	r4, [r5, #28]
 801a376:	2600      	movs	r6, #0
 801a378:	4630      	mov	r0, r6
 801a37a:	f7ff ffb9 	bl	801a2f0 <getdaysofmonth(int, int)>
 801a37e:	4284      	cmp	r4, r0
 801a380:	db02      	blt.n	801a388 <gmtime+0x78>
 801a382:	1a24      	subs	r4, r4, r0
 801a384:	3601      	adds	r6, #1
 801a386:	e7f7      	b.n	801a378 <gmtime+0x68>
 801a388:	3401      	adds	r4, #1
 801a38a:	4802      	ldr	r0, [pc, #8]	@ (801a394 <gmtime+0x84>)
 801a38c:	612e      	str	r6, [r5, #16]
 801a38e:	60ec      	str	r4, [r5, #12]
 801a390:	bd70      	pop	{r4, r5, r6, pc}
 801a392:	bf00      	nop
 801a394:	2000a3c4 	andcs	sl, r0, r4, asr #7

0801a398 <localtime>:
 801a398:	b507      	push	{r0, r1, r2, lr}
 801a39a:	b140      	cbz	r0, 801a3ae <localtime+0x16>
 801a39c:	4b05      	ldr	r3, [pc, #20]	@ (801a3b4 <localtime+0x1c>)
 801a39e:	6802      	ldr	r2, [r0, #0]
 801a3a0:	681b      	ldr	r3, [r3, #0]
 801a3a2:	681b      	ldr	r3, [r3, #0]
 801a3a4:	a801      	add	r0, sp, #4
 801a3a6:	4413      	add	r3, r2
 801a3a8:	9301      	str	r3, [sp, #4]
 801a3aa:	f7ff ffb1 	bl	801a310 <gmtime>
 801a3ae:	b003      	add	sp, #12
 801a3b0:	f85d fb04 	ldr.w	pc, [sp], #4
 801a3b4:	2000a3e8 	andcs	sl, r0, r8, ror #7

0801a3b8 <mktime>:
 801a3b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a3bc:	4604      	mov	r4, r0
 801a3be:	2800      	cmp	r0, #0
 801a3c0:	d043      	beq.n	801a44a <mktime+0x92>
 801a3c2:	6941      	ldr	r1, [r0, #20]
 801a3c4:	f1a1 0346 	sub.w	r3, r1, #70	@ 0x46
 801a3c8:	2b45      	cmp	r3, #69	@ 0x45
 801a3ca:	d83e      	bhi.n	801a44a <mktime+0x92>
 801a3cc:	f240 75b2 	movw	r5, #1970	@ 0x7b2
 801a3d0:	2600      	movs	r6, #0
 801a3d2:	f201 776b 	addw	r7, r1, #1899	@ 0x76b
 801a3d6:	f240 186d 	movw	r8, #365	@ 0x16d
 801a3da:	42af      	cmp	r7, r5
 801a3dc:	da24      	bge.n	801a428 <mktime+0x70>
 801a3de:	6927      	ldr	r7, [r4, #16]
 801a3e0:	2f0b      	cmp	r7, #11
 801a3e2:	d832      	bhi.n	801a44a <mktime+0x92>
 801a3e4:	2500      	movs	r5, #0
 801a3e6:	42af      	cmp	r7, r5
 801a3e8:	d129      	bne.n	801a43e <mktime+0x86>
 801a3ea:	68e5      	ldr	r5, [r4, #12]
 801a3ec:	2d00      	cmp	r5, #0
 801a3ee:	dd2c      	ble.n	801a44a <mktime+0x92>
 801a3f0:	4638      	mov	r0, r7
 801a3f2:	f7ff ff7d 	bl	801a2f0 <getdaysofmonth(int, int)>
 801a3f6:	4285      	cmp	r5, r0
 801a3f8:	dc27      	bgt.n	801a44a <mktime+0x92>
 801a3fa:	3d01      	subs	r5, #1
 801a3fc:	2318      	movs	r3, #24
 801a3fe:	4435      	add	r5, r6
 801a400:	435d      	muls	r5, r3
 801a402:	68a3      	ldr	r3, [r4, #8]
 801a404:	2b17      	cmp	r3, #23
 801a406:	d820      	bhi.n	801a44a <mktime+0x92>
 801a408:	442b      	add	r3, r5
 801a40a:	213c      	movs	r1, #60	@ 0x3c
 801a40c:	fb01 f203 	mul.w	r2, r1, r3
 801a410:	6863      	ldr	r3, [r4, #4]
 801a412:	2b3b      	cmp	r3, #59	@ 0x3b
 801a414:	d819      	bhi.n	801a44a <mktime+0x92>
 801a416:	6820      	ldr	r0, [r4, #0]
 801a418:	4413      	add	r3, r2
 801a41a:	283b      	cmp	r0, #59	@ 0x3b
 801a41c:	fb01 f303 	mul.w	r3, r1, r3
 801a420:	d813      	bhi.n	801a44a <mktime+0x92>
 801a422:	4418      	add	r0, r3
 801a424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a428:	4628      	mov	r0, r5
 801a42a:	f7ff ff4b 	bl	801a2c4 <isleapyear(int)>
 801a42e:	2800      	cmp	r0, #0
 801a430:	bf0c      	ite	eq
 801a432:	4643      	moveq	r3, r8
 801a434:	f44f 73b7 	movne.w	r3, #366	@ 0x16e
 801a438:	441e      	add	r6, r3
 801a43a:	3501      	adds	r5, #1
 801a43c:	e7cd      	b.n	801a3da <mktime+0x22>
 801a43e:	4628      	mov	r0, r5
 801a440:	f7ff ff56 	bl	801a2f0 <getdaysofmonth(int, int)>
 801a444:	3501      	adds	r5, #1
 801a446:	4406      	add	r6, r0
 801a448:	e7cd      	b.n	801a3e6 <mktime+0x2e>
 801a44a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 801a44e:	e7e9      	b.n	801a424 <mktime+0x6c>

0801a450 <hal::uuid_init(unsigned char*)>:
 801a450:	4a0c      	ldr	r2, [pc, #48]	@ (801a484 <hal::uuid_init(unsigned char*)+0x34>)
 801a452:	b084      	sub	sp, #16
 801a454:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 801a458:	9300      	str	r3, [sp, #0]
 801a45a:	f8d2 1a14 	ldr.w	r1, [r2, #2580]	@ 0xa14
 801a45e:	9101      	str	r1, [sp, #4]
 801a460:	f8d2 2a18 	ldr.w	r2, [r2, #2584]	@ 0xa18
 801a464:	9202      	str	r2, [sp, #8]
 801a466:	440b      	add	r3, r1
 801a468:	4413      	add	r3, r2
 801a46a:	9303      	str	r3, [sp, #12]
 801a46c:	f100 0210 	add.w	r2, r0, #16
 801a470:	466b      	mov	r3, sp
 801a472:	f813 1b01 	ldrb.w	r1, [r3], #1
 801a476:	f800 1b01 	strb.w	r1, [r0], #1
 801a47a:	4282      	cmp	r2, r0
 801a47c:	d1f9      	bne.n	801a472 <hal::uuid_init(unsigned char*)+0x22>
 801a47e:	b004      	add	sp, #16
 801a480:	4770      	bx	lr
 801a482:	bf00      	nop
 801a484:	1fff7000 	svcne	0x00ff7000

0801a488 <gettimeofday>:
 801a488:	4b13      	ldr	r3, [pc, #76]	@ (801a4d8 <gettimeofday+0x50>)
 801a48a:	4a14      	ldr	r2, [pc, #80]	@ (801a4dc <gettimeofday+0x54>)
 801a48c:	6819      	ldr	r1, [r3, #0]
 801a48e:	6812      	ldr	r2, [r2, #0]
 801a490:	b510      	push	{r4, lr}
 801a492:	4c13      	ldr	r4, [pc, #76]	@ (801a4e0 <gettimeofday+0x58>)
 801a494:	601a      	str	r2, [r3, #0]
 801a496:	4b13      	ldr	r3, [pc, #76]	@ (801a4e4 <gettimeofday+0x5c>)
 801a498:	1a51      	subs	r1, r2, r1
 801a49a:	fba3 2301 	umull	r2, r3, r3, r1
 801a49e:	6822      	ldr	r2, [r4, #0]
 801a4a0:	ea4f 1e93 	mov.w	lr, r3, lsr #6
 801a4a4:	eb02 1293 	add.w	r2, r2, r3, lsr #6
 801a4a8:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 801a4ac:	6863      	ldr	r3, [r4, #4]
 801a4ae:	6022      	str	r2, [r4, #0]
 801a4b0:	fb0c 111e 	mls	r1, ip, lr, r1
 801a4b4:	fb0c 3301 	mla	r3, ip, r1, r3
 801a4b8:	490b      	ldr	r1, [pc, #44]	@ (801a4e8 <gettimeofday+0x60>)
 801a4ba:	6063      	str	r3, [r4, #4]
 801a4bc:	428b      	cmp	r3, r1
 801a4be:	bfc2      	ittt	gt
 801a4c0:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 801a4c4:	3201      	addgt	r2, #1
 801a4c6:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 801a4ca:	e9c0 2300 	strd	r2, r3, [r0]
 801a4ce:	bfc8      	it	gt
 801a4d0:	e9c4 2300 	strdgt	r2, r3, [r4]
 801a4d4:	2000      	movs	r0, #0
 801a4d6:	bd10      	pop	{r4, pc}
 801a4d8:	2000a3f4 	strdcs	sl, [r0], -r4
 801a4dc:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 801a4e0:	2000a3ec 	andcs	sl, r0, ip, ror #7
 801a4e4:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 801a4e8:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

0801a4ec <settimeofday>:
 801a4ec:	4a07      	ldr	r2, [pc, #28]	@ (801a50c <settimeofday+0x20>)
 801a4ee:	4b08      	ldr	r3, [pc, #32]	@ (801a510 <settimeofday+0x24>)
 801a4f0:	4908      	ldr	r1, [pc, #32]	@ (801a514 <settimeofday+0x28>)
 801a4f2:	b410      	push	{r4}
 801a4f4:	6814      	ldr	r4, [r2, #0]
 801a4f6:	6844      	ldr	r4, [r0, #4]
 801a4f8:	6812      	ldr	r2, [r2, #0]
 801a4fa:	6800      	ldr	r0, [r0, #0]
 801a4fc:	605c      	str	r4, [r3, #4]
 801a4fe:	6018      	str	r0, [r3, #0]
 801a500:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a504:	600a      	str	r2, [r1, #0]
 801a506:	2000      	movs	r0, #0
 801a508:	4770      	bx	lr
 801a50a:	bf00      	nop
 801a50c:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 801a510:	2000a3ec 	andcs	sl, r0, ip, ror #7
 801a514:	2000a3f4 	strdcs	sl, [r0], -r4

0801a518 <time>:
 801a518:	4b13      	ldr	r3, [pc, #76]	@ (801a568 <time+0x50>)
 801a51a:	4914      	ldr	r1, [pc, #80]	@ (801a56c <time+0x54>)
 801a51c:	681a      	ldr	r2, [r3, #0]
 801a51e:	b430      	push	{r4, r5}
 801a520:	680d      	ldr	r5, [r1, #0]
 801a522:	601d      	str	r5, [r3, #0]
 801a524:	4912      	ldr	r1, [pc, #72]	@ (801a570 <time+0x58>)
 801a526:	4b13      	ldr	r3, [pc, #76]	@ (801a574 <time+0x5c>)
 801a528:	1aaa      	subs	r2, r5, r2
 801a52a:	fba3 3c02 	umull	r3, ip, r3, r2
 801a52e:	680b      	ldr	r3, [r1, #0]
 801a530:	ea4f 159c 	mov.w	r5, ip, lsr #6
 801a534:	4604      	mov	r4, r0
 801a536:	eb03 109c 	add.w	r0, r3, ip, lsr #6
 801a53a:	684b      	ldr	r3, [r1, #4]
 801a53c:	6008      	str	r0, [r1, #0]
 801a53e:	f44f 7c7a 	mov.w	ip, #1000	@ 0x3e8
 801a542:	fb0c 2215 	mls	r2, ip, r5, r2
 801a546:	fb0c 3302 	mla	r3, ip, r2, r3
 801a54a:	4a0b      	ldr	r2, [pc, #44]	@ (801a578 <time+0x60>)
 801a54c:	604b      	str	r3, [r1, #4]
 801a54e:	4293      	cmp	r3, r2
 801a550:	bfc1      	itttt	gt
 801a552:	f5a3 2374 	subgt.w	r3, r3, #999424	@ 0xf4000
 801a556:	3001      	addgt	r0, #1
 801a558:	f5a3 7310 	subgt.w	r3, r3, #576	@ 0x240
 801a55c:	e9c1 0300 	strdgt	r0, r3, [r1]
 801a560:	b104      	cbz	r4, 801a564 <time+0x4c>
 801a562:	6020      	str	r0, [r4, #0]
 801a564:	bc30      	pop	{r4, r5}
 801a566:	4770      	bx	lr
 801a568:	2000a3f4 	strdcs	sl, [r0], -r4
 801a56c:	2000a3b4 			@ <UNDEFINED> instruction: 0x2000a3b4
 801a570:	2000a3ec 	andcs	sl, r0, ip, ror #7
 801a574:	10624dd3 	ldrdne	r4, [r2], #-211	@ 0xffffff2d	@ <UNPREDICTABLE>
 801a578:	000f423f 	andeq	r4, pc, pc, lsr r2	@ <UNPREDICTABLE>

0801a57c <operator delete[](void*)>:
 801a57c:	f000 b838 	b.w	801a5f0 <free>

0801a580 <operator delete(void*, unsigned int)>:
 801a580:	f000 b836 	b.w	801a5f0 <free>

0801a584 <operator new(unsigned int)>:
 801a584:	f000 b802 	b.w	801a58c <malloc>

0801a588 <operator new[](unsigned int)>:
 801a588:	f000 b800 	b.w	801a58c <malloc>

0801a58c <malloc>:
 801a58c:	b510      	push	{r4, lr}
 801a58e:	b180      	cbz	r0, 801a5b2 <malloc+0x26>
 801a590:	4b12      	ldr	r3, [pc, #72]	@ (801a5dc <malloc+0x50>)
 801a592:	681a      	ldr	r2, [r3, #0]
 801a594:	b97a      	cbnz	r2, 801a5b6 <malloc+0x2a>
 801a596:	4602      	mov	r2, r0
 801a598:	4911      	ldr	r1, [pc, #68]	@ (801a5e0 <malloc+0x54>)
 801a59a:	4c12      	ldr	r4, [pc, #72]	@ (801a5e4 <malloc+0x58>)
 801a59c:	6808      	ldr	r0, [r1, #0]
 801a59e:	f102 031b 	add.w	r3, r2, #27
 801a5a2:	f023 030f 	bic.w	r3, r3, #15
 801a5a6:	4403      	add	r3, r0
 801a5a8:	42a3      	cmp	r3, r4
 801a5aa:	d911      	bls.n	801a5d0 <malloc+0x44>
 801a5ac:	480e      	ldr	r0, [pc, #56]	@ (801a5e8 <malloc+0x5c>)
 801a5ae:	f7fd faef 	bl	8017b90 <console_error>
 801a5b2:	2000      	movs	r0, #0
 801a5b4:	bd10      	pop	{r4, pc}
 801a5b6:	4282      	cmp	r2, r0
 801a5b8:	d201      	bcs.n	801a5be <malloc+0x32>
 801a5ba:	3308      	adds	r3, #8
 801a5bc:	e7e9      	b.n	801a592 <malloc+0x6>
 801a5be:	6858      	ldr	r0, [r3, #4]
 801a5c0:	2800      	cmp	r0, #0
 801a5c2:	d0e9      	beq.n	801a598 <malloc+0xc>
 801a5c4:	6882      	ldr	r2, [r0, #8]
 801a5c6:	605a      	str	r2, [r3, #4]
 801a5c8:	2300      	movs	r3, #0
 801a5ca:	6083      	str	r3, [r0, #8]
 801a5cc:	300c      	adds	r0, #12
 801a5ce:	e7f1      	b.n	801a5b4 <malloc+0x28>
 801a5d0:	600b      	str	r3, [r1, #0]
 801a5d2:	4b06      	ldr	r3, [pc, #24]	@ (801a5ec <malloc+0x60>)
 801a5d4:	e9c0 3200 	strd	r3, r2, [r0]
 801a5d8:	e7f6      	b.n	801a5c8 <malloc+0x3c>
 801a5da:	bf00      	nop
 801a5dc:	2000001c 	andcs	r0, r0, ip, lsl r0
 801a5e0:	20000084 	andcs	r0, r0, r4, lsl #1
 801a5e4:	1000ec90 	mulne	r0, r0, ip
 801a5e8:	0801b8ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, fp, ip, sp, pc}
 801a5ec:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0

0801a5f0 <free>:
 801a5f0:	b138      	cbz	r0, 801a602 <free+0x12>
 801a5f2:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 801a5f6:	4b09      	ldr	r3, [pc, #36]	@ (801a61c <free+0x2c>)
 801a5f8:	429a      	cmp	r2, r3
 801a5fa:	d102      	bne.n	801a602 <free+0x12>
 801a5fc:	4b08      	ldr	r3, [pc, #32]	@ (801a620 <free+0x30>)
 801a5fe:	681a      	ldr	r2, [r3, #0]
 801a600:	b902      	cbnz	r2, 801a604 <free+0x14>
 801a602:	4770      	bx	lr
 801a604:	f850 1c08 	ldr.w	r1, [r0, #-8]
 801a608:	4291      	cmp	r1, r2
 801a60a:	d105      	bne.n	801a618 <free+0x28>
 801a60c:	685a      	ldr	r2, [r3, #4]
 801a60e:	f840 2c04 	str.w	r2, [r0, #-4]
 801a612:	380c      	subs	r0, #12
 801a614:	6058      	str	r0, [r3, #4]
 801a616:	4770      	bx	lr
 801a618:	3308      	adds	r3, #8
 801a61a:	e7f0      	b.n	801a5fe <free+0xe>
 801a61c:	424c4d43 	submi	r4, ip, #4288	@ 0x10c0
 801a620:	2000001c 	andcs	r0, r0, ip, lsl r0

0801a624 <__popcountsi2>:
 801a624:	0843      	lsrs	r3, r0, #1
 801a626:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
 801a62a:	1ac0      	subs	r0, r0, r3
 801a62c:	0883      	lsrs	r3, r0, #2
 801a62e:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
 801a632:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
 801a636:	4418      	add	r0, r3
 801a638:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 801a63c:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
 801a640:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 801a644:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 801a648:	0e00      	lsrs	r0, r0, #24
 801a64a:	4770      	bx	lr

Disassembly of section .rodata:

0801a64c <CSWTCH.135-0x12b7>:
	...
 801a654:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 801a658:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801a65c:	00000000 	andeq	r0, r0, r0
 801a660:	04030201 	streq	r0, [r3], #-513	@ 0xfffffdff
 801a664:	7261485b 	rsbvc	r4, r1, #5963776	@ 0x5b0000
 801a668:	75614664 	strbvc	r4, [r1, #-1636]!	@ 0xfffff99c
 801a66c:	0a5d746c 	beq	9777824 <_sidata+0x175865c>
 801a670:	53202d00 	noppl	{0}	@ <UNPREDICTABLE>
 801a674:	6b636174 	blvs	98f2c4c <_sidata+0x18d3a84>
 801a678:	61726620 	cmnvs	r2, r0, lsr #12
 801a67c:	0a3a656d 	beq	8eb3c38 <_sidata+0xe94a70>
 801a680:	30522000 	subscc	r2, r2, r0
 801a684:	203d2020 	eorscs	r2, sp, r0, lsr #32
 801a688:	000a7825 	andeq	r7, sl, r5, lsr #16
 801a68c:	20315220 	eorscs	r5, r1, r0, lsr #4
 801a690:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 801a694:	20000a78 	andcs	r0, r0, r8, ror sl
 801a698:	20203252 	eorcs	r3, r0, r2, asr r2
 801a69c:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801a6a0:	5220000a 	eorpl	r0, r0, #10
 801a6a4:	3d202033 	stccc	0, cr2, [r0, #-204]!	@ 0xffffff34
 801a6a8:	0a782520 	beq	9e23b30 <_sidata+0x1e04968>
 801a6ac:	31522000 	cmpcc	r2, r0
 801a6b0:	203d2032 	eorscs	r2, sp, r2, lsr r0
 801a6b4:	000a7825 	andeq	r7, sl, r5, lsr #16
 801a6b8:	20524c20 	subscs	r4, r2, r0, lsr #24
 801a6bc:	25203d20 	strcs	r3, [r0, #-3360]!	@ 0xfffff2e0
 801a6c0:	20000a78 	andcs	r0, r0, r8, ror sl
 801a6c4:	20204350 	eorcs	r4, r0, r0, asr r3
 801a6c8:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801a6cc:	5020000a 	eorpl	r0, r0, sl
 801a6d0:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801a6d4:	0a782520 	beq	9e23b5c <_sidata+0x1e04994>
 801a6d8:	46202d00 	strtmi	r2, [r0], -r0, lsl #26
 801a6dc:	462f5253 			@ <UNDEFINED> instruction: 0x462f5253
 801a6e0:	0a3a5241 	beq	8eaefec <_sidata+0xe8fe24>
 801a6e4:	46432000 	strbmi	r2, [r3], -r0
 801a6e8:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801a6ec:	0a782520 	beq	9e23b74 <_sidata+0x1e049ac>
 801a6f0:	46482000 	strbmi	r2, [r8], -r0
 801a6f4:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801a6f8:	0a782520 	beq	9e23b80 <_sidata+0x1e049b8>
 801a6fc:	46442000 	strbmi	r2, [r4], -r0
 801a700:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801a704:	0a782520 	beq	9e23b8c <_sidata+0x1e049c4>
 801a708:	46412000 	strbmi	r2, [r1], -r0
 801a70c:	3d205253 	sfmcc	f5, 4, [r0, #-332]!	@ 0xfffffeb4
 801a710:	0a782520 	beq	9e23b98 <_sidata+0x1e049d0>
 801a714:	4d4d2000 	stclmi	0, cr2, [sp, #-0]
 801a718:	20524146 	subscs	r4, r2, r6, asr #2
 801a71c:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801a720:	4220000a 	eormi	r0, r0, #10
 801a724:	20524146 	subscs	r4, r2, r6, asr #2
 801a728:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801a72c:	202d000a 	eorcs	r0, sp, sl
 801a730:	6373694d 	cmnvs	r3, #1261568	@ 0x134000
 801a734:	4c20000a 	stcmi	0, cr0, [r0], #-40	@ 0xffffffd8
 801a738:	58452f52 	stmdapl	r5, {r1, r4, r6, r8, r9, sl, fp, sp}^
 801a73c:	45525f43 	ldrbmi	r5, [r2, #-3907]	@ 0xfffff0bd
 801a740:	4e525554 	mrcmi	5, 2, r5, cr2, cr4, {2}
 801a744:	7825203d 	stmdavc	r5!, {r0, r2, r3, r4, r5, sp}
 801a748:	696c000a 	stmdbvs	ip!, {r1, r3}^
 801a74c:	73746867 	cmnvc	r4, #6750208	@ 0x670000
 801a750:	3a3a7465 	bcc	8eb78ec <_sidata+0xe98724>
 801a754:	61746144 	cmnvs	r4, r4, asr #2
 801a758:	65473a3a 	strbvs	r3, [r7, #-2618]	@ 0xfffff5c6
 801a75c:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
 801a760:	28687467 	stmdacs	r8!, {r0, r1, r2, r5, r6, sl, ip, sp, lr}^
 801a764:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 801a768:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 801a76c:	20297865 	eorcs	r7, r9, r5, ror #16
 801a770:	30203d21 	eorcc	r3, r0, r1, lsr #26
 801a774:	6e795300 	cdpvs	3, 7, cr5, cr9, cr0, {0}
 801a778:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
 801a77c:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 801a780:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 801a784:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
 801a788:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
 801a78c:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 801a790:	646e6573 	strbtvs	r6, [lr], #-1395	@ 0xfffffa8d
 801a794:	6e00682e 	cdpvs	8, 0, cr6, cr0, cr14, {1}
 801a798:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801a79c:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 801a7a0:	203c2078 	eorscs	r2, ip, r8, ror r0
 801a7a4:	54524f50 	ldrbpl	r4, [r2], #-3920	@ 0xfffff0b0
 801a7a8:	42490053 	submi	r0, r9, #83	@ 0x53
 801a7ac:	756b6361 	strbvc	r6, [fp, #-865]!	@ 0xfffffc9f
 801a7b0:	2e2e0070 	mcrcs	0, 1, r0, cr14, cr0, {3}
 801a7b4:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 801a7b8:	67696c2d 	strbvs	r6, [r9, -sp, lsr #24]!
 801a7bc:	65737468 	ldrbvs	r7, [r3, #-1128]!	@ 0xfffffb98
 801a7c0:	6e692f74 	mcrvs	15, 3, r2, cr9, cr4, {3}
 801a7c4:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 801a7c8:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 801a7cc:	73746867 	cmnvc	r4, #6750208	@ 0x670000
 801a7d0:	61647465 	cmnvs	r4, r5, ror #8
 801a7d4:	682e6174 	stmdavs	lr!, {r2, r4, r5, r6, r8, sp, lr}
 801a7d8:	584d4400 	stmdapl	sp, {sl, lr}^
 801a7dc:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 801a7e0:	42200064 	eormi	r0, r0, #100	@ 0x64
 801a7e4:	6b616572 	blvs	9873db4 <_sidata+0x1854bec>
 801a7e8:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	@ 0xffffff80
 801a7ec:	20202065 	eorcs	r2, r0, r5, rrx
 801a7f0:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801a7f4:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	@ 0xffffffd8
 801a7f8:	74204241 	strtvc	r4, [r0], #-577	@ 0xfffffdbf
 801a7fc:	20656d69 	rsbcs	r6, r5, r9, ror #26
 801a800:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a804:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801a808:	5220000a 	eorpl	r0, r0, #10
 801a80c:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801a810:	72206873 	eorvc	r6, r0, #7536640	@ 0x730000
 801a814:	20657461 	rsbcs	r7, r5, r1, ror #8
 801a818:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801a81c:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 801a820:	73746f6c 	cmnvc	r4, #108, 30	@ 0x1b0
 801a824:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a828:	20202020 	eorcs	r2, r0, r0, lsr #32
 801a82c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801a830:	506e000a 	rsbpl	r0, lr, sl
 801a834:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801a838:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801a83c:	43203c20 			@ <UNDEFINED> instruction: 0x43203c20
 801a840:	5f524148 	svcpl	0x00524148
 801a844:	00544942 	subseq	r4, r4, r2, asr #18
 801a848:	44746553 	ldrbtmi	r6, [r4], #-1363	@ 0xfffffaad
 801a84c:	00617461 	rsbeq	r7, r1, r1, ror #8
 801a850:	74614470 	strbtvc	r4, [r1], #-1136	@ 0xfffffb90
 801a854:	3d212061 	stccc	0, cr2, [r1, #-388]!	@ 0xfffffe7c
 801a858:	6c756e20 	ldclvs	14, cr6, [r5], #-128	@ 0xffffff80
 801a85c:	7274706c 	rsbsvc	r7, r4, #108	@ 0x6c
 801a860:	654c6e00 	strbvs	r6, [ip, #-3584]	@ 0xfffff200
 801a864:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 801a868:	203d2120 	eorscs	r2, sp, r0, lsr #2
 801a86c:	74530030 	ldrbvc	r0, [r3], #-48	@ 0xffffffd0
 801a870:	2d00706f 	stccs	0, cr7, [r0, #-444]	@ 0xfffffe44
 801a874:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 801a878:	73253a73 			@ <UNDEFINED> instruction: 0x73253a73
 801a87c:	0a64253a 	beq	9923d6c <_sidata+0x1904ba4>
 801a880:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801a884:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 801a888:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801a88c:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 801a890:	6e203a69 	vnmulvs.f32	s6, s0, s19
 801a894:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801a898:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 801a89c:	64253d78 	strtvs	r3, [r5], #-3448	@ 0xfffff288
 801a8a0:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801a8a4:	000a7525 	andeq	r7, sl, r5, lsr #10
 801a8a8:	202d2d3c 	eorcs	r2, sp, ip, lsr sp
 801a8ac:	253a7325 	ldrcs	r7, [sl, #-805]!	@ 0xfffffcdb
 801a8b0:	64253a73 	strtvs	r3, [r5], #-2675	@ 0xfffff58d
 801a8b4:	7325000a 			@ <UNDEFINED> instruction: 0x7325000a
 801a8b8:	25202928 	strcs	r2, [r0, #-2344]!	@ 0xfffff6d8
 801a8bc:	6c202c73 	stcvs	12, cr2, [r0], #-460	@ 0xfffffe34
 801a8c0:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801a8c4:	203a6925 	eorscs	r6, sl, r5, lsr #18
 801a8c8:	726f506e 	rsbvc	r5, pc, #110	@ 0x6e
 801a8cc:	646e4974 	strbtvs	r4, [lr], #-2420	@ 0xfffff68c
 801a8d0:	253d7865 	ldrcs	r7, [sp, #-2149]!	@ 0xfffff79b
 801a8d4:	2e000a64 	vmlscs.f32	s0, s0, s9
 801a8d8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 801a8dc:	656e2d62 	strbvs	r2, [lr, #-3426]!	@ 0xfffff29e
 801a8e0:	726f7774 	rsbvc	r7, pc, #116, 14	@ 0x1d00000
 801a8e4:	6e692f6b 	cdpvs	15, 6, cr2, cr9, cr11, {3}
 801a8e8:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 801a8ec:	656e2f65 	strbvs	r2, [lr, #-3941]!	@ 0xfffff09b
 801a8f0:	68642f74 	stmdavs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, sp}^
 801a8f4:	682e7063 	stmdavs	lr!, {r0, r1, r5, r6, ip, sp, lr}
 801a8f8:	63686400 	cmnvs	r8, #0, 8
 801a8fc:	75725f70 	ldrbvc	r5, [r2, #-3952]!	@ 0xfffff090
 801a900:	7325006e 			@ <UNDEFINED> instruction: 0x7325006e
 801a904:	25202928 	strcs	r2, [r0, #-2344]!	@ 0xfffff6d8
 801a908:	6c202c73 	stcvs	12, cr2, [r0], #-460	@ 0xfffffe34
 801a90c:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801a910:	203a6925 	eorscs	r6, sl, r5, lsr #18
 801a914:	63684470 	cmnvs	r8, #112, 8	@ 0x70000000
 801a918:	73654d70 	cmnvc	r5, #112, 26	@ 0x1c00
 801a91c:	65676173 	strbvs	r6, [r7, #-371]!	@ 0xfffffe8d
 801a920:	69783e2d 	ldmdbvs	r8!, {r0, r2, r3, r5, r9, sl, fp, ip, sp}^
 801a924:	75253d64 	strvc	r3, [r5, #-3428]!	@ 0xfffff29c
 801a928:	6864202c 	stmdavs	r4!, {r2, r3, r5, sp}^
 801a92c:	3e2d7063 	cdpcc	0, 2, cr7, cr13, cr3, {3}
 801a930:	3d646978 			@ <UNDEFINED> instruction: 0x3d646978
 801a934:	000a7525 	andeq	r7, sl, r5, lsr #10
 801a938:	6c6f436e 	stclvs	3, cr4, [pc], #-440	@ 801a788 <_etext+0x13c>
 801a93c:	736e6d75 	cmnvc	lr, #7488	@ 0x1d40
 801a940:	203d3e20 	eorscs	r3, sp, r0, lsr #28
 801a944:	65540031 	ldrbvs	r0, [r4, #-49]	@ 0xffffffcf
 801a948:	74537478 	ldrbvc	r7, [r3], #-1144	@ 0xfffffb88
 801a94c:	73757461 	cmnvc	r5, #1627389952	@ 0x61000000
 801a950:	2f2e2e00 	svccs	0x002e2e00
 801a954:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 801a958:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a95c:	2f79616c 	svccs	0x0079616c
 801a960:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801a964:	2f656475 	svccs	0x00656475
 801a968:	2f633269 	svccs	0x00633269
 801a96c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a970:	2e79616c 	rpwcsez	f6, f1, #4.0
 801a974:	526e0068 	rsbpl	r0, lr, #104	@ 0x68
 801a978:	2073776f 	rsbscs	r7, r3, pc, ror #14
 801a97c:	31203d3e 			@ <UNDEFINED> instruction: 0x31203d3e
 801a980:	5f6d2100 	svcpl	0x006d2100
 801a984:	6e497349 	cdpvs	3, 4, cr7, cr9, cr9, {2}
 801a988:	2e007469 	cdpcs	4, 0, cr7, cr0, cr9, {3}
 801a98c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 801a990:	64722d62 	ldrbtvs	r2, [r2], #-3426	@ 0xfffff29e
 801a994:	6e692f6d 	cdpvs	15, 6, cr2, cr9, cr13, {3}
 801a998:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
 801a99c:	64722f65 	ldrbtvs	r2, [r2], #-3941	@ 0xfffff09b
 801a9a0:	7665646d 	strbtvc	r6, [r5], -sp, ror #8
 801a9a4:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
 801a9a8:	65530068 	ldrbvs	r0, [r3, #-104]	@ 0xffffff98
 801a9ac:	63614674 	cmnvs	r1, #116, 12	@ 0x7400000
 801a9b0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801a9b4:	61666544 	cmnvs	r6, r4, asr #10
 801a9b8:	73746c75 	cmnvc	r4, #29952	@ 0x7500
 801a9bc:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 801a9c0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801a9c4:	6f436563 	svcvs	0x00436563
 801a9c8:	6f72746e 	svcvs	0x0072746e
 801a9cc:	72656c6c 	rsbvc	r6, r5, #108, 24	@ 0x6c00
 801a9d0:	2f2e2e00 	svccs	0x002e2e00
 801a9d4:	2d62696c 			@ <UNDEFINED> instruction: 0x2d62696c
 801a9d8:	2f6d6472 	svccs	0x006d6472
 801a9dc:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801a9e0:	2f656475 	svccs	0x00656475
 801a9e4:	646d6472 	strbtvs	r6, [sp], #-1138	@ 0xfffffb8e
 801a9e8:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801a9ec:	6e6f6365 	cdpvs	3, 6, cr6, cr15, cr5, {3}
 801a9f0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	@ 801a828 <_etext+0x1dc>
 801a9f4:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
 801a9f8:	72410068 	subvc	r0, r1, #104	@ 0x68
 801a9fc:	74654e74 	strbtvc	r4, [r5], #-3700	@ 0xfffff18c
 801aa00:	436d6452 	cmnmi	sp, #1375731712	@ 0x52000000
 801aa04:	72746e6f 	rsbsvc	r6, r4, #1776	@ 0x6f0
 801aa08:	656c6c6f 	strbvs	r6, [ip, #-3183]!	@ 0xfffff391
 801aa0c:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
 801aa10:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 801aa14:	7472612d 	ldrbtvc	r6, [r2], #-301	@ 0xfffffed3
 801aa18:	2f74656e 	svccs	0x0074656e
 801aa1c:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801aa20:	2f656475 	svccs	0x00656475
 801aa24:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
 801aa28:	64727465 	ldrbtvs	r7, [r2], #-1125	@ 0xfffffb9b
 801aa2c:	6e6f636d 	cdpvs	3, 6, cr6, cr15, cr13, {3}
 801aa30:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	@ 801a868 <_etext+0x21c>
 801aa34:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
 801aa38:	506e0068 	rsbpl	r0, lr, r8, rrx
 801aa3c:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801aa40:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801aa44:	61203c20 			@ <UNDEFINED> instruction: 0x61203c20
 801aa48:	656e7472 	strbvs	r7, [lr, #-1138]!	@ 0xfffffb8e
 801aa4c:	646f6e74 	strbtvs	r6, [pc], #-3700	@ 801aa54 <_etext+0x408>
 801aa50:	4d3a3a65 	vldmdbmi	sl!, {s6-s106}
 801aa54:	505f5841 	subspl	r5, pc, r1, asr #16
 801aa58:	5354524f 	cmppl	r4, #-268435452	@ 0xf0000004
 801aa5c:	74654700 	strbtvc	r4, [r5], #-1792	@ 0xfffff900
 801aa60:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801aa64:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 801aa68:	6f697463 	svcvs	0x00697463
 801aa6c:	2e2e006e 	cdpcs	0, 2, cr0, cr14, cr14, {3}
 801aa70:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
 801aa74:	7472612d 	ldrbtvc	r6, [r2], #-301	@ 0xfffffed3
 801aa78:	2f74656e 	svccs	0x0074656e
 801aa7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
 801aa80:	2f656475 	svccs	0x00656475
 801aa84:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
 801aa88:	6f6e7465 	svcvs	0x006e7465
 801aa8c:	682e6564 	stmdavs	lr!, {r2, r5, r6, r8, sl, sp, lr}
 801aa90:	74654700 	strbtvc	r4, [r5], #-1792	@ 0xfffff900
 801aa94:	006d6452 	rsbeq	r6, sp, r2, asr r4
 801aa98:	52746547 	rsbspl	r6, r4, #297795584	@ 0x11c00000
 801aa9c:	69446d64 	stmdbvs	r4, {r2, r5, r6, r8, sl, fp, sp, lr}^
 801aaa0:	766f6373 			@ <UNDEFINED> instruction: 0x766f6373
 801aaa4:	00797265 	rsbseq	r7, r9, r5, ror #4
 801aaa8:	74535f6d 	ldrbvc	r5, [r3], #-3949	@ 0xfffff093
 801aaac:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 801aab0:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801aab4:	7369446e 	cmnvc	r9, #1845493760	@ 0x6e000000
 801aab8:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801aabc:	6f507972 	svcvs	0x00507972
 801aac0:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
 801aac4:	20786564 	rsbscs	r6, r8, r4, ror #10
 801aac8:	6e203d3d 	mcrvs	13, 1, r3, cr0, cr13, {1}
 801aacc:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801aad0:	65646e49 	strbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 801aad4:	64520078 	ldrbvs	r0, [r2], #-120	@ 0xffffff88
 801aad8:	7369446d 	cmnvc	r9, #1828716544	@ 0x6d000000
 801aadc:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801aae0:	75527972 	ldrbvc	r7, [r2, #-2418]	@ 0xfffff68e
 801aae4:	7325006e 			@ <UNDEFINED> instruction: 0x7325006e
 801aae8:	25202928 	strcs	r2, [r0, #-2344]!	@ 0xfffff6d8
 801aaec:	6c202c73 	stcvs	12, cr2, [r0], #-460	@ 0xfffffe34
 801aaf0:	20656e69 	rsbcs	r6, r5, r9, ror #28
 801aaf4:	203a6925 	eorscs	r6, sl, r5, lsr #18
 801aaf8:	000a7325 	andeq	r7, sl, r5, lsr #6
 801aafc:	20444f54 	subcs	r4, r4, r4, asr pc
 801ab00:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 801ab04:	705f6d00 	subsvc	r6, pc, r0, lsl #26
 801ab08:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
 801ab0c:	74655374 	strbtvc	r5, [r5], #-884	@ 0xfffffc8c
 801ab10:	74533e2d 	ldrbvc	r3, [r3], #-3629	@ 0xfffff1d3
 801ab14:	532f706f 			@ <UNDEFINED> instruction: 0x532f706f
 801ab18:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
 801ab1c:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801ab20:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 801ab24:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801ab28:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 801ab2c:	52203a69 	eorpl	r3, r0, #430080	@ 0x69000
 801ab30:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 801ab34:	6f637369 	svcvs	0x00637369
 801ab38:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 801ab3c:	636e4920 	cmnvs	lr, #32, 18	@ 0x80000
 801ab40:	656d6572 	strbvs	r6, [sp, #-1394]!	@ 0xfffffa8e
 801ab44:	6c61746e 	cfstrdvs	mvd7, [r1], #-440	@ 0xfffffe48
 801ab48:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801ab4c:	000a7525 	andeq	r7, sl, r5, lsr #10
 801ab50:	72636e49 	rsbvc	r6, r3, #1168	@ 0x490
 801ab54:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801ab58:	006c6174 	rsbeq	r6, ip, r4, ror r1
 801ab5c:	41705f6d 	cmnmi	r0, sp, ror #30
 801ab60:	654e7472 	strbvs	r7, [lr, #-1138]	@ 0xfffffb8e
 801ab64:	6d645274 	sfmvs	f5, 2, [r4, #-464]!	@ 0xfffffe30
 801ab68:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801ab6c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	@ 0xfffffe38
 801ab70:	21207265 			@ <UNDEFINED> instruction: 0x21207265
 801ab74:	756e203d 	strbvc	r2, [lr, #-61]!	@ 0xffffffc3
 801ab78:	74706c6c 	ldrbtvc	r6, [r0], #-3180	@ 0xfffff394
 801ab7c:	44520072 	ldrbmi	r0, [r2], #-114	@ 0xffffff8e
 801ab80:	6944204d 	stmdbvs	r4, {r0, r2, r3, r6, sp}^
 801ab84:	766f6373 			@ <UNDEFINED> instruction: 0x766f6373
 801ab88:	20797265 	rsbscs	r7, r9, r5, ror #4
 801ab8c:	53203e2d 			@ <UNDEFINED> instruction: 0x53203e2d
 801ab90:	54524154 	ldrbpl	r4, [r2], #-340	@ 0xfffffeac
 801ab94:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 801ab98:	73694420 	cmnvc	r9, #32, 8	@ 0x20000000
 801ab9c:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801aba0:	2d207972 			@ <UNDEFINED> instruction: 0x2d207972
 801aba4:	4f44203e 	svcmi	0x0044203e
 801aba8:	2500454e 	strcs	r4, [r0, #-1358]	@ 0xfffffab2
 801abac:	20292873 	eorcs	r2, r9, r3, ror r8
 801abb0:	202c7325 	eorcs	r7, ip, r5, lsr #6
 801abb4:	656e696c 	strbvs	r6, [lr, #-2412]!	@ 0xfffff694
 801abb8:	3a692520 	bcc	9a64040 <_sidata+0x1a44e78>
 801abbc:	444f5420 	strbmi	r5, [pc], #-1056	@ 801abc4 <_etext+0x578>
 801abc0:	6e657320 	cdpvs	3, 6, cr7, cr5, cr0, {1}
 801abc4:	3e2d2074 	mcrcc	0, 1, r2, cr13, cr4, {3}
 801abc8:	0a752520 	beq	9d64050 <_sidata+0x1d44e88>
 801abcc:	3a383100 	bcc	8e26fd4 <_sidata+0xe07e0c>
 801abd0:	353a3133 	ldrcc	r3, [sl, #-307]!	@ 0xfffffecd
 801abd4:	65530039 	ldrbvs	r0, [r3, #-57]	@ 0xffffffc7
 801abd8:	33322070 	teqcc	r2, #112	@ 0x70
 801abdc:	32303220 	eorscc	r3, r0, #32, 4
 801abe0:	72410034 	subvc	r0, r1, #52	@ 0x34
 801abe4:	654e2d74 	strbvs	r2, [lr, #-3444]	@ 0xfffff28c
 801abe8:	20342074 	eorscs	r2, r4, r4, ror r0
 801abec:	2f584d44 	svccs	0x00584d44
 801abf0:	204d4452 	subcs	r4, sp, r2, asr r4
 801abf4:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 801abf8:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	@ 0xfffffe38
 801abfc:	7b207265 	blvc	8837598 <_sidata+0x8183d0>
 801ac00:	6e552032 	mrcvs	0, 2, r2, cr5, cr2, {1}
 801ac04:	72657669 	rsbvc	r7, r5, #110100480	@ 0x6900000
 801ac08:	7d736573 	cfldr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801ac0c:	335b1b00 	cmpcc	fp, #0, 22
 801ac10:	73256d32 			@ <UNDEFINED> instruction: 0x73256d32
 801ac14:	6d305b1b 	fldmdbxvs	r0!, {d5-d17}	@ Deprecated
 801ac18:	7241000a 	subvc	r0, r1, #10
 801ac1c:	654e2d74 	strbvs	r2, [lr, #-3444]	@ 0xfffff28c
 801ac20:	20342074 	eorscs	r2, r4, r4, ror r0
 801ac24:	2e007525 	cfsh32cs	mvfx7, mvfx0, #21
 801ac28:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 801ac2c:	65722d62 	ldrbvs	r2, [r2, #-3426]!	@ 0xfffff29e
 801ac30:	65746f6d 	ldrbvs	r6, [r4, #-3949]!	@ 0xfffff093
 801ac34:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801ac38:	692f6769 	stmdbvs	pc!, {r0, r3, r5, r6, r8, r9, sl, sp, lr}	@ <UNPREDICTABLE>
 801ac3c:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
 801ac40:	682f6564 	stmdavs	pc!, {r2, r5, r6, r8, sl, sp, lr}	@ <UNPREDICTABLE>
 801ac44:	64707474 	ldrbtvs	r7, [r0], #-1140	@ 0xfffffb8c
 801ac48:	7474682f 	ldrbtvc	r6, [r4], #-2095	@ 0xfffff7d1
 801ac4c:	682e6470 	stmdavs	lr!, {r4, r5, r6, sl, sp, lr}
 801ac50:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 801ac54:	73252029 			@ <UNDEFINED> instruction: 0x73252029
 801ac58:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801ac5c:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 801ac60:	6e203a69 	vnmulvs.f32	s6, s0, s19
 801ac64:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 801ac68:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801ac6c:	61486e6f 	cmpvs	r8, pc, ror #28
 801ac70:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
 801ac74:	0a75253d 	beq	9d64170 <_sidata+0x1d44fa8>
 801ac78:	006e4f00 	rsbeq	r4, lr, r0, lsl #30
 801ac7c:	3a6d6472 	bcc	9b73e4c <_sidata+0x1b54c84>
 801ac80:	000a7325 	andeq	r7, sl, r5, lsr #6
 801ac84:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801ac88:	3a79616c 	bcc	9e73240 <_sidata+0x1e54078>
 801ac8c:	000a7325 	andeq	r7, sl, r5, lsr #6
 801ac90:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 801ac94:	203a656d 	eorscs	r6, sl, sp, ror #10
 801ac98:	0a737525 	beq	9cf8134 <_sidata+0x1cd8f6c>
 801ac9c:	72657600 	rsbvc	r7, r5, #0, 12
 801aca0:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801aca4:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 801aca8:	70746674 	rsbsvc	r6, r4, r4, ror r6
 801acac:	0a73253a 	beq	9ce419c <_sidata+0x1cc4fd4>
 801acb0:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 801acb4:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801acb8:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801acbc:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 801acc0:	252c7325 	strcs	r7, [ip, #-805]!	@ 0xfffffcdb
 801acc4:	73252c75 			@ <UNDEFINED> instruction: 0x73252c75
 801acc8:	6425000a 	strtvs	r0, [r5], #-10
 801accc:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801acd0:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801acd4:	73252c64 			@ <UNDEFINED> instruction: 0x73252c64
 801acd8:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	@ 0xffffff50
 801acdc:	000a7525 	andeq	r7, sl, r5, lsr #10
 801ace0:	4f525245 	svcmi	0x00525245
 801ace4:	673f2352 			@ <UNDEFINED> instruction: 0x673f2352
 801ace8:	000a7465 	andeq	r7, sl, r5, ror #8
 801acec:	4f525245 	svcmi	0x00525245
 801acf0:	0a3f2352 	beq	8fe3a40 <_sidata+0xfc4878>
 801acf4:	52524500 	subspl	r4, r2, #0, 10
 801acf8:	2123524f 			@ <UNDEFINED> instruction: 0x2123524f
 801acfc:	6472000a 	ldrbtvs	r0, [r2], #-10
 801ad00:	7400236d 	strvc	r2, [r0], #-877	@ 0xfffffc93
 801ad04:	23707466 	cmncs	r0, #1711276032	@ 0x66000000
 801ad08:	73696400 	cmnvc	r9, #0, 8
 801ad0c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801ad10:	65720023 	ldrbvs	r0, [r2, #-35]!	@ 0xffffffdd
 801ad14:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801ad1c <_etext+0x6d0>
 801ad18:	6c002323 	stcvs	3, cr2, [r0], {35}	@ 0x23
 801ad1c:	23747369 	cmncs	r4, #-1543503871	@ 0xa4000001
 801ad20:	72657600 	rsbvc	r7, r5, #0, 12
 801ad24:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801ad28:	70750023 	rsbsvc	r0, r5, r3, lsr #32
 801ad2c:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801ad30:	65670023 	strbvs	r0, [r7, #-35]!	@ 0xffffffdd
 801ad34:	66002374 			@ <UNDEFINED> instruction: 0x66002374
 801ad38:	6f746361 	svcvs	0x00746361
 801ad3c:	23237972 			@ <UNDEFINED> instruction: 0x23237972
 801ad40:	73252200 			@ <UNDEFINED> instruction: 0x73252200
 801ad44:	64253a22 	strtvs	r3, [r5], #-2594	@ 0xfffff5de
 801ad48:	2523002c 	strcs	r0, [r3, #-44]!	@ 0xffffffd4
 801ad4c:	64253d73 	strtvs	r3, [r5], #-3443	@ 0xfffff28d
 801ad50:	2522000a 	strcs	r0, [r2, #-10]!
 801ad54:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 801ad58:	2c227325 	stccs	3, cr7, [r2], #-148	@ 0xffffff6c
 801ad5c:	73252300 			@ <UNDEFINED> instruction: 0x73252300
 801ad60:	0a73253d 	beq	9ce425c <_sidata+0x1cc5094>
 801ad64:	62655200 	rsbvs	r5, r5, #0, 4
 801ad68:	69746f6f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801ad6c:	2e20676e 	cdpcs	7, 2, cr6, cr0, cr14, {3}
 801ad70:	72002e2e 	andvc	r2, r0, #736	@ 0x2e0
 801ad74:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801ad78:	742e6769 	strtvc	r6, [lr], #-1897	@ 0xfffff897
 801ad7c:	65007478 	strvs	r7, [r0, #-1144]	@ 0xfffffb88
 801ad80:	742e766e 	strtvc	r7, [lr], #-1646	@ 0xfffff992
 801ad84:	6e007478 	mcrvs	4, 0, r7, cr0, cr8, {3}
 801ad88:	6f777465 	svcvs	0x00777465
 801ad8c:	742e6b72 	strtvc	r6, [lr], #-2930	@ 0xfffff48e
 801ad90:	64007478 	strvs	r7, [r0], #-1144	@ 0xfffffb88
 801ad94:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 801ad98:	742e7961 	strtvc	r7, [lr], #-2401	@ 0xfffff69f
 801ad9c:	61007478 	tstvs	r0, r8, ror r4
 801ada0:	656e7472 	strbvs	r7, [lr, #-1138]!	@ 0xfffffb8e
 801ada4:	78742e74 	ldmdavc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801ada8:	61700074 	cmnvs	r0, r4, ror r0
 801adac:	736d6172 	cmnvc	sp, #-2147483620	@ 0x8000001c
 801adb0:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 801adb4:	54465400 	strbpl	r5, [r6], #-1024	@ 0xfffffc00
 801adb8:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801adbc:	46540020 	ldrbmi	r0, [r4], -r0, lsr #32
 801adc0:	4f205054 	svcmi	0x00205054
 801adc4:	7b006666 	blvc	8034764 <_sidata+0x1559c>
 801adc8:	73696c22 	cmnvc	r9, #8704	@ 0x2200
 801adcc:	7b3a2274 	blvc	8ea37a4 <_sidata+0xe845dc>
 801add0:	22706922 	rsbscs	r6, r0, #557056	@ 0x88000
 801add4:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 801add8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801addc:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801ade0:	222c2264 	eorcs	r2, ip, #100, 4	@ 0x40000006
 801ade4:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
 801ade8:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801adec:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 801adf0:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 801adf4:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801adf8:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801adfc:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801ae00:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 801ae04:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801ae08:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801ae0c:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801ae10:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801ae14:	222c2273 	eorcs	r2, ip, #805306375	@ 0x30000007
 801ae18:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801ae1c:	253a2274 	ldrcs	r2, [sl, #-628]!	@ 0xfffffd8c
 801ae20:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	@ 0xfffffe70
 801ae24:	227b007d 	rsbscs	r0, fp, #125	@ 0x7d
 801ae28:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801ae2c:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 801ae30:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801ae34:	2c22732a 	stccs	3, cr7, [r2], #-168	@ 0xffffff58
 801ae38:	616f6222 	cmnvs	pc, r2, lsr #4
 801ae3c:	3a226472 	bcc	88b400c <_sidata+0x894e44>
 801ae40:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801ae44:	7562222c 	strbvc	r2, [r2, #-556]!	@ 0xfffffdd4
 801ae48:	22646c69 	rsbcs	r6, r4, #26880	@ 0x6900
 801ae4c:	64227b3a 	strtvs	r7, [r2], #-2874	@ 0xfffff4c6
 801ae50:	22657461 	rsbcs	r7, r5, #1627389952	@ 0x61000000
 801ae54:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801ae58:	2c22732a 	stccs	3, cr7, [r2], #-168	@ 0xffffff58
 801ae5c:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	@ 0xffffff78
 801ae60:	223a2265 	eorscs	r2, sl, #1342177286	@ 0x50000006
 801ae64:	732a2e25 			@ <UNDEFINED> instruction: 0x732a2e25
 801ae68:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801ae6c:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 801ae70:	30373446 	eorscc	r3, r7, r6, asr #8
 801ae74:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 801ae78:	7b004c41 	blvc	802df84 <_sidata+0xedbc>
 801ae7c:	74707522 	ldrbtvc	r7, [r0], #-1314	@ 0xfffffade
 801ae80:	22656d69 	rsbcs	r6, r5, #6720	@ 0x1a40
 801ae84:	7d75253a 	cfldr64vc	mvdx2, [r5, #-232]!	@ 0xffffff18
 801ae88:	227b000a 	rsbscs	r0, fp, #10
 801ae8c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801ae90:	2279616c 	rsbscs	r6, r9, #108, 2
 801ae94:	7d64253a 	cfstr64vc	mvdx2, [r4, #-232]!	@ 0xffffff18
 801ae98:	66227b00 	strtvs	r7, [r2], -r0, lsl #22
 801ae9c:	73656c69 	cmnvc	r5, #26880	@ 0x6900
 801aea0:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801aea4:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
 801aea8:	742e7465 	strtvc	r7, [lr], #-1125	@ 0xfffffb9b
 801aeac:	3a227478 	bcc	88b8094 <_sidata+0x898ecc>
 801aeb0:	74724122 	ldrbtvc	r4, [r2], #-290	@ 0xfffffede
 801aeb4:	74654e2d 	strbtvc	r4, [r5], #-3629	@ 0xfffff1d3
 801aeb8:	70222c22 	eorvc	r2, r2, r2, lsr #24
 801aebc:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
 801aec0:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 801aec4:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 801aec8:	20584d44 	subscs	r4, r8, r4, asr #26
 801aecc:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
 801aed0:	74696d73 	strbtvc	r6, [r9], #-3443	@ 0xfffff28d
 801aed4:	64222c22 	strtvs	r2, [r2], #-3106	@ 0xfffff3de
 801aed8:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 801aedc:	742e7961 	strtvc	r7, [lr], #-2401	@ 0xfffff69f
 801aee0:	3a227478 	bcc	88b80c8 <_sidata+0x898f00>
 801aee4:	73694422 	cmnvc	r9, #570425344	@ 0x22000000
 801aee8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801aeec:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 801aef0:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 801aef4:	6f777465 	svcvs	0x00777465
 801aef8:	742e6b72 	strtvc	r6, [lr], #-2930	@ 0xfffff48e
 801aefc:	3a227478 	bcc	88b80e4 <_sidata+0x898f1c>
 801af00:	74654e22 	strbtvc	r4, [r5], #-3618	@ 0xfffff1de
 801af04:	6b726f77 	blvs	9cb6ce8 <_sidata+0x1c97b20>
 801af08:	65222c22 	strvs	r2, [r2, #-3106]!	@ 0xfffff3de
 801af0c:	742e766e 	strtvc	r7, [lr], #-1646	@ 0xfffff992
 801af10:	3a227478 	bcc	88b80f8 <_sidata+0x898f30>
 801af14:	766e4522 	strbtvc	r4, [lr], -r2, lsr #10
 801af18:	6e6f7269 	cdpvs	2, 6, cr7, cr15, cr9, {3}
 801af1c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801af20:	72222c22 	eorvc	r2, r2, #8704	@ 0x2200
 801af24:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801af28:	742e6769 	strtvc	r6, [lr], #-1897	@ 0xfffff897
 801af2c:	3a227478 	bcc	88b8114 <_sidata+0x898f4c>
 801af30:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	@ 0xffffff78
 801af34:	2065746f 	rsbcs	r7, r5, pc, ror #8
 801af38:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801af3c:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 801af40:	6f697461 	svcvs	0x00697461
 801af44:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	@ 0xfffffe48
 801af48:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 801af4c:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 801af50:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 801af54:	6a2e6369 	bvs	8bb3d00 <_sidata+0xb94b38>
 801af58:	74730073 	ldrbtvc	r0, [r3], #-115	@ 0xffffff8d
 801af5c:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801af60:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801af64:	646e6900 	strbtvs	r6, [lr], #-2304	@ 0xfffff700
 801af68:	6a2e7865 	bvs	8bb9104 <_sidata+0xb99f3c>
 801af6c:	61640073 	smcvs	16387	@ 0x4003
 801af70:	6a2e6574 	bvs	8bb4548 <_sidata+0xb95380>
 801af74:	65640073 	strbvs	r0, [r4, #-115]!	@ 0xffffff8d
 801af78:	6c756166 	ldfvse	f6, [r5], #-408	@ 0xfffffe68
 801af7c:	736a2e74 	cmnvc	sl, #116, 28	@ 0x740
 801af80:	6d647200 	sfmvs	f7, 2, [r4, #-0]
 801af84:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 801af88:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801af8c:	00736a2e 	rsbseq	r6, r3, lr, lsr #20
 801af90:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801af94:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801af98:	646e6900 	strbtvs	r6, [lr], #-2304	@ 0xfffff700
 801af9c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
 801afa0:	006c6d74 	rsbeq	r6, ip, r4, ror sp
 801afa4:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801afa8:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 801afac:	6d64006c 	stclvs	0, cr0, [r4, #-432]!	@ 0xfffffe50
 801afb0:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 801afb4:	50006c6d 	andpl	r6, r0, sp, ror #24
 801afb8:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801afbc:	25007525 	strcs	r7, [r0, #-1317]	@ 0xfffffadb
 801afc0:	73252073 			@ <UNDEFINED> instruction: 0x73252073
 801afc4:	20752520 	rsbscs	r2, r5, r0, lsr #10
 801afc8:	68007325 	stmdavs	r0, {r0, r2, r5, r8, r9, ip, sp, lr}
 801afcc:	73707474 	cmnvc	r0, #116, 8	@ 0x74000000
 801afd0:	672f2f3a 			@ <UNDEFINED> instruction: 0x672f2f3a
 801afd4:	2d323364 	ldccs	3, cr3, [r2, #-400]!	@ 0xfffffe70
 801afd8:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801afdc:	0067726f 	rsbeq	r7, r7, pc, ror #4
 801afe0:	34302523 	ldrtcc	r2, [r0], #-1315	@ 0xfffffadd
 801afe4:	255b2078 	ldrbcs	r2, [fp, #-120]	@ 0xffffff88
 801afe8:	5d643430 	cfstrdpl	mvd3, [r4, #-192]!	@ 0xffffff40
 801afec:	2a2e2520 	bcs	8ba4474 <_sidata+0xb852ac>
 801aff0:	76412073 			@ <UNDEFINED> instruction: 0x76412073
 801aff4:	6d450056 	stclvs	0, cr0, [r5, #-344]	@ 0xfffffea8
 801aff8:	64646562 	strbtvs	r6, [r4], #-1378	@ 0xfffffa9e
 801affc:	48006465 	stmdami	r0, {r0, r2, r5, r6, sl, sp, lr}
 801b000:	4c005054 	stcmi	0, cr5, [r0], {84}	@ 0x54
 801b004:	44005054 	strmi	r5, [r0], #-84	@ 0xffffffac
 801b008:	41544c45 	cmpmi	r4, r5, asr #24
 801b00c:	4e4f4300 	cdpmi	3, 4, cr4, cr15, cr0, {0}
 801b010:	41005453 	tstmi	r0, r3, asr r4
 801b014:	4e2d7472 	mcrmi	4, 1, r7, cr13, cr2, {3}
 801b018:	73007465 	movwvc	r7, #1125	@ 0x465
 801b01c:	004e4341 	subeq	r4, lr, r1, asr #6
 801b020:	004d4452 	subeq	r4, sp, r2, asr r4
 801b024:	00202020 	eoreq	r2, r0, r0, lsr #32
 801b028:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801b02c:	2074654e 	rsbscs	r6, r4, lr, asr #10
 801b030:	56207525 	strtpl	r7, [r0], -r5, lsr #10
 801b034:	252e7525 	strcs	r7, [lr, #-1317]!	@ 0xfffffadb
 801b038:	20000a75 	andcs	r0, r0, r5, ror sl
 801b03c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 801b040:	6d616e20 	stclvs	14, cr6, [r1, #-128]!	@ 0xffffff80
 801b044:	3a202065 	bcc	88231e0 <_sidata+0x804018>
 801b048:	0a732520 	beq	9ce44d0 <_sidata+0x1cc5308>
 801b04c:	754f2000 	strbvc	r2, [pc, #-0]	@ 801b054 <_etext+0xa08>
 801b050:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
 801b054:	2020000a 	eorcs	r0, r0, sl
 801b058:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801b05c:	322d2520 	eorcc	r2, sp, #32, 10	@ 0x8000000
 801b060:	2d252075 	stccs	0, cr2, [r5, #-468]!	@ 0xfffffe2c
 801b064:	25207534 	strcs	r7, [r0, #-1332]!	@ 0xfffffacc
 801b068:	49200073 	stmdbmi	r0!, {r0, r1, r4, r5, r6}
 801b06c:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 801b070:	2020000a 	eorcs	r0, r0, sl
 801b074:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801b078:	322d2520 	eorcc	r2, sp, #32, 10	@ 0x8000000
 801b07c:	2d252075 	stccs	0, cr2, [r5, #-468]!	@ 0xfffffe2c
 801b080:	20007534 	andcs	r7, r0, r4, lsr r5
 801b084:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 801b088:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b08c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b090:	20006425 	andcs	r6, r0, r5, lsr #8
 801b094:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 801b098:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801b09c:	61207365 			@ <UNDEFINED> instruction: 0x61207365
 801b0a0:	6d206572 	cfstr32vs	mvfx6, [r0, #-456]!	@ 0xfffffe38
 801b0a4:	70707061 	rsbsvc	r7, r0, r1, rrx
 801b0a8:	2b206465 	blcs	8834244 <_sidata+0x81507c>
 801b0ac:	68000a31 	stmdavs	r0, {r0, r4, r5, r9, fp}
 801b0b0:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 801b0b4:	0066666f 	rsbeq	r6, r6, pc, ror #12
 801b0b8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801b0bc:	6b636162 	blvs	98f364c <_sidata+0x18d4484>
 801b0c0:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 801b0c4:	6f007475 	svcvs	0x00007475
 801b0c8:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
 801b0cc:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 801b0d0:	6c626173 	stfvse	f6, [r2], #-460	@ 0xfffffe34
 801b0d4:	746c0065 	strbtvc	r0, [ip], #-101	@ 0xffffff9b
 801b0d8:	74680070 	strbtvc	r0, [r8], #-112	@ 0xffffff90
 801b0dc:	6f630070 	svcvs	0x00630070
 801b0e0:	0074736e 	rsbseq	r7, r4, lr, ror #6
 801b0e4:	746c6564 	strbtvc	r6, [ip], #-1380	@ 0xfffffa9c
 801b0e8:	61730061 	cmnvs	r3, r1, rrx
 801b0ec:	61006e63 	tstvs	r0, r3, ror #28
 801b0f0:	656e7472 	strbvs	r7, [lr, #-1138]!	@ 0xfffffb8e
 801b0f4:	4d440074 	stclmi	0, cr0, [r4, #-464]	@ 0xfffffe30
 801b0f8:	754f2058 	strbvc	r2, [pc, #-88]	@ 801b0a8 <_etext+0xa5c>
 801b0fc:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
 801b100:	584d4400 	stmdapl	sp, {sl, lr}^
 801b104:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 801b108:	41007475 	tstmi	r0, r5, ror r4
 801b10c:	4e2d7472 	mcrmi	4, 1, r7, cr13, cr2, {3}
 801b110:	34207465 	strtcc	r7, [r0], #-1125	@ 0xfffffb9b
 801b114:	73694400 	cmnvc	r9, #0, 8
 801b118:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801b11c:	4f540064 	svcmi	0x00540064
 801b120:	64490044 	strbvs	r0, [r9], #-68	@ 0xffffffbc
 801b124:	4600656c 	strmi	r6, [r0], -ip, ror #10
 801b128:	006c6c75 	rsbeq	r6, ip, r5, ror ip
 801b12c:	6f70227b 	svcvs	0x0070227b
 801b130:	3a227472 	bcc	88b8300 <_sidata+0x899138>
 801b134:	22632522 	rsbcs	r2, r3, #142606336	@ 0x8800000
 801b138:	6964222c 	stmdbvs	r4!, {r2, r3, r5, r9, sp}^
 801b13c:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801b140:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 801b144:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 801b148:	73222c22 			@ <UNDEFINED> instruction: 0x73222c22
 801b14c:	75746174 	ldrbvc	r6, [r4, #-372]!	@ 0xfffffe8c
 801b150:	223a2273 	eorscs	r2, sl, #805306375	@ 0x30000007
 801b154:	7d227325 	stcvc	3, cr7, [r2, #-148]!	@ 0xffffff6c
 801b158:	227b002c 	rsbscs	r0, fp, #44	@ 0x2c
 801b15c:	22646975 	rsbcs	r6, r4, #1916928	@ 0x1d4000
 801b160:	7b005b3a 	blvc	8031e50 <_sidata+0x12c88>
 801b164:	6d647222 	sfmvs	f7, 2, [r4, #-136]!	@ 0xffffff78
 801b168:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b16c:	007d2275 	rsbseq	r2, sp, r5, ror r2
 801b170:	6f70227b 	svcvs	0x0070227b
 801b174:	3a227472 	bcc	88b8344 <_sidata+0x89917c>
 801b178:	22632522 	rsbcs	r2, r3, #142606336	@ 0x8800000
 801b17c:	6f74222c 	svcvs	0x0074222c
 801b180:	5b3a2264 	blpl	8ea3b18 <_sidata+0xe84950>
 801b184:	2e252200 	cdpcs	2, 2, cr2, cr5, cr0, {0}
 801b188:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 801b18c:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 801b190:	2578322e 	ldrbcs	r3, [r8, #-558]!	@ 0xfffffdd2
 801b194:	2578322e 	ldrbcs	r3, [r8, #-558]!	@ 0xfffffdd2
 801b198:	2578322e 	ldrbcs	r3, [r8, #-558]!	@ 0xfffffdd2
 801b19c:	2278322e 	rsbscs	r3, r8, #-536870910	@ 0xe0000002
 801b1a0:	4173002c 	cmnmi	r3, ip, lsr #32
 801b1a4:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 801b1a8:	31332e31 	teqcc	r3, r1, lsr lr
 801b1ac:	64255620 	strtvs	r5, [r5], #-1568	@ 0xfffff9e0
 801b1b0:	0a64252e 	beq	9924670 <_sidata+0x19054a8>
 801b1b4:	49432000 	stmdbmi	r3, {sp}^
 801b1b8:	20202044 	eorcs	r2, r0, r4, asr #32
 801b1bc:	3a202020 	bcc	8823244 <_sidata+0x80407c>
 801b1c0:	0a732520 	beq	9ce4648 <_sidata+0x1cc5480>
 801b1c4:	50202000 	eorpl	r2, r0, r0
 801b1c8:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801b1cc:	75322d25 	ldrvc	r2, [r2, #-3365]!	@ 0xfffff2db
 801b1d0:	342d2520 	strtcc	r2, [sp], #-1312	@ 0xfffffae0
 801b1d4:	73252075 			@ <UNDEFINED> instruction: 0x73252075
 801b1d8:	2020000a 	eorcs	r0, r0, sl
 801b1dc:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
 801b1e0:	322d2520 	eorcc	r2, sp, #32, 10	@ 0x8000000
 801b1e4:	2d252075 	stccs	0, cr2, [r5, #-468]!	@ 0xfffffe2c
 801b1e8:	25207534 	strcs	r7, [r0, #-1332]!	@ 0xfffffacc
 801b1ec:	0a75332d 	beq	9d67ea8 <_sidata+0x1d48ce0>
 801b1f0:	79532000 	ldmdbvc	r3, {sp}^
 801b1f4:	7268636e 	rsbvc	r6, r8, #-1207959551	@ 0xb8000001
 801b1f8:	7a696e6f 	bvc	9a76bbc <_sidata+0x1a579f4>
 801b1fc:	73692065 	cmnvc	r9, #101	@ 0x65
 801b200:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 801b204:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801b208:	52000a64 	andpl	r0, r0, #100, 20	@ 0x64000
 801b20c:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 801b210:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801b214:	6f632065 	svcvs	0x00632065
 801b218:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801b21c:	74617275 	strbtvc	r7, [r1], #-629	@ 0xfffffd8b
 801b220:	006e6f69 	rsbeq	r6, lr, r9, ror #30
 801b224:	6e614d20 	cdpvs	13, 6, cr4, cr1, cr0, {1}
 801b228:	63616675 	cmnvs	r1, #122683392	@ 0x7500000
 801b22c:	65727574 	ldrbvs	r7, [r2, #-1396]!	@ 0xfffffa8c
 801b230:	614e2072 	hvcvs	57858	@ 0xe202
 801b234:	3a20656d 	bcc	88347f0 <_sidata+0x815628>
 801b238:	2a2e2520 	bcs	8ba46c0 <_sidata+0xb854f8>
 801b23c:	20000a73 	andcs	r0, r0, r3, ror sl
 801b240:	756e614d 	strbvc	r6, [lr, #-333]!	@ 0xfffffeb3
 801b244:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 801b248:	72657275 	rsbvc	r7, r5, #1342177287	@ 0x50000007
 801b24c:	20444920 	subcs	r4, r4, r0, lsr #18
 801b250:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b254:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b258:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b25c:	5320000a 			@ <UNDEFINED> instruction: 0x5320000a
 801b260:	61697265 	cmnvs	r9, r5, ror #4
 801b264:	754e206c 	strbvc	r2, [lr, #-108]	@ 0xffffff94
 801b268:	7265626d 	rsbvc	r6, r5, #-805306362	@ 0xd0000006
 801b26c:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b270:	25203a20 	strcs	r3, [r0, #-2592]!	@ 0xfffff5e0
 801b274:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 801b278:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 801b27c:	2558322e 	ldrbcs	r3, [r8, #-558]	@ 0xfffffdd2
 801b280:	0a58322e 	beq	9627b40 <_sidata+0x1608978>
 801b284:	6f522000 	svcvs	0x00522000
 801b288:	6c20746f 	cfstrsvs	mvf7, [r0], #-444	@ 0xfffffe44
 801b28c:	6c656261 	sfmvs	f6, 2, [r5], #-388	@ 0xfffffe7c
 801b290:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b294:	20202020 	eorcs	r2, r0, r0, lsr #32
 801b298:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801b29c:	000a732a 	andeq	r7, sl, sl, lsr #6
 801b2a0:	6f725020 	svcvs	0x00725020
 801b2a4:	74637564 	strbtvc	r7, [r3], #-1380	@ 0xfffffa9c
 801b2a8:	74614320 	strbtvc	r4, [r1], #-800	@ 0xfffffce0
 801b2ac:	726f6765 	rsbvc	r6, pc, #26476544	@ 0x1940000
 801b2b0:	3a202079 	bcc	882349c <_sidata+0x8042d4>
 801b2b4:	322e2520 	eorcc	r2, lr, #32, 10	@ 0x8000000
 801b2b8:	322e2558 	eorcc	r2, lr, #88, 10	@ 0x16000000
 801b2bc:	20000a58 	andcs	r0, r0, r8, asr sl
 801b2c0:	646f7250 	strbtvs	r7, [pc], #-592	@ 801b2c8 <_etext+0xc7c>
 801b2c4:	20746375 	rsbscs	r6, r4, r5, ror r3
 801b2c8:	61746544 	cmnvs	r4, r4, asr #10
 801b2cc:	20206c69 	eorcs	r6, r0, r9, ror #24
 801b2d0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801b2d4:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2d8:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2dc:	2522000a 	strcs	r0, [r2, #-10]!
 801b2e0:	2578322e 	ldrbcs	r3, [r8, #-558]!	@ 0xfffffdd2
 801b2e4:	3a78322e 	bcc	9e27ba4 <_sidata+0x1e089dc>
 801b2e8:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2ec:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2f0:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2f4:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b2f8:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 801b2fc:	322e2578 	eorcc	r2, lr, #120, 10	@ 0x1e000000
 801b300:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 801b304:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 801b308:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 801b30c:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 801b310:	2c227832 	stccs	8, cr7, [r2], #-200	@ 0xffffff38
 801b314:	49555100 	ldmdbmi	r5, {r8, ip, lr}^
 801b318:	49464b43 	stmdbmi	r6, {r0, r1, r6, r8, r9, fp, lr}^
 801b31c:	6920444e 	stmdbvs	r0!, {r1, r2, r3, r6, sl, lr}
 801b320:	6c61766e 	stclvs	6, cr7, [r1], #-440	@ 0xfffffe48
 801b324:	72206469 	eorvc	r6, r0, #1761607680	@ 0x69000000
 801b328:	6f707365 	svcvs	0x00707365
 801b32c:	0065736e 	rsbeq	r7, r5, lr, ror #6
 801b330:	6f70227b 	svcvs	0x0070227b
 801b334:	3a227472 	bcc	88b8504 <_sidata+0x89933c>
 801b338:	22632522 	rsbcs	r2, r3, #142606336	@ 0x8800000
 801b33c:	6964222c 	stmdbvs	r4!, {r2, r3, r5, r9, sp}^
 801b340:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801b344:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 801b348:	7325223a 			@ <UNDEFINED> instruction: 0x7325223a
 801b34c:	002c7d22 	eoreq	r7, ip, r2, lsr #26
 801b350:	6f70227b 	svcvs	0x0070227b
 801b354:	3a227472 	bcc	88b8524 <_sidata+0x89935c>
 801b358:	22632522 	rsbcs	r2, r3, #142606336	@ 0x8800000
 801b35c:	6d64222c 	sfmvs	f2, 2, [r4, #-176]!	@ 0xffffff50
 801b360:	7b3a2278 	blvc	8ea3d48 <_sidata+0xe84b80>
 801b364:	6e657322 	cdpvs	3, 6, cr7, cr5, cr2, {1}
 801b368:	223a2274 	eorscs	r2, sl, #116, 4	@ 0x40000007
 801b36c:	2c227525 	cfstr32cs	mvfx7, [r2], #-148	@ 0xffffff6c
 801b370:	63657222 	cmnvs	r5, #536870914	@ 0x20000002
 801b374:	65766965 	ldrbvs	r6, [r6, #-2405]!	@ 0xfffff69b
 801b378:	223a2264 	eorscs	r2, sl, #100, 4	@ 0x40000006
 801b37c:	7d227525 	cfstr32vc	mvfx7, [r2, #-148]!	@ 0xffffff6c
 801b380:	6472222c 	ldrbtvs	r2, [r2], #-556	@ 0xfffffdd4
 801b384:	7b3a226d 	blvc	8ea3d40 <_sidata+0xe84b78>
 801b388:	6e657322 	cdpvs	3, 6, cr7, cr5, cr2, {1}
 801b38c:	7b3a2274 	blvc	8ea3d64 <_sidata+0xe84b9c>
 801b390:	616c6322 	cmnvs	ip, r2, lsr #6
 801b394:	3a227373 	bcc	88b8168 <_sidata+0x898fa0>
 801b398:	22752522 	rsbscs	r2, r5, #142606336	@ 0x8800000
 801b39c:	6964222c 	stmdbvs	r4!, {r2, r3, r5, r9, sp}^
 801b3a0:	766f6373 			@ <UNDEFINED> instruction: 0x766f6373
 801b3a4:	22797265 	rsbscs	r7, r9, #1342177286	@ 0x50000006
 801b3a8:	7525223a 	strvc	r2, [r5, #-570]!	@ 0xfffffdc6
 801b3ac:	222c7d22 	eorcs	r7, ip, #2176	@ 0x880
 801b3b0:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801b3b4:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801b3b8:	227b3a22 	rsbscs	r3, fp, #139264	@ 0x22000
 801b3bc:	646f6f67 	strbtvs	r6, [pc], #-3943	@ 801b3c4 <_etext+0xd78>
 801b3c0:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b3c4:	222c2275 	eorcs	r2, ip, #1342177287	@ 0x50000007
 801b3c8:	22646162 	rsbcs	r6, r4, #-2147483624	@ 0x80000018
 801b3cc:	7525223a 	strvc	r2, [r5, #-570]!	@ 0xfffffdc6
 801b3d0:	64222c22 	strtvs	r2, [r2], #-3106	@ 0xfffff3de
 801b3d4:	6f637369 	svcvs	0x00637369
 801b3d8:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 801b3dc:	25223a22 	strcs	r3, [r2, #-2594]!	@ 0xfffff5de
 801b3e0:	7d7d2275 	lfmvc	f2, 2, [sp, #-468]!	@ 0xfffffe2c
 801b3e4:	2e25007d 	mcrcs	0, 1, r0, cr5, cr13, {3}
 801b3e8:	002e732a 	eoreq	r7, lr, sl, lsr #6
 801b3ec:	534e446d 	movtpl	r4, #58477	@ 0xe46d
 801b3f0:	2520000a 	strcs	r0, [r0, #-10]!
 801b3f4:	2e252064 	cdpcs	0, 2, cr2, cr5, cr4, {3}
 801b3f8:	000a732a 	andeq	r7, sl, sl, lsr #6
 801b3fc:	203a7069 	eorscs	r7, sl, r9, rrx
 801b400:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b404:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b408:	2064252e 	rsbcs	r2, r4, lr, lsr #10
 801b40c:	25203e2d 	strcs	r3, [r0, #-3629]!	@ 0xfffff1d3
 801b410:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b414:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b418:	000a6425 	andeq	r6, sl, r5, lsr #8
 801b41c:	6d74656e 	cfldr64vs	mvdx6, [r4, #-440]!	@ 0xfffffe48
 801b420:	3a6b7361 	bcc	9af81ac <_sidata+0x1ad8fe4>
 801b424:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801b428:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b42c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b430:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801b434:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b438:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b43c:	0a64252e 	beq	99248fc <_sidata+0x1905734>
 801b440:	3a776700 	bcc	9df5048 <_sidata+0x1dd5e80>
 801b444:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801b448:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b44c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b450:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 801b454:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b458:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b45c:	0a64252e 	beq	992491c <_sidata+0x1905754>
 801b460:	68746500 	ldmdavs	r4!, {r8, sl, sp, lr}^
 801b464:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 801b468:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 801b46c:	3a78322e 	bcc	9e27d2c <_sidata+0x1e08b64>
 801b470:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801b474:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 801b478:	2e253a78 			@ <UNDEFINED> instruction: 0x2e253a78
 801b47c:	253a7832 	ldrcs	r7, [sl, #-2098]!	@ 0xfffff7ce
 801b480:	0a78322e 	beq	9e27d40 <_sidata+0x1e08b78>
 801b484:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 801b488:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801b48c:	5f656369 	svcpl	0x00656369
 801b490:	666f5300 	strbtvs	r5, [pc], -r0, lsl #6
 801b494:	72617774 	rsbvc	r7, r1, #116, 14	@ 0x1d00000
 801b498:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 801b49c:	64417265 	strbvs	r7, [r1], #-613	@ 0xfffffd9b
 801b4a0:	73000a64 	movwvc	r0, #2660	@ 0xa64
 801b4a4:	6e6f6365 	cdpvs	3, 6, cr6, cr15, cr5, {3}
 801b4a8:	79726164 	ldmdbvc	r2!, {r2, r5, r6, r8, sp, lr}^
 801b4ac:	0070695f 	rsbseq	r6, r0, pc, asr r9
 801b4b0:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 801b4b4:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801b4b8:	544e0050 	strbpl	r0, [lr], #-80	@ 0xffffffb0
 801b4bc:	65532050 	ldrbvs	r2, [r3, #-80]	@ 0xffffffb0
 801b4c0:	72657672 	rsbvc	r7, r5, #119537664	@ 0x7200000
 801b4c4:	38504400 	ldmdacc	r0, {sl, lr}^
 801b4c8:	38343833 	ldmdacc	r4!, {r0, r1, r4, r5, fp, ip, sp}
 801b4cc:	74656e00 	strbtvc	r6, [r5], #-3584	@ 0xfffff200
 801b4d0:	68703a3a 	ldmdavs	r0!, {r1, r3, r4, r5, r9, fp, ip, sp}^
 801b4d4:	6f635f79 	svcvs	0x00635f79
 801b4d8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801b4dc:	59485028 	stmdbpl	r8, {r3, r5, ip, lr}^
 801b4e0:	4444415f 	strbmi	r4, [r4], #-351	@ 0xfffffea1
 801b4e4:	53534552 	cmppl	r3, #343932928	@ 0x14800000
 801b4e8:	70550029 	subsvc	r0, r5, r9, lsr #32
 801b4ec:	776f4400 	strbvc	r4, [pc, -r0, lsl #8]!
 801b4f0:	4148006e 	cmpmi	r8, lr, rrx
 801b4f4:	4600464c 	strmi	r4, [r0], -ip, asr #12
 801b4f8:	004c4c55 	subeq	r4, ip, r5, asr ip
 801b4fc:	6b6e694c 	blvs	9bb5a34 <_sidata+0x1b9686c>
 801b500:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	@ 0xffffff80
 801b504:	2c642520 	cfstr64cs	mvdx2, [r4], #-128	@ 0xffffff80
 801b508:	0a732520 	beq	9ce4990 <_sidata+0x1cc57c8>
 801b50c:	69615700 	stmdbvs	r1!, {r8, r9, sl, ip, lr}^
 801b510:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 801b514:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 801b518:	59485020 	stmdbpl	r8, {r5, ip, lr}^
 801b51c:	74756120 	ldrbtvc	r6, [r5], #-288	@ 0xfffffee0
 801b520:	656e206f 	strbvs	r2, [lr, #-111]!	@ 0xffffff91
 801b524:	69746f67 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 801b528:	6f697461 	svcvs	0x00697461
 801b52c:	6f74206e 	svcvs	0x0074206e
 801b530:	6d6f6320 	stclvs	3, cr6, [pc, #-128]!	@ 801b4b8 <_etext+0xe6c>
 801b534:	74656c70 	strbtvc	r6, [r5], #-3184	@ 0xfffff390
 801b538:	64250065 	strtvs	r0, [r5], #-101	@ 0xffffff9b
 801b53c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b540:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b544:	64252f64 	strtvs	r2, [r5], #-3940	@ 0xfffff09c
 801b548:	00632520 	rsbeq	r2, r3, r0, lsr #10
 801b54c:	6d726946 			@ <UNDEFINED> instruction: 0x6d726946
 801b550:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 801b554:	2e255620 	cfmadda32cs	mvax1, mvax5, mvfx5, mvfx0
 801b558:	4700732a 	strmi	r7, [r0, -sl, lsr #6]
 801b55c:	6425203a 	strtvs	r2, [r5], #-58	@ 0xffffffc6
 801b560:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b564:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b568:	3a4e0064 	bcc	939b700 <_sidata+0x137c538>
 801b56c:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801b570:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b574:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b578:	20632500 	rsbcs	r2, r3, r0, lsl #10
 801b57c:	25206425 	strcs	r6, [r0, #-1061]!	@ 0xfffffbdb
 801b580:	73252073 			@ <UNDEFINED> instruction: 0x73252073
 801b584:	20632520 	rsbcs	r2, r3, r0, lsr #10
 801b588:	25007325 	strcs	r7, [r0, #-805]	@ 0xfffffcdb
 801b58c:	25203a63 	strcs	r3, [r0, #-2659]!	@ 0xfffff59d
 801b590:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b594:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b598:	41006425 	tstmi	r0, r5, lsr #8
 801b59c:	25203a50 	strcs	r3, [r0, #-2640]!	@ 0xfffff5b0
 801b5a0:	6f4e0064 	svcvs	0x004e0064
 801b5a4:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 801b5a8:	584d4400 	stmdapl	sp, {sl, lr}^
 801b5ac:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801b5b0:	45006425 	strmi	r6, [r0, #-1061]	@ 0xfffffbdb
 801b5b4:	72656874 	rsbvc	r6, r5, #116, 16	@ 0x740000
 801b5b8:	2074656e 	rsbscs	r6, r4, lr, ror #10
 801b5bc:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
 801b5c0:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 801b5c4:	656e7265 	strbvs	r7, [lr, #-613]!	@ 0xfffffd9b
 801b5c8:	74732074 	ldrbtvc	r2, [r3], #-116	@ 0xffffff8c
 801b5cc:	00747261 	rsbseq	r7, r4, r1, ror #4
 801b5d0:	44005055 	strmi	r5, [r0], #-85	@ 0xffffffab
 801b5d4:	004e574f 	subeq	r5, lr, pc, asr #14
 801b5d8:	65687445 	strbvs	r7, [r8, #-1093]!	@ 0xfffffbbb
 801b5dc:	74656e72 	strbtvc	r6, [r5], #-3698	@ 0xfffff18e
 801b5e0:	6e694c20 	cdpvs	12, 6, cr4, cr9, cr0, {1}
 801b5e4:	7325206b 			@ <UNDEFINED> instruction: 0x7325206b
 801b5e8:	6f745300 	svcvs	0x00745300
 801b5ec:	65446572 	strbvs	r6, [r4, #-1394]	@ 0xfffffa8e
 801b5f0:	65636976 	strbvs	r6, [r3, #-2422]!	@ 0xfffff68a
 801b5f4:	5342203a 	movtpl	r2, #8250	@ 0x203a
 801b5f8:	204d4152 	subcs	r4, sp, r2, asr r1
 801b5fc:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
 801b600:	746f7420 	strbtvc	r7, [pc], #-1056	@ 801b608 <_etext+0xfbc>
 801b604:	25206c61 	strcs	r6, [r0, #-3169]!	@ 0xfffff39f
 801b608:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 801b60c:	20736574 	rsbscs	r6, r3, r4, ror r5
 801b610:	2064255b 	rsbcs	r2, r4, fp, asr r5
 801b614:	0a5d426b 	beq	976bfc8 <_sidata+0x174ce00>
 801b618:	35325700 	ldrcc	r5, [r2, #-1792]!	@ 0xfffff900
 801b61c:	00303850 	eorseq	r3, r0, r0, asr r8
 801b620:	50353257 	eorspl	r3, r5, r7, asr r2
 801b624:	57003631 	smladxpl	r0, r1, r6, r3
 801b628:	33503532 	cmpcc	r0, #209715200	@ 0xc800000
 801b62c:	32570032 	subscc	r0, r7, #50	@ 0x32
 801b630:	30345835 	eorscc	r5, r4, r5, lsr r8
 801b634:	35325700 	ldrcc	r5, [r2, #-1792]!	@ 0xfffff900
 801b638:	00363158 	eorseq	r3, r6, r8, asr r1
 801b63c:	58353257 	ldmdapl	r5!, {r0, r1, r2, r4, r6, r9, ip, sp}
 801b640:	57003233 	smladxpl	r0, r3, r2, r3
 801b644:	36583532 			@ <UNDEFINED> instruction: 0x36583532
 801b648:	32570034 	subscc	r0, r7, #52	@ 0x34
 801b64c:	30385135 	eorscc	r5, r8, r5, lsr r1
 801b650:	572f4c42 	strpl	r4, [pc, -r2, asr #24]!
 801b654:	38513532 	ldmdacc	r1, {r1, r4, r5, r8, sl, ip, sp}^
 801b658:	00564230 	subseq	r4, r6, r0, lsr r2
 801b65c:	51353257 	teqpl	r5, r7, asr r2
 801b660:	4c433631 	mcrrmi	6, 3, r3, r3, cr1
 801b664:	3532572f 	ldrcc	r5, [r2, #-1839]!	@ 0xfffff8d1
 801b668:	44363151 	ldrtmi	r3, [r6], #-337	@ 0xfffffeaf
 801b66c:	32570056 	subscc	r0, r7, #86	@ 0x56
 801b670:	32335135 	eorscc	r5, r3, #1073741837	@ 0x4000000d
 801b674:	572f5642 	strpl	r5, [pc, -r2, asr #12]!
 801b678:	33513532 	cmpcc	r1, #209715200	@ 0xc800000
 801b67c:	5f564632 	svcpl	0x00564632
 801b680:	00495053 	subeq	r5, r9, r3, asr r0
 801b684:	51353257 	teqpl	r5, r7, asr r2
 801b688:	56433436 			@ <UNDEFINED> instruction: 0x56433436
 801b68c:	3532572f 	ldrcc	r5, [r2, #-1839]!	@ 0xfffff8d1
 801b690:	46343651 			@ <UNDEFINED> instruction: 0x46343651
 801b694:	50535f56 	subspl	r5, r3, r6, asr pc
 801b698:	32570049 	subscc	r0, r7, #73	@ 0x49
 801b69c:	32315135 	eorscc	r5, r1, #1073741837	@ 0x4000000d
 801b6a0:	2f564238 	svccs	0x00564238
 801b6a4:	51353257 	teqpl	r5, r7, asr r2
 801b6a8:	46383231 			@ <UNDEFINED> instruction: 0x46383231
 801b6ac:	50535f56 	subspl	r5, r3, r6, asr pc
 801b6b0:	32570049 	subscc	r0, r7, #73	@ 0x49
 801b6b4:	35325135 	ldrcc	r5, [r2, #-309]!	@ 0xfffffecb
 801b6b8:	32570036 	subscc	r0, r7, #54	@ 0x36
 801b6bc:	30385135 	eorscc	r5, r8, r5, lsr r1
 801b6c0:	57005742 	strpl	r5, [r0, -r2, asr #14]
 801b6c4:	31513532 	cmpcc	r1, r2, lsr r5
 801b6c8:	00574436 	subseq	r4, r7, r6, lsr r4
 801b6cc:	51353257 	teqpl	r5, r7, asr r2
 801b6d0:	57443233 	smlaldxpl	r3, r4, r3, r2
 801b6d4:	3532572f 	ldrcc	r5, [r2, #-1839]!	@ 0xfffff8d1
 801b6d8:	46323351 			@ <UNDEFINED> instruction: 0x46323351
 801b6dc:	50515f56 	subspl	r5, r1, r6, asr pc
 801b6e0:	32570049 	subscc	r0, r7, #73	@ 0x49
 801b6e4:	34365135 	ldrtcc	r5, [r6], #-309	@ 0xfffffecb
 801b6e8:	572f5744 	strpl	r5, [pc, -r4, asr #14]!
 801b6ec:	36513532 			@ <UNDEFINED> instruction: 0x36513532
 801b6f0:	5f564634 	svcpl	0x00564634
 801b6f4:	00495051 	subeq	r5, r9, r1, asr r0
 801b6f8:	51353257 	teqpl	r5, r7, asr r2
 801b6fc:	46383231 			@ <UNDEFINED> instruction: 0x46383231
 801b700:	32572f57 	subscc	r2, r7, #348	@ 0x15c
 801b704:	32315135 	eorscc	r5, r1, #1073741837	@ 0x4000000d
 801b708:	5f564638 	svcpl	0x00564638
 801b70c:	00495051 	subeq	r5, r9, r1, asr r0
 801b710:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801b714:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 801b718:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801b71c:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b720:	002c2264 	eoreq	r2, ip, r4, ror #4
 801b724:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	@ 0xffffff74
 801b728:	252e6425 	strcs	r6, [lr, #-1061]!	@ 0xfffffbdb
 801b72c:	64252e64 	strtvs	r2, [r5], #-3684	@ 0xfffff19c
 801b730:	0a64252e 	beq	9924bf0 <_sidata+0x1905a28>
 801b734:	22002b00 	andcs	r2, r0, #0, 22
 801b738:	3a227325 	bcc	88b83d4 <_sidata+0x89920c>
 801b73c:	25732522 	ldrbcs	r2, [r3, #-1314]!	@ 0xfffffade
 801b740:	3a64322e 	bcc	9928000 <_sidata+0x1908e38>
 801b744:	75322e25 	ldrvc	r2, [r2, #-3621]!	@ 0xfffff1db
 801b748:	25002c22 	strcs	r2, [r0, #-3106]	@ 0xfffff3de
 801b74c:	73253d73 			@ <UNDEFINED> instruction: 0x73253d73
 801b750:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801b754:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 801b758:	20230075 	eorcs	r0, r3, r5, ror r0
 801b75c:	23207325 			@ <UNDEFINED> instruction: 0x23207325
 801b760:	6f4e000a 	svcvs	0x004e000a
 801b764:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 801b768:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801b76c:	756f6620 	strbvc	r6, [pc, #-1568]!	@ 801b154 <_etext+0xb08>
 801b770:	5300646e 	movwpl	r6, #1134	@ 0x46e
 801b774:	30313148 	eorscc	r3, r1, r8, asr #2
 801b778:	53530036 	cmppl	r3, #54	@ 0x36
 801b77c:	30333144 	eorscc	r3, r3, r4, asr #2
 801b780:	73250036 			@ <UNDEFINED> instruction: 0x73250036
 801b784:	75252820 	strvc	r2, [r5, #-2080]!	@ 0xfffff7e0
 801b788:	2975252c 	ldmdbcs	r5!, {r2, r3, r5, r8, sl, sp}^
 801b78c:	aa40000a 	bge	901b7bc <_sidata+0xffc5f4>
 801b790:	00eeaaee 	rsceq	sl, lr, lr, ror #21
 801b794:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 801b798:	205d732a 	subscs	r7, sp, sl, lsr #6
 801b79c:	43207325 			@ <UNDEFINED> instruction: 0x43207325
 801b7a0:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801b7a4:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801b7a8:	25206e6f 	strcs	r6, [r0, #-3695]!	@ 0xfffff191
 801b7ac:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 801b7b0:	25207461 	strcs	r7, [r0, #-1121]!	@ 0xfffffb9f
 801b7b4:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 801b7b8:	6164227b 	smcvs	16939	@ 0x422b
 801b7bc:	3a226574 	bcc	88b4d94 <_sidata+0x895bcc>
 801b7c0:	2d642522 	cfstr64cs	mvdx2, [r4, #-136]!	@ 0xffffff78
 801b7c4:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801b7c8:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 801b7cc:	2e255464 	cdpcs	4, 2, cr5, cr5, cr4, {3}
 801b7d0:	253a6432 	ldrcs	r6, [sl, #-1074]!	@ 0xfffffbce
 801b7d4:	3a64322e 	bcc	9928094 <_sidata+0x1908ecc>
 801b7d8:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801b7dc:	0a7d225a 	beq	9f6414c <_sidata+0x1f44f84>
 801b7e0:	64227b00 	strtvs	r7, [r2], #-2816	@ 0xfffff500
 801b7e4:	22657461 	rsbcs	r7, r5, #1627389952	@ 0x61000000
 801b7e8:	6425223a 	strtvs	r2, [r5], #-570	@ 0xfffffdc6
 801b7ec:	322e252d 	eorcc	r2, lr, #188743680	@ 0xb400000
 801b7f0:	2e252d64 	cdpcs	13, 2, cr2, cr5, cr4, {3}
 801b7f4:	25546432 	ldrbcs	r6, [r4, #-1074]	@ 0xfffffbce
 801b7f8:	3a64322e 	bcc	99280b8 <_sidata+0x1908ef0>
 801b7fc:	64322e25 	ldrtvs	r2, [r2], #-3621	@ 0xfffff1db
 801b800:	322e253a 	eorcc	r2, lr, #243269632	@ 0xe800000
 801b804:	25732564 	ldrbcs	r2, [r3, #-1380]!	@ 0xfffffa9c
 801b808:	3a64322e 	bcc	99280c8 <_sidata+0x1908f00>
 801b80c:	75322e25 	ldrvc	r2, [r2, #-3621]!	@ 0xfffff1db
 801b810:	000a7d22 	andeq	r7, sl, r2, lsr #26
 801b814:	31335b1b 	teqcc	r3, fp, lsl fp
 801b818:	5b1b006d 	blpl	86db9d4 <_sidata+0x6bc80c>
 801b81c:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 801b820:	30335b1b 	eorscc	r5, r3, fp, lsl fp
 801b824:	5b1b006d 	blpl	86db9e0 <_sidata+0x6bc818>
 801b828:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801b82c:	33335b1b 	teqcc	r3, #27648	@ 0x6c00
 801b830:	5b1b006d 	blpl	86db9ec <_sidata+0x6bc824>
 801b834:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801b838:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801b83c:	5b1b006d 	blpl	86db9f8 <_sidata+0x6bc830>
 801b840:	006d3134 	rsbeq	r3, sp, r4, lsr r1
 801b844:	37345b1b 			@ <UNDEFINED> instruction: 0x37345b1b
 801b848:	5b1b006d 	blpl	86dba04 <_sidata+0x6bc83c>
 801b84c:	006d3934 	rsbeq	r3, sp, r4, lsr r9
 801b850:	34335b1b 	ldrtcc	r5, [r3], #-2843	@ 0xfffff4e5
 801b854:	7453006d 	ldrbvc	r0, [r3], #-109	@ 0xffffff93
 801b858:	3a6b6361 	bcc	9af45e4 <_sidata+0x1ad541c>
 801b85c:	7a695320 	bvc	9a704e4 <_sidata+0x1a5131c>
 801b860:	75252065 	strvc	r2, [r5, #-101]!	@ 0xffffff9b
 801b864:	202c424b 	eorcs	r4, ip, fp, asr #4
 801b868:	64657355 	strbtvs	r7, [r5], #-853	@ 0xfffffcab
 801b86c:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801b870:	7246202c 	subvc	r2, r6, #44	@ 0x2c
 801b874:	203a6565 	eorscs	r6, sl, r5, ror #10
 801b878:	1b007525 	blne	8038d14 <_sidata+0x19b4c>
 801b87c:	6d39335b 	ldcvs	3, cr3, [r9, #-364]!	@ 0xfffffe94
 801b880:	3025000a 	eorcc	r0, r5, sl
 801b884:	252d7838 	strcs	r7, [sp, #-2104]!	@ 0xfffff7c8
 801b888:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	@ 0xffffff40
 801b88c:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 801b890:	3230252d 	eorscc	r2, r0, #188743680	@ 0xb400000
 801b894:	32302578 	eorscc	r2, r0, #120, 10	@ 0x1e000000
 801b898:	30252d78 	eorcc	r2, r5, r8, ror sp
 801b89c:	30257832 	eorcc	r7, r5, r2, lsr r8
 801b8a0:	30257832 	eorcc	r7, r5, r2, lsr r8
 801b8a4:	30257832 	eorcc	r7, r5, r2, lsr r8
 801b8a8:	30257832 	eorcc	r7, r5, r2, lsr r8
 801b8ac:	30257832 	eorcc	r7, r5, r2, lsr r8
 801b8b0:	2c007832 	stccs	8, cr7, [r0], {50}	@ 0x32
 801b8b4:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 801b8b8:	6f697463 	svcvs	0x00697463
 801b8bc:	00203a6e 	eoreq	r3, r0, lr, ror #20
 801b8c0:	65737361 	ldrbvs	r7, [r3, #-865]!	@ 0xfffffc9f
 801b8c4:	6f697472 	svcvs	0x00697472
 801b8c8:	2522206e 	strcs	r2, [r2, #-110]!	@ 0xffffff92
 801b8cc:	66202273 			@ <UNDEFINED> instruction: 0x66202273
 801b8d0:	656c6961 	strbvs	r6, [ip, #-2401]!	@ 0xfffff69f
 801b8d4:	66203a64 	strtvs	r3, [r0], -r4, ror #20
 801b8d8:	20656c69 	rsbcs	r6, r5, r9, ror #24
 801b8dc:	22732522 	rsbscs	r2, r3, #142606336	@ 0x8800000
 801b8e0:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 801b8e4:	2520656e 	strcs	r6, [r0, #-1390]!	@ 0xfffffa92
 801b8e8:	25732564 	ldrbcs	r2, [r3, #-1380]!	@ 0xfffffa9c
 801b8ec:	6e000a73 			@ <UNDEFINED> instruction: 0x6e000a73
 801b8f0:	20747865 	rsbscs	r7, r4, r5, ror #16
 801b8f4:	6c62203e 	stclvs	0, cr2, [r2], #-248	@ 0xffffff08
 801b8f8:	5f6b636f 	svcpl	0x006b636f
 801b8fc:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 801b900:	 	svcmi	0x00000a74

0801b903 <CSWTCH.135>:
 801b903:	444e4f4f 	strbmi	r4, [lr], #-3919	@ 0xfffff0b1
 801b907:	00005246 	andeq	r5, r0, r6, asr #4
	...

0801b90c <vtable for DmxSend>:
	...
 801b914:	080091c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, pc}
 801b918:	08009281 	stmdaeq	r0, {r0, r7, r9, ip, pc}
 801b91c:	080093f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, ip, pc}
 801b920:	08009361 	stmdaeq	r0, {r0, r5, r6, r8, r9, ip, pc}
 801b924:	080092f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, pc}
 801b928:	0800920d 	stmdaeq	r0, {r0, r2, r3, r9, ip, pc}
 801b92c:	0800947d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, ip, pc}
 801b930:	080091f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, ip, pc}
 801b934:	080091e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, ip, pc}
 801b938:	080091ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, ip, pc}
 801b93c:	080091c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, ip, pc}
 801b940:	080091d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, ip, pc}
 801b944:	08009291 	stmdaeq	r0, {r0, r4, r7, r9, ip, pc}
 801b948:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 801b94c:	08009199 	stmdaeq	r0, {r0, r3, r4, r7, r8, ip, pc}
 801b950:	0800919d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, ip, pc}
 801b954:	080091a3 	stmdaeq	r0, {r0, r1, r5, r7, r8, ip, pc}

0801b958 <SOFTWARE_VERSION>:
 801b958:	00302e31 	eorseq	r2, r0, r1, lsr lr

0801b95c <s_Output>:
 801b95c:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801b968:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801b974:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801b978:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801b97c:	00000000 	andeq	r0, r0, r0
 801b980:	65786950 	ldrbvs	r6, [r8, #-2384]!	@ 0xfffff6b0
 801b984:	0000006c 	andeq	r0, r0, ip, rrx
 801b988:	00000000 	andeq	r0, r0, r0
 801b98c:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801b990:	65646f43 	strbvs	r6, [r4, #-3907]!	@ 0xfffff0bd
 801b994:	00000000 	andeq	r0, r0, r0
 801b998:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 801b9a4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801b9a8:	00006769 	andeq	r6, r0, r9, ror #14
 801b9ac:	00000000 	andeq	r0, r0, r0
 801b9b0:	70657453 	rsbvc	r7, r5, r3, asr r4
 801b9b4:	00726570 	rsbseq	r6, r2, r0, ror r5
 801b9b8:	00000000 	andeq	r0, r0, r0
 801b9bc:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801b9c0:	00007265 	andeq	r7, r0, r5, ror #4
 801b9c4:	00000000 	andeq	r0, r0, r0
 801b9c8:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801b9cc:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801b9d0:	00000000 	andeq	r0, r0, r0
 801b9d4:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801b9d8:	00006c61 	andeq	r6, r0, r1, ror #24
 801b9dc:	00000000 	andeq	r0, r0, r0
 801b9e0:	20424752 	subcs	r4, r2, r2, asr r7
 801b9e4:	656e6150 	strbvs	r6, [lr, #-336]!	@ 0xfffffeb0
 801b9e8:	0000006c 	andeq	r0, r0, ip, rrx
 801b9ec:	004d5750 	subeq	r5, sp, r0, asr r7
	...

0801b9f8 <s_Node>:
 801b9f8:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801b9fc:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801ba08:	41730000 	cmnmi	r3, r0
 801ba0c:	45204e43 	strmi	r4, [r0, #-3651]!	@ 0xfffff1bd
 801ba10:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801ba1c:	2043534f 	subcs	r5, r3, pc, asr #6
 801ba20:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 801ba24:	00007265 	andeq	r7, r0, r5, ror #4
 801ba28:	00000000 	andeq	r0, r0, r0
 801ba2c:	544c0000 	strbpl	r0, [ip], #-0
 801ba30:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801ba40:	2043534f 	subcs	r5, r3, pc, asr #6
 801ba44:	65696c43 	strbvs	r6, [r9, #-3139]!	@ 0xfffff3bd
 801ba48:	0000746e 	andeq	r7, r0, lr, ror #8
 801ba4c:	00000000 	andeq	r0, r0, r0
 801ba50:	44520000 	ldrbmi	r0, [r2], #-0
 801ba54:	74654e4d 	strbtvc	r4, [r5], #-3661	@ 0xfffff1b3
 801ba58:	524c4c20 	subpl	r4, ip, #32, 24	@ 0x2000
 801ba5c:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801ba60:	0000796c 	andeq	r7, r0, ip, ror #18
 801ba64:	776f6853 			@ <UNDEFINED> instruction: 0x776f6853
 801ba68:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
	...
 801ba74:	494d0000 	stmdbmi	sp, {}^	@ <UNPREDICTABLE>
 801ba78:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801ba88:	00504444 	subseq	r4, r0, r4, asr #8
	...
 801ba98:	69500000 	ldmdbvs	r0, {}^	@ <UNPREDICTABLE>
 801ba9c:	506c6578 	rsbpl	r6, ip, r8, ror r5
 801baa0:	65687375 	strbvs	r7, [r8, #-885]!	@ 0xfffffc8b
 801baa4:	00000072 	andeq	r0, r0, r2, ror r0
 801baa8:	00000000 	andeq	r0, r0, r0
 801baac:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
	...
 801babc:	6f420000 	svcvs	0x00420000
 801bac0:	6f6c746f 	svcvs	0x006c746f
 801bac4:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801bac8:	54465420 	strbpl	r5, [r6], #-1056	@ 0xfffffbe0
 801bacc:	00000050 	andeq	r0, r0, r0, asr r0
 801bad0:	204d4452 	subcs	r4, sp, r2, asr r4
 801bad4:	70736552 	rsbsvc	r6, r3, r2, asr r5
 801bad8:	65646e6f 	strbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801badc:	00000072 	andeq	r0, r0, r2, ror r0
 801bae0:	00000000 	andeq	r0, r0, r0

0801bae4 <RemoteConfig::s_SET>:
 801bae4:	08009eed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, pc}
 801bae8:	00000000 	andeq	r0, r0, r0
 801baec:	0801acfe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 801baf0:	00010004 	andeq	r0, r1, r4
 801baf4:	0800a165 	stmdaeq	r0, {r0, r2, r5, r6, r8, sp, pc}
 801baf8:	00000000 	andeq	r0, r0, r0
 801bafc:	0801ad03 	stmdaeq	r1, {r0, r1, r8, sl, fp, sp, pc}
 801bb00:	00010005 	andeq	r0, r1, r5
 801bb04:	0800a13d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sp, pc}
 801bb08:	00000000 	andeq	r0, r0, r0
 801bb0c:	0801ad09 	stmdaeq	r1, {r0, r3, r8, sl, fp, sp, pc}
 801bb10:	00010008 	andeq	r0, r1, r8

0801bb14 <RemoteConfig::s_GET>:
 801bb14:	0800a99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, sp, pc}
 801bb18:	00000000 	andeq	r0, r0, r0
 801bb1c:	0801ad12 	stmdaeq	r1, {r1, r4, r8, sl, fp, sp, pc}
 801bb20:	00000008 	andeq	r0, r0, r8
 801bb24:	0800a08d 	stmdaeq	r0, {r0, r2, r3, r7, sp, pc}
 801bb28:	00000000 	andeq	r0, r0, r0
 801bb2c:	0801ad1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, fp, sp, pc}
 801bb30:	00000005 	andeq	r0, r0, r5
 801bb34:	0800a009 	stmdaeq	r0, {r0, r3, sp, pc}
 801bb38:	00000000 	andeq	r0, r0, r0
 801bb3c:	0801ad21 	stmdaeq	r1, {r0, r5, r8, sl, fp, sp, pc}
 801bb40:	00000008 	andeq	r0, r0, r8
 801bb44:	08009f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 801bb48:	00000000 	andeq	r0, r0, r0
 801bb4c:	0801ad09 	stmdaeq	r1, {r0, r3, r8, sl, fp, sp, pc}
 801bb50:	00000008 	andeq	r0, r0, r8
 801bb54:	08009fc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, pc}
 801bb58:	00000000 	andeq	r0, r0, r0
 801bb5c:	0801ad2a 	stmdaeq	r1, {r1, r3, r5, r8, sl, fp, sp, pc}
 801bb60:	00000007 	andeq	r0, r0, r7
 801bb64:	08009f2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, fp, ip, pc}
 801bb68:	00000000 	andeq	r0, r0, r0
 801bb6c:	0801acfe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 801bb70:	00000004 	andeq	r0, r0, r4
 801bb74:	0800a381 	stmdaeq	r0, {r0, r7, r8, r9, sp, pc}
 801bb78:	00000000 	andeq	r0, r0, r0
 801bb7c:	0801ad32 	stmdaeq	r1, {r1, r4, r5, r8, sl, fp, sp, pc}
 801bb80:	00010004 	andeq	r0, r1, r4
 801bb84:	0800a041 	stmdaeq	r0, {r0, r6, sp, pc}
 801bb88:	00000000 	andeq	r0, r0, r0
 801bb8c:	0801ad03 	stmdaeq	r1, {r0, r1, r8, sl, fp, sp, pc}
 801bb90:	00000005 	andeq	r0, r0, r5
 801bb94:	0800a6f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, sp, pc}
 801bb98:	00000000 	andeq	r0, r0, r0
 801bb9c:	0801ad37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, sl, fp, sp, pc}
 801bba0:	00000009 	andeq	r0, r0, r9

0801bba4 <paramMasks>:
 801bba4:	0801c0e2 	stmdaeq	r1, {r1, r5, r6, r7, lr, pc}
 801bba8:	00000001 	andeq	r0, r0, r1
 801bbac:	0801c0d4 	stmdaeq	r1, {r2, r4, r6, r7, lr, pc}
 801bbb0:	00000002 	andeq	r0, r0, r2
 801bbb4:	0801c0c6 	stmdaeq	r1, {r1, r2, r6, r7, lr, pc}
 801bbb8:	00000004 	andeq	r0, r0, r4
 801bbbc:	0801c0b8 	stmdaeq	r1, {r3, r4, r5, r7, lr, pc}
 801bbc0:	00000008 	andeq	r0, r0, r8
 801bbc4:	0801c0a9 	stmdaeq	r1, {r0, r3, r5, r7, lr, pc}
 801bbc8:	00000020 	andeq	r0, r0, r0, lsr #32

0801bbcc <RemoteConfig::s_TXT>:
 801bbcc:	0800a389 	stmdaeq	r0, {r0, r3, r7, r8, r9, sp, pc}
 801bbd0:	00000000 	andeq	r0, r0, r0
 801bbd4:	0800a629 	stmdaeq	r0, {r0, r3, r5, r9, sl, sp, pc}
 801bbd8:	00000000 	andeq	r0, r0, r0
 801bbdc:	0801ad73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sl, fp, sp, pc}
 801bbe0:	0000000b 	andeq	r0, r0, fp
 801bbe4:	0800a3b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sp, pc}
 801bbe8:	00000000 	andeq	r0, r0, r0
 801bbec:	0800a651 	stmdaeq	r0, {r0, r4, r6, r9, sl, sp, pc}
 801bbf0:	00000000 	andeq	r0, r0, r0
 801bbf4:	0801ad7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, sl, fp, sp, pc}
 801bbf8:	00000007 	andeq	r0, r0, r7
 801bbfc:	0800a3d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp, pc}
 801bc00:	00000000 	andeq	r0, r0, r0
 801bc04:	0800a671 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, sp, pc}
 801bc08:	00000000 	andeq	r0, r0, r0
 801bc0c:	0801ad87 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, fp, sp, pc}
 801bc10:	0000000b 	andeq	r0, r0, fp
 801bc14:	0800a44d 	stmdaeq	r0, {r0, r2, r3, r6, sl, sp, pc}
 801bc18:	00000000 	andeq	r0, r0, r0
 801bc1c:	0800a6d1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, sp, pc}
 801bc20:	00000000 	andeq	r0, r0, r0
 801bc24:	0801ad93 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, fp, sp, pc}
 801bc28:	0000000b 	andeq	r0, r0, fp
 801bc2c:	0800a3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sp, pc}
 801bc30:	00000000 	andeq	r0, r0, r0
 801bc34:	0800a691 	stmdaeq	r0, {r0, r4, r7, r9, sl, sp, pc}
 801bc38:	00000000 	andeq	r0, r0, r0
 801bc3c:	0801ad9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, fp, sp, pc}
 801bc40:	0000000a 	andeq	r0, r0, sl
 801bc44:	0800a425 	stmdaeq	r0, {r0, r2, r5, sl, sp, pc}
 801bc48:	00000000 	andeq	r0, r0, r0
 801bc4c:	0800a6b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, sp, pc}
 801bc50:	00000000 	andeq	r0, r0, r0
 801bc54:	0801adaa 	stmdaeq	r1, {r1, r3, r5, r7, r8, sl, fp, sp, pc}
 801bc58:	0000000a 	andeq	r0, r0, sl
 801bc5c:	00000020 	andeq	r0, r0, r0, lsr #32
 801bc60:	00544547 	subseq	r4, r4, r7, asr #10
 801bc64:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 801bc68:	00000000 	andeq	r0, r0, r0
 801bc6c:	0000002f 	andeq	r0, r0, pc, lsr #32
 801bc70:	50545448 	subspl	r5, r4, r8, asr #8
 801bc74:	00000000 	andeq	r0, r0, r0
 801bc78:	00000a20 	andeq	r0, r0, r0, lsr #20
 801bc7c:	00312e31 	eorseq	r2, r1, r1, lsr lr
 801bc80:	0000003a 	andeq	r0, r0, sl, lsr r0
 801bc84:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801bc88:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801bc8c:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 801bc90:	00000000 	andeq	r0, r0, r0
 801bc94:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801bc98:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801bc9c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801bca0:	00006874 	andeq	r6, r0, r4, ror r8
 801bca4:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801bca8:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801bcac:	2f6e6f69 	svccs	0x006e6f69
 801bcb0:	00000000 	andeq	r0, r0, r0
 801bcb4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801bcb8:	00000000 	andeq	r0, r0, r0
 801bcbc:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 801bcc0:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 801bcc4:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
 801bcc8:	00000000 	andeq	r0, r0, r0
 801bccc:	00003b20 	andeq	r3, r0, r0, lsr #22
 801bcd0:	7478742e 	ldrbtvc	r7, [r8], #-1070	@ 0xfffffbd2
 801bcd4:	00000000 	andeq	r0, r0, r0
 801bcd8:	6f736a2f 	svcvs	0x00736a2f
 801bcdc:	00002f6e 	andeq	r2, r0, lr, ror #30
 801bce0:	2f786d64 	svccs	0x00786d64
 801bce4:	00000000 	andeq	r0, r0, r0
 801bce8:	2f6d6472 	svccs	0x006d6472
 801bcec:	00000000 	andeq	r0, r0, r0
 801bcf0:	65646e69 	strbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801bcf4:	74682e78 	strbtvc	r2, [r8], #-3704	@ 0xfffff188
 801bcf8:	00006c6d 	andeq	r6, r0, sp, ror #24
 801bcfc:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
 801bd00:	00000000 	andeq	r0, r0, r0
 801bd04:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801bd08:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801bd0c:	00000000 	andeq	r0, r0, r0
 801bd10:	6d64722f 	sfmvs	f7, 2, [r4, #-188]!	@ 0xffffff44
 801bd14:	00000000 	andeq	r0, r0, r0
 801bd18:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801bd1c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801bd20:	00000000 	andeq	r0, r0, r0
 801bd24:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	@ 0xffffff44
 801bd28:	00000065 	andeq	r0, r0, r5, rrx
 801bd2c:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801bd30:	6d74682e 	ldclvs	8, cr6, [r4, #-184]!	@ 0xffffff48
 801bd34:	0000006c 	andeq	r0, r0, ip, rrx
 801bd38:	6f736a2f 	svcvs	0x00736a2f
 801bd3c:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 801bd40:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801bd44:	00000000 	andeq	r0, r0, r0
 801bd48:	6f736a2f 	svcvs	0x00736a2f
 801bd4c:	0000006e 	andeq	r0, r0, lr, rrx
 801bd50:	6f626572 	svcvs	0x00626572
 801bd54:	0000746f 	andeq	r7, r0, pc, ror #8
 801bd58:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801bd5c:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801bd60:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 801bd64:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 801bd68:	00000000 	andeq	r0, r0, r0
 801bd6c:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801bd70:	0000003d 	andeq	r0, r0, sp, lsr r0
 801bd74:	006d6472 	rsbeq	r6, sp, r2, ror r4
 801bd78:	4f44213c 	svcmi	0x0044213c
 801bd7c:	50595443 	subspl	r5, r9, r3, asr #8
 801bd80:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801bd84:	0a3e6c6d 	beq	8fb6f40 <_sidata+0xf97d78>
 801bd88:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801bd8c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801bd90:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801bd94:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801bd98:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801bd9c:	6d627553 	cfstr64vs	mvdx7, [r2, #-332]!	@ 0xfffffeb4
 801bda0:	2f3c7469 	svccs	0x003c7469
 801bda4:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801bda8:	2f3c3e65 	svccs	0x003c3e65
 801bdac:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801bdb0:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801bdb4:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801bdb8:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 801bdbc:	2f3c4b4f 	svccs	0x003c4b4f
 801bdc0:	3c3e3168 	ldfccs	f3, [lr], #-416	@ 0xfffffe60
 801bdc4:	646f622f 	strbtvs	r6, [pc], #-559	@ 801bdcc <RemoteConfig::s_TXT+0x200>
 801bdc8:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801bdcc:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 801bdd0:	000a3e6c 	andeq	r3, sl, ip, ror #28
 801bdd4:	20646142 	rsbcs	r6, r4, r2, asr #2
 801bdd8:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 801bddc:	00747365 	rsbseq	r7, r4, r5, ror #6
 801bde0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801bde4:	206e776f 	rsbcs	r7, lr, pc, ror #14
 801bde8:	6f727245 	svcvs	0x00727245
 801bdec:	00000072 	andeq	r0, r0, r2, ror r0
 801bdf0:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 801bdf4:	20747365 	rsbscs	r7, r4, r5, ror #6
 801bdf8:	69746e45 	ldmdbvs	r4!, {r0, r2, r6, r9, sl, fp, sp, lr}^
 801bdfc:	54207974 	strtpl	r7, [r0], #-2420	@ 0xfffff68c
 801be00:	4c206f6f 	stcmi	15, cr6, [r0], #-444	@ 0xfffffe44
 801be04:	65677261 	strbvs	r7, [r7, #-609]!	@ 0xfffffd9f
 801be08:	00000000 	andeq	r0, r0, r0
 801be0c:	75716552 	ldrbvc	r6, [r1, #-1362]!	@ 0xfffffaae
 801be10:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	@ 0xfffffe6c
 801be14:	20495255 	subcs	r5, r9, r5, asr r2
 801be18:	206f6f54 	rsbcs	r6, pc, r4, asr pc	@ <UNPREDICTABLE>
 801be1c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 801be20:	00000000 	andeq	r0, r0, r0
 801be24:	65746e49 	ldrbvs	r6, [r4, #-3657]!	@ 0xfffff1b7
 801be28:	6c616e72 	stclvs	14, cr6, [r1], #-456	@ 0xfffffe38
 801be2c:	72655320 	rsbvc	r5, r5, #32, 6	@ 0x80000000
 801be30:	20726576 	rsbscs	r6, r2, r6, ror r5
 801be34:	6f727245 	svcvs	0x00727245
 801be38:	00000072 	andeq	r0, r0, r2, ror r0
 801be3c:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
 801be40:	4e20646f 	cdpmi	4, 2, cr6, cr0, cr15, {3}
 801be44:	4920746f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
 801be48:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
 801be4c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801be50:	00006465 	andeq	r6, r0, r5, ror #8
 801be54:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 801be58:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801be5c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801be60:	70707553 	rsbsvc	r7, r0, r3, asr r5
 801be64:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
 801be68:	00000064 	andeq	r0, r0, r4, rrx
 801be6c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801be70:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 801be74:	00000064 	andeq	r0, r0, r4, rrx
 801be78:	00004b4f 	andeq	r4, r0, pc, asr #22
 801be7c:	4f44213c 	svcmi	0x0044213c
 801be80:	50595443 	subspl	r5, r9, r3, asr #8
 801be84:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801be88:	0a3e6c6d 	beq	8fb7044 <_sidata+0xf97e7c>
 801be8c:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801be90:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801be94:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801be98:	69743c3e 	ldmdbvs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801be9c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801bea0:	25207525 	strcs	r7, [r0, #-1317]!	@ 0xfffffadb
 801bea4:	742f3c73 	strtvc	r3, [pc], #-3187	@ 801beac <RemoteConfig::s_TXT+0x2e0>
 801bea8:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801beac:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 801beb0:	3e646165 	powccsz	f6, f4, f5
 801beb4:	6f623c0a 	svcvs	0x00623c0a
 801beb8:	3c3e7964 			@ <UNDEFINED> instruction: 0x3c3e7964
 801bebc:	253e3168 	ldrcs	r3, [lr, #-360]!	@ 0xfffffe98
 801bec0:	682f3c73 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 801bec4:	2f3c3e31 	svccs	0x003c3e31
 801bec8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801becc:	2f3c0a3e 	svccs	0x003c0a3e
 801bed0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	@ 0xfffffe60
 801bed4:	00000a3e 	andeq	r0, r0, lr, lsr sl
 801bed8:	50545448 	subspl	r5, r4, r8, asr #8
 801bedc:	312e312f 			@ <UNDEFINED> instruction: 0x312e312f
 801bee0:	20752520 	rsbscs	r2, r5, r0, lsr #10
 801bee4:	0a0d7325 	beq	8378b80 <_sidata+0x3599b8>
 801bee8:	76726553 			@ <UNDEFINED> instruction: 0x76726553
 801beec:	203a7265 	eorscs	r7, sl, r5, ror #4
 801bef0:	0a0d7325 	beq	8378b8c <_sidata+0x3599c4>
 801bef4:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801bef8:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801befc:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 801bf00:	7325203a 			@ <UNDEFINED> instruction: 0x7325203a
 801bf04:	6f430a0d 	svcvs	0x00430a0d
 801bf08:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801bf0c:	654c2d74 	strbvs	r2, [ip, #-3444]	@ 0xfffff28c
 801bf10:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 801bf14:	7525203a 	strvc	r2, [r5, #-58]!	@ 0xffffffc6
 801bf18:	6f430a0d 	svcvs	0x00430a0d
 801bf1c:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
 801bf20:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801bf24:	6c63203a 	stclvs	0, cr2, [r3], #-232	@ 0xffffff18
 801bf28:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	@ 0xfffffe44
 801bf2c:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 801bf30:	4e524157 	mrcmi	1, 2, r4, cr2, cr7, {2}
 801bf34:	2e37203a 	mrccs	0, 1, r2, cr7, cr10, {1}
 801bf38:	726f4d20 	rsbvc	r4, pc, #32, 26	@ 0x800
 801bf3c:	68742065 	ldmdavs	r4!, {r0, r2, r5, r6, sp}^
 801bf40:	74206e61 	strtvc	r6, [r0], #-3681	@ 0xfffff19f
 801bf44:	73206f77 			@ <UNDEFINED> instruction: 0x73206f77
 801bf48:	6372756f 	cmnvs	r2, #465567744	@ 0x1bc00000
 801bf4c:	202c7365 	eorcs	r7, ip, r5, ror #6
 801bf50:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 801bf54:	69647261 	stmdbvs	r4!, {r0, r5, r6, r9, ip, sp, lr}^
 801bf58:	6420676e 	strtvs	r6, [r0], #-1902	@ 0xfffff892
 801bf5c:	00617461 	rsbeq	r7, r1, r1, ror #8
 801bf60:	4e524157 	mrcmi	1, 2, r4, cr2, cr7, {2}
 801bf64:	2e38203a 	mrccs	0, 1, r2, cr8, cr10, {1}
 801bf68:	756f5320 	strbvc	r5, [pc, #-800]!	@ 801bc50 <RemoteConfig::s_TXT+0x84>
 801bf6c:	20656372 	rsbcs	r6, r5, r2, ror r3
 801bf70:	6374616d 	cmnvs	r4, #1073741851	@ 0x4000001b
 801bf74:	20736568 	rsbscs	r6, r3, r8, ror #10
 801bf78:	68746f62 	ldmdavs	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801bf7c:	2c706920 			@ <UNDEFINED> instruction: 0x2c706920
 801bf80:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 801bf84:	64726163 	ldrbtvs	r6, [r2], #-355	@ 0xfffffe9d
 801bf88:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801bf8c:	61746164 	cmnvs	r4, r4, ror #2
 801bf90:	00000000 	andeq	r0, r0, r0
 801bf94:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 801bf98:	73252073 			@ <UNDEFINED> instruction: 0x73252073
 801bf9c:	00000000 	andeq	r0, r0, r0
 801bfa0:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 801bfa4:	30373446 	eorscc	r3, r7, r6, asr #8
 801bfa8:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 801bfac:	00004c41 	andeq	r4, r0, r1, asr #24
 801bfb0:	74666f53 	strbtvc	r6, [r6], #-3923	@ 0xfffff0ad
 801bfb4:	65726177 	ldrbvs	r6, [r2, #-375]!	@ 0xfffffe89
 801bfb8:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801bfbc:	64644172 	strbtvs	r4, [r4], #-370	@ 0xfffffe8e
 801bfc0:	0000000a 	andeq	r0, r0, sl
 801bfc4:	72746552 	rsbsvc	r6, r4, #343932928	@ 0x14800000
 801bfc8:	726f2079 	rsbvc	r2, pc, #121	@ 0x79
 801bfcc:	65757120 	ldrbvs	r7, [r5, #-288]!	@ 0xfffffee0
 801bfd0:	74206575 	strtvc	r6, [r0], #-1397	@ 0xfffffa8b
 801bfd4:	64206568 	strtvs	r6, [r0], #-1384	@ 0xfffffa98
 801bfd8:	20617461 	rsbcs	r7, r1, r1, ror #8
 801bfdc:	20726f66 	rsbscs	r6, r2, r6, ror #30
 801bfe0:	6574616c 	ldrbvs	r6, [r4, #-364]!	@ 0xfffffe94
 801bfe4:	72742072 	rsbsvc	r2, r4, #114	@ 0x72
 801bfe8:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	@ 0xfffffe7c
 801bfec:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 801bff0:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801bff4:	69626e75 	stmdbvs	r2!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 801bff8:	000a646e 	andeq	r6, sl, lr, ror #8

0801bffc <s_contentType>:
 801bffc:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 801c000:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 801c004:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801c01c:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 801c020:	7373632f 	cmnvc	r3, #-1140850688	@ 0xbc000000
	...
 801c03c:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 801c040:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801c044:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 801c048:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 801c05c:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801c060:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801c064:	2f6e6f69 	svccs	0x006e6f69
 801c068:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...
 801c07c:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801c080:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801c084:	2f6e6f69 	svccs	0x006e6f69
 801c088:	6574636f 	ldrbvs	r6, [r4, #-879]!	@ 0xfffffc91
 801c08c:	74732d74 	ldrbtvc	r2, [r3], #-3444	@ 0xfffff28c
 801c090:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	@ 0xfffffe38
	...

0801c09c <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801c09c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801c0a0:	5f79616c 	svcpl	0x0079616c
 801c0a4:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801c0a9 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801c0a9:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801c0ad:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801c0b1:	6f746361 	svcvs	0x00746361
 801c0b5:	 	strvs	r7, [r0, #-2418]	@ 0xfffff68e

0801c0b8 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 801c0b8:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801c0bc:	755f656c 	ldrbvc	r6, [pc, #-1388]	@ 801bb58 <RemoteConfig::s_GET+0x44>
 801c0c0:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	@ 0xfffffe40
 801c0c4:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801c0c6 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801c0c6:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801c0ca:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 801c0ce:	6f6f6265 	svcvs	0x006f6265
 801c0d2:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

0801c0d4 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801c0d4:	61736964 	cmnvs	r3, r4, ror #18
 801c0d8:	5f656c62 	svcpl	0x00656c62
 801c0dc:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 801c0e0:	 	stmdbvs	r4!, {r0, r2, r5, r6}^

0801c0e2 <RemoteConfigConst::PARAMS_DISABLE>:
 801c0e2:	61736964 	cmnvs	r3, r4, ror #18
 801c0e6:	00656c62 	rsbeq	r6, r5, r2, ror #24

0801c0ea <RemoteConfigConst::PARAMS_FILE_NAME>:
 801c0ea:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 801c0ee:	2e676966 	vnmulcs.f16	s13, s14, s13	@ <UNPREDICTABLE>
 801c0f2:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801c0f8 <HttpContent>:
 801c0f8:	0801af49 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, fp, sp, pc}
 801c0fc:	0801e146 	stmdaeq	r1, {r1, r2, r6, r8, sp, lr, pc}
 801c100:	00000551 	andeq	r0, r0, r1, asr r5
 801c104:	00000002 	andeq	r0, r0, r2
 801c108:	0801af50 	stmdaeq	r1, {r4, r6, r8, r9, sl, fp, sp, pc}
 801c10c:	0801dc82 	stmdaeq	r1, {r1, r7, sl, fp, ip, lr, pc}
 801c110:	000004c3 	andeq	r0, r0, r3, asr #9
 801c114:	00000002 	andeq	r0, r0, r2
 801c118:	0801af5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, sl, fp, sp, pc}
 801c11c:	0801dae8 	stmdaeq	r1, {r3, r5, r6, r7, r9, fp, ip, lr, pc}
 801c120:	00000199 	muleq	r0, r9, r1
 801c124:	00000001 	andeq	r0, r0, r1
 801c128:	0801af65 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, fp, sp, pc}
 801c12c:	0801d673 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, ip, lr, pc}
 801c130:	00000474 	andeq	r0, r0, r4, ror r4
 801c134:	00000002 	andeq	r0, r0, r2
 801c138:	0801af6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, pc}
 801c13c:	0801d3a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, ip, lr, pc}
 801c140:	000002cc 	andeq	r0, r0, ip, asr #5
 801c144:	00000002 	andeq	r0, r0, r2
 801c148:	0801af76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, sl, fp, sp, pc}
 801c14c:	0801d2a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, ip, lr, pc}
 801c150:	000000fe 	strdeq	r0, [r0], -lr
 801c154:	00000002 	andeq	r0, r0, r2
 801c158:	0801af81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, sp, pc}
 801c15c:	0801cec7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, fp, lr, pc}
 801c160:	000003df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 801c164:	00000002 	andeq	r0, r0, r2
 801c168:	0801af88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, sp, pc}
 801c16c:	0801cd40 	stmdaeq	r1, {r6, r8, sl, fp, lr, pc}
 801c170:	00000186 	andeq	r0, r0, r6, lsl #3
 801c174:	00000002 	andeq	r0, r0, r2
 801c178:	0801af90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, sp, pc}
 801c17c:	0801c8c9 	stmdaeq	r1, {r0, r3, r6, r7, fp, lr, pc}
 801c180:	00000476 	andeq	r0, r0, r6, ror r4
 801c184:	00000000 	andeq	r0, r0, r0
 801c188:	0801af99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, sp, pc}
 801c18c:	0801c62b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, lr, pc}
 801c190:	0000029d 	muleq	r0, sp, r2
 801c194:	00000000 	andeq	r0, r0, r0
 801c198:	0801afa4 	stmdaeq	r1, {r2, r5, r7, r8, r9, sl, fp, sp, pc}
 801c19c:	0801c3d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, lr, pc}
 801c1a0:	00000257 	andeq	r0, r0, r7, asr r2
 801c1a4:	00000000 	andeq	r0, r0, r0
 801c1a8:	0801afae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, sl, fp, sp, pc}
 801c1ac:	0801c1b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, lr, pc}
 801c1b0:	0000021a 	andeq	r0, r0, sl, lsl r2
 801c1b4:	00000000 	andeq	r0, r0, r0

0801c1b8 <dmx_html>:
 801c1b8:	4f44213c 	svcmi	0x0044213c
 801c1bc:	50595443 	subspl	r5, r9, r3, asr #8
 801c1c0:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801c1c4:	0a3e6c6d 	beq	8fb7380 <_sidata+0xf981b8>
 801c1c8:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801c1cc:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801c1d0:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c1d4:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801c1d8:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801c1dc:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 801c1e0:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801c1e4:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 801c1e8:	20227465 	eorcs	r7, r2, r5, ror #8
 801c1ec:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 801c1f0:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801c1f4:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801c1f8:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801c1fc:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 801c200:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 801c204:	443e656c 	ldrtmi	r6, [lr], #-1388	@ 0xfffffa94
 801c208:	2f3c584d 	svccs	0x003c584d
 801c20c:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801c210:	2f3c3e65 	svccs	0x003c3e65
 801c214:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c218:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801c21c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801c220:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 801c224:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801c228:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 801c22c:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801c230:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 801c234:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801c238:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 801b602 <_etext+0xfb6>
 801c23c:	2f3c3e6c 	svccs	0x003c3e6c
 801c240:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c244:	0a3e7265 	beq	8fb8be0 <_sidata+0xf99a18>
 801c248:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801c24c:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c250:	6f206e6f 	svcvs	0x00206e6f
 801c254:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801c258:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 801c25c:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 801c260:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 801c264:	523e2229 	eorspl	r2, lr, #-1879048190	@ 0x90000002
 801c268:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801c26c:	2f3c6873 	svccs	0x003c6873
 801c270:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c274:	3c3e6e6f 	ldccc	14, cr6, [lr], #-444	@ 0xfffffe44
 801c278:	0a3e702f 	beq	8fb833c <_sidata+0xf99174>
 801c27c:	7669643c 			@ <UNDEFINED> instruction: 0x7669643c
 801c280:	616c6320 	cmnvs	ip, r0, lsr #6
 801c284:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 801c288:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 801c28c:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	@ 0xfffffe34
 801c290:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 801c294:	64692065 	strbtvs	r2, [r9], #-101	@ 0xffffff9b
 801c298:	6469223d 	strbtvs	r2, [r9], #-573	@ 0xfffffdc3
 801c29c:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 801c2a0:	62202273 	eorvs	r2, r0, #805306375	@ 0x30000007
 801c2a4:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 801c2a8:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 801c2ac:	2f3c3e27 	svccs	0x003c3e27
 801c2b0:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 801c2b4:	2f3c3e65 	svccs	0x003c3e65
 801c2b8:	3e766964 	vsubcc.f16	s13, s12, s9	@ <UNPREDICTABLE>
 801c2bc:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 801c2c0:	6c632076 	stclvs	0, cr2, [r3], #-472	@ 0xfffffe28
 801c2c4:	3d737361 	ldclcc	3, cr7, [r3, #-388]!	@ 0xfffffe7c
 801c2c8:	726f7022 	rsbvc	r7, pc, #34	@ 0x22
 801c2cc:	3e227374 	mcrcc	3, 1, r7, cr2, cr4, {3}
 801c2d0:	6261743c 	rsbvs	r7, r1, #60, 8	@ 0x3c000000
 801c2d4:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
 801c2d8:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c2dc:	726f5064 	rsbvc	r5, pc, #100	@ 0x64
 801c2e0:	20227374 	eorcs	r7, r2, r4, ror r3
 801c2e4:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801c2e8:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 801c2ec:	3c3e2731 	ldccc	7, cr2, [lr], #-196	@ 0xffffff3c
 801c2f0:	6261742f 	rsbvs	r7, r1, #788529152	@ 0x2f000000
 801c2f4:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	@ 0xfffffe50
 801c2f8:	7669642f 	strbtvc	r6, [r9], -pc, lsr #8
 801c2fc:	663c0a3e 			@ <UNDEFINED> instruction: 0x663c0a3e
 801c300:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 801c304:	753c3e72 	ldrvc	r3, [ip, #-3698]!	@ 0xfffff18e
 801c308:	6469206c 	strbtvs	r2, [r9], #-108	@ 0xffffff94
 801c30c:	6469223d 	strbtvs	r2, [r9], #-573	@ 0xfffffdc3
 801c310:	73726556 	cmnvc	r2, #360710144	@ 0x15800000
 801c314:	226e6f69 	rsbcs	r6, lr, #420	@ 0x1a4
 801c318:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 801b6e2 <_etext+0x1096>
 801c31c:	2f3c3e6c 	svccs	0x003c3e6c
 801c320:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801c328 <dmx_html+0x170>
 801c324:	0a3e7265 	beq	8fb8cc0 <_sidata+0xf99af8>
 801c328:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801c32c:	20747069 	rsbscs	r7, r4, r9, rrx
 801c330:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 801c334:	61747322 	cmnvs	r4, r2, lsr #6
 801c338:	2e636974 			@ <UNDEFINED> instruction: 0x2e636974
 801c33c:	2022736a 	eorcs	r7, r2, sl, ror #6
 801c340:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801c344:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 801c348:	6a2f7478 	bvs	8bf9530 <_sidata+0xbda368>
 801c34c:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 801c350:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c354:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801c358:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801c35c:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801c360:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801c364:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c368:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 801c36c:	6d64223d 	sfmvs	f2, 2, [r4, #-244]!	@ 0xffffff0c
 801c370:	736a2e78 	cmnvc	sl, #120, 28	@ 0x780
 801c374:	79742022 	ldmdbvc	r4!, {r1, r5, sp}^
 801c378:	223d6570 	eorscs	r6, sp, #112, 10	@ 0x1c000000
 801c37c:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 801c380:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801c384:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 801c388:	22747069 	rsbscs	r7, r4, #105	@ 0x69
 801c38c:	732f3c3e 			@ <UNDEFINED> instruction: 0x732f3c3e
 801c390:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c394:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 801c398:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c39c:	6c3e7470 	cfldrsvs	mvf7, [lr], #-448	@ 0xfffffe40
 801c3a0:	28747369 	ldmdacs	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
 801c3a4:	65763b29 	ldrbvs	r3, [r6, #-2857]!	@ 0xfffff4d7
 801c3a8:	6f697372 	svcvs	0x00697372
 801c3ac:	3b29286e 	blcc	8a6656c <_sidata+0xa473a4>
 801c3b0:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 801c3b4:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 801c3b8:	732f3c29 			@ <UNDEFINED> instruction: 0x732f3c29
 801c3bc:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c3c0:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 801c3c4:	646f622f 	strbtvs	r6, [pc], #-559	@ 801c3cc <dmx_html+0x214>
 801c3c8:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801c3cc:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 801c3d0:	 	stccc	14, cr3, [r0], {108}	@ 0x6c

0801c3d3 <time_html>:
 801c3d3:	4f44213c 	svcmi	0x0044213c
 801c3d7:	50595443 	subspl	r5, r9, r3, asr #8
 801c3db:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801c3df:	0a3e6c6d 	beq	8fb759b <_sidata+0xf983d3>
 801c3e3:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801c3e7:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801c3eb:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c3ef:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801c3f3:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801c3f7:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 801c3fb:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801c3ff:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 801c403:	20227465 	eorcs	r7, r2, r5, ror #8
 801c407:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 801c40b:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801c40f:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801c413:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801c417:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 801c41b:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 801c41f:	4e3e656c 	cdpmi	5, 3, cr6, cr14, cr12, {3}
 801c423:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801c427:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801c42b:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801c42f:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 801c433:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 801c437:	0a3e6461 	beq	8fb55c3 <_sidata+0xf963fb>
 801c43b:	646f623c 	strbtvs	r6, [pc], #-572	@ 801c443 <time_html+0x70>
 801c43f:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801c443:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c447:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801c44b:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801c44f:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c453:	73694c64 	cmnvc	r9, #100, 24	@ 0x6400
 801c457:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801c45b:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 801c45f:	65682f3c 	strbvs	r2, [r8, #-3900]!	@ 0xfffff0c4
 801c463:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801c467:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 801c46b:	75623c3e 	strbvc	r3, [r2, #-3134]!	@ 0xfffff3c2
 801c46f:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801c473:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 801c477:	6b63696c 	blvs	98f6a2f <_sidata+0x18d7867>
 801c47b:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801c47f:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 801c483:	22292868 	eorcs	r2, r9, #104, 16	@ 0x680000
 801c487:	6665523e 			@ <UNDEFINED> instruction: 0x6665523e
 801c48b:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 801c48f:	75622f3c 	strbvc	r2, [r2, #-3900]!	@ 0xfffff0c4
 801c493:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801c497:	702f3c3e 	eorvc	r3, pc, lr, lsr ip	@ <UNPREDICTABLE>
 801c49b:	703c0a3e 	eorsvc	r0, ip, lr, lsr sl
 801c49f:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801c4a3:	646f6e22 	strbtvs	r6, [pc], #-3618	@ 801c4ab <time_html+0xd8>
 801c4a7:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	@ 0xfffffe6c
 801c4ab:	4e3e2265 	cdpmi	2, 3, cr2, cr14, cr5, {3}
 801c4af:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801c4b3:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 801c4b7:	6c697720 	stclvs	7, cr7, [r9], #-128	@ 0xffffff80
 801c4bb:	6562206c 	strbvs	r2, [r2, #-108]!	@ 0xffffff94
 801c4bf:	73696420 	cmnvc	r9, #32, 8	@ 0x20000000
 801c4c3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801c4c7:	68206465 	stmdavs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 801c4cb:	3c657265 	sfmcc	f7, 2, [r5], #-404	@ 0xfffffe6c
 801c4cf:	0a3e702f 	beq	8fb8593 <_sidata+0xf993cb>
 801c4d3:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801c4d7:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c4db:	6f206e6f 	svcvs	0x00206e6f
 801c4df:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801c4e3:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 801c4e7:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801c4eb:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
 801c4ef:	61636f4c 	cmnvs	r3, ip, asr #30
 801c4f3:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	@ 0xfffffe50
 801c4f7:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 801c4fb:	6e79533e 	mrcvs	3, 3, r5, cr9, cr14, {1}
 801c4ff:	69772063 	ldmdbvs	r7!, {r0, r1, r5, r6, sp}^
 801c503:	4c206874 	stcmi	8, cr6, [r0], #-464	@ 0xfffffe30
 801c507:	6c61636f 	stclvs	3, cr6, [r1], #-444	@ 0xfffffe44
 801c50b:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 801c50f:	622f3c65 	eorvs	r3, pc, #25856	@ 0x6500
 801c513:	6f747475 	svcvs	0x00747475
 801c517:	2f3c3e6e 	svccs	0x003c3e6e
 801c51b:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 801c51f:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801c527 <time_html+0x154>
 801c523:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801c527:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801c52b:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c52f:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 801c533:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801c537:	2f3c3e22 	svccs	0x003c3e22
 801c53b:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 801c53f:	6f6f662f 	svcvs	0x006f662f
 801c543:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 801c547:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801c54b:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c54f:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 801c553:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801c557:	63697461 	cmnvs	r9, #1627389952	@ 0x61000000
 801c55b:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801c55f:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801c563:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801c567:	2f747865 	svccs	0x00747865
 801c56b:	6176616a 	cmnvs	r6, sl, ror #2
 801c56f:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c573:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 801c577:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 801c57b:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c57f:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 801c583:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c587:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 801c58b:	64223d63 	strtvs	r3, [r2], #-3427	@ 0xfffff29d
 801c58f:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 801c593:	2022736a 	eorcs	r7, r2, sl, ror #6
 801c597:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801c59b:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 801c59f:	6a2f7478 	bvs	8bf9787 <_sidata+0xbda5bf>
 801c5a3:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 801c5a7:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c5ab:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801c5af:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801c5b3:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801c5b7:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801c5bb:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c5bf:	63727320 	cmnvs	r2, #32, 6	@ 0x80000000
 801c5c3:	6974223d 	ldmdbvs	r4!, {r0, r2, r3, r4, r5, r9, sp}^
 801c5c7:	6a2e656d 	bvs	8bb5b83 <_sidata+0xb969bb>
 801c5cb:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801c5cf:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801c5d3:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801c5d7:	616a2f74 	smcvs	41716	@ 0xa2f4
 801c5db:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801c5df:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c5e3:	2f3c3e22 	svccs	0x003c3e22
 801c5e7:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c5eb:	0a3e7470 	beq	8fb97b3 <_sidata+0xf9a5eb>
 801c5ef:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801c5f3:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801c5f7:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801c5fb:	763b2928 	ldrtvc	r2, [fp], -r8, lsr #18
 801c5ff:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801c603:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801c607:	6665723b 			@ <UNDEFINED> instruction: 0x6665723b
 801c60b:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 801c60f:	2f3c2928 	svccs	0x003c2928
 801c613:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c617:	0a3e7470 	beq	8fb97df <_sidata+0xf9a617>
 801c61b:	6f622f3c 	svcvs	0x00622f3c
 801c61f:	0a3e7964 	beq	8fbabb7 <_sidata+0xf9b9ef>
 801c623:	74682f3c 	strbtvc	r2, [r8], #-3900	@ 0xfffff0c4
 801c627:	003e6c6d 	eorseq	r6, lr, sp, ror #24

0801c62b <index_html>:
 801c62b:	4f44213c 	svcmi	0x0044213c
 801c62f:	50595443 	subspl	r5, r9, r3, asr #8
 801c633:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801c637:	0a3e6c6d 	beq	8fb77f3 <_sidata+0xf9862b>
 801c63b:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801c63f:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801c643:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c647:	6c3c0a3e 			@ <UNDEFINED> instruction: 0x6c3c0a3e
 801c64b:	206b6e69 	rsbcs	r6, fp, r9, ror #28
 801c64f:	3d6c6572 	cfstr64cc	mvdx6, [ip, #-456]!	@ 0xfffffe38
 801c653:	79747322 	ldmdbvc	r4!, {r1, r5, r8, r9, ip, sp, lr}^
 801c657:	6873656c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 801c65b:	22746565 	rsbscs	r6, r4, #423624704	@ 0x19400000
 801c65f:	65726820 	ldrbvs	r6, [r2, #-2080]!	@ 0xfffff7e0
 801c663:	73223d66 			@ <UNDEFINED> instruction: 0x73223d66
 801c667:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801c66b:	73632e73 	cmnvc	r3, #1840	@ 0x730
 801c66f:	2f202273 	svccs	0x00202273
 801c673:	743c0a3e 	ldrtvc	r0, [ip], #-2622	@ 0xfffff5c2
 801c677:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801c67b:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801c683 <index_html+0x58>
 801c67f:	656c7469 	strbvs	r7, [ip, #-1129]!	@ 0xfffffb97
 801c683:	2f3c0a3e 	svccs	0x003c0a3e
 801c687:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c68b:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801c68f:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801c693:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 801c697:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801c69b:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 801c69f:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801c6a3:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 801c6a7:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801c6ab:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 801ba75 <s_Node+0x7d>
 801c6af:	2f3c3e6c 	svccs	0x003c3e6c
 801c6b3:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c6b7:	0a3e7265 	beq	8fb9053 <_sidata+0xf99e8b>
 801c6bb:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801c6bf:	656c6573 	strbvs	r6, [ip, #-1395]!	@ 0xfffffa8d
 801c6c3:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801c6c7:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c6cb:	72694464 	rsbvc	r4, r9, #100, 8	@ 0x64000000
 801c6cf:	6f746365 	svcvs	0x00746365
 801c6d3:	20227972 	eorcs	r7, r2, r2, ror r9
 801c6d7:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801c6db:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
 801c6df:	6567223d 	strbvs	r2, [r7, #-573]!	@ 0xfffffdc3
 801c6e3:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801c6e7:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801c6eb:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 801c6ef:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 801c6f3:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	@ 0xffffff5c
 801c6f7:	6c65732f 	stclvs	3, cr7, [r5], #-188	@ 0xffffff44
 801c6fb:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 801c6ff:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 801c703:	61743c0a 	cmnvs	r4, sl, lsl #24
 801c707:	20656c62 	rsbcs	r6, r5, r2, ror #24
 801c70b:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 801c70f:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801c713:	62202274 	eorvs	r2, r0, #116, 4	@ 0x40000007
 801c717:	6564726f 	strbvs	r7, [r4, #-623]!	@ 0xfffffd91
 801c71b:	31273d72 			@ <UNDEFINED> instruction: 0x31273d72
 801c71f:	2f3c3e27 	svccs	0x003c3e27
 801c723:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 801c727:	3c0a3e65 	stccc	14, cr3, [sl], {101}	@ 0x65
 801c72b:	746f6f66 	strbtvc	r6, [pc], #-3942	@ 801c733 <index_html+0x108>
 801c72f:	3c3e7265 	lfmcc	f7, 4, [lr], #-404	@ 0xfffffe6c
 801c733:	69206c75 	stmdbvs	r0!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 801c737:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c73b:	72655664 	rsbvc	r5, r5, #100, 12	@ 0x6400000
 801c73f:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801c743:	2f3c3e22 	svccs	0x003c3e22
 801c747:	3c3e6c75 	ldccc	12, cr6, [lr], #-468	@ 0xfffffe2c
 801c74b:	6f6f662f 	svcvs	0x006f662f
 801c74f:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 801c753:	69643c0a 	stmdbvs	r4!, {r1, r3, sl, fp, ip, sp}^
 801c757:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801c75b:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c75f:	69206e6f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801c763:	6c223d64 	stcvs	13, cr3, [r2], #-400	@ 0xfffffe70
 801c767:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 801c76b:	74754265 	ldrbtvc	r4, [r5], #-613	@ 0xfffffd9b
 801c76f:	226e6f74 	rsbcs	r6, lr, #116, 30	@ 0x1d0
 801c773:	616c6320 	cmnvs	ip, r0, lsr #6
 801c777:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 801c77b:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801c77f:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801c783:	6e6f2022 	cdpvs	0, 6, cr2, cr15, cr2, {1}
 801c787:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 801c78b:	6c223d6b 	stcvs	13, cr3, [r2], #-428	@ 0xfffffe54
 801c78f:	7461636f 	strbtvc	r6, [r1], #-879	@ 0xfffffc91
 801c793:	22292865 	eorcs	r2, r9, #6619136	@ 0x650000
 801c797:	636f4c3e 	cmnvs	pc, #15872	@ 0x3e00
 801c79b:	20657461 	rsbcs	r7, r5, r1, ror #8
 801c79f:	3c66664f 	stclcc	6, cr6, [r6], #-316	@ 0xfffffec4
 801c7a3:	7475622f 	ldrbtvc	r6, [r5], #-559	@ 0xfffffdd1
 801c7a7:	3e6e6f74 	mcrcc	15, 3, r6, cr14, cr4, {3}
 801c7ab:	75623c0a 	strbvc	r3, [r2, #-3082]!	@ 0xfffff3f6
 801c7af:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801c7b3:	636e6f20 	cmnvs	lr, #32, 30	@ 0x80
 801c7b7:	6b63696c 	blvs	98f6d6f <_sidata+0x18d7ba7>
 801c7bb:	6572223d 	ldrbvs	r2, [r2, #-573]!	@ 0xfffffdc3
 801c7bf:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801c7c7 <index_html+0x19c>
 801c7c3:	3e222928 	vmulcc.f16	s4, s4, s17	@ <UNPREDICTABLE>
 801c7c7:	6f626552 	svcvs	0x00626552
 801c7cb:	2f3c746f 	svccs	0x003c746f
 801c7cf:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c7d3:	0a3e6e6f 	beq	8fb8197 <_sidata+0xf98fcf>
 801c7d7:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801c7db:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801c7df:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c7e3:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 801c7e7:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 801c7eb:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
 801c7ef:	6a2e6369 	bvs	8bb559b <_sidata+0xb963d3>
 801c7f3:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801c7f7:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801c7fb:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801c7ff:	616a2f74 	smcvs	41716	@ 0xa2f4
 801c803:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801c807:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c80b:	2f3c3e22 	svccs	0x003c3e22
 801c80f:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c813:	0a3e7470 	beq	8fb99db <_sidata+0xf9a813>
 801c817:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801c81b:	20747069 	rsbscs	r7, r4, r9, rrx
 801c81f:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 801c823:	646e6922 	strbtvs	r6, [lr], #-2338	@ 0xfffff6de
 801c827:	6a2e7865 	bvs	8bba9c3 <_sidata+0xb9b7fb>
 801c82b:	74202273 	strtvc	r2, [r0], #-627	@ 0xfffffd8d
 801c82f:	3d657079 	stclcc	0, cr7, [r5, #-484]!	@ 0xfffffe1c
 801c833:	78657422 	stmdavc	r5!, {r1, r5, sl, ip, sp, lr}^
 801c837:	616a2f74 	smcvs	41716	@ 0xa2f4
 801c83b:	63736176 	cmnvs	r3, #-2147483619	@ 0x8000001d
 801c83f:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c843:	2f3c3e22 	svccs	0x003c3e22
 801c847:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c84b:	0a3e7470 	beq	8fb9a13 <_sidata+0xf9a84b>
 801c84f:	7263733c 	rsbvc	r7, r3, #60, 6	@ 0xf0000000
 801c853:	20747069 	rsbscs	r7, r4, r9, rrx
 801c857:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	@ 0xfffffe34
 801c85b:	66656422 	strbtvs	r6, [r5], -r2, lsr #8
 801c85f:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 801c863:	22736a2e 	rsbscs	r6, r3, #188416	@ 0x2e000
 801c867:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801c86b:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801c86f:	2f747865 	svccs	0x00747865
 801c873:	6176616a 	cmnvs	r6, sl, ror #2
 801c877:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801c87b:	3e227470 	mcrcc	4, 1, r7, cr2, cr0, {3}
 801c87f:	63732f3c 	cmnvs	r3, #60, 30	@ 0xf0
 801c883:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801c887:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 801c88b:	70697263 	rsbvc	r7, r9, r3, ror #4
 801c88f:	696c3e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}^
 801c893:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801c897:	7265763b 	rsbvc	r7, r5, #61865984	@ 0x3b00000
 801c89b:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801c89f:	643b2928 	ldrtvs	r2, [fp], #-2344	@ 0xfffff6d8
 801c8a3:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 801c8a7:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801c8ab:	3c3b2928 			@ <UNDEFINED> instruction: 0x3c3b2928
 801c8af:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801c8b3:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801c8b7:	622f3c0a 	eorvs	r3, pc, #2560	@ 0xa00
 801c8bb:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801c8bf:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	@ <UNPREDICTABLE>
 801c8c3:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801c8c7:	 	teqcs	ip, sl

0801c8c9 <rdm_html>:
 801c8c9:	4f44213c 	svcmi	0x0044213c
 801c8cd:	50595443 	subspl	r5, r9, r3, asr #8
 801c8d1:	74682045 	strbtvc	r2, [r8], #-69	@ 0xffffffbb
 801c8d5:	0a3e6c6d 	beq	8fb7a91 <_sidata+0xf988c9>
 801c8d9:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	@ 0xffffff10
 801c8dd:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	@ 0x6c
 801c8e1:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c8e5:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801c8e9:	72206b6e 	eorvc	r6, r0, #112640	@ 0x1b800
 801c8ed:	223d6c65 	eorscs	r6, sp, #25856	@ 0x6500
 801c8f1:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801c8f5:	65687365 	strbvs	r7, [r8, #-869]!	@ 0xfffffc9b
 801c8f9:	20227465 	eorcs	r7, r2, r5, ror #8
 801c8fd:	66657268 	strbtvs	r7, [r5], -r8, ror #4
 801c901:	7473223d 	ldrbtvc	r2, [r3], #-573	@ 0xfffffdc3
 801c905:	73656c79 	cmnvc	r5, #30976	@ 0x7900
 801c909:	7373632e 	cmnvc	r3, #-1207959552	@ 0xb8000000
 801c90d:	3e2f2022 	cdpcc	0, 2, cr2, cr15, cr2, {1}
 801c911:	7469743c 	strbtvc	r7, [r9], #-1084	@ 0xfffffbc4
 801c915:	523e656c 	eorspl	r6, lr, #108, 10	@ 0x1b000000
 801c919:	2f3c4d44 	svccs	0x003c4d44
 801c91d:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801c921:	2f3c3e65 	svccs	0x003c3e65
 801c925:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c929:	623c0a3e 	eorsvs	r0, ip, #253952	@ 0x3e000
 801c92d:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801c931:	65683c0a 	strbvs	r3, [r8, #-3082]!	@ 0xfffff3f6
 801c935:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801c939:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	@ 0xffffff08
 801c93d:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801c941:	4c646922 			@ <UNDEFINED> instruction: 0x4c646922
 801c945:	22747369 	rsbscs	r7, r4, #-1543503871	@ 0xa4000001
 801c949:	752f3c3e 	strvc	r3, [pc, #-3134]!	@ 801bd13 <RemoteConfig::s_TXT+0x147>
 801c94d:	2f3c3e6c 	svccs	0x003c3e6c
 801c951:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801c955:	0a3e7265 	beq	8fb92f1 <_sidata+0xf9a129>
 801c959:	3c3e703c 	ldccc	0, cr7, [lr], #-240	@ 0xffffff10
 801c95d:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c961:	6f206e6f 	svcvs	0x00206e6f
 801c965:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801c969:	223d6b63 	eorscs	r6, sp, #101376	@ 0x18c00
 801c96d:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 801c971:	28687365 	stmdacs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 801c975:	523e2229 	eorspl	r2, lr, #-1879048190	@ 0x90000002
 801c979:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801c97d:	2f3c6873 	svccs	0x003c6873
 801c981:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c985:	3c3e6e6f 	ldccc	14, cr6, [lr], #-444	@ 0xfffffe44
 801c989:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801c98d:	73206e6f 			@ <UNDEFINED> instruction: 0x73206e6f
 801c991:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801c995:	616d273d 	cmnvs	sp, sp, lsr r7
 801c999:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801c99d:	66656c2d 	strbtvs	r6, [r5], -sp, lsr #24
 801c9a1:	32203a74 	eorcc	r3, r0, #116, 20	@ 0x74000
 801c9a5:	3b787035 	blcc	9e38a81 <_sidata+0x1e198b9>
 801c9a9:	64692027 	strbtvs	r2, [r9], #-39	@ 0xffffffd9
 801c9ad:	7462223d 	strbtvc	r2, [r2], #-573	@ 0xfffffdc3
 801c9b1:	4c3e226e 	lfmmi	f2, 4, [lr], #-440	@ 0xfffffe48
 801c9b5:	6964616f 	stmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, sp, lr}^
 801c9b9:	2e2e676e 	cdpcs	7, 2, cr6, cr14, cr14, {3}
 801c9bd:	622f3c2e 	eorvs	r3, pc, #11776	@ 0x2e00
 801c9c1:	6f747475 	svcvs	0x00747475
 801c9c5:	2f3c3e6e 	svccs	0x003c3e6e
 801c9c9:	3c0a3e70 	stccc	14, cr3, [sl], {112}	@ 0x70
 801c9cd:	20766964 	rsbscs	r6, r6, r4, ror #18
 801c9d1:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801c9d5:	63223d73 			@ <UNDEFINED> instruction: 0x63223d73
 801c9d9:	3e226766 	cdpcc	7, 2, cr6, cr2, cr6, {3}
 801c9dd:	6261743c 	rsbvs	r7, r1, #60, 8	@ 0x3c000000
 801c9e1:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
 801c9e5:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801c9e9:	67664364 	strbvs	r4, [r6, -r4, ror #6]!
 801c9ed:	6f622022 	svcvs	0x00622022
 801c9f1:	72656472 	rsbvc	r6, r5, #1912602624	@ 0x72000000
 801c9f5:	2731273d 			@ <UNDEFINED> instruction: 0x2731273d
 801c9f9:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801ca01 <rdm_html+0x138>
 801c9fd:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801ca01:	642f3c3e 	strtvs	r3, [pc], #-3134	@ 801ca09 <rdm_html+0x140>
 801ca05:	0a3e7669 	beq	8fba3b1 <_sidata+0xf9b1e9>
 801ca09:	7669643c 			@ <UNDEFINED> instruction: 0x7669643c
 801ca0d:	616c6320 	cmnvs	ip, r0, lsr #6
 801ca11:	223d7373 	eorscs	r7, sp, #-872415231	@ 0xcc000001
 801ca15:	22657571 	rsbcs	r7, r5, #473956352	@ 0x1c400000
 801ca19:	726f573e 	rsbvc	r5, pc, #16252928	@ 0xf80000
 801ca1d:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
 801ca21:	65755120 	ldrbvs	r5, [r5, #-288]!	@ 0xfffffee0
 801ca25:	623c6575 	eorsvs	r6, ip, #490733568	@ 0x1d400000
 801ca29:	3e2f2072 	mcrcc	0, 1, r2, cr15, cr2, {3}
 801ca2d:	61743c0a 	cmnvs	r4, sl, lsl #24
 801ca31:	20656c62 	rsbcs	r6, r5, r2, ror #24
 801ca35:	6c797473 	cfldrdvs	mvd7, [r9], #-460	@ 0xfffffe34
 801ca39:	66273d65 	strtvs	r3, [r7], -r5, ror #26
 801ca3d:	2d746e6f 	ldclcs	14, cr6, [r4, #-444]!	@ 0xfffffe44
 801ca41:	696d6166 	stmdbvs	sp!, {r1, r2, r5, r6, r8, sp, lr}^
 801ca45:	223a796c 	eorscs	r7, sl, #108, 18	@ 0x1b0000
 801ca49:	72756f43 	rsbsvc	r6, r5, #268	@ 0x10c
 801ca4d:	20726569 	rsbscs	r6, r2, r9, ror #10
 801ca51:	2277654e 	rsbscs	r6, r7, #327155712	@ 0x13800000
 801ca55:	6f43202c 	svcvs	0x0043202c
 801ca59:	65697275 	strbvs	r7, [r9, #-629]!	@ 0xfffffd8b
 801ca5d:	6d202c72 	stcvs	12, cr2, [r0, #-456]!	@ 0xfffffe38
 801ca61:	736f6e6f 	cmnvc	pc, #1776	@ 0x6f0
 801ca65:	65636170 	strbvs	r6, [r3, #-368]!	@ 0xfffffe90
 801ca69:	6f66203b 	svcvs	0x0066203b
 801ca6d:	732d746e 			@ <UNDEFINED> instruction: 0x732d746e
 801ca71:	3a657a69 	bcc	997b41d <_sidata+0x195c255>
 801ca75:	27253038 			@ <UNDEFINED> instruction: 0x27253038
 801ca79:	3d646920 			@ <UNDEFINED> instruction: 0x3d646920
 801ca7d:	51646922 	cmnpl	r4, r2, lsr #18
 801ca81:	20226575 	eorcs	r6, r2, r5, ror r5
 801ca85:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801ca89:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 801ca8d:	3c3e2730 	ldccc	7, cr2, [lr], #-192	@ 0xffffff40
 801ca91:	6261742f 	rsbvs	r7, r1, #788529152	@ 0x2f000000
 801ca95:	0a3e656c 	beq	8fb604d <_sidata+0xf96e85>
 801ca99:	69642f3c 	stmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801ca9d:	3c0a3e76 	stccc	14, cr3, [sl], {118}	@ 0x76
 801caa1:	3e766964 	vsubcc.f16	s13, s12, s9	@ <UNPREDICTABLE>
 801caa5:	63736944 	cmnvs	r3, #68, 18	@ 0x110000
 801caa9:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 801caad:	64206465 	strtvs	r6, [r0], #-1125	@ 0xfffffb9b
 801cab1:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801cab5:	623c7365 	eorsvs	r7, ip, #-1811939327	@ 0x94000001
 801cab9:	3e2f2072 	mcrcc	0, 1, r2, cr15, cr2, {3}
 801cabd:	6261743c 	rsbvs	r7, r1, #60, 8	@ 0x3c000000
 801cac1:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
 801cac5:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801cac9:	73694464 	cmnvc	r9, #100, 8	@ 0x64000000
 801cacd:	6f622022 	svcvs	0x00622022
 801cad1:	72656472 	rsbvc	r6, r5, #1912602624	@ 0x72000000
 801cad5:	2731273d 			@ <UNDEFINED> instruction: 0x2731273d
 801cad9:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801cae1 <rdm_html+0x218>
 801cadd:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801cae1:	642f3c3e 	strtvs	r3, [pc], #-3134	@ 801cae9 <rdm_html+0x220>
 801cae5:	0a3e7669 	beq	8fba491 <_sidata+0xf9b2c9>
 801cae9:	6f6f663c 	svcvs	0x006f663c
 801caed:	3e726574 	mrccc	5, 3, r6, cr2, cr4, {3}
 801caf1:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 801caf5:	223d6469 	eorscs	r6, sp, #1761607680	@ 0x69000000
 801caf9:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 801cafd:	6f697372 	svcvs	0x00697372
 801cb01:	3c3e226e 	lfmcc	f2, 4, [lr], #-440	@ 0xfffffe48
 801cb05:	3e6c752f 	cdpcc	5, 6, cr7, cr12, cr15, {1}
 801cb09:	6f662f3c 	svcvs	0x00662f3c
 801cb0d:	7265746f 	rsbvc	r7, r5, #1862270976	@ 0x6f000000
 801cb11:	733c0a3e 	teqvc	ip, #253952	@ 0x3e000
 801cb15:	70697263 	rsbvc	r7, r9, r3, ror #4
 801cb19:	72732074 	rsbsvc	r2, r3, #116	@ 0x74
 801cb1d:	73223d63 			@ <UNDEFINED> instruction: 0x73223d63
 801cb21:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 801cb25:	736a2e63 	cmnvc	sl, #1584	@ 0x630
 801cb29:	79742022 	ldmdbvc	r4!, {r1, r5, sp}^
 801cb2d:	223d6570 	eorscs	r6, sp, #112, 10	@ 0x1c000000
 801cb31:	74786574 	ldrbtvc	r6, [r8], #-1396	@ 0xfffffa8c
 801cb35:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801cb39:	72637361 	rsbvc	r7, r3, #-2080374783	@ 0x84000001
 801cb3d:	22747069 	rsbscs	r7, r4, #105	@ 0x69
 801cb41:	732f3c3e 			@ <UNDEFINED> instruction: 0x732f3c3e
 801cb45:	70697263 	rsbvc	r7, r9, r3, ror #4
 801cb49:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 801cb4d:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 801cb51:	73207470 			@ <UNDEFINED> instruction: 0x73207470
 801cb55:	223d6372 	eorscs	r6, sp, #-939524095	@ 0xc8000001
 801cb59:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801cb5d:	2022736a 	eorcs	r7, r2, sl, ror #6
 801cb61:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801cb65:	6574223d 	ldrbvs	r2, [r4, #-573]!	@ 0xfffffdc3
 801cb69:	6a2f7478 	bvs	8bf9d51 <_sidata+0xbdab89>
 801cb6d:	73617661 	cmnvc	r1, #101711872	@ 0x6100000
 801cb71:	70697263 	rsbvc	r7, r9, r3, ror #4
 801cb75:	3c3e2274 	lfmcc	f2, 4, [lr], #-464	@ 0xfffffe30
 801cb79:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801cb7d:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801cb81:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801cb85:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801cb89:	73610a3e 	cmnvc	r1, #253952	@ 0x3e000
 801cb8d:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801cb91:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801cb95:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801cb99:	64707520 	ldrbtvs	r7, [r0], #-1312	@ 0xfffffae0
 801cb9d:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 801cba1:	0a7b2029 	beq	9ee4c4d <_sidata+0x1ec5a85>
 801cba5:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801cba9:	20722074 	rsbscs	r2, r2, r4, ror r0
 801cbad:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801cbb1:	20746961 	rsbscs	r6, r4, r1, ror #18
 801cbb5:	4a746567 	bmi	9d36159 <_sidata+0x1d16f91>
 801cbb9:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801cbbd:	6d647227 	sfmvs	f7, 2, [r4, #-156]!	@ 0xffffff64
 801cbc1:	0a3b2927 	beq	8ee7065 <_sidata+0xec7e9d>
 801cbc5:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801cbc9:	61762074 	cmnvs	r6, r4, ror r0
 801cbcd:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801cbd1:	2e72203d 	mrccs	0, 3, r2, cr2, cr13, {1}
 801cbd5:	3b6d6472 	blcc	9b75da5 <_sidata+0x1b56bdd>
 801cbd9:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801cbdd:	62207473 	eorvs	r7, r0, #1929379840	@ 0x73000000
 801cbe1:	3d206e74 	stccc	14, cr6, [r0, #-464]!	@ 0xfffffe30
 801cbe5:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 801cbe9:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801cbed:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801cbf1:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801cbf5:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801cbf9:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801cbfd:	74622728 	strbtvc	r2, [r2], #-1832	@ 0xfffff8d8
 801cc01:	3b29276e 	blcc	8a669c1 <_sidata+0xa477f9>
 801cc05:	6e74620a 	cdpvs	2, 7, cr6, cr4, cr10, {0}
 801cc09:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801cc0d:	65547265 	ldrbvs	r7, [r4, #-613]	@ 0xfffffd9b
 801cc11:	3d207478 	cfstrscc	mvf7, [r0, #-480]!	@ 0xfffffe20
 801cc15:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 801cc19:	3d206575 	cfstr32cc	mvfx6, [r0, #-468]!	@ 0xfffffe2c
 801cc1d:	27203d3d 			@ <UNDEFINED> instruction: 0x27203d3d
 801cc21:	3f202730 	svccc	0x00202730
 801cc25:	6e452720 	cdpvs	7, 4, cr2, cr5, cr0, {1}
 801cc29:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801cc2d:	203a2027 	eorscs	r2, sl, r7, lsr #32
 801cc31:	73694427 	cmnvc	r9, #654311424	@ 0x27000000
 801cc35:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801cc39:	620a3b27 	andvs	r3, sl, #39936	@ 0x9c00
 801cc3d:	6f2e6e74 	svcvs	0x002e6e74
 801cc41:	696c636e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801cc45:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	@ Deprecated
 801cc49:	79736120 	ldmdbvc	r3!, {r5, r8, sp, lr}^
 801cc4d:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801cc51:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 801cc55:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801cc59:	7b202928 	blvc	8827101 <_sidata+0x807f39>
 801cc5d:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801cc61:	6e207473 	mcrvs	4, 1, r7, cr0, cr3, {3}
 801cc65:	61567765 	cmpvs	r6, r5, ror #14
 801cc69:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801cc6d:	6176203d 	cmnvs	r6, sp, lsr r0
 801cc71:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801cc75:	203d3d3d 	eorscs	r3, sp, sp, lsr sp
 801cc79:	20273027 	eorcs	r3, r7, r7, lsr #32
 801cc7d:	3127203f 			@ <UNDEFINED> instruction: 0x3127203f
 801cc81:	203a2027 	eorscs	r2, sl, r7, lsr #32
 801cc85:	3b273027 	blcc	89e8d29 <_sidata+0x9c9b61>
 801cc89:	6177610a 	cmnvs	r7, sl, lsl #2
 801cc8d:	6e207469 	cdpvs	4, 2, cr7, cr0, cr9, {3}
 801cc91:	50207765 	eorpl	r7, r0, r5, ror #14
 801cc95:	696d6f72 	stmdbvs	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801cc99:	72286573 	eorvc	r6, r8, #482344960	@ 0x1cc00000
 801cc9d:	6c6f7365 	stclvs	3, cr7, [pc], #-404	@ 801cb10 <rdm_html+0x247>
 801cca1:	3d206576 	cfstr32cc	mvfx6, [r0, #-472]!	@ 0xfffffe28
 801cca5:	0a7b203e 	beq	9ee4da5 <_sidata+0x1ec5bdd>
 801cca9:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 801ccad:	72207b28 	eorvc	r7, r0, #40, 22	@ 0xa000
 801ccb1:	203a6d64 	eorscs	r6, sl, r4, ror #26
 801ccb5:	5677656e 	ldrbtpl	r6, [r7], -lr, ror #10
 801ccb9:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 801ccbd:	2e297d20 	cdpcs	13, 2, cr7, cr9, cr0, {1}
 801ccc1:	6e656874 	mcrvs	8, 3, r6, cr5, cr4, {3}
 801ccc5:	20292828 	eorcs	r2, r9, r8, lsr #16
 801ccc9:	7b203e3d 	blvc	882c5c5 <_sidata+0x80d3fd>
 801cccd:	7365720a 	cmnvc	r5, #-1610612736	@ 0xa0000000
 801ccd1:	65766c6f 	ldrbvs	r6, [r6, #-3183]!	@ 0xfffff391
 801ccd5:	0a3b2928 	beq	8ee717d <_sidata+0xec7fb5>
 801ccd9:	0a3b297d 	beq	8ee72d5 <_sidata+0xec810d>
 801ccdd:	0a3b297d 	beq	8ee72d9 <_sidata+0xec8111>
 801cce1:	61647075 	smcvs	18181	@ 0x4705
 801cce5:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801cce9:	3b7d0a3b 	blcc	9f5f5dd <_sidata+0x1f40415>
 801cced:	3c0a7d0a 	stccc	13, cr7, [sl], {10}
 801ccf1:	7263732f 	rsbvc	r7, r3, #-1140850688	@ 0xbc000000
 801ccf5:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801ccf9:	63733c0a 	cmnvs	r3, #2560	@ 0xa00
 801ccfd:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 801cd01:	73696c3e 	cmnvc	r9, #15872	@ 0x3e00
 801cd05:	3b292874 	blcc	8a66edd <_sidata+0xa47d15>
 801cd09:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801cd0d:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801cd11:	65723b29 	ldrbvs	r3, [r2, #-2857]!	@ 0xfffff4d7
 801cd15:	73657266 	cmnvc	r5, #1610612742	@ 0x60000006
 801cd19:	3b292868 	blcc	8a66ec1 <_sidata+0xa47cf9>
 801cd1d:	61647075 	smcvs	18181	@ 0x4705
 801cd21:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801cd25:	732f3c3b 			@ <UNDEFINED> instruction: 0x732f3c3b
 801cd29:	70697263 	rsbvc	r7, r9, r3, ror #4
 801cd2d:	3c0a3e74 	stccc	14, cr3, [sl], {116}	@ 0x74
 801cd31:	646f622f 	strbtvs	r6, [pc], #-559	@ 801cd39 <rdm_html+0x470>
 801cd35:	3c0a3e79 	stccc	14, cr3, [sl], {121}	@ 0x79
 801cd39:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	@ 0xffffff44
 801cd3d:	 	tstvs	r0, ip, ror #28

0801cd40 <time_js>:
 801cd40:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801cd44:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801cd48:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801cd4c:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 801cd50:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801cd54:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801cd58:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 801cd5c:	64207465 	strtvs	r7, [r0], #-1125	@ 0xfffffb9b
 801cd60:	20617461 	rsbcs	r7, r1, r1, ror #8
 801cd64:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801cd68:	20746961 	rsbscs	r6, r4, r1, ror #18
 801cd6c:	4a746567 	bmi	9d36310 <_sidata+0x1d17148>
 801cd70:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801cd74:	6d697427 	cfstrdvs	mvd7, [r9, #-156]!	@ 0xffffff64
 801cd78:	74616465 	strbtvc	r6, [r1], #-1125	@ 0xfffffb9b
 801cd7c:	0a292765 	beq	8a66b18 <_sidata+0xa47950>
 801cd80:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801cd84:	6f6e2074 	svcvs	0x006e2074
 801cd88:	3d206564 	cfstr32cc	mvfx6, [r0, #-400]!	@ 0xfffffe70
 801cd8c:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 801cd90:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 801cd94:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 801cd98:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 801cd9c:	2077656e 	rsbscs	r6, r7, lr, ror #10
 801cda0:	65746144 	ldrbvs	r6, [r4, #-324]!	@ 0xfffffebc
 801cda4:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801cda8:	61642e61 	cmnvs	r4, r1, ror #28
 801cdac:	29296574 	stmdbcs	r9!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801cdb0:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 801cdb4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801cdb8:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801cdbc:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801cdc0:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801cdc4:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801cdc8:	6f6e2728 	svcvs	0x006e2728
 801cdcc:	69546564 	ldmdbvs	r4, {r2, r5, r6, r8, sl, sp, lr}^
 801cdd0:	2927656d 	stmdbcs	r7!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 801cdd4:	7865742e 	stmdavc	r5!, {r1, r2, r3, r5, sl, ip, sp, lr}^
 801cdd8:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
 801cddc:	746e6574 	strbtvc	r6, [lr], #-1396	@ 0xfffffa8c
 801cde0:	60203d20 	eorvs	r3, r0, r0, lsr #26
 801cde4:	65646f4e 	strbvs	r6, [r4, #-3918]!	@ 0xfffff0b2
 801cde8:	6d695420 	cfstrdvs	mvd5, [r9, #-128]!	@ 0xffffff80
 801cdec:	24203a65 	strtcs	r3, [r0], #-2661	@ 0xfffff59b
 801cdf0:	646f6e7b 	strbtvs	r6, [pc], #-3707	@ 801cdf8 <time_js+0xb8>
 801cdf4:	0a607d65 	beq	983c390 <_sidata+0x181d1c8>
 801cdf8:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 801cdfc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801ce00:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801ce04:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801ce08:	6e797320 	cdpvs	3, 7, cr7, cr9, cr0, {1}
 801ce0c:	74695763 	strbtvc	r5, [r9], #-1891	@ 0xfffff89d
 801ce10:	636f4c68 	cmnvs	pc, #104, 24	@ 0x6800
 801ce14:	69546c61 	ldmdbvs	r4, {r0, r5, r6, sl, fp, sp, lr}^
 801ce18:	2928656d 	stmdbcs	r8!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 801ce1c:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801ce20:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801ce24:	646f6e20 	strbtvs	r6, [pc], #-3616	@ 801ce2c <time_js+0xec>
 801ce28:	203d2065 	eorscs	r2, sp, r5, rrx
 801ce2c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	@ 0xfffffe68
 801ce30:	61447461 	cmpvs	r4, r1, ror #8
 801ce34:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
 801ce38:	6e28656d 	cfsh64vs	mvdx6, mvdx8, #61
 801ce3c:	44207765 	strtmi	r7, [r0], #-1893	@ 0xfffff89b
 801ce40:	28657461 	stmdacs	r5!, {r0, r5, r6, sl, ip, sp, lr}^
 801ce44:	640a2929 	strvs	r2, [sl], #-2345	@ 0xfffff6d7
 801ce48:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801ce4c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801ce50:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801ce54:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801ce58:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801ce5c:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 801ce60:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 801ce64:	656d6954 	strbvs	r6, [sp, #-2388]!	@ 0xfffff6ac
 801ce68:	742e2927 	strtvc	r2, [lr], #-2343	@ 0xfffff6d9
 801ce6c:	43747865 	cmnmi	r4, #6619136	@ 0x650000
 801ce70:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801ce74:	3d20746e 	cfstrscc	mvf7, [r0, #-440]!	@ 0xfffffe48
 801ce78:	6f4e6020 	svcvs	0x004e6020
 801ce7c:	54206564 	strtpl	r6, [r0], #-1380	@ 0xfffffa9c
 801ce80:	3a656d69 	bcc	997842c <_sidata+0x1959264>
 801ce84:	6e7b2420 	cdpvs	4, 7, cr2, cr11, cr0, {1}
 801ce88:	7d65646f 	cfstrdvc	mvd6, [r5, #-444]!	@ 0xfffffe44
 801ce8c:	6f630a60 	svcvs	0x00630a60
 801ce90:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801ce94:	61746164 	cmnvs	r4, r4, ror #2
 801ce98:	7b203d20 	blvc	882c320 <_sidata+0x80d158>
 801ce9c:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801cea0:	6e203a65 	vnmulvs.f32	s6, s0, s11
 801cea4:	2065646f 	rsbcs	r6, r5, pc, ror #8
 801cea8:	77610a7d 			@ <UNDEFINED> instruction: 0x77610a7d
 801ceac:	20746961 	rsbscs	r6, r4, r1, ror #18
 801ceb0:	74736f70 	ldrbtvc	r6, [r3], #-3952	@ 0xfffff090
 801ceb4:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801ceb8:	720a2961 	andvc	r2, sl, #1589248	@ 0x184000
 801cebc:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801cec0:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801cec4:	 	tstvs	r0, sl, lsl #26

0801cec7 <rdm_js>:
 801cec7:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801cecb:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801cecf:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801ced3:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 801ced7:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801cedb:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801cedf:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801cee3:	7b207972 	blvc	883b4b3 <_sidata+0x81c2eb>
 801cee7:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801ceeb:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801ceef:	77613d61 	strbvc	r3, [r1, -r1, ror #26]!
 801cef3:	20746961 	rsbscs	r6, r4, r1, ror #18
 801cef7:	4a746567 	bmi	9d3649b <_sidata+0x1d172d3>
 801cefb:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801ceff:	6d647227 	sfmvs	f7, 2, [r4, #-156]!	@ 0xffffff64
 801cf03:	726f702f 	rsbvc	r7, pc, #47	@ 0x2f
 801cf07:	61747374 	cmnvs	r4, r4, ror r3
 801cf0b:	27737574 			@ <UNDEFINED> instruction: 0x27737574
 801cf0f:	656c0a29 	strbvs	r0, [ip, #-2601]!	@ 0xfffff5d7
 801cf13:	3d682074 	stclcc	0, cr2, [r8, #-464]!	@ 0xfffffe30
 801cf17:	72743c27 	rsbsvc	r3, r4, #9984	@ 0x2700
 801cf1b:	68743c3e 	ldmdavs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801cf1f:	726f503e 	rsbvc	r5, pc, #62	@ 0x3e
 801cf23:	742f3c74 	strtvc	r3, [pc], #-3188	@ 801cf2b <rdm_js+0x64>
 801cf27:	743c3e68 	ldrtvc	r3, [ip], #-3688	@ 0xfffff198
 801cf2b:	69443e68 	stmdbvs	r4, {r3, r5, r6, r9, sl, fp, ip, sp}^
 801cf2f:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801cf33:	3c6e6f69 	stclcc	15, cr6, [lr], #-420	@ 0xfffffe5c
 801cf37:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801cf3b:	3e68743c 	mcrcc	4, 3, r7, cr8, cr12, {1}
 801cf3f:	74617453 	strbtvc	r7, [r1], #-1107	@ 0xfffffbad
 801cf43:	2f3c7375 	svccs	0x003c7375
 801cf47:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801cf4b:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 801cf4f:	61640a27 	cmnvs	r4, r7, lsr #20
 801cf53:	662e6174 			@ <UNDEFINED> instruction: 0x662e6174
 801cf57:	6145726f 	cmpvs	r5, pc, ror #4
 801cf5b:	69286863 	stmdbvs	r8!, {r0, r1, r5, r6, fp, sp, lr}
 801cf5f:	206d6574 	rsbcs	r6, sp, r4, ror r5
 801cf63:	7b203e3d 	blvc	882c85f <_sidata+0x80d697>
 801cf67:	3d2b680a 	stccc	8, cr6, [fp, #-40]!	@ 0xffffffd8
 801cf6b:	72743c60 	rsbsvc	r3, r4, #96, 24	@ 0x6000
 801cf6f:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801cf73:	697b243e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sl, sp}^
 801cf77:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801cf7b:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801cf7f:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801cf87 <rdm_js+0xc0>
 801cf83:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801cf87:	7b243e64 	blvc	892c91f <_sidata+0x90d757>
 801cf8b:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801cf8f:	7269642e 	rsbvc	r6, r9, #771751936	@ 0x2e000000
 801cf93:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801cf97:	3c7d6e6f 	ldclcc	14, cr6, [sp], #-444	@ 0xfffffe44
 801cf9b:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 801cf9f:	3e64743c 	mcrcc	4, 3, r7, cr4, cr12, {1}
 801cfa3:	74697b24 	strbtvc	r7, [r9], #-2852	@ 0xfffff4dc
 801cfa7:	732e6d65 			@ <UNDEFINED> instruction: 0x732e6d65
 801cfab:	75746174 	ldrbvc	r6, [r4, #-372]!	@ 0xfffffe8c
 801cfaf:	2f3c7d73 	svccs	0x003c7d73
 801cfb3:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 801cfb7:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 801cfbb:	297d0a60 	ldmdbcs	sp!, {r5, r6, r9, fp}^
 801cfbf:	6f640a3b 	svcvs	0x00640a3b
 801cfc3:	656d7563 	strbvs	r7, [sp, #-1379]!	@ 0xfffffa9d
 801cfc7:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801cfcb:	6c457465 	cfstrdvs	mvd7, [r5], {101}	@ 0x65
 801cfcf:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801cfd3:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801cfd7:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801cfdb:	67664364 	strbvs	r4, [r6, -r4, ror #6]!
 801cfdf:	692e2922 	stmdbvs	lr!, {r1, r5, r8, fp, sp}
 801cfe3:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801cfe7:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801cfeb:	6c0a683d 	stcvs	8, cr6, [sl], {61}	@ 0x3d
 801cfef:	74207465 	strtvc	r7, [r0], #-1125	@ 0xfffffb9b
 801cff3:	77613d72 			@ <UNDEFINED> instruction: 0x77613d72
 801cff7:	20746961 	rsbscs	r6, r4, r1, ror #18
 801cffb:	6d6f7250 	sfmvs	f7, 2, [pc, #-320]!	@ 801cec0 <time_js+0x180>
 801cfff:	2e657369 	cdpcs	3, 6, cr7, cr5, cr9, {3}
 801d003:	286c6c61 	stmdacs	ip!, {r0, r5, r6, sl, fp, sp, lr}^
 801d007:	7461640a 	strbtvc	r6, [r1], #-1034	@ 0xfffffbf6
 801d00b:	616d2e61 	cmnvs	sp, r1, ror #28
 801d00f:	74692870 	strbtvc	r2, [r9], #-2160	@ 0xfffff790
 801d013:	3d206d65 	stccc	13, cr6, [r0, #-404]!	@ 0xfffffe6c
 801d017:	6567203e 	strbvs	r2, [r7, #-62]!	@ 0xffffffc2
 801d01b:	4f534a74 	svcmi	0x00534a74
 801d01f:	7227284e 	eorvc	r2, r7, #5111808	@ 0x4e0000
 801d023:	742f6d64 	strtvc	r6, [pc], #-3428	@ 801d02b <rdm_js+0x164>
 801d027:	273f646f 	ldrcs	r6, [pc, -pc, ror #8]!
 801d02b:	69202b20 	stmdbvs	r0!, {r5, r8, r9, fp, sp}
 801d02f:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801d033:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801d037:	68742e29 	ldmdavs	r4!, {r0, r3, r5, r9, sl, fp, sp}^
 801d03b:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 801d03f:	6f707365 	svcvs	0x00707365
 801d043:	2065736e 	rsbcs	r7, r5, lr, ror #6
 801d047:	28203e3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 801d04b:	6f70207b 	svcvs	0x0070207b
 801d04f:	203a7472 	eorscs	r7, sl, r2, ror r4
 801d053:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801d057:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 801d05b:	74202c74 	strtvc	r2, [r0], #-3188	@ 0xfffff38c
 801d05f:	203a646f 	eorscs	r6, sl, pc, ror #8
 801d063:	70736572 	rsbsvc	r6, r3, r2, ror r5
 801d067:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 801d06b:	646f742e 	strbtvs	r7, [pc], #-1070	@ 801d073 <rdm_js+0x1ac>
 801d06f:	29297d20 	stmdbcs	r9!, {r5, r8, sl, fp, ip, sp, lr}
 801d073:	3b290a29 	blcc	8a5f91f <_sidata+0xa40757>
 801d077:	7972740a 	ldmdbvc	r2!, {r1, r3, sl, ip, sp, lr}^
 801d07b:	6c0a7b20 			@ <UNDEFINED> instruction: 0x6c0a7b20
 801d07f:	71207465 			@ <UNDEFINED> instruction: 0x71207465
 801d083:	6177613d 	cmnvs	r7, sp, lsr r1
 801d087:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801d08b:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801d08f:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801d093:	2f6d6472 	svccs	0x006d6472
 801d097:	75657571 	strbvc	r7, [r5, #-1393]!	@ 0xfffffa8f
 801d09b:	0a292765 	beq	8a66e37 <_sidata+0xa47c6f>
 801d09f:	27273d68 	strcs	r3, [r7, -r8, ror #26]!
 801d0a3:	2e710a3b 			@ <UNDEFINED> instruction: 0x2e710a3b
 801d0a7:	2e646975 			@ <UNDEFINED> instruction: 0x2e646975
 801d0ab:	45726f66 	ldrbmi	r6, [r2, #-3942]!	@ 0xfffff09a
 801d0af:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801d0b3:	20646975 	rsbcs	r6, r4, r5, ror r9
 801d0b7:	7b203e3d 	blvc	882c9b3 <_sidata+0x80d7eb>
 801d0bb:	3d2b680a 	stccc	8, cr6, [fp, #-40]!	@ 0xffffffd8
 801d0bf:	72743c60 	rsbsvc	r3, r4, #96, 24	@ 0x6000
 801d0c3:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801d0c7:	6c6f6320 	stclvs	3, cr6, [pc], #-128	@ 801d04c <rdm_js+0x185>
 801d0cb:	6e617073 	mcrvs	0, 3, r7, cr1, cr3, {3}
 801d0cf:	2233223d 	eorscs	r2, r3, #-805306365	@ 0xd0000003
 801d0d3:	757b243e 	ldrbvc	r2, [fp, #-1086]!	@ 0xfffffbc2
 801d0d7:	3c7d6469 	cfldrdcc	mvd6, [sp], #-420	@ 0xfffffe5c
 801d0db:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 801d0df:	72742f3c 	rsbsvc	r2, r4, #60, 30	@ 0xf0
 801d0e3:	7d0a603e 	stcvc	0, cr6, [sl, #-248]	@ 0xffffff08
 801d0e7:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 801d0eb:	74616320 	strbtvc	r6, [r1], #-800	@ 0xfffffce0
 801d0ef:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 801d0f3:	6f727265 	svcvs	0x00727265
 801d0f7:	687b2972 	ldmdavs	fp!, {r1, r4, r5, r6, r8, fp, sp}^
 801d0fb:	7d27273d 	stcvc	7, cr2, [r7, #-244]!	@ 0xffffff0c
 801d0ff:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 801d103:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801d107:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801d10b:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801d10f:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801d113:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801d117:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801d11b:	22657551 	rsbcs	r7, r5, #339738624	@ 0x14400000
 801d11f:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801d123:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 801d127:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	@ 0xfffffeb0
 801d12b:	72740a68 	rsbsvc	r0, r4, #104, 20	@ 0x68000
 801d12f:	726f732e 	rsbvc	r7, pc, #-1207959552	@ 0xb8000000
 801d133:	61282874 			@ <UNDEFINED> instruction: 0x61282874
 801d137:	2962202c 	stmdbcs	r2!, {r2, r3, r5, sp}^
 801d13b:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 801d13f:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 801d143:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 801d147:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801d14b:	69662e61 	stmdbvs	r6!, {r0, r5, r6, r9, sl, fp, sp}^
 801d14f:	6e49646e 	cdpvs	4, 4, cr6, cr9, cr14, {3}
 801d153:	28786564 	ldmdacs	r8!, {r2, r5, r6, r8, sl, sp, lr}^
 801d157:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801d15b:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 801d15f:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801d163:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 801d167:	3d3d2074 	ldccc	0, cr2, [sp, #-464]!	@ 0xfffffe30
 801d16b:	2e61203d 	mcrcs	0, 3, r2, cr1, cr13, {1}
 801d16f:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801d173:	202d2029 	eorcs	r2, sp, r9, lsr #32
 801d177:	61746164 	cmnvs	r4, r4, ror #2
 801d17b:	6e69662e 	cdpvs	6, 6, cr6, cr9, cr14, {1}
 801d17f:	646e4964 	strbtvs	r4, [lr], #-2404	@ 0xfffff69c
 801d183:	69287865 	stmdbvs	r8!, {r0, r2, r5, r6, fp, ip, sp, lr}
 801d187:	206d6574 	rsbcs	r6, sp, r4, ror r5
 801d18b:	69203e3d 	stmdbvs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 801d18f:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801d193:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801d197:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 801d19b:	702e6220 	eorvc	r6, lr, r0, lsr #4
 801d19f:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801d1a3:	297d0a3b 	ldmdbcs	sp!, {r0, r1, r3, r4, r5, r9, fp}^
 801d1a7:	656c0a3b 	strbvs	r0, [ip, #-2619]!	@ 0xfffff5c5
 801d1ab:	64682074 	strbtvs	r2, [r8], #-116	@ 0xffffff8c
 801d1af:	273d7372 			@ <UNDEFINED> instruction: 0x273d7372
 801d1b3:	3e72743c 	mrccc	4, 3, r7, cr2, cr12, {1}
 801d1b7:	656c0a27 	strbvs	r0, [ip, #-2599]!	@ 0xfffff5d9
 801d1bb:	64742074 	ldrbtvs	r2, [r4], #-116	@ 0xffffff8c
 801d1bf:	3c273d64 	stccc	13, cr3, [r7], #-400	@ 0xfffffe70
 801d1c3:	273e7274 			@ <UNDEFINED> instruction: 0x273e7274
 801d1c7:	2e72740a 	cdpcs	4, 7, cr7, cr2, cr10, {0}
 801d1cb:	45726f66 	ldrbmi	r6, [r2, #-3942]!	@ 0xfffff09a
 801d1cf:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801d1d3:	3e3d2072 	mrccc	0, 1, r2, cr13, cr2, {3}
 801d1d7:	680a7b20 	stmdavs	sl, {r5, r8, r9, fp, ip, sp, lr}
 801d1db:	2b737264 	blcs	9cf9b73 <_sidata+0x1cda9ab>
 801d1df:	743c603d 	ldrtvc	r6, [ip], #-61	@ 0xffffffc3
 801d1e3:	7b243e68 	blvc	892cb8b <_sidata+0x90d9c3>
 801d1e7:	6f702e72 	svcvs	0x00702e72
 801d1eb:	3c7d7472 	cfldrdcc	mvd7, [sp], #-456	@ 0xfffffe38
 801d1ef:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801d1f3:	740a3b60 	strvc	r3, [sl], #-2912	@ 0xfffff4a0
 801d1f7:	3d2b6464 	cfstrscc	mvf6, [fp, #-400]!	@ 0xfffffe70
 801d1fb:	64743c27 	ldrbtvs	r3, [r4], #-3111	@ 0xfffff3d9
 801d1ff:	0a3b273e 	beq	8ee6eff <_sidata+0xec7d37>
 801d203:	6f742e72 	svcvs	0x00742e72
 801d207:	6f662e64 	svcvs	0x00662e64
 801d20b:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 801d20f:	6f742868 	svcvs	0x00742868
 801d213:	3e3d2064 	cdpcc	0, 3, cr2, cr13, cr4, {3}
 801d217:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801d21b:	3d2b6464 	cfstrscc	mvf6, [fp, #-400]!	@ 0xfffffe70
 801d21f:	747b2460 	ldrbtvc	r2, [fp], #-1120	@ 0xfffffba0
 801d223:	3c7d646f 	cfldrdcc	mvd6, [sp], #-444	@ 0xfffffe44
 801d227:	3e2f7262 	cdpcc	2, 2, cr7, cr15, cr2, {3}
 801d22b:	297d0a60 	ldmdbcs	sp!, {r5, r6, r9, fp}^
 801d22f:	64740a3b 	ldrbtvs	r0, [r4], #-2619	@ 0xfffff5c5
 801d233:	273d2b64 	ldrcs	r2, [sp, -r4, ror #22]!
 801d237:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801d23b:	7d0a273e 	stcvc	7, cr2, [sl, #-248]	@ 0xffffff08
 801d23f:	680a3b29 	stmdavs	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801d243:	2b737264 	blcs	9cf9bdb <_sidata+0x1cdaa13>
 801d247:	2f3c273d 	svccs	0x003c273d
 801d24b:	273e7274 			@ <UNDEFINED> instruction: 0x273e7274
 801d24f:	6464740a 	strbtvs	r7, [r4], #-1034	@ 0xfffffbf6
 801d253:	3c273d2b 	stccc	13, cr3, [r7], #-172	@ 0xffffff54
 801d257:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 801d25b:	6f640a27 	svcvs	0x00640a27
 801d25f:	656d7563 	strbvs	r7, [sp, #-1379]!	@ 0xfffffa9d
 801d263:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801d267:	6c457465 	cfstrdvs	mvd7, [r5], {101}	@ 0x65
 801d26b:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801d26f:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801d273:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801d277:	73694464 	cmnvc	r9, #100, 8	@ 0x64000000
 801d27b:	692e2922 	stmdbvs	lr!, {r1, r5, r8, fp, sp}
 801d27f:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801d283:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801d287:	7264683d 	rsbvc	r6, r4, #3997696	@ 0x3d0000
 801d28b:	202b2073 	eorcs	r2, fp, r3, ror r0
 801d28f:	0a646474 	beq	9936467 <_sidata+0x191729f>
 801d293:	6163207d 	smcvs	12813	@ 0x320d
 801d297:	20686374 	rsbcs	r6, r8, r4, ror r3
 801d29b:	72726528 	rsbsvc	r6, r2, #40, 10	@ 0xa000000
 801d29f:	7b29726f 	blvc	8a79c63 <_sidata+0xa5aa9b>
 801d2a3:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

0801d2a7 <default_js>:
 801d2a7:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801d2ab:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801d2af:	73657220 	cmnvc	r5, #32, 4
 801d2b3:	73287465 			@ <UNDEFINED> instruction: 0x73287465
 801d2b7:	20296c65 	eorcs	r6, r9, r5, ror #24
 801d2bb:	61760a7b 	cmnvs	r6, fp, ror sl
 801d2bf:	20642072 	rsbcs	r2, r4, r2, ror r0
 801d2c3:	7d7b203d 	ldclvc	0, cr2, [fp, #-244]!	@ 0xffffff0c
 801d2c7:	61760a3b 	cmnvs	r6, fp, lsr sl
 801d2cb:	756f2072 	strbvc	r2, [pc, #-114]!	@ 801d261 <rdm_js+0x39a>
 801d2cf:	203d2074 	eorscs	r2, sp, r4, ror r0
 801d2d3:	0a3b7d7b 	beq	8efc8c7 <_sidata+0xedd6ff>
 801d2d7:	5b74756f 	blpl	9d3a89b <_sidata+0x1d1b6d3>
 801d2db:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 801d2df:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 801d2e3:	61760a3b 	cmnvs	r6, fp, lsr sl
 801d2e7:	61702072 	cmnvs	r0, r2, ror r0
 801d2eb:	616f6c79 	smcvs	63177	@ 0xf6c9
 801d2ef:	203d2064 	eorscs	r2, sp, r4, rrx
 801d2f3:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801d2f7:	7274732e 	rsbsvc	r7, r4, #-1207959552	@ 0xb8000000
 801d2fb:	69676e69 	stmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 801d2ff:	6f287966 	svcvs	0x00287966
 801d303:	3b297475 	blcc	8a7a4df <_sidata+0xa5b317>
 801d307:	7465660a 	strbtvc	r6, [r5], #-1546	@ 0xfffff9f6
 801d30b:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801d30f:	6f736a2f 	svcvs	0x00736a2f
 801d313:	202c276e 	eorcs	r2, ip, lr, ror #14
 801d317:	656d0a7b 	strbvs	r0, [sp, #-2683]!	@ 0xfffff585
 801d31b:	646f6874 	strbtvs	r6, [pc], #-2164	@ 801d323 <default_js+0x7c>
 801d31f:	5027203a 	eorpl	r2, r7, sl, lsr r0
 801d323:	2754534f 	ldrbcs	r5, [r4, -pc, asr #6]
 801d327:	65680a2c 	strbvs	r0, [r8, #-2604]!	@ 0xfffff5d4
 801d32b:	72656461 	rsbvc	r6, r5, #1627389952	@ 0x61000000
 801d32f:	7b203a73 	blvc	882bd03 <_sidata+0x80cb3b>
 801d333:	6f43270a 	svcvs	0x0043270a
 801d337:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801d33b:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 801d33f:	3a276570 	bcc	89f6907 <_sidata+0x9d773f>
 801d343:	70612720 	rsbvc	r2, r1, r0, lsr #14
 801d347:	63696c70 	cmnvs	r9, #112, 24	@ 0x7000
 801d34b:	6f697461 	svcvs	0x00697461
 801d34f:	736a2f6e 	cmnvc	sl, #440	@ 0x1b8
 801d353:	0a276e6f 	beq	89f8d17 <_sidata+0x9d9b4f>
 801d357:	620a2c7d 	andvs	r2, sl, #32000	@ 0x7d00
 801d35b:	3a79646f 	bcc	9e7651f <_sidata+0x1e57357>
 801d35f:	79617020 	stmdbvc	r1!, {r5, ip, sp, lr}^
 801d363:	64616f6c 	strbtvs	r6, [r1], #-3948	@ 0xfffff094
 801d367:	20297d0a 	eorcs	r7, r9, sl, lsl #26
 801d36b:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 801d36f:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 801d373:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 801d377:	3d206573 	cfstr32cc	mvfx6, [r0, #-460]!	@ 0xfffffe34
 801d37b:	697b203e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sp}^
 801d37f:	72282066 	eorvc	r2, r8, #102	@ 0x66
 801d383:	6f707365 	svcvs	0x00707365
 801d387:	2e65736e 	cdpcs	3, 6, cr7, cr5, cr14, {3}
 801d38b:	20296b6f 	eorcs	r6, r9, pc, ror #22
 801d38f:	6567207b 	strbvs	r2, [r7, #-123]!	@ 0xffffff85
 801d393:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801d397:	65732874 	ldrbvs	r2, [r3, #-2164]!	@ 0xfffff78c
 801d39b:	203b296c 	eorscs	r2, fp, ip, ror #18
 801d39f:	3b297d7d 	blcc	8a7c99b <_sidata+0xa5d7d3>
 801d3a3:	 	strvs	r7, [r0], -sl, lsl #26

0801d3a6 <date_js>:
 801d3a6:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801d3aa:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801d3ae:	726f6620 	rsbvc	r6, pc, #32, 12	@ 0x2000000
 801d3b2:	4474616d 	ldrbtmi	r6, [r4], #-365	@ 0xfffffe93
 801d3b6:	54657461 	strbtpl	r7, [r5], #-1121	@ 0xfffffb9f
 801d3ba:	28656d69 	stmdacs	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
 801d3be:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801d3c2:	0a7b2029 	beq	9ee546e <_sidata+0x1ec62a6>
 801d3c6:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801d3ca:	65792074 	ldrbvs	r2, [r9, #-116]!	@ 0xffffff8c
 801d3ce:	3d207261 	sfmcc	f7, 4, [r0, #-388]!	@ 0xfffffe7c
 801d3d2:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801d3d6:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801d3da:	6c754674 	ldclvs	6, cr4, [r5], #-464	@ 0xfffffe30
 801d3de:	6165596c 	cmnvs	r5, ip, ror #18
 801d3e2:	3b292872 	blcc	8a675b2 <_sidata+0xa483ea>
 801d3e6:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801d3ea:	6d207473 	cfstrsvs	mvf7, [r0, #-460]!	@ 0xfffffe34
 801d3ee:	3d206e6f 	stccc	14, cr6, [r0, #-444]!	@ 0xfffffe44
 801d3f2:	30272820 	eorcc	r2, r7, r0, lsr #16
 801d3f6:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801d3fa:	74616428 	strbtvc	r6, [r1], #-1064	@ 0xfffffbd8
 801d3fe:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801d402:	6e6f4d74 	mcrvs	13, 3, r4, cr15, cr4, {3}
 801d406:	29286874 	stmdbcs	r8!, {r2, r4, r5, r6, fp, sp, lr}
 801d40a:	31202b20 			@ <UNDEFINED> instruction: 0x31202b20
 801d40e:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 801d412:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801d416:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801d41a:	6f630a3b 	svcvs	0x00630a3b
 801d41e:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801d422:	20796164 	rsbscs	r6, r9, r4, ror #2
 801d426:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 801d42a:	2b202730 	blcs	88270f2 <_sidata+0x807f2a>
 801d42e:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801d432:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801d436:	74614474 	strbtvc	r4, [r1], #-1140	@ 0xfffffb8c
 801d43a:	29292865 	stmdbcs	r9!, {r0, r2, r5, r6, fp, sp}
 801d43e:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 801d442:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801d446:	0a3b2932 	beq	8ee7916 <_sidata+0xec874e>
 801d44a:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801d44e:	6f682074 	svcvs	0x00682074
 801d452:	3d207275 	sfmcc	f7, 4, [r0, #-468]!	@ 0xfffffe2c
 801d456:	30272820 	eorcc	r2, r7, r0, lsr #16
 801d45a:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801d45e:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801d462:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801d466:	72756f48 	rsbsvc	r6, r5, #72, 30	@ 0x120
 801d46a:	29292873 	stmdbcs	r9!, {r0, r1, r4, r5, r6, fp, sp}
 801d46e:	696c732e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, ip, sp, lr}^
 801d472:	2d286563 	cfstr32cs	mvfx6, [r8, #-396]!	@ 0xfffffe74
 801d476:	0a3b2932 	beq	8ee7946 <_sidata+0xec877e>
 801d47a:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801d47e:	696d2074 	stmdbvs	sp!, {r2, r4, r5, r6, sp}^
 801d482:	203d206e 	eorscs	r2, sp, lr, rrx
 801d486:	27302728 	ldrcs	r2, [r0, -r8, lsr #14]!
 801d48a:	64202b20 	strtvs	r2, [r0], #-2848	@ 0xfffff4e0
 801d48e:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
 801d492:	4d746567 	cfldr64mi	mvdx6, [r4, #-412]!	@ 0xfffffe64
 801d496:	74756e69 	ldrbtvc	r6, [r5], #-3689	@ 0xfffff197
 801d49a:	29287365 	stmdbcs	r8!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 801d49e:	6c732e29 	ldclvs	14, cr2, [r3], #-164	@ 0xffffff5c
 801d4a2:	28656369 	stmdacs	r5!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 801d4a6:	3b29322d 	blcc	8a69d62 <_sidata+0xa4ab9a>
 801d4aa:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801d4ae:	73207473 			@ <UNDEFINED> instruction: 0x73207473
 801d4b2:	3d206365 	stccc	3, cr6, [r0, #-404]!	@ 0xfffffe6c
 801d4b6:	30272820 	eorcc	r2, r7, r0, lsr #16
 801d4ba:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801d4be:	65746164 	ldrbvs	r6, [r4, #-356]!	@ 0xfffffe9c
 801d4c2:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801d4c6:	6f636553 	svcvs	0x00636553
 801d4ca:	2873646e 	ldmdacs	r3!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801d4ce:	732e2929 			@ <UNDEFINED> instruction: 0x732e2929
 801d4d2:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801d4d6:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801d4da:	6f630a3b 	svcvs	0x00630a3b
 801d4de:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801d4e2:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801d4e6:	3d207465 	cfstrscc	mvf7, [r0, #-404]!	@ 0xfffffe6c
 801d4ea:	74616420 	strbtvc	r6, [r1], #-1056	@ 0xfffffbe0
 801d4ee:	65672e65 	strbvs	r2, [r7, #-3685]!	@ 0xfffff19b
 801d4f2:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	@ 0xfffffe30
 801d4f6:	6e6f7a65 	vnmulvs.f32	s15, s30, s11
 801d4fa:	66664f65 	strbtvs	r4, [r6], -r5, ror #30
 801d4fe:	28746573 	ldmdacs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d502:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 801d506:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801d50a:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801d50e:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d512:	2072756f 	rsbscs	r7, r2, pc, ror #10
 801d516:	2728203d 			@ <UNDEFINED> instruction: 0x2728203d
 801d51a:	2b202730 	blcs	88271e2 <_sidata+0x80801a>
 801d51e:	74614d20 	strbtvc	r4, [r1], #-3360	@ 0xfffff2e0
 801d522:	6c662e68 	stclvs	14, cr2, [r6], #-416	@ 0xfffffe60
 801d526:	28726f6f 	ldmdacs	r2!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801d52a:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 801d52e:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801d532:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801d536:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d53a:	36202f20 	strtcc	r2, [r0], -r0, lsr #30
 801d53e:	2e292930 			@ <UNDEFINED> instruction: 0x2e292930
 801d542:	63696c73 	cmnvs	r9, #29440	@ 0x7300
 801d546:	322d2865 	eorcc	r2, sp, #6619136	@ 0x650000
 801d54a:	630a3b29 	movwvs	r3, #43817	@ 0xab29
 801d54e:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801d552:	66666f20 	strbtvs	r6, [r6], -r0, lsr #30
 801d556:	4d746573 	cfldr64mi	mvdx6, [r4, #-460]!	@ 0xfffffe34
 801d55a:	3d206e69 	stccc	14, cr6, [r0, #-420]!	@ 0xfffffe5c
 801d55e:	30272820 	eorcc	r2, r7, r0, lsr #16
 801d562:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801d566:	6874614d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sp, lr}^
 801d56a:	7362612e 	cmnvc	r2, #-2147483637	@ 0x8000000b
 801d56e:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801d572:	29746573 	ldmdbcs	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d576:	36202520 	strtcc	r2, [r0], -r0, lsr #10
 801d57a:	732e2930 			@ <UNDEFINED> instruction: 0x732e2930
 801d57e:	6563696c 	strbvs	r6, [r3, #-2412]!	@ 0xfffff694
 801d582:	29322d28 	ldmdbcs	r2!, {r3, r5, r8, sl, fp, sp}
 801d586:	6f630a3b 	svcvs	0x00630a3b
 801d58a:	2074736e 	rsbscs	r7, r4, lr, ror #6
 801d58e:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
 801d592:	6f203d20 	svcvs	0x00203d20
 801d596:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 801d59a:	3d3c2074 	ldccc	0, cr2, [ip, #-464]!	@ 0xfffffe30
 801d59e:	3f203020 	svccc	0x00203020
 801d5a2:	272b2720 	strcs	r2, [fp, -r0, lsr #14]!
 801d5a6:	27203a20 	strcs	r3, [r0, -r0, lsr #20]!
 801d5aa:	0a3b272d 	beq	8ee7266 <_sidata+0xec809e>
 801d5ae:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801d5b2:	66666f28 	strbtvs	r6, [r6], -r8, lsr #30
 801d5b6:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d5ba:	2072756f 	rsbscs	r7, r2, pc, ror #10
 801d5be:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 801d5c2:	26262029 	strtcs	r2, [r6], -r9, lsr #32
 801d5c6:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
 801d5ca:	74657366 	strbtvc	r7, [r5], #-870	@ 0xfffffc9a
 801d5ce:	206e694d 	rsbcs	r6, lr, sp, asr #18
 801d5d2:	30203d3d 	eorcc	r3, r0, sp, lsr sp
 801d5d6:	7b202929 	blvc	8827a82 <_sidata+0x8088ba>
 801d5da:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801d5de:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801d5e2:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 801d5e6:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 801d5ea:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 801d5ee:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801d5f2:	61647b24 	cmnvs	r4, r4, lsr #22
 801d5f6:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 801d5fa:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 801cd87 <time_js+0x47>
 801d5fe:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801d602:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 801d606:	7b243a7d 	blvc	892c002 <_sidata+0x90ce3a>
 801d60a:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801d60e:	203b605a 	eorscs	r6, fp, sl, asr r0
 801d612:	207d0a20 	rsbscs	r0, sp, r0, lsr #20
 801d616:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801d61a:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801d61e:	797b2460 	ldmdbvc	fp!, {r5, r6, sl, sp}^
 801d622:	7d726165 	ldfvce	f6, [r2, #-404]!	@ 0xfffffe6c
 801d626:	6d7b242d 	cfldrdvs	mvd2, [fp, #-180]!	@ 0xffffff4c
 801d62a:	2d7d6e6f 	ldclcs	14, cr6, [sp, #-444]!	@ 0xfffffe44
 801d62e:	61647b24 	cmnvs	r4, r4, lsr #22
 801d632:	24547d79 	ldrbcs	r7, [r4], #-3449	@ 0xfffff287
 801d636:	756f687b 	strbvc	r6, [pc, #-2171]!	@ 801cdc3 <time_js+0x83>
 801d63a:	243a7d72 	ldrtcs	r7, [sl], #-3442	@ 0xfffff28e
 801d63e:	6e696d7b 	mcrvs	13, 3, r6, cr9, cr11, {3}
 801d642:	7b243a7d 	blvc	892c03e <_sidata+0x90ce76>
 801d646:	7d636573 	cfstr64vc	mvdx6, [r3, #-460]!	@ 0xfffffe34
 801d64a:	69737b24 	ldmdbvs	r3!, {r2, r5, r8, r9, fp, ip, sp, lr}^
 801d64e:	247d6e67 	ldrbtcs	r6, [sp], #-3687	@ 0xfffff199
 801d652:	66666f7b 	uqsub16vs	r6, r6, fp
 801d656:	48746573 	ldmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d65a:	7d72756f 	cfldr64vc	mvdx7, [r2, #-444]!	@ 0xfffffe44
 801d65e:	6f7b243a 	svcvs	0x007b243a
 801d662:	65736666 	ldrbvs	r6, [r3, #-1638]!	@ 0xfffff99a
 801d666:	6e694d74 	mcrvs	13, 3, r4, cr9, cr4, {3}
 801d66a:	203b607d 	eorscs	r6, fp, sp, ror r0
 801d66e:	7d0a2020 	stcvc	0, cr2, [sl, #-128]	@ 0xffffff80
	...

0801d673 <index_js>:
 801d673:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801d677:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801d67b:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801d67f:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 801d683:	63657269 	cmnvs	r5, #-1879048186	@ 0x90000006
 801d687:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801d68b:	7b202928 	blvc	8827b33 <_sidata+0x80896b>
 801d68f:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801d693:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801d697:	61776120 	cmnvs	r7, r0, lsr #2
 801d69b:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801d69f:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801d6a3:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801d6a7:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801d6ab:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 801d6af:	0a292779 	beq	8a6749b <_sidata+0xa482d3>
 801d6b3:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801d6b7:	203d2068 	eorscs	r2, sp, r8, rrx
 801d6bb:	6c0a2222 	sfmvs	f2, 4, [sl], {34}	@ 0x22
 801d6bf:	66207465 	strtvs	r7, [r0], -r5, ror #8
 801d6c3:	4f203d20 	svcmi	0x00203d20
 801d6c7:	63656a62 	cmnvs	r5, #401408	@ 0x62000
 801d6cb:	656b2e74 	strbvs	r2, [fp, #-3700]!	@ 0xfffff18c
 801d6cf:	64287379 	strtvs	r7, [r8], #-889	@ 0xfffffc87
 801d6d3:	6966225b 	stmdbvs	r6!, {r0, r1, r3, r4, r6, r9, sp}^
 801d6d7:	2273656c 	rsbscs	r6, r3, #108, 10	@ 0x1b000000
 801d6db:	660a295d 			@ <UNDEFINED> instruction: 0x660a295d
 801d6df:	726f662e 	rsbvc	r6, pc, #48234496	@ 0x2e00000
 801d6e3:	68636145 	stmdavs	r3!, {r0, r2, r6, r8, sp, lr}^
 801d6e7:	6e756628 	cdpvs	6, 7, cr6, cr5, cr8, {1}
 801d6eb:	6f697463 	svcvs	0x00697463
 801d6ef:	656b286e 	strbvs	r2, [fp, #-2158]!	@ 0xfffff792
 801d6f3:	7b202979 	blvc	8827cdf <_sidata+0x808b17>
 801d6f7:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 801d6fb:	3d207620 	stccc	6, cr7, [r0, #-128]!	@ 0xffffff80
 801d6ff:	225b6420 	subscs	r6, fp, #32, 8	@ 0x20000000
 801d703:	656c6966 	strbvs	r6, [ip, #-2406]!	@ 0xfffff69a
 801d707:	5b5d2273 	blpl	97660db <_sidata+0x1746f13>
 801d70b:	5d79656b 	cfldr64pl	mvdx6, [r9, #-428]!	@ 0xfffffe54
 801d70f:	2b20680a 	blcs	883773f <_sidata+0x818577>
 801d713:	3c22203d 	stccc	0, cr2, [r2], #-244	@ 0xffffff0c
 801d717:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 801d71b:	76206e6f 	strtvc	r6, [r0], -pc, ror #28
 801d71f:	65756c61 	ldrbvs	r6, [r5, #-3169]!	@ 0xfffff39f
 801d723:	6b2b223d 	blvs	8ae601f <_sidata+0xac6e57>
 801d727:	222b7965 	eorcs	r7, fp, #1654784	@ 0x194000
 801d72b:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801d72f:	2f3c222b 	svccs	0x003c222b
 801d733:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 801d737:	223e6e6f 	eorscs	r6, lr, #1776	@ 0x6f0
 801d73b:	3b297d0a 	blcc	8a7cb6b <_sidata+0xa5d9a3>
 801d73f:	636f640a 	cmnvs	pc, #167772160	@ 0xa000000
 801d743:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801d747:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801d74b:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801d74f:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801d753:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801d757:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801d75b:	65726944 	ldrbvs	r6, [r2, #-2372]!	@ 0xfffff6bc
 801d75f:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
 801d763:	2e292279 	mcrcs	2, 1, r2, cr9, cr9, {3}
 801d767:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801d76b:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801d76f:	203d204c 	eorscs	r2, sp, ip, asr #32
 801d773:	65670a68 	strbvs	r0, [r7, #-2664]!	@ 0xfffff598
 801d777:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801d77b:	5b662874 	blpl	99a7953 <_sidata+0x198878b>
 801d77f:	0a295d30 	beq	8a74c47 <_sidata+0xa55a7f>
 801d783:	73610a7d 	cmnvc	r1, #512000	@ 0x7d000
 801d787:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801d78b:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801d78f:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801d793:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 801d797:	7478745f 	ldrbtvc	r7, [r8], #-1119	@ 0xfffffba1
 801d79b:	6c657328 	stclvs	3, cr7, [r5], #-160	@ 0xffffff60
 801d79f:	0a7b2029 	beq	9ee584b <_sidata+0x1ec6683>
 801d7a3:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801d7a7:	20747874 	rsbscs	r7, r4, r4, ror r8
 801d7ab:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801d7af:	20746961 	rsbscs	r6, r4, r1, ror #18
 801d7b3:	4a746567 	bmi	9d36d57 <_sidata+0x1d17b8f>
 801d7b7:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801d7bb:	296c6573 	stmdbcs	ip!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
 801d7bf:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801d7c3:	3d206820 	stccc	8, cr6, [r0, #-128]!	@ 0xffffff80
 801d7c7:	0a222220 	beq	88a604f <_sidata+0x886e87>
 801d7cb:	656a624f 	strbvs	r6, [sl, #-591]!	@ 0xfffffdb1
 801d7cf:	6b2e7463 	blvs	8bba963 <_sidata+0xb9b79b>
 801d7d3:	28737965 	ldmdacs	r3!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}^
 801d7d7:	5b747874 	blpl	9d3b9af <_sidata+0x1d1c7e7>
 801d7db:	5d6c6573 	cfstr64pl	mvdx6, [ip, #-460]!	@ 0xfffffe34
 801d7df:	6f662e29 	svcvs	0x00662e29
 801d7e3:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 801d7e7:	75662868 	strbvc	r2, [r6, #-2152]!	@ 0xfffff798
 801d7eb:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801d7ef:	6b286e6f 	blvs	8a391b3 <_sidata+0xa19feb>
 801d7f3:	20297965 	eorcs	r7, r9, r5, ror #18
 801d7f7:	61760a7b 	cmnvs	r6, fp, ror sl
 801d7fb:	20762072 	rsbscs	r2, r6, r2, ror r0
 801d7ff:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 801d803:	65735b74 	ldrbvs	r5, [r3, #-2932]!	@ 0xfffff48c
 801d807:	6b5b5d6c 	blvs	96f4dbf <_sidata+0x16d5bf7>
 801d80b:	0a5d7965 	beq	977bda7 <_sidata+0x175cbdf>
 801d80f:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 801d813:	743c2220 	ldrtvc	r2, [ip], #-544	@ 0xfffffde0
 801d817:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801d81b:	2b223e64 	blcs	88ad1b3 <_sidata+0x88dfeb>
 801d81f:	2b79656b 	blcs	9e76dd3 <_sidata+0x1e57c0b>
 801d823:	742f3c27 	strtvc	r3, [pc], #-3111	@ 801d82b <index_js+0x1b8>
 801d827:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801d82b:	693c3e64 	ldmdbvs	ip!, {r2, r5, r6, r9, sl, fp, ip, sp}
 801d82f:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 801d833:	70797420 	rsbsvc	r7, r9, r0, lsr #8
 801d837:	74223d65 	strtvc	r3, [r2], #-3429	@ 0xfffff29b
 801d83b:	22747865 	rsbscs	r7, r4, #6619136	@ 0x650000
 801d83f:	6c617620 	stclvs	6, cr7, [r1], #-128	@ 0xffffff80
 801d843:	223d6575 	eorscs	r6, sp, #490733568	@ 0x1d400000
 801d847:	2b762b27 	blcs	9da84eb <_sidata+0x1d89323>
 801d84b:	69202227 	stmdbvs	r0!, {r0, r1, r2, r5, r9, sp}
 801d84f:	27223d64 	strcs	r3, [r2, -r4, ror #26]!
 801d853:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801d857:	3e22272b 	cdpcc	7, 2, cr2, cr2, cr11, {1}
 801d85b:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801d85f:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801d867 <index_js+0x1f4>
 801d863:	0a273e72 	beq	89ed233 <_sidata+0x9ce06b>
 801d867:	0a3b297d 	beq	8ee7e63 <_sidata+0xec8c9b>
 801d86b:	3d2b2068 	stccc	0, cr2, [fp, #-416]!	@ 0xfffffe60
 801d86f:	743c2720 	ldrtvc	r2, [ip], #-1824	@ 0xfffff8e0
 801d873:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801d877:	6f632064 	svcvs	0x00632064
 801d87b:	6170736c 	cmnvs	r0, ip, ror #6
 801d87f:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 801d883:	623c3e22 	eorsvs	r3, ip, #544	@ 0x220
 801d887:	6f747475 	svcvs	0x00747475
 801d88b:	6e6f206e 	cdpvs	0, 6, cr2, cr15, cr14, {3}
 801d88f:	63696c63 	cmnvs	r9, #25344	@ 0x6300
 801d893:	73223d6b 			@ <UNDEFINED> instruction: 0x73223d6b
 801d897:	28657661 	stmdacs	r5!, {r0, r5, r6, r9, sl, ip, sp, lr}^
 801d89b:	2b27275c 	blcs	89e7613 <_sidata+0x9c844b>
 801d89f:	2b6c6573 	blcs	9b36e73 <_sidata+0x1b17cab>
 801d8a3:	29275c27 	stmdbcs	r7!, {r0, r1, r2, r5, sl, fp, ip, lr}
 801d8a7:	61533e22 	cmpvs	r3, r2, lsr #28
 801d8ab:	2f3c6576 	svccs	0x003c6576
 801d8af:	74747562 	ldrbtvc	r7, [r4], #-1378	@ 0xfffffa9e
 801d8b3:	273e6e6f 	ldrcs	r6, [lr, -pc, ror #28]!
 801d8b7:	20680a3b 	rsbcs	r0, r8, fp, lsr sl
 801d8bb:	27203d2b 	strcs	r3, [r0, -fp, lsr #26]!
 801d8bf:	7475623c 	ldrbtvc	r6, [r5], #-572	@ 0xfffffdc4
 801d8c3:	206e6f74 	rsbcs	r6, lr, r4, ror pc
 801d8c7:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801d8cb:	62223d73 	eorvs	r3, r2, #7360	@ 0x1cc0
 801d8cf:	20226e74 	eorcs	r6, r2, r4, ror lr
 801d8d3:	6c636e6f 	stclvs	14, cr6, [r3], #-444	@ 0xfffffe44
 801d8d7:	3d6b6369 	stclcc	3, cr6, [fp, #-420]!	@ 0xfffffe5c
 801d8db:	73657222 	cmnvc	r5, #536870914	@ 0x20000002
 801d8df:	5c287465 	cfstrspl	mvf7, [r8], #-404	@ 0xfffffe6c
 801d8e3:	732b2727 			@ <UNDEFINED> instruction: 0x732b2727
 801d8e7:	272b6c65 	strcs	r6, [fp, -r5, ror #24]!
 801d8eb:	2229275c 	eorcs	r2, r9, #92, 14	@ 0x1700000
 801d8ef:	6665443e 			@ <UNDEFINED> instruction: 0x6665443e
 801d8f3:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
 801d8f7:	622f3c73 	eorvs	r3, pc, #29440	@ 0x7300
 801d8fb:	6f747475 	svcvs	0x00747475
 801d8ff:	2f3c3e6e 	svccs	0x003c3e6e
 801d903:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 801d907:	3e72742f 	cdpcc	4, 7, cr7, cr2, cr15, {1}
 801d90b:	640a3b27 	strvs	r3, [sl], #-2855	@ 0xfffff4d9
 801d90f:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801d913:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801d917:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801d91b:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801d91f:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801d923:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801d927:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801d92b:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801d92f:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801d933:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801d937:	203d204c 	eorscs	r2, sp, ip, asr #32
 801d93b:	0a7d0a68 	beq	9f602e3 <_sidata+0x1f4111b>
 801d93f:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 801d943:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801d947:	76617320 	strbtvc	r7, [r1], -r0, lsr #6
 801d94b:	65732865 	ldrbvs	r2, [r3, #-2149]!	@ 0xfffff79b
 801d94f:	7b20296c 	blvc	8827f07 <_sidata+0x808d3f>
 801d953:	7261760a 	rsbvc	r7, r1, #10485760	@ 0xa00000
 801d957:	3d206420 	cfstrscc	mvf6, [r0, #-128]!	@ 0xffffff80
 801d95b:	0a7d7b20 	beq	9f7c5e3 <_sidata+0x1f5d41b>
 801d95f:	20726176 	rsbscs	r6, r2, r6, ror r1
 801d963:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801d967:	3d207374 	stccc	3, cr7, [r0, #-464]!	@ 0xfffffe30
 801d96b:	636f6420 	cmnvs	pc, #32, 8	@ 0x20000000
 801d96f:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801d973:	65672e74 	strbvs	r2, [r7, #-3700]!	@ 0xfffff18c
 801d977:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801d97b:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801d97f:	64497942 	strbvs	r7, [r9], #-2370	@ 0xfffff6be
 801d983:	64692228 	strbtvs	r2, [r9], #-552	@ 0xfffffdd8
 801d987:	22747854 	rsbscs	r7, r4, #84, 16	@ 0x540000
 801d98b:	65672e29 	strbvs	r2, [r7, #-3625]!	@ 0xfffff1d7
 801d98f:	656c4574 	strbvs	r4, [ip, #-1396]!	@ 0xfffffa8c
 801d993:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801d997:	54794273 	ldrbtpl	r4, [r9], #-627	@ 0xfffffd8d
 801d99b:	614e6761 	cmpvs	lr, r1, ror #14
 801d99f:	2228656d 	eorcs	r6, r8, #457179136	@ 0x1b400000
 801d9a3:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801d9a7:	0a292274 	beq	8a6637f <_sidata+0xa471b7>
 801d9ab:	20726f66 	rsbscs	r6, r2, r6, ror #30
 801d9af:	72617628 	rsbvc	r7, r1, #40, 12	@ 0x2800000
 801d9b3:	3d206920 			@ <UNDEFINED> instruction: 0x3d206920
 801d9b7:	203b3020 	eorscs	r3, fp, r0, lsr #32
 801d9bb:	203c2069 	eorscs	r2, ip, r9, rrx
 801d9bf:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
 801d9c3:	6c2e7374 	stcvs	3, cr7, [lr], #-464	@ 0xfffffe30
 801d9c7:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
 801d9cb:	69203b68 	stmdbvs	r0!, {r3, r5, r6, r8, r9, fp, ip, sp}
 801d9cf:	20292b2b 	eorcs	r2, r9, fp, lsr #22
 801d9d3:	61760a7b 	cmnvs	r6, fp, ror sl
 801d9d7:	206b2072 	rsbcs	r2, fp, r2, ror r0
 801d9db:	6e69203d 	mcrvs	0, 3, r2, cr9, cr13, {1}
 801d9df:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 801d9e3:	2e5d695b 			@ <UNDEFINED> instruction: 0x2e5d695b
 801d9e7:	760a6469 	strvc	r6, [sl], -r9, ror #8
 801d9eb:	76207261 	strtvc	r7, [r0], -r1, ror #4
 801d9ef:	69203d20 	stmdbvs	r0!, {r5, r8, sl, fp, ip, sp}
 801d9f3:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
 801d9f7:	5d695b73 	fstmdbxpl	r9!, {d21-d77}	@ Deprecated
 801d9fb:	6c61762e 	stclvs	6, cr7, [r1], #-184	@ 0xffffff48
 801d9ff:	640a6575 	strvs	r6, [sl], #-1397	@ 0xfffffa8b
 801da03:	205d6b5b 	subscs	r6, sp, fp, asr fp
 801da07:	0a76203d 	beq	9da5b03 <_sidata+0x1d8693b>
 801da0b:	61760a7d 	cmnvs	r6, sp, ror sl
 801da0f:	756f2072 	strbvc	r2, [pc, #-114]!	@ 801d9a5 <index_js+0x332>
 801da13:	203d2074 	eorscs	r2, sp, r4, ror r0
 801da17:	6f0a7d7b 	svcvs	0x000a7d7b
 801da1b:	735b7475 	cmpvc	fp, #1962934272	@ 0x75000000
 801da1f:	205d6c65 	subscs	r6, sp, r5, ror #24
 801da23:	0a64203d 	beq	9925b1f <_sidata+0x1906957>
 801da27:	20726176 	rsbscs	r6, r2, r6, ror r1
 801da2b:	6c796170 	ldfvse	f6, [r9], #-448	@ 0xfffffe40
 801da2f:	2064616f 	rsbcs	r6, r4, pc, ror #2
 801da33:	534a203d 	movtpl	r2, #41021	@ 0xa03d
 801da37:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 801da3b:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 801da3f:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 801da43:	74756f28 	ldrbtvc	r6, [r5], #-3880	@ 0xfffff0d8
 801da47:	65660a29 	strbvs	r0, [r6, #-2601]!	@ 0xfffff5d7
 801da4b:	28686374 	stmdacs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
 801da4f:	736a2f27 	cmnvc	sl, #39, 30	@ 0x9c
 801da53:	2c276e6f 	stccs	14, cr6, [r7], #-444	@ 0xfffffe44
 801da57:	6d0a7b20 	vstrvs	d7, [sl, #-128]	@ 0xffffff80
 801da5b:	6f687465 	svcvs	0x00687465
 801da5f:	27203a64 	strcs	r3, [r0, -r4, ror #20]!
 801da63:	54534f50 	ldrbpl	r4, [r3], #-3920	@ 0xfffff0b0
 801da67:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 801da6b:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 801da6f:	203a7372 	eorscs	r7, sl, r2, ror r3
 801da73:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 801da77:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801da7b:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 801da7f:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 801da83:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 801da87:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801da8b:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 801da8f:	6a2f6e6f 	bvs	8bf9453 <_sidata+0xbda28b>
 801da93:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 801da97:	0a2c7d0a 	beq	8b3cec7 <_sidata+0xb1dcff>
 801da9b:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801da9f:	6170203a 	cmnvs	r0, sl, lsr r0
 801daa3:	616f6c79 	smcvs	63177	@ 0xf6c9
 801daa7:	297d0a64 	ldmdbcs	sp!, {r2, r5, r6, r9, fp}^
 801daab:	68742e20 	ldmdavs	r4!, {r5, r9, sl, fp, sp}^
 801daaf:	72286e65 	eorvc	r6, r8, #1616	@ 0x650
 801dab3:	6f707365 	svcvs	0x00707365
 801dab7:	2065736e 	rsbcs	r7, r5, lr, ror #6
 801dabb:	7b203e3d 	blvc	882d3b7 <_sidata+0x80e1ef>
 801dabf:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801dac3:	70736572 	rsbsvc	r6, r3, r2, ror r5
 801dac7:	65736e6f 	ldrbvs	r6, [r3, #-3695]!	@ 0xfffff191
 801dacb:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 801dacf:	67207b20 	strvs	r7, [r0, -r0, lsr #22]!
 801dad3:	745f7465 	ldrbvc	r7, [pc], #-1125	@ 801dadb <index_js+0x468>
 801dad7:	73287478 			@ <UNDEFINED> instruction: 0x73287478
 801dadb:	3b296c65 	blcc	8a78c77 <_sidata+0xa59aaf>
 801dadf:	297d7d20 	ldmdbcs	sp!, {r5, r8, sl, fp, ip, sp, lr}^
 801dae3:	0a7d0a3b 	beq	9f603d7 <_sidata+0x1f4120f>
	...

0801dae8 <styles_css>:
 801dae8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801daec:	620a7b20 	andvs	r7, sl, #32, 22	@ 0x8000
 801daf0:	676b6361 	strbvs	r6, [fp, -r1, ror #6]!
 801daf4:	6e756f72 	mrcvs	15, 3, r6, cr5, cr2, {3}
 801daf8:	6f632d64 	svcvs	0x00632d64
 801dafc:	3a726f6c 	bcc	9cb98b4 <_sidata+0x1c9a6ec>
 801db00:	62677220 	rsbvs	r7, r7, #32, 4
 801db04:	2c303228 	lfmcs	f3, 4, [r0], #-160	@ 0xffffff60
 801db08:	322c3032 	eorcc	r3, ip, #50	@ 0x32
 801db0c:	0a3b2930 	beq	8ee7fd4 <_sidata+0xec8e0c>
 801db10:	6f6c6f63 	svcvs	0x006c6f63
 801db14:	72203a72 	eorvc	r3, r0, #466944	@ 0x72000
 801db18:	32286267 	eorcc	r6, r8, #1879048198	@ 0x70000006
 801db1c:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801db20:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	@ 0xffffff38
 801db24:	35353220 	ldrcc	r3, [r5, #-544]!	@ 0xfffffde0
 801db28:	7d0a3b29 	vstrvc	d3, [sl, #-164]	@ 0xffffff5c
 801db2c:	206c750a 	rsbcs	r7, ip, sl, lsl #10
 801db30:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801db34:	616c7073 	smcvs	50947	@ 0xc703
 801db38:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 801db3c:	3b78656c 	blcc	9e370f4 <_sidata+0x1e17f2c>
 801db40:	6c0a7d0a 	stcvs	13, cr7, [sl], {10}
 801db44:	0a7b2069 	beq	9ee5cf0 <_sidata+0x1ec6b28>
 801db48:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801db4c:	7974732d 	ldmdbvc	r4!, {r0, r2, r3, r5, r8, r9, ip, sp, lr}^
 801db50:	203a656c 	eorscs	r6, sl, ip, ror #10
 801db54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
 801db58:	616d0a3b 	cmnvs	sp, fp, lsr sl
 801db5c:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801db60:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 801db64:	70352078 	eorsvc	r2, r5, r8, ror r0
 801db68:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801db6c:	6165680a 	cmnvs	r5, sl, lsl #16
 801db70:	20726564 	rsbscs	r6, r2, r4, ror #10
 801db74:	69640a7b 	stmdbvs	r4!, {r0, r1, r3, r4, r5, r6, r9, fp}^
 801db78:	616c7073 	smcvs	50947	@ 0xc703
 801db7c:	66203a79 			@ <UNDEFINED> instruction: 0x66203a79
 801db80:	3b78656c 	blcc	9e37138 <_sidata+0x1e17f70>
 801db84:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801db88:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	@ 0xfffffe70
 801db8c:	69646172 	stmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 801db90:	203a7375 	eorscs	r7, sl, r5, ror r3
 801db94:	3b787034 	blcc	9e39c6c <_sidata+0x1e1aaa4>
 801db98:	726f620a 	rsbvc	r6, pc, #-1610612736	@ 0xa0000000
 801db9c:	3a726564 	bcc	9cb7134 <_sidata+0x1c97f6c>
 801dba0:	6c6f7320 	stclvs	3, cr7, [pc], #-128	@ 801db28 <styles_css+0x40>
 801dba4:	67206469 	strvs	r6, [r0, -r9, ror #8]!
 801dba8:	20796572 	rsbscs	r6, r9, r2, ror r5
 801dbac:	3b787031 	blcc	9e39c78 <_sidata+0x1e1aab0>
 801dbb0:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 801dbb4:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	@ 0xfffff091
 801dbb8:	0a7b2072 	beq	9ee5d88 <_sidata+0x1ec6bc0>
 801dbbc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801dbc0:	3a79616c 	bcc	9e76178 <_sidata+0x1e56fb0>
 801dbc4:	656c6620 	strbvs	r6, [ip, #-1568]!	@ 0xfffff9e0
 801dbc8:	6a0a3b78 	bvs	82ac9b0 <_sidata+0x28d7e8>
 801dbcc:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801dbd0:	632d7966 			@ <UNDEFINED> instruction: 0x632d7966
 801dbd4:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801dbd8:	203a746e 	eorscs	r7, sl, lr, ror #8
 801dbdc:	746e6563 	strbtvc	r6, [lr], #-1379	@ 0xfffffa9d
 801dbe0:	0a3b7265 	beq	8efa57c <_sidata+0xedb3b4>
 801dbe4:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801dbe8:	722d7265 	eorvc	r7, sp, #1342177286	@ 0x50000006
 801dbec:	75696461 	strbvc	r6, [r9, #-1121]!	@ 0xfffffb9f
 801dbf0:	34203a73 	strtcc	r3, [r0], #-2675	@ 0xfffff58d
 801dbf4:	0a3b7870 	beq	8efbdbc <_sidata+0xedcbf4>
 801dbf8:	64726f62 	ldrbtvs	r6, [r2], #-3938	@ 0xfffff09e
 801dbfc:	203a7265 	eorscs	r7, sl, r5, ror #4
 801dc00:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801dc04:	72672064 	rsbvc	r2, r7, #100	@ 0x64
 801dc08:	31207965 			@ <UNDEFINED> instruction: 0x31207965
 801dc0c:	0a3b7870 	beq	8efbdd4 <_sidata+0xedcc0c>
 801dc10:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 801dc14:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801dc18:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801dc1c:	6f737275 	svcvs	0x00737275
 801dc20:	70203a72 	eorvc	r3, r0, r2, ror sl
 801dc24:	746e696f 	strbtvc	r6, [lr], #-2415	@ 0xfffff691
 801dc28:	0a3b7265 	beq	8efa5c4 <_sidata+0xedb3fc>
 801dc2c:	75620a7d 	strbvc	r0, [r2, #-2685]!	@ 0xfffff583
 801dc30:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801dc34:	7463613a 	strbtvc	r6, [r3], #-314	@ 0xfffffec6
 801dc38:	20657669 	rsbcs	r7, r5, r9, ror #12
 801dc3c:	61620a7b 	smcvs	8363	@ 0x20ab
 801dc40:	72676b63 	rsbvc	r6, r7, #101376	@ 0x18c00
 801dc44:	646e756f 	strbtvs	r7, [lr], #-1391	@ 0xfffffa91
 801dc48:	6c6f632d 	stclvs	3, cr6, [pc], #-180	@ 801db9c <styles_css+0xb4>
 801dc4c:	203a726f 	eorscs	r7, sl, pc, ror #4
 801dc50:	30303023 	eorscc	r3, r0, r3, lsr #32
 801dc54:	6f630a3b 	svcvs	0x00630a3b
 801dc58:	3a726f6c 	bcc	9cb9a10 <_sidata+0x1c9a848>
 801dc5c:	66662320 	strbtvs	r2, [r6], -r0, lsr #6
 801dc60:	7d0a3b66 	vstrvc	d3, [sl, #-408]	@ 0xfffffe68
 801dc64:	74622e0a 	strbtvc	r2, [r2], #-3594	@ 0xfffff1f6
 801dc68:	0a7b206e 	beq	9ee5e28 <_sidata+0x1ec6c60>
 801dc6c:	6772616d 	ldrbvs	r6, [r2, -sp, ror #2]!
 801dc70:	6c2d6e69 	stcvs	14, cr6, [sp], #-420	@ 0xfffffe5c
 801dc74:	3a746665 	bcc	9d37610 <_sidata+0x1d18448>
 801dc78:	70303520 	eorsvc	r3, r0, r0, lsr #10
 801dc7c:	7d0a3b78 	vstrvc	d3, [sl, #-480]	@ 0xfffffe20
 801dc80:	 	cmnvc	r1, #10

0801dc82 <static_js>:
 801dc82:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801dc86:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801dc8a:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801dc8e:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801dc92:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801dc96:	6a284e4f 	bvs	8a315da <_sidata+0xa12412>
 801dc9a:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801dc9e:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801dca2:	7b207972 	blvc	883c272 <_sidata+0x81d0aa>
 801dca6:	6e6f630a 	cdpvs	3, 6, cr6, cr15, cr10, {0}
 801dcaa:	72207473 	eorvc	r7, r0, #1929379840	@ 0x73000000
 801dcae:	61203d20 			@ <UNDEFINED> instruction: 0x61203d20
 801dcb2:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 801dcb6:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801dcba:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801dcbe:	6f736a2f 	svcvs	0x00736a2f
 801dcc2:	2b272f6e 	blcs	89e9a82 <_sidata+0x9ca8ba>
 801dcc6:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801dcca:	66690a29 	strbtvs	r0, [r9], -r9, lsr #20
 801dcce:	72212820 	eorvc	r2, r1, #32, 16	@ 0x200000
 801dcd2:	296b6f2e 	stmdbcs	fp!, {r1, r2, r3, r5, r8, r9, sl, fp, sp, lr}^
 801dcd6:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801dcda:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
 801dcde:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
 801dce2:	72724520 	rsbsvc	r4, r2, #32, 10	@ 0x8000000
 801dce6:	2728726f 	strcs	r7, [r8, -pc, ror #4]!
 801dcea:	6f727245 	svcvs	0x00727245
 801dcee:	0a292772 	beq	8a67abe <_sidata+0xa488f6>
 801dcf2:	65720a7d 	ldrbvs	r0, [r2, #-2685]!	@ 0xfffff583
 801dcf6:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 801dcfa:	6a2e7220 	bvs	8bba582 <_sidata+0xb9b3ba>
 801dcfe:	286e6f73 	stmdacs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801dd02:	207d0a29 	rsbscs	r0, sp, r9, lsr #20
 801dd06:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 801dd0a:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 801dd0e:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 801dd12:	7d7b2029 	ldclvc	0, cr2, [fp, #-164]!	@ 0xffffff5c
 801dd16:	610a7d0a 	tstvs	sl, sl, lsl #26
 801dd1a:	636e7973 	cmnvs	lr, #1884160	@ 0x1cc000
 801dd1e:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 801dd22:	6f697463 	svcvs	0x00697463
 801dd26:	696c206e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, sp}^
 801dd2a:	29287473 	stmdbcs	r8!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801dd2e:	630a7b20 	movwvs	r7, #43808	@ 0xab20
 801dd32:	74736e6f 	ldrbtvc	r6, [r3], #-3695	@ 0xfffff191
 801dd36:	3d206c20 	stccc	12, cr6, [r0, #-128]!	@ 0xffffff80
 801dd3a:	61776120 	cmnvs	r7, r0, lsr #2
 801dd3e:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801dd42:	534a7465 	movtpl	r7, #42085	@ 0xa465
 801dd46:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801dd4a:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
 801dd4e:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 801dd52:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801dd56:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801dd5a:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801dd5e:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801dd62:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801dd66:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801dd6a:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801dd6e:	29227473 	stmdbcs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 801dd72:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801dd76:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801dd7a:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 801dd7e:	6c3c2220 	lfmvs	f2, 4, [ip], #-128	@ 0xffffff80
 801dd82:	2b223e69 	blcs	88ad72e <_sidata+0x88e566>
 801dd86:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 801dd8a:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801dd8e:	2b656d61 	blcs	997931a <_sidata+0x195a152>
 801dd92:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801dd10 <static_js+0x8e>
 801dd96:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 801dd9a:	2b223e69 	blcs	88ad746 <_sidata+0x88e57e>
 801dd9e:	696c2e6c 	stmdbvs	ip!, {r2, r3, r5, r6, r9, sl, fp, sp}^
 801dda2:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801dda6:	2e65646f 	cdpcs	4, 6, cr6, cr5, cr15, {3}
 801ddaa:	65707974 	ldrbvs	r7, [r0, #-2420]!	@ 0xfffff68c
 801ddae:	2f3c222b 	svccs	0x003c222b
 801ddb2:	3c3e696c 			@ <UNDEFINED> instruction: 0x3c3e696c
 801ddb6:	223e696c 	eorscs	r6, lr, #108, 18	@ 0x1b0000
 801ddba:	6c2e6c2b 	stcvs	12, cr6, [lr], #-172	@ 0xffffff54
 801ddbe:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801ddc2:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
 801ddc6:	726f702e 	rsbvc	r7, pc, #46	@ 0x2e
 801ddca:	79742e74 	ldmdbvc	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801ddce:	222b6570 	eorcs	r6, fp, #112, 10	@ 0x1c000000
 801ddd2:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801ddd6:	7d0a223e 	sfmvc	f2, 4, [sl, #-248]	@ 0xffffff08
 801ddda:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 801ddde:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801dde2:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 801dde6:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801ddea:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801ddee:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801ddf2:	0a7b2029 	beq	9ee5e9e <_sidata+0x1ec6cd6>
 801ddf6:	736e6f63 	cmnvc	lr, #396	@ 0x18c
 801ddfa:	20762074 	rsbscs	r2, r6, r4, ror r0
 801ddfe:	7761203d 			@ <UNDEFINED> instruction: 0x7761203d
 801de02:	20746961 	rsbscs	r6, r4, r1, ror #18
 801de06:	4a746567 	bmi	9d373aa <_sidata+0x1d181e2>
 801de0a:	284e4f53 	stmdacs	lr, {r0, r1, r4, r6, r8, r9, sl, fp, lr}^
 801de0e:	72657627 	rsbvc	r7, r5, #40894464	@ 0x2700000
 801de12:	6e6f6973 			@ <UNDEFINED> instruction: 0x6e6f6973
 801de16:	640a2927 	strvs	r2, [sl], #-2343	@ 0xfffff6d9
 801de1a:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801de1e:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801de22:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801de26:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801de2a:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801de2e:	22286449 	eorcs	r6, r8, #1224736768	@ 0x49000000
 801de32:	65566469 	ldrbvs	r6, [r6, #-1129]	@ 0xfffffb97
 801de36:	6f697372 	svcvs	0x00697372
 801de3a:	2e29226e 	cdpcs	2, 2, cr2, cr9, cr14, {3}
 801de3e:	656e6e69 	strbvs	r6, [lr, #-3689]!	@ 0xfffff197
 801de42:	4d544872 	ldclmi	8, cr4, [r4, #-456]	@ 0xfffffe38
 801de46:	203d204c 	eorscs	r2, sp, ip, asr #32
 801de4a:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 801de4e:	2b22563e 	blcs	88b374e <_sidata+0x894586>
 801de52:	65762e76 	ldrbvs	r2, [r6, #-3702]!	@ 0xfffff18a
 801de56:	6f697372 	svcvs	0x00697372
 801de5a:	3c222b6e 			@ <UNDEFINED> instruction: 0x3c222b6e
 801de5e:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 801de62:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 801de66:	2e762b22 	vaddcs.f64	d18, d6, d18
 801de6a:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
 801de6e:	61642e64 	cmnvs	r4, r4, ror #28
 801de72:	222b6574 	eorcs	r6, fp, #116, 10	@ 0x1d000000
 801de76:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801de7a:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801de7e:	762b223e 			@ <UNDEFINED> instruction: 0x762b223e
 801de82:	6975622e 	ldmdbvs	r5!, {r1, r2, r3, r5, r9, sp, lr}^
 801de86:	742e646c 	strtvc	r6, [lr], #-1132	@ 0xfffffb94
 801de8a:	2b656d69 	blcs	9979436 <_sidata+0x195a26e>
 801de8e:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801de0c <static_js+0x18a>
 801de92:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	@ 0xfffffe5c
 801de96:	2b223e69 	blcs	88ad842 <_sidata+0x88e67a>
 801de9a:	6f622e76 	svcvs	0x00622e76
 801de9e:	2b647261 	blcs	993a82a <_sidata+0x191b662>
 801dea2:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	@ 801de20 <static_js+0x19e>
 801dea6:	0a223e69 	beq	88ad852 <_sidata+0x88e68a>
 801deaa:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 801deae:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801deb2:	70206e6f 	eorvc	r6, r0, pc, ror #28
 801deb6:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801deba:	7b202973 	blvc	882848e <_sidata+0x8092c6>
 801debe:	7465720a 	strbtvc	r7, [r5], #-522	@ 0xfffffdf6
 801dec2:	206e7275 	rsbcs	r7, lr, r5, ror r2
 801dec6:	63746566 	cmnvs	r4, #427819008	@ 0x19800000
 801deca:	2f272868 	svccs	0x00272868
 801dece:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801ded2:	7463612f 	strbtvc	r6, [r3], #-303	@ 0xfffffed1
 801ded6:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 801deda:	0a7b202c 	beq	9ee5f92 <_sidata+0x1ec6dca>
 801dede:	6874656d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 801dee2:	203a646f 	eorscs	r6, sl, pc, ror #8
 801dee6:	534f5027 	movtpl	r5, #61479	@ 0xf027
 801deea:	0a2c2754 	beq	8b27c42 <_sidata+0xb08a7a>
 801deee:	64616568 	strbtvs	r6, [r1], #-1384	@ 0xfffffa98
 801def2:	3a737265 	bcc	9cfa88e <_sidata+0x1cdb6c6>
 801def6:	270a7b20 	strcs	r7, [sl, -r0, lsr #22]
 801defa:	746e6f43 	strbtvc	r6, [lr], #-3907	@ 0xfffff0bd
 801defe:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801df02:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 801df06:	27203a27 	strcs	r3, [r0, -r7, lsr #20]!
 801df0a:	6c707061 	ldclvs	0, cr7, [r0], #-388	@ 0xfffffe7c
 801df0e:	74616369 	strbtvc	r6, [r1], #-873	@ 0xfffffc97
 801df12:	2f6e6f69 	svccs	0x006e6f69
 801df16:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801df1a:	2c7d0a27 			@ <UNDEFINED> instruction: 0x2c7d0a27
 801df1e:	646f620a 	strbtvs	r6, [pc], #-522	@ 801df26 <static_js+0x2a4>
 801df22:	4a203a79 	bmi	882c90e <_sidata+0x80d746>
 801df26:	2e4e4f53 	mcrcs	15, 2, r4, cr14, cr3, {2}
 801df2a:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 801df2e:	6669676e 	strbtvs	r6, [r9], -lr, ror #14
 801df32:	29732879 	ldmdbcs	r3!, {r0, r3, r4, r5, r6, fp, sp}^
 801df36:	0a297d0a 	beq	8a7d366 <_sidata+0xa5e19e>
 801df3a:	75660a7d 	strbvc	r0, [r6, #-2685]!	@ 0xfffff583
 801df3e:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801df42:	64206e6f 	strtvs	r6, [r0], #-3695	@ 0xfffff191
 801df46:	74656c65 	strbtvc	r6, [r5], #-3173	@ 0xfffff39b
 801df4a:	20297328 	eorcs	r7, r9, r8, lsr #6
 801df4e:	65720a7b 	ldrbvs	r0, [r2, #-2683]!	@ 0xfffff585
 801df52:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 801df56:	74656620 	strbtvc	r6, [r5], #-1568	@ 0xfffff9e0
 801df5a:	27286863 	strcs	r6, [r8, -r3, ror #16]!
 801df5e:	6f736a2f 	svcvs	0x00736a2f
 801df62:	63612f6e 	cmnvs	r1, #440	@ 0x1b8
 801df66:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 801df6a:	7b202c27 	blvc	882900e <_sidata+0x809e46>
 801df6e:	74656d0a 	strbtvc	r6, [r5], #-3338	@ 0xfffff2f6
 801df72:	3a646f68 	bcc	9939d1a <_sidata+0x191ab52>
 801df76:	45442720 	strbmi	r2, [r4, #-1824]	@ 0xfffff8e0
 801df7a:	4554454c 	ldrbmi	r4, [r4, #-1356]	@ 0xfffffab4
 801df7e:	680a2c27 	stmdavs	sl, {r0, r1, r2, r5, sl, fp, sp}
 801df82:	65646165 	strbvs	r6, [r4, #-357]!	@ 0xfffffe9b
 801df86:	203a7372 	eorscs	r7, sl, r2, ror r3
 801df8a:	43270a7b 			@ <UNDEFINED> instruction: 0x43270a7b
 801df8e:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
 801df92:	542d746e 	strtpl	r7, [sp], #-1134	@ 0xfffffb92
 801df96:	27657079 			@ <UNDEFINED> instruction: 0x27657079
 801df9a:	6127203a 			@ <UNDEFINED> instruction: 0x6127203a
 801df9e:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 801dfa2:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 801dfa6:	6a2f6e6f 	bvs	8bf996a <_sidata+0xbda7a2>
 801dfaa:	276e6f73 			@ <UNDEFINED> instruction: 0x276e6f73
 801dfae:	0a2c7d0a 	beq	8b3d3de <_sidata+0xb1e216>
 801dfb2:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801dfb6:	534a203a 	movtpl	r2, #41018	@ 0xa03a
 801dfba:	732e4e4f 			@ <UNDEFINED> instruction: 0x732e4e4f
 801dfbe:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 801dfc2:	79666967 	stmdbvc	r6!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
 801dfc6:	0a297328 	beq	8a7ac6e <_sidata+0xa5baa6>
 801dfca:	7d0a297d 	vstrvc.16	s4, [sl, #-250]	@ 0xffffff06	@ <UNPREDICTABLE>
 801dfce:	6e75660a 	cdpvs	6, 7, cr6, cr5, cr10, {0}
 801dfd2:	6f697463 	svcvs	0x00697463
 801dfd6:	6572206e 	ldrbvs	r2, [r2, #-110]!	@ 0xffffff92
 801dfda:	746f6f62 	strbtvc	r6, [pc], #-3938	@ 801dfe2 <static_js+0x360>
 801dfde:	7b202928 	blvc	8828486 <_sidata+0x8092be>
 801dfe2:	736f700a 	cmnvc	pc, #10
 801dfe6:	207b2874 	rsbscs	r2, fp, r4, ror r8
 801dfea:	6f626572 	svcvs	0x00626572
 801dfee:	203a746f 	eorscs	r7, sl, pc, ror #8
 801dff2:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 801dff6:	660a7d0a 	strvs	r7, [sl], -sl, lsl #26
 801dffa:	74636e75 	strbtvc	r6, [r3], #-3701	@ 0xfffff18b
 801dffe:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801e002:	61636f6c 	cmnvs	r3, ip, ror #30
 801e006:	29286574 	stmdbcs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}
 801e00a:	760a7b20 	strvc	r7, [sl], -r0, lsr #22
 801e00e:	62207261 	eorvs	r7, r0, #268435462	@ 0x10000006
 801e012:	64203d20 	strtvs	r3, [r0], #-3360	@ 0xfffff2e0
 801e016:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	@ 0xfffffe44
 801e01a:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801e01e:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
 801e022:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
 801e026:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801e02a:	27286449 	strcs	r6, [r8, -r9, asr #8]!
 801e02e:	61636f6c 	cmnvs	r3, ip, ror #30
 801e032:	75426574 	strbvc	r6, [r2, #-1396]	@ 0xfffffa8c
 801e036:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
 801e03a:	0a3b2927 	beq	8ee84de <_sidata+0xec9316>
 801e03e:	28206669 	stmdacs	r0!, {r0, r3, r5, r6, r9, sl, sp, lr}
 801e042:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 801e046:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 801e04a:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801e04e:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 801e052:	736e6961 	cmnvc	lr, #1589248	@ 0x184000
 801e056:	6e692728 	cdpvs	7, 6, cr2, cr9, cr8, {1}
 801e05a:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801e05e:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 801e062:	0a7b2029 	beq	9ee610e <_sidata+0x1ec6f46>
 801e066:	6c632e62 	stclvs	14, cr2, [r3], #-392	@ 0xfffffe78
 801e06a:	4c737361 	ldclmi	3, cr7, [r3], #-388	@ 0xfffffe7c
 801e06e:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
 801e072:	6f6d6572 	svcvs	0x006d6572
 801e076:	27286576 			@ <UNDEFINED> instruction: 0x27286576
 801e07a:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801e07e:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801e082:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801e086:	616c632e 	cmnvs	ip, lr, lsr #6
 801e08a:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 801e08e:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 801e092:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 801e096:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801e09a:	29276576 	stmdbcs	r7!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 801e09e:	692e620a 	stmdbvs	lr!, {r1, r3, r9, sp, lr}
 801e0a2:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801e0a6:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801e0aa:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
 801e0ae:	61636f4c 	cmnvs	r3, ip, asr #30
 801e0b2:	4f206574 	svcmi	0x00206574
 801e0b6:	700a276e 	andvc	r2, sl, lr, ror #14
 801e0ba:	2874736f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 801e0be:	6469207b 	strbtvs	r2, [r9], #-123	@ 0xffffff85
 801e0c2:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 801e0c6:	203a7966 	eorscs	r7, sl, r6, ror #18
 801e0ca:	297d2031 	ldmdbcs	sp!, {r0, r4, r5, sp}^
 801e0ce:	65207d0a 	strvs	r7, [r0, #-3338]!	@ 0xfffff2f6
 801e0d2:	2065736c 	rsbcs	r7, r5, ip, ror #6
 801e0d6:	2e620a7b 			@ <UNDEFINED> instruction: 0x2e620a7b
 801e0da:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801e0de:	73694c73 	cmnvc	r9, #29440	@ 0x7300
 801e0e2:	65722e74 	ldrbvs	r2, [r2, #-3700]!	@ 0xfffff18c
 801e0e6:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
 801e0ea:	63612728 	cmnvs	r1, #40, 14	@ 0xa00000
 801e0ee:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801e0f2:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801e0f6:	616c632e 	cmnvs	ip, lr, lsr #6
 801e0fa:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
 801e0fe:	612e7473 			@ <UNDEFINED> instruction: 0x612e7473
 801e102:	27286464 	strcs	r6, [r8, -r4, ror #8]!
 801e106:	63616e69 	cmnvs	r1, #1680	@ 0x690
 801e10a:	65766974 	ldrbvs	r6, [r6, #-2420]!	@ 0xfffff68c
 801e10e:	620a2927 	andvs	r2, sl, #638976	@ 0x9c000
 801e112:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801e116:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801e11a:	3d204c4d 	stccc	12, cr4, [r0, #-308]!	@ 0xfffffecc
 801e11e:	6f4c2720 	svcvs	0x004c2720
 801e122:	65746163 	ldrbvs	r6, [r4, #-355]!	@ 0xfffffe9d
 801e126:	66664f20 	strbtvs	r4, [r6], -r0, lsr #30
 801e12a:	6f700a27 	svcvs	0x00700a27
 801e12e:	7b287473 	blvc	8a3b302 <_sidata+0xa1c13a>
 801e132:	65646920 	strbvs	r6, [r4, #-2336]!	@ 0xfffff6e0
 801e136:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
 801e13a:	30203a79 	eorcc	r3, r0, r9, ror sl
 801e13e:	0a297d20 	beq	8a7d5c6 <_sidata+0xa5e3fe>
 801e142:	007d0a7d 	rsbseq	r0, sp, sp, ror sl

0801e146 <dmx_js>:
 801e146:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801e14a:	75662063 	strbvc	r2, [r6, #-99]!	@ 0xffffff9d
 801e14e:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801e152:	72206e6f 	eorvc	r6, r0, #1776	@ 0x6f0
 801e156:	65726665 	ldrbvs	r6, [r2, #-1637]!	@ 0xfffff99b
 801e15a:	29286873 	stmdbcs	r8!, {r0, r1, r4, r5, r6, fp, sp, lr}
 801e15e:	740a7b20 	strvc	r7, [sl], #-2848	@ 0xfffff4e0
 801e162:	7b207972 	blvc	883c732 <_sidata+0x81d56a>
 801e166:	74656c0a 	strbtvc	r6, [r5], #-3082	@ 0xfffff3f6
 801e16a:	613d6420 	teqvs	sp, r0, lsr #8
 801e16e:	74696177 	strbtvc	r6, [r9], #-375	@ 0xfffffe89
 801e172:	74656720 	strbtvc	r6, [r5], #-1824	@ 0xfffff8e0
 801e176:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801e17a:	6d642728 	stclvs	7, cr2, [r4, #-160]!	@ 0xffffff60
 801e17e:	6f702f78 	svcvs	0x00702f78
 801e182:	74737472 	ldrbtvc	r7, [r3], #-1138	@ 0xfffffb8e
 801e186:	73757461 	cmnvc	r5, #1627389952	@ 0x61000000
 801e18a:	6c0a2927 			@ <UNDEFINED> instruction: 0x6c0a2927
 801e18e:	68207465 	stmdavs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
 801e192:	3d737264 	lfmcc	f7, 2, [r3, #-400]!	@ 0xfffffe70
 801e196:	72743c27 	rsbsvc	r3, r4, #9984	@ 0x2700
 801e19a:	6c0a273e 	stcvs	7, cr2, [sl], {62}	@ 0x3e
 801e19e:	74207465 	strtvc	r7, [r0], #-1125	@ 0xfffffb9b
 801e1a2:	273d6464 	ldrcs	r6, [sp, -r4, ror #8]!
 801e1a6:	3e72743c 	mrccc	4, 3, r7, cr2, cr12, {1}
 801e1aa:	2e640a27 	vmulcs.f32	s1, s8, s15
 801e1ae:	45726f66 	ldrbmi	r6, [r2, #-3942]!	@ 0xfffff09a
 801e1b2:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801e1b6:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801e1ba:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 801e1be:	64680a7b 	strbtvs	r0, [r8], #-2683	@ 0xfffff585
 801e1c2:	3d2b7372 	stccc	3, cr7, [fp, #-456]!	@ 0xfffffe38
 801e1c6:	68743c60 	ldmdavs	r4!, {r5, r6, sl, fp, ip, sp}^
 801e1ca:	697b243e 	ldmdbvs	fp!, {r1, r2, r3, r4, r5, sl, sp}^
 801e1ce:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801e1d2:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801e1d6:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801e1de <dmx_js+0x98>
 801e1da:	0a603e68 	beq	982db82 <_sidata+0x180e9ba>
 801e1de:	2b646474 	blcs	99373b6 <_sidata+0x19181ee>
 801e1e2:	743c603d 	ldrtvc	r6, [ip], #-61	@ 0xffffffc3
 801e1e6:	7b243e64 	blvc	892db7e <_sidata+0x90e9b6>
 801e1ea:	6d657469 	cfstrdvs	mvd7, [r5, #-420]!	@ 0xfffffe5c
 801e1ee:	7269642e 	rsbvc	r6, r9, #771751936	@ 0x2e000000
 801e1f2:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801e1f6:	3c7d6e6f 	ldclcc	14, cr6, [sp], #-444	@ 0xfffffe44
 801e1fa:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 801e1fe:	297d0a60 	ldmdbcs	sp!, {r5, r6, r9, fp}^
 801e202:	6f640a3b 	svcvs	0x00640a3b
 801e206:	656d7563 	strbvs	r7, [sp, #-1379]!	@ 0xfffffa9d
 801e20a:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801e20e:	6c457465 	cfstrdvs	mvd7, [r5], {101}	@ 0x65
 801e212:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801e216:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801e21a:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801e21e:	61745364 	cmnvs	r4, r4, ror #6
 801e222:	29227374 	stmdbcs	r2!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
 801e226:	6e6e692e 	vmulvs.f16	s13, s28, s29	@ <UNPREDICTABLE>
 801e22a:	54487265 	strbpl	r7, [r8], #-613	@ 0xfffffd9b
 801e22e:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 801e232:	2b737264 	blcs	9cfabca <_sidata+0x1cdba02>
 801e236:	742f3c27 	strtvc	r3, [pc], #-3111	@ 801e23e <dmx_js+0xf8>
 801e23a:	2b273e72 	blcs	89edc0a <_sidata+0x9cea42>
 801e23e:	2b646474 	blcs	9937416 <_sidata+0x191824e>
 801e242:	742f3c27 	strtvc	r3, [pc], #-3111	@ 801e24a <dmx_js+0x104>
 801e246:	0a273e72 	beq	89edc16 <_sidata+0x9cea4e>
 801e24a:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801e24e:	3d207274 	sfmcc	f7, 4, [r0, #-464]!	@ 0xfffffe30
 801e252:	61776120 	cmnvs	r7, r0, lsr #2
 801e256:	50207469 	eorpl	r7, r0, r9, ror #8
 801e25a:	696d6f72 	stmdbvs	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801e25e:	612e6573 			@ <UNDEFINED> instruction: 0x612e6573
 801e262:	0a286c6c 	beq	8a3941a <_sidata+0xa1a252>
 801e266:	616d2e64 	cmnvs	sp, r4, ror #28
 801e26a:	74692870 	strbtvc	r2, [r9], #-2160	@ 0xfffff790
 801e26e:	3d206d65 	stccc	13, cr6, [r0, #-404]!	@ 0xfffffe6c
 801e272:	6567203e 	strbvs	r2, [r7, #-62]!	@ 0xffffffc2
 801e276:	4f534a74 	svcmi	0x00534a74
 801e27a:	6427284e 	strtvs	r2, [r7], #-2126	@ 0xfffff7b2
 801e27e:	732f786d 			@ <UNDEFINED> instruction: 0x732f786d
 801e282:	75746174 	ldrbvc	r6, [r4, #-372]!	@ 0xfffffe8c
 801e286:	20273f73 	eorcs	r3, r7, r3, ror pc
 801e28a:	7469202b 	strbtvc	r2, [r9], #-43	@ 0xffffffd5
 801e28e:	702e6d65 	eorvc	r6, lr, r5, ror #26
 801e292:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801e296:	6568742e 	strbvs	r7, [r8, #-1070]!	@ 0xfffffbd2
 801e29a:	6572286e 	ldrbvs	r2, [r2, #-2158]!	@ 0xfffff792
 801e29e:	3d207073 	stccc	0, cr7, [r0, #-460]!	@ 0xfffffe34
 801e2a2:	7b28203e 	blvc	8a263a2 <_sidata+0xa071da>
 801e2a6:	726f700a 	rsbvc	r7, pc, #10
 801e2aa:	69203a74 	stmdbvs	r0!, {r2, r4, r5, r6, r9, fp, ip, sp}
 801e2ae:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801e2b2:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801e2b6:	3a640a2c 	bcc	9920b6e <_sidata+0x19019a6>
 801e2ba:	73207b20 			@ <UNDEFINED> instruction: 0x73207b20
 801e2be:	3a746e65 	bcc	9d39c5a <_sidata+0x1d1aa92>
 801e2c2:	73657220 	cmnvc	r5, #32, 4
 801e2c6:	6d642e70 	stclvs	14, cr2, [r4, #-448]!	@ 0xfffffe40
 801e2ca:	65732e78 	ldrbvs	r2, [r3, #-3704]!	@ 0xfffff188
 801e2ce:	202c746e 	eorcs	r7, ip, lr, ror #8
 801e2d2:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801e2d6:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801e2da:	6572203a 	ldrbvs	r2, [r2, #-58]!	@ 0xffffffc6
 801e2de:	642e7073 	strtvs	r7, [lr], #-115	@ 0xffffff8d
 801e2e2:	722e786d 	eorvc	r7, lr, #7143424	@ 0x6d0000
 801e2e6:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801e2ea:	20646576 	rsbcs	r6, r4, r6, ror r5
 801e2ee:	720a2c7d 	andvc	r2, sl, #32000	@ 0x7d00
 801e2f2:	0a7b203a 	beq	9ee63e2 <_sidata+0x1ec721a>
 801e2f6:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 801e2fa:	207b203a 	rsbscs	r2, fp, sl, lsr r0
 801e2fe:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801e302:	72203a73 	eorvc	r3, r0, #471040	@ 0x73000
 801e306:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 801e30a:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801e30e:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 801e312:	616c632e 	cmnvs	ip, lr, lsr #6
 801e316:	202c7373 	eorcs	r7, ip, r3, ror r3
 801e31a:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 801e31e:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 801e322:	72203a79 	eorvc	r3, r0, #495616	@ 0x79000
 801e326:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 801e32a:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801e32e:	746e6573 	strbtvc	r6, [lr], #-1395	@ 0xfffffa8d
 801e332:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 801e336:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801e33a:	7d207972 			@ <UNDEFINED> instruction: 0x7d207972
 801e33e:	65720a2c 	ldrbvs	r0, [r2, #-2604]!	@ 0xfffff5d4
 801e342:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 801e346:	203a6465 	eorscs	r6, sl, r5, ror #8
 801e34a:	6f67207b 	svcvs	0x0067207b
 801e34e:	203a646f 	eorscs	r6, sl, pc, ror #8
 801e352:	70736572 	rsbsvc	r6, r3, r2, ror r5
 801e356:	6d64722e 	sfmvs	f7, 2, [r4, #-184]!	@ 0xffffff48
 801e35a:	6365722e 	cmnvs	r5, #-536870910	@ 0xe0000002
 801e35e:	65766965 	ldrbvs	r6, [r6, #-2405]!	@ 0xfffff69b
 801e362:	6f672e64 	svcvs	0x00672e64
 801e366:	202c646f 	eorcs	r6, ip, pc, ror #8
 801e36a:	3a646162 	bcc	99368fa <_sidata+0x1917732>
 801e36e:	73657220 	cmnvc	r5, #32, 4
 801e372:	64722e70 	ldrbtvs	r2, [r2], #-3696	@ 0xfffff190
 801e376:	65722e6d 	ldrbvs	r2, [r2, #-3693]!	@ 0xfffff193
 801e37a:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 801e37e:	622e6465 	eorvs	r6, lr, #1694498816	@ 0x65000000
 801e382:	202c6461 	eorcs	r6, ip, r1, ror #8
 801e386:	63736964 	cmnvs	r3, #100, 18	@ 0x190000
 801e38a:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 801e38e:	72203a79 	eorvc	r3, r0, #495616	@ 0x79000
 801e392:	2e707365 	cdpcs	3, 7, cr7, cr0, cr5, {3}
 801e396:	2e6d6472 	mcrcs	4, 3, r6, cr13, cr2, {3}
 801e39a:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801e39e:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801e3a2:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 801e3a6:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801e3aa:	7d0a7972 	vstrvc.16	s14, [sl, #-228]	@ 0xffffff1c	@ <UNPREDICTABLE>
 801e3ae:	29297d7d 	stmdbcs	r9!, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr}
 801e3b2:	0a3b2929 	beq	8ee885e <_sidata+0xec9696>
 801e3b6:	732e7274 			@ <UNDEFINED> instruction: 0x732e7274
 801e3ba:	2874726f 	ldmdacs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801e3be:	202c6128 	eorcs	r6, ip, r8, lsr #2
 801e3c2:	3d202962 			@ <UNDEFINED> instruction: 0x3d202962
 801e3c6:	0a7b203e 	beq	9ee64c6 <_sidata+0x1ec72fe>
 801e3ca:	75746572 	ldrbvc	r6, [r4, #-1394]!	@ 0xfffffa8e
 801e3ce:	64206e72 	strtvs	r6, [r0], #-3698	@ 0xfffff18e
 801e3d2:	6e69662e 	cdpvs	6, 6, cr6, cr9, cr14, {1}
 801e3d6:	646e4964 	strbtvs	r4, [lr], #-2404	@ 0xfffff69c
 801e3da:	69287865 	stmdbvs	r8!, {r0, r2, r5, r6, fp, ip, sp, lr}
 801e3de:	206d6574 	rsbcs	r6, sp, r4, ror r5
 801e3e2:	69203e3d 	stmdbvs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 801e3e6:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801e3ea:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801e3ee:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 801e3f2:	702e6120 	eorvc	r6, lr, r0, lsr #2
 801e3f6:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801e3fa:	64202d20 	strtvs	r2, [r0], #-3360	@ 0xfffff2e0
 801e3fe:	6e69662e 	cdpvs	6, 6, cr6, cr9, cr14, {1}
 801e402:	646e4964 	strbtvs	r4, [lr], #-2404	@ 0xfffff69c
 801e406:	69287865 	stmdbvs	r8!, {r0, r2, r5, r6, fp, ip, sp, lr}
 801e40a:	206d6574 	rsbcs	r6, sp, r4, ror r5
 801e40e:	69203e3d 	stmdbvs	r0!, {r0, r2, r3, r4, r5, r9, sl, fp, ip, sp}
 801e412:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
 801e416:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801e41a:	3d3d3d20 	ldccc	13, cr3, [sp, #-128]!	@ 0xffffff80
 801e41e:	702e6220 	eorvc	r6, lr, r0, lsr #4
 801e422:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801e426:	3b297d0a 	blcc	8a7d856 <_sidata+0xa5e68e>
 801e42a:	7264680a 	rsbvc	r6, r4, #655360	@ 0xa0000
 801e42e:	3c273d73 	stccc	13, cr3, [r7], #-460	@ 0xfffffe34
 801e432:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	@ 0xfffffe30
 801e436:	72206874 	eorvc	r6, r0, #116, 16	@ 0x740000
 801e43a:	7073776f 	rsbsvc	r7, r3, pc, ror #14
 801e43e:	223d6e61 	eorscs	r6, sp, #1552	@ 0x610
 801e442:	503e2233 	eorspl	r2, lr, r3, lsr r2
 801e446:	3c74726f 	lfmcc	f7, 2, [r4], #-444	@ 0xfffffe44
 801e44a:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801e44e:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 801e452:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 801e456:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 801e45a:	3e223222 	cdpcc	2, 2, cr3, cr2, cr2, {1}
 801e45e:	3c584d44 	mrrccc	13, 4, r4, r8, cr4
 801e462:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801e466:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 801e46a:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 801e46e:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 801e472:	3e223522 	cfsh64cc	mvdx3, mvdx2, #18
 801e476:	3c4d4452 	cfstrdcc	mvd4, [sp], {82}	@ 0x52
 801e47a:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801e47e:	72742f3c 	rsbsvc	r2, r4, #60, 30	@ 0xf0
 801e482:	72743c3e 	rsbsvc	r3, r4, #15872	@ 0x3e00
 801e486:	68743c3e 	ldmdavs	r4!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801e48a:	776f7220 	strbvc	r7, [pc, -r0, lsr #4]!
 801e48e:	6e617073 	mcrvs	0, 3, r7, cr1, cr3, {3}
 801e492:	2232223d 	eorscs	r2, r2, #-805306365	@ 0xd0000003
 801e496:	6e65533e 	mcrvs	3, 3, r5, cr5, cr14, {1}
 801e49a:	742f3c74 	strtvc	r3, [pc], #-3188	@ 801e4a2 <dmx_js+0x35c>
 801e49e:	743c3e68 	ldrtvc	r3, [ip], #-3688	@ 0xfffff198
 801e4a2:	6f722068 	svcvs	0x00722068
 801e4a6:	61707377 	cmnvs	r0, r7, ror r3
 801e4aa:	32223d6e 	eorcc	r3, r2, #7040	@ 0x1b80
 801e4ae:	65523e22 	ldrbvs	r3, [r2, #-3618]	@ 0xfffff1de
 801e4b2:	76696563 	strbtvc	r6, [r9], -r3, ror #10
 801e4b6:	2f3c6465 	svccs	0x003c6465
 801e4ba:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801e4be:	63206874 			@ <UNDEFINED> instruction: 0x63206874
 801e4c2:	70736c6f 	rsbsvc	r6, r3, pc, ror #24
 801e4c6:	223d6e61 	eorscs	r6, sp, #1552	@ 0x610
 801e4ca:	533e2232 	teqpl	lr, #536870915	@ 0x20000003
 801e4ce:	3c746e65 	ldclcc	14, cr6, [r4], #-404	@ 0xfffffe6c
 801e4d2:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801e4d6:	2068743c 	rsbcs	r7, r8, ip, lsr r4
 801e4da:	736c6f63 	cmnvc	ip, #396	@ 0x18c
 801e4de:	3d6e6170 	stfcce	f6, [lr, #-448]!	@ 0xfffffe40
 801e4e2:	3e223322 	cdpcc	3, 2, cr3, cr2, cr2, {1}
 801e4e6:	65636552 	strbvs	r6, [r3, #-1362]!	@ 0xfffffaae
 801e4ea:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801e4ee:	68742f3c 	ldmdavs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801e4f2:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801e4fa <dmx_js+0x3b4>
 801e4f6:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801e4fa:	743c3e72 	ldrtvc	r3, [ip], #-3698	@ 0xfffff18e
 801e4fe:	6c433e68 	mcrrvs	14, 6, r3, r3, cr8
 801e502:	3c737361 	ldclcc	3, cr7, [r3], #-388	@ 0xfffffe7c
 801e506:	3e68742f 	cdpcc	4, 6, cr7, cr8, cr15, {1}
 801e50a:	3e68743c 	mcrcc	4, 3, r7, cr8, cr12, {1}
 801e50e:	63736944 	cmnvs	r3, #68, 18	@ 0x110000
 801e512:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
 801e516:	742f3c79 	strtvc	r3, [pc], #-3193	@ 801e51e <dmx_js+0x3d8>
 801e51a:	743c3e68 	ldrtvc	r3, [ip], #-3688	@ 0xfffff198
 801e51e:	6f473e68 	svcvs	0x00473e68
 801e522:	2f3c646f 	svccs	0x003c646f
 801e526:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801e52a:	423e6874 	eorsmi	r6, lr, #116, 16	@ 0x740000
 801e52e:	2f3c6461 	svccs	0x003c6461
 801e532:	3c3e6874 	ldccc	8, cr6, [lr], #-464	@ 0xfffffe30
 801e536:	443e6874 	ldrtmi	r6, [lr], #-2164	@ 0xfffff78c
 801e53a:	6f637369 	svcvs	0x00637369
 801e53e:	79726576 	ldmdbvc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
 801e542:	68742f3c 	ldmdavs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801e546:	742f3c3e 	strtvc	r3, [pc], #-3134	@ 801e54e <dmx_js+0x408>
 801e54a:	0a273e72 	beq	89edf1a <_sidata+0x9ced52>
 801e54e:	3d646474 	cfstrdcc	mvd6, [r4, #-464]!	@ 0xfffffe30
 801e552:	740a2727 	strvc	r2, [sl], #-1831	@ 0xfffff8d9
 801e556:	6f662e72 	svcvs	0x00662e72
 801e55a:	63614572 	cmnvs	r1, #478150656	@ 0x1c800000
 801e55e:	20702868 	rsbscs	r2, r0, r8, ror #16
 801e562:	7b203e3d 	blvc	882de5e <_sidata+0x80ec96>
 801e566:	6464740a 	strbtvs	r7, [r4], #-1034	@ 0xfffffbf6
 801e56a:	3c603d2b 	stclcc	13, cr3, [r0], #-172	@ 0xffffff54
 801e56e:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	@ 0xfffffe30
 801e572:	243e6474 	ldrtcs	r6, [lr], #-1140	@ 0xfffffb8c
 801e576:	702e707b 	eorvc	r7, lr, fp, ror r0
 801e57a:	7d74726f 	lfmvc	f7, 2, [r4, #-444]!	@ 0xfffffe44
 801e57e:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801e582:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801e586:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801e58a:	732e642e 			@ <UNDEFINED> instruction: 0x732e642e
 801e58e:	7d746e65 	ldclvc	14, cr6, [r4, #-404]!	@ 0xfffffe6c
 801e592:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801e596:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801e59a:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801e59e:	722e642e 	eorvc	r6, lr, #771751936	@ 0x2e000000
 801e5a2:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801e5a6:	7d646576 	cfstr64vc	mvdx6, [r4, #-472]!	@ 0xfffffe28
 801e5aa:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801e5ae:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801e5b2:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801e5b6:	732e722e 			@ <UNDEFINED> instruction: 0x732e722e
 801e5ba:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 801e5be:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 801e5c2:	2f3c7d73 	svccs	0x003c7d73
 801e5c6:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	@ 0xfffffe30
 801e5ca:	243e6474 	ldrtcs	r6, [lr], #-1140	@ 0xfffffb8c
 801e5ce:	722e707b 	eorvc	r7, lr, #123	@ 0x7b
 801e5d2:	6e65732e 	cdpvs	3, 6, cr7, cr5, cr14, {1}
 801e5d6:	69642e74 	stmdbvs	r4!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 801e5da:	766f6373 			@ <UNDEFINED> instruction: 0x766f6373
 801e5de:	7d797265 	lfmvc	f7, 2, [r9, #-404]!	@ 0xfffffe6c
 801e5e2:	64742f3c 	ldrbtvs	r2, [r4], #-3900	@ 0xfffff0c4
 801e5e6:	64743c3e 	ldrbtvs	r3, [r4], #-3134	@ 0xfffff3c2
 801e5ea:	707b243e 	rsbsvc	r2, fp, lr, lsr r4
 801e5ee:	722e722e 	eorvc	r7, lr, #-536870910	@ 0xe0000002
 801e5f2:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 801e5f6:	2e646576 	mcrcs	5, 3, r6, cr4, cr6, {3}
 801e5fa:	646f6f67 	strbtvs	r6, [pc], #-3943	@ 801e602 <dmx_js+0x4bc>
 801e5fe:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801e606 <dmx_js+0x4c0>
 801e602:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801e606:	7b243e64 	blvc	892df9e <_sidata+0x90edd6>
 801e60a:	2e722e70 	mrccs	14, 3, r2, cr2, cr0, {3}
 801e60e:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801e612:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801e616:	6461622e 	strbtvs	r6, [r1], #-558	@ 0xfffffdd2
 801e61a:	742f3c7d 	strtvc	r3, [pc], #-3197	@ 801e622 <dmx_js+0x4dc>
 801e61e:	743c3e64 	ldrtvc	r3, [ip], #-3684	@ 0xfffff19c
 801e622:	7b243e64 	blvc	892dfba <_sidata+0x90edf2>
 801e626:	2e722e70 	mrccs	14, 3, r2, cr2, cr0, {3}
 801e62a:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
 801e62e:	64657669 	strbtvs	r7, [r5], #-1641	@ 0xfffff997
 801e632:	7369642e 	cmnvc	r9, #771751936	@ 0x2e000000
 801e636:	65766f63 	ldrbvs	r6, [r6, #-3939]!	@ 0xfffff09d
 801e63a:	3c7d7972 			@ <UNDEFINED> instruction: 0x3c7d7972
 801e63e:	3e64742f 	cdpcc	4, 6, cr7, cr4, cr15, {1}
 801e642:	72742f3c 	rsbsvc	r2, r4, #60, 30	@ 0xf0
 801e646:	0a3b603e 	beq	8ef6746 <_sidata+0xed757e>
 801e64a:	0a3b297d 	beq	8ee8c46 <_sidata+0xec9a7e>
 801e64e:	75636f64 	strbvc	r6, [r3, #-3940]!	@ 0xfffff09c
 801e652:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 801e656:	7465672e 	strbtvc	r6, [r5], #-1838	@ 0xfffff8d2
 801e65a:	6d656c45 	stclvs	12, cr6, [r5, #-276]!	@ 0xfffffeec
 801e65e:	42746e65 	rsbsmi	r6, r4, #1616	@ 0x650
 801e662:	28644979 	stmdacs	r4!, {r0, r3, r4, r5, r6, r8, fp, lr}^
 801e666:	50646922 	rsbpl	r6, r4, r2, lsr #18
 801e66a:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
 801e66e:	692e2922 	stmdbvs	lr!, {r1, r5, r8, fp, sp}
 801e672:	72656e6e 	rsbvc	r6, r5, #1760	@ 0x6e0
 801e676:	4c4d5448 	cfstrdmi	mvd5, [sp], {72}	@ 0x48
 801e67a:	7264683d 	rsbvc	r6, r4, #3997696	@ 0x3d0000
 801e67e:	64742b73 	ldrbtvs	r2, [r4], #-2931	@ 0xfffff48d
 801e682:	207d0a64 	rsbscs	r0, sp, r4, ror #20
 801e686:	63746163 	cmnvs	r4, #-1073741800	@ 0xc0000018
 801e68a:	65282068 	strvs	r2, [r8, #-104]!	@ 0xffffff98
 801e68e:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
 801e692:	0a7d7b29 	beq	9f7d33e <_sidata+0x1f5e176>
 801e696:	 	subvc	r0, r1, #125	@ 0x7d

0801e698 <ArtNetMsgConst::STARTED>:
 801e698:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801e69c:	2074654e 	rsbscs	r6, r4, lr, asr #10
 801e6a0:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801e6a4:	00646574 	rsbeq	r6, r4, r4, ror r5

0801e6a8 <ArtNetMsgConst::START>:
 801e6a8:	72617453 	rsbvc	r7, r1, #1392508928	@ 0x53000000
 801e6ac:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
 801e6b0:	74724120 	ldrbtvc	r4, [r2], #-288	@ 0xfffffee0
 801e6b4:	74654e2d 	strbtvc	r4, [r5], #-3629	@ 0xfffff1d3
	...

0801e6b9 <artnet::NODE_ID>:
 801e6b9:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801e6bd:	0074654e 	rsbseq	r6, r4, lr, asr #10

0801e6c1 <ArtNetParamsConst::MAP_UNIVERSE0>:
 801e6c1:	5f70616d 	svcpl	0x0070616d
 801e6c5:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801e6c9:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801e6cd:	 	rsbsvc	r0, r0, #48	@ 0x30

0801e6cf <ArtNetParamsConst::PROTOCOL_PORT>:
 801e6cf:	746f7270 	strbtvc	r7, [pc], #-624	@ 801e6d7 <ArtNetParamsConst::PROTOCOL_PORT+0x8>
 801e6d3:	6c6f636f 	stclvs	3, cr6, [pc], #-444	@ 801e51c <dmx_js+0x3d6>
 801e6d7:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e6db:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801e6df:	746f7270 	strbtvc	r7, [pc], #-624	@ 801e6e7 <ArtNetParamsConst::PROTOCOL_PORT+0x18>
 801e6e3:	6c6f636f 	stclvs	3, cr6, [pc], #-444	@ 801e52c <dmx_js+0x3e6>
 801e6e7:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e6eb:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801e6ef:	746f7270 	strbtvc	r7, [pc], #-624	@ 801e6f7 <ArtNetParamsConst::PROTOCOL_PORT+0x28>
 801e6f3:	6c6f636f 	stclvs	3, cr6, [pc], #-444	@ 801e53c <dmx_js+0x3f6>
 801e6f7:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e6fb:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801e6ff:	746f7270 	strbtvc	r7, [pc], #-624	@ 801e707 <ArtNetParamsConst::PROTOCOL_PORT+0x38>
 801e703:	6c6f636f 	stclvs	3, cr6, [pc], #-444	@ 801e54c <dmx_js+0x406>
 801e707:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e70b:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801e70f <ArtNetParamsConst::RDM_ENABLE_PORT>:
 801e70f:	5f6d6472 	svcpl	0x006d6472
 801e713:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801e717:	705f656c 	subsvc	r6, pc, ip, ror #10
 801e71b:	5f74726f 	svcpl	0x0074726f
 801e71f:	64720061 	ldrbtvs	r0, [r2], #-97	@ 0xffffff9f
 801e723:	6e655f6d 	cdpvs	15, 6, cr5, cr5, cr13, {3}
 801e727:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801e72b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e72f:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801e733:	5f6d6472 	svcpl	0x006d6472
 801e737:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801e73b:	705f656c 	subsvc	r6, pc, ip, ror #10
 801e73f:	5f74726f 	svcpl	0x0074726f
 801e743:	64720063 	ldrbtvs	r0, [r2], #-99	@ 0xffffff9d
 801e747:	6e655f6d 	cdpvs	15, 6, cr5, cr5, cr13, {3}
 801e74b:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 801e74f:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801e753:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801e757 <ArtNetParamsConst::DESTINATION_IP_PORT>:
 801e757:	74736564 	ldrbtvc	r6, [r3], #-1380	@ 0xfffffa9c
 801e75b:	74616e69 	strbtvc	r6, [r1], #-3689	@ 0xfffff197
 801e75f:	5f6e6f69 	svcpl	0x006e6f69
 801e763:	705f7069 	subsvc	r7, pc, r9, rrx
 801e767:	5f74726f 	svcpl	0x0074726f
 801e76b:	00000061 	andeq	r0, r0, r1, rrx
 801e76f:	74736564 	ldrbtvc	r6, [r3], #-1380	@ 0xfffffa9c
 801e773:	74616e69 	strbtvc	r6, [r1], #-3689	@ 0xfffff197
 801e777:	5f6e6f69 	svcpl	0x006e6f69
 801e77b:	705f7069 	subsvc	r7, pc, r9, rrx
 801e77f:	5f74726f 	svcpl	0x0074726f
 801e783:	00000062 	andeq	r0, r0, r2, rrx
 801e787:	74736564 	ldrbtvc	r6, [r3], #-1380	@ 0xfffffa9c
 801e78b:	74616e69 	strbtvc	r6, [r1], #-3689	@ 0xfffff197
 801e78f:	5f6e6f69 	svcpl	0x006e6f69
 801e793:	705f7069 	subsvc	r7, pc, r9, rrx
 801e797:	5f74726f 	svcpl	0x0074726f
 801e79b:	00000063 	andeq	r0, r0, r3, rrx
 801e79f:	74736564 	ldrbtvc	r6, [r3], #-1380	@ 0xfffffa9c
 801e7a3:	74616e69 	strbtvc	r6, [r1], #-3689	@ 0xfffff197
 801e7a7:	5f6e6f69 	svcpl	0x006e6f69
 801e7ab:	705f7069 	subsvc	r7, pc, r9, rrx
 801e7af:	5f74726f 	svcpl	0x0074726f
 801e7b3:	00000064 	andeq	r0, r0, r4, rrx

0801e7b7 <ArtNetParamsConst::ENABLE_RDM>:
 801e7b7:	62616e65 	rsbvs	r6, r1, #1616	@ 0x650
 801e7bb:	725f656c 	subsvc	r6, pc, #108, 10	@ 0x1b000000
 801e7bf:	 	tstvs	r0, r4, ror #26

0801e7c2 <ArtNetParamsConst::FILE_NAME>:
 801e7c2:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
 801e7c6:	742e7465 	strtvc	r7, [lr], #-1125	@ 0xfffffb9b
 801e7ca:	 			@ <UNDEFINED> instruction: 0xff007478

0801e7cd <UID_ALL>:
 801e7cd:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 801e7d1:	 			@ <UNDEFINED> instruction: 0xffffffff

0801e7d3 <UID_ALL>:
 801e7d3:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 801e7d7:	 	subvc	pc, r1, #1020	@ 0x3fc

0801e7d9 <artnet::NODE_ID>:
 801e7d9:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	@ 0xfffffefc
 801e7dd:	0074654e 	rsbseq	r6, r4, lr, asr #10

0801e7e1 <ArtNetConst::OEM_ID>:
 801e7e1:	 	ldrsheq	pc, [r0], #-255	@ 0xffffff01	@ <UNPREDICTABLE>

0801e7e3 <ArtNetConst::ESTA_ID>:
 801e7e3:	 	stccc	0, cr0, [r1], {80}	@ 0x50

0801e7e5 <ArtNetConst::VERSION>:
 801e7e5:	 	movtpl	r3, #7169	@ 0x1c01

0801e7e7 <E117Const::ACN_PACKET_IDENTIFIER>:
 801e7e7:	2d435341 	stclcs	3, cr5, [r3, #-260]	@ 0xfffffefc
 801e7eb:	312e3145 			@ <UNDEFINED> instruction: 0x312e3145
 801e7ef:	00000037 	andeq	r0, r0, r7, lsr r0

0801e7f3 <E131Const::VERSION>:
 801e7f3:	 	strbmi	r1, [r7], #-2817	@ 0xfffff4ff

0801e7f5 <DEVICE_LABEL>:
 801e7f5:	32334447 	eorscc	r4, r3, #1191182336	@ 0x47000000
 801e7f9:	30373446 	eorscc	r3, r7, r6, asr #8
 801e7fd:	56455f5a 			@ <UNDEFINED> instruction: 0x56455f5a
 801e801:	52204c41 	eorpl	r4, r0, #16640	@ 0x4100
 801e805:	44204d44 	strtmi	r4, [r0], #-3396	@ 0xfffff2bc
 801e809:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
 801e80d:	 			@ <UNDEFINED> instruction: 0xffff0065

0801e80f <UID_ALL>:
 801e80f:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 801e813:	 	ldrsheq	pc, [r0], #-255	@ 0xffffff01	@ <UNPREDICTABLE>

0801e815 <RDMConst::MANUFACTURER_ID>:
 801e815:	 	strbtvc	r0, [r8], #-80	@ 0xffffffb0

0801e817 <RDMConst::MANUFACTURER_NAME>:
 801e817:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801e81b:	772f2f3a 			@ <UNDEFINED> instruction: 0x772f2f3a
 801e81f:	6f2e7777 	svcvs	0x002e7777
 801e823:	676e6172 			@ <UNDEFINED> instruction: 0x676e6172
 801e827:	2d697065 	stclcs	0, cr7, [r9, #-404]!	@ 0xfffffe6c
 801e82b:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801e82f:	0067726f 	rsbeq	r7, r7, pc, ror #4

0801e833 <DmxParamsConst::SLOTS_COUNT>:
 801e833:	746f6c73 	strbtvc	r6, [pc], #-3187	@ 801e83b <DmxParamsConst::SLOTS_COUNT+0x8>
 801e837:	6f635f73 	svcvs	0x00635f73
 801e83b:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801e83f <DmxParamsConst::REFRESH_RATE>:
 801e83f:	72666572 	rsbvc	r6, r6, #478150656	@ 0x1c800000
 801e843:	5f687365 	svcpl	0x00687365
 801e847:	65746172 	ldrbvs	r6, [r4, #-370]!	@ 0xfffffe8e
	...

0801e84c <DmxParamsConst::MAB_TIME>:
 801e84c:	5f62616d 	svcpl	0x0062616d
 801e850:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
	...

0801e855 <DmxParamsConst::BREAK_TIME>:
 801e855:	61657262 	cmnvs	r5, r2, ror #4
 801e859:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 801e85d:	 	andvc	r6, r0, sp, ror #10

0801e860 <DmxParamsConst::FILE_NAME>:
 801e860:	61726170 	cmnvs	r2, r0, ror r1
 801e864:	742e736d 	strtvc	r7, [lr], #-877	@ 0xfffffc93
 801e868:	00007478 	andeq	r7, r0, r8, ror r4

0801e86c <s_DirGpio>:
 801e86c:	40020c00 	andmi	r0, r2, r0, lsl #24
 801e870:	00000001 	andeq	r0, r0, r1
 801e874:	40020c00 	andmi	r0, r2, r0, lsl #24
 801e878:	00000002 	andeq	r0, r0, r2

0801e87c <NetworkConst::MSG_NETWORK_STARTED>:
 801e87c:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801e880:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801e884:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801e888:	00646574 	rsbeq	r6, r4, r4, ror r5

0801e88c <NetworkConst::MSG_NETWORK_INIT>:
 801e88c:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 801e890:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801e894:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
	...

0801e89a <mdns::DOMAIN_DNSSD>:
 801e89a:	65735f09 	ldrbvs	r5, [r3, #-3849]!	@ 0xfffff0f7
 801e89e:	63697672 	cmnvs	r9, #119537664	@ 0x7200000
 801e8a2:	5f077365 	svcpl	0x00077365
 801e8a6:	2d736e64 	ldclcs	14, cr6, [r3, #-400]!	@ 0xfffffe70
 801e8aa:	5f046473 	svcpl	0x00046473
 801e8ae:	05706475 	ldrbeq	r6, [r0, #-1141]!	@ 0xfffffb8b
 801e8b2:	61636f6c 	cmnvs	r3, ip, ror #30
 801e8b6:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801e99a:	 	b	991ea1a <_sidata+0x18ff852>

0801e99c <mdns::s_Services>:
 801e99c:	0801ea64 	stmdaeq	r1, {r2, r5, r6, r9, fp, sp, lr, pc}
 801e9a0:	00000008 	andeq	r0, r0, r8
 801e9a4:	00000000 	andeq	r0, r0, r0
 801e9a8:	00002905 	andeq	r2, r0, r5, lsl #18
 801e9ac:	0801ea5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, fp, sp, lr, pc}
 801e9b0:	00000006 	andeq	r0, r0, r6
 801e9b4:	00000000 	andeq	r0, r0, r0
 801e9b8:	00000045 	andeq	r0, r0, r5, asr #32
 801e9bc:	0801ea58 	stmdaeq	r1, {r3, r4, r6, r9, fp, sp, lr, pc}
 801e9c0:	00000006 	andeq	r0, r0, r6
 801e9c4:	00000001 	andeq	r0, r0, r1
 801e9c8:	00000050 	andeq	r0, r0, r0, asr r0
 801e9cc:	0801ea4b 	stmdaeq	r1, {r0, r1, r3, r6, r9, fp, sp, lr, pc}
 801e9d0:	0000000d 	andeq	r0, r0, sp
 801e9d4:	00000000 	andeq	r0, r0, r0
 801e9d8:	000015c1 	andeq	r1, r0, r1, asr #11
 801e9dc:	0801ea46 	stmdaeq	r1, {r1, r2, r6, r9, fp, sp, lr, pc}
 801e9e0:	00000005 	andeq	r0, r0, r5
 801e9e4:	00000000 	andeq	r0, r0, r0
 801e9e8:	0000007b 	andeq	r0, r0, fp, ror r0
 801e9ec:	0801ea3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, fp, sp, lr, pc}
 801e9f0:	0000000c 	andeq	r0, r0, ip
 801e9f4:	00000000 	andeq	r0, r0, r0
 801e9f8:	0000138c 	andeq	r1, r0, ip, lsl #7
 801e9fc:	0801ea35 	stmdaeq	r1, {r0, r2, r4, r5, r9, fp, sp, lr, pc}
 801ea00:	00000005 	andeq	r0, r0, r5
	...
 801ea0c:	0801ea30 	stmdaeq	r1, {r4, r5, r9, fp, sp, lr, pc}
 801ea10:	00000005 	andeq	r0, r0, r5
 801ea14:	00000000 	andeq	r0, r0, r0
 801ea18:	00000fd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 801ea1c:	0801ea2c 	stmdaeq	r1, {r2, r3, r5, r9, fp, sp, lr, pc}
 801ea20:	00000004 	andeq	r0, r0, r4
 801ea24:	00000000 	andeq	r0, r0, r0
 801ea28:	000013d6 	ldrdeq	r1, [r0], -r6

0801ea2c <mdns::DOMAIN_PP>:
 801ea2c:	70705f03 	rsbsvc	r5, r0, r3, lsl #30

0801ea30 <mdns::DOMAIN_DDP>:
 801ea30:	64645f04 	strbtvs	r5, [r4], #-3844	@ 0xfffff0fc
 801ea34:	 	svcvs	0x005f0470

0801ea35 <mdns::DOMAIN_OSC>:
 801ea35:	736f5f04 	cmnvc	pc, #4, 30
 801ea39:	 	cmpvs	pc, r3, ror #22

0801ea3a <mdns::DOMAIN_MIDI>:
 801ea3a:	70615f0b 	rsbvc	r5, r1, fp, lsl #30
 801ea3e:	2d656c70 	stclcs	12, cr6, [r5, #-448]!	@ 0xfffffe40
 801ea42:	6964696d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^

0801ea46 <mdns::DOMAIN_NTP>:
 801ea46:	746e5f04 	strbtvc	r5, [lr], #-3844	@ 0xfffff0fc
 801ea4a:	 	subsvc	r0, pc, #112, 24	@ 0x7000

0801ea4b <mdns::DOMAIN_RDMNET_LLRP>:
 801ea4b:	64725f0c 	ldrbtvs	r5, [r2], #-3852	@ 0xfffff0f4
 801ea4f:	74656e6d 	strbtvc	r6, [r5], #-3693	@ 0xfffff193
 801ea53:	726c6c2d 	rsbvc	r6, ip, #11520	@ 0x2d00
 801ea57:	 	ldmdavs	pc, {r4, r5, r6, r8, sl}^	@ <UNPREDICTABLE>

0801ea58 <mdns::DOMAIN_HTTP>:
 801ea58:	74685f05 	strbtvc	r5, [r8], #-3845	@ 0xfffff0fb
 801ea5c:	 	svcpl	0x00057074

0801ea5e <mdns::DOMAIN_TFTP>:
 801ea5e:	66745f05 	ldrbtvs	r5, [r4], -r5, lsl #30
 801ea62:	 	svcpl	0x00077074

0801ea64 <mdns::DOMAIN_CONFIG>:
 801ea64:	6f635f07 	svcvs	0x00635f07
 801ea68:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!

0801ea6c <mdns::DOMAIN_TCP>:
 801ea6c:	63745f04 	cmnvs	r4, #4, 30
 801ea70:	 	ldrbvc	r0, [pc, #-1136]	@ 801e608 <dmx_js+0x4c2>

0801ea71 <mdns::DOMAIN_UDP>:
 801ea71:	64755f04 	ldrbtvs	r5, [r5], #-3844	@ 0xfffff0fc
 801ea75:	 	svcvs	0x006c0570

0801ea76 <mdns::DOMAIN_LOCAL>:
 801ea76:	636f6c05 	cmnvs	pc, #1280	@ 0x500
 801ea7a:	 	cdpvs	12, 0, cr6, cr0, cr1, {3}

0801ea7d <NetworkParamsConst::NTP_SERVER>:
 801ea7d:	5f70746e 	svcpl	0x0070746e
 801ea81:	76726573 			@ <UNDEFINED> instruction: 0x76726573
 801ea85:	 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

0801ea88 <NetworkParamsConst::HOSTNAME>:
 801ea88:	74736f68 	ldrbtvc	r6, [r3], #-3944	@ 0xfffff098
 801ea8c:	656d616e 	strbvs	r6, [sp, #-366]!	@ 0xfffffe92
	...

0801ea91 <NetworkParamsConst::DEFAULT_GATEWAY>:
 801ea91:	61666564 	cmnvs	r6, r4, ror #10
 801ea95:	5f746c75 	svcpl	0x00746c75
 801ea99:	65746167 	ldrbvs	r6, [r4, #-359]!	@ 0xfffffe99
 801ea9d:	00796177 	rsbseq	r6, r9, r7, ror r1

0801eaa1 <NetworkParamsConst::NET_MASK>:
 801eaa1:	5f74656e 	svcpl	0x0074656e
 801eaa5:	6b73616d 	blvs	9cf7061 <_sidata+0x1cd7e99>
	...

0801eaaa <NetworkParamsConst::IP_ADDRESS>:
 801eaaa:	615f7069 	cmpvs	pc, r9, rrx
 801eaae:	65726464 	ldrbvs	r6, [r2, #-1124]!	@ 0xfffffb9c
 801eab2:	 	strvs	r7, [r0], #-883	@ 0xfffffc8d

0801eab5 <NetworkParamsConst::DHCP_RETRY_TIME>:
 801eab5:	70636864 	rsbvc	r6, r3, r4, ror #16
 801eab9:	7465725f 	strbtvc	r7, [r5], #-607	@ 0xfffffda1
 801eabd:	745f7972 	ldrbvc	r7, [pc], #-2418	@ 801eac5 <NetworkParamsConst::USE_DHCP>
 801eac1:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801eac5 <NetworkParamsConst::USE_DHCP>:
 801eac5:	5f657375 	svcpl	0x00657375
 801eac9:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801eace <NetworkParamsConst::FILE_NAME>:
 801eace:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 801ead2:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801ead6:	00747874 	rsbseq	r7, r4, r4, ror r8
	...

0801eadc <pArray>:
 801eadc:	0801eb5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, sp, lr, pc}
 801eae0:	0801eb4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, fp, sp, lr, pc}
 801eae4:	0801eaaa 	stmdaeq	r1, {r1, r3, r5, r7, r9, fp, sp, lr, pc}
 801eae8:	0801eb47 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, fp, sp, lr, pc}
 801eaec:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 801eaf0:	0801eb3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, fp, sp, lr, pc}
 801eaf4:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
 801eaf8:	0801ea88 	stmdaeq	r1, {r3, r7, r9, fp, sp, lr, pc}
 801eafc:	0801ee43 	stmdaeq	r1, {r0, r1, r6, r9, sl, fp, sp, lr, pc}
 801eb00:	0801ee53 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, fp, sp, lr, pc}
 801eb04:	0801ee63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, sp, lr, pc}
 801eb08:	0801ee73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, sl, fp, sp, lr, pc}
 801eb0c:	0801eaa1 	stmdaeq	r1, {r0, r5, r7, r9, fp, sp, lr, pc}
 801eb10:	0801ecdf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, fp, sp, lr, pc}
 801eb14:	0801e757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, sp, lr, pc}
 801eb18:	0801e76f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sl, sp, lr, pc}
 801eb1c:	0801e787 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, sl, sp, lr, pc}
 801eb20:	0801e79f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, sp, lr, pc}
 801eb24:	0801ea91 	stmdaeq	r1, {r0, r4, r7, r9, fp, sp, lr, pc}
 801eb28:	0801eb2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, sp, lr, pc}

0801eb2c <DisplayUdfParamsConst::DMX_DIRECTION>:
 801eb2c:	5f786d64 	svcpl	0x00786d64
 801eb30:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801eb34:	6f697463 	svcvs	0x00697463
 801eb38:	 	cmnvs	r1, #110	@ 0x6e

0801eb3a <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801eb3a:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801eb3e:	705f6576 	subsvc	r6, pc, r6, ror r5	@ <UNPREDICTABLE>
 801eb42:	7374726f 	cmnvc	r4, #-268435450	@ 0xf0000006
	...

0801eb47 <DisplayUdfParamsConst::VERSION>:
 801eb47:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 801eb4b:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801eb4f <DisplayUdfParamsConst::BOARD_NAME>:
 801eb4f:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 801eb53:	616e5f64 	cmnvs	lr, r4, ror #30
 801eb57:	 	strvc	r6, [r0], #-1389	@ 0xfffffa93

0801eb5a <DisplayUdfParamsConst::TITLE>:
 801eb5a:	6c746974 			@ <UNDEFINED> instruction: 0x6c746974
 801eb5e:	 	stclvs	0, cr0, [r6], #-404	@ 0xfffffe6c

0801eb60 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801eb60:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801eb64:	7265765f 	rsbvc	r7, r5, #99614720	@ 0x5f00000
 801eb68:	61636974 	smcvs	13972	@ 0x3694
 801eb6c:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801eb70 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801eb70:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
 801eb74:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801eb78:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 801e613 <dmx_js+0x4cd>
 801eb7c:	 	mcrvs	0, 3, r0, cr9, cr4, {3}

0801eb7e <DisplayUdfParamsConst::INTENSITY>:
 801eb7e:	65746e69 	ldrbvs	r6, [r4, #-3689]!	@ 0xfffff197
 801eb82:	7469736e 	strbtvc	r7, [r9], #-878	@ 0xfffffc92
 801eb86:	 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^

0801eb88 <DisplayUdfParamsConst::FILE_NAME>:
 801eb88:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801eb8c:	2e79616c 	rpwcsez	f6, f1, #4.0
 801eb90:	00747874 	rsbseq	r7, r4, r4, ror r8

0801eb94 <s_aStorSize>:
 801eb94:	00000060 	andeq	r0, r0, r0, rrx
 801eb98:	00000020 	andeq	r0, r0, r0, lsr #32
 801eb9c:	00000040 	andeq	r0, r0, r0, asr #32
 801eba0:	00000040 	andeq	r0, r0, r0, asr #32
 801eba4:	00000020 	andeq	r0, r0, r0, lsr #32
 801eba8:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebac:	000001e0 	andeq	r0, r0, r0, ror #3
 801ebb0:	00000040 	andeq	r0, r0, r0, asr #32
 801ebb4:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebb8:	00000060 	andeq	r0, r0, r0, rrx
 801ebbc:	00000030 	andeq	r0, r0, r0, lsr r0
 801ebc0:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebc4:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
 801ebc8:	00000030 	andeq	r0, r0, r0, lsr r0
 801ebcc:	00000040 	andeq	r0, r0, r0, asr #32
 801ebd0:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebd4:	00000060 	andeq	r0, r0, r0, rrx
 801ebd8:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebdc:	00000400 	andeq	r0, r0, r0, lsl #8
 801ebe0:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebe4:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebe8:	00000040 	andeq	r0, r0, r0, asr #32
 801ebec:	00000060 	andeq	r0, r0, r0, rrx
 801ebf0:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebf4:	00000020 	andeq	r0, r0, r0, lsr #32
 801ebf8:	00000140 	andeq	r0, r0, r0, asr #2
 801ebfc:	00000020 	andeq	r0, r0, r0, lsr #32

0801ec00 <s_aSignature>:
 801ec00:	01567641 	cmpeq	r6, r1, asr #12

0801ec04 <hal::utc_validate(signed char, unsigned char, long&)::s_ValidOffsets>:
 801ec04:	1efd1ef7 	mrcne	14, 7, r1, cr13, cr7, {7}
 801ec08:	1e041e03 	cdpne	14, 0, cr1, cr4, cr3, {0}
 801ec0c:	2d051e05 	stccs	14, cr1, [r5, #-20]	@ 0xffffffec
 801ec10:	2d081e06 	stccs	14, cr1, [r8, #-24]	@ 0xffffffe8
 801ec14:	1e0a1e09 	cdpne	14, 0, cr1, cr10, cr9, {0}
 801ec18:	 	ldrbtvc	r2, [r5], #-3340	@ 0xfffff2f4

0801ec1a <EnvParamsConst::UTC_OFFSET>:
 801ec1a:	5f637475 	svcpl	0x00637475
 801ec1e:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 801ec22:	 	strvs	r7, [r0, #-1125]	@ 0xfffffb9b

0801ec25 <EnvParamsConst::FILE_NAME>:
 801ec25:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
 801ec29:	00747874 	rsbseq	r7, r4, r4, ror r8
 801ec2d:	 	strne	r0, [r0], #-0

0801ec30 <winbond_spi_flash_table>:
 801ec30:	00102014 	andseq	r2, r0, r4, lsl r0
 801ec34:	0801b619 	stmdaeq	r1, {r0, r3, r4, r9, sl, ip, sp, pc}
 801ec38:	00202015 	eoreq	r2, r0, r5, lsl r0
 801ec3c:	0801b620 	stmdaeq	r1, {r5, r9, sl, ip, sp, pc}
 801ec40:	00402016 	subeq	r2, r0, r6, lsl r0
 801ec44:	0801b627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, ip, sp, pc}
 801ec48:	00083013 	andeq	r3, r8, r3, lsl r0
 801ec4c:	0801b62e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, ip, sp, pc}
 801ec50:	00203015 	eoreq	r3, r0, r5, lsl r0
 801ec54:	0801b635 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, ip, sp, pc}
 801ec58:	00403016 	subeq	r3, r0, r6, lsl r0
 801ec5c:	0801b63c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, ip, sp, pc}
 801ec60:	00803017 	addeq	r3, r0, r7, lsl r0
 801ec64:	0801b643 	stmdaeq	r1, {r0, r1, r6, r9, sl, ip, sp, pc}
 801ec68:	00104014 	andseq	r4, r0, r4, lsl r0
 801ec6c:	0801b64a 	stmdaeq	r1, {r1, r3, r6, r9, sl, ip, sp, pc}
 801ec70:	00204015 	eoreq	r4, r0, r5, lsl r0
 801ec74:	0801b65c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, ip, sp, pc}
 801ec78:	00404016 	subeq	r4, r0, r6, lsl r0
 801ec7c:	0801b66e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, sl, ip, sp, pc}
 801ec80:	00804017 	addeq	r4, r0, r7, lsl r0
 801ec84:	0801b684 	stmdaeq	r1, {r2, r7, r9, sl, ip, sp, pc}
 801ec88:	01004018 	tsteq	r0, r8, lsl r0
 801ec8c:	0801b69a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, ip, sp, pc}
 801ec90:	02004019 	andeq	r4, r0, #25
 801ec94:	0801b6b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, ip, sp, pc}
 801ec98:	00105014 	andseq	r5, r0, r4, lsl r0
 801ec9c:	0801b6ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, sl, ip, sp, pc}
 801eca0:	00206015 	eoreq	r6, r0, r5, lsl r0
 801eca4:	0801b6c3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, ip, sp, pc}
 801eca8:	00406016 	subeq	r6, r0, r6, lsl r0
 801ecac:	0801b6cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, ip, sp, pc}
 801ecb0:	00806017 	addeq	r6, r0, r7, lsl r0
 801ecb4:	0801b6e2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, ip, sp, pc}
 801ecb8:	01006018 	tsteq	r0, r8, lsl r0
 801ecbc:	0801b6f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, ip, sp, pc}

0801ecc0 <LightSetParamsConst::FAILSAFE>:
 801ecc0:	6c696166 	stfvse	f6, [r9], #-408	@ 0xfffffe68
 801ecc4:	65666173 	strbvs	r6, [r6, #-371]!	@ 0xfffffe8d
	...

0801ecc9 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 801ecc9:	61736964 	cmnvs	r3, r4, ror #18
 801eccd:	5f656c62 	svcpl	0x00656c62
 801ecd1:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801ecd5:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801ecd9:	756f656d 	strbvc	r6, [pc, #-1389]!	@ 801e774 <ArtNetParamsConst::DESTINATION_IP_PORT+0x1d>
 801ecdd:	 	stclvs	0, cr0, [r4, #-464]!	@ 0xfffffe30

0801ecdf <LightSetParamsConst::DMX_START_ADDRESS>:
 801ecdf:	5f786d64 	svcpl	0x00786d64
 801ece3:	72617473 	rsbvc	r7, r1, #1929379840	@ 0x73000000
 801ece7:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 801eceb:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 801ecef:	 	svcvs	0x006c0073

0801ecf1 <LightSetParamsConst::NODE_LONG_NAME>:
 801ecf1:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 801ecf5:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	@ 0xfffffe84
 801ecf9:	 	cmnvs	ip, r5, rrx

0801ecfb <LightSetParamsConst::NODE_LABEL>:
 801ecfb:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 801ecff:	6f705f6c 	svcvs	0x00705f6c
 801ed03:	615f7472 	cmpvs	pc, r2, ror r4	@ <UNPREDICTABLE>
 801ed07:	616c0000 	cmnvs	ip, r0
 801ed0b:	5f6c6562 	svcpl	0x006c6562
 801ed0f:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801ed13:	0000625f 	andeq	r6, r0, pc, asr r2
 801ed17:	6562616c 	strbvs	r6, [r2, #-364]!	@ 0xfffffe94
 801ed1b:	6f705f6c 	svcvs	0x00705f6c
 801ed1f:	635f7472 	cmpvs	pc, #1912602624	@ 0x72000000
 801ed23:	616c0000 	cmnvs	ip, r0
 801ed27:	5f6c6562 	svcpl	0x006c6562
 801ed2b:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801ed2f:	0000645f 	andeq	r6, r0, pc, asr r4

0801ed33 <LightSetParamsConst::PRIORITY>:
 801ed33:	6f697270 	svcvs	0x00697270
 801ed37:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801ed3b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ed3f:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801ed43:	6f697270 	svcvs	0x00697270
 801ed47:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801ed4b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ed4f:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801ed53:	6f697270 	svcvs	0x00697270
 801ed57:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801ed5b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ed5f:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801ed63:	6f697270 	svcvs	0x00697270
 801ed67:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801ed6b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ed6f:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801ed73 <LightSetParamsConst::OUTPUT_STYLE>:
 801ed73:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801ed77:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801ed7b:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801ed7f:	0000615f 	andeq	r6, r0, pc, asr r1
 801ed83:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801ed87:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801ed8b:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801ed8f:	0000625f 	andeq	r6, r0, pc, asr r2
 801ed93:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801ed97:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801ed9b:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801ed9f:	0000635f 	andeq	r6, r0, pc, asr r3
 801eda3:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 801eda7:	735f7475 	cmpvc	pc, #1962934272	@ 0x75000000
 801edab:	656c7974 	strbvs	r7, [ip, #-2420]!	@ 0xfffff68c
 801edaf:	0000645f 	andeq	r6, r0, pc, asr r4

0801edb3 <LightSetParamsConst::DIRECTION>:
 801edb3:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801edb7:	6f697463 	svcvs	0x00697463
 801edbb:	6f705f6e 	svcvs	0x00705f6e
 801edbf:	615f7472 	cmpvs	pc, r2, ror r4	@ <UNPREDICTABLE>
 801edc3:	69640000 	stmdbvs	r4!, {}^	@ <UNPREDICTABLE>
 801edc7:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801edcb:	5f6e6f69 	svcpl	0x006e6f69
 801edcf:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801edd3:	0000625f 	andeq	r6, r0, pc, asr r2
 801edd7:	65726964 	ldrbvs	r6, [r2, #-2404]!	@ 0xfffff69c
 801eddb:	6f697463 	svcvs	0x00697463
 801eddf:	6f705f6e 	svcvs	0x00705f6e
 801ede3:	635f7472 	cmpvs	pc, #1912602624	@ 0x72000000
 801ede7:	69640000 	stmdbvs	r4!, {}^	@ <UNPREDICTABLE>
 801edeb:	74636572 	strbtvc	r6, [r3], #-1394	@ 0xfffffa8e
 801edef:	5f6e6f69 	svcpl	0x006e6f69
 801edf3:	74726f70 	ldrbtvc	r6, [r2], #-3952	@ 0xfffff090
 801edf7:	0000645f 	andeq	r6, r0, pc, asr r4

0801edfb <LightSetParamsConst::MERGE_MODE_PORT>:
 801edfb:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801edff:	6f6d5f65 	svcvs	0x006d5f65
 801ee03:	705f6564 	subsvc	r6, pc, r4, ror #10
 801ee07:	5f74726f 	svcpl	0x0074726f
 801ee0b:	656d0061 	strbvs	r0, [sp, #-97]!	@ 0xffffff9f
 801ee0f:	5f656772 	svcpl	0x00656772
 801ee13:	65646f6d 	strbvs	r6, [r4, #-3949]!	@ 0xfffff093
 801ee17:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee1b:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801ee1f:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801ee23:	6f6d5f65 	svcvs	0x006d5f65
 801ee27:	705f6564 	subsvc	r6, pc, r4, ror #10
 801ee2b:	5f74726f 	svcpl	0x0074726f
 801ee2f:	656d0063 	strbvs	r0, [sp, #-99]!	@ 0xffffff9d
 801ee33:	5f656772 	svcpl	0x00656772
 801ee37:	65646f6d 	strbvs	r6, [r4, #-3949]!	@ 0xfffff093
 801ee3b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee3f:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801ee43 <LightSetParamsConst::UNIVERSE_PORT>:
 801ee43:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801ee47:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801ee4b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee4f:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801ee53:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801ee57:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801ee5b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee5f:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801ee63:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801ee67:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801ee6b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee6f:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801ee73:	76696e75 			@ <UNDEFINED> instruction: 0x76696e75
 801ee77:	65737265 	ldrbvs	r7, [r3, #-613]!	@ 0xfffffd9b
 801ee7b:	726f705f 	rsbvc	r7, pc, #95	@ 0x5f
 801ee7f:	00645f74 	rsbeq	r5, r4, r4, ror pc
	...

0801ee84 <vtable for Ssd1306>:
	...
 801ee8c:	08017115 	stmdaeq	r1, {r0, r2, r4, r8, ip, sp, lr}
 801ee90:	08017141 	stmdaeq	r1, {r0, r6, r8, ip, sp, lr}
 801ee94:	08017479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, ip, sp, lr}
 801ee98:	0801740d 	stmdaeq	r1, {r0, r2, r3, sl, ip, sp, lr}
 801ee9c:	080172e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, ip, sp, lr}
 801eea0:	08017165 	stmdaeq	r1, {r0, r2, r5, r6, r8, ip, sp, lr}
 801eea4:	08017191 	stmdaeq	r1, {r0, r4, r7, r8, ip, sp, lr}
 801eea8:	080172b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, ip, sp, lr}
 801eeac:	08017271 	stmdaeq	r1, {r0, r4, r5, r6, r9, ip, sp, lr}
 801eeb0:	08017117 	stmdaeq	r1, {r0, r1, r2, r4, r8, ip, sp, lr}
 801eeb4:	0801731d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, ip, sp, lr}
 801eeb8:	08017329 	stmdaeq	r1, {r0, r3, r5, r8, r9, ip, sp, lr}
 801eebc:	08017341 	stmdaeq	r1, {r0, r6, r8, r9, ip, sp, lr}
 801eec0:	08017119 	stmdaeq	r1, {r0, r3, r4, r8, ip, sp, lr}

0801eec4 <oled_128x32_init>:
 801eec4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801eec8:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801eecc:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801eed0:	02dac8a1 	sbcseq	ip, sl, #10551296	@ 0xa10000
 801eed4:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801eed8:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801eedc <oled_128x64_init>:
 801eedc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801eee0:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801eee4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801eee8:	12dac8a1 	sbcsne	ip, sl, #10551296	@ 0xa10000
 801eeec:	f1d97f81 			@ <UNDEFINED> instruction: 0xf1d97f81
 801eef0:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801eef4 <_OledFont8x6>:
 801eef4:	00000040 	andeq	r0, r0, r0, asr #32
 801eef8:	40000000 	andmi	r0, r0, r0
 801eefc:	005f0000 	subseq	r0, pc, r0
 801ef00:	00400000 	subeq	r0, r0, r0
 801ef04:	00070007 	andeq	r0, r7, r7
 801ef08:	7f144000 	svcvc	0x00144000
 801ef0c:	00147f14 	andseq	r7, r4, r4, lsl pc
 801ef10:	7f2a2440 	svcvc	0x002a2440
 801ef14:	4000122a 	andmi	r1, r0, sl, lsr #4
 801ef18:	64081323 	strvs	r1, [r8], #-803	@ 0xfffffcdd
 801ef1c:	36400062 	strbcc	r0, [r0], -r2, rrx
 801ef20:	50205649 	eorpl	r5, r0, r9, asr #12
 801ef24:	08004000 	stmdaeq	r0, {lr}
 801ef28:	00000307 	andeq	r0, r0, r7, lsl #6
 801ef2c:	221c0040 	andscs	r0, ip, #64	@ 0x40
 801ef30:	40000041 	andmi	r0, r0, r1, asr #32
 801ef34:	1c224100 	stfnes	f4, [r2], #-0
 801ef38:	2a400000 	bcs	901ef40 <_sidata+0xfffd78>
 801ef3c:	2a1c7f1c 	bcs	873ebb4 <_sidata+0x71f9ec>
 801ef40:	08084000 	stmdaeq	r8, {lr}
 801ef44:	0008083e 	andeq	r0, r8, lr, lsr r8
 801ef48:	70800040 	addvc	r0, r0, r0, asr #32
 801ef4c:	40000030 	andmi	r0, r0, r0, lsr r0
 801ef50:	08080808 	stmdaeq	r8, {r3, fp}
 801ef54:	00400008 	subeq	r0, r0, r8
 801ef58:	00606000 	rsbeq	r6, r0, r0
 801ef5c:	10204000 	eorne	r4, r0, r0
 801ef60:	00020408 	andeq	r0, r2, r8, lsl #8
 801ef64:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801ef68:	40003e45 	andmi	r3, r0, r5, asr #28
 801ef6c:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801ef70:	72400000 	subvc	r0, r0, #0
 801ef74:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801ef78:	41214000 			@ <UNDEFINED> instruction: 0x41214000
 801ef7c:	00334d49 	eorseq	r4, r3, r9, asr #26
 801ef80:	12141840 	andsne	r1, r4, #64, 16	@ 0x400000
 801ef84:	4000107f 	andmi	r1, r0, pc, ror r0
 801ef88:	45454527 	strbmi	r4, [r5, #-1319]	@ 0xfffffad9
 801ef8c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801ef90:	3149494a 	cmpcc	r9, sl, asr #18
 801ef94:	21414000 	mrscs	r4, (UNDEF: 65)
 801ef98:	00070911 	andeq	r0, r7, r1, lsl r9
 801ef9c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801efa0:	40003649 	andmi	r3, r0, r9, asr #12
 801efa4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801efa8:	0040001e 	subeq	r0, r0, lr, lsl r0
 801efac:	00001400 	andeq	r1, r0, r0, lsl #8
 801efb0:	40004000 	andmi	r4, r0, r0
 801efb4:	00000034 	andeq	r0, r0, r4, lsr r0
 801efb8:	14080040 	strne	r0, [r8], #-64	@ 0xffffffc0
 801efbc:	40004122 	andmi	r4, r0, r2, lsr #2
 801efc0:	14141414 	ldrne	r1, [r4], #-1044	@ 0xfffffbec
 801efc4:	00400014 	subeq	r0, r0, r4, lsl r0
 801efc8:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801efcc:	01024000 	mrseq	r4, (UNDEF: 2)
 801efd0:	00060959 	andeq	r0, r6, r9, asr r9
 801efd4:	5d413e40 	stclpl	14, cr3, [r1, #-256]	@ 0xffffff00
 801efd8:	40004e59 	andmi	r4, r0, r9, asr lr
 801efdc:	1211127c 	andsne	r1, r1, #124, 4	@ 0xc0000007
 801efe0:	7f40007c 	svcvc	0x0040007c
 801efe4:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801efe8:	413e4000 	teqmi	lr, r0
 801efec:	00224141 	eoreq	r4, r2, r1, asr #2
 801eff0:	41417f40 	cmpmi	r1, r0, asr #30
 801eff4:	40003e41 	andmi	r3, r0, r1, asr #28
 801eff8:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801effc:	7f400041 	svcvc	0x00400041
 801f000:	01090909 	tsteq	r9, r9, lsl #18
 801f004:	413e4000 	teqmi	lr, r0
 801f008:	00735141 	rsbseq	r5, r3, r1, asr #2
 801f00c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801f010:	40007f08 	andmi	r7, r0, r8, lsl #30
 801f014:	417f4100 	cmnmi	pc, r0, lsl #2
 801f018:	20400000 	subcs	r0, r0, r0
 801f01c:	013f4140 	teqeq	pc, r0, asr #2
 801f020:	087f4000 	ldmdaeq	pc!, {lr}^	@ <UNPREDICTABLE>
 801f024:	00412214 	subeq	r2, r1, r4, lsl r2
 801f028:	40407f40 	submi	r7, r0, r0, asr #30
 801f02c:	40004040 	andmi	r4, r0, r0, asr #32
 801f030:	021c027f 	andseq	r0, ip, #-268435449	@ 0xf0000007
 801f034:	7f40007f 	svcvc	0x0040007f
 801f038:	7f100804 	svcvc	0x00100804
 801f03c:	413e4000 	teqmi	lr, r0
 801f040:	003e4141 	eorseq	r4, lr, r1, asr #2
 801f044:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801f048:	40000609 	andmi	r0, r0, r9, lsl #12
 801f04c:	2151413e 	cmpcs	r1, lr, lsr r1
 801f050:	7f40005e 	svcvc	0x0040005e
 801f054:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801f058:	49264000 	stmdbmi	r6!, {lr}
 801f05c:	00324949 	eorseq	r4, r2, r9, asr #18
 801f060:	7f010340 	svcvc	0x00010340
 801f064:	40000301 	andmi	r0, r0, r1, lsl #6
 801f068:	4040403f 	submi	r4, r0, pc, lsr r0
 801f06c:	1f40003f 	svcne	0x0040003f
 801f070:	1f204020 	svcne	0x00204020
 801f074:	403f4000 	eorsmi	r4, pc, r0
 801f078:	003f4038 	eorseq	r4, pc, r8, lsr r0	@ <UNPREDICTABLE>
 801f07c:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801f080:	40006314 	andmi	r6, r0, r4, lsl r3
 801f084:	04780403 	ldrbteq	r0, [r8], #-1027	@ 0xfffffbfd
 801f088:	61400003 	cmpvs	r0, r3
 801f08c:	434d4959 	movtmi	r4, #55641	@ 0xd959
 801f090:	7f004000 	svcvc	0x00004000
 801f094:	00414141 	subeq	r4, r1, r1, asr #2
 801f098:	08040240 	stmdaeq	r4, {r6, r9}
 801f09c:	40002010 	andmi	r2, r0, r0, lsl r0
 801f0a0:	41414100 	mrsmi	r4, (UNDEF: 81)
 801f0a4:	0440007f 	strbeq	r0, [r0], #-127	@ 0xffffff81
 801f0a8:	04020102 	streq	r0, [r2], #-258	@ 0xfffffefe
 801f0ac:	40404000 	submi	r4, r0, r0
 801f0b0:	00404040 	subeq	r4, r0, r0, asr #32
 801f0b4:	07030040 	streq	r0, [r3, -r0, asr #32]
 801f0b8:	40000008 	andmi	r0, r0, r8
 801f0bc:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801f0c0:	7f400040 	svcvc	0x00400040
 801f0c4:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801f0c8:	44384000 	ldrtmi	r4, [r8], #-0
 801f0cc:	00284444 	eoreq	r4, r8, r4, asr #8
 801f0d0:	44443840 	strbmi	r3, [r4], #-2112	@ 0xfffff7c0
 801f0d4:	40007f28 	andmi	r7, r0, r8, lsr #30
 801f0d8:	54545438 	ldrbpl	r5, [r4], #-1080	@ 0xfffffbc8
 801f0dc:	00400018 	subeq	r0, r0, r8, lsl r0
 801f0e0:	02097e08 	andeq	r7, r9, #8, 28	@ 0x80
 801f0e4:	a4184000 	ldrge	r4, [r8], #-0
 801f0e8:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801f0ec:	04087f40 	streq	r7, [r8], #-3904	@ 0xfffff0c0
 801f0f0:	40007804 	andmi	r7, r0, r4, lsl #16
 801f0f4:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801f0f8:	20400000 	subcs	r0, r0, r0
 801f0fc:	003d4040 	eorseq	r4, sp, r0, asr #32
 801f100:	107f4000 	rsbsne	r4, pc, r0
 801f104:	00004428 	andeq	r4, r0, r8, lsr #8
 801f108:	7f410040 	svcvc	0x00410040
 801f10c:	40000040 	andmi	r0, r0, r0, asr #32
 801f110:	0478047c 	ldrbteq	r0, [r8], #-1148	@ 0xfffffb84
 801f114:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801f118:	78040408 	stmdavc	r4, {r3, sl}
 801f11c:	44384000 	ldrtmi	r4, [r8], #-0
 801f120:	00384444 	eorseq	r4, r8, r4, asr #8
 801f124:	2418fc40 	ldrcs	pc, [r8], #-3136	@ 0xfffff3c0
 801f128:	40001824 	andmi	r1, r0, r4, lsr #16
 801f12c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801f130:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801f134:	08040408 	stmdaeq	r4, {r3, sl}
 801f138:	54484000 	strbpl	r4, [r8], #-0
 801f13c:	00245454 	eoreq	r5, r4, r4, asr r4
 801f140:	3f040440 	svccc	0x00040440
 801f144:	40002444 	andmi	r2, r0, r4, asr #8
 801f148:	2040403c 	subcs	r4, r0, ip, lsr r0
 801f14c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801f150:	1c204020 	stcne	0, cr4, [r0], #-128	@ 0xffffff80
 801f154:	403c4000 	eorsmi	r4, ip, r0
 801f158:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801f15c:	10284440 	eorne	r4, r8, r0, asr #8
 801f160:	40004428 	andmi	r4, r0, r8, lsr #8
 801f164:	9090904c 	addsls	r9, r0, ip, asr #32
 801f168:	4440007c 	strbmi	r0, [r0], #-124	@ 0xffffff84
 801f16c:	444c5464 	strbmi	r5, [ip], #-1124	@ 0xfffffb9c
 801f170:	08004000 	stmdaeq	r0, {lr}
 801f174:	00004136 	andeq	r4, r0, r6, lsr r1
 801f178:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801f17c:	40000000 	andmi	r0, r0, r0
 801f180:	08364100 	ldmdaeq	r6!, {r8, lr}
 801f184:	02400000 	subeq	r0, r0, #0
 801f188:	02040201 	andeq	r0, r4, #268435456	@ 0x10000000
 801f18c:	263c4000 	ldrtcs	r4, [ip], -r0
 801f190:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801f194 <days_of_month>:
 801f194:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f198:	0000001c 	andeq	r0, r0, ip, lsl r0
 801f19c:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f1a0:	0000001e 	andeq	r0, r0, lr, lsl r0
 801f1a4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f1a8:	0000001e 	andeq	r0, r0, lr, lsl r0
 801f1ac:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f1b0:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f1b4:	0000001e 	andeq	r0, r0, lr, lsl r0
 801f1b8:	0000001f 	andeq	r0, r0, pc, lsl r0
 801f1bc:	0000001e 	andeq	r0, r0, lr, lsl r0
 801f1c0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .init_array:

0801f1c4 <__init_array_start>:
 801f1c4:	0800e5e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, sp, lr, pc}

Disassembly of section .tcmsram:

10008000 <net::s_dhcp_message>:
	...

10008224 <net::s_id>:
10008224:	00000000 	andeq	r0, r0, r0

10008228 <net::s_groups>:
	...

10008348 <net::s_multicast_mac>:
	...

10008350 <net::s_leave>:
	...

10008380 <net::s_report>:
	...

100083b0 <net::s_tcp>:
	...

1000899c <net::s_id>:
1000899c:	00000000 	andeq	r0, r0, r0

100089a0 <net::s_Port>:
	...

100096a8 <net::s_multicast_mac>:
	...

100096b0 <net::s_id>:
100096b0:	00000000 	andeq	r0, r0, r0

100096b4 <net::s_send_packet>:
	...

10009ca0 <net::s_data>:
	...

1000cb00 <net::s_Port>:
	...

1000cb10 <net::s_ArpRecords>:
	...

Disassembly of section .data:

20000000 <s_flash>:
20000000:	0801acfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, pc}
	...
20000010:	00000005 	andeq	r0, r0, r5

20000014 <SystemCoreClock>:
20000014:	0e4e1c00 	cdpeq	12, 4, cr1, cr14, cr0, {0}

20000018 <lfsr>:
20000018:	0000ace1 	andeq	sl, r0, r1, ror #25

2000001c <s_block_bucket>:
2000001c:	00000010 	andeq	r0, r0, r0, lsl r0
20000020:	00000000 	andeq	r0, r0, r0
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
20000028:	00000000 	andeq	r0, r0, r0
2000002c:	00000040 	andeq	r0, r0, r0, asr #32
20000030:	00000000 	andeq	r0, r0, r0
20000034:	00000060 	andeq	r0, r0, r0, rrx
20000038:	00000000 	andeq	r0, r0, r0
2000003c:	00000080 	andeq	r0, r0, r0, lsl #1
20000040:	00000000 	andeq	r0, r0, r0
20000044:	00000100 	andeq	r0, r0, r0, lsl #2
20000048:	00000000 	andeq	r0, r0, r0
2000004c:	00000140 	andeq	r0, r0, r0, asr #2
20000050:	00000000 	andeq	r0, r0, r0
20000054:	00000180 	andeq	r0, r0, r0, lsl #3
20000058:	00000000 	andeq	r0, r0, r0
2000005c:	00000200 	andeq	r0, r0, r0, lsl #4
20000060:	00000000 	andeq	r0, r0, r0
20000064:	00000300 	andeq	r0, r0, r0, lsl #6
20000068:	00000000 	andeq	r0, r0, r0
2000006c:	00000400 	andeq	r0, r0, r0, lsl #8
20000070:	00000000 	andeq	r0, r0, r0
20000074:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20000084 <next_block>:
20000084:	1000cc90 	mulne	r0, r0, ip

Disassembly of section .sram1:

2001c000 <s_TxBuffer>:
	...

Disassembly of section .bkpsram:

40024000 <ConfigStore::s_SpiFlashData>:
	...
